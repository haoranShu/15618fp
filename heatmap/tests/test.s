GAS LISTING /tmp/ccrWPnlb.s 			page 1


   1              		.file	"test.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
   5              		.align 2
   6              	.LCOLDB0:
   7              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
   8              	.LHOTB0:
   9              		.align 2
  10              		.p2align 4,,15
  11              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  12              	.Ltext_cold0:
  13              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  14              		.weak	_ZNKSt5ctypeIcE8do_widenEc
  15              		.type	_ZNKSt5ctypeIcE8do_widenEc, @function
  16              	_ZNKSt5ctypeIcE8do_widenEc:
  17              	.LFB1045:
  18              		.file 1 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Locale support -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** /** @file bits/locale_facets.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
GAS LISTING /tmp/ccrWPnlb.s 			page 2


  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cctype>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ctype_base.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <iosfwd>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <streambuf>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/type_traits.h>
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** {
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #endif
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // generic definition.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _Tp>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Explicit specializations for required types.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // partially-specialized.
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     struct __pad
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static void
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
GAS LISTING /tmp/ccrWPnlb.s 			page 3


  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // only with __gsize != 0.
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _CharT*
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This template permits specializing facet output code for
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _OutIter
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	*__s = __ws[__j];
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions.
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT char_type;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
GAS LISTING /tmp/ccrWPnlb.s 			page 4


 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
GAS LISTING /tmp/ccrWPnlb.s 			page 5


 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
GAS LISTING /tmp/ccrWPnlb.s 			page 6


 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__c); }
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
GAS LISTING /tmp/ccrWPnlb.s 			page 7


 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the input.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
GAS LISTING /tmp/ccrWPnlb.s 			page 8


 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccrWPnlb.s 			page 9


 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
GAS LISTING /tmp/ccrWPnlb.s 			page 10


 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  is returned instead.
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
GAS LISTING /tmp/ccrWPnlb.s 			page 11


 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  streams for many I/O operations.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT			char_type;
GAS LISTING /tmp/ccrWPnlb.s 			page 12


 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id			id;
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    protected:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const;
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
GAS LISTING /tmp/ccrWPnlb.s 			page 13


 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  optimizations as well.
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef char		char_type;
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Data Members:
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool			_M_del;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_toupper;
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_tolower;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*		_M_table;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 						// 2 memcpy can't be used
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char>
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id        id;
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *               Else classic_table() is used.
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
GAS LISTING /tmp/ccrWPnlb.s 			page 14


 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    size_t __refs = 0);
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char classification.
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline bool
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char __c) const;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the char array.
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  which is(m,char) is true.
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
GAS LISTING /tmp/ccrWPnlb.s 			page 15


 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
GAS LISTING /tmp/ccrWPnlb.s 			page 16


 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  For an underived ctype<char>
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok == 1)
GAS LISTING /tmp/ccrWPnlb.s 			page 17


 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_widen_ok)
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_widen_init();
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__lo, __hi, __to);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char using the simplest
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  For an underived ctype<char> facet, @a c
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  will be returned unchanged.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(c).
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() must always return the same result for the same input.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_narrow[static_cast<unsigned char>(__c)])
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_narrow[static_cast<unsigned char>(__c)];
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	const char __t = do_narrow(__c, __dfault);
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__t != __dfault)
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow[static_cast<unsigned char>(__c)] = __t;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return __t;
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char array
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char in the input that cannot be
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  For an underived ctype<char>
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(lo, hi,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  dfault, to).  do_narrow() must always return the same result for the
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
GAS LISTING /tmp/ccrWPnlb.s 			page 18


 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     char __dfault, char* __to) const
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__builtin_expect(_M_narrow_ok == 1, true))
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_narrow_ok)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow_init();
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_narrow(__lo, __hi, __dfault, __to);
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // DR 695. ctype<char>::classic_table() not accessible.
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the mask table provided to the constructor, or
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// the default from classic_table() if none was provided.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       table() const throw()
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return _M_table; }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the C locale mask table.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const mask*
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       classic_table() throw();
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Destructor.
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function deletes table() if @a del was true in the
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  constructor.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to uppercase if
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
GAS LISTING /tmp/ccrWPnlb.s 			page 19


1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other chars remain untouched.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to lowercase if
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other chars remain untouched.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char using the simplest
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
GAS LISTING /tmp/ccrWPnlb.s 			page 20


1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const
  19              		.loc 1 1075 0
  20              		.cfi_startproc
  21              	.LVL0:
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return __c; }
  22              		.loc 1 1076 0
  23 0000 89F0     		movl	%esi, %eax
  24 0002 C3       		ret
  25              		.cfi_endproc
  26              	.LFE1045:
  27              		.size	_ZNKSt5ctypeIcE8do_widenEc, .-_ZNKSt5ctypeIcE8do_widenEc
  28              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  29              	.LCOLDE0:
  30              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  31              	.LHOTE0:
  32              		.section	.text.unlikely,"ax",@progbits
  33              		.align 2
  34              	.LCOLDB2:
  35              		.text
  36              	.LHOTB2:
  37              		.align 2
  38              		.p2align 4,,15
  39              		.type	_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf, @function
  40              	_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf:
  41              	.LFB1521:
  42              		.file 2 "tests/test.cpp"
   0:tests/test.cpp **** /* heatmap - High performance heatmap creation in C.
   1:tests/test.cpp ****  *
   2:tests/test.cpp ****  * The MIT License (MIT)
   3:tests/test.cpp ****  *
   4:tests/test.cpp ****  * Copyright (c) 2013 Lucas Beyer
   5:tests/test.cpp ****  *
   6:tests/test.cpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:tests/test.cpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:tests/test.cpp ****  * the Software without restriction, including without limitation the rights to
   9:tests/test.cpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:tests/test.cpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:tests/test.cpp ****  * subject to the following conditions:
  12:tests/test.cpp ****  *
  13:tests/test.cpp ****  * The above copyright notice and this permission notice shall be included in all
  14:tests/test.cpp ****  * copies or substantial portions of the Software.
  15:tests/test.cpp ****  *
  16:tests/test.cpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:tests/test.cpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:tests/test.cpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:tests/test.cpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:tests/test.cpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:tests/test.cpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
GAS LISTING /tmp/ccrWPnlb.s 			page 21


  22:tests/test.cpp ****  */
  23:tests/test.cpp **** 
  24:tests/test.cpp **** #include <iostream>
  25:tests/test.cpp **** #include <string.h> // memcmp
  26:tests/test.cpp **** #include <cmath>
  27:tests/test.cpp **** 
  28:tests/test.cpp **** #include "heatmap.h"
  29:tests/test.cpp **** #include "colorschemes/gray.h"
  30:tests/test.cpp **** 
  31:tests/test.cpp **** static float g_3x3_stamp_data[] = {
  32:tests/test.cpp ****     0.0f, 0.5f, 0.0f,
  33:tests/test.cpp ****     0.5f, 1.0f, 0.5f,
  34:tests/test.cpp ****     0.0f, 0.5f, 0.0f
  35:tests/test.cpp **** };
  36:tests/test.cpp **** 
  37:tests/test.cpp **** static heatmap_stamp_t g_3x3_stamp = {
  38:tests/test.cpp ****     g_3x3_stamp_data, 3, 3
  39:tests/test.cpp **** };
  40:tests/test.cpp **** 
  41:tests/test.cpp **** // Ugly and uncool globals! EVIL!
  42:tests/test.cpp **** static unsigned g_failed_tests = 0;
  43:tests/test.cpp **** static unsigned g_total_tests = 0;
  44:tests/test.cpp **** 
  45:tests/test.cpp **** // Ugly but cool macro hackery.
  46:tests/test.cpp **** #define ENSURE_THAT(what, cond) ensure_that(what " (" #cond ")", cond, __FILE__, __LINE__)
  47:tests/test.cpp **** 
  48:tests/test.cpp **** static void ensure_that(const char* desc, bool condition, const char* file, int line)
  49:tests/test.cpp **** {
  50:tests/test.cpp ****     g_total_tests++;
  51:tests/test.cpp **** 
  52:tests/test.cpp ****     if(!condition) {
  53:tests/test.cpp ****         std::cerr << file << ":" << line << ": Test failed: it is not true that " << desc << std::e
  54:tests/test.cpp ****         g_failed_tests++;
  55:tests/test.cpp ****     }
  56:tests/test.cpp **** }
  57:tests/test.cpp **** 
  58:tests/test.cpp **** static bool almost_eq(float* a, float* b, size_t n)
  59:tests/test.cpp **** {
  60:tests/test.cpp ****     for(size_t i = 0 ; i < n ; ++i) {
  61:tests/test.cpp ****         if(std::abs(a[i] - b[i]) > 1e-6)
  62:tests/test.cpp ****             return false;
  63:tests/test.cpp ****     }
  64:tests/test.cpp **** 
  65:tests/test.cpp ****     return true;
  66:tests/test.cpp **** }
  67:tests/test.cpp **** 
  68:tests/test.cpp **** static bool heatmap_eq(heatmap_t* hm, float* expected)
  69:tests/test.cpp **** {
  70:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
  71:tests/test.cpp **** }
  72:tests/test.cpp **** 
  73:tests/test.cpp **** static bool heatmaps_eq(heatmap_t* hm, heatmap_t* expected)
  74:tests/test.cpp **** {
  75:tests/test.cpp ****     return hm->w == expected->w
  76:tests/test.cpp ****         && hm->h == expected->h
  77:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
  78:tests/test.cpp **** }
GAS LISTING /tmp/ccrWPnlb.s 			page 22


  79:tests/test.cpp **** 
  80:tests/test.cpp **** static bool stamp_eq(heatmap_stamp_t* s, float* expected)
  81:tests/test.cpp **** {
  82:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
  83:tests/test.cpp **** }
  84:tests/test.cpp **** 
  85:tests/test.cpp **** static bool stamp_almost_eq(heatmap_stamp_t* s, float* expected)
  86:tests/test.cpp **** {
  87:tests/test.cpp ****     return almost_eq(s->buf, expected, s->w*s->h);
  88:tests/test.cpp **** }
  89:tests/test.cpp **** 
  90:tests/test.cpp **** void test_add_nothing()
  91:tests/test.cpp **** {
  92:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
  93:tests/test.cpp **** 
  94:tests/test.cpp ****     static float expected[] = {
  95:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
  96:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
  97:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
  98:tests/test.cpp ****     };
  99:tests/test.cpp **** 
 100:tests/test.cpp **** 
 101:tests/test.cpp ****     ENSURE_THAT("the heatmap is full of zeros", heatmap_eq(hm, expected));
 102:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 103:tests/test.cpp **** 
 104:tests/test.cpp ****     heatmap_free(hm);
 105:tests/test.cpp **** }
 106:tests/test.cpp **** 
 107:tests/test.cpp **** void test_add_point_with_stamp_center()
 108:tests/test.cpp **** {
 109:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 110:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 111:tests/test.cpp **** 
 112:tests/test.cpp ****     ENSURE_THAT("the heatmap equals the stamp", heatmap_eq(hm, g_3x3_stamp.buf));
 113:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 114:tests/test.cpp **** 
 115:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 116:tests/test.cpp **** 
 117:tests/test.cpp ****     static float expected[] = {
 118:tests/test.cpp ****         0.0f, 1.0f, 0.0f,
 119:tests/test.cpp ****         1.0f, 2.0f, 1.0f,
 120:tests/test.cpp ****         0.0f, 1.0f, 0.0f,
 121:tests/test.cpp ****     };
 122:tests/test.cpp **** 
 123:tests/test.cpp ****     ENSURE_THAT("the heatmap equals double the stamp", heatmap_eq(hm, expected));
 124:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is two", hm->max == 2.0f);
 125:tests/test.cpp **** 
 126:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 127:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 1, 1, 2.0f, &g_3x3_stamp);
 128:tests/test.cpp **** 
 129:tests/test.cpp ****     ENSURE_THAT("a point with weight 2.0 generates the same heatmap.", heatmaps_eq(hm2, hm));
 130:tests/test.cpp **** 
 131:tests/test.cpp ****     heatmap_free(hm);
 132:tests/test.cpp ****     heatmap_free(hm2);
 133:tests/test.cpp **** }
 134:tests/test.cpp **** 
 135:tests/test.cpp **** void test_add_point_with_stamp_topleft()
GAS LISTING /tmp/ccrWPnlb.s 			page 23


 136:tests/test.cpp **** {
 137:tests/test.cpp ****     static float expected[] = {
 138:tests/test.cpp ****         1.0f, 0.5f, 0.0f,
 139:tests/test.cpp ****         0.5f, 0.0f, 0.0f,
 140:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 141:tests/test.cpp ****     };
 142:tests/test.cpp **** 
 143:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 144:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 145:tests/test.cpp **** 
 146:tests/test.cpp ****     ENSURE_THAT("top-left point is correct", heatmap_eq(hm, expected));
 147:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 148:tests/test.cpp **** 
 149:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 150:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 151:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 152:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 0, 0, 3.0f, &g_3x3_stamp);
 153:tests/test.cpp **** 
 154:tests/test.cpp ****     ENSURE_THAT("a point with weight 3.0 generates the same heatmap as three regular ones.", heatma
 155:tests/test.cpp **** 
 156:tests/test.cpp ****     heatmap_free(hm);
 157:tests/test.cpp ****     heatmap_free(hm2);
 158:tests/test.cpp **** }
 159:tests/test.cpp **** 
 160:tests/test.cpp **** void test_add_point_with_stamp_botright()
 161:tests/test.cpp **** {
 162:tests/test.cpp ****     static float expected[] = {
 163:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 164:tests/test.cpp ****         0.0f, 0.0f, 0.5f,
 165:tests/test.cpp ****         0.0f, 0.5f, 1.0f,
 166:tests/test.cpp ****     };
 167:tests/test.cpp **** 
 168:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 169:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 170:tests/test.cpp **** 
 171:tests/test.cpp ****     ENSURE_THAT("bot-right point is correct", heatmap_eq(hm, expected));
 172:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 173:tests/test.cpp **** 
 174:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 175:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 176:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 2, 2, 2.0f, &g_3x3_stamp);
 177:tests/test.cpp **** 
 178:tests/test.cpp ****     ENSURE_THAT("a point with weight 2.0 generates the same heatmap as two regular ones.", heatmaps
 179:tests/test.cpp **** 
 180:tests/test.cpp ****     heatmap_free(hm);
 181:tests/test.cpp ****     heatmap_free(hm2);
 182:tests/test.cpp **** }
 183:tests/test.cpp **** 
 184:tests/test.cpp **** void test_add_point_with_stamp_outside()
 185:tests/test.cpp **** {
 186:tests/test.cpp ****     static float expected[] = {
 187:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 188:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 189:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 190:tests/test.cpp ****     };
 191:tests/test.cpp **** 
 192:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
GAS LISTING /tmp/ccrWPnlb.s 			page 24


 193:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 3, 2, &g_3x3_stamp);
 194:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 3, &g_3x3_stamp);
 195:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 3, 3, &g_3x3_stamp);
 196:tests/test.cpp **** 
 197:tests/test.cpp ****     ENSURE_THAT("no point outside the map got added", heatmap_eq(hm, expected));
 198:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 199:tests/test.cpp **** 
 200:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 3, 2, 1.5f, &g_3x3_stamp);
 201:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 2, 3, 1.5f, &g_3x3_stamp);
 202:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 3, 3, 1.5f, &g_3x3_stamp);
 203:tests/test.cpp **** 
 204:tests/test.cpp ****     ENSURE_THAT("no weighted point outside the map got added", heatmap_eq(hm, expected));
 205:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 206:tests/test.cpp **** 
 207:tests/test.cpp ****     heatmap_free(hm);
 208:tests/test.cpp **** }
 209:tests/test.cpp **** 
 210:tests/test.cpp **** void test_stamp_gen()
 211:tests/test.cpp **** {
 212:tests/test.cpp ****     static float expected[] = {
 213:tests/test.cpp ****         0.2928932f, 0.5f, 0.2928932f,
 214:tests/test.cpp ****               0.5f, 1.0f, 0.5f,
 215:tests/test.cpp ****         0.2928932f, 0.5f, 0.2928932f,
 216:tests/test.cpp ****     };
 217:tests/test.cpp **** 
 218:tests/test.cpp ****     heatmap_stamp_t* s = heatmap_stamp_gen(1);
 219:tests/test.cpp **** 
 220:tests/test.cpp ****     ENSURE_THAT("the 1-radius stamp size is correct", s->w == 3 && s->h == 3);
 221:tests/test.cpp ****     ENSURE_THAT("the 1-radius stamp data is correct", stamp_almost_eq(s, expected));
 222:tests/test.cpp **** 
 223:tests/test.cpp ****     heatmap_stamp_free(s);
 224:tests/test.cpp **** }
 225:tests/test.cpp **** 
 226:tests/test.cpp **** void test_stamp_gen_nonlinear()
 227:tests/test.cpp **** {
 228:tests/test.cpp ****     static float ones[] = {
 229:tests/test.cpp ****         1.0f, 1.0f, 1.0f,
 230:tests/test.cpp ****         1.0f, 1.0f, 1.0f,
 231:tests/test.cpp ****         1.0f, 1.0f, 1.0f,
 232:tests/test.cpp ****     };
 233:tests/test.cpp **** 
 234:tests/test.cpp ****     static float halfs[] = {
 235:tests/test.cpp ****         0.5f, 0.5f, 0.5f,
 236:tests/test.cpp ****         0.5f, 0.5f, 0.5f,
 237:tests/test.cpp ****         0.5f, 0.5f, 0.5f,
 238:tests/test.cpp ****     };
 239:tests/test.cpp **** 
 240:tests/test.cpp ****     static float zeros[] = {
 241:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 242:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 243:tests/test.cpp ****         0.0f, 0.0f, 0.0f,
 244:tests/test.cpp ****     };
 245:tests/test.cpp **** 
 246:tests/test.cpp ****     heatmap_stamp_t* s1 = heatmap_stamp_gen_nonlinear(1, [](float){return 0.5f;});
  43              		.loc 2 247 0
  44              		.cfi_startproc
  45              	.LVL1:
GAS LISTING /tmp/ccrWPnlb.s 			page 25


  46              		.loc 2 247 0
  47 0000 F30F1005 		movss	.LC1(%rip), %xmm0
  47      00000000 
  48 0008 C3       		ret
  49              		.cfi_endproc
  50              	.LFE1521:
  51              		.size	_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf, .-_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf
  52              		.section	.text.unlikely
  53              	.LCOLDE2:
  54              		.text
  55              	.LHOTE2:
  56              		.section	.text.unlikely
  57              		.align 2
  58              	.LCOLDB4:
  59              		.text
  60              	.LHOTB4:
  61 0009 90       		.align 2
  62 000a 660F1F44 		.p2align 4,,15
  62      0000
  63              		.type	_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUNEf, @function
  64              	_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUNEf:
  65              	.LFB1524:
 247:tests/test.cpp ****     heatmap_stamp_t* s2 = heatmap_stamp_gen_nonlinear(1, [](float){return -1.0f;});
  66              		.loc 2 248 0
  67              		.cfi_startproc
  68              	.LVL2:
  69              		.loc 2 248 0
  70 0010 F30F1005 		movss	.LC3(%rip), %xmm0
  70      00000000 
  71 0018 C3       		ret
  72              		.cfi_endproc
  73              	.LFE1524:
  74              		.size	_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUNEf, .-_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUN
  75              		.section	.text.unlikely
  76              	.LCOLDE4:
  77              		.text
  78              	.LHOTE4:
  79              		.section	.text.unlikely
  80              		.align 2
  81              	.LCOLDB6:
  82              		.text
  83              	.LHOTB6:
  84 0019 90       		.align 2
  85 001a 660F1F44 		.p2align 4,,15
  85      0000
  86              		.type	_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUNEf, @function
  87              	_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUNEf:
  88              	.LFB1527:
 248:tests/test.cpp ****     heatmap_stamp_t* s3 = heatmap_stamp_gen_nonlinear(1, [](float){return 10.0f;});
  89              		.loc 2 249 0
  90              		.cfi_startproc
  91              	.LVL3:
  92              		.loc 2 249 0
  93 0020 F30F1005 		movss	.LC5(%rip), %xmm0
  93      00000000 
  94 0028 C3       		ret
  95              		.cfi_endproc
GAS LISTING /tmp/ccrWPnlb.s 			page 26


  96              	.LFE1527:
  97              		.size	_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUNEf, .-_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUN
  98              		.section	.text.unlikely
  99              	.LCOLDE6:
 100              		.text
 101              	.LHOTE6:
 102              		.section	.rodata.str1.1,"aMS",@progbits,1
 103              	.LC7:
 104 0000 74657374 		.string	"tests/test.cpp"
 104      732F7465 
 104      73742E63 
 104      707000
 105              	.LC8:
 106 000f 3A00     		.string	":"
 107              		.section	.rodata.str1.8,"aMS",@progbits,1
 108              		.align 8
 109              	.LC9:
 110 0000 3A205465 		.string	": Test failed: it is not true that "
 110      73742066 
 110      61696C65 
 110      643A2069 
 110      74206973 
 111              		.section	.text.unlikely
 112              	.LCOLDB10:
 113              		.text
 114              	.LHOTB10:
 115 0029 0F1F8000 		.p2align 4,,15
 115      000000
 116              		.type	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12, @function
 117              	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12:
 118              	.LFB1706:
  49:tests/test.cpp **** static void ensure_that(const char* desc, bool condition, const char* file, int line)
 119              		.loc 2 49 0
 120              		.cfi_startproc
 121              	.LVL4:
 122 0030 4154     		pushq	%r12
 123              		.cfi_def_cfa_offset 16
 124              		.cfi_offset 12, -16
 125 0032 55       		pushq	%rbp
 126              		.cfi_def_cfa_offset 24
 127              		.cfi_offset 6, -24
 128 0033 4189F4   		movl	%esi, %r12d
 129 0036 53       		pushq	%rbx
 130              		.cfi_def_cfa_offset 32
 131              		.cfi_offset 3, -32
 132              	.LBB275:
 133              	.LBB276:
 134              		.file 3 "/opt/gcc/4.9.2/include/c++/4.9.2/ostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Output streams -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // any later version.
GAS LISTING /tmp/ccrWPnlb.s 			page 27


   9:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** /** @file include/ostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifndef _GLIBCXX_OSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #define _GLIBCXX_OSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <ios>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <bits/ostream_insert.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** {
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Template class basic_ostream.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @ingroup io
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _CharT  Type of character stream.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *                   char_traits<_CharT>.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This is the base class for all output streams.  It provides text
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  formatting of all builtin types, and communicates with any class
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  derived from basic_streambuf to do the actual output.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Types (inherited from basic_ios):
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _CharT			 		char_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::int_type 		int_type;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::off_type 		off_type;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _Traits			 		traits_type;
GAS LISTING /tmp/ccrWPnlb.s 			page 28


  66:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Non-standard Types:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       							__num_put_type;
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base constructor.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This ctor is almost never called by the user directly, rather from
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  their own stream buffer.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream(__streambuf_type* __sb)
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(__sb); }
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base destructor.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This does very little apart from providing a virtual base dtor.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       virtual
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~basic_ostream() { }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /// Safe prefix/suffix operations.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       class sentry;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       friend class sentry;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Interface for manipulators.
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  information, see the iomanip header.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 110:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 111:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 117:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 118:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 120:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 121:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 122:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
GAS LISTING /tmp/ccrWPnlb.s 			page 29


 123:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 126:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 127:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 128:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 130:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 137:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Inserters
 139:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 140:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 141:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 142:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This can have several effects, concluding with the setting of a
 144:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  status flag; see the sentry documentation for more.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 146:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 147:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 149:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 150:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state without causing an
 151:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 152:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  be rethrown.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 154:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 156:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 157:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief Integer arithmetic inserters
 158:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n A variable of builtin integral type.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 160:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 161:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 162:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 163:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 164:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 165:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long __n)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 167:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 168:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 169:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long __n)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 173:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(bool __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(short __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
GAS LISTING /tmp/ccrWPnlb.s 			page 30


 180:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned short __n)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 183:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 185:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 188:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(int __n);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 191:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned int __n)
 192:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 193:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 194:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 195:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 199:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 200:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long long __n)
 201:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 204:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long long __n)
 205:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 207:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 208:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 209:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 210:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 211:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Floating point arithmetic inserters
 212:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __f A variable of builtin floating point type.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 214:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 215:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 216:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 218:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 219:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(double __f)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 223:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(float __f)
 224:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 225:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 227:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<double>(__f));
 228:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 229:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 231:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long double __f)
 232:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 233:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 234:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 236:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Pointer arithmetic inserters
GAS LISTING /tmp/ccrWPnlb.s 			page 31


 237:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __p A variable of pointer type.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 239:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 240:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 241:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 242:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 243:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 244:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(const void* __p)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__p); }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Extracting from another streambuf.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __sb  A pointer to a streambuf
 250:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 251:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 252:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  in that it also constructs a sentry object and has the same error
 253:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  handling behavior.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 256:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 257:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 258:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  until one of the following occurs:
 259:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - the input stream reaches end-of-file,
 261:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - insertion into the output sequence fails (in this case, the
 262:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    character that would have been inserted is not extracted), or
 263:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 264:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    sets failbit in the error state
 265:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the function inserts no characters, failbit is set.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 268:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 269:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__streambuf_type* __sb);
 270:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 271:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 273:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 274:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Unformatted Output Functions
 275:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the unformatted output functions have some common behavior.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Each starts by constructing a temporary object of type
 278:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 279:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  with the setting of a status flag; see the sentry documentation
 280:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  for more.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 282:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 283:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 285:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 286:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 287:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 288:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  without completing its actions.
 289:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 290:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Simple insertion.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __c  The character to insert.
GAS LISTING /tmp/ccrWPnlb.s 			page 32


 294:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 295:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 296:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Tries to insert @p __c.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 299:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 302:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       put(char_type __c);
 303:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 304:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 305:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Core write functionality, without sentry.
 306:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
 307:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 308:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 309:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       void
 310:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       _M_write(const char_type* __s, streamsize __n)
 311:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 312:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 313:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (__put != __n)
 314:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  this->setstate(ios_base::badbit);
 315:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Character string insertion.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 322:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 323:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 324:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  one of the following happens:
 325:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 326:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - @p __n characters are inserted
 327:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 328:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    will be set in the stream's error state)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 330:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 331:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 333:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 334:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       write(const char_type* __s, streamsize __n);
 335:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 336:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 338:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Synchronizing the stream buffer.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 340:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 341:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 343:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 344:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  sets badbit.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 346:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 347:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       flush();
 348:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 350:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Getting the current write position.
GAS LISTING /tmp/ccrWPnlb.s 			page 33


 351:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  A file position object.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 353:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 354:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 355:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 356:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       pos_type
 357:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       tellp();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 360:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __pos  A file position object.
 362:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 363:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 364:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 365:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  that function fails, sets failbit.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 367:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 368:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(pos_type);
 369:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 370:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 371:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 372:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __off  A file offset object.
 373:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __dir  The direction in which to seek.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 375:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 376:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 377:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If that function fails, sets failbit.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 379:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        __ostream_type&
 380:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(off_type, ios_base::seekdir);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 382:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     protected:
 383:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream()
 384:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(0); }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       template<typename _ValueT>
 387:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_type&
 388:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	_M_insert(_ValueT __v);
 389:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 390:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 391:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Performs setup work for output streams.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 394:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Objects of this class are created before all of the standard
 395:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 396:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  suffix operations</em>.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 398:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <typename _CharT, typename _Traits>
 399:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 400:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 401:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Data Members.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       bool 				_M_ok;
 403:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 404:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
 406:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 407:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  The constructor performs preparatory work.
GAS LISTING /tmp/ccrWPnlb.s 			page 34


 408:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __os  The output stream to guard.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 410:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 411:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 412:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  is called to synchronize the output sequences.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is still good, then the sentry state becomes
 415:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  true (@a okay).
 416:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 417:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 418:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 419:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 420:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 421:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Possibly flushes the stream.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 423:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 424:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 425:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c flush() on the output stream.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 427:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~sentry()
 428:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 429:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// XXX MT
 430:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 431:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  {
 432:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 434:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	      _M_os.setstate(ios_base::badbit);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  }
 436:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 437:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 438:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 439:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Quick status checking.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  The sentry state.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 443:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  return value is that of the sentry state (true == okay).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #if __cplusplus >= 201103L
 446:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 447:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 448:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator bool() const
 449:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_ok; }
 450:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 451:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 452:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 453:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 454:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Character inserters
 455:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __c  A character.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 458:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 459:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 460:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 461:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts a single character and any required
 462:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 463:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  called.
 464:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
GAS LISTING /tmp/ccrWPnlb.s 			page 35


 465:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 466:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @c char, the character is widened before insertion.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 469:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 470:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 471:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 472:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 473:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 474:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 475:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << __out.widen(__c)); }
 477:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 478:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Specialization
 479:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <class _Traits>
 480:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 481:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 482:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 483:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 484:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 485:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 486:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 487:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 491:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 492:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 493:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 494:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 495:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 497:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  String inserters
 499:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __s  A character string.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 502:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 503:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 504:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 505:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 506:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 507:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 508:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 511:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 512:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 514:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 516:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 517:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 518:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 519:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccrWPnlb.s 			page 36


 522:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     basic_ostream<_CharT, _Traits> &
 524:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 525:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 526:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Partial specializations
 527:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 529:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 530:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 531:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 532:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 533:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 534:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 135              		.loc 3 535 0
 136 0037 488B1D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rbx
 136      000000
 137 003e 488D3500 		leaq	.LC7(%rip), %rsi
 137      000000
 138              	.LVL5:
 139              	.LBE276:
 140              	.LBE275:
  49:tests/test.cpp **** static void ensure_that(const char* desc, bool condition, const char* file, int line)
 141              		.loc 2 49 0
 142 0045 4889FD   		movq	%rdi, %rbp
 143              	.LBB278:
 144              	.LBB277:
 145              		.loc 3 535 0
 146 0048 BA0E0000 		movl	$14, %edx
 146      00
 147 004d 4889DF   		movq	%rbx, %rdi
 148              	.LVL6:
 149 0050 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 149      00
 150              	.LVL7:
 151              	.LBE277:
 152              	.LBE278:
 153              	.LBB279:
 154              	.LBB280:
 155 0055 488D3500 		leaq	.LC8(%rip), %rsi
 155      000000
 156 005c BA010000 		movl	$1, %edx
 156      00
 157 0061 4889DF   		movq	%rbx, %rdi
 158 0064 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 158      00
 159              	.LVL8:
 160              	.LBE280:
 161              	.LBE279:
  54:tests/test.cpp ****         std::cerr << file << ":" << line << ": Test failed: it is not true that " << desc << std::e
 162              		.loc 2 54 0
 163 0069 4889DF   		movq	%rbx, %rdi
 164 006c 4489E6   		movl	%r12d, %esi
 165 006f E8000000 		call	_ZNSolsEi@PLT
 165      00
 166              	.LVL9:
 167              	.LBB281:
 168              	.LBB282:
GAS LISTING /tmp/ccrWPnlb.s 			page 37


 169              		.loc 3 535 0
 170 0074 488D3500 		leaq	.LC9(%rip), %rsi
 170      000000
 171 007b BA230000 		movl	$35, %edx
 171      00
 172 0080 4889C7   		movq	%rax, %rdi
 173              	.LBE282:
 174              	.LBE281:
  54:tests/test.cpp ****         std::cerr << file << ":" << line << ": Test failed: it is not true that " << desc << std::e
 175              		.loc 2 54 0
 176 0083 4889C3   		movq	%rax, %rbx
 177              	.LVL10:
 178              	.LBB284:
 179              	.LBB283:
 180              		.loc 3 535 0
 181 0086 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 181      00
 182              	.LVL11:
 183              	.LBE283:
 184              	.LBE284:
 185              	.LBB285:
 186              	.LBB286:
 532:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 187              		.loc 3 532 0
 188 008b 4885ED   		testq	%rbp, %rbp
 189 008e 0F847C00 		je	.L14
 189      0000
 190              	.LVL12:
 191              	.LBB287:
 192              	.LBB288:
 193              		.file 4 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** /** @file bits/char_traits.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
GAS LISTING /tmp/ccrWPnlb.s 			page 38


  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** {
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   /**
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     struct _Char_types
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef unsigned long   int_type;
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef std::streampos  pos_type;
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef std::streamoff  off_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     };
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   /**
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt05ch13s03.html
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    */
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     struct char_traits
GAS LISTING /tmp/ccrWPnlb.s 			page 39


  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef _CharT                                    char_type;
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static void
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { __c1 = __c2; }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __c1 == __c2; }
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __c1 < __c2; }
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static int
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static std::size_t
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       length(const char_type* __s);
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static const char_type*
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static char_type*
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static char_type*
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static char_type*
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       to_char_type(const int_type& __c)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       to_int_type(const char_type& __c)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __c1 == __c2; }
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       eof()
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       not_eof(const int_type& __c)
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     };
GAS LISTING /tmp/ccrWPnlb.s 			page 40


 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     int
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	  return -1;
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	  return 1;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return 0;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     std::size_t
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     length(const char_type* __p)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       std::size_t __i = 0;
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****         ++__i;
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return __i;
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     const typename char_traits<_CharT>::char_type*
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****         if (eq(__s[__i], __a))
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****           return __s + __i;
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return 0;
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return __s1;
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<typename _CharT>
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
GAS LISTING /tmp/ccrWPnlb.s 			page 41


 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     char_traits<_CharT>::
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       return __s;
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     }
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** } // namespace
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** {
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   // 21.1
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   /**
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  See http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt05ch13s03.html
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   */
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<class _CharT>
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     { };
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****   template<>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     struct char_traits<char>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****     {
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef char              char_type;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef int               int_type;
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef streampos         pos_type;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef streamoff         off_type;
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       typedef mbstate_t         state_type;
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static void
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { __c1 = __c2; }
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __c1 == __c2; }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       {
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	// LWG 467.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
GAS LISTING /tmp/ccrWPnlb.s 			page 42


 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static int
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __builtin_memcmp(__s1, __s2, __n); }
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h **** 
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       static size_t
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       length(const char_type* __s)
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h ****       { return __builtin_strlen(__s); }
 194              		.loc 4 263 0
 195 0094 4889EF   		movq	%rbp, %rdi
 196 0097 E8000000 		call	strlen@PLT
 196      00
 197              	.LVL13:
 198              	.LBE288:
 199              	.LBE287:
 200              		.loc 3 535 0
 201 009c 4889EE   		movq	%rbp, %rsi
 202 009f 4889C2   		movq	%rax, %rdx
 203 00a2 4889DF   		movq	%rbx, %rdi
 204 00a5 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 204      00
 205              	.LVL14:
 206              	.L7:
 207              	.LBE286:
 208              	.LBE285:
 209              	.LBB296:
 210              	.LBB297:
 211              	.LBB298:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 536:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
 537:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 538:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 540:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 542:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 546:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits> &
 547:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 548:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 549:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 550:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 551:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Standard basic_ostream manipulators
 552:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 553:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 554:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a newline and flush the stream.
 555:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 556:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 557:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  desired, leading to poor buffering performance.  See
 558:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html
 559:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  for more on this subject.
 560:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 561:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 562:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
GAS LISTING /tmp/ccrWPnlb.s 			page 43


 563:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 212              		.loc 3 565 0
 213 00aa 488B03   		movq	(%rbx), %rax
 214              	.LBB299:
 215              	.LBB300:
 216              		.file 5 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** /** @file bits/basic_ios.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #pragma GCC system_header
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/localefwd.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_classes.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_facets.h>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _Facet>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     inline const _Facet&
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       return *__f;
GAS LISTING /tmp/ccrWPnlb.s 			page 44


  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     }
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   /**
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  stream classes. 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @ingroup io
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     class basic_ios : public ios_base
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are non-standard types.
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_put_type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_get_type;
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Data members:
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     protected:
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For ostream.
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For istream.
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
GAS LISTING /tmp/ccrWPnlb.s 			page 45


 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This allows you to write constructs such as
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator void*() const
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator!() const
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail(); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdstate() const
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf_state; }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will not need to pass an argument.
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       setstate(iostate __state)
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then re
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // throws the propagated exception if bit also set in
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // exceptions().
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       _M_setstate(iostate __state)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  __throw_exception_again;
GAS LISTING /tmp/ccrWPnlb.s 			page 46


 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A wrapper around rdstate.
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       good() const
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       eof() const
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fail() const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bad() const
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions() const
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_exception; }
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
GAS LISTING /tmp/ccrWPnlb.s 			page 47


 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <iostream>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <fstream>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <exception>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  int main()
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  {
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions(iostate __except)
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_exception = __except;
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Constructor/destructor:
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->init(__sb); }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Empty.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       virtual
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       ~basic_ios() { }
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Members:
GAS LISTING /tmp/ccrWPnlb.s 			page 48


 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           not tied.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie() const
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_tie; }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           was not tied.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_tie = __tiestr;
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         return __old;
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current stream buffer.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This does not change the state of the stream.
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf() const
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf; }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  error state.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  derived class.  For example:
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
GAS LISTING /tmp/ccrWPnlb.s 			page 49


 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  Reference to this object.
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios&
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current fill character.
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill() const
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (!_M_fill_init)
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  {
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill_init = true;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  }
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return _M_fill;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __ch  The new character.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous fill character.
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill(char_type __ch)
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	char_type __old = this->fill();
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_fill = __ch;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return __old;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Locales:
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
GAS LISTING /tmp/ccrWPnlb.s 			page 50


 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous locale.
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       locale
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       imbue(const locale& __loc);
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The narrowed character.
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  if possible.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Widens characters.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The widened character.
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       widen(char __c) const
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 217              		.loc 5 444 0
 218 00ad 488B40E8 		movq	-24(%rax), %rax
 219 00b1 488BAC03 		movq	240(%rbx,%rax), %rbp
 219      F0000000 
 220              	.LVL15:
GAS LISTING /tmp/ccrWPnlb.s 			page 51


 221              	.LBB301:
 222              	.LBB302:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 223              		.loc 5 48 0
 224 00b9 4885ED   		testq	%rbp, %rbp
 225 00bc 7469     		je	.L15
 226              	.LVL16:
 227              	.LBE302:
 228              	.LBE301:
 229              	.LBB304:
 230              	.LBB305:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 231              		.loc 1 867 0
 232 00be 807D3800 		cmpb	$0, 56(%rbp)
 233 00c2 7424     		je	.L9
 234 00c4 0FBE7543 		movsbl	67(%rbp), %esi
 235              	.LVL17:
 236              	.L10:
 237              	.LBE305:
 238              	.LBE304:
 239              	.LBE300:
 240              	.LBE299:
 241              		.loc 3 565 0
 242 00c8 4889DF   		movq	%rbx, %rdi
 243 00cb E8000000 		call	_ZNSo3putEc@PLT
 243      00
 244              	.LVL18:
 245              	.LBB313:
 246              	.LBB314:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 566:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 567:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a null character into the output sequence.
 568:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 569:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 570:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 571:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  string terminator.
 572:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 573:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 574:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 575:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 576:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.put(_CharT()); }
 577:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 578:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 579:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Flushes the output stream.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 581:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 582:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 583:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 584:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 585:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 586:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.flush(); }
 247              		.loc 3 587 0
 248 00d0 4889C7   		movq	%rax, %rdi
 249 00d3 E8000000 		call	_ZNSo5flushEv@PLT
 249      00
 250              	.LVL19:
 251              	.LBE314:
GAS LISTING /tmp/ccrWPnlb.s 			page 52


 252              	.LBE313:
 253              	.LBE298:
 254              	.LBE297:
 255              	.LBE296:
  57:tests/test.cpp **** }
 256              		.loc 2 57 0
 257 00d8 5B       		popq	%rbx
 258              		.cfi_remember_state
 259              		.cfi_def_cfa_offset 24
 260              	.LVL20:
  55:tests/test.cpp ****         g_failed_tests++;
 261              		.loc 2 55 0
 262 00d9 83050000 		addl	$1, _ZL14g_failed_tests(%rip)
 262      000001
  57:tests/test.cpp **** }
 263              		.loc 2 57 0
 264 00e0 5D       		popq	%rbp
 265              		.cfi_def_cfa_offset 16
 266              	.LVL21:
 267 00e1 415C     		popq	%r12
 268              		.cfi_def_cfa_offset 8
 269              	.LVL22:
 270 00e3 C3       		ret
 271              	.LVL23:
 272              		.p2align 4,,10
 273 00e4 0F1F4000 		.p2align 3
 274              	.L9:
 275              		.cfi_restore_state
 276              	.LBB321:
 277              	.LBB319:
 278              	.LBB317:
 279              	.LBB315:
 280              	.LBB311:
 281              	.LBB309:
 282              	.LBB308:
 283              	.LBB306:
 284              	.LBB307:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 285              		.loc 1 869 0
 286 00e8 4889EF   		movq	%rbp, %rdi
 287 00eb E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 287      00
 288              	.LVL24:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 289              		.loc 1 870 0
 290 00f0 488B4500 		movq	0(%rbp), %rax
 291 00f4 BE0A0000 		movl	$10, %esi
 291      00
 292 00f9 488B4030 		movq	48(%rax), %rax
 293 00fd 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 293      000000
 294 0104 74C2     		je	.L10
 295 0106 4889EF   		movq	%rbp, %rdi
 296 0109 FFD0     		call	*%rax
 297              	.LVL25:
 298 010b 0FBEF0   		movsbl	%al, %esi
 299 010e EBB8     		jmp	.L10
GAS LISTING /tmp/ccrWPnlb.s 			page 53


 300              	.LVL26:
 301              		.p2align 4,,10
 302              		.p2align 3
 303              	.L14:
 304              	.LBE307:
 305              	.LBE306:
 306              	.LBE308:
 307              	.LBE309:
 308              	.LBE311:
 309              	.LBE315:
 310              	.LBE317:
 311              	.LBE319:
 312              	.LBE321:
 313              	.LBB322:
 314              	.LBB295:
 315              	.LBB289:
 316              	.LBB290:
 533:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 317              		.loc 3 533 0
 318 0110 488B03   		movq	(%rbx), %rax
 319 0113 4889DF   		movq	%rbx, %rdi
 320 0116 480378E8 		addq	-24(%rax), %rdi
 321              	.LVL27:
 322              	.LBB291:
 323              	.LBB292:
 324              	.LBB293:
 325              	.LBB294:
 326              		.file 6 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** /** @file bits/ios_base.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
GAS LISTING /tmp/ccrWPnlb.s 			page 54


  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #ifndef _IOS_BASE_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #define _IOS_BASE_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/localefwd.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/locale_classes.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** {
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // expressions involving them are no longer compile-time constants.
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   enum _Ios_Fmtflags 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     { 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_left 		= 1L << 5,
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_right 		= 1L << 7,
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     };
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
GAS LISTING /tmp/ccrWPnlb.s 			page 55


  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator~(_Ios_Fmtflags __a)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(~static_cast<int>(__a)); }
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a | __b; }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a & __b; }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a ^ __b; }
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   enum _Ios_Openmode 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     { 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_app 		= 1L << 0,
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ate 		= 1L << 1,
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_bin 		= 1L << 2,
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_in 		= 1L << 3,
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_out 		= 1L << 4,
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_trunc 		= 1L << 5,
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ios_openmode_end = 1L << 16 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     };
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&(_Ios_Openmode __a, _Ios_Openmode __b)
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|(_Ios_Openmode __a, _Ios_Openmode __b)
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator^(_Ios_Openmode __a, _Ios_Openmode __b)
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator~(_Ios_Openmode __a)
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Openmode(~static_cast<int>(__a)); }
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Openmode&
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a | __b; }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Openmode&
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a & __b; }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline const _Ios_Openmode&
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return __a = __a ^ __b; }
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   enum _Ios_Iostate
GAS LISTING /tmp/ccrWPnlb.s 			page 56


 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     { 
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_goodbit 		= 0,
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_badbit 		= 1L << 0,
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_eofbit 		= 1L << 1,
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_failbit		= 1L << 2,
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ios_iostate_end = 1L << 16 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     };
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&(_Ios_Iostate __a, _Ios_Iostate __b)
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|(_Ios_Iostate __a, _Ios_Iostate __b)
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
 327              		.loc 6 158 0
 328 011a 8B7720   		movl	32(%rdi), %esi
 329 011d 83CE01   		orl	$1, %esi
 330              	.LBE294:
 331              	.LBE293:
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 332              		.loc 5 152 0
 333 0120 E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@PLT
 333      00
 334              	.LVL28:
 335 0125 EB83     		jmp	.L7
 336              	.LVL29:
 337              	.L15:
 338              	.LBE292:
 339              	.LBE291:
 340              	.LBE290:
 341              	.LBE289:
 342              	.LBE295:
 343              	.LBE322:
 344              	.LBB323:
 345              	.LBB320:
 346              	.LBB318:
 347              	.LBB316:
 348              	.LBB312:
 349              	.LBB310:
 350              	.LBB303:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 351              		.loc 5 49 0
 352 0127 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 352      00
 353              	.LVL30:
 354              	.LBE303:
 355              	.LBE310:
 356              	.LBE312:
 357              	.LBE316:
 358              	.LBE318:
 359              	.LBE320:
 360              	.LBE323:
 361              		.cfi_endproc
 362              	.LFE1706:
 363              		.size	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12, .-_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 364              		.section	.text.unlikely
GAS LISTING /tmp/ccrWPnlb.s 			page 57


 365              	.LCOLDE10:
 366              		.text
 367              	.LHOTE10:
 368              		.section	.rodata.str1.8
 369 0024 00000000 		.align 8
 370              	.LC11:
 371 0028 74686520 		.string	"the heatmap is full of zeros (heatmap_eq(hm, expected))"
 371      68656174 
 371      6D617020 
 371      69732066 
 371      756C6C20 
 372              		.align 8
 373              	.LC13:
 374 0060 74686520 		.string	"the max of the heatmap is zero (hm->max == 0.0f)"
 374      6D617820 
 374      6F662074 
 374      68652068 
 374      6561746D 
 375              		.section	.text.unlikely
 376              	.LCOLDB14:
 377              		.text
 378              	.LHOTB14:
 379 012c 0F1F4000 		.p2align 4,,15
 380              		.globl	_Z16test_add_nothingv
 381              		.type	_Z16test_add_nothingv, @function
 382              	_Z16test_add_nothingv:
 383              	.LFB1513:
  92:tests/test.cpp **** {
 384              		.loc 2 92 0
 385              		.cfi_startproc
 386 0130 53       		pushq	%rbx
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 3, -16
 389              	.LBB324:
  93:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 390              		.loc 2 93 0
 391 0131 BE030000 		movl	$3, %esi
 391      00
 392 0136 BF030000 		movl	$3, %edi
 392      00
 393 013b E8000000 		call	heatmap_new@PLT
 393      00
 394              	.LVL31:
 395 0140 4889C3   		movq	%rax, %rbx
 396              	.LVL32:
 397              	.LBB325:
 398              	.LBB326:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 399              		.loc 2 71 0
 400 0143 8B500C   		movl	12(%rax), %edx
 401 0146 8B4010   		movl	16(%rax), %eax
 402              	.LVL33:
 403 0149 488B33   		movq	(%rbx), %rsi
 404 014c 488D3D00 		leaq	_ZZ16test_add_nothingvE8expected(%rip), %rdi
 404      000000
 405 0153 480FAFD0 		imulq	%rax, %rdx
 406 0157 48C1E202 		salq	$2, %rdx
GAS LISTING /tmp/ccrWPnlb.s 			page 58


 407 015b E8000000 		call	memcmp@PLT
 407      00
 408              	.LVL34:
 409              	.LBE326:
 410              	.LBE325:
 411              	.LBB327:
 412              	.LBB328:
  51:tests/test.cpp ****     g_total_tests++;
 413              		.loc 2 51 0
 414 0160 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 414      0000
  53:tests/test.cpp ****     if(!condition) {
 415              		.loc 2 53 0
 416 0166 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 417              		.loc 2 51 0
 418 0168 8D5101   		leal	1(%rcx), %edx
 419 016b 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 419      0000
  53:tests/test.cpp ****     if(!condition) {
 420              		.loc 2 53 0
 421 0171 7545     		jne	.L25
 422              	.LVL35:
 423              	.L17:
 424              	.LBE328:
 425              	.LBE327:
 103:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 426              		.loc 2 103 0
 427 0173 F30F1043 		movss	8(%rbx), %xmm0
 427      08
 428              	.LVL36:
 429              	.LBB330:
 430              	.LBB331:
  51:tests/test.cpp ****     g_total_tests++;
 431              		.loc 2 51 0
 432 0178 83C201   		addl	$1, %edx
  53:tests/test.cpp ****     if(!condition) {
 433              		.loc 2 53 0
 434 017b 0F2E0500 		ucomiss	.LC12(%rip), %xmm0
 434      000000
  51:tests/test.cpp ****     g_total_tests++;
 435              		.loc 2 51 0
 436 0182 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 436      0000
  53:tests/test.cpp ****     if(!condition) {
 437              		.loc 2 53 0
 438 0188 7A0E     		jp	.L20
 439 018a 750C     		jne	.L20
 440              	.LBE331:
 441              	.LBE330:
 105:tests/test.cpp ****     heatmap_free(hm);
 442              		.loc 2 105 0
 443 018c 4889DF   		movq	%rbx, %rdi
 444              	.LBE324:
 106:tests/test.cpp **** }
 445              		.loc 2 106 0
 446 018f 5B       		popq	%rbx
GAS LISTING /tmp/ccrWPnlb.s 			page 59


 447              		.cfi_remember_state
 448              		.cfi_def_cfa_offset 8
 449              	.LVL37:
 450              	.LBB335:
 105:tests/test.cpp ****     heatmap_free(hm);
 451              		.loc 2 105 0
 452 0190 E9000000 		jmp	heatmap_free@PLT
 452      00
 453              	.LVL38:
 454              		.p2align 4,,10
 455 0195 0F1F00   		.p2align 3
 456              	.L20:
 457              		.cfi_restore_state
 458              	.LBB333:
 459              	.LBB332:
 460 0198 488D3D00 		leaq	.LC13(%rip), %rdi
 460      000000
 461 019f BE670000 		movl	$103, %esi
 461      00
 462 01a4 E887FEFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 462      FF
 463              	.LVL39:
 464              	.LBE332:
 465              	.LBE333:
 466 01a9 4889DF   		movq	%rbx, %rdi
 467              	.LBE335:
 106:tests/test.cpp **** }
 468              		.loc 2 106 0
 469 01ac 5B       		popq	%rbx
 470              		.cfi_remember_state
 471              		.cfi_def_cfa_offset 8
 472              	.LVL40:
 473              	.LBB336:
 105:tests/test.cpp ****     heatmap_free(hm);
 474              		.loc 2 105 0
 475 01ad E9000000 		jmp	heatmap_free@PLT
 475      00
 476              	.LVL41:
 477              		.p2align 4,,10
 478 01b2 660F1F44 		.p2align 3
 478      0000
 479              	.L25:
 480              		.cfi_restore_state
 481              	.LBB334:
 482              	.LBB329:
 483 01b8 488D3D00 		leaq	.LC11(%rip), %rdi
 483      000000
 484 01bf BE660000 		movl	$102, %esi
 484      00
 485 01c4 E867FEFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 485      FF
 486              	.LVL42:
 487 01c9 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 487      0000
 488 01cf EBA2     		jmp	.L17
 489              	.LBE329:
 490              	.LBE334:
GAS LISTING /tmp/ccrWPnlb.s 			page 60


 491              	.LBE336:
 492              		.cfi_endproc
 493              	.LFE1513:
 494              		.size	_Z16test_add_nothingv, .-_Z16test_add_nothingv
 495              		.section	.text.unlikely
 496              	.LCOLDE14:
 497              		.text
 498              	.LHOTE14:
 499              		.section	.rodata.str1.8
 500 0091 00000000 		.align 8
 500      000000
 501              	.LC15:
 502 0098 74686520 		.string	"the heatmap equals the stamp (heatmap_eq(hm, g_3x3_stamp.buf))"
 502      68656174 
 502      6D617020 
 502      65717561 
 502      6C732074 
 503 00d7 00       		.align 8
 504              	.LC17:
 505 00d8 74686520 		.string	"the max of the heatmap is one (hm->max == 1.0f)"
 505      6D617820 
 505      6F662074 
 505      68652068 
 505      6561746D 
 506              		.align 8
 507              	.LC18:
 508 0108 74686520 		.string	"the heatmap equals double the stamp (heatmap_eq(hm, expected))"
 508      68656174 
 508      6D617020 
 508      65717561 
 508      6C732064 
 509 0147 00       		.align 8
 510              	.LC20:
 511 0148 74686520 		.string	"the max of the heatmap is two (hm->max == 2.0f)"
 511      6D617820 
 511      6F662074 
 511      68652068 
 511      6561746D 
 512              		.align 8
 513              	.LC21:
 514 0178 6120706F 		.string	"a point with weight 2.0 generates the same heatmap. (heatmaps_eq(hm2, hm))"
 514      696E7420 
 514      77697468 
 514      20776569 
 514      67687420 
 515              		.section	.text.unlikely
 516              	.LCOLDB22:
 517              		.text
 518              	.LHOTB22:
 519 01d1 66666666 		.p2align 4,,15
 519      66662E0F 
 519      1F840000 
 519      000000
 520              		.globl	_Z32test_add_point_with_stamp_centerv
 521              		.type	_Z32test_add_point_with_stamp_centerv, @function
 522              	_Z32test_add_point_with_stamp_centerv:
 523              	.LFB1514:
GAS LISTING /tmp/ccrWPnlb.s 			page 61


 109:tests/test.cpp **** {
 524              		.loc 2 109 0
 525              		.cfi_startproc
 526 01e0 55       		pushq	%rbp
 527              		.cfi_def_cfa_offset 16
 528              		.cfi_offset 6, -16
 529 01e1 53       		pushq	%rbx
 530              		.cfi_def_cfa_offset 24
 531              		.cfi_offset 3, -24
 532              	.LBB337:
 110:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 533              		.loc 2 110 0
 534 01e2 BE030000 		movl	$3, %esi
 534      00
 535 01e7 BF030000 		movl	$3, %edi
 535      00
 536              	.LBE337:
 109:tests/test.cpp **** {
 537              		.loc 2 109 0
 538 01ec 4883EC08 		subq	$8, %rsp
 539              		.cfi_def_cfa_offset 32
 540              	.LBB366:
 110:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 541              		.loc 2 110 0
 542 01f0 E8000000 		call	heatmap_new@PLT
 542      00
 543              	.LVL43:
 111:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 544              		.loc 2 111 0
 545 01f5 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 545      000000
 110:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 546              		.loc 2 110 0
 547 01fc 4889C3   		movq	%rax, %rbx
 548              	.LVL44:
 111:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 549              		.loc 2 111 0
 550 01ff 4889C7   		movq	%rax, %rdi
 551 0202 BA010000 		movl	$1, %edx
 551      00
 552 0207 BE010000 		movl	$1, %esi
 552      00
 553 020c E8000000 		call	heatmap_add_point_with_stamp@PLT
 553      00
 554              	.LVL45:
 555              	.LBB338:
 556              	.LBB339:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 557              		.loc 2 71 0
 558 0211 8B4310   		movl	16(%rbx), %eax
 559 0214 8B530C   		movl	12(%rbx), %edx
 560 0217 488B33   		movq	(%rbx), %rsi
 561 021a 488B3D00 		movq	_ZL11g_3x3_stamp(%rip), %rdi
 561      000000
 562 0221 480FAFD0 		imulq	%rax, %rdx
 563 0225 48C1E202 		salq	$2, %rdx
 564 0229 E8000000 		call	memcmp@PLT
GAS LISTING /tmp/ccrWPnlb.s 			page 62


 564      00
 565              	.LVL46:
 566              	.LBE339:
 567              	.LBE338:
 568              	.LBB340:
 569              	.LBB341:
  51:tests/test.cpp ****     g_total_tests++;
 570              		.loc 2 51 0
 571 022e 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 571      0000
  53:tests/test.cpp ****     if(!condition) {
 572              		.loc 2 53 0
 573 0234 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 574              		.loc 2 51 0
 575 0236 8D5101   		leal	1(%rcx), %edx
 576 0239 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 576      0000
  53:tests/test.cpp ****     if(!condition) {
 577              		.loc 2 53 0
 578 023f 0F850301 		jne	.L46
 578      0000
 579              	.LVL47:
 580              	.L27:
 581              	.LBE341:
 582              	.LBE340:
 114:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 583              		.loc 2 114 0
 584 0245 F30F1043 		movss	8(%rbx), %xmm0
 584      08
 585              	.LVL48:
 586              	.LBB343:
 587              	.LBB344:
  51:tests/test.cpp ****     g_total_tests++;
 588              		.loc 2 51 0
 589 024a 83C201   		addl	$1, %edx
  53:tests/test.cpp ****     if(!condition) {
 590              		.loc 2 53 0
 591 024d 0F2E0500 		ucomiss	.LC16(%rip), %xmm0
 591      000000
  51:tests/test.cpp ****     g_total_tests++;
 592              		.loc 2 51 0
 593 0254 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 593      0000
  53:tests/test.cpp ****     if(!condition) {
 594              		.loc 2 53 0
 595 025a 0F8A4001 		jp	.L36
 595      0000
 596 0260 0F853A01 		jne	.L36
 596      0000
 597              	.LVL49:
 598              	.L28:
 599              	.LBE344:
 600              	.LBE343:
 116:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 601              		.loc 2 116 0
 602 0266 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
GAS LISTING /tmp/ccrWPnlb.s 			page 63


 602      000000
 603 026d BA010000 		movl	$1, %edx
 603      00
 604 0272 BE010000 		movl	$1, %esi
 604      00
 605 0277 4889DF   		movq	%rbx, %rdi
 606 027a E8000000 		call	heatmap_add_point_with_stamp@PLT
 606      00
 607              	.LVL50:
 608              	.LBB346:
 609              	.LBB347:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 610              		.loc 2 71 0
 611 027f 8B4310   		movl	16(%rbx), %eax
 612 0282 8B530C   		movl	12(%rbx), %edx
 613 0285 488D3D00 		leaq	_ZZ32test_add_point_with_stamp_centervE8expected(%rip), %rdi
 613      000000
 614 028c 488B33   		movq	(%rbx), %rsi
 615 028f 480FAFD0 		imulq	%rax, %rdx
 616 0293 48C1E202 		salq	$2, %rdx
 617 0297 E8000000 		call	memcmp@PLT
 617      00
 618              	.LVL51:
 619              	.LBE347:
 620              	.LBE346:
 621              	.LBB348:
 622              	.LBB349:
  51:tests/test.cpp ****     g_total_tests++;
 623              		.loc 2 51 0
 624 029c 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 624      0000
  53:tests/test.cpp ****     if(!condition) {
 625              		.loc 2 53 0
 626 02a2 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 627              		.loc 2 51 0
 628 02a4 8D5101   		leal	1(%rcx), %edx
 629 02a7 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 629      0000
  53:tests/test.cpp ****     if(!condition) {
 630              		.loc 2 53 0
 631 02ad 0F85CD00 		jne	.L47
 631      0000
 632              	.LVL52:
 633              	.L30:
 634              	.LBE349:
 635              	.LBE348:
 125:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is two", hm->max == 2.0f);
 636              		.loc 2 125 0
 637 02b3 F30F1043 		movss	8(%rbx), %xmm0
 637      08
 638              	.LVL53:
 639              	.LBB351:
 640              	.LBB352:
  51:tests/test.cpp ****     g_total_tests++;
 641              		.loc 2 51 0
 642 02b8 83C201   		addl	$1, %edx
GAS LISTING /tmp/ccrWPnlb.s 			page 64


  53:tests/test.cpp ****     if(!condition) {
 643              		.loc 2 53 0
 644 02bb 0F2E0500 		ucomiss	.LC19(%rip), %xmm0
 644      000000
  51:tests/test.cpp ****     g_total_tests++;
 645              		.loc 2 51 0
 646 02c2 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 646      0000
  53:tests/test.cpp ****     if(!condition) {
 647              		.loc 2 53 0
 648 02c8 0F8A9A00 		jp	.L37
 648      0000
 649 02ce 0F859400 		jne	.L37
 649      0000
 650              	.LVL54:
 651              	.L31:
 652              	.LBE352:
 653              	.LBE351:
 127:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 654              		.loc 2 127 0
 655 02d4 BE030000 		movl	$3, %esi
 655      00
 656 02d9 BF030000 		movl	$3, %edi
 656      00
 657 02de E8000000 		call	heatmap_new@PLT
 657      00
 658              	.LVL55:
 128:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 1, 1, 2.0f, &g_3x3_stamp);
 659              		.loc 2 128 0
 660 02e3 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 660      000000
 127:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 661              		.loc 2 127 0
 662 02ea 4889C5   		movq	%rax, %rbp
 663              	.LVL56:
 128:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 1, 1, 2.0f, &g_3x3_stamp);
 664              		.loc 2 128 0
 665 02ed 4889C7   		movq	%rax, %rdi
 666 02f0 F30F1005 		movss	.LC19(%rip), %xmm0
 666      00000000 
 667 02f8 BA010000 		movl	$1, %edx
 667      00
 668 02fd BE010000 		movl	$1, %esi
 668      00
 669 0302 E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 669      00
 670              	.LVL57:
 671              	.LBB354:
 672              	.LBB355:
  76:tests/test.cpp ****     return hm->w == expected->w
 673              		.loc 2 76 0
 674 0307 8B450C   		movl	12(%rbp), %eax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 675              		.loc 2 78 0
 676 030a 3B430C   		cmpl	12(%rbx), %eax
 677 030d 0F84AD00 		je	.L48
 677      0000
GAS LISTING /tmp/ccrWPnlb.s 			page 65


 678              	.L33:
 679              	.LVL58:
 680              	.LBE355:
 681              	.LBE354:
 682              	.LBB357:
 683              	.LBB358:
 684 0313 488D3D00 		leaq	.LC21(%rip), %rdi
 684      000000
 685 031a BE820000 		movl	$130, %esi
 685      00
  51:tests/test.cpp ****     g_total_tests++;
 686              		.loc 2 51 0
 687 031f 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 687      000001
 688 0326 E805FDFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 688      FF
 689              	.LVL59:
 690              	.L35:
 691              	.LBE358:
 692              	.LBE357:
 132:tests/test.cpp ****     heatmap_free(hm);
 693              		.loc 2 132 0
 694 032b 4889DF   		movq	%rbx, %rdi
 695 032e E8000000 		call	heatmap_free@PLT
 695      00
 696              	.LVL60:
 697              	.LBE366:
 134:tests/test.cpp **** }
 698              		.loc 2 134 0
 699 0333 4883C408 		addq	$8, %rsp
 700              		.cfi_remember_state
 701              		.cfi_def_cfa_offset 24
 702              	.LBB367:
 133:tests/test.cpp ****     heatmap_free(hm2);
 703              		.loc 2 133 0
 704 0337 4889EF   		movq	%rbp, %rdi
 705              	.LBE367:
 134:tests/test.cpp **** }
 706              		.loc 2 134 0
 707 033a 5B       		popq	%rbx
 708              		.cfi_def_cfa_offset 16
 709              	.LVL61:
 710 033b 5D       		popq	%rbp
 711              		.cfi_def_cfa_offset 8
 712              	.LVL62:
 713              	.LBB368:
 133:tests/test.cpp ****     heatmap_free(hm2);
 714              		.loc 2 133 0
 715 033c E9000000 		jmp	heatmap_free@PLT
 715      00
 716              	.LVL63:
 717              		.p2align 4,,10
 718 0341 0F1F8000 		.p2align 3
 718      000000
 719              	.L46:
 720              		.cfi_restore_state
 721              	.LBB360:
GAS LISTING /tmp/ccrWPnlb.s 			page 66


 722              	.LBB342:
 723 0348 488D3D00 		leaq	.LC15(%rip), %rdi
 723      000000
 724 034f BE710000 		movl	$113, %esi
 724      00
 725 0354 E8D7FCFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 725      FF
 726              	.LVL64:
 727 0359 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 727      0000
 728 035f E9E1FEFF 		jmp	.L27
 728      FF
 729              	.LVL65:
 730              		.p2align 4,,10
 731 0364 0F1F4000 		.p2align 3
 732              	.L37:
 733              	.LBE342:
 734              	.LBE360:
 735              	.LBB361:
 736              	.LBB353:
 737 0368 488D3D00 		leaq	.LC20(%rip), %rdi
 737      000000
 738 036f BE7D0000 		movl	$125, %esi
 738      00
 739 0374 E8B7FCFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 739      FF
 740              	.LVL66:
 741 0379 E956FFFF 		jmp	.L31
 741      FF
 742              	.LVL67:
 743 037e 6690     		.p2align 4,,10
 744              		.p2align 3
 745              	.L47:
 746              	.LBE353:
 747              	.LBE361:
 748              	.LBB362:
 749              	.LBB350:
 750 0380 488D3D00 		leaq	.LC18(%rip), %rdi
 750      000000
 751 0387 BE7C0000 		movl	$124, %esi
 751      00
 752 038c E89FFCFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 752      FF
 753              	.LVL68:
 754 0391 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 754      0000
 755 0397 E917FFFF 		jmp	.L30
 755      FF
 756              	.LVL69:
 757 039c 0F1F4000 		.p2align 4,,10
 758              		.p2align 3
 759              	.L36:
 760              	.LBE350:
 761              	.LBE362:
 762              	.LBB363:
 763              	.LBB345:
 764 03a0 488D3D00 		leaq	.LC17(%rip), %rdi
GAS LISTING /tmp/ccrWPnlb.s 			page 67


 764      000000
 765 03a7 BE720000 		movl	$114, %esi
 765      00
 766 03ac E87FFCFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 766      FF
 767              	.LVL70:
 768 03b1 E9B0FEFF 		jmp	.L28
 768      FF
 769              	.LVL71:
 770 03b6 662E0F1F 		.p2align 4,,10
 770      84000000 
 770      0000
 771              		.p2align 3
 772              	.L48:
 773              	.LBE345:
 774              	.LBE363:
 775              	.LBB364:
 776              	.LBB356:
  77:tests/test.cpp ****         && hm->h == expected->h
 777              		.loc 2 77 0
 778 03c0 8B5510   		movl	16(%rbp), %edx
 779 03c3 3B5310   		cmpl	16(%rbx), %edx
 780 03c6 0F8547FF 		jne	.L33
 780      FFFF
 781 03cc 480FAFC2 		imulq	%rdx, %rax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 782              		.loc 2 78 0
 783 03d0 488B7500 		movq	0(%rbp), %rsi
 784 03d4 488B3B   		movq	(%rbx), %rdi
 785 03d7 488D1485 		leaq	0(,%rax,4), %rdx
 785      00000000 
 786 03df E8000000 		call	memcmp@PLT
 786      00
 787              	.LVL72:
 788 03e4 85C0     		testl	%eax, %eax
 789 03e6 0F8527FF 		jne	.L33
 789      FFFF
 790              	.LVL73:
 791              	.LBE356:
 792              	.LBE364:
 793              	.LBB365:
 794              	.LBB359:
  51:tests/test.cpp ****     g_total_tests++;
 795              		.loc 2 51 0
 796 03ec 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 796      000001
 797 03f3 E933FFFF 		jmp	.L35
 797      FF
 798              	.LBE359:
 799              	.LBE365:
 800              	.LBE368:
 801              		.cfi_endproc
 802              	.LFE1514:
 803              		.size	_Z32test_add_point_with_stamp_centerv, .-_Z32test_add_point_with_stamp_centerv
 804              		.section	.text.unlikely
 805              	.LCOLDE22:
 806              		.text
GAS LISTING /tmp/ccrWPnlb.s 			page 68


 807              	.LHOTE22:
 808              		.section	.rodata.str1.8
 809 01c3 00000000 		.align 8
 809      00
 810              	.LC23:
 811 01c8 746F702D 		.string	"top-left point is correct (heatmap_eq(hm, expected))"
 811      6C656674 
 811      20706F69 
 811      6E742069 
 811      7320636F 
 812 01fd 000000   		.align 8
 813              	.LC25:
 814 0200 6120706F 		.string	"a point with weight 3.0 generates the same heatmap as three regular ones. (heatmaps_eq(hm
 814      696E7420 
 814      77697468 
 814      20776569 
 814      67687420 
 815              		.section	.text.unlikely
 816              	.LCOLDB26:
 817              		.text
 818              	.LHOTB26:
 819 03f8 0F1F8400 		.p2align 4,,15
 819      00000000 
 820              		.globl	_Z33test_add_point_with_stamp_topleftv
 821              		.type	_Z33test_add_point_with_stamp_topleftv, @function
 822              	_Z33test_add_point_with_stamp_topleftv:
 823              	.LFB1515:
 137:tests/test.cpp **** {
 824              		.loc 2 137 0
 825              		.cfi_startproc
 826 0400 55       		pushq	%rbp
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 6, -16
 829 0401 53       		pushq	%rbx
 830              		.cfi_def_cfa_offset 24
 831              		.cfi_offset 3, -24
 832              	.LBB369:
 144:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 833              		.loc 2 144 0
 834 0402 BE030000 		movl	$3, %esi
 834      00
 835 0407 BF030000 		movl	$3, %edi
 835      00
 836              	.LBE369:
 137:tests/test.cpp **** {
 837              		.loc 2 137 0
 838 040c 4883EC08 		subq	$8, %rsp
 839              		.cfi_def_cfa_offset 32
 840              	.LBB388:
 144:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 841              		.loc 2 144 0
 842 0410 E8000000 		call	heatmap_new@PLT
 842      00
 843              	.LVL74:
 145:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 844              		.loc 2 145 0
 845 0415 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
GAS LISTING /tmp/ccrWPnlb.s 			page 69


 845      000000
 144:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 846              		.loc 2 144 0
 847 041c 4889C3   		movq	%rax, %rbx
 848              	.LVL75:
 145:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 849              		.loc 2 145 0
 850 041f 31D2     		xorl	%edx, %edx
 851 0421 31F6     		xorl	%esi, %esi
 852 0423 4889C7   		movq	%rax, %rdi
 853 0426 E8000000 		call	heatmap_add_point_with_stamp@PLT
 853      00
 854              	.LVL76:
 855              	.LBB370:
 856              	.LBB371:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 857              		.loc 2 71 0
 858 042b 8B4310   		movl	16(%rbx), %eax
 859 042e 8B530C   		movl	12(%rbx), %edx
 860 0431 488D3D00 		leaq	_ZZ33test_add_point_with_stamp_topleftvE8expected(%rip), %rdi
 860      000000
 861 0438 488B33   		movq	(%rbx), %rsi
 862 043b 480FAFD0 		imulq	%rax, %rdx
 863 043f 48C1E202 		salq	$2, %rdx
 864 0443 E8000000 		call	memcmp@PLT
 864      00
 865              	.LVL77:
 866              	.LBE371:
 867              	.LBE370:
 868              	.LBB372:
 869              	.LBB373:
  51:tests/test.cpp ****     g_total_tests++;
 870              		.loc 2 51 0
 871 0448 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 871      0000
  53:tests/test.cpp ****     if(!condition) {
 872              		.loc 2 53 0
 873 044e 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 874              		.loc 2 51 0
 875 0450 8D5101   		leal	1(%rcx), %edx
 876 0453 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 876      0000
  53:tests/test.cpp ****     if(!condition) {
 877              		.loc 2 53 0
 878 0459 0F85B100 		jne	.L62
 878      0000
 879              	.LVL78:
 880              	.L50:
 881              	.LBE373:
 882              	.LBE372:
 148:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 883              		.loc 2 148 0
 884 045f F30F1043 		movss	8(%rbx), %xmm0
 884      08
 885              	.LVL79:
 886              	.LBB375:
GAS LISTING /tmp/ccrWPnlb.s 			page 70


 887              	.LBB376:
  51:tests/test.cpp ****     g_total_tests++;
 888              		.loc 2 51 0
 889 0464 83C201   		addl	$1, %edx
  53:tests/test.cpp ****     if(!condition) {
 890              		.loc 2 53 0
 891 0467 0F2E0500 		ucomiss	.LC16(%rip), %xmm0
 891      000000
  51:tests/test.cpp ****     g_total_tests++;
 892              		.loc 2 51 0
 893 046e 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 893      0000
  53:tests/test.cpp ****     if(!condition) {
 894              		.loc 2 53 0
 895 0474 0F8AB600 		jp	.L56
 895      0000
 896 047a 0F85B000 		jne	.L56
 896      0000
 897              	.LVL80:
 898              	.L51:
 899              	.LBE376:
 900              	.LBE375:
 150:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 901              		.loc 2 150 0
 902 0480 BE030000 		movl	$3, %esi
 902      00
 903 0485 BF030000 		movl	$3, %edi
 903      00
 904 048a E8000000 		call	heatmap_new@PLT
 904      00
 905              	.LVL81:
 151:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 906              		.loc 2 151 0
 907 048f 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 907      000000
 908 0496 31D2     		xorl	%edx, %edx
 909 0498 31F6     		xorl	%esi, %esi
 910 049a 4889DF   		movq	%rbx, %rdi
 150:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 911              		.loc 2 150 0
 912 049d 4889C5   		movq	%rax, %rbp
 913              	.LVL82:
 151:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 914              		.loc 2 151 0
 915 04a0 E8000000 		call	heatmap_add_point_with_stamp@PLT
 915      00
 916              	.LVL83:
 152:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 0, 0, &g_3x3_stamp);
 917              		.loc 2 152 0
 918 04a5 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 918      000000
 919 04ac 31D2     		xorl	%edx, %edx
 920 04ae 31F6     		xorl	%esi, %esi
 921 04b0 4889DF   		movq	%rbx, %rdi
 922 04b3 E8000000 		call	heatmap_add_point_with_stamp@PLT
 922      00
 923              	.LVL84:
GAS LISTING /tmp/ccrWPnlb.s 			page 71


 153:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 0, 0, 3.0f, &g_3x3_stamp);
 924              		.loc 2 153 0
 925 04b8 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 925      000000
 926 04bf 31D2     		xorl	%edx, %edx
 927 04c1 31F6     		xorl	%esi, %esi
 928 04c3 F30F1005 		movss	.LC24(%rip), %xmm0
 928      00000000 
 929 04cb 4889EF   		movq	%rbp, %rdi
 930 04ce E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 930      00
 931              	.LVL85:
 932              	.LBB378:
 933              	.LBB379:
  76:tests/test.cpp ****     return hm->w == expected->w
 934              		.loc 2 76 0
 935 04d3 8B450C   		movl	12(%rbp), %eax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 936              		.loc 2 78 0
 937 04d6 3B430C   		cmpl	12(%rbx), %eax
 938 04d9 7475     		je	.L63
 939              	.L53:
 940              	.LVL86:
 941              	.LBE379:
 942              	.LBE378:
 943              	.LBB381:
 944              	.LBB382:
 945 04db 488D3D00 		leaq	.LC25(%rip), %rdi
 945      000000
 946 04e2 BE9B0000 		movl	$155, %esi
 946      00
  51:tests/test.cpp ****     g_total_tests++;
 947              		.loc 2 51 0
 948 04e7 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 948      000001
 949 04ee E83DFBFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 949      FF
 950              	.LVL87:
 951              	.L55:
 952              	.LBE382:
 953              	.LBE381:
 157:tests/test.cpp ****     heatmap_free(hm);
 954              		.loc 2 157 0
 955 04f3 4889DF   		movq	%rbx, %rdi
 956 04f6 E8000000 		call	heatmap_free@PLT
 956      00
 957              	.LVL88:
 958              	.LBE388:
 159:tests/test.cpp **** }
 959              		.loc 2 159 0
 960 04fb 4883C408 		addq	$8, %rsp
 961              		.cfi_remember_state
 962              		.cfi_def_cfa_offset 24
 963              	.LBB389:
 158:tests/test.cpp ****     heatmap_free(hm2);
 964              		.loc 2 158 0
 965 04ff 4889EF   		movq	%rbp, %rdi
GAS LISTING /tmp/ccrWPnlb.s 			page 72


 966              	.LBE389:
 159:tests/test.cpp **** }
 967              		.loc 2 159 0
 968 0502 5B       		popq	%rbx
 969              		.cfi_def_cfa_offset 16
 970              	.LVL89:
 971 0503 5D       		popq	%rbp
 972              		.cfi_def_cfa_offset 8
 973              	.LVL90:
 974              	.LBB390:
 158:tests/test.cpp ****     heatmap_free(hm2);
 975              		.loc 2 158 0
 976 0504 E9000000 		jmp	heatmap_free@PLT
 976      00
 977              	.LVL91:
 978 0509 0F1F8000 		.p2align 4,,10
 978      000000
 979              		.p2align 3
 980              	.L62:
 981              		.cfi_restore_state
 982              	.LBB384:
 983              	.LBB374:
 984 0510 488D3D00 		leaq	.LC23(%rip), %rdi
 984      000000
 985 0517 BE930000 		movl	$147, %esi
 985      00
 986 051c E80FFBFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 986      FF
 987              	.LVL92:
 988 0521 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 988      0000
 989 0527 E933FFFF 		jmp	.L50
 989      FF
 990              	.LVL93:
 991 052c 0F1F4000 		.p2align 4,,10
 992              		.p2align 3
 993              	.L56:
 994              	.LBE374:
 995              	.LBE384:
 996              	.LBB385:
 997              	.LBB377:
 998 0530 488D3D00 		leaq	.LC17(%rip), %rdi
 998      000000
 999 0537 BE940000 		movl	$148, %esi
 999      00
 1000 053c E8EFFAFF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1000      FF
 1001              	.LVL94:
 1002 0541 E93AFFFF 		jmp	.L51
 1002      FF
 1003              	.LVL95:
 1004 0546 662E0F1F 		.p2align 4,,10
 1004      84000000 
 1004      0000
 1005              		.p2align 3
 1006              	.L63:
 1007              	.LBE377:
GAS LISTING /tmp/ccrWPnlb.s 			page 73


 1008              	.LBE385:
 1009              	.LBB386:
 1010              	.LBB380:
  77:tests/test.cpp ****         && hm->h == expected->h
 1011              		.loc 2 77 0
 1012 0550 8B5510   		movl	16(%rbp), %edx
 1013 0553 3B5310   		cmpl	16(%rbx), %edx
 1014 0556 7583     		jne	.L53
 1015 0558 480FAFC2 		imulq	%rdx, %rax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 1016              		.loc 2 78 0
 1017 055c 488B7500 		movq	0(%rbp), %rsi
 1018 0560 488B3B   		movq	(%rbx), %rdi
 1019 0563 488D1485 		leaq	0(,%rax,4), %rdx
 1019      00000000 
 1020 056b E8000000 		call	memcmp@PLT
 1020      00
 1021              	.LVL96:
 1022 0570 85C0     		testl	%eax, %eax
 1023 0572 0F8563FF 		jne	.L53
 1023      FFFF
 1024              	.LVL97:
 1025              	.LBE380:
 1026              	.LBE386:
 1027              	.LBB387:
 1028              	.LBB383:
  51:tests/test.cpp ****     g_total_tests++;
 1029              		.loc 2 51 0
 1030 0578 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 1030      000001
 1031 057f E96FFFFF 		jmp	.L55
 1031      FF
 1032              	.LBE383:
 1033              	.LBE387:
 1034              	.LBE390:
 1035              		.cfi_endproc
 1036              	.LFE1515:
 1037              		.size	_Z33test_add_point_with_stamp_topleftv, .-_Z33test_add_point_with_stamp_topleftv
 1038              		.section	.text.unlikely
 1039              	.LCOLDE26:
 1040              		.text
 1041              	.LHOTE26:
 1042              		.section	.rodata.str1.8
 1043 0261 00000000 		.align 8
 1043      000000
 1044              	.LC27:
 1045 0268 626F742D 		.string	"bot-right point is correct (heatmap_eq(hm, expected))"
 1045      72696768 
 1045      7420706F 
 1045      696E7420 
 1045      69732063 
 1046 029e 0000     		.align 8
 1047              	.LC28:
 1048 02a0 6120706F 		.string	"a point with weight 2.0 generates the same heatmap as two regular ones. (heatmaps_eq(hm2,
 1048      696E7420 
 1048      77697468 
 1048      20776569 
GAS LISTING /tmp/ccrWPnlb.s 			page 74


 1048      67687420 
 1049              		.section	.text.unlikely
 1050              	.LCOLDB29:
 1051              		.text
 1052              	.LHOTB29:
 1053 0584 6666662E 		.p2align 4,,15
 1053      0F1F8400 
 1053      00000000 
 1054              		.globl	_Z34test_add_point_with_stamp_botrightv
 1055              		.type	_Z34test_add_point_with_stamp_botrightv, @function
 1056              	_Z34test_add_point_with_stamp_botrightv:
 1057              	.LFB1516:
 162:tests/test.cpp **** {
 1058              		.loc 2 162 0
 1059              		.cfi_startproc
 1060 0590 55       		pushq	%rbp
 1061              		.cfi_def_cfa_offset 16
 1062              		.cfi_offset 6, -16
 1063 0591 53       		pushq	%rbx
 1064              		.cfi_def_cfa_offset 24
 1065              		.cfi_offset 3, -24
 1066              	.LBB391:
 169:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 1067              		.loc 2 169 0
 1068 0592 BE030000 		movl	$3, %esi
 1068      00
 1069 0597 BF030000 		movl	$3, %edi
 1069      00
 1070              	.LBE391:
 162:tests/test.cpp **** {
 1071              		.loc 2 162 0
 1072 059c 4883EC08 		subq	$8, %rsp
 1073              		.cfi_def_cfa_offset 32
 1074              	.LBB410:
 169:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 1075              		.loc 2 169 0
 1076 05a0 E8000000 		call	heatmap_new@PLT
 1076      00
 1077              	.LVL98:
 170:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 1078              		.loc 2 170 0
 1079 05a5 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1079      000000
 169:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 1080              		.loc 2 169 0
 1081 05ac 4889C3   		movq	%rax, %rbx
 1082              	.LVL99:
 170:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 1083              		.loc 2 170 0
 1084 05af 4889C7   		movq	%rax, %rdi
 1085 05b2 BA020000 		movl	$2, %edx
 1085      00
 1086 05b7 BE020000 		movl	$2, %esi
 1086      00
 1087 05bc E8000000 		call	heatmap_add_point_with_stamp@PLT
 1087      00
 1088              	.LVL100:
GAS LISTING /tmp/ccrWPnlb.s 			page 75


 1089              	.LBB392:
 1090              	.LBB393:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 1091              		.loc 2 71 0
 1092 05c1 8B4310   		movl	16(%rbx), %eax
 1093 05c4 8B530C   		movl	12(%rbx), %edx
 1094 05c7 488D3D00 		leaq	_ZZ34test_add_point_with_stamp_botrightvE8expected(%rip), %rdi
 1094      000000
 1095 05ce 488B33   		movq	(%rbx), %rsi
 1096 05d1 480FAFD0 		imulq	%rax, %rdx
 1097 05d5 48C1E202 		salq	$2, %rdx
 1098 05d9 E8000000 		call	memcmp@PLT
 1098      00
 1099              	.LVL101:
 1100              	.LBE393:
 1101              	.LBE392:
 1102              	.LBB394:
 1103              	.LBB395:
  51:tests/test.cpp ****     g_total_tests++;
 1104              		.loc 2 51 0
 1105 05de 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 1105      0000
  53:tests/test.cpp ****     if(!condition) {
 1106              		.loc 2 53 0
 1107 05e4 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1108              		.loc 2 51 0
 1109 05e6 8D5101   		leal	1(%rcx), %edx
 1110 05e9 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1110      0000
  53:tests/test.cpp ****     if(!condition) {
 1111              		.loc 2 53 0
 1112 05ef 0F85AB00 		jne	.L77
 1112      0000
 1113              	.LVL102:
 1114              	.L65:
 1115              	.LBE395:
 1116              	.LBE394:
 173:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is one", hm->max == 1.0f);
 1117              		.loc 2 173 0
 1118 05f5 F30F1043 		movss	8(%rbx), %xmm0
 1118      08
 1119              	.LVL103:
 1120              	.LBB397:
 1121              	.LBB398:
  51:tests/test.cpp ****     g_total_tests++;
 1122              		.loc 2 51 0
 1123 05fa 83C201   		addl	$1, %edx
  53:tests/test.cpp ****     if(!condition) {
 1124              		.loc 2 53 0
 1125 05fd 0F2E0500 		ucomiss	.LC16(%rip), %xmm0
 1125      000000
  51:tests/test.cpp ****     g_total_tests++;
 1126              		.loc 2 51 0
 1127 0604 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1127      0000
  53:tests/test.cpp ****     if(!condition) {
GAS LISTING /tmp/ccrWPnlb.s 			page 76


 1128              		.loc 2 53 0
 1129 060a 0F8AB000 		jp	.L71
 1129      0000
 1130 0610 0F85AA00 		jne	.L71
 1130      0000
 1131              	.LVL104:
 1132              	.L66:
 1133              	.LBE398:
 1134              	.LBE397:
 175:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 1135              		.loc 2 175 0
 1136 0616 BE030000 		movl	$3, %esi
 1136      00
 1137 061b BF030000 		movl	$3, %edi
 1137      00
 1138 0620 E8000000 		call	heatmap_new@PLT
 1138      00
 1139              	.LVL105:
 176:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 1140              		.loc 2 176 0
 1141 0625 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1141      000000
 1142 062c BA020000 		movl	$2, %edx
 1142      00
 1143 0631 BE020000 		movl	$2, %esi
 1143      00
 1144 0636 4889DF   		movq	%rbx, %rdi
 175:tests/test.cpp ****     heatmap_t* hm2 = heatmap_new(3, 3);
 1145              		.loc 2 175 0
 1146 0639 4889C5   		movq	%rax, %rbp
 1147              	.LVL106:
 176:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 2, &g_3x3_stamp);
 1148              		.loc 2 176 0
 1149 063c E8000000 		call	heatmap_add_point_with_stamp@PLT
 1149      00
 1150              	.LVL107:
 177:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm2, 2, 2, 2.0f, &g_3x3_stamp);
 1151              		.loc 2 177 0
 1152 0641 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1152      000000
 1153 0648 F30F1005 		movss	.LC19(%rip), %xmm0
 1153      00000000 
 1154 0650 BA020000 		movl	$2, %edx
 1154      00
 1155 0655 BE020000 		movl	$2, %esi
 1155      00
 1156 065a 4889EF   		movq	%rbp, %rdi
 1157 065d E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 1157      00
 1158              	.LVL108:
 1159              	.LBB400:
 1160              	.LBB401:
  76:tests/test.cpp ****     return hm->w == expected->w
 1161              		.loc 2 76 0
 1162 0662 8B450C   		movl	12(%rbp), %eax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 1163              		.loc 2 78 0
GAS LISTING /tmp/ccrWPnlb.s 			page 77


 1164 0665 3B430C   		cmpl	12(%rbx), %eax
 1165 0668 7476     		je	.L78
 1166              	.L68:
 1167              	.LVL109:
 1168              	.LBE401:
 1169              	.LBE400:
 1170              	.LBB403:
 1171              	.LBB404:
 1172 066a 488D3D00 		leaq	.LC28(%rip), %rdi
 1172      000000
 1173 0671 BEB30000 		movl	$179, %esi
 1173      00
  51:tests/test.cpp ****     g_total_tests++;
 1174              		.loc 2 51 0
 1175 0676 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 1175      000001
 1176 067d E8AEF9FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1176      FF
 1177              	.LVL110:
 1178              	.L70:
 1179              	.LBE404:
 1180              	.LBE403:
 181:tests/test.cpp ****     heatmap_free(hm);
 1181              		.loc 2 181 0
 1182 0682 4889DF   		movq	%rbx, %rdi
 1183 0685 E8000000 		call	heatmap_free@PLT
 1183      00
 1184              	.LVL111:
 1185              	.LBE410:
 183:tests/test.cpp **** }
 1186              		.loc 2 183 0
 1187 068a 4883C408 		addq	$8, %rsp
 1188              		.cfi_remember_state
 1189              		.cfi_def_cfa_offset 24
 1190              	.LBB411:
 182:tests/test.cpp ****     heatmap_free(hm2);
 1191              		.loc 2 182 0
 1192 068e 4889EF   		movq	%rbp, %rdi
 1193              	.LBE411:
 183:tests/test.cpp **** }
 1194              		.loc 2 183 0
 1195 0691 5B       		popq	%rbx
 1196              		.cfi_def_cfa_offset 16
 1197              	.LVL112:
 1198 0692 5D       		popq	%rbp
 1199              		.cfi_def_cfa_offset 8
 1200              	.LVL113:
 1201              	.LBB412:
 182:tests/test.cpp ****     heatmap_free(hm2);
 1202              		.loc 2 182 0
 1203 0693 E9000000 		jmp	heatmap_free@PLT
 1203      00
 1204              	.LVL114:
 1205 0698 0F1F8400 		.p2align 4,,10
 1205      00000000 
 1206              		.p2align 3
 1207              	.L77:
GAS LISTING /tmp/ccrWPnlb.s 			page 78


 1208              		.cfi_restore_state
 1209              	.LBB406:
 1210              	.LBB396:
 1211 06a0 488D3D00 		leaq	.LC27(%rip), %rdi
 1211      000000
 1212 06a7 BEAC0000 		movl	$172, %esi
 1212      00
 1213 06ac E87FF9FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1213      FF
 1214              	.LVL115:
 1215 06b1 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 1215      0000
 1216 06b7 E939FFFF 		jmp	.L65
 1216      FF
 1217              	.LVL116:
 1218 06bc 0F1F4000 		.p2align 4,,10
 1219              		.p2align 3
 1220              	.L71:
 1221              	.LBE396:
 1222              	.LBE406:
 1223              	.LBB407:
 1224              	.LBB399:
 1225 06c0 488D3D00 		leaq	.LC17(%rip), %rdi
 1225      000000
 1226 06c7 BEAD0000 		movl	$173, %esi
 1226      00
 1227 06cc E85FF9FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1227      FF
 1228              	.LVL117:
 1229 06d1 E940FFFF 		jmp	.L66
 1229      FF
 1230              	.LVL118:
 1231 06d6 662E0F1F 		.p2align 4,,10
 1231      84000000 
 1231      0000
 1232              		.p2align 3
 1233              	.L78:
 1234              	.LBE399:
 1235              	.LBE407:
 1236              	.LBB408:
 1237              	.LBB402:
  77:tests/test.cpp ****         && hm->h == expected->h
 1238              		.loc 2 77 0
 1239 06e0 8B5510   		movl	16(%rbp), %edx
 1240 06e3 3B5310   		cmpl	16(%rbx), %edx
 1241 06e6 7582     		jne	.L68
 1242 06e8 480FAFC2 		imulq	%rdx, %rax
  78:tests/test.cpp ****         && 0 == memcmp(expected->buf, hm->buf, sizeof(float)*hm->w*hm->h);
 1243              		.loc 2 78 0
 1244 06ec 488B7500 		movq	0(%rbp), %rsi
 1245 06f0 488B3B   		movq	(%rbx), %rdi
 1246 06f3 488D1485 		leaq	0(,%rax,4), %rdx
 1246      00000000 
 1247 06fb E8000000 		call	memcmp@PLT
 1247      00
 1248              	.LVL119:
 1249 0700 85C0     		testl	%eax, %eax
GAS LISTING /tmp/ccrWPnlb.s 			page 79


 1250 0702 0F8562FF 		jne	.L68
 1250      FFFF
 1251              	.LVL120:
 1252              	.LBE402:
 1253              	.LBE408:
 1254              	.LBB409:
 1255              	.LBB405:
  51:tests/test.cpp ****     g_total_tests++;
 1256              		.loc 2 51 0
 1257 0708 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 1257      000001
 1258 070f E96EFFFF 		jmp	.L70
 1258      FF
 1259              	.LBE405:
 1260              	.LBE409:
 1261              	.LBE412:
 1262              		.cfi_endproc
 1263              	.LFE1516:
 1264              		.size	_Z34test_add_point_with_stamp_botrightv, .-_Z34test_add_point_with_stamp_botrightv
 1265              		.section	.text.unlikely
 1266              	.LCOLDE29:
 1267              		.text
 1268              	.LHOTE29:
 1269              		.section	.rodata.str1.8
 1270 02ff 00       		.align 8
 1271              	.LC30:
 1272 0300 6E6F2070 		.string	"no point outside the map got added (heatmap_eq(hm, expected))"
 1272      6F696E74 
 1272      206F7574 
 1272      73696465 
 1272      20746865 
 1273 033e 0000     		.align 8
 1274              	.LC32:
 1275 0340 6E6F2077 		.string	"no weighted point outside the map got added (heatmap_eq(hm, expected))"
 1275      65696768 
 1275      74656420 
 1275      706F696E 
 1275      74206F75 
 1276              		.section	.text.unlikely
 1277              	.LCOLDB33:
 1278              		.text
 1279              	.LHOTB33:
 1280 0714 6666662E 		.p2align 4,,15
 1280      0F1F8400 
 1280      00000000 
 1281              		.globl	_Z33test_add_point_with_stamp_outsidev
 1282              		.type	_Z33test_add_point_with_stamp_outsidev, @function
 1283              	_Z33test_add_point_with_stamp_outsidev:
 1284              	.LFB1517:
 186:tests/test.cpp **** {
 1285              		.loc 2 186 0
 1286              		.cfi_startproc
 1287 0720 53       		pushq	%rbx
 1288              		.cfi_def_cfa_offset 16
 1289              		.cfi_offset 3, -16
 1290              	.LBB413:
 193:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
GAS LISTING /tmp/ccrWPnlb.s 			page 80


 1291              		.loc 2 193 0
 1292 0721 BE030000 		movl	$3, %esi
 1292      00
 1293 0726 BF030000 		movl	$3, %edi
 1293      00
 1294 072b E8000000 		call	heatmap_new@PLT
 1294      00
 1295              	.LVL121:
 194:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 3, 2, &g_3x3_stamp);
 1296              		.loc 2 194 0
 1297 0730 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1297      000000
 1298 0737 4889C7   		movq	%rax, %rdi
 1299 073a BA020000 		movl	$2, %edx
 1299      00
 1300 073f BE030000 		movl	$3, %esi
 1300      00
 193:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 1301              		.loc 2 193 0
 1302 0744 4889C3   		movq	%rax, %rbx
 1303              	.LVL122:
 194:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 3, 2, &g_3x3_stamp);
 1304              		.loc 2 194 0
 1305 0747 E8000000 		call	heatmap_add_point_with_stamp@PLT
 1305      00
 1306              	.LVL123:
 195:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 2, 3, &g_3x3_stamp);
 1307              		.loc 2 195 0
 1308 074c 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1308      000000
 1309 0753 BA030000 		movl	$3, %edx
 1309      00
 1310 0758 BE020000 		movl	$2, %esi
 1310      00
 1311 075d 4889DF   		movq	%rbx, %rdi
 1312 0760 E8000000 		call	heatmap_add_point_with_stamp@PLT
 1312      00
 1313              	.LVL124:
 196:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 3, 3, &g_3x3_stamp);
 1314              		.loc 2 196 0
 1315 0765 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1315      000000
 1316 076c BA030000 		movl	$3, %edx
 1316      00
 1317 0771 BE030000 		movl	$3, %esi
 1317      00
 1318 0776 4889DF   		movq	%rbx, %rdi
 1319 0779 E8000000 		call	heatmap_add_point_with_stamp@PLT
 1319      00
 1320              	.LVL125:
 1321              	.LBB414:
 1322              	.LBB415:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 1323              		.loc 2 71 0
 1324 077e 8B4310   		movl	16(%rbx), %eax
 1325 0781 8B530C   		movl	12(%rbx), %edx
 1326 0784 488D3D00 		leaq	_ZZ33test_add_point_with_stamp_outsidevE8expected(%rip), %rdi
GAS LISTING /tmp/ccrWPnlb.s 			page 81


 1326      000000
 1327 078b 488B33   		movq	(%rbx), %rsi
 1328 078e 480FAFD0 		imulq	%rax, %rdx
 1329 0792 48C1E202 		salq	$2, %rdx
 1330 0796 E8000000 		call	memcmp@PLT
 1330      00
 1331              	.LVL126:
 1332              	.LBE415:
 1333              	.LBE414:
 1334              	.LBB416:
 1335              	.LBB417:
  51:tests/test.cpp ****     g_total_tests++;
 1336              		.loc 2 51 0
 1337 079b 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 1337      0000
  53:tests/test.cpp ****     if(!condition) {
 1338              		.loc 2 53 0
 1339 07a1 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1340              		.loc 2 51 0
 1341 07a3 8D5101   		leal	1(%rcx), %edx
 1342 07a6 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1342      0000
  53:tests/test.cpp ****     if(!condition) {
 1343              		.loc 2 53 0
 1344 07ac 0F853E01 		jne	.L95
 1344      0000
 1345              	.LVL127:
 1346              	.L80:
 1347              	.LBE417:
 1348              	.LBE416:
 1349              	.LBB419:
 1350              	.LBB420:
 1351 07b2 660FEFC9 		pxor	%xmm1, %xmm1
 1352              	.LBE420:
 1353              	.LBE419:
 199:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 1354              		.loc 2 199 0
 1355 07b6 F30F1043 		movss	8(%rbx), %xmm0
 1355      08
 1356              	.LVL128:
 1357              	.LBB423:
 1358              	.LBB421:
  51:tests/test.cpp ****     g_total_tests++;
 1359              		.loc 2 51 0
 1360 07bb 83C201   		addl	$1, %edx
 1361 07be 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1361      0000
  53:tests/test.cpp ****     if(!condition) {
 1362              		.loc 2 53 0
 1363 07c4 0F2EC1   		ucomiss	%xmm1, %xmm0
 1364 07c7 0F8A0301 		jp	.L86
 1364      0000
 1365 07cd 0F85FD00 		jne	.L86
 1365      0000
 1366              	.LVL129:
 1367              	.L81:
GAS LISTING /tmp/ccrWPnlb.s 			page 82


 1368              	.LBE421:
 1369              	.LBE423:
 201:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 3, 2, 1.5f, &g_3x3_stamp);
 1370              		.loc 2 201 0
 1371 07d3 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1371      000000
 1372 07da F30F1005 		movss	.LC31(%rip), %xmm0
 1372      00000000 
 1373 07e2 BA020000 		movl	$2, %edx
 1373      00
 1374 07e7 BE030000 		movl	$3, %esi
 1374      00
 1375 07ec 4889DF   		movq	%rbx, %rdi
 1376 07ef E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 1376      00
 1377              	.LVL130:
 202:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 2, 3, 1.5f, &g_3x3_stamp);
 1378              		.loc 2 202 0
 1379 07f4 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1379      000000
 1380 07fb F30F1005 		movss	.LC31(%rip), %xmm0
 1380      00000000 
 1381 0803 BA030000 		movl	$3, %edx
 1381      00
 1382 0808 BE020000 		movl	$2, %esi
 1382      00
 1383 080d 4889DF   		movq	%rbx, %rdi
 1384 0810 E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 1384      00
 1385              	.LVL131:
 203:tests/test.cpp ****     heatmap_add_weighted_point_with_stamp(hm, 3, 3, 1.5f, &g_3x3_stamp);
 1386              		.loc 2 203 0
 1387 0815 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 1387      000000
 1388 081c F30F1005 		movss	.LC31(%rip), %xmm0
 1388      00000000 
 1389 0824 BA030000 		movl	$3, %edx
 1389      00
 1390 0829 BE030000 		movl	$3, %esi
 1390      00
 1391 082e 4889DF   		movq	%rbx, %rdi
 1392 0831 E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 1392      00
 1393              	.LVL132:
 1394              	.LBB424:
 1395              	.LBB425:
  71:tests/test.cpp ****     return 0 == memcmp(expected, hm->buf, sizeof(float)*hm->w*hm->h);
 1396              		.loc 2 71 0
 1397 0836 8B4310   		movl	16(%rbx), %eax
 1398 0839 8B530C   		movl	12(%rbx), %edx
 1399 083c 488D3D00 		leaq	_ZZ33test_add_point_with_stamp_outsidevE8expected(%rip), %rdi
 1399      000000
 1400 0843 488B33   		movq	(%rbx), %rsi
 1401 0846 480FAFD0 		imulq	%rax, %rdx
 1402 084a 48C1E202 		salq	$2, %rdx
 1403 084e E8000000 		call	memcmp@PLT
 1403      00
GAS LISTING /tmp/ccrWPnlb.s 			page 83


 1404              	.LVL133:
 1405              	.LBE425:
 1406              	.LBE424:
 1407              	.LBB426:
 1408              	.LBB427:
  51:tests/test.cpp ****     g_total_tests++;
 1409              		.loc 2 51 0
 1410 0853 8B0D0000 		movl	_ZL13g_total_tests(%rip), %ecx
 1410      0000
  53:tests/test.cpp ****     if(!condition) {
 1411              		.loc 2 53 0
 1412 0859 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1413              		.loc 2 51 0
 1414 085b 8D5101   		leal	1(%rcx), %edx
 1415 085e 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1415      0000
  53:tests/test.cpp ****     if(!condition) {
 1416              		.loc 2 53 0
 1417 0864 754A     		jne	.L96
 1418              	.LVL134:
 1419              	.L83:
 1420              	.LBE427:
 1421              	.LBE426:
 1422              	.LBB429:
 1423              	.LBB430:
 1424 0866 660FEFD2 		pxor	%xmm2, %xmm2
 1425              	.LBE430:
 1426              	.LBE429:
 206:tests/test.cpp ****     ENSURE_THAT("the max of the heatmap is zero", hm->max == 0.0f);
 1427              		.loc 2 206 0
 1428 086a F30F1043 		movss	8(%rbx), %xmm0
 1428      08
 1429              	.LVL135:
 1430              	.LBB433:
 1431              	.LBB431:
  51:tests/test.cpp ****     g_total_tests++;
 1432              		.loc 2 51 0
 1433 086f 83C201   		addl	$1, %edx
 1434 0872 89150000 		movl	%edx, _ZL13g_total_tests(%rip)
 1434      0000
  53:tests/test.cpp ****     if(!condition) {
 1435              		.loc 2 53 0
 1436 0878 0F2EC2   		ucomiss	%xmm2, %xmm0
 1437 087b 7A13     		jp	.L87
 1438 087d 7511     		jne	.L87
 1439              	.LBE431:
 1440              	.LBE433:
 208:tests/test.cpp ****     heatmap_free(hm);
 1441              		.loc 2 208 0
 1442 087f 4889DF   		movq	%rbx, %rdi
 1443              	.LBE413:
 209:tests/test.cpp **** }
 1444              		.loc 2 209 0
 1445 0882 5B       		popq	%rbx
 1446              		.cfi_remember_state
 1447              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccrWPnlb.s 			page 84


 1448              	.LVL136:
 1449              	.LBB438:
 208:tests/test.cpp ****     heatmap_free(hm);
 1450              		.loc 2 208 0
 1451 0883 E9000000 		jmp	heatmap_free@PLT
 1451      00
 1452              	.LVL137:
 1453 0888 0F1F8400 		.p2align 4,,10
 1453      00000000 
 1454              		.p2align 3
 1455              	.L87:
 1456              		.cfi_restore_state
 1457              	.LBB434:
 1458              	.LBB432:
 1459 0890 488D3D00 		leaq	.LC13(%rip), %rdi
 1459      000000
 1460 0897 BECE0000 		movl	$206, %esi
 1460      00
 1461 089c E88FF7FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1461      FF
 1462              	.LVL138:
 1463              	.LBE432:
 1464              	.LBE434:
 1465 08a1 4889DF   		movq	%rbx, %rdi
 1466              	.LBE438:
 209:tests/test.cpp **** }
 1467              		.loc 2 209 0
 1468 08a4 5B       		popq	%rbx
 1469              		.cfi_remember_state
 1470              		.cfi_def_cfa_offset 8
 1471              	.LVL139:
 1472              	.LBB439:
 208:tests/test.cpp ****     heatmap_free(hm);
 1473              		.loc 2 208 0
 1474 08a5 E9000000 		jmp	heatmap_free@PLT
 1474      00
 1475              	.LVL140:
 1476 08aa 660F1F44 		.p2align 4,,10
 1476      0000
 1477              		.p2align 3
 1478              	.L96:
 1479              		.cfi_restore_state
 1480              	.LBB435:
 1481              	.LBB428:
 1482 08b0 488D3D00 		leaq	.LC32(%rip), %rdi
 1482      000000
 1483 08b7 BECD0000 		movl	$205, %esi
 1483      00
 1484 08bc E86FF7FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1484      FF
 1485              	.LVL141:
 1486 08c1 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 1486      0000
 1487 08c7 EB9D     		jmp	.L83
 1488              	.LVL142:
 1489 08c9 0F1F8000 		.p2align 4,,10
 1489      000000
GAS LISTING /tmp/ccrWPnlb.s 			page 85


 1490              		.p2align 3
 1491              	.L86:
 1492              	.LBE428:
 1493              	.LBE435:
 1494              	.LBB436:
 1495              	.LBB422:
 1496 08d0 488D3D00 		leaq	.LC13(%rip), %rdi
 1496      000000
 1497 08d7 BEC70000 		movl	$199, %esi
 1497      00
 1498 08dc E84FF7FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1498      FF
 1499              	.LVL143:
 1500 08e1 E9EDFEFF 		jmp	.L81
 1500      FF
 1501              	.LVL144:
 1502 08e6 662E0F1F 		.p2align 4,,10
 1502      84000000 
 1502      0000
 1503              		.p2align 3
 1504              	.L95:
 1505              	.LBE422:
 1506              	.LBE436:
 1507              	.LBB437:
 1508              	.LBB418:
 1509 08f0 488D3D00 		leaq	.LC30(%rip), %rdi
 1509      000000
 1510 08f7 BEC60000 		movl	$198, %esi
 1510      00
 1511 08fc E82FF7FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1511      FF
 1512              	.LVL145:
 1513 0901 8B150000 		movl	_ZL13g_total_tests(%rip), %edx
 1513      0000
 1514 0907 E9A6FEFF 		jmp	.L80
 1514      FF
 1515              	.LBE418:
 1516              	.LBE437:
 1517              	.LBE439:
 1518              		.cfi_endproc
 1519              	.LFE1517:
 1520              		.size	_Z33test_add_point_with_stamp_outsidev, .-_Z33test_add_point_with_stamp_outsidev
 1521              		.section	.text.unlikely
 1522              	.LCOLDE33:
 1523              		.text
 1524              	.LHOTE33:
 1525              		.section	.rodata.str1.8
 1526 0387 00       		.align 8
 1527              	.LC34:
 1528 0388 74686520 		.string	"the 1-radius stamp size is correct (s->w == 3 && s->h == 3)"
 1528      312D7261 
 1528      64697573 
 1528      20737461 
 1528      6D702073 
 1529 03c4 00000000 		.align 8
 1530              	.LC37:
 1531 03c8 74686520 		.string	"the 1-radius stamp data is correct (stamp_almost_eq(s, expected))"
GAS LISTING /tmp/ccrWPnlb.s 			page 86


 1531      312D7261 
 1531      64697573 
 1531      20737461 
 1531      6D702064 
 1532              		.section	.text.unlikely
 1533              	.LCOLDB38:
 1534              		.text
 1535              	.LHOTB38:
 1536 090c 0F1F4000 		.p2align 4,,15
 1537              		.globl	_Z14test_stamp_genv
 1538              		.type	_Z14test_stamp_genv, @function
 1539              	_Z14test_stamp_genv:
 1540              	.LFB1518:
 212:tests/test.cpp **** {
 1541              		.loc 2 212 0
 1542              		.cfi_startproc
 1543 0910 53       		pushq	%rbx
 1544              		.cfi_def_cfa_offset 16
 1545              		.cfi_offset 3, -16
 1546              	.LBB440:
 219:tests/test.cpp ****     heatmap_stamp_t* s = heatmap_stamp_gen(1);
 1547              		.loc 2 219 0
 1548 0911 BF010000 		movl	$1, %edi
 1548      00
 1549 0916 E8000000 		call	heatmap_stamp_gen@PLT
 1549      00
 1550              	.LVL146:
 1551 091b 4889C3   		movq	%rax, %rbx
 1552              	.LVL147:
 1553              	.LBB441:
 1554              	.LBB442:
  51:tests/test.cpp ****     g_total_tests++;
 1555              		.loc 2 51 0
 1556 091e 8B050000 		movl	_ZL13g_total_tests(%rip), %eax
 1556      0000
 1557              	.LVL148:
 1558 0924 448D4801 		leal	1(%rax), %r9d
  53:tests/test.cpp ****     if(!condition) {
 1559              		.loc 2 53 0
 1560 0928 48B80300 		movabsq	$12884901891, %rax
 1560      00000300 
 1560      0000
 1561 0932 48394308 		cmpq	%rax, 8(%rbx)
  51:tests/test.cpp ****     g_total_tests++;
 1562              		.loc 2 51 0
 1563 0936 44890D00 		movl	%r9d, _ZL13g_total_tests(%rip)
 1563      000000
  53:tests/test.cpp ****     if(!condition) {
 1564              		.loc 2 53 0
 1565 093d 7418     		je	.L98
 1566 093f 488D3D00 		leaq	.LC34(%rip), %rdi
 1566      000000
 1567 0946 BEDD0000 		movl	$221, %esi
 1567      00
 1568 094b E8E0F6FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1568      FF
 1569              	.LVL149:
GAS LISTING /tmp/ccrWPnlb.s 			page 87


 1570 0950 448B0D00 		movl	_ZL13g_total_tests(%rip), %r9d
 1570      000000
 1571              	.L98:
 1572              	.LVL150:
 1573              	.LBE442:
 1574              	.LBE441:
 1575              	.LBB443:
 1576              	.LBB444:
  88:tests/test.cpp ****     return almost_eq(s->buf, expected, s->w*s->h);
 1577              		.loc 2 88 0
 1578 0957 8B430C   		movl	12(%rbx), %eax
 1579 095a 488B33   		movq	(%rbx), %rsi
 1580              	.LVL151:
 1581 095d 0FAF4308 		imull	8(%rbx), %eax
 1582              	.LBB445:
 1583              	.LBB446:
  61:tests/test.cpp ****     for(size_t i = 0 ; i < n ; ++i) {
 1584              		.loc 2 61 0
 1585 0961 85C0     		testl	%eax, %eax
 1586              	.LBE446:
 1587              	.LBE445:
  88:tests/test.cpp ****     return almost_eq(s->buf, expected, s->w*s->h);
 1588              		.loc 2 88 0
 1589 0963 4189C0   		movl	%eax, %r8d
 1590              	.LVL152:
 1591              	.LBB454:
 1592              	.LBB453:
  61:tests/test.cpp ****     for(size_t i = 0 ; i < n ; ++i) {
 1593              		.loc 2 61 0
 1594 0966 7457     		je	.L99
 1595              	.LVL153:
  62:tests/test.cpp ****         if(std::abs(a[i] - b[i]) > 1e-6)
 1596              		.loc 2 62 0
 1597 0968 F30F1006 		movss	(%rsi), %xmm0
 1598              	.LBB447:
 1599              	.LBB448:
 1600              		.file 7 "/opt/gcc/4.9.2/include/c++/4.9.2/cmath"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // -*- C++ -*- C forwarding header.
   1:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccrWPnlb.s 			page 88


  20:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** /** @file include/cmath
  25:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  26:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *
  28:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  29:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  30:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  contained in the namespace @c std (except for names which are defined
  31:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  as macros in C).
  32:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  */
  33:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
  35:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // ISO C++ 14882: 26.5  C library
  36:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
  37:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #pragma GCC system_header
  39:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <bits/c++config.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <bits/cpp_type_traits.h>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <ext/type_traits.h>
  43:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <math.h>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef _GLIBCXX_CMATH
  46:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #define _GLIBCXX_CMATH 1
  47:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef abs
  50:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef div
  51:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef acos
  52:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef asin
  53:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef atan
  54:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef atan2
  55:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef ceil
  56:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef cos
  57:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef cosh
  58:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef exp
  59:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef fabs
  60:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef floor
  61:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef fmod
  62:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef frexp
  63:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef ldexp
  64:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef log
  65:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef log10
  66:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef modf
  67:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef pow
  68:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sin
  69:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sinh
  70:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sqrt
  71:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef tan
  72:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef tanh
  73:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** {
  76:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccrWPnlb.s 			page 89


  77:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  79:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR double
  80:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   abs(double __x)
  81:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabs(__x); }
  82:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
  83:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  85:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
  86:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   abs(float __x)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabsf(__x); }
 1601              		.loc 7 88 0
 1602 096c F30F100D 		movss	.LC35(%rip), %xmm1
 1602      00000000 
 1603              	.LBE448:
 1604              	.LBE447:
  62:tests/test.cpp ****         if(std::abs(a[i] - b[i]) > 1e-6)
 1605              		.loc 2 62 0
 1606 0974 F30F5C05 		subss	_ZZ14test_stamp_genvE8expected(%rip), %xmm0
 1606      00000000 
 1607              	.LVL154:
 1608 097c F20F1015 		movsd	.LC36(%rip), %xmm2
 1608      00000000 
 1609              	.LBB451:
 1610              	.LBB449:
 1611              		.loc 7 88 0
 1612 0984 0F54C1   		andps	%xmm1, %xmm0
 1613              	.LVL155:
 1614              	.LBE449:
 1615              	.LBE451:
  62:tests/test.cpp ****         if(std::abs(a[i] - b[i]) > 1e-6)
 1616              		.loc 2 62 0
 1617 0987 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1618 098b 660F2EC2 		ucomisd	%xmm2, %xmm0
 1619 098f 7747     		ja	.L100
 1620 0991 31D2     		xorl	%edx, %edx
 1621 0993 EB21     		jmp	.L101
 1622              	.LVL156:
 1623              		.p2align 4,,10
 1624 0995 0F1F00   		.p2align 3
 1625              	.L102:
 1626 0998 488D0D00 		leaq	_ZZ14test_stamp_genvE8expected(%rip), %rcx
 1626      000000
 1627 099f F30F1004 		movss	(%rsi,%rdx,4), %xmm0
 1627      96
 1628 09a4 F30F5C04 		subss	(%rcx,%rdx,4), %xmm0
 1628      91
 1629              	.LBB452:
 1630              	.LBB450:
 1631              		.loc 7 88 0
 1632 09a9 0F54C1   		andps	%xmm1, %xmm0
 1633              	.LBE450:
 1634              	.LBE452:
  62:tests/test.cpp ****         if(std::abs(a[i] - b[i]) > 1e-6)
 1635              		.loc 2 62 0
 1636 09ac F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1637 09b0 660F2EC2 		ucomisd	%xmm2, %xmm0
GAS LISTING /tmp/ccrWPnlb.s 			page 90


 1638 09b4 7722     		ja	.L100
 1639              	.LVL157:
 1640              	.L101:
  61:tests/test.cpp ****     for(size_t i = 0 ; i < n ; ++i) {
 1641              		.loc 2 61 0
 1642 09b6 4883C201 		addq	$1, %rdx
 1643              	.LVL158:
 1644 09ba 4939D0   		cmpq	%rdx, %r8
 1645 09bd 75D9     		jne	.L102
 1646              	.LVL159:
 1647              	.L99:
 1648              	.LBE453:
 1649              	.LBE454:
 1650              	.LBE444:
 1651              	.LBE443:
 224:tests/test.cpp ****     heatmap_stamp_free(s);
 1652              		.loc 2 224 0
 1653 09bf 4889DF   		movq	%rbx, %rdi
 1654              	.LBB455:
 1655              	.LBB456:
  51:tests/test.cpp ****     g_total_tests++;
 1656              		.loc 2 51 0
 1657 09c2 4183C101 		addl	$1, %r9d
 1658              	.LBE456:
 1659              	.LBE455:
 1660              	.LBE440:
 225:tests/test.cpp **** }
 1661              		.loc 2 225 0
 1662 09c6 5B       		popq	%rbx
 1663              		.cfi_remember_state
 1664              		.cfi_def_cfa_offset 8
 1665              	.LVL160:
 1666              	.LBB461:
 1667              	.LBB459:
 1668              	.LBB457:
  51:tests/test.cpp ****     g_total_tests++;
 1669              		.loc 2 51 0
 1670 09c7 44890D00 		movl	%r9d, _ZL13g_total_tests(%rip)
 1670      000000
 1671              	.LBE457:
 1672              	.LBE459:
 224:tests/test.cpp ****     heatmap_stamp_free(s);
 1673              		.loc 2 224 0
 1674 09ce E9000000 		jmp	heatmap_stamp_free@PLT
 1674      00
 1675              	.LVL161:
 1676              		.p2align 4,,10
 1677 09d3 0F1F4400 		.p2align 3
 1677      00
 1678              	.L100:
 1679              		.cfi_restore_state
 1680              	.LBB460:
 1681              	.LBB458:
 1682 09d8 488D3D00 		leaq	.LC37(%rip), %rdi
 1682      000000
  51:tests/test.cpp ****     g_total_tests++;
 1683              		.loc 2 51 0
GAS LISTING /tmp/ccrWPnlb.s 			page 91


 1684 09df 4183C101 		addl	$1, %r9d
 1685 09e3 BEDE0000 		movl	$222, %esi
 1685      00
 1686              	.LVL162:
 1687 09e8 44890D00 		movl	%r9d, _ZL13g_total_tests(%rip)
 1687      000000
 1688 09ef E83CF6FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1688      FF
 1689              	.LVL163:
 1690              	.LBE458:
 1691              	.LBE460:
 224:tests/test.cpp ****     heatmap_stamp_free(s);
 1692              		.loc 2 224 0
 1693 09f4 4889DF   		movq	%rbx, %rdi
 1694              	.LBE461:
 225:tests/test.cpp **** }
 1695              		.loc 2 225 0
 1696 09f7 5B       		popq	%rbx
 1697              		.cfi_def_cfa_offset 8
 1698              	.LVL164:
 1699              	.LBB462:
 224:tests/test.cpp ****     heatmap_stamp_free(s);
 1700              		.loc 2 224 0
 1701 09f8 E9000000 		jmp	heatmap_stamp_free@PLT
 1701      00
 1702              	.LVL165:
 1703              	.LBE462:
 1704              		.cfi_endproc
 1705              	.LFE1518:
 1706              		.size	_Z14test_stamp_genv, .-_Z14test_stamp_genv
 1707              		.section	.text.unlikely
 1708              	.LCOLDE38:
 1709              		.text
 1710              	.LHOTE38:
 1711              		.section	.rodata.str1.8
 1712 040a 00000000 		.align 8
 1712      0000
 1713              	.LC39:
 1714 0410 74686520 		.string	"the 1-radius nonlinear .5-stamp size is correct (s1->w == 3 && s1->h == 3)"
 1714      312D7261 
 1714      64697573 
 1714      206E6F6E 
 1714      6C696E65 
 1715 045b 00000000 		.align 8
 1715      00
 1716              	.LC40:
 1717 0460 74686520 		.string	"the 1-radius nonlinear -1-stamp size is correct (s2->w == 3 && s2->h == 3)"
 1717      312D7261 
 1717      64697573 
 1717      206E6F6E 
 1717      6C696E65 
 1718 04ab 00000000 		.align 8
 1718      00
 1719              	.LC41:
 1720 04b0 74686520 		.string	"the 1-radius nonlinear 10-stamp size is correct (s3->w == 3 && s3->h == 3)"
 1720      312D7261 
 1720      64697573 
GAS LISTING /tmp/ccrWPnlb.s 			page 92


 1720      206E6F6E 
 1720      6C696E65 
 1721 04fb 00000000 		.align 8
 1721      00
 1722              	.LC42:
 1723 0500 74686520 		.string	"the 1-radius nonlinear .5-stamp data is correct (stamp_eq(s1, halfs))"
 1723      312D7261 
 1723      64697573 
 1723      206E6F6E 
 1723      6C696E65 
 1724 0546 0000     		.align 8
 1725              	.LC43:
 1726 0548 74686520 		.string	"the 1-radius nonlinear -1-stamp data is correct (stamp_eq(s2, ones))"
 1726      312D7261 
 1726      64697573 
 1726      206E6F6E 
 1726      6C696E65 
 1727 058d 000000   		.align 8
 1728              	.LC44:
 1729 0590 74686520 		.string	"the 1-radius nonlinear 10-stamp data is correct (stamp_eq(s3, zeros))"
 1729      312D7261 
 1729      64697573 
 1729      206E6F6E 
 1729      6C696E65 
 1730              		.section	.text.unlikely
 1731              	.LCOLDB45:
 1732              		.text
 1733              	.LHOTB45:
 1734 09fd 0F1F00   		.p2align 4,,15
 1735              		.globl	_Z24test_stamp_gen_nonlinearv
 1736              		.type	_Z24test_stamp_gen_nonlinearv, @function
 1737              	_Z24test_stamp_gen_nonlinearv:
 1738              	.LFB1519:
 228:tests/test.cpp **** {
 1739              		.loc 2 228 0
 1740              		.cfi_startproc
 1741              	.LVL166:
 1742 0a00 4155     		pushq	%r13
 1743              		.cfi_def_cfa_offset 16
 1744              		.cfi_offset 13, -16
 1745 0a02 4154     		pushq	%r12
 1746              		.cfi_def_cfa_offset 24
 1747              		.cfi_offset 12, -24
 1748              	.LBB463:
 247:tests/test.cpp ****     heatmap_stamp_t* s1 = heatmap_stamp_gen_nonlinear(1, [](float){return 0.5f;});
 1749              		.loc 2 247 0
 1750 0a04 488D35F5 		leaq	_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf(%rip), %rsi
 1750      F5FFFF
 1751              	.LBE463:
 228:tests/test.cpp **** {
 1752              		.loc 2 228 0
 1753 0a0b 55       		pushq	%rbp
 1754              		.cfi_def_cfa_offset 32
 1755              		.cfi_offset 6, -32
 1756 0a0c 53       		pushq	%rbx
 1757              		.cfi_def_cfa_offset 40
 1758              		.cfi_offset 3, -40
GAS LISTING /tmp/ccrWPnlb.s 			page 93


 1759              	.LBB498:
 247:tests/test.cpp ****     heatmap_stamp_t* s1 = heatmap_stamp_gen_nonlinear(1, [](float){return 0.5f;});
 1760              		.loc 2 247 0
 1761 0a0d BF010000 		movl	$1, %edi
 1761      00
 1762              	.LBE498:
 228:tests/test.cpp **** {
 1763              		.loc 2 228 0
 1764 0a12 4883EC08 		subq	$8, %rsp
 1765              		.cfi_def_cfa_offset 48
 1766              	.LBB499:
 247:tests/test.cpp ****     heatmap_stamp_t* s1 = heatmap_stamp_gen_nonlinear(1, [](float){return 0.5f;});
 1767              		.loc 2 247 0
 1768 0a16 E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 1768      00
 1769              	.LVL167:
 248:tests/test.cpp ****     heatmap_stamp_t* s2 = heatmap_stamp_gen_nonlinear(1, [](float){return -1.0f;});
 1770              		.loc 2 248 0
 1771 0a1b 488D35EE 		leaq	_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUNEf(%rip), %rsi
 1771      F5FFFF
 1772 0a22 BF010000 		movl	$1, %edi
 1772      00
 247:tests/test.cpp ****     heatmap_stamp_t* s1 = heatmap_stamp_gen_nonlinear(1, [](float){return 0.5f;});
 1773              		.loc 2 247 0
 1774 0a27 4989C5   		movq	%rax, %r13
 1775              	.LVL168:
 248:tests/test.cpp ****     heatmap_stamp_t* s2 = heatmap_stamp_gen_nonlinear(1, [](float){return -1.0f;});
 1776              		.loc 2 248 0
 1777 0a2a E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 1777      00
 1778              	.LVL169:
 1779              		.loc 2 249 0
 1780 0a2f 488D35EA 		leaq	_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUNEf(%rip), %rsi
 1780      F5FFFF
 1781 0a36 BF010000 		movl	$1, %edi
 1781      00
 248:tests/test.cpp ****     heatmap_stamp_t* s2 = heatmap_stamp_gen_nonlinear(1, [](float){return -1.0f;});
 1782              		.loc 2 248 0
 1783 0a3b 4989C4   		movq	%rax, %r12
 1784              	.LVL170:
 1785              		.loc 2 249 0
 1786 0a3e E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 1786      00
 1787              	.LVL171:
 1788 0a43 4889C5   		movq	%rax, %rbp
 1789              	.LVL172:
 1790              	.LBB464:
 1791              	.LBB465:
  51:tests/test.cpp ****     g_total_tests++;
 1792              		.loc 2 51 0
 1793 0a46 8B050000 		movl	_ZL13g_total_tests(%rip), %eax
 1793      0000
 1794              	.LVL173:
 1795 0a4c 8D5801   		leal	1(%rax), %ebx
  53:tests/test.cpp ****     if(!condition) {
 1796              		.loc 2 53 0
 1797 0a4f 48B80300 		movabsq	$12884901891, %rax
GAS LISTING /tmp/ccrWPnlb.s 			page 94


 1797      00000300 
 1797      0000
 1798 0a59 49394508 		cmpq	%rax, 8(%r13)
  51:tests/test.cpp ****     g_total_tests++;
 1799              		.loc 2 51 0
 1800 0a5d 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
 1800      0000
  53:tests/test.cpp ****     if(!condition) {
 1801              		.loc 2 53 0
 1802 0a63 7417     		je	.L109
 1803 0a65 488D3D00 		leaq	.LC39(%rip), %rdi
 1803      000000
 1804 0a6c BEFB0000 		movl	$251, %esi
 1804      00
 1805 0a71 E8BAF5FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1805      FF
 1806              	.LVL174:
 1807 0a76 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 1807      0000
 1808              	.L109:
 1809              	.LVL175:
 1810              	.LBE465:
 1811              	.LBE464:
 1812              	.LBB466:
 1813              	.LBB467:
  51:tests/test.cpp ****     g_total_tests++;
 1814              		.loc 2 51 0 discriminator 2
 1815 0a7c 83C301   		addl	$1, %ebx
  53:tests/test.cpp ****     if(!condition) {
 1816              		.loc 2 53 0 discriminator 2
 1817 0a7f 48B80300 		movabsq	$12884901891, %rax
 1817      00000300 
 1817      0000
 1818 0a89 49394424 		cmpq	%rax, 8(%r12)
 1818      08
  51:tests/test.cpp ****     g_total_tests++;
 1819              		.loc 2 51 0 discriminator 2
 1820 0a8e 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
 1820      0000
  53:tests/test.cpp ****     if(!condition) {
 1821              		.loc 2 53 0 discriminator 2
 1822 0a94 7417     		je	.L110
 1823 0a96 488D3D00 		leaq	.LC40(%rip), %rdi
 1823      000000
 1824 0a9d BEFC0000 		movl	$252, %esi
 1824      00
 1825 0aa2 E889F5FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1825      FF
 1826              	.LVL176:
 1827 0aa7 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 1827      0000
 1828              	.L110:
 1829              	.LVL177:
 1830              	.LBE467:
 1831              	.LBE466:
 1832              	.LBB468:
 1833              	.LBB469:
GAS LISTING /tmp/ccrWPnlb.s 			page 95


  51:tests/test.cpp ****     g_total_tests++;
 1834              		.loc 2 51 0 discriminator 2
 1835 0aad 83C301   		addl	$1, %ebx
  53:tests/test.cpp ****     if(!condition) {
 1836              		.loc 2 53 0 discriminator 2
 1837 0ab0 48B80300 		movabsq	$12884901891, %rax
 1837      00000300 
 1837      0000
 1838 0aba 48394508 		cmpq	%rax, 8(%rbp)
  51:tests/test.cpp ****     g_total_tests++;
 1839              		.loc 2 51 0 discriminator 2
 1840 0abe 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
 1840      0000
  53:tests/test.cpp ****     if(!condition) {
 1841              		.loc 2 53 0 discriminator 2
 1842 0ac4 7417     		je	.L111
 1843 0ac6 488D3D00 		leaq	.LC41(%rip), %rdi
 1843      000000
 1844 0acd BEFD0000 		movl	$253, %esi
 1844      00
 1845 0ad2 E859F5FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1845      FF
 1846              	.LVL178:
 1847 0ad7 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 1847      0000
 1848              	.L111:
 1849              	.LVL179:
 1850              	.LBE469:
 1851              	.LBE468:
 1852              	.LBB470:
 1853              	.LBB471:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1854              		.loc 2 83 0 discriminator 2
 1855 0add 418B450C 		movl	12(%r13), %eax
 1856 0ae1 418B5508 		movl	8(%r13), %edx
 1857 0ae5 488D3D00 		leaq	_ZZ24test_stamp_gen_nonlinearvE5halfs(%rip), %rdi
 1857      000000
 1858 0aec 498B7500 		movq	0(%r13), %rsi
 1859              	.LBE471:
 1860              	.LBE470:
 1861              	.LBB473:
 1862              	.LBB474:
  51:tests/test.cpp ****     g_total_tests++;
 1863              		.loc 2 51 0 discriminator 2
 1864 0af0 83C301   		addl	$1, %ebx
 1865 0af3 480FAFD0 		imulq	%rax, %rdx
 1866              	.LBE474:
 1867              	.LBE473:
 1868              	.LBB477:
 1869              	.LBB472:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1870              		.loc 2 83 0 discriminator 2
 1871 0af7 48C1E202 		salq	$2, %rdx
 1872 0afb E8000000 		call	memcmp@PLT
 1872      00
 1873              	.LVL180:
 1874              	.LBE472:
GAS LISTING /tmp/ccrWPnlb.s 			page 96


 1875              	.LBE477:
 1876              	.LBB478:
 1877              	.LBB475:
  53:tests/test.cpp ****     if(!condition) {
 1878              		.loc 2 53 0 discriminator 2
 1879 0b00 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1880              		.loc 2 51 0 discriminator 2
 1881 0b02 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
 1881      0000
  53:tests/test.cpp ****     if(!condition) {
 1882              		.loc 2 53 0 discriminator 2
 1883 0b08 0F85B200 		jne	.L125
 1883      0000
 1884              	.L112:
 1885              	.LVL181:
 1886              	.LBE475:
 1887              	.LBE478:
 1888              	.LBB479:
 1889              	.LBB480:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1890              		.loc 2 83 0 discriminator 2
 1891 0b0e 418B4424 		movl	12(%r12), %eax
 1891      0C
 1892 0b13 418B5424 		movl	8(%r12), %edx
 1892      08
 1893 0b18 488D3D00 		leaq	_ZZ24test_stamp_gen_nonlinearvE4ones(%rip), %rdi
 1893      000000
 1894 0b1f 498B3424 		movq	(%r12), %rsi
 1895              	.LBE480:
 1896              	.LBE479:
 1897              	.LBB482:
 1898              	.LBB483:
  51:tests/test.cpp ****     g_total_tests++;
 1899              		.loc 2 51 0 discriminator 2
 1900 0b23 83C301   		addl	$1, %ebx
 1901 0b26 480FAFD0 		imulq	%rax, %rdx
 1902              	.LBE483:
 1903              	.LBE482:
 1904              	.LBB486:
 1905              	.LBB481:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1906              		.loc 2 83 0 discriminator 2
 1907 0b2a 48C1E202 		salq	$2, %rdx
 1908 0b2e E8000000 		call	memcmp@PLT
 1908      00
 1909              	.LVL182:
 1910              	.LBE481:
 1911              	.LBE486:
 1912              	.LBB487:
 1913              	.LBB484:
  53:tests/test.cpp ****     if(!condition) {
 1914              		.loc 2 53 0 discriminator 2
 1915 0b33 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1916              		.loc 2 51 0 discriminator 2
 1917 0b35 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
GAS LISTING /tmp/ccrWPnlb.s 			page 97


 1917      0000
  53:tests/test.cpp ****     if(!condition) {
 1918              		.loc 2 53 0 discriminator 2
 1919 0b3b 7563     		jne	.L126
 1920              	.L113:
 1921              	.LVL183:
 1922              	.LBE484:
 1923              	.LBE487:
 1924              	.LBB488:
 1925              	.LBB489:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1926              		.loc 2 83 0 discriminator 2
 1927 0b3d 8B450C   		movl	12(%rbp), %eax
 1928 0b40 8B5508   		movl	8(%rbp), %edx
 1929 0b43 488D3D00 		leaq	_ZZ24test_stamp_gen_nonlinearvE5zeros(%rip), %rdi
 1929      000000
 1930 0b4a 488B7500 		movq	0(%rbp), %rsi
 1931              	.LBE489:
 1932              	.LBE488:
 1933              	.LBB491:
 1934              	.LBB492:
  51:tests/test.cpp ****     g_total_tests++;
 1935              		.loc 2 51 0 discriminator 2
 1936 0b4e 83C301   		addl	$1, %ebx
 1937 0b51 480FAFD0 		imulq	%rax, %rdx
 1938              	.LBE492:
 1939              	.LBE491:
 1940              	.LBB494:
 1941              	.LBB490:
  83:tests/test.cpp ****     return 0 == memcmp(expected, s->buf, sizeof(float)*s->w*s->h);
 1942              		.loc 2 83 0 discriminator 2
 1943 0b55 48C1E202 		salq	$2, %rdx
 1944 0b59 E8000000 		call	memcmp@PLT
 1944      00
 1945              	.LVL184:
 1946              	.LBE490:
 1947              	.LBE494:
 1948              	.LBB495:
 1949              	.LBB493:
  53:tests/test.cpp ****     if(!condition) {
 1950              		.loc 2 53 0 discriminator 2
 1951 0b5e 85C0     		testl	%eax, %eax
  51:tests/test.cpp ****     g_total_tests++;
 1952              		.loc 2 51 0 discriminator 2
 1953 0b60 891D0000 		movl	%ebx, _ZL13g_total_tests(%rip)
 1953      0000
  53:tests/test.cpp ****     if(!condition) {
 1954              		.loc 2 53 0 discriminator 2
 1955 0b66 7411     		je	.L114
 1956 0b68 488D3D00 		leaq	.LC44(%rip), %rdi
 1956      000000
 1957 0b6f BE000100 		movl	$256, %esi
 1957      00
 1958 0b74 E8B7F4FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 1958      FF
 1959              	.LVL185:
 1960              	.L114:
GAS LISTING /tmp/ccrWPnlb.s 			page 98


 1961              	.LBE493:
 1962              	.LBE495:
 249:tests/test.cpp **** 
 250:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear .5-stamp size is correct", s1->w == 3 && s1->h == 3);
 251:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear -1-stamp size is correct", s2->w == 3 && s2->h == 3);
 252:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear 10-stamp size is correct", s3->w == 3 && s3->h == 3);
 253:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear .5-stamp data is correct", stamp_eq(s1, halfs));
 254:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear -1-stamp data is correct", stamp_eq(s2, ones));
 255:tests/test.cpp ****     ENSURE_THAT("the 1-radius nonlinear 10-stamp data is correct", stamp_eq(s3, zeros));
 256:tests/test.cpp **** 
 257:tests/test.cpp ****     heatmap_stamp_free(s1);
 1963              		.loc 2 258 0 discriminator 2
 1964 0b79 4C89EF   		movq	%r13, %rdi
 1965 0b7c E8000000 		call	heatmap_stamp_free@PLT
 1965      00
 1966              	.LVL186:
 258:tests/test.cpp ****     heatmap_stamp_free(s2);
 1967              		.loc 2 259 0 discriminator 2
 1968 0b81 4C89E7   		movq	%r12, %rdi
 1969 0b84 E8000000 		call	heatmap_stamp_free@PLT
 1969      00
 1970              	.LVL187:
 1971              	.LBE499:
 259:tests/test.cpp ****     heatmap_stamp_free(s3);
 260:tests/test.cpp **** }
 1972              		.loc 2 261 0 discriminator 2
 1973 0b89 4883C408 		addq	$8, %rsp
 1974              		.cfi_remember_state
 1975              		.cfi_def_cfa_offset 40
 1976              	.LBB500:
 260:tests/test.cpp **** }
 1977              		.loc 2 260 0 discriminator 2
 1978 0b8d 4889EF   		movq	%rbp, %rdi
 1979              	.LBE500:
 1980              		.loc 2 261 0 discriminator 2
 1981 0b90 5B       		popq	%rbx
 1982              		.cfi_def_cfa_offset 32
 1983 0b91 5D       		popq	%rbp
 1984              		.cfi_def_cfa_offset 24
 1985              	.LVL188:
 1986 0b92 415C     		popq	%r12
 1987              		.cfi_def_cfa_offset 16
 1988              	.LVL189:
 1989 0b94 415D     		popq	%r13
 1990              		.cfi_def_cfa_offset 8
 1991              	.LVL190:
 1992              	.LBB501:
 260:tests/test.cpp **** }
 1993              		.loc 2 260 0 discriminator 2
 1994 0b96 E9000000 		jmp	heatmap_stamp_free@PLT
 1994      00
 1995              	.LVL191:
 1996 0b9b 0F1F4400 		.p2align 4,,10
 1996      00
 1997              		.p2align 3
 1998              	.L126:
 1999              		.cfi_restore_state
GAS LISTING /tmp/ccrWPnlb.s 			page 99


 2000              	.LBB496:
 2001              	.LBB485:
 2002 0ba0 488D3D00 		leaq	.LC43(%rip), %rdi
 2002      000000
 2003 0ba7 BEFF0000 		movl	$255, %esi
 2003      00
 2004 0bac E87FF4FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2004      FF
 2005              	.LVL192:
 2006 0bb1 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 2006      0000
 2007 0bb7 EB84     		jmp	.L113
 2008              	.LVL193:
 2009 0bb9 0F1F8000 		.p2align 4,,10
 2009      000000
 2010              		.p2align 3
 2011              	.L125:
 2012              	.LBE485:
 2013              	.LBE496:
 2014              	.LBB497:
 2015              	.LBB476:
 2016 0bc0 488D3D00 		leaq	.LC42(%rip), %rdi
 2016      000000
 2017 0bc7 BEFE0000 		movl	$254, %esi
 2017      00
 2018 0bcc E85FF4FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2018      FF
 2019              	.LVL194:
 2020 0bd1 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 2020      0000
 2021 0bd7 E932FFFF 		jmp	.L112
 2021      FF
 2022              	.LBE476:
 2023              	.LBE497:
 2024              	.LBE501:
 2025              		.cfi_endproc
 2026              	.LFE1519:
 2027              		.size	_Z24test_stamp_gen_nonlinearv, .-_Z24test_stamp_gen_nonlinearv
 2028              		.section	.text.unlikely
 2029              	.LCOLDE45:
 2030              		.text
 2031              	.LHOTE45:
 2032              		.section	.rodata.str1.8
 2033 05d6 0000     		.align 8
 2034              	.LC46:
 2035 05d8 656D7074 		.string	"empty rendered 3x3 heatmap is correct (0 == memcmp(img, expected, 3*3*4))"
 2035      79207265 
 2035      6E646572 
 2035      65642033 
 2035      78332068 
 2036              		.section	.text.unlikely
 2037              	.LCOLDB47:
 2038              		.text
 2039              	.LHOTB47:
 2040 0bdc 0F1F4000 		.p2align 4,,15
 2041              		.globl	_Z22test_render_to_nothingv
 2042              		.type	_Z22test_render_to_nothingv, @function
GAS LISTING /tmp/ccrWPnlb.s 			page 100


 2043              	_Z22test_render_to_nothingv:
 2044              	.LFB1529:
 261:tests/test.cpp **** 
 262:tests/test.cpp **** void test_render_to_nothing()
 263:tests/test.cpp **** {
 2045              		.loc 2 264 0
 2046              		.cfi_startproc
 2047 0be0 55       		pushq	%rbp
 2048              		.cfi_def_cfa_offset 16
 2049              		.cfi_offset 6, -16
 2050 0be1 53       		pushq	%rbx
 2051              		.cfi_def_cfa_offset 24
 2052              		.cfi_offset 3, -24
 2053              	.LBB502:
 264:tests/test.cpp ****     static unsigned char expected[] = {
 265:tests/test.cpp ****         0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,
 266:tests/test.cpp ****         0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,
 267:tests/test.cpp ****         0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,
 268:tests/test.cpp ****     };
 269:tests/test.cpp **** 
 270:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 2054              		.loc 2 271 0
 2055 0be2 BE030000 		movl	$3, %esi
 2055      00
 2056 0be7 BF030000 		movl	$3, %edi
 2056      00
 2057              	.LBE502:
 264:tests/test.cpp ****     static unsigned char expected[] = {
 2058              		.loc 2 264 0
 2059 0bec 4883EC38 		subq	$56, %rsp
 2060              		.cfi_def_cfa_offset 80
 2061              	.LBB505:
 2062              		.loc 2 271 0
 2063 0bf0 E8000000 		call	heatmap_new@PLT
 2063      00
 2064              	.LVL195:
 2065 0bf5 4889C3   		movq	%rax, %rbx
 2066              	.LVL196:
 271:tests/test.cpp **** 
 272:tests/test.cpp ****     unsigned char img[3*3*4] = {1};
 273:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2067              		.loc 2 274 0
 2068 0bf8 488B0500 		movq	heatmap_cs_b2w@GOTPCREL(%rip), %rax
 2068      000000
 2069              	.LVL197:
 2070 0bff 4889E2   		movq	%rsp, %rdx
 2071 0c02 4889DF   		movq	%rbx, %rdi
 273:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2072              		.loc 2 273 0
 2073 0c05 48C70424 		movq	$0, (%rsp)
 2073      00000000 
 2074 0c0d 48C74424 		movq	$0, 8(%rsp)
 2074      08000000 
 2074      00
 2075 0c16 48C74424 		movq	$0, 16(%rsp)
 2075      10000000 
 2075      00
GAS LISTING /tmp/ccrWPnlb.s 			page 101


 2076 0c1f 48C74424 		movq	$0, 24(%rsp)
 2076      18000000 
 2076      00
 2077              		.loc 2 274 0
 2078 0c28 488B30   		movq	(%rax), %rsi
 273:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2079              		.loc 2 273 0
 2080 0c2b C7442420 		movl	$0, 32(%rsp)
 2080      00000000 
 2081 0c33 C6042401 		movb	$1, (%rsp)
 2082              		.loc 2 274 0
 2083 0c37 E8000000 		call	heatmap_render_to@PLT
 2083      00
 2084              	.LVL198:
 274:tests/test.cpp ****     ENSURE_THAT("empty rendered 3x3 heatmap is correct", 0 == memcmp(img, expected, 3*3*4));
 2085              		.loc 2 275 0
 2086 0c3c 488D3500 		leaq	_ZZ22test_render_to_nothingvE8expected(%rip), %rsi
 2086      000000
 2087 0c43 BA240000 		movl	$36, %edx
 2087      00
 2088 0c48 4889E7   		movq	%rsp, %rdi
 2089 0c4b E8000000 		call	memcmp@PLT
 2089      00
 2090              	.LVL199:
 2091              	.LBB503:
 2092              	.LBB504:
  51:tests/test.cpp ****     g_total_tests++;
 2093              		.loc 2 51 0
 2094 0c50 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 2094      000001
  53:tests/test.cpp ****     if(!condition) {
 2095              		.loc 2 53 0
 2096 0c57 85C0     		testl	%eax, %eax
 2097 0c59 7411     		je	.L128
 2098 0c5b 488D3D00 		leaq	.LC46(%rip), %rdi
 2098      000000
 2099 0c62 BE130100 		movl	$275, %esi
 2099      00
 2100 0c67 E8C4F3FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2100      FF
 2101              	.LVL200:
 2102              	.L128:
 2103              	.LBE504:
 2104              	.LBE503:
 275:tests/test.cpp **** 
 276:tests/test.cpp ****     heatmap_free(hm);
 2105              		.loc 2 277 0
 2106 0c6c 4889DF   		movq	%rbx, %rdi
 2107 0c6f E8000000 		call	heatmap_free@PLT
 2107      00
 2108              	.LVL201:
 2109              	.LBE505:
 277:tests/test.cpp **** }
 2110              		.loc 2 278 0
 2111 0c74 4883C438 		addq	$56, %rsp
 2112              		.cfi_def_cfa_offset 24
 2113 0c78 5B       		popq	%rbx
GAS LISTING /tmp/ccrWPnlb.s 			page 102


 2114              		.cfi_def_cfa_offset 16
 2115              	.LVL202:
 2116 0c79 5D       		popq	%rbp
 2117              		.cfi_def_cfa_offset 8
 2118 0c7a C3       		ret
 2119              		.cfi_endproc
 2120              	.LFE1529:
 2121              		.size	_Z22test_render_to_nothingv, .-_Z22test_render_to_nothingv
 2122              		.section	.text.unlikely
 2123              	.LCOLDE47:
 2124              		.text
 2125              	.LHOTE47:
 2126              		.section	.rodata.str1.8
 2127 0622 00000000 		.align 8
 2127      0000
 2128              	.LC48:
 2129 0628 73696D70 		.string	"simple rendered 3x3 heatmap is correct (0 == memcmp(img, expected, 3*3*4))"
 2129      6C652072 
 2129      656E6465 
 2129      72656420 
 2129      33783320 
 2130              		.section	.text.unlikely
 2131              	.LCOLDB49:
 2132              		.text
 2133              	.LHOTB49:
 2134 0c7b 0F1F4400 		.p2align 4,,15
 2134      00
 2135              		.globl	_Z23test_render_to_creationv
 2136              		.type	_Z23test_render_to_creationv, @function
 2137              	_Z23test_render_to_creationv:
 2138              	.LFB1530:
 278:tests/test.cpp **** 
 279:tests/test.cpp **** void test_render_to_creation()
 280:tests/test.cpp **** {
 2139              		.loc 2 281 0
 2140              		.cfi_startproc
 2141 0c80 55       		pushq	%rbp
 2142              		.cfi_def_cfa_offset 16
 2143              		.cfi_offset 6, -16
 2144 0c81 53       		pushq	%rbx
 2145              		.cfi_def_cfa_offset 24
 2146              		.cfi_offset 3, -24
 2147              	.LBB506:
 281:tests/test.cpp ****     static unsigned char expected[] = {
 282:tests/test.cpp ****                 0, 0, 0, 0,   127, 127, 127, 255,   0, 0, 0, 0,
 283:tests/test.cpp ****         127, 127, 127, 255,   255, 255, 255, 255,   127, 127, 127, 255,
 284:tests/test.cpp ****                 0, 0, 0, 0,   127, 127, 127, 255,   0, 0, 0, 0,
 285:tests/test.cpp ****     };
 286:tests/test.cpp **** 
 287:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 2148              		.loc 2 288 0
 2149 0c82 BE030000 		movl	$3, %esi
 2149      00
 2150 0c87 BF030000 		movl	$3, %edi
 2150      00
 2151              	.LBE506:
 281:tests/test.cpp ****     static unsigned char expected[] = {
GAS LISTING /tmp/ccrWPnlb.s 			page 103


 2152              		.loc 2 281 0
 2153 0c8c 4883EC08 		subq	$8, %rsp
 2154              		.cfi_def_cfa_offset 32
 2155              	.LBB509:
 2156              		.loc 2 288 0
 2157 0c90 E8000000 		call	heatmap_new@PLT
 2157      00
 2158              	.LVL203:
 288:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2159              		.loc 2 289 0
 2160 0c95 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2160      000000
 2161 0c9c 4889C7   		movq	%rax, %rdi
 2162 0c9f BA010000 		movl	$1, %edx
 2162      00
 2163 0ca4 BE010000 		movl	$1, %esi
 2163      00
 288:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2164              		.loc 2 288 0
 2165 0ca9 4889C3   		movq	%rax, %rbx
 2166              	.LVL204:
 2167              		.loc 2 289 0
 2168 0cac E8000000 		call	heatmap_add_point_with_stamp@PLT
 2168      00
 2169              	.LVL205:
 289:tests/test.cpp **** 
 290:tests/test.cpp ****     unsigned char* img = heatmap_render_to(hm, heatmap_cs_b2w, nullptr);
 2170              		.loc 2 291 0
 2171 0cb1 488B0500 		movq	heatmap_cs_b2w@GOTPCREL(%rip), %rax
 2171      000000
 2172 0cb8 31D2     		xorl	%edx, %edx
 2173 0cba 4889DF   		movq	%rbx, %rdi
 2174 0cbd 488B30   		movq	(%rax), %rsi
 2175 0cc0 E8000000 		call	heatmap_render_to@PLT
 2175      00
 2176              	.LVL206:
 291:tests/test.cpp **** 
 292:tests/test.cpp ****     ENSURE_THAT("simple rendered 3x3 heatmap is correct", 0 == memcmp(img, expected, 3*3*4));
 2177              		.loc 2 293 0
 2178 0cc5 488D3500 		leaq	_ZZ23test_render_to_creationvE8expected(%rip), %rsi
 2178      000000
 2179 0ccc BA240000 		movl	$36, %edx
 2179      00
 2180 0cd1 4889C7   		movq	%rax, %rdi
 291:tests/test.cpp **** 
 2181              		.loc 2 291 0
 2182 0cd4 4889C5   		movq	%rax, %rbp
 2183              	.LVL207:
 2184              		.loc 2 293 0
 2185 0cd7 E8000000 		call	memcmp@PLT
 2185      00
 2186              	.LVL208:
 2187              	.LBB507:
 2188              	.LBB508:
  51:tests/test.cpp ****     g_total_tests++;
 2189              		.loc 2 51 0
 2190 0cdc 83050000 		addl	$1, _ZL13g_total_tests(%rip)
GAS LISTING /tmp/ccrWPnlb.s 			page 104


 2190      000001
  53:tests/test.cpp ****     if(!condition) {
 2191              		.loc 2 53 0
 2192 0ce3 85C0     		testl	%eax, %eax
 2193 0ce5 7411     		je	.L134
 2194 0ce7 488D3D00 		leaq	.LC48(%rip), %rdi
 2194      000000
 2195 0cee BE250100 		movl	$293, %esi
 2195      00
 2196 0cf3 E838F3FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2196      FF
 2197              	.LVL209:
 2198              	.L134:
 2199              	.LBE508:
 2200              	.LBE507:
 293:tests/test.cpp **** 
 294:tests/test.cpp ****     heatmap_free(hm);
 2201              		.loc 2 295 0
 2202 0cf8 4889DF   		movq	%rbx, %rdi
 2203 0cfb E8000000 		call	heatmap_free@PLT
 2203      00
 2204              	.LVL210:
 2205              	.LBE509:
 295:tests/test.cpp ****     free(img);
 296:tests/test.cpp **** }
 2206              		.loc 2 297 0
 2207 0d00 4883C408 		addq	$8, %rsp
 2208              		.cfi_def_cfa_offset 24
 2209              	.LBB510:
 296:tests/test.cpp **** }
 2210              		.loc 2 296 0
 2211 0d04 4889EF   		movq	%rbp, %rdi
 2212              	.LBE510:
 2213              		.loc 2 297 0
 2214 0d07 5B       		popq	%rbx
 2215              		.cfi_def_cfa_offset 16
 2216              	.LVL211:
 2217 0d08 5D       		popq	%rbp
 2218              		.cfi_def_cfa_offset 8
 2219              	.LVL212:
 2220              	.LBB511:
 296:tests/test.cpp **** }
 2221              		.loc 2 296 0
 2222 0d09 E9000000 		jmp	free@PLT
 2222      00
 2223              	.LVL213:
 2224              	.LBE511:
 2225              		.cfi_endproc
 2226              	.LFE1530:
 2227              		.size	_Z23test_render_to_creationv, .-_Z23test_render_to_creationv
 2228              		.section	.text.unlikely
 2229              	.LCOLDE49:
 2230              		.text
 2231              	.LHOTE49:
 2232              		.section	.rodata.str1.8
 2233 0673 00000000 		.align 8
 2233      00
GAS LISTING /tmp/ccrWPnlb.s 			page 105


 2234              	.LC50:
 2235 0678 74776F20 		.string	"two points on one spot don't change the outcome, due to normalization. (0 == memcmp(img, 
 2235      706F696E 
 2235      7473206F 
 2235      6E206F6E 
 2235      65207370 
 2236              		.section	.text.unlikely
 2237              	.LCOLDB51:
 2238              		.text
 2239              	.LHOTB51:
 2240 0d0e 6690     		.p2align 4,,15
 2241              		.globl	_Z26test_render_to_normalizingv
 2242              		.type	_Z26test_render_to_normalizingv, @function
 2243              	_Z26test_render_to_normalizingv:
 2244              	.LFB1531:
 297:tests/test.cpp **** 
 298:tests/test.cpp **** void test_render_to_normalizing()
 299:tests/test.cpp **** {
 2245              		.loc 2 300 0
 2246              		.cfi_startproc
 2247 0d10 4154     		pushq	%r12
 2248              		.cfi_def_cfa_offset 16
 2249              		.cfi_offset 12, -16
 2250 0d12 55       		pushq	%rbp
 2251              		.cfi_def_cfa_offset 24
 2252              		.cfi_offset 6, -24
 2253              	.LBB512:
 300:tests/test.cpp ****     static unsigned char expected[] = {
 301:tests/test.cpp ****                 0, 0, 0, 0,   127, 127, 127, 255,   0, 0, 0, 0,
 302:tests/test.cpp ****         127, 127, 127, 255,   255, 255, 255, 255,   127, 127, 127, 255,
 303:tests/test.cpp ****                 0, 0, 0, 0,   127, 127, 127, 255,   0, 0, 0, 0,
 304:tests/test.cpp ****     };
 305:tests/test.cpp **** 
 306:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 2254              		.loc 2 307 0
 2255 0d13 BE030000 		movl	$3, %esi
 2255      00
 2256              	.LBE512:
 300:tests/test.cpp ****     static unsigned char expected[] = {
 2257              		.loc 2 300 0
 2258 0d18 53       		pushq	%rbx
 2259              		.cfi_def_cfa_offset 32
 2260              		.cfi_offset 3, -32
 2261              	.LBB519:
 2262              		.loc 2 307 0
 2263 0d19 BF030000 		movl	$3, %edi
 2263      00
 2264              	.LBE519:
 300:tests/test.cpp ****     static unsigned char expected[] = {
 2265              		.loc 2 300 0
 2266 0d1e 4883EC30 		subq	$48, %rsp
 2267              		.cfi_def_cfa_offset 80
 2268              	.LBB520:
 2269              		.loc 2 307 0
 2270 0d22 E8000000 		call	heatmap_new@PLT
 2270      00
 2271              	.LVL214:
GAS LISTING /tmp/ccrWPnlb.s 			page 106


 307:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2272              		.loc 2 308 0
 2273 0d27 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2273      000000
 2274 0d2e 4889C7   		movq	%rax, %rdi
 2275 0d31 BA010000 		movl	$1, %edx
 2275      00
 2276 0d36 BE010000 		movl	$1, %esi
 2276      00
 307:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2277              		.loc 2 307 0
 2278 0d3b 4889C3   		movq	%rax, %rbx
 2279              	.LVL215:
 308:tests/test.cpp **** 
 309:tests/test.cpp ****     unsigned char img[3*3*4] = {1};
 310:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2280              		.loc 2 311 0
 2281 0d3e 4889E5   		movq	%rsp, %rbp
 308:tests/test.cpp **** 
 2282              		.loc 2 308 0
 2283 0d41 E8000000 		call	heatmap_add_point_with_stamp@PLT
 2283      00
 2284              	.LVL216:
 2285              		.loc 2 311 0
 2286 0d46 4C8B2500 		movq	heatmap_cs_b2w@GOTPCREL(%rip), %r12
 2286      000000
 2287 0d4d 4889E2   		movq	%rsp, %rdx
 2288 0d50 4889DF   		movq	%rbx, %rdi
 310:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2289              		.loc 2 310 0
 2290 0d53 48C70424 		movq	$0, (%rsp)
 2290      00000000 
 2291 0d5b 48C74424 		movq	$0, 8(%rsp)
 2291      08000000 
 2291      00
 2292 0d64 48C74424 		movq	$0, 16(%rsp)
 2292      10000000 
 2292      00
 2293 0d6d 48C74424 		movq	$0, 24(%rsp)
 2293      18000000 
 2293      00
 2294              		.loc 2 311 0
 2295 0d76 498B3424 		movq	(%r12), %rsi
 310:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2296              		.loc 2 310 0
 2297 0d7a C7442420 		movl	$0, 32(%rsp)
 2297      00000000 
 2298 0d82 C6042401 		movb	$1, (%rsp)
 2299              		.loc 2 311 0
 2300 0d86 E8000000 		call	heatmap_render_to@PLT
 2300      00
 2301              	.LVL217:
 311:tests/test.cpp **** 
 312:tests/test.cpp ****     ENSURE_THAT("simple rendered 3x3 heatmap is correct", 0 == memcmp(img, expected, 3*3*4));
 2302              		.loc 2 313 0
 2303 0d8b 488D3500 		leaq	_ZZ26test_render_to_normalizingvE8expected(%rip), %rsi
 2303      000000
GAS LISTING /tmp/ccrWPnlb.s 			page 107


 2304 0d92 BA240000 		movl	$36, %edx
 2304      00
 2305 0d97 4889E7   		movq	%rsp, %rdi
 2306 0d9a E8000000 		call	memcmp@PLT
 2306      00
 2307              	.LVL218:
 2308              	.LBB513:
 2309              	.LBB514:
  51:tests/test.cpp ****     g_total_tests++;
 2310              		.loc 2 51 0
 2311 0d9f 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 2311      000001
  53:tests/test.cpp ****     if(!condition) {
 2312              		.loc 2 53 0
 2313 0da6 85C0     		testl	%eax, %eax
 2314 0da8 756E     		jne	.L149
 2315              	.LVL219:
 2316              	.L140:
 2317              	.LBE514:
 2318              	.LBE513:
 313:tests/test.cpp **** 
 314:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2319              		.loc 2 315 0
 2320 0daa 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2320      000000
 2321 0db1 BA010000 		movl	$1, %edx
 2321      00
 2322 0db6 BE010000 		movl	$1, %esi
 2322      00
 2323 0dbb 4889DF   		movq	%rbx, %rdi
 2324 0dbe E8000000 		call	heatmap_add_point_with_stamp@PLT
 2324      00
 2325              	.LVL220:
 315:tests/test.cpp ****     heatmap_render_to(hm, heatmap_cs_b2w, img);
 2326              		.loc 2 316 0
 2327 0dc3 498B3424 		movq	(%r12), %rsi
 2328 0dc7 4889EA   		movq	%rbp, %rdx
 2329 0dca 4889DF   		movq	%rbx, %rdi
 2330 0dcd E8000000 		call	heatmap_render_to@PLT
 2330      00
 2331              	.LVL221:
 316:tests/test.cpp **** 
 317:tests/test.cpp ****     ENSURE_THAT("two points on one spot don't change the outcome, due to normalization.", 0 == memc
 2332              		.loc 2 318 0
 2333 0dd2 488D3500 		leaq	_ZZ26test_render_to_normalizingvE8expected(%rip), %rsi
 2333      000000
 2334 0dd9 BA240000 		movl	$36, %edx
 2334      00
 2335 0dde 4889EF   		movq	%rbp, %rdi
 2336 0de1 E8000000 		call	memcmp@PLT
 2336      00
 2337              	.LVL222:
 2338              	.LBB516:
 2339              	.LBB517:
  51:tests/test.cpp ****     g_total_tests++;
 2340              		.loc 2 51 0
 2341 0de6 83050000 		addl	$1, _ZL13g_total_tests(%rip)
GAS LISTING /tmp/ccrWPnlb.s 			page 108


 2341      000001
  53:tests/test.cpp ****     if(!condition) {
 2342              		.loc 2 53 0
 2343 0ded 85C0     		testl	%eax, %eax
 2344 0def 7411     		je	.L141
 2345 0df1 488D3D00 		leaq	.LC50(%rip), %rdi
 2345      000000
 2346 0df8 BE3E0100 		movl	$318, %esi
 2346      00
 2347 0dfd E82EF2FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2347      FF
 2348              	.LVL223:
 2349              	.L141:
 2350              	.LBE517:
 2351              	.LBE516:
 318:tests/test.cpp **** 
 319:tests/test.cpp ****     heatmap_free(hm);
 2352              		.loc 2 320 0
 2353 0e02 4889DF   		movq	%rbx, %rdi
 2354 0e05 E8000000 		call	heatmap_free@PLT
 2354      00
 2355              	.LVL224:
 2356              	.LBE520:
 320:tests/test.cpp ****     // TODO: (Also try negative and non-one-max stamps?)
 321:tests/test.cpp **** }
 2357              		.loc 2 322 0
 2358 0e0a 4883C430 		addq	$48, %rsp
 2359              		.cfi_remember_state
 2360              		.cfi_def_cfa_offset 32
 2361 0e0e 5B       		popq	%rbx
 2362              		.cfi_def_cfa_offset 24
 2363              	.LVL225:
 2364 0e0f 5D       		popq	%rbp
 2365              		.cfi_def_cfa_offset 16
 2366 0e10 415C     		popq	%r12
 2367              		.cfi_def_cfa_offset 8
 2368 0e12 C3       		ret
 2369              	.LVL226:
 2370              		.p2align 4,,10
 2371 0e13 0F1F4400 		.p2align 3
 2371      00
 2372              	.L149:
 2373              		.cfi_restore_state
 2374              	.LBB521:
 2375              	.LBB518:
 2376              	.LBB515:
 2377 0e18 488D3D00 		leaq	.LC48(%rip), %rdi
 2377      000000
 2378 0e1f BE390100 		movl	$313, %esi
 2378      00
 2379 0e24 E807F2FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2379      FF
 2380              	.LVL227:
 2381 0e29 E97CFFFF 		jmp	.L140
 2381      FF
 2382              	.LBE515:
 2383              	.LBE518:
GAS LISTING /tmp/ccrWPnlb.s 			page 109


 2384              	.LBE521:
 2385              		.cfi_endproc
 2386              	.LFE1531:
 2387              		.size	_Z26test_render_to_normalizingv, .-_Z26test_render_to_normalizingv
 2388              		.section	.text.unlikely
 2389              	.LCOLDE51:
 2390              		.text
 2391              	.LHOTE51:
 2392              		.section	.rodata.str1.8
 2393 06e3 00000000 		.align 8
 2393      00
 2394              	.LC52:
 2395 06e8 73617475 		.string	"saturated (1) rendered 3x3 heatmap is correct (0 == memcmp(img, expected1, 3*3*4))"
 2395      72617465 
 2395      64202831 
 2395      29207265 
 2395      6E646572 
 2396 073b 00000000 		.align 8
 2396      00
 2397              	.LC53:
 2398 0740 73617475 		.string	"saturated (2) rendered 3x3 heatmap is correct (0 == memcmp(img, expected2, 3*3*4))"
 2398      72617465 
 2398      64202832 
 2398      29207265 
 2398      6E646572 
 2399              		.section	.text.unlikely
 2400              	.LCOLDB54:
 2401              		.text
 2402              	.LHOTB54:
 2403 0e2e 6690     		.p2align 4,,15
 2404              		.globl	_Z25test_render_to_saturatingv
 2405              		.type	_Z25test_render_to_saturatingv, @function
 2406              	_Z25test_render_to_saturatingv:
 2407              	.LFB1532:
 322:tests/test.cpp **** 
 323:tests/test.cpp **** void test_render_to_saturating()
 324:tests/test.cpp **** {
 2408              		.loc 2 325 0
 2409              		.cfi_startproc
 2410 0e30 4154     		pushq	%r12
 2411              		.cfi_def_cfa_offset 16
 2412              		.cfi_offset 12, -16
 2413 0e32 55       		pushq	%rbp
 2414              		.cfi_def_cfa_offset 24
 2415              		.cfi_offset 6, -24
 2416              	.LBB522:
 325:tests/test.cpp ****     static unsigned char expected1[] = {
 326:tests/test.cpp ****                 0, 0, 0, 0,   255, 255, 255, 255,   0, 0, 0, 0,
 327:tests/test.cpp ****         255, 255, 255, 255,   255, 255, 255, 255,   255, 255, 255, 255,
 328:tests/test.cpp ****                 0, 0, 0, 0,   255, 255, 255, 255,   0, 0, 0, 0,
 329:tests/test.cpp ****     };
 330:tests/test.cpp **** 
 331:tests/test.cpp ****     static unsigned char expected2[] = {
 332:tests/test.cpp ****                 0, 0, 0, 0,   191, 191, 191, 255,   0, 0, 0, 0,
 333:tests/test.cpp ****         191, 191, 191, 255,   255, 255, 255, 255,   191, 191, 191, 255,
 334:tests/test.cpp ****                 0, 0, 0, 0,   191, 191, 191, 255,   0, 0, 0, 0,
 335:tests/test.cpp ****     };
GAS LISTING /tmp/ccrWPnlb.s 			page 110


 336:tests/test.cpp **** 
 337:tests/test.cpp ****     heatmap_t* hm = heatmap_new(3, 3);
 2417              		.loc 2 338 0
 2418 0e33 BE030000 		movl	$3, %esi
 2418      00
 2419              	.LBE522:
 325:tests/test.cpp ****     static unsigned char expected1[] = {
 2420              		.loc 2 325 0
 2421 0e38 53       		pushq	%rbx
 2422              		.cfi_def_cfa_offset 32
 2423              		.cfi_offset 3, -32
 2424              	.LBB529:
 2425              		.loc 2 338 0
 2426 0e39 BF030000 		movl	$3, %edi
 2426      00
 2427              	.LBE529:
 325:tests/test.cpp ****     static unsigned char expected1[] = {
 2428              		.loc 2 325 0
 2429 0e3e 4883EC30 		subq	$48, %rsp
 2430              		.cfi_def_cfa_offset 80
 2431              	.LBB530:
 2432              		.loc 2 338 0
 2433 0e42 E8000000 		call	heatmap_new@PLT
 2433      00
 2434              	.LVL228:
 338:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2435              		.loc 2 339 0
 2436 0e47 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2436      000000
 2437 0e4e 4889C7   		movq	%rax, %rdi
 2438 0e51 BA010000 		movl	$1, %edx
 2438      00
 2439 0e56 BE010000 		movl	$1, %esi
 2439      00
 338:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2440              		.loc 2 338 0
 2441 0e5b 4889C3   		movq	%rax, %rbx
 2442              	.LVL229:
 339:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 340:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 341:tests/test.cpp **** 
 342:tests/test.cpp ****     unsigned char img[3*3*4] = {1};
 343:tests/test.cpp ****     heatmap_render_saturated_to(hm, heatmap_cs_b2w, 1.0f, img);
 2443              		.loc 2 344 0
 2444 0e5e 4889E5   		movq	%rsp, %rbp
 339:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2445              		.loc 2 339 0
 2446 0e61 E8000000 		call	heatmap_add_point_with_stamp@PLT
 2446      00
 2447              	.LVL230:
 340:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2448              		.loc 2 340 0
 2449 0e66 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2449      000000
 2450 0e6d BA010000 		movl	$1, %edx
 2450      00
 2451 0e72 BE010000 		movl	$1, %esi
GAS LISTING /tmp/ccrWPnlb.s 			page 111


 2451      00
 2452 0e77 4889DF   		movq	%rbx, %rdi
 2453 0e7a E8000000 		call	heatmap_add_point_with_stamp@PLT
 2453      00
 2454              	.LVL231:
 341:tests/test.cpp ****     heatmap_add_point_with_stamp(hm, 1, 1, &g_3x3_stamp);
 2455              		.loc 2 341 0
 2456 0e7f 488D0D00 		leaq	_ZL11g_3x3_stamp(%rip), %rcx
 2456      000000
 2457 0e86 BA010000 		movl	$1, %edx
 2457      00
 2458 0e8b BE010000 		movl	$1, %esi
 2458      00
 2459 0e90 4889DF   		movq	%rbx, %rdi
 2460 0e93 E8000000 		call	heatmap_add_point_with_stamp@PLT
 2460      00
 2461              	.LVL232:
 2462              		.loc 2 344 0
 2463 0e98 4C8B2500 		movq	heatmap_cs_b2w@GOTPCREL(%rip), %r12
 2463      000000
 2464 0e9f 4889E2   		movq	%rsp, %rdx
 2465 0ea2 4889DF   		movq	%rbx, %rdi
 2466 0ea5 F30F1005 		movss	.LC16(%rip), %xmm0
 2466      00000000 
 343:tests/test.cpp ****     unsigned char img[3*3*4] = {1};
 2467              		.loc 2 343 0
 2468 0ead 48C70424 		movq	$0, (%rsp)
 2468      00000000 
 2469 0eb5 48C74424 		movq	$0, 8(%rsp)
 2469      08000000 
 2469      00
 2470 0ebe 48C74424 		movq	$0, 16(%rsp)
 2470      10000000 
 2470      00
 2471              		.loc 2 344 0
 2472 0ec7 498B3424 		movq	(%r12), %rsi
 343:tests/test.cpp ****     unsigned char img[3*3*4] = {1};
 2473              		.loc 2 343 0
 2474 0ecb 48C74424 		movq	$0, 24(%rsp)
 2474      18000000 
 2474      00
 2475 0ed4 C7442420 		movl	$0, 32(%rsp)
 2475      00000000 
 2476 0edc C6042401 		movb	$1, (%rsp)
 2477              		.loc 2 344 0
 2478 0ee0 E8000000 		call	heatmap_render_saturated_to@PLT
 2478      00
 2479              	.LVL233:
 344:tests/test.cpp ****     ENSURE_THAT("saturated (1) rendered 3x3 heatmap is correct", 0 == memcmp(img, expected1, 3*3*4)
 2480              		.loc 2 345 0
 2481 0ee5 488D3500 		leaq	_ZZ25test_render_to_saturatingvE9expected1(%rip), %rsi
 2481      000000
 2482 0eec BA240000 		movl	$36, %edx
 2482      00
 2483 0ef1 4889E7   		movq	%rsp, %rdi
 2484 0ef4 E8000000 		call	memcmp@PLT
 2484      00
GAS LISTING /tmp/ccrWPnlb.s 			page 112


 2485              	.LVL234:
 2486              	.LBB523:
 2487              	.LBB524:
  51:tests/test.cpp ****     g_total_tests++;
 2488              		.loc 2 51 0
 2489 0ef9 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 2489      000001
  53:tests/test.cpp ****     if(!condition) {
 2490              		.loc 2 53 0
 2491 0f00 85C0     		testl	%eax, %eax
 2492 0f02 755C     		jne	.L160
 2493              	.LVL235:
 2494              	.L151:
 2495              	.LBE524:
 2496              	.LBE523:
 345:tests/test.cpp **** 
 346:tests/test.cpp ****     heatmap_render_saturated_to(hm, heatmap_cs_b2w, 2.0f, img);
 2497              		.loc 2 347 0
 2498 0f04 498B3424 		movq	(%r12), %rsi
 2499 0f08 4889EA   		movq	%rbp, %rdx
 2500 0f0b 4889DF   		movq	%rbx, %rdi
 2501 0f0e F30F1005 		movss	.LC19(%rip), %xmm0
 2501      00000000 
 2502 0f16 E8000000 		call	heatmap_render_saturated_to@PLT
 2502      00
 2503              	.LVL236:
 347:tests/test.cpp ****     ENSURE_THAT("saturated (2) rendered 3x3 heatmap is correct", 0 == memcmp(img, expected2, 3*3*4)
 2504              		.loc 2 348 0
 2505 0f1b 488D3500 		leaq	_ZZ25test_render_to_saturatingvE9expected2(%rip), %rsi
 2505      000000
 2506 0f22 BA240000 		movl	$36, %edx
 2506      00
 2507 0f27 4889EF   		movq	%rbp, %rdi
 2508 0f2a E8000000 		call	memcmp@PLT
 2508      00
 2509              	.LVL237:
 2510              	.LBB526:
 2511              	.LBB527:
  51:tests/test.cpp ****     g_total_tests++;
 2512              		.loc 2 51 0
 2513 0f2f 83050000 		addl	$1, _ZL13g_total_tests(%rip)
 2513      000001
  53:tests/test.cpp ****     if(!condition) {
 2514              		.loc 2 53 0
 2515 0f36 85C0     		testl	%eax, %eax
 2516 0f38 7411     		je	.L152
 2517 0f3a 488D3D00 		leaq	.LC53(%rip), %rdi
 2517      000000
 2518 0f41 BE5C0100 		movl	$348, %esi
 2518      00
 2519 0f46 E8E5F0FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2519      FF
 2520              	.LVL238:
 2521              	.L152:
 2522              	.LBE527:
 2523              	.LBE526:
 348:tests/test.cpp **** 
GAS LISTING /tmp/ccrWPnlb.s 			page 113


 349:tests/test.cpp ****     heatmap_free(hm);
 2524              		.loc 2 350 0
 2525 0f4b 4889DF   		movq	%rbx, %rdi
 2526 0f4e E8000000 		call	heatmap_free@PLT
 2526      00
 2527              	.LVL239:
 2528              	.LBE530:
 350:tests/test.cpp ****     // TODO: (Also try negative and non-one-max stamps?)
 351:tests/test.cpp **** }
 2529              		.loc 2 352 0
 2530 0f53 4883C430 		addq	$48, %rsp
 2531              		.cfi_remember_state
 2532              		.cfi_def_cfa_offset 32
 2533 0f57 5B       		popq	%rbx
 2534              		.cfi_def_cfa_offset 24
 2535              	.LVL240:
 2536 0f58 5D       		popq	%rbp
 2537              		.cfi_def_cfa_offset 16
 2538 0f59 415C     		popq	%r12
 2539              		.cfi_def_cfa_offset 8
 2540 0f5b C3       		ret
 2541              	.LVL241:
 2542 0f5c 0F1F4000 		.p2align 4,,10
 2543              		.p2align 3
 2544              	.L160:
 2545              		.cfi_restore_state
 2546              	.LBB531:
 2547              	.LBB528:
 2548              	.LBB525:
 2549 0f60 488D3D00 		leaq	.LC52(%rip), %rdi
 2549      000000
 2550 0f67 BE590100 		movl	$345, %esi
 2550      00
 2551 0f6c E8BFF0FF 		call	_ZL11ensure_thatPKcbS0_i.part.9.constprop.12
 2551      FF
 2552              	.LVL242:
 2553 0f71 EB91     		jmp	.L151
 2554              	.LBE525:
 2555              	.LBE528:
 2556              	.LBE531:
 2557              		.cfi_endproc
 2558              	.LFE1532:
 2559              		.size	_Z25test_render_to_saturatingv, .-_Z25test_render_to_saturatingv
 2560              		.section	.text.unlikely
 2561              	.LCOLDE54:
 2562              		.text
 2563              	.LHOTE54:
 2564              		.section	.rodata.str1.1
 2565              	.LC55:
 2566 0011 4F68206E 		.string	"Oh noes! "
 2566      6F657321 
 2566      2000
 2567              	.LC56:
 2568 001b 206F7574 		.string	" out of "
 2568      206F6620 
 2568      00
 2569              	.LC57:
GAS LISTING /tmp/ccrWPnlb.s 			page 114


 2570 0024 20746573 		.string	" tests failed, shame on you!"
 2570      74732066 
 2570      61696C65 
 2570      642C2073 
 2570      68616D65 
 2571              	.LC58:
 2572 0041 416C6C20 		.string	"All "
 2572      00
 2573              		.section	.rodata.str1.8
 2574 0793 00000000 		.align 8
 2574      00
 2575              	.LC59:
 2576 0798 20746573 		.string	" tests succeeded. Go get the champagne!"
 2576      74732073 
 2576      75636365 
 2576      65646564 
 2576      2E20476F 
 2577              		.section	.text.unlikely
 2578              	.LCOLDB60:
 2579              		.section	.text.startup,"ax",@progbits
 2580              	.LHOTB60:
 2581              		.p2align 4,,15
 2582              		.globl	main
 2583              		.type	main, @function
 2584              	main:
 2585              	.LFB1533:
 352:tests/test.cpp **** 
 353:tests/test.cpp **** int main()
 354:tests/test.cpp **** {
 2586              		.loc 2 355 0
 2587              		.cfi_startproc
 2588 0000 55       		pushq	%rbp
 2589              		.cfi_def_cfa_offset 16
 2590              		.cfi_offset 6, -16
 2591 0001 53       		pushq	%rbx
 2592              		.cfi_def_cfa_offset 24
 2593              		.cfi_offset 3, -24
 2594 0002 4883EC08 		subq	$8, %rsp
 2595              		.cfi_def_cfa_offset 32
 355:tests/test.cpp ****     test_add_nothing();
 2596              		.loc 2 356 0
 2597 0006 E8000000 		call	_Z16test_add_nothingv@PLT
 2597      00
 2598              	.LVL243:
 356:tests/test.cpp ****     test_add_point_with_stamp_center();
 2599              		.loc 2 357 0
 2600 000b E8000000 		call	_Z32test_add_point_with_stamp_centerv@PLT
 2600      00
 2601              	.LVL244:
 357:tests/test.cpp ****     test_add_point_with_stamp_topleft();
 2602              		.loc 2 358 0
 2603 0010 E8000000 		call	_Z33test_add_point_with_stamp_topleftv@PLT
 2603      00
 2604              	.LVL245:
 358:tests/test.cpp ****     test_add_point_with_stamp_botright();
 2605              		.loc 2 359 0
 2606 0015 E8000000 		call	_Z34test_add_point_with_stamp_botrightv@PLT
GAS LISTING /tmp/ccrWPnlb.s 			page 115


 2606      00
 2607              	.LVL246:
 359:tests/test.cpp ****     test_add_point_with_stamp_outside();
 2608              		.loc 2 360 0
 2609 001a E8000000 		call	_Z33test_add_point_with_stamp_outsidev@PLT
 2609      00
 2610              	.LVL247:
 360:tests/test.cpp **** 
 361:tests/test.cpp ****     test_stamp_gen();
 2611              		.loc 2 362 0
 2612 001f E8000000 		call	_Z14test_stamp_genv@PLT
 2612      00
 2613              	.LVL248:
 362:tests/test.cpp ****     test_stamp_gen_nonlinear();
 2614              		.loc 2 363 0
 2615 0024 E8000000 		call	_Z24test_stamp_gen_nonlinearv@PLT
 2615      00
 2616              	.LVL249:
 363:tests/test.cpp **** 
 364:tests/test.cpp ****     test_render_to_nothing();
 2617              		.loc 2 365 0
 2618 0029 E8000000 		call	_Z22test_render_to_nothingv@PLT
 2618      00
 2619              	.LVL250:
 365:tests/test.cpp ****     test_render_to_creation();
 2620              		.loc 2 366 0
 2621 002e E8000000 		call	_Z23test_render_to_creationv@PLT
 2621      00
 2622              	.LVL251:
 366:tests/test.cpp ****     test_render_to_normalizing();
 2623              		.loc 2 367 0
 2624 0033 E8000000 		call	_Z26test_render_to_normalizingv@PLT
 2624      00
 2625              	.LVL252:
 367:tests/test.cpp ****     test_render_to_saturating();
 2626              		.loc 2 368 0
 2627 0038 E8000000 		call	_Z25test_render_to_saturatingv@PLT
 2627      00
 2628              	.LVL253:
 368:tests/test.cpp **** 
 369:tests/test.cpp ****     if(g_failed_tests > 0) {
 2629              		.loc 2 370 0
 2630 003d 8B1D0000 		movl	_ZL14g_failed_tests(%rip), %ebx
 2630      0000
 2631 0043 85DB     		testl	%ebx, %ebx
 2632 0045 7547     		jne	.L165
 370:tests/test.cpp ****         std::cout << "Oh noes! " << g_failed_tests << " out of " << g_total_tests << " tests failed
 371:tests/test.cpp ****     } else {
 372:tests/test.cpp ****         std::cout << "All " << g_total_tests << " tests succeeded. Go get the champagne!" << std::e
 2633              		.loc 2 373 0
 2634 0047 8B1D0000 		movl	_ZL13g_total_tests(%rip), %ebx
 2634      0000
 2635 004d 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 2635      000000
 2636 0054 488D3500 		leaq	.LC58(%rip), %rsi
 2636      000000
 2637 005b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
GAS LISTING /tmp/ccrWPnlb.s 			page 116


 2637      00
 2638              	.LVL254:
 2639              	.LBB532:
 2640              	.LBB533:
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 2641              		.loc 3 196 0
 2642 0060 89DE     		movl	%ebx, %esi
 2643 0062 4889C7   		movq	%rax, %rdi
 2644 0065 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 2644      00
 2645              	.LVL255:
 2646              	.LBE533:
 2647              	.LBE532:
 2648              		.loc 2 373 0
 2649 006a 488D3500 		leaq	.LC59(%rip), %rsi
 2649      000000
 2650 0071 4889C7   		movq	%rax, %rdi
 2651 0074 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2651      00
 2652              	.LVL256:
 2653              	.LBB534:
 2654              	.LBB535:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 2655              		.loc 3 113 0
 2656 0079 4889C7   		movq	%rax, %rdi
 2657 007c E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 2657      00
 2658              	.LVL257:
 2659              	.L163:
 2660              	.LBE535:
 2661              	.LBE534:
 373:tests/test.cpp ****     }
 374:tests/test.cpp ****     return static_cast<int>(g_failed_tests);
 375:tests/test.cpp **** }
 2662              		.loc 2 376 0
 2663 0081 8B050000 		movl	_ZL14g_failed_tests(%rip), %eax
 2663      0000
 2664 0087 4883C408 		addq	$8, %rsp
 2665              		.cfi_remember_state
 2666              		.cfi_def_cfa_offset 24
 2667 008b 5B       		popq	%rbx
 2668              		.cfi_def_cfa_offset 16
 2669 008c 5D       		popq	%rbp
 2670              		.cfi_def_cfa_offset 8
 2671 008d C3       		ret
 2672              	.L165:
 2673              		.cfi_restore_state
 371:tests/test.cpp ****         std::cout << "Oh noes! " << g_failed_tests << " out of " << g_total_tests << " tests failed
 2674              		.loc 2 371 0
 2675 008e 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 2675      000000
 2676 0095 488D3500 		leaq	.LC55(%rip), %rsi
 2676      000000
 2677 009c 8B2D0000 		movl	_ZL13g_total_tests(%rip), %ebp
 2677      0000
 2678 00a2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2678      00
GAS LISTING /tmp/ccrWPnlb.s 			page 117


 2679              	.LVL258:
 2680              	.LBB536:
 2681              	.LBB537:
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 2682              		.loc 3 196 0
 2683 00a7 89DE     		movl	%ebx, %esi
 2684 00a9 4889C7   		movq	%rax, %rdi
 2685 00ac E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 2685      00
 2686              	.LVL259:
 2687              	.LBE537:
 2688              	.LBE536:
 371:tests/test.cpp ****         std::cout << "Oh noes! " << g_failed_tests << " out of " << g_total_tests << " tests failed
 2689              		.loc 2 371 0
 2690 00b1 488D3500 		leaq	.LC56(%rip), %rsi
 2690      000000
 2691 00b8 4889C7   		movq	%rax, %rdi
 2692 00bb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2692      00
 2693              	.LVL260:
 2694              	.LBB538:
 2695              	.LBB539:
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 2696              		.loc 3 196 0
 2697 00c0 89EE     		movl	%ebp, %esi
 2698 00c2 4889C7   		movq	%rax, %rdi
 2699 00c5 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 2699      00
 2700              	.LVL261:
 2701              	.LBE539:
 2702              	.LBE538:
 371:tests/test.cpp ****         std::cout << "Oh noes! " << g_failed_tests << " out of " << g_total_tests << " tests failed
 2703              		.loc 2 371 0
 2704 00ca 488D3500 		leaq	.LC57(%rip), %rsi
 2704      000000
 2705 00d1 4889C7   		movq	%rax, %rdi
 2706 00d4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2706      00
 2707              	.LVL262:
 2708              	.LBB540:
 2709              	.LBB541:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 2710              		.loc 3 113 0
 2711 00d9 4889C7   		movq	%rax, %rdi
 2712 00dc E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 2712      00
 2713              	.LVL263:
 2714 00e1 EB9E     		jmp	.L163
 2715              	.LBE541:
 2716              	.LBE540:
 2717              		.cfi_endproc
 2718              	.LFE1533:
 2719              		.size	main, .-main
 2720              		.section	.text.unlikely
 2721              	.LCOLDE60:
 2722              		.section	.text.startup
 2723              	.LHOTE60:
GAS LISTING /tmp/ccrWPnlb.s 			page 118


 2724              		.section	.text.unlikely
 2725              	.LCOLDB61:
 2726              		.section	.text.startup
 2727              	.LHOTB61:
 2728 00e3 66666666 		.p2align 4,,15
 2728      2E0F1F84 
 2728      00000000 
 2728      00
 2729              		.type	_GLOBAL__sub_I_test.cpp, @function
 2730              	_GLOBAL__sub_I_test.cpp:
 2731              	.LFB1690:
 2732              		.loc 2 376 0
 2733              		.cfi_startproc
 2734              	.LVL264:
 2735              	.LBB542:
 2736              	.LBB543:
 2737              		.file 8 "/opt/gcc/4.9.2/include/c++/4.9.2/iostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Standard iostream objects -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** /** @file include/iostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  30:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifndef _GLIBCXX_IOSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #define _GLIBCXX_IOSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <bits/c++config.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <ostream>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <istream>
GAS LISTING /tmp/ccrWPnlb.s 			page 119


  40:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  @name Standard Stream Objects
  47:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  49:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  objects</em>.  For other declarations, see
  50:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  51:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  52:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  53:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  They are required by default to cooperate with the global C
  54:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  library's @c FILE streams, and to be available during program
  55:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  startup and termination. For more information, see the section of the
  56:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  manual linked to above.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@{
  59:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern istream cin;		/// Linked to standard input
  60:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cout;		/// Linked to standard output
  61:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  63:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  65:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wistream wcin;		/// Linked to standard input
  66:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcout;	/// Linked to standard output
  67:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  69:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #endif
  70:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@}
  71:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   static ios_base::Init __ioinit;
 2738              		.loc 8 74 0
 2739 00f0 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 2739      000000
 2740              	.LBE543:
 2741              	.LBE542:
 2742              		.loc 2 376 0
 2743 00f7 4883EC08 		subq	$8, %rsp
 2744              		.cfi_def_cfa_offset 16
 2745              	.LBB546:
 2746              	.LBB544:
 2747              		.loc 8 74 0
 2748 00fb E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 2748      00
 2749              	.LVL265:
 2750 0100 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 2750      000000
 2751 0107 488D1500 		leaq	__dso_handle(%rip), %rdx
 2751      000000
 2752 010e 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 2752      000000
 2753              	.LBE544:
 2754              	.LBE546:
 2755              		.loc 2 376 0
GAS LISTING /tmp/ccrWPnlb.s 			page 120


 2756 0115 4883C408 		addq	$8, %rsp
 2757              		.cfi_def_cfa_offset 8
 2758              	.LBB547:
 2759              	.LBB545:
 2760              		.loc 8 74 0
 2761 0119 E9000000 		jmp	__cxa_atexit@PLT
 2761      00
 2762              	.LVL266:
 2763              	.LBE545:
 2764              	.LBE547:
 2765              		.cfi_endproc
 2766              	.LFE1690:
 2767              		.size	_GLOBAL__sub_I_test.cpp, .-_GLOBAL__sub_I_test.cpp
 2768              		.section	.text.unlikely
 2769              	.LCOLDE61:
 2770              		.section	.text.startup
 2771              	.LHOTE61:
 2772              		.section	.ctors,"aw",@progbits
 2773              		.align 8
 2774 0000 00000000 		.quad	_GLOBAL__sub_I_test.cpp
 2774      00000000 
 2775              		.data
 2776              		.align 32
 2777              		.type	_ZZ25test_render_to_saturatingvE9expected2, @object
 2778              		.size	_ZZ25test_render_to_saturatingvE9expected2, 36
 2779              	_ZZ25test_render_to_saturatingvE9expected2:
 2780 0000 00       		.byte	0
 2781 0001 00       		.byte	0
 2782 0002 00       		.byte	0
 2783 0003 00       		.byte	0
 2784 0004 BF       		.byte	-65
 2785 0005 BF       		.byte	-65
 2786 0006 BF       		.byte	-65
 2787 0007 FF       		.byte	-1
 2788 0008 00       		.byte	0
 2789 0009 00       		.byte	0
 2790 000a 00       		.byte	0
 2791 000b 00       		.byte	0
 2792 000c BF       		.byte	-65
 2793 000d BF       		.byte	-65
 2794 000e BF       		.byte	-65
 2795 000f FF       		.byte	-1
 2796 0010 FF       		.byte	-1
 2797 0011 FF       		.byte	-1
 2798 0012 FF       		.byte	-1
 2799 0013 FF       		.byte	-1
 2800 0014 BF       		.byte	-65
 2801 0015 BF       		.byte	-65
 2802 0016 BF       		.byte	-65
 2803 0017 FF       		.byte	-1
 2804 0018 00       		.byte	0
 2805 0019 00       		.byte	0
 2806 001a 00       		.byte	0
 2807 001b 00       		.byte	0
 2808 001c BF       		.byte	-65
 2809 001d BF       		.byte	-65
 2810 001e BF       		.byte	-65
GAS LISTING /tmp/ccrWPnlb.s 			page 121


 2811 001f FF       		.byte	-1
 2812 0020 00       		.byte	0
 2813 0021 00       		.byte	0
 2814 0022 00       		.byte	0
 2815 0023 00       		.byte	0
 2816 0024 00000000 		.align 32
 2816      00000000 
 2816      00000000 
 2816      00000000 
 2816      00000000 
 2817              		.type	_ZZ25test_render_to_saturatingvE9expected1, @object
 2818              		.size	_ZZ25test_render_to_saturatingvE9expected1, 36
 2819              	_ZZ25test_render_to_saturatingvE9expected1:
 2820 0040 00       		.byte	0
 2821 0041 00       		.byte	0
 2822 0042 00       		.byte	0
 2823 0043 00       		.byte	0
 2824 0044 FF       		.byte	-1
 2825 0045 FF       		.byte	-1
 2826 0046 FF       		.byte	-1
 2827 0047 FF       		.byte	-1
 2828 0048 00       		.byte	0
 2829 0049 00       		.byte	0
 2830 004a 00       		.byte	0
 2831 004b 00       		.byte	0
 2832 004c FF       		.byte	-1
 2833 004d FF       		.byte	-1
 2834 004e FF       		.byte	-1
 2835 004f FF       		.byte	-1
 2836 0050 FF       		.byte	-1
 2837 0051 FF       		.byte	-1
 2838 0052 FF       		.byte	-1
 2839 0053 FF       		.byte	-1
 2840 0054 FF       		.byte	-1
 2841 0055 FF       		.byte	-1
 2842 0056 FF       		.byte	-1
 2843 0057 FF       		.byte	-1
 2844 0058 00       		.byte	0
 2845 0059 00       		.byte	0
 2846 005a 00       		.byte	0
 2847 005b 00       		.byte	0
 2848 005c FF       		.byte	-1
 2849 005d FF       		.byte	-1
 2850 005e FF       		.byte	-1
 2851 005f FF       		.byte	-1
 2852 0060 00       		.byte	0
 2853 0061 00       		.byte	0
 2854 0062 00       		.byte	0
 2855 0063 00       		.byte	0
 2856 0064 00000000 		.align 32
 2856      00000000 
 2856      00000000 
 2856      00000000 
 2856      00000000 
 2857              		.type	_ZZ26test_render_to_normalizingvE8expected, @object
 2858              		.size	_ZZ26test_render_to_normalizingvE8expected, 36
 2859              	_ZZ26test_render_to_normalizingvE8expected:
GAS LISTING /tmp/ccrWPnlb.s 			page 122


 2860 0080 00       		.byte	0
 2861 0081 00       		.byte	0
 2862 0082 00       		.byte	0
 2863 0083 00       		.byte	0
 2864 0084 7F       		.byte	127
 2865 0085 7F       		.byte	127
 2866 0086 7F       		.byte	127
 2867 0087 FF       		.byte	-1
 2868 0088 00       		.byte	0
 2869 0089 00       		.byte	0
 2870 008a 00       		.byte	0
 2871 008b 00       		.byte	0
 2872 008c 7F       		.byte	127
 2873 008d 7F       		.byte	127
 2874 008e 7F       		.byte	127
 2875 008f FF       		.byte	-1
 2876 0090 FF       		.byte	-1
 2877 0091 FF       		.byte	-1
 2878 0092 FF       		.byte	-1
 2879 0093 FF       		.byte	-1
 2880 0094 7F       		.byte	127
 2881 0095 7F       		.byte	127
 2882 0096 7F       		.byte	127
 2883 0097 FF       		.byte	-1
 2884 0098 00       		.byte	0
 2885 0099 00       		.byte	0
 2886 009a 00       		.byte	0
 2887 009b 00       		.byte	0
 2888 009c 7F       		.byte	127
 2889 009d 7F       		.byte	127
 2890 009e 7F       		.byte	127
 2891 009f FF       		.byte	-1
 2892 00a0 00       		.byte	0
 2893 00a1 00       		.byte	0
 2894 00a2 00       		.byte	0
 2895 00a3 00       		.byte	0
 2896 00a4 00000000 		.align 32
 2896      00000000 
 2896      00000000 
 2896      00000000 
 2896      00000000 
 2897              		.type	_ZZ23test_render_to_creationvE8expected, @object
 2898              		.size	_ZZ23test_render_to_creationvE8expected, 36
 2899              	_ZZ23test_render_to_creationvE8expected:
 2900 00c0 00       		.byte	0
 2901 00c1 00       		.byte	0
 2902 00c2 00       		.byte	0
 2903 00c3 00       		.byte	0
 2904 00c4 7F       		.byte	127
 2905 00c5 7F       		.byte	127
 2906 00c6 7F       		.byte	127
 2907 00c7 FF       		.byte	-1
 2908 00c8 00       		.byte	0
 2909 00c9 00       		.byte	0
 2910 00ca 00       		.byte	0
 2911 00cb 00       		.byte	0
 2912 00cc 7F       		.byte	127
GAS LISTING /tmp/ccrWPnlb.s 			page 123


 2913 00cd 7F       		.byte	127
 2914 00ce 7F       		.byte	127
 2915 00cf FF       		.byte	-1
 2916 00d0 FF       		.byte	-1
 2917 00d1 FF       		.byte	-1
 2918 00d2 FF       		.byte	-1
 2919 00d3 FF       		.byte	-1
 2920 00d4 7F       		.byte	127
 2921 00d5 7F       		.byte	127
 2922 00d6 7F       		.byte	127
 2923 00d7 FF       		.byte	-1
 2924 00d8 00       		.byte	0
 2925 00d9 00       		.byte	0
 2926 00da 00       		.byte	0
 2927 00db 00       		.byte	0
 2928 00dc 7F       		.byte	127
 2929 00dd 7F       		.byte	127
 2930 00de 7F       		.byte	127
 2931 00df FF       		.byte	-1
 2932 00e0 00       		.byte	0
 2933 00e1 00       		.byte	0
 2934 00e2 00       		.byte	0
 2935 00e3 00       		.byte	0
 2936              		.local	_ZZ22test_render_to_nothingvE8expected
 2937              		.comm	_ZZ22test_render_to_nothingvE8expected,36,32
 2938              		.local	_ZZ24test_stamp_gen_nonlinearvE5zeros
 2939              		.comm	_ZZ24test_stamp_gen_nonlinearvE5zeros,36,32
 2940 00e4 00000000 		.align 32
 2940      00000000 
 2940      00000000 
 2940      00000000 
 2940      00000000 
 2941              		.type	_ZZ24test_stamp_gen_nonlinearvE4ones, @object
 2942              		.size	_ZZ24test_stamp_gen_nonlinearvE4ones, 36
 2943              	_ZZ24test_stamp_gen_nonlinearvE4ones:
 2944 0100 0000803F 		.long	1065353216
 2945 0104 0000803F 		.long	1065353216
 2946 0108 0000803F 		.long	1065353216
 2947 010c 0000803F 		.long	1065353216
 2948 0110 0000803F 		.long	1065353216
 2949 0114 0000803F 		.long	1065353216
 2950 0118 0000803F 		.long	1065353216
 2951 011c 0000803F 		.long	1065353216
 2952 0120 0000803F 		.long	1065353216
 2953 0124 00000000 		.align 32
 2953      00000000 
 2953      00000000 
 2953      00000000 
 2953      00000000 
 2954              		.type	_ZZ24test_stamp_gen_nonlinearvE5halfs, @object
 2955              		.size	_ZZ24test_stamp_gen_nonlinearvE5halfs, 36
 2956              	_ZZ24test_stamp_gen_nonlinearvE5halfs:
 2957 0140 0000003F 		.long	1056964608
 2958 0144 0000003F 		.long	1056964608
 2959 0148 0000003F 		.long	1056964608
 2960 014c 0000003F 		.long	1056964608
 2961 0150 0000003F 		.long	1056964608
GAS LISTING /tmp/ccrWPnlb.s 			page 124


 2962 0154 0000003F 		.long	1056964608
 2963 0158 0000003F 		.long	1056964608
 2964 015c 0000003F 		.long	1056964608
 2965 0160 0000003F 		.long	1056964608
 2966 0164 00000000 		.align 32
 2966      00000000 
 2966      00000000 
 2966      00000000 
 2966      00000000 
 2967              		.type	_ZZ14test_stamp_genvE8expected, @object
 2968              		.size	_ZZ14test_stamp_genvE8expected, 36
 2969              	_ZZ14test_stamp_genvE8expected:
 2970 0180 19F6953E 		.long	1050015257
 2971 0184 0000003F 		.long	1056964608
 2972 0188 19F6953E 		.long	1050015257
 2973 018c 0000003F 		.long	1056964608
 2974 0190 0000803F 		.long	1065353216
 2975 0194 0000003F 		.long	1056964608
 2976 0198 19F6953E 		.long	1050015257
 2977 019c 0000003F 		.long	1056964608
 2978 01a0 19F6953E 		.long	1050015257
 2979              		.local	_ZZ33test_add_point_with_stamp_outsidevE8expected
 2980              		.comm	_ZZ33test_add_point_with_stamp_outsidevE8expected,36,32
 2981 01a4 00000000 		.align 32
 2981      00000000 
 2981      00000000 
 2981      00000000 
 2981      00000000 
 2982              		.type	_ZZ34test_add_point_with_stamp_botrightvE8expected, @object
 2983              		.size	_ZZ34test_add_point_with_stamp_botrightvE8expected, 36
 2984              	_ZZ34test_add_point_with_stamp_botrightvE8expected:
 2985 01c0 00000000 		.long	0
 2986 01c4 00000000 		.long	0
 2987 01c8 00000000 		.long	0
 2988 01cc 00000000 		.long	0
 2989 01d0 00000000 		.long	0
 2990 01d4 0000003F 		.long	1056964608
 2991 01d8 00000000 		.long	0
 2992 01dc 0000003F 		.long	1056964608
 2993 01e0 0000803F 		.long	1065353216
 2994 01e4 00000000 		.align 32
 2994      00000000 
 2994      00000000 
 2994      00000000 
 2994      00000000 
 2995              		.type	_ZZ33test_add_point_with_stamp_topleftvE8expected, @object
 2996              		.size	_ZZ33test_add_point_with_stamp_topleftvE8expected, 36
 2997              	_ZZ33test_add_point_with_stamp_topleftvE8expected:
 2998 0200 0000803F 		.long	1065353216
 2999 0204 0000003F 		.long	1056964608
 3000 0208 00000000 		.long	0
 3001 020c 0000003F 		.long	1056964608
 3002 0210 00000000 		.long	0
 3003 0214 00000000 		.long	0
 3004 0218 00000000 		.long	0
 3005 021c 00000000 		.long	0
 3006 0220 00000000 		.long	0
GAS LISTING /tmp/ccrWPnlb.s 			page 125


 3007 0224 00000000 		.align 32
 3007      00000000 
 3007      00000000 
 3007      00000000 
 3007      00000000 
 3008              		.type	_ZZ32test_add_point_with_stamp_centervE8expected, @object
 3009              		.size	_ZZ32test_add_point_with_stamp_centervE8expected, 36
 3010              	_ZZ32test_add_point_with_stamp_centervE8expected:
 3011 0240 00000000 		.long	0
 3012 0244 0000803F 		.long	1065353216
 3013 0248 00000000 		.long	0
 3014 024c 0000803F 		.long	1065353216
 3015 0250 00000040 		.long	1073741824
 3016 0254 0000803F 		.long	1065353216
 3017 0258 00000000 		.long	0
 3018 025c 0000803F 		.long	1065353216
 3019 0260 00000000 		.long	0
 3020              		.local	_ZZ16test_add_nothingvE8expected
 3021              		.comm	_ZZ16test_add_nothingvE8expected,36,32
 3022              		.local	_ZL13g_total_tests
 3023              		.comm	_ZL13g_total_tests,4,4
 3024              		.local	_ZL14g_failed_tests
 3025              		.comm	_ZL14g_failed_tests,4,4
 3026              		.section	.data.rel.local,"aw",@progbits
 3027              		.align 16
 3028              		.type	_ZL11g_3x3_stamp, @object
 3029              		.size	_ZL11g_3x3_stamp, 16
 3030              	_ZL11g_3x3_stamp:
 3031 0000 00000000 		.quad	_ZL16g_3x3_stamp_data
 3031      00000000 
 3032 0008 03000000 		.long	3
 3033 000c 03000000 		.long	3
 3034              		.data
 3035 0264 00000000 		.align 32
 3035      00000000 
 3035      00000000 
 3035      00000000 
 3035      00000000 
 3036              		.type	_ZL16g_3x3_stamp_data, @object
 3037              		.size	_ZL16g_3x3_stamp_data, 36
 3038              	_ZL16g_3x3_stamp_data:
 3039 0280 00000000 		.long	0
 3040 0284 0000003F 		.long	1056964608
 3041 0288 00000000 		.long	0
 3042 028c 0000003F 		.long	1056964608
 3043 0290 0000803F 		.long	1065353216
 3044 0294 0000003F 		.long	1056964608
 3045 0298 00000000 		.long	0
 3046 029c 0000003F 		.long	1056964608
 3047 02a0 00000000 		.long	0
 3048              		.local	_ZStL8__ioinit
 3049              		.comm	_ZStL8__ioinit,1,1
 3050              		.section	.rodata.cst4,"aM",@progbits,4
 3051              		.align 4
 3052              	.LC1:
 3053 0000 0000003F 		.long	1056964608
 3054              		.align 4
GAS LISTING /tmp/ccrWPnlb.s 			page 126


 3055              	.LC3:
 3056 0004 000080BF 		.long	3212836864
 3057              		.align 4
 3058              	.LC5:
 3059 0008 00002041 		.long	1092616192
 3060              		.align 4
 3061              	.LC12:
 3062 000c 00000000 		.long	0
 3063              		.align 4
 3064              	.LC16:
 3065 0010 0000803F 		.long	1065353216
 3066              		.align 4
 3067              	.LC19:
 3068 0014 00000040 		.long	1073741824
 3069              		.align 4
 3070              	.LC24:
 3071 0018 00004040 		.long	1077936128
 3072              		.align 4
 3073              	.LC31:
 3074 001c 0000C03F 		.long	1069547520
 3075              		.section	.rodata.cst16,"aM",@progbits,16
 3076              		.align 16
 3077              	.LC35:
 3078 0000 FFFFFF7F 		.long	2147483647
 3079 0004 00000000 		.long	0
 3080 0008 00000000 		.long	0
 3081 000c 00000000 		.long	0
 3082              		.section	.rodata.cst8,"aM",@progbits,8
 3083              		.align 8
 3084              	.LC36:
 3085 0000 8DEDB5A0 		.long	2696277389
 3086 0004 F7C6B03E 		.long	1051772663
 3087              		.text
 3088              	.Letext0:
 3089              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
 3090              	.Letext_cold0:
 3091              		.file 9 "/usr/include/libio.h"
 3092              		.file 10 "/usr/include/stdio.h"
 3093              		.file 11 "<built-in>"
 3094              		.file 12 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/stddef.h"
 3095              		.file 13 "/usr/include/wchar.h"
 3096              		.file 14 "/opt/gcc/4.9.2/include/c++/4.9.2/cwchar"
 3097              		.file 15 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/exception_ptr.h"
 3098              		.file 16 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/c++config.h"
 3099              		.file 17 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdint"
 3100              		.file 18 "/opt/gcc/4.9.2/include/c++/4.9.2/clocale"
 3101              		.file 19 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib"
 3102              		.file 20 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdio"
 3103              		.file 21 "/opt/gcc/4.9.2/include/c++/4.9.2/cwctype"
 3104              		.file 22 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream.tcc"
 3105              		.file 23 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.tcc"
 3106              		.file 24 "/opt/gcc/4.9.2/include/c++/4.9.2/iosfwd"
 3107              		.file 25 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream_insert.h"
 3108              		.file 26 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/postypes.h"
 3109              		.file 27 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/functexcept.h"
 3110              		.file 28 "/usr/include/time.h"
 3111              		.file 29 "/opt/gcc/4.9.2/include/c++/4.9.2/debug/debug.h"
GAS LISTING /tmp/ccrWPnlb.s 			page 127


 3112              		.file 30 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h"
 3113              		.file 31 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h"
 3114              		.file 32 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/numeric_traits.h"
 3115              		.file 33 "/usr/include/stdint.h"
 3116              		.file 34 "/usr/include/locale.h"
 3117              		.file 35 "/usr/include/bits/types.h"
 3118              		.file 36 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/atomic_word.h"
 3119              		.file 37 "/usr/include/stdlib.h"
 3120              		.file 38 "/usr/include/_G_config.h"
 3121              		.file 39 "/usr/include/bits/stdio.h"
 3122              		.file 40 "/usr/include/wctype.h"
 3123              		.file 41 "/usr/include/bits/mathdef.h"
 3124              		.file 42 "./heatmap.h"
 3125              		.file 43 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h"
 3126              		.file 44 "./colorschemes/gray.h"
 3127              		.file 45 "/usr/include/string.h"
 3128              		.section	.debug_info,"",@progbits
 3129              	.Ldebug_info0:
 3130 0000 26550000 		.long	0x5526
 3131 0004 0400     		.value	0x4
 3132 0006 00000000 		.long	.Ldebug_abbrev0
 3133 000a 08       		.byte	0x8
 3134 000b 01       		.uleb128 0x1
 3135 000c 00000000 		.long	.LASF539
 3136 0010 04       		.byte	0x4
 3137 0011 00000000 		.long	.LASF540
 3138 0015 00000000 		.long	.LASF541
 3139 0019 00000000 		.long	.Ldebug_ranges0+0xb10
 3140 001d 00000000 		.quad	0
 3140      00000000 
 3141 0025 00000000 		.long	.Ldebug_line0
 3142 0029 02       		.uleb128 0x2
 3143 002a 04       		.byte	0x4
 3144 002b 04       		.byte	0x4
 3145 002c 00000000 		.long	.LASF31
 3146 0030 03       		.uleb128 0x3
 3147 0031 00000000 		.long	.LASF29
 3148 0035 0A       		.byte	0xa
 3149 0036 31       		.byte	0x31
 3150 0037 3B000000 		.long	0x3b
 3151 003b 04       		.uleb128 0x4
 3152 003c 00000000 		.long	.LASF33
 3153 0040 D8       		.byte	0xd8
 3154 0041 09       		.byte	0x9
 3155 0042 0F01     		.value	0x10f
 3156 0044 C2010000 		.long	0x1c2
 3157 0048 05       		.uleb128 0x5
 3158 0049 00000000 		.long	.LASF0
 3159 004d 09       		.byte	0x9
 3160 004e 1001     		.value	0x110
 3161 0050 93020000 		.long	0x293
 3162 0054 00       		.byte	0
 3163 0055 05       		.uleb128 0x5
 3164 0056 00000000 		.long	.LASF1
 3165 005a 09       		.byte	0x9
 3166 005b 1501     		.value	0x115
 3167 005d 5B150000 		.long	0x155b
GAS LISTING /tmp/ccrWPnlb.s 			page 128


 3168 0061 08       		.byte	0x8
 3169 0062 05       		.uleb128 0x5
 3170 0063 00000000 		.long	.LASF2
 3171 0067 09       		.byte	0x9
 3172 0068 1601     		.value	0x116
 3173 006a 5B150000 		.long	0x155b
 3174 006e 10       		.byte	0x10
 3175 006f 05       		.uleb128 0x5
 3176 0070 00000000 		.long	.LASF3
 3177 0074 09       		.byte	0x9
 3178 0075 1701     		.value	0x117
 3179 0077 5B150000 		.long	0x155b
 3180 007b 18       		.byte	0x18
 3181 007c 05       		.uleb128 0x5
 3182 007d 00000000 		.long	.LASF4
 3183 0081 09       		.byte	0x9
 3184 0082 1801     		.value	0x118
 3185 0084 5B150000 		.long	0x155b
 3186 0088 20       		.byte	0x20
 3187 0089 05       		.uleb128 0x5
 3188 008a 00000000 		.long	.LASF5
 3189 008e 09       		.byte	0x9
 3190 008f 1901     		.value	0x119
 3191 0091 5B150000 		.long	0x155b
 3192 0095 28       		.byte	0x28
 3193 0096 05       		.uleb128 0x5
 3194 0097 00000000 		.long	.LASF6
 3195 009b 09       		.byte	0x9
 3196 009c 1A01     		.value	0x11a
 3197 009e 5B150000 		.long	0x155b
 3198 00a2 30       		.byte	0x30
 3199 00a3 05       		.uleb128 0x5
 3200 00a4 00000000 		.long	.LASF7
 3201 00a8 09       		.byte	0x9
 3202 00a9 1B01     		.value	0x11b
 3203 00ab 5B150000 		.long	0x155b
 3204 00af 38       		.byte	0x38
 3205 00b0 05       		.uleb128 0x5
 3206 00b1 00000000 		.long	.LASF8
 3207 00b5 09       		.byte	0x9
 3208 00b6 1C01     		.value	0x11c
 3209 00b8 5B150000 		.long	0x155b
 3210 00bc 40       		.byte	0x40
 3211 00bd 05       		.uleb128 0x5
 3212 00be 00000000 		.long	.LASF9
 3213 00c2 09       		.byte	0x9
 3214 00c3 1E01     		.value	0x11e
 3215 00c5 5B150000 		.long	0x155b
 3216 00c9 48       		.byte	0x48
 3217 00ca 05       		.uleb128 0x5
 3218 00cb 00000000 		.long	.LASF10
 3219 00cf 09       		.byte	0x9
 3220 00d0 1F01     		.value	0x11f
 3221 00d2 5B150000 		.long	0x155b
 3222 00d6 50       		.byte	0x50
 3223 00d7 05       		.uleb128 0x5
 3224 00d8 00000000 		.long	.LASF11
GAS LISTING /tmp/ccrWPnlb.s 			page 129


 3225 00dc 09       		.byte	0x9
 3226 00dd 2001     		.value	0x120
 3227 00df 5B150000 		.long	0x155b
 3228 00e3 58       		.byte	0x58
 3229 00e4 05       		.uleb128 0x5
 3230 00e5 00000000 		.long	.LASF12
 3231 00e9 09       		.byte	0x9
 3232 00ea 2201     		.value	0x122
 3233 00ec F2230000 		.long	0x23f2
 3234 00f0 60       		.byte	0x60
 3235 00f1 05       		.uleb128 0x5
 3236 00f2 00000000 		.long	.LASF13
 3237 00f6 09       		.byte	0x9
 3238 00f7 2401     		.value	0x124
 3239 00f9 F8230000 		.long	0x23f8
 3240 00fd 68       		.byte	0x68
 3241 00fe 05       		.uleb128 0x5
 3242 00ff 00000000 		.long	.LASF14
 3243 0103 09       		.byte	0x9
 3244 0104 2601     		.value	0x126
 3245 0106 93020000 		.long	0x293
 3246 010a 70       		.byte	0x70
 3247 010b 05       		.uleb128 0x5
 3248 010c 00000000 		.long	.LASF15
 3249 0110 09       		.byte	0x9
 3250 0111 2A01     		.value	0x12a
 3251 0113 93020000 		.long	0x293
 3252 0117 74       		.byte	0x74
 3253 0118 05       		.uleb128 0x5
 3254 0119 00000000 		.long	.LASF16
 3255 011d 09       		.byte	0x9
 3256 011e 2C01     		.value	0x12c
 3257 0120 AE1F0000 		.long	0x1fae
 3258 0124 78       		.byte	0x78
 3259 0125 05       		.uleb128 0x5
 3260 0126 00000000 		.long	.LASF17
 3261 012a 09       		.byte	0x9
 3262 012b 3001     		.value	0x130
 3263 012d B0020000 		.long	0x2b0
 3264 0131 80       		.byte	0x80
 3265 0132 05       		.uleb128 0x5
 3266 0133 00000000 		.long	.LASF18
 3267 0137 09       		.byte	0x9
 3268 0138 3101     		.value	0x131
 3269 013a C01C0000 		.long	0x1cc0
 3270 013e 82       		.byte	0x82
 3271 013f 05       		.uleb128 0x5
 3272 0140 00000000 		.long	.LASF19
 3273 0144 09       		.byte	0x9
 3274 0145 3201     		.value	0x132
 3275 0147 FE230000 		.long	0x23fe
 3276 014b 83       		.byte	0x83
 3277 014c 05       		.uleb128 0x5
 3278 014d 00000000 		.long	.LASF20
 3279 0151 09       		.byte	0x9
 3280 0152 3601     		.value	0x136
 3281 0154 0E240000 		.long	0x240e
GAS LISTING /tmp/ccrWPnlb.s 			page 130


 3282 0158 88       		.byte	0x88
 3283 0159 05       		.uleb128 0x5
 3284 015a 00000000 		.long	.LASF21
 3285 015e 09       		.byte	0x9
 3286 015f 3F01     		.value	0x13f
 3287 0161 B91F0000 		.long	0x1fb9
 3288 0165 90       		.byte	0x90
 3289 0166 05       		.uleb128 0x5
 3290 0167 00000000 		.long	.LASF22
 3291 016b 09       		.byte	0x9
 3292 016c 4801     		.value	0x148
 3293 016e 18020000 		.long	0x218
 3294 0172 98       		.byte	0x98
 3295 0173 05       		.uleb128 0x5
 3296 0174 00000000 		.long	.LASF23
 3297 0178 09       		.byte	0x9
 3298 0179 4901     		.value	0x149
 3299 017b 18020000 		.long	0x218
 3300 017f A0       		.byte	0xa0
 3301 0180 05       		.uleb128 0x5
 3302 0181 00000000 		.long	.LASF24
 3303 0185 09       		.byte	0x9
 3304 0186 4A01     		.value	0x14a
 3305 0188 18020000 		.long	0x218
 3306 018c A8       		.byte	0xa8
 3307 018d 05       		.uleb128 0x5
 3308 018e 00000000 		.long	.LASF25
 3309 0192 09       		.byte	0x9
 3310 0193 4B01     		.value	0x14b
 3311 0195 18020000 		.long	0x218
 3312 0199 B0       		.byte	0xb0
 3313 019a 05       		.uleb128 0x5
 3314 019b 00000000 		.long	.LASF26
 3315 019f 09       		.byte	0x9
 3316 01a0 4C01     		.value	0x14c
 3317 01a2 1A020000 		.long	0x21a
 3318 01a6 B8       		.byte	0xb8
 3319 01a7 05       		.uleb128 0x5
 3320 01a8 00000000 		.long	.LASF27
 3321 01ac 09       		.byte	0x9
 3322 01ad 4E01     		.value	0x14e
 3323 01af 93020000 		.long	0x293
 3324 01b3 C0       		.byte	0xc0
 3325 01b4 05       		.uleb128 0x5
 3326 01b5 00000000 		.long	.LASF28
 3327 01b9 09       		.byte	0x9
 3328 01ba 5001     		.value	0x150
 3329 01bc 14240000 		.long	0x2414
 3330 01c0 C4       		.byte	0xc4
 3331 01c1 00       		.byte	0
 3332 01c2 03       		.uleb128 0x3
 3333 01c3 00000000 		.long	.LASF30
 3334 01c7 0A       		.byte	0xa
 3335 01c8 41       		.byte	0x41
 3336 01c9 3B000000 		.long	0x3b
 3337 01cd 02       		.uleb128 0x2
 3338 01ce 08       		.byte	0x8
GAS LISTING /tmp/ccrWPnlb.s 			page 131


 3339 01cf 07       		.byte	0x7
 3340 01d0 00000000 		.long	.LASF32
 3341 01d4 06       		.uleb128 0x6
 3342 01d5 00000000 		.long	.LASF34
 3343 01d9 18       		.byte	0x18
 3344 01da 0B       		.byte	0xb
 3345 01db 00       		.byte	0
 3346 01dc 11020000 		.long	0x211
 3347 01e0 07       		.uleb128 0x7
 3348 01e1 00000000 		.long	.LASF35
 3349 01e5 0B       		.byte	0xb
 3350 01e6 00       		.byte	0
 3351 01e7 11020000 		.long	0x211
 3352 01eb 00       		.byte	0
 3353 01ec 07       		.uleb128 0x7
 3354 01ed 00000000 		.long	.LASF36
 3355 01f1 0B       		.byte	0xb
 3356 01f2 00       		.byte	0
 3357 01f3 11020000 		.long	0x211
 3358 01f7 04       		.byte	0x4
 3359 01f8 07       		.uleb128 0x7
 3360 01f9 00000000 		.long	.LASF37
 3361 01fd 0B       		.byte	0xb
 3362 01fe 00       		.byte	0
 3363 01ff 18020000 		.long	0x218
 3364 0203 08       		.byte	0x8
 3365 0204 07       		.uleb128 0x7
 3366 0205 00000000 		.long	.LASF38
 3367 0209 0B       		.byte	0xb
 3368 020a 00       		.byte	0
 3369 020b 18020000 		.long	0x218
 3370 020f 10       		.byte	0x10
 3371 0210 00       		.byte	0
 3372 0211 02       		.uleb128 0x2
 3373 0212 04       		.byte	0x4
 3374 0213 07       		.byte	0x7
 3375 0214 00000000 		.long	.LASF39
 3376 0218 08       		.uleb128 0x8
 3377 0219 08       		.byte	0x8
 3378 021a 03       		.uleb128 0x3
 3379 021b 00000000 		.long	.LASF40
 3380 021f 0C       		.byte	0xc
 3381 0220 D4       		.byte	0xd4
 3382 0221 25020000 		.long	0x225
 3383 0225 02       		.uleb128 0x2
 3384 0226 08       		.byte	0x8
 3385 0227 07       		.byte	0x7
 3386 0228 00000000 		.long	.LASF41
 3387 022c 09       		.uleb128 0x9
 3388 022d 00000000 		.long	.LASF42
 3389 0231 0C       		.byte	0xc
 3390 0232 6101     		.value	0x161
 3391 0234 11020000 		.long	0x211
 3392 0238 0A       		.uleb128 0xa
 3393 0239 08       		.byte	0x8
 3394 023a 0D       		.byte	0xd
 3395 023b 54       		.byte	0x54
GAS LISTING /tmp/ccrWPnlb.s 			page 132


 3396 023c 00000000 		.long	.LASF367
 3397 0240 7C020000 		.long	0x27c
 3398 0244 0B       		.uleb128 0xb
 3399 0245 04       		.byte	0x4
 3400 0246 0D       		.byte	0xd
 3401 0247 57       		.byte	0x57
 3402 0248 63020000 		.long	0x263
 3403 024c 0C       		.uleb128 0xc
 3404 024d 00000000 		.long	.LASF43
 3405 0251 0D       		.byte	0xd
 3406 0252 59       		.byte	0x59
 3407 0253 11020000 		.long	0x211
 3408 0257 0C       		.uleb128 0xc
 3409 0258 00000000 		.long	.LASF44
 3410 025c 0D       		.byte	0xd
 3411 025d 5D       		.byte	0x5d
 3412 025e 7C020000 		.long	0x27c
 3413 0262 00       		.byte	0
 3414 0263 07       		.uleb128 0x7
 3415 0264 00000000 		.long	.LASF45
 3416 0268 0D       		.byte	0xd
 3417 0269 55       		.byte	0x55
 3418 026a 93020000 		.long	0x293
 3419 026e 00       		.byte	0
 3420 026f 07       		.uleb128 0x7
 3421 0270 00000000 		.long	.LASF46
 3422 0274 0D       		.byte	0xd
 3423 0275 5E       		.byte	0x5e
 3424 0276 44020000 		.long	0x244
 3425 027a 04       		.byte	0x4
 3426 027b 00       		.byte	0
 3427 027c 0D       		.uleb128 0xd
 3428 027d 8C020000 		.long	0x28c
 3429 0281 8C020000 		.long	0x28c
 3430 0285 0E       		.uleb128 0xe
 3431 0286 CD010000 		.long	0x1cd
 3432 028a 03       		.byte	0x3
 3433 028b 00       		.byte	0
 3434 028c 02       		.uleb128 0x2
 3435 028d 01       		.byte	0x1
 3436 028e 06       		.byte	0x6
 3437 028f 00000000 		.long	.LASF47
 3438 0293 0F       		.uleb128 0xf
 3439 0294 04       		.byte	0x4
 3440 0295 05       		.byte	0x5
 3441 0296 696E7400 		.string	"int"
 3442 029a 03       		.uleb128 0x3
 3443 029b 00000000 		.long	.LASF48
 3444 029f 0D       		.byte	0xd
 3445 02a0 5F       		.byte	0x5f
 3446 02a1 38020000 		.long	0x238
 3447 02a5 03       		.uleb128 0x3
 3448 02a6 00000000 		.long	.LASF49
 3449 02aa 0D       		.byte	0xd
 3450 02ab 6A       		.byte	0x6a
 3451 02ac 9A020000 		.long	0x29a
 3452 02b0 02       		.uleb128 0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 133


 3453 02b1 02       		.byte	0x2
 3454 02b2 07       		.byte	0x7
 3455 02b3 00000000 		.long	.LASF50
 3456 02b7 10       		.uleb128 0x10
 3457 02b8 93020000 		.long	0x293
 3458 02bc 11       		.uleb128 0x11
 3459 02bd 08       		.byte	0x8
 3460 02be C2020000 		.long	0x2c2
 3461 02c2 10       		.uleb128 0x10
 3462 02c3 8C020000 		.long	0x28c
 3463 02c7 12       		.uleb128 0x12
 3464 02c8 73746400 		.string	"std"
 3465 02cc 0B       		.byte	0xb
 3466 02cd 00       		.byte	0
 3467 02ce 45120000 		.long	0x1245
 3468 02d2 13       		.uleb128 0x13
 3469 02d3 0E       		.byte	0xe
 3470 02d4 40       		.byte	0x40
 3471 02d5 A5020000 		.long	0x2a5
 3472 02d9 13       		.uleb128 0x13
 3473 02da 0E       		.byte	0xe
 3474 02db 8B       		.byte	0x8b
 3475 02dc 2C020000 		.long	0x22c
 3476 02e0 13       		.uleb128 0x13
 3477 02e1 0E       		.byte	0xe
 3478 02e2 8D       		.byte	0x8d
 3479 02e3 45120000 		.long	0x1245
 3480 02e7 13       		.uleb128 0x13
 3481 02e8 0E       		.byte	0xe
 3482 02e9 8E       		.byte	0x8e
 3483 02ea 5B120000 		.long	0x125b
 3484 02ee 13       		.uleb128 0x13
 3485 02ef 0E       		.byte	0xe
 3486 02f0 8F       		.byte	0x8f
 3487 02f1 77120000 		.long	0x1277
 3488 02f5 13       		.uleb128 0x13
 3489 02f6 0E       		.byte	0xe
 3490 02f7 90       		.byte	0x90
 3491 02f8 A4120000 		.long	0x12a4
 3492 02fc 13       		.uleb128 0x13
 3493 02fd 0E       		.byte	0xe
 3494 02fe 91       		.byte	0x91
 3495 02ff BF120000 		.long	0x12bf
 3496 0303 13       		.uleb128 0x13
 3497 0304 0E       		.byte	0xe
 3498 0305 92       		.byte	0x92
 3499 0306 E5120000 		.long	0x12e5
 3500 030a 13       		.uleb128 0x13
 3501 030b 0E       		.byte	0xe
 3502 030c 93       		.byte	0x93
 3503 030d 00130000 		.long	0x1300
 3504 0311 13       		.uleb128 0x13
 3505 0312 0E       		.byte	0xe
 3506 0313 94       		.byte	0x94
 3507 0314 1C130000 		.long	0x131c
 3508 0318 13       		.uleb128 0x13
 3509 0319 0E       		.byte	0xe
GAS LISTING /tmp/ccrWPnlb.s 			page 134


 3510 031a 95       		.byte	0x95
 3511 031b 38130000 		.long	0x1338
 3512 031f 13       		.uleb128 0x13
 3513 0320 0E       		.byte	0xe
 3514 0321 96       		.byte	0x96
 3515 0322 4E130000 		.long	0x134e
 3516 0326 13       		.uleb128 0x13
 3517 0327 0E       		.byte	0xe
 3518 0328 97       		.byte	0x97
 3519 0329 5A130000 		.long	0x135a
 3520 032d 13       		.uleb128 0x13
 3521 032e 0E       		.byte	0xe
 3522 032f 98       		.byte	0x98
 3523 0330 80130000 		.long	0x1380
 3524 0334 13       		.uleb128 0x13
 3525 0335 0E       		.byte	0xe
 3526 0336 99       		.byte	0x99
 3527 0337 A5130000 		.long	0x13a5
 3528 033b 13       		.uleb128 0x13
 3529 033c 0E       		.byte	0xe
 3530 033d 9A       		.byte	0x9a
 3531 033e C6130000 		.long	0x13c6
 3532 0342 13       		.uleb128 0x13
 3533 0343 0E       		.byte	0xe
 3534 0344 9B       		.byte	0x9b
 3535 0345 F1130000 		.long	0x13f1
 3536 0349 13       		.uleb128 0x13
 3537 034a 0E       		.byte	0xe
 3538 034b 9C       		.byte	0x9c
 3539 034c 0C140000 		.long	0x140c
 3540 0350 13       		.uleb128 0x13
 3541 0351 0E       		.byte	0xe
 3542 0352 9E       		.byte	0x9e
 3543 0353 22140000 		.long	0x1422
 3544 0357 13       		.uleb128 0x13
 3545 0358 0E       		.byte	0xe
 3546 0359 A0       		.byte	0xa0
 3547 035a 43140000 		.long	0x1443
 3548 035e 13       		.uleb128 0x13
 3549 035f 0E       		.byte	0xe
 3550 0360 A1       		.byte	0xa1
 3551 0361 5F140000 		.long	0x145f
 3552 0365 13       		.uleb128 0x13
 3553 0366 0E       		.byte	0xe
 3554 0367 A2       		.byte	0xa2
 3555 0368 7A140000 		.long	0x147a
 3556 036c 13       		.uleb128 0x13
 3557 036d 0E       		.byte	0xe
 3558 036e A4       		.byte	0xa4
 3559 036f A0140000 		.long	0x14a0
 3560 0373 13       		.uleb128 0x13
 3561 0374 0E       		.byte	0xe
 3562 0375 A7       		.byte	0xa7
 3563 0376 C0140000 		.long	0x14c0
 3564 037a 13       		.uleb128 0x13
 3565 037b 0E       		.byte	0xe
 3566 037c AA       		.byte	0xaa
GAS LISTING /tmp/ccrWPnlb.s 			page 135


 3567 037d E5140000 		.long	0x14e5
 3568 0381 13       		.uleb128 0x13
 3569 0382 0E       		.byte	0xe
 3570 0383 AC       		.byte	0xac
 3571 0384 05150000 		.long	0x1505
 3572 0388 13       		.uleb128 0x13
 3573 0389 0E       		.byte	0xe
 3574 038a AE       		.byte	0xae
 3575 038b 20150000 		.long	0x1520
 3576 038f 13       		.uleb128 0x13
 3577 0390 0E       		.byte	0xe
 3578 0391 B0       		.byte	0xb0
 3579 0392 3B150000 		.long	0x153b
 3580 0396 13       		.uleb128 0x13
 3581 0397 0E       		.byte	0xe
 3582 0398 B1       		.byte	0xb1
 3583 0399 61150000 		.long	0x1561
 3584 039d 13       		.uleb128 0x13
 3585 039e 0E       		.byte	0xe
 3586 039f B2       		.byte	0xb2
 3587 03a0 7B150000 		.long	0x157b
 3588 03a4 13       		.uleb128 0x13
 3589 03a5 0E       		.byte	0xe
 3590 03a6 B3       		.byte	0xb3
 3591 03a7 95150000 		.long	0x1595
 3592 03ab 13       		.uleb128 0x13
 3593 03ac 0E       		.byte	0xe
 3594 03ad B4       		.byte	0xb4
 3595 03ae AF150000 		.long	0x15af
 3596 03b2 13       		.uleb128 0x13
 3597 03b3 0E       		.byte	0xe
 3598 03b4 B5       		.byte	0xb5
 3599 03b5 C9150000 		.long	0x15c9
 3600 03b9 13       		.uleb128 0x13
 3601 03ba 0E       		.byte	0xe
 3602 03bb B6       		.byte	0xb6
 3603 03bc E3150000 		.long	0x15e3
 3604 03c0 13       		.uleb128 0x13
 3605 03c1 0E       		.byte	0xe
 3606 03c2 B7       		.byte	0xb7
 3607 03c3 A3160000 		.long	0x16a3
 3608 03c7 13       		.uleb128 0x13
 3609 03c8 0E       		.byte	0xe
 3610 03c9 B8       		.byte	0xb8
 3611 03ca B9160000 		.long	0x16b9
 3612 03ce 13       		.uleb128 0x13
 3613 03cf 0E       		.byte	0xe
 3614 03d0 B9       		.byte	0xb9
 3615 03d1 D8160000 		.long	0x16d8
 3616 03d5 13       		.uleb128 0x13
 3617 03d6 0E       		.byte	0xe
 3618 03d7 BA       		.byte	0xba
 3619 03d8 F7160000 		.long	0x16f7
 3620 03dc 13       		.uleb128 0x13
 3621 03dd 0E       		.byte	0xe
 3622 03de BB       		.byte	0xbb
 3623 03df 16170000 		.long	0x1716
GAS LISTING /tmp/ccrWPnlb.s 			page 136


 3624 03e3 13       		.uleb128 0x13
 3625 03e4 0E       		.byte	0xe
 3626 03e5 BC       		.byte	0xbc
 3627 03e6 41170000 		.long	0x1741
 3628 03ea 13       		.uleb128 0x13
 3629 03eb 0E       		.byte	0xe
 3630 03ec BD       		.byte	0xbd
 3631 03ed 5B170000 		.long	0x175b
 3632 03f1 13       		.uleb128 0x13
 3633 03f2 0E       		.byte	0xe
 3634 03f3 BF       		.byte	0xbf
 3635 03f4 83170000 		.long	0x1783
 3636 03f8 13       		.uleb128 0x13
 3637 03f9 0E       		.byte	0xe
 3638 03fa C1       		.byte	0xc1
 3639 03fb 9E170000 		.long	0x179e
 3640 03ff 13       		.uleb128 0x13
 3641 0400 0E       		.byte	0xe
 3642 0401 C2       		.byte	0xc2
 3643 0402 BE170000 		.long	0x17be
 3644 0406 13       		.uleb128 0x13
 3645 0407 0E       		.byte	0xe
 3646 0408 C3       		.byte	0xc3
 3647 0409 E5170000 		.long	0x17e5
 3648 040d 13       		.uleb128 0x13
 3649 040e 0E       		.byte	0xe
 3650 040f C4       		.byte	0xc4
 3651 0410 05180000 		.long	0x1805
 3652 0414 13       		.uleb128 0x13
 3653 0415 0E       		.byte	0xe
 3654 0416 C5       		.byte	0xc5
 3655 0417 24180000 		.long	0x1824
 3656 041b 13       		.uleb128 0x13
 3657 041c 0E       		.byte	0xe
 3658 041d C6       		.byte	0xc6
 3659 041e 3A180000 		.long	0x183a
 3660 0422 13       		.uleb128 0x13
 3661 0423 0E       		.byte	0xe
 3662 0424 C7       		.byte	0xc7
 3663 0425 5A180000 		.long	0x185a
 3664 0429 13       		.uleb128 0x13
 3665 042a 0E       		.byte	0xe
 3666 042b C8       		.byte	0xc8
 3667 042c 7A180000 		.long	0x187a
 3668 0430 13       		.uleb128 0x13
 3669 0431 0E       		.byte	0xe
 3670 0432 C9       		.byte	0xc9
 3671 0433 9A180000 		.long	0x189a
 3672 0437 13       		.uleb128 0x13
 3673 0438 0E       		.byte	0xe
 3674 0439 CA       		.byte	0xca
 3675 043a BA180000 		.long	0x18ba
 3676 043e 13       		.uleb128 0x13
 3677 043f 0E       		.byte	0xe
 3678 0440 CB       		.byte	0xcb
 3679 0441 D1180000 		.long	0x18d1
 3680 0445 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 137


 3681 0446 0E       		.byte	0xe
 3682 0447 CC       		.byte	0xcc
 3683 0448 E8180000 		.long	0x18e8
 3684 044c 13       		.uleb128 0x13
 3685 044d 0E       		.byte	0xe
 3686 044e CD       		.byte	0xcd
 3687 044f 06190000 		.long	0x1906
 3688 0453 13       		.uleb128 0x13
 3689 0454 0E       		.byte	0xe
 3690 0455 CE       		.byte	0xce
 3691 0456 25190000 		.long	0x1925
 3692 045a 13       		.uleb128 0x13
 3693 045b 0E       		.byte	0xe
 3694 045c CF       		.byte	0xcf
 3695 045d 43190000 		.long	0x1943
 3696 0461 13       		.uleb128 0x13
 3697 0462 0E       		.byte	0xe
 3698 0463 D0       		.byte	0xd0
 3699 0464 62190000 		.long	0x1962
 3700 0468 14       		.uleb128 0x14
 3701 0469 0E       		.byte	0xe
 3702 046a 0801     		.value	0x108
 3703 046c 191C0000 		.long	0x1c19
 3704 0470 14       		.uleb128 0x14
 3705 0471 0E       		.byte	0xe
 3706 0472 0901     		.value	0x109
 3707 0474 3B1C0000 		.long	0x1c3b
 3708 0478 14       		.uleb128 0x14
 3709 0479 0E       		.byte	0xe
 3710 047a 0A01     		.value	0x10a
 3711 047c 621C0000 		.long	0x1c62
 3712 0480 14       		.uleb128 0x14
 3713 0481 0E       		.byte	0xe
 3714 0482 1801     		.value	0x118
 3715 0484 83170000 		.long	0x1783
 3716 0488 14       		.uleb128 0x14
 3717 0489 0E       		.byte	0xe
 3718 048a 1B01     		.value	0x11b
 3719 048c A0140000 		.long	0x14a0
 3720 0490 14       		.uleb128 0x14
 3721 0491 0E       		.byte	0xe
 3722 0492 1E01     		.value	0x11e
 3723 0494 E5140000 		.long	0x14e5
 3724 0498 14       		.uleb128 0x14
 3725 0499 0E       		.byte	0xe
 3726 049a 2101     		.value	0x121
 3727 049c 20150000 		.long	0x1520
 3728 04a0 14       		.uleb128 0x14
 3729 04a1 0E       		.byte	0xe
 3730 04a2 2501     		.value	0x125
 3731 04a4 191C0000 		.long	0x1c19
 3732 04a8 14       		.uleb128 0x14
 3733 04a9 0E       		.byte	0xe
 3734 04aa 2601     		.value	0x126
 3735 04ac 3B1C0000 		.long	0x1c3b
 3736 04b0 14       		.uleb128 0x14
 3737 04b1 0E       		.byte	0xe
GAS LISTING /tmp/ccrWPnlb.s 			page 138


 3738 04b2 2701     		.value	0x127
 3739 04b4 621C0000 		.long	0x1c62
 3740 04b8 15       		.uleb128 0x15
 3741 04b9 00000000 		.long	.LASF51
 3742 04bd 0F       		.byte	0xf
 3743 04be 36       		.byte	0x36
 3744 04bf 6A060000 		.long	0x66a
 3745 04c3 16       		.uleb128 0x16
 3746 04c4 00000000 		.long	.LASF53
 3747 04c8 08       		.byte	0x8
 3748 04c9 0F       		.byte	0xf
 3749 04ca 4B       		.byte	0x4b
 3750 04cb 64060000 		.long	0x664
 3751 04cf 07       		.uleb128 0x7
 3752 04d0 00000000 		.long	.LASF52
 3753 04d4 0F       		.byte	0xf
 3754 04d5 4D       		.byte	0x4d
 3755 04d6 18020000 		.long	0x218
 3756 04da 00       		.byte	0
 3757 04db 17       		.uleb128 0x17
 3758 04dc 00000000 		.long	.LASF53
 3759 04e0 0F       		.byte	0xf
 3760 04e1 4F       		.byte	0x4f
 3761 04e2 EA040000 		.long	0x4ea
 3762 04e6 F5040000 		.long	0x4f5
 3763 04ea 18       		.uleb128 0x18
 3764 04eb 891C0000 		.long	0x1c89
 3765 04ef 19       		.uleb128 0x19
 3766 04f0 18020000 		.long	0x218
 3767 04f4 00       		.byte	0
 3768 04f5 1A       		.uleb128 0x1a
 3769 04f6 00000000 		.long	.LASF54
 3770 04fa 0F       		.byte	0xf
 3771 04fb 51       		.byte	0x51
 3772 04fc 00000000 		.long	.LASF56
 3773 0500 08050000 		.long	0x508
 3774 0504 0E050000 		.long	0x50e
 3775 0508 18       		.uleb128 0x18
 3776 0509 891C0000 		.long	0x1c89
 3777 050d 00       		.byte	0
 3778 050e 1A       		.uleb128 0x1a
 3779 050f 00000000 		.long	.LASF55
 3780 0513 0F       		.byte	0xf
 3781 0514 52       		.byte	0x52
 3782 0515 00000000 		.long	.LASF57
 3783 0519 21050000 		.long	0x521
 3784 051d 27050000 		.long	0x527
 3785 0521 18       		.uleb128 0x18
 3786 0522 891C0000 		.long	0x1c89
 3787 0526 00       		.byte	0
 3788 0527 1B       		.uleb128 0x1b
 3789 0528 00000000 		.long	.LASF62
 3790 052c 0F       		.byte	0xf
 3791 052d 54       		.byte	0x54
 3792 052e 00000000 		.long	.LASF64
 3793 0532 18020000 		.long	0x218
 3794 0536 3E050000 		.long	0x53e
GAS LISTING /tmp/ccrWPnlb.s 			page 139


 3795 053a 44050000 		.long	0x544
 3796 053e 18       		.uleb128 0x18
 3797 053f 8F1C0000 		.long	0x1c8f
 3798 0543 00       		.byte	0
 3799 0544 1C       		.uleb128 0x1c
 3800 0545 00000000 		.long	.LASF53
 3801 0549 0F       		.byte	0xf
 3802 054a 5A       		.byte	0x5a
 3803 054b 01       		.byte	0x1
 3804 054c 54050000 		.long	0x554
 3805 0550 5A050000 		.long	0x55a
 3806 0554 18       		.uleb128 0x18
 3807 0555 891C0000 		.long	0x1c89
 3808 0559 00       		.byte	0
 3809 055a 1C       		.uleb128 0x1c
 3810 055b 00000000 		.long	.LASF53
 3811 055f 0F       		.byte	0xf
 3812 0560 5C       		.byte	0x5c
 3813 0561 01       		.byte	0x1
 3814 0562 6A050000 		.long	0x56a
 3815 0566 75050000 		.long	0x575
 3816 056a 18       		.uleb128 0x18
 3817 056b 891C0000 		.long	0x1c89
 3818 056f 19       		.uleb128 0x19
 3819 0570 951C0000 		.long	0x1c95
 3820 0574 00       		.byte	0
 3821 0575 1C       		.uleb128 0x1c
 3822 0576 00000000 		.long	.LASF53
 3823 057a 0F       		.byte	0xf
 3824 057b 5F       		.byte	0x5f
 3825 057c 01       		.byte	0x1
 3826 057d 85050000 		.long	0x585
 3827 0581 90050000 		.long	0x590
 3828 0585 18       		.uleb128 0x18
 3829 0586 891C0000 		.long	0x1c89
 3830 058a 19       		.uleb128 0x19
 3831 058b 71060000 		.long	0x671
 3832 058f 00       		.byte	0
 3833 0590 1C       		.uleb128 0x1c
 3834 0591 00000000 		.long	.LASF53
 3835 0595 0F       		.byte	0xf
 3836 0596 63       		.byte	0x63
 3837 0597 01       		.byte	0x1
 3838 0598 A0050000 		.long	0x5a0
 3839 059c AB050000 		.long	0x5ab
 3840 05a0 18       		.uleb128 0x18
 3841 05a1 891C0000 		.long	0x1c89
 3842 05a5 19       		.uleb128 0x19
 3843 05a6 A01C0000 		.long	0x1ca0
 3844 05aa 00       		.byte	0
 3845 05ab 1D       		.uleb128 0x1d
 3846 05ac 00000000 		.long	.LASF58
 3847 05b0 0F       		.byte	0xf
 3848 05b1 70       		.byte	0x70
 3849 05b2 00000000 		.long	.LASF59
 3850 05b6 A61C0000 		.long	0x1ca6
 3851 05ba 01       		.byte	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 140


 3852 05bb C3050000 		.long	0x5c3
 3853 05bf CE050000 		.long	0x5ce
 3854 05c3 18       		.uleb128 0x18
 3855 05c4 891C0000 		.long	0x1c89
 3856 05c8 19       		.uleb128 0x19
 3857 05c9 951C0000 		.long	0x1c95
 3858 05cd 00       		.byte	0
 3859 05ce 1D       		.uleb128 0x1d
 3860 05cf 00000000 		.long	.LASF58
 3861 05d3 0F       		.byte	0xf
 3862 05d4 74       		.byte	0x74
 3863 05d5 00000000 		.long	.LASF60
 3864 05d9 A61C0000 		.long	0x1ca6
 3865 05dd 01       		.byte	0x1
 3866 05de E6050000 		.long	0x5e6
 3867 05e2 F1050000 		.long	0x5f1
 3868 05e6 18       		.uleb128 0x18
 3869 05e7 891C0000 		.long	0x1c89
 3870 05eb 19       		.uleb128 0x19
 3871 05ec A01C0000 		.long	0x1ca0
 3872 05f0 00       		.byte	0
 3873 05f1 1C       		.uleb128 0x1c
 3874 05f2 00000000 		.long	.LASF61
 3875 05f6 0F       		.byte	0xf
 3876 05f7 7B       		.byte	0x7b
 3877 05f8 01       		.byte	0x1
 3878 05f9 01060000 		.long	0x601
 3879 05fd 0C060000 		.long	0x60c
 3880 0601 18       		.uleb128 0x18
 3881 0602 891C0000 		.long	0x1c89
 3882 0606 18       		.uleb128 0x18
 3883 0607 93020000 		.long	0x293
 3884 060b 00       		.byte	0
 3885 060c 1E       		.uleb128 0x1e
 3886 060d 00000000 		.long	.LASF63
 3887 0611 0F       		.byte	0xf
 3888 0612 7E       		.byte	0x7e
 3889 0613 00000000 		.long	.LASF65
 3890 0617 01       		.byte	0x1
 3891 0618 20060000 		.long	0x620
 3892 061c 2B060000 		.long	0x62b
 3893 0620 18       		.uleb128 0x18
 3894 0621 891C0000 		.long	0x1c89
 3895 0625 19       		.uleb128 0x19
 3896 0626 A61C0000 		.long	0x1ca6
 3897 062a 00       		.byte	0
 3898 062b 1F       		.uleb128 0x1f
 3899 062c 00000000 		.long	.LASF542
 3900 0630 0F       		.byte	0xf
 3901 0631 8A       		.byte	0x8a
 3902 0632 00000000 		.long	.LASF543
 3903 0636 AC1C0000 		.long	0x1cac
 3904 063a 01       		.byte	0x1
 3905 063b 43060000 		.long	0x643
 3906 063f 49060000 		.long	0x649
 3907 0643 18       		.uleb128 0x18
 3908 0644 8F1C0000 		.long	0x1c8f
GAS LISTING /tmp/ccrWPnlb.s 			page 141


 3909 0648 00       		.byte	0
 3910 0649 20       		.uleb128 0x20
 3911 064a 00000000 		.long	.LASF66
 3912 064e 0F       		.byte	0xf
 3913 064f 93       		.byte	0x93
 3914 0650 00000000 		.long	.LASF67
 3915 0654 B31C0000 		.long	0x1cb3
 3916 0658 01       		.byte	0x1
 3917 0659 5D060000 		.long	0x65d
 3918 065d 18       		.uleb128 0x18
 3919 065e 8F1C0000 		.long	0x1c8f
 3920 0662 00       		.byte	0
 3921 0663 00       		.byte	0
 3922 0664 10       		.uleb128 0x10
 3923 0665 C3040000 		.long	0x4c3
 3924 0669 00       		.byte	0
 3925 066a 13       		.uleb128 0x13
 3926 066b 0F       		.byte	0xf
 3927 066c 3A       		.byte	0x3a
 3928 066d C3040000 		.long	0x4c3
 3929 0671 03       		.uleb128 0x3
 3930 0672 00000000 		.long	.LASF68
 3931 0676 10       		.byte	0x10
 3932 0677 C0       		.byte	0xc0
 3933 0678 9B1C0000 		.long	0x1c9b
 3934 067c 21       		.uleb128 0x21
 3935 067d 00000000 		.long	.LASF544
 3936 0681 10       		.uleb128 0x10
 3937 0682 7C060000 		.long	0x67c
 3938 0686 22       		.uleb128 0x22
 3939 0687 00000000 		.long	.LASF545
 3940 068b 01       		.byte	0x1
 3941 068c 2B       		.byte	0x2b
 3942 068d 4C       		.byte	0x4c
 3943 068e 23       		.uleb128 0x23
 3944 068f 00000000 		.long	.LASF277
 3945 0693 1D       		.byte	0x1d
 3946 0694 30       		.byte	0x30
 3947 0695 06       		.uleb128 0x6
 3948 0696 00000000 		.long	.LASF69
 3949 069a 01       		.byte	0x1
 3950 069b 04       		.byte	0x4
 3951 069c E9       		.byte	0xe9
 3952 069d 5D080000 		.long	0x85d
 3953 06a1 03       		.uleb128 0x3
 3954 06a2 00000000 		.long	.LASF70
 3955 06a6 04       		.byte	0x4
 3956 06a7 EB       		.byte	0xeb
 3957 06a8 8C020000 		.long	0x28c
 3958 06ac 03       		.uleb128 0x3
 3959 06ad 00000000 		.long	.LASF71
 3960 06b1 04       		.byte	0x4
 3961 06b2 EC       		.byte	0xec
 3962 06b3 93020000 		.long	0x293
 3963 06b7 24       		.uleb128 0x24
 3964 06b8 00000000 		.long	.LASF84
 3965 06bc 04       		.byte	0x4
GAS LISTING /tmp/ccrWPnlb.s 			page 142


 3966 06bd F2       		.byte	0xf2
 3967 06be 00000000 		.long	.LASF546
 3968 06c2 D1060000 		.long	0x6d1
 3969 06c6 19       		.uleb128 0x19
 3970 06c7 EB1C0000 		.long	0x1ceb
 3971 06cb 19       		.uleb128 0x19
 3972 06cc F11C0000 		.long	0x1cf1
 3973 06d0 00       		.byte	0
 3974 06d1 10       		.uleb128 0x10
 3975 06d2 A1060000 		.long	0x6a1
 3976 06d6 25       		.uleb128 0x25
 3977 06d7 657100   		.string	"eq"
 3978 06da 04       		.byte	0x4
 3979 06db F6       		.byte	0xf6
 3980 06dc 00000000 		.long	.LASF72
 3981 06e0 AC1C0000 		.long	0x1cac
 3982 06e4 F3060000 		.long	0x6f3
 3983 06e8 19       		.uleb128 0x19
 3984 06e9 F11C0000 		.long	0x1cf1
 3985 06ed 19       		.uleb128 0x19
 3986 06ee F11C0000 		.long	0x1cf1
 3987 06f2 00       		.byte	0
 3988 06f3 25       		.uleb128 0x25
 3989 06f4 6C7400   		.string	"lt"
 3990 06f7 04       		.byte	0x4
 3991 06f8 FA       		.byte	0xfa
 3992 06f9 00000000 		.long	.LASF73
 3993 06fd AC1C0000 		.long	0x1cac
 3994 0701 10070000 		.long	0x710
 3995 0705 19       		.uleb128 0x19
 3996 0706 F11C0000 		.long	0x1cf1
 3997 070a 19       		.uleb128 0x19
 3998 070b F11C0000 		.long	0x1cf1
 3999 070f 00       		.byte	0
 4000 0710 26       		.uleb128 0x26
 4001 0711 00000000 		.long	.LASF74
 4002 0715 04       		.byte	0x4
 4003 0716 0201     		.value	0x102
 4004 0718 00000000 		.long	.LASF76
 4005 071c 93020000 		.long	0x293
 4006 0720 34070000 		.long	0x734
 4007 0724 19       		.uleb128 0x19
 4008 0725 F71C0000 		.long	0x1cf7
 4009 0729 19       		.uleb128 0x19
 4010 072a F71C0000 		.long	0x1cf7
 4011 072e 19       		.uleb128 0x19
 4012 072f 5D080000 		.long	0x85d
 4013 0733 00       		.byte	0
 4014 0734 26       		.uleb128 0x26
 4015 0735 00000000 		.long	.LASF75
 4016 0739 04       		.byte	0x4
 4017 073a 0601     		.value	0x106
 4018 073c 00000000 		.long	.LASF77
 4019 0740 5D080000 		.long	0x85d
 4020 0744 4E070000 		.long	0x74e
 4021 0748 19       		.uleb128 0x19
 4022 0749 F71C0000 		.long	0x1cf7
GAS LISTING /tmp/ccrWPnlb.s 			page 143


 4023 074d 00       		.byte	0
 4024 074e 26       		.uleb128 0x26
 4025 074f 00000000 		.long	.LASF78
 4026 0753 04       		.byte	0x4
 4027 0754 0A01     		.value	0x10a
 4028 0756 00000000 		.long	.LASF79
 4029 075a F71C0000 		.long	0x1cf7
 4030 075e 72070000 		.long	0x772
 4031 0762 19       		.uleb128 0x19
 4032 0763 F71C0000 		.long	0x1cf7
 4033 0767 19       		.uleb128 0x19
 4034 0768 5D080000 		.long	0x85d
 4035 076c 19       		.uleb128 0x19
 4036 076d F11C0000 		.long	0x1cf1
 4037 0771 00       		.byte	0
 4038 0772 26       		.uleb128 0x26
 4039 0773 00000000 		.long	.LASF80
 4040 0777 04       		.byte	0x4
 4041 0778 0E01     		.value	0x10e
 4042 077a 00000000 		.long	.LASF81
 4043 077e FD1C0000 		.long	0x1cfd
 4044 0782 96070000 		.long	0x796
 4045 0786 19       		.uleb128 0x19
 4046 0787 FD1C0000 		.long	0x1cfd
 4047 078b 19       		.uleb128 0x19
 4048 078c F71C0000 		.long	0x1cf7
 4049 0790 19       		.uleb128 0x19
 4050 0791 5D080000 		.long	0x85d
 4051 0795 00       		.byte	0
 4052 0796 26       		.uleb128 0x26
 4053 0797 00000000 		.long	.LASF82
 4054 079b 04       		.byte	0x4
 4055 079c 1201     		.value	0x112
 4056 079e 00000000 		.long	.LASF83
 4057 07a2 FD1C0000 		.long	0x1cfd
 4058 07a6 BA070000 		.long	0x7ba
 4059 07aa 19       		.uleb128 0x19
 4060 07ab FD1C0000 		.long	0x1cfd
 4061 07af 19       		.uleb128 0x19
 4062 07b0 F71C0000 		.long	0x1cf7
 4063 07b4 19       		.uleb128 0x19
 4064 07b5 5D080000 		.long	0x85d
 4065 07b9 00       		.byte	0
 4066 07ba 26       		.uleb128 0x26
 4067 07bb 00000000 		.long	.LASF84
 4068 07bf 04       		.byte	0x4
 4069 07c0 1601     		.value	0x116
 4070 07c2 00000000 		.long	.LASF85
 4071 07c6 FD1C0000 		.long	0x1cfd
 4072 07ca DE070000 		.long	0x7de
 4073 07ce 19       		.uleb128 0x19
 4074 07cf FD1C0000 		.long	0x1cfd
 4075 07d3 19       		.uleb128 0x19
 4076 07d4 5D080000 		.long	0x85d
 4077 07d8 19       		.uleb128 0x19
 4078 07d9 A1060000 		.long	0x6a1
 4079 07dd 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 144


 4080 07de 26       		.uleb128 0x26
 4081 07df 00000000 		.long	.LASF86
 4082 07e3 04       		.byte	0x4
 4083 07e4 1A01     		.value	0x11a
 4084 07e6 00000000 		.long	.LASF87
 4085 07ea A1060000 		.long	0x6a1
 4086 07ee F8070000 		.long	0x7f8
 4087 07f2 19       		.uleb128 0x19
 4088 07f3 031D0000 		.long	0x1d03
 4089 07f7 00       		.byte	0
 4090 07f8 10       		.uleb128 0x10
 4091 07f9 AC060000 		.long	0x6ac
 4092 07fd 26       		.uleb128 0x26
 4093 07fe 00000000 		.long	.LASF88
 4094 0802 04       		.byte	0x4
 4095 0803 2001     		.value	0x120
 4096 0805 00000000 		.long	.LASF89
 4097 0809 AC060000 		.long	0x6ac
 4098 080d 17080000 		.long	0x817
 4099 0811 19       		.uleb128 0x19
 4100 0812 F11C0000 		.long	0x1cf1
 4101 0816 00       		.byte	0
 4102 0817 26       		.uleb128 0x26
 4103 0818 00000000 		.long	.LASF90
 4104 081c 04       		.byte	0x4
 4105 081d 2401     		.value	0x124
 4106 081f 00000000 		.long	.LASF91
 4107 0823 AC1C0000 		.long	0x1cac
 4108 0827 36080000 		.long	0x836
 4109 082b 19       		.uleb128 0x19
 4110 082c 031D0000 		.long	0x1d03
 4111 0830 19       		.uleb128 0x19
 4112 0831 031D0000 		.long	0x1d03
 4113 0835 00       		.byte	0
 4114 0836 27       		.uleb128 0x27
 4115 0837 656F6600 		.string	"eof"
 4116 083b 04       		.byte	0x4
 4117 083c 2801     		.value	0x128
 4118 083e 00000000 		.long	.LASF547
 4119 0842 AC060000 		.long	0x6ac
 4120 0846 28       		.uleb128 0x28
 4121 0847 00000000 		.long	.LASF92
 4122 084b 04       		.byte	0x4
 4123 084c 2C01     		.value	0x12c
 4124 084e 00000000 		.long	.LASF179
 4125 0852 AC060000 		.long	0x6ac
 4126 0856 19       		.uleb128 0x19
 4127 0857 031D0000 		.long	0x1d03
 4128 085b 00       		.byte	0
 4129 085c 00       		.byte	0
 4130 085d 03       		.uleb128 0x3
 4131 085e 00000000 		.long	.LASF40
 4132 0862 10       		.byte	0x10
 4133 0863 BC       		.byte	0xbc
 4134 0864 25020000 		.long	0x225
 4135 0868 13       		.uleb128 0x13
 4136 0869 11       		.byte	0x11
GAS LISTING /tmp/ccrWPnlb.s 			page 145


 4137 086a 30       		.byte	0x30
 4138 086b 091D0000 		.long	0x1d09
 4139 086f 13       		.uleb128 0x13
 4140 0870 11       		.byte	0x11
 4141 0871 31       		.byte	0x31
 4142 0872 141D0000 		.long	0x1d14
 4143 0876 13       		.uleb128 0x13
 4144 0877 11       		.byte	0x11
 4145 0878 32       		.byte	0x32
 4146 0879 1F1D0000 		.long	0x1d1f
 4147 087d 13       		.uleb128 0x13
 4148 087e 11       		.byte	0x11
 4149 087f 33       		.byte	0x33
 4150 0880 2A1D0000 		.long	0x1d2a
 4151 0884 13       		.uleb128 0x13
 4152 0885 11       		.byte	0x11
 4153 0886 35       		.byte	0x35
 4154 0887 B91D0000 		.long	0x1db9
 4155 088b 13       		.uleb128 0x13
 4156 088c 11       		.byte	0x11
 4157 088d 36       		.byte	0x36
 4158 088e C41D0000 		.long	0x1dc4
 4159 0892 13       		.uleb128 0x13
 4160 0893 11       		.byte	0x11
 4161 0894 37       		.byte	0x37
 4162 0895 CF1D0000 		.long	0x1dcf
 4163 0899 13       		.uleb128 0x13
 4164 089a 11       		.byte	0x11
 4165 089b 38       		.byte	0x38
 4166 089c DA1D0000 		.long	0x1dda
 4167 08a0 13       		.uleb128 0x13
 4168 08a1 11       		.byte	0x11
 4169 08a2 3A       		.byte	0x3a
 4170 08a3 611D0000 		.long	0x1d61
 4171 08a7 13       		.uleb128 0x13
 4172 08a8 11       		.byte	0x11
 4173 08a9 3B       		.byte	0x3b
 4174 08aa 6C1D0000 		.long	0x1d6c
 4175 08ae 13       		.uleb128 0x13
 4176 08af 11       		.byte	0x11
 4177 08b0 3C       		.byte	0x3c
 4178 08b1 771D0000 		.long	0x1d77
 4179 08b5 13       		.uleb128 0x13
 4180 08b6 11       		.byte	0x11
 4181 08b7 3D       		.byte	0x3d
 4182 08b8 821D0000 		.long	0x1d82
 4183 08bc 13       		.uleb128 0x13
 4184 08bd 11       		.byte	0x11
 4185 08be 3F       		.byte	0x3f
 4186 08bf 271E0000 		.long	0x1e27
 4187 08c3 13       		.uleb128 0x13
 4188 08c4 11       		.byte	0x11
 4189 08c5 40       		.byte	0x40
 4190 08c6 111E0000 		.long	0x1e11
 4191 08ca 13       		.uleb128 0x13
 4192 08cb 11       		.byte	0x11
 4193 08cc 42       		.byte	0x42
GAS LISTING /tmp/ccrWPnlb.s 			page 146


 4194 08cd 351D0000 		.long	0x1d35
 4195 08d1 13       		.uleb128 0x13
 4196 08d2 11       		.byte	0x11
 4197 08d3 43       		.byte	0x43
 4198 08d4 401D0000 		.long	0x1d40
 4199 08d8 13       		.uleb128 0x13
 4200 08d9 11       		.byte	0x11
 4201 08da 44       		.byte	0x44
 4202 08db 4B1D0000 		.long	0x1d4b
 4203 08df 13       		.uleb128 0x13
 4204 08e0 11       		.byte	0x11
 4205 08e1 45       		.byte	0x45
 4206 08e2 561D0000 		.long	0x1d56
 4207 08e6 13       		.uleb128 0x13
 4208 08e7 11       		.byte	0x11
 4209 08e8 47       		.byte	0x47
 4210 08e9 E51D0000 		.long	0x1de5
 4211 08ed 13       		.uleb128 0x13
 4212 08ee 11       		.byte	0x11
 4213 08ef 48       		.byte	0x48
 4214 08f0 F01D0000 		.long	0x1df0
 4215 08f4 13       		.uleb128 0x13
 4216 08f5 11       		.byte	0x11
 4217 08f6 49       		.byte	0x49
 4218 08f7 FB1D0000 		.long	0x1dfb
 4219 08fb 13       		.uleb128 0x13
 4220 08fc 11       		.byte	0x11
 4221 08fd 4A       		.byte	0x4a
 4222 08fe 061E0000 		.long	0x1e06
 4223 0902 13       		.uleb128 0x13
 4224 0903 11       		.byte	0x11
 4225 0904 4C       		.byte	0x4c
 4226 0905 8D1D0000 		.long	0x1d8d
 4227 0909 13       		.uleb128 0x13
 4228 090a 11       		.byte	0x11
 4229 090b 4D       		.byte	0x4d
 4230 090c 981D0000 		.long	0x1d98
 4231 0910 13       		.uleb128 0x13
 4232 0911 11       		.byte	0x11
 4233 0912 4E       		.byte	0x4e
 4234 0913 A31D0000 		.long	0x1da3
 4235 0917 13       		.uleb128 0x13
 4236 0918 11       		.byte	0x11
 4237 0919 4F       		.byte	0x4f
 4238 091a AE1D0000 		.long	0x1dae
 4239 091e 13       		.uleb128 0x13
 4240 091f 11       		.byte	0x11
 4241 0920 51       		.byte	0x51
 4242 0921 321E0000 		.long	0x1e32
 4243 0925 13       		.uleb128 0x13
 4244 0926 11       		.byte	0x11
 4245 0927 52       		.byte	0x52
 4246 0928 1C1E0000 		.long	0x1e1c
 4247 092c 13       		.uleb128 0x13
 4248 092d 12       		.byte	0x12
 4249 092e 35       		.byte	0x35
 4250 092f 4B1E0000 		.long	0x1e4b
GAS LISTING /tmp/ccrWPnlb.s 			page 147


 4251 0933 13       		.uleb128 0x13
 4252 0934 12       		.byte	0x12
 4253 0935 36       		.byte	0x36
 4254 0936 781F0000 		.long	0x1f78
 4255 093a 13       		.uleb128 0x13
 4256 093b 12       		.byte	0x12
 4257 093c 37       		.byte	0x37
 4258 093d 921F0000 		.long	0x1f92
 4259 0941 03       		.uleb128 0x3
 4260 0942 00000000 		.long	.LASF93
 4261 0946 10       		.byte	0x10
 4262 0947 BD       		.byte	0xbd
 4263 0948 DE170000 		.long	0x17de
 4264 094c 13       		.uleb128 0x13
 4265 094d 13       		.byte	0x13
 4266 094e 76       		.byte	0x76
 4267 094f 0C200000 		.long	0x200c
 4268 0953 13       		.uleb128 0x13
 4269 0954 13       		.byte	0x13
 4270 0955 77       		.byte	0x77
 4271 0956 3C200000 		.long	0x203c
 4272 095a 13       		.uleb128 0x13
 4273 095b 13       		.byte	0x13
 4274 095c 7B       		.byte	0x7b
 4275 095d 9D200000 		.long	0x209d
 4276 0961 13       		.uleb128 0x13
 4277 0962 13       		.byte	0x13
 4278 0963 7E       		.byte	0x7e
 4279 0964 BA200000 		.long	0x20ba
 4280 0968 13       		.uleb128 0x13
 4281 0969 13       		.byte	0x13
 4282 096a 81       		.byte	0x81
 4283 096b D4200000 		.long	0x20d4
 4284 096f 13       		.uleb128 0x13
 4285 0970 13       		.byte	0x13
 4286 0971 82       		.byte	0x82
 4287 0972 EA200000 		.long	0x20ea
 4288 0976 13       		.uleb128 0x13
 4289 0977 13       		.byte	0x13
 4290 0978 83       		.byte	0x83
 4291 0979 00210000 		.long	0x2100
 4292 097d 13       		.uleb128 0x13
 4293 097e 13       		.byte	0x13
 4294 097f 84       		.byte	0x84
 4295 0980 16210000 		.long	0x2116
 4296 0984 13       		.uleb128 0x13
 4297 0985 13       		.byte	0x13
 4298 0986 86       		.byte	0x86
 4299 0987 40210000 		.long	0x2140
 4300 098b 13       		.uleb128 0x13
 4301 098c 13       		.byte	0x13
 4302 098d 89       		.byte	0x89
 4303 098e 5B210000 		.long	0x215b
 4304 0992 13       		.uleb128 0x13
 4305 0993 13       		.byte	0x13
 4306 0994 8B       		.byte	0x8b
 4307 0995 71210000 		.long	0x2171
GAS LISTING /tmp/ccrWPnlb.s 			page 148


 4308 0999 13       		.uleb128 0x13
 4309 099a 13       		.byte	0x13
 4310 099b 8E       		.byte	0x8e
 4311 099c 8C210000 		.long	0x218c
 4312 09a0 13       		.uleb128 0x13
 4313 09a1 13       		.byte	0x13
 4314 09a2 8F       		.byte	0x8f
 4315 09a3 A7210000 		.long	0x21a7
 4316 09a7 13       		.uleb128 0x13
 4317 09a8 13       		.byte	0x13
 4318 09a9 90       		.byte	0x90
 4319 09aa C7210000 		.long	0x21c7
 4320 09ae 13       		.uleb128 0x13
 4321 09af 13       		.byte	0x13
 4322 09b0 92       		.byte	0x92
 4323 09b1 E7210000 		.long	0x21e7
 4324 09b5 13       		.uleb128 0x13
 4325 09b6 13       		.byte	0x13
 4326 09b7 95       		.byte	0x95
 4327 09b8 08220000 		.long	0x2208
 4328 09bc 13       		.uleb128 0x13
 4329 09bd 13       		.byte	0x13
 4330 09be 98       		.byte	0x98
 4331 09bf 1A220000 		.long	0x221a
 4332 09c3 13       		.uleb128 0x13
 4333 09c4 13       		.byte	0x13
 4334 09c5 9A       		.byte	0x9a
 4335 09c6 26220000 		.long	0x2226
 4336 09ca 13       		.uleb128 0x13
 4337 09cb 13       		.byte	0x13
 4338 09cc 9B       		.byte	0x9b
 4339 09cd 38220000 		.long	0x2238
 4340 09d1 13       		.uleb128 0x13
 4341 09d2 13       		.byte	0x13
 4342 09d3 9C       		.byte	0x9c
 4343 09d4 58220000 		.long	0x2258
 4344 09d8 13       		.uleb128 0x13
 4345 09d9 13       		.byte	0x13
 4346 09da 9D       		.byte	0x9d
 4347 09db 77220000 		.long	0x2277
 4348 09df 13       		.uleb128 0x13
 4349 09e0 13       		.byte	0x13
 4350 09e1 9E       		.byte	0x9e
 4351 09e2 96220000 		.long	0x2296
 4352 09e6 13       		.uleb128 0x13
 4353 09e7 13       		.byte	0x13
 4354 09e8 A0       		.byte	0xa0
 4355 09e9 AC220000 		.long	0x22ac
 4356 09ed 13       		.uleb128 0x13
 4357 09ee 13       		.byte	0x13
 4358 09ef A1       		.byte	0xa1
 4359 09f0 CC220000 		.long	0x22cc
 4360 09f4 13       		.uleb128 0x13
 4361 09f5 13       		.byte	0x13
 4362 09f6 F1       		.byte	0xf1
 4363 09f7 6C200000 		.long	0x206c
 4364 09fb 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 149


 4365 09fc 13       		.byte	0x13
 4366 09fd F6       		.byte	0xf6
 4367 09fe 301A0000 		.long	0x1a30
 4368 0a02 13       		.uleb128 0x13
 4369 0a03 13       		.byte	0x13
 4370 0a04 F7       		.byte	0xf7
 4371 0a05 E7220000 		.long	0x22e7
 4372 0a09 13       		.uleb128 0x13
 4373 0a0a 13       		.byte	0x13
 4374 0a0b F9       		.byte	0xf9
 4375 0a0c 02230000 		.long	0x2302
 4376 0a10 13       		.uleb128 0x13
 4377 0a11 13       		.byte	0x13
 4378 0a12 FA       		.byte	0xfa
 4379 0a13 56230000 		.long	0x2356
 4380 0a17 13       		.uleb128 0x13
 4381 0a18 13       		.byte	0x13
 4382 0a19 FB       		.byte	0xfb
 4383 0a1a 18230000 		.long	0x2318
 4384 0a1e 13       		.uleb128 0x13
 4385 0a1f 13       		.byte	0x13
 4386 0a20 FC       		.byte	0xfc
 4387 0a21 37230000 		.long	0x2337
 4388 0a25 13       		.uleb128 0x13
 4389 0a26 13       		.byte	0x13
 4390 0a27 FD       		.byte	0xfd
 4391 0a28 70230000 		.long	0x2370
 4392 0a2c 13       		.uleb128 0x13
 4393 0a2d 14       		.byte	0x14
 4394 0a2e 62       		.byte	0x62
 4395 0a2f 30000000 		.long	0x30
 4396 0a33 13       		.uleb128 0x13
 4397 0a34 14       		.byte	0x14
 4398 0a35 63       		.byte	0x63
 4399 0a36 24240000 		.long	0x2424
 4400 0a3a 13       		.uleb128 0x13
 4401 0a3b 14       		.byte	0x14
 4402 0a3c 65       		.byte	0x65
 4403 0a3d 2F240000 		.long	0x242f
 4404 0a41 13       		.uleb128 0x13
 4405 0a42 14       		.byte	0x14
 4406 0a43 66       		.byte	0x66
 4407 0a44 47240000 		.long	0x2447
 4408 0a48 13       		.uleb128 0x13
 4409 0a49 14       		.byte	0x14
 4410 0a4a 67       		.byte	0x67
 4411 0a4b 5C240000 		.long	0x245c
 4412 0a4f 13       		.uleb128 0x13
 4413 0a50 14       		.byte	0x14
 4414 0a51 68       		.byte	0x68
 4415 0a52 72240000 		.long	0x2472
 4416 0a56 13       		.uleb128 0x13
 4417 0a57 14       		.byte	0x14
 4418 0a58 69       		.byte	0x69
 4419 0a59 88240000 		.long	0x2488
 4420 0a5d 13       		.uleb128 0x13
 4421 0a5e 14       		.byte	0x14
GAS LISTING /tmp/ccrWPnlb.s 			page 150


 4422 0a5f 6A       		.byte	0x6a
 4423 0a60 9D240000 		.long	0x249d
 4424 0a64 13       		.uleb128 0x13
 4425 0a65 14       		.byte	0x14
 4426 0a66 6B       		.byte	0x6b
 4427 0a67 B3240000 		.long	0x24b3
 4428 0a6b 13       		.uleb128 0x13
 4429 0a6c 14       		.byte	0x14
 4430 0a6d 6C       		.byte	0x6c
 4431 0a6e D4240000 		.long	0x24d4
 4432 0a72 13       		.uleb128 0x13
 4433 0a73 14       		.byte	0x14
 4434 0a74 6D       		.byte	0x6d
 4435 0a75 F4240000 		.long	0x24f4
 4436 0a79 13       		.uleb128 0x13
 4437 0a7a 14       		.byte	0x14
 4438 0a7b 71       		.byte	0x71
 4439 0a7c 0F250000 		.long	0x250f
 4440 0a80 13       		.uleb128 0x13
 4441 0a81 14       		.byte	0x14
 4442 0a82 72       		.byte	0x72
 4443 0a83 34250000 		.long	0x2534
 4444 0a87 13       		.uleb128 0x13
 4445 0a88 14       		.byte	0x14
 4446 0a89 74       		.byte	0x74
 4447 0a8a 54250000 		.long	0x2554
 4448 0a8e 13       		.uleb128 0x13
 4449 0a8f 14       		.byte	0x14
 4450 0a90 75       		.byte	0x75
 4451 0a91 74250000 		.long	0x2574
 4452 0a95 13       		.uleb128 0x13
 4453 0a96 14       		.byte	0x14
 4454 0a97 76       		.byte	0x76
 4455 0a98 9A250000 		.long	0x259a
 4456 0a9c 13       		.uleb128 0x13
 4457 0a9d 14       		.byte	0x14
 4458 0a9e 78       		.byte	0x78
 4459 0a9f B0250000 		.long	0x25b0
 4460 0aa3 13       		.uleb128 0x13
 4461 0aa4 14       		.byte	0x14
 4462 0aa5 79       		.byte	0x79
 4463 0aa6 C6250000 		.long	0x25c6
 4464 0aaa 13       		.uleb128 0x13
 4465 0aab 14       		.byte	0x14
 4466 0aac 7C       		.byte	0x7c
 4467 0aad D1250000 		.long	0x25d1
 4468 0ab1 13       		.uleb128 0x13
 4469 0ab2 14       		.byte	0x14
 4470 0ab3 7E       		.byte	0x7e
 4471 0ab4 E7250000 		.long	0x25e7
 4472 0ab8 13       		.uleb128 0x13
 4473 0ab9 14       		.byte	0x14
 4474 0aba 83       		.byte	0x83
 4475 0abb F9250000 		.long	0x25f9
 4476 0abf 13       		.uleb128 0x13
 4477 0ac0 14       		.byte	0x14
 4478 0ac1 84       		.byte	0x84
GAS LISTING /tmp/ccrWPnlb.s 			page 151


 4479 0ac2 0E260000 		.long	0x260e
 4480 0ac6 13       		.uleb128 0x13
 4481 0ac7 14       		.byte	0x14
 4482 0ac8 85       		.byte	0x85
 4483 0ac9 28260000 		.long	0x2628
 4484 0acd 13       		.uleb128 0x13
 4485 0ace 14       		.byte	0x14
 4486 0acf 87       		.byte	0x87
 4487 0ad0 3A260000 		.long	0x263a
 4488 0ad4 13       		.uleb128 0x13
 4489 0ad5 14       		.byte	0x14
 4490 0ad6 88       		.byte	0x88
 4491 0ad7 51260000 		.long	0x2651
 4492 0adb 13       		.uleb128 0x13
 4493 0adc 14       		.byte	0x14
 4494 0add 8B       		.byte	0x8b
 4495 0ade 76260000 		.long	0x2676
 4496 0ae2 13       		.uleb128 0x13
 4497 0ae3 14       		.byte	0x14
 4498 0ae4 8D       		.byte	0x8d
 4499 0ae5 81260000 		.long	0x2681
 4500 0ae9 13       		.uleb128 0x13
 4501 0aea 14       		.byte	0x14
 4502 0aeb 8F       		.byte	0x8f
 4503 0aec 96260000 		.long	0x2696
 4504 0af0 29       		.uleb128 0x29
 4505 0af1 00000000 		.long	.LASF113
 4506 0af5 04       		.byte	0x4
 4507 0af6 06       		.byte	0x6
 4508 0af7 33       		.byte	0x33
 4509 0af8 7F0B0000 		.long	0xb7f
 4510 0afc 2A       		.uleb128 0x2a
 4511 0afd 00000000 		.long	.LASF94
 4512 0b01 01       		.sleb128 1
 4513 0b02 2A       		.uleb128 0x2a
 4514 0b03 00000000 		.long	.LASF95
 4515 0b07 02       		.sleb128 2
 4516 0b08 2A       		.uleb128 0x2a
 4517 0b09 00000000 		.long	.LASF96
 4518 0b0d 04       		.sleb128 4
 4519 0b0e 2A       		.uleb128 0x2a
 4520 0b0f 00000000 		.long	.LASF97
 4521 0b13 08       		.sleb128 8
 4522 0b14 2A       		.uleb128 0x2a
 4523 0b15 00000000 		.long	.LASF98
 4524 0b19 10       		.sleb128 16
 4525 0b1a 2A       		.uleb128 0x2a
 4526 0b1b 00000000 		.long	.LASF99
 4527 0b1f 20       		.sleb128 32
 4528 0b20 2A       		.uleb128 0x2a
 4529 0b21 00000000 		.long	.LASF100
 4530 0b25 C000     		.sleb128 64
 4531 0b27 2A       		.uleb128 0x2a
 4532 0b28 00000000 		.long	.LASF101
 4533 0b2c 8001     		.sleb128 128
 4534 0b2e 2A       		.uleb128 0x2a
 4535 0b2f 00000000 		.long	.LASF102
GAS LISTING /tmp/ccrWPnlb.s 			page 152


 4536 0b33 8002     		.sleb128 256
 4537 0b35 2A       		.uleb128 0x2a
 4538 0b36 00000000 		.long	.LASF103
 4539 0b3a 8004     		.sleb128 512
 4540 0b3c 2A       		.uleb128 0x2a
 4541 0b3d 00000000 		.long	.LASF104
 4542 0b41 8008     		.sleb128 1024
 4543 0b43 2A       		.uleb128 0x2a
 4544 0b44 00000000 		.long	.LASF105
 4545 0b48 8010     		.sleb128 2048
 4546 0b4a 2A       		.uleb128 0x2a
 4547 0b4b 00000000 		.long	.LASF106
 4548 0b4f 8020     		.sleb128 4096
 4549 0b51 2A       		.uleb128 0x2a
 4550 0b52 00000000 		.long	.LASF107
 4551 0b56 80C000   		.sleb128 8192
 4552 0b59 2A       		.uleb128 0x2a
 4553 0b5a 00000000 		.long	.LASF108
 4554 0b5e 808001   		.sleb128 16384
 4555 0b61 2A       		.uleb128 0x2a
 4556 0b62 00000000 		.long	.LASF109
 4557 0b66 B001     		.sleb128 176
 4558 0b68 2A       		.uleb128 0x2a
 4559 0b69 00000000 		.long	.LASF110
 4560 0b6d CA00     		.sleb128 74
 4561 0b6f 2A       		.uleb128 0x2a
 4562 0b70 00000000 		.long	.LASF111
 4563 0b74 8402     		.sleb128 260
 4564 0b76 2A       		.uleb128 0x2a
 4565 0b77 00000000 		.long	.LASF112
 4566 0b7b 808004   		.sleb128 65536
 4567 0b7e 00       		.byte	0
 4568 0b7f 29       		.uleb128 0x29
 4569 0b80 00000000 		.long	.LASF114
 4570 0b84 04       		.byte	0x4
 4571 0b85 06       		.byte	0x6
 4572 0b86 67       		.byte	0x67
 4573 0b87 B80B0000 		.long	0xbb8
 4574 0b8b 2A       		.uleb128 0x2a
 4575 0b8c 00000000 		.long	.LASF115
 4576 0b90 01       		.sleb128 1
 4577 0b91 2A       		.uleb128 0x2a
 4578 0b92 00000000 		.long	.LASF116
 4579 0b96 02       		.sleb128 2
 4580 0b97 2A       		.uleb128 0x2a
 4581 0b98 00000000 		.long	.LASF117
 4582 0b9c 04       		.sleb128 4
 4583 0b9d 2A       		.uleb128 0x2a
 4584 0b9e 00000000 		.long	.LASF118
 4585 0ba2 08       		.sleb128 8
 4586 0ba3 2A       		.uleb128 0x2a
 4587 0ba4 00000000 		.long	.LASF119
 4588 0ba8 10       		.sleb128 16
 4589 0ba9 2A       		.uleb128 0x2a
 4590 0baa 00000000 		.long	.LASF120
 4591 0bae 20       		.sleb128 32
 4592 0baf 2A       		.uleb128 0x2a
GAS LISTING /tmp/ccrWPnlb.s 			page 153


 4593 0bb0 00000000 		.long	.LASF121
 4594 0bb4 808004   		.sleb128 65536
 4595 0bb7 00       		.byte	0
 4596 0bb8 29       		.uleb128 0x29
 4597 0bb9 00000000 		.long	.LASF122
 4598 0bbd 04       		.byte	0x4
 4599 0bbe 06       		.byte	0x6
 4600 0bbf 8F       		.byte	0x8f
 4601 0bc0 E50B0000 		.long	0xbe5
 4602 0bc4 2A       		.uleb128 0x2a
 4603 0bc5 00000000 		.long	.LASF123
 4604 0bc9 00       		.sleb128 0
 4605 0bca 2A       		.uleb128 0x2a
 4606 0bcb 00000000 		.long	.LASF124
 4607 0bcf 01       		.sleb128 1
 4608 0bd0 2A       		.uleb128 0x2a
 4609 0bd1 00000000 		.long	.LASF125
 4610 0bd5 02       		.sleb128 2
 4611 0bd6 2A       		.uleb128 0x2a
 4612 0bd7 00000000 		.long	.LASF126
 4613 0bdb 04       		.sleb128 4
 4614 0bdc 2A       		.uleb128 0x2a
 4615 0bdd 00000000 		.long	.LASF127
 4616 0be1 808004   		.sleb128 65536
 4617 0be4 00       		.byte	0
 4618 0be5 29       		.uleb128 0x29
 4619 0be6 00000000 		.long	.LASF128
 4620 0bea 04       		.byte	0x4
 4621 0beb 06       		.byte	0x6
 4622 0bec B5       		.byte	0xb5
 4623 0bed 0C0C0000 		.long	0xc0c
 4624 0bf1 2A       		.uleb128 0x2a
 4625 0bf2 00000000 		.long	.LASF129
 4626 0bf6 00       		.sleb128 0
 4627 0bf7 2A       		.uleb128 0x2a
 4628 0bf8 00000000 		.long	.LASF130
 4629 0bfc 01       		.sleb128 1
 4630 0bfd 2A       		.uleb128 0x2a
 4631 0bfe 00000000 		.long	.LASF131
 4632 0c02 02       		.sleb128 2
 4633 0c03 2A       		.uleb128 0x2a
 4634 0c04 00000000 		.long	.LASF132
 4635 0c08 808004   		.sleb128 65536
 4636 0c0b 00       		.byte	0
 4637 0c0c 2B       		.uleb128 0x2b
 4638 0c0d 00000000 		.long	.LASF162
 4639 0c11 6C0E0000 		.long	0xe6c
 4640 0c15 2C       		.uleb128 0x2c
 4641 0c16 00000000 		.long	.LASF135
 4642 0c1a 01       		.byte	0x1
 4643 0c1b 06       		.byte	0x6
 4644 0c1c 1502     		.value	0x215
 4645 0c1e 01       		.byte	0x1
 4646 0c1f 6B0C0000 		.long	0xc6b
 4647 0c23 2D       		.uleb128 0x2d
 4648 0c24 00000000 		.long	.LASF133
 4649 0c28 06       		.byte	0x6
GAS LISTING /tmp/ccrWPnlb.s 			page 154


 4650 0c29 1D02     		.value	0x21d
 4651 0c2b D51F0000 		.long	0x1fd5
 4652 0c2f 2D       		.uleb128 0x2d
 4653 0c30 00000000 		.long	.LASF134
 4654 0c34 06       		.byte	0x6
 4655 0c35 1E02     		.value	0x21e
 4656 0c37 AC1C0000 		.long	0x1cac
 4657 0c3b 2E       		.uleb128 0x2e
 4658 0c3c 00000000 		.long	.LASF135
 4659 0c40 06       		.byte	0x6
 4660 0c41 1902     		.value	0x219
 4661 0c43 01       		.byte	0x1
 4662 0c44 4C0C0000 		.long	0xc4c
 4663 0c48 520C0000 		.long	0xc52
 4664 0c4c 18       		.uleb128 0x18
 4665 0c4d B1260000 		.long	0x26b1
 4666 0c51 00       		.byte	0
 4667 0c52 2F       		.uleb128 0x2f
 4668 0c53 00000000 		.long	.LASF136
 4669 0c57 06       		.byte	0x6
 4670 0c58 1A02     		.value	0x21a
 4671 0c5a 01       		.byte	0x1
 4672 0c5b 5F0C0000 		.long	0xc5f
 4673 0c5f 18       		.uleb128 0x18
 4674 0c60 B1260000 		.long	0x26b1
 4675 0c64 18       		.uleb128 0x18
 4676 0c65 93020000 		.long	0x293
 4677 0c69 00       		.byte	0
 4678 0c6a 00       		.byte	0
 4679 0c6b 30       		.uleb128 0x30
 4680 0c6c 00000000 		.long	.LASF137
 4681 0c70 06       		.byte	0x6
 4682 0c71 4A01     		.value	0x14a
 4683 0c73 B80B0000 		.long	0xbb8
 4684 0c77 01       		.byte	0x1
 4685 0c78 31       		.uleb128 0x31
 4686 0c79 00000000 		.long	.LASF138
 4687 0c7d 06       		.byte	0x6
 4688 0c7e FF       		.byte	0xff
 4689 0c7f F00A0000 		.long	0xaf0
 4690 0c83 01       		.byte	0x1
 4691 0c84 32       		.uleb128 0x32
 4692 0c85 00000000 		.long	.LASF139
 4693 0c89 06       		.byte	0x6
 4694 0c8a 0201     		.value	0x102
 4695 0c8c 920C0000 		.long	0xc92
 4696 0c90 01       		.byte	0x1
 4697 0c91 01       		.byte	0x1
 4698 0c92 10       		.uleb128 0x10
 4699 0c93 780C0000 		.long	0xc78
 4700 0c97 33       		.uleb128 0x33
 4701 0c98 64656300 		.string	"dec"
 4702 0c9c 06       		.byte	0x6
 4703 0c9d 0501     		.value	0x105
 4704 0c9f 920C0000 		.long	0xc92
 4705 0ca3 01       		.byte	0x1
 4706 0ca4 02       		.byte	0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 155


 4707 0ca5 32       		.uleb128 0x32
 4708 0ca6 00000000 		.long	.LASF140
 4709 0caa 06       		.byte	0x6
 4710 0cab 0801     		.value	0x108
 4711 0cad 920C0000 		.long	0xc92
 4712 0cb1 01       		.byte	0x1
 4713 0cb2 04       		.byte	0x4
 4714 0cb3 33       		.uleb128 0x33
 4715 0cb4 68657800 		.string	"hex"
 4716 0cb8 06       		.byte	0x6
 4717 0cb9 0B01     		.value	0x10b
 4718 0cbb 920C0000 		.long	0xc92
 4719 0cbf 01       		.byte	0x1
 4720 0cc0 08       		.byte	0x8
 4721 0cc1 32       		.uleb128 0x32
 4722 0cc2 00000000 		.long	.LASF141
 4723 0cc6 06       		.byte	0x6
 4724 0cc7 1001     		.value	0x110
 4725 0cc9 920C0000 		.long	0xc92
 4726 0ccd 01       		.byte	0x1
 4727 0cce 10       		.byte	0x10
 4728 0ccf 32       		.uleb128 0x32
 4729 0cd0 00000000 		.long	.LASF142
 4730 0cd4 06       		.byte	0x6
 4731 0cd5 1401     		.value	0x114
 4732 0cd7 920C0000 		.long	0xc92
 4733 0cdb 01       		.byte	0x1
 4734 0cdc 20       		.byte	0x20
 4735 0cdd 33       		.uleb128 0x33
 4736 0cde 6F637400 		.string	"oct"
 4737 0ce2 06       		.byte	0x6
 4738 0ce3 1701     		.value	0x117
 4739 0ce5 920C0000 		.long	0xc92
 4740 0ce9 01       		.byte	0x1
 4741 0cea 40       		.byte	0x40
 4742 0ceb 32       		.uleb128 0x32
 4743 0cec 00000000 		.long	.LASF143
 4744 0cf0 06       		.byte	0x6
 4745 0cf1 1B01     		.value	0x11b
 4746 0cf3 920C0000 		.long	0xc92
 4747 0cf7 01       		.byte	0x1
 4748 0cf8 80       		.byte	0x80
 4749 0cf9 34       		.uleb128 0x34
 4750 0cfa 00000000 		.long	.LASF144
 4751 0cfe 06       		.byte	0x6
 4752 0cff 1E01     		.value	0x11e
 4753 0d01 920C0000 		.long	0xc92
 4754 0d05 01       		.byte	0x1
 4755 0d06 0001     		.value	0x100
 4756 0d08 34       		.uleb128 0x34
 4757 0d09 00000000 		.long	.LASF145
 4758 0d0d 06       		.byte	0x6
 4759 0d0e 2201     		.value	0x122
 4760 0d10 920C0000 		.long	0xc92
 4761 0d14 01       		.byte	0x1
 4762 0d15 0002     		.value	0x200
 4763 0d17 34       		.uleb128 0x34
GAS LISTING /tmp/ccrWPnlb.s 			page 156


 4764 0d18 00000000 		.long	.LASF146
 4765 0d1c 06       		.byte	0x6
 4766 0d1d 2601     		.value	0x126
 4767 0d1f 920C0000 		.long	0xc92
 4768 0d23 01       		.byte	0x1
 4769 0d24 0004     		.value	0x400
 4770 0d26 34       		.uleb128 0x34
 4771 0d27 00000000 		.long	.LASF147
 4772 0d2b 06       		.byte	0x6
 4773 0d2c 2901     		.value	0x129
 4774 0d2e 920C0000 		.long	0xc92
 4775 0d32 01       		.byte	0x1
 4776 0d33 0008     		.value	0x800
 4777 0d35 34       		.uleb128 0x34
 4778 0d36 00000000 		.long	.LASF148
 4779 0d3a 06       		.byte	0x6
 4780 0d3b 2C01     		.value	0x12c
 4781 0d3d 920C0000 		.long	0xc92
 4782 0d41 01       		.byte	0x1
 4783 0d42 0010     		.value	0x1000
 4784 0d44 34       		.uleb128 0x34
 4785 0d45 00000000 		.long	.LASF149
 4786 0d49 06       		.byte	0x6
 4787 0d4a 2F01     		.value	0x12f
 4788 0d4c 920C0000 		.long	0xc92
 4789 0d50 01       		.byte	0x1
 4790 0d51 0020     		.value	0x2000
 4791 0d53 34       		.uleb128 0x34
 4792 0d54 00000000 		.long	.LASF150
 4793 0d58 06       		.byte	0x6
 4794 0d59 3301     		.value	0x133
 4795 0d5b 920C0000 		.long	0xc92
 4796 0d5f 01       		.byte	0x1
 4797 0d60 0040     		.value	0x4000
 4798 0d62 32       		.uleb128 0x32
 4799 0d63 00000000 		.long	.LASF151
 4800 0d67 06       		.byte	0x6
 4801 0d68 3601     		.value	0x136
 4802 0d6a 920C0000 		.long	0xc92
 4803 0d6e 01       		.byte	0x1
 4804 0d6f B0       		.byte	0xb0
 4805 0d70 32       		.uleb128 0x32
 4806 0d71 00000000 		.long	.LASF152
 4807 0d75 06       		.byte	0x6
 4808 0d76 3901     		.value	0x139
 4809 0d78 920C0000 		.long	0xc92
 4810 0d7c 01       		.byte	0x1
 4811 0d7d 4A       		.byte	0x4a
 4812 0d7e 34       		.uleb128 0x34
 4813 0d7f 00000000 		.long	.LASF153
 4814 0d83 06       		.byte	0x6
 4815 0d84 3C01     		.value	0x13c
 4816 0d86 920C0000 		.long	0xc92
 4817 0d8a 01       		.byte	0x1
 4818 0d8b 0401     		.value	0x104
 4819 0d8d 32       		.uleb128 0x32
 4820 0d8e 00000000 		.long	.LASF154
GAS LISTING /tmp/ccrWPnlb.s 			page 157


 4821 0d92 06       		.byte	0x6
 4822 0d93 4E01     		.value	0x14e
 4823 0d95 9B0D0000 		.long	0xd9b
 4824 0d99 01       		.byte	0x1
 4825 0d9a 01       		.byte	0x1
 4826 0d9b 10       		.uleb128 0x10
 4827 0d9c 6B0C0000 		.long	0xc6b
 4828 0da0 32       		.uleb128 0x32
 4829 0da1 00000000 		.long	.LASF155
 4830 0da5 06       		.byte	0x6
 4831 0da6 5101     		.value	0x151
 4832 0da8 9B0D0000 		.long	0xd9b
 4833 0dac 01       		.byte	0x1
 4834 0dad 02       		.byte	0x2
 4835 0dae 32       		.uleb128 0x32
 4836 0daf 00000000 		.long	.LASF156
 4837 0db3 06       		.byte	0x6
 4838 0db4 5601     		.value	0x156
 4839 0db6 9B0D0000 		.long	0xd9b
 4840 0dba 01       		.byte	0x1
 4841 0dbb 04       		.byte	0x4
 4842 0dbc 32       		.uleb128 0x32
 4843 0dbd 00000000 		.long	.LASF157
 4844 0dc1 06       		.byte	0x6
 4845 0dc2 5901     		.value	0x159
 4846 0dc4 9B0D0000 		.long	0xd9b
 4847 0dc8 01       		.byte	0x1
 4848 0dc9 00       		.byte	0
 4849 0dca 30       		.uleb128 0x30
 4850 0dcb 00000000 		.long	.LASF158
 4851 0dcf 06       		.byte	0x6
 4852 0dd0 6901     		.value	0x169
 4853 0dd2 7F0B0000 		.long	0xb7f
 4854 0dd6 01       		.byte	0x1
 4855 0dd7 33       		.uleb128 0x33
 4856 0dd8 61707000 		.string	"app"
 4857 0ddc 06       		.byte	0x6
 4858 0ddd 6C01     		.value	0x16c
 4859 0ddf E50D0000 		.long	0xde5
 4860 0de3 01       		.byte	0x1
 4861 0de4 01       		.byte	0x1
 4862 0de5 10       		.uleb128 0x10
 4863 0de6 CA0D0000 		.long	0xdca
 4864 0dea 33       		.uleb128 0x33
 4865 0deb 61746500 		.string	"ate"
 4866 0def 06       		.byte	0x6
 4867 0df0 6F01     		.value	0x16f
 4868 0df2 E50D0000 		.long	0xde5
 4869 0df6 01       		.byte	0x1
 4870 0df7 02       		.byte	0x2
 4871 0df8 32       		.uleb128 0x32
 4872 0df9 00000000 		.long	.LASF159
 4873 0dfd 06       		.byte	0x6
 4874 0dfe 7401     		.value	0x174
 4875 0e00 E50D0000 		.long	0xde5
 4876 0e04 01       		.byte	0x1
 4877 0e05 04       		.byte	0x4
GAS LISTING /tmp/ccrWPnlb.s 			page 158


 4878 0e06 33       		.uleb128 0x33
 4879 0e07 696E00   		.string	"in"
 4880 0e0a 06       		.byte	0x6
 4881 0e0b 7701     		.value	0x177
 4882 0e0d E50D0000 		.long	0xde5
 4883 0e11 01       		.byte	0x1
 4884 0e12 08       		.byte	0x8
 4885 0e13 33       		.uleb128 0x33
 4886 0e14 6F757400 		.string	"out"
 4887 0e18 06       		.byte	0x6
 4888 0e19 7A01     		.value	0x17a
 4889 0e1b E50D0000 		.long	0xde5
 4890 0e1f 01       		.byte	0x1
 4891 0e20 10       		.byte	0x10
 4892 0e21 32       		.uleb128 0x32
 4893 0e22 00000000 		.long	.LASF160
 4894 0e26 06       		.byte	0x6
 4895 0e27 7D01     		.value	0x17d
 4896 0e29 E50D0000 		.long	0xde5
 4897 0e2d 01       		.byte	0x1
 4898 0e2e 20       		.byte	0x20
 4899 0e2f 30       		.uleb128 0x30
 4900 0e30 00000000 		.long	.LASF161
 4901 0e34 06       		.byte	0x6
 4902 0e35 8901     		.value	0x189
 4903 0e37 E50B0000 		.long	0xbe5
 4904 0e3b 01       		.byte	0x1
 4905 0e3c 33       		.uleb128 0x33
 4906 0e3d 62656700 		.string	"beg"
 4907 0e41 06       		.byte	0x6
 4908 0e42 8C01     		.value	0x18c
 4909 0e44 4A0E0000 		.long	0xe4a
 4910 0e48 01       		.byte	0x1
 4911 0e49 00       		.byte	0
 4912 0e4a 10       		.uleb128 0x10
 4913 0e4b 2F0E0000 		.long	0xe2f
 4914 0e4f 33       		.uleb128 0x33
 4915 0e50 63757200 		.string	"cur"
 4916 0e54 06       		.byte	0x6
 4917 0e55 8F01     		.value	0x18f
 4918 0e57 4A0E0000 		.long	0xe4a
 4919 0e5b 01       		.byte	0x1
 4920 0e5c 01       		.byte	0x1
 4921 0e5d 33       		.uleb128 0x33
 4922 0e5e 656E6400 		.string	"end"
 4923 0e62 06       		.byte	0x6
 4924 0e63 9201     		.value	0x192
 4925 0e65 4A0E0000 		.long	0xe4a
 4926 0e69 01       		.byte	0x1
 4927 0e6a 02       		.byte	0x2
 4928 0e6b 00       		.byte	0
 4929 0e6c 13       		.uleb128 0x13
 4930 0e6d 15       		.byte	0x15
 4931 0e6e 52       		.byte	0x52
 4932 0e6f C2260000 		.long	0x26c2
 4933 0e73 13       		.uleb128 0x13
 4934 0e74 15       		.byte	0x15
GAS LISTING /tmp/ccrWPnlb.s 			page 159


 4935 0e75 53       		.byte	0x53
 4936 0e76 B7260000 		.long	0x26b7
 4937 0e7a 13       		.uleb128 0x13
 4938 0e7b 15       		.byte	0x15
 4939 0e7c 54       		.byte	0x54
 4940 0e7d 2C020000 		.long	0x22c
 4941 0e81 13       		.uleb128 0x13
 4942 0e82 15       		.byte	0x15
 4943 0e83 5C       		.byte	0x5c
 4944 0e84 D8260000 		.long	0x26d8
 4945 0e88 13       		.uleb128 0x13
 4946 0e89 15       		.byte	0x15
 4947 0e8a 65       		.byte	0x65
 4948 0e8b F2260000 		.long	0x26f2
 4949 0e8f 13       		.uleb128 0x13
 4950 0e90 15       		.byte	0x15
 4951 0e91 68       		.byte	0x68
 4952 0e92 0C270000 		.long	0x270c
 4953 0e96 13       		.uleb128 0x13
 4954 0e97 15       		.byte	0x15
 4955 0e98 69       		.byte	0x69
 4956 0e99 21270000 		.long	0x2721
 4957 0e9d 2B       		.uleb128 0x2b
 4958 0e9e 00000000 		.long	.LASF163
 4959 0ea2 A30F0000 		.long	0xfa3
 4960 0ea6 1D       		.uleb128 0x1d
 4961 0ea7 00000000 		.long	.LASF164
 4962 0eab 03       		.byte	0x3
 4963 0eac 6C       		.byte	0x6c
 4964 0ead 00000000 		.long	.LASF165
 4965 0eb1 38290000 		.long	0x2938
 4966 0eb5 01       		.byte	0x1
 4967 0eb6 BE0E0000 		.long	0xebe
 4968 0eba C90E0000 		.long	0xec9
 4969 0ebe 18       		.uleb128 0x18
 4970 0ebf 3E290000 		.long	0x293e
 4971 0ec3 19       		.uleb128 0x19
 4972 0ec4 44290000 		.long	0x2944
 4973 0ec8 00       		.byte	0
 4974 0ec9 31       		.uleb128 0x31
 4975 0eca 00000000 		.long	.LASF166
 4976 0ece 03       		.byte	0x3
 4977 0ecf 47       		.byte	0x47
 4978 0ed0 9D0E0000 		.long	0xe9d
 4979 0ed4 01       		.byte	0x1
 4980 0ed5 1D       		.uleb128 0x1d
 4981 0ed6 00000000 		.long	.LASF164
 4982 0eda 03       		.byte	0x3
 4983 0edb C0       		.byte	0xc0
 4984 0edc 00000000 		.long	.LASF167
 4985 0ee0 38290000 		.long	0x2938
 4986 0ee4 01       		.byte	0x1
 4987 0ee5 ED0E0000 		.long	0xeed
 4988 0ee9 F80E0000 		.long	0xef8
 4989 0eed 18       		.uleb128 0x18
 4990 0eee 3E290000 		.long	0x293e
 4991 0ef2 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 160


 4992 0ef3 11020000 		.long	0x211
 4993 0ef7 00       		.byte	0
 4994 0ef8 35       		.uleb128 0x35
 4995 0ef9 00000000 		.long	.LASF173
 4996 0efd 8C020000 		.long	0x28c
 4997 0f01 36       		.uleb128 0x36
 4998 0f02 00000000 		.long	.LASF188
 4999 0f06 95060000 		.long	0x695
 5000 0f0a 1D       		.uleb128 0x1d
 5001 0f0b 00000000 		.long	.LASF168
 5002 0f0f 16       		.byte	0x16
 5003 0f10 D2       		.byte	0xd2
 5004 0f11 00000000 		.long	.LASF169
 5005 0f15 36270000 		.long	0x2736
 5006 0f19 01       		.byte	0x1
 5007 0f1a 220F0000 		.long	0xf22
 5008 0f1e 280F0000 		.long	0xf28
 5009 0f22 18       		.uleb128 0x18
 5010 0f23 3E290000 		.long	0x293e
 5011 0f27 00       		.byte	0
 5012 0f28 37       		.uleb128 0x37
 5013 0f29 70757400 		.string	"put"
 5014 0f2d 16       		.byte	0x16
 5015 0f2e 94       		.byte	0x94
 5016 0f2f 00000000 		.long	.LASF548
 5017 0f33 36270000 		.long	0x2736
 5018 0f37 01       		.byte	0x1
 5019 0f38 400F0000 		.long	0xf40
 5020 0f3c 4B0F0000 		.long	0xf4b
 5021 0f40 18       		.uleb128 0x18
 5022 0f41 3E290000 		.long	0x293e
 5023 0f45 19       		.uleb128 0x19
 5024 0f46 4B0F0000 		.long	0xf4b
 5025 0f4a 00       		.byte	0
 5026 0f4b 31       		.uleb128 0x31
 5027 0f4c 00000000 		.long	.LASF70
 5028 0f50 03       		.byte	0x3
 5029 0f51 3E       		.byte	0x3e
 5030 0f52 8C020000 		.long	0x28c
 5031 0f56 01       		.byte	0x1
 5032 0f57 1D       		.uleb128 0x1d
 5033 0f58 00000000 		.long	.LASF164
 5034 0f5c 16       		.byte	0x16
 5035 0f5d 69       		.byte	0x69
 5036 0f5e 00000000 		.long	.LASF170
 5037 0f62 36270000 		.long	0x2736
 5038 0f66 01       		.byte	0x1
 5039 0f67 6F0F0000 		.long	0xf6f
 5040 0f6b 7A0F0000 		.long	0xf7a
 5041 0f6f 18       		.uleb128 0x18
 5042 0f70 3E290000 		.long	0x293e
 5043 0f74 19       		.uleb128 0x19
 5044 0f75 93020000 		.long	0x293
 5045 0f79 00       		.byte	0
 5046 0f7a 20       		.uleb128 0x20
 5047 0f7b 00000000 		.long	.LASF171
 5048 0f7f 16       		.byte	0x16
GAS LISTING /tmp/ccrWPnlb.s 			page 161


 5049 0f80 3F       		.byte	0x3f
 5050 0f81 00000000 		.long	.LASF172
 5051 0f85 36270000 		.long	0x2736
 5052 0f89 02       		.byte	0x2
 5053 0f8a 970F0000 		.long	0xf97
 5054 0f8e 35       		.uleb128 0x35
 5055 0f8f 00000000 		.long	.LASF174
 5056 0f93 25020000 		.long	0x225
 5057 0f97 18       		.uleb128 0x18
 5058 0f98 3E290000 		.long	0x293e
 5059 0f9c 19       		.uleb128 0x19
 5060 0f9d 25020000 		.long	0x225
 5061 0fa1 00       		.byte	0
 5062 0fa2 00       		.byte	0
 5063 0fa3 2B       		.uleb128 0x2b
 5064 0fa4 00000000 		.long	.LASF175
 5065 0fa8 2F100000 		.long	0x102f
 5066 0fac 38       		.uleb128 0x38
 5067 0fad 00000000 		.long	.LASF176
 5068 0fb1 01       		.byte	0x1
 5069 0fb2 6103     		.value	0x361
 5070 0fb4 00000000 		.long	.LASF186
 5071 0fb8 D00F0000 		.long	0xfd0
 5072 0fbc 01       		.byte	0x1
 5073 0fbd C50F0000 		.long	0xfc5
 5074 0fc1 D00F0000 		.long	0xfd0
 5075 0fc5 18       		.uleb128 0x18
 5076 0fc6 BA290000 		.long	0x29ba
 5077 0fca 19       		.uleb128 0x19
 5078 0fcb 8C020000 		.long	0x28c
 5079 0fcf 00       		.byte	0
 5080 0fd0 30       		.uleb128 0x30
 5081 0fd1 00000000 		.long	.LASF70
 5082 0fd5 01       		.byte	0x1
 5083 0fd6 A702     		.value	0x2a7
 5084 0fd8 8C020000 		.long	0x28c
 5085 0fdc 01       		.byte	0x1
 5086 0fdd 39       		.uleb128 0x39
 5087 0fde 00000000 		.long	.LASF549
 5088 0fe2 01       		.byte	0x1
 5089 0fe3 3304     		.value	0x433
 5090 0fe5 00000000 		.long	.LASF550
 5091 0fe9 D00F0000 		.long	0xfd0
 5092 0fed 01       		.byte	0x1
 5093 0fee 02       		.uleb128 0x2
 5094 0fef 10       		.byte	0x10
 5095 0ff0 06       		.uleb128 0x6
 5096 0ff1 A30F0000 		.long	0xfa3
 5097 0ff5 02       		.byte	0x2
 5098 0ff6 FE0F0000 		.long	0xffe
 5099 0ffa 09100000 		.long	0x1009
 5100 0ffe 18       		.uleb128 0x18
 5101 0fff BA290000 		.long	0x29ba
 5102 1003 19       		.uleb128 0x19
 5103 1004 8C020000 		.long	0x28c
 5104 1008 00       		.byte	0
 5105 1009 34       		.uleb128 0x34
GAS LISTING /tmp/ccrWPnlb.s 			page 162


 5106 100a 00000000 		.long	.LASF177
 5107 100e 01       		.byte	0x1
 5108 100f BA02     		.value	0x2ba
 5109 1011 F4110000 		.long	0x11f4
 5110 1015 01       		.byte	0x1
 5111 1016 0001     		.value	0x100
 5112 1018 3A       		.uleb128 0x3a
 5113 1019 00000000 		.long	.LASF178
 5114 101d 01       		.byte	0x1
 5115 101e 8704     		.value	0x487
 5116 1020 00000000 		.long	.LASF180
 5117 1024 28100000 		.long	0x1028
 5118 1028 18       		.uleb128 0x18
 5119 1029 BA290000 		.long	0x29ba
 5120 102d 00       		.byte	0
 5121 102e 00       		.byte	0
 5122 102f 14       		.uleb128 0x14
 5123 1030 07       		.byte	0x7
 5124 1031 0E04     		.value	0x40e
 5125 1033 51270000 		.long	0x2751
 5126 1037 14       		.uleb128 0x14
 5127 1038 07       		.byte	0x7
 5128 1039 0F04     		.value	0x40f
 5129 103b 46270000 		.long	0x2746
 5130 103f 2B       		.uleb128 0x2b
 5131 1040 00000000 		.long	.LASF181
 5132 1044 E3100000 		.long	0x10e3
 5133 1048 1D       		.uleb128 0x1d
 5134 1049 00000000 		.long	.LASF182
 5135 104d 05       		.byte	0x5
 5136 104e 83       		.byte	0x83
 5137 104f 00000000 		.long	.LASF183
 5138 1053 6B0C0000 		.long	0xc6b
 5139 1057 01       		.byte	0x1
 5140 1058 60100000 		.long	0x1060
 5141 105c 66100000 		.long	0x1066
 5142 1060 18       		.uleb128 0x18
 5143 1061 52280000 		.long	0x2852
 5144 1065 00       		.byte	0
 5145 1066 1E       		.uleb128 0x1e
 5146 1067 00000000 		.long	.LASF184
 5147 106b 05       		.byte	0x5
 5148 106c 97       		.byte	0x97
 5149 106d 00000000 		.long	.LASF185
 5150 1071 01       		.byte	0x1
 5151 1072 7A100000 		.long	0x107a
 5152 1076 85100000 		.long	0x1085
 5153 107a 18       		.uleb128 0x18
 5154 107b C2280000 		.long	0x28c2
 5155 107f 19       		.uleb128 0x19
 5156 1080 6B0C0000 		.long	0xc6b
 5157 1084 00       		.byte	0
 5158 1085 38       		.uleb128 0x38
 5159 1086 00000000 		.long	.LASF176
 5160 108a 05       		.byte	0x5
 5161 108b BB01     		.value	0x1bb
 5162 108d 00000000 		.long	.LASF187
GAS LISTING /tmp/ccrWPnlb.s 			page 163


 5163 1091 A9100000 		.long	0x10a9
 5164 1095 01       		.byte	0x1
 5165 1096 9E100000 		.long	0x109e
 5166 109a A9100000 		.long	0x10a9
 5167 109e 18       		.uleb128 0x18
 5168 109f 52280000 		.long	0x2852
 5169 10a3 19       		.uleb128 0x19
 5170 10a4 8C020000 		.long	0x28c
 5171 10a8 00       		.byte	0
 5172 10a9 31       		.uleb128 0x31
 5173 10aa 00000000 		.long	.LASF70
 5174 10ae 05       		.byte	0x5
 5175 10af 4B       		.byte	0x4b
 5176 10b0 8C020000 		.long	0x28c
 5177 10b4 01       		.byte	0x1
 5178 10b5 35       		.uleb128 0x35
 5179 10b6 00000000 		.long	.LASF173
 5180 10ba 8C020000 		.long	0x28c
 5181 10be 36       		.uleb128 0x36
 5182 10bf 00000000 		.long	.LASF188
 5183 10c3 95060000 		.long	0x695
 5184 10c7 3B       		.uleb128 0x3b
 5185 10c8 00000000 		.long	.LASF189
 5186 10cc 17       		.byte	0x17
 5187 10cd 29       		.byte	0x29
 5188 10ce 00000000 		.long	.LASF190
 5189 10d2 01       		.byte	0x1
 5190 10d3 D7100000 		.long	0x10d7
 5191 10d7 18       		.uleb128 0x18
 5192 10d8 C2280000 		.long	0x28c2
 5193 10dc 19       		.uleb128 0x19
 5194 10dd 6B0C0000 		.long	0xc6b
 5195 10e1 00       		.byte	0
 5196 10e2 00       		.byte	0
 5197 10e3 10       		.uleb128 0x10
 5198 10e4 3F100000 		.long	0x103f
 5199 10e8 3C       		.uleb128 0x3c
 5200 10e9 00000000 		.long	.LASF191
 5201 10ed 06       		.byte	0x6
 5202 10ee 9D       		.byte	0x9d
 5203 10ef B80B0000 		.long	0xbb8
 5204 10f3 02110000 		.long	0x1102
 5205 10f7 19       		.uleb128 0x19
 5206 10f8 B80B0000 		.long	0xbb8
 5207 10fc 19       		.uleb128 0x19
 5208 10fd B80B0000 		.long	0xbb8
 5209 1101 00       		.byte	0
 5210 1102 3D       		.uleb128 0x3d
 5211 1103 00000000 		.long	.LASF192
 5212 1107 03       		.byte	0x3
 5213 1108 1202     		.value	0x212
 5214 110a 36270000 		.long	0x2736
 5215 110e 26110000 		.long	0x1126
 5216 1112 35       		.uleb128 0x35
 5217 1113 00000000 		.long	.LASF188
 5218 1117 95060000 		.long	0x695
 5219 111b 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 164


 5220 111c 36270000 		.long	0x2736
 5221 1120 19       		.uleb128 0x19
 5222 1121 BC020000 		.long	0x2bc
 5223 1125 00       		.byte	0
 5224 1126 10       		.uleb128 0x10
 5225 1127 A30F0000 		.long	0xfa3
 5226 112b 3E       		.uleb128 0x3e
 5227 112c 61627300 		.string	"abs"
 5228 1130 07       		.byte	0x7
 5229 1131 57       		.byte	0x57
 5230 1132 29000000 		.long	0x29
 5231 1136 40110000 		.long	0x1140
 5232 113a 19       		.uleb128 0x19
 5233 113b 29000000 		.long	0x29
 5234 113f 00       		.byte	0
 5235 1140 3C       		.uleb128 0x3c
 5236 1141 00000000 		.long	.LASF193
 5237 1145 05       		.byte	0x5
 5238 1146 2E       		.byte	0x2e
 5239 1147 842A0000 		.long	0x2a84
 5240 114b 5E110000 		.long	0x115e
 5241 114f 35       		.uleb128 0x35
 5242 1150 00000000 		.long	.LASF194
 5243 1154 A30F0000 		.long	0xfa3
 5244 1158 19       		.uleb128 0x19
 5245 1159 BA290000 		.long	0x29ba
 5246 115d 00       		.byte	0
 5247 115e 3D       		.uleb128 0x3d
 5248 115f 00000000 		.long	.LASF195
 5249 1163 03       		.byte	0x3
 5250 1164 4A02     		.value	0x24a
 5251 1166 36270000 		.long	0x2736
 5252 116a 86110000 		.long	0x1186
 5253 116e 35       		.uleb128 0x35
 5254 116f 00000000 		.long	.LASF173
 5255 1173 8C020000 		.long	0x28c
 5256 1177 35       		.uleb128 0x35
 5257 1178 00000000 		.long	.LASF188
 5258 117c 95060000 		.long	0x695
 5259 1180 19       		.uleb128 0x19
 5260 1181 36270000 		.long	0x2736
 5261 1185 00       		.byte	0
 5262 1186 3D       		.uleb128 0x3d
 5263 1187 00000000 		.long	.LASF196
 5264 118b 03       		.byte	0x3
 5265 118c 3402     		.value	0x234
 5266 118e 36270000 		.long	0x2736
 5267 1192 AE110000 		.long	0x11ae
 5268 1196 35       		.uleb128 0x35
 5269 1197 00000000 		.long	.LASF173
 5270 119b 8C020000 		.long	0x28c
 5271 119f 35       		.uleb128 0x35
 5272 11a0 00000000 		.long	.LASF188
 5273 11a4 95060000 		.long	0x695
 5274 11a8 19       		.uleb128 0x19
 5275 11a9 36270000 		.long	0x2736
 5276 11ad 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 165


 5277 11ae 3F       		.uleb128 0x3f
 5278 11af 00000000 		.long	.LASF507
 5279 11b3 2B       		.byte	0x2b
 5280 11b4 4F       		.byte	0x4f
 5281 11b5 BB110000 		.long	0x11bb
 5282 11b9 01       		.byte	0x1
 5283 11ba 00       		.byte	0
 5284 11bb 10       		.uleb128 0x10
 5285 11bc 86060000 		.long	0x686
 5286 11c0 03       		.uleb128 0x3
 5287 11c1 00000000 		.long	.LASF197
 5288 11c5 18       		.byte	0x18
 5289 11c6 88       		.byte	0x88
 5290 11c7 9D0E0000 		.long	0xe9d
 5291 11cb 40       		.uleb128 0x40
 5292 11cc 00000000 		.long	.LASF198
 5293 11d0 08       		.byte	0x8
 5294 11d1 3D       		.byte	0x3d
 5295 11d2 00000000 		.long	.LASF200
 5296 11d6 C0110000 		.long	0x11c0
 5297 11da 40       		.uleb128 0x40
 5298 11db 00000000 		.long	.LASF199
 5299 11df 08       		.byte	0x8
 5300 11e0 3E       		.byte	0x3e
 5301 11e1 00000000 		.long	.LASF201
 5302 11e5 C0110000 		.long	0x11c0
 5303 11e9 41       		.uleb128 0x41
 5304 11ea 00000000 		.long	.LASF472
 5305 11ee 08       		.byte	0x8
 5306 11ef 4A       		.byte	0x4a
 5307 11f0 150C0000 		.long	0xc15
 5308 11f4 10       		.uleb128 0x10
 5309 11f5 5D080000 		.long	0x85d
 5310 11f9 42       		.uleb128 0x42
 5311 11fa 00000000 		.long	.LASF202
 5312 11fe 19       		.byte	0x19
 5313 11ff 4C       		.byte	0x4c
 5314 1200 00000000 		.long	.LASF203
 5315 1204 36270000 		.long	0x2736
 5316 1208 2E120000 		.long	0x122e
 5317 120c 35       		.uleb128 0x35
 5318 120d 00000000 		.long	.LASF173
 5319 1211 8C020000 		.long	0x28c
 5320 1215 35       		.uleb128 0x35
 5321 1216 00000000 		.long	.LASF188
 5322 121a 95060000 		.long	0x695
 5323 121e 19       		.uleb128 0x19
 5324 121f 36270000 		.long	0x2736
 5325 1223 19       		.uleb128 0x19
 5326 1224 BC020000 		.long	0x2bc
 5327 1228 19       		.uleb128 0x19
 5328 1229 2E120000 		.long	0x122e
 5329 122d 00       		.byte	0
 5330 122e 03       		.uleb128 0x3
 5331 122f 00000000 		.long	.LASF204
 5332 1233 1A       		.byte	0x1a
 5333 1234 62       		.byte	0x62
GAS LISTING /tmp/ccrWPnlb.s 			page 166


 5334 1235 41090000 		.long	0x941
 5335 1239 43       		.uleb128 0x43
 5336 123a 00000000 		.long	.LASF215
 5337 123e 1B       		.byte	0x1b
 5338 123f 38       		.byte	0x38
 5339 1240 00000000 		.long	.LASF551
 5340 1244 00       		.byte	0
 5341 1245 3D       		.uleb128 0x3d
 5342 1246 00000000 		.long	.LASF205
 5343 124a 0D       		.byte	0xd
 5344 124b 8201     		.value	0x182
 5345 124d 2C020000 		.long	0x22c
 5346 1251 5B120000 		.long	0x125b
 5347 1255 19       		.uleb128 0x19
 5348 1256 93020000 		.long	0x293
 5349 125a 00       		.byte	0
 5350 125b 3D       		.uleb128 0x3d
 5351 125c 00000000 		.long	.LASF206
 5352 1260 0D       		.byte	0xd
 5353 1261 E702     		.value	0x2e7
 5354 1263 2C020000 		.long	0x22c
 5355 1267 71120000 		.long	0x1271
 5356 126b 19       		.uleb128 0x19
 5357 126c 71120000 		.long	0x1271
 5358 1270 00       		.byte	0
 5359 1271 11       		.uleb128 0x11
 5360 1272 08       		.byte	0x8
 5361 1273 C2010000 		.long	0x1c2
 5362 1277 3D       		.uleb128 0x3d
 5363 1278 00000000 		.long	.LASF207
 5364 127c 0D       		.byte	0xd
 5365 127d 0403     		.value	0x304
 5366 127f 97120000 		.long	0x1297
 5367 1283 97120000 		.long	0x1297
 5368 1287 19       		.uleb128 0x19
 5369 1288 97120000 		.long	0x1297
 5370 128c 19       		.uleb128 0x19
 5371 128d 93020000 		.long	0x293
 5372 1291 19       		.uleb128 0x19
 5373 1292 71120000 		.long	0x1271
 5374 1296 00       		.byte	0
 5375 1297 11       		.uleb128 0x11
 5376 1298 08       		.byte	0x8
 5377 1299 9D120000 		.long	0x129d
 5378 129d 02       		.uleb128 0x2
 5379 129e 04       		.byte	0x4
 5380 129f 05       		.byte	0x5
 5381 12a0 00000000 		.long	.LASF208
 5382 12a4 3D       		.uleb128 0x3d
 5383 12a5 00000000 		.long	.LASF209
 5384 12a9 0D       		.byte	0xd
 5385 12aa F502     		.value	0x2f5
 5386 12ac 2C020000 		.long	0x22c
 5387 12b0 BF120000 		.long	0x12bf
 5388 12b4 19       		.uleb128 0x19
 5389 12b5 9D120000 		.long	0x129d
 5390 12b9 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 167


 5391 12ba 71120000 		.long	0x1271
 5392 12be 00       		.byte	0
 5393 12bf 3D       		.uleb128 0x3d
 5394 12c0 00000000 		.long	.LASF210
 5395 12c4 0D       		.byte	0xd
 5396 12c5 0B03     		.value	0x30b
 5397 12c7 93020000 		.long	0x293
 5398 12cb DA120000 		.long	0x12da
 5399 12cf 19       		.uleb128 0x19
 5400 12d0 DA120000 		.long	0x12da
 5401 12d4 19       		.uleb128 0x19
 5402 12d5 71120000 		.long	0x1271
 5403 12d9 00       		.byte	0
 5404 12da 11       		.uleb128 0x11
 5405 12db 08       		.byte	0x8
 5406 12dc E0120000 		.long	0x12e0
 5407 12e0 10       		.uleb128 0x10
 5408 12e1 9D120000 		.long	0x129d
 5409 12e5 3D       		.uleb128 0x3d
 5410 12e6 00000000 		.long	.LASF211
 5411 12ea 0D       		.byte	0xd
 5412 12eb 4902     		.value	0x249
 5413 12ed 93020000 		.long	0x293
 5414 12f1 00130000 		.long	0x1300
 5415 12f5 19       		.uleb128 0x19
 5416 12f6 71120000 		.long	0x1271
 5417 12fa 19       		.uleb128 0x19
 5418 12fb 93020000 		.long	0x293
 5419 12ff 00       		.byte	0
 5420 1300 3D       		.uleb128 0x3d
 5421 1301 00000000 		.long	.LASF212
 5422 1305 0D       		.byte	0xd
 5423 1306 5002     		.value	0x250
 5424 1308 93020000 		.long	0x293
 5425 130c 1C130000 		.long	0x131c
 5426 1310 19       		.uleb128 0x19
 5427 1311 71120000 		.long	0x1271
 5428 1315 19       		.uleb128 0x19
 5429 1316 DA120000 		.long	0x12da
 5430 131a 44       		.uleb128 0x44
 5431 131b 00       		.byte	0
 5432 131c 3D       		.uleb128 0x3d
 5433 131d 00000000 		.long	.LASF213
 5434 1321 0D       		.byte	0xd
 5435 1322 7902     		.value	0x279
 5436 1324 93020000 		.long	0x293
 5437 1328 38130000 		.long	0x1338
 5438 132c 19       		.uleb128 0x19
 5439 132d 71120000 		.long	0x1271
 5440 1331 19       		.uleb128 0x19
 5441 1332 DA120000 		.long	0x12da
 5442 1336 44       		.uleb128 0x44
 5443 1337 00       		.byte	0
 5444 1338 3D       		.uleb128 0x3d
 5445 1339 00000000 		.long	.LASF214
 5446 133d 0D       		.byte	0xd
 5447 133e E802     		.value	0x2e8
GAS LISTING /tmp/ccrWPnlb.s 			page 168


 5448 1340 2C020000 		.long	0x22c
 5449 1344 4E130000 		.long	0x134e
 5450 1348 19       		.uleb128 0x19
 5451 1349 71120000 		.long	0x1271
 5452 134d 00       		.byte	0
 5453 134e 45       		.uleb128 0x45
 5454 134f 00000000 		.long	.LASF216
 5455 1353 0D       		.byte	0xd
 5456 1354 EE02     		.value	0x2ee
 5457 1356 2C020000 		.long	0x22c
 5458 135a 3D       		.uleb128 0x3d
 5459 135b 00000000 		.long	.LASF217
 5460 135f 0D       		.byte	0xd
 5461 1360 8D01     		.value	0x18d
 5462 1362 1A020000 		.long	0x21a
 5463 1366 7A130000 		.long	0x137a
 5464 136a 19       		.uleb128 0x19
 5465 136b BC020000 		.long	0x2bc
 5466 136f 19       		.uleb128 0x19
 5467 1370 1A020000 		.long	0x21a
 5468 1374 19       		.uleb128 0x19
 5469 1375 7A130000 		.long	0x137a
 5470 1379 00       		.byte	0
 5471 137a 11       		.uleb128 0x11
 5472 137b 08       		.byte	0x8
 5473 137c A5020000 		.long	0x2a5
 5474 1380 3D       		.uleb128 0x3d
 5475 1381 00000000 		.long	.LASF218
 5476 1385 0D       		.byte	0xd
 5477 1386 6B01     		.value	0x16b
 5478 1388 1A020000 		.long	0x21a
 5479 138c A5130000 		.long	0x13a5
 5480 1390 19       		.uleb128 0x19
 5481 1391 97120000 		.long	0x1297
 5482 1395 19       		.uleb128 0x19
 5483 1396 BC020000 		.long	0x2bc
 5484 139a 19       		.uleb128 0x19
 5485 139b 1A020000 		.long	0x21a
 5486 139f 19       		.uleb128 0x19
 5487 13a0 7A130000 		.long	0x137a
 5488 13a4 00       		.byte	0
 5489 13a5 3D       		.uleb128 0x3d
 5490 13a6 00000000 		.long	.LASF219
 5491 13aa 0D       		.byte	0xd
 5492 13ab 6701     		.value	0x167
 5493 13ad 93020000 		.long	0x293
 5494 13b1 BB130000 		.long	0x13bb
 5495 13b5 19       		.uleb128 0x19
 5496 13b6 BB130000 		.long	0x13bb
 5497 13ba 00       		.byte	0
 5498 13bb 11       		.uleb128 0x11
 5499 13bc 08       		.byte	0x8
 5500 13bd C1130000 		.long	0x13c1
 5501 13c1 10       		.uleb128 0x10
 5502 13c2 A5020000 		.long	0x2a5
 5503 13c6 3D       		.uleb128 0x3d
 5504 13c7 00000000 		.long	.LASF220
GAS LISTING /tmp/ccrWPnlb.s 			page 169


 5505 13cb 0D       		.byte	0xd
 5506 13cc 9601     		.value	0x196
 5507 13ce 1A020000 		.long	0x21a
 5508 13d2 EB130000 		.long	0x13eb
 5509 13d6 19       		.uleb128 0x19
 5510 13d7 97120000 		.long	0x1297
 5511 13db 19       		.uleb128 0x19
 5512 13dc EB130000 		.long	0x13eb
 5513 13e0 19       		.uleb128 0x19
 5514 13e1 1A020000 		.long	0x21a
 5515 13e5 19       		.uleb128 0x19
 5516 13e6 7A130000 		.long	0x137a
 5517 13ea 00       		.byte	0
 5518 13eb 11       		.uleb128 0x11
 5519 13ec 08       		.byte	0x8
 5520 13ed BC020000 		.long	0x2bc
 5521 13f1 3D       		.uleb128 0x3d
 5522 13f2 00000000 		.long	.LASF221
 5523 13f6 0D       		.byte	0xd
 5524 13f7 F602     		.value	0x2f6
 5525 13f9 2C020000 		.long	0x22c
 5526 13fd 0C140000 		.long	0x140c
 5527 1401 19       		.uleb128 0x19
 5528 1402 9D120000 		.long	0x129d
 5529 1406 19       		.uleb128 0x19
 5530 1407 71120000 		.long	0x1271
 5531 140b 00       		.byte	0
 5532 140c 3D       		.uleb128 0x3d
 5533 140d 00000000 		.long	.LASF222
 5534 1411 0D       		.byte	0xd
 5535 1412 FC02     		.value	0x2fc
 5536 1414 2C020000 		.long	0x22c
 5537 1418 22140000 		.long	0x1422
 5538 141c 19       		.uleb128 0x19
 5539 141d 9D120000 		.long	0x129d
 5540 1421 00       		.byte	0
 5541 1422 3D       		.uleb128 0x3d
 5542 1423 00000000 		.long	.LASF223
 5543 1427 0D       		.byte	0xd
 5544 1428 5A02     		.value	0x25a
 5545 142a 93020000 		.long	0x293
 5546 142e 43140000 		.long	0x1443
 5547 1432 19       		.uleb128 0x19
 5548 1433 97120000 		.long	0x1297
 5549 1437 19       		.uleb128 0x19
 5550 1438 1A020000 		.long	0x21a
 5551 143c 19       		.uleb128 0x19
 5552 143d DA120000 		.long	0x12da
 5553 1441 44       		.uleb128 0x44
 5554 1442 00       		.byte	0
 5555 1443 3D       		.uleb128 0x3d
 5556 1444 00000000 		.long	.LASF224
 5557 1448 0D       		.byte	0xd
 5558 1449 8302     		.value	0x283
 5559 144b 93020000 		.long	0x293
 5560 144f 5F140000 		.long	0x145f
 5561 1453 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 170


 5562 1454 DA120000 		.long	0x12da
 5563 1458 19       		.uleb128 0x19
 5564 1459 DA120000 		.long	0x12da
 5565 145d 44       		.uleb128 0x44
 5566 145e 00       		.byte	0
 5567 145f 3D       		.uleb128 0x3d
 5568 1460 00000000 		.long	.LASF225
 5569 1464 0D       		.byte	0xd
 5570 1465 1303     		.value	0x313
 5571 1467 2C020000 		.long	0x22c
 5572 146b 7A140000 		.long	0x147a
 5573 146f 19       		.uleb128 0x19
 5574 1470 2C020000 		.long	0x22c
 5575 1474 19       		.uleb128 0x19
 5576 1475 71120000 		.long	0x1271
 5577 1479 00       		.byte	0
 5578 147a 3D       		.uleb128 0x3d
 5579 147b 00000000 		.long	.LASF226
 5580 147f 0D       		.byte	0xd
 5581 1480 6202     		.value	0x262
 5582 1482 93020000 		.long	0x293
 5583 1486 9A140000 		.long	0x149a
 5584 148a 19       		.uleb128 0x19
 5585 148b 71120000 		.long	0x1271
 5586 148f 19       		.uleb128 0x19
 5587 1490 DA120000 		.long	0x12da
 5588 1494 19       		.uleb128 0x19
 5589 1495 9A140000 		.long	0x149a
 5590 1499 00       		.byte	0
 5591 149a 11       		.uleb128 0x11
 5592 149b 08       		.byte	0x8
 5593 149c D4010000 		.long	0x1d4
 5594 14a0 3D       		.uleb128 0x3d
 5595 14a1 00000000 		.long	.LASF227
 5596 14a5 0D       		.byte	0xd
 5597 14a6 AF02     		.value	0x2af
 5598 14a8 93020000 		.long	0x293
 5599 14ac C0140000 		.long	0x14c0
 5600 14b0 19       		.uleb128 0x19
 5601 14b1 71120000 		.long	0x1271
 5602 14b5 19       		.uleb128 0x19
 5603 14b6 DA120000 		.long	0x12da
 5604 14ba 19       		.uleb128 0x19
 5605 14bb 9A140000 		.long	0x149a
 5606 14bf 00       		.byte	0
 5607 14c0 3D       		.uleb128 0x3d
 5608 14c1 00000000 		.long	.LASF228
 5609 14c5 0D       		.byte	0xd
 5610 14c6 6F02     		.value	0x26f
 5611 14c8 93020000 		.long	0x293
 5612 14cc E5140000 		.long	0x14e5
 5613 14d0 19       		.uleb128 0x19
 5614 14d1 97120000 		.long	0x1297
 5615 14d5 19       		.uleb128 0x19
 5616 14d6 1A020000 		.long	0x21a
 5617 14da 19       		.uleb128 0x19
 5618 14db DA120000 		.long	0x12da
GAS LISTING /tmp/ccrWPnlb.s 			page 171


 5619 14df 19       		.uleb128 0x19
 5620 14e0 9A140000 		.long	0x149a
 5621 14e4 00       		.byte	0
 5622 14e5 3D       		.uleb128 0x3d
 5623 14e6 00000000 		.long	.LASF229
 5624 14ea 0D       		.byte	0xd
 5625 14eb BB02     		.value	0x2bb
 5626 14ed 93020000 		.long	0x293
 5627 14f1 05150000 		.long	0x1505
 5628 14f5 19       		.uleb128 0x19
 5629 14f6 DA120000 		.long	0x12da
 5630 14fa 19       		.uleb128 0x19
 5631 14fb DA120000 		.long	0x12da
 5632 14ff 19       		.uleb128 0x19
 5633 1500 9A140000 		.long	0x149a
 5634 1504 00       		.byte	0
 5635 1505 3D       		.uleb128 0x3d
 5636 1506 00000000 		.long	.LASF230
 5637 150a 0D       		.byte	0xd
 5638 150b 6A02     		.value	0x26a
 5639 150d 93020000 		.long	0x293
 5640 1511 20150000 		.long	0x1520
 5641 1515 19       		.uleb128 0x19
 5642 1516 DA120000 		.long	0x12da
 5643 151a 19       		.uleb128 0x19
 5644 151b 9A140000 		.long	0x149a
 5645 151f 00       		.byte	0
 5646 1520 3D       		.uleb128 0x3d
 5647 1521 00000000 		.long	.LASF231
 5648 1525 0D       		.byte	0xd
 5649 1526 B702     		.value	0x2b7
 5650 1528 93020000 		.long	0x293
 5651 152c 3B150000 		.long	0x153b
 5652 1530 19       		.uleb128 0x19
 5653 1531 DA120000 		.long	0x12da
 5654 1535 19       		.uleb128 0x19
 5655 1536 9A140000 		.long	0x149a
 5656 153a 00       		.byte	0
 5657 153b 3D       		.uleb128 0x3d
 5658 153c 00000000 		.long	.LASF232
 5659 1540 0D       		.byte	0xd
 5660 1541 7001     		.value	0x170
 5661 1543 1A020000 		.long	0x21a
 5662 1547 5B150000 		.long	0x155b
 5663 154b 19       		.uleb128 0x19
 5664 154c 5B150000 		.long	0x155b
 5665 1550 19       		.uleb128 0x19
 5666 1551 9D120000 		.long	0x129d
 5667 1555 19       		.uleb128 0x19
 5668 1556 7A130000 		.long	0x137a
 5669 155a 00       		.byte	0
 5670 155b 11       		.uleb128 0x11
 5671 155c 08       		.byte	0x8
 5672 155d 8C020000 		.long	0x28c
 5673 1561 3C       		.uleb128 0x3c
 5674 1562 00000000 		.long	.LASF233
 5675 1566 0D       		.byte	0xd
GAS LISTING /tmp/ccrWPnlb.s 			page 172


 5676 1567 98       		.byte	0x98
 5677 1568 97120000 		.long	0x1297
 5678 156c 7B150000 		.long	0x157b
 5679 1570 19       		.uleb128 0x19
 5680 1571 97120000 		.long	0x1297
 5681 1575 19       		.uleb128 0x19
 5682 1576 DA120000 		.long	0x12da
 5683 157a 00       		.byte	0
 5684 157b 3C       		.uleb128 0x3c
 5685 157c 00000000 		.long	.LASF234
 5686 1580 0D       		.byte	0xd
 5687 1581 A0       		.byte	0xa0
 5688 1582 93020000 		.long	0x293
 5689 1586 95150000 		.long	0x1595
 5690 158a 19       		.uleb128 0x19
 5691 158b DA120000 		.long	0x12da
 5692 158f 19       		.uleb128 0x19
 5693 1590 DA120000 		.long	0x12da
 5694 1594 00       		.byte	0
 5695 1595 3C       		.uleb128 0x3c
 5696 1596 00000000 		.long	.LASF235
 5697 159a 0D       		.byte	0xd
 5698 159b BD       		.byte	0xbd
 5699 159c 93020000 		.long	0x293
 5700 15a0 AF150000 		.long	0x15af
 5701 15a4 19       		.uleb128 0x19
 5702 15a5 DA120000 		.long	0x12da
 5703 15a9 19       		.uleb128 0x19
 5704 15aa DA120000 		.long	0x12da
 5705 15ae 00       		.byte	0
 5706 15af 3C       		.uleb128 0x3c
 5707 15b0 00000000 		.long	.LASF236
 5708 15b4 0D       		.byte	0xd
 5709 15b5 90       		.byte	0x90
 5710 15b6 97120000 		.long	0x1297
 5711 15ba C9150000 		.long	0x15c9
 5712 15be 19       		.uleb128 0x19
 5713 15bf 97120000 		.long	0x1297
 5714 15c3 19       		.uleb128 0x19
 5715 15c4 DA120000 		.long	0x12da
 5716 15c8 00       		.byte	0
 5717 15c9 3C       		.uleb128 0x3c
 5718 15ca 00000000 		.long	.LASF237
 5719 15ce 0D       		.byte	0xd
 5720 15cf F9       		.byte	0xf9
 5721 15d0 1A020000 		.long	0x21a
 5722 15d4 E3150000 		.long	0x15e3
 5723 15d8 19       		.uleb128 0x19
 5724 15d9 DA120000 		.long	0x12da
 5725 15dd 19       		.uleb128 0x19
 5726 15de DA120000 		.long	0x12da
 5727 15e2 00       		.byte	0
 5728 15e3 3D       		.uleb128 0x3d
 5729 15e4 00000000 		.long	.LASF238
 5730 15e8 0D       		.byte	0xd
 5731 15e9 5503     		.value	0x355
 5732 15eb 1A020000 		.long	0x21a
GAS LISTING /tmp/ccrWPnlb.s 			page 173


 5733 15ef 08160000 		.long	0x1608
 5734 15f3 19       		.uleb128 0x19
 5735 15f4 97120000 		.long	0x1297
 5736 15f8 19       		.uleb128 0x19
 5737 15f9 1A020000 		.long	0x21a
 5738 15fd 19       		.uleb128 0x19
 5739 15fe DA120000 		.long	0x12da
 5740 1602 19       		.uleb128 0x19
 5741 1603 08160000 		.long	0x1608
 5742 1607 00       		.byte	0
 5743 1608 11       		.uleb128 0x11
 5744 1609 08       		.byte	0x8
 5745 160a 0E160000 		.long	0x160e
 5746 160e 10       		.uleb128 0x10
 5747 160f 13160000 		.long	0x1613
 5748 1613 46       		.uleb128 0x46
 5749 1614 746D00   		.string	"tm"
 5750 1617 38       		.byte	0x38
 5751 1618 1C       		.byte	0x1c
 5752 1619 85       		.byte	0x85
 5753 161a A3160000 		.long	0x16a3
 5754 161e 07       		.uleb128 0x7
 5755 161f 00000000 		.long	.LASF239
 5756 1623 1C       		.byte	0x1c
 5757 1624 87       		.byte	0x87
 5758 1625 93020000 		.long	0x293
 5759 1629 00       		.byte	0
 5760 162a 07       		.uleb128 0x7
 5761 162b 00000000 		.long	.LASF240
 5762 162f 1C       		.byte	0x1c
 5763 1630 88       		.byte	0x88
 5764 1631 93020000 		.long	0x293
 5765 1635 04       		.byte	0x4
 5766 1636 07       		.uleb128 0x7
 5767 1637 00000000 		.long	.LASF241
 5768 163b 1C       		.byte	0x1c
 5769 163c 89       		.byte	0x89
 5770 163d 93020000 		.long	0x293
 5771 1641 08       		.byte	0x8
 5772 1642 07       		.uleb128 0x7
 5773 1643 00000000 		.long	.LASF242
 5774 1647 1C       		.byte	0x1c
 5775 1648 8A       		.byte	0x8a
 5776 1649 93020000 		.long	0x293
 5777 164d 0C       		.byte	0xc
 5778 164e 07       		.uleb128 0x7
 5779 164f 00000000 		.long	.LASF243
 5780 1653 1C       		.byte	0x1c
 5781 1654 8B       		.byte	0x8b
 5782 1655 93020000 		.long	0x293
 5783 1659 10       		.byte	0x10
 5784 165a 07       		.uleb128 0x7
 5785 165b 00000000 		.long	.LASF244
 5786 165f 1C       		.byte	0x1c
 5787 1660 8C       		.byte	0x8c
 5788 1661 93020000 		.long	0x293
 5789 1665 14       		.byte	0x14
GAS LISTING /tmp/ccrWPnlb.s 			page 174


 5790 1666 07       		.uleb128 0x7
 5791 1667 00000000 		.long	.LASF245
 5792 166b 1C       		.byte	0x1c
 5793 166c 8D       		.byte	0x8d
 5794 166d 93020000 		.long	0x293
 5795 1671 18       		.byte	0x18
 5796 1672 07       		.uleb128 0x7
 5797 1673 00000000 		.long	.LASF246
 5798 1677 1C       		.byte	0x1c
 5799 1678 8E       		.byte	0x8e
 5800 1679 93020000 		.long	0x293
 5801 167d 1C       		.byte	0x1c
 5802 167e 07       		.uleb128 0x7
 5803 167f 00000000 		.long	.LASF247
 5804 1683 1C       		.byte	0x1c
 5805 1684 8F       		.byte	0x8f
 5806 1685 93020000 		.long	0x293
 5807 1689 20       		.byte	0x20
 5808 168a 07       		.uleb128 0x7
 5809 168b 00000000 		.long	.LASF248
 5810 168f 1C       		.byte	0x1c
 5811 1690 92       		.byte	0x92
 5812 1691 DE170000 		.long	0x17de
 5813 1695 28       		.byte	0x28
 5814 1696 07       		.uleb128 0x7
 5815 1697 00000000 		.long	.LASF249
 5816 169b 1C       		.byte	0x1c
 5817 169c 93       		.byte	0x93
 5818 169d BC020000 		.long	0x2bc
 5819 16a1 30       		.byte	0x30
 5820 16a2 00       		.byte	0
 5821 16a3 3D       		.uleb128 0x3d
 5822 16a4 00000000 		.long	.LASF250
 5823 16a8 0D       		.byte	0xd
 5824 16a9 1C01     		.value	0x11c
 5825 16ab 1A020000 		.long	0x21a
 5826 16af B9160000 		.long	0x16b9
 5827 16b3 19       		.uleb128 0x19
 5828 16b4 DA120000 		.long	0x12da
 5829 16b8 00       		.byte	0
 5830 16b9 3C       		.uleb128 0x3c
 5831 16ba 00000000 		.long	.LASF251
 5832 16be 0D       		.byte	0xd
 5833 16bf 9B       		.byte	0x9b
 5834 16c0 97120000 		.long	0x1297
 5835 16c4 D8160000 		.long	0x16d8
 5836 16c8 19       		.uleb128 0x19
 5837 16c9 97120000 		.long	0x1297
 5838 16cd 19       		.uleb128 0x19
 5839 16ce DA120000 		.long	0x12da
 5840 16d2 19       		.uleb128 0x19
 5841 16d3 1A020000 		.long	0x21a
 5842 16d7 00       		.byte	0
 5843 16d8 3C       		.uleb128 0x3c
 5844 16d9 00000000 		.long	.LASF252
 5845 16dd 0D       		.byte	0xd
 5846 16de A3       		.byte	0xa3
GAS LISTING /tmp/ccrWPnlb.s 			page 175


 5847 16df 93020000 		.long	0x293
 5848 16e3 F7160000 		.long	0x16f7
 5849 16e7 19       		.uleb128 0x19
 5850 16e8 DA120000 		.long	0x12da
 5851 16ec 19       		.uleb128 0x19
 5852 16ed DA120000 		.long	0x12da
 5853 16f1 19       		.uleb128 0x19
 5854 16f2 1A020000 		.long	0x21a
 5855 16f6 00       		.byte	0
 5856 16f7 3C       		.uleb128 0x3c
 5857 16f8 00000000 		.long	.LASF253
 5858 16fc 0D       		.byte	0xd
 5859 16fd 93       		.byte	0x93
 5860 16fe 97120000 		.long	0x1297
 5861 1702 16170000 		.long	0x1716
 5862 1706 19       		.uleb128 0x19
 5863 1707 97120000 		.long	0x1297
 5864 170b 19       		.uleb128 0x19
 5865 170c DA120000 		.long	0x12da
 5866 1710 19       		.uleb128 0x19
 5867 1711 1A020000 		.long	0x21a
 5868 1715 00       		.byte	0
 5869 1716 3D       		.uleb128 0x3d
 5870 1717 00000000 		.long	.LASF254
 5871 171b 0D       		.byte	0xd
 5872 171c 9C01     		.value	0x19c
 5873 171e 1A020000 		.long	0x21a
 5874 1722 3B170000 		.long	0x173b
 5875 1726 19       		.uleb128 0x19
 5876 1727 5B150000 		.long	0x155b
 5877 172b 19       		.uleb128 0x19
 5878 172c 3B170000 		.long	0x173b
 5879 1730 19       		.uleb128 0x19
 5880 1731 1A020000 		.long	0x21a
 5881 1735 19       		.uleb128 0x19
 5882 1736 7A130000 		.long	0x137a
 5883 173a 00       		.byte	0
 5884 173b 11       		.uleb128 0x11
 5885 173c 08       		.byte	0x8
 5886 173d DA120000 		.long	0x12da
 5887 1741 3C       		.uleb128 0x3c
 5888 1742 00000000 		.long	.LASF255
 5889 1746 0D       		.byte	0xd
 5890 1747 FD       		.byte	0xfd
 5891 1748 1A020000 		.long	0x21a
 5892 174c 5B170000 		.long	0x175b
 5893 1750 19       		.uleb128 0x19
 5894 1751 DA120000 		.long	0x12da
 5895 1755 19       		.uleb128 0x19
 5896 1756 DA120000 		.long	0x12da
 5897 175a 00       		.byte	0
 5898 175b 3D       		.uleb128 0x3d
 5899 175c 00000000 		.long	.LASF256
 5900 1760 0D       		.byte	0xd
 5901 1761 C001     		.value	0x1c0
 5902 1763 76170000 		.long	0x1776
 5903 1767 76170000 		.long	0x1776
GAS LISTING /tmp/ccrWPnlb.s 			page 176


 5904 176b 19       		.uleb128 0x19
 5905 176c DA120000 		.long	0x12da
 5906 1770 19       		.uleb128 0x19
 5907 1771 7D170000 		.long	0x177d
 5908 1775 00       		.byte	0
 5909 1776 02       		.uleb128 0x2
 5910 1777 08       		.byte	0x8
 5911 1778 04       		.byte	0x4
 5912 1779 00000000 		.long	.LASF257
 5913 177d 11       		.uleb128 0x11
 5914 177e 08       		.byte	0x8
 5915 177f 97120000 		.long	0x1297
 5916 1783 3D       		.uleb128 0x3d
 5917 1784 00000000 		.long	.LASF258
 5918 1788 0D       		.byte	0xd
 5919 1789 C701     		.value	0x1c7
 5920 178b 29000000 		.long	0x29
 5921 178f 9E170000 		.long	0x179e
 5922 1793 19       		.uleb128 0x19
 5923 1794 DA120000 		.long	0x12da
 5924 1798 19       		.uleb128 0x19
 5925 1799 7D170000 		.long	0x177d
 5926 179d 00       		.byte	0
 5927 179e 3D       		.uleb128 0x3d
 5928 179f 00000000 		.long	.LASF259
 5929 17a3 0D       		.byte	0xd
 5930 17a4 1701     		.value	0x117
 5931 17a6 97120000 		.long	0x1297
 5932 17aa BE170000 		.long	0x17be
 5933 17ae 19       		.uleb128 0x19
 5934 17af 97120000 		.long	0x1297
 5935 17b3 19       		.uleb128 0x19
 5936 17b4 DA120000 		.long	0x12da
 5937 17b8 19       		.uleb128 0x19
 5938 17b9 7D170000 		.long	0x177d
 5939 17bd 00       		.byte	0
 5940 17be 3D       		.uleb128 0x3d
 5941 17bf 00000000 		.long	.LASF260
 5942 17c3 0D       		.byte	0xd
 5943 17c4 D201     		.value	0x1d2
 5944 17c6 DE170000 		.long	0x17de
 5945 17ca DE170000 		.long	0x17de
 5946 17ce 19       		.uleb128 0x19
 5947 17cf DA120000 		.long	0x12da
 5948 17d3 19       		.uleb128 0x19
 5949 17d4 7D170000 		.long	0x177d
 5950 17d8 19       		.uleb128 0x19
 5951 17d9 93020000 		.long	0x293
 5952 17dd 00       		.byte	0
 5953 17de 02       		.uleb128 0x2
 5954 17df 08       		.byte	0x8
 5955 17e0 05       		.byte	0x5
 5956 17e1 00000000 		.long	.LASF261
 5957 17e5 3D       		.uleb128 0x3d
 5958 17e6 00000000 		.long	.LASF262
 5959 17ea 0D       		.byte	0xd
 5960 17eb D701     		.value	0x1d7
GAS LISTING /tmp/ccrWPnlb.s 			page 177


 5961 17ed 25020000 		.long	0x225
 5962 17f1 05180000 		.long	0x1805
 5963 17f5 19       		.uleb128 0x19
 5964 17f6 DA120000 		.long	0x12da
 5965 17fa 19       		.uleb128 0x19
 5966 17fb 7D170000 		.long	0x177d
 5967 17ff 19       		.uleb128 0x19
 5968 1800 93020000 		.long	0x293
 5969 1804 00       		.byte	0
 5970 1805 3C       		.uleb128 0x3c
 5971 1806 00000000 		.long	.LASF263
 5972 180a 0D       		.byte	0xd
 5973 180b C1       		.byte	0xc1
 5974 180c 1A020000 		.long	0x21a
 5975 1810 24180000 		.long	0x1824
 5976 1814 19       		.uleb128 0x19
 5977 1815 97120000 		.long	0x1297
 5978 1819 19       		.uleb128 0x19
 5979 181a DA120000 		.long	0x12da
 5980 181e 19       		.uleb128 0x19
 5981 181f 1A020000 		.long	0x21a
 5982 1823 00       		.byte	0
 5983 1824 3D       		.uleb128 0x3d
 5984 1825 00000000 		.long	.LASF264
 5985 1829 0D       		.byte	0xd
 5986 182a 8801     		.value	0x188
 5987 182c 93020000 		.long	0x293
 5988 1830 3A180000 		.long	0x183a
 5989 1834 19       		.uleb128 0x19
 5990 1835 2C020000 		.long	0x22c
 5991 1839 00       		.byte	0
 5992 183a 3D       		.uleb128 0x3d
 5993 183b 00000000 		.long	.LASF265
 5994 183f 0D       		.byte	0xd
 5995 1840 4201     		.value	0x142
 5996 1842 93020000 		.long	0x293
 5997 1846 5A180000 		.long	0x185a
 5998 184a 19       		.uleb128 0x19
 5999 184b DA120000 		.long	0x12da
 6000 184f 19       		.uleb128 0x19
 6001 1850 DA120000 		.long	0x12da
 6002 1854 19       		.uleb128 0x19
 6003 1855 1A020000 		.long	0x21a
 6004 1859 00       		.byte	0
 6005 185a 3D       		.uleb128 0x3d
 6006 185b 00000000 		.long	.LASF266
 6007 185f 0D       		.byte	0xd
 6008 1860 4701     		.value	0x147
 6009 1862 97120000 		.long	0x1297
 6010 1866 7A180000 		.long	0x187a
 6011 186a 19       		.uleb128 0x19
 6012 186b 97120000 		.long	0x1297
 6013 186f 19       		.uleb128 0x19
 6014 1870 DA120000 		.long	0x12da
 6015 1874 19       		.uleb128 0x19
 6016 1875 1A020000 		.long	0x21a
 6017 1879 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 178


 6018 187a 3D       		.uleb128 0x3d
 6019 187b 00000000 		.long	.LASF267
 6020 187f 0D       		.byte	0xd
 6021 1880 4C01     		.value	0x14c
 6022 1882 97120000 		.long	0x1297
 6023 1886 9A180000 		.long	0x189a
 6024 188a 19       		.uleb128 0x19
 6025 188b 97120000 		.long	0x1297
 6026 188f 19       		.uleb128 0x19
 6027 1890 DA120000 		.long	0x12da
 6028 1894 19       		.uleb128 0x19
 6029 1895 1A020000 		.long	0x21a
 6030 1899 00       		.byte	0
 6031 189a 3D       		.uleb128 0x3d
 6032 189b 00000000 		.long	.LASF268
 6033 189f 0D       		.byte	0xd
 6034 18a0 5001     		.value	0x150
 6035 18a2 97120000 		.long	0x1297
 6036 18a6 BA180000 		.long	0x18ba
 6037 18aa 19       		.uleb128 0x19
 6038 18ab 97120000 		.long	0x1297
 6039 18af 19       		.uleb128 0x19
 6040 18b0 9D120000 		.long	0x129d
 6041 18b4 19       		.uleb128 0x19
 6042 18b5 1A020000 		.long	0x21a
 6043 18b9 00       		.byte	0
 6044 18ba 3D       		.uleb128 0x3d
 6045 18bb 00000000 		.long	.LASF269
 6046 18bf 0D       		.byte	0xd
 6047 18c0 5702     		.value	0x257
 6048 18c2 93020000 		.long	0x293
 6049 18c6 D1180000 		.long	0x18d1
 6050 18ca 19       		.uleb128 0x19
 6051 18cb DA120000 		.long	0x12da
 6052 18cf 44       		.uleb128 0x44
 6053 18d0 00       		.byte	0
 6054 18d1 3D       		.uleb128 0x3d
 6055 18d2 00000000 		.long	.LASF270
 6056 18d6 0D       		.byte	0xd
 6057 18d7 8002     		.value	0x280
 6058 18d9 93020000 		.long	0x293
 6059 18dd E8180000 		.long	0x18e8
 6060 18e1 19       		.uleb128 0x19
 6061 18e2 DA120000 		.long	0x12da
 6062 18e6 44       		.uleb128 0x44
 6063 18e7 00       		.byte	0
 6064 18e8 42       		.uleb128 0x42
 6065 18e9 00000000 		.long	.LASF271
 6066 18ed 0D       		.byte	0xd
 6067 18ee DD       		.byte	0xdd
 6068 18ef 00000000 		.long	.LASF271
 6069 18f3 DA120000 		.long	0x12da
 6070 18f7 06190000 		.long	0x1906
 6071 18fb 19       		.uleb128 0x19
 6072 18fc DA120000 		.long	0x12da
 6073 1900 19       		.uleb128 0x19
 6074 1901 9D120000 		.long	0x129d
GAS LISTING /tmp/ccrWPnlb.s 			page 179


 6075 1905 00       		.byte	0
 6076 1906 26       		.uleb128 0x26
 6077 1907 00000000 		.long	.LASF272
 6078 190b 0D       		.byte	0xd
 6079 190c 0301     		.value	0x103
 6080 190e 00000000 		.long	.LASF272
 6081 1912 DA120000 		.long	0x12da
 6082 1916 25190000 		.long	0x1925
 6083 191a 19       		.uleb128 0x19
 6084 191b DA120000 		.long	0x12da
 6085 191f 19       		.uleb128 0x19
 6086 1920 DA120000 		.long	0x12da
 6087 1924 00       		.byte	0
 6088 1925 42       		.uleb128 0x42
 6089 1926 00000000 		.long	.LASF273
 6090 192a 0D       		.byte	0xd
 6091 192b E7       		.byte	0xe7
 6092 192c 00000000 		.long	.LASF273
 6093 1930 DA120000 		.long	0x12da
 6094 1934 43190000 		.long	0x1943
 6095 1938 19       		.uleb128 0x19
 6096 1939 DA120000 		.long	0x12da
 6097 193d 19       		.uleb128 0x19
 6098 193e 9D120000 		.long	0x129d
 6099 1942 00       		.byte	0
 6100 1943 26       		.uleb128 0x26
 6101 1944 00000000 		.long	.LASF274
 6102 1948 0D       		.byte	0xd
 6103 1949 0E01     		.value	0x10e
 6104 194b 00000000 		.long	.LASF274
 6105 194f DA120000 		.long	0x12da
 6106 1953 62190000 		.long	0x1962
 6107 1957 19       		.uleb128 0x19
 6108 1958 DA120000 		.long	0x12da
 6109 195c 19       		.uleb128 0x19
 6110 195d DA120000 		.long	0x12da
 6111 1961 00       		.byte	0
 6112 1962 26       		.uleb128 0x26
 6113 1963 00000000 		.long	.LASF275
 6114 1967 0D       		.byte	0xd
 6115 1968 3901     		.value	0x139
 6116 196a 00000000 		.long	.LASF275
 6117 196e DA120000 		.long	0x12da
 6118 1972 86190000 		.long	0x1986
 6119 1976 19       		.uleb128 0x19
 6120 1977 DA120000 		.long	0x12da
 6121 197b 19       		.uleb128 0x19
 6122 197c 9D120000 		.long	0x129d
 6123 1980 19       		.uleb128 0x19
 6124 1981 1A020000 		.long	0x21a
 6125 1985 00       		.byte	0
 6126 1986 15       		.uleb128 0x15
 6127 1987 00000000 		.long	.LASF276
 6128 198b 0E       		.byte	0xe
 6129 198c F2       		.byte	0xf2
 6130 198d 191C0000 		.long	0x1c19
 6131 1991 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 180


 6132 1992 0E       		.byte	0xe
 6133 1993 F8       		.byte	0xf8
 6134 1994 191C0000 		.long	0x1c19
 6135 1998 14       		.uleb128 0x14
 6136 1999 0E       		.byte	0xe
 6137 199a 0101     		.value	0x101
 6138 199c 3B1C0000 		.long	0x1c3b
 6139 19a0 14       		.uleb128 0x14
 6140 19a1 0E       		.byte	0xe
 6141 19a2 0201     		.value	0x102
 6142 19a4 621C0000 		.long	0x1c62
 6143 19a8 23       		.uleb128 0x23
 6144 19a9 00000000 		.long	.LASF278
 6145 19ad 1E       		.byte	0x1e
 6146 19ae 24       		.byte	0x24
 6147 19af 13       		.uleb128 0x13
 6148 19b0 1F       		.byte	0x1f
 6149 19b1 2C       		.byte	0x2c
 6150 19b2 5D080000 		.long	0x85d
 6151 19b6 13       		.uleb128 0x13
 6152 19b7 1F       		.byte	0x1f
 6153 19b8 2D       		.byte	0x2d
 6154 19b9 41090000 		.long	0x941
 6155 19bd 06       		.uleb128 0x6
 6156 19be 00000000 		.long	.LASF279
 6157 19c2 01       		.byte	0x1
 6158 19c3 20       		.byte	0x20
 6159 19c4 37       		.byte	0x37
 6160 19c5 FF190000 		.long	0x19ff
 6161 19c9 47       		.uleb128 0x47
 6162 19ca 00000000 		.long	.LASF280
 6163 19ce 20       		.byte	0x20
 6164 19cf 3A       		.byte	0x3a
 6165 19d0 B7020000 		.long	0x2b7
 6166 19d4 47       		.uleb128 0x47
 6167 19d5 00000000 		.long	.LASF281
 6168 19d9 20       		.byte	0x20
 6169 19da 3B       		.byte	0x3b
 6170 19db B7020000 		.long	0x2b7
 6171 19df 47       		.uleb128 0x47
 6172 19e0 00000000 		.long	.LASF282
 6173 19e4 20       		.byte	0x20
 6174 19e5 3F       		.byte	0x3f
 6175 19e6 CE1C0000 		.long	0x1cce
 6176 19ea 47       		.uleb128 0x47
 6177 19eb 00000000 		.long	.LASF283
 6178 19ef 20       		.byte	0x20
 6179 19f0 40       		.byte	0x40
 6180 19f1 B7020000 		.long	0x2b7
 6181 19f5 35       		.uleb128 0x35
 6182 19f6 00000000 		.long	.LASF284
 6183 19fa 93020000 		.long	0x293
 6184 19fe 00       		.byte	0
 6185 19ff 13       		.uleb128 0x13
 6186 1a00 13       		.byte	0x13
 6187 1a01 C9       		.byte	0xc9
 6188 1a02 6C200000 		.long	0x206c
GAS LISTING /tmp/ccrWPnlb.s 			page 181


 6189 1a06 13       		.uleb128 0x13
 6190 1a07 13       		.byte	0x13
 6191 1a08 D9       		.byte	0xd9
 6192 1a09 E7220000 		.long	0x22e7
 6193 1a0d 13       		.uleb128 0x13
 6194 1a0e 13       		.byte	0x13
 6195 1a0f E4       		.byte	0xe4
 6196 1a10 02230000 		.long	0x2302
 6197 1a14 13       		.uleb128 0x13
 6198 1a15 13       		.byte	0x13
 6199 1a16 E5       		.byte	0xe5
 6200 1a17 18230000 		.long	0x2318
 6201 1a1b 13       		.uleb128 0x13
 6202 1a1c 13       		.byte	0x13
 6203 1a1d E6       		.byte	0xe6
 6204 1a1e 37230000 		.long	0x2337
 6205 1a22 13       		.uleb128 0x13
 6206 1a23 13       		.byte	0x13
 6207 1a24 E8       		.byte	0xe8
 6208 1a25 56230000 		.long	0x2356
 6209 1a29 13       		.uleb128 0x13
 6210 1a2a 13       		.byte	0x13
 6211 1a2b E9       		.byte	0xe9
 6212 1a2c 70230000 		.long	0x2370
 6213 1a30 25       		.uleb128 0x25
 6214 1a31 64697600 		.string	"div"
 6215 1a35 13       		.byte	0x13
 6216 1a36 D6       		.byte	0xd6
 6217 1a37 00000000 		.long	.LASF285
 6218 1a3b 6C200000 		.long	0x206c
 6219 1a3f 4E1A0000 		.long	0x1a4e
 6220 1a43 19       		.uleb128 0x19
 6221 1a44 5B1C0000 		.long	0x1c5b
 6222 1a48 19       		.uleb128 0x19
 6223 1a49 5B1C0000 		.long	0x1c5b
 6224 1a4d 00       		.byte	0
 6225 1a4e 06       		.uleb128 0x6
 6226 1a4f 00000000 		.long	.LASF286
 6227 1a53 01       		.byte	0x1
 6228 1a54 20       		.byte	0x20
 6229 1a55 64       		.byte	0x64
 6230 1a56 901A0000 		.long	0x1a90
 6231 1a5a 47       		.uleb128 0x47
 6232 1a5b 00000000 		.long	.LASF287
 6233 1a5f 20       		.byte	0x20
 6234 1a60 67       		.byte	0x67
 6235 1a61 B7020000 		.long	0x2b7
 6236 1a65 47       		.uleb128 0x47
 6237 1a66 00000000 		.long	.LASF282
 6238 1a6a 20       		.byte	0x20
 6239 1a6b 6A       		.byte	0x6a
 6240 1a6c CE1C0000 		.long	0x1cce
 6241 1a70 47       		.uleb128 0x47
 6242 1a71 00000000 		.long	.LASF288
 6243 1a75 20       		.byte	0x20
 6244 1a76 6B       		.byte	0x6b
 6245 1a77 B7020000 		.long	0x2b7
GAS LISTING /tmp/ccrWPnlb.s 			page 182


 6246 1a7b 47       		.uleb128 0x47
 6247 1a7c 00000000 		.long	.LASF289
 6248 1a80 20       		.byte	0x20
 6249 1a81 6C       		.byte	0x6c
 6250 1a82 B7020000 		.long	0x2b7
 6251 1a86 35       		.uleb128 0x35
 6252 1a87 00000000 		.long	.LASF284
 6253 1a8b 29000000 		.long	0x29
 6254 1a8f 00       		.byte	0
 6255 1a90 06       		.uleb128 0x6
 6256 1a91 00000000 		.long	.LASF290
 6257 1a95 01       		.byte	0x1
 6258 1a96 20       		.byte	0x20
 6259 1a97 64       		.byte	0x64
 6260 1a98 D21A0000 		.long	0x1ad2
 6261 1a9c 47       		.uleb128 0x47
 6262 1a9d 00000000 		.long	.LASF287
 6263 1aa1 20       		.byte	0x20
 6264 1aa2 67       		.byte	0x67
 6265 1aa3 B7020000 		.long	0x2b7
 6266 1aa7 47       		.uleb128 0x47
 6267 1aa8 00000000 		.long	.LASF282
 6268 1aac 20       		.byte	0x20
 6269 1aad 6A       		.byte	0x6a
 6270 1aae CE1C0000 		.long	0x1cce
 6271 1ab2 47       		.uleb128 0x47
 6272 1ab3 00000000 		.long	.LASF288
 6273 1ab7 20       		.byte	0x20
 6274 1ab8 6B       		.byte	0x6b
 6275 1ab9 B7020000 		.long	0x2b7
 6276 1abd 47       		.uleb128 0x47
 6277 1abe 00000000 		.long	.LASF289
 6278 1ac2 20       		.byte	0x20
 6279 1ac3 6C       		.byte	0x6c
 6280 1ac4 B7020000 		.long	0x2b7
 6281 1ac8 35       		.uleb128 0x35
 6282 1ac9 00000000 		.long	.LASF284
 6283 1acd 76170000 		.long	0x1776
 6284 1ad1 00       		.byte	0
 6285 1ad2 06       		.uleb128 0x6
 6286 1ad3 00000000 		.long	.LASF291
 6287 1ad7 01       		.byte	0x1
 6288 1ad8 20       		.byte	0x20
 6289 1ad9 64       		.byte	0x64
 6290 1ada 141B0000 		.long	0x1b14
 6291 1ade 47       		.uleb128 0x47
 6292 1adf 00000000 		.long	.LASF287
 6293 1ae3 20       		.byte	0x20
 6294 1ae4 67       		.byte	0x67
 6295 1ae5 B7020000 		.long	0x2b7
 6296 1ae9 47       		.uleb128 0x47
 6297 1aea 00000000 		.long	.LASF282
 6298 1aee 20       		.byte	0x20
 6299 1aef 6A       		.byte	0x6a
 6300 1af0 CE1C0000 		.long	0x1cce
 6301 1af4 47       		.uleb128 0x47
 6302 1af5 00000000 		.long	.LASF288
GAS LISTING /tmp/ccrWPnlb.s 			page 183


 6303 1af9 20       		.byte	0x20
 6304 1afa 6B       		.byte	0x6b
 6305 1afb B7020000 		.long	0x2b7
 6306 1aff 47       		.uleb128 0x47
 6307 1b00 00000000 		.long	.LASF289
 6308 1b04 20       		.byte	0x20
 6309 1b05 6C       		.byte	0x6c
 6310 1b06 B7020000 		.long	0x2b7
 6311 1b0a 35       		.uleb128 0x35
 6312 1b0b 00000000 		.long	.LASF284
 6313 1b0f 341C0000 		.long	0x1c34
 6314 1b13 00       		.byte	0
 6315 1b14 06       		.uleb128 0x6
 6316 1b15 00000000 		.long	.LASF292
 6317 1b19 01       		.byte	0x1
 6318 1b1a 20       		.byte	0x20
 6319 1b1b 37       		.byte	0x37
 6320 1b1c 561B0000 		.long	0x1b56
 6321 1b20 47       		.uleb128 0x47
 6322 1b21 00000000 		.long	.LASF280
 6323 1b25 20       		.byte	0x20
 6324 1b26 3A       		.byte	0x3a
 6325 1b27 D31C0000 		.long	0x1cd3
 6326 1b2b 47       		.uleb128 0x47
 6327 1b2c 00000000 		.long	.LASF281
 6328 1b30 20       		.byte	0x20
 6329 1b31 3B       		.byte	0x3b
 6330 1b32 D31C0000 		.long	0x1cd3
 6331 1b36 47       		.uleb128 0x47
 6332 1b37 00000000 		.long	.LASF282
 6333 1b3b 20       		.byte	0x20
 6334 1b3c 3F       		.byte	0x3f
 6335 1b3d CE1C0000 		.long	0x1cce
 6336 1b41 47       		.uleb128 0x47
 6337 1b42 00000000 		.long	.LASF283
 6338 1b46 20       		.byte	0x20
 6339 1b47 40       		.byte	0x40
 6340 1b48 B7020000 		.long	0x2b7
 6341 1b4c 35       		.uleb128 0x35
 6342 1b4d 00000000 		.long	.LASF284
 6343 1b51 25020000 		.long	0x225
 6344 1b55 00       		.byte	0
 6345 1b56 06       		.uleb128 0x6
 6346 1b57 00000000 		.long	.LASF293
 6347 1b5b 01       		.byte	0x1
 6348 1b5c 20       		.byte	0x20
 6349 1b5d 37       		.byte	0x37
 6350 1b5e 981B0000 		.long	0x1b98
 6351 1b62 47       		.uleb128 0x47
 6352 1b63 00000000 		.long	.LASF280
 6353 1b67 20       		.byte	0x20
 6354 1b68 3A       		.byte	0x3a
 6355 1b69 C2020000 		.long	0x2c2
 6356 1b6d 47       		.uleb128 0x47
 6357 1b6e 00000000 		.long	.LASF281
 6358 1b72 20       		.byte	0x20
 6359 1b73 3B       		.byte	0x3b
GAS LISTING /tmp/ccrWPnlb.s 			page 184


 6360 1b74 C2020000 		.long	0x2c2
 6361 1b78 47       		.uleb128 0x47
 6362 1b79 00000000 		.long	.LASF282
 6363 1b7d 20       		.byte	0x20
 6364 1b7e 3F       		.byte	0x3f
 6365 1b7f CE1C0000 		.long	0x1cce
 6366 1b83 47       		.uleb128 0x47
 6367 1b84 00000000 		.long	.LASF283
 6368 1b88 20       		.byte	0x20
 6369 1b89 40       		.byte	0x40
 6370 1b8a B7020000 		.long	0x2b7
 6371 1b8e 35       		.uleb128 0x35
 6372 1b8f 00000000 		.long	.LASF284
 6373 1b93 8C020000 		.long	0x28c
 6374 1b97 00       		.byte	0
 6375 1b98 06       		.uleb128 0x6
 6376 1b99 00000000 		.long	.LASF294
 6377 1b9d 01       		.byte	0x1
 6378 1b9e 20       		.byte	0x20
 6379 1b9f 37       		.byte	0x37
 6380 1ba0 DA1B0000 		.long	0x1bda
 6381 1ba4 47       		.uleb128 0x47
 6382 1ba5 00000000 		.long	.LASF280
 6383 1ba9 20       		.byte	0x20
 6384 1baa 3A       		.byte	0x3a
 6385 1bab 3C270000 		.long	0x273c
 6386 1baf 47       		.uleb128 0x47
 6387 1bb0 00000000 		.long	.LASF281
 6388 1bb4 20       		.byte	0x20
 6389 1bb5 3B       		.byte	0x3b
 6390 1bb6 3C270000 		.long	0x273c
 6391 1bba 47       		.uleb128 0x47
 6392 1bbb 00000000 		.long	.LASF282
 6393 1bbf 20       		.byte	0x20
 6394 1bc0 3F       		.byte	0x3f
 6395 1bc1 CE1C0000 		.long	0x1cce
 6396 1bc5 47       		.uleb128 0x47
 6397 1bc6 00000000 		.long	.LASF283
 6398 1bca 20       		.byte	0x20
 6399 1bcb 40       		.byte	0x40
 6400 1bcc B7020000 		.long	0x2b7
 6401 1bd0 35       		.uleb128 0x35
 6402 1bd1 00000000 		.long	.LASF284
 6403 1bd5 C71C0000 		.long	0x1cc7
 6404 1bd9 00       		.byte	0
 6405 1bda 48       		.uleb128 0x48
 6406 1bdb 00000000 		.long	.LASF552
 6407 1bdf 01       		.byte	0x1
 6408 1be0 20       		.byte	0x20
 6409 1be1 37       		.byte	0x37
 6410 1be2 47       		.uleb128 0x47
 6411 1be3 00000000 		.long	.LASF280
 6412 1be7 20       		.byte	0x20
 6413 1be8 3A       		.byte	0x3a
 6414 1be9 41270000 		.long	0x2741
 6415 1bed 47       		.uleb128 0x47
 6416 1bee 00000000 		.long	.LASF281
GAS LISTING /tmp/ccrWPnlb.s 			page 185


 6417 1bf2 20       		.byte	0x20
 6418 1bf3 3B       		.byte	0x3b
 6419 1bf4 41270000 		.long	0x2741
 6420 1bf8 47       		.uleb128 0x47
 6421 1bf9 00000000 		.long	.LASF282
 6422 1bfd 20       		.byte	0x20
 6423 1bfe 3F       		.byte	0x3f
 6424 1bff CE1C0000 		.long	0x1cce
 6425 1c03 47       		.uleb128 0x47
 6426 1c04 00000000 		.long	.LASF283
 6427 1c08 20       		.byte	0x20
 6428 1c09 40       		.byte	0x40
 6429 1c0a B7020000 		.long	0x2b7
 6430 1c0e 35       		.uleb128 0x35
 6431 1c0f 00000000 		.long	.LASF284
 6432 1c13 DE170000 		.long	0x17de
 6433 1c17 00       		.byte	0
 6434 1c18 00       		.byte	0
 6435 1c19 3D       		.uleb128 0x3d
 6436 1c1a 00000000 		.long	.LASF295
 6437 1c1e 0D       		.byte	0xd
 6438 1c1f C901     		.value	0x1c9
 6439 1c21 341C0000 		.long	0x1c34
 6440 1c25 341C0000 		.long	0x1c34
 6441 1c29 19       		.uleb128 0x19
 6442 1c2a DA120000 		.long	0x12da
 6443 1c2e 19       		.uleb128 0x19
 6444 1c2f 7D170000 		.long	0x177d
 6445 1c33 00       		.byte	0
 6446 1c34 02       		.uleb128 0x2
 6447 1c35 10       		.byte	0x10
 6448 1c36 04       		.byte	0x4
 6449 1c37 00000000 		.long	.LASF296
 6450 1c3b 3D       		.uleb128 0x3d
 6451 1c3c 00000000 		.long	.LASF297
 6452 1c40 0D       		.byte	0xd
 6453 1c41 E101     		.value	0x1e1
 6454 1c43 5B1C0000 		.long	0x1c5b
 6455 1c47 5B1C0000 		.long	0x1c5b
 6456 1c4b 19       		.uleb128 0x19
 6457 1c4c DA120000 		.long	0x12da
 6458 1c50 19       		.uleb128 0x19
 6459 1c51 7D170000 		.long	0x177d
 6460 1c55 19       		.uleb128 0x19
 6461 1c56 93020000 		.long	0x293
 6462 1c5a 00       		.byte	0
 6463 1c5b 02       		.uleb128 0x2
 6464 1c5c 08       		.byte	0x8
 6465 1c5d 05       		.byte	0x5
 6466 1c5e 00000000 		.long	.LASF298
 6467 1c62 3D       		.uleb128 0x3d
 6468 1c63 00000000 		.long	.LASF299
 6469 1c67 0D       		.byte	0xd
 6470 1c68 E801     		.value	0x1e8
 6471 1c6a 821C0000 		.long	0x1c82
 6472 1c6e 821C0000 		.long	0x1c82
 6473 1c72 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 186


 6474 1c73 DA120000 		.long	0x12da
 6475 1c77 19       		.uleb128 0x19
 6476 1c78 7D170000 		.long	0x177d
 6477 1c7c 19       		.uleb128 0x19
 6478 1c7d 93020000 		.long	0x293
 6479 1c81 00       		.byte	0
 6480 1c82 02       		.uleb128 0x2
 6481 1c83 08       		.byte	0x8
 6482 1c84 07       		.byte	0x7
 6483 1c85 00000000 		.long	.LASF300
 6484 1c89 11       		.uleb128 0x11
 6485 1c8a 08       		.byte	0x8
 6486 1c8b C3040000 		.long	0x4c3
 6487 1c8f 11       		.uleb128 0x11
 6488 1c90 08       		.byte	0x8
 6489 1c91 64060000 		.long	0x664
 6490 1c95 49       		.uleb128 0x49
 6491 1c96 08       		.byte	0x8
 6492 1c97 64060000 		.long	0x664
 6493 1c9b 4A       		.uleb128 0x4a
 6494 1c9c 00000000 		.long	.LASF553
 6495 1ca0 4B       		.uleb128 0x4b
 6496 1ca1 08       		.byte	0x8
 6497 1ca2 C3040000 		.long	0x4c3
 6498 1ca6 49       		.uleb128 0x49
 6499 1ca7 08       		.byte	0x8
 6500 1ca8 C3040000 		.long	0x4c3
 6501 1cac 02       		.uleb128 0x2
 6502 1cad 01       		.byte	0x1
 6503 1cae 02       		.byte	0x2
 6504 1caf 00000000 		.long	.LASF301
 6505 1cb3 11       		.uleb128 0x11
 6506 1cb4 08       		.byte	0x8
 6507 1cb5 81060000 		.long	0x681
 6508 1cb9 02       		.uleb128 0x2
 6509 1cba 01       		.byte	0x1
 6510 1cbb 08       		.byte	0x8
 6511 1cbc 00000000 		.long	.LASF302
 6512 1cc0 02       		.uleb128 0x2
 6513 1cc1 01       		.byte	0x1
 6514 1cc2 06       		.byte	0x6
 6515 1cc3 00000000 		.long	.LASF303
 6516 1cc7 02       		.uleb128 0x2
 6517 1cc8 02       		.byte	0x2
 6518 1cc9 05       		.byte	0x5
 6519 1cca 00000000 		.long	.LASF304
 6520 1cce 10       		.uleb128 0x10
 6521 1ccf AC1C0000 		.long	0x1cac
 6522 1cd3 10       		.uleb128 0x10
 6523 1cd4 25020000 		.long	0x225
 6524 1cd8 15       		.uleb128 0x15
 6525 1cd9 00000000 		.long	.LASF305
 6526 1cdd 1D       		.byte	0x1d
 6527 1cde 37       		.byte	0x37
 6528 1cdf EB1C0000 		.long	0x1ceb
 6529 1ce3 4C       		.uleb128 0x4c
 6530 1ce4 1D       		.byte	0x1d
GAS LISTING /tmp/ccrWPnlb.s 			page 187


 6531 1ce5 38       		.byte	0x38
 6532 1ce6 8E060000 		.long	0x68e
 6533 1cea 00       		.byte	0
 6534 1ceb 49       		.uleb128 0x49
 6535 1cec 08       		.byte	0x8
 6536 1ced A1060000 		.long	0x6a1
 6537 1cf1 49       		.uleb128 0x49
 6538 1cf2 08       		.byte	0x8
 6539 1cf3 D1060000 		.long	0x6d1
 6540 1cf7 11       		.uleb128 0x11
 6541 1cf8 08       		.byte	0x8
 6542 1cf9 D1060000 		.long	0x6d1
 6543 1cfd 11       		.uleb128 0x11
 6544 1cfe 08       		.byte	0x8
 6545 1cff A1060000 		.long	0x6a1
 6546 1d03 49       		.uleb128 0x49
 6547 1d04 08       		.byte	0x8
 6548 1d05 F8070000 		.long	0x7f8
 6549 1d09 03       		.uleb128 0x3
 6550 1d0a 00000000 		.long	.LASF306
 6551 1d0e 21       		.byte	0x21
 6552 1d0f 25       		.byte	0x25
 6553 1d10 C01C0000 		.long	0x1cc0
 6554 1d14 03       		.uleb128 0x3
 6555 1d15 00000000 		.long	.LASF307
 6556 1d19 21       		.byte	0x21
 6557 1d1a 26       		.byte	0x26
 6558 1d1b C71C0000 		.long	0x1cc7
 6559 1d1f 03       		.uleb128 0x3
 6560 1d20 00000000 		.long	.LASF308
 6561 1d24 21       		.byte	0x21
 6562 1d25 27       		.byte	0x27
 6563 1d26 93020000 		.long	0x293
 6564 1d2a 03       		.uleb128 0x3
 6565 1d2b 00000000 		.long	.LASF309
 6566 1d2f 21       		.byte	0x21
 6567 1d30 29       		.byte	0x29
 6568 1d31 DE170000 		.long	0x17de
 6569 1d35 03       		.uleb128 0x3
 6570 1d36 00000000 		.long	.LASF310
 6571 1d3a 21       		.byte	0x21
 6572 1d3b 31       		.byte	0x31
 6573 1d3c B91C0000 		.long	0x1cb9
 6574 1d40 03       		.uleb128 0x3
 6575 1d41 00000000 		.long	.LASF311
 6576 1d45 21       		.byte	0x21
 6577 1d46 32       		.byte	0x32
 6578 1d47 B0020000 		.long	0x2b0
 6579 1d4b 03       		.uleb128 0x3
 6580 1d4c 00000000 		.long	.LASF312
 6581 1d50 21       		.byte	0x21
 6582 1d51 34       		.byte	0x34
 6583 1d52 11020000 		.long	0x211
 6584 1d56 03       		.uleb128 0x3
 6585 1d57 00000000 		.long	.LASF313
 6586 1d5b 21       		.byte	0x21
 6587 1d5c 38       		.byte	0x38
GAS LISTING /tmp/ccrWPnlb.s 			page 188


 6588 1d5d 25020000 		.long	0x225
 6589 1d61 03       		.uleb128 0x3
 6590 1d62 00000000 		.long	.LASF314
 6591 1d66 21       		.byte	0x21
 6592 1d67 42       		.byte	0x42
 6593 1d68 C01C0000 		.long	0x1cc0
 6594 1d6c 03       		.uleb128 0x3
 6595 1d6d 00000000 		.long	.LASF315
 6596 1d71 21       		.byte	0x21
 6597 1d72 43       		.byte	0x43
 6598 1d73 C71C0000 		.long	0x1cc7
 6599 1d77 03       		.uleb128 0x3
 6600 1d78 00000000 		.long	.LASF316
 6601 1d7c 21       		.byte	0x21
 6602 1d7d 44       		.byte	0x44
 6603 1d7e 93020000 		.long	0x293
 6604 1d82 03       		.uleb128 0x3
 6605 1d83 00000000 		.long	.LASF317
 6606 1d87 21       		.byte	0x21
 6607 1d88 46       		.byte	0x46
 6608 1d89 DE170000 		.long	0x17de
 6609 1d8d 03       		.uleb128 0x3
 6610 1d8e 00000000 		.long	.LASF318
 6611 1d92 21       		.byte	0x21
 6612 1d93 4D       		.byte	0x4d
 6613 1d94 B91C0000 		.long	0x1cb9
 6614 1d98 03       		.uleb128 0x3
 6615 1d99 00000000 		.long	.LASF319
 6616 1d9d 21       		.byte	0x21
 6617 1d9e 4E       		.byte	0x4e
 6618 1d9f B0020000 		.long	0x2b0
 6619 1da3 03       		.uleb128 0x3
 6620 1da4 00000000 		.long	.LASF320
 6621 1da8 21       		.byte	0x21
 6622 1da9 4F       		.byte	0x4f
 6623 1daa 11020000 		.long	0x211
 6624 1dae 03       		.uleb128 0x3
 6625 1daf 00000000 		.long	.LASF321
 6626 1db3 21       		.byte	0x21
 6627 1db4 51       		.byte	0x51
 6628 1db5 25020000 		.long	0x225
 6629 1db9 03       		.uleb128 0x3
 6630 1dba 00000000 		.long	.LASF322
 6631 1dbe 21       		.byte	0x21
 6632 1dbf 5B       		.byte	0x5b
 6633 1dc0 C01C0000 		.long	0x1cc0
 6634 1dc4 03       		.uleb128 0x3
 6635 1dc5 00000000 		.long	.LASF323
 6636 1dc9 21       		.byte	0x21
 6637 1dca 5D       		.byte	0x5d
 6638 1dcb DE170000 		.long	0x17de
 6639 1dcf 03       		.uleb128 0x3
 6640 1dd0 00000000 		.long	.LASF324
 6641 1dd4 21       		.byte	0x21
 6642 1dd5 5E       		.byte	0x5e
 6643 1dd6 DE170000 		.long	0x17de
 6644 1dda 03       		.uleb128 0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 189


 6645 1ddb 00000000 		.long	.LASF325
 6646 1ddf 21       		.byte	0x21
 6647 1de0 5F       		.byte	0x5f
 6648 1de1 DE170000 		.long	0x17de
 6649 1de5 03       		.uleb128 0x3
 6650 1de6 00000000 		.long	.LASF326
 6651 1dea 21       		.byte	0x21
 6652 1deb 68       		.byte	0x68
 6653 1dec B91C0000 		.long	0x1cb9
 6654 1df0 03       		.uleb128 0x3
 6655 1df1 00000000 		.long	.LASF327
 6656 1df5 21       		.byte	0x21
 6657 1df6 6A       		.byte	0x6a
 6658 1df7 25020000 		.long	0x225
 6659 1dfb 03       		.uleb128 0x3
 6660 1dfc 00000000 		.long	.LASF328
 6661 1e00 21       		.byte	0x21
 6662 1e01 6B       		.byte	0x6b
 6663 1e02 25020000 		.long	0x225
 6664 1e06 03       		.uleb128 0x3
 6665 1e07 00000000 		.long	.LASF329
 6666 1e0b 21       		.byte	0x21
 6667 1e0c 6C       		.byte	0x6c
 6668 1e0d 25020000 		.long	0x225
 6669 1e11 03       		.uleb128 0x3
 6670 1e12 00000000 		.long	.LASF330
 6671 1e16 21       		.byte	0x21
 6672 1e17 78       		.byte	0x78
 6673 1e18 DE170000 		.long	0x17de
 6674 1e1c 03       		.uleb128 0x3
 6675 1e1d 00000000 		.long	.LASF331
 6676 1e21 21       		.byte	0x21
 6677 1e22 7B       		.byte	0x7b
 6678 1e23 25020000 		.long	0x225
 6679 1e27 03       		.uleb128 0x3
 6680 1e28 00000000 		.long	.LASF332
 6681 1e2c 21       		.byte	0x21
 6682 1e2d 87       		.byte	0x87
 6683 1e2e DE170000 		.long	0x17de
 6684 1e32 03       		.uleb128 0x3
 6685 1e33 00000000 		.long	.LASF333
 6686 1e37 21       		.byte	0x21
 6687 1e38 88       		.byte	0x88
 6688 1e39 25020000 		.long	0x225
 6689 1e3d 02       		.uleb128 0x2
 6690 1e3e 02       		.byte	0x2
 6691 1e3f 10       		.byte	0x10
 6692 1e40 00000000 		.long	.LASF334
 6693 1e44 02       		.uleb128 0x2
 6694 1e45 04       		.byte	0x4
 6695 1e46 10       		.byte	0x10
 6696 1e47 00000000 		.long	.LASF335
 6697 1e4b 06       		.uleb128 0x6
 6698 1e4c 00000000 		.long	.LASF336
 6699 1e50 60       		.byte	0x60
 6700 1e51 22       		.byte	0x22
 6701 1e52 36       		.byte	0x36
GAS LISTING /tmp/ccrWPnlb.s 			page 190


 6702 1e53 781F0000 		.long	0x1f78
 6703 1e57 07       		.uleb128 0x7
 6704 1e58 00000000 		.long	.LASF337
 6705 1e5c 22       		.byte	0x22
 6706 1e5d 3A       		.byte	0x3a
 6707 1e5e 5B150000 		.long	0x155b
 6708 1e62 00       		.byte	0
 6709 1e63 07       		.uleb128 0x7
 6710 1e64 00000000 		.long	.LASF338
 6711 1e68 22       		.byte	0x22
 6712 1e69 3B       		.byte	0x3b
 6713 1e6a 5B150000 		.long	0x155b
 6714 1e6e 08       		.byte	0x8
 6715 1e6f 07       		.uleb128 0x7
 6716 1e70 00000000 		.long	.LASF339
 6717 1e74 22       		.byte	0x22
 6718 1e75 41       		.byte	0x41
 6719 1e76 5B150000 		.long	0x155b
 6720 1e7a 10       		.byte	0x10
 6721 1e7b 07       		.uleb128 0x7
 6722 1e7c 00000000 		.long	.LASF340
 6723 1e80 22       		.byte	0x22
 6724 1e81 47       		.byte	0x47
 6725 1e82 5B150000 		.long	0x155b
 6726 1e86 18       		.byte	0x18
 6727 1e87 07       		.uleb128 0x7
 6728 1e88 00000000 		.long	.LASF341
 6729 1e8c 22       		.byte	0x22
 6730 1e8d 48       		.byte	0x48
 6731 1e8e 5B150000 		.long	0x155b
 6732 1e92 20       		.byte	0x20
 6733 1e93 07       		.uleb128 0x7
 6734 1e94 00000000 		.long	.LASF342
 6735 1e98 22       		.byte	0x22
 6736 1e99 49       		.byte	0x49
 6737 1e9a 5B150000 		.long	0x155b
 6738 1e9e 28       		.byte	0x28
 6739 1e9f 07       		.uleb128 0x7
 6740 1ea0 00000000 		.long	.LASF343
 6741 1ea4 22       		.byte	0x22
 6742 1ea5 4A       		.byte	0x4a
 6743 1ea6 5B150000 		.long	0x155b
 6744 1eaa 30       		.byte	0x30
 6745 1eab 07       		.uleb128 0x7
 6746 1eac 00000000 		.long	.LASF344
 6747 1eb0 22       		.byte	0x22
 6748 1eb1 4B       		.byte	0x4b
 6749 1eb2 5B150000 		.long	0x155b
 6750 1eb6 38       		.byte	0x38
 6751 1eb7 07       		.uleb128 0x7
 6752 1eb8 00000000 		.long	.LASF345
 6753 1ebc 22       		.byte	0x22
 6754 1ebd 4C       		.byte	0x4c
 6755 1ebe 5B150000 		.long	0x155b
 6756 1ec2 40       		.byte	0x40
 6757 1ec3 07       		.uleb128 0x7
 6758 1ec4 00000000 		.long	.LASF346
GAS LISTING /tmp/ccrWPnlb.s 			page 191


 6759 1ec8 22       		.byte	0x22
 6760 1ec9 4D       		.byte	0x4d
 6761 1eca 5B150000 		.long	0x155b
 6762 1ece 48       		.byte	0x48
 6763 1ecf 07       		.uleb128 0x7
 6764 1ed0 00000000 		.long	.LASF347
 6765 1ed4 22       		.byte	0x22
 6766 1ed5 4E       		.byte	0x4e
 6767 1ed6 8C020000 		.long	0x28c
 6768 1eda 50       		.byte	0x50
 6769 1edb 07       		.uleb128 0x7
 6770 1edc 00000000 		.long	.LASF348
 6771 1ee0 22       		.byte	0x22
 6772 1ee1 4F       		.byte	0x4f
 6773 1ee2 8C020000 		.long	0x28c
 6774 1ee6 51       		.byte	0x51
 6775 1ee7 07       		.uleb128 0x7
 6776 1ee8 00000000 		.long	.LASF349
 6777 1eec 22       		.byte	0x22
 6778 1eed 51       		.byte	0x51
 6779 1eee 8C020000 		.long	0x28c
 6780 1ef2 52       		.byte	0x52
 6781 1ef3 07       		.uleb128 0x7
 6782 1ef4 00000000 		.long	.LASF350
 6783 1ef8 22       		.byte	0x22
 6784 1ef9 53       		.byte	0x53
 6785 1efa 8C020000 		.long	0x28c
 6786 1efe 53       		.byte	0x53
 6787 1eff 07       		.uleb128 0x7
 6788 1f00 00000000 		.long	.LASF351
 6789 1f04 22       		.byte	0x22
 6790 1f05 55       		.byte	0x55
 6791 1f06 8C020000 		.long	0x28c
 6792 1f0a 54       		.byte	0x54
 6793 1f0b 07       		.uleb128 0x7
 6794 1f0c 00000000 		.long	.LASF352
 6795 1f10 22       		.byte	0x22
 6796 1f11 57       		.byte	0x57
 6797 1f12 8C020000 		.long	0x28c
 6798 1f16 55       		.byte	0x55
 6799 1f17 07       		.uleb128 0x7
 6800 1f18 00000000 		.long	.LASF353
 6801 1f1c 22       		.byte	0x22
 6802 1f1d 5E       		.byte	0x5e
 6803 1f1e 8C020000 		.long	0x28c
 6804 1f22 56       		.byte	0x56
 6805 1f23 07       		.uleb128 0x7
 6806 1f24 00000000 		.long	.LASF354
 6807 1f28 22       		.byte	0x22
 6808 1f29 5F       		.byte	0x5f
 6809 1f2a 8C020000 		.long	0x28c
 6810 1f2e 57       		.byte	0x57
 6811 1f2f 07       		.uleb128 0x7
 6812 1f30 00000000 		.long	.LASF355
 6813 1f34 22       		.byte	0x22
 6814 1f35 62       		.byte	0x62
 6815 1f36 8C020000 		.long	0x28c
GAS LISTING /tmp/ccrWPnlb.s 			page 192


 6816 1f3a 58       		.byte	0x58
 6817 1f3b 07       		.uleb128 0x7
 6818 1f3c 00000000 		.long	.LASF356
 6819 1f40 22       		.byte	0x22
 6820 1f41 64       		.byte	0x64
 6821 1f42 8C020000 		.long	0x28c
 6822 1f46 59       		.byte	0x59
 6823 1f47 07       		.uleb128 0x7
 6824 1f48 00000000 		.long	.LASF357
 6825 1f4c 22       		.byte	0x22
 6826 1f4d 66       		.byte	0x66
 6827 1f4e 8C020000 		.long	0x28c
 6828 1f52 5A       		.byte	0x5a
 6829 1f53 07       		.uleb128 0x7
 6830 1f54 00000000 		.long	.LASF358
 6831 1f58 22       		.byte	0x22
 6832 1f59 68       		.byte	0x68
 6833 1f5a 8C020000 		.long	0x28c
 6834 1f5e 5B       		.byte	0x5b
 6835 1f5f 07       		.uleb128 0x7
 6836 1f60 00000000 		.long	.LASF359
 6837 1f64 22       		.byte	0x22
 6838 1f65 6F       		.byte	0x6f
 6839 1f66 8C020000 		.long	0x28c
 6840 1f6a 5C       		.byte	0x5c
 6841 1f6b 07       		.uleb128 0x7
 6842 1f6c 00000000 		.long	.LASF360
 6843 1f70 22       		.byte	0x22
 6844 1f71 70       		.byte	0x70
 6845 1f72 8C020000 		.long	0x28c
 6846 1f76 5D       		.byte	0x5d
 6847 1f77 00       		.byte	0
 6848 1f78 3C       		.uleb128 0x3c
 6849 1f79 00000000 		.long	.LASF361
 6850 1f7d 22       		.byte	0x22
 6851 1f7e 7D       		.byte	0x7d
 6852 1f7f 5B150000 		.long	0x155b
 6853 1f83 921F0000 		.long	0x1f92
 6854 1f87 19       		.uleb128 0x19
 6855 1f88 93020000 		.long	0x293
 6856 1f8c 19       		.uleb128 0x19
 6857 1f8d BC020000 		.long	0x2bc
 6858 1f91 00       		.byte	0
 6859 1f92 4D       		.uleb128 0x4d
 6860 1f93 00000000 		.long	.LASF362
 6861 1f97 22       		.byte	0x22
 6862 1f98 80       		.byte	0x80
 6863 1f99 9D1F0000 		.long	0x1f9d
 6864 1f9d 11       		.uleb128 0x11
 6865 1f9e 08       		.byte	0x8
 6866 1f9f 4B1E0000 		.long	0x1e4b
 6867 1fa3 03       		.uleb128 0x3
 6868 1fa4 00000000 		.long	.LASF363
 6869 1fa8 23       		.byte	0x23
 6870 1fa9 29       		.byte	0x29
 6871 1faa 93020000 		.long	0x293
 6872 1fae 03       		.uleb128 0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 193


 6873 1faf 00000000 		.long	.LASF364
 6874 1fb3 23       		.byte	0x23
 6875 1fb4 8D       		.byte	0x8d
 6876 1fb5 DE170000 		.long	0x17de
 6877 1fb9 03       		.uleb128 0x3
 6878 1fba 00000000 		.long	.LASF365
 6879 1fbe 23       		.byte	0x23
 6880 1fbf 8E       		.byte	0x8e
 6881 1fc0 DE170000 		.long	0x17de
 6882 1fc4 4E       		.uleb128 0x4e
 6883 1fc5 CF1F0000 		.long	0x1fcf
 6884 1fc9 19       		.uleb128 0x19
 6885 1fca 18020000 		.long	0x218
 6886 1fce 00       		.byte	0
 6887 1fcf 11       		.uleb128 0x11
 6888 1fd0 08       		.byte	0x8
 6889 1fd1 C41F0000 		.long	0x1fc4
 6890 1fd5 03       		.uleb128 0x3
 6891 1fd6 00000000 		.long	.LASF366
 6892 1fda 24       		.byte	0x24
 6893 1fdb 20       		.byte	0x20
 6894 1fdc 93020000 		.long	0x293
 6895 1fe0 11       		.uleb128 0x11
 6896 1fe1 08       		.byte	0x8
 6897 1fe2 E61F0000 		.long	0x1fe6
 6898 1fe6 4F       		.uleb128 0x4f
 6899 1fe7 0A       		.uleb128 0xa
 6900 1fe8 08       		.byte	0x8
 6901 1fe9 25       		.byte	0x25
 6902 1fea 63       		.byte	0x63
 6903 1feb 00000000 		.long	.LASF368
 6904 1fef 0C200000 		.long	0x200c
 6905 1ff3 07       		.uleb128 0x7
 6906 1ff4 00000000 		.long	.LASF369
 6907 1ff8 25       		.byte	0x25
 6908 1ff9 64       		.byte	0x64
 6909 1ffa 93020000 		.long	0x293
 6910 1ffe 00       		.byte	0
 6911 1fff 50       		.uleb128 0x50
 6912 2000 72656D00 		.string	"rem"
 6913 2004 25       		.byte	0x25
 6914 2005 65       		.byte	0x65
 6915 2006 93020000 		.long	0x293
 6916 200a 04       		.byte	0x4
 6917 200b 00       		.byte	0
 6918 200c 03       		.uleb128 0x3
 6919 200d 00000000 		.long	.LASF370
 6920 2011 25       		.byte	0x25
 6921 2012 66       		.byte	0x66
 6922 2013 E71F0000 		.long	0x1fe7
 6923 2017 0A       		.uleb128 0xa
 6924 2018 10       		.byte	0x10
 6925 2019 25       		.byte	0x25
 6926 201a 6B       		.byte	0x6b
 6927 201b 00000000 		.long	.LASF371
 6928 201f 3C200000 		.long	0x203c
 6929 2023 07       		.uleb128 0x7
GAS LISTING /tmp/ccrWPnlb.s 			page 194


 6930 2024 00000000 		.long	.LASF369
 6931 2028 25       		.byte	0x25
 6932 2029 6C       		.byte	0x6c
 6933 202a DE170000 		.long	0x17de
 6934 202e 00       		.byte	0
 6935 202f 50       		.uleb128 0x50
 6936 2030 72656D00 		.string	"rem"
 6937 2034 25       		.byte	0x25
 6938 2035 6D       		.byte	0x6d
 6939 2036 DE170000 		.long	0x17de
 6940 203a 08       		.byte	0x8
 6941 203b 00       		.byte	0
 6942 203c 03       		.uleb128 0x3
 6943 203d 00000000 		.long	.LASF372
 6944 2041 25       		.byte	0x25
 6945 2042 6E       		.byte	0x6e
 6946 2043 17200000 		.long	0x2017
 6947 2047 0A       		.uleb128 0xa
 6948 2048 10       		.byte	0x10
 6949 2049 25       		.byte	0x25
 6950 204a 77       		.byte	0x77
 6951 204b 00000000 		.long	.LASF373
 6952 204f 6C200000 		.long	0x206c
 6953 2053 07       		.uleb128 0x7
 6954 2054 00000000 		.long	.LASF369
 6955 2058 25       		.byte	0x25
 6956 2059 78       		.byte	0x78
 6957 205a 5B1C0000 		.long	0x1c5b
 6958 205e 00       		.byte	0
 6959 205f 50       		.uleb128 0x50
 6960 2060 72656D00 		.string	"rem"
 6961 2064 25       		.byte	0x25
 6962 2065 79       		.byte	0x79
 6963 2066 5B1C0000 		.long	0x1c5b
 6964 206a 08       		.byte	0x8
 6965 206b 00       		.byte	0
 6966 206c 03       		.uleb128 0x3
 6967 206d 00000000 		.long	.LASF374
 6968 2071 25       		.byte	0x25
 6969 2072 7A       		.byte	0x7a
 6970 2073 47200000 		.long	0x2047
 6971 2077 09       		.uleb128 0x9
 6972 2078 00000000 		.long	.LASF375
 6973 207c 25       		.byte	0x25
 6974 207d E602     		.value	0x2e6
 6975 207f 83200000 		.long	0x2083
 6976 2083 11       		.uleb128 0x11
 6977 2084 08       		.byte	0x8
 6978 2085 89200000 		.long	0x2089
 6979 2089 51       		.uleb128 0x51
 6980 208a 93020000 		.long	0x293
 6981 208e 9D200000 		.long	0x209d
 6982 2092 19       		.uleb128 0x19
 6983 2093 E01F0000 		.long	0x1fe0
 6984 2097 19       		.uleb128 0x19
 6985 2098 E01F0000 		.long	0x1fe0
 6986 209c 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 195


 6987 209d 3D       		.uleb128 0x3d
 6988 209e 00000000 		.long	.LASF376
 6989 20a2 25       		.byte	0x25
 6990 20a3 0602     		.value	0x206
 6991 20a5 93020000 		.long	0x293
 6992 20a9 B3200000 		.long	0x20b3
 6993 20ad 19       		.uleb128 0x19
 6994 20ae B3200000 		.long	0x20b3
 6995 20b2 00       		.byte	0
 6996 20b3 11       		.uleb128 0x11
 6997 20b4 08       		.byte	0x8
 6998 20b5 B9200000 		.long	0x20b9
 6999 20b9 52       		.uleb128 0x52
 7000 20ba 26       		.uleb128 0x26
 7001 20bb 00000000 		.long	.LASF377
 7002 20bf 25       		.byte	0x25
 7003 20c0 0D02     		.value	0x20d
 7004 20c2 00000000 		.long	.LASF377
 7005 20c6 93020000 		.long	0x293
 7006 20ca D4200000 		.long	0x20d4
 7007 20ce 19       		.uleb128 0x19
 7008 20cf B3200000 		.long	0x20b3
 7009 20d3 00       		.byte	0
 7010 20d4 3D       		.uleb128 0x3d
 7011 20d5 00000000 		.long	.LASF378
 7012 20d9 25       		.byte	0x25
 7013 20da 1701     		.value	0x117
 7014 20dc 76170000 		.long	0x1776
 7015 20e0 EA200000 		.long	0x20ea
 7016 20e4 19       		.uleb128 0x19
 7017 20e5 BC020000 		.long	0x2bc
 7018 20e9 00       		.byte	0
 7019 20ea 3D       		.uleb128 0x3d
 7020 20eb 00000000 		.long	.LASF379
 7021 20ef 25       		.byte	0x25
 7022 20f0 1C01     		.value	0x11c
 7023 20f2 93020000 		.long	0x293
 7024 20f6 00210000 		.long	0x2100
 7025 20fa 19       		.uleb128 0x19
 7026 20fb BC020000 		.long	0x2bc
 7027 20ff 00       		.byte	0
 7028 2100 3D       		.uleb128 0x3d
 7029 2101 00000000 		.long	.LASF380
 7030 2105 25       		.byte	0x25
 7031 2106 2101     		.value	0x121
 7032 2108 DE170000 		.long	0x17de
 7033 210c 16210000 		.long	0x2116
 7034 2110 19       		.uleb128 0x19
 7035 2111 BC020000 		.long	0x2bc
 7036 2115 00       		.byte	0
 7037 2116 3D       		.uleb128 0x3d
 7038 2117 00000000 		.long	.LASF381
 7039 211b 25       		.byte	0x25
 7040 211c F302     		.value	0x2f3
 7041 211e 18020000 		.long	0x218
 7042 2122 40210000 		.long	0x2140
 7043 2126 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 196


 7044 2127 E01F0000 		.long	0x1fe0
 7045 212b 19       		.uleb128 0x19
 7046 212c E01F0000 		.long	0x1fe0
 7047 2130 19       		.uleb128 0x19
 7048 2131 1A020000 		.long	0x21a
 7049 2135 19       		.uleb128 0x19
 7050 2136 1A020000 		.long	0x21a
 7051 213a 19       		.uleb128 0x19
 7052 213b 77200000 		.long	0x2077
 7053 213f 00       		.byte	0
 7054 2140 53       		.uleb128 0x53
 7055 2141 64697600 		.string	"div"
 7056 2145 25       		.byte	0x25
 7057 2146 1103     		.value	0x311
 7058 2148 0C200000 		.long	0x200c
 7059 214c 5B210000 		.long	0x215b
 7060 2150 19       		.uleb128 0x19
 7061 2151 93020000 		.long	0x293
 7062 2155 19       		.uleb128 0x19
 7063 2156 93020000 		.long	0x293
 7064 215a 00       		.byte	0
 7065 215b 3D       		.uleb128 0x3d
 7066 215c 00000000 		.long	.LASF382
 7067 2160 25       		.byte	0x25
 7068 2161 3702     		.value	0x237
 7069 2163 5B150000 		.long	0x155b
 7070 2167 71210000 		.long	0x2171
 7071 216b 19       		.uleb128 0x19
 7072 216c BC020000 		.long	0x2bc
 7073 2170 00       		.byte	0
 7074 2171 3D       		.uleb128 0x3d
 7075 2172 00000000 		.long	.LASF383
 7076 2176 25       		.byte	0x25
 7077 2177 1303     		.value	0x313
 7078 2179 3C200000 		.long	0x203c
 7079 217d 8C210000 		.long	0x218c
 7080 2181 19       		.uleb128 0x19
 7081 2182 DE170000 		.long	0x17de
 7082 2186 19       		.uleb128 0x19
 7083 2187 DE170000 		.long	0x17de
 7084 218b 00       		.byte	0
 7085 218c 3D       		.uleb128 0x3d
 7086 218d 00000000 		.long	.LASF384
 7087 2191 25       		.byte	0x25
 7088 2192 5C03     		.value	0x35c
 7089 2194 93020000 		.long	0x293
 7090 2198 A7210000 		.long	0x21a7
 7091 219c 19       		.uleb128 0x19
 7092 219d BC020000 		.long	0x2bc
 7093 21a1 19       		.uleb128 0x19
 7094 21a2 1A020000 		.long	0x21a
 7095 21a6 00       		.byte	0
 7096 21a7 3D       		.uleb128 0x3d
 7097 21a8 00000000 		.long	.LASF385
 7098 21ac 25       		.byte	0x25
 7099 21ad 6703     		.value	0x367
 7100 21af 1A020000 		.long	0x21a
GAS LISTING /tmp/ccrWPnlb.s 			page 197


 7101 21b3 C7210000 		.long	0x21c7
 7102 21b7 19       		.uleb128 0x19
 7103 21b8 97120000 		.long	0x1297
 7104 21bc 19       		.uleb128 0x19
 7105 21bd BC020000 		.long	0x2bc
 7106 21c1 19       		.uleb128 0x19
 7107 21c2 1A020000 		.long	0x21a
 7108 21c6 00       		.byte	0
 7109 21c7 3D       		.uleb128 0x3d
 7110 21c8 00000000 		.long	.LASF386
 7111 21cc 25       		.byte	0x25
 7112 21cd 5F03     		.value	0x35f
 7113 21cf 93020000 		.long	0x293
 7114 21d3 E7210000 		.long	0x21e7
 7115 21d7 19       		.uleb128 0x19
 7116 21d8 97120000 		.long	0x1297
 7117 21dc 19       		.uleb128 0x19
 7118 21dd BC020000 		.long	0x2bc
 7119 21e1 19       		.uleb128 0x19
 7120 21e2 1A020000 		.long	0x21a
 7121 21e6 00       		.byte	0
 7122 21e7 54       		.uleb128 0x54
 7123 21e8 00000000 		.long	.LASF387
 7124 21ec 25       		.byte	0x25
 7125 21ed F902     		.value	0x2f9
 7126 21ef 08220000 		.long	0x2208
 7127 21f3 19       		.uleb128 0x19
 7128 21f4 18020000 		.long	0x218
 7129 21f8 19       		.uleb128 0x19
 7130 21f9 1A020000 		.long	0x21a
 7131 21fd 19       		.uleb128 0x19
 7132 21fe 1A020000 		.long	0x21a
 7133 2202 19       		.uleb128 0x19
 7134 2203 77200000 		.long	0x2077
 7135 2207 00       		.byte	0
 7136 2208 54       		.uleb128 0x54
 7137 2209 00000000 		.long	.LASF388
 7138 220d 25       		.byte	0x25
 7139 220e 2802     		.value	0x228
 7140 2210 1A220000 		.long	0x221a
 7141 2214 19       		.uleb128 0x19
 7142 2215 93020000 		.long	0x293
 7143 2219 00       		.byte	0
 7144 221a 45       		.uleb128 0x45
 7145 221b 00000000 		.long	.LASF389
 7146 221f 25       		.byte	0x25
 7147 2220 7C01     		.value	0x17c
 7148 2222 93020000 		.long	0x293
 7149 2226 54       		.uleb128 0x54
 7150 2227 00000000 		.long	.LASF390
 7151 222b 25       		.byte	0x25
 7152 222c 7E01     		.value	0x17e
 7153 222e 38220000 		.long	0x2238
 7154 2232 19       		.uleb128 0x19
 7155 2233 11020000 		.long	0x211
 7156 2237 00       		.byte	0
 7157 2238 3C       		.uleb128 0x3c
GAS LISTING /tmp/ccrWPnlb.s 			page 198


 7158 2239 00000000 		.long	.LASF391
 7159 223d 25       		.byte	0x25
 7160 223e A5       		.byte	0xa5
 7161 223f 76170000 		.long	0x1776
 7162 2243 52220000 		.long	0x2252
 7163 2247 19       		.uleb128 0x19
 7164 2248 BC020000 		.long	0x2bc
 7165 224c 19       		.uleb128 0x19
 7166 224d 52220000 		.long	0x2252
 7167 2251 00       		.byte	0
 7168 2252 11       		.uleb128 0x11
 7169 2253 08       		.byte	0x8
 7170 2254 5B150000 		.long	0x155b
 7171 2258 3C       		.uleb128 0x3c
 7172 2259 00000000 		.long	.LASF392
 7173 225d 25       		.byte	0x25
 7174 225e B8       		.byte	0xb8
 7175 225f DE170000 		.long	0x17de
 7176 2263 77220000 		.long	0x2277
 7177 2267 19       		.uleb128 0x19
 7178 2268 BC020000 		.long	0x2bc
 7179 226c 19       		.uleb128 0x19
 7180 226d 52220000 		.long	0x2252
 7181 2271 19       		.uleb128 0x19
 7182 2272 93020000 		.long	0x293
 7183 2276 00       		.byte	0
 7184 2277 3C       		.uleb128 0x3c
 7185 2278 00000000 		.long	.LASF393
 7186 227c 25       		.byte	0x25
 7187 227d BC       		.byte	0xbc
 7188 227e 25020000 		.long	0x225
 7189 2282 96220000 		.long	0x2296
 7190 2286 19       		.uleb128 0x19
 7191 2287 BC020000 		.long	0x2bc
 7192 228b 19       		.uleb128 0x19
 7193 228c 52220000 		.long	0x2252
 7194 2290 19       		.uleb128 0x19
 7195 2291 93020000 		.long	0x293
 7196 2295 00       		.byte	0
 7197 2296 3D       		.uleb128 0x3d
 7198 2297 00000000 		.long	.LASF394
 7199 229b 25       		.byte	0x25
 7200 229c CD02     		.value	0x2cd
 7201 229e 93020000 		.long	0x293
 7202 22a2 AC220000 		.long	0x22ac
 7203 22a6 19       		.uleb128 0x19
 7204 22a7 BC020000 		.long	0x2bc
 7205 22ab 00       		.byte	0
 7206 22ac 3D       		.uleb128 0x3d
 7207 22ad 00000000 		.long	.LASF395
 7208 22b1 25       		.byte	0x25
 7209 22b2 6A03     		.value	0x36a
 7210 22b4 1A020000 		.long	0x21a
 7211 22b8 CC220000 		.long	0x22cc
 7212 22bc 19       		.uleb128 0x19
 7213 22bd 5B150000 		.long	0x155b
 7214 22c1 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 199


 7215 22c2 DA120000 		.long	0x12da
 7216 22c6 19       		.uleb128 0x19
 7217 22c7 1A020000 		.long	0x21a
 7218 22cb 00       		.byte	0
 7219 22cc 3D       		.uleb128 0x3d
 7220 22cd 00000000 		.long	.LASF396
 7221 22d1 25       		.byte	0x25
 7222 22d2 6303     		.value	0x363
 7223 22d4 93020000 		.long	0x293
 7224 22d8 E7220000 		.long	0x22e7
 7225 22dc 19       		.uleb128 0x19
 7226 22dd 5B150000 		.long	0x155b
 7227 22e1 19       		.uleb128 0x19
 7228 22e2 9D120000 		.long	0x129d
 7229 22e6 00       		.byte	0
 7230 22e7 3D       		.uleb128 0x3d
 7231 22e8 00000000 		.long	.LASF397
 7232 22ec 25       		.byte	0x25
 7233 22ed 1903     		.value	0x319
 7234 22ef 6C200000 		.long	0x206c
 7235 22f3 02230000 		.long	0x2302
 7236 22f7 19       		.uleb128 0x19
 7237 22f8 5B1C0000 		.long	0x1c5b
 7238 22fc 19       		.uleb128 0x19
 7239 22fd 5B1C0000 		.long	0x1c5b
 7240 2301 00       		.byte	0
 7241 2302 3D       		.uleb128 0x3d
 7242 2303 00000000 		.long	.LASF398
 7243 2307 25       		.byte	0x25
 7244 2308 2A01     		.value	0x12a
 7245 230a 5B1C0000 		.long	0x1c5b
 7246 230e 18230000 		.long	0x2318
 7247 2312 19       		.uleb128 0x19
 7248 2313 BC020000 		.long	0x2bc
 7249 2317 00       		.byte	0
 7250 2318 3C       		.uleb128 0x3c
 7251 2319 00000000 		.long	.LASF399
 7252 231d 25       		.byte	0x25
 7253 231e D2       		.byte	0xd2
 7254 231f 5B1C0000 		.long	0x1c5b
 7255 2323 37230000 		.long	0x2337
 7256 2327 19       		.uleb128 0x19
 7257 2328 BC020000 		.long	0x2bc
 7258 232c 19       		.uleb128 0x19
 7259 232d 52220000 		.long	0x2252
 7260 2331 19       		.uleb128 0x19
 7261 2332 93020000 		.long	0x293
 7262 2336 00       		.byte	0
 7263 2337 3C       		.uleb128 0x3c
 7264 2338 00000000 		.long	.LASF400
 7265 233c 25       		.byte	0x25
 7266 233d D7       		.byte	0xd7
 7267 233e 821C0000 		.long	0x1c82
 7268 2342 56230000 		.long	0x2356
 7269 2346 19       		.uleb128 0x19
 7270 2347 BC020000 		.long	0x2bc
 7271 234b 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 200


 7272 234c 52220000 		.long	0x2252
 7273 2350 19       		.uleb128 0x19
 7274 2351 93020000 		.long	0x293
 7275 2355 00       		.byte	0
 7276 2356 3C       		.uleb128 0x3c
 7277 2357 00000000 		.long	.LASF401
 7278 235b 25       		.byte	0x25
 7279 235c AD       		.byte	0xad
 7280 235d 29000000 		.long	0x29
 7281 2361 70230000 		.long	0x2370
 7282 2365 19       		.uleb128 0x19
 7283 2366 BC020000 		.long	0x2bc
 7284 236a 19       		.uleb128 0x19
 7285 236b 52220000 		.long	0x2252
 7286 236f 00       		.byte	0
 7287 2370 3C       		.uleb128 0x3c
 7288 2371 00000000 		.long	.LASF402
 7289 2375 25       		.byte	0x25
 7290 2376 B0       		.byte	0xb0
 7291 2377 341C0000 		.long	0x1c34
 7292 237b 8A230000 		.long	0x238a
 7293 237f 19       		.uleb128 0x19
 7294 2380 BC020000 		.long	0x2bc
 7295 2384 19       		.uleb128 0x19
 7296 2385 52220000 		.long	0x2252
 7297 2389 00       		.byte	0
 7298 238a 0A       		.uleb128 0xa
 7299 238b 10       		.byte	0x10
 7300 238c 26       		.byte	0x26
 7301 238d 17       		.byte	0x17
 7302 238e 00000000 		.long	.LASF403
 7303 2392 AF230000 		.long	0x23af
 7304 2396 07       		.uleb128 0x7
 7305 2397 00000000 		.long	.LASF404
 7306 239b 26       		.byte	0x26
 7307 239c 18       		.byte	0x18
 7308 239d AE1F0000 		.long	0x1fae
 7309 23a1 00       		.byte	0
 7310 23a2 07       		.uleb128 0x7
 7311 23a3 00000000 		.long	.LASF405
 7312 23a7 26       		.byte	0x26
 7313 23a8 19       		.byte	0x19
 7314 23a9 9A020000 		.long	0x29a
 7315 23ad 08       		.byte	0x8
 7316 23ae 00       		.byte	0
 7317 23af 03       		.uleb128 0x3
 7318 23b0 00000000 		.long	.LASF406
 7319 23b4 26       		.byte	0x26
 7320 23b5 1A       		.byte	0x1a
 7321 23b6 8A230000 		.long	0x238a
 7322 23ba 55       		.uleb128 0x55
 7323 23bb 00000000 		.long	.LASF554
 7324 23bf 09       		.byte	0x9
 7325 23c0 B4       		.byte	0xb4
 7326 23c1 06       		.uleb128 0x6
 7327 23c2 00000000 		.long	.LASF407
 7328 23c6 18       		.byte	0x18
GAS LISTING /tmp/ccrWPnlb.s 			page 201


 7329 23c7 09       		.byte	0x9
 7330 23c8 BA       		.byte	0xba
 7331 23c9 F2230000 		.long	0x23f2
 7332 23cd 07       		.uleb128 0x7
 7333 23ce 00000000 		.long	.LASF408
 7334 23d2 09       		.byte	0x9
 7335 23d3 BB       		.byte	0xbb
 7336 23d4 F2230000 		.long	0x23f2
 7337 23d8 00       		.byte	0
 7338 23d9 07       		.uleb128 0x7
 7339 23da 00000000 		.long	.LASF409
 7340 23de 09       		.byte	0x9
 7341 23df BC       		.byte	0xbc
 7342 23e0 F8230000 		.long	0x23f8
 7343 23e4 08       		.byte	0x8
 7344 23e5 07       		.uleb128 0x7
 7345 23e6 00000000 		.long	.LASF410
 7346 23ea 09       		.byte	0x9
 7347 23eb C0       		.byte	0xc0
 7348 23ec 93020000 		.long	0x293
 7349 23f0 10       		.byte	0x10
 7350 23f1 00       		.byte	0
 7351 23f2 11       		.uleb128 0x11
 7352 23f3 08       		.byte	0x8
 7353 23f4 C1230000 		.long	0x23c1
 7354 23f8 11       		.uleb128 0x11
 7355 23f9 08       		.byte	0x8
 7356 23fa 3B000000 		.long	0x3b
 7357 23fe 0D       		.uleb128 0xd
 7358 23ff 8C020000 		.long	0x28c
 7359 2403 0E240000 		.long	0x240e
 7360 2407 0E       		.uleb128 0xe
 7361 2408 CD010000 		.long	0x1cd
 7362 240c 00       		.byte	0
 7363 240d 00       		.byte	0
 7364 240e 11       		.uleb128 0x11
 7365 240f 08       		.byte	0x8
 7366 2410 BA230000 		.long	0x23ba
 7367 2414 0D       		.uleb128 0xd
 7368 2415 8C020000 		.long	0x28c
 7369 2419 24240000 		.long	0x2424
 7370 241d 0E       		.uleb128 0xe
 7371 241e CD010000 		.long	0x1cd
 7372 2422 13       		.byte	0x13
 7373 2423 00       		.byte	0
 7374 2424 03       		.uleb128 0x3
 7375 2425 00000000 		.long	.LASF411
 7376 2429 0A       		.byte	0xa
 7377 242a 6F       		.byte	0x6f
 7378 242b AF230000 		.long	0x23af
 7379 242f 54       		.uleb128 0x54
 7380 2430 00000000 		.long	.LASF412
 7381 2434 0A       		.byte	0xa
 7382 2435 3503     		.value	0x335
 7383 2437 41240000 		.long	0x2441
 7384 243b 19       		.uleb128 0x19
 7385 243c 41240000 		.long	0x2441
GAS LISTING /tmp/ccrWPnlb.s 			page 202


 7386 2440 00       		.byte	0
 7387 2441 11       		.uleb128 0x11
 7388 2442 08       		.byte	0x8
 7389 2443 30000000 		.long	0x30
 7390 2447 3C       		.uleb128 0x3c
 7391 2448 00000000 		.long	.LASF413
 7392 244c 0A       		.byte	0xa
 7393 244d EC       		.byte	0xec
 7394 244e 93020000 		.long	0x293
 7395 2452 5C240000 		.long	0x245c
 7396 2456 19       		.uleb128 0x19
 7397 2457 41240000 		.long	0x2441
 7398 245b 00       		.byte	0
 7399 245c 3D       		.uleb128 0x3d
 7400 245d 00000000 		.long	.LASF414
 7401 2461 0A       		.byte	0xa
 7402 2462 3703     		.value	0x337
 7403 2464 93020000 		.long	0x293
 7404 2468 72240000 		.long	0x2472
 7405 246c 19       		.uleb128 0x19
 7406 246d 41240000 		.long	0x2441
 7407 2471 00       		.byte	0
 7408 2472 3D       		.uleb128 0x3d
 7409 2473 00000000 		.long	.LASF415
 7410 2477 0A       		.byte	0xa
 7411 2478 3903     		.value	0x339
 7412 247a 93020000 		.long	0x293
 7413 247e 88240000 		.long	0x2488
 7414 2482 19       		.uleb128 0x19
 7415 2483 41240000 		.long	0x2441
 7416 2487 00       		.byte	0
 7417 2488 3C       		.uleb128 0x3c
 7418 2489 00000000 		.long	.LASF416
 7419 248d 0A       		.byte	0xa
 7420 248e F1       		.byte	0xf1
 7421 248f 93020000 		.long	0x293
 7422 2493 9D240000 		.long	0x249d
 7423 2497 19       		.uleb128 0x19
 7424 2498 41240000 		.long	0x2441
 7425 249c 00       		.byte	0
 7426 249d 3D       		.uleb128 0x3d
 7427 249e 00000000 		.long	.LASF417
 7428 24a2 0A       		.byte	0xa
 7429 24a3 1702     		.value	0x217
 7430 24a5 93020000 		.long	0x293
 7431 24a9 B3240000 		.long	0x24b3
 7432 24ad 19       		.uleb128 0x19
 7433 24ae 41240000 		.long	0x2441
 7434 24b2 00       		.byte	0
 7435 24b3 3D       		.uleb128 0x3d
 7436 24b4 00000000 		.long	.LASF418
 7437 24b8 0A       		.byte	0xa
 7438 24b9 1903     		.value	0x319
 7439 24bb 93020000 		.long	0x293
 7440 24bf CE240000 		.long	0x24ce
 7441 24c3 19       		.uleb128 0x19
 7442 24c4 41240000 		.long	0x2441
GAS LISTING /tmp/ccrWPnlb.s 			page 203


 7443 24c8 19       		.uleb128 0x19
 7444 24c9 CE240000 		.long	0x24ce
 7445 24cd 00       		.byte	0
 7446 24ce 11       		.uleb128 0x11
 7447 24cf 08       		.byte	0x8
 7448 24d0 24240000 		.long	0x2424
 7449 24d4 3D       		.uleb128 0x3d
 7450 24d5 00000000 		.long	.LASF419
 7451 24d9 0A       		.byte	0xa
 7452 24da 7202     		.value	0x272
 7453 24dc 5B150000 		.long	0x155b
 7454 24e0 F4240000 		.long	0x24f4
 7455 24e4 19       		.uleb128 0x19
 7456 24e5 5B150000 		.long	0x155b
 7457 24e9 19       		.uleb128 0x19
 7458 24ea 93020000 		.long	0x293
 7459 24ee 19       		.uleb128 0x19
 7460 24ef 41240000 		.long	0x2441
 7461 24f3 00       		.byte	0
 7462 24f4 3D       		.uleb128 0x3d
 7463 24f5 00000000 		.long	.LASF420
 7464 24f9 0A       		.byte	0xa
 7465 24fa 0F01     		.value	0x10f
 7466 24fc 41240000 		.long	0x2441
 7467 2500 0F250000 		.long	0x250f
 7468 2504 19       		.uleb128 0x19
 7469 2505 BC020000 		.long	0x2bc
 7470 2509 19       		.uleb128 0x19
 7471 250a BC020000 		.long	0x2bc
 7472 250e 00       		.byte	0
 7473 250f 3D       		.uleb128 0x3d
 7474 2510 00000000 		.long	.LASF421
 7475 2514 0A       		.byte	0xa
 7476 2515 C002     		.value	0x2c0
 7477 2517 1A020000 		.long	0x21a
 7478 251b 34250000 		.long	0x2534
 7479 251f 19       		.uleb128 0x19
 7480 2520 18020000 		.long	0x218
 7481 2524 19       		.uleb128 0x19
 7482 2525 1A020000 		.long	0x21a
 7483 2529 19       		.uleb128 0x19
 7484 252a 1A020000 		.long	0x21a
 7485 252e 19       		.uleb128 0x19
 7486 252f 41240000 		.long	0x2441
 7487 2533 00       		.byte	0
 7488 2534 3D       		.uleb128 0x3d
 7489 2535 00000000 		.long	.LASF422
 7490 2539 0A       		.byte	0xa
 7491 253a 1501     		.value	0x115
 7492 253c 41240000 		.long	0x2441
 7493 2540 54250000 		.long	0x2554
 7494 2544 19       		.uleb128 0x19
 7495 2545 BC020000 		.long	0x2bc
 7496 2549 19       		.uleb128 0x19
 7497 254a BC020000 		.long	0x2bc
 7498 254e 19       		.uleb128 0x19
 7499 254f 41240000 		.long	0x2441
GAS LISTING /tmp/ccrWPnlb.s 			page 204


 7500 2553 00       		.byte	0
 7501 2554 3D       		.uleb128 0x3d
 7502 2555 00000000 		.long	.LASF423
 7503 2559 0A       		.byte	0xa
 7504 255a E802     		.value	0x2e8
 7505 255c 93020000 		.long	0x293
 7506 2560 74250000 		.long	0x2574
 7507 2564 19       		.uleb128 0x19
 7508 2565 41240000 		.long	0x2441
 7509 2569 19       		.uleb128 0x19
 7510 256a DE170000 		.long	0x17de
 7511 256e 19       		.uleb128 0x19
 7512 256f 93020000 		.long	0x293
 7513 2573 00       		.byte	0
 7514 2574 3D       		.uleb128 0x3d
 7515 2575 00000000 		.long	.LASF424
 7516 2579 0A       		.byte	0xa
 7517 257a 1E03     		.value	0x31e
 7518 257c 93020000 		.long	0x293
 7519 2580 8F250000 		.long	0x258f
 7520 2584 19       		.uleb128 0x19
 7521 2585 41240000 		.long	0x2441
 7522 2589 19       		.uleb128 0x19
 7523 258a 8F250000 		.long	0x258f
 7524 258e 00       		.byte	0
 7525 258f 11       		.uleb128 0x11
 7526 2590 08       		.byte	0x8
 7527 2591 95250000 		.long	0x2595
 7528 2595 10       		.uleb128 0x10
 7529 2596 24240000 		.long	0x2424
 7530 259a 3D       		.uleb128 0x3d
 7531 259b 00000000 		.long	.LASF425
 7532 259f 0A       		.byte	0xa
 7533 25a0 ED02     		.value	0x2ed
 7534 25a2 DE170000 		.long	0x17de
 7535 25a6 B0250000 		.long	0x25b0
 7536 25aa 19       		.uleb128 0x19
 7537 25ab 41240000 		.long	0x2441
 7538 25af 00       		.byte	0
 7539 25b0 3D       		.uleb128 0x3d
 7540 25b1 00000000 		.long	.LASF426
 7541 25b5 0A       		.byte	0xa
 7542 25b6 1802     		.value	0x218
 7543 25b8 93020000 		.long	0x293
 7544 25bc C6250000 		.long	0x25c6
 7545 25c0 19       		.uleb128 0x19
 7546 25c1 41240000 		.long	0x2441
 7547 25c5 00       		.byte	0
 7548 25c6 4D       		.uleb128 0x4d
 7549 25c7 00000000 		.long	.LASF427
 7550 25cb 27       		.byte	0x27
 7551 25cc 2D       		.byte	0x2d
 7552 25cd 93020000 		.long	0x293
 7553 25d1 3D       		.uleb128 0x3d
 7554 25d2 00000000 		.long	.LASF428
 7555 25d6 0A       		.byte	0xa
 7556 25d7 7A02     		.value	0x27a
GAS LISTING /tmp/ccrWPnlb.s 			page 205


 7557 25d9 5B150000 		.long	0x155b
 7558 25dd E7250000 		.long	0x25e7
 7559 25e1 19       		.uleb128 0x19
 7560 25e2 5B150000 		.long	0x155b
 7561 25e6 00       		.byte	0
 7562 25e7 54       		.uleb128 0x54
 7563 25e8 00000000 		.long	.LASF429
 7564 25ec 0A       		.byte	0xa
 7565 25ed 4903     		.value	0x349
 7566 25ef F9250000 		.long	0x25f9
 7567 25f3 19       		.uleb128 0x19
 7568 25f4 BC020000 		.long	0x2bc
 7569 25f8 00       		.byte	0
 7570 25f9 3C       		.uleb128 0x3c
 7571 25fa 00000000 		.long	.LASF430
 7572 25fe 0A       		.byte	0xa
 7573 25ff B1       		.byte	0xb1
 7574 2600 93020000 		.long	0x293
 7575 2604 0E260000 		.long	0x260e
 7576 2608 19       		.uleb128 0x19
 7577 2609 BC020000 		.long	0x2bc
 7578 260d 00       		.byte	0
 7579 260e 3C       		.uleb128 0x3c
 7580 260f 00000000 		.long	.LASF431
 7581 2613 0A       		.byte	0xa
 7582 2614 B3       		.byte	0xb3
 7583 2615 93020000 		.long	0x293
 7584 2619 28260000 		.long	0x2628
 7585 261d 19       		.uleb128 0x19
 7586 261e BC020000 		.long	0x2bc
 7587 2622 19       		.uleb128 0x19
 7588 2623 BC020000 		.long	0x2bc
 7589 2627 00       		.byte	0
 7590 2628 54       		.uleb128 0x54
 7591 2629 00000000 		.long	.LASF432
 7592 262d 0A       		.byte	0xa
 7593 262e F202     		.value	0x2f2
 7594 2630 3A260000 		.long	0x263a
 7595 2634 19       		.uleb128 0x19
 7596 2635 41240000 		.long	0x2441
 7597 2639 00       		.byte	0
 7598 263a 54       		.uleb128 0x54
 7599 263b 00000000 		.long	.LASF433
 7600 263f 0A       		.byte	0xa
 7601 2640 4B01     		.value	0x14b
 7602 2642 51260000 		.long	0x2651
 7603 2646 19       		.uleb128 0x19
 7604 2647 41240000 		.long	0x2441
 7605 264b 19       		.uleb128 0x19
 7606 264c 5B150000 		.long	0x155b
 7607 2650 00       		.byte	0
 7608 2651 3D       		.uleb128 0x3d
 7609 2652 00000000 		.long	.LASF434
 7610 2656 0A       		.byte	0xa
 7611 2657 4F01     		.value	0x14f
 7612 2659 93020000 		.long	0x293
 7613 265d 76260000 		.long	0x2676
GAS LISTING /tmp/ccrWPnlb.s 			page 206


 7614 2661 19       		.uleb128 0x19
 7615 2662 41240000 		.long	0x2441
 7616 2666 19       		.uleb128 0x19
 7617 2667 5B150000 		.long	0x155b
 7618 266b 19       		.uleb128 0x19
 7619 266c 93020000 		.long	0x293
 7620 2670 19       		.uleb128 0x19
 7621 2671 1A020000 		.long	0x21a
 7622 2675 00       		.byte	0
 7623 2676 4D       		.uleb128 0x4d
 7624 2677 00000000 		.long	.LASF435
 7625 267b 0A       		.byte	0xa
 7626 267c C2       		.byte	0xc2
 7627 267d 41240000 		.long	0x2441
 7628 2681 3C       		.uleb128 0x3c
 7629 2682 00000000 		.long	.LASF436
 7630 2686 0A       		.byte	0xa
 7631 2687 D0       		.byte	0xd0
 7632 2688 5B150000 		.long	0x155b
 7633 268c 96260000 		.long	0x2696
 7634 2690 19       		.uleb128 0x19
 7635 2691 5B150000 		.long	0x155b
 7636 2695 00       		.byte	0
 7637 2696 3D       		.uleb128 0x3d
 7638 2697 00000000 		.long	.LASF437
 7639 269b 0A       		.byte	0xa
 7640 269c B902     		.value	0x2b9
 7641 269e 93020000 		.long	0x293
 7642 26a2 B1260000 		.long	0x26b1
 7643 26a6 19       		.uleb128 0x19
 7644 26a7 93020000 		.long	0x293
 7645 26ab 19       		.uleb128 0x19
 7646 26ac 41240000 		.long	0x2441
 7647 26b0 00       		.byte	0
 7648 26b1 11       		.uleb128 0x11
 7649 26b2 08       		.byte	0x8
 7650 26b3 150C0000 		.long	0xc15
 7651 26b7 03       		.uleb128 0x3
 7652 26b8 00000000 		.long	.LASF438
 7653 26bc 28       		.byte	0x28
 7654 26bd 35       		.byte	0x35
 7655 26be 25020000 		.long	0x225
 7656 26c2 03       		.uleb128 0x3
 7657 26c3 00000000 		.long	.LASF439
 7658 26c7 28       		.byte	0x28
 7659 26c8 BB       		.byte	0xbb
 7660 26c9 CD260000 		.long	0x26cd
 7661 26cd 11       		.uleb128 0x11
 7662 26ce 08       		.byte	0x8
 7663 26cf D3260000 		.long	0x26d3
 7664 26d3 10       		.uleb128 0x10
 7665 26d4 A31F0000 		.long	0x1fa3
 7666 26d8 3C       		.uleb128 0x3c
 7667 26d9 00000000 		.long	.LASF440
 7668 26dd 28       		.byte	0x28
 7669 26de B0       		.byte	0xb0
 7670 26df 93020000 		.long	0x293
GAS LISTING /tmp/ccrWPnlb.s 			page 207


 7671 26e3 F2260000 		.long	0x26f2
 7672 26e7 19       		.uleb128 0x19
 7673 26e8 2C020000 		.long	0x22c
 7674 26ec 19       		.uleb128 0x19
 7675 26ed B7260000 		.long	0x26b7
 7676 26f1 00       		.byte	0
 7677 26f2 3C       		.uleb128 0x3c
 7678 26f3 00000000 		.long	.LASF441
 7679 26f7 28       		.byte	0x28
 7680 26f8 DE       		.byte	0xde
 7681 26f9 2C020000 		.long	0x22c
 7682 26fd 0C270000 		.long	0x270c
 7683 2701 19       		.uleb128 0x19
 7684 2702 2C020000 		.long	0x22c
 7685 2706 19       		.uleb128 0x19
 7686 2707 C2260000 		.long	0x26c2
 7687 270b 00       		.byte	0
 7688 270c 3C       		.uleb128 0x3c
 7689 270d 00000000 		.long	.LASF442
 7690 2711 28       		.byte	0x28
 7691 2712 DB       		.byte	0xdb
 7692 2713 C2260000 		.long	0x26c2
 7693 2717 21270000 		.long	0x2721
 7694 271b 19       		.uleb128 0x19
 7695 271c BC020000 		.long	0x2bc
 7696 2720 00       		.byte	0
 7697 2721 3C       		.uleb128 0x3c
 7698 2722 00000000 		.long	.LASF443
 7699 2726 28       		.byte	0x28
 7700 2727 AC       		.byte	0xac
 7701 2728 B7260000 		.long	0x26b7
 7702 272c 36270000 		.long	0x2736
 7703 2730 19       		.uleb128 0x19
 7704 2731 BC020000 		.long	0x2bc
 7705 2735 00       		.byte	0
 7706 2736 49       		.uleb128 0x49
 7707 2737 08       		.byte	0x8
 7708 2738 9D0E0000 		.long	0xe9d
 7709 273c 10       		.uleb128 0x10
 7710 273d C71C0000 		.long	0x1cc7
 7711 2741 10       		.uleb128 0x10
 7712 2742 DE170000 		.long	0x17de
 7713 2746 03       		.uleb128 0x3
 7714 2747 00000000 		.long	.LASF444
 7715 274b 29       		.byte	0x29
 7716 274c 1F       		.byte	0x1f
 7717 274d 29000000 		.long	0x29
 7718 2751 03       		.uleb128 0x3
 7719 2752 00000000 		.long	.LASF445
 7720 2756 29       		.byte	0x29
 7721 2757 20       		.byte	0x20
 7722 2758 76170000 		.long	0x1776
 7723 275c 0A       		.uleb128 0xa
 7724 275d 18       		.byte	0x18
 7725 275e 2A       		.byte	0x2a
 7726 275f 27       		.byte	0x27
 7727 2760 00000000 		.long	.LASF446
GAS LISTING /tmp/ccrWPnlb.s 			page 208


 7728 2764 95270000 		.long	0x2795
 7729 2768 50       		.uleb128 0x50
 7730 2769 62756600 		.string	"buf"
 7731 276d 2A       		.byte	0x2a
 7732 276e 28       		.byte	0x28
 7733 276f 95270000 		.long	0x2795
 7734 2773 00       		.byte	0
 7735 2774 50       		.uleb128 0x50
 7736 2775 6D617800 		.string	"max"
 7737 2779 2A       		.byte	0x2a
 7738 277a 29       		.byte	0x29
 7739 277b 29000000 		.long	0x29
 7740 277f 08       		.byte	0x8
 7741 2780 50       		.uleb128 0x50
 7742 2781 7700     		.string	"w"
 7743 2783 2A       		.byte	0x2a
 7744 2784 2A       		.byte	0x2a
 7745 2785 11020000 		.long	0x211
 7746 2789 0C       		.byte	0xc
 7747 278a 50       		.uleb128 0x50
 7748 278b 6800     		.string	"h"
 7749 278d 2A       		.byte	0x2a
 7750 278e 2A       		.byte	0x2a
 7751 278f 11020000 		.long	0x211
 7752 2793 10       		.byte	0x10
 7753 2794 00       		.byte	0
 7754 2795 11       		.uleb128 0x11
 7755 2796 08       		.byte	0x8
 7756 2797 29000000 		.long	0x29
 7757 279b 03       		.uleb128 0x3
 7758 279c 00000000 		.long	.LASF447
 7759 27a0 2A       		.byte	0x2a
 7760 27a1 2B       		.byte	0x2b
 7761 27a2 5C270000 		.long	0x275c
 7762 27a6 0A       		.uleb128 0xa
 7763 27a7 10       		.byte	0x10
 7764 27a8 2A       		.byte	0x2a
 7765 27a9 31       		.byte	0x31
 7766 27aa 00000000 		.long	.LASF448
 7767 27ae D3270000 		.long	0x27d3
 7768 27b2 50       		.uleb128 0x50
 7769 27b3 62756600 		.string	"buf"
 7770 27b7 2A       		.byte	0x2a
 7771 27b8 32       		.byte	0x32
 7772 27b9 95270000 		.long	0x2795
 7773 27bd 00       		.byte	0
 7774 27be 50       		.uleb128 0x50
 7775 27bf 7700     		.string	"w"
 7776 27c1 2A       		.byte	0x2a
 7777 27c2 33       		.byte	0x33
 7778 27c3 11020000 		.long	0x211
 7779 27c7 08       		.byte	0x8
 7780 27c8 50       		.uleb128 0x50
 7781 27c9 6800     		.string	"h"
 7782 27cb 2A       		.byte	0x2a
 7783 27cc 33       		.byte	0x33
 7784 27cd 11020000 		.long	0x211
GAS LISTING /tmp/ccrWPnlb.s 			page 209


 7785 27d1 0C       		.byte	0xc
 7786 27d2 00       		.byte	0
 7787 27d3 03       		.uleb128 0x3
 7788 27d4 00000000 		.long	.LASF449
 7789 27d8 2A       		.byte	0x2a
 7790 27d9 34       		.byte	0x34
 7791 27da A6270000 		.long	0x27a6
 7792 27de 0A       		.uleb128 0xa
 7793 27df 10       		.byte	0x10
 7794 27e0 2A       		.byte	0x2a
 7795 27e1 3F       		.byte	0x3f
 7796 27e2 00000000 		.long	.LASF450
 7797 27e6 03280000 		.long	0x2803
 7798 27ea 07       		.uleb128 0x7
 7799 27eb 00000000 		.long	.LASF451
 7800 27ef 2A       		.byte	0x2a
 7801 27f0 40       		.byte	0x40
 7802 27f1 03280000 		.long	0x2803
 7803 27f5 00       		.byte	0
 7804 27f6 07       		.uleb128 0x7
 7805 27f7 00000000 		.long	.LASF452
 7806 27fb 2A       		.byte	0x2a
 7807 27fc 41       		.byte	0x41
 7808 27fd 1A020000 		.long	0x21a
 7809 2801 08       		.byte	0x8
 7810 2802 00       		.byte	0
 7811 2803 11       		.uleb128 0x11
 7812 2804 08       		.byte	0x8
 7813 2805 09280000 		.long	0x2809
 7814 2809 10       		.uleb128 0x10
 7815 280a B91C0000 		.long	0x1cb9
 7816 280e 03       		.uleb128 0x3
 7817 280f 00000000 		.long	.LASF453
 7818 2813 2A       		.byte	0x2a
 7819 2814 42       		.byte	0x42
 7820 2815 DE270000 		.long	0x27de
 7821 2819 11       		.uleb128 0x11
 7822 281a 08       		.byte	0x8
 7823 281b 08420000 		.long	0x4208
 7824 281f 11       		.uleb128 0x11
 7825 2820 08       		.byte	0x8
 7826 2821 3E420000 		.long	0x423e
 7827 2825 51       		.uleb128 0x51
 7828 2826 29000000 		.long	0x29
 7829 282a 34280000 		.long	0x2834
 7830 282e 19       		.uleb128 0x19
 7831 282f 29000000 		.long	0x29
 7832 2833 00       		.byte	0
 7833 2834 11       		.uleb128 0x11
 7834 2835 08       		.byte	0x8
 7835 2836 25280000 		.long	0x2825
 7836 283a 11       		.uleb128 0x11
 7837 283b 08       		.byte	0x8
 7838 283c A6420000 		.long	0x42a6
 7839 2840 11       		.uleb128 0x11
 7840 2841 08       		.byte	0x8
 7841 2842 DC420000 		.long	0x42dc
GAS LISTING /tmp/ccrWPnlb.s 			page 210


 7842 2846 11       		.uleb128 0x11
 7843 2847 08       		.byte	0x8
 7844 2848 44430000 		.long	0x4344
 7845 284c 11       		.uleb128 0x11
 7846 284d 08       		.byte	0x8
 7847 284e 7A430000 		.long	0x437a
 7848 2852 11       		.uleb128 0x11
 7849 2853 08       		.byte	0x8
 7850 2854 E3100000 		.long	0x10e3
 7851 2858 56       		.uleb128 0x56
 7852 2859 48100000 		.long	0x1048
 7853 285d 03       		.byte	0x3
 7854 285e 66280000 		.long	0x2866
 7855 2862 70280000 		.long	0x2870
 7856 2866 57       		.uleb128 0x57
 7857 2867 00000000 		.long	.LASF455
 7858 286b 70280000 		.long	0x2870
 7859 286f 00       		.byte	0
 7860 2870 10       		.uleb128 0x10
 7861 2871 52280000 		.long	0x2852
 7862 2875 58       		.uleb128 0x58
 7863 2876 00000000 		.long	.LASF462
 7864 287a 02       		.byte	0x2
 7865 287b 45       		.byte	0x45
 7866 287c AC1C0000 		.long	0x1cac
 7867 2880 01       		.byte	0x1
 7868 2881 9B280000 		.long	0x289b
 7869 2885 59       		.uleb128 0x59
 7870 2886 686D00   		.string	"hm"
 7871 2889 02       		.byte	0x2
 7872 288a 45       		.byte	0x45
 7873 288b 9B280000 		.long	0x289b
 7874 288f 5A       		.uleb128 0x5a
 7875 2890 00000000 		.long	.LASF454
 7876 2894 02       		.byte	0x2
 7877 2895 45       		.byte	0x45
 7878 2896 95270000 		.long	0x2795
 7879 289a 00       		.byte	0
 7880 289b 11       		.uleb128 0x11
 7881 289c 08       		.byte	0x8
 7882 289d 9B270000 		.long	0x279b
 7883 28a1 5B       		.uleb128 0x5b
 7884 28a2 E8100000 		.long	0x10e8
 7885 28a6 03       		.byte	0x3
 7886 28a7 C2280000 		.long	0x28c2
 7887 28ab 59       		.uleb128 0x59
 7888 28ac 5F5F6100 		.string	"__a"
 7889 28b0 06       		.byte	0x6
 7890 28b1 9D       		.byte	0x9d
 7891 28b2 B80B0000 		.long	0xbb8
 7892 28b6 59       		.uleb128 0x59
 7893 28b7 5F5F6200 		.string	"__b"
 7894 28bb 06       		.byte	0x6
 7895 28bc 9D       		.byte	0x9d
 7896 28bd B80B0000 		.long	0xbb8
 7897 28c1 00       		.byte	0
 7898 28c2 11       		.uleb128 0x11
GAS LISTING /tmp/ccrWPnlb.s 			page 211


 7899 28c3 08       		.byte	0x8
 7900 28c4 3F100000 		.long	0x103f
 7901 28c8 56       		.uleb128 0x56
 7902 28c9 66100000 		.long	0x1066
 7903 28cd 03       		.byte	0x3
 7904 28ce D6280000 		.long	0x28d6
 7905 28d2 EB280000 		.long	0x28eb
 7906 28d6 57       		.uleb128 0x57
 7907 28d7 00000000 		.long	.LASF455
 7908 28db EB280000 		.long	0x28eb
 7909 28df 5A       		.uleb128 0x5a
 7910 28e0 00000000 		.long	.LASF405
 7911 28e4 05       		.byte	0x5
 7912 28e5 97       		.byte	0x97
 7913 28e6 6B0C0000 		.long	0xc6b
 7914 28ea 00       		.byte	0
 7915 28eb 10       		.uleb128 0x10
 7916 28ec C2280000 		.long	0x28c2
 7917 28f0 5B       		.uleb128 0x5b
 7918 28f1 34070000 		.long	0x734
 7919 28f5 03       		.byte	0x3
 7920 28f6 07290000 		.long	0x2907
 7921 28fa 5C       		.uleb128 0x5c
 7922 28fb 5F5F7300 		.string	"__s"
 7923 28ff 04       		.byte	0x4
 7924 2900 0601     		.value	0x106
 7925 2902 F71C0000 		.long	0x1cf7
 7926 2906 00       		.byte	0
 7927 2907 5B       		.uleb128 0x5b
 7928 2908 02110000 		.long	0x1102
 7929 290c 03       		.byte	0x3
 7930 290d 33290000 		.long	0x2933
 7931 2911 35       		.uleb128 0x35
 7932 2912 00000000 		.long	.LASF188
 7933 2916 95060000 		.long	0x695
 7934 291a 5D       		.uleb128 0x5d
 7935 291b 00000000 		.long	.LASF456
 7936 291f 03       		.byte	0x3
 7937 2920 1202     		.value	0x212
 7938 2922 33290000 		.long	0x2933
 7939 2926 5C       		.uleb128 0x5c
 7940 2927 5F5F7300 		.string	"__s"
 7941 292b 03       		.byte	0x3
 7942 292c 1202     		.value	0x212
 7943 292e BC020000 		.long	0x2bc
 7944 2932 00       		.byte	0
 7945 2933 10       		.uleb128 0x10
 7946 2934 36270000 		.long	0x2736
 7947 2938 49       		.uleb128 0x49
 7948 2939 08       		.byte	0x8
 7949 293a C90E0000 		.long	0xec9
 7950 293e 11       		.uleb128 0x11
 7951 293f 08       		.byte	0x8
 7952 2940 9D0E0000 		.long	0xe9d
 7953 2944 11       		.uleb128 0x11
 7954 2945 08       		.byte	0x8
 7955 2946 4A290000 		.long	0x294a
GAS LISTING /tmp/ccrWPnlb.s 			page 212


 7956 294a 51       		.uleb128 0x51
 7957 294b 38290000 		.long	0x2938
 7958 294f 59290000 		.long	0x2959
 7959 2953 19       		.uleb128 0x19
 7960 2954 38290000 		.long	0x2938
 7961 2958 00       		.byte	0
 7962 2959 56       		.uleb128 0x56
 7963 295a A60E0000 		.long	0xea6
 7964 295e 03       		.byte	0x3
 7965 295f 67290000 		.long	0x2967
 7966 2963 7C290000 		.long	0x297c
 7967 2967 57       		.uleb128 0x57
 7968 2968 00000000 		.long	.LASF455
 7969 296c 7C290000 		.long	0x297c
 7970 2970 5A       		.uleb128 0x5a
 7971 2971 00000000 		.long	.LASF457
 7972 2975 03       		.byte	0x3
 7973 2976 6C       		.byte	0x6c
 7974 2977 44290000 		.long	0x2944
 7975 297b 00       		.byte	0
 7976 297c 10       		.uleb128 0x10
 7977 297d 3E290000 		.long	0x293e
 7978 2981 5E       		.uleb128 0x5e
 7979 2982 00000000 		.long	.LASF489
 7980 2986 02       		.byte	0x2
 7981 2987 31       		.byte	0x31
 7982 2988 01       		.byte	0x1
 7983 2989 BA290000 		.long	0x29ba
 7984 298d 5A       		.uleb128 0x5a
 7985 298e 00000000 		.long	.LASF458
 7986 2992 02       		.byte	0x2
 7987 2993 31       		.byte	0x31
 7988 2994 BC020000 		.long	0x2bc
 7989 2998 5A       		.uleb128 0x5a
 7990 2999 00000000 		.long	.LASF459
 7991 299d 02       		.byte	0x2
 7992 299e 31       		.byte	0x31
 7993 299f AC1C0000 		.long	0x1cac
 7994 29a3 5A       		.uleb128 0x5a
 7995 29a4 00000000 		.long	.LASF460
 7996 29a8 02       		.byte	0x2
 7997 29a9 31       		.byte	0x31
 7998 29aa BC020000 		.long	0x2bc
 7999 29ae 5A       		.uleb128 0x5a
 8000 29af 00000000 		.long	.LASF461
 8001 29b3 02       		.byte	0x2
 8002 29b4 31       		.byte	0x31
 8003 29b5 93020000 		.long	0x293
 8004 29b9 00       		.byte	0
 8005 29ba 11       		.uleb128 0x11
 8006 29bb 08       		.byte	0x8
 8007 29bc 26110000 		.long	0x1126
 8008 29c0 56       		.uleb128 0x56
 8009 29c1 AC0F0000 		.long	0xfac
 8010 29c5 03       		.byte	0x3
 8011 29c6 CE290000 		.long	0x29ce
 8012 29ca E4290000 		.long	0x29e4
GAS LISTING /tmp/ccrWPnlb.s 			page 213


 8013 29ce 57       		.uleb128 0x57
 8014 29cf 00000000 		.long	.LASF455
 8015 29d3 E4290000 		.long	0x29e4
 8016 29d7 5C       		.uleb128 0x5c
 8017 29d8 5F5F6300 		.string	"__c"
 8018 29dc 01       		.byte	0x1
 8019 29dd 6103     		.value	0x361
 8020 29df 8C020000 		.long	0x28c
 8021 29e3 00       		.byte	0
 8022 29e4 10       		.uleb128 0x10
 8023 29e5 BA290000 		.long	0x29ba
 8024 29e9 5B       		.uleb128 0x5b
 8025 29ea 2B110000 		.long	0x112b
 8026 29ee 03       		.byte	0x3
 8027 29ef FF290000 		.long	0x29ff
 8028 29f3 59       		.uleb128 0x59
 8029 29f4 5F5F7800 		.string	"__x"
 8030 29f8 07       		.byte	0x7
 8031 29f9 57       		.byte	0x57
 8032 29fa 29000000 		.long	0x29
 8033 29fe 00       		.byte	0
 8034 29ff 58       		.uleb128 0x58
 8035 2a00 00000000 		.long	.LASF463
 8036 2a04 02       		.byte	0x2
 8037 2a05 3B       		.byte	0x3b
 8038 2a06 AC1C0000 		.long	0x1cac
 8039 2a0a 01       		.byte	0x1
 8040 2a0b 362A0000 		.long	0x2a36
 8041 2a0f 59       		.uleb128 0x59
 8042 2a10 6100     		.string	"a"
 8043 2a12 02       		.byte	0x2
 8044 2a13 3B       		.byte	0x3b
 8045 2a14 95270000 		.long	0x2795
 8046 2a18 59       		.uleb128 0x59
 8047 2a19 6200     		.string	"b"
 8048 2a1b 02       		.byte	0x2
 8049 2a1c 3B       		.byte	0x3b
 8050 2a1d 95270000 		.long	0x2795
 8051 2a21 59       		.uleb128 0x59
 8052 2a22 6E00     		.string	"n"
 8053 2a24 02       		.byte	0x2
 8054 2a25 3B       		.byte	0x3b
 8055 2a26 1A020000 		.long	0x21a
 8056 2a2a 5F       		.uleb128 0x5f
 8057 2a2b 60       		.uleb128 0x60
 8058 2a2c 6900     		.string	"i"
 8059 2a2e 02       		.byte	0x2
 8060 2a2f 3D       		.byte	0x3d
 8061 2a30 1A020000 		.long	0x21a
 8062 2a34 00       		.byte	0
 8063 2a35 00       		.byte	0
 8064 2a36 58       		.uleb128 0x58
 8065 2a37 00000000 		.long	.LASF464
 8066 2a3b 02       		.byte	0x2
 8067 2a3c 56       		.byte	0x56
 8068 2a3d AC1C0000 		.long	0x1cac
 8069 2a41 01       		.byte	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 214


 8070 2a42 5B2A0000 		.long	0x2a5b
 8071 2a46 59       		.uleb128 0x59
 8072 2a47 7300     		.string	"s"
 8073 2a49 02       		.byte	0x2
 8074 2a4a 56       		.byte	0x56
 8075 2a4b 5B2A0000 		.long	0x2a5b
 8076 2a4f 5A       		.uleb128 0x5a
 8077 2a50 00000000 		.long	.LASF454
 8078 2a54 02       		.byte	0x2
 8079 2a55 56       		.byte	0x56
 8080 2a56 95270000 		.long	0x2795
 8081 2a5a 00       		.byte	0
 8082 2a5b 11       		.uleb128 0x11
 8083 2a5c 08       		.byte	0x8
 8084 2a5d D3270000 		.long	0x27d3
 8085 2a61 56       		.uleb128 0x56
 8086 2a62 D50E0000 		.long	0xed5
 8087 2a66 03       		.byte	0x3
 8088 2a67 6F2A0000 		.long	0x2a6f
 8089 2a6b 842A0000 		.long	0x2a84
 8090 2a6f 57       		.uleb128 0x57
 8091 2a70 00000000 		.long	.LASF455
 8092 2a74 7C290000 		.long	0x297c
 8093 2a78 59       		.uleb128 0x59
 8094 2a79 5F5F6E00 		.string	"__n"
 8095 2a7d 03       		.byte	0x3
 8096 2a7e C0       		.byte	0xc0
 8097 2a7f 11020000 		.long	0x211
 8098 2a83 00       		.byte	0
 8099 2a84 49       		.uleb128 0x49
 8100 2a85 08       		.byte	0x8
 8101 2a86 26110000 		.long	0x1126
 8102 2a8a 5B       		.uleb128 0x5b
 8103 2a8b 40110000 		.long	0x1140
 8104 2a8f 03       		.byte	0x3
 8105 2a90 A92A0000 		.long	0x2aa9
 8106 2a94 35       		.uleb128 0x35
 8107 2a95 00000000 		.long	.LASF194
 8108 2a99 A30F0000 		.long	0xfa3
 8109 2a9d 59       		.uleb128 0x59
 8110 2a9e 5F5F6600 		.string	"__f"
 8111 2aa2 05       		.byte	0x5
 8112 2aa3 2E       		.byte	0x2e
 8113 2aa4 BA290000 		.long	0x29ba
 8114 2aa8 00       		.byte	0
 8115 2aa9 5B       		.uleb128 0x5b
 8116 2aaa 5E110000 		.long	0x115e
 8117 2aae 03       		.byte	0x3
 8118 2aaf D22A0000 		.long	0x2ad2
 8119 2ab3 35       		.uleb128 0x35
 8120 2ab4 00000000 		.long	.LASF173
 8121 2ab8 8C020000 		.long	0x28c
 8122 2abc 35       		.uleb128 0x35
 8123 2abd 00000000 		.long	.LASF188
 8124 2ac1 95060000 		.long	0x695
 8125 2ac5 5D       		.uleb128 0x5d
 8126 2ac6 00000000 		.long	.LASF465
GAS LISTING /tmp/ccrWPnlb.s 			page 215


 8127 2aca 03       		.byte	0x3
 8128 2acb 4A02     		.value	0x24a
 8129 2acd D22A0000 		.long	0x2ad2
 8130 2ad1 00       		.byte	0
 8131 2ad2 10       		.uleb128 0x10
 8132 2ad3 36270000 		.long	0x2736
 8133 2ad7 56       		.uleb128 0x56
 8134 2ad8 85100000 		.long	0x1085
 8135 2adc 03       		.byte	0x3
 8136 2add E52A0000 		.long	0x2ae5
 8137 2ae1 FB2A0000 		.long	0x2afb
 8138 2ae5 57       		.uleb128 0x57
 8139 2ae6 00000000 		.long	.LASF455
 8140 2aea 70280000 		.long	0x2870
 8141 2aee 5C       		.uleb128 0x5c
 8142 2aef 5F5F6300 		.string	"__c"
 8143 2af3 05       		.byte	0x5
 8144 2af4 BB01     		.value	0x1bb
 8145 2af6 8C020000 		.long	0x28c
 8146 2afa 00       		.byte	0
 8147 2afb 61       		.uleb128 0x61
 8148 2afc 00000000 		.long	.LASF555
 8149 2b00 01       		.byte	0x1
 8150 2b01 1E2B0000 		.long	0x2b1e
 8151 2b05 5D       		.uleb128 0x5d
 8152 2b06 00000000 		.long	.LASF466
 8153 2b0a 02       		.byte	0x2
 8154 2b0b 7801     		.value	0x178
 8155 2b0d 93020000 		.long	0x293
 8156 2b11 5D       		.uleb128 0x5d
 8157 2b12 00000000 		.long	.LASF467
 8158 2b16 02       		.byte	0x2
 8159 2b17 7801     		.value	0x178
 8160 2b19 93020000 		.long	0x293
 8161 2b1d 00       		.byte	0
 8162 2b1e 5B       		.uleb128 0x5b
 8163 2b1f 86110000 		.long	0x1186
 8164 2b23 03       		.byte	0x3
 8165 2b24 472B0000 		.long	0x2b47
 8166 2b28 35       		.uleb128 0x35
 8167 2b29 00000000 		.long	.LASF173
 8168 2b2d 8C020000 		.long	0x28c
 8169 2b31 35       		.uleb128 0x35
 8170 2b32 00000000 		.long	.LASF188
 8171 2b36 95060000 		.long	0x695
 8172 2b3a 5D       		.uleb128 0x5d
 8173 2b3b 00000000 		.long	.LASF465
 8174 2b3f 03       		.byte	0x3
 8175 2b40 3402     		.value	0x234
 8176 2b42 472B0000 		.long	0x2b47
 8177 2b46 00       		.byte	0
 8178 2b47 10       		.uleb128 0x10
 8179 2b48 36270000 		.long	0x2736
 8180 2b4c 56       		.uleb128 0x56
 8181 2b4d DD0F0000 		.long	0xfdd
 8182 2b51 03       		.byte	0x3
 8183 2b52 5A2B0000 		.long	0x2b5a
GAS LISTING /tmp/ccrWPnlb.s 			page 216


 8184 2b56 702B0000 		.long	0x2b70
 8185 2b5a 57       		.uleb128 0x57
 8186 2b5b 00000000 		.long	.LASF455
 8187 2b5f E4290000 		.long	0x29e4
 8188 2b63 5C       		.uleb128 0x5c
 8189 2b64 5F5F6300 		.string	"__c"
 8190 2b68 01       		.byte	0x1
 8191 2b69 3304     		.value	0x433
 8192 2b6b 8C020000 		.long	0x28c
 8193 2b6f 00       		.byte	0
 8194 2b70 58       		.uleb128 0x58
 8195 2b71 00000000 		.long	.LASF468
 8196 2b75 02       		.byte	0x2
 8197 2b76 51       		.byte	0x51
 8198 2b77 AC1C0000 		.long	0x1cac
 8199 2b7b 01       		.byte	0x1
 8200 2b7c 952B0000 		.long	0x2b95
 8201 2b80 59       		.uleb128 0x59
 8202 2b81 7300     		.string	"s"
 8203 2b83 02       		.byte	0x2
 8204 2b84 51       		.byte	0x51
 8205 2b85 5B2A0000 		.long	0x2a5b
 8206 2b89 5A       		.uleb128 0x5a
 8207 2b8a 00000000 		.long	.LASF454
 8208 2b8e 02       		.byte	0x2
 8209 2b8f 51       		.byte	0x51
 8210 2b90 95270000 		.long	0x2795
 8211 2b94 00       		.byte	0
 8212 2b95 58       		.uleb128 0x58
 8213 2b96 00000000 		.long	.LASF469
 8214 2b9a 02       		.byte	0x2
 8215 2b9b 4A       		.byte	0x4a
 8216 2b9c AC1C0000 		.long	0x1cac
 8217 2ba0 01       		.byte	0x1
 8218 2ba1 BB2B0000 		.long	0x2bbb
 8219 2ba5 59       		.uleb128 0x59
 8220 2ba6 686D00   		.string	"hm"
 8221 2ba9 02       		.byte	0x2
 8222 2baa 4A       		.byte	0x4a
 8223 2bab 9B280000 		.long	0x289b
 8224 2baf 5A       		.uleb128 0x5a
 8225 2bb0 00000000 		.long	.LASF454
 8226 2bb4 02       		.byte	0x2
 8227 2bb5 4A       		.byte	0x4a
 8228 2bb6 9B280000 		.long	0x289b
 8229 2bba 00       		.byte	0
 8230 2bbb 62       		.uleb128 0x62
 8231 2bbc 4C2B0000 		.long	0x2b4c
 8232 2bc0 00000000 		.long	.LASF550
 8233 2bc4 00000000 		.quad	.LFB1045
 8233      00000000 
 8234 2bcc 03000000 		.quad	.LFE1045-.LFB1045
 8234      00000000 
 8235 2bd4 01       		.uleb128 0x1
 8236 2bd5 9C       		.byte	0x9c
 8237 2bd6 DE2B0000 		.long	0x2bde
 8238 2bda ED2B0000 		.long	0x2bed
GAS LISTING /tmp/ccrWPnlb.s 			page 217


 8239 2bde 63       		.uleb128 0x63
 8240 2bdf 5A2B0000 		.long	0x2b5a
 8241 2be3 01       		.uleb128 0x1
 8242 2be4 55       		.byte	0x55
 8243 2be5 63       		.uleb128 0x63
 8244 2be6 632B0000 		.long	0x2b63
 8245 2bea 01       		.uleb128 0x1
 8246 2beb 54       		.byte	0x54
 8247 2bec 00       		.byte	0
 8248 2bed 64       		.uleb128 0x64
 8249 2bee 81290000 		.long	0x2981
 8250 2bf2 00000000 		.quad	.LFB1706
 8250      00000000 
 8251 2bfa FC000000 		.quad	.LFE1706-.LFB1706
 8251      00000000 
 8252 2c02 01       		.uleb128 0x1
 8253 2c03 9C       		.byte	0x9c
 8254 2c04 B72F0000 		.long	0x2fb7
 8255 2c08 65       		.uleb128 0x65
 8256 2c09 8D290000 		.long	0x298d
 8257 2c0d 00000000 		.long	.LLST0
 8258 2c11 65       		.uleb128 0x65
 8259 2c12 AE290000 		.long	0x29ae
 8260 2c16 00000000 		.long	.LLST1
 8261 2c1a 63       		.uleb128 0x63
 8262 2c1b 98290000 		.long	0x2998
 8263 2c1f 06       		.uleb128 0x6
 8264 2c20 FA       		.byte	0xfa
 8265 2c21 98290000 		.long	0x2998
 8266 2c25 9F       		.byte	0x9f
 8267 2c26 63       		.uleb128 0x63
 8268 2c27 A3290000 		.long	0x29a3
 8269 2c2b 0A       		.uleb128 0xa
 8270 2c2c 03       		.byte	0x3
 8271 2c2d 00000000 		.quad	.LC7
 8271      00000000 
 8272 2c35 9F       		.byte	0x9f
 8273 2c36 66       		.uleb128 0x66
 8274 2c37 07290000 		.long	0x2907
 8275 2c3b 00000000 		.quad	.LBB275
 8275      00000000 
 8276 2c43 00000000 		.long	.Ldebug_ranges0+0
 8277 2c47 02       		.byte	0x2
 8278 2c48 36       		.byte	0x36
 8279 2c49 892C0000 		.long	0x2c89
 8280 2c4d 67       		.uleb128 0x67
 8281 2c4e 1A290000 		.long	0x291a
 8282 2c52 63       		.uleb128 0x63
 8283 2c53 26290000 		.long	0x2926
 8284 2c57 0A       		.uleb128 0xa
 8285 2c58 03       		.byte	0x3
 8286 2c59 00000000 		.quad	.LC7
 8286      00000000 
 8287 2c61 9F       		.byte	0x9f
 8288 2c62 68       		.uleb128 0x68
 8289 2c63 00000000 		.quad	.LVL7
 8289      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 218


 8290 2c6b F9110000 		.long	0x11f9
 8291 2c6f 69       		.uleb128 0x69
 8292 2c70 01       		.uleb128 0x1
 8293 2c71 55       		.byte	0x55
 8294 2c72 02       		.uleb128 0x2
 8295 2c73 73       		.byte	0x73
 8296 2c74 00       		.sleb128 0
 8297 2c75 69       		.uleb128 0x69
 8298 2c76 01       		.uleb128 0x1
 8299 2c77 54       		.byte	0x54
 8300 2c78 09       		.uleb128 0x9
 8301 2c79 03       		.byte	0x3
 8302 2c7a 00000000 		.quad	.LC7
 8302      00000000 
 8303 2c82 69       		.uleb128 0x69
 8304 2c83 01       		.uleb128 0x1
 8305 2c84 51       		.byte	0x51
 8306 2c85 01       		.uleb128 0x1
 8307 2c86 3E       		.byte	0x3e
 8308 2c87 00       		.byte	0
 8309 2c88 00       		.byte	0
 8310 2c89 6A       		.uleb128 0x6a
 8311 2c8a 07290000 		.long	0x2907
 8312 2c8e 00000000 		.quad	.LBB279
 8312      00000000 
 8313 2c96 14000000 		.quad	.LBE279-.LBB279
 8313      00000000 
 8314 2c9e 02       		.byte	0x2
 8315 2c9f 36       		.byte	0x36
 8316 2ca0 E02C0000 		.long	0x2ce0
 8317 2ca4 63       		.uleb128 0x63
 8318 2ca5 26290000 		.long	0x2926
 8319 2ca9 0A       		.uleb128 0xa
 8320 2caa 03       		.byte	0x3
 8321 2cab 00000000 		.quad	.LC8
 8321      00000000 
 8322 2cb3 9F       		.byte	0x9f
 8323 2cb4 67       		.uleb128 0x67
 8324 2cb5 1A290000 		.long	0x291a
 8325 2cb9 68       		.uleb128 0x68
 8326 2cba 00000000 		.quad	.LVL8
 8326      00000000 
 8327 2cc2 F9110000 		.long	0x11f9
 8328 2cc6 69       		.uleb128 0x69
 8329 2cc7 01       		.uleb128 0x1
 8330 2cc8 55       		.byte	0x55
 8331 2cc9 02       		.uleb128 0x2
 8332 2cca 73       		.byte	0x73
 8333 2ccb 00       		.sleb128 0
 8334 2ccc 69       		.uleb128 0x69
 8335 2ccd 01       		.uleb128 0x1
 8336 2cce 54       		.byte	0x54
 8337 2ccf 09       		.uleb128 0x9
 8338 2cd0 03       		.byte	0x3
 8339 2cd1 00000000 		.quad	.LC8
 8339      00000000 
 8340 2cd9 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 219


 8341 2cda 01       		.uleb128 0x1
 8342 2cdb 51       		.byte	0x51
 8343 2cdc 01       		.uleb128 0x1
 8344 2cdd 31       		.byte	0x31
 8345 2cde 00       		.byte	0
 8346 2cdf 00       		.byte	0
 8347 2ce0 66       		.uleb128 0x66
 8348 2ce1 07290000 		.long	0x2907
 8349 2ce5 00000000 		.quad	.LBB281
 8349      00000000 
 8350 2ced 00000000 		.long	.Ldebug_ranges0+0x30
 8351 2cf1 02       		.byte	0x2
 8352 2cf2 36       		.byte	0x36
 8353 2cf3 382D0000 		.long	0x2d38
 8354 2cf7 63       		.uleb128 0x63
 8355 2cf8 26290000 		.long	0x2926
 8356 2cfc 0A       		.uleb128 0xa
 8357 2cfd 03       		.byte	0x3
 8358 2cfe 00000000 		.quad	.LC9
 8358      00000000 
 8359 2d06 9F       		.byte	0x9f
 8360 2d07 65       		.uleb128 0x65
 8361 2d08 1A290000 		.long	0x291a
 8362 2d0c 00000000 		.long	.LLST2
 8363 2d10 68       		.uleb128 0x68
 8364 2d11 00000000 		.quad	.LVL11
 8364      00000000 
 8365 2d19 F9110000 		.long	0x11f9
 8366 2d1d 69       		.uleb128 0x69
 8367 2d1e 01       		.uleb128 0x1
 8368 2d1f 55       		.byte	0x55
 8369 2d20 02       		.uleb128 0x2
 8370 2d21 73       		.byte	0x73
 8371 2d22 00       		.sleb128 0
 8372 2d23 69       		.uleb128 0x69
 8373 2d24 01       		.uleb128 0x1
 8374 2d25 54       		.byte	0x54
 8375 2d26 09       		.uleb128 0x9
 8376 2d27 03       		.byte	0x3
 8377 2d28 00000000 		.quad	.LC9
 8377      00000000 
 8378 2d30 69       		.uleb128 0x69
 8379 2d31 01       		.uleb128 0x1
 8380 2d32 51       		.byte	0x51
 8381 2d33 02       		.uleb128 0x2
 8382 2d34 08       		.byte	0x8
 8383 2d35 23       		.byte	0x23
 8384 2d36 00       		.byte	0
 8385 2d37 00       		.byte	0
 8386 2d38 66       		.uleb128 0x66
 8387 2d39 07290000 		.long	0x2907
 8388 2d3d 00000000 		.quad	.LBB285
 8388      00000000 
 8389 2d45 00000000 		.long	.Ldebug_ranges0+0x60
 8390 2d49 02       		.byte	0x2
 8391 2d4a 36       		.byte	0x36
 8392 2d4b 442E0000 		.long	0x2e44
GAS LISTING /tmp/ccrWPnlb.s 			page 220


 8393 2d4f 65       		.uleb128 0x65
 8394 2d50 26290000 		.long	0x2926
 8395 2d54 00000000 		.long	.LLST3
 8396 2d58 65       		.uleb128 0x65
 8397 2d59 1A290000 		.long	0x291a
 8398 2d5d 00000000 		.long	.LLST4
 8399 2d61 6B       		.uleb128 0x6b
 8400 2d62 F0280000 		.long	0x28f0
 8401 2d66 00000000 		.quad	.LBB287
 8401      00000000 
 8402 2d6e 08000000 		.quad	.LBE287-.LBB287
 8402      00000000 
 8403 2d76 03       		.byte	0x3
 8404 2d77 1802     		.value	0x218
 8405 2d79 9B2D0000 		.long	0x2d9b
 8406 2d7d 65       		.uleb128 0x65
 8407 2d7e FA280000 		.long	0x28fa
 8408 2d82 00000000 		.long	.LLST5
 8409 2d86 68       		.uleb128 0x68
 8410 2d87 00000000 		.quad	.LVL13
 8410      00000000 
 8411 2d8f B9530000 		.long	0x53b9
 8412 2d93 69       		.uleb128 0x69
 8413 2d94 01       		.uleb128 0x1
 8414 2d95 55       		.byte	0x55
 8415 2d96 02       		.uleb128 0x2
 8416 2d97 76       		.byte	0x76
 8417 2d98 00       		.sleb128 0
 8418 2d99 00       		.byte	0
 8419 2d9a 00       		.byte	0
 8420 2d9b 6C       		.uleb128 0x6c
 8421 2d9c 00000000 		.quad	.LBB289
 8421      00000000 
 8422 2da4 17000000 		.quad	.LBE289-.LBB289
 8422      00000000 
 8423 2dac 292E0000 		.long	0x2e29
 8424 2db0 65       		.uleb128 0x65
 8425 2db1 26290000 		.long	0x2926
 8426 2db5 00000000 		.long	.LLST6
 8427 2db9 65       		.uleb128 0x65
 8428 2dba 1A290000 		.long	0x291a
 8429 2dbe 00000000 		.long	.LLST7
 8430 2dc2 6D       		.uleb128 0x6d
 8431 2dc3 C8280000 		.long	0x28c8
 8432 2dc7 00000000 		.quad	.LBB291
 8432      00000000 
 8433 2dcf 0D000000 		.quad	.LBE291-.LBB291
 8433      00000000 
 8434 2dd7 03       		.byte	0x3
 8435 2dd8 1502     		.value	0x215
 8436 2dda 65       		.uleb128 0x65
 8437 2ddb DF280000 		.long	0x28df
 8438 2ddf 00000000 		.long	.LLST8
 8439 2de3 65       		.uleb128 0x65
 8440 2de4 D6280000 		.long	0x28d6
 8441 2de8 00000000 		.long	.LLST9
 8442 2dec 6A       		.uleb128 0x6a
GAS LISTING /tmp/ccrWPnlb.s 			page 221


 8443 2ded A1280000 		.long	0x28a1
 8444 2df1 00000000 		.quad	.LBB293
 8444      00000000 
 8445 2df9 06000000 		.quad	.LBE293-.LBB293
 8445      00000000 
 8446 2e01 05       		.byte	0x5
 8447 2e02 98       		.byte	0x98
 8448 2e03 1A2E0000 		.long	0x2e1a
 8449 2e07 65       		.uleb128 0x65
 8450 2e08 B6280000 		.long	0x28b6
 8451 2e0c 00000000 		.long	.LLST8
 8452 2e10 65       		.uleb128 0x65
 8453 2e11 AB280000 		.long	0x28ab
 8454 2e15 00000000 		.long	.LLST11
 8455 2e19 00       		.byte	0
 8456 2e1a 6E       		.uleb128 0x6e
 8457 2e1b 00000000 		.quad	.LVL28
 8457      00000000 
 8458 2e23 C7100000 		.long	0x10c7
 8459 2e27 00       		.byte	0
 8460 2e28 00       		.byte	0
 8461 2e29 68       		.uleb128 0x68
 8462 2e2a 00000000 		.quad	.LVL14
 8462      00000000 
 8463 2e32 F9110000 		.long	0x11f9
 8464 2e36 69       		.uleb128 0x69
 8465 2e37 01       		.uleb128 0x1
 8466 2e38 55       		.byte	0x55
 8467 2e39 02       		.uleb128 0x2
 8468 2e3a 73       		.byte	0x73
 8469 2e3b 00       		.sleb128 0
 8470 2e3c 69       		.uleb128 0x69
 8471 2e3d 01       		.uleb128 0x1
 8472 2e3e 54       		.byte	0x54
 8473 2e3f 02       		.uleb128 0x2
 8474 2e40 76       		.byte	0x76
 8475 2e41 00       		.sleb128 0
 8476 2e42 00       		.byte	0
 8477 2e43 00       		.byte	0
 8478 2e44 66       		.uleb128 0x66
 8479 2e45 59290000 		.long	0x2959
 8480 2e49 00000000 		.quad	.LBB296
 8480      00000000 
 8481 2e51 00000000 		.long	.Ldebug_ranges0+0x90
 8482 2e55 02       		.byte	0x2
 8483 2e56 36       		.byte	0x36
 8484 2e57 9C2F0000 		.long	0x2f9c
 8485 2e5b 67       		.uleb128 0x67
 8486 2e5c 70290000 		.long	0x2970
 8487 2e60 67       		.uleb128 0x67
 8488 2e61 67290000 		.long	0x2967
 8489 2e65 6F       		.uleb128 0x6f
 8490 2e66 1E2B0000 		.long	0x2b1e
 8491 2e6a 00000000 		.quad	.LBB297
 8491      00000000 
 8492 2e72 00000000 		.long	.Ldebug_ranges0+0x90
 8493 2e76 03       		.byte	0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 222


 8494 2e77 71       		.byte	0x71
 8495 2e78 65       		.uleb128 0x65
 8496 2e79 3A2B0000 		.long	0x2b3a
 8497 2e7d 00000000 		.long	.LLST12
 8498 2e81 70       		.uleb128 0x70
 8499 2e82 D72A0000 		.long	0x2ad7
 8500 2e86 00000000 		.quad	.LBB299
 8500      00000000 
 8501 2e8e 00000000 		.long	.Ldebug_ranges0+0xd0
 8502 2e92 03       		.byte	0x3
 8503 2e93 3502     		.value	0x235
 8504 2e95 532F0000 		.long	0x2f53
 8505 2e99 65       		.uleb128 0x65
 8506 2e9a EE2A0000 		.long	0x2aee
 8507 2e9e 00000000 		.long	.LLST13
 8508 2ea2 65       		.uleb128 0x65
 8509 2ea3 E52A0000 		.long	0x2ae5
 8510 2ea7 00000000 		.long	.LLST14
 8511 2eab 70       		.uleb128 0x70
 8512 2eac 8A2A0000 		.long	0x2a8a
 8513 2eb0 00000000 		.quad	.LBB301
 8513      00000000 
 8514 2eb8 00000000 		.long	.Ldebug_ranges0+0x110
 8515 2ebc 05       		.byte	0x5
 8516 2ebd BC01     		.value	0x1bc
 8517 2ebf DA2E0000 		.long	0x2eda
 8518 2ec3 65       		.uleb128 0x65
 8519 2ec4 9D2A0000 		.long	0x2a9d
 8520 2ec8 00000000 		.long	.LLST15
 8521 2ecc 6E       		.uleb128 0x6e
 8522 2ecd 00000000 		.quad	.LVL30
 8522      00000000 
 8523 2ed5 39120000 		.long	0x1239
 8524 2ed9 00       		.byte	0
 8525 2eda 71       		.uleb128 0x71
 8526 2edb C0290000 		.long	0x29c0
 8527 2edf 00000000 		.quad	.LBB304
 8527      00000000 
 8528 2ee7 00000000 		.long	.Ldebug_ranges0+0x140
 8529 2eeb 05       		.byte	0x5
 8530 2eec BC01     		.value	0x1bc
 8531 2eee 65       		.uleb128 0x65
 8532 2eef D7290000 		.long	0x29d7
 8533 2ef3 00000000 		.long	.LLST16
 8534 2ef7 65       		.uleb128 0x65
 8535 2ef8 CE290000 		.long	0x29ce
 8536 2efc 00000000 		.long	.LLST17
 8537 2f00 72       		.uleb128 0x72
 8538 2f01 00000000 		.quad	.LBB306
 8538      00000000 
 8539 2f09 28000000 		.quad	.LBE306-.LBB306
 8539      00000000 
 8540 2f11 65       		.uleb128 0x65
 8541 2f12 D7290000 		.long	0x29d7
 8542 2f16 00000000 		.long	.LLST18
 8543 2f1a 65       		.uleb128 0x65
 8544 2f1b CE290000 		.long	0x29ce
GAS LISTING /tmp/ccrWPnlb.s 			page 223


 8545 2f1f 00000000 		.long	.LLST19
 8546 2f23 73       		.uleb128 0x73
 8547 2f24 00000000 		.quad	.LVL24
 8547      00000000 
 8548 2f2c 18100000 		.long	0x1018
 8549 2f30 3B2F0000 		.long	0x2f3b
 8550 2f34 69       		.uleb128 0x69
 8551 2f35 01       		.uleb128 0x1
 8552 2f36 55       		.byte	0x55
 8553 2f37 02       		.uleb128 0x2
 8554 2f38 76       		.byte	0x76
 8555 2f39 00       		.sleb128 0
 8556 2f3a 00       		.byte	0
 8557 2f3b 74       		.uleb128 0x74
 8558 2f3c 00000000 		.quad	.LVL25
 8558      00000000 
 8559 2f44 69       		.uleb128 0x69
 8560 2f45 01       		.uleb128 0x1
 8561 2f46 55       		.byte	0x55
 8562 2f47 02       		.uleb128 0x2
 8563 2f48 76       		.byte	0x76
 8564 2f49 00       		.sleb128 0
 8565 2f4a 69       		.uleb128 0x69
 8566 2f4b 01       		.uleb128 0x1
 8567 2f4c 54       		.byte	0x54
 8568 2f4d 01       		.uleb128 0x1
 8569 2f4e 3A       		.byte	0x3a
 8570 2f4f 00       		.byte	0
 8571 2f50 00       		.byte	0
 8572 2f51 00       		.byte	0
 8573 2f52 00       		.byte	0
 8574 2f53 6B       		.uleb128 0x6b
 8575 2f54 A92A0000 		.long	0x2aa9
 8576 2f58 00000000 		.quad	.LBB313
 8576      00000000 
 8577 2f60 08000000 		.quad	.LBE313-.LBB313
 8577      00000000 
 8578 2f68 03       		.byte	0x3
 8579 2f69 3502     		.value	0x235
 8580 2f6b 862F0000 		.long	0x2f86
 8581 2f6f 65       		.uleb128 0x65
 8582 2f70 C52A0000 		.long	0x2ac5
 8583 2f74 00000000 		.long	.LLST20
 8584 2f78 6E       		.uleb128 0x6e
 8585 2f79 00000000 		.quad	.LVL19
 8585      00000000 
 8586 2f81 0A0F0000 		.long	0xf0a
 8587 2f85 00       		.byte	0
 8588 2f86 68       		.uleb128 0x68
 8589 2f87 00000000 		.quad	.LVL18
 8589      00000000 
 8590 2f8f 280F0000 		.long	0xf28
 8591 2f93 69       		.uleb128 0x69
 8592 2f94 01       		.uleb128 0x1
 8593 2f95 55       		.byte	0x55
 8594 2f96 02       		.uleb128 0x2
 8595 2f97 73       		.byte	0x73
GAS LISTING /tmp/ccrWPnlb.s 			page 224


 8596 2f98 00       		.sleb128 0
 8597 2f99 00       		.byte	0
 8598 2f9a 00       		.byte	0
 8599 2f9b 00       		.byte	0
 8600 2f9c 68       		.uleb128 0x68
 8601 2f9d 00000000 		.quad	.LVL9
 8601      00000000 
 8602 2fa5 570F0000 		.long	0xf57
 8603 2fa9 69       		.uleb128 0x69
 8604 2faa 01       		.uleb128 0x1
 8605 2fab 55       		.byte	0x55
 8606 2fac 02       		.uleb128 0x2
 8607 2fad 73       		.byte	0x73
 8608 2fae 00       		.sleb128 0
 8609 2faf 69       		.uleb128 0x69
 8610 2fb0 01       		.uleb128 0x1
 8611 2fb1 54       		.byte	0x54
 8612 2fb2 02       		.uleb128 0x2
 8613 2fb3 7C       		.byte	0x7c
 8614 2fb4 00       		.sleb128 0
 8615 2fb5 00       		.byte	0
 8616 2fb6 00       		.byte	0
 8617 2fb7 75       		.uleb128 0x75
 8618 2fb8 00000000 		.long	.LASF470
 8619 2fbc 02       		.byte	0x2
 8620 2fbd 5B       		.byte	0x5b
 8621 2fbe 00000000 		.long	.LASF471
 8622 2fc2 00000000 		.quad	.LFB1513
 8622      00000000 
 8623 2fca A1000000 		.quad	.LFE1513-.LFB1513
 8623      00000000 
 8624 2fd2 01       		.uleb128 0x1
 8625 2fd3 9C       		.byte	0x9c
 8626 2fd4 5F310000 		.long	0x315f
 8627 2fd8 76       		.uleb128 0x76
 8628 2fd9 00000000 		.long	.Ldebug_ranges0+0x170
 8629 2fdd 77       		.uleb128 0x77
 8630 2fde 686D00   		.string	"hm"
 8631 2fe1 02       		.byte	0x2
 8632 2fe2 5D       		.byte	0x5d
 8633 2fe3 9B280000 		.long	0x289b
 8634 2fe7 00000000 		.long	.LLST21
 8635 2feb 78       		.uleb128 0x78
 8636 2fec 00000000 		.long	.LASF454
 8637 2ff0 02       		.byte	0x2
 8638 2ff1 5F       		.byte	0x5f
 8639 2ff2 5F310000 		.long	0x315f
 8640 2ff6 09       		.uleb128 0x9
 8641 2ff7 03       		.byte	0x3
 8642 2ff8 00000000 		.quad	_ZZ16test_add_nothingvE8expected
 8642      00000000 
 8643 3000 6A       		.uleb128 0x6a
 8644 3001 75280000 		.long	0x2875
 8645 3005 00000000 		.quad	.LBB325
 8645      00000000 
 8646 300d 1D000000 		.quad	.LBE325-.LBB325
 8646      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 225


 8647 3015 02       		.byte	0x2
 8648 3016 66       		.byte	0x66
 8649 3017 62300000 		.long	0x3062
 8650 301b 65       		.uleb128 0x65
 8651 301c 85280000 		.long	0x2885
 8652 3020 00000000 		.long	.LLST21
 8653 3024 65       		.uleb128 0x65
 8654 3025 85280000 		.long	0x2885
 8655 3029 00000000 		.long	.LLST21
 8656 302d 65       		.uleb128 0x65
 8657 302e 85280000 		.long	0x2885
 8658 3032 00000000 		.long	.LLST21
 8659 3036 63       		.uleb128 0x63
 8660 3037 8F280000 		.long	0x288f
 8661 303b 0A       		.uleb128 0xa
 8662 303c 03       		.byte	0x3
 8663 303d 00000000 		.quad	_ZZ16test_add_nothingvE8expected
 8663      00000000 
 8664 3045 9F       		.byte	0x9f
 8665 3046 68       		.uleb128 0x68
 8666 3047 00000000 		.quad	.LVL34
 8666      00000000 
 8667 304f D1530000 		.long	0x53d1
 8668 3053 69       		.uleb128 0x69
 8669 3054 01       		.uleb128 0x1
 8670 3055 55       		.byte	0x55
 8671 3056 09       		.uleb128 0x9
 8672 3057 03       		.byte	0x3
 8673 3058 00000000 		.quad	_ZZ16test_add_nothingvE8expected
 8673      00000000 
 8674 3060 00       		.byte	0
 8675 3061 00       		.byte	0
 8676 3062 66       		.uleb128 0x66
 8677 3063 81290000 		.long	0x2981
 8678 3067 00000000 		.quad	.LBB327
 8678      00000000 
 8679 306f 00000000 		.long	.Ldebug_ranges0+0x1b0
 8680 3073 02       		.byte	0x2
 8681 3074 66       		.byte	0x66
 8682 3075 CA300000 		.long	0x30ca
 8683 3079 79       		.uleb128 0x79
 8684 307a AE290000 		.long	0x29ae
 8685 307e 66       		.byte	0x66
 8686 307f 63       		.uleb128 0x63
 8687 3080 A3290000 		.long	0x29a3
 8688 3084 0A       		.uleb128 0xa
 8689 3085 03       		.byte	0x3
 8690 3086 00000000 		.quad	.LC7
 8690      00000000 
 8691 308e 9F       		.byte	0x9f
 8692 308f 65       		.uleb128 0x65
 8693 3090 98290000 		.long	0x2998
 8694 3094 00000000 		.long	.LLST25
 8695 3098 63       		.uleb128 0x63
 8696 3099 8D290000 		.long	0x298d
 8697 309d 0A       		.uleb128 0xa
 8698 309e 03       		.byte	0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 226


 8699 309f 00000000 		.quad	.LC11
 8699      00000000 
 8700 30a7 9F       		.byte	0x9f
 8701 30a8 68       		.uleb128 0x68
 8702 30a9 00000000 		.quad	.LVL42
 8702      00000000 
 8703 30b1 ED2B0000 		.long	0x2bed
 8704 30b5 69       		.uleb128 0x69
 8705 30b6 01       		.uleb128 0x1
 8706 30b7 55       		.byte	0x55
 8707 30b8 09       		.uleb128 0x9
 8708 30b9 03       		.byte	0x3
 8709 30ba 00000000 		.quad	.LC11
 8709      00000000 
 8710 30c2 69       		.uleb128 0x69
 8711 30c3 01       		.uleb128 0x1
 8712 30c4 54       		.byte	0x54
 8713 30c5 02       		.uleb128 0x2
 8714 30c6 08       		.byte	0x8
 8715 30c7 66       		.byte	0x66
 8716 30c8 00       		.byte	0
 8717 30c9 00       		.byte	0
 8718 30ca 66       		.uleb128 0x66
 8719 30cb 81290000 		.long	0x2981
 8720 30cf 00000000 		.quad	.LBB330
 8720      00000000 
 8721 30d7 00000000 		.long	.Ldebug_ranges0+0x1e0
 8722 30db 02       		.byte	0x2
 8723 30dc 67       		.byte	0x67
 8724 30dd 27310000 		.long	0x3127
 8725 30e1 65       		.uleb128 0x65
 8726 30e2 AE290000 		.long	0x29ae
 8727 30e6 00000000 		.long	.LLST26
 8728 30ea 65       		.uleb128 0x65
 8729 30eb A3290000 		.long	0x29a3
 8730 30ef 00000000 		.long	.LLST27
 8731 30f3 65       		.uleb128 0x65
 8732 30f4 98290000 		.long	0x2998
 8733 30f8 00000000 		.long	.LLST28
 8734 30fc 65       		.uleb128 0x65
 8735 30fd 8D290000 		.long	0x298d
 8736 3101 00000000 		.long	.LLST29
 8737 3105 68       		.uleb128 0x68
 8738 3106 00000000 		.quad	.LVL39
 8738      00000000 
 8739 310e ED2B0000 		.long	0x2bed
 8740 3112 69       		.uleb128 0x69
 8741 3113 01       		.uleb128 0x1
 8742 3114 55       		.byte	0x55
 8743 3115 09       		.uleb128 0x9
 8744 3116 03       		.byte	0x3
 8745 3117 00000000 		.quad	.LC13
 8745      00000000 
 8746 311f 69       		.uleb128 0x69
 8747 3120 01       		.uleb128 0x1
 8748 3121 54       		.byte	0x54
 8749 3122 02       		.uleb128 0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 227


 8750 3123 08       		.byte	0x8
 8751 3124 67       		.byte	0x67
 8752 3125 00       		.byte	0
 8753 3126 00       		.byte	0
 8754 3127 73       		.uleb128 0x73
 8755 3128 00000000 		.quad	.LVL31
 8755      00000000 
 8756 3130 F0530000 		.long	0x53f0
 8757 3134 43310000 		.long	0x3143
 8758 3138 69       		.uleb128 0x69
 8759 3139 01       		.uleb128 0x1
 8760 313a 55       		.byte	0x55
 8761 313b 01       		.uleb128 0x1
 8762 313c 33       		.byte	0x33
 8763 313d 69       		.uleb128 0x69
 8764 313e 01       		.uleb128 0x1
 8765 313f 54       		.byte	0x54
 8766 3140 01       		.uleb128 0x1
 8767 3141 33       		.byte	0x33
 8768 3142 00       		.byte	0
 8769 3143 7A       		.uleb128 0x7a
 8770 3144 00000000 		.quad	.LVL38
 8770      00000000 
 8771 314c 0A540000 		.long	0x540a
 8772 3150 7A       		.uleb128 0x7a
 8773 3151 00000000 		.quad	.LVL41
 8773      00000000 
 8774 3159 0A540000 		.long	0x540a
 8775 315d 00       		.byte	0
 8776 315e 00       		.byte	0
 8777 315f 0D       		.uleb128 0xd
 8778 3160 29000000 		.long	0x29
 8779 3164 6F310000 		.long	0x316f
 8780 3168 0E       		.uleb128 0xe
 8781 3169 CD010000 		.long	0x1cd
 8782 316d 08       		.byte	0x8
 8783 316e 00       		.byte	0
 8784 316f 75       		.uleb128 0x75
 8785 3170 00000000 		.long	.LASF473
 8786 3174 02       		.byte	0x2
 8787 3175 6C       		.byte	0x6c
 8788 3176 00000000 		.long	.LASF474
 8789 317a 00000000 		.quad	.LFB1514
 8789      00000000 
 8790 3182 18020000 		.quad	.LFE1514-.LFB1514
 8790      00000000 
 8791 318a 01       		.uleb128 0x1
 8792 318b 9C       		.byte	0x9c
 8793 318c 75350000 		.long	0x3575
 8794 3190 76       		.uleb128 0x76
 8795 3191 00000000 		.long	.Ldebug_ranges0+0x210
 8796 3195 77       		.uleb128 0x77
 8797 3196 686D00   		.string	"hm"
 8798 3199 02       		.byte	0x2
 8799 319a 6E       		.byte	0x6e
 8800 319b 9B280000 		.long	0x289b
 8801 319f 00000000 		.long	.LLST30
GAS LISTING /tmp/ccrWPnlb.s 			page 228


 8802 31a3 78       		.uleb128 0x78
 8803 31a4 00000000 		.long	.LASF454
 8804 31a8 02       		.byte	0x2
 8805 31a9 76       		.byte	0x76
 8806 31aa 5F310000 		.long	0x315f
 8807 31ae 09       		.uleb128 0x9
 8808 31af 03       		.byte	0x3
 8809 31b0 00000000 		.quad	_ZZ32test_add_point_with_stamp_centervE8expected
 8809      00000000 
 8810 31b8 77       		.uleb128 0x77
 8811 31b9 686D3200 		.string	"hm2"
 8812 31bd 02       		.byte	0x2
 8813 31be 7F       		.byte	0x7f
 8814 31bf 9B280000 		.long	0x289b
 8815 31c3 00000000 		.long	.LLST31
 8816 31c7 6A       		.uleb128 0x6a
 8817 31c8 75280000 		.long	0x2875
 8818 31cc 00000000 		.quad	.LBB338
 8818      00000000 
 8819 31d4 1D000000 		.quad	.LBE338-.LBB338
 8819      00000000 
 8820 31dc 02       		.byte	0x2
 8821 31dd 71       		.byte	0x71
 8822 31de 14320000 		.long	0x3214
 8823 31e2 65       		.uleb128 0x65
 8824 31e3 85280000 		.long	0x2885
 8825 31e7 00000000 		.long	.LLST32
 8826 31eb 65       		.uleb128 0x65
 8827 31ec 85280000 		.long	0x2885
 8828 31f0 00000000 		.long	.LLST32
 8829 31f4 65       		.uleb128 0x65
 8830 31f5 85280000 		.long	0x2885
 8831 31f9 00000000 		.long	.LLST32
 8832 31fd 65       		.uleb128 0x65
 8833 31fe 8F280000 		.long	0x288f
 8834 3202 00000000 		.long	.LLST35
 8835 3206 6E       		.uleb128 0x6e
 8836 3207 00000000 		.quad	.LVL46
 8836      00000000 
 8837 320f D1530000 		.long	0x53d1
 8838 3213 00       		.byte	0
 8839 3214 66       		.uleb128 0x66
 8840 3215 81290000 		.long	0x2981
 8841 3219 00000000 		.quad	.LBB340
 8841      00000000 
 8842 3221 00000000 		.long	.Ldebug_ranges0+0x260
 8843 3225 02       		.byte	0x2
 8844 3226 71       		.byte	0x71
 8845 3227 7C320000 		.long	0x327c
 8846 322b 79       		.uleb128 0x79
 8847 322c AE290000 		.long	0x29ae
 8848 3230 71       		.byte	0x71
 8849 3231 63       		.uleb128 0x63
 8850 3232 A3290000 		.long	0x29a3
 8851 3236 0A       		.uleb128 0xa
 8852 3237 03       		.byte	0x3
 8853 3238 00000000 		.quad	.LC7
GAS LISTING /tmp/ccrWPnlb.s 			page 229


 8853      00000000 
 8854 3240 9F       		.byte	0x9f
 8855 3241 65       		.uleb128 0x65
 8856 3242 98290000 		.long	0x2998
 8857 3246 00000000 		.long	.LLST36
 8858 324a 63       		.uleb128 0x63
 8859 324b 8D290000 		.long	0x298d
 8860 324f 0A       		.uleb128 0xa
 8861 3250 03       		.byte	0x3
 8862 3251 00000000 		.quad	.LC15
 8862      00000000 
 8863 3259 9F       		.byte	0x9f
 8864 325a 68       		.uleb128 0x68
 8865 325b 00000000 		.quad	.LVL64
 8865      00000000 
 8866 3263 ED2B0000 		.long	0x2bed
 8867 3267 69       		.uleb128 0x69
 8868 3268 01       		.uleb128 0x1
 8869 3269 55       		.byte	0x55
 8870 326a 09       		.uleb128 0x9
 8871 326b 03       		.byte	0x3
 8872 326c 00000000 		.quad	.LC15
 8872      00000000 
 8873 3274 69       		.uleb128 0x69
 8874 3275 01       		.uleb128 0x1
 8875 3276 54       		.byte	0x54
 8876 3277 02       		.uleb128 0x2
 8877 3278 08       		.byte	0x8
 8878 3279 71       		.byte	0x71
 8879 327a 00       		.byte	0
 8880 327b 00       		.byte	0
 8881 327c 66       		.uleb128 0x66
 8882 327d 81290000 		.long	0x2981
 8883 3281 00000000 		.quad	.LBB343
 8883      00000000 
 8884 3289 00000000 		.long	.Ldebug_ranges0+0x290
 8885 328d 02       		.byte	0x2
 8886 328e 72       		.byte	0x72
 8887 328f D9320000 		.long	0x32d9
 8888 3293 65       		.uleb128 0x65
 8889 3294 AE290000 		.long	0x29ae
 8890 3298 00000000 		.long	.LLST37
 8891 329c 65       		.uleb128 0x65
 8892 329d A3290000 		.long	0x29a3
 8893 32a1 00000000 		.long	.LLST38
 8894 32a5 65       		.uleb128 0x65
 8895 32a6 98290000 		.long	0x2998
 8896 32aa 00000000 		.long	.LLST39
 8897 32ae 65       		.uleb128 0x65
 8898 32af 8D290000 		.long	0x298d
 8899 32b3 00000000 		.long	.LLST40
 8900 32b7 68       		.uleb128 0x68
 8901 32b8 00000000 		.quad	.LVL70
 8901      00000000 
 8902 32c0 ED2B0000 		.long	0x2bed
 8903 32c4 69       		.uleb128 0x69
 8904 32c5 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 230


 8905 32c6 55       		.byte	0x55
 8906 32c7 09       		.uleb128 0x9
 8907 32c8 03       		.byte	0x3
 8908 32c9 00000000 		.quad	.LC17
 8908      00000000 
 8909 32d1 69       		.uleb128 0x69
 8910 32d2 01       		.uleb128 0x1
 8911 32d3 54       		.byte	0x54
 8912 32d4 02       		.uleb128 0x2
 8913 32d5 08       		.byte	0x8
 8914 32d6 72       		.byte	0x72
 8915 32d7 00       		.byte	0
 8916 32d8 00       		.byte	0
 8917 32d9 6A       		.uleb128 0x6a
 8918 32da 75280000 		.long	0x2875
 8919 32de 00000000 		.quad	.LBB346
 8919      00000000 
 8920 32e6 1D000000 		.quad	.LBE346-.LBB346
 8920      00000000 
 8921 32ee 02       		.byte	0x2
 8922 32ef 7C       		.byte	0x7c
 8923 32f0 34330000 		.long	0x3334
 8924 32f4 65       		.uleb128 0x65
 8925 32f5 85280000 		.long	0x2885
 8926 32f9 00000000 		.long	.LLST41
 8927 32fd 65       		.uleb128 0x65
 8928 32fe 85280000 		.long	0x2885
 8929 3302 00000000 		.long	.LLST41
 8930 3306 65       		.uleb128 0x65
 8931 3307 85280000 		.long	0x2885
 8932 330b 00000000 		.long	.LLST41
 8933 330f 65       		.uleb128 0x65
 8934 3310 8F280000 		.long	0x288f
 8935 3314 00000000 		.long	.LLST44
 8936 3318 68       		.uleb128 0x68
 8937 3319 00000000 		.quad	.LVL51
 8937      00000000 
 8938 3321 D1530000 		.long	0x53d1
 8939 3325 69       		.uleb128 0x69
 8940 3326 01       		.uleb128 0x1
 8941 3327 55       		.byte	0x55
 8942 3328 09       		.uleb128 0x9
 8943 3329 03       		.byte	0x3
 8944 332a 00000000 		.quad	_ZZ32test_add_point_with_stamp_centervE8expected
 8944      00000000 
 8945 3332 00       		.byte	0
 8946 3333 00       		.byte	0
 8947 3334 66       		.uleb128 0x66
 8948 3335 81290000 		.long	0x2981
 8949 3339 00000000 		.quad	.LBB348
 8949      00000000 
 8950 3341 00000000 		.long	.Ldebug_ranges0+0x2c0
 8951 3345 02       		.byte	0x2
 8952 3346 7C       		.byte	0x7c
 8953 3347 91330000 		.long	0x3391
 8954 334b 65       		.uleb128 0x65
 8955 334c AE290000 		.long	0x29ae
GAS LISTING /tmp/ccrWPnlb.s 			page 231


 8956 3350 00000000 		.long	.LLST45
 8957 3354 65       		.uleb128 0x65
 8958 3355 A3290000 		.long	0x29a3
 8959 3359 00000000 		.long	.LLST46
 8960 335d 65       		.uleb128 0x65
 8961 335e 98290000 		.long	0x2998
 8962 3362 00000000 		.long	.LLST47
 8963 3366 65       		.uleb128 0x65
 8964 3367 8D290000 		.long	0x298d
 8965 336b 00000000 		.long	.LLST48
 8966 336f 68       		.uleb128 0x68
 8967 3370 00000000 		.quad	.LVL68
 8967      00000000 
 8968 3378 ED2B0000 		.long	0x2bed
 8969 337c 69       		.uleb128 0x69
 8970 337d 01       		.uleb128 0x1
 8971 337e 55       		.byte	0x55
 8972 337f 09       		.uleb128 0x9
 8973 3380 03       		.byte	0x3
 8974 3381 00000000 		.quad	.LC18
 8974      00000000 
 8975 3389 69       		.uleb128 0x69
 8976 338a 01       		.uleb128 0x1
 8977 338b 54       		.byte	0x54
 8978 338c 02       		.uleb128 0x2
 8979 338d 08       		.byte	0x8
 8980 338e 7C       		.byte	0x7c
 8981 338f 00       		.byte	0
 8982 3390 00       		.byte	0
 8983 3391 66       		.uleb128 0x66
 8984 3392 81290000 		.long	0x2981
 8985 3396 00000000 		.quad	.LBB351
 8985      00000000 
 8986 339e 00000000 		.long	.Ldebug_ranges0+0x2f0
 8987 33a2 02       		.byte	0x2
 8988 33a3 7D       		.byte	0x7d
 8989 33a4 EE330000 		.long	0x33ee
 8990 33a8 65       		.uleb128 0x65
 8991 33a9 AE290000 		.long	0x29ae
 8992 33ad 00000000 		.long	.LLST49
 8993 33b1 65       		.uleb128 0x65
 8994 33b2 A3290000 		.long	0x29a3
 8995 33b6 00000000 		.long	.LLST50
 8996 33ba 65       		.uleb128 0x65
 8997 33bb 98290000 		.long	0x2998
 8998 33bf 00000000 		.long	.LLST51
 8999 33c3 65       		.uleb128 0x65
 9000 33c4 8D290000 		.long	0x298d
 9001 33c8 00000000 		.long	.LLST52
 9002 33cc 68       		.uleb128 0x68
 9003 33cd 00000000 		.quad	.LVL66
 9003      00000000 
 9004 33d5 ED2B0000 		.long	0x2bed
 9005 33d9 69       		.uleb128 0x69
 9006 33da 01       		.uleb128 0x1
 9007 33db 55       		.byte	0x55
 9008 33dc 09       		.uleb128 0x9
GAS LISTING /tmp/ccrWPnlb.s 			page 232


 9009 33dd 03       		.byte	0x3
 9010 33de 00000000 		.quad	.LC20
 9010      00000000 
 9011 33e6 69       		.uleb128 0x69
 9012 33e7 01       		.uleb128 0x1
 9013 33e8 54       		.byte	0x54
 9014 33e9 02       		.uleb128 0x2
 9015 33ea 08       		.byte	0x8
 9016 33eb 7D       		.byte	0x7d
 9017 33ec 00       		.byte	0
 9018 33ed 00       		.byte	0
 9019 33ee 66       		.uleb128 0x66
 9020 33ef 952B0000 		.long	0x2b95
 9021 33f3 00000000 		.quad	.LBB354
 9021      00000000 
 9022 33fb 00000000 		.long	.Ldebug_ranges0+0x320
 9023 33ff 02       		.byte	0x2
 9024 3400 82       		.byte	0x82
 9025 3401 25340000 		.long	0x3425
 9026 3405 65       		.uleb128 0x65
 9027 3406 AF2B0000 		.long	0x2baf
 9028 340a 00000000 		.long	.LLST53
 9029 340e 65       		.uleb128 0x65
 9030 340f A52B0000 		.long	0x2ba5
 9031 3413 00000000 		.long	.LLST54
 9032 3417 6E       		.uleb128 0x6e
 9033 3418 00000000 		.quad	.LVL72
 9033      00000000 
 9034 3420 D1530000 		.long	0x53d1
 9035 3424 00       		.byte	0
 9036 3425 66       		.uleb128 0x66
 9037 3426 81290000 		.long	0x2981
 9038 342a 00000000 		.quad	.LBB357
 9038      00000000 
 9039 3432 00000000 		.long	.Ldebug_ranges0+0x350
 9040 3436 02       		.byte	0x2
 9041 3437 82       		.byte	0x82
 9042 3438 7E340000 		.long	0x347e
 9043 343c 65       		.uleb128 0x65
 9044 343d AE290000 		.long	0x29ae
 9045 3441 00000000 		.long	.LLST55
 9046 3445 65       		.uleb128 0x65
 9047 3446 A3290000 		.long	0x29a3
 9048 344a 00000000 		.long	.LLST56
 9049 344e 67       		.uleb128 0x67
 9050 344f 98290000 		.long	0x2998
 9051 3453 65       		.uleb128 0x65
 9052 3454 8D290000 		.long	0x298d
 9053 3458 00000000 		.long	.LLST57
 9054 345c 68       		.uleb128 0x68
 9055 345d 00000000 		.quad	.LVL59
 9055      00000000 
 9056 3465 ED2B0000 		.long	0x2bed
 9057 3469 69       		.uleb128 0x69
 9058 346a 01       		.uleb128 0x1
 9059 346b 55       		.byte	0x55
 9060 346c 09       		.uleb128 0x9
GAS LISTING /tmp/ccrWPnlb.s 			page 233


 9061 346d 03       		.byte	0x3
 9062 346e 00000000 		.quad	.LC21
 9062      00000000 
 9063 3476 69       		.uleb128 0x69
 9064 3477 01       		.uleb128 0x1
 9065 3478 54       		.byte	0x54
 9066 3479 02       		.uleb128 0x2
 9067 347a 08       		.byte	0x8
 9068 347b 82       		.byte	0x82
 9069 347c 00       		.byte	0
 9070 347d 00       		.byte	0
 9071 347e 73       		.uleb128 0x73
 9072 347f 00000000 		.quad	.LVL43
 9072      00000000 
 9073 3487 F0530000 		.long	0x53f0
 9074 348b 9A340000 		.long	0x349a
 9075 348f 69       		.uleb128 0x69
 9076 3490 01       		.uleb128 0x1
 9077 3491 55       		.byte	0x55
 9078 3492 01       		.uleb128 0x1
 9079 3493 33       		.byte	0x33
 9080 3494 69       		.uleb128 0x69
 9081 3495 01       		.uleb128 0x1
 9082 3496 54       		.byte	0x54
 9083 3497 01       		.uleb128 0x1
 9084 3498 33       		.byte	0x33
 9085 3499 00       		.byte	0
 9086 349a 73       		.uleb128 0x73
 9087 349b 00000000 		.quad	.LVL45
 9087      00000000 
 9088 34a3 1C540000 		.long	0x541c
 9089 34a7 C9340000 		.long	0x34c9
 9090 34ab 69       		.uleb128 0x69
 9091 34ac 01       		.uleb128 0x1
 9092 34ad 55       		.byte	0x55
 9093 34ae 02       		.uleb128 0x2
 9094 34af 73       		.byte	0x73
 9095 34b0 00       		.sleb128 0
 9096 34b1 69       		.uleb128 0x69
 9097 34b2 01       		.uleb128 0x1
 9098 34b3 54       		.byte	0x54
 9099 34b4 01       		.uleb128 0x1
 9100 34b5 31       		.byte	0x31
 9101 34b6 69       		.uleb128 0x69
 9102 34b7 01       		.uleb128 0x1
 9103 34b8 51       		.byte	0x51
 9104 34b9 01       		.uleb128 0x1
 9105 34ba 31       		.byte	0x31
 9106 34bb 69       		.uleb128 0x69
 9107 34bc 01       		.uleb128 0x1
 9108 34bd 52       		.byte	0x52
 9109 34be 09       		.uleb128 0x9
 9110 34bf 03       		.byte	0x3
 9111 34c0 00000000 		.quad	_ZL11g_3x3_stamp
 9111      00000000 
 9112 34c8 00       		.byte	0
 9113 34c9 73       		.uleb128 0x73
GAS LISTING /tmp/ccrWPnlb.s 			page 234


 9114 34ca 00000000 		.quad	.LVL50
 9114      00000000 
 9115 34d2 1C540000 		.long	0x541c
 9116 34d6 F8340000 		.long	0x34f8
 9117 34da 69       		.uleb128 0x69
 9118 34db 01       		.uleb128 0x1
 9119 34dc 55       		.byte	0x55
 9120 34dd 02       		.uleb128 0x2
 9121 34de 73       		.byte	0x73
 9122 34df 00       		.sleb128 0
 9123 34e0 69       		.uleb128 0x69
 9124 34e1 01       		.uleb128 0x1
 9125 34e2 54       		.byte	0x54
 9126 34e3 01       		.uleb128 0x1
 9127 34e4 31       		.byte	0x31
 9128 34e5 69       		.uleb128 0x69
 9129 34e6 01       		.uleb128 0x1
 9130 34e7 51       		.byte	0x51
 9131 34e8 01       		.uleb128 0x1
 9132 34e9 31       		.byte	0x31
 9133 34ea 69       		.uleb128 0x69
 9134 34eb 01       		.uleb128 0x1
 9135 34ec 52       		.byte	0x52
 9136 34ed 09       		.uleb128 0x9
 9137 34ee 03       		.byte	0x3
 9138 34ef 00000000 		.quad	_ZL11g_3x3_stamp
 9138      00000000 
 9139 34f7 00       		.byte	0
 9140 34f8 73       		.uleb128 0x73
 9141 34f9 00000000 		.quad	.LVL55
 9141      00000000 
 9142 3501 F0530000 		.long	0x53f0
 9143 3505 14350000 		.long	0x3514
 9144 3509 69       		.uleb128 0x69
 9145 350a 01       		.uleb128 0x1
 9146 350b 55       		.byte	0x55
 9147 350c 01       		.uleb128 0x1
 9148 350d 33       		.byte	0x33
 9149 350e 69       		.uleb128 0x69
 9150 350f 01       		.uleb128 0x1
 9151 3510 54       		.byte	0x54
 9152 3511 01       		.uleb128 0x1
 9153 3512 33       		.byte	0x33
 9154 3513 00       		.byte	0
 9155 3514 73       		.uleb128 0x73
 9156 3515 00000000 		.quad	.LVL57
 9156      00000000 
 9157 351d 48540000 		.long	0x5448
 9158 3521 4E350000 		.long	0x354e
 9159 3525 69       		.uleb128 0x69
 9160 3526 01       		.uleb128 0x1
 9161 3527 55       		.byte	0x55
 9162 3528 02       		.uleb128 0x2
 9163 3529 76       		.byte	0x76
 9164 352a 00       		.sleb128 0
 9165 352b 69       		.uleb128 0x69
 9166 352c 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 235


 9167 352d 54       		.byte	0x54
 9168 352e 01       		.uleb128 0x1
 9169 352f 31       		.byte	0x31
 9170 3530 69       		.uleb128 0x69
 9171 3531 01       		.uleb128 0x1
 9172 3532 51       		.byte	0x51
 9173 3533 01       		.uleb128 0x1
 9174 3534 31       		.byte	0x31
 9175 3535 69       		.uleb128 0x69
 9176 3536 01       		.uleb128 0x1
 9177 3537 61       		.byte	0x61
 9178 3538 07       		.uleb128 0x7
 9179 3539 F4       		.byte	0xf4
 9180 353a 29       		.uleb128 0x29
 9181 353b 04       		.byte	0x4
 9182 353c 00000040 		.long	0x40000000
 9183 3540 69       		.uleb128 0x69
 9184 3541 01       		.uleb128 0x1
 9185 3542 52       		.byte	0x52
 9186 3543 09       		.uleb128 0x9
 9187 3544 03       		.byte	0x3
 9188 3545 00000000 		.quad	_ZL11g_3x3_stamp
 9188      00000000 
 9189 354d 00       		.byte	0
 9190 354e 73       		.uleb128 0x73
 9191 354f 00000000 		.quad	.LVL60
 9191      00000000 
 9192 3557 0A540000 		.long	0x540a
 9193 355b 66350000 		.long	0x3566
 9194 355f 69       		.uleb128 0x69
 9195 3560 01       		.uleb128 0x1
 9196 3561 55       		.byte	0x55
 9197 3562 02       		.uleb128 0x2
 9198 3563 73       		.byte	0x73
 9199 3564 00       		.sleb128 0
 9200 3565 00       		.byte	0
 9201 3566 7A       		.uleb128 0x7a
 9202 3567 00000000 		.quad	.LVL63
 9202      00000000 
 9203 356f 0A540000 		.long	0x540a
 9204 3573 00       		.byte	0
 9205 3574 00       		.byte	0
 9206 3575 75       		.uleb128 0x75
 9207 3576 00000000 		.long	.LASF475
 9208 357a 02       		.byte	0x2
 9209 357b 88       		.byte	0x88
 9210 357c 00000000 		.long	.LASF476
 9211 3580 00000000 		.quad	.LFB1515
 9211      00000000 
 9212 3588 84010000 		.quad	.LFE1515-.LFB1515
 9212      00000000 
 9213 3590 01       		.uleb128 0x1
 9214 3591 9C       		.byte	0x9c
 9215 3592 AA380000 		.long	0x38aa
 9216 3596 76       		.uleb128 0x76
 9217 3597 00000000 		.long	.Ldebug_ranges0+0x380
 9218 359b 78       		.uleb128 0x78
GAS LISTING /tmp/ccrWPnlb.s 			page 236


 9219 359c 00000000 		.long	.LASF454
 9220 35a0 02       		.byte	0x2
 9221 35a1 8A       		.byte	0x8a
 9222 35a2 5F310000 		.long	0x315f
 9223 35a6 09       		.uleb128 0x9
 9224 35a7 03       		.byte	0x3
 9225 35a8 00000000 		.quad	_ZZ33test_add_point_with_stamp_topleftvE8expected
 9225      00000000 
 9226 35b0 77       		.uleb128 0x77
 9227 35b1 686D00   		.string	"hm"
 9228 35b4 02       		.byte	0x2
 9229 35b5 90       		.byte	0x90
 9230 35b6 9B280000 		.long	0x289b
 9231 35ba 00000000 		.long	.LLST58
 9232 35be 77       		.uleb128 0x77
 9233 35bf 686D3200 		.string	"hm2"
 9234 35c3 02       		.byte	0x2
 9235 35c4 96       		.byte	0x96
 9236 35c5 9B280000 		.long	0x289b
 9237 35c9 00000000 		.long	.LLST59
 9238 35cd 6A       		.uleb128 0x6a
 9239 35ce 75280000 		.long	0x2875
 9240 35d2 00000000 		.quad	.LBB370
 9240      00000000 
 9241 35da 1D000000 		.quad	.LBE370-.LBB370
 9241      00000000 
 9242 35e2 02       		.byte	0x2
 9243 35e3 93       		.byte	0x93
 9244 35e4 2F360000 		.long	0x362f
 9245 35e8 65       		.uleb128 0x65
 9246 35e9 85280000 		.long	0x2885
 9247 35ed 00000000 		.long	.LLST60
 9248 35f1 65       		.uleb128 0x65
 9249 35f2 85280000 		.long	0x2885
 9250 35f6 00000000 		.long	.LLST60
 9251 35fa 65       		.uleb128 0x65
 9252 35fb 85280000 		.long	0x2885
 9253 35ff 00000000 		.long	.LLST60
 9254 3603 63       		.uleb128 0x63
 9255 3604 8F280000 		.long	0x288f
 9256 3608 0A       		.uleb128 0xa
 9257 3609 03       		.byte	0x3
 9258 360a 00000000 		.quad	_ZZ33test_add_point_with_stamp_topleftvE8expected
 9258      00000000 
 9259 3612 9F       		.byte	0x9f
 9260 3613 68       		.uleb128 0x68
 9261 3614 00000000 		.quad	.LVL77
 9261      00000000 
 9262 361c D1530000 		.long	0x53d1
 9263 3620 69       		.uleb128 0x69
 9264 3621 01       		.uleb128 0x1
 9265 3622 55       		.byte	0x55
 9266 3623 09       		.uleb128 0x9
 9267 3624 03       		.byte	0x3
 9268 3625 00000000 		.quad	_ZZ33test_add_point_with_stamp_topleftvE8expected
 9268      00000000 
 9269 362d 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 237


 9270 362e 00       		.byte	0
 9271 362f 66       		.uleb128 0x66
 9272 3630 81290000 		.long	0x2981
 9273 3634 00000000 		.quad	.LBB372
 9273      00000000 
 9274 363c 00000000 		.long	.Ldebug_ranges0+0x3d0
 9275 3640 02       		.byte	0x2
 9276 3641 93       		.byte	0x93
 9277 3642 97360000 		.long	0x3697
 9278 3646 79       		.uleb128 0x79
 9279 3647 AE290000 		.long	0x29ae
 9280 364b 93       		.byte	0x93
 9281 364c 63       		.uleb128 0x63
 9282 364d A3290000 		.long	0x29a3
 9283 3651 0A       		.uleb128 0xa
 9284 3652 03       		.byte	0x3
 9285 3653 00000000 		.quad	.LC7
 9285      00000000 
 9286 365b 9F       		.byte	0x9f
 9287 365c 65       		.uleb128 0x65
 9288 365d 98290000 		.long	0x2998
 9289 3661 00000000 		.long	.LLST63
 9290 3665 63       		.uleb128 0x63
 9291 3666 8D290000 		.long	0x298d
 9292 366a 0A       		.uleb128 0xa
 9293 366b 03       		.byte	0x3
 9294 366c 00000000 		.quad	.LC23
 9294      00000000 
 9295 3674 9F       		.byte	0x9f
 9296 3675 68       		.uleb128 0x68
 9297 3676 00000000 		.quad	.LVL92
 9297      00000000 
 9298 367e ED2B0000 		.long	0x2bed
 9299 3682 69       		.uleb128 0x69
 9300 3683 01       		.uleb128 0x1
 9301 3684 55       		.byte	0x55
 9302 3685 09       		.uleb128 0x9
 9303 3686 03       		.byte	0x3
 9304 3687 00000000 		.quad	.LC23
 9304      00000000 
 9305 368f 69       		.uleb128 0x69
 9306 3690 01       		.uleb128 0x1
 9307 3691 54       		.byte	0x54
 9308 3692 02       		.uleb128 0x2
 9309 3693 08       		.byte	0x8
 9310 3694 93       		.byte	0x93
 9311 3695 00       		.byte	0
 9312 3696 00       		.byte	0
 9313 3697 66       		.uleb128 0x66
 9314 3698 81290000 		.long	0x2981
 9315 369c 00000000 		.quad	.LBB375
 9315      00000000 
 9316 36a4 00000000 		.long	.Ldebug_ranges0+0x400
 9317 36a8 02       		.byte	0x2
 9318 36a9 94       		.byte	0x94
 9319 36aa F4360000 		.long	0x36f4
 9320 36ae 65       		.uleb128 0x65
GAS LISTING /tmp/ccrWPnlb.s 			page 238


 9321 36af AE290000 		.long	0x29ae
 9322 36b3 00000000 		.long	.LLST64
 9323 36b7 65       		.uleb128 0x65
 9324 36b8 A3290000 		.long	0x29a3
 9325 36bc 00000000 		.long	.LLST65
 9326 36c0 65       		.uleb128 0x65
 9327 36c1 98290000 		.long	0x2998
 9328 36c5 00000000 		.long	.LLST66
 9329 36c9 65       		.uleb128 0x65
 9330 36ca 8D290000 		.long	0x298d
 9331 36ce 00000000 		.long	.LLST67
 9332 36d2 68       		.uleb128 0x68
 9333 36d3 00000000 		.quad	.LVL94
 9333      00000000 
 9334 36db ED2B0000 		.long	0x2bed
 9335 36df 69       		.uleb128 0x69
 9336 36e0 01       		.uleb128 0x1
 9337 36e1 55       		.byte	0x55
 9338 36e2 09       		.uleb128 0x9
 9339 36e3 03       		.byte	0x3
 9340 36e4 00000000 		.quad	.LC17
 9340      00000000 
 9341 36ec 69       		.uleb128 0x69
 9342 36ed 01       		.uleb128 0x1
 9343 36ee 54       		.byte	0x54
 9344 36ef 02       		.uleb128 0x2
 9345 36f0 08       		.byte	0x8
 9346 36f1 94       		.byte	0x94
 9347 36f2 00       		.byte	0
 9348 36f3 00       		.byte	0
 9349 36f4 66       		.uleb128 0x66
 9350 36f5 952B0000 		.long	0x2b95
 9351 36f9 00000000 		.quad	.LBB378
 9351      00000000 
 9352 3701 00000000 		.long	.Ldebug_ranges0+0x430
 9353 3705 02       		.byte	0x2
 9354 3706 9B       		.byte	0x9b
 9355 3707 2B370000 		.long	0x372b
 9356 370b 65       		.uleb128 0x65
 9357 370c AF2B0000 		.long	0x2baf
 9358 3710 00000000 		.long	.LLST68
 9359 3714 65       		.uleb128 0x65
 9360 3715 A52B0000 		.long	0x2ba5
 9361 3719 00000000 		.long	.LLST69
 9362 371d 6E       		.uleb128 0x6e
 9363 371e 00000000 		.quad	.LVL96
 9363      00000000 
 9364 3726 D1530000 		.long	0x53d1
 9365 372a 00       		.byte	0
 9366 372b 66       		.uleb128 0x66
 9367 372c 81290000 		.long	0x2981
 9368 3730 00000000 		.quad	.LBB381
 9368      00000000 
 9369 3738 00000000 		.long	.Ldebug_ranges0+0x460
 9370 373c 02       		.byte	0x2
 9371 373d 9B       		.byte	0x9b
 9372 373e 84370000 		.long	0x3784
GAS LISTING /tmp/ccrWPnlb.s 			page 239


 9373 3742 65       		.uleb128 0x65
 9374 3743 AE290000 		.long	0x29ae
 9375 3747 00000000 		.long	.LLST70
 9376 374b 65       		.uleb128 0x65
 9377 374c A3290000 		.long	0x29a3
 9378 3750 00000000 		.long	.LLST71
 9379 3754 67       		.uleb128 0x67
 9380 3755 98290000 		.long	0x2998
 9381 3759 65       		.uleb128 0x65
 9382 375a 8D290000 		.long	0x298d
 9383 375e 00000000 		.long	.LLST72
 9384 3762 68       		.uleb128 0x68
 9385 3763 00000000 		.quad	.LVL87
 9385      00000000 
 9386 376b ED2B0000 		.long	0x2bed
 9387 376f 69       		.uleb128 0x69
 9388 3770 01       		.uleb128 0x1
 9389 3771 55       		.byte	0x55
 9390 3772 09       		.uleb128 0x9
 9391 3773 03       		.byte	0x3
 9392 3774 00000000 		.quad	.LC25
 9392      00000000 
 9393 377c 69       		.uleb128 0x69
 9394 377d 01       		.uleb128 0x1
 9395 377e 54       		.byte	0x54
 9396 377f 02       		.uleb128 0x2
 9397 3780 08       		.byte	0x8
 9398 3781 9B       		.byte	0x9b
 9399 3782 00       		.byte	0
 9400 3783 00       		.byte	0
 9401 3784 73       		.uleb128 0x73
 9402 3785 00000000 		.quad	.LVL74
 9402      00000000 
 9403 378d F0530000 		.long	0x53f0
 9404 3791 A0370000 		.long	0x37a0
 9405 3795 69       		.uleb128 0x69
 9406 3796 01       		.uleb128 0x1
 9407 3797 55       		.byte	0x55
 9408 3798 01       		.uleb128 0x1
 9409 3799 33       		.byte	0x33
 9410 379a 69       		.uleb128 0x69
 9411 379b 01       		.uleb128 0x1
 9412 379c 54       		.byte	0x54
 9413 379d 01       		.uleb128 0x1
 9414 379e 33       		.byte	0x33
 9415 379f 00       		.byte	0
 9416 37a0 73       		.uleb128 0x73
 9417 37a1 00000000 		.quad	.LVL76
 9417      00000000 
 9418 37a9 1C540000 		.long	0x541c
 9419 37ad CF370000 		.long	0x37cf
 9420 37b1 69       		.uleb128 0x69
 9421 37b2 01       		.uleb128 0x1
 9422 37b3 55       		.byte	0x55
 9423 37b4 02       		.uleb128 0x2
 9424 37b5 73       		.byte	0x73
 9425 37b6 00       		.sleb128 0
GAS LISTING /tmp/ccrWPnlb.s 			page 240


 9426 37b7 69       		.uleb128 0x69
 9427 37b8 01       		.uleb128 0x1
 9428 37b9 54       		.byte	0x54
 9429 37ba 01       		.uleb128 0x1
 9430 37bb 30       		.byte	0x30
 9431 37bc 69       		.uleb128 0x69
 9432 37bd 01       		.uleb128 0x1
 9433 37be 51       		.byte	0x51
 9434 37bf 01       		.uleb128 0x1
 9435 37c0 30       		.byte	0x30
 9436 37c1 69       		.uleb128 0x69
 9437 37c2 01       		.uleb128 0x1
 9438 37c3 52       		.byte	0x52
 9439 37c4 09       		.uleb128 0x9
 9440 37c5 03       		.byte	0x3
 9441 37c6 00000000 		.quad	_ZL11g_3x3_stamp
 9441      00000000 
 9442 37ce 00       		.byte	0
 9443 37cf 73       		.uleb128 0x73
 9444 37d0 00000000 		.quad	.LVL81
 9444      00000000 
 9445 37d8 F0530000 		.long	0x53f0
 9446 37dc EB370000 		.long	0x37eb
 9447 37e0 69       		.uleb128 0x69
 9448 37e1 01       		.uleb128 0x1
 9449 37e2 55       		.byte	0x55
 9450 37e3 01       		.uleb128 0x1
 9451 37e4 33       		.byte	0x33
 9452 37e5 69       		.uleb128 0x69
 9453 37e6 01       		.uleb128 0x1
 9454 37e7 54       		.byte	0x54
 9455 37e8 01       		.uleb128 0x1
 9456 37e9 33       		.byte	0x33
 9457 37ea 00       		.byte	0
 9458 37eb 73       		.uleb128 0x73
 9459 37ec 00000000 		.quad	.LVL83
 9459      00000000 
 9460 37f4 1C540000 		.long	0x541c
 9461 37f8 1A380000 		.long	0x381a
 9462 37fc 69       		.uleb128 0x69
 9463 37fd 01       		.uleb128 0x1
 9464 37fe 55       		.byte	0x55
 9465 37ff 02       		.uleb128 0x2
 9466 3800 73       		.byte	0x73
 9467 3801 00       		.sleb128 0
 9468 3802 69       		.uleb128 0x69
 9469 3803 01       		.uleb128 0x1
 9470 3804 54       		.byte	0x54
 9471 3805 01       		.uleb128 0x1
 9472 3806 30       		.byte	0x30
 9473 3807 69       		.uleb128 0x69
 9474 3808 01       		.uleb128 0x1
 9475 3809 51       		.byte	0x51
 9476 380a 01       		.uleb128 0x1
 9477 380b 30       		.byte	0x30
 9478 380c 69       		.uleb128 0x69
 9479 380d 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 241


 9480 380e 52       		.byte	0x52
 9481 380f 09       		.uleb128 0x9
 9482 3810 03       		.byte	0x3
 9483 3811 00000000 		.quad	_ZL11g_3x3_stamp
 9483      00000000 
 9484 3819 00       		.byte	0
 9485 381a 73       		.uleb128 0x73
 9486 381b 00000000 		.quad	.LVL84
 9486      00000000 
 9487 3823 1C540000 		.long	0x541c
 9488 3827 49380000 		.long	0x3849
 9489 382b 69       		.uleb128 0x69
 9490 382c 01       		.uleb128 0x1
 9491 382d 55       		.byte	0x55
 9492 382e 02       		.uleb128 0x2
 9493 382f 73       		.byte	0x73
 9494 3830 00       		.sleb128 0
 9495 3831 69       		.uleb128 0x69
 9496 3832 01       		.uleb128 0x1
 9497 3833 54       		.byte	0x54
 9498 3834 01       		.uleb128 0x1
 9499 3835 30       		.byte	0x30
 9500 3836 69       		.uleb128 0x69
 9501 3837 01       		.uleb128 0x1
 9502 3838 51       		.byte	0x51
 9503 3839 01       		.uleb128 0x1
 9504 383a 30       		.byte	0x30
 9505 383b 69       		.uleb128 0x69
 9506 383c 01       		.uleb128 0x1
 9507 383d 52       		.byte	0x52
 9508 383e 09       		.uleb128 0x9
 9509 383f 03       		.byte	0x3
 9510 3840 00000000 		.quad	_ZL11g_3x3_stamp
 9510      00000000 
 9511 3848 00       		.byte	0
 9512 3849 73       		.uleb128 0x73
 9513 384a 00000000 		.quad	.LVL85
 9513      00000000 
 9514 3852 48540000 		.long	0x5448
 9515 3856 83380000 		.long	0x3883
 9516 385a 69       		.uleb128 0x69
 9517 385b 01       		.uleb128 0x1
 9518 385c 55       		.byte	0x55
 9519 385d 02       		.uleb128 0x2
 9520 385e 76       		.byte	0x76
 9521 385f 00       		.sleb128 0
 9522 3860 69       		.uleb128 0x69
 9523 3861 01       		.uleb128 0x1
 9524 3862 54       		.byte	0x54
 9525 3863 01       		.uleb128 0x1
 9526 3864 30       		.byte	0x30
 9527 3865 69       		.uleb128 0x69
 9528 3866 01       		.uleb128 0x1
 9529 3867 51       		.byte	0x51
 9530 3868 01       		.uleb128 0x1
 9531 3869 30       		.byte	0x30
 9532 386a 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 242


 9533 386b 01       		.uleb128 0x1
 9534 386c 61       		.byte	0x61
 9535 386d 07       		.uleb128 0x7
 9536 386e F4       		.byte	0xf4
 9537 386f 29       		.uleb128 0x29
 9538 3870 04       		.byte	0x4
 9539 3871 00004040 		.long	0x40400000
 9540 3875 69       		.uleb128 0x69
 9541 3876 01       		.uleb128 0x1
 9542 3877 52       		.byte	0x52
 9543 3878 09       		.uleb128 0x9
 9544 3879 03       		.byte	0x3
 9545 387a 00000000 		.quad	_ZL11g_3x3_stamp
 9545      00000000 
 9546 3882 00       		.byte	0
 9547 3883 73       		.uleb128 0x73
 9548 3884 00000000 		.quad	.LVL88
 9548      00000000 
 9549 388c 0A540000 		.long	0x540a
 9550 3890 9B380000 		.long	0x389b
 9551 3894 69       		.uleb128 0x69
 9552 3895 01       		.uleb128 0x1
 9553 3896 55       		.byte	0x55
 9554 3897 02       		.uleb128 0x2
 9555 3898 73       		.byte	0x73
 9556 3899 00       		.sleb128 0
 9557 389a 00       		.byte	0
 9558 389b 7A       		.uleb128 0x7a
 9559 389c 00000000 		.quad	.LVL91
 9559      00000000 
 9560 38a4 0A540000 		.long	0x540a
 9561 38a8 00       		.byte	0
 9562 38a9 00       		.byte	0
 9563 38aa 75       		.uleb128 0x75
 9564 38ab 00000000 		.long	.LASF477
 9565 38af 02       		.byte	0x2
 9566 38b0 A1       		.byte	0xa1
 9567 38b1 00000000 		.long	.LASF478
 9568 38b5 00000000 		.quad	.LFB1516
 9568      00000000 
 9569 38bd 84010000 		.quad	.LFE1516-.LFB1516
 9569      00000000 
 9570 38c5 01       		.uleb128 0x1
 9571 38c6 9C       		.byte	0x9c
 9572 38c7 B03B0000 		.long	0x3bb0
 9573 38cb 76       		.uleb128 0x76
 9574 38cc 00000000 		.long	.Ldebug_ranges0+0x490
 9575 38d0 78       		.uleb128 0x78
 9576 38d1 00000000 		.long	.LASF454
 9577 38d5 02       		.byte	0x2
 9578 38d6 A3       		.byte	0xa3
 9579 38d7 5F310000 		.long	0x315f
 9580 38db 09       		.uleb128 0x9
 9581 38dc 03       		.byte	0x3
 9582 38dd 00000000 		.quad	_ZZ34test_add_point_with_stamp_botrightvE8expected
 9582      00000000 
 9583 38e5 77       		.uleb128 0x77
GAS LISTING /tmp/ccrWPnlb.s 			page 243


 9584 38e6 686D00   		.string	"hm"
 9585 38e9 02       		.byte	0x2
 9586 38ea A9       		.byte	0xa9
 9587 38eb 9B280000 		.long	0x289b
 9588 38ef 00000000 		.long	.LLST73
 9589 38f3 77       		.uleb128 0x77
 9590 38f4 686D3200 		.string	"hm2"
 9591 38f8 02       		.byte	0x2
 9592 38f9 AF       		.byte	0xaf
 9593 38fa 9B280000 		.long	0x289b
 9594 38fe 00000000 		.long	.LLST74
 9595 3902 6A       		.uleb128 0x6a
 9596 3903 75280000 		.long	0x2875
 9597 3907 00000000 		.quad	.LBB392
 9597      00000000 
 9598 390f 1D000000 		.quad	.LBE392-.LBB392
 9598      00000000 
 9599 3917 02       		.byte	0x2
 9600 3918 AC       		.byte	0xac
 9601 3919 64390000 		.long	0x3964
 9602 391d 65       		.uleb128 0x65
 9603 391e 85280000 		.long	0x2885
 9604 3922 00000000 		.long	.LLST75
 9605 3926 65       		.uleb128 0x65
 9606 3927 85280000 		.long	0x2885
 9607 392b 00000000 		.long	.LLST75
 9608 392f 65       		.uleb128 0x65
 9609 3930 85280000 		.long	0x2885
 9610 3934 00000000 		.long	.LLST75
 9611 3938 63       		.uleb128 0x63
 9612 3939 8F280000 		.long	0x288f
 9613 393d 0A       		.uleb128 0xa
 9614 393e 03       		.byte	0x3
 9615 393f 00000000 		.quad	_ZZ34test_add_point_with_stamp_botrightvE8expected
 9615      00000000 
 9616 3947 9F       		.byte	0x9f
 9617 3948 68       		.uleb128 0x68
 9618 3949 00000000 		.quad	.LVL101
 9618      00000000 
 9619 3951 D1530000 		.long	0x53d1
 9620 3955 69       		.uleb128 0x69
 9621 3956 01       		.uleb128 0x1
 9622 3957 55       		.byte	0x55
 9623 3958 09       		.uleb128 0x9
 9624 3959 03       		.byte	0x3
 9625 395a 00000000 		.quad	_ZZ34test_add_point_with_stamp_botrightvE8expected
 9625      00000000 
 9626 3962 00       		.byte	0
 9627 3963 00       		.byte	0
 9628 3964 66       		.uleb128 0x66
 9629 3965 81290000 		.long	0x2981
 9630 3969 00000000 		.quad	.LBB394
 9630      00000000 
 9631 3971 00000000 		.long	.Ldebug_ranges0+0x4e0
 9632 3975 02       		.byte	0x2
 9633 3976 AC       		.byte	0xac
 9634 3977 CC390000 		.long	0x39cc
GAS LISTING /tmp/ccrWPnlb.s 			page 244


 9635 397b 79       		.uleb128 0x79
 9636 397c AE290000 		.long	0x29ae
 9637 3980 AC       		.byte	0xac
 9638 3981 63       		.uleb128 0x63
 9639 3982 A3290000 		.long	0x29a3
 9640 3986 0A       		.uleb128 0xa
 9641 3987 03       		.byte	0x3
 9642 3988 00000000 		.quad	.LC7
 9642      00000000 
 9643 3990 9F       		.byte	0x9f
 9644 3991 65       		.uleb128 0x65
 9645 3992 98290000 		.long	0x2998
 9646 3996 00000000 		.long	.LLST78
 9647 399a 63       		.uleb128 0x63
 9648 399b 8D290000 		.long	0x298d
 9649 399f 0A       		.uleb128 0xa
 9650 39a0 03       		.byte	0x3
 9651 39a1 00000000 		.quad	.LC27
 9651      00000000 
 9652 39a9 9F       		.byte	0x9f
 9653 39aa 68       		.uleb128 0x68
 9654 39ab 00000000 		.quad	.LVL115
 9654      00000000 
 9655 39b3 ED2B0000 		.long	0x2bed
 9656 39b7 69       		.uleb128 0x69
 9657 39b8 01       		.uleb128 0x1
 9658 39b9 55       		.byte	0x55
 9659 39ba 09       		.uleb128 0x9
 9660 39bb 03       		.byte	0x3
 9661 39bc 00000000 		.quad	.LC27
 9661      00000000 
 9662 39c4 69       		.uleb128 0x69
 9663 39c5 01       		.uleb128 0x1
 9664 39c6 54       		.byte	0x54
 9665 39c7 02       		.uleb128 0x2
 9666 39c8 08       		.byte	0x8
 9667 39c9 AC       		.byte	0xac
 9668 39ca 00       		.byte	0
 9669 39cb 00       		.byte	0
 9670 39cc 66       		.uleb128 0x66
 9671 39cd 81290000 		.long	0x2981
 9672 39d1 00000000 		.quad	.LBB397
 9672      00000000 
 9673 39d9 00000000 		.long	.Ldebug_ranges0+0x510
 9674 39dd 02       		.byte	0x2
 9675 39de AD       		.byte	0xad
 9676 39df 293A0000 		.long	0x3a29
 9677 39e3 65       		.uleb128 0x65
 9678 39e4 AE290000 		.long	0x29ae
 9679 39e8 00000000 		.long	.LLST79
 9680 39ec 65       		.uleb128 0x65
 9681 39ed A3290000 		.long	0x29a3
 9682 39f1 00000000 		.long	.LLST80
 9683 39f5 65       		.uleb128 0x65
 9684 39f6 98290000 		.long	0x2998
 9685 39fa 00000000 		.long	.LLST81
 9686 39fe 65       		.uleb128 0x65
GAS LISTING /tmp/ccrWPnlb.s 			page 245


 9687 39ff 8D290000 		.long	0x298d
 9688 3a03 00000000 		.long	.LLST82
 9689 3a07 68       		.uleb128 0x68
 9690 3a08 00000000 		.quad	.LVL117
 9690      00000000 
 9691 3a10 ED2B0000 		.long	0x2bed
 9692 3a14 69       		.uleb128 0x69
 9693 3a15 01       		.uleb128 0x1
 9694 3a16 55       		.byte	0x55
 9695 3a17 09       		.uleb128 0x9
 9696 3a18 03       		.byte	0x3
 9697 3a19 00000000 		.quad	.LC17
 9697      00000000 
 9698 3a21 69       		.uleb128 0x69
 9699 3a22 01       		.uleb128 0x1
 9700 3a23 54       		.byte	0x54
 9701 3a24 02       		.uleb128 0x2
 9702 3a25 08       		.byte	0x8
 9703 3a26 AD       		.byte	0xad
 9704 3a27 00       		.byte	0
 9705 3a28 00       		.byte	0
 9706 3a29 66       		.uleb128 0x66
 9707 3a2a 952B0000 		.long	0x2b95
 9708 3a2e 00000000 		.quad	.LBB400
 9708      00000000 
 9709 3a36 00000000 		.long	.Ldebug_ranges0+0x540
 9710 3a3a 02       		.byte	0x2
 9711 3a3b B3       		.byte	0xb3
 9712 3a3c 603A0000 		.long	0x3a60
 9713 3a40 65       		.uleb128 0x65
 9714 3a41 AF2B0000 		.long	0x2baf
 9715 3a45 00000000 		.long	.LLST83
 9716 3a49 65       		.uleb128 0x65
 9717 3a4a A52B0000 		.long	0x2ba5
 9718 3a4e 00000000 		.long	.LLST84
 9719 3a52 6E       		.uleb128 0x6e
 9720 3a53 00000000 		.quad	.LVL119
 9720      00000000 
 9721 3a5b D1530000 		.long	0x53d1
 9722 3a5f 00       		.byte	0
 9723 3a60 66       		.uleb128 0x66
 9724 3a61 81290000 		.long	0x2981
 9725 3a65 00000000 		.quad	.LBB403
 9725      00000000 
 9726 3a6d 00000000 		.long	.Ldebug_ranges0+0x570
 9727 3a71 02       		.byte	0x2
 9728 3a72 B3       		.byte	0xb3
 9729 3a73 B93A0000 		.long	0x3ab9
 9730 3a77 65       		.uleb128 0x65
 9731 3a78 AE290000 		.long	0x29ae
 9732 3a7c 00000000 		.long	.LLST85
 9733 3a80 65       		.uleb128 0x65
 9734 3a81 A3290000 		.long	0x29a3
 9735 3a85 00000000 		.long	.LLST86
 9736 3a89 67       		.uleb128 0x67
 9737 3a8a 98290000 		.long	0x2998
 9738 3a8e 65       		.uleb128 0x65
GAS LISTING /tmp/ccrWPnlb.s 			page 246


 9739 3a8f 8D290000 		.long	0x298d
 9740 3a93 00000000 		.long	.LLST87
 9741 3a97 68       		.uleb128 0x68
 9742 3a98 00000000 		.quad	.LVL110
 9742      00000000 
 9743 3aa0 ED2B0000 		.long	0x2bed
 9744 3aa4 69       		.uleb128 0x69
 9745 3aa5 01       		.uleb128 0x1
 9746 3aa6 55       		.byte	0x55
 9747 3aa7 09       		.uleb128 0x9
 9748 3aa8 03       		.byte	0x3
 9749 3aa9 00000000 		.quad	.LC28
 9749      00000000 
 9750 3ab1 69       		.uleb128 0x69
 9751 3ab2 01       		.uleb128 0x1
 9752 3ab3 54       		.byte	0x54
 9753 3ab4 02       		.uleb128 0x2
 9754 3ab5 08       		.byte	0x8
 9755 3ab6 B3       		.byte	0xb3
 9756 3ab7 00       		.byte	0
 9757 3ab8 00       		.byte	0
 9758 3ab9 73       		.uleb128 0x73
 9759 3aba 00000000 		.quad	.LVL98
 9759      00000000 
 9760 3ac2 F0530000 		.long	0x53f0
 9761 3ac6 D53A0000 		.long	0x3ad5
 9762 3aca 69       		.uleb128 0x69
 9763 3acb 01       		.uleb128 0x1
 9764 3acc 55       		.byte	0x55
 9765 3acd 01       		.uleb128 0x1
 9766 3ace 33       		.byte	0x33
 9767 3acf 69       		.uleb128 0x69
 9768 3ad0 01       		.uleb128 0x1
 9769 3ad1 54       		.byte	0x54
 9770 3ad2 01       		.uleb128 0x1
 9771 3ad3 33       		.byte	0x33
 9772 3ad4 00       		.byte	0
 9773 3ad5 73       		.uleb128 0x73
 9774 3ad6 00000000 		.quad	.LVL100
 9774      00000000 
 9775 3ade 1C540000 		.long	0x541c
 9776 3ae2 043B0000 		.long	0x3b04
 9777 3ae6 69       		.uleb128 0x69
 9778 3ae7 01       		.uleb128 0x1
 9779 3ae8 55       		.byte	0x55
 9780 3ae9 02       		.uleb128 0x2
 9781 3aea 73       		.byte	0x73
 9782 3aeb 00       		.sleb128 0
 9783 3aec 69       		.uleb128 0x69
 9784 3aed 01       		.uleb128 0x1
 9785 3aee 54       		.byte	0x54
 9786 3aef 01       		.uleb128 0x1
 9787 3af0 32       		.byte	0x32
 9788 3af1 69       		.uleb128 0x69
 9789 3af2 01       		.uleb128 0x1
 9790 3af3 51       		.byte	0x51
 9791 3af4 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 247


 9792 3af5 32       		.byte	0x32
 9793 3af6 69       		.uleb128 0x69
 9794 3af7 01       		.uleb128 0x1
 9795 3af8 52       		.byte	0x52
 9796 3af9 09       		.uleb128 0x9
 9797 3afa 03       		.byte	0x3
 9798 3afb 00000000 		.quad	_ZL11g_3x3_stamp
 9798      00000000 
 9799 3b03 00       		.byte	0
 9800 3b04 73       		.uleb128 0x73
 9801 3b05 00000000 		.quad	.LVL105
 9801      00000000 
 9802 3b0d F0530000 		.long	0x53f0
 9803 3b11 203B0000 		.long	0x3b20
 9804 3b15 69       		.uleb128 0x69
 9805 3b16 01       		.uleb128 0x1
 9806 3b17 55       		.byte	0x55
 9807 3b18 01       		.uleb128 0x1
 9808 3b19 33       		.byte	0x33
 9809 3b1a 69       		.uleb128 0x69
 9810 3b1b 01       		.uleb128 0x1
 9811 3b1c 54       		.byte	0x54
 9812 3b1d 01       		.uleb128 0x1
 9813 3b1e 33       		.byte	0x33
 9814 3b1f 00       		.byte	0
 9815 3b20 73       		.uleb128 0x73
 9816 3b21 00000000 		.quad	.LVL107
 9816      00000000 
 9817 3b29 1C540000 		.long	0x541c
 9818 3b2d 4F3B0000 		.long	0x3b4f
 9819 3b31 69       		.uleb128 0x69
 9820 3b32 01       		.uleb128 0x1
 9821 3b33 55       		.byte	0x55
 9822 3b34 02       		.uleb128 0x2
 9823 3b35 73       		.byte	0x73
 9824 3b36 00       		.sleb128 0
 9825 3b37 69       		.uleb128 0x69
 9826 3b38 01       		.uleb128 0x1
 9827 3b39 54       		.byte	0x54
 9828 3b3a 01       		.uleb128 0x1
 9829 3b3b 32       		.byte	0x32
 9830 3b3c 69       		.uleb128 0x69
 9831 3b3d 01       		.uleb128 0x1
 9832 3b3e 51       		.byte	0x51
 9833 3b3f 01       		.uleb128 0x1
 9834 3b40 32       		.byte	0x32
 9835 3b41 69       		.uleb128 0x69
 9836 3b42 01       		.uleb128 0x1
 9837 3b43 52       		.byte	0x52
 9838 3b44 09       		.uleb128 0x9
 9839 3b45 03       		.byte	0x3
 9840 3b46 00000000 		.quad	_ZL11g_3x3_stamp
 9840      00000000 
 9841 3b4e 00       		.byte	0
 9842 3b4f 73       		.uleb128 0x73
 9843 3b50 00000000 		.quad	.LVL108
 9843      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 248


 9844 3b58 48540000 		.long	0x5448
 9845 3b5c 893B0000 		.long	0x3b89
 9846 3b60 69       		.uleb128 0x69
 9847 3b61 01       		.uleb128 0x1
 9848 3b62 55       		.byte	0x55
 9849 3b63 02       		.uleb128 0x2
 9850 3b64 76       		.byte	0x76
 9851 3b65 00       		.sleb128 0
 9852 3b66 69       		.uleb128 0x69
 9853 3b67 01       		.uleb128 0x1
 9854 3b68 54       		.byte	0x54
 9855 3b69 01       		.uleb128 0x1
 9856 3b6a 32       		.byte	0x32
 9857 3b6b 69       		.uleb128 0x69
 9858 3b6c 01       		.uleb128 0x1
 9859 3b6d 51       		.byte	0x51
 9860 3b6e 01       		.uleb128 0x1
 9861 3b6f 32       		.byte	0x32
 9862 3b70 69       		.uleb128 0x69
 9863 3b71 01       		.uleb128 0x1
 9864 3b72 61       		.byte	0x61
 9865 3b73 07       		.uleb128 0x7
 9866 3b74 F4       		.byte	0xf4
 9867 3b75 29       		.uleb128 0x29
 9868 3b76 04       		.byte	0x4
 9869 3b77 00000040 		.long	0x40000000
 9870 3b7b 69       		.uleb128 0x69
 9871 3b7c 01       		.uleb128 0x1
 9872 3b7d 52       		.byte	0x52
 9873 3b7e 09       		.uleb128 0x9
 9874 3b7f 03       		.byte	0x3
 9875 3b80 00000000 		.quad	_ZL11g_3x3_stamp
 9875      00000000 
 9876 3b88 00       		.byte	0
 9877 3b89 73       		.uleb128 0x73
 9878 3b8a 00000000 		.quad	.LVL111
 9878      00000000 
 9879 3b92 0A540000 		.long	0x540a
 9880 3b96 A13B0000 		.long	0x3ba1
 9881 3b9a 69       		.uleb128 0x69
 9882 3b9b 01       		.uleb128 0x1
 9883 3b9c 55       		.byte	0x55
 9884 3b9d 02       		.uleb128 0x2
 9885 3b9e 73       		.byte	0x73
 9886 3b9f 00       		.sleb128 0
 9887 3ba0 00       		.byte	0
 9888 3ba1 7A       		.uleb128 0x7a
 9889 3ba2 00000000 		.quad	.LVL114
 9889      00000000 
 9890 3baa 0A540000 		.long	0x540a
 9891 3bae 00       		.byte	0
 9892 3baf 00       		.byte	0
 9893 3bb0 75       		.uleb128 0x75
 9894 3bb1 00000000 		.long	.LASF479
 9895 3bb5 02       		.byte	0x2
 9896 3bb6 B9       		.byte	0xb9
 9897 3bb7 00000000 		.long	.LASF480
GAS LISTING /tmp/ccrWPnlb.s 			page 249


 9898 3bbb 00000000 		.quad	.LFB1517
 9898      00000000 
 9899 3bc3 EC010000 		.quad	.LFE1517-.LFB1517
 9899      00000000 
 9900 3bcb 01       		.uleb128 0x1
 9901 3bcc 9C       		.byte	0x9c
 9902 3bcd A83F0000 		.long	0x3fa8
 9903 3bd1 76       		.uleb128 0x76
 9904 3bd2 00000000 		.long	.Ldebug_ranges0+0x5a0
 9905 3bd6 78       		.uleb128 0x78
 9906 3bd7 00000000 		.long	.LASF454
 9907 3bdb 02       		.byte	0x2
 9908 3bdc BB       		.byte	0xbb
 9909 3bdd 5F310000 		.long	0x315f
 9910 3be1 09       		.uleb128 0x9
 9911 3be2 03       		.byte	0x3
 9912 3be3 00000000 		.quad	_ZZ33test_add_point_with_stamp_outsidevE8expected
 9912      00000000 
 9913 3beb 77       		.uleb128 0x77
 9914 3bec 686D00   		.string	"hm"
 9915 3bef 02       		.byte	0x2
 9916 3bf0 C1       		.byte	0xc1
 9917 3bf1 9B280000 		.long	0x289b
 9918 3bf5 00000000 		.long	.LLST88
 9919 3bf9 6A       		.uleb128 0x6a
 9920 3bfa 75280000 		.long	0x2875
 9921 3bfe 00000000 		.quad	.LBB414
 9921      00000000 
 9922 3c06 1D000000 		.quad	.LBE414-.LBB414
 9922      00000000 
 9923 3c0e 02       		.byte	0x2
 9924 3c0f C6       		.byte	0xc6
 9925 3c10 5B3C0000 		.long	0x3c5b
 9926 3c14 65       		.uleb128 0x65
 9927 3c15 85280000 		.long	0x2885
 9928 3c19 00000000 		.long	.LLST89
 9929 3c1d 65       		.uleb128 0x65
 9930 3c1e 85280000 		.long	0x2885
 9931 3c22 00000000 		.long	.LLST89
 9932 3c26 65       		.uleb128 0x65
 9933 3c27 85280000 		.long	0x2885
 9934 3c2b 00000000 		.long	.LLST89
 9935 3c2f 63       		.uleb128 0x63
 9936 3c30 8F280000 		.long	0x288f
 9937 3c34 0A       		.uleb128 0xa
 9938 3c35 03       		.byte	0x3
 9939 3c36 00000000 		.quad	_ZZ33test_add_point_with_stamp_outsidevE8expected
 9939      00000000 
 9940 3c3e 9F       		.byte	0x9f
 9941 3c3f 68       		.uleb128 0x68
 9942 3c40 00000000 		.quad	.LVL126
 9942      00000000 
 9943 3c48 D1530000 		.long	0x53d1
 9944 3c4c 69       		.uleb128 0x69
 9945 3c4d 01       		.uleb128 0x1
 9946 3c4e 55       		.byte	0x55
 9947 3c4f 09       		.uleb128 0x9
GAS LISTING /tmp/ccrWPnlb.s 			page 250


 9948 3c50 03       		.byte	0x3
 9949 3c51 00000000 		.quad	_ZZ33test_add_point_with_stamp_outsidevE8expected
 9949      00000000 
 9950 3c59 00       		.byte	0
 9951 3c5a 00       		.byte	0
 9952 3c5b 66       		.uleb128 0x66
 9953 3c5c 81290000 		.long	0x2981
 9954 3c60 00000000 		.quad	.LBB416
 9954      00000000 
 9955 3c68 00000000 		.long	.Ldebug_ranges0+0x5e0
 9956 3c6c 02       		.byte	0x2
 9957 3c6d C6       		.byte	0xc6
 9958 3c6e C33C0000 		.long	0x3cc3
 9959 3c72 79       		.uleb128 0x79
 9960 3c73 AE290000 		.long	0x29ae
 9961 3c77 C6       		.byte	0xc6
 9962 3c78 63       		.uleb128 0x63
 9963 3c79 A3290000 		.long	0x29a3
 9964 3c7d 0A       		.uleb128 0xa
 9965 3c7e 03       		.byte	0x3
 9966 3c7f 00000000 		.quad	.LC7
 9966      00000000 
 9967 3c87 9F       		.byte	0x9f
 9968 3c88 65       		.uleb128 0x65
 9969 3c89 98290000 		.long	0x2998
 9970 3c8d 00000000 		.long	.LLST92
 9971 3c91 63       		.uleb128 0x63
 9972 3c92 8D290000 		.long	0x298d
 9973 3c96 0A       		.uleb128 0xa
 9974 3c97 03       		.byte	0x3
 9975 3c98 00000000 		.quad	.LC30
 9975      00000000 
 9976 3ca0 9F       		.byte	0x9f
 9977 3ca1 68       		.uleb128 0x68
 9978 3ca2 00000000 		.quad	.LVL145
 9978      00000000 
 9979 3caa ED2B0000 		.long	0x2bed
 9980 3cae 69       		.uleb128 0x69
 9981 3caf 01       		.uleb128 0x1
 9982 3cb0 55       		.byte	0x55
 9983 3cb1 09       		.uleb128 0x9
 9984 3cb2 03       		.byte	0x3
 9985 3cb3 00000000 		.quad	.LC30
 9985      00000000 
 9986 3cbb 69       		.uleb128 0x69
 9987 3cbc 01       		.uleb128 0x1
 9988 3cbd 54       		.byte	0x54
 9989 3cbe 02       		.uleb128 0x2
 9990 3cbf 08       		.byte	0x8
 9991 3cc0 C6       		.byte	0xc6
 9992 3cc1 00       		.byte	0
 9993 3cc2 00       		.byte	0
 9994 3cc3 66       		.uleb128 0x66
 9995 3cc4 81290000 		.long	0x2981
 9996 3cc8 00000000 		.quad	.LBB419
 9996      00000000 
 9997 3cd0 00000000 		.long	.Ldebug_ranges0+0x610
GAS LISTING /tmp/ccrWPnlb.s 			page 251


 9998 3cd4 02       		.byte	0x2
 9999 3cd5 C7       		.byte	0xc7
 10000 3cd6 203D0000 		.long	0x3d20
 10001 3cda 65       		.uleb128 0x65
 10002 3cdb AE290000 		.long	0x29ae
 10003 3cdf 00000000 		.long	.LLST93
 10004 3ce3 65       		.uleb128 0x65
 10005 3ce4 A3290000 		.long	0x29a3
 10006 3ce8 00000000 		.long	.LLST94
 10007 3cec 65       		.uleb128 0x65
 10008 3ced 98290000 		.long	0x2998
 10009 3cf1 00000000 		.long	.LLST95
 10010 3cf5 65       		.uleb128 0x65
 10011 3cf6 8D290000 		.long	0x298d
 10012 3cfa 00000000 		.long	.LLST96
 10013 3cfe 68       		.uleb128 0x68
 10014 3cff 00000000 		.quad	.LVL143
 10014      00000000 
 10015 3d07 ED2B0000 		.long	0x2bed
 10016 3d0b 69       		.uleb128 0x69
 10017 3d0c 01       		.uleb128 0x1
 10018 3d0d 55       		.byte	0x55
 10019 3d0e 09       		.uleb128 0x9
 10020 3d0f 03       		.byte	0x3
 10021 3d10 00000000 		.quad	.LC13
 10021      00000000 
 10022 3d18 69       		.uleb128 0x69
 10023 3d19 01       		.uleb128 0x1
 10024 3d1a 54       		.byte	0x54
 10025 3d1b 02       		.uleb128 0x2
 10026 3d1c 08       		.byte	0x8
 10027 3d1d C7       		.byte	0xc7
 10028 3d1e 00       		.byte	0
 10029 3d1f 00       		.byte	0
 10030 3d20 6A       		.uleb128 0x6a
 10031 3d21 75280000 		.long	0x2875
 10032 3d25 00000000 		.quad	.LBB424
 10032      00000000 
 10033 3d2d 1D000000 		.quad	.LBE424-.LBB424
 10033      00000000 
 10034 3d35 02       		.byte	0x2
 10035 3d36 CD       		.byte	0xcd
 10036 3d37 7B3D0000 		.long	0x3d7b
 10037 3d3b 65       		.uleb128 0x65
 10038 3d3c 85280000 		.long	0x2885
 10039 3d40 00000000 		.long	.LLST97
 10040 3d44 65       		.uleb128 0x65
 10041 3d45 85280000 		.long	0x2885
 10042 3d49 00000000 		.long	.LLST97
 10043 3d4d 65       		.uleb128 0x65
 10044 3d4e 85280000 		.long	0x2885
 10045 3d52 00000000 		.long	.LLST97
 10046 3d56 65       		.uleb128 0x65
 10047 3d57 8F280000 		.long	0x288f
 10048 3d5b 00000000 		.long	.LLST100
 10049 3d5f 68       		.uleb128 0x68
 10050 3d60 00000000 		.quad	.LVL133
GAS LISTING /tmp/ccrWPnlb.s 			page 252


 10050      00000000 
 10051 3d68 D1530000 		.long	0x53d1
 10052 3d6c 69       		.uleb128 0x69
 10053 3d6d 01       		.uleb128 0x1
 10054 3d6e 55       		.byte	0x55
 10055 3d6f 09       		.uleb128 0x9
 10056 3d70 03       		.byte	0x3
 10057 3d71 00000000 		.quad	_ZZ33test_add_point_with_stamp_outsidevE8expected
 10057      00000000 
 10058 3d79 00       		.byte	0
 10059 3d7a 00       		.byte	0
 10060 3d7b 66       		.uleb128 0x66
 10061 3d7c 81290000 		.long	0x2981
 10062 3d80 00000000 		.quad	.LBB426
 10062      00000000 
 10063 3d88 00000000 		.long	.Ldebug_ranges0+0x650
 10064 3d8c 02       		.byte	0x2
 10065 3d8d CD       		.byte	0xcd
 10066 3d8e D83D0000 		.long	0x3dd8
 10067 3d92 65       		.uleb128 0x65
 10068 3d93 AE290000 		.long	0x29ae
 10069 3d97 00000000 		.long	.LLST101
 10070 3d9b 65       		.uleb128 0x65
 10071 3d9c A3290000 		.long	0x29a3
 10072 3da0 00000000 		.long	.LLST102
 10073 3da4 65       		.uleb128 0x65
 10074 3da5 98290000 		.long	0x2998
 10075 3da9 00000000 		.long	.LLST103
 10076 3dad 65       		.uleb128 0x65
 10077 3dae 8D290000 		.long	0x298d
 10078 3db2 00000000 		.long	.LLST104
 10079 3db6 68       		.uleb128 0x68
 10080 3db7 00000000 		.quad	.LVL141
 10080      00000000 
 10081 3dbf ED2B0000 		.long	0x2bed
 10082 3dc3 69       		.uleb128 0x69
 10083 3dc4 01       		.uleb128 0x1
 10084 3dc5 55       		.byte	0x55
 10085 3dc6 09       		.uleb128 0x9
 10086 3dc7 03       		.byte	0x3
 10087 3dc8 00000000 		.quad	.LC32
 10087      00000000 
 10088 3dd0 69       		.uleb128 0x69
 10089 3dd1 01       		.uleb128 0x1
 10090 3dd2 54       		.byte	0x54
 10091 3dd3 02       		.uleb128 0x2
 10092 3dd4 08       		.byte	0x8
 10093 3dd5 CD       		.byte	0xcd
 10094 3dd6 00       		.byte	0
 10095 3dd7 00       		.byte	0
 10096 3dd8 66       		.uleb128 0x66
 10097 3dd9 81290000 		.long	0x2981
 10098 3ddd 00000000 		.quad	.LBB429
 10098      00000000 
 10099 3de5 00000000 		.long	.Ldebug_ranges0+0x680
 10100 3de9 02       		.byte	0x2
 10101 3dea CE       		.byte	0xce
GAS LISTING /tmp/ccrWPnlb.s 			page 253


 10102 3deb 353E0000 		.long	0x3e35
 10103 3def 65       		.uleb128 0x65
 10104 3df0 AE290000 		.long	0x29ae
 10105 3df4 00000000 		.long	.LLST105
 10106 3df8 65       		.uleb128 0x65
 10107 3df9 A3290000 		.long	0x29a3
 10108 3dfd 00000000 		.long	.LLST106
 10109 3e01 65       		.uleb128 0x65
 10110 3e02 98290000 		.long	0x2998
 10111 3e06 00000000 		.long	.LLST107
 10112 3e0a 65       		.uleb128 0x65
 10113 3e0b 8D290000 		.long	0x298d
 10114 3e0f 00000000 		.long	.LLST108
 10115 3e13 68       		.uleb128 0x68
 10116 3e14 00000000 		.quad	.LVL138
 10116      00000000 
 10117 3e1c ED2B0000 		.long	0x2bed
 10118 3e20 69       		.uleb128 0x69
 10119 3e21 01       		.uleb128 0x1
 10120 3e22 55       		.byte	0x55
 10121 3e23 09       		.uleb128 0x9
 10122 3e24 03       		.byte	0x3
 10123 3e25 00000000 		.quad	.LC13
 10123      00000000 
 10124 3e2d 69       		.uleb128 0x69
 10125 3e2e 01       		.uleb128 0x1
 10126 3e2f 54       		.byte	0x54
 10127 3e30 02       		.uleb128 0x2
 10128 3e31 08       		.byte	0x8
 10129 3e32 CE       		.byte	0xce
 10130 3e33 00       		.byte	0
 10131 3e34 00       		.byte	0
 10132 3e35 73       		.uleb128 0x73
 10133 3e36 00000000 		.quad	.LVL121
 10133      00000000 
 10134 3e3e F0530000 		.long	0x53f0
 10135 3e42 513E0000 		.long	0x3e51
 10136 3e46 69       		.uleb128 0x69
 10137 3e47 01       		.uleb128 0x1
 10138 3e48 55       		.byte	0x55
 10139 3e49 01       		.uleb128 0x1
 10140 3e4a 33       		.byte	0x33
 10141 3e4b 69       		.uleb128 0x69
 10142 3e4c 01       		.uleb128 0x1
 10143 3e4d 54       		.byte	0x54
 10144 3e4e 01       		.uleb128 0x1
 10145 3e4f 33       		.byte	0x33
 10146 3e50 00       		.byte	0
 10147 3e51 73       		.uleb128 0x73
 10148 3e52 00000000 		.quad	.LVL123
 10148      00000000 
 10149 3e5a 1C540000 		.long	0x541c
 10150 3e5e 803E0000 		.long	0x3e80
 10151 3e62 69       		.uleb128 0x69
 10152 3e63 01       		.uleb128 0x1
 10153 3e64 55       		.byte	0x55
 10154 3e65 02       		.uleb128 0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 254


 10155 3e66 73       		.byte	0x73
 10156 3e67 00       		.sleb128 0
 10157 3e68 69       		.uleb128 0x69
 10158 3e69 01       		.uleb128 0x1
 10159 3e6a 54       		.byte	0x54
 10160 3e6b 01       		.uleb128 0x1
 10161 3e6c 33       		.byte	0x33
 10162 3e6d 69       		.uleb128 0x69
 10163 3e6e 01       		.uleb128 0x1
 10164 3e6f 51       		.byte	0x51
 10165 3e70 01       		.uleb128 0x1
 10166 3e71 32       		.byte	0x32
 10167 3e72 69       		.uleb128 0x69
 10168 3e73 01       		.uleb128 0x1
 10169 3e74 52       		.byte	0x52
 10170 3e75 09       		.uleb128 0x9
 10171 3e76 03       		.byte	0x3
 10172 3e77 00000000 		.quad	_ZL11g_3x3_stamp
 10172      00000000 
 10173 3e7f 00       		.byte	0
 10174 3e80 73       		.uleb128 0x73
 10175 3e81 00000000 		.quad	.LVL124
 10175      00000000 
 10176 3e89 1C540000 		.long	0x541c
 10177 3e8d AF3E0000 		.long	0x3eaf
 10178 3e91 69       		.uleb128 0x69
 10179 3e92 01       		.uleb128 0x1
 10180 3e93 55       		.byte	0x55
 10181 3e94 02       		.uleb128 0x2
 10182 3e95 73       		.byte	0x73
 10183 3e96 00       		.sleb128 0
 10184 3e97 69       		.uleb128 0x69
 10185 3e98 01       		.uleb128 0x1
 10186 3e99 54       		.byte	0x54
 10187 3e9a 01       		.uleb128 0x1
 10188 3e9b 32       		.byte	0x32
 10189 3e9c 69       		.uleb128 0x69
 10190 3e9d 01       		.uleb128 0x1
 10191 3e9e 51       		.byte	0x51
 10192 3e9f 01       		.uleb128 0x1
 10193 3ea0 33       		.byte	0x33
 10194 3ea1 69       		.uleb128 0x69
 10195 3ea2 01       		.uleb128 0x1
 10196 3ea3 52       		.byte	0x52
 10197 3ea4 09       		.uleb128 0x9
 10198 3ea5 03       		.byte	0x3
 10199 3ea6 00000000 		.quad	_ZL11g_3x3_stamp
 10199      00000000 
 10200 3eae 00       		.byte	0
 10201 3eaf 73       		.uleb128 0x73
 10202 3eb0 00000000 		.quad	.LVL125
 10202      00000000 
 10203 3eb8 1C540000 		.long	0x541c
 10204 3ebc DE3E0000 		.long	0x3ede
 10205 3ec0 69       		.uleb128 0x69
 10206 3ec1 01       		.uleb128 0x1
 10207 3ec2 55       		.byte	0x55
GAS LISTING /tmp/ccrWPnlb.s 			page 255


 10208 3ec3 02       		.uleb128 0x2
 10209 3ec4 73       		.byte	0x73
 10210 3ec5 00       		.sleb128 0
 10211 3ec6 69       		.uleb128 0x69
 10212 3ec7 01       		.uleb128 0x1
 10213 3ec8 54       		.byte	0x54
 10214 3ec9 01       		.uleb128 0x1
 10215 3eca 33       		.byte	0x33
 10216 3ecb 69       		.uleb128 0x69
 10217 3ecc 01       		.uleb128 0x1
 10218 3ecd 51       		.byte	0x51
 10219 3ece 01       		.uleb128 0x1
 10220 3ecf 33       		.byte	0x33
 10221 3ed0 69       		.uleb128 0x69
 10222 3ed1 01       		.uleb128 0x1
 10223 3ed2 52       		.byte	0x52
 10224 3ed3 09       		.uleb128 0x9
 10225 3ed4 03       		.byte	0x3
 10226 3ed5 00000000 		.quad	_ZL11g_3x3_stamp
 10226      00000000 
 10227 3edd 00       		.byte	0
 10228 3ede 73       		.uleb128 0x73
 10229 3edf 00000000 		.quad	.LVL130
 10229      00000000 
 10230 3ee7 48540000 		.long	0x5448
 10231 3eeb 183F0000 		.long	0x3f18
 10232 3eef 69       		.uleb128 0x69
 10233 3ef0 01       		.uleb128 0x1
 10234 3ef1 55       		.byte	0x55
 10235 3ef2 02       		.uleb128 0x2
 10236 3ef3 73       		.byte	0x73
 10237 3ef4 00       		.sleb128 0
 10238 3ef5 69       		.uleb128 0x69
 10239 3ef6 01       		.uleb128 0x1
 10240 3ef7 54       		.byte	0x54
 10241 3ef8 01       		.uleb128 0x1
 10242 3ef9 33       		.byte	0x33
 10243 3efa 69       		.uleb128 0x69
 10244 3efb 01       		.uleb128 0x1
 10245 3efc 51       		.byte	0x51
 10246 3efd 01       		.uleb128 0x1
 10247 3efe 32       		.byte	0x32
 10248 3eff 69       		.uleb128 0x69
 10249 3f00 01       		.uleb128 0x1
 10250 3f01 61       		.byte	0x61
 10251 3f02 07       		.uleb128 0x7
 10252 3f03 F4       		.byte	0xf4
 10253 3f04 29       		.uleb128 0x29
 10254 3f05 04       		.byte	0x4
 10255 3f06 0000C03F 		.long	0x3fc00000
 10256 3f0a 69       		.uleb128 0x69
 10257 3f0b 01       		.uleb128 0x1
 10258 3f0c 52       		.byte	0x52
 10259 3f0d 09       		.uleb128 0x9
 10260 3f0e 03       		.byte	0x3
 10261 3f0f 00000000 		.quad	_ZL11g_3x3_stamp
 10261      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 256


 10262 3f17 00       		.byte	0
 10263 3f18 73       		.uleb128 0x73
 10264 3f19 00000000 		.quad	.LVL131
 10264      00000000 
 10265 3f21 48540000 		.long	0x5448
 10266 3f25 523F0000 		.long	0x3f52
 10267 3f29 69       		.uleb128 0x69
 10268 3f2a 01       		.uleb128 0x1
 10269 3f2b 55       		.byte	0x55
 10270 3f2c 02       		.uleb128 0x2
 10271 3f2d 73       		.byte	0x73
 10272 3f2e 00       		.sleb128 0
 10273 3f2f 69       		.uleb128 0x69
 10274 3f30 01       		.uleb128 0x1
 10275 3f31 54       		.byte	0x54
 10276 3f32 01       		.uleb128 0x1
 10277 3f33 32       		.byte	0x32
 10278 3f34 69       		.uleb128 0x69
 10279 3f35 01       		.uleb128 0x1
 10280 3f36 51       		.byte	0x51
 10281 3f37 01       		.uleb128 0x1
 10282 3f38 33       		.byte	0x33
 10283 3f39 69       		.uleb128 0x69
 10284 3f3a 01       		.uleb128 0x1
 10285 3f3b 61       		.byte	0x61
 10286 3f3c 07       		.uleb128 0x7
 10287 3f3d F4       		.byte	0xf4
 10288 3f3e 29       		.uleb128 0x29
 10289 3f3f 04       		.byte	0x4
 10290 3f40 0000C03F 		.long	0x3fc00000
 10291 3f44 69       		.uleb128 0x69
 10292 3f45 01       		.uleb128 0x1
 10293 3f46 52       		.byte	0x52
 10294 3f47 09       		.uleb128 0x9
 10295 3f48 03       		.byte	0x3
 10296 3f49 00000000 		.quad	_ZL11g_3x3_stamp
 10296      00000000 
 10297 3f51 00       		.byte	0
 10298 3f52 73       		.uleb128 0x73
 10299 3f53 00000000 		.quad	.LVL132
 10299      00000000 
 10300 3f5b 48540000 		.long	0x5448
 10301 3f5f 8C3F0000 		.long	0x3f8c
 10302 3f63 69       		.uleb128 0x69
 10303 3f64 01       		.uleb128 0x1
 10304 3f65 55       		.byte	0x55
 10305 3f66 02       		.uleb128 0x2
 10306 3f67 73       		.byte	0x73
 10307 3f68 00       		.sleb128 0
 10308 3f69 69       		.uleb128 0x69
 10309 3f6a 01       		.uleb128 0x1
 10310 3f6b 54       		.byte	0x54
 10311 3f6c 01       		.uleb128 0x1
 10312 3f6d 33       		.byte	0x33
 10313 3f6e 69       		.uleb128 0x69
 10314 3f6f 01       		.uleb128 0x1
 10315 3f70 51       		.byte	0x51
GAS LISTING /tmp/ccrWPnlb.s 			page 257


 10316 3f71 01       		.uleb128 0x1
 10317 3f72 33       		.byte	0x33
 10318 3f73 69       		.uleb128 0x69
 10319 3f74 01       		.uleb128 0x1
 10320 3f75 61       		.byte	0x61
 10321 3f76 07       		.uleb128 0x7
 10322 3f77 F4       		.byte	0xf4
 10323 3f78 29       		.uleb128 0x29
 10324 3f79 04       		.byte	0x4
 10325 3f7a 0000C03F 		.long	0x3fc00000
 10326 3f7e 69       		.uleb128 0x69
 10327 3f7f 01       		.uleb128 0x1
 10328 3f80 52       		.byte	0x52
 10329 3f81 09       		.uleb128 0x9
 10330 3f82 03       		.byte	0x3
 10331 3f83 00000000 		.quad	_ZL11g_3x3_stamp
 10331      00000000 
 10332 3f8b 00       		.byte	0
 10333 3f8c 7A       		.uleb128 0x7a
 10334 3f8d 00000000 		.quad	.LVL137
 10334      00000000 
 10335 3f95 0A540000 		.long	0x540a
 10336 3f99 7A       		.uleb128 0x7a
 10337 3f9a 00000000 		.quad	.LVL140
 10337      00000000 
 10338 3fa2 0A540000 		.long	0x540a
 10339 3fa6 00       		.byte	0
 10340 3fa7 00       		.byte	0
 10341 3fa8 75       		.uleb128 0x75
 10342 3fa9 00000000 		.long	.LASF481
 10343 3fad 02       		.byte	0x2
 10344 3fae D3       		.byte	0xd3
 10345 3faf 00000000 		.long	.LASF482
 10346 3fb3 00000000 		.quad	.LFB1518
 10346      00000000 
 10347 3fbb ED000000 		.quad	.LFE1518-.LFB1518
 10347      00000000 
 10348 3fc3 01       		.uleb128 0x1
 10349 3fc4 9C       		.byte	0x9c
 10350 3fc5 95410000 		.long	0x4195
 10351 3fc9 76       		.uleb128 0x76
 10352 3fca 00000000 		.long	.Ldebug_ranges0+0x6c0
 10353 3fce 78       		.uleb128 0x78
 10354 3fcf 00000000 		.long	.LASF454
 10355 3fd3 02       		.byte	0x2
 10356 3fd4 D5       		.byte	0xd5
 10357 3fd5 5F310000 		.long	0x315f
 10358 3fd9 09       		.uleb128 0x9
 10359 3fda 03       		.byte	0x3
 10360 3fdb 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 10360      00000000 
 10361 3fe3 77       		.uleb128 0x77
 10362 3fe4 7300     		.string	"s"
 10363 3fe6 02       		.byte	0x2
 10364 3fe7 DB       		.byte	0xdb
 10365 3fe8 5B2A0000 		.long	0x2a5b
 10366 3fec 00000000 		.long	.LLST109
GAS LISTING /tmp/ccrWPnlb.s 			page 258


 10367 3ff0 6A       		.uleb128 0x6a
 10368 3ff1 81290000 		.long	0x2981
 10369 3ff5 00000000 		.quad	.LBB441
 10369      00000000 
 10370 3ffd 39000000 		.quad	.LBE441-.LBB441
 10370      00000000 
 10371 4005 02       		.byte	0x2
 10372 4006 DD       		.byte	0xdd
 10373 4007 5C400000 		.long	0x405c
 10374 400b 79       		.uleb128 0x79
 10375 400c AE290000 		.long	0x29ae
 10376 4010 DD       		.byte	0xdd
 10377 4011 63       		.uleb128 0x63
 10378 4012 A3290000 		.long	0x29a3
 10379 4016 0A       		.uleb128 0xa
 10380 4017 03       		.byte	0x3
 10381 4018 00000000 		.quad	.LC7
 10381      00000000 
 10382 4020 9F       		.byte	0x9f
 10383 4021 65       		.uleb128 0x65
 10384 4022 98290000 		.long	0x2998
 10385 4026 00000000 		.long	.LLST110
 10386 402a 63       		.uleb128 0x63
 10387 402b 8D290000 		.long	0x298d
 10388 402f 0A       		.uleb128 0xa
 10389 4030 03       		.byte	0x3
 10390 4031 00000000 		.quad	.LC34
 10390      00000000 
 10391 4039 9F       		.byte	0x9f
 10392 403a 68       		.uleb128 0x68
 10393 403b 00000000 		.quad	.LVL149
 10393      00000000 
 10394 4043 ED2B0000 		.long	0x2bed
 10395 4047 69       		.uleb128 0x69
 10396 4048 01       		.uleb128 0x1
 10397 4049 55       		.byte	0x55
 10398 404a 09       		.uleb128 0x9
 10399 404b 03       		.byte	0x3
 10400 404c 00000000 		.quad	.LC34
 10400      00000000 
 10401 4054 69       		.uleb128 0x69
 10402 4055 01       		.uleb128 0x1
 10403 4056 54       		.byte	0x54
 10404 4057 02       		.uleb128 0x2
 10405 4058 08       		.byte	0x8
 10406 4059 DD       		.byte	0xdd
 10407 405a 00       		.byte	0
 10408 405b 00       		.byte	0
 10409 405c 6A       		.uleb128 0x6a
 10410 405d 362A0000 		.long	0x2a36
 10411 4061 00000000 		.quad	.LBB443
 10411      00000000 
 10412 4069 68000000 		.quad	.LBE443-.LBB443
 10412      00000000 
 10413 4071 02       		.byte	0x2
 10414 4072 DE       		.byte	0xde
 10415 4073 F3400000 		.long	0x40f3
GAS LISTING /tmp/ccrWPnlb.s 			page 259


 10416 4077 63       		.uleb128 0x63
 10417 4078 4F2A0000 		.long	0x2a4f
 10418 407c 0A       		.uleb128 0xa
 10419 407d 03       		.byte	0x3
 10420 407e 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 10420      00000000 
 10421 4086 9F       		.byte	0x9f
 10422 4087 65       		.uleb128 0x65
 10423 4088 462A0000 		.long	0x2a46
 10424 408c 00000000 		.long	.LLST111
 10425 4090 6F       		.uleb128 0x6f
 10426 4091 FF290000 		.long	0x29ff
 10427 4095 00000000 		.quad	.LBB445
 10427      00000000 
 10428 409d 00000000 		.long	.Ldebug_ranges0+0x700
 10429 40a1 02       		.byte	0x2
 10430 40a2 58       		.byte	0x58
 10431 40a3 65       		.uleb128 0x65
 10432 40a4 212A0000 		.long	0x2a21
 10433 40a8 00000000 		.long	.LLST112
 10434 40ac 63       		.uleb128 0x63
 10435 40ad 182A0000 		.long	0x2a18
 10436 40b1 0A       		.uleb128 0xa
 10437 40b2 03       		.byte	0x3
 10438 40b3 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 10438      00000000 
 10439 40bb 9F       		.byte	0x9f
 10440 40bc 65       		.uleb128 0x65
 10441 40bd 0F2A0000 		.long	0x2a0f
 10442 40c1 00000000 		.long	.LLST113
 10443 40c5 76       		.uleb128 0x76
 10444 40c6 00000000 		.long	.Ldebug_ranges0+0x700
 10445 40ca 7B       		.uleb128 0x7b
 10446 40cb 2B2A0000 		.long	0x2a2b
 10447 40cf 00000000 		.long	.LLST114
 10448 40d3 6F       		.uleb128 0x6f
 10449 40d4 E9290000 		.long	0x29e9
 10450 40d8 00000000 		.quad	.LBB447
 10450      00000000 
 10451 40e0 00000000 		.long	.Ldebug_ranges0+0x730
 10452 40e4 02       		.byte	0x2
 10453 40e5 3E       		.byte	0x3e
 10454 40e6 65       		.uleb128 0x65
 10455 40e7 F3290000 		.long	0x29f3
 10456 40eb 00000000 		.long	.LLST115
 10457 40ef 00       		.byte	0
 10458 40f0 00       		.byte	0
 10459 40f1 00       		.byte	0
 10460 40f2 00       		.byte	0
 10461 40f3 66       		.uleb128 0x66
 10462 40f4 81290000 		.long	0x2981
 10463 40f8 00000000 		.quad	.LBB455
 10463      00000000 
 10464 4100 00000000 		.long	.Ldebug_ranges0+0x770
 10465 4104 02       		.byte	0x2
 10466 4105 DE       		.byte	0xde
 10467 4106 62410000 		.long	0x4162
GAS LISTING /tmp/ccrWPnlb.s 			page 260


 10468 410a 79       		.uleb128 0x79
 10469 410b AE290000 		.long	0x29ae
 10470 410f DE       		.byte	0xde
 10471 4110 63       		.uleb128 0x63
 10472 4111 A3290000 		.long	0x29a3
 10473 4115 0A       		.uleb128 0xa
 10474 4116 03       		.byte	0x3
 10475 4117 00000000 		.quad	.LC7
 10475      00000000 
 10476 411f 9F       		.byte	0x9f
 10477 4120 65       		.uleb128 0x65
 10478 4121 98290000 		.long	0x2998
 10479 4125 00000000 		.long	.LLST116
 10480 4129 63       		.uleb128 0x63
 10481 412a 8D290000 		.long	0x298d
 10482 412e 0A       		.uleb128 0xa
 10483 412f 03       		.byte	0x3
 10484 4130 00000000 		.quad	.LC37
 10484      00000000 
 10485 4138 9F       		.byte	0x9f
 10486 4139 68       		.uleb128 0x68
 10487 413a 00000000 		.quad	.LVL163
 10487      00000000 
 10488 4142 ED2B0000 		.long	0x2bed
 10489 4146 69       		.uleb128 0x69
 10490 4147 01       		.uleb128 0x1
 10491 4148 55       		.byte	0x55
 10492 4149 09       		.uleb128 0x9
 10493 414a 03       		.byte	0x3
 10494 414b 00000000 		.quad	.LC37
 10494      00000000 
 10495 4153 69       		.uleb128 0x69
 10496 4154 01       		.uleb128 0x1
 10497 4155 54       		.byte	0x54
 10498 4156 02       		.uleb128 0x2
 10499 4157 08       		.byte	0x8
 10500 4158 DE       		.byte	0xde
 10501 4159 7C       		.uleb128 0x7c
 10502 415a 98290000 		.long	0x2998
 10503 415e 01       		.uleb128 0x1
 10504 415f 30       		.byte	0x30
 10505 4160 00       		.byte	0
 10506 4161 00       		.byte	0
 10507 4162 73       		.uleb128 0x73
 10508 4163 00000000 		.quad	.LVL146
 10508      00000000 
 10509 416b 6E540000 		.long	0x546e
 10510 416f 79410000 		.long	0x4179
 10511 4173 69       		.uleb128 0x69
 10512 4174 01       		.uleb128 0x1
 10513 4175 55       		.byte	0x55
 10514 4176 01       		.uleb128 0x1
 10515 4177 31       		.byte	0x31
 10516 4178 00       		.byte	0
 10517 4179 7A       		.uleb128 0x7a
 10518 417a 00000000 		.quad	.LVL161
 10518      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 261


 10519 4182 83540000 		.long	0x5483
 10520 4186 7A       		.uleb128 0x7a
 10521 4187 00000000 		.quad	.LVL165
 10521      00000000 
 10522 418f 83540000 		.long	0x5483
 10523 4193 00       		.byte	0
 10524 4194 00       		.byte	0
 10525 4195 75       		.uleb128 0x75
 10526 4196 00000000 		.long	.LASF483
 10527 419a 02       		.byte	0x2
 10528 419b E3       		.byte	0xe3
 10529 419c 00000000 		.long	.LASF484
 10530 41a0 00000000 		.quad	.LFB1519
 10530      00000000 
 10531 41a8 DC010000 		.quad	.LFE1519-.LFB1519
 10531      00000000 
 10532 41b0 01       		.uleb128 0x1
 10533 41b1 9C       		.byte	0x9c
 10534 41b2 B2470000 		.long	0x47b2
 10535 41b6 76       		.uleb128 0x76
 10536 41b7 00000000 		.long	.Ldebug_ranges0+0x7b0
 10537 41bb 78       		.uleb128 0x78
 10538 41bc 00000000 		.long	.LASF485
 10539 41c0 02       		.byte	0x2
 10540 41c1 E5       		.byte	0xe5
 10541 41c2 5F310000 		.long	0x315f
 10542 41c6 09       		.uleb128 0x9
 10543 41c7 03       		.byte	0x3
 10544 41c8 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE4ones
 10544      00000000 
 10545 41d0 78       		.uleb128 0x78
 10546 41d1 00000000 		.long	.LASF486
 10547 41d5 02       		.byte	0x2
 10548 41d6 EB       		.byte	0xeb
 10549 41d7 5F310000 		.long	0x315f
 10550 41db 09       		.uleb128 0x9
 10551 41dc 03       		.byte	0x3
 10552 41dd 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5halfs
 10552      00000000 
 10553 41e5 78       		.uleb128 0x78
 10554 41e6 00000000 		.long	.LASF487
 10555 41ea 02       		.byte	0x2
 10556 41eb F1       		.byte	0xf1
 10557 41ec 5F310000 		.long	0x315f
 10558 41f0 09       		.uleb128 0x9
 10559 41f1 03       		.byte	0x3
 10560 41f2 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5zeros
 10560      00000000 
 10561 41fa 77       		.uleb128 0x77
 10562 41fb 733100   		.string	"s1"
 10563 41fe 02       		.byte	0x2
 10564 41ff F7       		.byte	0xf7
 10565 4200 5B2A0000 		.long	0x2a5b
 10566 4204 00000000 		.long	.LLST117
 10567 4208 06       		.uleb128 0x6
 10568 4209 00000000 		.long	.LASF488
 10569 420d 01       		.byte	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 262


 10570 420e 02       		.byte	0x2
 10571 420f F7       		.byte	0xf7
 10572 4210 98420000 		.long	0x4298
 10573 4214 7D       		.uleb128 0x7d
 10574 4215 00000000 		.long	.LASF490
 10575 4219 21420000 		.long	0x4221
 10576 421d 2C420000 		.long	0x422c
 10577 4221 18       		.uleb128 0x18
 10578 4222 19280000 		.long	0x2819
 10579 4226 18       		.uleb128 0x18
 10580 4227 93020000 		.long	0x293
 10581 422b 00       		.byte	0
 10582 422c 7E       		.uleb128 0x7e
 10583 422d 00000000 		.long	.LASF491
 10584 4231 29000000 		.long	0x29
 10585 4235 03       		.byte	0x3
 10586 4236 43420000 		.long	0x4243
 10587 423a 57420000 		.long	0x4257
 10588 423e 10       		.uleb128 0x10
 10589 423f 08420000 		.long	0x4208
 10590 4243 57       		.uleb128 0x57
 10591 4244 00000000 		.long	.LASF492
 10592 4248 4C420000 		.long	0x424c
 10593 424c 10       		.uleb128 0x10
 10594 424d 1F280000 		.long	0x281f
 10595 4251 19       		.uleb128 0x19
 10596 4252 29000000 		.long	0x29
 10597 4256 00       		.byte	0
 10598 4257 7E       		.uleb128 0x7e
 10599 4258 00000000 		.long	.LASF493
 10600 425c 34280000 		.long	0x2834
 10601 4260 03       		.byte	0x3
 10602 4261 69420000 		.long	0x4269
 10603 4265 73420000 		.long	0x4273
 10604 4269 57       		.uleb128 0x57
 10605 426a 00000000 		.long	.LASF455
 10606 426e 4C420000 		.long	0x424c
 10607 4272 00       		.byte	0
 10608 4273 7F       		.uleb128 0x7f
 10609 4274 00000000 		.long	.LASF494
 10610 4278 29000000 		.long	0x29
 10611 427c 00000000 		.quad	.LFB1521
 10611      00000000 
 10612 4284 09000000 		.quad	.LFE1521-.LFB1521
 10612      00000000 
 10613 428c 01       		.uleb128 0x1
 10614 428d 9C       		.byte	0x9c
 10615 428e 8001     		.uleb128 0x80
 10616 4290 29000000 		.long	0x29
 10617 4294 01       		.uleb128 0x1
 10618 4295 61       		.byte	0x61
 10619 4296 00       		.byte	0
 10620 4297 00       		.byte	0
 10621 4298 77       		.uleb128 0x77
 10622 4299 733200   		.string	"s2"
 10623 429c 02       		.byte	0x2
 10624 429d F8       		.byte	0xf8
GAS LISTING /tmp/ccrWPnlb.s 			page 263


 10625 429e 5B2A0000 		.long	0x2a5b
 10626 42a2 00000000 		.long	.LLST118
 10627 42a6 06       		.uleb128 0x6
 10628 42a7 00000000 		.long	.LASF488
 10629 42ab 01       		.byte	0x1
 10630 42ac 02       		.byte	0x2
 10631 42ad F8       		.byte	0xf8
 10632 42ae 36430000 		.long	0x4336
 10633 42b2 7D       		.uleb128 0x7d
 10634 42b3 00000000 		.long	.LASF490
 10635 42b7 BF420000 		.long	0x42bf
 10636 42bb CA420000 		.long	0x42ca
 10637 42bf 18       		.uleb128 0x18
 10638 42c0 3A280000 		.long	0x283a
 10639 42c4 18       		.uleb128 0x18
 10640 42c5 93020000 		.long	0x293
 10641 42c9 00       		.byte	0
 10642 42ca 7E       		.uleb128 0x7e
 10643 42cb 00000000 		.long	.LASF491
 10644 42cf 29000000 		.long	0x29
 10645 42d3 03       		.byte	0x3
 10646 42d4 E1420000 		.long	0x42e1
 10647 42d8 F5420000 		.long	0x42f5
 10648 42dc 10       		.uleb128 0x10
 10649 42dd A6420000 		.long	0x42a6
 10650 42e1 57       		.uleb128 0x57
 10651 42e2 00000000 		.long	.LASF492
 10652 42e6 EA420000 		.long	0x42ea
 10653 42ea 10       		.uleb128 0x10
 10654 42eb 40280000 		.long	0x2840
 10655 42ef 19       		.uleb128 0x19
 10656 42f0 29000000 		.long	0x29
 10657 42f4 00       		.byte	0
 10658 42f5 7E       		.uleb128 0x7e
 10659 42f6 00000000 		.long	.LASF493
 10660 42fa 34280000 		.long	0x2834
 10661 42fe 03       		.byte	0x3
 10662 42ff 07430000 		.long	0x4307
 10663 4303 11430000 		.long	0x4311
 10664 4307 57       		.uleb128 0x57
 10665 4308 00000000 		.long	.LASF455
 10666 430c EA420000 		.long	0x42ea
 10667 4310 00       		.byte	0
 10668 4311 7F       		.uleb128 0x7f
 10669 4312 00000000 		.long	.LASF494
 10670 4316 29000000 		.long	0x29
 10671 431a 00000000 		.quad	.LFB1524
 10671      00000000 
 10672 4322 09000000 		.quad	.LFE1524-.LFB1524
 10672      00000000 
 10673 432a 01       		.uleb128 0x1
 10674 432b 9C       		.byte	0x9c
 10675 432c 8001     		.uleb128 0x80
 10676 432e 29000000 		.long	0x29
 10677 4332 01       		.uleb128 0x1
 10678 4333 61       		.byte	0x61
 10679 4334 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 264


 10680 4335 00       		.byte	0
 10681 4336 77       		.uleb128 0x77
 10682 4337 733300   		.string	"s3"
 10683 433a 02       		.byte	0x2
 10684 433b F9       		.byte	0xf9
 10685 433c 5B2A0000 		.long	0x2a5b
 10686 4340 00000000 		.long	.LLST119
 10687 4344 06       		.uleb128 0x6
 10688 4345 00000000 		.long	.LASF488
 10689 4349 01       		.byte	0x1
 10690 434a 02       		.byte	0x2
 10691 434b F9       		.byte	0xf9
 10692 434c D4430000 		.long	0x43d4
 10693 4350 7D       		.uleb128 0x7d
 10694 4351 00000000 		.long	.LASF490
 10695 4355 5D430000 		.long	0x435d
 10696 4359 68430000 		.long	0x4368
 10697 435d 18       		.uleb128 0x18
 10698 435e 46280000 		.long	0x2846
 10699 4362 18       		.uleb128 0x18
 10700 4363 93020000 		.long	0x293
 10701 4367 00       		.byte	0
 10702 4368 7E       		.uleb128 0x7e
 10703 4369 00000000 		.long	.LASF491
 10704 436d 29000000 		.long	0x29
 10705 4371 03       		.byte	0x3
 10706 4372 7F430000 		.long	0x437f
 10707 4376 93430000 		.long	0x4393
 10708 437a 10       		.uleb128 0x10
 10709 437b 44430000 		.long	0x4344
 10710 437f 57       		.uleb128 0x57
 10711 4380 00000000 		.long	.LASF492
 10712 4384 88430000 		.long	0x4388
 10713 4388 10       		.uleb128 0x10
 10714 4389 4C280000 		.long	0x284c
 10715 438d 19       		.uleb128 0x19
 10716 438e 29000000 		.long	0x29
 10717 4392 00       		.byte	0
 10718 4393 7E       		.uleb128 0x7e
 10719 4394 00000000 		.long	.LASF493
 10720 4398 34280000 		.long	0x2834
 10721 439c 03       		.byte	0x3
 10722 439d A5430000 		.long	0x43a5
 10723 43a1 AF430000 		.long	0x43af
 10724 43a5 57       		.uleb128 0x57
 10725 43a6 00000000 		.long	.LASF455
 10726 43aa 88430000 		.long	0x4388
 10727 43ae 00       		.byte	0
 10728 43af 7F       		.uleb128 0x7f
 10729 43b0 00000000 		.long	.LASF494
 10730 43b4 29000000 		.long	0x29
 10731 43b8 00000000 		.quad	.LFB1527
 10731      00000000 
 10732 43c0 09000000 		.quad	.LFE1527-.LFB1527
 10732      00000000 
 10733 43c8 01       		.uleb128 0x1
 10734 43c9 9C       		.byte	0x9c
GAS LISTING /tmp/ccrWPnlb.s 			page 265


 10735 43ca 8001     		.uleb128 0x80
 10736 43cc 29000000 		.long	0x29
 10737 43d0 01       		.uleb128 0x1
 10738 43d1 61       		.byte	0x61
 10739 43d2 00       		.byte	0
 10740 43d3 00       		.byte	0
 10741 43d4 6A       		.uleb128 0x6a
 10742 43d5 81290000 		.long	0x2981
 10743 43d9 00000000 		.quad	.LBB464
 10743      00000000 
 10744 43e1 36000000 		.quad	.LBE464-.LBB464
 10744      00000000 
 10745 43e9 02       		.byte	0x2
 10746 43ea FB       		.byte	0xfb
 10747 43eb 40440000 		.long	0x4440
 10748 43ef 79       		.uleb128 0x79
 10749 43f0 AE290000 		.long	0x29ae
 10750 43f4 FB       		.byte	0xfb
 10751 43f5 63       		.uleb128 0x63
 10752 43f6 A3290000 		.long	0x29a3
 10753 43fa 0A       		.uleb128 0xa
 10754 43fb 03       		.byte	0x3
 10755 43fc 00000000 		.quad	.LC7
 10755      00000000 
 10756 4404 9F       		.byte	0x9f
 10757 4405 65       		.uleb128 0x65
 10758 4406 98290000 		.long	0x2998
 10759 440a 00000000 		.long	.LLST120
 10760 440e 63       		.uleb128 0x63
 10761 440f 8D290000 		.long	0x298d
 10762 4413 0A       		.uleb128 0xa
 10763 4414 03       		.byte	0x3
 10764 4415 00000000 		.quad	.LC39
 10764      00000000 
 10765 441d 9F       		.byte	0x9f
 10766 441e 68       		.uleb128 0x68
 10767 441f 00000000 		.quad	.LVL174
 10767      00000000 
 10768 4427 ED2B0000 		.long	0x2bed
 10769 442b 69       		.uleb128 0x69
 10770 442c 01       		.uleb128 0x1
 10771 442d 55       		.byte	0x55
 10772 442e 09       		.uleb128 0x9
 10773 442f 03       		.byte	0x3
 10774 4430 00000000 		.quad	.LC39
 10774      00000000 
 10775 4438 69       		.uleb128 0x69
 10776 4439 01       		.uleb128 0x1
 10777 443a 54       		.byte	0x54
 10778 443b 02       		.uleb128 0x2
 10779 443c 08       		.byte	0x8
 10780 443d FB       		.byte	0xfb
 10781 443e 00       		.byte	0
 10782 443f 00       		.byte	0
 10783 4440 6A       		.uleb128 0x6a
 10784 4441 81290000 		.long	0x2981
 10785 4445 00000000 		.quad	.LBB466
GAS LISTING /tmp/ccrWPnlb.s 			page 266


 10785      00000000 
 10786 444d 31000000 		.quad	.LBE466-.LBB466
 10786      00000000 
 10787 4455 02       		.byte	0x2
 10788 4456 FC       		.byte	0xfc
 10789 4457 AC440000 		.long	0x44ac
 10790 445b 79       		.uleb128 0x79
 10791 445c AE290000 		.long	0x29ae
 10792 4460 FC       		.byte	0xfc
 10793 4461 63       		.uleb128 0x63
 10794 4462 A3290000 		.long	0x29a3
 10795 4466 0A       		.uleb128 0xa
 10796 4467 03       		.byte	0x3
 10797 4468 00000000 		.quad	.LC7
 10797      00000000 
 10798 4470 9F       		.byte	0x9f
 10799 4471 65       		.uleb128 0x65
 10800 4472 98290000 		.long	0x2998
 10801 4476 00000000 		.long	.LLST121
 10802 447a 63       		.uleb128 0x63
 10803 447b 8D290000 		.long	0x298d
 10804 447f 0A       		.uleb128 0xa
 10805 4480 03       		.byte	0x3
 10806 4481 00000000 		.quad	.LC40
 10806      00000000 
 10807 4489 9F       		.byte	0x9f
 10808 448a 68       		.uleb128 0x68
 10809 448b 00000000 		.quad	.LVL176
 10809      00000000 
 10810 4493 ED2B0000 		.long	0x2bed
 10811 4497 69       		.uleb128 0x69
 10812 4498 01       		.uleb128 0x1
 10813 4499 55       		.byte	0x55
 10814 449a 09       		.uleb128 0x9
 10815 449b 03       		.byte	0x3
 10816 449c 00000000 		.quad	.LC40
 10816      00000000 
 10817 44a4 69       		.uleb128 0x69
 10818 44a5 01       		.uleb128 0x1
 10819 44a6 54       		.byte	0x54
 10820 44a7 02       		.uleb128 0x2
 10821 44a8 08       		.byte	0x8
 10822 44a9 FC       		.byte	0xfc
 10823 44aa 00       		.byte	0
 10824 44ab 00       		.byte	0
 10825 44ac 6A       		.uleb128 0x6a
 10826 44ad 81290000 		.long	0x2981
 10827 44b1 00000000 		.quad	.LBB468
 10827      00000000 
 10828 44b9 30000000 		.quad	.LBE468-.LBB468
 10828      00000000 
 10829 44c1 02       		.byte	0x2
 10830 44c2 FD       		.byte	0xfd
 10831 44c3 18450000 		.long	0x4518
 10832 44c7 79       		.uleb128 0x79
 10833 44c8 AE290000 		.long	0x29ae
 10834 44cc FD       		.byte	0xfd
GAS LISTING /tmp/ccrWPnlb.s 			page 267


 10835 44cd 63       		.uleb128 0x63
 10836 44ce A3290000 		.long	0x29a3
 10837 44d2 0A       		.uleb128 0xa
 10838 44d3 03       		.byte	0x3
 10839 44d4 00000000 		.quad	.LC7
 10839      00000000 
 10840 44dc 9F       		.byte	0x9f
 10841 44dd 65       		.uleb128 0x65
 10842 44de 98290000 		.long	0x2998
 10843 44e2 00000000 		.long	.LLST122
 10844 44e6 63       		.uleb128 0x63
 10845 44e7 8D290000 		.long	0x298d
 10846 44eb 0A       		.uleb128 0xa
 10847 44ec 03       		.byte	0x3
 10848 44ed 00000000 		.quad	.LC41
 10848      00000000 
 10849 44f5 9F       		.byte	0x9f
 10850 44f6 68       		.uleb128 0x68
 10851 44f7 00000000 		.quad	.LVL178
 10851      00000000 
 10852 44ff ED2B0000 		.long	0x2bed
 10853 4503 69       		.uleb128 0x69
 10854 4504 01       		.uleb128 0x1
 10855 4505 55       		.byte	0x55
 10856 4506 09       		.uleb128 0x9
 10857 4507 03       		.byte	0x3
 10858 4508 00000000 		.quad	.LC41
 10858      00000000 
 10859 4510 69       		.uleb128 0x69
 10860 4511 01       		.uleb128 0x1
 10861 4512 54       		.byte	0x54
 10862 4513 02       		.uleb128 0x2
 10863 4514 08       		.byte	0x8
 10864 4515 FD       		.byte	0xfd
 10865 4516 00       		.byte	0
 10866 4517 00       		.byte	0
 10867 4518 66       		.uleb128 0x66
 10868 4519 702B0000 		.long	0x2b70
 10869 451d 00000000 		.quad	.LBB470
 10869      00000000 
 10870 4525 00000000 		.long	.Ldebug_ranges0+0x810
 10871 4529 02       		.byte	0x2
 10872 452a FE       		.byte	0xfe
 10873 452b 64450000 		.long	0x4564
 10874 452f 63       		.uleb128 0x63
 10875 4530 892B0000 		.long	0x2b89
 10876 4534 0A       		.uleb128 0xa
 10877 4535 03       		.byte	0x3
 10878 4536 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5halfs
 10878      00000000 
 10879 453e 9F       		.byte	0x9f
 10880 453f 65       		.uleb128 0x65
 10881 4540 802B0000 		.long	0x2b80
 10882 4544 00000000 		.long	.LLST123
 10883 4548 68       		.uleb128 0x68
 10884 4549 00000000 		.quad	.LVL180
 10884      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 268


 10885 4551 D1530000 		.long	0x53d1
 10886 4555 69       		.uleb128 0x69
 10887 4556 01       		.uleb128 0x1
 10888 4557 55       		.byte	0x55
 10889 4558 09       		.uleb128 0x9
 10890 4559 03       		.byte	0x3
 10891 455a 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5halfs
 10891      00000000 
 10892 4562 00       		.byte	0
 10893 4563 00       		.byte	0
 10894 4564 66       		.uleb128 0x66
 10895 4565 81290000 		.long	0x2981
 10896 4569 00000000 		.quad	.LBB473
 10896      00000000 
 10897 4571 00000000 		.long	.Ldebug_ranges0+0x840
 10898 4575 02       		.byte	0x2
 10899 4576 FE       		.byte	0xfe
 10900 4577 C8450000 		.long	0x45c8
 10901 457b 79       		.uleb128 0x79
 10902 457c AE290000 		.long	0x29ae
 10903 4580 FE       		.byte	0xfe
 10904 4581 63       		.uleb128 0x63
 10905 4582 A3290000 		.long	0x29a3
 10906 4586 0A       		.uleb128 0xa
 10907 4587 03       		.byte	0x3
 10908 4588 00000000 		.quad	.LC7
 10908      00000000 
 10909 4590 9F       		.byte	0x9f
 10910 4591 67       		.uleb128 0x67
 10911 4592 98290000 		.long	0x2998
 10912 4596 63       		.uleb128 0x63
 10913 4597 8D290000 		.long	0x298d
 10914 459b 0A       		.uleb128 0xa
 10915 459c 03       		.byte	0x3
 10916 459d 00000000 		.quad	.LC42
 10916      00000000 
 10917 45a5 9F       		.byte	0x9f
 10918 45a6 68       		.uleb128 0x68
 10919 45a7 00000000 		.quad	.LVL194
 10919      00000000 
 10920 45af ED2B0000 		.long	0x2bed
 10921 45b3 69       		.uleb128 0x69
 10922 45b4 01       		.uleb128 0x1
 10923 45b5 55       		.byte	0x55
 10924 45b6 09       		.uleb128 0x9
 10925 45b7 03       		.byte	0x3
 10926 45b8 00000000 		.quad	.LC42
 10926      00000000 
 10927 45c0 69       		.uleb128 0x69
 10928 45c1 01       		.uleb128 0x1
 10929 45c2 54       		.byte	0x54
 10930 45c3 02       		.uleb128 0x2
 10931 45c4 08       		.byte	0x8
 10932 45c5 FE       		.byte	0xfe
 10933 45c6 00       		.byte	0
 10934 45c7 00       		.byte	0
 10935 45c8 66       		.uleb128 0x66
GAS LISTING /tmp/ccrWPnlb.s 			page 269


 10936 45c9 702B0000 		.long	0x2b70
 10937 45cd 00000000 		.quad	.LBB479
 10937      00000000 
 10938 45d5 00000000 		.long	.Ldebug_ranges0+0x880
 10939 45d9 02       		.byte	0x2
 10940 45da FF       		.byte	0xff
 10941 45db 0D460000 		.long	0x460d
 10942 45df 65       		.uleb128 0x65
 10943 45e0 892B0000 		.long	0x2b89
 10944 45e4 00000000 		.long	.LLST124
 10945 45e8 65       		.uleb128 0x65
 10946 45e9 802B0000 		.long	0x2b80
 10947 45ed 00000000 		.long	.LLST125
 10948 45f1 68       		.uleb128 0x68
 10949 45f2 00000000 		.quad	.LVL182
 10949      00000000 
 10950 45fa D1530000 		.long	0x53d1
 10951 45fe 69       		.uleb128 0x69
 10952 45ff 01       		.uleb128 0x1
 10953 4600 55       		.byte	0x55
 10954 4601 09       		.uleb128 0x9
 10955 4602 03       		.byte	0x3
 10956 4603 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE4ones
 10956      00000000 
 10957 460b 00       		.byte	0
 10958 460c 00       		.byte	0
 10959 460d 66       		.uleb128 0x66
 10960 460e 81290000 		.long	0x2981
 10961 4612 00000000 		.quad	.LBB482
 10961      00000000 
 10962 461a 00000000 		.long	.Ldebug_ranges0+0x8b0
 10963 461e 02       		.byte	0x2
 10964 461f FF       		.byte	0xff
 10965 4620 66460000 		.long	0x4666
 10966 4624 65       		.uleb128 0x65
 10967 4625 AE290000 		.long	0x29ae
 10968 4629 00000000 		.long	.LLST126
 10969 462d 65       		.uleb128 0x65
 10970 462e A3290000 		.long	0x29a3
 10971 4632 00000000 		.long	.LLST127
 10972 4636 67       		.uleb128 0x67
 10973 4637 98290000 		.long	0x2998
 10974 463b 65       		.uleb128 0x65
 10975 463c 8D290000 		.long	0x298d
 10976 4640 00000000 		.long	.LLST128
 10977 4644 68       		.uleb128 0x68
 10978 4645 00000000 		.quad	.LVL192
 10978      00000000 
 10979 464d ED2B0000 		.long	0x2bed
 10980 4651 69       		.uleb128 0x69
 10981 4652 01       		.uleb128 0x1
 10982 4653 55       		.byte	0x55
 10983 4654 09       		.uleb128 0x9
 10984 4655 03       		.byte	0x3
 10985 4656 00000000 		.quad	.LC43
 10985      00000000 
 10986 465e 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 270


 10987 465f 01       		.uleb128 0x1
 10988 4660 54       		.byte	0x54
 10989 4661 02       		.uleb128 0x2
 10990 4662 08       		.byte	0x8
 10991 4663 FF       		.byte	0xff
 10992 4664 00       		.byte	0
 10993 4665 00       		.byte	0
 10994 4666 70       		.uleb128 0x70
 10995 4667 702B0000 		.long	0x2b70
 10996 466b 00000000 		.quad	.LBB488
 10996      00000000 
 10997 4673 00000000 		.long	.Ldebug_ranges0+0x8f0
 10998 4677 02       		.byte	0x2
 10999 4678 0001     		.value	0x100
 11000 467a AC460000 		.long	0x46ac
 11001 467e 65       		.uleb128 0x65
 11002 467f 892B0000 		.long	0x2b89
 11003 4683 00000000 		.long	.LLST129
 11004 4687 65       		.uleb128 0x65
 11005 4688 802B0000 		.long	0x2b80
 11006 468c 00000000 		.long	.LLST130
 11007 4690 68       		.uleb128 0x68
 11008 4691 00000000 		.quad	.LVL184
 11008      00000000 
 11009 4699 D1530000 		.long	0x53d1
 11010 469d 69       		.uleb128 0x69
 11011 469e 01       		.uleb128 0x1
 11012 469f 55       		.byte	0x55
 11013 46a0 09       		.uleb128 0x9
 11014 46a1 03       		.byte	0x3
 11015 46a2 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5zeros
 11015      00000000 
 11016 46aa 00       		.byte	0
 11017 46ab 00       		.byte	0
 11018 46ac 70       		.uleb128 0x70
 11019 46ad 81290000 		.long	0x2981
 11020 46b1 00000000 		.quad	.LBB491
 11020      00000000 
 11021 46b9 00000000 		.long	.Ldebug_ranges0+0x920
 11022 46bd 02       		.byte	0x2
 11023 46be 0001     		.value	0x100
 11024 46c0 07470000 		.long	0x4707
 11025 46c4 65       		.uleb128 0x65
 11026 46c5 AE290000 		.long	0x29ae
 11027 46c9 00000000 		.long	.LLST131
 11028 46cd 65       		.uleb128 0x65
 11029 46ce A3290000 		.long	0x29a3
 11030 46d2 00000000 		.long	.LLST132
 11031 46d6 67       		.uleb128 0x67
 11032 46d7 98290000 		.long	0x2998
 11033 46db 65       		.uleb128 0x65
 11034 46dc 8D290000 		.long	0x298d
 11035 46e0 00000000 		.long	.LLST133
 11036 46e4 68       		.uleb128 0x68
 11037 46e5 00000000 		.quad	.LVL185
 11037      00000000 
 11038 46ed ED2B0000 		.long	0x2bed
GAS LISTING /tmp/ccrWPnlb.s 			page 271


 11039 46f1 69       		.uleb128 0x69
 11040 46f2 01       		.uleb128 0x1
 11041 46f3 55       		.byte	0x55
 11042 46f4 09       		.uleb128 0x9
 11043 46f5 03       		.byte	0x3
 11044 46f6 00000000 		.quad	.LC44
 11044      00000000 
 11045 46fe 69       		.uleb128 0x69
 11046 46ff 01       		.uleb128 0x1
 11047 4700 54       		.byte	0x54
 11048 4701 03       		.uleb128 0x3
 11049 4702 0A       		.byte	0xa
 11050 4703 0001     		.value	0x100
 11051 4705 00       		.byte	0
 11052 4706 00       		.byte	0
 11053 4707 73       		.uleb128 0x73
 11054 4708 00000000 		.quad	.LVL167
 11054      00000000 
 11055 4710 95540000 		.long	0x5495
 11056 4714 2B470000 		.long	0x472b
 11057 4718 69       		.uleb128 0x69
 11058 4719 01       		.uleb128 0x1
 11059 471a 55       		.byte	0x55
 11060 471b 01       		.uleb128 0x1
 11061 471c 31       		.byte	0x31
 11062 471d 69       		.uleb128 0x69
 11063 471e 01       		.uleb128 0x1
 11064 471f 54       		.byte	0x54
 11065 4720 09       		.uleb128 0x9
 11066 4721 03       		.byte	0x3
 11067 4722 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvENUlfE_4_FUNEf
 11067      00000000 
 11068 472a 00       		.byte	0
 11069 472b 73       		.uleb128 0x73
 11070 472c 00000000 		.quad	.LVL169
 11070      00000000 
 11071 4734 95540000 		.long	0x5495
 11072 4738 4F470000 		.long	0x474f
 11073 473c 69       		.uleb128 0x69
 11074 473d 01       		.uleb128 0x1
 11075 473e 55       		.byte	0x55
 11076 473f 01       		.uleb128 0x1
 11077 4740 31       		.byte	0x31
 11078 4741 69       		.uleb128 0x69
 11079 4742 01       		.uleb128 0x1
 11080 4743 54       		.byte	0x54
 11081 4744 09       		.uleb128 0x9
 11082 4745 03       		.byte	0x3
 11083 4746 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvENUlfE0_4_FUNEf
 11083      00000000 
 11084 474e 00       		.byte	0
 11085 474f 73       		.uleb128 0x73
 11086 4750 00000000 		.quad	.LVL171
 11086      00000000 
 11087 4758 95540000 		.long	0x5495
 11088 475c 73470000 		.long	0x4773
 11089 4760 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 272


 11090 4761 01       		.uleb128 0x1
 11091 4762 55       		.byte	0x55
 11092 4763 01       		.uleb128 0x1
 11093 4764 31       		.byte	0x31
 11094 4765 69       		.uleb128 0x69
 11095 4766 01       		.uleb128 0x1
 11096 4767 54       		.byte	0x54
 11097 4768 09       		.uleb128 0x9
 11098 4769 03       		.byte	0x3
 11099 476a 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvENUlfE1_4_FUNEf
 11099      00000000 
 11100 4772 00       		.byte	0
 11101 4773 73       		.uleb128 0x73
 11102 4774 00000000 		.quad	.LVL186
 11102      00000000 
 11103 477c 83540000 		.long	0x5483
 11104 4780 8B470000 		.long	0x478b
 11105 4784 69       		.uleb128 0x69
 11106 4785 01       		.uleb128 0x1
 11107 4786 55       		.byte	0x55
 11108 4787 02       		.uleb128 0x2
 11109 4788 7D       		.byte	0x7d
 11110 4789 00       		.sleb128 0
 11111 478a 00       		.byte	0
 11112 478b 73       		.uleb128 0x73
 11113 478c 00000000 		.quad	.LVL187
 11113      00000000 
 11114 4794 83540000 		.long	0x5483
 11115 4798 A3470000 		.long	0x47a3
 11116 479c 69       		.uleb128 0x69
 11117 479d 01       		.uleb128 0x1
 11118 479e 55       		.byte	0x55
 11119 479f 02       		.uleb128 0x2
 11120 47a0 7C       		.byte	0x7c
 11121 47a1 00       		.sleb128 0
 11122 47a2 00       		.byte	0
 11123 47a3 7A       		.uleb128 0x7a
 11124 47a4 00000000 		.quad	.LVL191
 11124      00000000 
 11125 47ac 83540000 		.long	0x5483
 11126 47b0 00       		.byte	0
 11127 47b1 00       		.byte	0
 11128 47b2 8101     		.uleb128 0x81
 11129 47b4 00000000 		.long	.LASF495
 11130 47b8 02       		.byte	0x2
 11131 47b9 0701     		.value	0x107
 11132 47bb 00000000 		.long	.LASF496
 11133 47bf 00000000 		.quad	.LFB1529
 11133      00000000 
 11134 47c7 9B000000 		.quad	.LFE1529-.LFB1529
 11134      00000000 
 11135 47cf 01       		.uleb128 0x1
 11136 47d0 9C       		.byte	0x9c
 11137 47d1 FD480000 		.long	0x48fd
 11138 47d5 76       		.uleb128 0x76
 11139 47d6 00000000 		.long	.Ldebug_ranges0+0x950
 11140 47da 8201     		.uleb128 0x82
GAS LISTING /tmp/ccrWPnlb.s 			page 273


 11141 47dc 00000000 		.long	.LASF454
 11142 47e0 02       		.byte	0x2
 11143 47e1 0901     		.value	0x109
 11144 47e3 FD480000 		.long	0x48fd
 11145 47e7 09       		.uleb128 0x9
 11146 47e8 03       		.byte	0x3
 11147 47e9 00000000 		.quad	_ZZ22test_render_to_nothingvE8expected
 11147      00000000 
 11148 47f1 8301     		.uleb128 0x83
 11149 47f3 686D00   		.string	"hm"
 11150 47f6 02       		.byte	0x2
 11151 47f7 0F01     		.value	0x10f
 11152 47f9 9B280000 		.long	0x289b
 11153 47fd 00000000 		.long	.LLST134
 11154 4801 8401     		.uleb128 0x84
 11155 4803 696D6700 		.string	"img"
 11156 4807 02       		.byte	0x2
 11157 4808 1101     		.value	0x111
 11158 480a FD480000 		.long	0x48fd
 11159 480e 03       		.uleb128 0x3
 11160 480f 91       		.byte	0x91
 11161 4810 B07F     		.sleb128 -80
 11162 4812 6B       		.uleb128 0x6b
 11163 4813 81290000 		.long	0x2981
 11164 4817 00000000 		.quad	.LBB503
 11164      00000000 
 11165 481f 1C000000 		.quad	.LBE503-.LBB503
 11165      00000000 
 11166 4827 02       		.byte	0x2
 11167 4828 1301     		.value	0x113
 11168 482a 82480000 		.long	0x4882
 11169 482e 8501     		.uleb128 0x85
 11170 4830 AE290000 		.long	0x29ae
 11171 4834 1301     		.value	0x113
 11172 4836 63       		.uleb128 0x63
 11173 4837 A3290000 		.long	0x29a3
 11174 483b 0A       		.uleb128 0xa
 11175 483c 03       		.byte	0x3
 11176 483d 00000000 		.quad	.LC7
 11176      00000000 
 11177 4845 9F       		.byte	0x9f
 11178 4846 65       		.uleb128 0x65
 11179 4847 98290000 		.long	0x2998
 11180 484b 00000000 		.long	.LLST135
 11181 484f 63       		.uleb128 0x63
 11182 4850 8D290000 		.long	0x298d
 11183 4854 0A       		.uleb128 0xa
 11184 4855 03       		.byte	0x3
 11185 4856 00000000 		.quad	.LC46
 11185      00000000 
 11186 485e 9F       		.byte	0x9f
 11187 485f 68       		.uleb128 0x68
 11188 4860 00000000 		.quad	.LVL200
 11188      00000000 
 11189 4868 ED2B0000 		.long	0x2bed
 11190 486c 69       		.uleb128 0x69
 11191 486d 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 274


 11192 486e 55       		.byte	0x55
 11193 486f 09       		.uleb128 0x9
 11194 4870 03       		.byte	0x3
 11195 4871 00000000 		.quad	.LC46
 11195      00000000 
 11196 4879 69       		.uleb128 0x69
 11197 487a 01       		.uleb128 0x1
 11198 487b 54       		.byte	0x54
 11199 487c 03       		.uleb128 0x3
 11200 487d 0A       		.byte	0xa
 11201 487e 1301     		.value	0x113
 11202 4880 00       		.byte	0
 11203 4881 00       		.byte	0
 11204 4882 73       		.uleb128 0x73
 11205 4883 00000000 		.quad	.LVL195
 11205      00000000 
 11206 488b F0530000 		.long	0x53f0
 11207 488f 9E480000 		.long	0x489e
 11208 4893 69       		.uleb128 0x69
 11209 4894 01       		.uleb128 0x1
 11210 4895 55       		.byte	0x55
 11211 4896 01       		.uleb128 0x1
 11212 4897 33       		.byte	0x33
 11213 4898 69       		.uleb128 0x69
 11214 4899 01       		.uleb128 0x1
 11215 489a 54       		.byte	0x54
 11216 489b 01       		.uleb128 0x1
 11217 489c 33       		.byte	0x33
 11218 489d 00       		.byte	0
 11219 489e 73       		.uleb128 0x73
 11220 489f 00000000 		.quad	.LVL198
 11220      00000000 
 11221 48a7 AF540000 		.long	0x54af
 11222 48ab BC480000 		.long	0x48bc
 11223 48af 69       		.uleb128 0x69
 11224 48b0 01       		.uleb128 0x1
 11225 48b1 55       		.byte	0x55
 11226 48b2 02       		.uleb128 0x2
 11227 48b3 73       		.byte	0x73
 11228 48b4 00       		.sleb128 0
 11229 48b5 69       		.uleb128 0x69
 11230 48b6 01       		.uleb128 0x1
 11231 48b7 51       		.byte	0x51
 11232 48b8 02       		.uleb128 0x2
 11233 48b9 77       		.byte	0x77
 11234 48ba 00       		.sleb128 0
 11235 48bb 00       		.byte	0
 11236 48bc 73       		.uleb128 0x73
 11237 48bd 00000000 		.quad	.LVL199
 11237      00000000 
 11238 48c5 D1530000 		.long	0x53d1
 11239 48c9 E7480000 		.long	0x48e7
 11240 48cd 69       		.uleb128 0x69
 11241 48ce 01       		.uleb128 0x1
 11242 48cf 55       		.byte	0x55
 11243 48d0 02       		.uleb128 0x2
 11244 48d1 77       		.byte	0x77
GAS LISTING /tmp/ccrWPnlb.s 			page 275


 11245 48d2 00       		.sleb128 0
 11246 48d3 69       		.uleb128 0x69
 11247 48d4 01       		.uleb128 0x1
 11248 48d5 54       		.byte	0x54
 11249 48d6 09       		.uleb128 0x9
 11250 48d7 03       		.byte	0x3
 11251 48d8 00000000 		.quad	_ZZ22test_render_to_nothingvE8expected
 11251      00000000 
 11252 48e0 69       		.uleb128 0x69
 11253 48e1 01       		.uleb128 0x1
 11254 48e2 51       		.byte	0x51
 11255 48e3 02       		.uleb128 0x2
 11256 48e4 08       		.byte	0x8
 11257 48e5 24       		.byte	0x24
 11258 48e6 00       		.byte	0
 11259 48e7 68       		.uleb128 0x68
 11260 48e8 00000000 		.quad	.LVL201
 11260      00000000 
 11261 48f0 0A540000 		.long	0x540a
 11262 48f4 69       		.uleb128 0x69
 11263 48f5 01       		.uleb128 0x1
 11264 48f6 55       		.byte	0x55
 11265 48f7 02       		.uleb128 0x2
 11266 48f8 73       		.byte	0x73
 11267 48f9 00       		.sleb128 0
 11268 48fa 00       		.byte	0
 11269 48fb 00       		.byte	0
 11270 48fc 00       		.byte	0
 11271 48fd 0D       		.uleb128 0xd
 11272 48fe B91C0000 		.long	0x1cb9
 11273 4902 0D490000 		.long	0x490d
 11274 4906 0E       		.uleb128 0xe
 11275 4907 CD010000 		.long	0x1cd
 11276 490b 23       		.byte	0x23
 11277 490c 00       		.byte	0
 11278 490d 8101     		.uleb128 0x81
 11279 490f 00000000 		.long	.LASF497
 11280 4913 02       		.byte	0x2
 11281 4914 1801     		.value	0x118
 11282 4916 00000000 		.long	.LASF498
 11283 491a 00000000 		.quad	.LFB1530
 11283      00000000 
 11284 4922 8E000000 		.quad	.LFE1530-.LFB1530
 11284      00000000 
 11285 492a 01       		.uleb128 0x1
 11286 492b 9C       		.byte	0x9c
 11287 492c 974A0000 		.long	0x4a97
 11288 4930 76       		.uleb128 0x76
 11289 4931 00000000 		.long	.Ldebug_ranges0+0x980
 11290 4935 8201     		.uleb128 0x82
 11291 4937 00000000 		.long	.LASF454
 11292 493b 02       		.byte	0x2
 11293 493c 1A01     		.value	0x11a
 11294 493e FD480000 		.long	0x48fd
 11295 4942 09       		.uleb128 0x9
 11296 4943 03       		.byte	0x3
 11297 4944 00000000 		.quad	_ZZ23test_render_to_creationvE8expected
GAS LISTING /tmp/ccrWPnlb.s 			page 276


 11297      00000000 
 11298 494c 8301     		.uleb128 0x83
 11299 494e 686D00   		.string	"hm"
 11300 4951 02       		.byte	0x2
 11301 4952 2001     		.value	0x120
 11302 4954 9B280000 		.long	0x289b
 11303 4958 00000000 		.long	.LLST136
 11304 495c 8301     		.uleb128 0x83
 11305 495e 696D6700 		.string	"img"
 11306 4962 02       		.byte	0x2
 11307 4963 2301     		.value	0x123
 11308 4965 974A0000 		.long	0x4a97
 11309 4969 00000000 		.long	.LLST137
 11310 496d 6B       		.uleb128 0x6b
 11311 496e 81290000 		.long	0x2981
 11312 4972 00000000 		.quad	.LBB507
 11312      00000000 
 11313 497a 1C000000 		.quad	.LBE507-.LBB507
 11313      00000000 
 11314 4982 02       		.byte	0x2
 11315 4983 2501     		.value	0x125
 11316 4985 DD490000 		.long	0x49dd
 11317 4989 8501     		.uleb128 0x85
 11318 498b AE290000 		.long	0x29ae
 11319 498f 2501     		.value	0x125
 11320 4991 63       		.uleb128 0x63
 11321 4992 A3290000 		.long	0x29a3
 11322 4996 0A       		.uleb128 0xa
 11323 4997 03       		.byte	0x3
 11324 4998 00000000 		.quad	.LC7
 11324      00000000 
 11325 49a0 9F       		.byte	0x9f
 11326 49a1 65       		.uleb128 0x65
 11327 49a2 98290000 		.long	0x2998
 11328 49a6 00000000 		.long	.LLST138
 11329 49aa 63       		.uleb128 0x63
 11330 49ab 8D290000 		.long	0x298d
 11331 49af 0A       		.uleb128 0xa
 11332 49b0 03       		.byte	0x3
 11333 49b1 00000000 		.quad	.LC48
 11333      00000000 
 11334 49b9 9F       		.byte	0x9f
 11335 49ba 68       		.uleb128 0x68
 11336 49bb 00000000 		.quad	.LVL209
 11336      00000000 
 11337 49c3 ED2B0000 		.long	0x2bed
 11338 49c7 69       		.uleb128 0x69
 11339 49c8 01       		.uleb128 0x1
 11340 49c9 55       		.byte	0x55
 11341 49ca 09       		.uleb128 0x9
 11342 49cb 03       		.byte	0x3
 11343 49cc 00000000 		.quad	.LC48
 11343      00000000 
 11344 49d4 69       		.uleb128 0x69
 11345 49d5 01       		.uleb128 0x1
 11346 49d6 54       		.byte	0x54
 11347 49d7 03       		.uleb128 0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 277


 11348 49d8 0A       		.byte	0xa
 11349 49d9 2501     		.value	0x125
 11350 49db 00       		.byte	0
 11351 49dc 00       		.byte	0
 11352 49dd 73       		.uleb128 0x73
 11353 49de 00000000 		.quad	.LVL203
 11353      00000000 
 11354 49e6 F0530000 		.long	0x53f0
 11355 49ea F9490000 		.long	0x49f9
 11356 49ee 69       		.uleb128 0x69
 11357 49ef 01       		.uleb128 0x1
 11358 49f0 55       		.byte	0x55
 11359 49f1 01       		.uleb128 0x1
 11360 49f2 33       		.byte	0x33
 11361 49f3 69       		.uleb128 0x69
 11362 49f4 01       		.uleb128 0x1
 11363 49f5 54       		.byte	0x54
 11364 49f6 01       		.uleb128 0x1
 11365 49f7 33       		.byte	0x33
 11366 49f8 00       		.byte	0
 11367 49f9 73       		.uleb128 0x73
 11368 49fa 00000000 		.quad	.LVL205
 11368      00000000 
 11369 4a02 1C540000 		.long	0x541c
 11370 4a06 284A0000 		.long	0x4a28
 11371 4a0a 69       		.uleb128 0x69
 11372 4a0b 01       		.uleb128 0x1
 11373 4a0c 55       		.byte	0x55
 11374 4a0d 02       		.uleb128 0x2
 11375 4a0e 73       		.byte	0x73
 11376 4a0f 00       		.sleb128 0
 11377 4a10 69       		.uleb128 0x69
 11378 4a11 01       		.uleb128 0x1
 11379 4a12 54       		.byte	0x54
 11380 4a13 01       		.uleb128 0x1
 11381 4a14 31       		.byte	0x31
 11382 4a15 69       		.uleb128 0x69
 11383 4a16 01       		.uleb128 0x1
 11384 4a17 51       		.byte	0x51
 11385 4a18 01       		.uleb128 0x1
 11386 4a19 31       		.byte	0x31
 11387 4a1a 69       		.uleb128 0x69
 11388 4a1b 01       		.uleb128 0x1
 11389 4a1c 52       		.byte	0x52
 11390 4a1d 09       		.uleb128 0x9
 11391 4a1e 03       		.byte	0x3
 11392 4a1f 00000000 		.quad	_ZL11g_3x3_stamp
 11392      00000000 
 11393 4a27 00       		.byte	0
 11394 4a28 73       		.uleb128 0x73
 11395 4a29 00000000 		.quad	.LVL206
 11395      00000000 
 11396 4a31 AF540000 		.long	0x54af
 11397 4a35 454A0000 		.long	0x4a45
 11398 4a39 69       		.uleb128 0x69
 11399 4a3a 01       		.uleb128 0x1
 11400 4a3b 55       		.byte	0x55
GAS LISTING /tmp/ccrWPnlb.s 			page 278


 11401 4a3c 02       		.uleb128 0x2
 11402 4a3d 73       		.byte	0x73
 11403 4a3e 00       		.sleb128 0
 11404 4a3f 69       		.uleb128 0x69
 11405 4a40 01       		.uleb128 0x1
 11406 4a41 51       		.byte	0x51
 11407 4a42 01       		.uleb128 0x1
 11408 4a43 30       		.byte	0x30
 11409 4a44 00       		.byte	0
 11410 4a45 73       		.uleb128 0x73
 11411 4a46 00000000 		.quad	.LVL208
 11411      00000000 
 11412 4a4e D1530000 		.long	0x53d1
 11413 4a52 704A0000 		.long	0x4a70
 11414 4a56 69       		.uleb128 0x69
 11415 4a57 01       		.uleb128 0x1
 11416 4a58 55       		.byte	0x55
 11417 4a59 02       		.uleb128 0x2
 11418 4a5a 76       		.byte	0x76
 11419 4a5b 00       		.sleb128 0
 11420 4a5c 69       		.uleb128 0x69
 11421 4a5d 01       		.uleb128 0x1
 11422 4a5e 54       		.byte	0x54
 11423 4a5f 09       		.uleb128 0x9
 11424 4a60 03       		.byte	0x3
 11425 4a61 00000000 		.quad	_ZZ23test_render_to_creationvE8expected
 11425      00000000 
 11426 4a69 69       		.uleb128 0x69
 11427 4a6a 01       		.uleb128 0x1
 11428 4a6b 51       		.byte	0x51
 11429 4a6c 02       		.uleb128 0x2
 11430 4a6d 08       		.byte	0x8
 11431 4a6e 24       		.byte	0x24
 11432 4a6f 00       		.byte	0
 11433 4a70 73       		.uleb128 0x73
 11434 4a71 00000000 		.quad	.LVL210
 11434      00000000 
 11435 4a79 0A540000 		.long	0x540a
 11436 4a7d 884A0000 		.long	0x4a88
 11437 4a81 69       		.uleb128 0x69
 11438 4a82 01       		.uleb128 0x1
 11439 4a83 55       		.byte	0x55
 11440 4a84 02       		.uleb128 0x2
 11441 4a85 73       		.byte	0x73
 11442 4a86 00       		.sleb128 0
 11443 4a87 00       		.byte	0
 11444 4a88 7A       		.uleb128 0x7a
 11445 4a89 00000000 		.quad	.LVL213
 11445      00000000 
 11446 4a91 D9540000 		.long	0x54d9
 11447 4a95 00       		.byte	0
 11448 4a96 00       		.byte	0
 11449 4a97 11       		.uleb128 0x11
 11450 4a98 08       		.byte	0x8
 11451 4a99 B91C0000 		.long	0x1cb9
 11452 4a9d 8101     		.uleb128 0x81
 11453 4a9f 00000000 		.long	.LASF499
GAS LISTING /tmp/ccrWPnlb.s 			page 279


 11454 4aa3 02       		.byte	0x2
 11455 4aa4 2B01     		.value	0x12b
 11456 4aa6 00000000 		.long	.LASF500
 11457 4aaa 00000000 		.quad	.LFB1531
 11457      00000000 
 11458 4ab2 1E010000 		.quad	.LFE1531-.LFB1531
 11458      00000000 
 11459 4aba 01       		.uleb128 0x1
 11460 4abb 9C       		.byte	0x9c
 11461 4abc EE4C0000 		.long	0x4cee
 11462 4ac0 76       		.uleb128 0x76
 11463 4ac1 00000000 		.long	.Ldebug_ranges0+0x9d0
 11464 4ac5 8201     		.uleb128 0x82
 11465 4ac7 00000000 		.long	.LASF454
 11466 4acb 02       		.byte	0x2
 11467 4acc 2D01     		.value	0x12d
 11468 4ace FD480000 		.long	0x48fd
 11469 4ad2 09       		.uleb128 0x9
 11470 4ad3 03       		.byte	0x3
 11471 4ad4 00000000 		.quad	_ZZ26test_render_to_normalizingvE8expected
 11471      00000000 
 11472 4adc 8301     		.uleb128 0x83
 11473 4ade 686D00   		.string	"hm"
 11474 4ae1 02       		.byte	0x2
 11475 4ae2 3301     		.value	0x133
 11476 4ae4 9B280000 		.long	0x289b
 11477 4ae8 00000000 		.long	.LLST139
 11478 4aec 8401     		.uleb128 0x84
 11479 4aee 696D6700 		.string	"img"
 11480 4af2 02       		.byte	0x2
 11481 4af3 3601     		.value	0x136
 11482 4af5 FD480000 		.long	0x48fd
 11483 4af9 03       		.uleb128 0x3
 11484 4afa 91       		.byte	0x91
 11485 4afb B07F     		.sleb128 -80
 11486 4afd 70       		.uleb128 0x70
 11487 4afe 81290000 		.long	0x2981
 11488 4b02 00000000 		.quad	.LBB513
 11488      00000000 
 11489 4b0a 00000000 		.long	.Ldebug_ranges0+0xa20
 11490 4b0e 02       		.byte	0x2
 11491 4b0f 3901     		.value	0x139
 11492 4b11 694B0000 		.long	0x4b69
 11493 4b15 8501     		.uleb128 0x85
 11494 4b17 AE290000 		.long	0x29ae
 11495 4b1b 3901     		.value	0x139
 11496 4b1d 63       		.uleb128 0x63
 11497 4b1e A3290000 		.long	0x29a3
 11498 4b22 0A       		.uleb128 0xa
 11499 4b23 03       		.byte	0x3
 11500 4b24 00000000 		.quad	.LC7
 11500      00000000 
 11501 4b2c 9F       		.byte	0x9f
 11502 4b2d 65       		.uleb128 0x65
 11503 4b2e 98290000 		.long	0x2998
 11504 4b32 00000000 		.long	.LLST140
 11505 4b36 63       		.uleb128 0x63
GAS LISTING /tmp/ccrWPnlb.s 			page 280


 11506 4b37 8D290000 		.long	0x298d
 11507 4b3b 0A       		.uleb128 0xa
 11508 4b3c 03       		.byte	0x3
 11509 4b3d 00000000 		.quad	.LC48
 11509      00000000 
 11510 4b45 9F       		.byte	0x9f
 11511 4b46 68       		.uleb128 0x68
 11512 4b47 00000000 		.quad	.LVL227
 11512      00000000 
 11513 4b4f ED2B0000 		.long	0x2bed
 11514 4b53 69       		.uleb128 0x69
 11515 4b54 01       		.uleb128 0x1
 11516 4b55 55       		.byte	0x55
 11517 4b56 09       		.uleb128 0x9
 11518 4b57 03       		.byte	0x3
 11519 4b58 00000000 		.quad	.LC48
 11519      00000000 
 11520 4b60 69       		.uleb128 0x69
 11521 4b61 01       		.uleb128 0x1
 11522 4b62 54       		.byte	0x54
 11523 4b63 03       		.uleb128 0x3
 11524 4b64 0A       		.byte	0xa
 11525 4b65 3901     		.value	0x139
 11526 4b67 00       		.byte	0
 11527 4b68 00       		.byte	0
 11528 4b69 6B       		.uleb128 0x6b
 11529 4b6a 81290000 		.long	0x2981
 11530 4b6e 00000000 		.quad	.LBB516
 11530      00000000 
 11531 4b76 1C000000 		.quad	.LBE516-.LBB516
 11531      00000000 
 11532 4b7e 02       		.byte	0x2
 11533 4b7f 3E01     		.value	0x13e
 11534 4b81 CC4B0000 		.long	0x4bcc
 11535 4b85 65       		.uleb128 0x65
 11536 4b86 AE290000 		.long	0x29ae
 11537 4b8a 00000000 		.long	.LLST141
 11538 4b8e 65       		.uleb128 0x65
 11539 4b8f A3290000 		.long	0x29a3
 11540 4b93 00000000 		.long	.LLST142
 11541 4b97 65       		.uleb128 0x65
 11542 4b98 98290000 		.long	0x2998
 11543 4b9c 00000000 		.long	.LLST143
 11544 4ba0 65       		.uleb128 0x65
 11545 4ba1 8D290000 		.long	0x298d
 11546 4ba5 00000000 		.long	.LLST144
 11547 4ba9 68       		.uleb128 0x68
 11548 4baa 00000000 		.quad	.LVL223
 11548      00000000 
 11549 4bb2 ED2B0000 		.long	0x2bed
 11550 4bb6 69       		.uleb128 0x69
 11551 4bb7 01       		.uleb128 0x1
 11552 4bb8 55       		.byte	0x55
 11553 4bb9 09       		.uleb128 0x9
 11554 4bba 03       		.byte	0x3
 11555 4bbb 00000000 		.quad	.LC50
 11555      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 281


 11556 4bc3 69       		.uleb128 0x69
 11557 4bc4 01       		.uleb128 0x1
 11558 4bc5 54       		.byte	0x54
 11559 4bc6 03       		.uleb128 0x3
 11560 4bc7 0A       		.byte	0xa
 11561 4bc8 3E01     		.value	0x13e
 11562 4bca 00       		.byte	0
 11563 4bcb 00       		.byte	0
 11564 4bcc 73       		.uleb128 0x73
 11565 4bcd 00000000 		.quad	.LVL214
 11565      00000000 
 11566 4bd5 F0530000 		.long	0x53f0
 11567 4bd9 E84B0000 		.long	0x4be8
 11568 4bdd 69       		.uleb128 0x69
 11569 4bde 01       		.uleb128 0x1
 11570 4bdf 55       		.byte	0x55
 11571 4be0 01       		.uleb128 0x1
 11572 4be1 33       		.byte	0x33
 11573 4be2 69       		.uleb128 0x69
 11574 4be3 01       		.uleb128 0x1
 11575 4be4 54       		.byte	0x54
 11576 4be5 01       		.uleb128 0x1
 11577 4be6 33       		.byte	0x33
 11578 4be7 00       		.byte	0
 11579 4be8 73       		.uleb128 0x73
 11580 4be9 00000000 		.quad	.LVL216
 11580      00000000 
 11581 4bf1 1C540000 		.long	0x541c
 11582 4bf5 174C0000 		.long	0x4c17
 11583 4bf9 69       		.uleb128 0x69
 11584 4bfa 01       		.uleb128 0x1
 11585 4bfb 55       		.byte	0x55
 11586 4bfc 02       		.uleb128 0x2
 11587 4bfd 73       		.byte	0x73
 11588 4bfe 00       		.sleb128 0
 11589 4bff 69       		.uleb128 0x69
 11590 4c00 01       		.uleb128 0x1
 11591 4c01 54       		.byte	0x54
 11592 4c02 01       		.uleb128 0x1
 11593 4c03 31       		.byte	0x31
 11594 4c04 69       		.uleb128 0x69
 11595 4c05 01       		.uleb128 0x1
 11596 4c06 51       		.byte	0x51
 11597 4c07 01       		.uleb128 0x1
 11598 4c08 31       		.byte	0x31
 11599 4c09 69       		.uleb128 0x69
 11600 4c0a 01       		.uleb128 0x1
 11601 4c0b 52       		.byte	0x52
 11602 4c0c 09       		.uleb128 0x9
 11603 4c0d 03       		.byte	0x3
 11604 4c0e 00000000 		.quad	_ZL11g_3x3_stamp
 11604      00000000 
 11605 4c16 00       		.byte	0
 11606 4c17 73       		.uleb128 0x73
 11607 4c18 00000000 		.quad	.LVL217
 11607      00000000 
 11608 4c20 AF540000 		.long	0x54af
GAS LISTING /tmp/ccrWPnlb.s 			page 282


 11609 4c24 354C0000 		.long	0x4c35
 11610 4c28 69       		.uleb128 0x69
 11611 4c29 01       		.uleb128 0x1
 11612 4c2a 55       		.byte	0x55
 11613 4c2b 02       		.uleb128 0x2
 11614 4c2c 73       		.byte	0x73
 11615 4c2d 00       		.sleb128 0
 11616 4c2e 69       		.uleb128 0x69
 11617 4c2f 01       		.uleb128 0x1
 11618 4c30 51       		.byte	0x51
 11619 4c31 02       		.uleb128 0x2
 11620 4c32 76       		.byte	0x76
 11621 4c33 00       		.sleb128 0
 11622 4c34 00       		.byte	0
 11623 4c35 73       		.uleb128 0x73
 11624 4c36 00000000 		.quad	.LVL218
 11624      00000000 
 11625 4c3e D1530000 		.long	0x53d1
 11626 4c42 604C0000 		.long	0x4c60
 11627 4c46 69       		.uleb128 0x69
 11628 4c47 01       		.uleb128 0x1
 11629 4c48 55       		.byte	0x55
 11630 4c49 02       		.uleb128 0x2
 11631 4c4a 76       		.byte	0x76
 11632 4c4b 00       		.sleb128 0
 11633 4c4c 69       		.uleb128 0x69
 11634 4c4d 01       		.uleb128 0x1
 11635 4c4e 54       		.byte	0x54
 11636 4c4f 09       		.uleb128 0x9
 11637 4c50 03       		.byte	0x3
 11638 4c51 00000000 		.quad	_ZZ26test_render_to_normalizingvE8expected
 11638      00000000 
 11639 4c59 69       		.uleb128 0x69
 11640 4c5a 01       		.uleb128 0x1
 11641 4c5b 51       		.byte	0x51
 11642 4c5c 02       		.uleb128 0x2
 11643 4c5d 08       		.byte	0x8
 11644 4c5e 24       		.byte	0x24
 11645 4c5f 00       		.byte	0
 11646 4c60 73       		.uleb128 0x73
 11647 4c61 00000000 		.quad	.LVL220
 11647      00000000 
 11648 4c69 1C540000 		.long	0x541c
 11649 4c6d 8F4C0000 		.long	0x4c8f
 11650 4c71 69       		.uleb128 0x69
 11651 4c72 01       		.uleb128 0x1
 11652 4c73 55       		.byte	0x55
 11653 4c74 02       		.uleb128 0x2
 11654 4c75 73       		.byte	0x73
 11655 4c76 00       		.sleb128 0
 11656 4c77 69       		.uleb128 0x69
 11657 4c78 01       		.uleb128 0x1
 11658 4c79 54       		.byte	0x54
 11659 4c7a 01       		.uleb128 0x1
 11660 4c7b 31       		.byte	0x31
 11661 4c7c 69       		.uleb128 0x69
 11662 4c7d 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 283


 11663 4c7e 51       		.byte	0x51
 11664 4c7f 01       		.uleb128 0x1
 11665 4c80 31       		.byte	0x31
 11666 4c81 69       		.uleb128 0x69
 11667 4c82 01       		.uleb128 0x1
 11668 4c83 52       		.byte	0x52
 11669 4c84 09       		.uleb128 0x9
 11670 4c85 03       		.byte	0x3
 11671 4c86 00000000 		.quad	_ZL11g_3x3_stamp
 11671      00000000 
 11672 4c8e 00       		.byte	0
 11673 4c8f 73       		.uleb128 0x73
 11674 4c90 00000000 		.quad	.LVL221
 11674      00000000 
 11675 4c98 AF540000 		.long	0x54af
 11676 4c9c AD4C0000 		.long	0x4cad
 11677 4ca0 69       		.uleb128 0x69
 11678 4ca1 01       		.uleb128 0x1
 11679 4ca2 55       		.byte	0x55
 11680 4ca3 02       		.uleb128 0x2
 11681 4ca4 73       		.byte	0x73
 11682 4ca5 00       		.sleb128 0
 11683 4ca6 69       		.uleb128 0x69
 11684 4ca7 01       		.uleb128 0x1
 11685 4ca8 51       		.byte	0x51
 11686 4ca9 02       		.uleb128 0x2
 11687 4caa 76       		.byte	0x76
 11688 4cab 00       		.sleb128 0
 11689 4cac 00       		.byte	0
 11690 4cad 73       		.uleb128 0x73
 11691 4cae 00000000 		.quad	.LVL222
 11691      00000000 
 11692 4cb6 D1530000 		.long	0x53d1
 11693 4cba D84C0000 		.long	0x4cd8
 11694 4cbe 69       		.uleb128 0x69
 11695 4cbf 01       		.uleb128 0x1
 11696 4cc0 55       		.byte	0x55
 11697 4cc1 02       		.uleb128 0x2
 11698 4cc2 76       		.byte	0x76
 11699 4cc3 00       		.sleb128 0
 11700 4cc4 69       		.uleb128 0x69
 11701 4cc5 01       		.uleb128 0x1
 11702 4cc6 54       		.byte	0x54
 11703 4cc7 09       		.uleb128 0x9
 11704 4cc8 03       		.byte	0x3
 11705 4cc9 00000000 		.quad	_ZZ26test_render_to_normalizingvE8expected
 11705      00000000 
 11706 4cd1 69       		.uleb128 0x69
 11707 4cd2 01       		.uleb128 0x1
 11708 4cd3 51       		.byte	0x51
 11709 4cd4 02       		.uleb128 0x2
 11710 4cd5 08       		.byte	0x8
 11711 4cd6 24       		.byte	0x24
 11712 4cd7 00       		.byte	0
 11713 4cd8 68       		.uleb128 0x68
 11714 4cd9 00000000 		.quad	.LVL224
 11714      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 284


 11715 4ce1 0A540000 		.long	0x540a
 11716 4ce5 69       		.uleb128 0x69
 11717 4ce6 01       		.uleb128 0x1
 11718 4ce7 55       		.byte	0x55
 11719 4ce8 02       		.uleb128 0x2
 11720 4ce9 73       		.byte	0x73
 11721 4cea 00       		.sleb128 0
 11722 4ceb 00       		.byte	0
 11723 4cec 00       		.byte	0
 11724 4ced 00       		.byte	0
 11725 4cee 8101     		.uleb128 0x81
 11726 4cf0 00000000 		.long	.LASF501
 11727 4cf4 02       		.byte	0x2
 11728 4cf5 4401     		.value	0x144
 11729 4cf7 00000000 		.long	.LASF502
 11730 4cfb 00000000 		.quad	.LFB1532
 11730      00000000 
 11731 4d03 43010000 		.quad	.LFE1532-.LFB1532
 11731      00000000 
 11732 4d0b 01       		.uleb128 0x1
 11733 4d0c 9C       		.byte	0x9c
 11734 4d0d 9B4F0000 		.long	0x4f9b
 11735 4d11 76       		.uleb128 0x76
 11736 4d12 00000000 		.long	.Ldebug_ranges0+0xa50
 11737 4d16 8201     		.uleb128 0x82
 11738 4d18 00000000 		.long	.LASF503
 11739 4d1c 02       		.byte	0x2
 11740 4d1d 4601     		.value	0x146
 11741 4d1f FD480000 		.long	0x48fd
 11742 4d23 09       		.uleb128 0x9
 11743 4d24 03       		.byte	0x3
 11744 4d25 00000000 		.quad	_ZZ25test_render_to_saturatingvE9expected1
 11744      00000000 
 11745 4d2d 8201     		.uleb128 0x82
 11746 4d2f 00000000 		.long	.LASF504
 11747 4d33 02       		.byte	0x2
 11748 4d34 4C01     		.value	0x14c
 11749 4d36 FD480000 		.long	0x48fd
 11750 4d3a 09       		.uleb128 0x9
 11751 4d3b 03       		.byte	0x3
 11752 4d3c 00000000 		.quad	_ZZ25test_render_to_saturatingvE9expected2
 11752      00000000 
 11753 4d44 8301     		.uleb128 0x83
 11754 4d46 686D00   		.string	"hm"
 11755 4d49 02       		.byte	0x2
 11756 4d4a 5201     		.value	0x152
 11757 4d4c 9B280000 		.long	0x289b
 11758 4d50 00000000 		.long	.LLST145
 11759 4d54 8401     		.uleb128 0x84
 11760 4d56 696D6700 		.string	"img"
 11761 4d5a 02       		.byte	0x2
 11762 4d5b 5701     		.value	0x157
 11763 4d5d FD480000 		.long	0x48fd
 11764 4d61 03       		.uleb128 0x3
 11765 4d62 91       		.byte	0x91
 11766 4d63 B07F     		.sleb128 -80
 11767 4d65 70       		.uleb128 0x70
GAS LISTING /tmp/ccrWPnlb.s 			page 285


 11768 4d66 81290000 		.long	0x2981
 11769 4d6a 00000000 		.quad	.LBB523
 11769      00000000 
 11770 4d72 00000000 		.long	.Ldebug_ranges0+0xaa0
 11771 4d76 02       		.byte	0x2
 11772 4d77 5901     		.value	0x159
 11773 4d79 D14D0000 		.long	0x4dd1
 11774 4d7d 8501     		.uleb128 0x85
 11775 4d7f AE290000 		.long	0x29ae
 11776 4d83 5901     		.value	0x159
 11777 4d85 63       		.uleb128 0x63
 11778 4d86 A3290000 		.long	0x29a3
 11779 4d8a 0A       		.uleb128 0xa
 11780 4d8b 03       		.byte	0x3
 11781 4d8c 00000000 		.quad	.LC7
 11781      00000000 
 11782 4d94 9F       		.byte	0x9f
 11783 4d95 65       		.uleb128 0x65
 11784 4d96 98290000 		.long	0x2998
 11785 4d9a 00000000 		.long	.LLST146
 11786 4d9e 63       		.uleb128 0x63
 11787 4d9f 8D290000 		.long	0x298d
 11788 4da3 0A       		.uleb128 0xa
 11789 4da4 03       		.byte	0x3
 11790 4da5 00000000 		.quad	.LC52
 11790      00000000 
 11791 4dad 9F       		.byte	0x9f
 11792 4dae 68       		.uleb128 0x68
 11793 4daf 00000000 		.quad	.LVL242
 11793      00000000 
 11794 4db7 ED2B0000 		.long	0x2bed
 11795 4dbb 69       		.uleb128 0x69
 11796 4dbc 01       		.uleb128 0x1
 11797 4dbd 55       		.byte	0x55
 11798 4dbe 09       		.uleb128 0x9
 11799 4dbf 03       		.byte	0x3
 11800 4dc0 00000000 		.quad	.LC52
 11800      00000000 
 11801 4dc8 69       		.uleb128 0x69
 11802 4dc9 01       		.uleb128 0x1
 11803 4dca 54       		.byte	0x54
 11804 4dcb 03       		.uleb128 0x3
 11805 4dcc 0A       		.byte	0xa
 11806 4dcd 5901     		.value	0x159
 11807 4dcf 00       		.byte	0
 11808 4dd0 00       		.byte	0
 11809 4dd1 6B       		.uleb128 0x6b
 11810 4dd2 81290000 		.long	0x2981
 11811 4dd6 00000000 		.quad	.LBB526
 11811      00000000 
 11812 4dde 1C000000 		.quad	.LBE526-.LBB526
 11812      00000000 
 11813 4de6 02       		.byte	0x2
 11814 4de7 5C01     		.value	0x15c
 11815 4de9 344E0000 		.long	0x4e34
 11816 4ded 65       		.uleb128 0x65
 11817 4dee AE290000 		.long	0x29ae
GAS LISTING /tmp/ccrWPnlb.s 			page 286


 11818 4df2 00000000 		.long	.LLST147
 11819 4df6 65       		.uleb128 0x65
 11820 4df7 A3290000 		.long	0x29a3
 11821 4dfb 00000000 		.long	.LLST148
 11822 4dff 65       		.uleb128 0x65
 11823 4e00 98290000 		.long	0x2998
 11824 4e04 00000000 		.long	.LLST149
 11825 4e08 65       		.uleb128 0x65
 11826 4e09 8D290000 		.long	0x298d
 11827 4e0d 00000000 		.long	.LLST150
 11828 4e11 68       		.uleb128 0x68
 11829 4e12 00000000 		.quad	.LVL238
 11829      00000000 
 11830 4e1a ED2B0000 		.long	0x2bed
 11831 4e1e 69       		.uleb128 0x69
 11832 4e1f 01       		.uleb128 0x1
 11833 4e20 55       		.byte	0x55
 11834 4e21 09       		.uleb128 0x9
 11835 4e22 03       		.byte	0x3
 11836 4e23 00000000 		.quad	.LC53
 11836      00000000 
 11837 4e2b 69       		.uleb128 0x69
 11838 4e2c 01       		.uleb128 0x1
 11839 4e2d 54       		.byte	0x54
 11840 4e2e 03       		.uleb128 0x3
 11841 4e2f 0A       		.byte	0xa
 11842 4e30 5C01     		.value	0x15c
 11843 4e32 00       		.byte	0
 11844 4e33 00       		.byte	0
 11845 4e34 73       		.uleb128 0x73
 11846 4e35 00000000 		.quad	.LVL228
 11846      00000000 
 11847 4e3d F0530000 		.long	0x53f0
 11848 4e41 504E0000 		.long	0x4e50
 11849 4e45 69       		.uleb128 0x69
 11850 4e46 01       		.uleb128 0x1
 11851 4e47 55       		.byte	0x55
 11852 4e48 01       		.uleb128 0x1
 11853 4e49 33       		.byte	0x33
 11854 4e4a 69       		.uleb128 0x69
 11855 4e4b 01       		.uleb128 0x1
 11856 4e4c 54       		.byte	0x54
 11857 4e4d 01       		.uleb128 0x1
 11858 4e4e 33       		.byte	0x33
 11859 4e4f 00       		.byte	0
 11860 4e50 73       		.uleb128 0x73
 11861 4e51 00000000 		.quad	.LVL230
 11861      00000000 
 11862 4e59 1C540000 		.long	0x541c
 11863 4e5d 7F4E0000 		.long	0x4e7f
 11864 4e61 69       		.uleb128 0x69
 11865 4e62 01       		.uleb128 0x1
 11866 4e63 55       		.byte	0x55
 11867 4e64 02       		.uleb128 0x2
 11868 4e65 73       		.byte	0x73
 11869 4e66 00       		.sleb128 0
 11870 4e67 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 287


 11871 4e68 01       		.uleb128 0x1
 11872 4e69 54       		.byte	0x54
 11873 4e6a 01       		.uleb128 0x1
 11874 4e6b 31       		.byte	0x31
 11875 4e6c 69       		.uleb128 0x69
 11876 4e6d 01       		.uleb128 0x1
 11877 4e6e 51       		.byte	0x51
 11878 4e6f 01       		.uleb128 0x1
 11879 4e70 31       		.byte	0x31
 11880 4e71 69       		.uleb128 0x69
 11881 4e72 01       		.uleb128 0x1
 11882 4e73 52       		.byte	0x52
 11883 4e74 09       		.uleb128 0x9
 11884 4e75 03       		.byte	0x3
 11885 4e76 00000000 		.quad	_ZL11g_3x3_stamp
 11885      00000000 
 11886 4e7e 00       		.byte	0
 11887 4e7f 73       		.uleb128 0x73
 11888 4e80 00000000 		.quad	.LVL231
 11888      00000000 
 11889 4e88 1C540000 		.long	0x541c
 11890 4e8c AE4E0000 		.long	0x4eae
 11891 4e90 69       		.uleb128 0x69
 11892 4e91 01       		.uleb128 0x1
 11893 4e92 55       		.byte	0x55
 11894 4e93 02       		.uleb128 0x2
 11895 4e94 73       		.byte	0x73
 11896 4e95 00       		.sleb128 0
 11897 4e96 69       		.uleb128 0x69
 11898 4e97 01       		.uleb128 0x1
 11899 4e98 54       		.byte	0x54
 11900 4e99 01       		.uleb128 0x1
 11901 4e9a 31       		.byte	0x31
 11902 4e9b 69       		.uleb128 0x69
 11903 4e9c 01       		.uleb128 0x1
 11904 4e9d 51       		.byte	0x51
 11905 4e9e 01       		.uleb128 0x1
 11906 4e9f 31       		.byte	0x31
 11907 4ea0 69       		.uleb128 0x69
 11908 4ea1 01       		.uleb128 0x1
 11909 4ea2 52       		.byte	0x52
 11910 4ea3 09       		.uleb128 0x9
 11911 4ea4 03       		.byte	0x3
 11912 4ea5 00000000 		.quad	_ZL11g_3x3_stamp
 11912      00000000 
 11913 4ead 00       		.byte	0
 11914 4eae 73       		.uleb128 0x73
 11915 4eaf 00000000 		.quad	.LVL232
 11915      00000000 
 11916 4eb7 1C540000 		.long	0x541c
 11917 4ebb DD4E0000 		.long	0x4edd
 11918 4ebf 69       		.uleb128 0x69
 11919 4ec0 01       		.uleb128 0x1
 11920 4ec1 55       		.byte	0x55
 11921 4ec2 02       		.uleb128 0x2
 11922 4ec3 73       		.byte	0x73
 11923 4ec4 00       		.sleb128 0
GAS LISTING /tmp/ccrWPnlb.s 			page 288


 11924 4ec5 69       		.uleb128 0x69
 11925 4ec6 01       		.uleb128 0x1
 11926 4ec7 54       		.byte	0x54
 11927 4ec8 01       		.uleb128 0x1
 11928 4ec9 31       		.byte	0x31
 11929 4eca 69       		.uleb128 0x69
 11930 4ecb 01       		.uleb128 0x1
 11931 4ecc 51       		.byte	0x51
 11932 4ecd 01       		.uleb128 0x1
 11933 4ece 31       		.byte	0x31
 11934 4ecf 69       		.uleb128 0x69
 11935 4ed0 01       		.uleb128 0x1
 11936 4ed1 52       		.byte	0x52
 11937 4ed2 09       		.uleb128 0x9
 11938 4ed3 03       		.byte	0x3
 11939 4ed4 00000000 		.quad	_ZL11g_3x3_stamp
 11939      00000000 
 11940 4edc 00       		.byte	0
 11941 4edd 73       		.uleb128 0x73
 11942 4ede 00000000 		.quad	.LVL233
 11942      00000000 
 11943 4ee6 EB540000 		.long	0x54eb
 11944 4eea 064F0000 		.long	0x4f06
 11945 4eee 69       		.uleb128 0x69
 11946 4eef 01       		.uleb128 0x1
 11947 4ef0 55       		.byte	0x55
 11948 4ef1 02       		.uleb128 0x2
 11949 4ef2 73       		.byte	0x73
 11950 4ef3 00       		.sleb128 0
 11951 4ef4 69       		.uleb128 0x69
 11952 4ef5 01       		.uleb128 0x1
 11953 4ef6 61       		.byte	0x61
 11954 4ef7 07       		.uleb128 0x7
 11955 4ef8 F4       		.byte	0xf4
 11956 4ef9 29       		.uleb128 0x29
 11957 4efa 04       		.byte	0x4
 11958 4efb 0000803F 		.long	0x3f800000
 11959 4eff 69       		.uleb128 0x69
 11960 4f00 01       		.uleb128 0x1
 11961 4f01 51       		.byte	0x51
 11962 4f02 02       		.uleb128 0x2
 11963 4f03 76       		.byte	0x76
 11964 4f04 00       		.sleb128 0
 11965 4f05 00       		.byte	0
 11966 4f06 73       		.uleb128 0x73
 11967 4f07 00000000 		.quad	.LVL234
 11967      00000000 
 11968 4f0f D1530000 		.long	0x53d1
 11969 4f13 314F0000 		.long	0x4f31
 11970 4f17 69       		.uleb128 0x69
 11971 4f18 01       		.uleb128 0x1
 11972 4f19 55       		.byte	0x55
 11973 4f1a 02       		.uleb128 0x2
 11974 4f1b 76       		.byte	0x76
 11975 4f1c 00       		.sleb128 0
 11976 4f1d 69       		.uleb128 0x69
 11977 4f1e 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 289


 11978 4f1f 54       		.byte	0x54
 11979 4f20 09       		.uleb128 0x9
 11980 4f21 03       		.byte	0x3
 11981 4f22 00000000 		.quad	_ZZ25test_render_to_saturatingvE9expected1
 11981      00000000 
 11982 4f2a 69       		.uleb128 0x69
 11983 4f2b 01       		.uleb128 0x1
 11984 4f2c 51       		.byte	0x51
 11985 4f2d 02       		.uleb128 0x2
 11986 4f2e 08       		.byte	0x8
 11987 4f2f 24       		.byte	0x24
 11988 4f30 00       		.byte	0
 11989 4f31 73       		.uleb128 0x73
 11990 4f32 00000000 		.quad	.LVL236
 11990      00000000 
 11991 4f3a EB540000 		.long	0x54eb
 11992 4f3e 5A4F0000 		.long	0x4f5a
 11993 4f42 69       		.uleb128 0x69
 11994 4f43 01       		.uleb128 0x1
 11995 4f44 55       		.byte	0x55
 11996 4f45 02       		.uleb128 0x2
 11997 4f46 73       		.byte	0x73
 11998 4f47 00       		.sleb128 0
 11999 4f48 69       		.uleb128 0x69
 12000 4f49 01       		.uleb128 0x1
 12001 4f4a 61       		.byte	0x61
 12002 4f4b 07       		.uleb128 0x7
 12003 4f4c F4       		.byte	0xf4
 12004 4f4d 29       		.uleb128 0x29
 12005 4f4e 04       		.byte	0x4
 12006 4f4f 00000040 		.long	0x40000000
 12007 4f53 69       		.uleb128 0x69
 12008 4f54 01       		.uleb128 0x1
 12009 4f55 51       		.byte	0x51
 12010 4f56 02       		.uleb128 0x2
 12011 4f57 76       		.byte	0x76
 12012 4f58 00       		.sleb128 0
 12013 4f59 00       		.byte	0
 12014 4f5a 73       		.uleb128 0x73
 12015 4f5b 00000000 		.quad	.LVL237
 12015      00000000 
 12016 4f63 D1530000 		.long	0x53d1
 12017 4f67 854F0000 		.long	0x4f85
 12018 4f6b 69       		.uleb128 0x69
 12019 4f6c 01       		.uleb128 0x1
 12020 4f6d 55       		.byte	0x55
 12021 4f6e 02       		.uleb128 0x2
 12022 4f6f 76       		.byte	0x76
 12023 4f70 00       		.sleb128 0
 12024 4f71 69       		.uleb128 0x69
 12025 4f72 01       		.uleb128 0x1
 12026 4f73 54       		.byte	0x54
 12027 4f74 09       		.uleb128 0x9
 12028 4f75 03       		.byte	0x3
 12029 4f76 00000000 		.quad	_ZZ25test_render_to_saturatingvE9expected2
 12029      00000000 
 12030 4f7e 69       		.uleb128 0x69
GAS LISTING /tmp/ccrWPnlb.s 			page 290


 12031 4f7f 01       		.uleb128 0x1
 12032 4f80 51       		.byte	0x51
 12033 4f81 02       		.uleb128 0x2
 12034 4f82 08       		.byte	0x8
 12035 4f83 24       		.byte	0x24
 12036 4f84 00       		.byte	0
 12037 4f85 68       		.uleb128 0x68
 12038 4f86 00000000 		.quad	.LVL239
 12038      00000000 
 12039 4f8e 0A540000 		.long	0x540a
 12040 4f92 69       		.uleb128 0x69
 12041 4f93 01       		.uleb128 0x1
 12042 4f94 55       		.byte	0x55
 12043 4f95 02       		.uleb128 0x2
 12044 4f96 73       		.byte	0x73
 12045 4f97 00       		.sleb128 0
 12046 4f98 00       		.byte	0
 12047 4f99 00       		.byte	0
 12048 4f9a 00       		.byte	0
 12049 4f9b 8601     		.uleb128 0x86
 12050 4f9d 00000000 		.long	.LASF505
 12051 4fa1 02       		.byte	0x2
 12052 4fa2 6201     		.value	0x162
 12053 4fa4 93020000 		.long	0x293
 12054 4fa8 00000000 		.quad	.LFB1533
 12054      00000000 
 12055 4fb0 E3000000 		.quad	.LFE1533-.LFB1533
 12055      00000000 
 12056 4fb8 01       		.uleb128 0x1
 12057 4fb9 9C       		.byte	0x9c
 12058 4fba 2C520000 		.long	0x522c
 12059 4fbe 6B       		.uleb128 0x6b
 12060 4fbf 612A0000 		.long	0x2a61
 12061 4fc3 00000000 		.quad	.LBB532
 12061      00000000 
 12062 4fcb 0A000000 		.quad	.LBE532-.LBB532
 12062      00000000 
 12063 4fd3 02       		.byte	0x2
 12064 4fd4 7501     		.value	0x175
 12065 4fd6 07500000 		.long	0x5007
 12066 4fda 65       		.uleb128 0x65
 12067 4fdb 782A0000 		.long	0x2a78
 12068 4fdf 00000000 		.long	.LLST151
 12069 4fe3 65       		.uleb128 0x65
 12070 4fe4 6F2A0000 		.long	0x2a6f
 12071 4fe8 00000000 		.long	.LLST152
 12072 4fec 68       		.uleb128 0x68
 12073 4fed 00000000 		.quad	.LVL255
 12073      00000000 
 12074 4ff5 7A0F0000 		.long	0xf7a
 12075 4ff9 69       		.uleb128 0x69
 12076 4ffa 01       		.uleb128 0x1
 12077 4ffb 54       		.byte	0x54
 12078 4ffc 08       		.uleb128 0x8
 12079 4ffd 73       		.byte	0x73
 12080 4ffe 00       		.sleb128 0
 12081 4fff 0C       		.byte	0xc
GAS LISTING /tmp/ccrWPnlb.s 			page 291


 12082 5000 FFFFFFFF 		.long	0xffffffff
 12083 5004 1A       		.byte	0x1a
 12084 5005 00       		.byte	0
 12085 5006 00       		.byte	0
 12086 5007 6B       		.uleb128 0x6b
 12087 5008 59290000 		.long	0x2959
 12088 500c 00000000 		.quad	.LBB534
 12088      00000000 
 12089 5014 08000000 		.quad	.LBE534-.LBB534
 12089      00000000 
 12090 501c 02       		.byte	0x2
 12091 501d 7501     		.value	0x175
 12092 501f 3F500000 		.long	0x503f
 12093 5023 67       		.uleb128 0x67
 12094 5024 70290000 		.long	0x2970
 12095 5028 65       		.uleb128 0x65
 12096 5029 67290000 		.long	0x2967
 12097 502d 00000000 		.long	.LLST153
 12098 5031 6E       		.uleb128 0x6e
 12099 5032 00000000 		.quad	.LVL257
 12099      00000000 
 12100 503a 1E2B0000 		.long	0x2b1e
 12101 503e 00       		.byte	0
 12102 503f 6B       		.uleb128 0x6b
 12103 5040 612A0000 		.long	0x2a61
 12104 5044 00000000 		.quad	.LBB536
 12104      00000000 
 12105 504c 0A000000 		.quad	.LBE536-.LBB536
 12105      00000000 
 12106 5054 02       		.byte	0x2
 12107 5055 7301     		.value	0x173
 12108 5057 86500000 		.long	0x5086
 12109 505b 63       		.uleb128 0x63
 12110 505c 782A0000 		.long	0x2a78
 12111 5060 01       		.uleb128 0x1
 12112 5061 53       		.byte	0x53
 12113 5062 65       		.uleb128 0x65
 12114 5063 6F2A0000 		.long	0x2a6f
 12115 5067 00000000 		.long	.LLST154
 12116 506b 68       		.uleb128 0x68
 12117 506c 00000000 		.quad	.LVL259
 12117      00000000 
 12118 5074 7A0F0000 		.long	0xf7a
 12119 5078 69       		.uleb128 0x69
 12120 5079 01       		.uleb128 0x1
 12121 507a 54       		.byte	0x54
 12122 507b 08       		.uleb128 0x8
 12123 507c 73       		.byte	0x73
 12124 507d 00       		.sleb128 0
 12125 507e 0C       		.byte	0xc
 12126 507f FFFFFFFF 		.long	0xffffffff
 12127 5083 1A       		.byte	0x1a
 12128 5084 00       		.byte	0
 12129 5085 00       		.byte	0
 12130 5086 6B       		.uleb128 0x6b
 12131 5087 612A0000 		.long	0x2a61
 12132 508b 00000000 		.quad	.LBB538
GAS LISTING /tmp/ccrWPnlb.s 			page 292


 12132      00000000 
 12133 5093 0A000000 		.quad	.LBE538-.LBB538
 12133      00000000 
 12134 509b 02       		.byte	0x2
 12135 509c 7301     		.value	0x173
 12136 509e CD500000 		.long	0x50cd
 12137 50a2 63       		.uleb128 0x63
 12138 50a3 782A0000 		.long	0x2a78
 12139 50a7 01       		.uleb128 0x1
 12140 50a8 56       		.byte	0x56
 12141 50a9 65       		.uleb128 0x65
 12142 50aa 6F2A0000 		.long	0x2a6f
 12143 50ae 00000000 		.long	.LLST155
 12144 50b2 68       		.uleb128 0x68
 12145 50b3 00000000 		.quad	.LVL261
 12145      00000000 
 12146 50bb 7A0F0000 		.long	0xf7a
 12147 50bf 69       		.uleb128 0x69
 12148 50c0 01       		.uleb128 0x1
 12149 50c1 54       		.byte	0x54
 12150 50c2 08       		.uleb128 0x8
 12151 50c3 76       		.byte	0x76
 12152 50c4 00       		.sleb128 0
 12153 50c5 0C       		.byte	0xc
 12154 50c6 FFFFFFFF 		.long	0xffffffff
 12155 50ca 1A       		.byte	0x1a
 12156 50cb 00       		.byte	0
 12157 50cc 00       		.byte	0
 12158 50cd 6B       		.uleb128 0x6b
 12159 50ce 59290000 		.long	0x2959
 12160 50d2 00000000 		.quad	.LBB540
 12160      00000000 
 12161 50da 0A000000 		.quad	.LBE540-.LBB540
 12161      00000000 
 12162 50e2 02       		.byte	0x2
 12163 50e3 7301     		.value	0x173
 12164 50e5 05510000 		.long	0x5105
 12165 50e9 67       		.uleb128 0x67
 12166 50ea 70290000 		.long	0x2970
 12167 50ee 65       		.uleb128 0x65
 12168 50ef 67290000 		.long	0x2967
 12169 50f3 00000000 		.long	.LLST156
 12170 50f7 6E       		.uleb128 0x6e
 12171 50f8 00000000 		.quad	.LVL263
 12171      00000000 
 12172 5100 1E2B0000 		.long	0x2b1e
 12173 5104 00       		.byte	0
 12174 5105 6E       		.uleb128 0x6e
 12175 5106 00000000 		.quad	.LVL243
 12175      00000000 
 12176 510e B72F0000 		.long	0x2fb7
 12177 5112 6E       		.uleb128 0x6e
 12178 5113 00000000 		.quad	.LVL244
 12178      00000000 
 12179 511b 6F310000 		.long	0x316f
 12180 511f 6E       		.uleb128 0x6e
 12181 5120 00000000 		.quad	.LVL245
GAS LISTING /tmp/ccrWPnlb.s 			page 293


 12181      00000000 
 12182 5128 75350000 		.long	0x3575
 12183 512c 6E       		.uleb128 0x6e
 12184 512d 00000000 		.quad	.LVL246
 12184      00000000 
 12185 5135 AA380000 		.long	0x38aa
 12186 5139 6E       		.uleb128 0x6e
 12187 513a 00000000 		.quad	.LVL247
 12187      00000000 
 12188 5142 B03B0000 		.long	0x3bb0
 12189 5146 6E       		.uleb128 0x6e
 12190 5147 00000000 		.quad	.LVL248
 12190      00000000 
 12191 514f A83F0000 		.long	0x3fa8
 12192 5153 6E       		.uleb128 0x6e
 12193 5154 00000000 		.quad	.LVL249
 12193      00000000 
 12194 515c 95410000 		.long	0x4195
 12195 5160 6E       		.uleb128 0x6e
 12196 5161 00000000 		.quad	.LVL250
 12196      00000000 
 12197 5169 B2470000 		.long	0x47b2
 12198 516d 6E       		.uleb128 0x6e
 12199 516e 00000000 		.quad	.LVL251
 12199      00000000 
 12200 5176 0D490000 		.long	0x490d
 12201 517a 6E       		.uleb128 0x6e
 12202 517b 00000000 		.quad	.LVL252
 12202      00000000 
 12203 5183 9D4A0000 		.long	0x4a9d
 12204 5187 6E       		.uleb128 0x6e
 12205 5188 00000000 		.quad	.LVL253
 12205      00000000 
 12206 5190 EE4C0000 		.long	0x4cee
 12207 5194 73       		.uleb128 0x73
 12208 5195 00000000 		.quad	.LVL254
 12208      00000000 
 12209 519d 07290000 		.long	0x2907
 12210 51a1 B3510000 		.long	0x51b3
 12211 51a5 69       		.uleb128 0x69
 12212 51a6 01       		.uleb128 0x1
 12213 51a7 54       		.byte	0x54
 12214 51a8 09       		.uleb128 0x9
 12215 51a9 03       		.byte	0x3
 12216 51aa 00000000 		.quad	.LC58
 12216      00000000 
 12217 51b2 00       		.byte	0
 12218 51b3 73       		.uleb128 0x73
 12219 51b4 00000000 		.quad	.LVL256
 12219      00000000 
 12220 51bc 07290000 		.long	0x2907
 12221 51c0 D2510000 		.long	0x51d2
 12222 51c4 69       		.uleb128 0x69
 12223 51c5 01       		.uleb128 0x1
 12224 51c6 54       		.byte	0x54
 12225 51c7 09       		.uleb128 0x9
 12226 51c8 03       		.byte	0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 294


 12227 51c9 00000000 		.quad	.LC59
 12227      00000000 
 12228 51d1 00       		.byte	0
 12229 51d2 73       		.uleb128 0x73
 12230 51d3 00000000 		.quad	.LVL258
 12230      00000000 
 12231 51db 07290000 		.long	0x2907
 12232 51df F1510000 		.long	0x51f1
 12233 51e3 69       		.uleb128 0x69
 12234 51e4 01       		.uleb128 0x1
 12235 51e5 54       		.byte	0x54
 12236 51e6 09       		.uleb128 0x9
 12237 51e7 03       		.byte	0x3
 12238 51e8 00000000 		.quad	.LC55
 12238      00000000 
 12239 51f0 00       		.byte	0
 12240 51f1 73       		.uleb128 0x73
 12241 51f2 00000000 		.quad	.LVL260
 12241      00000000 
 12242 51fa 07290000 		.long	0x2907
 12243 51fe 10520000 		.long	0x5210
 12244 5202 69       		.uleb128 0x69
 12245 5203 01       		.uleb128 0x1
 12246 5204 54       		.byte	0x54
 12247 5205 09       		.uleb128 0x9
 12248 5206 03       		.byte	0x3
 12249 5207 00000000 		.quad	.LC56
 12249      00000000 
 12250 520f 00       		.byte	0
 12251 5210 68       		.uleb128 0x68
 12252 5211 00000000 		.quad	.LVL262
 12252      00000000 
 12253 5219 07290000 		.long	0x2907
 12254 521d 69       		.uleb128 0x69
 12255 521e 01       		.uleb128 0x1
 12256 521f 54       		.byte	0x54
 12257 5220 09       		.uleb128 0x9
 12258 5221 03       		.byte	0x3
 12259 5222 00000000 		.quad	.LC57
 12259      00000000 
 12260 522a 00       		.byte	0
 12261 522b 00       		.byte	0
 12262 522c 8701     		.uleb128 0x87
 12263 522e 00000000 		.long	.LASF506
 12264 5232 00000000 		.quad	.LFB1690
 12264      00000000 
 12265 523a 2E000000 		.quad	.LFE1690-.LFB1690
 12265      00000000 
 12266 5242 01       		.uleb128 0x1
 12267 5243 9C       		.byte	0x9c
 12268 5244 A8520000 		.long	0x52a8
 12269 5248 71       		.uleb128 0x71
 12270 5249 FB2A0000 		.long	0x2afb
 12271 524d 00000000 		.quad	.LBB542
 12271      00000000 
 12272 5255 00000000 		.long	.Ldebug_ranges0+0xad0
 12273 5259 02       		.byte	0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 295


 12274 525a 7801     		.value	0x178
 12275 525c 79       		.uleb128 0x79
 12276 525d 052B0000 		.long	0x2b05
 12277 5261 01       		.byte	0x1
 12278 5262 8501     		.uleb128 0x85
 12279 5264 112B0000 		.long	0x2b11
 12280 5268 FFFF     		.value	0xffff
 12281 526a 8801     		.uleb128 0x88
 12282 526c 00000000 		.quad	.LVL265
 12282      00000000 
 12283 5274 86520000 		.long	0x5286
 12284 5278 69       		.uleb128 0x69
 12285 5279 01       		.uleb128 0x1
 12286 527a 55       		.byte	0x55
 12287 527b 09       		.uleb128 0x9
 12288 527c 03       		.byte	0x3
 12289 527d 00000000 		.quad	_ZStL8__ioinit
 12289      00000000 
 12290 5285 00       		.byte	0
 12291 5286 8901     		.uleb128 0x89
 12292 5288 00000000 		.quad	.LVL266
 12292      00000000 
 12293 5290 0F550000 		.long	0x550f
 12294 5294 69       		.uleb128 0x69
 12295 5295 01       		.uleb128 0x1
 12296 5296 54       		.byte	0x54
 12297 5297 09       		.uleb128 0x9
 12298 5298 03       		.byte	0x3
 12299 5299 00000000 		.quad	_ZStL8__ioinit
 12299      00000000 
 12300 52a1 8A01     		.uleb128 0x8a
 12301 52a3 01       		.uleb128 0x1
 12302 52a4 51       		.byte	0x51
 12303 52a5 00       		.byte	0
 12304 52a6 00       		.byte	0
 12305 52a7 00       		.byte	0
 12306 52a8 8B01     		.uleb128 0x8b
 12307 52aa 00000000 		.long	.LASF508
 12308 52ae 0A       		.byte	0xa
 12309 52af A5       		.byte	0xa5
 12310 52b0 F8230000 		.long	0x23f8
 12311 52b4 8B01     		.uleb128 0x8b
 12312 52b6 00000000 		.long	.LASF509
 12313 52ba 0A       		.byte	0xa
 12314 52bb A6       		.byte	0xa6
 12315 52bc F8230000 		.long	0x23f8
 12316 52c0 8B01     		.uleb128 0x8b
 12317 52c2 00000000 		.long	.LASF510
 12318 52c6 2C       		.byte	0x2c
 12319 52c7 21       		.byte	0x21
 12320 52c8 CC520000 		.long	0x52cc
 12321 52cc 11       		.uleb128 0x11
 12322 52cd 08       		.byte	0x8
 12323 52ce D2520000 		.long	0x52d2
 12324 52d2 10       		.uleb128 0x10
 12325 52d3 0E280000 		.long	0x280e
 12326 52d7 78       		.uleb128 0x78
GAS LISTING /tmp/ccrWPnlb.s 			page 296


 12327 52d8 00000000 		.long	.LASF511
 12328 52dc 02       		.byte	0x2
 12329 52dd 20       		.byte	0x20
 12330 52de 5F310000 		.long	0x315f
 12331 52e2 09       		.uleb128 0x9
 12332 52e3 03       		.byte	0x3
 12333 52e4 00000000 		.quad	_ZL16g_3x3_stamp_data
 12333      00000000 
 12334 52ec 78       		.uleb128 0x78
 12335 52ed 00000000 		.long	.LASF512
 12336 52f1 02       		.byte	0x2
 12337 52f2 26       		.byte	0x26
 12338 52f3 D3270000 		.long	0x27d3
 12339 52f7 09       		.uleb128 0x9
 12340 52f8 03       		.byte	0x3
 12341 52f9 00000000 		.quad	_ZL11g_3x3_stamp
 12341      00000000 
 12342 5301 78       		.uleb128 0x78
 12343 5302 00000000 		.long	.LASF513
 12344 5306 02       		.byte	0x2
 12345 5307 2B       		.byte	0x2b
 12346 5308 11020000 		.long	0x211
 12347 530c 09       		.uleb128 0x9
 12348 530d 03       		.byte	0x3
 12349 530e 00000000 		.quad	_ZL14g_failed_tests
 12349      00000000 
 12350 5316 78       		.uleb128 0x78
 12351 5317 00000000 		.long	.LASF514
 12352 531b 02       		.byte	0x2
 12353 531c 2C       		.byte	0x2c
 12354 531d 11020000 		.long	0x211
 12355 5321 09       		.uleb128 0x9
 12356 5322 03       		.byte	0x3
 12357 5323 00000000 		.quad	_ZL13g_total_tests
 12357      00000000 
 12358 532b 8C01     		.uleb128 0x8c
 12359 532d 00000000 		.long	.LASF515
 12360 5331 18020000 		.long	0x218
 12361 5335 8D01     		.uleb128 0x8d
 12362 5337 AE110000 		.long	0x11ae
 12363 533b 8E01     		.uleb128 0x8e
 12364 533d E9110000 		.long	0x11e9
 12365 5341 09       		.uleb128 0x9
 12366 5342 03       		.byte	0x3
 12367 5343 00000000 		.quad	_ZStL8__ioinit
 12367      00000000 
 12368 534b 8F01     		.uleb128 0x8f
 12369 534d C9190000 		.long	0x19c9
 12370 5351 00000000 		.long	.LASF516
 12371 5355 8F01     		.uleb128 0x8f
 12372 5357 D4190000 		.long	0x19d4
 12373 535b 00000000 		.long	.LASF517
 12374 535f 8F01     		.uleb128 0x8f
 12375 5361 7B1A0000 		.long	0x1a7b
 12376 5365 00000000 		.long	.LASF518
 12377 5369 8F01     		.uleb128 0x8f
 12378 536b BD1A0000 		.long	0x1abd
GAS LISTING /tmp/ccrWPnlb.s 			page 297


 12379 536f 00000000 		.long	.LASF519
 12380 5373 8F01     		.uleb128 0x8f
 12381 5375 FF1A0000 		.long	0x1aff
 12382 5379 00000000 		.long	.LASF520
 12383 537d 8F01     		.uleb128 0x8f
 12384 537f 411B0000 		.long	0x1b41
 12385 5383 00000000 		.long	.LASF521
 12386 5387 8F01     		.uleb128 0x8f
 12387 5389 6D1B0000 		.long	0x1b6d
 12388 538d 00000000 		.long	.LASF522
 12389 5391 8F01     		.uleb128 0x8f
 12390 5393 A41B0000 		.long	0x1ba4
 12391 5397 00000000 		.long	.LASF523
 12392 539b 8F01     		.uleb128 0x8f
 12393 539d AF1B0000 		.long	0x1baf
 12394 53a1 00000000 		.long	.LASF524
 12395 53a5 8F01     		.uleb128 0x8f
 12396 53a7 E21B0000 		.long	0x1be2
 12397 53ab 00000000 		.long	.LASF525
 12398 53af 8F01     		.uleb128 0x8f
 12399 53b1 ED1B0000 		.long	0x1bed
 12400 53b5 00000000 		.long	.LASF526
 12401 53b9 9001     		.uleb128 0x90
 12402 53bb 00000000 		.long	.LASF527
 12403 53bf 00000000 		.long	.LASF556
 12404 53c3 25020000 		.long	0x225
 12405 53c7 D1530000 		.long	0x53d1
 12406 53cb 19       		.uleb128 0x19
 12407 53cc BC020000 		.long	0x2bc
 12408 53d0 00       		.byte	0
 12409 53d1 3C       		.uleb128 0x3c
 12410 53d2 00000000 		.long	.LASF528
 12411 53d6 2D       		.byte	0x2d
 12412 53d7 44       		.byte	0x44
 12413 53d8 93020000 		.long	0x293
 12414 53dc F0530000 		.long	0x53f0
 12415 53e0 19       		.uleb128 0x19
 12416 53e1 E01F0000 		.long	0x1fe0
 12417 53e5 19       		.uleb128 0x19
 12418 53e6 E01F0000 		.long	0x1fe0
 12419 53ea 19       		.uleb128 0x19
 12420 53eb 1A020000 		.long	0x21a
 12421 53ef 00       		.byte	0
 12422 53f0 3C       		.uleb128 0x3c
 12423 53f1 00000000 		.long	.LASF529
 12424 53f5 2A       		.byte	0x2a
 12425 53f6 45       		.byte	0x45
 12426 53f7 9B280000 		.long	0x289b
 12427 53fb 0A540000 		.long	0x540a
 12428 53ff 19       		.uleb128 0x19
 12429 5400 11020000 		.long	0x211
 12430 5404 19       		.uleb128 0x19
 12431 5405 11020000 		.long	0x211
 12432 5409 00       		.byte	0
 12433 540a 9101     		.uleb128 0x91
 12434 540c 00000000 		.long	.LASF530
 12435 5410 2A       		.byte	0x2a
GAS LISTING /tmp/ccrWPnlb.s 			page 298


 12436 5411 47       		.byte	0x47
 12437 5412 1C540000 		.long	0x541c
 12438 5416 19       		.uleb128 0x19
 12439 5417 9B280000 		.long	0x289b
 12440 541b 00       		.byte	0
 12441 541c 9101     		.uleb128 0x91
 12442 541e 00000000 		.long	.LASF531
 12443 5422 2A       		.byte	0x2a
 12444 5423 51       		.byte	0x51
 12445 5424 3D540000 		.long	0x543d
 12446 5428 19       		.uleb128 0x19
 12447 5429 9B280000 		.long	0x289b
 12448 542d 19       		.uleb128 0x19
 12449 542e 11020000 		.long	0x211
 12450 5432 19       		.uleb128 0x19
 12451 5433 11020000 		.long	0x211
 12452 5437 19       		.uleb128 0x19
 12453 5438 3D540000 		.long	0x543d
 12454 543c 00       		.byte	0
 12455 543d 11       		.uleb128 0x11
 12456 543e 08       		.byte	0x8
 12457 543f 43540000 		.long	0x5443
 12458 5443 10       		.uleb128 0x10
 12459 5444 D3270000 		.long	0x27d3
 12460 5448 9101     		.uleb128 0x91
 12461 544a 00000000 		.long	.LASF532
 12462 544e 2A       		.byte	0x2a
 12463 544f 56       		.byte	0x56
 12464 5450 6E540000 		.long	0x546e
 12465 5454 19       		.uleb128 0x19
 12466 5455 9B280000 		.long	0x289b
 12467 5459 19       		.uleb128 0x19
 12468 545a 11020000 		.long	0x211
 12469 545e 19       		.uleb128 0x19
 12470 545f 11020000 		.long	0x211
 12471 5463 19       		.uleb128 0x19
 12472 5464 29000000 		.long	0x29
 12473 5468 19       		.uleb128 0x19
 12474 5469 3D540000 		.long	0x543d
 12475 546d 00       		.byte	0
 12476 546e 3C       		.uleb128 0x3c
 12477 546f 00000000 		.long	.LASF533
 12478 5473 2A       		.byte	0x2a
 12479 5474 93       		.byte	0x93
 12480 5475 5B2A0000 		.long	0x2a5b
 12481 5479 83540000 		.long	0x5483
 12482 547d 19       		.uleb128 0x19
 12483 547e 11020000 		.long	0x211
 12484 5482 00       		.byte	0
 12485 5483 9101     		.uleb128 0x91
 12486 5485 00000000 		.long	.LASF534
 12487 5489 2A       		.byte	0x2a
 12488 548a A3       		.byte	0xa3
 12489 548b 95540000 		.long	0x5495
 12490 548f 19       		.uleb128 0x19
 12491 5490 5B2A0000 		.long	0x2a5b
 12492 5494 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 299


 12493 5495 3C       		.uleb128 0x3c
 12494 5496 00000000 		.long	.LASF535
 12495 549a 2A       		.byte	0x2a
 12496 549b A0       		.byte	0xa0
 12497 549c 5B2A0000 		.long	0x2a5b
 12498 54a0 AF540000 		.long	0x54af
 12499 54a4 19       		.uleb128 0x19
 12500 54a5 11020000 		.long	0x211
 12501 54a9 19       		.uleb128 0x19
 12502 54aa 34280000 		.long	0x2834
 12503 54ae 00       		.byte	0
 12504 54af 3C       		.uleb128 0x3c
 12505 54b0 00000000 		.long	.LASF536
 12506 54b4 2A       		.byte	0x2a
 12507 54b5 73       		.byte	0x73
 12508 54b6 974A0000 		.long	0x4a97
 12509 54ba CE540000 		.long	0x54ce
 12510 54be 19       		.uleb128 0x19
 12511 54bf CE540000 		.long	0x54ce
 12512 54c3 19       		.uleb128 0x19
 12513 54c4 CC520000 		.long	0x52cc
 12514 54c8 19       		.uleb128 0x19
 12515 54c9 974A0000 		.long	0x4a97
 12516 54cd 00       		.byte	0
 12517 54ce 11       		.uleb128 0x11
 12518 54cf 08       		.byte	0x8
 12519 54d0 D4540000 		.long	0x54d4
 12520 54d4 10       		.uleb128 0x10
 12521 54d5 9B270000 		.long	0x279b
 12522 54d9 54       		.uleb128 0x54
 12523 54da 00000000 		.long	.LASF537
 12524 54de 25       		.byte	0x25
 12525 54df E801     		.value	0x1e8
 12526 54e1 EB540000 		.long	0x54eb
 12527 54e5 19       		.uleb128 0x19
 12528 54e6 18020000 		.long	0x218
 12529 54ea 00       		.byte	0
 12530 54eb 3C       		.uleb128 0x3c
 12531 54ec 00000000 		.long	.LASF538
 12532 54f0 2A       		.byte	0x2a
 12533 54f1 81       		.byte	0x81
 12534 54f2 974A0000 		.long	0x4a97
 12535 54f6 0F550000 		.long	0x550f
 12536 54fa 19       		.uleb128 0x19
 12537 54fb CE540000 		.long	0x54ce
 12538 54ff 19       		.uleb128 0x19
 12539 5500 CC520000 		.long	0x52cc
 12540 5504 19       		.uleb128 0x19
 12541 5505 29000000 		.long	0x29
 12542 5509 19       		.uleb128 0x19
 12543 550a 974A0000 		.long	0x4a97
 12544 550e 00       		.byte	0
 12545 550f 9201     		.uleb128 0x92
 12546 5511 00000000 		.long	.LASF557
 12547 5515 93020000 		.long	0x293
 12548 5519 19       		.uleb128 0x19
 12549 551a CF1F0000 		.long	0x1fcf
GAS LISTING /tmp/ccrWPnlb.s 			page 300


 12550 551e 19       		.uleb128 0x19
 12551 551f 18020000 		.long	0x218
 12552 5523 19       		.uleb128 0x19
 12553 5524 18020000 		.long	0x218
 12554 5528 00       		.byte	0
 12555 5529 00       		.byte	0
 12556              		.section	.debug_abbrev,"",@progbits
 12557              	.Ldebug_abbrev0:
 12558 0000 01       		.uleb128 0x1
 12559 0001 11       		.uleb128 0x11
 12560 0002 01       		.byte	0x1
 12561 0003 25       		.uleb128 0x25
 12562 0004 0E       		.uleb128 0xe
 12563 0005 13       		.uleb128 0x13
 12564 0006 0B       		.uleb128 0xb
 12565 0007 03       		.uleb128 0x3
 12566 0008 0E       		.uleb128 0xe
 12567 0009 1B       		.uleb128 0x1b
 12568 000a 0E       		.uleb128 0xe
 12569 000b 55       		.uleb128 0x55
 12570 000c 17       		.uleb128 0x17
 12571 000d 11       		.uleb128 0x11
 12572 000e 01       		.uleb128 0x1
 12573 000f 10       		.uleb128 0x10
 12574 0010 17       		.uleb128 0x17
 12575 0011 00       		.byte	0
 12576 0012 00       		.byte	0
 12577 0013 02       		.uleb128 0x2
 12578 0014 24       		.uleb128 0x24
 12579 0015 00       		.byte	0
 12580 0016 0B       		.uleb128 0xb
 12581 0017 0B       		.uleb128 0xb
 12582 0018 3E       		.uleb128 0x3e
 12583 0019 0B       		.uleb128 0xb
 12584 001a 03       		.uleb128 0x3
 12585 001b 0E       		.uleb128 0xe
 12586 001c 00       		.byte	0
 12587 001d 00       		.byte	0
 12588 001e 03       		.uleb128 0x3
 12589 001f 16       		.uleb128 0x16
 12590 0020 00       		.byte	0
 12591 0021 03       		.uleb128 0x3
 12592 0022 0E       		.uleb128 0xe
 12593 0023 3A       		.uleb128 0x3a
 12594 0024 0B       		.uleb128 0xb
 12595 0025 3B       		.uleb128 0x3b
 12596 0026 0B       		.uleb128 0xb
 12597 0027 49       		.uleb128 0x49
 12598 0028 13       		.uleb128 0x13
 12599 0029 00       		.byte	0
 12600 002a 00       		.byte	0
 12601 002b 04       		.uleb128 0x4
 12602 002c 13       		.uleb128 0x13
 12603 002d 01       		.byte	0x1
 12604 002e 03       		.uleb128 0x3
 12605 002f 0E       		.uleb128 0xe
 12606 0030 0B       		.uleb128 0xb
GAS LISTING /tmp/ccrWPnlb.s 			page 301


 12607 0031 0B       		.uleb128 0xb
 12608 0032 3A       		.uleb128 0x3a
 12609 0033 0B       		.uleb128 0xb
 12610 0034 3B       		.uleb128 0x3b
 12611 0035 05       		.uleb128 0x5
 12612 0036 01       		.uleb128 0x1
 12613 0037 13       		.uleb128 0x13
 12614 0038 00       		.byte	0
 12615 0039 00       		.byte	0
 12616 003a 05       		.uleb128 0x5
 12617 003b 0D       		.uleb128 0xd
 12618 003c 00       		.byte	0
 12619 003d 03       		.uleb128 0x3
 12620 003e 0E       		.uleb128 0xe
 12621 003f 3A       		.uleb128 0x3a
 12622 0040 0B       		.uleb128 0xb
 12623 0041 3B       		.uleb128 0x3b
 12624 0042 05       		.uleb128 0x5
 12625 0043 49       		.uleb128 0x49
 12626 0044 13       		.uleb128 0x13
 12627 0045 38       		.uleb128 0x38
 12628 0046 0B       		.uleb128 0xb
 12629 0047 00       		.byte	0
 12630 0048 00       		.byte	0
 12631 0049 06       		.uleb128 0x6
 12632 004a 13       		.uleb128 0x13
 12633 004b 01       		.byte	0x1
 12634 004c 03       		.uleb128 0x3
 12635 004d 0E       		.uleb128 0xe
 12636 004e 0B       		.uleb128 0xb
 12637 004f 0B       		.uleb128 0xb
 12638 0050 3A       		.uleb128 0x3a
 12639 0051 0B       		.uleb128 0xb
 12640 0052 3B       		.uleb128 0x3b
 12641 0053 0B       		.uleb128 0xb
 12642 0054 01       		.uleb128 0x1
 12643 0055 13       		.uleb128 0x13
 12644 0056 00       		.byte	0
 12645 0057 00       		.byte	0
 12646 0058 07       		.uleb128 0x7
 12647 0059 0D       		.uleb128 0xd
 12648 005a 00       		.byte	0
 12649 005b 03       		.uleb128 0x3
 12650 005c 0E       		.uleb128 0xe
 12651 005d 3A       		.uleb128 0x3a
 12652 005e 0B       		.uleb128 0xb
 12653 005f 3B       		.uleb128 0x3b
 12654 0060 0B       		.uleb128 0xb
 12655 0061 49       		.uleb128 0x49
 12656 0062 13       		.uleb128 0x13
 12657 0063 38       		.uleb128 0x38
 12658 0064 0B       		.uleb128 0xb
 12659 0065 00       		.byte	0
 12660 0066 00       		.byte	0
 12661 0067 08       		.uleb128 0x8
 12662 0068 0F       		.uleb128 0xf
 12663 0069 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 302


 12664 006a 0B       		.uleb128 0xb
 12665 006b 0B       		.uleb128 0xb
 12666 006c 00       		.byte	0
 12667 006d 00       		.byte	0
 12668 006e 09       		.uleb128 0x9
 12669 006f 16       		.uleb128 0x16
 12670 0070 00       		.byte	0
 12671 0071 03       		.uleb128 0x3
 12672 0072 0E       		.uleb128 0xe
 12673 0073 3A       		.uleb128 0x3a
 12674 0074 0B       		.uleb128 0xb
 12675 0075 3B       		.uleb128 0x3b
 12676 0076 05       		.uleb128 0x5
 12677 0077 49       		.uleb128 0x49
 12678 0078 13       		.uleb128 0x13
 12679 0079 00       		.byte	0
 12680 007a 00       		.byte	0
 12681 007b 0A       		.uleb128 0xa
 12682 007c 13       		.uleb128 0x13
 12683 007d 01       		.byte	0x1
 12684 007e 0B       		.uleb128 0xb
 12685 007f 0B       		.uleb128 0xb
 12686 0080 3A       		.uleb128 0x3a
 12687 0081 0B       		.uleb128 0xb
 12688 0082 3B       		.uleb128 0x3b
 12689 0083 0B       		.uleb128 0xb
 12690 0084 6E       		.uleb128 0x6e
 12691 0085 0E       		.uleb128 0xe
 12692 0086 01       		.uleb128 0x1
 12693 0087 13       		.uleb128 0x13
 12694 0088 00       		.byte	0
 12695 0089 00       		.byte	0
 12696 008a 0B       		.uleb128 0xb
 12697 008b 17       		.uleb128 0x17
 12698 008c 01       		.byte	0x1
 12699 008d 0B       		.uleb128 0xb
 12700 008e 0B       		.uleb128 0xb
 12701 008f 3A       		.uleb128 0x3a
 12702 0090 0B       		.uleb128 0xb
 12703 0091 3B       		.uleb128 0x3b
 12704 0092 0B       		.uleb128 0xb
 12705 0093 01       		.uleb128 0x1
 12706 0094 13       		.uleb128 0x13
 12707 0095 00       		.byte	0
 12708 0096 00       		.byte	0
 12709 0097 0C       		.uleb128 0xc
 12710 0098 0D       		.uleb128 0xd
 12711 0099 00       		.byte	0
 12712 009a 03       		.uleb128 0x3
 12713 009b 0E       		.uleb128 0xe
 12714 009c 3A       		.uleb128 0x3a
 12715 009d 0B       		.uleb128 0xb
 12716 009e 3B       		.uleb128 0x3b
 12717 009f 0B       		.uleb128 0xb
 12718 00a0 49       		.uleb128 0x49
 12719 00a1 13       		.uleb128 0x13
 12720 00a2 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 303


 12721 00a3 00       		.byte	0
 12722 00a4 0D       		.uleb128 0xd
 12723 00a5 01       		.uleb128 0x1
 12724 00a6 01       		.byte	0x1
 12725 00a7 49       		.uleb128 0x49
 12726 00a8 13       		.uleb128 0x13
 12727 00a9 01       		.uleb128 0x1
 12728 00aa 13       		.uleb128 0x13
 12729 00ab 00       		.byte	0
 12730 00ac 00       		.byte	0
 12731 00ad 0E       		.uleb128 0xe
 12732 00ae 21       		.uleb128 0x21
 12733 00af 00       		.byte	0
 12734 00b0 49       		.uleb128 0x49
 12735 00b1 13       		.uleb128 0x13
 12736 00b2 2F       		.uleb128 0x2f
 12737 00b3 0B       		.uleb128 0xb
 12738 00b4 00       		.byte	0
 12739 00b5 00       		.byte	0
 12740 00b6 0F       		.uleb128 0xf
 12741 00b7 24       		.uleb128 0x24
 12742 00b8 00       		.byte	0
 12743 00b9 0B       		.uleb128 0xb
 12744 00ba 0B       		.uleb128 0xb
 12745 00bb 3E       		.uleb128 0x3e
 12746 00bc 0B       		.uleb128 0xb
 12747 00bd 03       		.uleb128 0x3
 12748 00be 08       		.uleb128 0x8
 12749 00bf 00       		.byte	0
 12750 00c0 00       		.byte	0
 12751 00c1 10       		.uleb128 0x10
 12752 00c2 26       		.uleb128 0x26
 12753 00c3 00       		.byte	0
 12754 00c4 49       		.uleb128 0x49
 12755 00c5 13       		.uleb128 0x13
 12756 00c6 00       		.byte	0
 12757 00c7 00       		.byte	0
 12758 00c8 11       		.uleb128 0x11
 12759 00c9 0F       		.uleb128 0xf
 12760 00ca 00       		.byte	0
 12761 00cb 0B       		.uleb128 0xb
 12762 00cc 0B       		.uleb128 0xb
 12763 00cd 49       		.uleb128 0x49
 12764 00ce 13       		.uleb128 0x13
 12765 00cf 00       		.byte	0
 12766 00d0 00       		.byte	0
 12767 00d1 12       		.uleb128 0x12
 12768 00d2 39       		.uleb128 0x39
 12769 00d3 01       		.byte	0x1
 12770 00d4 03       		.uleb128 0x3
 12771 00d5 08       		.uleb128 0x8
 12772 00d6 3A       		.uleb128 0x3a
 12773 00d7 0B       		.uleb128 0xb
 12774 00d8 3B       		.uleb128 0x3b
 12775 00d9 0B       		.uleb128 0xb
 12776 00da 01       		.uleb128 0x1
 12777 00db 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 304


 12778 00dc 00       		.byte	0
 12779 00dd 00       		.byte	0
 12780 00de 13       		.uleb128 0x13
 12781 00df 08       		.uleb128 0x8
 12782 00e0 00       		.byte	0
 12783 00e1 3A       		.uleb128 0x3a
 12784 00e2 0B       		.uleb128 0xb
 12785 00e3 3B       		.uleb128 0x3b
 12786 00e4 0B       		.uleb128 0xb
 12787 00e5 18       		.uleb128 0x18
 12788 00e6 13       		.uleb128 0x13
 12789 00e7 00       		.byte	0
 12790 00e8 00       		.byte	0
 12791 00e9 14       		.uleb128 0x14
 12792 00ea 08       		.uleb128 0x8
 12793 00eb 00       		.byte	0
 12794 00ec 3A       		.uleb128 0x3a
 12795 00ed 0B       		.uleb128 0xb
 12796 00ee 3B       		.uleb128 0x3b
 12797 00ef 05       		.uleb128 0x5
 12798 00f0 18       		.uleb128 0x18
 12799 00f1 13       		.uleb128 0x13
 12800 00f2 00       		.byte	0
 12801 00f3 00       		.byte	0
 12802 00f4 15       		.uleb128 0x15
 12803 00f5 39       		.uleb128 0x39
 12804 00f6 01       		.byte	0x1
 12805 00f7 03       		.uleb128 0x3
 12806 00f8 0E       		.uleb128 0xe
 12807 00f9 3A       		.uleb128 0x3a
 12808 00fa 0B       		.uleb128 0xb
 12809 00fb 3B       		.uleb128 0x3b
 12810 00fc 0B       		.uleb128 0xb
 12811 00fd 01       		.uleb128 0x1
 12812 00fe 13       		.uleb128 0x13
 12813 00ff 00       		.byte	0
 12814 0100 00       		.byte	0
 12815 0101 16       		.uleb128 0x16
 12816 0102 02       		.uleb128 0x2
 12817 0103 01       		.byte	0x1
 12818 0104 03       		.uleb128 0x3
 12819 0105 0E       		.uleb128 0xe
 12820 0106 0B       		.uleb128 0xb
 12821 0107 0B       		.uleb128 0xb
 12822 0108 3A       		.uleb128 0x3a
 12823 0109 0B       		.uleb128 0xb
 12824 010a 3B       		.uleb128 0x3b
 12825 010b 0B       		.uleb128 0xb
 12826 010c 01       		.uleb128 0x1
 12827 010d 13       		.uleb128 0x13
 12828 010e 00       		.byte	0
 12829 010f 00       		.byte	0
 12830 0110 17       		.uleb128 0x17
 12831 0111 2E       		.uleb128 0x2e
 12832 0112 01       		.byte	0x1
 12833 0113 3F       		.uleb128 0x3f
 12834 0114 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 305


 12835 0115 03       		.uleb128 0x3
 12836 0116 0E       		.uleb128 0xe
 12837 0117 3A       		.uleb128 0x3a
 12838 0118 0B       		.uleb128 0xb
 12839 0119 3B       		.uleb128 0x3b
 12840 011a 0B       		.uleb128 0xb
 12841 011b 3C       		.uleb128 0x3c
 12842 011c 19       		.uleb128 0x19
 12843 011d 63       		.uleb128 0x63
 12844 011e 19       		.uleb128 0x19
 12845 011f 64       		.uleb128 0x64
 12846 0120 13       		.uleb128 0x13
 12847 0121 01       		.uleb128 0x1
 12848 0122 13       		.uleb128 0x13
 12849 0123 00       		.byte	0
 12850 0124 00       		.byte	0
 12851 0125 18       		.uleb128 0x18
 12852 0126 05       		.uleb128 0x5
 12853 0127 00       		.byte	0
 12854 0128 49       		.uleb128 0x49
 12855 0129 13       		.uleb128 0x13
 12856 012a 34       		.uleb128 0x34
 12857 012b 19       		.uleb128 0x19
 12858 012c 00       		.byte	0
 12859 012d 00       		.byte	0
 12860 012e 19       		.uleb128 0x19
 12861 012f 05       		.uleb128 0x5
 12862 0130 00       		.byte	0
 12863 0131 49       		.uleb128 0x49
 12864 0132 13       		.uleb128 0x13
 12865 0133 00       		.byte	0
 12866 0134 00       		.byte	0
 12867 0135 1A       		.uleb128 0x1a
 12868 0136 2E       		.uleb128 0x2e
 12869 0137 01       		.byte	0x1
 12870 0138 3F       		.uleb128 0x3f
 12871 0139 19       		.uleb128 0x19
 12872 013a 03       		.uleb128 0x3
 12873 013b 0E       		.uleb128 0xe
 12874 013c 3A       		.uleb128 0x3a
 12875 013d 0B       		.uleb128 0xb
 12876 013e 3B       		.uleb128 0x3b
 12877 013f 0B       		.uleb128 0xb
 12878 0140 6E       		.uleb128 0x6e
 12879 0141 0E       		.uleb128 0xe
 12880 0142 3C       		.uleb128 0x3c
 12881 0143 19       		.uleb128 0x19
 12882 0144 64       		.uleb128 0x64
 12883 0145 13       		.uleb128 0x13
 12884 0146 01       		.uleb128 0x1
 12885 0147 13       		.uleb128 0x13
 12886 0148 00       		.byte	0
 12887 0149 00       		.byte	0
 12888 014a 1B       		.uleb128 0x1b
 12889 014b 2E       		.uleb128 0x2e
 12890 014c 01       		.byte	0x1
 12891 014d 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccrWPnlb.s 			page 306


 12892 014e 19       		.uleb128 0x19
 12893 014f 03       		.uleb128 0x3
 12894 0150 0E       		.uleb128 0xe
 12895 0151 3A       		.uleb128 0x3a
 12896 0152 0B       		.uleb128 0xb
 12897 0153 3B       		.uleb128 0x3b
 12898 0154 0B       		.uleb128 0xb
 12899 0155 6E       		.uleb128 0x6e
 12900 0156 0E       		.uleb128 0xe
 12901 0157 49       		.uleb128 0x49
 12902 0158 13       		.uleb128 0x13
 12903 0159 3C       		.uleb128 0x3c
 12904 015a 19       		.uleb128 0x19
 12905 015b 64       		.uleb128 0x64
 12906 015c 13       		.uleb128 0x13
 12907 015d 01       		.uleb128 0x1
 12908 015e 13       		.uleb128 0x13
 12909 015f 00       		.byte	0
 12910 0160 00       		.byte	0
 12911 0161 1C       		.uleb128 0x1c
 12912 0162 2E       		.uleb128 0x2e
 12913 0163 01       		.byte	0x1
 12914 0164 3F       		.uleb128 0x3f
 12915 0165 19       		.uleb128 0x19
 12916 0166 03       		.uleb128 0x3
 12917 0167 0E       		.uleb128 0xe
 12918 0168 3A       		.uleb128 0x3a
 12919 0169 0B       		.uleb128 0xb
 12920 016a 3B       		.uleb128 0x3b
 12921 016b 0B       		.uleb128 0xb
 12922 016c 32       		.uleb128 0x32
 12923 016d 0B       		.uleb128 0xb
 12924 016e 3C       		.uleb128 0x3c
 12925 016f 19       		.uleb128 0x19
 12926 0170 64       		.uleb128 0x64
 12927 0171 13       		.uleb128 0x13
 12928 0172 01       		.uleb128 0x1
 12929 0173 13       		.uleb128 0x13
 12930 0174 00       		.byte	0
 12931 0175 00       		.byte	0
 12932 0176 1D       		.uleb128 0x1d
 12933 0177 2E       		.uleb128 0x2e
 12934 0178 01       		.byte	0x1
 12935 0179 3F       		.uleb128 0x3f
 12936 017a 19       		.uleb128 0x19
 12937 017b 03       		.uleb128 0x3
 12938 017c 0E       		.uleb128 0xe
 12939 017d 3A       		.uleb128 0x3a
 12940 017e 0B       		.uleb128 0xb
 12941 017f 3B       		.uleb128 0x3b
 12942 0180 0B       		.uleb128 0xb
 12943 0181 6E       		.uleb128 0x6e
 12944 0182 0E       		.uleb128 0xe
 12945 0183 49       		.uleb128 0x49
 12946 0184 13       		.uleb128 0x13
 12947 0185 32       		.uleb128 0x32
 12948 0186 0B       		.uleb128 0xb
GAS LISTING /tmp/ccrWPnlb.s 			page 307


 12949 0187 3C       		.uleb128 0x3c
 12950 0188 19       		.uleb128 0x19
 12951 0189 64       		.uleb128 0x64
 12952 018a 13       		.uleb128 0x13
 12953 018b 01       		.uleb128 0x1
 12954 018c 13       		.uleb128 0x13
 12955 018d 00       		.byte	0
 12956 018e 00       		.byte	0
 12957 018f 1E       		.uleb128 0x1e
 12958 0190 2E       		.uleb128 0x2e
 12959 0191 01       		.byte	0x1
 12960 0192 3F       		.uleb128 0x3f
 12961 0193 19       		.uleb128 0x19
 12962 0194 03       		.uleb128 0x3
 12963 0195 0E       		.uleb128 0xe
 12964 0196 3A       		.uleb128 0x3a
 12965 0197 0B       		.uleb128 0xb
 12966 0198 3B       		.uleb128 0x3b
 12967 0199 0B       		.uleb128 0xb
 12968 019a 6E       		.uleb128 0x6e
 12969 019b 0E       		.uleb128 0xe
 12970 019c 32       		.uleb128 0x32
 12971 019d 0B       		.uleb128 0xb
 12972 019e 3C       		.uleb128 0x3c
 12973 019f 19       		.uleb128 0x19
 12974 01a0 64       		.uleb128 0x64
 12975 01a1 13       		.uleb128 0x13
 12976 01a2 01       		.uleb128 0x1
 12977 01a3 13       		.uleb128 0x13
 12978 01a4 00       		.byte	0
 12979 01a5 00       		.byte	0
 12980 01a6 1F       		.uleb128 0x1f
 12981 01a7 2E       		.uleb128 0x2e
 12982 01a8 01       		.byte	0x1
 12983 01a9 3F       		.uleb128 0x3f
 12984 01aa 19       		.uleb128 0x19
 12985 01ab 03       		.uleb128 0x3
 12986 01ac 0E       		.uleb128 0xe
 12987 01ad 3A       		.uleb128 0x3a
 12988 01ae 0B       		.uleb128 0xb
 12989 01af 3B       		.uleb128 0x3b
 12990 01b0 0B       		.uleb128 0xb
 12991 01b1 6E       		.uleb128 0x6e
 12992 01b2 0E       		.uleb128 0xe
 12993 01b3 49       		.uleb128 0x49
 12994 01b4 13       		.uleb128 0x13
 12995 01b5 32       		.uleb128 0x32
 12996 01b6 0B       		.uleb128 0xb
 12997 01b7 3C       		.uleb128 0x3c
 12998 01b8 19       		.uleb128 0x19
 12999 01b9 63       		.uleb128 0x63
 13000 01ba 19       		.uleb128 0x19
 13001 01bb 64       		.uleb128 0x64
 13002 01bc 13       		.uleb128 0x13
 13003 01bd 01       		.uleb128 0x1
 13004 01be 13       		.uleb128 0x13
 13005 01bf 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 308


 13006 01c0 00       		.byte	0
 13007 01c1 20       		.uleb128 0x20
 13008 01c2 2E       		.uleb128 0x2e
 13009 01c3 01       		.byte	0x1
 13010 01c4 3F       		.uleb128 0x3f
 13011 01c5 19       		.uleb128 0x19
 13012 01c6 03       		.uleb128 0x3
 13013 01c7 0E       		.uleb128 0xe
 13014 01c8 3A       		.uleb128 0x3a
 13015 01c9 0B       		.uleb128 0xb
 13016 01ca 3B       		.uleb128 0x3b
 13017 01cb 0B       		.uleb128 0xb
 13018 01cc 6E       		.uleb128 0x6e
 13019 01cd 0E       		.uleb128 0xe
 13020 01ce 49       		.uleb128 0x49
 13021 01cf 13       		.uleb128 0x13
 13022 01d0 32       		.uleb128 0x32
 13023 01d1 0B       		.uleb128 0xb
 13024 01d2 3C       		.uleb128 0x3c
 13025 01d3 19       		.uleb128 0x19
 13026 01d4 64       		.uleb128 0x64
 13027 01d5 13       		.uleb128 0x13
 13028 01d6 00       		.byte	0
 13029 01d7 00       		.byte	0
 13030 01d8 21       		.uleb128 0x21
 13031 01d9 02       		.uleb128 0x2
 13032 01da 00       		.byte	0
 13033 01db 03       		.uleb128 0x3
 13034 01dc 0E       		.uleb128 0xe
 13035 01dd 3C       		.uleb128 0x3c
 13036 01de 19       		.uleb128 0x19
 13037 01df 00       		.byte	0
 13038 01e0 00       		.byte	0
 13039 01e1 22       		.uleb128 0x22
 13040 01e2 13       		.uleb128 0x13
 13041 01e3 00       		.byte	0
 13042 01e4 03       		.uleb128 0x3
 13043 01e5 0E       		.uleb128 0xe
 13044 01e6 0B       		.uleb128 0xb
 13045 01e7 0B       		.uleb128 0xb
 13046 01e8 3A       		.uleb128 0x3a
 13047 01e9 0B       		.uleb128 0xb
 13048 01ea 3B       		.uleb128 0x3b
 13049 01eb 0B       		.uleb128 0xb
 13050 01ec 00       		.byte	0
 13051 01ed 00       		.byte	0
 13052 01ee 23       		.uleb128 0x23
 13053 01ef 39       		.uleb128 0x39
 13054 01f0 00       		.byte	0
 13055 01f1 03       		.uleb128 0x3
 13056 01f2 0E       		.uleb128 0xe
 13057 01f3 3A       		.uleb128 0x3a
 13058 01f4 0B       		.uleb128 0xb
 13059 01f5 3B       		.uleb128 0x3b
 13060 01f6 0B       		.uleb128 0xb
 13061 01f7 00       		.byte	0
 13062 01f8 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 309


 13063 01f9 24       		.uleb128 0x24
 13064 01fa 2E       		.uleb128 0x2e
 13065 01fb 01       		.byte	0x1
 13066 01fc 3F       		.uleb128 0x3f
 13067 01fd 19       		.uleb128 0x19
 13068 01fe 03       		.uleb128 0x3
 13069 01ff 0E       		.uleb128 0xe
 13070 0200 3A       		.uleb128 0x3a
 13071 0201 0B       		.uleb128 0xb
 13072 0202 3B       		.uleb128 0x3b
 13073 0203 0B       		.uleb128 0xb
 13074 0204 6E       		.uleb128 0x6e
 13075 0205 0E       		.uleb128 0xe
 13076 0206 3C       		.uleb128 0x3c
 13077 0207 19       		.uleb128 0x19
 13078 0208 01       		.uleb128 0x1
 13079 0209 13       		.uleb128 0x13
 13080 020a 00       		.byte	0
 13081 020b 00       		.byte	0
 13082 020c 25       		.uleb128 0x25
 13083 020d 2E       		.uleb128 0x2e
 13084 020e 01       		.byte	0x1
 13085 020f 3F       		.uleb128 0x3f
 13086 0210 19       		.uleb128 0x19
 13087 0211 03       		.uleb128 0x3
 13088 0212 08       		.uleb128 0x8
 13089 0213 3A       		.uleb128 0x3a
 13090 0214 0B       		.uleb128 0xb
 13091 0215 3B       		.uleb128 0x3b
 13092 0216 0B       		.uleb128 0xb
 13093 0217 6E       		.uleb128 0x6e
 13094 0218 0E       		.uleb128 0xe
 13095 0219 49       		.uleb128 0x49
 13096 021a 13       		.uleb128 0x13
 13097 021b 3C       		.uleb128 0x3c
 13098 021c 19       		.uleb128 0x19
 13099 021d 01       		.uleb128 0x1
 13100 021e 13       		.uleb128 0x13
 13101 021f 00       		.byte	0
 13102 0220 00       		.byte	0
 13103 0221 26       		.uleb128 0x26
 13104 0222 2E       		.uleb128 0x2e
 13105 0223 01       		.byte	0x1
 13106 0224 3F       		.uleb128 0x3f
 13107 0225 19       		.uleb128 0x19
 13108 0226 03       		.uleb128 0x3
 13109 0227 0E       		.uleb128 0xe
 13110 0228 3A       		.uleb128 0x3a
 13111 0229 0B       		.uleb128 0xb
 13112 022a 3B       		.uleb128 0x3b
 13113 022b 05       		.uleb128 0x5
 13114 022c 6E       		.uleb128 0x6e
 13115 022d 0E       		.uleb128 0xe
 13116 022e 49       		.uleb128 0x49
 13117 022f 13       		.uleb128 0x13
 13118 0230 3C       		.uleb128 0x3c
 13119 0231 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 310


 13120 0232 01       		.uleb128 0x1
 13121 0233 13       		.uleb128 0x13
 13122 0234 00       		.byte	0
 13123 0235 00       		.byte	0
 13124 0236 27       		.uleb128 0x27
 13125 0237 2E       		.uleb128 0x2e
 13126 0238 00       		.byte	0
 13127 0239 3F       		.uleb128 0x3f
 13128 023a 19       		.uleb128 0x19
 13129 023b 03       		.uleb128 0x3
 13130 023c 08       		.uleb128 0x8
 13131 023d 3A       		.uleb128 0x3a
 13132 023e 0B       		.uleb128 0xb
 13133 023f 3B       		.uleb128 0x3b
 13134 0240 05       		.uleb128 0x5
 13135 0241 6E       		.uleb128 0x6e
 13136 0242 0E       		.uleb128 0xe
 13137 0243 49       		.uleb128 0x49
 13138 0244 13       		.uleb128 0x13
 13139 0245 3C       		.uleb128 0x3c
 13140 0246 19       		.uleb128 0x19
 13141 0247 00       		.byte	0
 13142 0248 00       		.byte	0
 13143 0249 28       		.uleb128 0x28
 13144 024a 2E       		.uleb128 0x2e
 13145 024b 01       		.byte	0x1
 13146 024c 3F       		.uleb128 0x3f
 13147 024d 19       		.uleb128 0x19
 13148 024e 03       		.uleb128 0x3
 13149 024f 0E       		.uleb128 0xe
 13150 0250 3A       		.uleb128 0x3a
 13151 0251 0B       		.uleb128 0xb
 13152 0252 3B       		.uleb128 0x3b
 13153 0253 05       		.uleb128 0x5
 13154 0254 6E       		.uleb128 0x6e
 13155 0255 0E       		.uleb128 0xe
 13156 0256 49       		.uleb128 0x49
 13157 0257 13       		.uleb128 0x13
 13158 0258 3C       		.uleb128 0x3c
 13159 0259 19       		.uleb128 0x19
 13160 025a 00       		.byte	0
 13161 025b 00       		.byte	0
 13162 025c 29       		.uleb128 0x29
 13163 025d 04       		.uleb128 0x4
 13164 025e 01       		.byte	0x1
 13165 025f 03       		.uleb128 0x3
 13166 0260 0E       		.uleb128 0xe
 13167 0261 0B       		.uleb128 0xb
 13168 0262 0B       		.uleb128 0xb
 13169 0263 3A       		.uleb128 0x3a
 13170 0264 0B       		.uleb128 0xb
 13171 0265 3B       		.uleb128 0x3b
 13172 0266 0B       		.uleb128 0xb
 13173 0267 01       		.uleb128 0x1
 13174 0268 13       		.uleb128 0x13
 13175 0269 00       		.byte	0
 13176 026a 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 311


 13177 026b 2A       		.uleb128 0x2a
 13178 026c 28       		.uleb128 0x28
 13179 026d 00       		.byte	0
 13180 026e 03       		.uleb128 0x3
 13181 026f 0E       		.uleb128 0xe
 13182 0270 1C       		.uleb128 0x1c
 13183 0271 0D       		.uleb128 0xd
 13184 0272 00       		.byte	0
 13185 0273 00       		.byte	0
 13186 0274 2B       		.uleb128 0x2b
 13187 0275 02       		.uleb128 0x2
 13188 0276 01       		.byte	0x1
 13189 0277 03       		.uleb128 0x3
 13190 0278 0E       		.uleb128 0xe
 13191 0279 3C       		.uleb128 0x3c
 13192 027a 19       		.uleb128 0x19
 13193 027b 01       		.uleb128 0x1
 13194 027c 13       		.uleb128 0x13
 13195 027d 00       		.byte	0
 13196 027e 00       		.byte	0
 13197 027f 2C       		.uleb128 0x2c
 13198 0280 02       		.uleb128 0x2
 13199 0281 01       		.byte	0x1
 13200 0282 03       		.uleb128 0x3
 13201 0283 0E       		.uleb128 0xe
 13202 0284 0B       		.uleb128 0xb
 13203 0285 0B       		.uleb128 0xb
 13204 0286 3A       		.uleb128 0x3a
 13205 0287 0B       		.uleb128 0xb
 13206 0288 3B       		.uleb128 0x3b
 13207 0289 05       		.uleb128 0x5
 13208 028a 32       		.uleb128 0x32
 13209 028b 0B       		.uleb128 0xb
 13210 028c 01       		.uleb128 0x1
 13211 028d 13       		.uleb128 0x13
 13212 028e 00       		.byte	0
 13213 028f 00       		.byte	0
 13214 0290 2D       		.uleb128 0x2d
 13215 0291 0D       		.uleb128 0xd
 13216 0292 00       		.byte	0
 13217 0293 03       		.uleb128 0x3
 13218 0294 0E       		.uleb128 0xe
 13219 0295 3A       		.uleb128 0x3a
 13220 0296 0B       		.uleb128 0xb
 13221 0297 3B       		.uleb128 0x3b
 13222 0298 05       		.uleb128 0x5
 13223 0299 49       		.uleb128 0x49
 13224 029a 13       		.uleb128 0x13
 13225 029b 3F       		.uleb128 0x3f
 13226 029c 19       		.uleb128 0x19
 13227 029d 3C       		.uleb128 0x3c
 13228 029e 19       		.uleb128 0x19
 13229 029f 00       		.byte	0
 13230 02a0 00       		.byte	0
 13231 02a1 2E       		.uleb128 0x2e
 13232 02a2 2E       		.uleb128 0x2e
 13233 02a3 01       		.byte	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 312


 13234 02a4 3F       		.uleb128 0x3f
 13235 02a5 19       		.uleb128 0x19
 13236 02a6 03       		.uleb128 0x3
 13237 02a7 0E       		.uleb128 0xe
 13238 02a8 3A       		.uleb128 0x3a
 13239 02a9 0B       		.uleb128 0xb
 13240 02aa 3B       		.uleb128 0x3b
 13241 02ab 05       		.uleb128 0x5
 13242 02ac 32       		.uleb128 0x32
 13243 02ad 0B       		.uleb128 0xb
 13244 02ae 3C       		.uleb128 0x3c
 13245 02af 19       		.uleb128 0x19
 13246 02b0 64       		.uleb128 0x64
 13247 02b1 13       		.uleb128 0x13
 13248 02b2 01       		.uleb128 0x1
 13249 02b3 13       		.uleb128 0x13
 13250 02b4 00       		.byte	0
 13251 02b5 00       		.byte	0
 13252 02b6 2F       		.uleb128 0x2f
 13253 02b7 2E       		.uleb128 0x2e
 13254 02b8 01       		.byte	0x1
 13255 02b9 3F       		.uleb128 0x3f
 13256 02ba 19       		.uleb128 0x19
 13257 02bb 03       		.uleb128 0x3
 13258 02bc 0E       		.uleb128 0xe
 13259 02bd 3A       		.uleb128 0x3a
 13260 02be 0B       		.uleb128 0xb
 13261 02bf 3B       		.uleb128 0x3b
 13262 02c0 05       		.uleb128 0x5
 13263 02c1 32       		.uleb128 0x32
 13264 02c2 0B       		.uleb128 0xb
 13265 02c3 3C       		.uleb128 0x3c
 13266 02c4 19       		.uleb128 0x19
 13267 02c5 64       		.uleb128 0x64
 13268 02c6 13       		.uleb128 0x13
 13269 02c7 00       		.byte	0
 13270 02c8 00       		.byte	0
 13271 02c9 30       		.uleb128 0x30
 13272 02ca 16       		.uleb128 0x16
 13273 02cb 00       		.byte	0
 13274 02cc 03       		.uleb128 0x3
 13275 02cd 0E       		.uleb128 0xe
 13276 02ce 3A       		.uleb128 0x3a
 13277 02cf 0B       		.uleb128 0xb
 13278 02d0 3B       		.uleb128 0x3b
 13279 02d1 05       		.uleb128 0x5
 13280 02d2 49       		.uleb128 0x49
 13281 02d3 13       		.uleb128 0x13
 13282 02d4 32       		.uleb128 0x32
 13283 02d5 0B       		.uleb128 0xb
 13284 02d6 00       		.byte	0
 13285 02d7 00       		.byte	0
 13286 02d8 31       		.uleb128 0x31
 13287 02d9 16       		.uleb128 0x16
 13288 02da 00       		.byte	0
 13289 02db 03       		.uleb128 0x3
 13290 02dc 0E       		.uleb128 0xe
GAS LISTING /tmp/ccrWPnlb.s 			page 313


 13291 02dd 3A       		.uleb128 0x3a
 13292 02de 0B       		.uleb128 0xb
 13293 02df 3B       		.uleb128 0x3b
 13294 02e0 0B       		.uleb128 0xb
 13295 02e1 49       		.uleb128 0x49
 13296 02e2 13       		.uleb128 0x13
 13297 02e3 32       		.uleb128 0x32
 13298 02e4 0B       		.uleb128 0xb
 13299 02e5 00       		.byte	0
 13300 02e6 00       		.byte	0
 13301 02e7 32       		.uleb128 0x32
 13302 02e8 0D       		.uleb128 0xd
 13303 02e9 00       		.byte	0
 13304 02ea 03       		.uleb128 0x3
 13305 02eb 0E       		.uleb128 0xe
 13306 02ec 3A       		.uleb128 0x3a
 13307 02ed 0B       		.uleb128 0xb
 13308 02ee 3B       		.uleb128 0x3b
 13309 02ef 05       		.uleb128 0x5
 13310 02f0 49       		.uleb128 0x49
 13311 02f1 13       		.uleb128 0x13
 13312 02f2 3F       		.uleb128 0x3f
 13313 02f3 19       		.uleb128 0x19
 13314 02f4 32       		.uleb128 0x32
 13315 02f5 0B       		.uleb128 0xb
 13316 02f6 3C       		.uleb128 0x3c
 13317 02f7 19       		.uleb128 0x19
 13318 02f8 1C       		.uleb128 0x1c
 13319 02f9 0B       		.uleb128 0xb
 13320 02fa 00       		.byte	0
 13321 02fb 00       		.byte	0
 13322 02fc 33       		.uleb128 0x33
 13323 02fd 0D       		.uleb128 0xd
 13324 02fe 00       		.byte	0
 13325 02ff 03       		.uleb128 0x3
 13326 0300 08       		.uleb128 0x8
 13327 0301 3A       		.uleb128 0x3a
 13328 0302 0B       		.uleb128 0xb
 13329 0303 3B       		.uleb128 0x3b
 13330 0304 05       		.uleb128 0x5
 13331 0305 49       		.uleb128 0x49
 13332 0306 13       		.uleb128 0x13
 13333 0307 3F       		.uleb128 0x3f
 13334 0308 19       		.uleb128 0x19
 13335 0309 32       		.uleb128 0x32
 13336 030a 0B       		.uleb128 0xb
 13337 030b 3C       		.uleb128 0x3c
 13338 030c 19       		.uleb128 0x19
 13339 030d 1C       		.uleb128 0x1c
 13340 030e 0B       		.uleb128 0xb
 13341 030f 00       		.byte	0
 13342 0310 00       		.byte	0
 13343 0311 34       		.uleb128 0x34
 13344 0312 0D       		.uleb128 0xd
 13345 0313 00       		.byte	0
 13346 0314 03       		.uleb128 0x3
 13347 0315 0E       		.uleb128 0xe
GAS LISTING /tmp/ccrWPnlb.s 			page 314


 13348 0316 3A       		.uleb128 0x3a
 13349 0317 0B       		.uleb128 0xb
 13350 0318 3B       		.uleb128 0x3b
 13351 0319 05       		.uleb128 0x5
 13352 031a 49       		.uleb128 0x49
 13353 031b 13       		.uleb128 0x13
 13354 031c 3F       		.uleb128 0x3f
 13355 031d 19       		.uleb128 0x19
 13356 031e 32       		.uleb128 0x32
 13357 031f 0B       		.uleb128 0xb
 13358 0320 3C       		.uleb128 0x3c
 13359 0321 19       		.uleb128 0x19
 13360 0322 1C       		.uleb128 0x1c
 13361 0323 05       		.uleb128 0x5
 13362 0324 00       		.byte	0
 13363 0325 00       		.byte	0
 13364 0326 35       		.uleb128 0x35
 13365 0327 2F       		.uleb128 0x2f
 13366 0328 00       		.byte	0
 13367 0329 03       		.uleb128 0x3
 13368 032a 0E       		.uleb128 0xe
 13369 032b 49       		.uleb128 0x49
 13370 032c 13       		.uleb128 0x13
 13371 032d 00       		.byte	0
 13372 032e 00       		.byte	0
 13373 032f 36       		.uleb128 0x36
 13374 0330 2F       		.uleb128 0x2f
 13375 0331 00       		.byte	0
 13376 0332 03       		.uleb128 0x3
 13377 0333 0E       		.uleb128 0xe
 13378 0334 49       		.uleb128 0x49
 13379 0335 13       		.uleb128 0x13
 13380 0336 1E       		.uleb128 0x1e
 13381 0337 19       		.uleb128 0x19
 13382 0338 00       		.byte	0
 13383 0339 00       		.byte	0
 13384 033a 37       		.uleb128 0x37
 13385 033b 2E       		.uleb128 0x2e
 13386 033c 01       		.byte	0x1
 13387 033d 3F       		.uleb128 0x3f
 13388 033e 19       		.uleb128 0x19
 13389 033f 03       		.uleb128 0x3
 13390 0340 08       		.uleb128 0x8
 13391 0341 3A       		.uleb128 0x3a
 13392 0342 0B       		.uleb128 0xb
 13393 0343 3B       		.uleb128 0x3b
 13394 0344 0B       		.uleb128 0xb
 13395 0345 6E       		.uleb128 0x6e
 13396 0346 0E       		.uleb128 0xe
 13397 0347 49       		.uleb128 0x49
 13398 0348 13       		.uleb128 0x13
 13399 0349 32       		.uleb128 0x32
 13400 034a 0B       		.uleb128 0xb
 13401 034b 3C       		.uleb128 0x3c
 13402 034c 19       		.uleb128 0x19
 13403 034d 64       		.uleb128 0x64
 13404 034e 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 315


 13405 034f 01       		.uleb128 0x1
 13406 0350 13       		.uleb128 0x13
 13407 0351 00       		.byte	0
 13408 0352 00       		.byte	0
 13409 0353 38       		.uleb128 0x38
 13410 0354 2E       		.uleb128 0x2e
 13411 0355 01       		.byte	0x1
 13412 0356 3F       		.uleb128 0x3f
 13413 0357 19       		.uleb128 0x19
 13414 0358 03       		.uleb128 0x3
 13415 0359 0E       		.uleb128 0xe
 13416 035a 3A       		.uleb128 0x3a
 13417 035b 0B       		.uleb128 0xb
 13418 035c 3B       		.uleb128 0x3b
 13419 035d 05       		.uleb128 0x5
 13420 035e 6E       		.uleb128 0x6e
 13421 035f 0E       		.uleb128 0xe
 13422 0360 49       		.uleb128 0x49
 13423 0361 13       		.uleb128 0x13
 13424 0362 32       		.uleb128 0x32
 13425 0363 0B       		.uleb128 0xb
 13426 0364 3C       		.uleb128 0x3c
 13427 0365 19       		.uleb128 0x19
 13428 0366 64       		.uleb128 0x64
 13429 0367 13       		.uleb128 0x13
 13430 0368 01       		.uleb128 0x1
 13431 0369 13       		.uleb128 0x13
 13432 036a 00       		.byte	0
 13433 036b 00       		.byte	0
 13434 036c 39       		.uleb128 0x39
 13435 036d 2E       		.uleb128 0x2e
 13436 036e 01       		.byte	0x1
 13437 036f 3F       		.uleb128 0x3f
 13438 0370 19       		.uleb128 0x19
 13439 0371 03       		.uleb128 0x3
 13440 0372 0E       		.uleb128 0xe
 13441 0373 3A       		.uleb128 0x3a
 13442 0374 0B       		.uleb128 0xb
 13443 0375 3B       		.uleb128 0x3b
 13444 0376 05       		.uleb128 0x5
 13445 0377 6E       		.uleb128 0x6e
 13446 0378 0E       		.uleb128 0xe
 13447 0379 49       		.uleb128 0x49
 13448 037a 13       		.uleb128 0x13
 13449 037b 4C       		.uleb128 0x4c
 13450 037c 0B       		.uleb128 0xb
 13451 037d 4D       		.uleb128 0x4d
 13452 037e 18       		.uleb128 0x18
 13453 037f 1D       		.uleb128 0x1d
 13454 0380 13       		.uleb128 0x13
 13455 0381 32       		.uleb128 0x32
 13456 0382 0B       		.uleb128 0xb
 13457 0383 3C       		.uleb128 0x3c
 13458 0384 19       		.uleb128 0x19
 13459 0385 64       		.uleb128 0x64
 13460 0386 13       		.uleb128 0x13
 13461 0387 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 316


 13462 0388 13       		.uleb128 0x13
 13463 0389 00       		.byte	0
 13464 038a 00       		.byte	0
 13465 038b 3A       		.uleb128 0x3a
 13466 038c 2E       		.uleb128 0x2e
 13467 038d 01       		.byte	0x1
 13468 038e 3F       		.uleb128 0x3f
 13469 038f 19       		.uleb128 0x19
 13470 0390 03       		.uleb128 0x3
 13471 0391 0E       		.uleb128 0xe
 13472 0392 3A       		.uleb128 0x3a
 13473 0393 0B       		.uleb128 0xb
 13474 0394 3B       		.uleb128 0x3b
 13475 0395 05       		.uleb128 0x5
 13476 0396 6E       		.uleb128 0x6e
 13477 0397 0E       		.uleb128 0xe
 13478 0398 3C       		.uleb128 0x3c
 13479 0399 19       		.uleb128 0x19
 13480 039a 64       		.uleb128 0x64
 13481 039b 13       		.uleb128 0x13
 13482 039c 00       		.byte	0
 13483 039d 00       		.byte	0
 13484 039e 3B       		.uleb128 0x3b
 13485 039f 2E       		.uleb128 0x2e
 13486 03a0 01       		.byte	0x1
 13487 03a1 3F       		.uleb128 0x3f
 13488 03a2 19       		.uleb128 0x19
 13489 03a3 03       		.uleb128 0x3
 13490 03a4 0E       		.uleb128 0xe
 13491 03a5 3A       		.uleb128 0x3a
 13492 03a6 0B       		.uleb128 0xb
 13493 03a7 3B       		.uleb128 0x3b
 13494 03a8 0B       		.uleb128 0xb
 13495 03a9 6E       		.uleb128 0x6e
 13496 03aa 0E       		.uleb128 0xe
 13497 03ab 32       		.uleb128 0x32
 13498 03ac 0B       		.uleb128 0xb
 13499 03ad 3C       		.uleb128 0x3c
 13500 03ae 19       		.uleb128 0x19
 13501 03af 64       		.uleb128 0x64
 13502 03b0 13       		.uleb128 0x13
 13503 03b1 00       		.byte	0
 13504 03b2 00       		.byte	0
 13505 03b3 3C       		.uleb128 0x3c
 13506 03b4 2E       		.uleb128 0x2e
 13507 03b5 01       		.byte	0x1
 13508 03b6 3F       		.uleb128 0x3f
 13509 03b7 19       		.uleb128 0x19
 13510 03b8 03       		.uleb128 0x3
 13511 03b9 0E       		.uleb128 0xe
 13512 03ba 3A       		.uleb128 0x3a
 13513 03bb 0B       		.uleb128 0xb
 13514 03bc 3B       		.uleb128 0x3b
 13515 03bd 0B       		.uleb128 0xb
 13516 03be 49       		.uleb128 0x49
 13517 03bf 13       		.uleb128 0x13
 13518 03c0 3C       		.uleb128 0x3c
GAS LISTING /tmp/ccrWPnlb.s 			page 317


 13519 03c1 19       		.uleb128 0x19
 13520 03c2 01       		.uleb128 0x1
 13521 03c3 13       		.uleb128 0x13
 13522 03c4 00       		.byte	0
 13523 03c5 00       		.byte	0
 13524 03c6 3D       		.uleb128 0x3d
 13525 03c7 2E       		.uleb128 0x2e
 13526 03c8 01       		.byte	0x1
 13527 03c9 3F       		.uleb128 0x3f
 13528 03ca 19       		.uleb128 0x19
 13529 03cb 03       		.uleb128 0x3
 13530 03cc 0E       		.uleb128 0xe
 13531 03cd 3A       		.uleb128 0x3a
 13532 03ce 0B       		.uleb128 0xb
 13533 03cf 3B       		.uleb128 0x3b
 13534 03d0 05       		.uleb128 0x5
 13535 03d1 49       		.uleb128 0x49
 13536 03d2 13       		.uleb128 0x13
 13537 03d3 3C       		.uleb128 0x3c
 13538 03d4 19       		.uleb128 0x19
 13539 03d5 01       		.uleb128 0x1
 13540 03d6 13       		.uleb128 0x13
 13541 03d7 00       		.byte	0
 13542 03d8 00       		.byte	0
 13543 03d9 3E       		.uleb128 0x3e
 13544 03da 2E       		.uleb128 0x2e
 13545 03db 01       		.byte	0x1
 13546 03dc 3F       		.uleb128 0x3f
 13547 03dd 19       		.uleb128 0x19
 13548 03de 03       		.uleb128 0x3
 13549 03df 08       		.uleb128 0x8
 13550 03e0 3A       		.uleb128 0x3a
 13551 03e1 0B       		.uleb128 0xb
 13552 03e2 3B       		.uleb128 0x3b
 13553 03e3 0B       		.uleb128 0xb
 13554 03e4 49       		.uleb128 0x49
 13555 03e5 13       		.uleb128 0x13
 13556 03e6 3C       		.uleb128 0x3c
 13557 03e7 19       		.uleb128 0x19
 13558 03e8 01       		.uleb128 0x1
 13559 03e9 13       		.uleb128 0x13
 13560 03ea 00       		.byte	0
 13561 03eb 00       		.byte	0
 13562 03ec 3F       		.uleb128 0x3f
 13563 03ed 34       		.uleb128 0x34
 13564 03ee 00       		.byte	0
 13565 03ef 03       		.uleb128 0x3
 13566 03f0 0E       		.uleb128 0xe
 13567 03f1 3A       		.uleb128 0x3a
 13568 03f2 0B       		.uleb128 0xb
 13569 03f3 3B       		.uleb128 0x3b
 13570 03f4 0B       		.uleb128 0xb
 13571 03f5 49       		.uleb128 0x49
 13572 03f6 13       		.uleb128 0x13
 13573 03f7 3C       		.uleb128 0x3c
 13574 03f8 19       		.uleb128 0x19
 13575 03f9 1C       		.uleb128 0x1c
GAS LISTING /tmp/ccrWPnlb.s 			page 318


 13576 03fa 0A       		.uleb128 0xa
 13577 03fb 00       		.byte	0
 13578 03fc 00       		.byte	0
 13579 03fd 40       		.uleb128 0x40
 13580 03fe 34       		.uleb128 0x34
 13581 03ff 00       		.byte	0
 13582 0400 03       		.uleb128 0x3
 13583 0401 0E       		.uleb128 0xe
 13584 0402 3A       		.uleb128 0x3a
 13585 0403 0B       		.uleb128 0xb
 13586 0404 3B       		.uleb128 0x3b
 13587 0405 0B       		.uleb128 0xb
 13588 0406 6E       		.uleb128 0x6e
 13589 0407 0E       		.uleb128 0xe
 13590 0408 49       		.uleb128 0x49
 13591 0409 13       		.uleb128 0x13
 13592 040a 3F       		.uleb128 0x3f
 13593 040b 19       		.uleb128 0x19
 13594 040c 3C       		.uleb128 0x3c
 13595 040d 19       		.uleb128 0x19
 13596 040e 00       		.byte	0
 13597 040f 00       		.byte	0
 13598 0410 41       		.uleb128 0x41
 13599 0411 34       		.uleb128 0x34
 13600 0412 00       		.byte	0
 13601 0413 03       		.uleb128 0x3
 13602 0414 0E       		.uleb128 0xe
 13603 0415 3A       		.uleb128 0x3a
 13604 0416 0B       		.uleb128 0xb
 13605 0417 3B       		.uleb128 0x3b
 13606 0418 0B       		.uleb128 0xb
 13607 0419 49       		.uleb128 0x49
 13608 041a 13       		.uleb128 0x13
 13609 041b 3C       		.uleb128 0x3c
 13610 041c 19       		.uleb128 0x19
 13611 041d 00       		.byte	0
 13612 041e 00       		.byte	0
 13613 041f 42       		.uleb128 0x42
 13614 0420 2E       		.uleb128 0x2e
 13615 0421 01       		.byte	0x1
 13616 0422 3F       		.uleb128 0x3f
 13617 0423 19       		.uleb128 0x19
 13618 0424 03       		.uleb128 0x3
 13619 0425 0E       		.uleb128 0xe
 13620 0426 3A       		.uleb128 0x3a
 13621 0427 0B       		.uleb128 0xb
 13622 0428 3B       		.uleb128 0x3b
 13623 0429 0B       		.uleb128 0xb
 13624 042a 6E       		.uleb128 0x6e
 13625 042b 0E       		.uleb128 0xe
 13626 042c 49       		.uleb128 0x49
 13627 042d 13       		.uleb128 0x13
 13628 042e 3C       		.uleb128 0x3c
 13629 042f 19       		.uleb128 0x19
 13630 0430 01       		.uleb128 0x1
 13631 0431 13       		.uleb128 0x13
 13632 0432 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 319


 13633 0433 00       		.byte	0
 13634 0434 43       		.uleb128 0x43
 13635 0435 2E       		.uleb128 0x2e
 13636 0436 00       		.byte	0
 13637 0437 3F       		.uleb128 0x3f
 13638 0438 19       		.uleb128 0x19
 13639 0439 03       		.uleb128 0x3
 13640 043a 0E       		.uleb128 0xe
 13641 043b 3A       		.uleb128 0x3a
 13642 043c 0B       		.uleb128 0xb
 13643 043d 3B       		.uleb128 0x3b
 13644 043e 0B       		.uleb128 0xb
 13645 043f 6E       		.uleb128 0x6e
 13646 0440 0E       		.uleb128 0xe
 13647 0441 3C       		.uleb128 0x3c
 13648 0442 19       		.uleb128 0x19
 13649 0443 00       		.byte	0
 13650 0444 00       		.byte	0
 13651 0445 44       		.uleb128 0x44
 13652 0446 18       		.uleb128 0x18
 13653 0447 00       		.byte	0
 13654 0448 00       		.byte	0
 13655 0449 00       		.byte	0
 13656 044a 45       		.uleb128 0x45
 13657 044b 2E       		.uleb128 0x2e
 13658 044c 00       		.byte	0
 13659 044d 3F       		.uleb128 0x3f
 13660 044e 19       		.uleb128 0x19
 13661 044f 03       		.uleb128 0x3
 13662 0450 0E       		.uleb128 0xe
 13663 0451 3A       		.uleb128 0x3a
 13664 0452 0B       		.uleb128 0xb
 13665 0453 3B       		.uleb128 0x3b
 13666 0454 05       		.uleb128 0x5
 13667 0455 49       		.uleb128 0x49
 13668 0456 13       		.uleb128 0x13
 13669 0457 3C       		.uleb128 0x3c
 13670 0458 19       		.uleb128 0x19
 13671 0459 00       		.byte	0
 13672 045a 00       		.byte	0
 13673 045b 46       		.uleb128 0x46
 13674 045c 13       		.uleb128 0x13
 13675 045d 01       		.byte	0x1
 13676 045e 03       		.uleb128 0x3
 13677 045f 08       		.uleb128 0x8
 13678 0460 0B       		.uleb128 0xb
 13679 0461 0B       		.uleb128 0xb
 13680 0462 3A       		.uleb128 0x3a
 13681 0463 0B       		.uleb128 0xb
 13682 0464 3B       		.uleb128 0x3b
 13683 0465 0B       		.uleb128 0xb
 13684 0466 01       		.uleb128 0x1
 13685 0467 13       		.uleb128 0x13
 13686 0468 00       		.byte	0
 13687 0469 00       		.byte	0
 13688 046a 47       		.uleb128 0x47
 13689 046b 0D       		.uleb128 0xd
GAS LISTING /tmp/ccrWPnlb.s 			page 320


 13690 046c 00       		.byte	0
 13691 046d 03       		.uleb128 0x3
 13692 046e 0E       		.uleb128 0xe
 13693 046f 3A       		.uleb128 0x3a
 13694 0470 0B       		.uleb128 0xb
 13695 0471 3B       		.uleb128 0x3b
 13696 0472 0B       		.uleb128 0xb
 13697 0473 49       		.uleb128 0x49
 13698 0474 13       		.uleb128 0x13
 13699 0475 3F       		.uleb128 0x3f
 13700 0476 19       		.uleb128 0x19
 13701 0477 3C       		.uleb128 0x3c
 13702 0478 19       		.uleb128 0x19
 13703 0479 00       		.byte	0
 13704 047a 00       		.byte	0
 13705 047b 48       		.uleb128 0x48
 13706 047c 13       		.uleb128 0x13
 13707 047d 01       		.byte	0x1
 13708 047e 03       		.uleb128 0x3
 13709 047f 0E       		.uleb128 0xe
 13710 0480 0B       		.uleb128 0xb
 13711 0481 0B       		.uleb128 0xb
 13712 0482 3A       		.uleb128 0x3a
 13713 0483 0B       		.uleb128 0xb
 13714 0484 3B       		.uleb128 0x3b
 13715 0485 0B       		.uleb128 0xb
 13716 0486 00       		.byte	0
 13717 0487 00       		.byte	0
 13718 0488 49       		.uleb128 0x49
 13719 0489 10       		.uleb128 0x10
 13720 048a 00       		.byte	0
 13721 048b 0B       		.uleb128 0xb
 13722 048c 0B       		.uleb128 0xb
 13723 048d 49       		.uleb128 0x49
 13724 048e 13       		.uleb128 0x13
 13725 048f 00       		.byte	0
 13726 0490 00       		.byte	0
 13727 0491 4A       		.uleb128 0x4a
 13728 0492 3B       		.uleb128 0x3b
 13729 0493 00       		.byte	0
 13730 0494 03       		.uleb128 0x3
 13731 0495 0E       		.uleb128 0xe
 13732 0496 00       		.byte	0
 13733 0497 00       		.byte	0
 13734 0498 4B       		.uleb128 0x4b
 13735 0499 42       		.uleb128 0x42
 13736 049a 00       		.byte	0
 13737 049b 0B       		.uleb128 0xb
 13738 049c 0B       		.uleb128 0xb
 13739 049d 49       		.uleb128 0x49
 13740 049e 13       		.uleb128 0x13
 13741 049f 00       		.byte	0
 13742 04a0 00       		.byte	0
 13743 04a1 4C       		.uleb128 0x4c
 13744 04a2 3A       		.uleb128 0x3a
 13745 04a3 00       		.byte	0
 13746 04a4 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccrWPnlb.s 			page 321


 13747 04a5 0B       		.uleb128 0xb
 13748 04a6 3B       		.uleb128 0x3b
 13749 04a7 0B       		.uleb128 0xb
 13750 04a8 18       		.uleb128 0x18
 13751 04a9 13       		.uleb128 0x13
 13752 04aa 00       		.byte	0
 13753 04ab 00       		.byte	0
 13754 04ac 4D       		.uleb128 0x4d
 13755 04ad 2E       		.uleb128 0x2e
 13756 04ae 00       		.byte	0
 13757 04af 3F       		.uleb128 0x3f
 13758 04b0 19       		.uleb128 0x19
 13759 04b1 03       		.uleb128 0x3
 13760 04b2 0E       		.uleb128 0xe
 13761 04b3 3A       		.uleb128 0x3a
 13762 04b4 0B       		.uleb128 0xb
 13763 04b5 3B       		.uleb128 0x3b
 13764 04b6 0B       		.uleb128 0xb
 13765 04b7 49       		.uleb128 0x49
 13766 04b8 13       		.uleb128 0x13
 13767 04b9 3C       		.uleb128 0x3c
 13768 04ba 19       		.uleb128 0x19
 13769 04bb 00       		.byte	0
 13770 04bc 00       		.byte	0
 13771 04bd 4E       		.uleb128 0x4e
 13772 04be 15       		.uleb128 0x15
 13773 04bf 01       		.byte	0x1
 13774 04c0 01       		.uleb128 0x1
 13775 04c1 13       		.uleb128 0x13
 13776 04c2 00       		.byte	0
 13777 04c3 00       		.byte	0
 13778 04c4 4F       		.uleb128 0x4f
 13779 04c5 26       		.uleb128 0x26
 13780 04c6 00       		.byte	0
 13781 04c7 00       		.byte	0
 13782 04c8 00       		.byte	0
 13783 04c9 50       		.uleb128 0x50
 13784 04ca 0D       		.uleb128 0xd
 13785 04cb 00       		.byte	0
 13786 04cc 03       		.uleb128 0x3
 13787 04cd 08       		.uleb128 0x8
 13788 04ce 3A       		.uleb128 0x3a
 13789 04cf 0B       		.uleb128 0xb
 13790 04d0 3B       		.uleb128 0x3b
 13791 04d1 0B       		.uleb128 0xb
 13792 04d2 49       		.uleb128 0x49
 13793 04d3 13       		.uleb128 0x13
 13794 04d4 38       		.uleb128 0x38
 13795 04d5 0B       		.uleb128 0xb
 13796 04d6 00       		.byte	0
 13797 04d7 00       		.byte	0
 13798 04d8 51       		.uleb128 0x51
 13799 04d9 15       		.uleb128 0x15
 13800 04da 01       		.byte	0x1
 13801 04db 49       		.uleb128 0x49
 13802 04dc 13       		.uleb128 0x13
 13803 04dd 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 322


 13804 04de 13       		.uleb128 0x13
 13805 04df 00       		.byte	0
 13806 04e0 00       		.byte	0
 13807 04e1 52       		.uleb128 0x52
 13808 04e2 15       		.uleb128 0x15
 13809 04e3 00       		.byte	0
 13810 04e4 00       		.byte	0
 13811 04e5 00       		.byte	0
 13812 04e6 53       		.uleb128 0x53
 13813 04e7 2E       		.uleb128 0x2e
 13814 04e8 01       		.byte	0x1
 13815 04e9 3F       		.uleb128 0x3f
 13816 04ea 19       		.uleb128 0x19
 13817 04eb 03       		.uleb128 0x3
 13818 04ec 08       		.uleb128 0x8
 13819 04ed 3A       		.uleb128 0x3a
 13820 04ee 0B       		.uleb128 0xb
 13821 04ef 3B       		.uleb128 0x3b
 13822 04f0 05       		.uleb128 0x5
 13823 04f1 49       		.uleb128 0x49
 13824 04f2 13       		.uleb128 0x13
 13825 04f3 3C       		.uleb128 0x3c
 13826 04f4 19       		.uleb128 0x19
 13827 04f5 01       		.uleb128 0x1
 13828 04f6 13       		.uleb128 0x13
 13829 04f7 00       		.byte	0
 13830 04f8 00       		.byte	0
 13831 04f9 54       		.uleb128 0x54
 13832 04fa 2E       		.uleb128 0x2e
 13833 04fb 01       		.byte	0x1
 13834 04fc 3F       		.uleb128 0x3f
 13835 04fd 19       		.uleb128 0x19
 13836 04fe 03       		.uleb128 0x3
 13837 04ff 0E       		.uleb128 0xe
 13838 0500 3A       		.uleb128 0x3a
 13839 0501 0B       		.uleb128 0xb
 13840 0502 3B       		.uleb128 0x3b
 13841 0503 05       		.uleb128 0x5
 13842 0504 3C       		.uleb128 0x3c
 13843 0505 19       		.uleb128 0x19
 13844 0506 01       		.uleb128 0x1
 13845 0507 13       		.uleb128 0x13
 13846 0508 00       		.byte	0
 13847 0509 00       		.byte	0
 13848 050a 55       		.uleb128 0x55
 13849 050b 16       		.uleb128 0x16
 13850 050c 00       		.byte	0
 13851 050d 03       		.uleb128 0x3
 13852 050e 0E       		.uleb128 0xe
 13853 050f 3A       		.uleb128 0x3a
 13854 0510 0B       		.uleb128 0xb
 13855 0511 3B       		.uleb128 0x3b
 13856 0512 0B       		.uleb128 0xb
 13857 0513 00       		.byte	0
 13858 0514 00       		.byte	0
 13859 0515 56       		.uleb128 0x56
 13860 0516 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccrWPnlb.s 			page 323


 13861 0517 01       		.byte	0x1
 13862 0518 47       		.uleb128 0x47
 13863 0519 13       		.uleb128 0x13
 13864 051a 20       		.uleb128 0x20
 13865 051b 0B       		.uleb128 0xb
 13866 051c 64       		.uleb128 0x64
 13867 051d 13       		.uleb128 0x13
 13868 051e 01       		.uleb128 0x1
 13869 051f 13       		.uleb128 0x13
 13870 0520 00       		.byte	0
 13871 0521 00       		.byte	0
 13872 0522 57       		.uleb128 0x57
 13873 0523 05       		.uleb128 0x5
 13874 0524 00       		.byte	0
 13875 0525 03       		.uleb128 0x3
 13876 0526 0E       		.uleb128 0xe
 13877 0527 49       		.uleb128 0x49
 13878 0528 13       		.uleb128 0x13
 13879 0529 34       		.uleb128 0x34
 13880 052a 19       		.uleb128 0x19
 13881 052b 00       		.byte	0
 13882 052c 00       		.byte	0
 13883 052d 58       		.uleb128 0x58
 13884 052e 2E       		.uleb128 0x2e
 13885 052f 01       		.byte	0x1
 13886 0530 03       		.uleb128 0x3
 13887 0531 0E       		.uleb128 0xe
 13888 0532 3A       		.uleb128 0x3a
 13889 0533 0B       		.uleb128 0xb
 13890 0534 3B       		.uleb128 0x3b
 13891 0535 0B       		.uleb128 0xb
 13892 0536 49       		.uleb128 0x49
 13893 0537 13       		.uleb128 0x13
 13894 0538 20       		.uleb128 0x20
 13895 0539 0B       		.uleb128 0xb
 13896 053a 01       		.uleb128 0x1
 13897 053b 13       		.uleb128 0x13
 13898 053c 00       		.byte	0
 13899 053d 00       		.byte	0
 13900 053e 59       		.uleb128 0x59
 13901 053f 05       		.uleb128 0x5
 13902 0540 00       		.byte	0
 13903 0541 03       		.uleb128 0x3
 13904 0542 08       		.uleb128 0x8
 13905 0543 3A       		.uleb128 0x3a
 13906 0544 0B       		.uleb128 0xb
 13907 0545 3B       		.uleb128 0x3b
 13908 0546 0B       		.uleb128 0xb
 13909 0547 49       		.uleb128 0x49
 13910 0548 13       		.uleb128 0x13
 13911 0549 00       		.byte	0
 13912 054a 00       		.byte	0
 13913 054b 5A       		.uleb128 0x5a
 13914 054c 05       		.uleb128 0x5
 13915 054d 00       		.byte	0
 13916 054e 03       		.uleb128 0x3
 13917 054f 0E       		.uleb128 0xe
GAS LISTING /tmp/ccrWPnlb.s 			page 324


 13918 0550 3A       		.uleb128 0x3a
 13919 0551 0B       		.uleb128 0xb
 13920 0552 3B       		.uleb128 0x3b
 13921 0553 0B       		.uleb128 0xb
 13922 0554 49       		.uleb128 0x49
 13923 0555 13       		.uleb128 0x13
 13924 0556 00       		.byte	0
 13925 0557 00       		.byte	0
 13926 0558 5B       		.uleb128 0x5b
 13927 0559 2E       		.uleb128 0x2e
 13928 055a 01       		.byte	0x1
 13929 055b 47       		.uleb128 0x47
 13930 055c 13       		.uleb128 0x13
 13931 055d 20       		.uleb128 0x20
 13932 055e 0B       		.uleb128 0xb
 13933 055f 01       		.uleb128 0x1
 13934 0560 13       		.uleb128 0x13
 13935 0561 00       		.byte	0
 13936 0562 00       		.byte	0
 13937 0563 5C       		.uleb128 0x5c
 13938 0564 05       		.uleb128 0x5
 13939 0565 00       		.byte	0
 13940 0566 03       		.uleb128 0x3
 13941 0567 08       		.uleb128 0x8
 13942 0568 3A       		.uleb128 0x3a
 13943 0569 0B       		.uleb128 0xb
 13944 056a 3B       		.uleb128 0x3b
 13945 056b 05       		.uleb128 0x5
 13946 056c 49       		.uleb128 0x49
 13947 056d 13       		.uleb128 0x13
 13948 056e 00       		.byte	0
 13949 056f 00       		.byte	0
 13950 0570 5D       		.uleb128 0x5d
 13951 0571 05       		.uleb128 0x5
 13952 0572 00       		.byte	0
 13953 0573 03       		.uleb128 0x3
 13954 0574 0E       		.uleb128 0xe
 13955 0575 3A       		.uleb128 0x3a
 13956 0576 0B       		.uleb128 0xb
 13957 0577 3B       		.uleb128 0x3b
 13958 0578 05       		.uleb128 0x5
 13959 0579 49       		.uleb128 0x49
 13960 057a 13       		.uleb128 0x13
 13961 057b 00       		.byte	0
 13962 057c 00       		.byte	0
 13963 057d 5E       		.uleb128 0x5e
 13964 057e 2E       		.uleb128 0x2e
 13965 057f 01       		.byte	0x1
 13966 0580 03       		.uleb128 0x3
 13967 0581 0E       		.uleb128 0xe
 13968 0582 3A       		.uleb128 0x3a
 13969 0583 0B       		.uleb128 0xb
 13970 0584 3B       		.uleb128 0x3b
 13971 0585 0B       		.uleb128 0xb
 13972 0586 20       		.uleb128 0x20
 13973 0587 0B       		.uleb128 0xb
 13974 0588 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 325


 13975 0589 13       		.uleb128 0x13
 13976 058a 00       		.byte	0
 13977 058b 00       		.byte	0
 13978 058c 5F       		.uleb128 0x5f
 13979 058d 0B       		.uleb128 0xb
 13980 058e 01       		.byte	0x1
 13981 058f 00       		.byte	0
 13982 0590 00       		.byte	0
 13983 0591 60       		.uleb128 0x60
 13984 0592 34       		.uleb128 0x34
 13985 0593 00       		.byte	0
 13986 0594 03       		.uleb128 0x3
 13987 0595 08       		.uleb128 0x8
 13988 0596 3A       		.uleb128 0x3a
 13989 0597 0B       		.uleb128 0xb
 13990 0598 3B       		.uleb128 0x3b
 13991 0599 0B       		.uleb128 0xb
 13992 059a 49       		.uleb128 0x49
 13993 059b 13       		.uleb128 0x13
 13994 059c 00       		.byte	0
 13995 059d 00       		.byte	0
 13996 059e 61       		.uleb128 0x61
 13997 059f 2E       		.uleb128 0x2e
 13998 05a0 01       		.byte	0x1
 13999 05a1 03       		.uleb128 0x3
 14000 05a2 0E       		.uleb128 0xe
 14001 05a3 34       		.uleb128 0x34
 14002 05a4 19       		.uleb128 0x19
 14003 05a5 20       		.uleb128 0x20
 14004 05a6 0B       		.uleb128 0xb
 14005 05a7 01       		.uleb128 0x1
 14006 05a8 13       		.uleb128 0x13
 14007 05a9 00       		.byte	0
 14008 05aa 00       		.byte	0
 14009 05ab 62       		.uleb128 0x62
 14010 05ac 2E       		.uleb128 0x2e
 14011 05ad 01       		.byte	0x1
 14012 05ae 31       		.uleb128 0x31
 14013 05af 13       		.uleb128 0x13
 14014 05b0 6E       		.uleb128 0x6e
 14015 05b1 0E       		.uleb128 0xe
 14016 05b2 11       		.uleb128 0x11
 14017 05b3 01       		.uleb128 0x1
 14018 05b4 12       		.uleb128 0x12
 14019 05b5 07       		.uleb128 0x7
 14020 05b6 40       		.uleb128 0x40
 14021 05b7 18       		.uleb128 0x18
 14022 05b8 64       		.uleb128 0x64
 14023 05b9 13       		.uleb128 0x13
 14024 05ba 9742     		.uleb128 0x2117
 14025 05bc 19       		.uleb128 0x19
 14026 05bd 01       		.uleb128 0x1
 14027 05be 13       		.uleb128 0x13
 14028 05bf 00       		.byte	0
 14029 05c0 00       		.byte	0
 14030 05c1 63       		.uleb128 0x63
 14031 05c2 05       		.uleb128 0x5
GAS LISTING /tmp/ccrWPnlb.s 			page 326


 14032 05c3 00       		.byte	0
 14033 05c4 31       		.uleb128 0x31
 14034 05c5 13       		.uleb128 0x13
 14035 05c6 02       		.uleb128 0x2
 14036 05c7 18       		.uleb128 0x18
 14037 05c8 00       		.byte	0
 14038 05c9 00       		.byte	0
 14039 05ca 64       		.uleb128 0x64
 14040 05cb 2E       		.uleb128 0x2e
 14041 05cc 01       		.byte	0x1
 14042 05cd 31       		.uleb128 0x31
 14043 05ce 13       		.uleb128 0x13
 14044 05cf 11       		.uleb128 0x11
 14045 05d0 01       		.uleb128 0x1
 14046 05d1 12       		.uleb128 0x12
 14047 05d2 07       		.uleb128 0x7
 14048 05d3 40       		.uleb128 0x40
 14049 05d4 18       		.uleb128 0x18
 14050 05d5 9742     		.uleb128 0x2117
 14051 05d7 19       		.uleb128 0x19
 14052 05d8 01       		.uleb128 0x1
 14053 05d9 13       		.uleb128 0x13
 14054 05da 00       		.byte	0
 14055 05db 00       		.byte	0
 14056 05dc 65       		.uleb128 0x65
 14057 05dd 05       		.uleb128 0x5
 14058 05de 00       		.byte	0
 14059 05df 31       		.uleb128 0x31
 14060 05e0 13       		.uleb128 0x13
 14061 05e1 02       		.uleb128 0x2
 14062 05e2 17       		.uleb128 0x17
 14063 05e3 00       		.byte	0
 14064 05e4 00       		.byte	0
 14065 05e5 66       		.uleb128 0x66
 14066 05e6 1D       		.uleb128 0x1d
 14067 05e7 01       		.byte	0x1
 14068 05e8 31       		.uleb128 0x31
 14069 05e9 13       		.uleb128 0x13
 14070 05ea 52       		.uleb128 0x52
 14071 05eb 01       		.uleb128 0x1
 14072 05ec 55       		.uleb128 0x55
 14073 05ed 17       		.uleb128 0x17
 14074 05ee 58       		.uleb128 0x58
 14075 05ef 0B       		.uleb128 0xb
 14076 05f0 59       		.uleb128 0x59
 14077 05f1 0B       		.uleb128 0xb
 14078 05f2 01       		.uleb128 0x1
 14079 05f3 13       		.uleb128 0x13
 14080 05f4 00       		.byte	0
 14081 05f5 00       		.byte	0
 14082 05f6 67       		.uleb128 0x67
 14083 05f7 05       		.uleb128 0x5
 14084 05f8 00       		.byte	0
 14085 05f9 31       		.uleb128 0x31
 14086 05fa 13       		.uleb128 0x13
 14087 05fb 00       		.byte	0
 14088 05fc 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 327


 14089 05fd 68       		.uleb128 0x68
 14090 05fe 898201   		.uleb128 0x4109
 14091 0601 01       		.byte	0x1
 14092 0602 11       		.uleb128 0x11
 14093 0603 01       		.uleb128 0x1
 14094 0604 31       		.uleb128 0x31
 14095 0605 13       		.uleb128 0x13
 14096 0606 00       		.byte	0
 14097 0607 00       		.byte	0
 14098 0608 69       		.uleb128 0x69
 14099 0609 8A8201   		.uleb128 0x410a
 14100 060c 00       		.byte	0
 14101 060d 02       		.uleb128 0x2
 14102 060e 18       		.uleb128 0x18
 14103 060f 9142     		.uleb128 0x2111
 14104 0611 18       		.uleb128 0x18
 14105 0612 00       		.byte	0
 14106 0613 00       		.byte	0
 14107 0614 6A       		.uleb128 0x6a
 14108 0615 1D       		.uleb128 0x1d
 14109 0616 01       		.byte	0x1
 14110 0617 31       		.uleb128 0x31
 14111 0618 13       		.uleb128 0x13
 14112 0619 11       		.uleb128 0x11
 14113 061a 01       		.uleb128 0x1
 14114 061b 12       		.uleb128 0x12
 14115 061c 07       		.uleb128 0x7
 14116 061d 58       		.uleb128 0x58
 14117 061e 0B       		.uleb128 0xb
 14118 061f 59       		.uleb128 0x59
 14119 0620 0B       		.uleb128 0xb
 14120 0621 01       		.uleb128 0x1
 14121 0622 13       		.uleb128 0x13
 14122 0623 00       		.byte	0
 14123 0624 00       		.byte	0
 14124 0625 6B       		.uleb128 0x6b
 14125 0626 1D       		.uleb128 0x1d
 14126 0627 01       		.byte	0x1
 14127 0628 31       		.uleb128 0x31
 14128 0629 13       		.uleb128 0x13
 14129 062a 11       		.uleb128 0x11
 14130 062b 01       		.uleb128 0x1
 14131 062c 12       		.uleb128 0x12
 14132 062d 07       		.uleb128 0x7
 14133 062e 58       		.uleb128 0x58
 14134 062f 0B       		.uleb128 0xb
 14135 0630 59       		.uleb128 0x59
 14136 0631 05       		.uleb128 0x5
 14137 0632 01       		.uleb128 0x1
 14138 0633 13       		.uleb128 0x13
 14139 0634 00       		.byte	0
 14140 0635 00       		.byte	0
 14141 0636 6C       		.uleb128 0x6c
 14142 0637 0B       		.uleb128 0xb
 14143 0638 01       		.byte	0x1
 14144 0639 11       		.uleb128 0x11
 14145 063a 01       		.uleb128 0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 328


 14146 063b 12       		.uleb128 0x12
 14147 063c 07       		.uleb128 0x7
 14148 063d 01       		.uleb128 0x1
 14149 063e 13       		.uleb128 0x13
 14150 063f 00       		.byte	0
 14151 0640 00       		.byte	0
 14152 0641 6D       		.uleb128 0x6d
 14153 0642 1D       		.uleb128 0x1d
 14154 0643 01       		.byte	0x1
 14155 0644 31       		.uleb128 0x31
 14156 0645 13       		.uleb128 0x13
 14157 0646 11       		.uleb128 0x11
 14158 0647 01       		.uleb128 0x1
 14159 0648 12       		.uleb128 0x12
 14160 0649 07       		.uleb128 0x7
 14161 064a 58       		.uleb128 0x58
 14162 064b 0B       		.uleb128 0xb
 14163 064c 59       		.uleb128 0x59
 14164 064d 05       		.uleb128 0x5
 14165 064e 00       		.byte	0
 14166 064f 00       		.byte	0
 14167 0650 6E       		.uleb128 0x6e
 14168 0651 898201   		.uleb128 0x4109
 14169 0654 00       		.byte	0
 14170 0655 11       		.uleb128 0x11
 14171 0656 01       		.uleb128 0x1
 14172 0657 31       		.uleb128 0x31
 14173 0658 13       		.uleb128 0x13
 14174 0659 00       		.byte	0
 14175 065a 00       		.byte	0
 14176 065b 6F       		.uleb128 0x6f
 14177 065c 1D       		.uleb128 0x1d
 14178 065d 01       		.byte	0x1
 14179 065e 31       		.uleb128 0x31
 14180 065f 13       		.uleb128 0x13
 14181 0660 52       		.uleb128 0x52
 14182 0661 01       		.uleb128 0x1
 14183 0662 55       		.uleb128 0x55
 14184 0663 17       		.uleb128 0x17
 14185 0664 58       		.uleb128 0x58
 14186 0665 0B       		.uleb128 0xb
 14187 0666 59       		.uleb128 0x59
 14188 0667 0B       		.uleb128 0xb
 14189 0668 00       		.byte	0
 14190 0669 00       		.byte	0
 14191 066a 70       		.uleb128 0x70
 14192 066b 1D       		.uleb128 0x1d
 14193 066c 01       		.byte	0x1
 14194 066d 31       		.uleb128 0x31
 14195 066e 13       		.uleb128 0x13
 14196 066f 52       		.uleb128 0x52
 14197 0670 01       		.uleb128 0x1
 14198 0671 55       		.uleb128 0x55
 14199 0672 17       		.uleb128 0x17
 14200 0673 58       		.uleb128 0x58
 14201 0674 0B       		.uleb128 0xb
 14202 0675 59       		.uleb128 0x59
GAS LISTING /tmp/ccrWPnlb.s 			page 329


 14203 0676 05       		.uleb128 0x5
 14204 0677 01       		.uleb128 0x1
 14205 0678 13       		.uleb128 0x13
 14206 0679 00       		.byte	0
 14207 067a 00       		.byte	0
 14208 067b 71       		.uleb128 0x71
 14209 067c 1D       		.uleb128 0x1d
 14210 067d 01       		.byte	0x1
 14211 067e 31       		.uleb128 0x31
 14212 067f 13       		.uleb128 0x13
 14213 0680 52       		.uleb128 0x52
 14214 0681 01       		.uleb128 0x1
 14215 0682 55       		.uleb128 0x55
 14216 0683 17       		.uleb128 0x17
 14217 0684 58       		.uleb128 0x58
 14218 0685 0B       		.uleb128 0xb
 14219 0686 59       		.uleb128 0x59
 14220 0687 05       		.uleb128 0x5
 14221 0688 00       		.byte	0
 14222 0689 00       		.byte	0
 14223 068a 72       		.uleb128 0x72
 14224 068b 0B       		.uleb128 0xb
 14225 068c 01       		.byte	0x1
 14226 068d 11       		.uleb128 0x11
 14227 068e 01       		.uleb128 0x1
 14228 068f 12       		.uleb128 0x12
 14229 0690 07       		.uleb128 0x7
 14230 0691 00       		.byte	0
 14231 0692 00       		.byte	0
 14232 0693 73       		.uleb128 0x73
 14233 0694 898201   		.uleb128 0x4109
 14234 0697 01       		.byte	0x1
 14235 0698 11       		.uleb128 0x11
 14236 0699 01       		.uleb128 0x1
 14237 069a 31       		.uleb128 0x31
 14238 069b 13       		.uleb128 0x13
 14239 069c 01       		.uleb128 0x1
 14240 069d 13       		.uleb128 0x13
 14241 069e 00       		.byte	0
 14242 069f 00       		.byte	0
 14243 06a0 74       		.uleb128 0x74
 14244 06a1 898201   		.uleb128 0x4109
 14245 06a4 01       		.byte	0x1
 14246 06a5 11       		.uleb128 0x11
 14247 06a6 01       		.uleb128 0x1
 14248 06a7 00       		.byte	0
 14249 06a8 00       		.byte	0
 14250 06a9 75       		.uleb128 0x75
 14251 06aa 2E       		.uleb128 0x2e
 14252 06ab 01       		.byte	0x1
 14253 06ac 3F       		.uleb128 0x3f
 14254 06ad 19       		.uleb128 0x19
 14255 06ae 03       		.uleb128 0x3
 14256 06af 0E       		.uleb128 0xe
 14257 06b0 3A       		.uleb128 0x3a
 14258 06b1 0B       		.uleb128 0xb
 14259 06b2 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccrWPnlb.s 			page 330


 14260 06b3 0B       		.uleb128 0xb
 14261 06b4 6E       		.uleb128 0x6e
 14262 06b5 0E       		.uleb128 0xe
 14263 06b6 11       		.uleb128 0x11
 14264 06b7 01       		.uleb128 0x1
 14265 06b8 12       		.uleb128 0x12
 14266 06b9 07       		.uleb128 0x7
 14267 06ba 40       		.uleb128 0x40
 14268 06bb 18       		.uleb128 0x18
 14269 06bc 9742     		.uleb128 0x2117
 14270 06be 19       		.uleb128 0x19
 14271 06bf 01       		.uleb128 0x1
 14272 06c0 13       		.uleb128 0x13
 14273 06c1 00       		.byte	0
 14274 06c2 00       		.byte	0
 14275 06c3 76       		.uleb128 0x76
 14276 06c4 0B       		.uleb128 0xb
 14277 06c5 01       		.byte	0x1
 14278 06c6 55       		.uleb128 0x55
 14279 06c7 17       		.uleb128 0x17
 14280 06c8 00       		.byte	0
 14281 06c9 00       		.byte	0
 14282 06ca 77       		.uleb128 0x77
 14283 06cb 34       		.uleb128 0x34
 14284 06cc 00       		.byte	0
 14285 06cd 03       		.uleb128 0x3
 14286 06ce 08       		.uleb128 0x8
 14287 06cf 3A       		.uleb128 0x3a
 14288 06d0 0B       		.uleb128 0xb
 14289 06d1 3B       		.uleb128 0x3b
 14290 06d2 0B       		.uleb128 0xb
 14291 06d3 49       		.uleb128 0x49
 14292 06d4 13       		.uleb128 0x13
 14293 06d5 02       		.uleb128 0x2
 14294 06d6 17       		.uleb128 0x17
 14295 06d7 00       		.byte	0
 14296 06d8 00       		.byte	0
 14297 06d9 78       		.uleb128 0x78
 14298 06da 34       		.uleb128 0x34
 14299 06db 00       		.byte	0
 14300 06dc 03       		.uleb128 0x3
 14301 06dd 0E       		.uleb128 0xe
 14302 06de 3A       		.uleb128 0x3a
 14303 06df 0B       		.uleb128 0xb
 14304 06e0 3B       		.uleb128 0x3b
 14305 06e1 0B       		.uleb128 0xb
 14306 06e2 49       		.uleb128 0x49
 14307 06e3 13       		.uleb128 0x13
 14308 06e4 02       		.uleb128 0x2
 14309 06e5 18       		.uleb128 0x18
 14310 06e6 00       		.byte	0
 14311 06e7 00       		.byte	0
 14312 06e8 79       		.uleb128 0x79
 14313 06e9 05       		.uleb128 0x5
 14314 06ea 00       		.byte	0
 14315 06eb 31       		.uleb128 0x31
 14316 06ec 13       		.uleb128 0x13
GAS LISTING /tmp/ccrWPnlb.s 			page 331


 14317 06ed 1C       		.uleb128 0x1c
 14318 06ee 0B       		.uleb128 0xb
 14319 06ef 00       		.byte	0
 14320 06f0 00       		.byte	0
 14321 06f1 7A       		.uleb128 0x7a
 14322 06f2 898201   		.uleb128 0x4109
 14323 06f5 00       		.byte	0
 14324 06f6 11       		.uleb128 0x11
 14325 06f7 01       		.uleb128 0x1
 14326 06f8 9542     		.uleb128 0x2115
 14327 06fa 19       		.uleb128 0x19
 14328 06fb 31       		.uleb128 0x31
 14329 06fc 13       		.uleb128 0x13
 14330 06fd 00       		.byte	0
 14331 06fe 00       		.byte	0
 14332 06ff 7B       		.uleb128 0x7b
 14333 0700 34       		.uleb128 0x34
 14334 0701 00       		.byte	0
 14335 0702 31       		.uleb128 0x31
 14336 0703 13       		.uleb128 0x13
 14337 0704 02       		.uleb128 0x2
 14338 0705 17       		.uleb128 0x17
 14339 0706 00       		.byte	0
 14340 0707 00       		.byte	0
 14341 0708 7C       		.uleb128 0x7c
 14342 0709 8A8201   		.uleb128 0x410a
 14343 070c 00       		.byte	0
 14344 070d 31       		.uleb128 0x31
 14345 070e 13       		.uleb128 0x13
 14346 070f 9142     		.uleb128 0x2111
 14347 0711 18       		.uleb128 0x18
 14348 0712 00       		.byte	0
 14349 0713 00       		.byte	0
 14350 0714 7D       		.uleb128 0x7d
 14351 0715 2E       		.uleb128 0x2e
 14352 0716 01       		.byte	0x1
 14353 0717 03       		.uleb128 0x3
 14354 0718 0E       		.uleb128 0xe
 14355 0719 34       		.uleb128 0x34
 14356 071a 19       		.uleb128 0x19
 14357 071b 3C       		.uleb128 0x3c
 14358 071c 19       		.uleb128 0x19
 14359 071d 64       		.uleb128 0x64
 14360 071e 13       		.uleb128 0x13
 14361 071f 01       		.uleb128 0x1
 14362 0720 13       		.uleb128 0x13
 14363 0721 00       		.byte	0
 14364 0722 00       		.byte	0
 14365 0723 7E       		.uleb128 0x7e
 14366 0724 2E       		.uleb128 0x2e
 14367 0725 01       		.byte	0x1
 14368 0726 03       		.uleb128 0x3
 14369 0727 0E       		.uleb128 0xe
 14370 0728 49       		.uleb128 0x49
 14371 0729 13       		.uleb128 0x13
 14372 072a 34       		.uleb128 0x34
 14373 072b 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 332


 14374 072c 20       		.uleb128 0x20
 14375 072d 0B       		.uleb128 0xb
 14376 072e 64       		.uleb128 0x64
 14377 072f 13       		.uleb128 0x13
 14378 0730 01       		.uleb128 0x1
 14379 0731 13       		.uleb128 0x13
 14380 0732 00       		.byte	0
 14381 0733 00       		.byte	0
 14382 0734 7F       		.uleb128 0x7f
 14383 0735 2E       		.uleb128 0x2e
 14384 0736 01       		.byte	0x1
 14385 0737 03       		.uleb128 0x3
 14386 0738 0E       		.uleb128 0xe
 14387 0739 49       		.uleb128 0x49
 14388 073a 13       		.uleb128 0x13
 14389 073b 34       		.uleb128 0x34
 14390 073c 19       		.uleb128 0x19
 14391 073d 11       		.uleb128 0x11
 14392 073e 01       		.uleb128 0x1
 14393 073f 12       		.uleb128 0x12
 14394 0740 07       		.uleb128 0x7
 14395 0741 40       		.uleb128 0x40
 14396 0742 18       		.uleb128 0x18
 14397 0743 9742     		.uleb128 0x2117
 14398 0745 19       		.uleb128 0x19
 14399 0746 00       		.byte	0
 14400 0747 00       		.byte	0
 14401 0748 8001     		.uleb128 0x80
 14402 074a 05       		.uleb128 0x5
 14403 074b 00       		.byte	0
 14404 074c 49       		.uleb128 0x49
 14405 074d 13       		.uleb128 0x13
 14406 074e 02       		.uleb128 0x2
 14407 074f 18       		.uleb128 0x18
 14408 0750 00       		.byte	0
 14409 0751 00       		.byte	0
 14410 0752 8101     		.uleb128 0x81
 14411 0754 2E       		.uleb128 0x2e
 14412 0755 01       		.byte	0x1
 14413 0756 3F       		.uleb128 0x3f
 14414 0757 19       		.uleb128 0x19
 14415 0758 03       		.uleb128 0x3
 14416 0759 0E       		.uleb128 0xe
 14417 075a 3A       		.uleb128 0x3a
 14418 075b 0B       		.uleb128 0xb
 14419 075c 3B       		.uleb128 0x3b
 14420 075d 05       		.uleb128 0x5
 14421 075e 6E       		.uleb128 0x6e
 14422 075f 0E       		.uleb128 0xe
 14423 0760 11       		.uleb128 0x11
 14424 0761 01       		.uleb128 0x1
 14425 0762 12       		.uleb128 0x12
 14426 0763 07       		.uleb128 0x7
 14427 0764 40       		.uleb128 0x40
 14428 0765 18       		.uleb128 0x18
 14429 0766 9742     		.uleb128 0x2117
 14430 0768 19       		.uleb128 0x19
GAS LISTING /tmp/ccrWPnlb.s 			page 333


 14431 0769 01       		.uleb128 0x1
 14432 076a 13       		.uleb128 0x13
 14433 076b 00       		.byte	0
 14434 076c 00       		.byte	0
 14435 076d 8201     		.uleb128 0x82
 14436 076f 34       		.uleb128 0x34
 14437 0770 00       		.byte	0
 14438 0771 03       		.uleb128 0x3
 14439 0772 0E       		.uleb128 0xe
 14440 0773 3A       		.uleb128 0x3a
 14441 0774 0B       		.uleb128 0xb
 14442 0775 3B       		.uleb128 0x3b
 14443 0776 05       		.uleb128 0x5
 14444 0777 49       		.uleb128 0x49
 14445 0778 13       		.uleb128 0x13
 14446 0779 02       		.uleb128 0x2
 14447 077a 18       		.uleb128 0x18
 14448 077b 00       		.byte	0
 14449 077c 00       		.byte	0
 14450 077d 8301     		.uleb128 0x83
 14451 077f 34       		.uleb128 0x34
 14452 0780 00       		.byte	0
 14453 0781 03       		.uleb128 0x3
 14454 0782 08       		.uleb128 0x8
 14455 0783 3A       		.uleb128 0x3a
 14456 0784 0B       		.uleb128 0xb
 14457 0785 3B       		.uleb128 0x3b
 14458 0786 05       		.uleb128 0x5
 14459 0787 49       		.uleb128 0x49
 14460 0788 13       		.uleb128 0x13
 14461 0789 02       		.uleb128 0x2
 14462 078a 17       		.uleb128 0x17
 14463 078b 00       		.byte	0
 14464 078c 00       		.byte	0
 14465 078d 8401     		.uleb128 0x84
 14466 078f 34       		.uleb128 0x34
 14467 0790 00       		.byte	0
 14468 0791 03       		.uleb128 0x3
 14469 0792 08       		.uleb128 0x8
 14470 0793 3A       		.uleb128 0x3a
 14471 0794 0B       		.uleb128 0xb
 14472 0795 3B       		.uleb128 0x3b
 14473 0796 05       		.uleb128 0x5
 14474 0797 49       		.uleb128 0x49
 14475 0798 13       		.uleb128 0x13
 14476 0799 02       		.uleb128 0x2
 14477 079a 18       		.uleb128 0x18
 14478 079b 00       		.byte	0
 14479 079c 00       		.byte	0
 14480 079d 8501     		.uleb128 0x85
 14481 079f 05       		.uleb128 0x5
 14482 07a0 00       		.byte	0
 14483 07a1 31       		.uleb128 0x31
 14484 07a2 13       		.uleb128 0x13
 14485 07a3 1C       		.uleb128 0x1c
 14486 07a4 05       		.uleb128 0x5
 14487 07a5 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 334


 14488 07a6 00       		.byte	0
 14489 07a7 8601     		.uleb128 0x86
 14490 07a9 2E       		.uleb128 0x2e
 14491 07aa 01       		.byte	0x1
 14492 07ab 3F       		.uleb128 0x3f
 14493 07ac 19       		.uleb128 0x19
 14494 07ad 03       		.uleb128 0x3
 14495 07ae 0E       		.uleb128 0xe
 14496 07af 3A       		.uleb128 0x3a
 14497 07b0 0B       		.uleb128 0xb
 14498 07b1 3B       		.uleb128 0x3b
 14499 07b2 05       		.uleb128 0x5
 14500 07b3 49       		.uleb128 0x49
 14501 07b4 13       		.uleb128 0x13
 14502 07b5 11       		.uleb128 0x11
 14503 07b6 01       		.uleb128 0x1
 14504 07b7 12       		.uleb128 0x12
 14505 07b8 07       		.uleb128 0x7
 14506 07b9 40       		.uleb128 0x40
 14507 07ba 18       		.uleb128 0x18
 14508 07bb 9742     		.uleb128 0x2117
 14509 07bd 19       		.uleb128 0x19
 14510 07be 01       		.uleb128 0x1
 14511 07bf 13       		.uleb128 0x13
 14512 07c0 00       		.byte	0
 14513 07c1 00       		.byte	0
 14514 07c2 8701     		.uleb128 0x87
 14515 07c4 2E       		.uleb128 0x2e
 14516 07c5 01       		.byte	0x1
 14517 07c6 03       		.uleb128 0x3
 14518 07c7 0E       		.uleb128 0xe
 14519 07c8 34       		.uleb128 0x34
 14520 07c9 19       		.uleb128 0x19
 14521 07ca 11       		.uleb128 0x11
 14522 07cb 01       		.uleb128 0x1
 14523 07cc 12       		.uleb128 0x12
 14524 07cd 07       		.uleb128 0x7
 14525 07ce 40       		.uleb128 0x40
 14526 07cf 18       		.uleb128 0x18
 14527 07d0 9742     		.uleb128 0x2117
 14528 07d2 19       		.uleb128 0x19
 14529 07d3 01       		.uleb128 0x1
 14530 07d4 13       		.uleb128 0x13
 14531 07d5 00       		.byte	0
 14532 07d6 00       		.byte	0
 14533 07d7 8801     		.uleb128 0x88
 14534 07d9 898201   		.uleb128 0x4109
 14535 07dc 01       		.byte	0x1
 14536 07dd 11       		.uleb128 0x11
 14537 07de 01       		.uleb128 0x1
 14538 07df 01       		.uleb128 0x1
 14539 07e0 13       		.uleb128 0x13
 14540 07e1 00       		.byte	0
 14541 07e2 00       		.byte	0
 14542 07e3 8901     		.uleb128 0x89
 14543 07e5 898201   		.uleb128 0x4109
 14544 07e8 01       		.byte	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 335


 14545 07e9 11       		.uleb128 0x11
 14546 07ea 01       		.uleb128 0x1
 14547 07eb 9542     		.uleb128 0x2115
 14548 07ed 19       		.uleb128 0x19
 14549 07ee 31       		.uleb128 0x31
 14550 07ef 13       		.uleb128 0x13
 14551 07f0 00       		.byte	0
 14552 07f1 00       		.byte	0
 14553 07f2 8A01     		.uleb128 0x8a
 14554 07f4 8A8201   		.uleb128 0x410a
 14555 07f7 00       		.byte	0
 14556 07f8 02       		.uleb128 0x2
 14557 07f9 18       		.uleb128 0x18
 14558 07fa 00       		.byte	0
 14559 07fb 00       		.byte	0
 14560 07fc 8B01     		.uleb128 0x8b
 14561 07fe 34       		.uleb128 0x34
 14562 07ff 00       		.byte	0
 14563 0800 03       		.uleb128 0x3
 14564 0801 0E       		.uleb128 0xe
 14565 0802 3A       		.uleb128 0x3a
 14566 0803 0B       		.uleb128 0xb
 14567 0804 3B       		.uleb128 0x3b
 14568 0805 0B       		.uleb128 0xb
 14569 0806 49       		.uleb128 0x49
 14570 0807 13       		.uleb128 0x13
 14571 0808 3F       		.uleb128 0x3f
 14572 0809 19       		.uleb128 0x19
 14573 080a 3C       		.uleb128 0x3c
 14574 080b 19       		.uleb128 0x19
 14575 080c 00       		.byte	0
 14576 080d 00       		.byte	0
 14577 080e 8C01     		.uleb128 0x8c
 14578 0810 34       		.uleb128 0x34
 14579 0811 00       		.byte	0
 14580 0812 03       		.uleb128 0x3
 14581 0813 0E       		.uleb128 0xe
 14582 0814 49       		.uleb128 0x49
 14583 0815 13       		.uleb128 0x13
 14584 0816 3F       		.uleb128 0x3f
 14585 0817 19       		.uleb128 0x19
 14586 0818 34       		.uleb128 0x34
 14587 0819 19       		.uleb128 0x19
 14588 081a 3C       		.uleb128 0x3c
 14589 081b 19       		.uleb128 0x19
 14590 081c 00       		.byte	0
 14591 081d 00       		.byte	0
 14592 081e 8D01     		.uleb128 0x8d
 14593 0820 34       		.uleb128 0x34
 14594 0821 00       		.byte	0
 14595 0822 47       		.uleb128 0x47
 14596 0823 13       		.uleb128 0x13
 14597 0824 00       		.byte	0
 14598 0825 00       		.byte	0
 14599 0826 8E01     		.uleb128 0x8e
 14600 0828 34       		.uleb128 0x34
 14601 0829 00       		.byte	0
GAS LISTING /tmp/ccrWPnlb.s 			page 336


 14602 082a 47       		.uleb128 0x47
 14603 082b 13       		.uleb128 0x13
 14604 082c 02       		.uleb128 0x2
 14605 082d 18       		.uleb128 0x18
 14606 082e 00       		.byte	0
 14607 082f 00       		.byte	0
 14608 0830 8F01     		.uleb128 0x8f
 14609 0832 34       		.uleb128 0x34
 14610 0833 00       		.byte	0
 14611 0834 47       		.uleb128 0x47
 14612 0835 13       		.uleb128 0x13
 14613 0836 6E       		.uleb128 0x6e
 14614 0837 0E       		.uleb128 0xe
 14615 0838 00       		.byte	0
 14616 0839 00       		.byte	0
 14617 083a 9001     		.uleb128 0x90
 14618 083c 2E       		.uleb128 0x2e
 14619 083d 01       		.byte	0x1
 14620 083e 3F       		.uleb128 0x3f
 14621 083f 19       		.uleb128 0x19
 14622 0840 03       		.uleb128 0x3
 14623 0841 0E       		.uleb128 0xe
 14624 0842 6E       		.uleb128 0x6e
 14625 0843 0E       		.uleb128 0xe
 14626 0844 49       		.uleb128 0x49
 14627 0845 13       		.uleb128 0x13
 14628 0846 34       		.uleb128 0x34
 14629 0847 19       		.uleb128 0x19
 14630 0848 3C       		.uleb128 0x3c
 14631 0849 19       		.uleb128 0x19
 14632 084a 01       		.uleb128 0x1
 14633 084b 13       		.uleb128 0x13
 14634 084c 00       		.byte	0
 14635 084d 00       		.byte	0
 14636 084e 9101     		.uleb128 0x91
 14637 0850 2E       		.uleb128 0x2e
 14638 0851 01       		.byte	0x1
 14639 0852 3F       		.uleb128 0x3f
 14640 0853 19       		.uleb128 0x19
 14641 0854 03       		.uleb128 0x3
 14642 0855 0E       		.uleb128 0xe
 14643 0856 3A       		.uleb128 0x3a
 14644 0857 0B       		.uleb128 0xb
 14645 0858 3B       		.uleb128 0x3b
 14646 0859 0B       		.uleb128 0xb
 14647 085a 3C       		.uleb128 0x3c
 14648 085b 19       		.uleb128 0x19
 14649 085c 01       		.uleb128 0x1
 14650 085d 13       		.uleb128 0x13
 14651 085e 00       		.byte	0
 14652 085f 00       		.byte	0
 14653 0860 9201     		.uleb128 0x92
 14654 0862 2E       		.uleb128 0x2e
 14655 0863 01       		.byte	0x1
 14656 0864 3F       		.uleb128 0x3f
 14657 0865 19       		.uleb128 0x19
 14658 0866 03       		.uleb128 0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 337


 14659 0867 0E       		.uleb128 0xe
 14660 0868 49       		.uleb128 0x49
 14661 0869 13       		.uleb128 0x13
 14662 086a 34       		.uleb128 0x34
 14663 086b 19       		.uleb128 0x19
 14664 086c 3C       		.uleb128 0x3c
 14665 086d 19       		.uleb128 0x19
 14666 086e 00       		.byte	0
 14667 086f 00       		.byte	0
 14668 0870 00       		.byte	0
 14669              		.section	.debug_loc,"",@progbits
 14670              	.Ldebug_loc0:
 14671              	.LLST0:
 14672 0000 00000000 		.quad	.LVL4
 14672      00000000 
 14673 0008 00000000 		.quad	.LVL6
 14673      00000000 
 14674 0010 0100     		.value	0x1
 14675 0012 55       		.byte	0x55
 14676 0013 00000000 		.quad	.LVL6
 14676      00000000 
 14677 001b 00000000 		.quad	.LVL15
 14677      00000000 
 14678 0023 0100     		.value	0x1
 14679 0025 56       		.byte	0x56
 14680 0026 00000000 		.quad	.LVL15
 14680      00000000 
 14681 002e 00000000 		.quad	.LVL26
 14681      00000000 
 14682 0036 0400     		.value	0x4
 14683 0038 F3       		.byte	0xf3
 14684 0039 01       		.uleb128 0x1
 14685 003a 55       		.byte	0x55
 14686 003b 9F       		.byte	0x9f
 14687 003c 00000000 		.quad	.LVL26
 14687      00000000 
 14688 0044 00000000 		.quad	.LVL29
 14688      00000000 
 14689 004c 0100     		.value	0x1
 14690 004e 56       		.byte	0x56
 14691 004f 00000000 		.quad	.LVL29
 14691      00000000 
 14692 0057 00000000 		.quad	.LFE1706
 14692      00000000 
 14693 005f 0400     		.value	0x4
 14694 0061 F3       		.byte	0xf3
 14695 0062 01       		.uleb128 0x1
 14696 0063 55       		.byte	0x55
 14697 0064 9F       		.byte	0x9f
 14698 0065 00000000 		.quad	0
 14698      00000000 
 14699 006d 00000000 		.quad	0
 14699      00000000 
 14700              	.LLST1:
 14701 0075 00000000 		.quad	.LVL4
 14701      00000000 
 14702 007d 00000000 		.quad	.LVL5
GAS LISTING /tmp/ccrWPnlb.s 			page 338


 14702      00000000 
 14703 0085 0100     		.value	0x1
 14704 0087 54       		.byte	0x54
 14705 0088 00000000 		.quad	.LVL5
 14705      00000000 
 14706 0090 00000000 		.quad	.LVL22
 14706      00000000 
 14707 0098 0100     		.value	0x1
 14708 009a 5C       		.byte	0x5c
 14709 009b 00000000 		.quad	.LVL22
 14709      00000000 
 14710 00a3 00000000 		.quad	.LVL23
 14710      00000000 
 14711 00ab 0400     		.value	0x4
 14712 00ad F3       		.byte	0xf3
 14713 00ae 01       		.uleb128 0x1
 14714 00af 54       		.byte	0x54
 14715 00b0 9F       		.byte	0x9f
 14716 00b1 00000000 		.quad	.LVL23
 14716      00000000 
 14717 00b9 00000000 		.quad	.LFE1706
 14717      00000000 
 14718 00c1 0100     		.value	0x1
 14719 00c3 5C       		.byte	0x5c
 14720 00c4 00000000 		.quad	0
 14720      00000000 
 14721 00cc 00000000 		.quad	0
 14721      00000000 
 14722              	.LLST2:
 14723 00d4 00000000 		.quad	.LVL10
 14723      00000000 
 14724 00dc 00000000 		.quad	.LVL11-1
 14724      00000000 
 14725 00e4 0100     		.value	0x1
 14726 00e6 50       		.byte	0x50
 14727 00e7 00000000 		.quad	.LVL11-1
 14727      00000000 
 14728 00ef 00000000 		.quad	.LVL20
 14728      00000000 
 14729 00f7 0100     		.value	0x1
 14730 00f9 53       		.byte	0x53
 14731 00fa 00000000 		.quad	.LVL23
 14731      00000000 
 14732 0102 00000000 		.quad	.LFE1706
 14732      00000000 
 14733 010a 0100     		.value	0x1
 14734 010c 53       		.byte	0x53
 14735 010d 00000000 		.quad	0
 14735      00000000 
 14736 0115 00000000 		.quad	0
 14736      00000000 
 14737              	.LLST3:
 14738 011d 00000000 		.quad	.LVL11
 14738      00000000 
 14739 0125 00000000 		.quad	.LVL15
 14739      00000000 
 14740 012d 0100     		.value	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 339


 14741 012f 56       		.byte	0x56
 14742 0130 00000000 		.quad	.LVL15
 14742      00000000 
 14743 0138 00000000 		.quad	.LVL26
 14743      00000000 
 14744 0140 0400     		.value	0x4
 14745 0142 F3       		.byte	0xf3
 14746 0143 01       		.uleb128 0x1
 14747 0144 55       		.byte	0x55
 14748 0145 9F       		.byte	0x9f
 14749 0146 00000000 		.quad	.LVL26
 14749      00000000 
 14750 014e 00000000 		.quad	.LVL29
 14750      00000000 
 14751 0156 0100     		.value	0x1
 14752 0158 56       		.byte	0x56
 14753 0159 00000000 		.quad	.LVL29
 14753      00000000 
 14754 0161 00000000 		.quad	.LFE1706
 14754      00000000 
 14755 0169 0400     		.value	0x4
 14756 016b F3       		.byte	0xf3
 14757 016c 01       		.uleb128 0x1
 14758 016d 55       		.byte	0x55
 14759 016e 9F       		.byte	0x9f
 14760 016f 00000000 		.quad	0
 14760      00000000 
 14761 0177 00000000 		.quad	0
 14761      00000000 
 14762              	.LLST4:
 14763 017f 00000000 		.quad	.LVL11
 14763      00000000 
 14764 0187 00000000 		.quad	.LVL20
 14764      00000000 
 14765 018f 0100     		.value	0x1
 14766 0191 53       		.byte	0x53
 14767 0192 00000000 		.quad	.LVL23
 14767      00000000 
 14768 019a 00000000 		.quad	.LFE1706
 14768      00000000 
 14769 01a2 0100     		.value	0x1
 14770 01a4 53       		.byte	0x53
 14771 01a5 00000000 		.quad	0
 14771      00000000 
 14772 01ad 00000000 		.quad	0
 14772      00000000 
 14773              	.LLST5:
 14774 01b5 00000000 		.quad	.LVL12
 14774      00000000 
 14775 01bd 00000000 		.quad	.LVL14
 14775      00000000 
 14776 01c5 0100     		.value	0x1
 14777 01c7 56       		.byte	0x56
 14778 01c8 00000000 		.quad	0
 14778      00000000 
 14779 01d0 00000000 		.quad	0
 14779      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 340


 14780              	.LLST6:
 14781 01d8 00000000 		.quad	.LVL26
 14781      00000000 
 14782 01e0 00000000 		.quad	.LVL29
 14782      00000000 
 14783 01e8 0200     		.value	0x2
 14784 01ea 30       		.byte	0x30
 14785 01eb 9F       		.byte	0x9f
 14786 01ec 00000000 		.quad	0
 14786      00000000 
 14787 01f4 00000000 		.quad	0
 14787      00000000 
 14788              	.LLST7:
 14789 01fc 00000000 		.quad	.LVL26
 14789      00000000 
 14790 0204 00000000 		.quad	.LVL29
 14790      00000000 
 14791 020c 0100     		.value	0x1
 14792 020e 53       		.byte	0x53
 14793 020f 00000000 		.quad	0
 14793      00000000 
 14794 0217 00000000 		.quad	0
 14794      00000000 
 14795              	.LLST8:
 14796 021f 00000000 		.quad	.LVL27
 14796      00000000 
 14797 0227 00000000 		.quad	.LVL29
 14797      00000000 
 14798 022f 0200     		.value	0x2
 14799 0231 31       		.byte	0x31
 14800 0232 9F       		.byte	0x9f
 14801 0233 00000000 		.quad	0
 14801      00000000 
 14802 023b 00000000 		.quad	0
 14802      00000000 
 14803              	.LLST9:
 14804 0243 00000000 		.quad	.LVL27
 14804      00000000 
 14805 024b 00000000 		.quad	.LVL28-1
 14805      00000000 
 14806 0253 0100     		.value	0x1
 14807 0255 55       		.byte	0x55
 14808 0256 00000000 		.quad	0
 14808      00000000 
 14809 025e 00000000 		.quad	0
 14809      00000000 
 14810              	.LLST11:
 14811 0266 00000000 		.quad	.LVL27
 14811      00000000 
 14812 026e 00000000 		.quad	.LVL28-1
 14812      00000000 
 14813 0276 0200     		.value	0x2
 14814 0278 75       		.byte	0x75
 14815 0279 20       		.sleb128 32
 14816 027a 00000000 		.quad	0
 14816      00000000 
 14817 0282 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 341


 14817      00000000 
 14818              	.LLST12:
 14819 028a 00000000 		.quad	.LVL14
 14819      00000000 
 14820 0292 00000000 		.quad	.LVL20
 14820      00000000 
 14821 029a 0100     		.value	0x1
 14822 029c 53       		.byte	0x53
 14823 029d 00000000 		.quad	.LVL23
 14823      00000000 
 14824 02a5 00000000 		.quad	.LVL26
 14824      00000000 
 14825 02ad 0100     		.value	0x1
 14826 02af 53       		.byte	0x53
 14827 02b0 00000000 		.quad	.LVL29
 14827      00000000 
 14828 02b8 00000000 		.quad	.LFE1706
 14828      00000000 
 14829 02c0 0100     		.value	0x1
 14830 02c2 53       		.byte	0x53
 14831 02c3 00000000 		.quad	0
 14831      00000000 
 14832 02cb 00000000 		.quad	0
 14832      00000000 
 14833              	.LLST13:
 14834 02d3 00000000 		.quad	.LVL14
 14834      00000000 
 14835 02db 00000000 		.quad	.LVL26
 14835      00000000 
 14836 02e3 0200     		.value	0x2
 14837 02e5 3A       		.byte	0x3a
 14838 02e6 9F       		.byte	0x9f
 14839 02e7 00000000 		.quad	.LVL29
 14839      00000000 
 14840 02ef 00000000 		.quad	.LFE1706
 14840      00000000 
 14841 02f7 0200     		.value	0x2
 14842 02f9 3A       		.byte	0x3a
 14843 02fa 9F       		.byte	0x9f
 14844 02fb 00000000 		.quad	0
 14844      00000000 
 14845 0303 00000000 		.quad	0
 14845      00000000 
 14846              	.LLST14:
 14847 030b 00000000 		.quad	.LVL14
 14847      00000000 
 14848 0313 00000000 		.quad	.LVL17
 14848      00000000 
 14849 031b 0A00     		.value	0xa
 14850 031d 73       		.byte	0x73
 14851 031e 00       		.sleb128 0
 14852 031f 73       		.byte	0x73
 14853 0320 00       		.sleb128 0
 14854 0321 06       		.byte	0x6
 14855 0322 48       		.byte	0x48
 14856 0323 1C       		.byte	0x1c
 14857 0324 06       		.byte	0x6
GAS LISTING /tmp/ccrWPnlb.s 			page 342


 14858 0325 22       		.byte	0x22
 14859 0326 9F       		.byte	0x9f
 14860 0327 00000000 		.quad	.LVL23
 14860      00000000 
 14861 032f 00000000 		.quad	.LVL24-1
 14861      00000000 
 14862 0337 0600     		.value	0x6
 14863 0339 73       		.byte	0x73
 14864 033a 00       		.sleb128 0
 14865 033b 70       		.byte	0x70
 14866 033c 00       		.sleb128 0
 14867 033d 22       		.byte	0x22
 14868 033e 9F       		.byte	0x9f
 14869 033f 00000000 		.quad	.LVL29
 14869      00000000 
 14870 0347 00000000 		.quad	.LVL30-1
 14870      00000000 
 14871 034f 0600     		.value	0x6
 14872 0351 73       		.byte	0x73
 14873 0352 00       		.sleb128 0
 14874 0353 70       		.byte	0x70
 14875 0354 00       		.sleb128 0
 14876 0355 22       		.byte	0x22
 14877 0356 9F       		.byte	0x9f
 14878 0357 00000000 		.quad	0
 14878      00000000 
 14879 035f 00000000 		.quad	0
 14879      00000000 
 14880              	.LLST15:
 14881 0367 00000000 		.quad	.LVL15
 14881      00000000 
 14882 036f 00000000 		.quad	.LVL21
 14882      00000000 
 14883 0377 0100     		.value	0x1
 14884 0379 56       		.byte	0x56
 14885 037a 00000000 		.quad	.LVL23
 14885      00000000 
 14886 0382 00000000 		.quad	.LVL26
 14886      00000000 
 14887 038a 0100     		.value	0x1
 14888 038c 56       		.byte	0x56
 14889 038d 00000000 		.quad	.LVL29
 14889      00000000 
 14890 0395 00000000 		.quad	.LFE1706
 14890      00000000 
 14891 039d 0100     		.value	0x1
 14892 039f 56       		.byte	0x56
 14893 03a0 00000000 		.quad	0
 14893      00000000 
 14894 03a8 00000000 		.quad	0
 14894      00000000 
 14895              	.LLST16:
 14896 03b0 00000000 		.quad	.LVL16
 14896      00000000 
 14897 03b8 00000000 		.quad	.LVL26
 14897      00000000 
 14898 03c0 0200     		.value	0x2
GAS LISTING /tmp/ccrWPnlb.s 			page 343


 14899 03c2 3A       		.byte	0x3a
 14900 03c3 9F       		.byte	0x9f
 14901 03c4 00000000 		.quad	0
 14901      00000000 
 14902 03cc 00000000 		.quad	0
 14902      00000000 
 14903              	.LLST17:
 14904 03d4 00000000 		.quad	.LVL16
 14904      00000000 
 14905 03dc 00000000 		.quad	.LVL21
 14905      00000000 
 14906 03e4 0100     		.value	0x1
 14907 03e6 56       		.byte	0x56
 14908 03e7 00000000 		.quad	.LVL23
 14908      00000000 
 14909 03ef 00000000 		.quad	.LVL26
 14909      00000000 
 14910 03f7 0100     		.value	0x1
 14911 03f9 56       		.byte	0x56
 14912 03fa 00000000 		.quad	0
 14912      00000000 
 14913 0402 00000000 		.quad	0
 14913      00000000 
 14914              	.LLST18:
 14915 040a 00000000 		.quad	.LVL23
 14915      00000000 
 14916 0412 00000000 		.quad	.LVL26
 14916      00000000 
 14917 041a 0200     		.value	0x2
 14918 041c 3A       		.byte	0x3a
 14919 041d 9F       		.byte	0x9f
 14920 041e 00000000 		.quad	0
 14920      00000000 
 14921 0426 00000000 		.quad	0
 14921      00000000 
 14922              	.LLST19:
 14923 042e 00000000 		.quad	.LVL23
 14923      00000000 
 14924 0436 00000000 		.quad	.LVL26
 14924      00000000 
 14925 043e 0100     		.value	0x1
 14926 0440 56       		.byte	0x56
 14927 0441 00000000 		.quad	0
 14927      00000000 
 14928 0449 00000000 		.quad	0
 14928      00000000 
 14929              	.LLST20:
 14930 0451 00000000 		.quad	.LVL18
 14930      00000000 
 14931 0459 00000000 		.quad	.LVL19-1
 14931      00000000 
 14932 0461 0100     		.value	0x1
 14933 0463 50       		.byte	0x50
 14934 0464 00000000 		.quad	0
 14934      00000000 
 14935 046c 00000000 		.quad	0
 14935      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 344


 14936              	.LLST21:
 14937 0474 00000000 		.quad	.LVL32
 14937      00000000 
 14938 047c 00000000 		.quad	.LVL33
 14938      00000000 
 14939 0484 0100     		.value	0x1
 14940 0486 50       		.byte	0x50
 14941 0487 00000000 		.quad	.LVL33
 14941      00000000 
 14942 048f 00000000 		.quad	.LVL37
 14942      00000000 
 14943 0497 0100     		.value	0x1
 14944 0499 53       		.byte	0x53
 14945 049a 00000000 		.quad	.LVL37
 14945      00000000 
 14946 04a2 00000000 		.quad	.LVL38-1
 14946      00000000 
 14947 04aa 0100     		.value	0x1
 14948 04ac 55       		.byte	0x55
 14949 04ad 00000000 		.quad	.LVL38
 14949      00000000 
 14950 04b5 00000000 		.quad	.LVL40
 14950      00000000 
 14951 04bd 0100     		.value	0x1
 14952 04bf 53       		.byte	0x53
 14953 04c0 00000000 		.quad	.LVL40
 14953      00000000 
 14954 04c8 00000000 		.quad	.LVL41-1
 14954      00000000 
 14955 04d0 0100     		.value	0x1
 14956 04d2 55       		.byte	0x55
 14957 04d3 00000000 		.quad	.LVL41
 14957      00000000 
 14958 04db 00000000 		.quad	.LFE1513
 14958      00000000 
 14959 04e3 0100     		.value	0x1
 14960 04e5 53       		.byte	0x53
 14961 04e6 00000000 		.quad	0
 14961      00000000 
 14962 04ee 00000000 		.quad	0
 14962      00000000 
 14963              	.LLST25:
 14964 04f6 00000000 		.quad	.LVL34
 14964      00000000 
 14965 04fe 00000000 		.quad	.LVL35
 14965      00000000 
 14966 0506 0800     		.value	0x8
 14967 0508 70       		.byte	0x70
 14968 0509 00       		.sleb128 0
 14969 050a 08       		.byte	0x8
 14970 050b 20       		.byte	0x20
 14971 050c 24       		.byte	0x24
 14972 050d 30       		.byte	0x30
 14973 050e 29       		.byte	0x29
 14974 050f 9F       		.byte	0x9f
 14975 0510 00000000 		.quad	.LVL41
 14975      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 345


 14976 0518 00000000 		.quad	.LVL42-1
 14976      00000000 
 14977 0520 0800     		.value	0x8
 14978 0522 70       		.byte	0x70
 14979 0523 00       		.sleb128 0
 14980 0524 08       		.byte	0x8
 14981 0525 20       		.byte	0x20
 14982 0526 24       		.byte	0x24
 14983 0527 30       		.byte	0x30
 14984 0528 29       		.byte	0x29
 14985 0529 9F       		.byte	0x9f
 14986 052a 00000000 		.quad	0
 14986      00000000 
 14987 0532 00000000 		.quad	0
 14987      00000000 
 14988              	.LLST26:
 14989 053a 00000000 		.quad	.LVL36
 14989      00000000 
 14990 0542 00000000 		.quad	.LVL41
 14990      00000000 
 14991 054a 0300     		.value	0x3
 14992 054c 08       		.byte	0x8
 14993 054d 67       		.byte	0x67
 14994 054e 9F       		.byte	0x9f
 14995 054f 00000000 		.quad	0
 14995      00000000 
 14996 0557 00000000 		.quad	0
 14996      00000000 
 14997              	.LLST27:
 14998 055f 00000000 		.quad	.LVL36
 14998      00000000 
 14999 0567 00000000 		.quad	.LVL41
 14999      00000000 
 15000 056f 0A00     		.value	0xa
 15001 0571 03       		.byte	0x3
 15002 0572 00000000 		.quad	.LC7
 15002      00000000 
 15003 057a 9F       		.byte	0x9f
 15004 057b 00000000 		.quad	0
 15004      00000000 
 15005 0583 00000000 		.quad	0
 15005      00000000 
 15006              	.LLST28:
 15007 058b 00000000 		.quad	.LVL36
 15007      00000000 
 15008 0593 00000000 		.quad	.LVL38-1
 15008      00000000 
 15009 059b 0C00     		.value	0xc
 15010 059d F5       		.byte	0xf5
 15011 059e 11       		.uleb128 0x11
 15012 059f 29       		.uleb128 0x29
 15013 05a0 F4       		.byte	0xf4
 15014 05a1 29       		.uleb128 0x29
 15015 05a2 04       		.byte	0x4
 15016 05a3 00000000 		.long	0
 15017 05a7 29       		.byte	0x29
 15018 05a8 9F       		.byte	0x9f
GAS LISTING /tmp/ccrWPnlb.s 			page 346


 15019 05a9 00000000 		.quad	.LVL38
 15019      00000000 
 15020 05b1 00000000 		.quad	.LVL39-1
 15020      00000000 
 15021 05b9 0C00     		.value	0xc
 15022 05bb F5       		.byte	0xf5
 15023 05bc 11       		.uleb128 0x11
 15024 05bd 29       		.uleb128 0x29
 15025 05be F4       		.byte	0xf4
 15026 05bf 29       		.uleb128 0x29
 15027 05c0 04       		.byte	0x4
 15028 05c1 00000000 		.long	0
 15029 05c5 29       		.byte	0x29
 15030 05c6 9F       		.byte	0x9f
 15031 05c7 00000000 		.quad	0
 15031      00000000 
 15032 05cf 00000000 		.quad	0
 15032      00000000 
 15033              	.LLST29:
 15034 05d7 00000000 		.quad	.LVL36
 15034      00000000 
 15035 05df 00000000 		.quad	.LVL41
 15035      00000000 
 15036 05e7 0A00     		.value	0xa
 15037 05e9 03       		.byte	0x3
 15038 05ea 00000000 		.quad	.LC13
 15038      00000000 
 15039 05f2 9F       		.byte	0x9f
 15040 05f3 00000000 		.quad	0
 15040      00000000 
 15041 05fb 00000000 		.quad	0
 15041      00000000 
 15042              	.LLST30:
 15043 0603 00000000 		.quad	.LVL44
 15043      00000000 
 15044 060b 00000000 		.quad	.LVL45-1
 15044      00000000 
 15045 0613 0100     		.value	0x1
 15046 0615 50       		.byte	0x50
 15047 0616 00000000 		.quad	.LVL45-1
 15047      00000000 
 15048 061e 00000000 		.quad	.LVL61
 15048      00000000 
 15049 0626 0100     		.value	0x1
 15050 0628 53       		.byte	0x53
 15051 0629 00000000 		.quad	.LVL63
 15051      00000000 
 15052 0631 00000000 		.quad	.LFE1514
 15052      00000000 
 15053 0639 0100     		.value	0x1
 15054 063b 53       		.byte	0x53
 15055 063c 00000000 		.quad	0
 15055      00000000 
 15056 0644 00000000 		.quad	0
 15056      00000000 
 15057              	.LLST31:
 15058 064c 00000000 		.quad	.LVL56
GAS LISTING /tmp/ccrWPnlb.s 			page 347


 15058      00000000 
 15059 0654 00000000 		.quad	.LVL57-1
 15059      00000000 
 15060 065c 0100     		.value	0x1
 15061 065e 50       		.byte	0x50
 15062 065f 00000000 		.quad	.LVL57-1
 15062      00000000 
 15063 0667 00000000 		.quad	.LVL62
 15063      00000000 
 15064 066f 0100     		.value	0x1
 15065 0671 56       		.byte	0x56
 15066 0672 00000000 		.quad	.LVL62
 15066      00000000 
 15067 067a 00000000 		.quad	.LVL63-1
 15067      00000000 
 15068 0682 0100     		.value	0x1
 15069 0684 55       		.byte	0x55
 15070 0685 00000000 		.quad	.LVL71
 15070      00000000 
 15071 068d 00000000 		.quad	.LFE1514
 15071      00000000 
 15072 0695 0100     		.value	0x1
 15073 0697 56       		.byte	0x56
 15074 0698 00000000 		.quad	0
 15074      00000000 
 15075 06a0 00000000 		.quad	0
 15075      00000000 
 15076              	.LLST32:
 15077 06a8 00000000 		.quad	.LVL45
 15077      00000000 
 15078 06b0 00000000 		.quad	.LVL61
 15078      00000000 
 15079 06b8 0100     		.value	0x1
 15080 06ba 53       		.byte	0x53
 15081 06bb 00000000 		.quad	.LVL63
 15081      00000000 
 15082 06c3 00000000 		.quad	.LFE1514
 15082      00000000 
 15083 06cb 0100     		.value	0x1
 15084 06cd 53       		.byte	0x53
 15085 06ce 00000000 		.quad	0
 15085      00000000 
 15086 06d6 00000000 		.quad	0
 15086      00000000 
 15087              	.LLST35:
 15088 06de 00000000 		.quad	.LVL45
 15088      00000000 
 15089 06e6 00000000 		.quad	.LVL46-1
 15089      00000000 
 15090 06ee 0900     		.value	0x9
 15091 06f0 03       		.byte	0x3
 15092 06f1 00000000 		.quad	_ZL11g_3x3_stamp
 15092      00000000 
 15093 06f9 00000000 		.quad	0
 15093      00000000 
 15094 0701 00000000 		.quad	0
 15094      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 348


 15095              	.LLST36:
 15096 0709 00000000 		.quad	.LVL46
 15096      00000000 
 15097 0711 00000000 		.quad	.LVL47
 15097      00000000 
 15098 0719 0800     		.value	0x8
 15099 071b 70       		.byte	0x70
 15100 071c 00       		.sleb128 0
 15101 071d 08       		.byte	0x8
 15102 071e 20       		.byte	0x20
 15103 071f 24       		.byte	0x24
 15104 0720 30       		.byte	0x30
 15105 0721 29       		.byte	0x29
 15106 0722 9F       		.byte	0x9f
 15107 0723 00000000 		.quad	.LVL63
 15107      00000000 
 15108 072b 00000000 		.quad	.LVL64-1
 15108      00000000 
 15109 0733 0800     		.value	0x8
 15110 0735 70       		.byte	0x70
 15111 0736 00       		.sleb128 0
 15112 0737 08       		.byte	0x8
 15113 0738 20       		.byte	0x20
 15114 0739 24       		.byte	0x24
 15115 073a 30       		.byte	0x30
 15116 073b 29       		.byte	0x29
 15117 073c 9F       		.byte	0x9f
 15118 073d 00000000 		.quad	0
 15118      00000000 
 15119 0745 00000000 		.quad	0
 15119      00000000 
 15120              	.LLST37:
 15121 074d 00000000 		.quad	.LVL48
 15121      00000000 
 15122 0755 00000000 		.quad	.LVL63
 15122      00000000 
 15123 075d 0300     		.value	0x3
 15124 075f 08       		.byte	0x8
 15125 0760 72       		.byte	0x72
 15126 0761 9F       		.byte	0x9f
 15127 0762 00000000 		.quad	.LVL65
 15127      00000000 
 15128 076a 00000000 		.quad	.LFE1514
 15128      00000000 
 15129 0772 0300     		.value	0x3
 15130 0774 08       		.byte	0x8
 15131 0775 72       		.byte	0x72
 15132 0776 9F       		.byte	0x9f
 15133 0777 00000000 		.quad	0
 15133      00000000 
 15134 077f 00000000 		.quad	0
 15134      00000000 
 15135              	.LLST38:
 15136 0787 00000000 		.quad	.LVL48
 15136      00000000 
 15137 078f 00000000 		.quad	.LVL63
 15137      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 349


 15138 0797 0A00     		.value	0xa
 15139 0799 03       		.byte	0x3
 15140 079a 00000000 		.quad	.LC7
 15140      00000000 
 15141 07a2 9F       		.byte	0x9f
 15142 07a3 00000000 		.quad	.LVL65
 15142      00000000 
 15143 07ab 00000000 		.quad	.LFE1514
 15143      00000000 
 15144 07b3 0A00     		.value	0xa
 15145 07b5 03       		.byte	0x3
 15146 07b6 00000000 		.quad	.LC7
 15146      00000000 
 15147 07be 9F       		.byte	0x9f
 15148 07bf 00000000 		.quad	0
 15148      00000000 
 15149 07c7 00000000 		.quad	0
 15149      00000000 
 15150              	.LLST39:
 15151 07cf 00000000 		.quad	.LVL48
 15151      00000000 
 15152 07d7 00000000 		.quad	.LVL49
 15152      00000000 
 15153 07df 0C00     		.value	0xc
 15154 07e1 F5       		.byte	0xf5
 15155 07e2 11       		.uleb128 0x11
 15156 07e3 29       		.uleb128 0x29
 15157 07e4 F4       		.byte	0xf4
 15158 07e5 29       		.uleb128 0x29
 15159 07e6 04       		.byte	0x4
 15160 07e7 0000803F 		.long	0x3f800000
 15161 07eb 29       		.byte	0x29
 15162 07ec 9F       		.byte	0x9f
 15163 07ed 00000000 		.quad	.LVL69
 15163      00000000 
 15164 07f5 00000000 		.quad	.LVL70-1
 15164      00000000 
 15165 07fd 0C00     		.value	0xc
 15166 07ff F5       		.byte	0xf5
 15167 0800 11       		.uleb128 0x11
 15168 0801 29       		.uleb128 0x29
 15169 0802 F4       		.byte	0xf4
 15170 0803 29       		.uleb128 0x29
 15171 0804 04       		.byte	0x4
 15172 0805 0000803F 		.long	0x3f800000
 15173 0809 29       		.byte	0x29
 15174 080a 9F       		.byte	0x9f
 15175 080b 00000000 		.quad	0
 15175      00000000 
 15176 0813 00000000 		.quad	0
 15176      00000000 
 15177              	.LLST40:
 15178 081b 00000000 		.quad	.LVL48
 15178      00000000 
 15179 0823 00000000 		.quad	.LVL63
 15179      00000000 
 15180 082b 0A00     		.value	0xa
GAS LISTING /tmp/ccrWPnlb.s 			page 350


 15181 082d 03       		.byte	0x3
 15182 082e 00000000 		.quad	.LC17
 15182      00000000 
 15183 0836 9F       		.byte	0x9f
 15184 0837 00000000 		.quad	.LVL65
 15184      00000000 
 15185 083f 00000000 		.quad	.LFE1514
 15185      00000000 
 15186 0847 0A00     		.value	0xa
 15187 0849 03       		.byte	0x3
 15188 084a 00000000 		.quad	.LC17
 15188      00000000 
 15189 0852 9F       		.byte	0x9f
 15190 0853 00000000 		.quad	0
 15190      00000000 
 15191 085b 00000000 		.quad	0
 15191      00000000 
 15192              	.LLST41:
 15193 0863 00000000 		.quad	.LVL50
 15193      00000000 
 15194 086b 00000000 		.quad	.LVL61
 15194      00000000 
 15195 0873 0100     		.value	0x1
 15196 0875 53       		.byte	0x53
 15197 0876 00000000 		.quad	.LVL65
 15197      00000000 
 15198 087e 00000000 		.quad	.LVL69
 15198      00000000 
 15199 0886 0100     		.value	0x1
 15200 0888 53       		.byte	0x53
 15201 0889 00000000 		.quad	.LVL71
 15201      00000000 
 15202 0891 00000000 		.quad	.LFE1514
 15202      00000000 
 15203 0899 0100     		.value	0x1
 15204 089b 53       		.byte	0x53
 15205 089c 00000000 		.quad	0
 15205      00000000 
 15206 08a4 00000000 		.quad	0
 15206      00000000 
 15207              	.LLST44:
 15208 08ac 00000000 		.quad	.LVL50
 15208      00000000 
 15209 08b4 00000000 		.quad	.LVL63
 15209      00000000 
 15210 08bc 0A00     		.value	0xa
 15211 08be 03       		.byte	0x3
 15212 08bf 00000000 		.quad	_ZZ32test_add_point_with_stamp_centervE8expected
 15212      00000000 
 15213 08c7 9F       		.byte	0x9f
 15214 08c8 00000000 		.quad	.LVL65
 15214      00000000 
 15215 08d0 00000000 		.quad	.LVL69
 15215      00000000 
 15216 08d8 0A00     		.value	0xa
 15217 08da 03       		.byte	0x3
 15218 08db 00000000 		.quad	_ZZ32test_add_point_with_stamp_centervE8expected
GAS LISTING /tmp/ccrWPnlb.s 			page 351


 15218      00000000 
 15219 08e3 9F       		.byte	0x9f
 15220 08e4 00000000 		.quad	.LVL71
 15220      00000000 
 15221 08ec 00000000 		.quad	.LFE1514
 15221      00000000 
 15222 08f4 0A00     		.value	0xa
 15223 08f6 03       		.byte	0x3
 15224 08f7 00000000 		.quad	_ZZ32test_add_point_with_stamp_centervE8expected
 15224      00000000 
 15225 08ff 9F       		.byte	0x9f
 15226 0900 00000000 		.quad	0
 15226      00000000 
 15227 0908 00000000 		.quad	0
 15227      00000000 
 15228              	.LLST45:
 15229 0910 00000000 		.quad	.LVL51
 15229      00000000 
 15230 0918 00000000 		.quad	.LVL63
 15230      00000000 
 15231 0920 0300     		.value	0x3
 15232 0922 08       		.byte	0x8
 15233 0923 7C       		.byte	0x7c
 15234 0924 9F       		.byte	0x9f
 15235 0925 00000000 		.quad	.LVL65
 15235      00000000 
 15236 092d 00000000 		.quad	.LVL69
 15236      00000000 
 15237 0935 0300     		.value	0x3
 15238 0937 08       		.byte	0x8
 15239 0938 7C       		.byte	0x7c
 15240 0939 9F       		.byte	0x9f
 15241 093a 00000000 		.quad	.LVL71
 15241      00000000 
 15242 0942 00000000 		.quad	.LFE1514
 15242      00000000 
 15243 094a 0300     		.value	0x3
 15244 094c 08       		.byte	0x8
 15245 094d 7C       		.byte	0x7c
 15246 094e 9F       		.byte	0x9f
 15247 094f 00000000 		.quad	0
 15247      00000000 
 15248 0957 00000000 		.quad	0
 15248      00000000 
 15249              	.LLST46:
 15250 095f 00000000 		.quad	.LVL51
 15250      00000000 
 15251 0967 00000000 		.quad	.LVL63
 15251      00000000 
 15252 096f 0A00     		.value	0xa
 15253 0971 03       		.byte	0x3
 15254 0972 00000000 		.quad	.LC7
 15254      00000000 
 15255 097a 9F       		.byte	0x9f
 15256 097b 00000000 		.quad	.LVL65
 15256      00000000 
 15257 0983 00000000 		.quad	.LVL69
GAS LISTING /tmp/ccrWPnlb.s 			page 352


 15257      00000000 
 15258 098b 0A00     		.value	0xa
 15259 098d 03       		.byte	0x3
 15260 098e 00000000 		.quad	.LC7
 15260      00000000 
 15261 0996 9F       		.byte	0x9f
 15262 0997 00000000 		.quad	.LVL71
 15262      00000000 
 15263 099f 00000000 		.quad	.LFE1514
 15263      00000000 
 15264 09a7 0A00     		.value	0xa
 15265 09a9 03       		.byte	0x3
 15266 09aa 00000000 		.quad	.LC7
 15266      00000000 
 15267 09b2 9F       		.byte	0x9f
 15268 09b3 00000000 		.quad	0
 15268      00000000 
 15269 09bb 00000000 		.quad	0
 15269      00000000 
 15270              	.LLST47:
 15271 09c3 00000000 		.quad	.LVL51
 15271      00000000 
 15272 09cb 00000000 		.quad	.LVL52
 15272      00000000 
 15273 09d3 0800     		.value	0x8
 15274 09d5 70       		.byte	0x70
 15275 09d6 00       		.sleb128 0
 15276 09d7 08       		.byte	0x8
 15277 09d8 20       		.byte	0x20
 15278 09d9 24       		.byte	0x24
 15279 09da 30       		.byte	0x30
 15280 09db 29       		.byte	0x29
 15281 09dc 9F       		.byte	0x9f
 15282 09dd 00000000 		.quad	.LVL67
 15282      00000000 
 15283 09e5 00000000 		.quad	.LVL68-1
 15283      00000000 
 15284 09ed 0800     		.value	0x8
 15285 09ef 70       		.byte	0x70
 15286 09f0 00       		.sleb128 0
 15287 09f1 08       		.byte	0x8
 15288 09f2 20       		.byte	0x20
 15289 09f3 24       		.byte	0x24
 15290 09f4 30       		.byte	0x30
 15291 09f5 29       		.byte	0x29
 15292 09f6 9F       		.byte	0x9f
 15293 09f7 00000000 		.quad	0
 15293      00000000 
 15294 09ff 00000000 		.quad	0
 15294      00000000 
 15295              	.LLST48:
 15296 0a07 00000000 		.quad	.LVL51
 15296      00000000 
 15297 0a0f 00000000 		.quad	.LVL63
 15297      00000000 
 15298 0a17 0A00     		.value	0xa
 15299 0a19 03       		.byte	0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 353


 15300 0a1a 00000000 		.quad	.LC18
 15300      00000000 
 15301 0a22 9F       		.byte	0x9f
 15302 0a23 00000000 		.quad	.LVL65
 15302      00000000 
 15303 0a2b 00000000 		.quad	.LVL69
 15303      00000000 
 15304 0a33 0A00     		.value	0xa
 15305 0a35 03       		.byte	0x3
 15306 0a36 00000000 		.quad	.LC18
 15306      00000000 
 15307 0a3e 9F       		.byte	0x9f
 15308 0a3f 00000000 		.quad	.LVL71
 15308      00000000 
 15309 0a47 00000000 		.quad	.LFE1514
 15309      00000000 
 15310 0a4f 0A00     		.value	0xa
 15311 0a51 03       		.byte	0x3
 15312 0a52 00000000 		.quad	.LC18
 15312      00000000 
 15313 0a5a 9F       		.byte	0x9f
 15314 0a5b 00000000 		.quad	0
 15314      00000000 
 15315 0a63 00000000 		.quad	0
 15315      00000000 
 15316              	.LLST49:
 15317 0a6b 00000000 		.quad	.LVL53
 15317      00000000 
 15318 0a73 00000000 		.quad	.LVL63
 15318      00000000 
 15319 0a7b 0300     		.value	0x3
 15320 0a7d 08       		.byte	0x8
 15321 0a7e 7D       		.byte	0x7d
 15322 0a7f 9F       		.byte	0x9f
 15323 0a80 00000000 		.quad	.LVL65
 15323      00000000 
 15324 0a88 00000000 		.quad	.LVL67
 15324      00000000 
 15325 0a90 0300     		.value	0x3
 15326 0a92 08       		.byte	0x8
 15327 0a93 7D       		.byte	0x7d
 15328 0a94 9F       		.byte	0x9f
 15329 0a95 00000000 		.quad	.LVL71
 15329      00000000 
 15330 0a9d 00000000 		.quad	.LFE1514
 15330      00000000 
 15331 0aa5 0300     		.value	0x3
 15332 0aa7 08       		.byte	0x8
 15333 0aa8 7D       		.byte	0x7d
 15334 0aa9 9F       		.byte	0x9f
 15335 0aaa 00000000 		.quad	0
 15335      00000000 
 15336 0ab2 00000000 		.quad	0
 15336      00000000 
 15337              	.LLST50:
 15338 0aba 00000000 		.quad	.LVL53
 15338      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 354


 15339 0ac2 00000000 		.quad	.LVL63
 15339      00000000 
 15340 0aca 0A00     		.value	0xa
 15341 0acc 03       		.byte	0x3
 15342 0acd 00000000 		.quad	.LC7
 15342      00000000 
 15343 0ad5 9F       		.byte	0x9f
 15344 0ad6 00000000 		.quad	.LVL65
 15344      00000000 
 15345 0ade 00000000 		.quad	.LVL67
 15345      00000000 
 15346 0ae6 0A00     		.value	0xa
 15347 0ae8 03       		.byte	0x3
 15348 0ae9 00000000 		.quad	.LC7
 15348      00000000 
 15349 0af1 9F       		.byte	0x9f
 15350 0af2 00000000 		.quad	.LVL71
 15350      00000000 
 15351 0afa 00000000 		.quad	.LFE1514
 15351      00000000 
 15352 0b02 0A00     		.value	0xa
 15353 0b04 03       		.byte	0x3
 15354 0b05 00000000 		.quad	.LC7
 15354      00000000 
 15355 0b0d 9F       		.byte	0x9f
 15356 0b0e 00000000 		.quad	0
 15356      00000000 
 15357 0b16 00000000 		.quad	0
 15357      00000000 
 15358              	.LLST51:
 15359 0b1e 00000000 		.quad	.LVL53
 15359      00000000 
 15360 0b26 00000000 		.quad	.LVL54
 15360      00000000 
 15361 0b2e 0C00     		.value	0xc
 15362 0b30 F5       		.byte	0xf5
 15363 0b31 11       		.uleb128 0x11
 15364 0b32 29       		.uleb128 0x29
 15365 0b33 F4       		.byte	0xf4
 15366 0b34 29       		.uleb128 0x29
 15367 0b35 04       		.byte	0x4
 15368 0b36 00000040 		.long	0x40000000
 15369 0b3a 29       		.byte	0x29
 15370 0b3b 9F       		.byte	0x9f
 15371 0b3c 00000000 		.quad	.LVL65
 15371      00000000 
 15372 0b44 00000000 		.quad	.LVL66-1
 15372      00000000 
 15373 0b4c 0C00     		.value	0xc
 15374 0b4e F5       		.byte	0xf5
 15375 0b4f 11       		.uleb128 0x11
 15376 0b50 29       		.uleb128 0x29
 15377 0b51 F4       		.byte	0xf4
 15378 0b52 29       		.uleb128 0x29
 15379 0b53 04       		.byte	0x4
 15380 0b54 00000040 		.long	0x40000000
 15381 0b58 29       		.byte	0x29
GAS LISTING /tmp/ccrWPnlb.s 			page 355


 15382 0b59 9F       		.byte	0x9f
 15383 0b5a 00000000 		.quad	0
 15383      00000000 
 15384 0b62 00000000 		.quad	0
 15384      00000000 
 15385              	.LLST52:
 15386 0b6a 00000000 		.quad	.LVL53
 15386      00000000 
 15387 0b72 00000000 		.quad	.LVL63
 15387      00000000 
 15388 0b7a 0A00     		.value	0xa
 15389 0b7c 03       		.byte	0x3
 15390 0b7d 00000000 		.quad	.LC20
 15390      00000000 
 15391 0b85 9F       		.byte	0x9f
 15392 0b86 00000000 		.quad	.LVL65
 15392      00000000 
 15393 0b8e 00000000 		.quad	.LVL67
 15393      00000000 
 15394 0b96 0A00     		.value	0xa
 15395 0b98 03       		.byte	0x3
 15396 0b99 00000000 		.quad	.LC20
 15396      00000000 
 15397 0ba1 9F       		.byte	0x9f
 15398 0ba2 00000000 		.quad	.LVL71
 15398      00000000 
 15399 0baa 00000000 		.quad	.LFE1514
 15399      00000000 
 15400 0bb2 0A00     		.value	0xa
 15401 0bb4 03       		.byte	0x3
 15402 0bb5 00000000 		.quad	.LC20
 15402      00000000 
 15403 0bbd 9F       		.byte	0x9f
 15404 0bbe 00000000 		.quad	0
 15404      00000000 
 15405 0bc6 00000000 		.quad	0
 15405      00000000 
 15406              	.LLST53:
 15407 0bce 00000000 		.quad	.LVL57
 15407      00000000 
 15408 0bd6 00000000 		.quad	.LVL61
 15408      00000000 
 15409 0bde 0100     		.value	0x1
 15410 0be0 53       		.byte	0x53
 15411 0be1 00000000 		.quad	.LVL71
 15411      00000000 
 15412 0be9 00000000 		.quad	.LFE1514
 15412      00000000 
 15413 0bf1 0100     		.value	0x1
 15414 0bf3 53       		.byte	0x53
 15415 0bf4 00000000 		.quad	0
 15415      00000000 
 15416 0bfc 00000000 		.quad	0
 15416      00000000 
 15417              	.LLST54:
 15418 0c04 00000000 		.quad	.LVL57
 15418      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 356


 15419 0c0c 00000000 		.quad	.LVL62
 15419      00000000 
 15420 0c14 0100     		.value	0x1
 15421 0c16 56       		.byte	0x56
 15422 0c17 00000000 		.quad	.LVL62
 15422      00000000 
 15423 0c1f 00000000 		.quad	.LVL63-1
 15423      00000000 
 15424 0c27 0100     		.value	0x1
 15425 0c29 55       		.byte	0x55
 15426 0c2a 00000000 		.quad	.LVL71
 15426      00000000 
 15427 0c32 00000000 		.quad	.LFE1514
 15427      00000000 
 15428 0c3a 0100     		.value	0x1
 15429 0c3c 56       		.byte	0x56
 15430 0c3d 00000000 		.quad	0
 15430      00000000 
 15431 0c45 00000000 		.quad	0
 15431      00000000 
 15432              	.LLST55:
 15433 0c4d 00000000 		.quad	.LVL58
 15433      00000000 
 15434 0c55 00000000 		.quad	.LVL63
 15434      00000000 
 15435 0c5d 0300     		.value	0x3
 15436 0c5f 08       		.byte	0x8
 15437 0c60 82       		.byte	0x82
 15438 0c61 9F       		.byte	0x9f
 15439 0c62 00000000 		.quad	.LVL73
 15439      00000000 
 15440 0c6a 00000000 		.quad	.LFE1514
 15440      00000000 
 15441 0c72 0300     		.value	0x3
 15442 0c74 08       		.byte	0x8
 15443 0c75 82       		.byte	0x82
 15444 0c76 9F       		.byte	0x9f
 15445 0c77 00000000 		.quad	0
 15445      00000000 
 15446 0c7f 00000000 		.quad	0
 15446      00000000 
 15447              	.LLST56:
 15448 0c87 00000000 		.quad	.LVL58
 15448      00000000 
 15449 0c8f 00000000 		.quad	.LVL63
 15449      00000000 
 15450 0c97 0A00     		.value	0xa
 15451 0c99 03       		.byte	0x3
 15452 0c9a 00000000 		.quad	.LC7
 15452      00000000 
 15453 0ca2 9F       		.byte	0x9f
 15454 0ca3 00000000 		.quad	.LVL73
 15454      00000000 
 15455 0cab 00000000 		.quad	.LFE1514
 15455      00000000 
 15456 0cb3 0A00     		.value	0xa
 15457 0cb5 03       		.byte	0x3
GAS LISTING /tmp/ccrWPnlb.s 			page 357


 15458 0cb6 00000000 		.quad	.LC7
 15458      00000000 
 15459 0cbe 9F       		.byte	0x9f
 15460 0cbf 00000000 		.quad	0
 15460      00000000 
 15461 0cc7 00000000 		.quad	0
 15461      00000000 
 15462              	.LLST57:
 15463 0ccf 00000000 		.quad	.LVL58
 15463      00000000 
 15464 0cd7 00000000 		.quad	.LVL63
 15464      00000000 
 15465 0cdf 0A00     		.value	0xa
 15466 0ce1 03       		.byte	0x3
 15467 0ce2 00000000 		.quad	.LC21
 15467      00000000 
 15468 0cea 9F       		.byte	0x9f
 15469 0ceb 00000000 		.quad	.LVL73
 15469      00000000 
 15470 0cf3 00000000 		.quad	.LFE1514
 15470      00000000 
 15471 0cfb 0A00     		.value	0xa
 15472 0cfd 03       		.byte	0x3
 15473 0cfe 00000000 		.quad	.LC21
 15473      00000000 
 15474 0d06 9F       		.byte	0x9f
 15475 0d07 00000000 		.quad	0
 15475      00000000 
 15476 0d0f 00000000 		.quad	0
 15476      00000000 
 15477              	.LLST58:
 15478 0d17 00000000 		.quad	.LVL75
 15478      00000000 
 15479 0d1f 00000000 		.quad	.LVL76-1
 15479      00000000 
 15480 0d27 0100     		.value	0x1
 15481 0d29 50       		.byte	0x50
 15482 0d2a 00000000 		.quad	.LVL76-1
 15482      00000000 
 15483 0d32 00000000 		.quad	.LVL89
 15483      00000000 
 15484 0d3a 0100     		.value	0x1
 15485 0d3c 53       		.byte	0x53
 15486 0d3d 00000000 		.quad	.LVL91
 15486      00000000 
 15487 0d45 00000000 		.quad	.LFE1515
 15487      00000000 
 15488 0d4d 0100     		.value	0x1
 15489 0d4f 53       		.byte	0x53
 15490 0d50 00000000 		.quad	0
 15490      00000000 
 15491 0d58 00000000 		.quad	0
 15491      00000000 
 15492              	.LLST59:
 15493 0d60 00000000 		.quad	.LVL82
 15493      00000000 
 15494 0d68 00000000 		.quad	.LVL83-1
GAS LISTING /tmp/ccrWPnlb.s 			page 358


 15494      00000000 
 15495 0d70 0100     		.value	0x1
 15496 0d72 50       		.byte	0x50
 15497 0d73 00000000 		.quad	.LVL83-1
 15497      00000000 
 15498 0d7b 00000000 		.quad	.LVL90
 15498      00000000 
 15499 0d83 0100     		.value	0x1
 15500 0d85 56       		.byte	0x56
 15501 0d86 00000000 		.quad	.LVL90
 15501      00000000 
 15502 0d8e 00000000 		.quad	.LVL91-1
 15502      00000000 
 15503 0d96 0100     		.value	0x1
 15504 0d98 55       		.byte	0x55
 15505 0d99 00000000 		.quad	.LVL95
 15505      00000000 
 15506 0da1 00000000 		.quad	.LFE1515
 15506      00000000 
 15507 0da9 0100     		.value	0x1
 15508 0dab 56       		.byte	0x56
 15509 0dac 00000000 		.quad	0
 15509      00000000 
 15510 0db4 00000000 		.quad	0
 15510      00000000 
 15511              	.LLST60:
 15512 0dbc 00000000 		.quad	.LVL76
 15512      00000000 
 15513 0dc4 00000000 		.quad	.LVL89
 15513      00000000 
 15514 0dcc 0100     		.value	0x1
 15515 0dce 53       		.byte	0x53
 15516 0dcf 00000000 		.quad	.LVL91
 15516      00000000 
 15517 0dd7 00000000 		.quad	.LFE1515
 15517      00000000 
 15518 0ddf 0100     		.value	0x1
 15519 0de1 53       		.byte	0x53
 15520 0de2 00000000 		.quad	0
 15520      00000000 
 15521 0dea 00000000 		.quad	0
 15521      00000000 
 15522              	.LLST63:
 15523 0df2 00000000 		.quad	.LVL77
 15523      00000000 
 15524 0dfa 00000000 		.quad	.LVL78
 15524      00000000 
 15525 0e02 0800     		.value	0x8
 15526 0e04 70       		.byte	0x70
 15527 0e05 00       		.sleb128 0
 15528 0e06 08       		.byte	0x8
 15529 0e07 20       		.byte	0x20
 15530 0e08 24       		.byte	0x24
 15531 0e09 30       		.byte	0x30
 15532 0e0a 29       		.byte	0x29
 15533 0e0b 9F       		.byte	0x9f
 15534 0e0c 00000000 		.quad	.LVL91
GAS LISTING /tmp/ccrWPnlb.s 			page 359


 15534      00000000 
 15535 0e14 00000000 		.quad	.LVL92-1
 15535      00000000 
 15536 0e1c 0800     		.value	0x8
 15537 0e1e 70       		.byte	0x70
 15538 0e1f 00       		.sleb128 0
 15539 0e20 08       		.byte	0x8
 15540 0e21 20       		.byte	0x20
 15541 0e22 24       		.byte	0x24
 15542 0e23 30       		.byte	0x30
 15543 0e24 29       		.byte	0x29
 15544 0e25 9F       		.byte	0x9f
 15545 0e26 00000000 		.quad	0
 15545      00000000 
 15546 0e2e 00000000 		.quad	0
 15546      00000000 
 15547              	.LLST64:
 15548 0e36 00000000 		.quad	.LVL79
 15548      00000000 
 15549 0e3e 00000000 		.quad	.LVL91
 15549      00000000 
 15550 0e46 0300     		.value	0x3
 15551 0e48 08       		.byte	0x8
 15552 0e49 94       		.byte	0x94
 15553 0e4a 9F       		.byte	0x9f
 15554 0e4b 00000000 		.quad	.LVL93
 15554      00000000 
 15555 0e53 00000000 		.quad	.LFE1515
 15555      00000000 
 15556 0e5b 0300     		.value	0x3
 15557 0e5d 08       		.byte	0x8
 15558 0e5e 94       		.byte	0x94
 15559 0e5f 9F       		.byte	0x9f
 15560 0e60 00000000 		.quad	0
 15560      00000000 
 15561 0e68 00000000 		.quad	0
 15561      00000000 
 15562              	.LLST65:
 15563 0e70 00000000 		.quad	.LVL79
 15563      00000000 
 15564 0e78 00000000 		.quad	.LVL91
 15564      00000000 
 15565 0e80 0A00     		.value	0xa
 15566 0e82 03       		.byte	0x3
 15567 0e83 00000000 		.quad	.LC7
 15567      00000000 
 15568 0e8b 9F       		.byte	0x9f
 15569 0e8c 00000000 		.quad	.LVL93
 15569      00000000 
 15570 0e94 00000000 		.quad	.LFE1515
 15570      00000000 
 15571 0e9c 0A00     		.value	0xa
 15572 0e9e 03       		.byte	0x3
 15573 0e9f 00000000 		.quad	.LC7
 15573      00000000 
 15574 0ea7 9F       		.byte	0x9f
 15575 0ea8 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 360


 15575      00000000 
 15576 0eb0 00000000 		.quad	0
 15576      00000000 
 15577              	.LLST66:
 15578 0eb8 00000000 		.quad	.LVL79
 15578      00000000 
 15579 0ec0 00000000 		.quad	.LVL80
 15579      00000000 
 15580 0ec8 0C00     		.value	0xc
 15581 0eca F5       		.byte	0xf5
 15582 0ecb 11       		.uleb128 0x11
 15583 0ecc 29       		.uleb128 0x29
 15584 0ecd F4       		.byte	0xf4
 15585 0ece 29       		.uleb128 0x29
 15586 0ecf 04       		.byte	0x4
 15587 0ed0 0000803F 		.long	0x3f800000
 15588 0ed4 29       		.byte	0x29
 15589 0ed5 9F       		.byte	0x9f
 15590 0ed6 00000000 		.quad	.LVL93
 15590      00000000 
 15591 0ede 00000000 		.quad	.LVL94-1
 15591      00000000 
 15592 0ee6 0C00     		.value	0xc
 15593 0ee8 F5       		.byte	0xf5
 15594 0ee9 11       		.uleb128 0x11
 15595 0eea 29       		.uleb128 0x29
 15596 0eeb F4       		.byte	0xf4
 15597 0eec 29       		.uleb128 0x29
 15598 0eed 04       		.byte	0x4
 15599 0eee 0000803F 		.long	0x3f800000
 15600 0ef2 29       		.byte	0x29
 15601 0ef3 9F       		.byte	0x9f
 15602 0ef4 00000000 		.quad	0
 15602      00000000 
 15603 0efc 00000000 		.quad	0
 15603      00000000 
 15604              	.LLST67:
 15605 0f04 00000000 		.quad	.LVL79
 15605      00000000 
 15606 0f0c 00000000 		.quad	.LVL91
 15606      00000000 
 15607 0f14 0A00     		.value	0xa
 15608 0f16 03       		.byte	0x3
 15609 0f17 00000000 		.quad	.LC17
 15609      00000000 
 15610 0f1f 9F       		.byte	0x9f
 15611 0f20 00000000 		.quad	.LVL93
 15611      00000000 
 15612 0f28 00000000 		.quad	.LFE1515
 15612      00000000 
 15613 0f30 0A00     		.value	0xa
 15614 0f32 03       		.byte	0x3
 15615 0f33 00000000 		.quad	.LC17
 15615      00000000 
 15616 0f3b 9F       		.byte	0x9f
 15617 0f3c 00000000 		.quad	0
 15617      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 361


 15618 0f44 00000000 		.quad	0
 15618      00000000 
 15619              	.LLST68:
 15620 0f4c 00000000 		.quad	.LVL85
 15620      00000000 
 15621 0f54 00000000 		.quad	.LVL89
 15621      00000000 
 15622 0f5c 0100     		.value	0x1
 15623 0f5e 53       		.byte	0x53
 15624 0f5f 00000000 		.quad	.LVL95
 15624      00000000 
 15625 0f67 00000000 		.quad	.LFE1515
 15625      00000000 
 15626 0f6f 0100     		.value	0x1
 15627 0f71 53       		.byte	0x53
 15628 0f72 00000000 		.quad	0
 15628      00000000 
 15629 0f7a 00000000 		.quad	0
 15629      00000000 
 15630              	.LLST69:
 15631 0f82 00000000 		.quad	.LVL85
 15631      00000000 
 15632 0f8a 00000000 		.quad	.LVL90
 15632      00000000 
 15633 0f92 0100     		.value	0x1
 15634 0f94 56       		.byte	0x56
 15635 0f95 00000000 		.quad	.LVL90
 15635      00000000 
 15636 0f9d 00000000 		.quad	.LVL91-1
 15636      00000000 
 15637 0fa5 0100     		.value	0x1
 15638 0fa7 55       		.byte	0x55
 15639 0fa8 00000000 		.quad	.LVL95
 15639      00000000 
 15640 0fb0 00000000 		.quad	.LFE1515
 15640      00000000 
 15641 0fb8 0100     		.value	0x1
 15642 0fba 56       		.byte	0x56
 15643 0fbb 00000000 		.quad	0
 15643      00000000 
 15644 0fc3 00000000 		.quad	0
 15644      00000000 
 15645              	.LLST70:
 15646 0fcb 00000000 		.quad	.LVL86
 15646      00000000 
 15647 0fd3 00000000 		.quad	.LVL91
 15647      00000000 
 15648 0fdb 0300     		.value	0x3
 15649 0fdd 08       		.byte	0x8
 15650 0fde 9B       		.byte	0x9b
 15651 0fdf 9F       		.byte	0x9f
 15652 0fe0 00000000 		.quad	.LVL97
 15652      00000000 
 15653 0fe8 00000000 		.quad	.LFE1515
 15653      00000000 
 15654 0ff0 0300     		.value	0x3
 15655 0ff2 08       		.byte	0x8
GAS LISTING /tmp/ccrWPnlb.s 			page 362


 15656 0ff3 9B       		.byte	0x9b
 15657 0ff4 9F       		.byte	0x9f
 15658 0ff5 00000000 		.quad	0
 15658      00000000 
 15659 0ffd 00000000 		.quad	0
 15659      00000000 
 15660              	.LLST71:
 15661 1005 00000000 		.quad	.LVL86
 15661      00000000 
 15662 100d 00000000 		.quad	.LVL91
 15662      00000000 
 15663 1015 0A00     		.value	0xa
 15664 1017 03       		.byte	0x3
 15665 1018 00000000 		.quad	.LC7
 15665      00000000 
 15666 1020 9F       		.byte	0x9f
 15667 1021 00000000 		.quad	.LVL97
 15667      00000000 
 15668 1029 00000000 		.quad	.LFE1515
 15668      00000000 
 15669 1031 0A00     		.value	0xa
 15670 1033 03       		.byte	0x3
 15671 1034 00000000 		.quad	.LC7
 15671      00000000 
 15672 103c 9F       		.byte	0x9f
 15673 103d 00000000 		.quad	0
 15673      00000000 
 15674 1045 00000000 		.quad	0
 15674      00000000 
 15675              	.LLST72:
 15676 104d 00000000 		.quad	.LVL86
 15676      00000000 
 15677 1055 00000000 		.quad	.LVL91
 15677      00000000 
 15678 105d 0A00     		.value	0xa
 15679 105f 03       		.byte	0x3
 15680 1060 00000000 		.quad	.LC25
 15680      00000000 
 15681 1068 9F       		.byte	0x9f
 15682 1069 00000000 		.quad	.LVL97
 15682      00000000 
 15683 1071 00000000 		.quad	.LFE1515
 15683      00000000 
 15684 1079 0A00     		.value	0xa
 15685 107b 03       		.byte	0x3
 15686 107c 00000000 		.quad	.LC25
 15686      00000000 
 15687 1084 9F       		.byte	0x9f
 15688 1085 00000000 		.quad	0
 15688      00000000 
 15689 108d 00000000 		.quad	0
 15689      00000000 
 15690              	.LLST73:
 15691 1095 00000000 		.quad	.LVL99
 15691      00000000 
 15692 109d 00000000 		.quad	.LVL100-1
 15692      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 363


 15693 10a5 0100     		.value	0x1
 15694 10a7 50       		.byte	0x50
 15695 10a8 00000000 		.quad	.LVL100-1
 15695      00000000 
 15696 10b0 00000000 		.quad	.LVL112
 15696      00000000 
 15697 10b8 0100     		.value	0x1
 15698 10ba 53       		.byte	0x53
 15699 10bb 00000000 		.quad	.LVL114
 15699      00000000 
 15700 10c3 00000000 		.quad	.LFE1516
 15700      00000000 
 15701 10cb 0100     		.value	0x1
 15702 10cd 53       		.byte	0x53
 15703 10ce 00000000 		.quad	0
 15703      00000000 
 15704 10d6 00000000 		.quad	0
 15704      00000000 
 15705              	.LLST74:
 15706 10de 00000000 		.quad	.LVL106
 15706      00000000 
 15707 10e6 00000000 		.quad	.LVL107-1
 15707      00000000 
 15708 10ee 0100     		.value	0x1
 15709 10f0 50       		.byte	0x50
 15710 10f1 00000000 		.quad	.LVL107-1
 15710      00000000 
 15711 10f9 00000000 		.quad	.LVL113
 15711      00000000 
 15712 1101 0100     		.value	0x1
 15713 1103 56       		.byte	0x56
 15714 1104 00000000 		.quad	.LVL113
 15714      00000000 
 15715 110c 00000000 		.quad	.LVL114-1
 15715      00000000 
 15716 1114 0100     		.value	0x1
 15717 1116 55       		.byte	0x55
 15718 1117 00000000 		.quad	.LVL118
 15718      00000000 
 15719 111f 00000000 		.quad	.LFE1516
 15719      00000000 
 15720 1127 0100     		.value	0x1
 15721 1129 56       		.byte	0x56
 15722 112a 00000000 		.quad	0
 15722      00000000 
 15723 1132 00000000 		.quad	0
 15723      00000000 
 15724              	.LLST75:
 15725 113a 00000000 		.quad	.LVL100
 15725      00000000 
 15726 1142 00000000 		.quad	.LVL112
 15726      00000000 
 15727 114a 0100     		.value	0x1
 15728 114c 53       		.byte	0x53
 15729 114d 00000000 		.quad	.LVL114
 15729      00000000 
 15730 1155 00000000 		.quad	.LFE1516
GAS LISTING /tmp/ccrWPnlb.s 			page 364


 15730      00000000 
 15731 115d 0100     		.value	0x1
 15732 115f 53       		.byte	0x53
 15733 1160 00000000 		.quad	0
 15733      00000000 
 15734 1168 00000000 		.quad	0
 15734      00000000 
 15735              	.LLST78:
 15736 1170 00000000 		.quad	.LVL101
 15736      00000000 
 15737 1178 00000000 		.quad	.LVL102
 15737      00000000 
 15738 1180 0800     		.value	0x8
 15739 1182 70       		.byte	0x70
 15740 1183 00       		.sleb128 0
 15741 1184 08       		.byte	0x8
 15742 1185 20       		.byte	0x20
 15743 1186 24       		.byte	0x24
 15744 1187 30       		.byte	0x30
 15745 1188 29       		.byte	0x29
 15746 1189 9F       		.byte	0x9f
 15747 118a 00000000 		.quad	.LVL114
 15747      00000000 
 15748 1192 00000000 		.quad	.LVL115-1
 15748      00000000 
 15749 119a 0800     		.value	0x8
 15750 119c 70       		.byte	0x70
 15751 119d 00       		.sleb128 0
 15752 119e 08       		.byte	0x8
 15753 119f 20       		.byte	0x20
 15754 11a0 24       		.byte	0x24
 15755 11a1 30       		.byte	0x30
 15756 11a2 29       		.byte	0x29
 15757 11a3 9F       		.byte	0x9f
 15758 11a4 00000000 		.quad	0
 15758      00000000 
 15759 11ac 00000000 		.quad	0
 15759      00000000 
 15760              	.LLST79:
 15761 11b4 00000000 		.quad	.LVL103
 15761      00000000 
 15762 11bc 00000000 		.quad	.LVL114
 15762      00000000 
 15763 11c4 0300     		.value	0x3
 15764 11c6 08       		.byte	0x8
 15765 11c7 AD       		.byte	0xad
 15766 11c8 9F       		.byte	0x9f
 15767 11c9 00000000 		.quad	.LVL116
 15767      00000000 
 15768 11d1 00000000 		.quad	.LFE1516
 15768      00000000 
 15769 11d9 0300     		.value	0x3
 15770 11db 08       		.byte	0x8
 15771 11dc AD       		.byte	0xad
 15772 11dd 9F       		.byte	0x9f
 15773 11de 00000000 		.quad	0
 15773      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 365


 15774 11e6 00000000 		.quad	0
 15774      00000000 
 15775              	.LLST80:
 15776 11ee 00000000 		.quad	.LVL103
 15776      00000000 
 15777 11f6 00000000 		.quad	.LVL114
 15777      00000000 
 15778 11fe 0A00     		.value	0xa
 15779 1200 03       		.byte	0x3
 15780 1201 00000000 		.quad	.LC7
 15780      00000000 
 15781 1209 9F       		.byte	0x9f
 15782 120a 00000000 		.quad	.LVL116
 15782      00000000 
 15783 1212 00000000 		.quad	.LFE1516
 15783      00000000 
 15784 121a 0A00     		.value	0xa
 15785 121c 03       		.byte	0x3
 15786 121d 00000000 		.quad	.LC7
 15786      00000000 
 15787 1225 9F       		.byte	0x9f
 15788 1226 00000000 		.quad	0
 15788      00000000 
 15789 122e 00000000 		.quad	0
 15789      00000000 
 15790              	.LLST81:
 15791 1236 00000000 		.quad	.LVL103
 15791      00000000 
 15792 123e 00000000 		.quad	.LVL104
 15792      00000000 
 15793 1246 0C00     		.value	0xc
 15794 1248 F5       		.byte	0xf5
 15795 1249 11       		.uleb128 0x11
 15796 124a 29       		.uleb128 0x29
 15797 124b F4       		.byte	0xf4
 15798 124c 29       		.uleb128 0x29
 15799 124d 04       		.byte	0x4
 15800 124e 0000803F 		.long	0x3f800000
 15801 1252 29       		.byte	0x29
 15802 1253 9F       		.byte	0x9f
 15803 1254 00000000 		.quad	.LVL116
 15803      00000000 
 15804 125c 00000000 		.quad	.LVL117-1
 15804      00000000 
 15805 1264 0C00     		.value	0xc
 15806 1266 F5       		.byte	0xf5
 15807 1267 11       		.uleb128 0x11
 15808 1268 29       		.uleb128 0x29
 15809 1269 F4       		.byte	0xf4
 15810 126a 29       		.uleb128 0x29
 15811 126b 04       		.byte	0x4
 15812 126c 0000803F 		.long	0x3f800000
 15813 1270 29       		.byte	0x29
 15814 1271 9F       		.byte	0x9f
 15815 1272 00000000 		.quad	0
 15815      00000000 
 15816 127a 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 366


 15816      00000000 
 15817              	.LLST82:
 15818 1282 00000000 		.quad	.LVL103
 15818      00000000 
 15819 128a 00000000 		.quad	.LVL114
 15819      00000000 
 15820 1292 0A00     		.value	0xa
 15821 1294 03       		.byte	0x3
 15822 1295 00000000 		.quad	.LC17
 15822      00000000 
 15823 129d 9F       		.byte	0x9f
 15824 129e 00000000 		.quad	.LVL116
 15824      00000000 
 15825 12a6 00000000 		.quad	.LFE1516
 15825      00000000 
 15826 12ae 0A00     		.value	0xa
 15827 12b0 03       		.byte	0x3
 15828 12b1 00000000 		.quad	.LC17
 15828      00000000 
 15829 12b9 9F       		.byte	0x9f
 15830 12ba 00000000 		.quad	0
 15830      00000000 
 15831 12c2 00000000 		.quad	0
 15831      00000000 
 15832              	.LLST83:
 15833 12ca 00000000 		.quad	.LVL108
 15833      00000000 
 15834 12d2 00000000 		.quad	.LVL112
 15834      00000000 
 15835 12da 0100     		.value	0x1
 15836 12dc 53       		.byte	0x53
 15837 12dd 00000000 		.quad	.LVL118
 15837      00000000 
 15838 12e5 00000000 		.quad	.LFE1516
 15838      00000000 
 15839 12ed 0100     		.value	0x1
 15840 12ef 53       		.byte	0x53
 15841 12f0 00000000 		.quad	0
 15841      00000000 
 15842 12f8 00000000 		.quad	0
 15842      00000000 
 15843              	.LLST84:
 15844 1300 00000000 		.quad	.LVL108
 15844      00000000 
 15845 1308 00000000 		.quad	.LVL113
 15845      00000000 
 15846 1310 0100     		.value	0x1
 15847 1312 56       		.byte	0x56
 15848 1313 00000000 		.quad	.LVL113
 15848      00000000 
 15849 131b 00000000 		.quad	.LVL114-1
 15849      00000000 
 15850 1323 0100     		.value	0x1
 15851 1325 55       		.byte	0x55
 15852 1326 00000000 		.quad	.LVL118
 15852      00000000 
 15853 132e 00000000 		.quad	.LFE1516
GAS LISTING /tmp/ccrWPnlb.s 			page 367


 15853      00000000 
 15854 1336 0100     		.value	0x1
 15855 1338 56       		.byte	0x56
 15856 1339 00000000 		.quad	0
 15856      00000000 
 15857 1341 00000000 		.quad	0
 15857      00000000 
 15858              	.LLST85:
 15859 1349 00000000 		.quad	.LVL109
 15859      00000000 
 15860 1351 00000000 		.quad	.LVL114
 15860      00000000 
 15861 1359 0300     		.value	0x3
 15862 135b 08       		.byte	0x8
 15863 135c B3       		.byte	0xb3
 15864 135d 9F       		.byte	0x9f
 15865 135e 00000000 		.quad	.LVL120
 15865      00000000 
 15866 1366 00000000 		.quad	.LFE1516
 15866      00000000 
 15867 136e 0300     		.value	0x3
 15868 1370 08       		.byte	0x8
 15869 1371 B3       		.byte	0xb3
 15870 1372 9F       		.byte	0x9f
 15871 1373 00000000 		.quad	0
 15871      00000000 
 15872 137b 00000000 		.quad	0
 15872      00000000 
 15873              	.LLST86:
 15874 1383 00000000 		.quad	.LVL109
 15874      00000000 
 15875 138b 00000000 		.quad	.LVL114
 15875      00000000 
 15876 1393 0A00     		.value	0xa
 15877 1395 03       		.byte	0x3
 15878 1396 00000000 		.quad	.LC7
 15878      00000000 
 15879 139e 9F       		.byte	0x9f
 15880 139f 00000000 		.quad	.LVL120
 15880      00000000 
 15881 13a7 00000000 		.quad	.LFE1516
 15881      00000000 
 15882 13af 0A00     		.value	0xa
 15883 13b1 03       		.byte	0x3
 15884 13b2 00000000 		.quad	.LC7
 15884      00000000 
 15885 13ba 9F       		.byte	0x9f
 15886 13bb 00000000 		.quad	0
 15886      00000000 
 15887 13c3 00000000 		.quad	0
 15887      00000000 
 15888              	.LLST87:
 15889 13cb 00000000 		.quad	.LVL109
 15889      00000000 
 15890 13d3 00000000 		.quad	.LVL114
 15890      00000000 
 15891 13db 0A00     		.value	0xa
GAS LISTING /tmp/ccrWPnlb.s 			page 368


 15892 13dd 03       		.byte	0x3
 15893 13de 00000000 		.quad	.LC28
 15893      00000000 
 15894 13e6 9F       		.byte	0x9f
 15895 13e7 00000000 		.quad	.LVL120
 15895      00000000 
 15896 13ef 00000000 		.quad	.LFE1516
 15896      00000000 
 15897 13f7 0A00     		.value	0xa
 15898 13f9 03       		.byte	0x3
 15899 13fa 00000000 		.quad	.LC28
 15899      00000000 
 15900 1402 9F       		.byte	0x9f
 15901 1403 00000000 		.quad	0
 15901      00000000 
 15902 140b 00000000 		.quad	0
 15902      00000000 
 15903              	.LLST88:
 15904 1413 00000000 		.quad	.LVL122
 15904      00000000 
 15905 141b 00000000 		.quad	.LVL123-1
 15905      00000000 
 15906 1423 0100     		.value	0x1
 15907 1425 50       		.byte	0x50
 15908 1426 00000000 		.quad	.LVL123-1
 15908      00000000 
 15909 142e 00000000 		.quad	.LVL136
 15909      00000000 
 15910 1436 0100     		.value	0x1
 15911 1438 53       		.byte	0x53
 15912 1439 00000000 		.quad	.LVL136
 15912      00000000 
 15913 1441 00000000 		.quad	.LVL137-1
 15913      00000000 
 15914 1449 0100     		.value	0x1
 15915 144b 55       		.byte	0x55
 15916 144c 00000000 		.quad	.LVL137
 15916      00000000 
 15917 1454 00000000 		.quad	.LVL139
 15917      00000000 
 15918 145c 0100     		.value	0x1
 15919 145e 53       		.byte	0x53
 15920 145f 00000000 		.quad	.LVL139
 15920      00000000 
 15921 1467 00000000 		.quad	.LVL140-1
 15921      00000000 
 15922 146f 0100     		.value	0x1
 15923 1471 55       		.byte	0x55
 15924 1472 00000000 		.quad	.LVL140
 15924      00000000 
 15925 147a 00000000 		.quad	.LFE1517
 15925      00000000 
 15926 1482 0100     		.value	0x1
 15927 1484 53       		.byte	0x53
 15928 1485 00000000 		.quad	0
 15928      00000000 
 15929 148d 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 369


 15929      00000000 
 15930              	.LLST89:
 15931 1495 00000000 		.quad	.LVL125
 15931      00000000 
 15932 149d 00000000 		.quad	.LVL136
 15932      00000000 
 15933 14a5 0100     		.value	0x1
 15934 14a7 53       		.byte	0x53
 15935 14a8 00000000 		.quad	.LVL136
 15935      00000000 
 15936 14b0 00000000 		.quad	.LVL137-1
 15936      00000000 
 15937 14b8 0100     		.value	0x1
 15938 14ba 55       		.byte	0x55
 15939 14bb 00000000 		.quad	.LVL137
 15939      00000000 
 15940 14c3 00000000 		.quad	.LVL139
 15940      00000000 
 15941 14cb 0100     		.value	0x1
 15942 14cd 53       		.byte	0x53
 15943 14ce 00000000 		.quad	.LVL139
 15943      00000000 
 15944 14d6 00000000 		.quad	.LVL140-1
 15944      00000000 
 15945 14de 0100     		.value	0x1
 15946 14e0 55       		.byte	0x55
 15947 14e1 00000000 		.quad	.LVL140
 15947      00000000 
 15948 14e9 00000000 		.quad	.LFE1517
 15948      00000000 
 15949 14f1 0100     		.value	0x1
 15950 14f3 53       		.byte	0x53
 15951 14f4 00000000 		.quad	0
 15951      00000000 
 15952 14fc 00000000 		.quad	0
 15952      00000000 
 15953              	.LLST92:
 15954 1504 00000000 		.quad	.LVL126
 15954      00000000 
 15955 150c 00000000 		.quad	.LVL127
 15955      00000000 
 15956 1514 0800     		.value	0x8
 15957 1516 70       		.byte	0x70
 15958 1517 00       		.sleb128 0
 15959 1518 08       		.byte	0x8
 15960 1519 20       		.byte	0x20
 15961 151a 24       		.byte	0x24
 15962 151b 30       		.byte	0x30
 15963 151c 29       		.byte	0x29
 15964 151d 9F       		.byte	0x9f
 15965 151e 00000000 		.quad	.LVL144
 15965      00000000 
 15966 1526 00000000 		.quad	.LVL145-1
 15966      00000000 
 15967 152e 0800     		.value	0x8
 15968 1530 70       		.byte	0x70
 15969 1531 00       		.sleb128 0
GAS LISTING /tmp/ccrWPnlb.s 			page 370


 15970 1532 08       		.byte	0x8
 15971 1533 20       		.byte	0x20
 15972 1534 24       		.byte	0x24
 15973 1535 30       		.byte	0x30
 15974 1536 29       		.byte	0x29
 15975 1537 9F       		.byte	0x9f
 15976 1538 00000000 		.quad	0
 15976      00000000 
 15977 1540 00000000 		.quad	0
 15977      00000000 
 15978              	.LLST93:
 15979 1548 00000000 		.quad	.LVL128
 15979      00000000 
 15980 1550 00000000 		.quad	.LVL144
 15980      00000000 
 15981 1558 0300     		.value	0x3
 15982 155a 08       		.byte	0x8
 15983 155b C7       		.byte	0xc7
 15984 155c 9F       		.byte	0x9f
 15985 155d 00000000 		.quad	0
 15985      00000000 
 15986 1565 00000000 		.quad	0
 15986      00000000 
 15987              	.LLST94:
 15988 156d 00000000 		.quad	.LVL128
 15988      00000000 
 15989 1575 00000000 		.quad	.LVL144
 15989      00000000 
 15990 157d 0A00     		.value	0xa
 15991 157f 03       		.byte	0x3
 15992 1580 00000000 		.quad	.LC7
 15992      00000000 
 15993 1588 9F       		.byte	0x9f
 15994 1589 00000000 		.quad	0
 15994      00000000 
 15995 1591 00000000 		.quad	0
 15995      00000000 
 15996              	.LLST95:
 15997 1599 00000000 		.quad	.LVL128
 15997      00000000 
 15998 15a1 00000000 		.quad	.LVL129
 15998      00000000 
 15999 15a9 0C00     		.value	0xc
 16000 15ab F5       		.byte	0xf5
 16001 15ac 11       		.uleb128 0x11
 16002 15ad 29       		.uleb128 0x29
 16003 15ae F4       		.byte	0xf4
 16004 15af 29       		.uleb128 0x29
 16005 15b0 04       		.byte	0x4
 16006 15b1 00000000 		.long	0
 16007 15b5 29       		.byte	0x29
 16008 15b6 9F       		.byte	0x9f
 16009 15b7 00000000 		.quad	.LVL142
 16009      00000000 
 16010 15bf 00000000 		.quad	.LVL143-1
 16010      00000000 
 16011 15c7 0C00     		.value	0xc
GAS LISTING /tmp/ccrWPnlb.s 			page 371


 16012 15c9 F5       		.byte	0xf5
 16013 15ca 11       		.uleb128 0x11
 16014 15cb 29       		.uleb128 0x29
 16015 15cc F4       		.byte	0xf4
 16016 15cd 29       		.uleb128 0x29
 16017 15ce 04       		.byte	0x4
 16018 15cf 00000000 		.long	0
 16019 15d3 29       		.byte	0x29
 16020 15d4 9F       		.byte	0x9f
 16021 15d5 00000000 		.quad	0
 16021      00000000 
 16022 15dd 00000000 		.quad	0
 16022      00000000 
 16023              	.LLST96:
 16024 15e5 00000000 		.quad	.LVL128
 16024      00000000 
 16025 15ed 00000000 		.quad	.LVL144
 16025      00000000 
 16026 15f5 0A00     		.value	0xa
 16027 15f7 03       		.byte	0x3
 16028 15f8 00000000 		.quad	.LC13
 16028      00000000 
 16029 1600 9F       		.byte	0x9f
 16030 1601 00000000 		.quad	0
 16030      00000000 
 16031 1609 00000000 		.quad	0
 16031      00000000 
 16032              	.LLST97:
 16033 1611 00000000 		.quad	.LVL132
 16033      00000000 
 16034 1619 00000000 		.quad	.LVL136
 16034      00000000 
 16035 1621 0100     		.value	0x1
 16036 1623 53       		.byte	0x53
 16037 1624 00000000 		.quad	.LVL136
 16037      00000000 
 16038 162c 00000000 		.quad	.LVL137-1
 16038      00000000 
 16039 1634 0100     		.value	0x1
 16040 1636 55       		.byte	0x55
 16041 1637 00000000 		.quad	.LVL137
 16041      00000000 
 16042 163f 00000000 		.quad	.LVL139
 16042      00000000 
 16043 1647 0100     		.value	0x1
 16044 1649 53       		.byte	0x53
 16045 164a 00000000 		.quad	.LVL139
 16045      00000000 
 16046 1652 00000000 		.quad	.LVL140-1
 16046      00000000 
 16047 165a 0100     		.value	0x1
 16048 165c 55       		.byte	0x55
 16049 165d 00000000 		.quad	.LVL140
 16049      00000000 
 16050 1665 00000000 		.quad	.LVL142
 16050      00000000 
 16051 166d 0100     		.value	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 372


 16052 166f 53       		.byte	0x53
 16053 1670 00000000 		.quad	0
 16053      00000000 
 16054 1678 00000000 		.quad	0
 16054      00000000 
 16055              	.LLST100:
 16056 1680 00000000 		.quad	.LVL132
 16056      00000000 
 16057 1688 00000000 		.quad	.LVL142
 16057      00000000 
 16058 1690 0A00     		.value	0xa
 16059 1692 03       		.byte	0x3
 16060 1693 00000000 		.quad	_ZZ33test_add_point_with_stamp_outsidevE8expected
 16060      00000000 
 16061 169b 9F       		.byte	0x9f
 16062 169c 00000000 		.quad	0
 16062      00000000 
 16063 16a4 00000000 		.quad	0
 16063      00000000 
 16064              	.LLST101:
 16065 16ac 00000000 		.quad	.LVL133
 16065      00000000 
 16066 16b4 00000000 		.quad	.LVL142
 16066      00000000 
 16067 16bc 0300     		.value	0x3
 16068 16be 08       		.byte	0x8
 16069 16bf CD       		.byte	0xcd
 16070 16c0 9F       		.byte	0x9f
 16071 16c1 00000000 		.quad	0
 16071      00000000 
 16072 16c9 00000000 		.quad	0
 16072      00000000 
 16073              	.LLST102:
 16074 16d1 00000000 		.quad	.LVL133
 16074      00000000 
 16075 16d9 00000000 		.quad	.LVL142
 16075      00000000 
 16076 16e1 0A00     		.value	0xa
 16077 16e3 03       		.byte	0x3
 16078 16e4 00000000 		.quad	.LC7
 16078      00000000 
 16079 16ec 9F       		.byte	0x9f
 16080 16ed 00000000 		.quad	0
 16080      00000000 
 16081 16f5 00000000 		.quad	0
 16081      00000000 
 16082              	.LLST103:
 16083 16fd 00000000 		.quad	.LVL133
 16083      00000000 
 16084 1705 00000000 		.quad	.LVL134
 16084      00000000 
 16085 170d 0800     		.value	0x8
 16086 170f 70       		.byte	0x70
 16087 1710 00       		.sleb128 0
 16088 1711 08       		.byte	0x8
 16089 1712 20       		.byte	0x20
 16090 1713 24       		.byte	0x24
GAS LISTING /tmp/ccrWPnlb.s 			page 373


 16091 1714 30       		.byte	0x30
 16092 1715 29       		.byte	0x29
 16093 1716 9F       		.byte	0x9f
 16094 1717 00000000 		.quad	.LVL140
 16094      00000000 
 16095 171f 00000000 		.quad	.LVL141-1
 16095      00000000 
 16096 1727 0800     		.value	0x8
 16097 1729 70       		.byte	0x70
 16098 172a 00       		.sleb128 0
 16099 172b 08       		.byte	0x8
 16100 172c 20       		.byte	0x20
 16101 172d 24       		.byte	0x24
 16102 172e 30       		.byte	0x30
 16103 172f 29       		.byte	0x29
 16104 1730 9F       		.byte	0x9f
 16105 1731 00000000 		.quad	0
 16105      00000000 
 16106 1739 00000000 		.quad	0
 16106      00000000 
 16107              	.LLST104:
 16108 1741 00000000 		.quad	.LVL133
 16108      00000000 
 16109 1749 00000000 		.quad	.LVL142
 16109      00000000 
 16110 1751 0A00     		.value	0xa
 16111 1753 03       		.byte	0x3
 16112 1754 00000000 		.quad	.LC32
 16112      00000000 
 16113 175c 9F       		.byte	0x9f
 16114 175d 00000000 		.quad	0
 16114      00000000 
 16115 1765 00000000 		.quad	0
 16115      00000000 
 16116              	.LLST105:
 16117 176d 00000000 		.quad	.LVL135
 16117      00000000 
 16118 1775 00000000 		.quad	.LVL140
 16118      00000000 
 16119 177d 0300     		.value	0x3
 16120 177f 08       		.byte	0x8
 16121 1780 CE       		.byte	0xce
 16122 1781 9F       		.byte	0x9f
 16123 1782 00000000 		.quad	0
 16123      00000000 
 16124 178a 00000000 		.quad	0
 16124      00000000 
 16125              	.LLST106:
 16126 1792 00000000 		.quad	.LVL135
 16126      00000000 
 16127 179a 00000000 		.quad	.LVL140
 16127      00000000 
 16128 17a2 0A00     		.value	0xa
 16129 17a4 03       		.byte	0x3
 16130 17a5 00000000 		.quad	.LC7
 16130      00000000 
 16131 17ad 9F       		.byte	0x9f
GAS LISTING /tmp/ccrWPnlb.s 			page 374


 16132 17ae 00000000 		.quad	0
 16132      00000000 
 16133 17b6 00000000 		.quad	0
 16133      00000000 
 16134              	.LLST107:
 16135 17be 00000000 		.quad	.LVL135
 16135      00000000 
 16136 17c6 00000000 		.quad	.LVL137-1
 16136      00000000 
 16137 17ce 0C00     		.value	0xc
 16138 17d0 F5       		.byte	0xf5
 16139 17d1 11       		.uleb128 0x11
 16140 17d2 29       		.uleb128 0x29
 16141 17d3 F4       		.byte	0xf4
 16142 17d4 29       		.uleb128 0x29
 16143 17d5 04       		.byte	0x4
 16144 17d6 00000000 		.long	0
 16145 17da 29       		.byte	0x29
 16146 17db 9F       		.byte	0x9f
 16147 17dc 00000000 		.quad	.LVL137
 16147      00000000 
 16148 17e4 00000000 		.quad	.LVL138-1
 16148      00000000 
 16149 17ec 0C00     		.value	0xc
 16150 17ee F5       		.byte	0xf5
 16151 17ef 11       		.uleb128 0x11
 16152 17f0 29       		.uleb128 0x29
 16153 17f1 F4       		.byte	0xf4
 16154 17f2 29       		.uleb128 0x29
 16155 17f3 04       		.byte	0x4
 16156 17f4 00000000 		.long	0
 16157 17f8 29       		.byte	0x29
 16158 17f9 9F       		.byte	0x9f
 16159 17fa 00000000 		.quad	0
 16159      00000000 
 16160 1802 00000000 		.quad	0
 16160      00000000 
 16161              	.LLST108:
 16162 180a 00000000 		.quad	.LVL135
 16162      00000000 
 16163 1812 00000000 		.quad	.LVL140
 16163      00000000 
 16164 181a 0A00     		.value	0xa
 16165 181c 03       		.byte	0x3
 16166 181d 00000000 		.quad	.LC13
 16166      00000000 
 16167 1825 9F       		.byte	0x9f
 16168 1826 00000000 		.quad	0
 16168      00000000 
 16169 182e 00000000 		.quad	0
 16169      00000000 
 16170              	.LLST109:
 16171 1836 00000000 		.quad	.LVL147
 16171      00000000 
 16172 183e 00000000 		.quad	.LVL148
 16172      00000000 
 16173 1846 0100     		.value	0x1
GAS LISTING /tmp/ccrWPnlb.s 			page 375


 16174 1848 50       		.byte	0x50
 16175 1849 00000000 		.quad	.LVL148
 16175      00000000 
 16176 1851 00000000 		.quad	.LVL160
 16176      00000000 
 16177 1859 0100     		.value	0x1
 16178 185b 53       		.byte	0x53
 16179 185c 00000000 		.quad	.LVL160
 16179      00000000 
 16180 1864 00000000 		.quad	.LVL161-1
 16180      00000000 
 16181 186c 0100     		.value	0x1
 16182 186e 55       		.byte	0x55
 16183 186f 00000000 		.quad	.LVL161
 16183      00000000 
 16184 1877 00000000 		.quad	.LVL164
 16184      00000000 
 16185 187f 0100     		.value	0x1
 16186 1881 53       		.byte	0x53
 16187 1882 00000000 		.quad	.LVL164
 16187      00000000 
 16188 188a 00000000 		.quad	.LVL165-1
 16188      00000000 
 16189 1892 0100     		.value	0x1
 16190 1894 55       		.byte	0x55
 16191 1895 00000000 		.quad	0
 16191      00000000 
 16192 189d 00000000 		.quad	0
 16192      00000000 
 16193              	.LLST110:
 16194 18a5 00000000 		.quad	.LVL147
 16194      00000000 
 16195 18ad 00000000 		.quad	.LVL148
 16195      00000000 
 16196 18b5 0B00     		.value	0xb
 16197 18b7 70       		.byte	0x70
 16198 18b8 08       		.sleb128 8
 16199 18b9 06       		.byte	0x6
 16200 18ba 10       		.byte	0x10
 16201 18bb 83808080 		.uleb128 0x300000003
 16201      30
 16202 18c0 29       		.byte	0x29
 16203 18c1 9F       		.byte	0x9f
 16204 18c2 00000000 		.quad	.LVL148
 16204      00000000 
 16205 18ca 00000000 		.quad	.LVL149-1
 16205      00000000 
 16206 18d2 0B00     		.value	0xb
 16207 18d4 73       		.byte	0x73
 16208 18d5 08       		.sleb128 8
 16209 18d6 06       		.byte	0x6
 16210 18d7 10       		.byte	0x10
 16211 18d8 83808080 		.uleb128 0x300000003
 16211      30
 16212 18dd 29       		.byte	0x29
 16213 18de 9F       		.byte	0x9f
 16214 18df 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 376


 16214      00000000 
 16215 18e7 00000000 		.quad	0
 16215      00000000 
 16216              	.LLST111:
 16217 18ef 00000000 		.quad	.LVL150
 16217      00000000 
 16218 18f7 00000000 		.quad	.LVL160
 16218      00000000 
 16219 18ff 0100     		.value	0x1
 16220 1901 53       		.byte	0x53
 16221 1902 00000000 		.quad	.LVL160
 16221      00000000 
 16222 190a 00000000 		.quad	.LVL161-1
 16222      00000000 
 16223 1912 0100     		.value	0x1
 16224 1914 55       		.byte	0x55
 16225 1915 00000000 		.quad	.LVL161
 16225      00000000 
 16226 191d 00000000 		.quad	.LVL164
 16226      00000000 
 16227 1925 0100     		.value	0x1
 16228 1927 53       		.byte	0x53
 16229 1928 00000000 		.quad	.LVL164
 16229      00000000 
 16230 1930 00000000 		.quad	.LVL165-1
 16230      00000000 
 16231 1938 0100     		.value	0x1
 16232 193a 55       		.byte	0x55
 16233 193b 00000000 		.quad	0
 16233      00000000 
 16234 1943 00000000 		.quad	0
 16234      00000000 
 16235              	.LLST112:
 16236 194b 00000000 		.quad	.LVL152
 16236      00000000 
 16237 1953 00000000 		.quad	.LVL161-1
 16237      00000000 
 16238 195b 0100     		.value	0x1
 16239 195d 58       		.byte	0x58
 16240 195e 00000000 		.quad	.LVL161
 16240      00000000 
 16241 1966 00000000 		.quad	.LVL163-1
 16241      00000000 
 16242 196e 0100     		.value	0x1
 16243 1970 58       		.byte	0x58
 16244 1971 00000000 		.quad	0
 16244      00000000 
 16245 1979 00000000 		.quad	0
 16245      00000000 
 16246              	.LLST113:
 16247 1981 00000000 		.quad	.LVL151
 16247      00000000 
 16248 1989 00000000 		.quad	.LVL161-1
 16248      00000000 
 16249 1991 0100     		.value	0x1
 16250 1993 54       		.byte	0x54
 16251 1994 00000000 		.quad	.LVL161
GAS LISTING /tmp/ccrWPnlb.s 			page 377


 16251      00000000 
 16252 199c 00000000 		.quad	.LVL162
 16252      00000000 
 16253 19a4 0100     		.value	0x1
 16254 19a6 54       		.byte	0x54
 16255 19a7 00000000 		.quad	.LVL162
 16255      00000000 
 16256 19af 00000000 		.quad	.LVL163-1
 16256      00000000 
 16257 19b7 0200     		.value	0x2
 16258 19b9 73       		.byte	0x73
 16259 19ba 00       		.sleb128 0
 16260 19bb 00000000 		.quad	0
 16260      00000000 
 16261 19c3 00000000 		.quad	0
 16261      00000000 
 16262              	.LLST114:
 16263 19cb 00000000 		.quad	.LVL152
 16263      00000000 
 16264 19d3 00000000 		.quad	.LVL156
 16264      00000000 
 16265 19db 0200     		.value	0x2
 16266 19dd 30       		.byte	0x30
 16267 19de 9F       		.byte	0x9f
 16268 19df 00000000 		.quad	.LVL156
 16268      00000000 
 16269 19e7 00000000 		.quad	.LVL159
 16269      00000000 
 16270 19ef 0100     		.value	0x1
 16271 19f1 51       		.byte	0x51
 16272 19f2 00000000 		.quad	0
 16272      00000000 
 16273 19fa 00000000 		.quad	0
 16273      00000000 
 16274              	.LLST115:
 16275 1a02 00000000 		.quad	.LVL153
 16275      00000000 
 16276 1a0a 00000000 		.quad	.LVL154
 16276      00000000 
 16277 1a12 1300     		.value	0x13
 16278 1a14 74       		.byte	0x74
 16279 1a15 00       		.sleb128 0
 16280 1a16 F6       		.byte	0xf6
 16281 1a17 04       		.byte	0x4
 16282 1a18 29       		.uleb128 0x29
 16283 1a19 03       		.byte	0x3
 16284 1a1a 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 16284      00000000 
 16285 1a22 F6       		.byte	0xf6
 16286 1a23 04       		.byte	0x4
 16287 1a24 29       		.uleb128 0x29
 16288 1a25 1C       		.byte	0x1c
 16289 1a26 9F       		.byte	0x9f
 16290 1a27 00000000 		.quad	.LVL154
 16290      00000000 
 16291 1a2f 00000000 		.quad	.LVL155
 16291      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 378


 16292 1a37 0100     		.value	0x1
 16293 1a39 61       		.byte	0x61
 16294 1a3a 00000000 		.quad	.LVL155
 16294      00000000 
 16295 1a42 00000000 		.quad	.LVL156
 16295      00000000 
 16296 1a4a 1300     		.value	0x13
 16297 1a4c 74       		.byte	0x74
 16298 1a4d 00       		.sleb128 0
 16299 1a4e F6       		.byte	0xf6
 16300 1a4f 04       		.byte	0x4
 16301 1a50 29       		.uleb128 0x29
 16302 1a51 03       		.byte	0x3
 16303 1a52 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 16303      00000000 
 16304 1a5a F6       		.byte	0xf6
 16305 1a5b 04       		.byte	0x4
 16306 1a5c 29       		.uleb128 0x29
 16307 1a5d 1C       		.byte	0x1c
 16308 1a5e 9F       		.byte	0x9f
 16309 1a5f 00000000 		.quad	.LVL156
 16309      00000000 
 16310 1a67 00000000 		.quad	.LVL157
 16310      00000000 
 16311 1a6f 1D00     		.value	0x1d
 16312 1a71 71       		.byte	0x71
 16313 1a72 00       		.sleb128 0
 16314 1a73 32       		.byte	0x32
 16315 1a74 24       		.byte	0x24
 16316 1a75 74       		.byte	0x74
 16317 1a76 00       		.sleb128 0
 16318 1a77 22       		.byte	0x22
 16319 1a78 F6       		.byte	0xf6
 16320 1a79 04       		.byte	0x4
 16321 1a7a 29       		.uleb128 0x29
 16322 1a7b 71       		.byte	0x71
 16323 1a7c 00       		.sleb128 0
 16324 1a7d 32       		.byte	0x32
 16325 1a7e 24       		.byte	0x24
 16326 1a7f 03       		.byte	0x3
 16327 1a80 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 16327      00000000 
 16328 1a88 22       		.byte	0x22
 16329 1a89 F6       		.byte	0xf6
 16330 1a8a 04       		.byte	0x4
 16331 1a8b 29       		.uleb128 0x29
 16332 1a8c 1C       		.byte	0x1c
 16333 1a8d 9F       		.byte	0x9f
 16334 1a8e 00000000 		.quad	.LVL157
 16334      00000000 
 16335 1a96 00000000 		.quad	.LVL159
 16335      00000000 
 16336 1a9e 1300     		.value	0x13
 16337 1aa0 74       		.byte	0x74
 16338 1aa1 00       		.sleb128 0
 16339 1aa2 F6       		.byte	0xf6
 16340 1aa3 04       		.byte	0x4
GAS LISTING /tmp/ccrWPnlb.s 			page 379


 16341 1aa4 29       		.uleb128 0x29
 16342 1aa5 03       		.byte	0x3
 16343 1aa6 00000000 		.quad	_ZZ14test_stamp_genvE8expected
 16343      00000000 
 16344 1aae F6       		.byte	0xf6
 16345 1aaf 04       		.byte	0x4
 16346 1ab0 29       		.uleb128 0x29
 16347 1ab1 1C       		.byte	0x1c
 16348 1ab2 9F       		.byte	0x9f
 16349 1ab3 00000000 		.quad	0
 16349      00000000 
 16350 1abb 00000000 		.quad	0
 16350      00000000 
 16351              	.LLST116:
 16352 1ac3 00000000 		.quad	.LVL159
 16352      00000000 
 16353 1acb 00000000 		.quad	.LVL161
 16353      00000000 
 16354 1ad3 0200     		.value	0x2
 16355 1ad5 31       		.byte	0x31
 16356 1ad6 9F       		.byte	0x9f
 16357 1ad7 00000000 		.quad	.LVL161
 16357      00000000 
 16358 1adf 00000000 		.quad	.LFE1518
 16358      00000000 
 16359 1ae7 0200     		.value	0x2
 16360 1ae9 30       		.byte	0x30
 16361 1aea 9F       		.byte	0x9f
 16362 1aeb 00000000 		.quad	0
 16362      00000000 
 16363 1af3 00000000 		.quad	0
 16363      00000000 
 16364              	.LLST117:
 16365 1afb 00000000 		.quad	.LVL168
 16365      00000000 
 16366 1b03 00000000 		.quad	.LVL169-1
 16366      00000000 
 16367 1b0b 0100     		.value	0x1
 16368 1b0d 50       		.byte	0x50
 16369 1b0e 00000000 		.quad	.LVL169-1
 16369      00000000 
 16370 1b16 00000000 		.quad	.LVL190
 16370      00000000 
 16371 1b1e 0100     		.value	0x1
 16372 1b20 5D       		.byte	0x5d
 16373 1b21 00000000 		.quad	.LVL191
 16373      00000000 
 16374 1b29 00000000 		.quad	.LFE1519
 16374      00000000 
 16375 1b31 0100     		.value	0x1
 16376 1b33 5D       		.byte	0x5d
 16377 1b34 00000000 		.quad	0
 16377      00000000 
 16378 1b3c 00000000 		.quad	0
 16378      00000000 
 16379              	.LLST118:
 16380 1b44 00000000 		.quad	.LVL170
GAS LISTING /tmp/ccrWPnlb.s 			page 380


 16380      00000000 
 16381 1b4c 00000000 		.quad	.LVL171-1
 16381      00000000 
 16382 1b54 0100     		.value	0x1
 16383 1b56 50       		.byte	0x50
 16384 1b57 00000000 		.quad	.LVL171-1
 16384      00000000 
 16385 1b5f 00000000 		.quad	.LVL189
 16385      00000000 
 16386 1b67 0100     		.value	0x1
 16387 1b69 5C       		.byte	0x5c
 16388 1b6a 00000000 		.quad	.LVL191
 16388      00000000 
 16389 1b72 00000000 		.quad	.LFE1519
 16389      00000000 
 16390 1b7a 0100     		.value	0x1
 16391 1b7c 5C       		.byte	0x5c
 16392 1b7d 00000000 		.quad	0
 16392      00000000 
 16393 1b85 00000000 		.quad	0
 16393      00000000 
 16394              	.LLST119:
 16395 1b8d 00000000 		.quad	.LVL172
 16395      00000000 
 16396 1b95 00000000 		.quad	.LVL173
 16396      00000000 
 16397 1b9d 0100     		.value	0x1
 16398 1b9f 50       		.byte	0x50
 16399 1ba0 00000000 		.quad	.LVL173
 16399      00000000 
 16400 1ba8 00000000 		.quad	.LVL188
 16400      00000000 
 16401 1bb0 0100     		.value	0x1
 16402 1bb2 56       		.byte	0x56
 16403 1bb3 00000000 		.quad	.LVL188
 16403      00000000 
 16404 1bbb 00000000 		.quad	.LVL191-1
 16404      00000000 
 16405 1bc3 0100     		.value	0x1
 16406 1bc5 55       		.byte	0x55
 16407 1bc6 00000000 		.quad	.LVL191
 16407      00000000 
 16408 1bce 00000000 		.quad	.LFE1519
 16408      00000000 
 16409 1bd6 0100     		.value	0x1
 16410 1bd8 56       		.byte	0x56
 16411 1bd9 00000000 		.quad	0
 16411      00000000 
 16412 1be1 00000000 		.quad	0
 16412      00000000 
 16413              	.LLST120:
 16414 1be9 00000000 		.quad	.LVL172
 16414      00000000 
 16415 1bf1 00000000 		.quad	.LVL174-1
 16415      00000000 
 16416 1bf9 0B00     		.value	0xb
 16417 1bfb 7D       		.byte	0x7d
GAS LISTING /tmp/ccrWPnlb.s 			page 381


 16418 1bfc 08       		.sleb128 8
 16419 1bfd 06       		.byte	0x6
 16420 1bfe 10       		.byte	0x10
 16421 1bff 83808080 		.uleb128 0x300000003
 16421      30
 16422 1c04 29       		.byte	0x29
 16423 1c05 9F       		.byte	0x9f
 16424 1c06 00000000 		.quad	0
 16424      00000000 
 16425 1c0e 00000000 		.quad	0
 16425      00000000 
 16426              	.LLST121:
 16427 1c16 00000000 		.quad	.LVL175
 16427      00000000 
 16428 1c1e 00000000 		.quad	.LVL176-1
 16428      00000000 
 16429 1c26 0B00     		.value	0xb
 16430 1c28 7C       		.byte	0x7c
 16431 1c29 08       		.sleb128 8
 16432 1c2a 06       		.byte	0x6
 16433 1c2b 10       		.byte	0x10
 16434 1c2c 83808080 		.uleb128 0x300000003
 16434      30
 16435 1c31 29       		.byte	0x29
 16436 1c32 9F       		.byte	0x9f
 16437 1c33 00000000 		.quad	0
 16437      00000000 
 16438 1c3b 00000000 		.quad	0
 16438      00000000 
 16439              	.LLST122:
 16440 1c43 00000000 		.quad	.LVL177
 16440      00000000 
 16441 1c4b 00000000 		.quad	.LVL178-1
 16441      00000000 
 16442 1c53 0B00     		.value	0xb
 16443 1c55 76       		.byte	0x76
 16444 1c56 08       		.sleb128 8
 16445 1c57 06       		.byte	0x6
 16446 1c58 10       		.byte	0x10
 16447 1c59 83808080 		.uleb128 0x300000003
 16447      30
 16448 1c5e 29       		.byte	0x29
 16449 1c5f 9F       		.byte	0x9f
 16450 1c60 00000000 		.quad	0
 16450      00000000 
 16451 1c68 00000000 		.quad	0
 16451      00000000 
 16452              	.LLST123:
 16453 1c70 00000000 		.quad	.LVL179
 16453      00000000 
 16454 1c78 00000000 		.quad	.LVL190
 16454      00000000 
 16455 1c80 0100     		.value	0x1
 16456 1c82 5D       		.byte	0x5d
 16457 1c83 00000000 		.quad	.LVL191
 16457      00000000 
 16458 1c8b 00000000 		.quad	.LFE1519
GAS LISTING /tmp/ccrWPnlb.s 			page 382


 16458      00000000 
 16459 1c93 0100     		.value	0x1
 16460 1c95 5D       		.byte	0x5d
 16461 1c96 00000000 		.quad	0
 16461      00000000 
 16462 1c9e 00000000 		.quad	0
 16462      00000000 
 16463              	.LLST124:
 16464 1ca6 00000000 		.quad	.LVL181
 16464      00000000 
 16465 1cae 00000000 		.quad	.LVL193
 16465      00000000 
 16466 1cb6 0A00     		.value	0xa
 16467 1cb8 03       		.byte	0x3
 16468 1cb9 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE4ones
 16468      00000000 
 16469 1cc1 9F       		.byte	0x9f
 16470 1cc2 00000000 		.quad	0
 16470      00000000 
 16471 1cca 00000000 		.quad	0
 16471      00000000 
 16472              	.LLST125:
 16473 1cd2 00000000 		.quad	.LVL181
 16473      00000000 
 16474 1cda 00000000 		.quad	.LVL189
 16474      00000000 
 16475 1ce2 0100     		.value	0x1
 16476 1ce4 5C       		.byte	0x5c
 16477 1ce5 00000000 		.quad	.LVL191
 16477      00000000 
 16478 1ced 00000000 		.quad	.LVL193
 16478      00000000 
 16479 1cf5 0100     		.value	0x1
 16480 1cf7 5C       		.byte	0x5c
 16481 1cf8 00000000 		.quad	0
 16481      00000000 
 16482 1d00 00000000 		.quad	0
 16482      00000000 
 16483              	.LLST126:
 16484 1d08 00000000 		.quad	.LVL182
 16484      00000000 
 16485 1d10 00000000 		.quad	.LVL193
 16485      00000000 
 16486 1d18 0300     		.value	0x3
 16487 1d1a 08       		.byte	0x8
 16488 1d1b FF       		.byte	0xff
 16489 1d1c 9F       		.byte	0x9f
 16490 1d1d 00000000 		.quad	0
 16490      00000000 
 16491 1d25 00000000 		.quad	0
 16491      00000000 
 16492              	.LLST127:
 16493 1d2d 00000000 		.quad	.LVL182
 16493      00000000 
 16494 1d35 00000000 		.quad	.LVL193
 16494      00000000 
 16495 1d3d 0A00     		.value	0xa
GAS LISTING /tmp/ccrWPnlb.s 			page 383


 16496 1d3f 03       		.byte	0x3
 16497 1d40 00000000 		.quad	.LC7
 16497      00000000 
 16498 1d48 9F       		.byte	0x9f
 16499 1d49 00000000 		.quad	0
 16499      00000000 
 16500 1d51 00000000 		.quad	0
 16500      00000000 
 16501              	.LLST128:
 16502 1d59 00000000 		.quad	.LVL182
 16502      00000000 
 16503 1d61 00000000 		.quad	.LVL193
 16503      00000000 
 16504 1d69 0A00     		.value	0xa
 16505 1d6b 03       		.byte	0x3
 16506 1d6c 00000000 		.quad	.LC43
 16506      00000000 
 16507 1d74 9F       		.byte	0x9f
 16508 1d75 00000000 		.quad	0
 16508      00000000 
 16509 1d7d 00000000 		.quad	0
 16509      00000000 
 16510              	.LLST129:
 16511 1d85 00000000 		.quad	.LVL183
 16511      00000000 
 16512 1d8d 00000000 		.quad	.LVL191
 16512      00000000 
 16513 1d95 0A00     		.value	0xa
 16514 1d97 03       		.byte	0x3
 16515 1d98 00000000 		.quad	_ZZ24test_stamp_gen_nonlinearvE5zeros
 16515      00000000 
 16516 1da0 9F       		.byte	0x9f
 16517 1da1 00000000 		.quad	0
 16517      00000000 
 16518 1da9 00000000 		.quad	0
 16518      00000000 
 16519              	.LLST130:
 16520 1db1 00000000 		.quad	.LVL183
 16520      00000000 
 16521 1db9 00000000 		.quad	.LVL188
 16521      00000000 
 16522 1dc1 0100     		.value	0x1
 16523 1dc3 56       		.byte	0x56
 16524 1dc4 00000000 		.quad	.LVL188
 16524      00000000 
 16525 1dcc 00000000 		.quad	.LVL191-1
 16525      00000000 
 16526 1dd4 0100     		.value	0x1
 16527 1dd6 55       		.byte	0x55
 16528 1dd7 00000000 		.quad	0
 16528      00000000 
 16529 1ddf 00000000 		.quad	0
 16529      00000000 
 16530              	.LLST131:
 16531 1de7 00000000 		.quad	.LVL184
 16531      00000000 
 16532 1def 00000000 		.quad	.LVL191
GAS LISTING /tmp/ccrWPnlb.s 			page 384


 16532      00000000 
 16533 1df7 0400     		.value	0x4
 16534 1df9 0A       		.byte	0xa
 16535 1dfa 0001     		.value	0x100
 16536 1dfc 9F       		.byte	0x9f
 16537 1dfd 00000000 		.quad	0
 16537      00000000 
 16538 1e05 00000000 		.quad	0
 16538      00000000 
 16539              	.LLST132:
 16540 1e0d 00000000 		.quad	.LVL184
 16540      00000000 
 16541 1e15 00000000 		.quad	.LVL191
 16541      00000000 
 16542 1e1d 0A00     		.value	0xa
 16543 1e1f 03       		.byte	0x3
 16544 1e20 00000000 		.quad	.LC7
 16544      00000000 
 16545 1e28 9F       		.byte	0x9f
 16546 1e29 00000000 		.quad	0
 16546      00000000 
 16547 1e31 00000000 		.quad	0
 16547      00000000 
 16548              	.LLST133:
 16549 1e39 00000000 		.quad	.LVL184
 16549      00000000 
 16550 1e41 00000000 		.quad	.LVL191
 16550      00000000 
 16551 1e49 0A00     		.value	0xa
 16552 1e4b 03       		.byte	0x3
 16553 1e4c 00000000 		.quad	.LC44
 16553      00000000 
 16554 1e54 9F       		.byte	0x9f
 16555 1e55 00000000 		.quad	0
 16555      00000000 
 16556 1e5d 00000000 		.quad	0
 16556      00000000 
 16557              	.LLST134:
 16558 1e65 00000000 		.quad	.LVL196
 16558      00000000 
 16559 1e6d 00000000 		.quad	.LVL197
 16559      00000000 
 16560 1e75 0100     		.value	0x1
 16561 1e77 50       		.byte	0x50
 16562 1e78 00000000 		.quad	.LVL197
 16562      00000000 
 16563 1e80 00000000 		.quad	.LVL202
 16563      00000000 
 16564 1e88 0100     		.value	0x1
 16565 1e8a 53       		.byte	0x53
 16566 1e8b 00000000 		.quad	0
 16566      00000000 
 16567 1e93 00000000 		.quad	0
 16567      00000000 
 16568              	.LLST135:
 16569 1e9b 00000000 		.quad	.LVL199
 16569      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 385


 16570 1ea3 00000000 		.quad	.LVL200-1
 16570      00000000 
 16571 1eab 0800     		.value	0x8
 16572 1ead 70       		.byte	0x70
 16573 1eae 00       		.sleb128 0
 16574 1eaf 08       		.byte	0x8
 16575 1eb0 20       		.byte	0x20
 16576 1eb1 24       		.byte	0x24
 16577 1eb2 30       		.byte	0x30
 16578 1eb3 29       		.byte	0x29
 16579 1eb4 9F       		.byte	0x9f
 16580 1eb5 00000000 		.quad	0
 16580      00000000 
 16581 1ebd 00000000 		.quad	0
 16581      00000000 
 16582              	.LLST136:
 16583 1ec5 00000000 		.quad	.LVL204
 16583      00000000 
 16584 1ecd 00000000 		.quad	.LVL205-1
 16584      00000000 
 16585 1ed5 0100     		.value	0x1
 16586 1ed7 50       		.byte	0x50
 16587 1ed8 00000000 		.quad	.LVL205-1
 16587      00000000 
 16588 1ee0 00000000 		.quad	.LVL211
 16588      00000000 
 16589 1ee8 0100     		.value	0x1
 16590 1eea 53       		.byte	0x53
 16591 1eeb 00000000 		.quad	0
 16591      00000000 
 16592 1ef3 00000000 		.quad	0
 16592      00000000 
 16593              	.LLST137:
 16594 1efb 00000000 		.quad	.LVL207
 16594      00000000 
 16595 1f03 00000000 		.quad	.LVL208-1
 16595      00000000 
 16596 1f0b 0100     		.value	0x1
 16597 1f0d 50       		.byte	0x50
 16598 1f0e 00000000 		.quad	.LVL208-1
 16598      00000000 
 16599 1f16 00000000 		.quad	.LVL212
 16599      00000000 
 16600 1f1e 0100     		.value	0x1
 16601 1f20 56       		.byte	0x56
 16602 1f21 00000000 		.quad	.LVL212
 16602      00000000 
 16603 1f29 00000000 		.quad	.LVL213-1
 16603      00000000 
 16604 1f31 0100     		.value	0x1
 16605 1f33 55       		.byte	0x55
 16606 1f34 00000000 		.quad	0
 16606      00000000 
 16607 1f3c 00000000 		.quad	0
 16607      00000000 
 16608              	.LLST138:
 16609 1f44 00000000 		.quad	.LVL208
GAS LISTING /tmp/ccrWPnlb.s 			page 386


 16609      00000000 
 16610 1f4c 00000000 		.quad	.LVL209-1
 16610      00000000 
 16611 1f54 0800     		.value	0x8
 16612 1f56 70       		.byte	0x70
 16613 1f57 00       		.sleb128 0
 16614 1f58 08       		.byte	0x8
 16615 1f59 20       		.byte	0x20
 16616 1f5a 24       		.byte	0x24
 16617 1f5b 30       		.byte	0x30
 16618 1f5c 29       		.byte	0x29
 16619 1f5d 9F       		.byte	0x9f
 16620 1f5e 00000000 		.quad	0
 16620      00000000 
 16621 1f66 00000000 		.quad	0
 16621      00000000 
 16622              	.LLST139:
 16623 1f6e 00000000 		.quad	.LVL215
 16623      00000000 
 16624 1f76 00000000 		.quad	.LVL216-1
 16624      00000000 
 16625 1f7e 0100     		.value	0x1
 16626 1f80 50       		.byte	0x50
 16627 1f81 00000000 		.quad	.LVL216-1
 16627      00000000 
 16628 1f89 00000000 		.quad	.LVL225
 16628      00000000 
 16629 1f91 0100     		.value	0x1
 16630 1f93 53       		.byte	0x53
 16631 1f94 00000000 		.quad	.LVL226
 16631      00000000 
 16632 1f9c 00000000 		.quad	.LFE1531
 16632      00000000 
 16633 1fa4 0100     		.value	0x1
 16634 1fa6 53       		.byte	0x53
 16635 1fa7 00000000 		.quad	0
 16635      00000000 
 16636 1faf 00000000 		.quad	0
 16636      00000000 
 16637              	.LLST140:
 16638 1fb7 00000000 		.quad	.LVL218
 16638      00000000 
 16639 1fbf 00000000 		.quad	.LVL219
 16639      00000000 
 16640 1fc7 0800     		.value	0x8
 16641 1fc9 70       		.byte	0x70
 16642 1fca 00       		.sleb128 0
 16643 1fcb 08       		.byte	0x8
 16644 1fcc 20       		.byte	0x20
 16645 1fcd 24       		.byte	0x24
 16646 1fce 30       		.byte	0x30
 16647 1fcf 29       		.byte	0x29
 16648 1fd0 9F       		.byte	0x9f
 16649 1fd1 00000000 		.quad	.LVL226
 16649      00000000 
 16650 1fd9 00000000 		.quad	.LVL227-1
 16650      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 387


 16651 1fe1 0800     		.value	0x8
 16652 1fe3 70       		.byte	0x70
 16653 1fe4 00       		.sleb128 0
 16654 1fe5 08       		.byte	0x8
 16655 1fe6 20       		.byte	0x20
 16656 1fe7 24       		.byte	0x24
 16657 1fe8 30       		.byte	0x30
 16658 1fe9 29       		.byte	0x29
 16659 1fea 9F       		.byte	0x9f
 16660 1feb 00000000 		.quad	0
 16660      00000000 
 16661 1ff3 00000000 		.quad	0
 16661      00000000 
 16662              	.LLST141:
 16663 1ffb 00000000 		.quad	.LVL222
 16663      00000000 
 16664 2003 00000000 		.quad	.LVL226
 16664      00000000 
 16665 200b 0400     		.value	0x4
 16666 200d 0A       		.byte	0xa
 16667 200e 3E01     		.value	0x13e
 16668 2010 9F       		.byte	0x9f
 16669 2011 00000000 		.quad	0
 16669      00000000 
 16670 2019 00000000 		.quad	0
 16670      00000000 
 16671              	.LLST142:
 16672 2021 00000000 		.quad	.LVL222
 16672      00000000 
 16673 2029 00000000 		.quad	.LVL226
 16673      00000000 
 16674 2031 0A00     		.value	0xa
 16675 2033 03       		.byte	0x3
 16676 2034 00000000 		.quad	.LC7
 16676      00000000 
 16677 203c 9F       		.byte	0x9f
 16678 203d 00000000 		.quad	0
 16678      00000000 
 16679 2045 00000000 		.quad	0
 16679      00000000 
 16680              	.LLST143:
 16681 204d 00000000 		.quad	.LVL222
 16681      00000000 
 16682 2055 00000000 		.quad	.LVL223-1
 16682      00000000 
 16683 205d 0800     		.value	0x8
 16684 205f 70       		.byte	0x70
 16685 2060 00       		.sleb128 0
 16686 2061 08       		.byte	0x8
 16687 2062 20       		.byte	0x20
 16688 2063 24       		.byte	0x24
 16689 2064 30       		.byte	0x30
 16690 2065 29       		.byte	0x29
 16691 2066 9F       		.byte	0x9f
 16692 2067 00000000 		.quad	0
 16692      00000000 
 16693 206f 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 388


 16693      00000000 
 16694              	.LLST144:
 16695 2077 00000000 		.quad	.LVL222
 16695      00000000 
 16696 207f 00000000 		.quad	.LVL226
 16696      00000000 
 16697 2087 0A00     		.value	0xa
 16698 2089 03       		.byte	0x3
 16699 208a 00000000 		.quad	.LC50
 16699      00000000 
 16700 2092 9F       		.byte	0x9f
 16701 2093 00000000 		.quad	0
 16701      00000000 
 16702 209b 00000000 		.quad	0
 16702      00000000 
 16703              	.LLST145:
 16704 20a3 00000000 		.quad	.LVL229
 16704      00000000 
 16705 20ab 00000000 		.quad	.LVL230-1
 16705      00000000 
 16706 20b3 0100     		.value	0x1
 16707 20b5 50       		.byte	0x50
 16708 20b6 00000000 		.quad	.LVL230-1
 16708      00000000 
 16709 20be 00000000 		.quad	.LVL240
 16709      00000000 
 16710 20c6 0100     		.value	0x1
 16711 20c8 53       		.byte	0x53
 16712 20c9 00000000 		.quad	.LVL241
 16712      00000000 
 16713 20d1 00000000 		.quad	.LFE1532
 16713      00000000 
 16714 20d9 0100     		.value	0x1
 16715 20db 53       		.byte	0x53
 16716 20dc 00000000 		.quad	0
 16716      00000000 
 16717 20e4 00000000 		.quad	0
 16717      00000000 
 16718              	.LLST146:
 16719 20ec 00000000 		.quad	.LVL234
 16719      00000000 
 16720 20f4 00000000 		.quad	.LVL235
 16720      00000000 
 16721 20fc 0800     		.value	0x8
 16722 20fe 70       		.byte	0x70
 16723 20ff 00       		.sleb128 0
 16724 2100 08       		.byte	0x8
 16725 2101 20       		.byte	0x20
 16726 2102 24       		.byte	0x24
 16727 2103 30       		.byte	0x30
 16728 2104 29       		.byte	0x29
 16729 2105 9F       		.byte	0x9f
 16730 2106 00000000 		.quad	.LVL241
 16730      00000000 
 16731 210e 00000000 		.quad	.LVL242-1
 16731      00000000 
 16732 2116 0800     		.value	0x8
GAS LISTING /tmp/ccrWPnlb.s 			page 389


 16733 2118 70       		.byte	0x70
 16734 2119 00       		.sleb128 0
 16735 211a 08       		.byte	0x8
 16736 211b 20       		.byte	0x20
 16737 211c 24       		.byte	0x24
 16738 211d 30       		.byte	0x30
 16739 211e 29       		.byte	0x29
 16740 211f 9F       		.byte	0x9f
 16741 2120 00000000 		.quad	0
 16741      00000000 
 16742 2128 00000000 		.quad	0
 16742      00000000 
 16743              	.LLST147:
 16744 2130 00000000 		.quad	.LVL237
 16744      00000000 
 16745 2138 00000000 		.quad	.LVL241
 16745      00000000 
 16746 2140 0400     		.value	0x4
 16747 2142 0A       		.byte	0xa
 16748 2143 5C01     		.value	0x15c
 16749 2145 9F       		.byte	0x9f
 16750 2146 00000000 		.quad	0
 16750      00000000 
 16751 214e 00000000 		.quad	0
 16751      00000000 
 16752              	.LLST148:
 16753 2156 00000000 		.quad	.LVL237
 16753      00000000 
 16754 215e 00000000 		.quad	.LVL241
 16754      00000000 
 16755 2166 0A00     		.value	0xa
 16756 2168 03       		.byte	0x3
 16757 2169 00000000 		.quad	.LC7
 16757      00000000 
 16758 2171 9F       		.byte	0x9f
 16759 2172 00000000 		.quad	0
 16759      00000000 
 16760 217a 00000000 		.quad	0
 16760      00000000 
 16761              	.LLST149:
 16762 2182 00000000 		.quad	.LVL237
 16762      00000000 
 16763 218a 00000000 		.quad	.LVL238-1
 16763      00000000 
 16764 2192 0800     		.value	0x8
 16765 2194 70       		.byte	0x70
 16766 2195 00       		.sleb128 0
 16767 2196 08       		.byte	0x8
 16768 2197 20       		.byte	0x20
 16769 2198 24       		.byte	0x24
 16770 2199 30       		.byte	0x30
 16771 219a 29       		.byte	0x29
 16772 219b 9F       		.byte	0x9f
 16773 219c 00000000 		.quad	0
 16773      00000000 
 16774 21a4 00000000 		.quad	0
 16774      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 390


 16775              	.LLST150:
 16776 21ac 00000000 		.quad	.LVL237
 16776      00000000 
 16777 21b4 00000000 		.quad	.LVL241
 16777      00000000 
 16778 21bc 0A00     		.value	0xa
 16779 21be 03       		.byte	0x3
 16780 21bf 00000000 		.quad	.LC53
 16780      00000000 
 16781 21c7 9F       		.byte	0x9f
 16782 21c8 00000000 		.quad	0
 16782      00000000 
 16783 21d0 00000000 		.quad	0
 16783      00000000 
 16784              	.LLST151:
 16785 21d8 00000000 		.quad	.LVL254
 16785      00000000 
 16786 21e0 00000000 		.quad	.LVL257
 16786      00000000 
 16787 21e8 0100     		.value	0x1
 16788 21ea 53       		.byte	0x53
 16789 21eb 00000000 		.quad	0
 16789      00000000 
 16790 21f3 00000000 		.quad	0
 16790      00000000 
 16791              	.LLST152:
 16792 21fb 00000000 		.quad	.LVL254
 16792      00000000 
 16793 2203 00000000 		.quad	.LVL255-1
 16793      00000000 
 16794 220b 0100     		.value	0x1
 16795 220d 50       		.byte	0x50
 16796 220e 00000000 		.quad	0
 16796      00000000 
 16797 2216 00000000 		.quad	0
 16797      00000000 
 16798              	.LLST153:
 16799 221e 00000000 		.quad	.LVL256
 16799      00000000 
 16800 2226 00000000 		.quad	.LVL257-1
 16800      00000000 
 16801 222e 0100     		.value	0x1
 16802 2230 50       		.byte	0x50
 16803 2231 00000000 		.quad	0
 16803      00000000 
 16804 2239 00000000 		.quad	0
 16804      00000000 
 16805              	.LLST154:
 16806 2241 00000000 		.quad	.LVL258
 16806      00000000 
 16807 2249 00000000 		.quad	.LVL259-1
 16807      00000000 
 16808 2251 0100     		.value	0x1
 16809 2253 50       		.byte	0x50
 16810 2254 00000000 		.quad	0
 16810      00000000 
 16811 225c 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 391


 16811      00000000 
 16812              	.LLST155:
 16813 2264 00000000 		.quad	.LVL260
 16813      00000000 
 16814 226c 00000000 		.quad	.LVL261-1
 16814      00000000 
 16815 2274 0100     		.value	0x1
 16816 2276 50       		.byte	0x50
 16817 2277 00000000 		.quad	0
 16817      00000000 
 16818 227f 00000000 		.quad	0
 16818      00000000 
 16819              	.LLST156:
 16820 2287 00000000 		.quad	.LVL262
 16820      00000000 
 16821 228f 00000000 		.quad	.LVL263-1
 16821      00000000 
 16822 2297 0100     		.value	0x1
 16823 2299 50       		.byte	0x50
 16824 229a 00000000 		.quad	0
 16824      00000000 
 16825 22a2 00000000 		.quad	0
 16825      00000000 
 16826              		.section	.debug_aranges,"",@progbits
 16827 0000 5C000000 		.long	0x5c
 16828 0004 0200     		.value	0x2
 16829 0006 00000000 		.long	.Ldebug_info0
 16830 000a 08       		.byte	0x8
 16831 000b 00       		.byte	0
 16832 000c 0000     		.value	0
 16833 000e 0000     		.value	0
 16834 0010 00000000 		.quad	.Ltext0
 16834      00000000 
 16835 0018 730F0000 		.quad	.Letext0-.Ltext0
 16835      00000000 
 16836 0020 00000000 		.quad	.LFB1045
 16836      00000000 
 16837 0028 03000000 		.quad	.LFE1045-.LFB1045
 16837      00000000 
 16838 0030 00000000 		.quad	.LFB1533
 16838      00000000 
 16839 0038 E3000000 		.quad	.LFE1533-.LFB1533
 16839      00000000 
 16840 0040 00000000 		.quad	.LFB1690
 16840      00000000 
 16841 0048 2E000000 		.quad	.LFE1690-.LFB1690
 16841      00000000 
 16842 0050 00000000 		.quad	0
 16842      00000000 
 16843 0058 00000000 		.quad	0
 16843      00000000 
 16844              		.section	.debug_ranges,"",@progbits
 16845              	.Ldebug_ranges0:
 16846 0000 00000000 		.quad	.LBB275
 16846      00000000 
 16847 0008 00000000 		.quad	.LBE275
 16847      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 392


 16848 0010 00000000 		.quad	.LBB278
 16848      00000000 
 16849 0018 00000000 		.quad	.LBE278
 16849      00000000 
 16850 0020 00000000 		.quad	0
 16850      00000000 
 16851 0028 00000000 		.quad	0
 16851      00000000 
 16852 0030 00000000 		.quad	.LBB281
 16852      00000000 
 16853 0038 00000000 		.quad	.LBE281
 16853      00000000 
 16854 0040 00000000 		.quad	.LBB284
 16854      00000000 
 16855 0048 00000000 		.quad	.LBE284
 16855      00000000 
 16856 0050 00000000 		.quad	0
 16856      00000000 
 16857 0058 00000000 		.quad	0
 16857      00000000 
 16858 0060 00000000 		.quad	.LBB285
 16858      00000000 
 16859 0068 00000000 		.quad	.LBE285
 16859      00000000 
 16860 0070 00000000 		.quad	.LBB322
 16860      00000000 
 16861 0078 00000000 		.quad	.LBE322
 16861      00000000 
 16862 0080 00000000 		.quad	0
 16862      00000000 
 16863 0088 00000000 		.quad	0
 16863      00000000 
 16864 0090 00000000 		.quad	.LBB296
 16864      00000000 
 16865 0098 00000000 		.quad	.LBE296
 16865      00000000 
 16866 00a0 00000000 		.quad	.LBB321
 16866      00000000 
 16867 00a8 00000000 		.quad	.LBE321
 16867      00000000 
 16868 00b0 00000000 		.quad	.LBB323
 16868      00000000 
 16869 00b8 00000000 		.quad	.LBE323
 16869      00000000 
 16870 00c0 00000000 		.quad	0
 16870      00000000 
 16871 00c8 00000000 		.quad	0
 16871      00000000 
 16872 00d0 00000000 		.quad	.LBB299
 16872      00000000 
 16873 00d8 00000000 		.quad	.LBE299
 16873      00000000 
 16874 00e0 00000000 		.quad	.LBB315
 16874      00000000 
 16875 00e8 00000000 		.quad	.LBE315
 16875      00000000 
 16876 00f0 00000000 		.quad	.LBB316
GAS LISTING /tmp/ccrWPnlb.s 			page 393


 16876      00000000 
 16877 00f8 00000000 		.quad	.LBE316
 16877      00000000 
 16878 0100 00000000 		.quad	0
 16878      00000000 
 16879 0108 00000000 		.quad	0
 16879      00000000 
 16880 0110 00000000 		.quad	.LBB301
 16880      00000000 
 16881 0118 00000000 		.quad	.LBE301
 16881      00000000 
 16882 0120 00000000 		.quad	.LBB310
 16882      00000000 
 16883 0128 00000000 		.quad	.LBE310
 16883      00000000 
 16884 0130 00000000 		.quad	0
 16884      00000000 
 16885 0138 00000000 		.quad	0
 16885      00000000 
 16886 0140 00000000 		.quad	.LBB304
 16886      00000000 
 16887 0148 00000000 		.quad	.LBE304
 16887      00000000 
 16888 0150 00000000 		.quad	.LBB309
 16888      00000000 
 16889 0158 00000000 		.quad	.LBE309
 16889      00000000 
 16890 0160 00000000 		.quad	0
 16890      00000000 
 16891 0168 00000000 		.quad	0
 16891      00000000 
 16892 0170 00000000 		.quad	.LBB324
 16892      00000000 
 16893 0178 00000000 		.quad	.LBE324
 16893      00000000 
 16894 0180 00000000 		.quad	.LBB335
 16894      00000000 
 16895 0188 00000000 		.quad	.LBE335
 16895      00000000 
 16896 0190 00000000 		.quad	.LBB336
 16896      00000000 
 16897 0198 00000000 		.quad	.LBE336
 16897      00000000 
 16898 01a0 00000000 		.quad	0
 16898      00000000 
 16899 01a8 00000000 		.quad	0
 16899      00000000 
 16900 01b0 00000000 		.quad	.LBB327
 16900      00000000 
 16901 01b8 00000000 		.quad	.LBE327
 16901      00000000 
 16902 01c0 00000000 		.quad	.LBB334
 16902      00000000 
 16903 01c8 00000000 		.quad	.LBE334
 16903      00000000 
 16904 01d0 00000000 		.quad	0
 16904      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 394


 16905 01d8 00000000 		.quad	0
 16905      00000000 
 16906 01e0 00000000 		.quad	.LBB330
 16906      00000000 
 16907 01e8 00000000 		.quad	.LBE330
 16907      00000000 
 16908 01f0 00000000 		.quad	.LBB333
 16908      00000000 
 16909 01f8 00000000 		.quad	.LBE333
 16909      00000000 
 16910 0200 00000000 		.quad	0
 16910      00000000 
 16911 0208 00000000 		.quad	0
 16911      00000000 
 16912 0210 00000000 		.quad	.LBB337
 16912      00000000 
 16913 0218 00000000 		.quad	.LBE337
 16913      00000000 
 16914 0220 00000000 		.quad	.LBB366
 16914      00000000 
 16915 0228 00000000 		.quad	.LBE366
 16915      00000000 
 16916 0230 00000000 		.quad	.LBB367
 16916      00000000 
 16917 0238 00000000 		.quad	.LBE367
 16917      00000000 
 16918 0240 00000000 		.quad	.LBB368
 16918      00000000 
 16919 0248 00000000 		.quad	.LBE368
 16919      00000000 
 16920 0250 00000000 		.quad	0
 16920      00000000 
 16921 0258 00000000 		.quad	0
 16921      00000000 
 16922 0260 00000000 		.quad	.LBB340
 16922      00000000 
 16923 0268 00000000 		.quad	.LBE340
 16923      00000000 
 16924 0270 00000000 		.quad	.LBB360
 16924      00000000 
 16925 0278 00000000 		.quad	.LBE360
 16925      00000000 
 16926 0280 00000000 		.quad	0
 16926      00000000 
 16927 0288 00000000 		.quad	0
 16927      00000000 
 16928 0290 00000000 		.quad	.LBB343
 16928      00000000 
 16929 0298 00000000 		.quad	.LBE343
 16929      00000000 
 16930 02a0 00000000 		.quad	.LBB363
 16930      00000000 
 16931 02a8 00000000 		.quad	.LBE363
 16931      00000000 
 16932 02b0 00000000 		.quad	0
 16932      00000000 
 16933 02b8 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 395


 16933      00000000 
 16934 02c0 00000000 		.quad	.LBB348
 16934      00000000 
 16935 02c8 00000000 		.quad	.LBE348
 16935      00000000 
 16936 02d0 00000000 		.quad	.LBB362
 16936      00000000 
 16937 02d8 00000000 		.quad	.LBE362
 16937      00000000 
 16938 02e0 00000000 		.quad	0
 16938      00000000 
 16939 02e8 00000000 		.quad	0
 16939      00000000 
 16940 02f0 00000000 		.quad	.LBB351
 16940      00000000 
 16941 02f8 00000000 		.quad	.LBE351
 16941      00000000 
 16942 0300 00000000 		.quad	.LBB361
 16942      00000000 
 16943 0308 00000000 		.quad	.LBE361
 16943      00000000 
 16944 0310 00000000 		.quad	0
 16944      00000000 
 16945 0318 00000000 		.quad	0
 16945      00000000 
 16946 0320 00000000 		.quad	.LBB354
 16946      00000000 
 16947 0328 00000000 		.quad	.LBE354
 16947      00000000 
 16948 0330 00000000 		.quad	.LBB364
 16948      00000000 
 16949 0338 00000000 		.quad	.LBE364
 16949      00000000 
 16950 0340 00000000 		.quad	0
 16950      00000000 
 16951 0348 00000000 		.quad	0
 16951      00000000 
 16952 0350 00000000 		.quad	.LBB357
 16952      00000000 
 16953 0358 00000000 		.quad	.LBE357
 16953      00000000 
 16954 0360 00000000 		.quad	.LBB365
 16954      00000000 
 16955 0368 00000000 		.quad	.LBE365
 16955      00000000 
 16956 0370 00000000 		.quad	0
 16956      00000000 
 16957 0378 00000000 		.quad	0
 16957      00000000 
 16958 0380 00000000 		.quad	.LBB369
 16958      00000000 
 16959 0388 00000000 		.quad	.LBE369
 16959      00000000 
 16960 0390 00000000 		.quad	.LBB388
 16960      00000000 
 16961 0398 00000000 		.quad	.LBE388
 16961      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 396


 16962 03a0 00000000 		.quad	.LBB389
 16962      00000000 
 16963 03a8 00000000 		.quad	.LBE389
 16963      00000000 
 16964 03b0 00000000 		.quad	.LBB390
 16964      00000000 
 16965 03b8 00000000 		.quad	.LBE390
 16965      00000000 
 16966 03c0 00000000 		.quad	0
 16966      00000000 
 16967 03c8 00000000 		.quad	0
 16967      00000000 
 16968 03d0 00000000 		.quad	.LBB372
 16968      00000000 
 16969 03d8 00000000 		.quad	.LBE372
 16969      00000000 
 16970 03e0 00000000 		.quad	.LBB384
 16970      00000000 
 16971 03e8 00000000 		.quad	.LBE384
 16971      00000000 
 16972 03f0 00000000 		.quad	0
 16972      00000000 
 16973 03f8 00000000 		.quad	0
 16973      00000000 
 16974 0400 00000000 		.quad	.LBB375
 16974      00000000 
 16975 0408 00000000 		.quad	.LBE375
 16975      00000000 
 16976 0410 00000000 		.quad	.LBB385
 16976      00000000 
 16977 0418 00000000 		.quad	.LBE385
 16977      00000000 
 16978 0420 00000000 		.quad	0
 16978      00000000 
 16979 0428 00000000 		.quad	0
 16979      00000000 
 16980 0430 00000000 		.quad	.LBB378
 16980      00000000 
 16981 0438 00000000 		.quad	.LBE378
 16981      00000000 
 16982 0440 00000000 		.quad	.LBB386
 16982      00000000 
 16983 0448 00000000 		.quad	.LBE386
 16983      00000000 
 16984 0450 00000000 		.quad	0
 16984      00000000 
 16985 0458 00000000 		.quad	0
 16985      00000000 
 16986 0460 00000000 		.quad	.LBB381
 16986      00000000 
 16987 0468 00000000 		.quad	.LBE381
 16987      00000000 
 16988 0470 00000000 		.quad	.LBB387
 16988      00000000 
 16989 0478 00000000 		.quad	.LBE387
 16989      00000000 
 16990 0480 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 397


 16990      00000000 
 16991 0488 00000000 		.quad	0
 16991      00000000 
 16992 0490 00000000 		.quad	.LBB391
 16992      00000000 
 16993 0498 00000000 		.quad	.LBE391
 16993      00000000 
 16994 04a0 00000000 		.quad	.LBB410
 16994      00000000 
 16995 04a8 00000000 		.quad	.LBE410
 16995      00000000 
 16996 04b0 00000000 		.quad	.LBB411
 16996      00000000 
 16997 04b8 00000000 		.quad	.LBE411
 16997      00000000 
 16998 04c0 00000000 		.quad	.LBB412
 16998      00000000 
 16999 04c8 00000000 		.quad	.LBE412
 16999      00000000 
 17000 04d0 00000000 		.quad	0
 17000      00000000 
 17001 04d8 00000000 		.quad	0
 17001      00000000 
 17002 04e0 00000000 		.quad	.LBB394
 17002      00000000 
 17003 04e8 00000000 		.quad	.LBE394
 17003      00000000 
 17004 04f0 00000000 		.quad	.LBB406
 17004      00000000 
 17005 04f8 00000000 		.quad	.LBE406
 17005      00000000 
 17006 0500 00000000 		.quad	0
 17006      00000000 
 17007 0508 00000000 		.quad	0
 17007      00000000 
 17008 0510 00000000 		.quad	.LBB397
 17008      00000000 
 17009 0518 00000000 		.quad	.LBE397
 17009      00000000 
 17010 0520 00000000 		.quad	.LBB407
 17010      00000000 
 17011 0528 00000000 		.quad	.LBE407
 17011      00000000 
 17012 0530 00000000 		.quad	0
 17012      00000000 
 17013 0538 00000000 		.quad	0
 17013      00000000 
 17014 0540 00000000 		.quad	.LBB400
 17014      00000000 
 17015 0548 00000000 		.quad	.LBE400
 17015      00000000 
 17016 0550 00000000 		.quad	.LBB408
 17016      00000000 
 17017 0558 00000000 		.quad	.LBE408
 17017      00000000 
 17018 0560 00000000 		.quad	0
 17018      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 398


 17019 0568 00000000 		.quad	0
 17019      00000000 
 17020 0570 00000000 		.quad	.LBB403
 17020      00000000 
 17021 0578 00000000 		.quad	.LBE403
 17021      00000000 
 17022 0580 00000000 		.quad	.LBB409
 17022      00000000 
 17023 0588 00000000 		.quad	.LBE409
 17023      00000000 
 17024 0590 00000000 		.quad	0
 17024      00000000 
 17025 0598 00000000 		.quad	0
 17025      00000000 
 17026 05a0 00000000 		.quad	.LBB413
 17026      00000000 
 17027 05a8 00000000 		.quad	.LBE413
 17027      00000000 
 17028 05b0 00000000 		.quad	.LBB438
 17028      00000000 
 17029 05b8 00000000 		.quad	.LBE438
 17029      00000000 
 17030 05c0 00000000 		.quad	.LBB439
 17030      00000000 
 17031 05c8 00000000 		.quad	.LBE439
 17031      00000000 
 17032 05d0 00000000 		.quad	0
 17032      00000000 
 17033 05d8 00000000 		.quad	0
 17033      00000000 
 17034 05e0 00000000 		.quad	.LBB416
 17034      00000000 
 17035 05e8 00000000 		.quad	.LBE416
 17035      00000000 
 17036 05f0 00000000 		.quad	.LBB437
 17036      00000000 
 17037 05f8 00000000 		.quad	.LBE437
 17037      00000000 
 17038 0600 00000000 		.quad	0
 17038      00000000 
 17039 0608 00000000 		.quad	0
 17039      00000000 
 17040 0610 00000000 		.quad	.LBB419
 17040      00000000 
 17041 0618 00000000 		.quad	.LBE419
 17041      00000000 
 17042 0620 00000000 		.quad	.LBB423
 17042      00000000 
 17043 0628 00000000 		.quad	.LBE423
 17043      00000000 
 17044 0630 00000000 		.quad	.LBB436
 17044      00000000 
 17045 0638 00000000 		.quad	.LBE436
 17045      00000000 
 17046 0640 00000000 		.quad	0
 17046      00000000 
 17047 0648 00000000 		.quad	0
GAS LISTING /tmp/ccrWPnlb.s 			page 399


 17047      00000000 
 17048 0650 00000000 		.quad	.LBB426
 17048      00000000 
 17049 0658 00000000 		.quad	.LBE426
 17049      00000000 
 17050 0660 00000000 		.quad	.LBB435
 17050      00000000 
 17051 0668 00000000 		.quad	.LBE435
 17051      00000000 
 17052 0670 00000000 		.quad	0
 17052      00000000 
 17053 0678 00000000 		.quad	0
 17053      00000000 
 17054 0680 00000000 		.quad	.LBB429
 17054      00000000 
 17055 0688 00000000 		.quad	.LBE429
 17055      00000000 
 17056 0690 00000000 		.quad	.LBB433
 17056      00000000 
 17057 0698 00000000 		.quad	.LBE433
 17057      00000000 
 17058 06a0 00000000 		.quad	.LBB434
 17058      00000000 
 17059 06a8 00000000 		.quad	.LBE434
 17059      00000000 
 17060 06b0 00000000 		.quad	0
 17060      00000000 
 17061 06b8 00000000 		.quad	0
 17061      00000000 
 17062 06c0 00000000 		.quad	.LBB440
 17062      00000000 
 17063 06c8 00000000 		.quad	.LBE440
 17063      00000000 
 17064 06d0 00000000 		.quad	.LBB461
 17064      00000000 
 17065 06d8 00000000 		.quad	.LBE461
 17065      00000000 
 17066 06e0 00000000 		.quad	.LBB462
 17066      00000000 
 17067 06e8 00000000 		.quad	.LBE462
 17067      00000000 
 17068 06f0 00000000 		.quad	0
 17068      00000000 
 17069 06f8 00000000 		.quad	0
 17069      00000000 
 17070 0700 00000000 		.quad	.LBB445
 17070      00000000 
 17071 0708 00000000 		.quad	.LBE445
 17071      00000000 
 17072 0710 00000000 		.quad	.LBB454
 17072      00000000 
 17073 0718 00000000 		.quad	.LBE454
 17073      00000000 
 17074 0720 00000000 		.quad	0
 17074      00000000 
 17075 0728 00000000 		.quad	0
 17075      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 400


 17076 0730 00000000 		.quad	.LBB447
 17076      00000000 
 17077 0738 00000000 		.quad	.LBE447
 17077      00000000 
 17078 0740 00000000 		.quad	.LBB451
 17078      00000000 
 17079 0748 00000000 		.quad	.LBE451
 17079      00000000 
 17080 0750 00000000 		.quad	.LBB452
 17080      00000000 
 17081 0758 00000000 		.quad	.LBE452
 17081      00000000 
 17082 0760 00000000 		.quad	0
 17082      00000000 
 17083 0768 00000000 		.quad	0
 17083      00000000 
 17084 0770 00000000 		.quad	.LBB455
 17084      00000000 
 17085 0778 00000000 		.quad	.LBE455
 17085      00000000 
 17086 0780 00000000 		.quad	.LBB459
 17086      00000000 
 17087 0788 00000000 		.quad	.LBE459
 17087      00000000 
 17088 0790 00000000 		.quad	.LBB460
 17088      00000000 
 17089 0798 00000000 		.quad	.LBE460
 17089      00000000 
 17090 07a0 00000000 		.quad	0
 17090      00000000 
 17091 07a8 00000000 		.quad	0
 17091      00000000 
 17092 07b0 00000000 		.quad	.LBB463
 17092      00000000 
 17093 07b8 00000000 		.quad	.LBE463
 17093      00000000 
 17094 07c0 00000000 		.quad	.LBB498
 17094      00000000 
 17095 07c8 00000000 		.quad	.LBE498
 17095      00000000 
 17096 07d0 00000000 		.quad	.LBB499
 17096      00000000 
 17097 07d8 00000000 		.quad	.LBE499
 17097      00000000 
 17098 07e0 00000000 		.quad	.LBB500
 17098      00000000 
 17099 07e8 00000000 		.quad	.LBE500
 17099      00000000 
 17100 07f0 00000000 		.quad	.LBB501
 17100      00000000 
 17101 07f8 00000000 		.quad	.LBE501
 17101      00000000 
 17102 0800 00000000 		.quad	0
 17102      00000000 
 17103 0808 00000000 		.quad	0
 17103      00000000 
 17104 0810 00000000 		.quad	.LBB470
GAS LISTING /tmp/ccrWPnlb.s 			page 401


 17104      00000000 
 17105 0818 00000000 		.quad	.LBE470
 17105      00000000 
 17106 0820 00000000 		.quad	.LBB477
 17106      00000000 
 17107 0828 00000000 		.quad	.LBE477
 17107      00000000 
 17108 0830 00000000 		.quad	0
 17108      00000000 
 17109 0838 00000000 		.quad	0
 17109      00000000 
 17110 0840 00000000 		.quad	.LBB473
 17110      00000000 
 17111 0848 00000000 		.quad	.LBE473
 17111      00000000 
 17112 0850 00000000 		.quad	.LBB478
 17112      00000000 
 17113 0858 00000000 		.quad	.LBE478
 17113      00000000 
 17114 0860 00000000 		.quad	.LBB497
 17114      00000000 
 17115 0868 00000000 		.quad	.LBE497
 17115      00000000 
 17116 0870 00000000 		.quad	0
 17116      00000000 
 17117 0878 00000000 		.quad	0
 17117      00000000 
 17118 0880 00000000 		.quad	.LBB479
 17118      00000000 
 17119 0888 00000000 		.quad	.LBE479
 17119      00000000 
 17120 0890 00000000 		.quad	.LBB486
 17120      00000000 
 17121 0898 00000000 		.quad	.LBE486
 17121      00000000 
 17122 08a0 00000000 		.quad	0
 17122      00000000 
 17123 08a8 00000000 		.quad	0
 17123      00000000 
 17124 08b0 00000000 		.quad	.LBB482
 17124      00000000 
 17125 08b8 00000000 		.quad	.LBE482
 17125      00000000 
 17126 08c0 00000000 		.quad	.LBB487
 17126      00000000 
 17127 08c8 00000000 		.quad	.LBE487
 17127      00000000 
 17128 08d0 00000000 		.quad	.LBB496
 17128      00000000 
 17129 08d8 00000000 		.quad	.LBE496
 17129      00000000 
 17130 08e0 00000000 		.quad	0
 17130      00000000 
 17131 08e8 00000000 		.quad	0
 17131      00000000 
 17132 08f0 00000000 		.quad	.LBB488
 17132      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 402


 17133 08f8 00000000 		.quad	.LBE488
 17133      00000000 
 17134 0900 00000000 		.quad	.LBB494
 17134      00000000 
 17135 0908 00000000 		.quad	.LBE494
 17135      00000000 
 17136 0910 00000000 		.quad	0
 17136      00000000 
 17137 0918 00000000 		.quad	0
 17137      00000000 
 17138 0920 00000000 		.quad	.LBB491
 17138      00000000 
 17139 0928 00000000 		.quad	.LBE491
 17139      00000000 
 17140 0930 00000000 		.quad	.LBB495
 17140      00000000 
 17141 0938 00000000 		.quad	.LBE495
 17141      00000000 
 17142 0940 00000000 		.quad	0
 17142      00000000 
 17143 0948 00000000 		.quad	0
 17143      00000000 
 17144 0950 00000000 		.quad	.LBB502
 17144      00000000 
 17145 0958 00000000 		.quad	.LBE502
 17145      00000000 
 17146 0960 00000000 		.quad	.LBB505
 17146      00000000 
 17147 0968 00000000 		.quad	.LBE505
 17147      00000000 
 17148 0970 00000000 		.quad	0
 17148      00000000 
 17149 0978 00000000 		.quad	0
 17149      00000000 
 17150 0980 00000000 		.quad	.LBB506
 17150      00000000 
 17151 0988 00000000 		.quad	.LBE506
 17151      00000000 
 17152 0990 00000000 		.quad	.LBB509
 17152      00000000 
 17153 0998 00000000 		.quad	.LBE509
 17153      00000000 
 17154 09a0 00000000 		.quad	.LBB510
 17154      00000000 
 17155 09a8 00000000 		.quad	.LBE510
 17155      00000000 
 17156 09b0 00000000 		.quad	.LBB511
 17156      00000000 
 17157 09b8 00000000 		.quad	.LBE511
 17157      00000000 
 17158 09c0 00000000 		.quad	0
 17158      00000000 
 17159 09c8 00000000 		.quad	0
 17159      00000000 
 17160 09d0 00000000 		.quad	.LBB512
 17160      00000000 
 17161 09d8 00000000 		.quad	.LBE512
GAS LISTING /tmp/ccrWPnlb.s 			page 403


 17161      00000000 
 17162 09e0 00000000 		.quad	.LBB519
 17162      00000000 
 17163 09e8 00000000 		.quad	.LBE519
 17163      00000000 
 17164 09f0 00000000 		.quad	.LBB520
 17164      00000000 
 17165 09f8 00000000 		.quad	.LBE520
 17165      00000000 
 17166 0a00 00000000 		.quad	.LBB521
 17166      00000000 
 17167 0a08 00000000 		.quad	.LBE521
 17167      00000000 
 17168 0a10 00000000 		.quad	0
 17168      00000000 
 17169 0a18 00000000 		.quad	0
 17169      00000000 
 17170 0a20 00000000 		.quad	.LBB513
 17170      00000000 
 17171 0a28 00000000 		.quad	.LBE513
 17171      00000000 
 17172 0a30 00000000 		.quad	.LBB518
 17172      00000000 
 17173 0a38 00000000 		.quad	.LBE518
 17173      00000000 
 17174 0a40 00000000 		.quad	0
 17174      00000000 
 17175 0a48 00000000 		.quad	0
 17175      00000000 
 17176 0a50 00000000 		.quad	.LBB522
 17176      00000000 
 17177 0a58 00000000 		.quad	.LBE522
 17177      00000000 
 17178 0a60 00000000 		.quad	.LBB529
 17178      00000000 
 17179 0a68 00000000 		.quad	.LBE529
 17179      00000000 
 17180 0a70 00000000 		.quad	.LBB530
 17180      00000000 
 17181 0a78 00000000 		.quad	.LBE530
 17181      00000000 
 17182 0a80 00000000 		.quad	.LBB531
 17182      00000000 
 17183 0a88 00000000 		.quad	.LBE531
 17183      00000000 
 17184 0a90 00000000 		.quad	0
 17184      00000000 
 17185 0a98 00000000 		.quad	0
 17185      00000000 
 17186 0aa0 00000000 		.quad	.LBB523
 17186      00000000 
 17187 0aa8 00000000 		.quad	.LBE523
 17187      00000000 
 17188 0ab0 00000000 		.quad	.LBB528
 17188      00000000 
 17189 0ab8 00000000 		.quad	.LBE528
 17189      00000000 
GAS LISTING /tmp/ccrWPnlb.s 			page 404


 17190 0ac0 00000000 		.quad	0
 17190      00000000 
 17191 0ac8 00000000 		.quad	0
 17191      00000000 
 17192 0ad0 00000000 		.quad	.LBB542
 17192      00000000 
 17193 0ad8 00000000 		.quad	.LBE542
 17193      00000000 
 17194 0ae0 00000000 		.quad	.LBB546
 17194      00000000 
 17195 0ae8 00000000 		.quad	.LBE546
 17195      00000000 
 17196 0af0 00000000 		.quad	.LBB547
 17196      00000000 
 17197 0af8 00000000 		.quad	.LBE547
 17197      00000000 
 17198 0b00 00000000 		.quad	0
 17198      00000000 
 17199 0b08 00000000 		.quad	0
 17199      00000000 
 17200 0b10 00000000 		.quad	.Ltext0
 17200      00000000 
 17201 0b18 00000000 		.quad	.Letext0
 17201      00000000 
 17202 0b20 00000000 		.quad	.LFB1045
 17202      00000000 
 17203 0b28 00000000 		.quad	.LFE1045
 17203      00000000 
 17204 0b30 00000000 		.quad	.LFB1533
 17204      00000000 
 17205 0b38 00000000 		.quad	.LFE1533
 17205      00000000 
 17206 0b40 00000000 		.quad	.LFB1690
 17206      00000000 
 17207 0b48 00000000 		.quad	.LFE1690
 17207      00000000 
 17208 0b50 00000000 		.quad	0
 17208      00000000 
 17209 0b58 00000000 		.quad	0
 17209      00000000 
 17210              		.section	.debug_line,"",@progbits
 17211              	.Ldebug_line0:
 17212 0000 1E080000 		.section	.debug_str,"MS",@progbits,1
 17212      0200B403 
 17212      00000101 
 17212      FB0E0D00 
 17212      01010101 
 17213              	.LASF272:
 17214 0000 77637370 		.string	"wcspbrk"
 17214      62726B00 
 17215              	.LASF336:
 17216 0008 6C636F6E 		.string	"lconv"
 17216      7600
 17217              	.LASF104:
 17218 000e 5F535F73 		.string	"_S_showpoint"
 17218      686F7770 
 17218      6F696E74 
GAS LISTING /tmp/ccrWPnlb.s 			page 405


 17218      00
 17219              	.LASF28:
 17220 001b 5F756E75 		.string	"_unused2"
 17220      73656432 
 17220      00
 17221              	.LASF503:
 17222 0024 65787065 		.string	"expected1"
 17222      63746564 
 17222      3100
 17223              	.LASF504:
 17224 002e 65787065 		.string	"expected2"
 17224      63746564 
 17224      3200
 17225              	.LASF14:
 17226 0038 5F66696C 		.string	"_fileno"
 17226      656E6F00 
 17227              	.LASF149:
 17228 0040 756E6974 		.string	"unitbuf"
 17228      62756600 
 17229              	.LASF530:
 17230 0048 68656174 		.string	"heatmap_free"
 17230      6D61705F 
 17230      66726565 
 17230      00
 17231              	.LASF86:
 17232 0055 746F5F63 		.string	"to_char_type"
 17232      6861725F 
 17232      74797065 
 17232      00
 17233              	.LASF484:
 17234 0062 5F5A3234 		.string	"_Z24test_stamp_gen_nonlinearv"
 17234      74657374 
 17234      5F737461 
 17234      6D705F67 
 17234      656E5F6E 
 17235              	.LASF92:
 17236 0080 6E6F745F 		.string	"not_eof"
 17236      656F6600 
 17237              	.LASF139:
 17238 0088 626F6F6C 		.string	"boolalpha"
 17238      616C7068 
 17238      6100
 17239              	.LASF239:
 17240 0092 746D5F73 		.string	"tm_sec"
 17240      656300
 17241              	.LASF184:
 17242 0099 73657473 		.string	"setstate"
 17242      74617465 
 17242      00
 17243              	.LASF127:
 17244 00a2 5F535F69 		.string	"_S_ios_iostate_end"
 17244      6F735F69 
 17244      6F737461 
 17244      74655F65 
 17244      6E6400
 17245              	.LASF555:
 17246 00b5 5F5F7374 		.string	"__static_initialization_and_destruction_0"
GAS LISTING /tmp/ccrWPnlb.s 			page 406


 17246      61746963 
 17246      5F696E69 
 17246      7469616C 
 17246      697A6174 
 17247              	.LASF447:
 17248 00df 68656174 		.string	"heatmap_t"
 17248      6D61705F 
 17248      7400
 17249              	.LASF211:
 17250 00e9 66776964 		.string	"fwide"
 17250      6500
 17251              	.LASF137:
 17252 00ef 696F7374 		.string	"iostate"
 17252      61746500 
 17253              	.LASF356:
 17254 00f7 696E745F 		.string	"int_p_sep_by_space"
 17254      705F7365 
 17254      705F6279 
 17254      5F737061 
 17254      636500
 17255              	.LASF495:
 17256 010a 74657374 		.string	"test_render_to_nothing"
 17256      5F72656E 
 17256      6465725F 
 17256      746F5F6E 
 17256      6F746869 
 17257              	.LASF70:
 17258 0121 63686172 		.string	"char_type"
 17258      5F747970 
 17258      6500
 17259              	.LASF152:
 17260 012b 62617365 		.string	"basefield"
 17260      6669656C 
 17260      6400
 17261              	.LASF214:
 17262 0135 67657477 		.string	"getwc"
 17262      6300
 17263              	.LASF373:
 17264 013b 376C6C64 		.string	"7lldiv_t"
 17264      69765F74 
 17264      00
 17265              	.LASF411:
 17266 0144 66706F73 		.string	"fpos_t"
 17266      5F7400
 17267              	.LASF287:
 17268 014b 5F5F6D61 		.string	"__max_digits10"
 17268      785F6469 
 17268      67697473 
 17268      313000
 17269              	.LASF278:
 17270 015a 5F5F6F70 		.string	"__ops"
 17270      7300
 17271              	.LASF284:
 17272 0160 5F56616C 		.string	"_Value"
 17272      756500
 17273              	.LASF19:
 17274 0167 5F73686F 		.string	"_shortbuf"
GAS LISTING /tmp/ccrWPnlb.s 			page 407


 17274      72746275 
 17274      6600
 17275              	.LASF538:
 17276 0171 68656174 		.string	"heatmap_render_saturated_to"
 17276      6D61705F 
 17276      72656E64 
 17276      65725F73 
 17276      61747572 
 17277              	.LASF493:
 17278 018d 6F706572 		.string	"operator float (*)(float)"
 17278      61746F72 
 17278      20666C6F 
 17278      61742028 
 17278      2A292866 
 17279              	.LASF540:
 17280 01a7 74657374 		.string	"tests/test.cpp"
 17280      732F7465 
 17280      73742E63 
 17280      707000
 17281              	.LASF276:
 17282 01b6 5F5F676E 		.string	"__gnu_cxx"
 17282      755F6378 
 17282      7800
 17283              	.LASF499:
 17284 01c0 74657374 		.string	"test_render_to_normalizing"
 17284      5F72656E 
 17284      6465725F 
 17284      746F5F6E 
 17284      6F726D61 
 17285              	.LASF252:
 17286 01db 7763736E 		.string	"wcsncmp"
 17286      636D7000 
 17287              	.LASF468:
 17288 01e3 7374616D 		.string	"stamp_eq"
 17288      705F6571 
 17288      00
 17289              	.LASF116:
 17290 01ec 5F535F61 		.string	"_S_ate"
 17290      746500
 17291              	.LASF324:
 17292 01f3 696E745F 		.string	"int_fast32_t"
 17292      66617374 
 17292      33325F74 
 17292      00
 17293              	.LASF414:
 17294 0200 66656F66 		.string	"feof"
 17294      00
 17295              	.LASF311:
 17296 0205 75696E74 		.string	"uint16_t"
 17296      31365F74 
 17296      00
 17297              	.LASF470:
 17298 020e 74657374 		.string	"test_add_nothing"
 17298      5F616464 
 17298      5F6E6F74 
 17298      68696E67 
 17298      00
GAS LISTING /tmp/ccrWPnlb.s 			page 408


 17299              	.LASF37:
 17300 021f 6F766572 		.string	"overflow_arg_area"
 17300      666C6F77 
 17300      5F617267 
 17300      5F617265 
 17300      6100
 17301              	.LASF79:
 17302 0231 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 17302      74313163 
 17302      6861725F 
 17302      74726169 
 17302      74734963 
 17303              	.LASF0:
 17304 0255 5F666C61 		.string	"_flags"
 17304      677300
 17305              	.LASF440:
 17306 025c 69737763 		.string	"iswctype"
 17306      74797065 
 17306      00
 17307              	.LASF444:
 17308 0265 666C6F61 		.string	"float_t"
 17308      745F7400 
 17309              	.LASF75:
 17310 026d 6C656E67 		.string	"length"
 17310      746800
 17311              	.LASF38:
 17312 0274 7265675F 		.string	"reg_save_area"
 17312      73617665 
 17312      5F617265 
 17312      6100
 17313              	.LASF364:
 17314 0282 5F5F6F66 		.string	"__off_t"
 17314      665F7400 
 17315              	.LASF528:
 17316 028a 6D656D63 		.string	"memcmp"
 17316      6D7000
 17317              	.LASF391:
 17318 0291 73747274 		.string	"strtod"
 17318      6F6400
 17319              	.LASF279:
 17320 0298 5F5F6E75 		.string	"__numeric_traits_integer<int>"
 17320      6D657269 
 17320      635F7472 
 17320      61697473 
 17320      5F696E74 
 17321              	.LASF401:
 17322 02b6 73747274 		.string	"strtof"
 17322      6F6600
 17323              	.LASF506:
 17324 02bd 5F474C4F 		.string	"_GLOBAL__sub_I_test.cpp"
 17324      42414C5F 
 17324      5F737562 
 17324      5F495F74 
 17324      6573742E 
 17325              	.LASF441:
 17326 02d5 746F7763 		.string	"towctrans"
 17326      7472616E 
GAS LISTING /tmp/ccrWPnlb.s 			page 409


 17326      7300
 17327              	.LASF328:
 17328 02df 75696E74 		.string	"uint_fast32_t"
 17328      5F666173 
 17328      7433325F 
 17328      7400
 17329              	.LASF247:
 17330 02ed 746D5F69 		.string	"tm_isdst"
 17330      73647374 
 17330      00
 17331              	.LASF339:
 17332 02f6 67726F75 		.string	"grouping"
 17332      70696E67 
 17332      00
 17333              	.LASF20:
 17334 02ff 5F6C6F63 		.string	"_lock"
 17334      6B00
 17335              	.LASF297:
 17336 0305 77637374 		.string	"wcstoll"
 17336      6F6C6C00 
 17337              	.LASF286:
 17338 030d 5F5F6E75 		.string	"__numeric_traits_floating<float>"
 17338      6D657269 
 17338      635F7472 
 17338      61697473 
 17338      5F666C6F 
 17339              	.LASF542:
 17340 032e 6F706572 		.string	"operator bool"
 17340      61746F72 
 17340      20626F6F 
 17340      6C00
 17341              	.LASF487:
 17342 033c 7A65726F 		.string	"zeros"
 17342      7300
 17343              	.LASF301:
 17344 0342 626F6F6C 		.string	"bool"
 17344      00
 17345              	.LASF95:
 17346 0347 5F535F64 		.string	"_S_dec"
 17346      656300
 17347              	.LASF379:
 17348 034e 61746F69 		.string	"atoi"
 17348      00
 17349              	.LASF187:
 17350 0353 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc"
 17350      53743962 
 17350      61736963 
 17350      5F696F73 
 17350      49635374 
 17351              	.LASF380:
 17352 0381 61746F6C 		.string	"atol"
 17352      00
 17353              	.LASF172:
 17354 0386 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 17354      6F395F4D 
 17354      5F696E73 
 17354      65727449 
GAS LISTING /tmp/ccrWPnlb.s 			page 410


 17354      6D454552 
 17355              	.LASF255:
 17356 039f 77637373 		.string	"wcsspn"
 17356      706E00
 17357              	.LASF465:
 17358 03a6 5F5F6F73 		.string	"__os"
 17358      00
 17359              	.LASF114:
 17360 03ab 5F496F73 		.string	"_Ios_Openmode"
 17360      5F4F7065 
 17360      6E6D6F64 
 17360      6500
 17361              	.LASF485:
 17362 03b9 6F6E6573 		.string	"ones"
 17362      00
 17363              	.LASF308:
 17364 03be 696E7433 		.string	"int32_t"
 17364      325F7400 
 17365              	.LASF332:
 17366 03c6 696E746D 		.string	"intmax_t"
 17366      61785F74 
 17366      00
 17367              	.LASF404:
 17368 03cf 5F5F706F 		.string	"__pos"
 17368      7300
 17369              	.LASF456:
 17370 03d5 5F5F6F75 		.string	"__out"
 17370      7400
 17371              	.LASF277:
 17372 03db 5F5F6465 		.string	"__debug"
 17372      62756700 
 17373              	.LASF442:
 17374 03e3 77637472 		.string	"wctrans"
 17374      616E7300 
 17375              	.LASF457:
 17376 03eb 5F5F7066 		.string	"__pf"
 17376      00
 17377              	.LASF446:
 17378 03f0 39686561 		.string	"9heatmap_t"
 17378      746D6170 
 17378      5F7400
 17379              	.LASF168:
 17380 03fb 666C7573 		.string	"flush"
 17380      6800
 17381              	.LASF361:
 17382 0401 7365746C 		.string	"setlocale"
 17382      6F63616C 
 17382      6500
 17383              	.LASF333:
 17384 040b 75696E74 		.string	"uintmax_t"
 17384      6D61785F 
 17384      7400
 17385              	.LASF231:
 17386 0415 76777363 		.string	"vwscanf"
 17386      616E6600 
 17387              	.LASF103:
 17388 041d 5F535F73 		.string	"_S_showbase"
GAS LISTING /tmp/ccrWPnlb.s 			page 411


 17388      686F7762 
 17388      61736500 
 17389              	.LASF520:
 17390 0429 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E"
 17390      5F5F676E 
 17390      755F6378 
 17390      7832355F 
 17390      5F6E756D 
 17391              	.LASF100:
 17392 0468 5F535F6F 		.string	"_S_oct"
 17392      637400
 17393              	.LASF371:
 17394 046f 366C6469 		.string	"6ldiv_t"
 17394      765F7400 
 17395              	.LASF190:
 17396 0477 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate"
 17396      74396261 
 17396      7369635F 
 17396      696F7349 
 17396      63537431 
 17397              	.LASF6:
 17398 04b3 5F494F5F 		.string	"_IO_write_end"
 17398      77726974 
 17398      655F656E 
 17398      6400
 17399              	.LASF464:
 17400 04c1 7374616D 		.string	"stamp_almost_eq"
 17400      705F616C 
 17400      6D6F7374 
 17400      5F657100 
 17401              	.LASF317:
 17402 04d1 696E745F 		.string	"int_least64_t"
 17402      6C656173 
 17402      7436345F 
 17402      7400
 17403              	.LASF396:
 17404 04df 7763746F 		.string	"wctomb"
 17404      6D6200
 17405              	.LASF68:
 17406 04e6 6E756C6C 		.string	"nullptr_t"
 17406      7074725F 
 17406      7400
 17407              	.LASF537:
 17408 04f0 66726565 		.string	"free"
 17408      00
 17409              	.LASF98:
 17410 04f5 5F535F69 		.string	"_S_internal"
 17410      6E746572 
 17410      6E616C00 
 17411              	.LASF378:
 17412 0501 61746F66 		.string	"atof"
 17412      00
 17413              	.LASF458:
 17414 0506 64657363 		.string	"desc"
 17414      00
 17415              	.LASF450:
 17416 050b 32316865 		.string	"21heatmap_colorscheme_t"
GAS LISTING /tmp/ccrWPnlb.s 			page 412


 17416      61746D61 
 17416      705F636F 
 17416      6C6F7273 
 17416      6368656D 
 17417              	.LASF452:
 17418 0523 6E636F6C 		.string	"ncolors"
 17418      6F727300 
 17419              	.LASF531:
 17420 052b 68656174 		.string	"heatmap_add_point_with_stamp"
 17420      6D61705F 
 17420      6164645F 
 17420      706F696E 
 17420      745F7769 
 17421              	.LASF431:
 17422 0548 72656E61 		.string	"rename"
 17422      6D6500
 17423              	.LASF83:
 17424 054f 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 17424      74313163 
 17424      6861725F 
 17424      74726169 
 17424      74734963 
 17425              	.LASF64:
 17426 0571 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 17426      53743135 
 17426      5F5F6578 
 17426      63657074 
 17426      696F6E5F 
 17427              	.LASF443:
 17428 05a1 77637479 		.string	"wctype"
 17428      706500
 17429              	.LASF154:
 17430 05a8 62616462 		.string	"badbit"
 17430      697400
 17431              	.LASF125:
 17432 05af 5F535F65 		.string	"_S_eofbit"
 17432      6F666269 
 17432      7400
 17433              	.LASF314:
 17434 05b9 696E745F 		.string	"int_least8_t"
 17434      6C656173 
 17434      74385F74 
 17434      00
 17435              	.LASF274:
 17436 05c6 77637373 		.string	"wcsstr"
 17436      747200
 17437              	.LASF466:
 17438 05cd 5F5F696E 		.string	"__initialize_p"
 17438      69746961 
 17438      6C697A65 
 17438      5F7000
 17439              	.LASF421:
 17440 05dc 66726561 		.string	"fread"
 17440      6400
 17441              	.LASF347:
 17442 05e2 696E745F 		.string	"int_frac_digits"
 17442      66726163 
GAS LISTING /tmp/ccrWPnlb.s 			page 413


 17442      5F646967 
 17442      69747300 
 17443              	.LASF397:
 17444 05f2 6C6C6469 		.string	"lldiv"
 17444      7600
 17445              	.LASF338:
 17446 05f8 74686F75 		.string	"thousands_sep"
 17446      73616E64 
 17446      735F7365 
 17446      7000
 17447              	.LASF288:
 17448 0606 5F5F6469 		.string	"__digits10"
 17448      67697473 
 17448      313000
 17449              	.LASF419:
 17450 0611 66676574 		.string	"fgets"
 17450      7300
 17451              	.LASF151:
 17452 0617 61646A75 		.string	"adjustfield"
 17452      73746669 
 17452      656C6400 
 17453              	.LASF258:
 17454 0623 77637374 		.string	"wcstof"
 17454      6F6600
 17455              	.LASF259:
 17456 062a 77637374 		.string	"wcstok"
 17456      6F6B00
 17457              	.LASF260:
 17458 0631 77637374 		.string	"wcstol"
 17458      6F6C00
 17459              	.LASF422:
 17460 0638 6672656F 		.string	"freopen"
 17460      70656E00 
 17461              	.LASF492:
 17462 0640 5F5F636C 		.string	"__closure"
 17462      6F737572 
 17462      6500
 17463              	.LASF146:
 17464 064a 73686F77 		.string	"showpoint"
 17464      706F696E 
 17464      7400
 17465              	.LASF102:
 17466 0654 5F535F73 		.string	"_S_scientific"
 17466      6369656E 
 17466      74696669 
 17466      6300
 17467              	.LASF415:
 17468 0662 66657272 		.string	"ferror"
 17468      6F7200
 17469              	.LASF521:
 17470 0669 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE"
 17470      5F5F676E 
 17470      755F6378 
 17470      7832345F 
 17470      5F6E756D 
 17471              	.LASF144:
 17472 069e 73636965 		.string	"scientific"
GAS LISTING /tmp/ccrWPnlb.s 			page 414


 17472      6E746966 
 17472      696300
 17473              	.LASF59:
 17474 06a9 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 17474      7431355F 
 17474      5F657863 
 17474      65707469 
 17474      6F6E5F70 
 17475              	.LASF305:
 17476 06d7 5F5F676E 		.string	"__gnu_debug"
 17476      755F6465 
 17476      62756700 
 17477              	.LASF268:
 17478 06e3 776D656D 		.string	"wmemset"
 17478      73657400 
 17479              	.LASF522:
 17480 06eb 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE"
 17480      5F5F676E 
 17480      755F6378 
 17480      7832345F 
 17480      5F6E756D 
 17481              	.LASF58:
 17482 071d 6F706572 		.string	"operator="
 17482      61746F72 
 17482      3D00
 17483              	.LASF205:
 17484 0727 62746F77 		.string	"btowc"
 17484      6300
 17485              	.LASF482:
 17486 072d 5F5A3134 		.string	"_Z14test_stamp_genv"
 17486      74657374 
 17486      5F737461 
 17486      6D705F67 
 17486      656E7600 
 17487              	.LASF222:
 17488 0741 70757477 		.string	"putwchar"
 17488      63686172 
 17488      00
 17489              	.LASF105:
 17490 074a 5F535F73 		.string	"_S_showpos"
 17490      686F7770 
 17490      6F7300
 17491              	.LASF519:
 17492 0755 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E"
 17492      5F5F676E 
 17492      755F6378 
 17492      7832355F 
 17492      5F6E756D 
 17493              	.LASF341:
 17494 0794 63757272 		.string	"currency_symbol"
 17494      656E6379 
 17494      5F73796D 
 17494      626F6C00 
 17495              	.LASF445:
 17496 07a4 646F7562 		.string	"double_t"
 17496      6C655F74 
 17496      00
GAS LISTING /tmp/ccrWPnlb.s 			page 415


 17497              	.LASF191:
 17498 07ad 6F706572 		.string	"operator|"
 17498      61746F72 
 17498      7C00
 17499              	.LASF517:
 17500 07b7 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE"
 17500      5F5F676E 
 17500      755F6378 
 17500      7832345F 
 17500      5F6E756D 
 17501              	.LASF476:
 17502 07e9 5F5A3333 		.string	"_Z33test_add_point_with_stamp_topleftv"
 17502      74657374 
 17502      5F616464 
 17502      5F706F69 
 17502      6E745F77 
 17503              	.LASF545:
 17504 0810 70696563 		.string	"piecewise_construct_t"
 17504      65776973 
 17504      655F636F 
 17504      6E737472 
 17504      7563745F 
 17505              	.LASF273:
 17506 0826 77637372 		.string	"wcsrchr"
 17506      63687200 
 17507              	.LASF496:
 17508 082e 5F5A3232 		.string	"_Z22test_render_to_nothingv"
 17508      74657374 
 17508      5F72656E 
 17508      6465725F 
 17508      746F5F6E 
 17509              	.LASF13:
 17510 084a 5F636861 		.string	"_chain"
 17510      696E00
 17511              	.LASF357:
 17512 0851 696E745F 		.string	"int_n_cs_precedes"
 17512      6E5F6373 
 17512      5F707265 
 17512      63656465 
 17512      7300
 17513              	.LASF526:
 17514 0863 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__maxE"
 17514      5F5F676E 
 17514      755F6378 
 17514      7832345F 
 17514      5F6E756D 
 17515              	.LASF148:
 17516 0895 736B6970 		.string	"skipws"
 17516      777300
 17517              	.LASF262:
 17518 089c 77637374 		.string	"wcstoul"
 17518      6F756C00 
 17519              	.LASF175:
 17520 08a4 63747970 		.string	"ctype<char>"
 17520      653C6368 
 17520      61723E00 
 17521              	.LASF367:
GAS LISTING /tmp/ccrWPnlb.s 			page 416


 17522 08b0 31315F5F 		.string	"11__mbstate_t"
 17522      6D627374 
 17522      6174655F 
 17522      7400
 17523              	.LASF134:
 17524 08be 5F535F73 		.string	"_S_synced_with_stdio"
 17524      796E6365 
 17524      645F7769 
 17524      74685F73 
 17524      7464696F 
 17525              	.LASF302:
 17526 08d3 756E7369 		.string	"unsigned char"
 17526      676E6564 
 17526      20636861 
 17526      7200
 17527              	.LASF150:
 17528 08e1 75707065 		.string	"uppercase"
 17528      72636173 
 17528      6500
 17529              	.LASF471:
 17530 08eb 5F5A3136 		.string	"_Z16test_add_nothingv"
 17530      74657374 
 17530      5F616464 
 17530      5F6E6F74 
 17530      68696E67 
 17531              	.LASF263:
 17532 0901 77637378 		.string	"wcsxfrm"
 17532      66726D00 
 17533              	.LASF201:
 17534 0909 5F5A5374 		.string	"_ZSt4cerr"
 17534      34636572 
 17534      7200
 17535              	.LASF250:
 17536 0913 7763736C 		.string	"wcslen"
 17536      656E00
 17537              	.LASF31:
 17538 091a 666C6F61 		.string	"float"
 17538      7400
 17539              	.LASF524:
 17540 0920 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE"
 17540      5F5F676E 
 17540      755F6378 
 17540      7832345F 
 17540      5F6E756D 
 17541              	.LASF500:
 17542 0952 5F5A3236 		.string	"_Z26test_render_to_normalizingv"
 17542      74657374 
 17542      5F72656E 
 17542      6465725F 
 17542      746F5F6E 
 17543              	.LASF494:
 17544 0972 5F46554E 		.string	"_FUN"
 17544      00
 17545              	.LASF489:
 17546 0977 656E7375 		.string	"ensure_that"
 17546      72655F74 
 17546      68617400 
GAS LISTING /tmp/ccrWPnlb.s 			page 417


 17547              	.LASF72:
 17548 0983 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 17548      74313163 
 17548      6861725F 
 17548      74726169 
 17548      74734963 
 17549              	.LASF84:
 17550 09a3 61737369 		.string	"assign"
 17550      676E00
 17551              	.LASF320:
 17552 09aa 75696E74 		.string	"uint_least32_t"
 17552      5F6C6561 
 17552      73743332 
 17552      5F7400
 17553              	.LASF71:
 17554 09b9 696E745F 		.string	"int_type"
 17554      74797065 
 17554      00
 17555              	.LASF200:
 17556 09c2 5F5A5374 		.string	"_ZSt4cout"
 17556      34636F75 
 17556      7400
 17557              	.LASF96:
 17558 09cc 5F535F66 		.string	"_S_fixed"
 17558      69786564 
 17558      00
 17559              	.LASF130:
 17560 09d5 5F535F63 		.string	"_S_cur"
 17560      757200
 17561              	.LASF501:
 17562 09dc 74657374 		.string	"test_render_to_saturating"
 17562      5F72656E 
 17562      6465725F 
 17562      746F5F73 
 17562      61747572 
 17563              	.LASF433:
 17564 09f6 73657462 		.string	"setbuf"
 17564      756600
 17565              	.LASF467:
 17566 09fd 5F5F7072 		.string	"__priority"
 17566      696F7269 
 17566      747900
 17567              	.LASF249:
 17568 0a08 746D5F7A 		.string	"tm_zone"
 17568      6F6E6500 
 17569              	.LASF313:
 17570 0a10 75696E74 		.string	"uint64_t"
 17570      36345F74 
 17570      00
 17571              	.LASF213:
 17572 0a19 66777363 		.string	"fwscanf"
 17572      616E6600 
 17573              	.LASF238:
 17574 0a21 77637366 		.string	"wcsftime"
 17574      74696D65 
 17574      00
 17575              	.LASF63:
GAS LISTING /tmp/ccrWPnlb.s 			page 418


 17576 0a2a 73776170 		.string	"swap"
 17576      00
 17577              	.LASF54:
 17578 0a2f 5F4D5F61 		.string	"_M_addref"
 17578      64647265 
 17578      6600
 17579              	.LASF217:
 17580 0a39 6D62726C 		.string	"mbrlen"
 17580      656E00
 17581              	.LASF170:
 17582 0a40 5F5A4E53 		.string	"_ZNSolsEi"
 17582      6F6C7345 
 17582      6900
 17583              	.LASF167:
 17584 0a4a 5F5A4E53 		.string	"_ZNSolsEj"
 17584      6F6C7345 
 17584      6A00
 17585              	.LASF543:
 17586 0a54 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 17586      53743135 
 17586      5F5F6578 
 17586      63657074 
 17586      696F6E5F 
 17587              	.LASF432:
 17588 0a80 72657769 		.string	"rewind"
 17588      6E6400
 17589              	.LASF532:
 17590 0a87 68656174 		.string	"heatmap_add_weighted_point_with_stamp"
 17590      6D61705F 
 17590      6164645F 
 17590      77656967 
 17590      68746564 
 17591              	.LASF402:
 17592 0aad 73747274 		.string	"strtold"
 17592      6F6C6400 
 17593              	.LASF399:
 17594 0ab5 73747274 		.string	"strtoll"
 17594      6F6C6C00 
 17595              	.LASF376:
 17596 0abd 61746578 		.string	"atexit"
 17596      697400
 17597              	.LASF5:
 17598 0ac4 5F494F5F 		.string	"_IO_write_ptr"
 17598      77726974 
 17598      655F7074 
 17598      7200
 17599              	.LASF388:
 17600 0ad2 71756963 		.string	"quick_exit"
 17600      6B5F6578 
 17600      697400
 17601              	.LASF346:
 17602 0add 6E656761 		.string	"negative_sign"
 17602      74697665 
 17602      5F736967 
 17602      6E00
 17603              	.LASF233:
 17604 0aeb 77637363 		.string	"wcscat"
GAS LISTING /tmp/ccrWPnlb.s 			page 419


 17604      617400
 17605              	.LASF514:
 17606 0af2 675F746F 		.string	"g_total_tests"
 17606      74616C5F 
 17606      74657374 
 17606      7300
 17607              	.LASF256:
 17608 0b00 77637374 		.string	"wcstod"
 17608      6F6400
 17609              	.LASF60:
 17610 0b07 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 17610      7431355F 
 17610      5F657863 
 17610      65707469 
 17610      6F6E5F70 
 17611              	.LASF425:
 17612 0b34 6674656C 		.string	"ftell"
 17612      6C00
 17613              	.LASF340:
 17614 0b3a 696E745F 		.string	"int_curr_symbol"
 17614      63757272 
 17614      5F73796D 
 17614      626F6C00 
 17615              	.LASF461:
 17616 0b4a 6C696E65 		.string	"line"
 17616      00
 17617              	.LASF511:
 17618 0b4f 675F3378 		.string	"g_3x3_stamp_data"
 17618      335F7374 
 17618      616D705F 
 17618      64617461 
 17618      00
 17619              	.LASF405:
 17620 0b60 5F5F7374 		.string	"__state"
 17620      61746500 
 17621              	.LASF289:
 17622 0b68 5F5F6D61 		.string	"__max_exponent10"
 17622      785F6578 
 17622      706F6E65 
 17622      6E743130 
 17622      00
 17623              	.LASF29:
 17624 0b79 46494C45 		.string	"FILE"
 17624      00
 17625              	.LASF143:
 17626 0b7e 72696768 		.string	"right"
 17626      7400
 17627              	.LASF189:
 17628 0b84 636C6561 		.string	"clear"
 17628      7200
 17629              	.LASF73:
 17630 0b8a 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 17630      74313163 
 17630      6861725F 
 17630      74726169 
 17630      74734963 
 17631              	.LASF237:
GAS LISTING /tmp/ccrWPnlb.s 			page 420


 17632 0baa 77637363 		.string	"wcscspn"
 17632      73706E00 
 17633              	.LASF131:
 17634 0bb2 5F535F65 		.string	"_S_end"
 17634      6E6400
 17635              	.LASF472:
 17636 0bb9 5F5F696F 		.string	"__ioinit"
 17636      696E6974 
 17636      00
 17637              	.LASF40:
 17638 0bc2 73697A65 		.string	"size_t"
 17638      5F7400
 17639              	.LASF45:
 17640 0bc9 5F5F636F 		.string	"__count"
 17640      756E7400 
 17641              	.LASF310:
 17642 0bd1 75696E74 		.string	"uint8_t"
 17642      385F7400 
 17643              	.LASF369:
 17644 0bd9 71756F74 		.string	"quot"
 17644      00
 17645              	.LASF527:
 17646 0bde 5F5F6275 		.string	"__builtin_strlen"
 17646      696C7469 
 17646      6E5F7374 
 17646      726C656E 
 17646      00
 17647              	.LASF136:
 17648 0bef 7E496E69 		.string	"~Init"
 17648      7400
 17649              	.LASF486:
 17650 0bf5 68616C66 		.string	"halfs"
 17650      7300
 17651              	.LASF429:
 17652 0bfb 70657272 		.string	"perror"
 17652      6F7200
 17653              	.LASF178:
 17654 0c02 5F4D5F77 		.string	"_M_widen_init"
 17654      6964656E 
 17654      5F696E69 
 17654      7400
 17655              	.LASF9:
 17656 0c10 5F494F5F 		.string	"_IO_save_base"
 17656      73617665 
 17656      5F626173 
 17656      6500
 17657              	.LASF195:
 17658 0c1e 666C7573 		.string	"flush<char, std::char_traits<char> >"
 17658      683C6368 
 17658      61722C20 
 17658      7374643A 
 17658      3A636861 
 17659              	.LASF264:
 17660 0c43 7763746F 		.string	"wctob"
 17660      6200
 17661              	.LASF343:
 17662 0c49 6D6F6E5F 		.string	"mon_thousands_sep"
GAS LISTING /tmp/ccrWPnlb.s 			page 421


 17662      74686F75 
 17662      73616E64 
 17662      735F7365 
 17662      7000
 17663              	.LASF212:
 17664 0c5b 66777072 		.string	"fwprintf"
 17664      696E7466 
 17664      00
 17665              	.LASF147:
 17666 0c64 73686F77 		.string	"showpos"
 17666      706F7300 
 17667              	.LASF180:
 17668 0c6c 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE13_M_widen_initEv"
 17668      53743563 
 17668      74797065 
 17668      49634531 
 17668      335F4D5F 
 17669              	.LASF44:
 17670 0c8d 5F5F7763 		.string	"__wchb"
 17670      686200
 17671              	.LASF94:
 17672 0c94 5F535F62 		.string	"_S_boolalpha"
 17672      6F6F6C61 
 17672      6C706861 
 17672      00
 17673              	.LASF374:
 17674 0ca1 6C6C6469 		.string	"lldiv_t"
 17674      765F7400 
 17675              	.LASF185:
 17676 0ca9 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 17676      74396261 
 17676      7369635F 
 17676      696F7349 
 17676      63537431 
 17677              	.LASF192:
 17678 0ce8 6F706572 		.string	"operator<< <std::char_traits<char> >"
 17678      61746F72 
 17678      3C3C203C 
 17678      7374643A 
 17678      3A636861 
 17679              	.LASF227:
 17680 0d0d 76667773 		.string	"vfwscanf"
 17680      63616E66 
 17680      00
 17681              	.LASF42:
 17682 0d16 77696E74 		.string	"wint_t"
 17682      5F7400
 17683              	.LASF384:
 17684 0d1d 6D626C65 		.string	"mblen"
 17684      6E00
 17685              	.LASF226:
 17686 0d23 76667770 		.string	"vfwprintf"
 17686      72696E74 
 17686      6600
 17687              	.LASF283:
 17688 0d2d 5F5F6469 		.string	"__digits"
 17688      67697473 
GAS LISTING /tmp/ccrWPnlb.s 			page 422


 17688      00
 17689              	.LASF460:
 17690 0d36 66696C65 		.string	"file"
 17690      00
 17691              	.LASF99:
 17692 0d3b 5F535F6C 		.string	"_S_left"
 17692      65667400 
 17693              	.LASF299:
 17694 0d43 77637374 		.string	"wcstoull"
 17694      6F756C6C 
 17694      00
 17695              	.LASF557:
 17696 0d4c 5F5F6378 		.string	"__cxa_atexit"
 17696      615F6174 
 17696      65786974 
 17696      00
 17697              	.LASF497:
 17698 0d59 74657374 		.string	"test_render_to_creation"
 17698      5F72656E 
 17698      6465725F 
 17698      746F5F63 
 17698      72656174 
 17699              	.LASF112:
 17700 0d71 5F535F69 		.string	"_S_ios_fmtflags_end"
 17700      6F735F66 
 17700      6D74666C 
 17700      6167735F 
 17700      656E6400 
 17701              	.LASF267:
 17702 0d85 776D656D 		.string	"wmemmove"
 17702      6D6F7665 
 17702      00
 17703              	.LASF209:
 17704 0d8e 66707574 		.string	"fputwc"
 17704      776300
 17705              	.LASF91:
 17706 0d95 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 17706      74313163 
 17706      6861725F 
 17706      74726169 
 17706      74734963 
 17707              	.LASF459:
 17708 0dbf 636F6E64 		.string	"condition"
 17708      6974696F 
 17708      6E00
 17709              	.LASF210:
 17710 0dc9 66707574 		.string	"fputws"
 17710      777300
 17711              	.LASF475:
 17712 0dd0 74657374 		.string	"test_add_point_with_stamp_topleft"
 17712      5F616464 
 17712      5F706F69 
 17712      6E745F77 
 17712      6974685F 
 17713              	.LASF124:
 17714 0df2 5F535F62 		.string	"_S_badbit"
 17714      61646269 
GAS LISTING /tmp/ccrWPnlb.s 			page 423


 17714      7400
 17715              	.LASF271:
 17716 0dfc 77637363 		.string	"wcschr"
 17716      687200
 17717              	.LASF448:
 17718 0e03 31356865 		.string	"15heatmap_stamp_t"
 17718      61746D61 
 17718      705F7374 
 17718      616D705F 
 17718      7400
 17719              	.LASF78:
 17720 0e15 66696E64 		.string	"find"
 17720      00
 17721              	.LASF119:
 17722 0e1a 5F535F6F 		.string	"_S_out"
 17722      757400
 17723              	.LASF408:
 17724 0e21 5F6E6578 		.string	"_next"
 17724      7400
 17725              	.LASF101:
 17726 0e27 5F535F72 		.string	"_S_right"
 17726      69676874 
 17726      00
 17727              	.LASF163:
 17728 0e30 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 17728      635F6F73 
 17728      74726561 
 17728      6D3C6368 
 17728      61722C20 
 17729              	.LASF110:
 17730 0e5d 5F535F62 		.string	"_S_basefield"
 17730      61736566 
 17730      69656C64 
 17730      00
 17731              	.LASF337:
 17732 0e6a 64656369 		.string	"decimal_point"
 17732      6D616C5F 
 17732      706F696E 
 17732      7400
 17733              	.LASF366:
 17734 0e78 5F41746F 		.string	"_Atomic_word"
 17734      6D69635F 
 17734      776F7264 
 17734      00
 17735              	.LASF321:
 17736 0e85 75696E74 		.string	"uint_least64_t"
 17736      5F6C6561 
 17736      73743634 
 17736      5F7400
 17737              	.LASF553:
 17738 0e94 6465636C 		.string	"decltype(nullptr)"
 17738      74797065 
 17738      286E756C 
 17738      6C707472 
 17738      2900
 17739              	.LASF455:
 17740 0ea6 74686973 		.string	"this"
GAS LISTING /tmp/ccrWPnlb.s 			page 424


 17740      00
 17741              	.LASF481:
 17742 0eab 74657374 		.string	"test_stamp_gen"
 17742      5F737461 
 17742      6D705F67 
 17742      656E00
 17743              	.LASF502:
 17744 0eba 5F5A3235 		.string	"_Z25test_render_to_saturatingv"
 17744      74657374 
 17744      5F72656E 
 17744      6465725F 
 17744      746F5F73 
 17745              	.LASF413:
 17746 0ed9 66636C6F 		.string	"fclose"
 17746      736500
 17747              	.LASF393:
 17748 0ee0 73747274 		.string	"strtoul"
 17748      6F756C00 
 17749              	.LASF158:
 17750 0ee8 6F70656E 		.string	"openmode"
 17750      6D6F6465 
 17750      00
 17751              	.LASF77:
 17752 0ef1 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 17752      74313163 
 17752      6861725F 
 17752      74726169 
 17752      74734963 
 17753              	.LASF87:
 17754 0f12 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 17754      74313163 
 17754      6861725F 
 17754      74726169 
 17754      74734963 
 17755              	.LASF215:
 17756 0f3a 5F5F7468 		.string	"__throw_bad_cast"
 17756      726F775F 
 17756      6261645F 
 17756      63617374 
 17756      00
 17757              	.LASF348:
 17758 0f4b 66726163 		.string	"frac_digits"
 17758      5F646967 
 17758      69747300 
 17759              	.LASF488:
 17760 0f57 3C6C616D 		.string	"<lambda(float)>"
 17760      62646128 
 17760      666C6F61 
 17760      74293E00 
 17761              	.LASF372:
 17762 0f67 6C646976 		.string	"ldiv_t"
 17762      5F7400
 17763              	.LASF547:
 17764 0f6e 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 17764      74313163 
 17764      6861725F 
 17764      74726169 
GAS LISTING /tmp/ccrWPnlb.s 			page 425


 17764      74734963 
 17765              	.LASF435:
 17766 0f8a 746D7066 		.string	"tmpfile"
 17766      696C6500 
 17767              	.LASF437:
 17768 0f92 756E6765 		.string	"ungetc"
 17768      746300
 17769              	.LASF395:
 17770 0f99 77637374 		.string	"wcstombs"
 17770      6F6D6273 
 17770      00
 17771              	.LASF186:
 17772 0fa2 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 17772      53743563 
 17772      74797065 
 17772      49634535 
 17772      77696465 
 17773              	.LASF323:
 17774 0fba 696E745F 		.string	"int_fast16_t"
 17774      66617374 
 17774      31365F74 
 17774      00
 17775              	.LASF224:
 17776 0fc7 73777363 		.string	"swscanf"
 17776      616E6600 
 17777              	.LASF294:
 17778 0fcf 5F5F6E75 		.string	"__numeric_traits_integer<short int>"
 17778      6D657269 
 17778      635F7472 
 17778      61697473 
 17778      5F696E74 
 17779              	.LASF253:
 17780 0ff3 7763736E 		.string	"wcsncpy"
 17780      63707900 
 17781              	.LASF106:
 17782 0ffb 5F535F73 		.string	"_S_skipws"
 17782      6B697077 
 17782      7300
 17783              	.LASF97:
 17784 1005 5F535F68 		.string	"_S_hex"
 17784      657800
 17785              	.LASF412:
 17786 100c 636C6561 		.string	"clearerr"
 17786      72657272 
 17786      00
 17787              	.LASF352:
 17788 1015 6E5F7365 		.string	"n_sep_by_space"
 17788      705F6279 
 17788      5F737061 
 17788      636500
 17789              	.LASF409:
 17790 1024 5F736275 		.string	"_sbuf"
 17790      6600
 17791              	.LASF546:
 17792 102a 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 17792      74313163 
 17792      6861725F 
GAS LISTING /tmp/ccrWPnlb.s 			page 426


 17792      74726169 
 17792      74734963 
 17793              	.LASF306:
 17794 104d 696E7438 		.string	"int8_t"
 17794      5F7400
 17795              	.LASF11:
 17796 1054 5F494F5F 		.string	"_IO_save_end"
 17796      73617665 
 17796      5F656E64 
 17796      00
 17797              	.LASF269:
 17798 1061 77707269 		.string	"wprintf"
 17798      6E746600 
 17799              	.LASF240:
 17800 1069 746D5F6D 		.string	"tm_min"
 17800      696E00
 17801              	.LASF507:
 17802 1070 70696563 		.string	"piecewise_construct"
 17802      65776973 
 17802      655F636F 
 17802      6E737472 
 17802      75637400 
 17803              	.LASF69:
 17804 1084 63686172 		.string	"char_traits<char>"
 17804      5F747261 
 17804      6974733C 
 17804      63686172 
 17804      3E00
 17805              	.LASF327:
 17806 1096 75696E74 		.string	"uint_fast16_t"
 17806      5F666173 
 17806      7431365F 
 17806      7400
 17807              	.LASF316:
 17808 10a4 696E745F 		.string	"int_least32_t"
 17808      6C656173 
 17808      7433325F 
 17808      7400
 17809              	.LASF390:
 17810 10b2 7372616E 		.string	"srand"
 17810      6400
 17811              	.LASF349:
 17812 10b8 705F6373 		.string	"p_cs_precedes"
 17812      5F707265 
 17812      63656465 
 17812      7300
 17813              	.LASF234:
 17814 10c6 77637363 		.string	"wcscmp"
 17814      6D7000
 17815              	.LASF509:
 17816 10cd 7374646F 		.string	"stdout"
 17816      757400
 17817              	.LASF36:
 17818 10d4 66705F6F 		.string	"fp_offset"
 17818      66667365 
 17818      7400
 17819              	.LASF220:
GAS LISTING /tmp/ccrWPnlb.s 			page 427


 17820 10de 6D627372 		.string	"mbsrtowcs"
 17820      746F7763 
 17820      7300
 17821              	.LASF62:
 17822 10e8 5F4D5F67 		.string	"_M_get"
 17822      657400
 17823              	.LASF344:
 17824 10ef 6D6F6E5F 		.string	"mon_grouping"
 17824      67726F75 
 17824      70696E67 
 17824      00
 17825              	.LASF35:
 17826 10fc 67705F6F 		.string	"gp_offset"
 17826      66667365 
 17826      7400
 17827              	.LASF417:
 17828 1106 66676574 		.string	"fgetc"
 17828      6300
 17829              	.LASF80:
 17830 110c 6D6F7665 		.string	"move"
 17830      00
 17831              	.LASF335:
 17832 1111 63686172 		.string	"char32_t"
 17832      33325F74 
 17832      00
 17833              	.LASF204:
 17834 111a 73747265 		.string	"streamsize"
 17834      616D7369 
 17834      7A6500
 17835              	.LASF292:
 17836 1125 5F5F6E75 		.string	"__numeric_traits_integer<long unsigned int>"
 17836      6D657269 
 17836      635F7472 
 17836      61697473 
 17836      5F696E74 
 17837              	.LASF246:
 17838 1151 746D5F79 		.string	"tm_yday"
 17838      64617900 
 17839              	.LASF219:
 17840 1159 6D627369 		.string	"mbsinit"
 17840      6E697400 
 17841              	.LASF32:
 17842 1161 73697A65 		.string	"sizetype"
 17842      74797065 
 17842      00
 17843              	.LASF61:
 17844 116a 7E657863 		.string	"~exception_ptr"
 17844      65707469 
 17844      6F6E5F70 
 17844      747200
 17845              	.LASF394:
 17846 1179 73797374 		.string	"system"
 17846      656D00
 17847              	.LASF307:
 17848 1180 696E7431 		.string	"int16_t"
 17848      365F7400 
 17849              	.LASF34:
GAS LISTING /tmp/ccrWPnlb.s 			page 428


 17850 1188 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 17850      64656620 
 17850      5F5F7661 
 17850      5F6C6973 
 17850      745F7461 
 17851              	.LASF50:
 17852 11ac 73686F72 		.string	"short unsigned int"
 17852      7420756E 
 17852      7369676E 
 17852      65642069 
 17852      6E7400
 17853              	.LASF473:
 17854 11bf 74657374 		.string	"test_add_point_with_stamp_center"
 17854      5F616464 
 17854      5F706F69 
 17854      6E745F77 
 17854      6974685F 
 17855              	.LASF303:
 17856 11e0 7369676E 		.string	"signed char"
 17856      65642063 
 17856      68617200 
 17857              	.LASF197:
 17858 11ec 6F737472 		.string	"ostream"
 17858      65616D00 
 17859              	.LASF157:
 17860 11f4 676F6F64 		.string	"goodbit"
 17860      62697400 
 17861              	.LASF93:
 17862 11fc 70747264 		.string	"ptrdiff_t"
 17862      6966665F 
 17862      7400
 17863              	.LASF159:
 17864 1206 62696E61 		.string	"binary"
 17864      727900
 17865              	.LASF223:
 17866 120d 73777072 		.string	"swprintf"
 17866      696E7466 
 17866      00
 17867              	.LASF245:
 17868 1216 746D5F77 		.string	"tm_wday"
 17868      64617900 
 17869              	.LASF365:
 17870 121e 5F5F6F66 		.string	"__off64_t"
 17870      6636345F 
 17870      7400
 17871              	.LASF236:
 17872 1228 77637363 		.string	"wcscpy"
 17872      707900
 17873              	.LASF208:
 17874 122f 77636861 		.string	"wchar_t"
 17874      725F7400 
 17875              	.LASF228:
 17876 1237 76737770 		.string	"vswprintf"
 17876      72696E74 
 17876      6600
 17877              	.LASF221:
 17878 1241 70757477 		.string	"putwc"
GAS LISTING /tmp/ccrWPnlb.s 			page 429


 17878      6300
 17879              	.LASF3:
 17880 1247 5F494F5F 		.string	"_IO_read_base"
 17880      72656164 
 17880      5F626173 
 17880      6500
 17881              	.LASF176:
 17882 1255 77696465 		.string	"widen"
 17882      6E00
 17883              	.LASF21:
 17884 125b 5F6F6666 		.string	"_offset"
 17884      73657400 
 17885              	.LASF8:
 17886 1263 5F494F5F 		.string	"_IO_buf_end"
 17886      6275665F 
 17886      656E6400 
 17887              	.LASF491:
 17888 126f 6F706572 		.string	"operator()"
 17888      61746F72 
 17888      282900
 17889              	.LASF385:
 17890 127a 6D627374 		.string	"mbstowcs"
 17890      6F776373 
 17890      00
 17891              	.LASF498:
 17892 1283 5F5A3233 		.string	"_Z23test_render_to_creationv"
 17892      74657374 
 17892      5F72656E 
 17892      6465725F 
 17892      746F5F63 
 17893              	.LASF49:
 17894 12a0 6D627374 		.string	"mbstate_t"
 17894      6174655F 
 17894      7400
 17895              	.LASF354:
 17896 12aa 6E5F7369 		.string	"n_sign_posn"
 17896      676E5F70 
 17896      6F736E00 
 17897              	.LASF512:
 17898 12b6 675F3378 		.string	"g_3x3_stamp"
 17898      335F7374 
 17898      616D7000 
 17899              	.LASF254:
 17900 12c2 77637372 		.string	"wcsrtombs"
 17900      746F6D62 
 17900      7300
 17901              	.LASF406:
 17902 12cc 5F475F66 		.string	"_G_fpos_t"
 17902      706F735F 
 17902      7400
 17903              	.LASF118:
 17904 12d6 5F535F69 		.string	"_S_in"
 17904      6E00
 17905              	.LASF81:
 17906 12dc 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 17906      74313163 
 17906      6861725F 
GAS LISTING /tmp/ccrWPnlb.s 			page 430


 17906      74726169 
 17906      74734963 
 17907              	.LASF55:
 17908 12fe 5F4D5F72 		.string	"_M_release"
 17908      656C6561 
 17908      736500
 17909              	.LASF27:
 17910 1309 5F6D6F64 		.string	"_mode"
 17910      6500
 17911              	.LASF4:
 17912 130f 5F494F5F 		.string	"_IO_write_base"
 17912      77726974 
 17912      655F6261 
 17912      736500
 17913              	.LASF43:
 17914 131e 5F5F7763 		.string	"__wch"
 17914      6800
 17915              	.LASF85:
 17916 1324 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 17916      74313163 
 17916      6861725F 
 17916      74726169 
 17916      74734963 
 17917              	.LASF515:
 17918 1346 5F5F6473 		.string	"__dso_handle"
 17918      6F5F6861 
 17918      6E646C65 
 17918      00
 17919              	.LASF281:
 17920 1353 5F5F6D61 		.string	"__max"
 17920      7800
 17921              	.LASF165:
 17922 1359 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 17922      6F6C7345 
 17922      50465253 
 17922      6F535F45 
 17922      00
 17923              	.LASF229:
 17924 136a 76737773 		.string	"vswscanf"
 17924      63616E66 
 17924      00
 17925              	.LASF430:
 17926 1373 72656D6F 		.string	"remove"
 17926      766500
 17927              	.LASF478:
 17928 137a 5F5A3334 		.string	"_Z34test_add_point_with_stamp_botrightv"
 17928      74657374 
 17928      5F616464 
 17928      5F706F69 
 17928      6E745F77 
 17929              	.LASF243:
 17930 13a2 746D5F6D 		.string	"tm_mon"
 17930      6F6E00
 17931              	.LASF126:
 17932 13a9 5F535F66 		.string	"_S_failbit"
 17932      61696C62 
 17932      697400
GAS LISTING /tmp/ccrWPnlb.s 			page 431


 17933              	.LASF82:
 17934 13b4 636F7079 		.string	"copy"
 17934      00
 17935              	.LASF90:
 17936 13b9 65715F69 		.string	"eq_int_type"
 17936      6E745F74 
 17936      79706500 
 17937              	.LASF183:
 17938 13c5 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 17938      53743962 
 17938      61736963 
 17938      5F696F73 
 17938      49635374 
 17939              	.LASF66:
 17940 13f5 5F5F6378 		.string	"__cxa_exception_type"
 17940      615F6578 
 17940      63657074 
 17940      696F6E5F 
 17940      74797065 
 17941              	.LASF536:
 17942 140a 68656174 		.string	"heatmap_render_to"
 17942      6D61705F 
 17942      72656E64 
 17942      65725F74 
 17942      6F00
 17943              	.LASF549:
 17944 141c 646F5F77 		.string	"do_widen"
 17944      6964656E 
 17944      00
 17945              	.LASF261:
 17946 1425 6C6F6E67 		.string	"long int"
 17946      20696E74 
 17946      00
 17947              	.LASF418:
 17948 142e 66676574 		.string	"fgetpos"
 17948      706F7300 
 17949              	.LASF230:
 17950 1436 76777072 		.string	"vwprintf"
 17950      696E7466 
 17950      00
 17951              	.LASF88:
 17952 143f 746F5F69 		.string	"to_int_type"
 17952      6E745F74 
 17952      79706500 
 17953              	.LASF407:
 17954 144b 5F494F5F 		.string	"_IO_marker"
 17954      6D61726B 
 17954      657200
 17955              	.LASF359:
 17956 1456 696E745F 		.string	"int_p_sign_posn"
 17956      705F7369 
 17956      676E5F70 
 17956      6F736E00 
 17957              	.LASF108:
 17958 1466 5F535F75 		.string	"_S_uppercase"
 17958      70706572 
 17958      63617365 
GAS LISTING /tmp/ccrWPnlb.s 			page 432


 17958      00
 17959              	.LASF244:
 17960 1473 746D5F79 		.string	"tm_year"
 17960      65617200 
 17961              	.LASF426:
 17962 147b 67657463 		.string	"getc"
 17962      00
 17963              	.LASF270:
 17964 1480 77736361 		.string	"wscanf"
 17964      6E6600
 17965              	.LASF474:
 17966 1487 5F5A3332 		.string	"_Z32test_add_point_with_stamp_centerv"
 17966      74657374 
 17966      5F616464 
 17966      5F706F69 
 17966      6E745F77 
 17967              	.LASF428:
 17968 14ad 67657473 		.string	"gets"
 17968      00
 17969              	.LASF122:
 17970 14b2 5F496F73 		.string	"_Ios_Iostate"
 17970      5F496F73 
 17970      74617465 
 17970      00
 17971              	.LASF67:
 17972 14bf 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 17972      53743135 
 17972      5F5F6578 
 17972      63657074 
 17972      696F6E5F 
 17973              	.LASF293:
 17974 14fe 5F5F6E75 		.string	"__numeric_traits_integer<char>"
 17974      6D657269 
 17974      635F7472 
 17974      61697473 
 17974      5F696E74 
 17975              	.LASF330:
 17976 151d 696E7470 		.string	"intptr_t"
 17976      74725F74 
 17976      00
 17977              	.LASF48:
 17978 1526 5F5F6D62 		.string	"__mbstate_t"
 17978      73746174 
 17978      655F7400 
 17979              	.LASF342:
 17980 1532 6D6F6E5F 		.string	"mon_decimal_point"
 17980      64656369 
 17980      6D616C5F 
 17980      706F696E 
 17980      7400
 17981              	.LASF312:
 17982 1544 75696E74 		.string	"uint32_t"
 17982      33325F74 
 17982      00
 17983              	.LASF510:
 17984 154d 68656174 		.string	"heatmap_cs_b2w"
 17984      6D61705F 
GAS LISTING /tmp/ccrWPnlb.s 			page 433


 17984      63735F62 
 17984      327700
 17985              	.LASF188:
 17986 155c 5F547261 		.string	"_Traits"
 17986      69747300 
 17987              	.LASF331:
 17988 1564 75696E74 		.string	"uintptr_t"
 17988      7074725F 
 17988      7400
 17989              	.LASF181:
 17990 156e 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 17990      635F696F 
 17990      733C6368 
 17990      61722C20 
 17990      7374643A 
 17991              	.LASF166:
 17992 1597 5F5F6F73 		.string	"__ostream_type"
 17992      74726561 
 17992      6D5F7479 
 17992      706500
 17993              	.LASF392:
 17994 15a6 73747274 		.string	"strtol"
 17994      6F6C00
 17995              	.LASF296:
 17996 15ad 6C6F6E67 		.string	"long double"
 17996      20646F75 
 17996      626C6500 
 17997              	.LASF350:
 17998 15b9 705F7365 		.string	"p_sep_by_space"
 17998      705F6279 
 17998      5F737061 
 17998      636500
 17999              	.LASF41:
 18000 15c8 6C6F6E67 		.string	"long unsigned int"
 18000      20756E73 
 18000      69676E65 
 18000      6420696E 
 18000      7400
 18001              	.LASF76:
 18002 15da 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 18002      74313163 
 18002      6861725F 
 18002      74726169 
 18002      74734963 
 18003              	.LASF199:
 18004 1600 63657272 		.string	"cerr"
 18004      00
 18005              	.LASF436:
 18006 1605 746D706E 		.string	"tmpnam"
 18006      616D00
 18007              	.LASF438:
 18008 160c 77637479 		.string	"wctype_t"
 18008      70655F74 
 18008      00
 18009              	.LASF47:
 18010 1615 63686172 		.string	"char"
 18010      00
GAS LISTING /tmp/ccrWPnlb.s 			page 434


 18011              	.LASF295:
 18012 161a 77637374 		.string	"wcstold"
 18012      6F6C6400 
 18013              	.LASF483:
 18014 1622 74657374 		.string	"test_stamp_gen_nonlinear"
 18014      5F737461 
 18014      6D705F67 
 18014      656E5F6E 
 18014      6F6E6C69 
 18015              	.LASF198:
 18016 163b 636F7574 		.string	"cout"
 18016      00
 18017              	.LASF508:
 18018 1640 73746469 		.string	"stdin"
 18018      6E00
 18019              	.LASF403:
 18020 1646 395F475F 		.string	"9_G_fpos_t"
 18020      66706F73 
 18020      5F7400
 18021              	.LASF479:
 18022 1651 74657374 		.string	"test_add_point_with_stamp_outside"
 18022      5F616464 
 18022      5F706F69 
 18022      6E745F77 
 18022      6974685F 
 18023              	.LASF319:
 18024 1673 75696E74 		.string	"uint_least16_t"
 18024      5F6C6561 
 18024      73743136 
 18024      5F7400
 18025              	.LASF449:
 18026 1682 68656174 		.string	"heatmap_stamp_t"
 18026      6D61705F 
 18026      7374616D 
 18026      705F7400 
 18027              	.LASF121:
 18028 1692 5F535F69 		.string	"_S_ios_openmode_end"
 18028      6F735F6F 
 18028      70656E6D 
 18028      6F64655F 
 18028      656E6400 
 18029              	.LASF7:
 18030 16a6 5F494F5F 		.string	"_IO_buf_base"
 18030      6275665F 
 18030      62617365 
 18030      00
 18031              	.LASF162:
 18032 16b3 696F735F 		.string	"ios_base"
 18032      62617365 
 18032      00
 18033              	.LASF325:
 18034 16bc 696E745F 		.string	"int_fast64_t"
 18034      66617374 
 18034      36345F74 
 18034      00
 18035              	.LASF2:
 18036 16c9 5F494F5F 		.string	"_IO_read_end"
GAS LISTING /tmp/ccrWPnlb.s 			page 435


 18036      72656164 
 18036      5F656E64 
 18036      00
 18037              	.LASF33:
 18038 16d6 5F494F5F 		.string	"_IO_FILE"
 18038      46494C45 
 18038      00
 18039              	.LASF275:
 18040 16df 776D656D 		.string	"wmemchr"
 18040      63687200 
 18041              	.LASF556:
 18042 16e7 7374726C 		.string	"strlen"
 18042      656E00
 18043              	.LASF133:
 18044 16ee 5F535F72 		.string	"_S_refcount"
 18044      6566636F 
 18044      756E7400 
 18045              	.LASF241:
 18046 16fa 746D5F68 		.string	"tm_hour"
 18046      6F757200 
 18047              	.LASF535:
 18048 1702 68656174 		.string	"heatmap_stamp_gen_nonlinear"
 18048      6D61705F 
 18048      7374616D 
 18048      705F6765 
 18048      6E5F6E6F 
 18049              	.LASF57:
 18050 171e 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 18050      7431355F 
 18050      5F657863 
 18050      65707469 
 18050      6F6E5F70 
 18051              	.LASF398:
 18052 1752 61746F6C 		.string	"atoll"
 18052      6C00
 18053              	.LASF423:
 18054 1758 66736565 		.string	"fseek"
 18054      6B00
 18055              	.LASF280:
 18056 175e 5F5F6D69 		.string	"__min"
 18056      6E00
 18057              	.LASF534:
 18058 1764 68656174 		.string	"heatmap_stamp_free"
 18058      6D61705F 
 18058      7374616D 
 18058      705F6672 
 18058      656500
 18059              	.LASF329:
 18060 1777 75696E74 		.string	"uint_fast64_t"
 18060      5F666173 
 18060      7436345F 
 18060      7400
 18061              	.LASF196:
 18062 1785 656E646C 		.string	"endl<char, std::char_traits<char> >"
 18062      3C636861 
 18062      722C2073 
 18062      74643A3A 
GAS LISTING /tmp/ccrWPnlb.s 			page 436


 18062      63686172 
 18063              	.LASF381:
 18064 17a9 62736561 		.string	"bsearch"
 18064      72636800 
 18065              	.LASF216:
 18066 17b1 67657477 		.string	"getwchar"
 18066      63686172 
 18066      00
 18067              	.LASF360:
 18068 17ba 696E745F 		.string	"int_n_sign_posn"
 18068      6E5F7369 
 18068      676E5F70 
 18068      6F736E00 
 18069              	.LASF140:
 18070 17ca 66697865 		.string	"fixed"
 18070      6400
 18071              	.LASF56:
 18072 17d0 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 18072      7431355F 
 18072      5F657863 
 18072      65707469 
 18072      6F6E5F70 
 18073              	.LASF242:
 18074 1802 746D5F6D 		.string	"tm_mday"
 18074      64617900 
 18075              	.LASF22:
 18076 180a 5F5F7061 		.string	"__pad1"
 18076      643100
 18077              	.LASF23:
 18078 1811 5F5F7061 		.string	"__pad2"
 18078      643200
 18079              	.LASF24:
 18080 1818 5F5F7061 		.string	"__pad3"
 18080      643300
 18081              	.LASF25:
 18082 181f 5F5F7061 		.string	"__pad4"
 18082      643400
 18083              	.LASF26:
 18084 1826 5F5F7061 		.string	"__pad5"
 18084      643500
 18085              	.LASF552:
 18086 182d 5F5F6E75 		.string	"__numeric_traits_integer<long int>"
 18086      6D657269 
 18086      635F7472 
 18086      61697473 
 18086      5F696E74 
 18087              	.LASF490:
 18088 1850 7E3C6C61 		.string	"~<lambda>"
 18088      6D626461 
 18088      3E00
 18089              	.LASF480:
 18090 185a 5F5A3333 		.string	"_Z33test_add_point_with_stamp_outsidev"
 18090      74657374 
 18090      5F616464 
 18090      5F706F69 
 18090      6E745F77 
 18091              	.LASF424:
GAS LISTING /tmp/ccrWPnlb.s 			page 437


 18092 1881 66736574 		.string	"fsetpos"
 18092      706F7300 
 18093              	.LASF65:
 18094 1889 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 18094      7431355F 
 18094      5F657863 
 18094      65707469 
 18094      6F6E5F70 
 18095              	.LASF12:
 18096 18b9 5F6D6172 		.string	"_markers"
 18096      6B657273 
 18096      00
 18097              	.LASF410:
 18098 18c2 5F706F73 		.string	"_pos"
 18098      00
 18099              	.LASF309:
 18100 18c7 696E7436 		.string	"int64_t"
 18100      345F7400 
 18101              	.LASF160:
 18102 18cf 7472756E 		.string	"trunc"
 18102      6300
 18103              	.LASF318:
 18104 18d5 75696E74 		.string	"uint_least8_t"
 18104      5F6C6561 
 18104      7374385F 
 18104      7400
 18105              	.LASF383:
 18106 18e3 6C646976 		.string	"ldiv"
 18106      00
 18107              	.LASF156:
 18108 18e8 6661696C 		.string	"failbit"
 18108      62697400 
 18109              	.LASF257:
 18110 18f0 646F7562 		.string	"double"
 18110      6C6500
 18111              	.LASF539:
 18112 18f7 474E5520 		.string	"GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g -O3 -std=c++11 -fopenmp -fPIC"
 18112      432B2B20 
 18112      342E392E 
 18112      32202D6D 
 18112      74756E65 
 18113              	.LASF30:
 18114 1943 5F5F4649 		.string	"__FILE"
 18114      4C4500
 18115              	.LASF203:
 18116 194a 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
 18116      31365F5F 
 18116      6F737472 
 18116      65616D5F 
 18116      696E7365 
 18117              	.LASF363:
 18118 1998 5F5F696E 		.string	"__int32_t"
 18118      7433325F 
 18118      7400
 18119              	.LASF182:
 18120 19a2 72647374 		.string	"rdstate"
 18120      61746500 
GAS LISTING /tmp/ccrWPnlb.s 			page 438


 18121              	.LASF387:
 18122 19aa 71736F72 		.string	"qsort"
 18122      7400
 18123              	.LASF265:
 18124 19b0 776D656D 		.string	"wmemcmp"
 18124      636D7000 
 18125              	.LASF232:
 18126 19b8 77637274 		.string	"wcrtomb"
 18126      6F6D6200 
 18127              	.LASF193:
 18128 19c0 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 18128      65636B5F 
 18128      66616365 
 18128      743C7374 
 18128      643A3A63 
 18129              	.LASF46:
 18130 19e1 5F5F7661 		.string	"__value"
 18130      6C756500 
 18131              	.LASF451:
 18132 19e9 636F6C6F 		.string	"colors"
 18132      727300
 18133              	.LASF171:
 18134 19f0 5F4D5F69 		.string	"_M_insert<long unsigned int>"
 18134      6E736572 
 18134      743C6C6F 
 18134      6E672075 
 18134      6E736967 
 18135              	.LASF551:
 18136 1a0d 5F5A5374 		.string	"_ZSt16__throw_bad_castv"
 18136      31365F5F 
 18136      7468726F 
 18136      775F6261 
 18136      645F6361 
 18137              	.LASF161:
 18138 1a25 7365656B 		.string	"seekdir"
 18138      64697200 
 18139              	.LASF142:
 18140 1a2d 6C656674 		.string	"left"
 18140      00
 18141              	.LASF345:
 18142 1a32 706F7369 		.string	"positive_sign"
 18142      74697665 
 18142      5F736967 
 18142      6E00
 18143              	.LASF434:
 18144 1a40 73657476 		.string	"setvbuf"
 18144      62756600 
 18145              	.LASF368:
 18146 1a48 35646976 		.string	"5div_t"
 18146      5F7400
 18147              	.LASF123:
 18148 1a4f 5F535F67 		.string	"_S_goodbit"
 18148      6F6F6462 
 18148      697400
 18149              	.LASF370:
 18150 1a5a 6469765F 		.string	"div_t"
 18150      7400
GAS LISTING /tmp/ccrWPnlb.s 			page 439


 18151              	.LASF290:
 18152 1a60 5F5F6E75 		.string	"__numeric_traits_floating<double>"
 18152      6D657269 
 18152      635F7472 
 18152      61697473 
 18152      5F666C6F 
 18153              	.LASF377:
 18154 1a82 61745F71 		.string	"at_quick_exit"
 18154      7569636B 
 18154      5F657869 
 18154      7400
 18155              	.LASF179:
 18156 1a90 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 18156      74313163 
 18156      6861725F 
 18156      74726169 
 18156      74734963 
 18157              	.LASF132:
 18158 1ab2 5F535F69 		.string	"_S_ios_seekdir_end"
 18158      6F735F73 
 18158      65656B64 
 18158      69725F65 
 18158      6E6400
 18159              	.LASF51:
 18160 1ac5 5F5F6578 		.string	"__exception_ptr"
 18160      63657074 
 18160      696F6E5F 
 18160      70747200 
 18161              	.LASF541:
 18162 1ad5 2F686F6D 		.string	"/home/hshu1/15618/project/15618fp/heatmap"
 18162      652F6873 
 18162      6875312F 
 18162      31353631 
 18162      382F7072 
 18163              	.LASF386:
 18164 1aff 6D62746F 		.string	"mbtowc"
 18164      776300
 18165              	.LASF516:
 18166 1b06 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE"
 18166      5F5F676E 
 18166      755F6378 
 18166      7832345F 
 18166      5F6E756D 
 18167              	.LASF300:
 18168 1b38 6C6F6E67 		.string	"long long unsigned int"
 18168      206C6F6E 
 18168      6720756E 
 18168      7369676E 
 18168      65642069 
 18169              	.LASF218:
 18170 1b4f 6D627274 		.string	"mbrtowc"
 18170      6F776300 
 18171              	.LASF17:
 18172 1b57 5F637572 		.string	"_cur_column"
 18172      5F636F6C 
 18172      756D6E00 
 18173              	.LASF266:
GAS LISTING /tmp/ccrWPnlb.s 			page 440


 18174 1b63 776D656D 		.string	"wmemcpy"
 18174      63707900 
 18175              	.LASF375:
 18176 1b6b 5F5F636F 		.string	"__compar_fn_t"
 18176      6D706172 
 18176      5F666E5F 
 18176      7400
 18177              	.LASF525:
 18178 1b79 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__minE"
 18178      5F5F676E 
 18178      755F6378 
 18178      7832345F 
 18178      5F6E756D 
 18179              	.LASF145:
 18180 1bab 73686F77 		.string	"showbase"
 18180      62617365 
 18180      00
 18181              	.LASF169:
 18182 1bb4 5F5A4E53 		.string	"_ZNSo5flushEv"
 18182      6F35666C 
 18182      75736845 
 18182      7600
 18183              	.LASF107:
 18184 1bc2 5F535F75 		.string	"_S_unitbuf"
 18184      6E697462 
 18184      756600
 18185              	.LASF120:
 18186 1bcd 5F535F74 		.string	"_S_trunc"
 18186      72756E63 
 18186      00
 18187              	.LASF89:
 18188 1bd6 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 18188      74313163 
 18188      6861725F 
 18188      74726169 
 18188      74734963 
 18189              	.LASF135:
 18190 1bfd 496E6974 		.string	"Init"
 18190      00
 18191              	.LASF138:
 18192 1c02 666D7466 		.string	"fmtflags"
 18192      6C616773 
 18192      00
 18193              	.LASF251:
 18194 1c0b 7763736E 		.string	"wcsncat"
 18194      63617400 
 18195              	.LASF420:
 18196 1c13 666F7065 		.string	"fopen"
 18196      6E00
 18197              	.LASF248:
 18198 1c19 746D5F67 		.string	"tm_gmtoff"
 18198      6D746F66 
 18198      6600
 18199              	.LASF529:
 18200 1c23 68656174 		.string	"heatmap_new"
 18200      6D61705F 
 18200      6E657700 
GAS LISTING /tmp/ccrWPnlb.s 			page 441


 18201              	.LASF523:
 18202 1c2f 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE"
 18202      5F5F676E 
 18202      755F6378 
 18202      7832345F 
 18202      5F6E756D 
 18203              	.LASF10:
 18204 1c61 5F494F5F 		.string	"_IO_backup_base"
 18204      6261636B 
 18204      75705F62 
 18204      61736500 
 18205              	.LASF533:
 18206 1c71 68656174 		.string	"heatmap_stamp_gen"
 18206      6D61705F 
 18206      7374616D 
 18206      705F6765 
 18206      6E00
 18207              	.LASF358:
 18208 1c83 696E745F 		.string	"int_n_sep_by_space"
 18208      6E5F7365 
 18208      705F6279 
 18208      5F737061 
 18208      636500
 18209              	.LASF1:
 18210 1c96 5F494F5F 		.string	"_IO_read_ptr"
 18210      72656164 
 18210      5F707472 
 18210      00
 18211              	.LASF477:
 18212 1ca3 74657374 		.string	"test_add_point_with_stamp_botright"
 18212      5F616464 
 18212      5F706F69 
 18212      6E745F77 
 18212      6974685F 
 18213              	.LASF544:
 18214 1cc6 74797065 		.string	"type_info"
 18214      5F696E66 
 18214      6F00
 18215              	.LASF141:
 18216 1cd0 696E7465 		.string	"internal"
 18216      726E616C 
 18216      00
 18217              	.LASF322:
 18218 1cd9 696E745F 		.string	"int_fast8_t"
 18218      66617374 
 18218      385F7400 
 18219              	.LASF382:
 18220 1ce5 67657465 		.string	"getenv"
 18220      6E7600
 18221              	.LASF206:
 18222 1cec 66676574 		.string	"fgetwc"
 18222      776300
 18223              	.LASF207:
 18224 1cf3 66676574 		.string	"fgetws"
 18224      777300
 18225              	.LASF389:
 18226 1cfa 72616E64 		.string	"rand"
GAS LISTING /tmp/ccrWPnlb.s 			page 442


 18226      00
 18227              	.LASF16:
 18228 1cff 5F6F6C64 		.string	"_old_offset"
 18228      5F6F6666 
 18228      73657400 
 18229              	.LASF235:
 18230 1d0b 77637363 		.string	"wcscoll"
 18230      6F6C6C00 
 18231              	.LASF439:
 18232 1d13 77637472 		.string	"wctrans_t"
 18232      616E735F 
 18232      7400
 18233              	.LASF353:
 18234 1d1d 705F7369 		.string	"p_sign_posn"
 18234      676E5F70 
 18234      6F736E00 
 18235              	.LASF518:
 18236 1d29 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E"
 18236      5F5F676E 
 18236      755F6378 
 18236      7832355F 
 18236      5F6E756D 
 18237              	.LASF194:
 18238 1d68 5F466163 		.string	"_Facet"
 18238      657400
 18239              	.LASF74:
 18240 1d6f 636F6D70 		.string	"compare"
 18240      61726500 
 18241              	.LASF453:
 18242 1d77 68656174 		.string	"heatmap_colorscheme_t"
 18242      6D61705F 
 18242      636F6C6F 
 18242      72736368 
 18242      656D655F 
 18243              	.LASF298:
 18244 1d8d 6C6F6E67 		.string	"long long int"
 18244      206C6F6E 
 18244      6720696E 
 18244      7400
 18245              	.LASF177:
 18246 1d9b 7461626C 		.string	"table_size"
 18246      655F7369 
 18246      7A6500
 18247              	.LASF15:
 18248 1da6 5F666C61 		.string	"_flags2"
 18248      67733200 
 18249              	.LASF513:
 18250 1dae 675F6661 		.string	"g_failed_tests"
 18250      696C6564 
 18250      5F746573 
 18250      747300
 18251              	.LASF129:
 18252 1dbd 5F535F62 		.string	"_S_beg"
 18252      656700
 18253              	.LASF155:
 18254 1dc4 656F6662 		.string	"eofbit"
 18254      697400
GAS LISTING /tmp/ccrWPnlb.s 			page 443


 18255              	.LASF427:
 18256 1dcb 67657463 		.string	"getchar"
 18256      68617200 
 18257              	.LASF469:
 18258 1dd3 68656174 		.string	"heatmaps_eq"
 18258      6D617073 
 18258      5F657100 
 18259              	.LASF109:
 18260 1ddf 5F535F61 		.string	"_S_adjustfield"
 18260      646A7573 
 18260      74666965 
 18260      6C6400
 18261              	.LASF225:
 18262 1dee 756E6765 		.string	"ungetwc"
 18262      74776300 
 18263              	.LASF315:
 18264 1df6 696E745F 		.string	"int_least16_t"
 18264      6C656173 
 18264      7431365F 
 18264      7400
 18265              	.LASF285:
 18266 1e04 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 18266      5F5F676E 
 18266      755F6378 
 18266      78336469 
 18266      76457878 
 18267              	.LASF351:
 18268 1e19 6E5F6373 		.string	"n_cs_precedes"
 18268      5F707265 
 18268      63656465 
 18268      7300
 18269              	.LASF128:
 18270 1e27 5F496F73 		.string	"_Ios_Seekdir"
 18270      5F536565 
 18270      6B646972 
 18270      00
 18271              	.LASF173:
 18272 1e34 5F436861 		.string	"_CharT"
 18272      725400
 18273              	.LASF462:
 18274 1e3b 68656174 		.string	"heatmap_eq"
 18274      6D61705F 
 18274      657100
 18275              	.LASF454:
 18276 1e46 65787065 		.string	"expected"
 18276      63746564 
 18276      00
 18277              	.LASF362:
 18278 1e4f 6C6F6361 		.string	"localeconv"
 18278      6C65636F 
 18278      6E7600
 18279              	.LASF164:
 18280 1e5a 6F706572 		.string	"operator<<"
 18280      61746F72 
 18280      3C3C00
 18281              	.LASF174:
 18282 1e65 5F56616C 		.string	"_ValueT"
GAS LISTING /tmp/ccrWPnlb.s 			page 444


 18282      75655400 
 18283              	.LASF334:
 18284 1e6d 63686172 		.string	"char16_t"
 18284      31365F74 
 18284      00
 18285              	.LASF400:
 18286 1e76 73747274 		.string	"strtoull"
 18286      6F756C6C 
 18286      00
 18287              	.LASF550:
 18288 1e7f 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE8do_widenEc"
 18288      53743563 
 18288      74797065 
 18288      49634538 
 18288      646F5F77 
 18289              	.LASF505:
 18290 1e9a 6D61696E 		.string	"main"
 18290      00
 18291              	.LASF111:
 18292 1e9f 5F535F66 		.string	"_S_floatfield"
 18292      6C6F6174 
 18292      6669656C 
 18292      6400
 18293              	.LASF113:
 18294 1ead 5F496F73 		.string	"_Ios_Fmtflags"
 18294      5F466D74 
 18294      666C6167 
 18294      7300
 18295              	.LASF153:
 18296 1ebb 666C6F61 		.string	"floatfield"
 18296      74666965 
 18296      6C6400
 18297              	.LASF291:
 18298 1ec6 5F5F6E75 		.string	"__numeric_traits_floating<long double>"
 18298      6D657269 
 18298      635F7472 
 18298      61697473 
 18298      5F666C6F 
 18299              	.LASF282:
 18300 1eed 5F5F6973 		.string	"__is_signed"
 18300      5F736967 
 18300      6E656400 
 18301              	.LASF39:
 18302 1ef9 756E7369 		.string	"unsigned int"
 18302      676E6564 
 18302      20696E74 
 18302      00
 18303              	.LASF53:
 18304 1f06 65786365 		.string	"exception_ptr"
 18304      7074696F 
 18304      6E5F7074 
 18304      7200
 18305              	.LASF416:
 18306 1f14 66666C75 		.string	"fflush"
 18306      736800
 18307              	.LASF326:
 18308 1f1b 75696E74 		.string	"uint_fast8_t"
GAS LISTING /tmp/ccrWPnlb.s 			page 445


 18308      5F666173 
 18308      74385F74 
 18308      00
 18309              	.LASF463:
 18310 1f28 616C6D6F 		.string	"almost_eq"
 18310      73745F65 
 18310      7100
 18311              	.LASF52:
 18312 1f32 5F4D5F65 		.string	"_M_exception_object"
 18312      78636570 
 18312      74696F6E 
 18312      5F6F626A 
 18312      65637400 
 18313              	.LASF117:
 18314 1f46 5F535F62 		.string	"_S_bin"
 18314      696E00
 18315              	.LASF304:
 18316 1f4d 73686F72 		.string	"short int"
 18316      7420696E 
 18316      7400
 18317              	.LASF355:
 18318 1f57 696E745F 		.string	"int_p_cs_precedes"
 18318      705F6373 
 18318      5F707265 
 18318      63656465 
 18318      7300
 18319              	.LASF18:
 18320 1f69 5F767461 		.string	"_vtable_offset"
 18320      626C655F 
 18320      6F666673 
 18320      657400
 18321              	.LASF548:
 18322 1f78 5F5A4E53 		.string	"_ZNSo3putEc"
 18322      6F337075 
 18322      74456300 
 18323              	.LASF202:
 18324 1f84 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 18324      74726561 
 18324      6D5F696E 
 18324      73657274 
 18324      3C636861 
 18325              	.LASF554:
 18326 1fb4 5F494F5F 		.string	"_IO_lock_t"
 18326      6C6F636B 
 18326      5F7400
 18327              	.LASF115:
 18328 1fbf 5F535F61 		.string	"_S_app"
 18328      707000
 18329              		.hidden	__dso_handle
 18330              		.ident	"GCC: (GNU) 4.9.2"
 18331              		.section	.note.GNU-stack,"",@progbits
