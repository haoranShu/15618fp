GAS LISTING /tmp/ccmMnd7l.s 			page 1


   1              		.file	"weighted_unweighted.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
   5              		.align 2
   6              	.LCOLDB0:
   7              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
   8              	.LHOTB0:
   9              		.align 2
  10              		.p2align 4,,15
  11              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  12              	.Ltext_cold0:
  13              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  14              		.weak	_ZNKSt5ctypeIcE8do_widenEc
  15              		.type	_ZNKSt5ctypeIcE8do_widenEc, @function
  16              	_ZNKSt5ctypeIcE8do_widenEc:
  17              	.LFB1390:
  18              		.file 1 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Locale support -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** /** @file bits/locale_facets.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
GAS LISTING /tmp/ccmMnd7l.s 			page 2


  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cctype>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ctype_base.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <iosfwd>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <streambuf>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/type_traits.h>
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** {
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #endif
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // generic definition.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _Tp>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Explicit specializations for required types.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // partially-specialized.
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     struct __pad
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static void
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
GAS LISTING /tmp/ccmMnd7l.s 			page 3


  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // only with __gsize != 0.
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _CharT*
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This template permits specializing facet output code for
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _OutIter
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	*__s = __ws[__j];
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions.
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT char_type;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
GAS LISTING /tmp/ccmMnd7l.s 			page 4


 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
GAS LISTING /tmp/ccmMnd7l.s 			page 5


 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
GAS LISTING /tmp/ccmMnd7l.s 			page 6


 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__c); }
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
GAS LISTING /tmp/ccmMnd7l.s 			page 7


 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the input.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
GAS LISTING /tmp/ccmMnd7l.s 			page 8


 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccmMnd7l.s 			page 9


 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
GAS LISTING /tmp/ccmMnd7l.s 			page 10


 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  is returned instead.
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
GAS LISTING /tmp/ccmMnd7l.s 			page 11


 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  streams for many I/O operations.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT			char_type;
GAS LISTING /tmp/ccmMnd7l.s 			page 12


 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id			id;
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    protected:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const;
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
GAS LISTING /tmp/ccmMnd7l.s 			page 13


 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  optimizations as well.
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef char		char_type;
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Data Members:
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool			_M_del;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_toupper;
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_tolower;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*		_M_table;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 						// 2 memcpy can't be used
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char>
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id        id;
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *               Else classic_table() is used.
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
GAS LISTING /tmp/ccmMnd7l.s 			page 14


 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    size_t __refs = 0);
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char classification.
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline bool
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char __c) const;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the char array.
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  which is(m,char) is true.
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
GAS LISTING /tmp/ccmMnd7l.s 			page 15


 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
GAS LISTING /tmp/ccmMnd7l.s 			page 16


 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  For an underived ctype<char>
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok == 1)
GAS LISTING /tmp/ccmMnd7l.s 			page 17


 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_widen_ok)
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_widen_init();
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__lo, __hi, __to);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char using the simplest
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  For an underived ctype<char> facet, @a c
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  will be returned unchanged.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(c).
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() must always return the same result for the same input.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_narrow[static_cast<unsigned char>(__c)])
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_narrow[static_cast<unsigned char>(__c)];
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	const char __t = do_narrow(__c, __dfault);
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__t != __dfault)
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow[static_cast<unsigned char>(__c)] = __t;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return __t;
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char array
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char in the input that cannot be
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  For an underived ctype<char>
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(lo, hi,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  dfault, to).  do_narrow() must always return the same result for the
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
GAS LISTING /tmp/ccmMnd7l.s 			page 18


 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     char __dfault, char* __to) const
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__builtin_expect(_M_narrow_ok == 1, true))
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_narrow_ok)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow_init();
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_narrow(__lo, __hi, __dfault, __to);
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // DR 695. ctype<char>::classic_table() not accessible.
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the mask table provided to the constructor, or
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// the default from classic_table() if none was provided.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       table() const throw()
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return _M_table; }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the C locale mask table.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const mask*
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       classic_table() throw();
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Destructor.
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function deletes table() if @a del was true in the
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  constructor.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to uppercase if
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
GAS LISTING /tmp/ccmMnd7l.s 			page 19


1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other chars remain untouched.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to lowercase if
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other chars remain untouched.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char using the simplest
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
GAS LISTING /tmp/ccmMnd7l.s 			page 20


1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const
  19              		.loc 1 1075 0
  20              		.cfi_startproc
  21              	.LVL0:
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return __c; }
  22              		.loc 1 1076 0
  23 0000 89F0     		movl	%esi, %eax
  24 0002 C3       		ret
  25              		.cfi_endproc
  26              	.LFE1390:
  27              		.size	_ZNKSt5ctypeIcE8do_widenEc, .-_ZNKSt5ctypeIcE8do_widenEc
  28              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  29              	.LCOLDE0:
  30              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  31              	.LHOTE0:
  32              		.section	.text.unlikely,"ax",@progbits
  33              	.LCOLDB1:
  34              		.text
  35              	.LHOTB1:
  36              		.p2align 4,,15
  37              		.globl	_Z10gimme_timev
  38              		.type	_Z10gimme_timev, @function
  39              	_Z10gimme_timev:
  40              	.LFB6033:
  41              		.file 2 "./benchs/timing.hpp"
   0:./benchs/timing.hpp **** /* heatmap - High performance heatmap creation in C.
   1:./benchs/timing.hpp ****  *
   2:./benchs/timing.hpp ****  * The MIT License (MIT)
   3:./benchs/timing.hpp ****  *
   4:./benchs/timing.hpp ****  * Copyright (c) 2013 Lucas Beyer
   5:./benchs/timing.hpp ****  *
   6:./benchs/timing.hpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:./benchs/timing.hpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:./benchs/timing.hpp ****  * the Software without restriction, including without limitation the rights to
   9:./benchs/timing.hpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:./benchs/timing.hpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:./benchs/timing.hpp ****  * subject to the following conditions:
  12:./benchs/timing.hpp ****  *
  13:./benchs/timing.hpp ****  * The above copyright notice and this permission notice shall be included in all
  14:./benchs/timing.hpp ****  * copies or substantial portions of the Software.
  15:./benchs/timing.hpp ****  *
  16:./benchs/timing.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:./benchs/timing.hpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:./benchs/timing.hpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:./benchs/timing.hpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:./benchs/timing.hpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:./benchs/timing.hpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:./benchs/timing.hpp ****  */
GAS LISTING /tmp/ccmMnd7l.s 			page 21


  23:./benchs/timing.hpp **** 
  24:./benchs/timing.hpp **** #pragma once
  25:./benchs/timing.hpp **** 
  26:./benchs/timing.hpp **** #include <algorithm>
  27:./benchs/timing.hpp **** #include <iostream>
  28:./benchs/timing.hpp **** #include <numeric>
  29:./benchs/timing.hpp **** #include <vector>
  30:./benchs/timing.hpp **** 
  31:./benchs/timing.hpp **** #ifdef _OPENMP
  32:./benchs/timing.hpp **** #include <omp.h>
  33:./benchs/timing.hpp **** double gimme_time() {
  42              		.loc 2 34 0
  43              		.cfi_startproc
  34:./benchs/timing.hpp ****     return omp_get_wtime();
  44              		.loc 2 35 0
  45 0000 E9000000 		jmp	omp_get_wtime@PLT
  45      00
  46              	.LVL1:
  47              		.cfi_endproc
  48              	.LFE6033:
  49              		.size	_Z10gimme_timev, .-_Z10gimme_timev
  50              		.section	.text.unlikely
  51              	.LCOLDE1:
  52              		.text
  53              	.LHOTE1:
  54              		.section	.text.unlikely._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm
  55              		.align 2
  56              	.LCOLDB2:
  57              		.section	.text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm429496729
  58              	.LHOTB2:
  59              		.align 2
  60              		.p2align 4,,15
  61              		.weak	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
  62              		.type	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
  63              	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26369286
  64              	.LFB6548:
  65              		.file 3 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // random number generation (out of line) -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccmMnd7l.s 			page 22


  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** /** @file bits/random.tcc
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #ifndef _RANDOM_TCC
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #define _RANDOM_TCC 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** {
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /*
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * (Further) implementation-space details.
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   namespace __detail
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // to avoid integer overflow.
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Preconditions:  a > 0, m > 0.
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Tp
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __calc(_Tp __x)
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__a == 1)
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x %= __m;
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __q = __m / __a;
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __r = __m % __a;
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__t1 >= __t2)
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __t1 - __t2;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __m - __t2 + __t1;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__c != 0)
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const _Tp __d = __m - __x;
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__d > __c)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x += __c;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __c - __d;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
GAS LISTING /tmp/ccmMnd7l.s 			page 23


  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __x;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _Tp>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _OutputIterator
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__result = *__first / __factor;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __result;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_END_NAMESPACE_VERSION
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   } // namespace __detail
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * ring identity is never a member of the convergence set.
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __s)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = 1;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR engine with a value generated by @p __q.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
GAS LISTING /tmp/ccmMnd7l.s 			page 24


 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       linear_congruential_engine<_UIntType, __a, __c, __m>::
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k0 = __m == 0 ? std::numeric_limits<_UIntType>::digits
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	                                : std::__lg(__m);
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k = (__k0 + 31) / 32;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__k + 3];
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __k + 3);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __factor = 1u;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __sum = 0u;
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __j = 0; __j < __k; ++__j)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __sum += __arr[__j + 3] * __factor;
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __factor *= __detail::_Shift<_UIntType, 32>::__value;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	seed(__sum);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const linear_congruential_engine<_UIntType,
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__a, __c, __m>& __lcr)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __lcr._M_x;
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __lcr._M_x;
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
GAS LISTING /tmp/ccmMnd7l.s 			page 25


 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::word_size;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::state_size;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::shift_size;
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::mask_bits;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::xor_mask;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_u;
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
GAS LISTING /tmp/ccmMnd7l.s 			page 26


 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_d;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_s;
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_b;
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_t;
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_c;
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_l;
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
GAS LISTING /tmp/ccmMnd7l.s 			page 27


 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****                                               initialization_multiplier;
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::default_seed;
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __sd)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[0] = __detail::__mod<_UIntType,
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __x = _M_x[__i - 1];
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = state_size;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			      __s, __b, __t, __c, __l, __f>::
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __upper_mask = (~_UIntType()) << __r;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__n * __k];
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __n * __k);
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	bool __zero = true;
GAS LISTING /tmp/ccmMnd7l.s 			page 28


 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < state_size; ++__i)
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__zero)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__i == 0)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if ((_M_x[0] & __upper_mask) != 0u)
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __zero = false;
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (_M_x[__i] != 0u)
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __zero = false;
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         if (__zero)
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = state_size;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_gen_rand(void)
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __upper_mask = (~_UIntType()) << __r;
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         {
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         }
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 29


 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard(unsigned long long __z)
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       while (__z > state_size - _M_p)
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __z -= state_size - _M_p;
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_gen_rand();
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p += __z;
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::result_type
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
  66              		.loc 3 453 0
  67              		.cfi_startproc
  68              	.LVL2:
  69              	.LBB3170:
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Reload the vector - cost is O(n) amortized over n calls.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_p >= state_size)
  70              		.loc 3 458 0
  71 0000 488B8780 		movq	4992(%rdi), %rax
  71      130000
  72 0007 483D6F02 		cmpq	$623, %rax
  72      0000
  73 000d 7749     		ja	.L4
  74 000f 488D5001 		leaq	1(%rax), %rdx
  75 0013 488B04C7 		movq	(%rdi,%rax,8), %rax
  76              	.L5:
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_gen_rand();
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate o(x(i)).
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __z = _M_x[_M_p++];
  77              		.loc 3 462 0
GAS LISTING /tmp/ccmMnd7l.s 			page 30


  78 0017 48899780 		movq	%rdx, 4992(%rdi)
  78      130000
  79              	.LVL3:
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __u) & __d;
  80              		.loc 3 463 0
  81 001e 4889C2   		movq	%rax, %rdx
  82 0021 48C1EA0B 		shrq	$11, %rdx
  83 0025 89D2     		movl	%edx, %edx
  84 0027 4831D0   		xorq	%rdx, %rax
  85              	.LVL4:
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __s) & __b;
  86              		.loc 3 464 0
  87 002a 4889C2   		movq	%rax, %rdx
  88 002d 48C1E207 		salq	$7, %rdx
  89 0031 81E28056 		andl	$2636928640, %edx
  89      2C9D
  90 0037 4831C2   		xorq	%rax, %rdx
  91              	.LVL5:
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __t) & __c;
  92              		.loc 3 465 0
  93 003a 4889D0   		movq	%rdx, %rax
  94 003d 48C1E00F 		salq	$15, %rax
  95 0041 250000C6 		andl	$4022730752, %eax
  95      EF
  96 0046 4831D0   		xorq	%rdx, %rax
  97              	.LVL6:
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __l);
  98              		.loc 3 466 0
  99 0049 4889C2   		movq	%rax, %rdx
 100 004c 48C1EA12 		shrq	$18, %rdx
 101              	.LVL7:
 102 0050 4831D0   		xorq	%rdx, %rax
 103              	.LVL8:
 104              	.LBE3170:
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __z;
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 105              		.loc 3 469 0
 106 0053 C3       		ret
 107              	.LVL9:
 108              		.p2align 4,,10
 109 0054 0F1F4000 		.p2align 3
 110              	.L4:
 111 0058 4C8B07   		movq	(%rdi), %r8
 112 005b 488D4F08 		leaq	8(%rdi), %rcx
 113 005f 488D9720 		leaq	1824(%rdi), %rdx
 113      070000
 114 0066 41BADFB0 		movl	$2567483615, %r10d
 114      0899
 115 006c 4531C9   		xorl	%r9d, %r9d
 116 006f 90       		.p2align 4,,10
 117              		.p2align 3
 118              	.L6:
 119              	.LBB3177:
 120              	.LBB3171:
 121              	.LBB3172:
 122              	.LBB3173:
GAS LISTING /tmp/ccmMnd7l.s 			page 31


 123              	.LBB3174:
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 124              		.loc 3 407 0
 125 0070 4C89C0   		movq	%r8, %rax
 126 0073 4C8B01   		movq	(%rcx), %r8
 127 0076 48250000 		andq	$-2147483648, %rax
 127      0080
 128 007c 4C89C6   		movq	%r8, %rsi
 129 007f 81E6FFFF 		andl	$2147483647, %esi
 129      FF7F
 130 0085 4809F0   		orq	%rsi, %rax
 131 0088 4C89CE   		movq	%r9, %rsi
 132 008b A801     		testb	$1, %al
 133 008d 490F45F2 		cmovne	%r10, %rsi
 134 0091 4833B160 		xorq	3168(%rcx), %rsi
 134      0C0000
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 135              		.loc 3 408 0
 136 0098 48D1E8   		shrq	%rax
 137 009b 4883C108 		addq	$8, %rcx
 138 009f 4831F0   		xorq	%rsi, %rax
 139 00a2 488941F0 		movq	%rax, -16(%rcx)
 140              	.LVL10:
 141              	.LBE3174:
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 142              		.loc 3 404 0
 143 00a6 4839D1   		cmpq	%rdx, %rcx
 144 00a9 75C5     		jne	.L6
 145 00ab 488BB718 		movq	1816(%rdi), %rsi
 145      070000
 146 00b2 4C8D9780 		leaq	4992(%rdi), %r10
 146      130000
 147 00b9 41B9DFB0 		movl	$2567483615, %r9d
 147      0899
 148 00bf 4531C0   		xorl	%r8d, %r8d
 149              		.p2align 4,,10
 150 00c2 660F1F44 		.p2align 3
 150      0000
 151              	.L7:
 152              	.LBE3173:
 153              	.LBB3175:
 154              	.LBB3176:
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 155              		.loc 3 415 0
 156 00c8 4889F0   		movq	%rsi, %rax
 157 00cb 488B32   		movq	(%rdx), %rsi
 158 00ce 48250000 		andq	$-2147483648, %rax
 158      0080
 159 00d4 4889F1   		movq	%rsi, %rcx
 160 00d7 81E1FFFF 		andl	$2147483647, %ecx
 160      FF7F
 161 00dd 4809C8   		orq	%rcx, %rax
 162 00e0 4C89C1   		movq	%r8, %rcx
 163 00e3 A801     		testb	$1, %al
 164 00e5 490F45C9 		cmovne	%r9, %rcx
 165 00e9 48338AE0 		xorq	-1824(%rdx), %rcx
 165      F8FFFF
GAS LISTING /tmp/ccmMnd7l.s 			page 32


 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 166              		.loc 3 416 0
 167 00f0 48D1E8   		shrq	%rax
 168 00f3 4883C208 		addq	$8, %rdx
 169 00f7 4831C8   		xorq	%rcx, %rax
 170 00fa 488942F0 		movq	%rax, -16(%rdx)
 171              	.LVL11:
 172              	.LBE3176:
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 173              		.loc 3 412 0
 174 00fe 4C39D2   		cmpq	%r10, %rdx
 175 0101 75C5     		jne	.L7
 176              	.LBE3175:
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 177              		.loc 3 421 0
 178 0103 488B07   		movq	(%rdi), %rax
 179 0106 488B9778 		movq	4984(%rdi), %rdx
 179      130000
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 180              		.loc 3 422 0
 181 010d BEDFB008 		movl	$2567483615, %esi
 181      99
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 182              		.loc 3 421 0
 183 0112 4889C1   		movq	%rax, %rcx
 184 0115 4881E200 		andq	$-2147483648, %rdx
 184      000080
 185 011c 81E1FFFF 		andl	$2147483647, %ecx
 185      FF7F
 186 0122 4809CA   		orq	%rcx, %rdx
 187              	.LVL12:
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 188              		.loc 3 422 0
 189 0125 4889D1   		movq	%rdx, %rcx
 190 0128 48D1E9   		shrq	%rcx
 191 012b 48338F60 		xorq	3168(%rdi), %rcx
 191      0C0000
 192 0132 83E201   		andl	$1, %edx
 193              	.LVL13:
 194 0135 480F45D6 		cmovne	%rsi, %rdx
 195 0139 4831CA   		xorq	%rcx, %rdx
 196 013c 48899778 		movq	%rdx, 4984(%rdi)
 196      130000
 197              	.LVL14:
 198 0143 BA010000 		movl	$1, %edx
 198      00
 199 0148 E9CAFEFF 		jmp	.L5
 199      FF
 200              	.LBE3172:
 201              	.LBE3171:
 202              	.LBE3177:
 203              		.cfi_endproc
 204              	.LFE6548:
 205              		.size	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
 206              		.section	.text.unlikely._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm
 207              	.LCOLDE2:
 208              		.section	.text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm429496729
GAS LISTING /tmp/ccmMnd7l.s 			page 33


 209              	.LHOTE2:
 210              		.section	.text.unlikely._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm6
 211              		.align 2
 212              	.LCOLDB3:
 213              		.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397E
 214              	.LHOTB3:
 215              		.align 2
 216              		.p2align 4,,15
 217              		.weak	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 218              		.type	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 219              	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 220              	.LFB6521:
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const mersenne_twister_engine<_UIntType, __w, __n, __m,
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_p;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       mersenne_twister_engine<_UIntType, __w, __n, __m,
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 34


 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::word_size;
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::short_lag;
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::long_lag;
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::default_seed;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __value)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__lcg(__value == 0u ? default_seed : __value);
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __n = (__w + 31) / 32;
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < long_lag; ++__i)
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __sum = 0u;
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __factor = 1u;
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  for (size_t __j = 0; __j < __n; ++__j)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __sum += __detail::__mod<uint_least32_t,
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       __detail::_Shift<uint_least32_t, 32>::__value>
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__lcg()) * __factor;
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __factor *= __detail::_Shift<_UIntType, 32>::__value;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__sum);
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       subtract_with_carry_engine<_UIntType, __w, __s, __r>::
GAS LISTING /tmp/ccmMnd7l.s 			page 35


 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__r * __k];
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __r * __k);
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < long_lag; ++__i)
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     result_type
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Derive short lag index from current index.
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       long __ps = _M_p - short_lag;
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__ps < 0)
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ps += long_lag;
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate new x(i) without overflow or division.
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // NB: Thanks to the requirements for _UIntType, _M_x[_M_p] + _M_carry
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // cannot overflow.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __xi;
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_x[__ps] >= _M_x[_M_p] + _M_carry)
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = _M_x[__ps] - _M_x[_M_p] - _M_carry;
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 0;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = (__detail::_Shift<_UIntType, __w>::__value
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  - _M_x[_M_p] - _M_carry + _M_x[__ps]);
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 1;
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[_M_p] = __xi;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Adjust current index to loop around in ring buffer.
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (++_M_p >= long_lag)
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __xi;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 36


 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const subtract_with_carry_engine<_UIntType,
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__w, __s, __r>& __x)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_carry << __space << __x._M_p;
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       subtract_with_carry_engine<_UIntType, __w, __s, __r>& __x)
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __istream_type;
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_carry;
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::block_size;
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::used_block;
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename discard_block_engine<_RandomNumberEngine,
GAS LISTING /tmp/ccmMnd7l.s 			page 37


 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   __p, __r>::result_type
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_n >= used_block)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_b.discard(block_size - _M_n);
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_n = 0;
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       ++_M_n;
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_b();
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const discard_block_engine<_RandomNumberEngine,
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __p, __r>& __x)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base() << __space << __x._M_n;
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       discard_block_engine<_RandomNumberEngine, __p, __r>& __x)
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b >> __x._M_n;
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
GAS LISTING /tmp/ccmMnd7l.s 			page 38


 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename _RandomNumberEngine::result_type _Eresult_type;
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _Eresult_type __r
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	= (_M_b.max() - _M_b.min() < std::numeric_limits<_Eresult_type>::max()
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   ? _M_b.max() - _M_b.min() + 1 : 0);
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __edig = std::numeric_limits<_Eresult_type>::digits;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __m = __r ? std::__lg(__r) : __edig;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename std::common_type<_Eresult_type, result_type>::type
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ctype;
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __cdig = std::numeric_limits<__ctype>::digits;
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       unsigned __n, __n0;
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __ctype __s0, __s1, __y0, __y1;
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < 2; ++__i)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n = (__w + __m - 1) / __m + __i;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n0 = __n - __w % __n;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const unsigned __w0 = __w / __n;  // __w0 <= __m
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s0 = 0;
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s1 = 0;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__w0 < __cdig)
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s0 = __ctype(1) << __w0;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s1 = __s0 << 1;
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y0 = 0;
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y1 = 0;
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__r)
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __y0 = __s0 * (__r / __s0);
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__s1)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y1 = __s1 * (__r / __s1);
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__r - __y0 <= __y0 / __n)
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		break;
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    break;
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __sum = 0;
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < __n0; ++__k)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y0 && __u >= __y0);
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s0 * __sum + (__s0 ? __u % __s0 : __u);
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = __n0; __k < __n; ++__k)
GAS LISTING /tmp/ccmMnd7l.s 			page 39


 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y1 && __u >= __y1);
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s1 * __sum + (__s1 ? __u % __s1 : __u);
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __sum;
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::table_size;
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename shuffle_order_engine<_RandomNumberEngine, __k>::result_type
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __j = __k * ((_M_y - _M_b.min())
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			  / (_M_b.max() - _M_b.min() + 1.0L));
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_y = _M_v[__j];
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_v[__j] = _M_b();
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_y;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base();
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << __x._M_v[__i];
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __space << __x._M_y;
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
GAS LISTING /tmp/ccmMnd7l.s 			page 40


 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b;
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_v[__i];
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_y;
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename uniform_int_distribution<_IntType>::result_type
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       uniform_int_distribution<_IntType>::
 221              		.loc 3 878 0
 222              		.cfi_startproc
 223              	.LVL15:
 224 0000 4157     		pushq	%r15
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 15, -16
 227 0002 4156     		pushq	%r14
 228              		.cfi_def_cfa_offset 24
 229              		.cfi_offset 14, -24
 230 0004 4889D0   		movq	%rdx, %rax
 231 0007 4155     		pushq	%r13
 232              		.cfi_def_cfa_offset 32
 233              		.cfi_offset 13, -32
 234 0009 4154     		pushq	%r12
 235              		.cfi_def_cfa_offset 40
 236              		.cfi_offset 12, -40
 237 000b 55       		pushq	%rbp
 238              		.cfi_def_cfa_offset 48
 239              		.cfi_offset 6, -48
 240 000c 53       		pushq	%rbx
 241              		.cfi_def_cfa_offset 56
 242              		.cfi_offset 3, -56
 243 000d 4889F3   		movq	%rsi, %rbx
 244 0010 4881EC98 		subq	$152, %rsp
 244      000000
 245              		.cfi_def_cfa_offset 208
 246              	.LBB3178:
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename _UniformRandomNumberGenerator::result_type
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Gresult_type;
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::make_unsigned<result_type>::type __utype;
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::common_type<_Gresult_type, __utype>::type
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __uctype;
GAS LISTING /tmp/ccmMnd7l.s 			page 41


 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmin = __urng.min();
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmax = __urng.max();
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngrange = __urngmax - __urngmin;
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urange
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  = __uctype(__param.b()) - __uctype(__param.a());
 247              		.loc 3 892 0
 248 0017 486300   		movslq	(%rax), %rax
 249              	.LBE3178:
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
 250              		.loc 3 878 0
 251 001a 48895424 		movq	%rdx, 112(%rsp)
 251      70
 252              	.LBB3333:
 253              		.loc 3 892 0
 254 001f 48635204 		movslq	4(%rdx), %rdx
 255              	.LVL16:
 256 0023 4829C2   		subq	%rax, %rdx
 257              	.LBB3179:
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__uctype __ret;
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 258              		.loc 3 896 0
 259 0026 B8FEFFFF 		movl	$4294967294, %eax
 259      FF
 260 002b 4839C2   		cmpq	%rax, %rdx
 261              	.LBE3179:
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 262              		.loc 3 892 0
 263 002e 48895424 		movq	%rdx, 72(%rsp)
 263      48
 264              	.LVL17:
 265              	.LBB3331:
 266              		.loc 3 896 0
 267 0033 7743     		ja	.L14
 268              	.LBB3180:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // downscaling
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 269              		.loc 3 899 0
 270 0035 4889D1   		movq	%rdx, %rcx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 271              		.loc 3 900 0
 272 0038 B0FF     		movb	$-1, %al
 273 003a 31D2     		xorl	%edx, %edx
 274              	.LVL18:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 275              		.loc 3 899 0
 276 003c 4883C101 		addq	$1, %rcx
 277              	.LVL19:
 278              		.loc 3 900 0
 279 0040 48F7F1   		divq	%rcx
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 280              		.loc 3 901 0
 281 0043 480FAFC8 		imulq	%rax, %rcx
 282              	.LVL20:
GAS LISTING /tmp/ccmMnd7l.s 			page 42


 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 283              		.loc 3 900 0
 284 0047 4989C4   		movq	%rax, %r12
 285              	.LVL21:
 286              		.loc 3 901 0
 287 004a 4989CD   		movq	%rcx, %r13
 288              	.LVL22:
 289              	.L15:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 290              		.loc 3 903 0 discriminator 1
 291 004d 4889DF   		movq	%rbx, %rdi
 292 0050 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 292      00
 293              	.LVL23:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 294              		.loc 3 902 0 discriminator 1
 295 0055 4939C5   		cmpq	%rax, %r13
 296 0058 76F3     		jbe	.L15
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret >= __past);
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 297              		.loc 3 905 0
 298 005a 31D2     		xorl	%edx, %edx
 299 005c 49F7F4   		divq	%r12
 300              	.LVL24:
 301              	.L16:
 302              	.LBE3180:
 303              	.LBE3331:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // upscaling
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    /*
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      Note that every value in [0, urange]
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      can be written uniquely as
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (urngrange + 1) * high + low
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      where
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      high in [0, urange / (urngrange + 1)]
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      and
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      low in [0, urngrange].
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __uctype __tmp; // wraparound control
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __uerngrange = __urngrange + 1;
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret > __urange || __ret < __tmp);
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
GAS LISTING /tmp/ccmMnd7l.s 			page 43


 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __uctype(__urng()) - __urngmin;
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __ret + __param.a();
 304              		.loc 3 937 0
 305 005f 488B5424 		movq	112(%rsp), %rdx
 305      70
 306 0064 0302     		addl	(%rdx), %eax
 307              	.LVL25:
 308              	.LBE3333:
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 309              		.loc 3 938 0
 310 0066 4881C498 		addq	$152, %rsp
 310      000000
 311              		.cfi_remember_state
 312              		.cfi_def_cfa_offset 56
 313 006d 5B       		popq	%rbx
 314              		.cfi_def_cfa_offset 48
 315              	.LVL26:
 316 006e 5D       		popq	%rbp
 317              		.cfi_def_cfa_offset 40
 318 006f 415C     		popq	%r12
 319              		.cfi_def_cfa_offset 32
 320 0071 415D     		popq	%r13
 321              		.cfi_def_cfa_offset 24
 322 0073 415E     		popq	%r14
 323              		.cfi_def_cfa_offset 16
 324 0075 415F     		popq	%r15
 325              		.cfi_def_cfa_offset 8
 326 0077 C3       		ret
 327              	.LVL27:
 328              	.L14:
 329              		.cfi_restore_state
 330              	.LBB3334:
 331              	.LBB3332:
 332              	.LBB3181:
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 333              		.loc 3 907 0
 334 0078 B8FFFFFF 		movl	$4294967295, %eax
 334      FF
 335 007d 4889D6   		movq	%rdx, %rsi
 336 0080 4839C2   		cmpq	%rax, %rdx
 337 0083 0F849B03 		je	.L17
 337      0000
 338 0089 4889F0   		movq	%rsi, %rax
 339 008c 4989FE   		movq	%rdi, %r14
 340 008f 4C8DBC24 		leaq	128(%rsp), %r15
 340      80000000 
 341 0097 48C1F83F 		sarq	$63, %rax
 342 009b 4889C1   		movq	%rax, %rcx
 343 009e 4889C7   		movq	%rax, %rdi
 344              	.LVL28:
 345 00a1 48894424 		movq	%rax, 104(%rsp)
 345      68
 346 00a6 48894424 		movq	%rax, 88(%rsp)
 346      58
 347 00ab 48894424 		movq	%rax, 80(%rsp)
 347      50
GAS LISTING /tmp/ccmMnd7l.s 			page 44


 348 00b0 48C1EF20 		shrq	$32, %rdi
 349 00b4 48894424 		movq	%rax, 96(%rsp)
 349      60
 350 00b9 48894424 		movq	%rax, 48(%rsp)
 350      30
 351 00be 4989FD   		movq	%rdi, %r13
 352 00c1 48894424 		movq	%rax, 32(%rsp)
 352      20
 353 00c6 48894424 		movq	%rax, 16(%rsp)
 353      10
 354 00cb 48894424 		movq	%rax, 56(%rsp)
 354      38
 355              	.LBB3182:
 356              	.LBB3183:
 357              	.LBB3184:
 358              	.LBB3185:
 359              	.LBB3186:
 360              	.LBB3187:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 361              		.loc 3 899 0
 362 00d0 4883C001 		addq	$1, %rax
 363 00d4 48894424 		movq	%rax, 120(%rsp)
 363      78
 364              	.LBE3187:
 365              	.LBB3188:
 366              	.LBB3189:
 367              	.LBB3190:
 368              	.LBB3191:
 369              	.LBB3192:
 370              	.LBB3193:
 371              	.LBB3194:
 372              	.LBB3195:
 373              	.LBB3196:
 374              	.LBB3197:
 375              	.LBB3198:
 376              	.LBB3199:
 377              	.LBB3200:
 378              	.LBB3201:
 379              	.LBB3202:
 380              	.LBB3203:
 381              	.LBB3204:
 382              	.LBB3205:
 383              	.LBB3206:
 384              	.LBB3207:
 385              	.LBB3208:
 386              	.LBB3209:
 387              	.LBB3210:
 388              	.LBB3211:
 389              	.LBB3212:
 390              	.LBB3213:
 391              	.LBB3214:
 392              	.LBB3215:
 393              	.LBB3216:
 394              	.LBB3217:
 395              	.LBB3218:
 396              	.LBB3219:
 397              	.LBB3220:
GAS LISTING /tmp/ccmMnd7l.s 			page 45


 398              	.LBB3221:
 399              	.LBB3222:
 400              	.LBB3223:
 401              	.LBB3224:
 402 00d9 4889C8   		movq	%rcx, %rax
 403 00dc 4883C001 		addq	$1, %rax
 404 00e0 48894424 		movq	%rax, 24(%rsp)
 404      18
 405              	.LBE3224:
 406              	.LBE3223:
 407              	.LBE3222:
 408              	.LBE3221:
 409              	.LBE3220:
 410              	.LBE3219:
 411              	.LBB3238:
 412 00e5 48894424 		movq	%rax, 40(%rsp)
 412      28
 413              	.LVL29:
 414              	.L69:
 415              	.LBE3238:
 416              	.LBE3218:
 417              	.LBE3217:
 418              	.LBE3216:
 419              	.LBE3215:
 420              	.LBE3214:
 421              	.LBE3213:
 422              	.LBE3212:
 423              	.LBE3211:
 424              	.LBE3210:
 425              	.LBE3209:
 426              	.LBE3208:
 427              	.LBE3207:
 428              	.LBE3206:
 429              	.LBE3205:
 430              	.LBE3204:
 431              	.LBE3203:
 432              	.LBE3202:
 433              	.LBE3201:
 434              	.LBE3200:
 435              	.LBE3199:
 436              	.LBE3198:
 437              	.LBE3197:
 438              	.LBE3196:
 439              	.LBE3195:
 440              	.LBE3194:
 441              	.LBE3193:
 442              	.LBE3192:
 443              	.LBE3191:
 444              	.LBE3190:
 445              	.LBE3189:
 446              	.LBE3188:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 447              		.loc 3 896 0
 448 00ea B8FEFFFF 		movl	$4294967294, %eax
 448      FF
 449 00ef 48394424 		cmpq	%rax, 104(%rsp)
 449      68
GAS LISTING /tmp/ccmMnd7l.s 			page 46


 450 00f4 7748     		ja	.L70
 451              	.LVL30:
 452              	.LBB3325:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 453              		.loc 3 900 0
 454 00f6 488B7424 		movq	120(%rsp), %rsi
 454      78
 455 00fb B0FF     		movb	$-1, %al
 456 00fd 31D2     		xorl	%edx, %edx
 457 00ff 48F7F6   		divq	%rsi
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 458              		.loc 3 901 0
 459 0102 480FAFF0 		imulq	%rax, %rsi
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 460              		.loc 3 900 0
 461 0106 4989C4   		movq	%rax, %r12
 462              	.LVL31:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 463              		.loc 3 901 0
 464 0109 4889F5   		movq	%rsi, %rbp
 465              	.LVL32:
 466              	.L19:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 467              		.loc 3 903 0
 468 010c 4889DF   		movq	%rbx, %rdi
 469 010f E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 469      00
 470              	.LVL33:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 471              		.loc 3 902 0
 472 0114 4839C5   		cmpq	%rax, %rbp
 473 0117 76F3     		jbe	.L19
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 474              		.loc 3 905 0
 475 0119 31D2     		xorl	%edx, %edx
 476 011b 49F7F4   		divq	%r12
 477              	.LVL34:
 478              	.L20:
 479              	.LBE3325:
 480              	.LBE3186:
 481              	.LBE3185:
 482              	.LBE3184:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 483              		.loc 3 928 0
 484 011e 48C1E020 		salq	$32, %rax
 485              	.LVL35:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 486              		.loc 3 930 0
 487 0122 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 488              		.loc 3 928 0
 489 0125 4889C5   		movq	%rax, %rbp
 490              	.LVL36:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 491              		.loc 3 930 0
 492 0128 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 492      00
GAS LISTING /tmp/ccmMnd7l.s 			page 47


 493              	.LVL37:
 494              	.LBE3183:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 495              		.loc 3 925 0
 496 012d 4801E8   		addq	%rbp, %rax
 497              	.LVL38:
 498 0130 72B8     		jc	.L69
 499 0132 483B4424 		cmpq	72(%rsp), %rax
 499      48
 500 0137 77B1     		ja	.L69
 501 0139 E921FFFF 		jmp	.L16
 501      FF
 502              	.LVL39:
 503              	.L70:
 504              	.LBB3330:
 505              	.LBB3329:
 506              	.LBB3328:
 507              	.LBB3327:
 508              	.LBB3326:
 509              	.LBB3324:
 510              	.LBB3322:
 511              	.LBB3320:
 512              	.LBB3318:
 513              	.LBB3316:
 514              	.LBB3313:
 515              	.LBB3310:
 516              	.LBB3307:
 517              	.LBB3304:
 518              	.LBB3301:
 519              	.LBB3297:
 520              	.LBB3294:
 521              	.LBB3291:
 522              	.LBB3288:
 523              	.LBB3285:
 524              	.LBB3281:
 525              	.LBB3278:
 526              	.LBB3275:
 527              	.LBB3272:
 528              	.LBB3269:
 529              	.LBB3265:
 530              	.LBB3262:
 531              	.LBB3259:
 532              	.LBB3256:
 533              	.LBB3253:
 534              	.LBB3249:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 535              		.loc 3 899 0
 536 013e 488B4424 		movq	32(%rsp), %rax
 536      20
 537 0143 4883C001 		addq	$1, %rax
 538 0147 48894424 		movq	%rax, 64(%rsp)
 538      40
 539              	.L68:
 540              	.LVL40:
 541              	.LBE3249:
 542              	.LBE3253:
 543              	.LBE3256:
GAS LISTING /tmp/ccmMnd7l.s 			page 48


 544              	.LBE3259:
 545              	.LBE3262:
 546              	.LBE3265:
 547              	.LBE3269:
 548              	.LBE3272:
 549              	.LBE3275:
 550              	.LBE3278:
 551              	.LBE3281:
 552              	.LBE3285:
 553              	.LBE3288:
 554              	.LBE3291:
 555              	.LBE3294:
 556              	.LBE3297:
 557              	.LBE3301:
 558              	.LBE3304:
 559              	.LBE3307:
 560              	.LBE3310:
 561              	.LBE3313:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 562              		.loc 3 896 0
 563 014c B8FEFFFF 		movl	$4294967294, %eax
 563      FF
 564 0151 48394424 		cmpq	%rax, 88(%rsp)
 564      58
 565 0156 7770     		ja	.L67
 566              	.LBB3314:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 567              		.loc 3 899 0
 568 0158 488B4424 		movq	88(%rsp), %rax
 568      58
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 569              		.loc 3 900 0
 570 015d 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 571              		.loc 3 899 0
 572 015f 488D6801 		leaq	1(%rax), %rbp
 573              	.LVL41:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 574              		.loc 3 900 0
 575 0163 B8FFFFFF 		movl	$4294967295, %eax
 575      FF
 576 0168 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 577              		.loc 3 901 0
 578 016b 480FAFE8 		imulq	%rax, %rbp
 579              	.LVL42:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 580              		.loc 3 900 0
 581 016f 4989C4   		movq	%rax, %r12
 582              	.LVL43:
 583              	.L23:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 584              		.loc 3 903 0
 585 0172 4889DF   		movq	%rbx, %rdi
 586 0175 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 586      00
 587              	.LVL44:
GAS LISTING /tmp/ccmMnd7l.s 			page 49


 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 588              		.loc 3 902 0
 589 017a 4839C5   		cmpq	%rax, %rbp
 590 017d 76F3     		jbe	.L23
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 591              		.loc 3 905 0
 592 017f 31D2     		xorl	%edx, %edx
 593 0181 49F7F4   		divq	%r12
 594              	.LVL45:
 595              	.L24:
 596              	.LBE3314:
 597              	.LBE3316:
 598              	.LBE3318:
 599              	.LBE3320:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 600              		.loc 3 928 0
 601 0184 48C1E020 		salq	$32, %rax
 602              	.LVL46:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 603              		.loc 3 930 0
 604 0188 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 605              		.loc 3 928 0
 606 018b 4889C5   		movq	%rax, %rbp
 607              	.LVL47:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 608              		.loc 3 930 0
 609 018e E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 609      00
 610              	.LVL48:
 611              	.LBE3322:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 612              		.loc 3 925 0
 613 0193 4801E8   		addq	%rbp, %rax
 614              	.LVL49:
 615 0196 72B4     		jc	.L68
 616 0198 483B4424 		cmpq	104(%rsp), %rax
 616      68
 617 019d 77AD     		ja	.L68
 618 019f E97AFFFF 		jmp	.L20
 618      FF
 619              	.LVL50:
 620              		.p2align 4,,10
 621 01a4 0F1F4000 		.p2align 3
 622              	.L79:
 623              	.LBB3323:
 624              	.LBB3321:
 625              	.LBB3319:
 626              	.LBB3317:
 627              	.LBB3315:
 628              	.LBB3311:
 629              	.LBB3308:
 630              	.LBB3305:
 631              	.LBB3302:
 632              	.LBB3298:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 633              		.loc 3 905 0
GAS LISTING /tmp/ccmMnd7l.s 			page 50


 634 01a8 31D2     		xorl	%edx, %edx
 635 01aa 49F7F4   		divq	%r12
 636              	.LVL51:
 637              	.L27:
 638              	.LBE3298:
 639              	.LBE3302:
 640              	.LBE3305:
 641              	.LBE3308:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 642              		.loc 3 928 0
 643 01ad 48C1E020 		salq	$32, %rax
 644              	.LVL52:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 645              		.loc 3 930 0
 646 01b1 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 647              		.loc 3 928 0
 648 01b4 4889C5   		movq	%rax, %rbp
 649              	.LVL53:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 650              		.loc 3 930 0
 651 01b7 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 651      00
 652              	.LVL54:
 653              	.LBE3311:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 654              		.loc 3 925 0
 655 01bc 4801E8   		addq	%rbp, %rax
 656              	.LVL55:
 657 01bf 7207     		jc	.L67
 658 01c1 483B4424 		cmpq	88(%rsp), %rax
 658      58
 659 01c6 76BC     		jbe	.L24
 660              	.LVL56:
 661              	.L67:
 662              	.LBB3312:
 663              	.LBB3309:
 664              	.LBB3306:
 665              	.LBB3303:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 666              		.loc 3 896 0
 667 01c8 B8FEFFFF 		movl	$4294967294, %eax
 667      FF
 668 01cd 48394424 		cmpq	%rax, 80(%rsp)
 668      50
 669 01d2 7749     		ja	.L66
 670              	.LBB3299:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 671              		.loc 3 899 0
 672 01d4 488B4424 		movq	80(%rsp), %rax
 672      50
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 673              		.loc 3 900 0
 674 01d9 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 675              		.loc 3 899 0
 676 01db 488D6801 		leaq	1(%rax), %rbp
GAS LISTING /tmp/ccmMnd7l.s 			page 51


 677              	.LVL57:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 678              		.loc 3 900 0
 679 01df B8FFFFFF 		movl	$4294967295, %eax
 679      FF
 680 01e4 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 681              		.loc 3 901 0
 682 01e7 480FAFE8 		imulq	%rax, %rbp
 683              	.LVL58:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 684              		.loc 3 900 0
 685 01eb 4989C4   		movq	%rax, %r12
 686              	.LVL59:
 687              	.L26:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 688              		.loc 3 903 0
 689 01ee 4889DF   		movq	%rbx, %rdi
 690 01f1 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 690      00
 691              	.LVL60:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 692              		.loc 3 902 0
 693 01f6 4839C5   		cmpq	%rax, %rbp
 694 01f9 76F3     		jbe	.L26
 695 01fb EBAB     		jmp	.L79
 696              	.LVL61:
 697              	.L80:
 698              	.LBE3299:
 699              	.LBB3300:
 700              	.LBB3295:
 701              	.LBB3292:
 702              	.LBB3289:
 703              	.LBB3286:
 704              	.LBB3282:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 705              		.loc 3 905 0
 706 01fd 31D2     		xorl	%edx, %edx
 707 01ff 49F7F4   		divq	%r12
 708              	.LVL62:
 709              	.L30:
 710              	.LBE3282:
 711              	.LBE3286:
 712              	.LBE3289:
 713              	.LBE3292:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 714              		.loc 3 928 0
 715 0202 48C1E020 		salq	$32, %rax
 716              	.LVL63:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 717              		.loc 3 930 0
 718 0206 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 719              		.loc 3 928 0
 720 0209 4889C5   		movq	%rax, %rbp
 721              	.LVL64:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
GAS LISTING /tmp/ccmMnd7l.s 			page 52


 722              		.loc 3 930 0
 723 020c E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 723      00
 724              	.LVL65:
 725              	.LBE3295:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 726              		.loc 3 925 0
 727 0211 4801E8   		addq	%rbp, %rax
 728              	.LVL66:
 729 0214 7207     		jc	.L66
 730 0216 48394424 		cmpq	%rax, 80(%rsp)
 730      50
 731 021b 7390     		jae	.L27
 732              	.LVL67:
 733              	.L66:
 734              	.LBB3296:
 735              	.LBB3293:
 736              	.LBB3290:
 737              	.LBB3287:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 738              		.loc 3 896 0
 739 021d B8FEFFFF 		movl	$4294967294, %eax
 739      FF
 740 0222 48394424 		cmpq	%rax, 96(%rsp)
 740      60
 741 0227 7749     		ja	.L65
 742              	.LBB3283:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 743              		.loc 3 899 0
 744 0229 488B4424 		movq	96(%rsp), %rax
 744      60
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 745              		.loc 3 900 0
 746 022e 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 747              		.loc 3 899 0
 748 0230 488D6801 		leaq	1(%rax), %rbp
 749              	.LVL68:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 750              		.loc 3 900 0
 751 0234 B8FFFFFF 		movl	$4294967295, %eax
 751      FF
 752 0239 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 753              		.loc 3 901 0
 754 023c 480FAFE8 		imulq	%rax, %rbp
 755              	.LVL69:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 756              		.loc 3 900 0
 757 0240 4989C4   		movq	%rax, %r12
 758              	.LVL70:
 759              	.L29:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 760              		.loc 3 903 0
 761 0243 4889DF   		movq	%rbx, %rdi
 762 0246 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 762      00
GAS LISTING /tmp/ccmMnd7l.s 			page 53


 763              	.LVL71:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 764              		.loc 3 902 0
 765 024b 4839C5   		cmpq	%rax, %rbp
 766 024e 76F3     		jbe	.L29
 767 0250 EBAB     		jmp	.L80
 768              	.LVL72:
 769              	.L81:
 770              	.LBE3283:
 771              	.LBB3284:
 772              	.LBB3279:
 773              	.LBB3276:
 774              	.LBB3273:
 775              	.LBB3270:
 776              	.LBB3266:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 777              		.loc 3 905 0
 778 0252 31D2     		xorl	%edx, %edx
 779 0254 49F7F4   		divq	%r12
 780              	.LVL73:
 781              	.L33:
 782              	.LBE3266:
 783              	.LBE3270:
 784              	.LBE3273:
 785              	.LBE3276:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 786              		.loc 3 928 0
 787 0257 48C1E020 		salq	$32, %rax
 788              	.LVL74:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 789              		.loc 3 930 0
 790 025b 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 791              		.loc 3 928 0
 792 025e 4889C5   		movq	%rax, %rbp
 793              	.LVL75:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 794              		.loc 3 930 0
 795 0261 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 795      00
 796              	.LVL76:
 797              	.LBE3279:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 798              		.loc 3 925 0
 799 0266 4801E8   		addq	%rbp, %rax
 800              	.LVL77:
 801 0269 7207     		jc	.L65
 802 026b 483B4424 		cmpq	96(%rsp), %rax
 802      60
 803 0270 7690     		jbe	.L30
 804              	.LVL78:
 805              	.L65:
 806              	.LBB3280:
 807              	.LBB3277:
 808              	.LBB3274:
 809              	.LBB3271:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
GAS LISTING /tmp/ccmMnd7l.s 			page 54


 810              		.loc 3 896 0
 811 0272 B8FEFFFF 		movl	$4294967294, %eax
 811      FF
 812 0277 48394424 		cmpq	%rax, 48(%rsp)
 812      30
 813 027c 7751     		ja	.L64
 814              	.LBB3267:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 815              		.loc 3 899 0
 816 027e 488B4424 		movq	48(%rsp), %rax
 816      30
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 817              		.loc 3 900 0
 818 0283 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 819              		.loc 3 899 0
 820 0285 488D6801 		leaq	1(%rax), %rbp
 821              	.LVL79:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 822              		.loc 3 900 0
 823 0289 B8FFFFFF 		movl	$4294967295, %eax
 823      FF
 824 028e 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 825              		.loc 3 901 0
 826 0291 480FAFE8 		imulq	%rax, %rbp
 827              	.LVL80:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 828              		.loc 3 900 0
 829 0295 4989C4   		movq	%rax, %r12
 830              	.LVL81:
 831 0298 0F1F8400 		.p2align 4,,10
 831      00000000 
 832              		.p2align 3
 833              	.L32:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 834              		.loc 3 903 0
 835 02a0 4889DF   		movq	%rbx, %rdi
 836 02a3 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 836      00
 837              	.LVL82:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 838              		.loc 3 902 0
 839 02a8 4839C5   		cmpq	%rax, %rbp
 840 02ab 76F3     		jbe	.L32
 841 02ad EBA3     		jmp	.L81
 842              	.LVL83:
 843              	.L82:
 844              	.LBE3267:
 845              	.LBB3268:
 846              	.LBB3263:
 847              	.LBB3260:
 848              	.LBB3257:
 849              	.LBB3254:
 850              	.LBB3250:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 851              		.loc 3 905 0
GAS LISTING /tmp/ccmMnd7l.s 			page 55


 852 02af 31D2     		xorl	%edx, %edx
 853 02b1 48F7F5   		divq	%rbp
 854              	.LVL84:
 855              	.L36:
 856              	.LBE3250:
 857              	.LBE3254:
 858              	.LBE3257:
 859              	.LBE3260:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 860              		.loc 3 928 0
 861 02b4 48C1E020 		salq	$32, %rax
 862              	.LVL85:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 863              		.loc 3 930 0
 864 02b8 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 865              		.loc 3 928 0
 866 02bb 4889C5   		movq	%rax, %rbp
 867              	.LVL86:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 868              		.loc 3 930 0
 869 02be E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 869      00
 870              	.LVL87:
 871              	.LBE3263:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 872              		.loc 3 925 0
 873 02c3 4801E8   		addq	%rbp, %rax
 874              	.LVL88:
 875 02c6 7207     		jc	.L64
 876 02c8 483B4424 		cmpq	48(%rsp), %rax
 876      30
 877 02cd 7688     		jbe	.L33
 878              	.LVL89:
 879              	.L64:
 880              	.LBB3264:
 881              	.LBB3261:
 882              	.LBB3258:
 883              	.LBB3255:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 884              		.loc 3 896 0
 885 02cf B8FEFFFF 		movl	$4294967294, %eax
 885      FF
 886 02d4 48394424 		cmpq	%rax, 32(%rsp)
 886      20
 887 02d9 772C     		ja	.L50
 888              	.LVL90:
 889              	.LBB3251:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 890              		.loc 3 900 0
 891 02db 488B4C24 		movq	64(%rsp), %rcx
 891      40
 892 02e0 B0FF     		movb	$-1, %al
 893 02e2 31D2     		xorl	%edx, %edx
 894 02e4 48F7F1   		divq	%rcx
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 895              		.loc 3 901 0
GAS LISTING /tmp/ccmMnd7l.s 			page 56


 896 02e7 4989CC   		movq	%rcx, %r12
 897 02ea 4C0FAFE0 		imulq	%rax, %r12
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 898              		.loc 3 900 0
 899 02ee 4889C5   		movq	%rax, %rbp
 900              	.LVL91:
 901              		.p2align 4,,10
 902 02f1 0F1F8000 		.p2align 3
 902      000000
 903              	.L35:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 904              		.loc 3 903 0
 905 02f8 4889DF   		movq	%rbx, %rdi
 906 02fb E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 906      00
 907              	.LVL92:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 908              		.loc 3 902 0
 909 0300 4939C4   		cmpq	%rax, %r12
 910 0303 76F3     		jbe	.L35
 911 0305 EBA8     		jmp	.L82
 912              	.LVL93:
 913              	.L50:
 914              	.LBE3251:
 915              	.LBB3252:
 916              	.LBB3247:
 917              	.LBB3245:
 918              	.LBB3243:
 919              	.LBB3241:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 920              		.loc 3 896 0
 921 0307 4C8B6424 		movq	56(%rsp), %r12
 921      38
 922 030c 48890424 		movq	%rax, (%rsp)
 923              	.L63:
 924              	.LVL94:
 925 0310 488B0C24 		movq	(%rsp), %rcx
 926 0314 48394C24 		cmpq	%rcx, 16(%rsp)
 926      10
 927 0319 7765     		ja	.L62
 928              	.L83:
 929              	.LVL95:
 930              	.LBB3239:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 931              		.loc 3 900 0
 932 031b 488B7424 		movq	40(%rsp), %rsi
 932      28
 933 0320 B8FFFFFF 		movl	$4294967295, %eax
 933      FF
 934 0325 31D2     		xorl	%edx, %edx
 935 0327 48F7F6   		divq	%rsi
 936 032a 48894424 		movq	%rax, 8(%rsp)
 936      08
 937              	.LVL96:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 938              		.loc 3 901 0
 939 032f 480FAFC6 		imulq	%rsi, %rax
GAS LISTING /tmp/ccmMnd7l.s 			page 57


 940              	.LVL97:
 941 0333 4889C5   		movq	%rax, %rbp
 942              	.LVL98:
 943 0336 662E0F1F 		.p2align 4,,10
 943      84000000 
 943      0000
 944              		.p2align 3
 945              	.L38:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 946              		.loc 3 903 0
 947 0340 4889DF   		movq	%rbx, %rdi
 948 0343 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 948      00
 949              	.LVL99:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 950              		.loc 3 902 0
 951 0348 4839C5   		cmpq	%rax, %rbp
 952 034b 76F3     		jbe	.L38
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 953              		.loc 3 905 0
 954 034d 31D2     		xorl	%edx, %edx
 955 034f 48F77424 		divq	8(%rsp)
 955      08
 956              	.LVL100:
 957              	.L39:
 958              	.LBE3239:
 959              	.LBE3241:
 960              	.LBE3243:
 961              	.LBE3245:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 962              		.loc 3 928 0
 963 0354 48C1E020 		salq	$32, %rax
 964              	.LVL101:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 965              		.loc 3 930 0
 966 0358 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 967              		.loc 3 928 0
 968 035b 4889C5   		movq	%rax, %rbp
 969              	.LVL102:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 970              		.loc 3 930 0
 971 035e E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 971      00
 972              	.LVL103:
 973              	.LBE3247:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 974              		.loc 3 925 0
 975 0363 4801E8   		addq	%rbp, %rax
 976              	.LVL104:
 977 0366 72A8     		jc	.L63
 978 0368 483B4424 		cmpq	32(%rsp), %rax
 978      20
 979 036d 0F8641FF 		jbe	.L36
 979      FFFF
 980              	.LBB3248:
 981              	.LBB3246:
GAS LISTING /tmp/ccmMnd7l.s 			page 58


 982              	.LBB3244:
 983              	.LBB3242:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 984              		.loc 3 896 0
 985 0373 488B0C24 		movq	(%rsp), %rcx
 986 0377 48394C24 		cmpq	%rcx, 16(%rsp)
 986      10
 987 037c 769D     		jbe	.L83
 988              	.LVL105:
 989 037e 6690     		.p2align 4,,10
 990              		.p2align 3
 991              	.L62:
 992              	.LBB3240:
 993              	.LBB3236:
 994              	.LBB3234:
 995              	.LBB3232:
 996              	.LBB3230:
 997 0380 4C3B2424 		cmpq	(%rsp), %r12
 998 0384 7762     		ja	.L61
 999              	.L84:
 1000              	.LVL106:
 1001              	.LBB3225:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 1002              		.loc 3 900 0
 1003 0386 488B4C24 		movq	24(%rsp), %rcx
 1003      18
 1004 038b B8FFFFFF 		movl	$4294967295, %eax
 1004      FF
 1005 0390 31D2     		xorl	%edx, %edx
 1006 0392 48F7F1   		divq	%rcx
 1007 0395 48894424 		movq	%rax, 8(%rsp)
 1007      08
 1008              	.LVL107:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 1009              		.loc 3 901 0
 1010 039a 480FAFC1 		imulq	%rcx, %rax
 1011              	.LVL108:
 1012 039e 4889C5   		movq	%rax, %rbp
 1013              	.LVL109:
 1014              		.p2align 4,,10
 1015 03a1 0F1F8000 		.p2align 3
 1015      000000
 1016              	.L41:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 1017              		.loc 3 903 0
 1018 03a8 4889DF   		movq	%rbx, %rdi
 1019 03ab E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1019      00
 1020              	.LVL110:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1021              		.loc 3 902 0
 1022 03b0 4839C5   		cmpq	%rax, %rbp
 1023 03b3 76F3     		jbe	.L41
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 1024              		.loc 3 905 0
 1025 03b5 31D2     		xorl	%edx, %edx
 1026 03b7 48F77424 		divq	8(%rsp)
GAS LISTING /tmp/ccmMnd7l.s 			page 59


 1026      08
 1027              	.LVL111:
 1028              	.L42:
 1029              	.LBE3225:
 1030              	.LBE3230:
 1031              	.LBE3232:
 1032              	.LBE3234:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1033              		.loc 3 928 0
 1034 03bc 48C1E020 		salq	$32, %rax
 1035              	.LVL112:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1036              		.loc 3 930 0
 1037 03c0 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1038              		.loc 3 928 0
 1039 03c3 4889C5   		movq	%rax, %rbp
 1040              	.LVL113:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1041              		.loc 3 930 0
 1042 03c6 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1042      00
 1043              	.LVL114:
 1044              	.LBE3236:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1045              		.loc 3 925 0
 1046 03cb 4801E8   		addq	%rbp, %rax
 1047              	.LVL115:
 1048 03ce 72B0     		jc	.L62
 1049 03d0 483B4424 		cmpq	16(%rsp), %rax
 1049      10
 1050 03d5 0F8679FF 		jbe	.L39
 1050      FFFF
 1051              	.LBB3237:
 1052              	.LBB3235:
 1053              	.LBB3233:
 1054              	.LBB3231:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 1055              		.loc 3 896 0
 1056 03db 4C3B2424 		cmpq	(%rsp), %r12
 1057 03df 76A5     		jbe	.L84
 1058              	.LVL116:
 1059              		.p2align 4,,10
 1060 03e1 0F1F8000 		.p2align 3
 1060      000000
 1061              	.L61:
 1062              	.LBB3226:
 1063              	.LBB3227:
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 1064              		.loc 3 929 0
 1065 03e8 4C89FA   		movq	%r15, %rdx
 1066 03eb 4889DE   		movq	%rbx, %rsi
 1067 03ee 4C89F7   		movq	%r14, %rdi
 1068              	.LBB3228:
 1069              	.LBB3229:
 1070              		.file 4 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // random number generation -*- C++ -*-
GAS LISTING /tmp/ccmMnd7l.s 			page 60


   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** /**
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  * @file bits/random.h
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  Do not attempt to use it directly. @headername{random}
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  */
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifndef _RANDOM_H
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #define _RANDOM_H 1
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #include <vector>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** {
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   // [26.4] Random number generation
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @defgroup random Random Number Generation
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup numerics
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A facility for generating random numbers on selected distributions.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A function template for converting the output of a (integral)
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * uniform random number generator to a floatng point result in the range
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * [0-1).
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RealType, size_t __bits,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _UniformRandomNumberGenerator>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     _RealType
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
GAS LISTING /tmp/ccmMnd7l.s 			page 61


  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_END_NAMESPACE_VERSION
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /*
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Implementation-space details.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   namespace __detail
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w,
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool = __w < static_cast<size_t>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = 0; };
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift<_UIntType, __w, true>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    /* assume long long no bigger than __int128 */
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= 128))>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 4>
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned int type; };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 3>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long type; };
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 2>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long long type; };
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_INT128
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 1>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned __int128 type; };
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
GAS LISTING /tmp/ccmMnd7l.s 			page 62


 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Schrage.
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x);
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Special cases:
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _Tp __res = __a * __x + __c;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  if (__m)
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __res;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline _Tp
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __mod(_Tp __x)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /* Determine whether number is a power of 2.  */
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp>
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline bool
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _Power_of_2(_Tp __x)
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return ((__x - 1) & __x) == 0;
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /*
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * An adaptor class for converting the output of any Generator into
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * the input for a specific Distribution.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Engine, typename _DInputType>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Adaptor
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "template argument not a floating point type");
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       public:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Adaptor(_Engine& __g)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_g(__g) { }
GAS LISTING /tmp/ccmMnd7l.s 			page 63


 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	min() const
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(0); }
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	max() const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(1); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	/*
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * Converts a value generated by the adapted random number generator
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * into a value in the input domain for the dependent random number
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * distribution.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 */
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator()()
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return std::generate_canonical<_DInputType,
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            std::numeric_limits<_DInputType>::digits,
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       private:
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Engine& _M_g;
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_END_NAMESPACE_VERSION
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   } // namespace __detail
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_generators Random Number Generators
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * These classes define objects which provide random or pseudorandom
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers, either from a discrete or a continuous interval.  The
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator supplied as a part of this library are
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * all uniform random number generators which provide a sequence of
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number uniformly distributed over their range.
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A number generator is a function object with an operator() that
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * takes zero arguments and returns a number.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A compliant random number generator must satisfy the following
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <tr><td>To be documented.</td></tr> </table>
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A model of a linear congruential random number generator.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A random number generator that produces pseudorandom numbers via
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * linear function:
GAS LISTING /tmp/ccmMnd7l.s 			page 64


 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * large enough to store values up to (__m-1). If the template parameter
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __m is 0, the modulus @p __m used is
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$1@f$.
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class linear_congruential_engine
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The multiplier. */
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type multiplier   = __a;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** An increment. */
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type increment    = __c;
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The modulus. */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type modulus      = __m;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 1u;
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine with seed @p __s.  The default seed value
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        is 1.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The initial seed value.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       linear_congruential_engine(result_type __s = default_seed)
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__s); }
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine seeded from the seed sequence @p __q.
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, linear_congruential_engine>::value>
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         linear_congruential_engine(_Sseq& __q)
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccmMnd7l.s 			page 65


 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine sequence to the seed @p __s.
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The new seed.
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s = default_seed);
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sequence using values from the seed sequence @p __q.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         typename std::enable_if<std::is_class<_Sseq>::value>::type
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __c == 0u ? 1u : 0u; }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __m - 1u; }
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()()
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return _M_x;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccmMnd7l.s 			page 66


 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two linear congruential random number generator
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A linear congruential random number generator object.
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another linear congruential random number generator
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const linear_congruential_engine& __lhs,
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const linear_congruential_engine& __rhs)
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_x == __rhs._M_x; }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os  The output stream.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __os.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __a1, __c1, __m1>& __lcr);
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Sets the state of the engine by reading its textual
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        representation from @p __is.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The textual representation must have been previously written using
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an output stream whose imbued locale and whose type's template
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * specialization arguments _CharT and _Traits were the same as those
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of @p __is.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is  The input stream.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __is.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __c1, __m1>& __lcr);
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x;
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two linear congruential random number generator
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
GAS LISTING /tmp/ccmMnd7l.s 			page 67


 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A linear congruential random number generator object.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another linear congruential random number generator
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __lhs,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __rhs)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A generalized feedback shift register discrete random number generator.
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm avoids multiplication and division and is designed to be
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * correctly, this generator will produce numbers with a very long period and
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Takuji Nishimura.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              the state vector.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __n  The degree of recursion.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __m  The period parameter.
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __r  The separation point bit index.
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __a  The last row of the twist matrix.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __f  Initialization multiplier.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class mersenne_twister_engine
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __m && __m <= __n,
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__r <= __w, "template argument substituting "
GAS LISTING /tmp/ccmMnd7l.s 			page 68


 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__r out of bound");
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__u <= __w, "template argument substituting "
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__u out of bound");
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__s <= __w, "template argument substituting "
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__s out of bound");
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__t <= __w, "template argument substituting "
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__t out of bound");
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__l <= __w, "template argument substituting "
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__l out of bound");
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bound");
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __a out of bound");
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __b out of bound");
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __c out of bound");
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __d out of bound");
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __f out of bound");
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size                 = __w;
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      state_size                = __n;
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      shift_size                = __m;
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      mask_bits                 = __r;
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type xor_mask                  = __a;
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_u               = __u;
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_d               = __d;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_s               = __s;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_b               = __b;
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_t               = __t;
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_c               = __c;
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_l               = __l;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type initialization_multiplier = __f;
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 5489u;
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // constructors and member function
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       mersenne_twister_engine(result_type __sd = default_seed)
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine seeded from the seed sequence @p __q.
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value>
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
GAS LISTING /tmp/ccmMnd7l.s 			page 69


 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         mersenne_twister_engine(_Sseq& __q)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; };
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z);
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const mersenne_twister_engine& __lhs,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const mersenne_twister_engine& __rhs)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
GAS LISTING /tmp/ccmMnd7l.s 			page 70


 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_gen_rand();
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x[state_size];
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t    _M_p;
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 71


 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief The Marsaglia-Zaman generator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * generator, sometimes referred to as the SWC generator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A discrete random number generator that produces pseudorandom
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers using:
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$r@f$
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_x     The state of the generator.  This is a ring buffer.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_carry The carry.
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_p     Current index of x(i - r).
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class subtract_with_carry_engine
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __s && __s < __r,
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __s out of bounds");
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size    = __w;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      short_lag    = __s;
GAS LISTING /tmp/ccmMnd7l.s 			page 72


 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      long_lag     = __r;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 19780503u;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs an explicitly seeded % subtract_with_carry_engine
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator.
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       subtract_with_carry_engine(result_type __sd = default_seed)
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seeded from the seed sequence @p __q.
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, subtract_with_carry_engine>::value>
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         subtract_with_carry_engine(_Sseq& __q)
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator.
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sets value to 19780503.  In any case, with a linear
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * set carry to 1, otherwise sets carry to 0.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * % subtract_with_carry_engine random number generator.
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive minimum value of the range of random
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; }
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive maximum value of the range of random
GAS LISTING /tmp/ccmMnd7l.s 			page 73


 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator objects of the same type for equality.
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const subtract_with_carry_engine& __rhs)
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>&,
GAS LISTING /tmp/ccmMnd7l.s 			page 74


 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>&,
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_x[long_lag];
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_carry;
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t     _M_p;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        generator objects of the same type for inequality.
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __lhs,
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __rhs)
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers from some base engine by discarding blocks of
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * data.
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * 0 <= @p __r <= @p __p
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class discard_block_engine
GAS LISTING /tmp/ccmMnd7l.s 			page 75


 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1 <= __r && __r <= __p,
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __r out of bounds");
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t block_size = __p;
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t used_block = __r;
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %discard_block_engine engine.
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine()
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(), _M_n(0) { }
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng), _M_n(0) { }
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %discard_block_engine engine.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(result_type __s)
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s), _M_n(0) { }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %discard_block_engine engine.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, discard_block_engine>::value
GAS LISTING /tmp/ccmMnd7l.s 			page 76


 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         discard_block_engine(_Sseq& __q)
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_b(__q), _M_n(0)
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_n = 0;
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 77


 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %discard_block_engine random number generator
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %discard_block_engine random number generator object.
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %discard_block_engine random number generator
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const discard_block_engine& __lhs,
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const discard_block_engine& __rhs)
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %discard_block_engine random
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 78


1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t _M_n;
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %discard_block_engine random number generator
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %discard_block_engine random number generator
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __lhs,
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __rhs)
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers by combining random numbers from some base
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class independent_bits_engine
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
GAS LISTING /tmp/ccmMnd7l.s 			page 79


1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine()
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b() { }
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng) { }
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)) { }
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(result_type __s)
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s) { }
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, independent_bits_engine>::value
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                ::type>
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         independent_bits_engine(_Sseq& __q)
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
GAS LISTING /tmp/ccmMnd7l.s 			page 80


1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(); }
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(__s); }
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed sequence.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_b.seed(__q); }
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0U; }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
GAS LISTING /tmp/ccmMnd7l.s 			page 81


1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %independent_bits_engine random number generator
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %independent_bits_engine random number generator
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const independent_bits_engine& __lhs,
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const independent_bits_engine& __rhs)
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b; }
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %independent_bits_engine random number generator
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          an error state.
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _CharT, typename _Traits>
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __w, _UIntType>& __x)
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  __is >> __x._M_b;
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __is;
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %independent_bits_engine random number generator
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %independent_bits_engine random number generator
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
GAS LISTING /tmp/ccmMnd7l.s 			page 82


1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __lhs,
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __rhs)
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        number generator engine @p __x into the output stream @p __os.
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __os An output stream.
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns The output stream with the state of @p __x inserted or in
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          an error state.
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _CharT, typename _Traits>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     std::basic_ostream<_CharT, _Traits>&
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __w, _UIntType>& __x)
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __os << __x.base();
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return __os;
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Produces random numbers by combining random numbers from some
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * base engine to produce random numbers with a specifies number of bits
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __w.
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class shuffle_order_engine
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __k, "template argument substituting "
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__k out of bound");
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t table_size = __k;
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine()
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b()
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
GAS LISTING /tmp/ccmMnd7l.s 			page 83


1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng)
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng))
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(result_type __s)
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s)
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, shuffle_order_engine>::value
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         shuffle_order_engine(_Sseq& __q)
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_initialize(); }
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                 for the underlying base class generator engine.
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
GAS LISTING /tmp/ccmMnd7l.s 			page 84


1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        for the underlying base class generator engine.
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_initialize();
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets a const reference to the underlying generator engine object.
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the minimum value in the generated random number range.
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the maximum value in the generated random number range.
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Discard a sequence of random numbers.
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 85


1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the next value in the generated random number sequence.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Compares two %shuffle_order_engine random number generator objects
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of the same type for equality.
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const shuffle_order_engine& __lhs,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const shuffle_order_engine& __rhs)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (__lhs._M_b == __rhs._M_b
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	@p __os.
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __k1>& __x);
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
GAS LISTING /tmp/ccmMnd7l.s 			page 86


1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_initialize()
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_v[__i] = _M_b();
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_y = _M_b();
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_v[__k];
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_y;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Compares two %shuffle_order_engine random number generator objects
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * of the same type for inequality.
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __lhs,
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __rhs)
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand0;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative LCR (Lehmer Generator function).
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand;
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Mersenne Twister.
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Reference:
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast32_t,
GAS LISTING /tmp/ccmMnd7l.s 			page 87


1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     32, 624, 397, 31,
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9908b0dfUL, 11,
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xffffffffUL, 7,
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9d2c5680UL, 15,
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative Mersenne Twister.
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast64_t,
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     64, 312, 156, 31,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xb5026f5aa96619e9ULL, 29,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x5555555555555555ULL, 17,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x71d67fffeda60000ULL, 37,
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xfff7eee000000000ULL, 43,
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     6364136223846793005ULL> mt19937_64;
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux24_base;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux48_base;
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef minstd_rand0 default_random_engine;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A standard interface to a platform-specific non-deterministic
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator (if any are available).
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   class random_device
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /** The type of the generated random value. */
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     typedef unsigned int result_type;
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // constructors, destructors and member functions
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "default")
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _M_init(__token);
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ~random_device()
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #else
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 88


1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "mt19937")
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_init_pretr1(__token); }
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     min()
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::min(); }
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     max()
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::max(); }
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     double
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     entropy() const noexcept
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return 0.0; }
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator()()
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval();
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #else
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval_pretr1();
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // No copy functions.
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const random_device&) = delete;
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void operator=(const random_device&) = delete;
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   private:
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_init(const std::string& __token);
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_init_pretr1(const std::string& __token);
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_fini();
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type _M_getval();
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type _M_getval_pretr1();
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     union
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void*      _M_file;
1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       mt19937    _M_mt;
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   };
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /* @} */ // group random_generators
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_distributions Random Number Distributions
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
GAS LISTING /tmp/ccmMnd7l.s 			page 89


1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_distributions_uniform Uniform Distributions
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random_distributions
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Uniform discrete distribution for random numbers.
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A discrete random distribution on the range @f$[min, max]@f$ with equal
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * probability throughout the range.
1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _IntType = int>
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class uniform_int_distribution
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_integral<_IntType>::value,
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument not an integral type");
1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the range of the distribution. */
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _IntType result_type;
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** Parameter type. */
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct param_type
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typedef uniform_int_distribution<_IntType> distribution_type;
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	explicit
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	param_type(_IntType __a = 0,
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   _IntType __b = std::numeric_limits<_IntType>::max())
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_a(__a), _M_b(__b)
 1071              		.loc 4 1684 0
 1072 03f1 C7842480 		movl	$0, 128(%rsp)
 1072      00000000 
 1072      000000
 1073 03fc 4489AC24 		movl	%r13d, 132(%rsp)
 1073      84000000 
 1074              	.LBE3229:
 1075              	.LBE3228:
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 1076              		.loc 3 929 0
 1077 0404 E8000000 		call	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256
 1077      00
 1078              	.LVL117:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1079              		.loc 3 928 0
 1080 0409 4889C5   		movq	%rax, %rbp
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1081              		.loc 3 930 0
 1082 040c 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1083              		.loc 3 928 0
 1084 040f 48C1E520 		salq	$32, %rbp
 1085              	.LVL118:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1086              		.loc 3 930 0
 1087 0413 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1087      00
GAS LISTING /tmp/ccmMnd7l.s 			page 90


 1088              	.LVL119:
 1089              	.LBE3227:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1090              		.loc 3 925 0
 1091 0418 4801E8   		addq	%rbp, %rax
 1092              	.LVL120:
 1093 041b 72CB     		jc	.L61
 1094 041d 4C39E0   		cmpq	%r12, %rax
 1095 0420 77C6     		ja	.L61
 1096 0422 EB98     		jmp	.L42
 1097              	.LVL121:
 1098              	.L17:
 1099              	.LBE3226:
 1100              	.LBE3231:
 1101              	.LBE3233:
 1102              	.LBE3235:
 1103              	.LBE3237:
 1104              	.LBE3240:
 1105              	.LBE3242:
 1106              	.LBE3244:
 1107              	.LBE3246:
 1108              	.LBE3248:
 1109              	.LBE3252:
 1110              	.LBE3255:
 1111              	.LBE3258:
 1112              	.LBE3261:
 1113              	.LBE3264:
 1114              	.LBE3268:
 1115              	.LBE3271:
 1116              	.LBE3274:
 1117              	.LBE3277:
 1118              	.LBE3280:
 1119              	.LBE3284:
 1120              	.LBE3287:
 1121              	.LBE3290:
 1122              	.LBE3293:
 1123              	.LBE3296:
 1124              	.LBE3300:
 1125              	.LBE3303:
 1126              	.LBE3306:
 1127              	.LBE3309:
 1128              	.LBE3312:
 1129              	.LBE3315:
 1130              	.LBE3317:
 1131              	.LBE3319:
 1132              	.LBE3321:
 1133              	.LBE3323:
 1134              	.LBE3324:
 1135              	.LBE3326:
 1136              	.LBE3327:
 1137              	.LBE3328:
 1138              	.LBE3329:
 1139              	.LBE3330:
 1140              	.LBE3182:
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __uctype(__urng()) - __urngmin;
 1141              		.loc 3 935 0
 1142 0424 4889DF   		movq	%rbx, %rdi
GAS LISTING /tmp/ccmMnd7l.s 			page 91


 1143              	.LVL122:
 1144 0427 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1144      00
 1145              	.LVL123:
 1146 042c E92EFCFF 		jmp	.L16
 1146      FF
 1147              	.LBE3181:
 1148              	.LBE3332:
 1149              	.LBE3334:
 1150              		.cfi_endproc
 1151              	.LFE6521:
 1152              		.size	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 1153              		.section	.text.unlikely._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm6
 1154              	.LCOLDE3:
 1155              		.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397E
 1156              	.LHOTE3:
 1157              		.section	.rodata.str1.1,"aMS",@progbits,1
 1158              	.LC4:
 1159 0000 64656661 		.string	"default"
 1159      756C7400 
 1160              	.LC5:
 1161 0008 47656E65 		.string	"Generating "
 1161      72617469 
 1161      6E672000 
 1162              	.LC6:
 1163 0014 2072616E 		.string	" random points... "
 1163      646F6D20 
 1163      706F696E 
 1163      74732E2E 
 1163      2E2000
 1164              	.LC7:
 1165 0027 646F6E65 		.string	"done in "
 1165      20696E20 
 1165      00
 1166              	.LC9:
 1167 0030 6D7300   		.string	"ms"
 1168              		.section	.text.unlikely._Z9genpointsmj,"axG",@progbits,_Z9genpointsmj,comdat
 1169              	.LCOLDB10:
 1170              		.section	.text._Z9genpointsmj,"axG",@progbits,_Z9genpointsmj,comdat
 1171              	.LHOTB10:
 1172              		.p2align 4,,15
 1173              		.weak	_Z9genpointsmj
 1174              		.type	_Z9genpointsmj, @function
 1175              	_Z9genpointsmj:
 1176              	.LFB6050:
 1177              		.file 5 "./benchs/common.hpp"
   0:./benchs/common.hpp **** /* heatmap - High performance heatmap creation in C.
   1:./benchs/common.hpp ****  *
   2:./benchs/common.hpp ****  * The MIT License (MIT)
   3:./benchs/common.hpp ****  *
   4:./benchs/common.hpp ****  * Copyright (c) 2013 Lucas Beyer
   5:./benchs/common.hpp ****  *
   6:./benchs/common.hpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:./benchs/common.hpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:./benchs/common.hpp ****  * the Software without restriction, including without limitation the rights to
   9:./benchs/common.hpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:./benchs/common.hpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
GAS LISTING /tmp/ccmMnd7l.s 			page 92


  11:./benchs/common.hpp ****  * subject to the following conditions:
  12:./benchs/common.hpp ****  *
  13:./benchs/common.hpp ****  * The above copyright notice and this permission notice shall be included in all
  14:./benchs/common.hpp ****  * copies or substantial portions of the Software.
  15:./benchs/common.hpp ****  *
  16:./benchs/common.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:./benchs/common.hpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:./benchs/common.hpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:./benchs/common.hpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:./benchs/common.hpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:./benchs/common.hpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:./benchs/common.hpp ****  */
  23:./benchs/common.hpp **** 
  24:./benchs/common.hpp **** #pragma once
  25:./benchs/common.hpp **** 
  26:./benchs/common.hpp **** #include <functional>
  27:./benchs/common.hpp **** #include <iostream>
  28:./benchs/common.hpp **** #include <random>
  29:./benchs/common.hpp **** #include <vector>
  30:./benchs/common.hpp **** #include <memory>
  31:./benchs/common.hpp **** 
  32:./benchs/common.hpp **** #include "benchs/timing.hpp"
  33:./benchs/common.hpp **** #include "heatmap.h"
  34:./benchs/common.hpp **** 
  35:./benchs/common.hpp **** // Makes unique_ptr "understand" how to delete heatmap_t
  36:./benchs/common.hpp **** // without tracking any additional state.
  37:./benchs/common.hpp **** namespace std {
  38:./benchs/common.hpp ****     template<>
  39:./benchs/common.hpp ****     struct default_delete<heatmap_t> {
  40:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
  41:./benchs/common.hpp ****     };
  42:./benchs/common.hpp ****     template<>
  43:./benchs/common.hpp ****     struct default_delete<heatmap_stamp_t> {
  44:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
  45:./benchs/common.hpp ****     };
  46:./benchs/common.hpp **** }
  47:./benchs/common.hpp **** 
  48:./benchs/common.hpp **** inline std::vector<unsigned> genpoints(size_t npoints, unsigned maxval)
  49:./benchs/common.hpp **** {
 1178              		.loc 5 50 0
 1179              		.cfi_startproc
 1180              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1181              		.cfi_lsda 0x1b,.LLSDA6050
 1182              	.LVL124:
 1183 0000 4157     		pushq	%r15
 1184              		.cfi_def_cfa_offset 16
 1185              		.cfi_offset 15, -16
 1186 0002 4156     		pushq	%r14
 1187              		.cfi_def_cfa_offset 24
 1188              		.cfi_offset 14, -24
 1189              	.LBB3335:
 1190              	.LBB3336:
 1191              	.LBB3337:
 1192              	.LBB3338:
 1193              	.LBB3339:
 1194              	.LBB3340:
 1195              	.LBB3341:
GAS LISTING /tmp/ccmMnd7l.s 			page 93


 1196              		.file 6 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /** @file bits/stl_vector.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
GAS LISTING /tmp/ccmMnd7l.s 			page 94


  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/concept_check.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <initializer_list>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     struct _Vector_base
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        	pointer;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       struct _Vector_impl 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : public _Tp_alloc_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_start;
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_finish;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl()
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       };
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp_alloc_type&
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccmMnd7l.s 			page 95


 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp_alloc_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       allocator_type
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base()
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl() { }
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a) { }
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n)
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl()
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _M_create_storage(__n);
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_impl _M_impl;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_allocate(size_t __n)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
GAS LISTING /tmp/ccmMnd7l.s 			page 96


 1197              		.loc 6 170 0
 1198 0004 4889F0   		movq	%rsi, %rax
 1199              	.LBE3341:
 1200              	.LBE3340:
 1201              	.LBE3339:
 1202              	.LBE3338:
 1203              	.LBE3337:
 1204              	.LBE3336:
 1205              	.LBE3335:
 1206              		.loc 5 50 0
 1207 0007 4155     		pushq	%r13
 1208              		.cfi_def_cfa_offset 32
 1209              		.cfi_offset 13, -32
 1210 0009 4154     		pushq	%r12
 1211              		.cfi_def_cfa_offset 40
 1212              		.cfi_offset 12, -40
 1213 000b 4989F6   		movq	%rsi, %r14
 1214 000e 55       		pushq	%rbp
 1215              		.cfi_def_cfa_offset 48
 1216              		.cfi_offset 6, -48
 1217 000f 53       		pushq	%rbx
 1218              		.cfi_def_cfa_offset 56
 1219              		.cfi_offset 3, -56
 1220 0010 4989FC   		movq	%rdi, %r12
 1221 0013 4189D5   		movl	%edx, %r13d
 1222 0016 4881ECD8 		subq	$15064, %rsp
 1222      3A0000
 1223              		.cfi_def_cfa_offset 15120
 1224              	.LBB3569:
 1225              	.LBB3371:
 1226              	.LBB3366:
 1227              	.LBB3360:
 1228              	.LBB3356:
 1229              	.LBB3352:
 1230              	.LBB3348:
 1231              		.loc 6 170 0
 1232 001d 4801C0   		addq	%rax, %rax
 1233              	.LVL125:
 1234              	.LBE3348:
 1235              	.LBE3352:
 1236              	.LBE3356:
 1237              	.LBE3360:
 1238              	.LBB3361:
 1239              	.LBB3362:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 1240              		.loc 6 91 0
 1241 0020 48C70700 		movq	$0, (%rdi)
 1241      000000
 1242 0027 48C74708 		movq	$0, 8(%rdi)
 1242      00000000 
 1243 002f 48C74710 		movq	$0, 16(%rdi)
 1243      00000000 
 1244              	.LVL126:
 1245              	.LBE3362:
 1246              	.LBE3361:
 1247              	.LBB3363:
 1248              	.LBB3357:
GAS LISTING /tmp/ccmMnd7l.s 			page 97


 1249              	.LBB3353:
 1250              	.LBB3349:
 1251              		.loc 6 170 0
 1252 0037 0F851E02 		jne	.L125
 1252      0000
 1253              	.LBE3349:
 1254              	.LBE3353:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     private:
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1255              		.loc 6 187 0
 1256 003d 48C74710 		movq	$0, 16(%rdi)
 1256      00000000 
 1257              	.LVL127:
 1258 0045 31DB     		xorl	%ebx, %ebx
 1259              	.LVL128:
 1260              	.L110:
 1261              	.LBE3357:
 1262              	.LBE3363:
 1263              	.LBE3366:
 1264              	.LBE3371:
  50:./benchs/common.hpp ****     std::vector<unsigned> points(npoints*2);
  51:./benchs/common.hpp **** 
  52:./benchs/common.hpp ****     std::random_device rd;
 1265              		.loc 5 53 0
 1266 0047 488DAC24 		leaq	10048(%rsp), %rbp
 1266      40270000 
 1267 004f 488D5424 		leaq	31(%rsp), %rdx
 1267      1F
 1268 0054 488D3500 		leaq	.LC4(%rip), %rsi
 1268      000000
 1269              	.LBB3372:
 1270              	.LBB3367:
 1271              	.LBB3368:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     };
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /**
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  individual elements in any order.
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @ingroup sequences
GAS LISTING /tmp/ccmMnd7l.s 			page 98


 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   */
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Concept requirements.
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Tp					 value_type;
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef size_t					 size_type;
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_allocate;
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_deallocate;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_impl;
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector()
GAS LISTING /tmp/ccmMnd7l.s 			page 99


 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base() { }
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a) { }
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructed elements.
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
GAS LISTING /tmp/ccmMnd7l.s 			page 100


 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  but any extra memory in
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x)
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(),
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    __rv.clear();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
GAS LISTING /tmp/ccmMnd7l.s 			page 101


 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a __l.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    random_access_iterator_tag());
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [first,last).
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  responsibility.
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
GAS LISTING /tmp/ccmMnd7l.s 			page 102


 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(const vector& __x);
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  if the allocators permit it).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         constexpr bool __move_storage =
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
GAS LISTING /tmp/ccmMnd7l.s 			page 103


 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  range [__first,__last).
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::get_allocator;
GAS LISTING /tmp/ccmMnd7l.s 			page 104


 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // iterators
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
GAS LISTING /tmp/ccmMnd7l.s 			page 105


 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  in reverse element order.
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cbegin() const noexcept
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cend() const noexcept
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crbegin() const noexcept
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crend() const noexcept
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.2] capacity
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
GAS LISTING /tmp/ccmMnd7l.s 			page 106


 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  default constructed elements are appended.
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
GAS LISTING /tmp/ccmMnd7l.s 			page 107


 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       shrink_to_fit()
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  equal end().)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       bool
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return begin() == end(); }
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *          elements.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  thrown.
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and copying of %vector data.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reserve(size_type __n);
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // element access
GAS LISTING /tmp/ccmMnd7l.s 			page 108


 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Safety check used only from at().
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__n >= this->size())
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu)"),
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				   __n, this->size());
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n)
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
GAS LISTING /tmp/ccmMnd7l.s 			page 109


 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n]; 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n) const
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n];
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element of the %vector.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // data access
GAS LISTING /tmp/ccmMnd7l.s 			page 110


 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp*
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp*
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_pointer
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  available.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(const value_type& __x)
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                             __x);
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(value_type&& __x)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
GAS LISTING /tmp/ccmMnd7l.s 			page 111


 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Removes last element.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  called.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __args  Arguments.
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::list.
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
GAS LISTING /tmp/ccmMnd7l.s 			page 112


 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  specified by @a position.
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
GAS LISTING /tmp/ccmMnd7l.s 			page 113


1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return begin() + __offset;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     __first, __last, __false_type());
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  return begin() + __offset;
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
GAS LISTING /tmp/ccmMnd7l.s 			page 114


1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  shorten the %vector by one.
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __position)
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __position)
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__position); }
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *                  erased.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *           prior to erasing (or end()).
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the elements in the range
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
GAS LISTING /tmp/ccmMnd7l.s 			page 115


1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __beg = begin();
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       swap(vector& __x)
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the user's responsibility.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         pointer
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
GAS LISTING /tmp/ccmMnd7l.s 			page 116


1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __try
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      return __result;
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __catch(...)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      __throw_exception_again;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Internal constructor functions follow.
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _Integer>
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			       __false_type)
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    emplace_back(*__first);
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    push_back(*__first);
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 117


1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					this->_M_impl._M_start,
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_default_n_a(this->_M_impl._M_start, __n, 
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					 _M_get_Tp_allocator());
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
 1272              		.loc 6 1312 0
 1273 005b 49895C24 		movq	%rbx, 8(%r12)
 1273      08
 1274              	.LVL129:
 1275              	.LBE3368:
 1276              	.LBE3367:
 1277              	.LBE3372:
 1278              		.loc 5 53 0
 1279 0060 4889EF   		movq	%rbp, %rdi
 1280              	.LEHB0:
 1281 0063 E8000000 		call	_ZNSsC1EPKcRKSaIcE@PLT
 1281      00
 1282              	.LEHE0:
 1283              	.LVL130:
 1284              	.LBB3373:
 1285              	.LBB3374:
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _M_init(__token);
 1286              		.loc 4 1590 0
 1287 0068 4C8D7C24 		leaq	32(%rsp), %r15
 1287      20
 1288              	.LVL131:
 1289 006d 4889EE   		movq	%rbp, %rsi
 1290 0070 4C89FF   		movq	%r15, %rdi
 1291              	.LEHB1:
GAS LISTING /tmp/ccmMnd7l.s 			page 118


 1292 0073 E8000000 		call	_ZNSt13random_device7_M_initERKSs@PLT
 1292      00
 1293              	.LEHE1:
 1294              	.LVL132:
 1295              	.LBE3374:
 1296              	.LBE3373:
 1297              	.LBB3375:
 1298              	.LBB3376:
 1299              	.LBB3377:
 1300              	.LBB3378:
 1301              	.LBB3379:
 1302              	.LBB3380:
 1303              		.file 7 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** /** @file bits/basic_string.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #define _BASIC_STRING_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <debug/debug.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if __cplusplus >= 201103L
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <initializer_list>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 119


  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** {
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   /**
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup strings
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup sequences
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                   char_traits<_CharT>.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @doctodo
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Documentation?  What's that?
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  A string looks like this:
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @code
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        [_Rep]
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        _M_length
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @endcode
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  pointer to the header.
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  object at the front.
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string length.)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
GAS LISTING /tmp/ccmMnd7l.s 			page 120


 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  for a C++ string implementation.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   */
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   // 21.3  Template class basic_string
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     class basic_string
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Types:
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Traits					    traits_type;
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****                                                             const_iterator;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // _Rep: string representation
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   Invariants:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      must be kept null-terminated.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   3. _M_refcount has three states:
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //       0: one reference, non-const.
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      empty string representation needs no constructor.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep_base
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_length;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_capacity;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep : _Rep_base
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Types:
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
GAS LISTING /tmp/ccmMnd7l.s 			page 121


 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// (Public) Data members:
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// look like this:
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Solving for m:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const size_type	_S_max_size;
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static _Rep&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { 
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // be reasonably safe in this case.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = -1; }
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = 0; }
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_length = __n;
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
GAS LISTING /tmp/ccmMnd7l.s 			page 122


 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refdata() throw()
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Create & Destroy
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static _Rep*
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 							 -1) <= 0)
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		{
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		}
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refcopy() throw()
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return _M_refdata();
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
GAS LISTING /tmp/ccmMnd7l.s 			page 123


 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (public):
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // size that the allocator can hold.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (private):
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 1304              		.loc 7 293 0
 1305 0078 488B8424 		movq	10048(%rsp), %rax
 1305      40270000 
 1306              	.LBE3380:
 1307              	.LBE3379:
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _Rep*
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 1308              		.loc 7 301 0
 1309 0080 488D78E8 		leaq	-24(%rax), %rdi
 1310              	.LVL133:
 1311              	.LBE3378:
 1312              	.LBE3377:
 1313              	.LBB3381:
 1314              	.LBB3382:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1315              		.loc 7 240 0
 1316 0084 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1316      000000
 1317 008b 0F853B02 		jne	.L126
 1317      0000
 1318              	.LVL134:
 1319              	.L89:
 1320              	.LBE3382:
 1321              	.LBE3381:
 1322              	.LBE3376:
 1323              	.LBE3375:
 1324              	.LBB3396:
 1325              	.LBB3397:
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval();
 1326              		.loc 4 1622 0
GAS LISTING /tmp/ccmMnd7l.s 			page 124


 1327 0091 4C89FF   		movq	%r15, %rdi
 1328              	.LEHB2:
 1329 0094 E8000000 		call	_ZNSt13random_device9_M_getvalEv@PLT
 1329      00
 1330              	.LVL135:
 1331              	.LBE3397:
 1332              	.LBE3396:
 1333              	.LBB3398:
 1334              	.LBB3399:
 1335              	.LBB3400:
 1336              	.LBB3401:
 1337              	.LBB3402:
 1338              	.LBB3403:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1339              		.loc 4 142 0
 1340 0099 89C3     		movl	%eax, %ebx
 1341              	.LVL136:
 1342              	.LBE3403:
 1343              	.LBE3402:
 1344              	.LBE3401:
 1345              	.LBB3406:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1346              		.loc 3 334 0
 1347 009b BE010000 		movl	$1, %esi
 1347      00
 1348 00a0 89C0     		movl	%eax, %eax
 1349              	.LBE3406:
 1350              	.LBB3423:
 1351              	.LBB3405:
 1352              	.LBB3404:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1353              		.loc 4 142 0
 1354 00a2 48899C24 		movq	%rbx, 5040(%rsp)
 1354      B0130000 
 1355              	.LVL137:
 1356 00aa 488D9C24 		leaq	5040(%rsp), %rbx
 1356      B0130000 
 1357              	.LVL138:
 1358              	.LBE3404:
 1359              	.LBE3405:
 1360              	.LBE3423:
 1361              	.LBB3424:
 1362              	.LBB3407:
 1363              	.LBB3408:
 1364              	.LBB3409:
 1365              	.LBB3410:
 1366 00b2 48BF210D 		movabsq	$945986875574848801, %rdi
 1366      D2200DD2 
 1366      200D
 1367              	.LVL139:
 1368 00bc 0F1F4000 		.p2align 4,,10
 1369              		.p2align 3
 1370              	.L93:
 1371              	.LBE3410:
 1372              	.LBE3409:
 1373              	.LBE3408:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
GAS LISTING /tmp/ccmMnd7l.s 			page 125


 1374              		.loc 3 337 0
 1375 00c0 4889C1   		movq	%rax, %rcx
 1376              	.LBB3417:
 1377              	.LBB3414:
 1378              	.LBB3411:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1379              		.loc 4 142 0
 1380 00c3 4889F2   		movq	%rsi, %rdx
 1381              	.LBE3411:
 1382              	.LBE3414:
 1383              	.LBE3417:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1384              		.loc 3 337 0
 1385 00c6 48C1E91E 		shrq	$30, %rcx
 1386              	.LBB3418:
 1387              	.LBB3415:
 1388              	.LBB3412:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1389              		.loc 4 142 0
 1390 00ca 48C1EA04 		shrq	$4, %rdx
 1391              	.LBE3412:
 1392              	.LBE3415:
 1393              	.LBE3418:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1394              		.loc 3 337 0
 1395 00ce 4831C8   		xorq	%rcx, %rax
 1396              	.LVL140:
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 1397              		.loc 3 338 0
 1398 00d1 4869C865 		imulq	$1812433253, %rax, %rcx
 1398      89076C
 1399              	.LVL141:
 1400              	.LBB3419:
 1401              	.LBB3416:
 1402              	.LBB3413:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1403              		.loc 4 142 0
 1404 00d8 4889D0   		movq	%rdx, %rax
 1405 00db 48F7E7   		mulq	%rdi
 1406 00de 4889F0   		movq	%rsi, %rax
 1407 00e1 48D1EA   		shrq	%rdx
 1408 00e4 4869D270 		imulq	$624, %rdx, %rdx
 1408      020000
 1409 00eb 4829D0   		subq	%rdx, %rax
 1410              	.LBE3413:
 1411              	.LBE3416:
 1412              	.LBE3419:
 1413              	.LBB3420:
 1414              	.LBB3421:
 1415              	.LBB3422:
 1416 00ee 01C8     		addl	%ecx, %eax
 1417              	.LVL142:
 1418              	.LBE3422:
 1419              	.LBE3421:
 1420              	.LBE3420:
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 1421              		.loc 3 340 0
GAS LISTING /tmp/ccmMnd7l.s 			page 126


 1422 00f0 488904F3 		movq	%rax, (%rbx,%rsi,8)
 1423              	.LBE3407:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1424              		.loc 3 334 0
 1425 00f4 4883C601 		addq	$1, %rsi
 1426              	.LVL143:
 1427 00f8 4881FE70 		cmpq	$624, %rsi
 1427      020000
 1428 00ff 75BF     		jne	.L93
 1429              	.LVL144:
 1430              	.LBE3424:
 1431              	.LBE3400:
 1432              	.LBE3399:
 1433              	.LBE3398:
 1434              	.LBB3425:
 1435              	.LBB3426:
 1436              		.file 8 "/opt/gcc/4.9.2/include/c++/4.9.2/ostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Output streams -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** /** @file include/ostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifndef _GLIBCXX_OSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #define _GLIBCXX_OSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <ios>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <bits/ostream_insert.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 127


  40:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** {
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Template class basic_ostream.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @ingroup io
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _CharT  Type of character stream.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *                   char_traits<_CharT>.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This is the base class for all output streams.  It provides text
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  formatting of all builtin types, and communicates with any class
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  derived from basic_streambuf to do the actual output.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Types (inherited from basic_ios):
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _CharT			 		char_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::int_type 		int_type;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::off_type 		off_type;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _Traits			 		traits_type;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Non-standard Types:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       							__num_put_type;
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base constructor.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This ctor is almost never called by the user directly, rather from
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  their own stream buffer.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream(__streambuf_type* __sb)
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(__sb); }
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base destructor.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This does very little apart from providing a virtual base dtor.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       virtual
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~basic_ostream() { }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /// Safe prefix/suffix operations.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       class sentry;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       friend class sentry;
GAS LISTING /tmp/ccmMnd7l.s 			page 128


  97:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Interface for manipulators.
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  information, see the iomanip header.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 110:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 111:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 117:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 118:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 120:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 121:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 122:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 126:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 127:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 128:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 130:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 137:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Inserters
 139:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 140:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 141:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 142:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This can have several effects, concluding with the setting of a
 144:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  status flag; see the sentry documentation for more.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 146:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 147:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 149:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 150:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state without causing an
 151:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 152:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  be rethrown.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
GAS LISTING /tmp/ccmMnd7l.s 			page 129


 154:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 156:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 157:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief Integer arithmetic inserters
 158:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n A variable of builtin integral type.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 160:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 161:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 162:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 163:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 164:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 165:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long __n)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 167:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 168:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 169:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long __n)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 173:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(bool __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(short __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned short __n)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 183:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 185:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 188:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(int __n);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 191:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned int __n)
 192:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 193:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 194:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 195:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 199:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 200:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long long __n)
 201:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 204:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long long __n)
 205:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 207:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 208:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 209:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 210:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
GAS LISTING /tmp/ccmMnd7l.s 			page 130


 211:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Floating point arithmetic inserters
 212:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __f A variable of builtin floating point type.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 214:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 215:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 216:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 218:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 219:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(double __f)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 223:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(float __f)
 224:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 225:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 227:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<double>(__f));
 228:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 229:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 231:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long double __f)
 232:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 233:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 234:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 236:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Pointer arithmetic inserters
 237:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __p A variable of pointer type.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 239:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 240:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 241:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 242:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 243:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 244:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(const void* __p)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__p); }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Extracting from another streambuf.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __sb  A pointer to a streambuf
 250:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 251:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 252:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  in that it also constructs a sentry object and has the same error
 253:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  handling behavior.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 256:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 257:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 258:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  until one of the following occurs:
 259:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - the input stream reaches end-of-file,
 261:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - insertion into the output sequence fails (in this case, the
 262:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    character that would have been inserted is not extracted), or
 263:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 264:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    sets failbit in the error state
 265:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the function inserts no characters, failbit is set.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
GAS LISTING /tmp/ccmMnd7l.s 			page 131


 268:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 269:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__streambuf_type* __sb);
 270:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 271:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 273:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 274:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Unformatted Output Functions
 275:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the unformatted output functions have some common behavior.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Each starts by constructing a temporary object of type
 278:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 279:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  with the setting of a status flag; see the sentry documentation
 280:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  for more.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 282:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 283:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 285:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 286:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 287:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 288:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  without completing its actions.
 289:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 290:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Simple insertion.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __c  The character to insert.
 294:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 295:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 296:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Tries to insert @p __c.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 299:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 302:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       put(char_type __c);
 303:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 304:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 305:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Core write functionality, without sentry.
 306:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
 307:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 308:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 309:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       void
 310:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       _M_write(const char_type* __s, streamsize __n)
 311:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 312:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 313:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (__put != __n)
 314:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  this->setstate(ios_base::badbit);
 315:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Character string insertion.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 322:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 323:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 324:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  one of the following happens:
GAS LISTING /tmp/ccmMnd7l.s 			page 132


 325:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 326:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - @p __n characters are inserted
 327:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 328:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    will be set in the stream's error state)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 330:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 331:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 333:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 334:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       write(const char_type* __s, streamsize __n);
 335:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 336:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 338:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Synchronizing the stream buffer.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 340:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 341:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 343:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 344:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  sets badbit.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 346:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 347:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       flush();
 348:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 350:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Getting the current write position.
 351:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  A file position object.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 353:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 354:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 355:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 356:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       pos_type
 357:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       tellp();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 360:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __pos  A file position object.
 362:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 363:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 364:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 365:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  that function fails, sets failbit.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 367:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 368:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(pos_type);
 369:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 370:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 371:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 372:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __off  A file offset object.
 373:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __dir  The direction in which to seek.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 375:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 376:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 377:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If that function fails, sets failbit.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 379:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        __ostream_type&
 380:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(off_type, ios_base::seekdir);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 133


 382:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     protected:
 383:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream()
 384:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(0); }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       template<typename _ValueT>
 387:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_type&
 388:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	_M_insert(_ValueT __v);
 389:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 390:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 391:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Performs setup work for output streams.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 394:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Objects of this class are created before all of the standard
 395:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 396:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  suffix operations</em>.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 398:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <typename _CharT, typename _Traits>
 399:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 400:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 401:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Data Members.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       bool 				_M_ok;
 403:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 404:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
 406:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 407:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  The constructor performs preparatory work.
 408:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __os  The output stream to guard.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 410:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 411:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 412:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  is called to synchronize the output sequences.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is still good, then the sentry state becomes
 415:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  true (@a okay).
 416:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 417:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 418:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 419:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 420:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 421:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Possibly flushes the stream.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 423:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 424:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 425:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c flush() on the output stream.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 427:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~sentry()
 428:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 429:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// XXX MT
 430:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 431:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  {
 432:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 434:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	      _M_os.setstate(ios_base::badbit);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  }
 436:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 437:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 438:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
GAS LISTING /tmp/ccmMnd7l.s 			page 134


 439:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Quick status checking.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  The sentry state.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 443:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  return value is that of the sentry state (true == okay).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #if __cplusplus >= 201103L
 446:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 447:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 448:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator bool() const
 449:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_ok; }
 450:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 451:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 452:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 453:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 454:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Character inserters
 455:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __c  A character.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 458:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 459:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 460:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 461:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts a single character and any required
 462:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 463:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  called.
 464:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 465:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 466:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @c char, the character is widened before insertion.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 469:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 470:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 471:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 472:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 473:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 474:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 475:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << __out.widen(__c)); }
 477:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 478:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Specialization
 479:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <class _Traits>
 480:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 481:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 482:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 483:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 484:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 485:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 486:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 487:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 491:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 492:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 493:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 494:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 495:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 135


 496:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 497:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  String inserters
 499:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __s  A character string.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 502:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 503:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 504:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 505:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 506:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 507:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 508:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 511:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 512:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 514:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 516:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 517:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 518:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 519:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     basic_ostream<_CharT, _Traits> &
 524:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 525:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 526:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Partial specializations
 527:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 529:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 530:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 531:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 532:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 533:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 534:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1437              		.loc 8 535 0
 1438 0101 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1438      000000
 1439 0108 488D3500 		leaq	.LC5(%rip), %rsi
 1439      000000
 1440              	.LVL145:
 1441 010f BA0B0000 		movl	$11, %edx
 1441      00
 1442 0114 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1442      00
 1443              	.LVL146:
 1444              	.LBE3426:
 1445              	.LBE3425:
 1446              	.LBB3427:
 1447              	.LBB3428:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 1448              		.loc 8 171 0
 1449 0119 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
GAS LISTING /tmp/ccmMnd7l.s 			page 136


 1449      000000
 1450 0120 4C89F6   		movq	%r14, %rsi
 1451 0123 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 1451      00
 1452              	.LVL147:
 1453              	.LBE3428:
 1454              	.LBE3427:
 1455              	.LBB3430:
 1456              	.LBB3431:
 1457              		.loc 8 535 0
 1458 0128 488D3500 		leaq	.LC6(%rip), %rsi
 1458      000000
 1459 012f BA120000 		movl	$18, %edx
 1459      00
 1460 0134 4889C7   		movq	%rax, %rdi
 1461              	.LBE3431:
 1462              	.LBE3430:
 1463              	.LBB3433:
 1464              	.LBB3429:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 1465              		.loc 8 171 0
 1466 0137 4989C6   		movq	%rax, %r14
 1467              	.LVL148:
 1468              	.LBE3429:
 1469              	.LBE3433:
 1470              	.LBB3434:
 1471              	.LBB3432:
 1472              		.loc 8 535 0
 1473 013a E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1473      00
 1474              	.LVL149:
 1475              	.LBE3432:
 1476              	.LBE3434:
 1477              	.LBB3435:
 1478              	.LBB3436:
 1479              	.LBB3437:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 536:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
 537:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 538:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 540:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 542:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 546:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits> &
 547:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 548:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 549:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 550:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 551:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Standard basic_ostream manipulators
 552:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 553:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 554:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a newline and flush the stream.
 555:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 137


 556:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 557:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  desired, leading to poor buffering performance.  See
 558:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html
 559:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  for more on this subject.
 560:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 561:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 562:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 563:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 566:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 567:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a null character into the output sequence.
 568:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 569:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 570:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 571:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  string terminator.
 572:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 573:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 574:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 575:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 576:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.put(_CharT()); }
 577:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 578:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 579:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Flushes the output stream.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 581:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 582:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 583:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 584:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 585:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 586:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.flush(); }
 1480              		.loc 8 587 0
 1481 013f 4C89F7   		movq	%r14, %rdi
 1482 0142 E8000000 		call	_ZNSo5flushEv@PLT
 1482      00
 1483              	.LVL150:
 1484              	.LBE3437:
 1485              	.LBE3436:
 1486              	.LBE3435:
 1487              	.LBB3438:
 1488              	.LBB3439:
 1489              	.LBB3440:
  35:./benchs/timing.hpp **** }
  36:./benchs/timing.hpp **** #else
  37:./benchs/timing.hpp **** #include <time.h>
  38:./benchs/timing.hpp **** double gimme_time() {
  39:./benchs/timing.hpp ****     // Note that this way of timing doesn't have too high a resolution. I'm lazy.
  40:./benchs/timing.hpp ****     return static_cast<double>(clock())/static_cast<double>(CLOCKS_PER_SEC);
  41:./benchs/timing.hpp **** }
  42:./benchs/timing.hpp **** #endif
  43:./benchs/timing.hpp **** 
  44:./benchs/timing.hpp **** struct Timer {
  45:./benchs/timing.hpp ****     Timer() : _t0(gimme_time()) {}
 1490              		.loc 2 46 0
 1491 0147 E8000000 		call	_Z10gimme_timev@PLT
 1491      00
 1492              	.LEHE2:
GAS LISTING /tmp/ccmMnd7l.s 			page 138


 1493              	.LVL151:
 1494              	.LBE3440:
 1495              	.LBE3439:
 1496              	.LBB3442:
 1497              	.LBB3443:
 1498              	.LBB3444:
 1499              	.LBB3445:
 1500              		.file 9 "/opt/gcc/4.9.2/include/c++/4.9.2/functional"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // <functional> -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Copyright (c) 1997
  26:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Silicon Graphics Computer Systems, Inc.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *
  28:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Permission to use, copy, modify, distribute and sell this software
  29:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * and its documentation for any purpose is hereby granted without fee,
  30:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * provided that the above copyright notice appear in all copies and
  31:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * that both that copyright notice and this permission notice appear
  32:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * in supporting documentation.  Silicon Graphics makes no
  33:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * representations about the suitability of this software for any
  34:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * purpose.  It is provided "as is" without express or implied warranty.
  35:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *
  36:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  */
  37:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** /** @file include/functional
  39:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *  This is a Standard C++ Library header.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  */
  41:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #ifndef _GLIBCXX_FUNCTIONAL
  43:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #define _GLIBCXX_FUNCTIONAL 1
  44:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #pragma GCC system_header
  46:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/c++config.h>
  48:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/stl_function.h>
GAS LISTING /tmp/ccmMnd7l.s 			page 139


  49:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #if __cplusplus >= 201103L
  51:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <typeinfo>
  53:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <new>
  54:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <tuple>
  55:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <type_traits>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/functexcept.h>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/functional_hash.h>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** {
  61:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  63:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _MemberPointer>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     _Mem_fn<_Tp _Class::*>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     mem_fn(_Tp _Class::*) noexcept;
  68:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** _GLIBCXX_HAS_NESTED_TYPE(result_type)
  70:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// If we have found a result_type, extract it.
  72:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<bool _Has_result_type, typename _Functor>
  73:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_get_result_type
  74:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
  75:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
  77:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_get_result_type<true, _Functor>
  78:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef typename _Functor::result_type result_type; };
  79:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
  81:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Base class for any function object that has a weak result type, as
  82:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  defined in 3.3/3 of TR1.
  83:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
  84:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
  85:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl
  86:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Maybe_get_result_type<__has_result_type<_Functor>::value, _Functor>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
  88:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function type.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...)>
  92:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......)>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
  97:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 101:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 103:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 105:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 140


 106:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 107:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) volatile>
 108:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 109:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 110:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) volatile>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 113:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 115:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const volatile>
 116:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 117:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 118:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 119:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const volatile>
 120:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 121:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function reference.
 123:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 124:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes...)>
 125:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 126:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes......)>
 129:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 130:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 131:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function pointer.
 132:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes...)>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 135:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 137:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes......)>
 138:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 139:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 140:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a member function pointer.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)>
 143:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 144:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 146:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)>
 147:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 148:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a const member function pointer.
 150:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 151:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) const>
 152:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 153:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 155:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) const>
 156:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 157:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a volatile member function pointer.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 160:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) volatile>
 161:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 162:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 141


 163:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) volatile>
 165:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 166:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 167:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a const volatile member function pointer.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 169:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				  const volatile>
 171:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 172:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 174:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)
 175:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				  const volatile>
 176:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 177:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 178:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 179:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Strip top-level cv-qualifiers from the function object and let
 180:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  _Weak_result_type_impl perform the real work.
 181:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
 182:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
 183:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type
 184:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type_impl<typename remove_cv<_Functor>::type>
 185:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 186:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 188:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Invoke a function object, which may be either a member pointer or a
 189:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * function object. The first parameter will tell which.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 191:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
 193:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 194:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     (!is_member_pointer<_Functor>::value
 195:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && !is_function<_Functor>::value
 196:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && !is_function<typename remove_pointer<_Functor>::type>::value),
 197:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     typename result_of<_Functor&(_Args&&...)>::type
 198:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   >::type
 199:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 200:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 201:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return __f(std::forward<_Args>(__args)...);
 202:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 203:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 204:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 205:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
 206:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 207:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****              (is_member_pointer<_Functor>::value
 208:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****               && !is_function<_Functor>::value
 209:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****               && !is_function<typename remove_pointer<_Functor>::type>::value),
 210:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****              typename result_of<_Functor(_Args&&...)>::type
 211:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****            >::type
 212:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 213:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 214:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return std::mem_fn(__f)(std::forward<_Args>(__args)...);
 215:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 216:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 217:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // To pick up function references (that will become function pointers)
 218:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
GAS LISTING /tmp/ccmMnd7l.s 			page 142


 220:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 221:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     (is_pointer<_Functor>::value
 222:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && is_function<typename remove_pointer<_Functor>::type>::value),
 223:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     typename result_of<_Functor(_Args&&...)>::type
 224:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   >::type
 225:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor __f, _Args&&... __args)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 227:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return __f(std::forward<_Args>(__args)...);
 228:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 229:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 231:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Knowing which of unary_function and binary_function _Tp derives
 232:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  from, derives from the same and ensures that reference_wrapper
 233:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  will have a weak result type. See cases below.
 234:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 235:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<bool _Unary, bool _Binary, typename _Tp>
 236:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // None of the nested argument types.
 239:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 240:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<false, false, _Tp>
 241:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 242:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 243:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 244:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Nested argument_type only.
 245:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 246:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<true, false, _Tp>
 247:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 248:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 249:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::argument_type argument_type;
 250:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 251:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 252:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Nested first_argument_type and second_argument_type only.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 254:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<false, true, _Tp>
 255:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 256:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 257:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
 258:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 260:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 261:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // All the nested argument types.
 262:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    template<typename _Tp>
 263:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<true, true, _Tp>
 264:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 265:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 266:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::argument_type argument_type;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
 268:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 269:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 270:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 271:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(argument_type)
 272:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(first_argument_type)
 273:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(second_argument_type)
 274:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 276:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Derives from unary_function or binary_function when it
GAS LISTING /tmp/ccmMnd7l.s 			page 143


 277:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  can. Specializations handle all of the easy cases. The primary
 278:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  template determines what to do with a class type, which may
 279:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  derive from both unary_function and binary_function.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
 281:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 282:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base
 283:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Reference_wrapper_base_impl<
 284:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __has_argument_type<_Tp>::value,
 285:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __has_first_argument_type<_Tp>::value
 286:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       && __has_second_argument_type<_Tp>::value,
 287:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp>
 288:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 289:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function type (unary)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 292:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1)>
 293:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 294:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 295:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 296:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 297:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) const>
 298:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 299:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 300:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) volatile>
 303:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 304:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 305:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 306:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 307:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) const volatile>
 308:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 309:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 310:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 311:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function type (binary)
 312:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 313:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2)>
 314:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 316:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 318:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const>
 319:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 320:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 321:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 323:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) volatile>
 324:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 325:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 326:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 327:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 328:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const volatile>
 329:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 330:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 331:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function pointer type (unary)
 333:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
GAS LISTING /tmp/ccmMnd7l.s 			page 144


 334:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1)>
 335:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 336:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 337:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 338:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function pointer type (binary)
 339:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 340:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1, _T2)>
 341:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 342:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 343:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 344:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, no qualifiers)
 345:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)()>
 347:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1*, _Res>
 348:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 349:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 350:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, no qualifiers)
 351:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 352:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2)>
 353:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1*, _T2, _Res>
 354:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 355:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, const)
 357:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 358:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const>
 359:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<const _T1*, _Res>
 360:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 361:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 362:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, const)
 363:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<const _T1*, _T2, _Res>
 366:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 367:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 368:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, volatile)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 370:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() volatile>
 371:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<volatile _T1*, _Res>
 372:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 373:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 374:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, volatile)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 376:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) volatile>
 377:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<volatile _T1*, _T2, _Res>
 378:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 379:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 380:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, const volatile)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 382:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const volatile>
 383:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<const volatile _T1*, _Res>
 384:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 385:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, const volatile)
 387:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const volatile>
 389:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<const volatile _T1*, _T2, _Res>
 390:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
GAS LISTING /tmp/ccmMnd7l.s 			page 145


 391:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 393:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Primary class template for reference_wrapper.
 394:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup functors
 395:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @{
 396:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 397:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 398:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class reference_wrapper
 399:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Reference_wrapper_base<typename remove_cv<_Tp>::type>
 400:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 401:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp* _M_data;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 404:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp type;
 405:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 406:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(_Tp& __indata) noexcept
 407:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       : _M_data(std::__addressof(__indata))
 408:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { }
 409:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 410:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(_Tp&&) = delete;
 411:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 412:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(const reference_wrapper<_Tp>& __inref) noexcept
 413:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       : _M_data(__inref._M_data)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper&
 417:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator=(const reference_wrapper<_Tp>& __inref) noexcept
 418:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       {
 419:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_data = __inref._M_data;
 420:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	return *this;
 421:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       }
 422:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 423:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator _Tp&() const noexcept
 424:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return this->get(); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp&
 427:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       get() const noexcept
 428:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return *_M_data; }
 429:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 431:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	typename result_of<_Tp&(_Args&&...)>::type
 432:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Args&&... __args) const
 433:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 434:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return __invoke(get(), std::forward<_Args>(__args)...);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 436:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 437:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 438:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 439:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Denotes a reference should be taken to a variable.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 441:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<_Tp>
 442:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     ref(_Tp& __t) noexcept
 443:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return reference_wrapper<_Tp>(__t); }
 444:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 445:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Denotes a const reference should be taken to a variable.
 446:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 447:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<const _Tp>
GAS LISTING /tmp/ccmMnd7l.s 			page 146


 448:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     cref(const _Tp& __t) noexcept
 449:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return reference_wrapper<const _Tp>(__t); }
 450:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 451:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 452:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     void ref(const _Tp&&) = delete;
 453:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 454:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 455:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     void cref(const _Tp&&) = delete;
 456:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 457:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Partial specialization.
 458:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 459:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<_Tp>
 460:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     ref(reference_wrapper<_Tp> __t) noexcept
 461:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return ref(__t.get()); }
 462:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 463:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Partial specialization.
 464:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 465:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<const _Tp>
 466:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     cref(reference_wrapper<_Tp> __t) noexcept
 467:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return cref(__t.get()); }
 468:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 469:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // @} group functors
 470:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 471:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename... _Types>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Pack : integral_constant<size_t, sizeof...(_Types)>
 473:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 474:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 475:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _From, typename _To, bool = _From::value == _To::value>
 476:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _AllConvertible : false_type
 477:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 478:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename... _From, typename... _To>
 480:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _AllConvertible<_Pack<_From...>, _Pack<_To...>, true>
 481:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : __and_<is_convertible<_From, _To>...>
 482:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 483:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 484:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp1, typename _Tp2>
 485:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     using _NotSame = __not_<is_same<typename std::decay<_Tp1>::type,
 486:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				    typename std::decay<_Tp2>::type>>;
 487:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 488:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 489:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Derives from @c unary_function or @c binary_function, or perhaps
 490:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * nothing, depending on the number of arguments provided. The
 491:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * primary template is the basis case, which derives nothing.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 493:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 494:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function { };
 495:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Derives from @c unary_function, as appropriate.
 497:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 498:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1>
 499:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : std::unary_function<_T1, _Res> { };
 500:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 501:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Derives from @c binary_function, as appropriate.
 502:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 503:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1, _T2>
 504:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : std::binary_function<_T1, _T2, _Res> { };
GAS LISTING /tmp/ccmMnd7l.s 			page 147


 505:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 506:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for member function pointers.
 507:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 508:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...)>
 509:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, _Class*, _ArgTypes...>
 510:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 511:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...);
 512:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 513:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 514:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 515:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 516:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 517:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 518:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 519:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 520:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 521:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 524:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 525:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 526:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 528:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 529:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 530:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 531:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 532:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 533:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // and require _Tp is not _Class, _Class& or _Class*
 534:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 535:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 536:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,
 537:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 540:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // and require _Tp is _Class or derived from _Class
 541:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 542:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 543:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 544:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 545:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 546:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 547:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 548:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 550:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 551:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 552:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 553:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 554:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class& __object, _Args&&... __args) const
 555:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 556:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 557:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 558:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 559:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class&& __object, _Args&&... __args) const
 560:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 561:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
GAS LISTING /tmp/ccmMnd7l.s 			page 148


 562:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 563:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 564:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 565:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 566:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 567:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class* __object, _Args&&... __args) const
 568:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 569:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 570:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 571:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 572:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 573:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 574:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 575:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 576:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 577:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 578:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 579:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 580:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 581:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 582:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 583:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 584:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 585:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 586:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 587:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 588:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 589:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 590:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for const member function pointers.
 591:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 592:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const>
 593:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, const _Class*,
 594:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 595:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 596:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const;
 597:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 598:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 599:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 600:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 601:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 602:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 603:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 604:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 605:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 606:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 607:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 608:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 609:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 610:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 611:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 612:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 613:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 614:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 615:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 616:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 617:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 618:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<const _Class*, _Tp>,
GAS LISTING /tmp/ccmMnd7l.s 			page 149


 619:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 622:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 623:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 624:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 625:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 626:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 627:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 628:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 629:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 630:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 631:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 632:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 633:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 634:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class& __object, _Args&&... __args) const
 635:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 636:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 637:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 638:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 639:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class&& __object, _Args&&... __args) const
 640:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 641:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 642:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 643:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 645:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 646:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 647:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class* __object, _Args&&... __args) const
 648:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 649:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 651:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 652:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 653:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 654:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 655:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 656:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 657:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 658:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 660:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 661:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 662:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 663:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 664:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 665:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 666:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 667:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 668:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 669:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for volatile member function pointers.
 670:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 671:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) volatile>
 672:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, volatile _Class*,
 673:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 674:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 675:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) volatile;
GAS LISTING /tmp/ccmMnd7l.s 			page 150


 676:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 677:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 678:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 679:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 680:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 681:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 682:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 683:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 684:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 685:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 686:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 687:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 688:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 689:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 690:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 691:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 692:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 693:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 694:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 695:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 696:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 697:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<volatile _Class*, _Tp>,
 698:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 699:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 700:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 701:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 702:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 703:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 704:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 705:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 706:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 708:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 709:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 710:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 711:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 712:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 713:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class& __object, _Args&&... __args) const
 714:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 715:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 716:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 717:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 718:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class&& __object, _Args&&... __args) const
 719:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 720:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 721:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 722:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 723:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 724:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 725:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 726:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class* __object, _Args&&... __args) const
 727:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 728:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 729:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 730:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 731:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
GAS LISTING /tmp/ccmMnd7l.s 			page 151


 733:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 734:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 735:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 736:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 737:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 738:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 739:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 740:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 741:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 742:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 743:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 744:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 745:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 746:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 747:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 748:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 749:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for const volatile member function pointers.
 750:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 751:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const volatile>
 752:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, const volatile _Class*,
 753:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 755:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const volatile;
 756:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 757:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 758:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 759:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 760:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 761:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 762:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 763:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 764:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 765:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 767:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 768:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 769:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 770:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 771:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 772:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 773:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 774:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 775:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 776:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 777:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>,
 778:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _NotSame<const volatile _Class*, _Tp>,
 779:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 780:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 782:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 783:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 784:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 785:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 786:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 787:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 788:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 789:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
GAS LISTING /tmp/ccmMnd7l.s 			page 152


 790:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 791:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 792:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 793:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 794:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class& __object, _Args&&... __args) const
 795:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 796:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 797:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 798:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 799:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class&& __object, _Args&&... __args) const
 800:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 801:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 802:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 803:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 804:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 805:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 806:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 807:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class* __object, _Args&&... __args) const
 808:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 809:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 810:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 811:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 812:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 813:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 814:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 815:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 816:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 817:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 818:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 819:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 820:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 821:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 822:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 823:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 824:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 826:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 827:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 828:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 829:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 830:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, bool>
 831:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Mem_fn_const_or_non
 832:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 833:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef const _Tp& type;
 834:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 835:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 836:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 837:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Mem_fn_const_or_non<_Tp, false>
 838:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 839:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp& type;
 840:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 841:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 842:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class>
 843:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res _Class::*>
 844:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 845:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       using __pm_type = _Res _Class::*;
 846:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 153


 847:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // This bit of genius is due to Peter Dimov, improved slightly by
 848:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Douglas Gregor.
 849:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Made less elegant to support perfect forwarding and noexcept.
 850:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp>
 851:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 852:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const _Class *) const noexcept
 853:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(std::forward<_Tp>(__object).*std::declval<__pm_type&>())
 854:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return std::forward<_Tp>(__object).*__pm; }
 855:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 856:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Up>
 857:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 858:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, _Up * const *) const noexcept
 859:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*std::forward<_Tp>(__object)).*std::declval<__pm_type&>())
 860:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*std::forward<_Tp>(__object)).*__pm; }
 861:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 862:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp>
 863:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 864:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void*) const
 865:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept((*__ptr).*std::declval<__pm_type&>()))
 866:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*__ptr).*std::declval<__pm_type&>())
 867:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*__ptr).*__pm; }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit
 871:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Mem_fn(_Res _Class::*__pm) noexcept : __pm(__pm) { }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 874:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&
 875:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class& __object) const noexcept
 876:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object.*__pm; }
 877:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 878:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&
 879:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class& __object) const noexcept
 880:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object.*__pm; }
 881:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 882:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&&
 883:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class&& __object) const noexcept
 884:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return std::forward<_Class>(__object).*__pm; }
 885:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 886:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&&
 887:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class&& __object) const noexcept
 888:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return std::forward<const _Class>(__object).*__pm; }
 889:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 890:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 891:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&
 892:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class* __object) const noexcept
 893:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object->*__pm; }
 894:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 895:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&
 896:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class* __object) const noexcept
 897:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object->*__pm; }
 898:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 899:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers and derived
 900:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Req = _Require<_NotSame<_Class*, _Tp>>>
 901:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 902:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __unknown) const
 903:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept(std::declval<_Mem_fn*>()->_M_call
GAS LISTING /tmp/ccmMnd7l.s 			page 154


 904:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 			  (std::forward<_Tp>(__unknown), &__unknown)))
 905:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(this->_M_call(std::forward<_Tp>(__unknown), &__unknown))
 906:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return _M_call(std::forward<_Tp>(__unknown), &__unknown); }
 907:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 908:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Req = _Require<is_base_of<_Class, _Tp>>>
 909:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 910:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref) const
 911:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept(std::declval<_Mem_fn&>()(__ref.get())))
 912:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*this)(__ref.get()))
 913:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*this)(__ref.get()); }
 914:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 916:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res _Class::*__pm;
 917:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 918:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 919:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 920:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // 2048.  Unnecessary mem_fn overloads
 921:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 922:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Returns a function object that forwards to the member
 923:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  pointer @a pm.
 924:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup functors
 925:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 926:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
 927:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline _Mem_fn<_Tp _Class::*>
 928:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     mem_fn(_Tp _Class::* __pm) noexcept
 929:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 930:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return _Mem_fn<_Tp _Class::*>(__pm);
 931:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 932:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 933:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 934:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Determines if the given type _Tp is a function object
 935:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  should be treated as a subexpression when evaluating calls to
 936:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function objects returned by bind(). [TR1 3.6.1]
 937:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 938:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 939:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 940:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_bind_expression
 941:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public false_type { };
 942:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 943:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 944:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Determines if the given type _Tp is a placeholder in a
 945:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  bind() expression and, if so, which placeholder it is. [TR1 3.6.2]
 946:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 947:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 948:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 949:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder
 950:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, 0>
 951:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 952:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 953:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /** @brief The type of placeholder objects defined by libstdc++.
 954:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 955:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 956:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num> struct _Placeholder { };
 957:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 958:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
 959:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 960:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /** @namespace std::placeholders
GAS LISTING /tmp/ccmMnd7l.s 			page 155


 961:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief ISO C++11 entities sub-namespace for functional.
 962:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 963:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 964:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   namespace placeholders
 965:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   {
 966:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
 967:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /* Define a large number of placeholders. There is no way to
 968:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * simplify this with variadic templates, because we're introducing
 969:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * unique names for each.
 970:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 971:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<1> _1;
 972:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<2> _2;
 973:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<3> _3;
 974:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<4> _4;
 975:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<5> _5;
 976:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<6> _6;
 977:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<7> _7;
 978:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<8> _8;
 979:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<9> _9;
 980:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<10> _10;
 981:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<11> _11;
 982:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<12> _12;
 983:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<13> _13;
 984:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<14> _14;
 985:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<15> _15;
 986:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<16> _16;
 987:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<17> _17;
 988:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<18> _18;
 989:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<19> _19;
 990:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<20> _20;
 991:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<21> _21;
 992:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<22> _22;
 993:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<23> _23;
 994:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<24> _24;
 995:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<25> _25;
 996:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<26> _26;
 997:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<27> _27;
 998:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<28> _28;
 999:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<29> _29;
1000:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
1001:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   }
1002:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1003:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
1004:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1005:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1006:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Partial specialization of is_placeholder that provides the placeholder
1007:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  number for the placeholder objects defined by libstdc++.
1008:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
1009:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1010:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num>
1011:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder<_Placeholder<_Num> >
1012:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, _Num>
1013:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
1014:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1015:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num>
1016:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder<const _Placeholder<_Num> >
1017:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, _Num>
GAS LISTING /tmp/ccmMnd7l.s 			page 156


1018:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
1019:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1020:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1021:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Used by _Safe_tuple_element to indicate that there is no tuple
1022:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * element at this position.
1023:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1024:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   struct _No_tuple_element;
1025:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1026:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1027:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Implementation helper for _Safe_tuple_element. This primary
1028:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * template handles the case where it is safe to use @c
1029:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element.
1030:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1031:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t __i, typename _Tuple, bool _IsSafe>
1032:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Safe_tuple_element_impl
1033:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : tuple_element<__i, _Tuple> { };
1034:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1035:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1036:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Implementation helper for _Safe_tuple_element. This partial
1037:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * specialization handles the case where it is not safe to use @c
1038:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element. We just return @c _No_tuple_element.
1039:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1040:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t __i, typename _Tuple>
1041:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Safe_tuple_element_impl<__i, _Tuple, false>
1042:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1043:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _No_tuple_element type;
1044:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1045:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1046:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1047:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Like tuple_element, but returns @c _No_tuple_element when
1048:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element would return an error.
1049:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1050:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  template<std::size_t __i, typename _Tuple>
1051:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    struct _Safe_tuple_element
1052:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    : _Safe_tuple_element_impl<__i, _Tuple,
1053:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 			      (__i < tuple_size<_Tuple>::value)>
1054:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    { };
1055:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1056:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1057:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps an argument to bind() into an actual argument to the bound
1058:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function object [TR1 3.6.3/5]. Only the first parameter should
1059:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  be specified: the rest are used to determine among the various
1060:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  implementations. Note that, although this class is a function
1061:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  object, it isn't entirely normal because it takes only two
1062:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  parameters regardless of the number of parameters passed to the
1063:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  bind expression. The first parameter is the bound argument and
1064:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  the second parameter is a tuple containing references to the
1065:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  rest of the arguments.
1066:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1067:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg,
1068:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   bool _IsBindExp = is_bind_expression<_Arg>::value,
1069:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   bool _IsPlaceholder = (is_placeholder<_Arg>::value > 0)>
1070:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu;
1071:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1072:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1073:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is reference_wrapper<_Tp>, returns the
1074:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  underlying reference. [TR1 3.6.3/5 bullet 1]
GAS LISTING /tmp/ccmMnd7l.s 			page 157


1075:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1076:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
1077:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<reference_wrapper<_Tp>, false, false>
1078:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1079:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1080:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp& result_type;
1081:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1082:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       /* Note: This won't actually work for const volatile
1083:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        * reference_wrappers, because reference_wrapper::get() is const
1084:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        * but not volatile-qualified. This might be a defect in the TR.
1085:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        */
1086:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVRef, typename _Tuple>
1087:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	result_type
1088:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVRef& __arg, _Tuple&) const volatile
1089:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return __arg.get(); }
1090:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1091:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1092:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1093:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is a bind expression, we invoke the underlying
1094:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function object with the same cv-qualifiers as we are given and
1095:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  pass along all of our arguments (unwrapped). [TR1 3.6.3/5 bullet 2]
1096:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1097:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
1098:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, true, false>
1099:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1100:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1101:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename... _Args>
1102:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
1103:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVArg& __arg,
1104:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		   tuple<_Args...>& __tuple) const volatile
1105:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(__arg(declval<_Args>()...))
1106:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1107:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // Construct an index tuple and forward to __call
1108:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename _Build_index_tuple<sizeof...(_Args)>::__type
1109:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    _Indexes;
1110:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return this->__call(__arg, __tuple, _Indexes());
1111:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1112:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1113:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
1114:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Invokes the underlying function object __arg by unpacking all
1115:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // of the arguments in the tuple.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename... _Args, std::size_t... _Indexes>
1117:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
1118:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call(_CVArg& __arg, tuple<_Args...>& __tuple,
1119:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       const _Index_tuple<_Indexes...>&) const volatile
1120:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(__arg(declval<_Args>()...))
1121:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1122:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return __arg(std::forward<_Args>(get<_Indexes>(__tuple))...);
1123:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1124:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1125:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1126:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1127:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is a placeholder for the Nth argument, returns
1128:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  a reference to the Nth argument to the bind function object.
1129:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  [TR1 3.6.3/5 bullet 3]
1130:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1131:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
GAS LISTING /tmp/ccmMnd7l.s 			page 158


1132:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, false, true>
1133:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1134:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1135:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Signature> class result;
1136:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1137:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1138:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	class result<_CVMu(_CVArg, _Tuple)>
1139:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1140:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // Add a reference, if it hasn't already been done for us.
1141:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // This allows us to be a little bit sloppy in constructing
1142:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // the tuple that we pass to result_of<...>.
1143:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename _Safe_tuple_element<(is_placeholder<_Arg>::value
1144:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 						- 1), _Tuple>::type
1145:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    __base_type;
1146:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1147:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	public:
1148:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename add_rvalue_reference<__base_type>::type type;
1149:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	};
1150:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1151:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tuple>
1152:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	typename result<_Mu(_Arg, _Tuple)>::type
1153:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
1154:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1155:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return std::forward<typename result<_Mu(_Arg, _Tuple)>::type>(
1156:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      ::std::get<(is_placeholder<_Arg>::value - 1)>(__tuple));
1157:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1158:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1159:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1160:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1161:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is just a value, returns a reference to that
1162:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  value. The cv-qualifiers on the reference are the same as the
1163:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  cv-qualifiers on the _Mu object. [TR1 3.6.3/5 bullet 4]
1164:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1165:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
1166:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, false, false>
1167:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1168:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1169:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Signature> struct result;
1170:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1171:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1172:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	struct result<_CVMu(_CVArg, _Tuple)>
1173:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1174:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename add_lvalue_reference<_CVArg>::type type;
1175:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	};
1176:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1177:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Pick up the cv-qualifiers of the argument
1178:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename _Tuple>
1179:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_CVArg&&
1180:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVArg&& __arg, _Tuple&) const volatile
1181:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return std::forward<_CVArg>(__arg); }
1182:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1183:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1184:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1185:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1186:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  other function objects untouched. Used by tr1::bind(). The
1187:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  primary template handles the non--member-pointer case.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
GAS LISTING /tmp/ccmMnd7l.s 			page 159


1189:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
1190:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer
1191:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1192:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp type;
1193:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1194:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static const _Tp&
1195:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(const _Tp& __x)
1196:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __x; }
1197:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1198:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static _Tp&&
1199:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(_Tp&& __x)
1200:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return static_cast<_Tp&&>(__x); }
1201:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1202:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1203:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1204:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1205:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  other function objects untouched. Used by tr1::bind(). This
1206:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  partial specialization handles the member pointer case.
1207:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1208:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
1209:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer<_Tp _Class::*>
1210:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1211:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Mem_fn<_Tp _Class::*> type;
1212:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static type
1214:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(_Tp _Class::* __pm)
1215:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return type(__pm); }
1216:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1217:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1218:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Specialization needed to prevent "forming reference to void" errors when
1219:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // bind<void>() is called, because argument deduction instantiates
1220:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // _Maybe_wrap_member_pointer<void> outside the immediate context where
1221:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // SFINAE applies.
1222:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<>
1223:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer<void>
1224:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1225:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef void type;
1226:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1227:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1228:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // std::get<I> for volatile-qualified tuples
1229:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t _Ind, typename... _Tp>
1230:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline auto
1231:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __volget(volatile tuple<_Tp...>& __tuple)
1232:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type volatile&
1233:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return std::get<_Ind>(const_cast<tuple<_Tp...>&>(__tuple)); }
1234:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1235:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // std::get<I> for const-volatile-qualified tuples
1236:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t _Ind, typename... _Tp>
1237:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline auto
1238:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __volget(const volatile tuple<_Tp...>& __tuple)
1239:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type const volatile&
1240:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return std::get<_Ind>(const_cast<const tuple<_Tp...>&>(__tuple)); }
1241:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1242:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Type of the function object returned from bind().
1243:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Signature>
1244:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Bind;
1245:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 160


1246:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    template<typename _Functor, typename... _Bound_args>
1247:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Bind<_Functor(_Bound_args...)>
1248:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Weak_result_type<_Functor>
1249:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1250:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Bind __self_type;
1251:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type
1252:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Bound_indexes;
1253:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1254:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor _M_f;
1255:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       tuple<_Bound_args...> _M_bound_args;
1256:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1257:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call unqualified
1258:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1259:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1260:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
1261:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1262:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1263:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1264:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1265:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1266:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as const
1267:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1268:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1269:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
1270:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1271:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1272:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1273:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1274:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1275:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as volatile
1276:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1278:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_v(tuple<_Args...>&& __args,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		 _Index_tuple<_Indexes...>) volatile
1280:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1281:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1282:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1283:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1284:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1285:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as const volatile
1286:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1287:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1288:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_c_v(tuple<_Args...>&& __args,
1289:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		   _Index_tuple<_Indexes...>) const volatile
1290:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1291:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1292:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1293:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1294:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1295:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****      public:
1296:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
1297:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	explicit _Bind(const _Functor& __f, _Args&&... __args)
1298:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	: _M_f(__f), _M_bound_args(std::forward<_Args>(__args)...)
 1501              		.loc 9 1299 0
 1502 014c 4489AC24 		movl	%r13d, 10052(%rsp)
 1502      44270000 
 1503              	.LBB3446:
GAS LISTING /tmp/ccmMnd7l.s 			page 161


 1504              	.LBB3447:
 1505              	.LBB3448:
 1506              	.LBB3449:
 1507              		.file 10 "/opt/gcc/4.9.2/include/c++/4.9.2/tuple"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // <tuple> -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** /** @file include/tuple
  25:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #ifndef _GLIBCXX_TUPLE
  29:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #define _GLIBCXX_TUPLE 1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #pragma GCC system_header
  32:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #if __cplusplus < 201103L
  34:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** # include <bits/c++0x_warning.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #else
  36:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <utility>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <array>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <bits/uses_allocator.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    *  @addtogroup utilities
  47:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    *  @{
  48:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds a const reference to a non-reference type.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  52:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_c_ref
GAS LISTING /tmp/ccmMnd7l.s 			page 162


  53:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef const _Tp& type; };
  54:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_c_ref<_Tp&>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  58:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds a reference to a non-reference type.
  60:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_ref
  62:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  63:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_ref<_Tp&>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  67:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds an rvalue reference to a non-reference type.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_r_ref
  71:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp&& type; };
  72:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  74:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_r_ref<_Tp&>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  76:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  78:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base;
  79:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head>
  81:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base<_Idx, _Head, true>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     : public _Head
  83:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     {
  84:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base()
  85:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head() { }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base(const _Head& __h)
  88:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head(__h) { }
  89:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead, typename = typename
  91:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	       enable_if<!is_convertible<_UHead,
  92:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	                                 __uses_alloc_base>::value>::type>
  93:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****         constexpr _Head_base(_UHead&& __h)
  94:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  95:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  96:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _Head_base(__uses_alloc0)
  97:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head() { }
  98:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
 102:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a)
 105:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(*__a._M_a) { }
 106:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 107:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead>
 108:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
GAS LISTING /tmp/ccmMnd7l.s 			page 163


 110:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc, typename _UHead>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 113:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc, typename _UHead>
 116:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 117:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 118:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 119:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       static constexpr _Head&
 120:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 121:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       static constexpr const _Head&
 123:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     };
 125:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head>
 127:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base<_Idx, _Head, false>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     {
 129:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base()
 130:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _M_head_impl() { }
 131:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base(const _Head& __h)
 133:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _M_head_impl(__h) { }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 135:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead, typename = typename
 136:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	       enable_if<!is_convertible<_UHead,
 137:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	                                 __uses_alloc_base>::value>::type>
 138:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****         constexpr _Head_base(_UHead&& __h)
 139:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 1508              		.loc 10 140 0
 1509 0154 4889DE   		movq	%rbx, %rsi
 1510              	.LBE3449:
 1511              	.LBE3448:
 1512              	.LBE3447:
 1513              	.LBE3446:
 1514              	.LBE3445:
 1515              	.LBE3444:
 1516              	.LBE3443:
 1517              	.LBE3442:
 1518              	.LBB3464:
 1519              	.LBB3465:
 1520              	.LBB3466:
 1521              		.file 11 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GAS LISTING /tmp/ccmMnd7l.s 			page 164


  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <ext/type_traits.h>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/move.h>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** {
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccmMnd7l.s 			page 165


  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    * @addtogroup iterators
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    * @{
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    */
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @code
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @endcode
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class reverse_iterator
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Iterator current;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
GAS LISTING /tmp/ccmMnd7l.s 			page 166


 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The copy constructor is normal.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : current(__x.current) { }
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       template<typename _Iter>
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	: current(__x.base()) { }
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       iterator_type
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       base() const
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return current; }
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*() const
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *--__tmp;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       pointer
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator->() const
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return &(operator*()); }
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c *this
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--current;
GAS LISTING /tmp/ccmMnd7l.s 			page 167


 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--current;
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return __tmp;
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c *this
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--()
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++current;
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--(int)
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++current;
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return __tmp;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+(difference_type __n) const
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  *this
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
GAS LISTING /tmp/ccmMnd7l.s 			page 168


 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+=(difference_type __n)
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	current -= __n;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-(difference_type __n) const
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  *this
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-=(difference_type __n)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	current += __n;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator[](difference_type __n) const
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *(*this + __n); }
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   //@{
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  A simple bool.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
GAS LISTING /tmp/ccmMnd7l.s 			page 169


 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x == __y); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y < __x; }
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__y < __x); }
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x < __y); }
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
GAS LISTING /tmp/ccmMnd7l.s 			page 170


 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x == __y); }
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y < __x; }
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__y < __x); }
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x < __y); }
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     // DR 685.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline auto
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   //@}
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  push_back.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class back_insert_iterator
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 171


 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x) : container(&__x) { }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(__value);
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(__value);
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
GAS LISTING /tmp/ccmMnd7l.s 			page 172


 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  push_front.
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class front_insert_iterator
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x) : container(&__x) { }
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(__value);
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
GAS LISTING /tmp/ccmMnd7l.s 			page 173


 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(__value);
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  position.
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator's position.)
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 174


 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class insert_iterator
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typename _Container::iterator iter;
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : container(&__x), iter(__i) {}
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @code
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     // vector v contains A and Z
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 1;
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 2;
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 3;
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @endcode
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
GAS LISTING /tmp/ccmMnd7l.s 			page 175


 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     }
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // @} group iterators
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** } // namespace
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** {
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccmMnd7l.s 			page 176


 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   using std::iterator_traits;
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   using std::iterator;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class __normal_iterator
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Iterator _M_current;
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(__i) { }
 1522              		.loc 11 729 0
 1523 0157 4D8B2C24 		movq	(%r12), %r13
 1524              	.LVL152:
 1525              	.LBE3466:
 1526              	.LBE3465:
 1527              	.LBE3464:
 1528              	.LBB3467:
 1529              	.LBB3468:
 1530              	.LBB3469:
 1531 015b 498B5C24 		movq	8(%r12), %rbx
 1531      08
 1532              	.LVL153:
 1533              	.LBE3469:
 1534              	.LBE3468:
 1535              	.LBE3467:
 1536              	.LBB3470:
 1537              	.LBB3462:
 1538              	.LBB3460:
 1539              	.LBB3458:
 1540              		.loc 9 1299 0
 1541 0160 C7842440 		movl	$0, 10048(%rsp)
 1541      27000000 
 1541      000000
 1542              	.LBB3456:
 1543              	.LBB3454:
GAS LISTING /tmp/ccmMnd7l.s 			page 177


 1544              	.LBB3452:
 1545              	.LBB3450:
 1546              		.loc 10 140 0
 1547 016b 488DBC24 		leaq	10056(%rsp), %rdi
 1547      48270000 
 1548 0173 48C78424 		movq	$624, 10032(%rsp)
 1548      30270000 
 1548      70020000 
 1549 017f B9710200 		movl	$625, %ecx
 1549      00
 1550              	.LBE3450:
 1551              	.LBE3452:
 1552              	.LBE3454:
 1553              	.LBE3456:
 1554              	.LBE3458:
 1555              	.LBE3460:
 1556              	.LBE3462:
 1557              	.LBE3470:
 1558              	.LBB3471:
 1559              	.LBB3441:
 1560              		.loc 2 46 0
 1561 0184 F20F1104 		movsd	%xmm0, (%rsp)
 1561      24
 1562              	.LVL154:
 1563              	.LBE3441:
 1564              	.LBE3471:
 1565              	.LBB3472:
 1566              	.LBB3463:
 1567              	.LBB3461:
 1568              	.LBB3459:
 1569              	.LBB3457:
 1570              	.LBB3455:
 1571              	.LBB3453:
 1572              	.LBB3451:
 1573              		.loc 10 140 0
 1574 0189 F348A5   		rep; movsq
 1575              	.LVL155:
 1576              	.LBE3451:
 1577              	.LBE3453:
 1578              	.LBE3455:
 1579              	.LBE3457:
 1580              	.LBE3459:
 1581              	.LBE3461:
 1582              	.LBE3463:
 1583              	.LBE3472:
 1584              	.LBB3473:
 1585              	.LBB3474:
 1586              		.file 12 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Algorithm implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // any later version.
GAS LISTING /tmp/ccmMnd7l.s 			page 178


   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /** @file bits/stl_algo.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifndef _STL_ALGO_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #define _STL_ALGO_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <cstdlib>             // for rand
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/algorithmfwd.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_heap.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/predefined_ops.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <random>     // for std::uniform_int_distribution
GAS LISTING /tmp/ccmMnd7l.s 			page 179


  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** {
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Compare>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__a, __b))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__b, __c))
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __b);
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __c);
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __a);
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__a, __c))
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __a);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__b, __c))
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __c);
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __b);
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the Input Iterator case.
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_InputIterator __first, _InputIterator __last,
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, input_iterator_tag)
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && !__pred(__first))
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	++__first;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the RAI case.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Predicate>
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::difference_type
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__trip_count = (__last - __first) >> 2;
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __trip_count > 0; --__trip_count)
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 180


 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       switch (__last - __first)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 3:
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 2:
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 1:
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 0:
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	default:
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __last;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Predicate>
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Iterator
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __find_if(__first, __last, __pred,
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       std::__iterator_category(__first));
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Provided for stable_partition to use.
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Predicate __pred)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    std::__iterator_category(__first));
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// remaining range length instead of comparing against an end
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// iterator.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
GAS LISTING /tmp/ccmMnd7l.s 			page 181


 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __len; --__len, ++__first)
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // for_each
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_if
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_first_of
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // adjacent_find
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count_if
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate  __predicate)
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for empty ranges
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first1;
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for a pattern of length 1.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (++__p1 == __last2)
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first1, __last1,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // General case.
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p;
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __current = __first1;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first1 =
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if(__first1, __last1,
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __p = __p1;
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __current = __first1;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__current == __last1)
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__predicate(__current, __p))
GAS LISTING /tmp/ccmMnd7l.s 			page 182


 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__p == __last2)
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __first1;
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__current == __last1)
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __last1;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first1;
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search_n
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::forward_iterator_tag)
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __n = __count;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __i = __first;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__i;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__i;
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__n;
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__n == 1)
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __last)
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterators.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIter
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::random_access_iterator_tag)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
GAS LISTING /tmp/ccmMnd7l.s 			page 183


 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __remainder = __count;
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __remainder;
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __tailSize -= __remainder;
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // next possible match.
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__remainder == 0)
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	        return (__first - __count); // Success
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last; // Failure
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _UnaryPredicate>
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Integer __count,
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count <= 0)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count == 1)
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 std::__iterator_category(__first));
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for forward iterators.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first2 == __last2)
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __result = __last1;
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (1)
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator1 __new_result
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__new_result == __last1)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __result;
GAS LISTING /tmp/ccmMnd7l.s 			page 184


 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __result = __new_result;
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first1 = __new_result;
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator1>)
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator2>)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __comp);
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__rresult == __rlast1)
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result;
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The last iterator @c i in the range
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 185


 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  subsequence contained in [__first1,__last1).
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    The predicate to use.
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The last iterator @c i in the range @p
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
GAS LISTING /tmp/ccmMnd7l.s 			page 186


 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __comp)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
GAS LISTING /tmp/ccmMnd7l.s 			page 187


 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for at least an element
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if an element exists in the range @p
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          predicate is false.
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if_not(__first, __last,
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  do not.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
GAS LISTING /tmp/ccmMnd7l.s 			page 188


 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::none_of(__first, __last, __pred);
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred)
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // A specific debug-mode test will be necessary...
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __half;
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle;
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __half = __len >> 1;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __middle = __first;
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(*__middle))
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
GAS LISTING /tmp/ccmMnd7l.s 			page 189


 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value   The value to be removed.
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are copied is unchanged.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 190


 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
GAS LISTING /tmp/ccmMnd7l.s 			page 191


 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__n > 0)
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = *__first;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__result;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__n > 0)
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__first;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		break;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator>
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __n      The number of elements to copy.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result An output iterator.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  result+n.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  optimizations such as unrolling).
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   std::__iterator_category(__first));
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
GAS LISTING /tmp/ccmMnd7l.s 			page 192


 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         depending on the truth value of a predicate.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_true   An output iterator.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_false  An output iterator.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_true = *__first;
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_true;
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_false = *__first;
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_false;
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         return __first;
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __result = __first;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
GAS LISTING /tmp/ccmMnd7l.s 			page 193


 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         if (!__pred(__first))
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           {
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             *__result = _GLIBCXX_MOVE(*__first);
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             ++__result;
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           }
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence.
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be removed.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   const _Tp& __value)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
GAS LISTING /tmp/ccmMnd7l.s 			page 194


 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred)
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__binary_pred(__first, __next))
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Skip the beginning, if already unique.
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Do the real copy work.
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __dest = __first;
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__dest, __first))
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__dest;
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
GAS LISTING /tmp/ccmMnd7l.s 			page 195


 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values that compare equal.
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values for which @p __binary_pred returns true.
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            _BinaryPredicate __binary_pred)
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccmMnd7l.s 			page 196


1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__first, __next))
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __next;
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = *__first;
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__rebound_pred
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = __value;
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __value = *__first;
GAS LISTING /tmp/ccmMnd7l.s 			page 197


1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = __value;
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__result, __first))
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__result = *__first;
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for bidirectional iterators.
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__first == __last || __first == --__last)
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __last);
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for random access iterators.
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
GAS LISTING /tmp/ccmMnd7l.s 			page 198


1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      random_access_iterator_tag)
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last;
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first < __last)
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Reverse a sequence.
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   reverse() returns no value.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  so that the first element becomes the last etc.
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result)
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
GAS LISTING /tmp/ccmMnd7l.s 			page 199


1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__last;
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _EuclideanRingElement>
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _EuclideanRingElement
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__n != 0)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __m = __n;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __n = __t;
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __m;
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_ForwardIterator __first,
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __middle,
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __last,
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     forward_iterator_tag)
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __first2 = __middle;
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       do
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last);
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first2 = __middle;
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 200


1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last)
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__first2 == __last)
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first2 = __middle;
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __middle,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __last,
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __middle && __middle != __last)
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, --__last);
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle)
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __middle,
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __last,
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     random_access_iterator_tag)
1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 201


1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __n = __last   - __first;
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __k = __middle - __first;
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__k == __n - __k)
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __p = __first;
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__k < __n - __k)
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__p;
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__q;
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __p = __q - __k;
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__p;
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__q;
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
GAS LISTING /tmp/ccmMnd7l.s 			page 202


1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__middle,__last).
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator __last)
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__rotate(__first, __middle, __last,
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    std::__iterator_category(__first));
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
GAS LISTING /tmp/ccmMnd7l.s 			page 203


1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last).
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs 
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                 _ForwardIterator __last, _OutputIterator __result)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::copy(__first, __middle,
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                        std::copy(__middle, __last, __result));
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__pred(*__first))
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (++__first == __last)
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__next))
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __next);
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
GAS LISTING /tmp/ccmMnd7l.s 			page 204


1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (__pred(*__first))
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last;
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partition
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __len != 0 and !__pred(*__first),
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// same as __stable_partition_adaptive.
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Distance>
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_partition(_ForwardIterator __first,
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _Predicate __pred, _Distance __len)
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len == 1)
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle = __first;
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__middle, __len / 2);
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __left_split =
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__inplace_stable_partition(__first, __pred, __len / 2);
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Advance past true-predicate values to satisfy this
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // function's preconditions.
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __right_split =
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__right_len)
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__right_split = std::__inplace_stable_partition(__middle,
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__pred,
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__right_len);
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__left_split, __middle, __right_split);
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__left_split, std::distance(__middle, __right_split));
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __left_split;
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// and __len == distance(__first, __last).
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   ///
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// move-assign an element onto itself.
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
GAS LISTING /tmp/ccmMnd7l.s 			page 205


1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_ForwardIterator __last,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Predicate __pred, _Distance __len,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Pointer __buffer,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Distance __buffer_size)
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len <= __buffer_size)
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __result2 = __buffer;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result2;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  for (; __first != __last; ++__first)
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__pred(__first))
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result1;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result2;
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result1;
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __len / 2);
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __left_split =
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__stable_partition_adaptive(__first, __middle, __pred,
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __len / 2, __buffer,
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __buffer_size);
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // Advance past true-predicate values to satisfy this
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // function's preconditions.
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __right_len = __len - __len / 2;
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __right_split =
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if_not_n(__middle, __right_len, __pred);
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__right_len)
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __right_split =
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__stable_partition_adaptive(__right_split, __last, __pred,
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __right_len,
1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __buffer, __buffer_size);
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__left_split, __middle, __right_split);
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__left_split, std::distance(__middle, __right_split));
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __left_split;
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
GAS LISTING /tmp/ccmMnd7l.s 			page 206


1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _Predicate __pred)
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first, __last);
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.size() > 0)
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_partition_adaptive(__first, __last, __pred,
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.requested_size()),
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __buf.begin(),
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.size()));
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__inplace_stable_partition(__first, __pred,
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  _DistanceType(__buf.requested_size()));
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         of a sequence, preserving relative ordering.
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate functor.
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in the range @p [middle,last).
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Predicate __pred)
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__stable_partition(__first, __last,
GAS LISTING /tmp/ccmMnd7l.s 			page 207


1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routines.
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __middle,
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__i, __first))
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partial_sort
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_first,
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_last,
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_Compare __comp)
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__result_first == __result_last)
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __result_last;
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result_real_last = *__first;
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result_real_last;
1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first, __result_first))
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _DistanceType(__result_real_last
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     - __result_first),
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _InputValueType(*__first), __comp);
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result_real_last;
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
GAS LISTING /tmp/ccmMnd7l.s 			page 208


1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *j<*i is false.
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last)
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				                     _OutputValueType>)
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         comparison.
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another input iterator.
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
1772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
GAS LISTING /tmp/ccmMnd7l.s 			page 209


1776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __comp(*j,*i) is false.
1781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last,
1789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
1790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
1814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
1820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      _Compare __comp)
1821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __next = __last;
1825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__next;
1826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __next;
1830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__next;
1831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
GAS LISTING /tmp/ccmMnd7l.s 			page 210


1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
1839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last) return;
1842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
1862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @doctodo
1871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This controls some aspect of the sort routines.
1872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_threshold = 16 };
1874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  __comp);
1886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccmMnd7l.s 			page 211


1890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last,
1896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    --__last;
1905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
1907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
1916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
1921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __middle,
1928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __last,
1929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
1930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last,
1940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
GAS LISTING /tmp/ccmMnd7l.s 			page 212


1947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __cut;
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // sort
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _Compare __comp)
1963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first != __last)
1965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				std::__lg(__last - __first) * 2,
1968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
1970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
1978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > 3)
1980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      // Place the nth largest element in its final position.
1985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__first, __nth);
1986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
1989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__cut <= __nth)
1992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __cut;
1993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __last = __cut;
1995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
1997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // lower_bound moved to stl_algobase.h
2002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
GAS LISTING /tmp/ccmMnd7l.s 			page 213


2004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than @p __val.
2014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
2040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__val, __middle))
2054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
GAS LISTING /tmp/ccmMnd7l.s 			page 214


2061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
2063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
GAS LISTING /tmp/ccmMnd7l.s 			page 215


2118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val,
2132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __left
2155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
2156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first, __len);
2157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __right
2158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 216


2175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
2176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
2178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_ValueType, _Tp>)
2193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);      
2196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
2213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
GAS LISTING /tmp/ccmMnd7l.s 			page 217


2232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
2250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __first,@p __last ].
2251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val)
2259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
2270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !(__val < *__i);
2273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
GAS LISTING /tmp/ccmMnd7l.s 			page 218


2289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val, _Compare __comp)
2294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
2308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
2314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 != __last1)
2338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
GAS LISTING /tmp/ccmMnd7l.s 			page 219


2346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __last2,
2349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator3 __result,
2350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _Compare __comp)
2351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
2353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__first2 == __last2)
2358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last1;
2361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last2;
2362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
2363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__last2, __last1))
2365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first1 == __last1)
2368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
2369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
2371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
2372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last1;
2373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first2 == __last2)
2378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
2379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last2;
2380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
2387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
2388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
2389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __last,
2391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __buffer_size)
2394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len2)
2399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
GAS LISTING /tmp/ccmMnd7l.s 			page 220


2403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
2406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len1 <= __buffer_size)
2408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1)
2410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
2417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__first, __middle, __last);
2421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first, std::distance(__middle, __last));
2422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
2423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Pointer, typename _Compare>
2429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                      _BidirectionalIterator __middle,
2432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last,
2433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
2436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
2441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __first, __comp);
2442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len2 <= __buffer_size)
2444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __buffer_end, __last, __comp);
2448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len11 = 0;
2454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len22 = 0;
2455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1 > __len2)
2456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = __len1 / 2;
2458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first_cut, __len11);
2459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __second_cut
GAS LISTING /tmp/ccmMnd7l.s 			page 221


2460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
2463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = __len2 / 2;
2467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__second_cut, __len22);
2468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first_cut
2469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __new_middle
2474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __buffer_size);
2477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len1 - __len11,
2481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len2 - __len22, __buffer,
2482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__buffer_size, __comp);
2483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _BidirectionalIterator __middle,
2492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _BidirectionalIterator __last,
2493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Compare __comp)
2495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 + __len2 == 2)
2499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__middle, __first))
2501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __middle);
2502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len11 = 0;
2507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len22 = 0;
2508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2)
2509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = __len1 / 2;
2511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first_cut, __len11);
2512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __second_cut
2513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
GAS LISTING /tmp/ccmMnd7l.s 			page 222


2517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = __len2 / 2;
2520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__second_cut, __len22);
2521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first_cut
2522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__first_cut, __middle, __second_cut);
2527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __new_middle = __first_cut;
2528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__new_middle, std::distance(__middle, __second_cut));
2529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len11, __len22, __comp);
2531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __middle,
2539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __last,
2540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
2541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _ValueType;
2544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _DistanceType;
2546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __middle == __last)
2548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _TmpBuf __buf(__first, __last);
2555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.begin() == 0)
2557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_without_buffer
2558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_adaptive
2561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
GAS LISTING /tmp/ccmMnd7l.s 			page 223


2574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
2577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range will always come before elements from the second.
2578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last)
2588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
2612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  come before elements from the second.
2615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last,
2628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
2629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
GAS LISTING /tmp/ccmMnd7l.s 			page 224


2631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
2648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __result));
2669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator1 __last,
2676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
2678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __two_step)
2682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __step_size,
2685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __two_step,
2686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __result, __comp);
2687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __two_step;
GAS LISTING /tmp/ccmMnd7l.s 			page 225


2688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __chunk_size)
2703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __chunk_size;
2706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_chunk_size = 7 };
2711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     _RandomAccessIterator __last,
2716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                              _Pointer __buffer, _Compare __comp)
2717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
2720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = __last - __first;
2722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
2726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__step_size < __len)
2728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Pointer __buffer, _Distance __buffer_size,
2744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Compare __comp)
GAS LISTING /tmp/ccmMnd7l.s 			page 226


2745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
2748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len > __buffer_size)
2749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__middle - __first),
2762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__last - __middle),
2763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __buffer, __buffer_size,
2764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __comp);
2765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first < 15)
2774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __middle - __first,
2783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __last - __middle,
2784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
2785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // ranges are sorted.
2793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Compare __comp)
2800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
GAS LISTING /tmp/ccmMnd7l.s 			page 227


2802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__first2, __first1))
2803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return false;
2804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else if (__comp(__first1, __first2))
2805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
2806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
2807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1, ++__first2;
2808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first2 == __last2;
2810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The iterators over each range only move forward, so this is a
2826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
2829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comparison.
2854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
GAS LISTING /tmp/ccmMnd7l.s 			page 228


2859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Comparison function to use.
2860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
2862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  reaches @p __last2, false is returned.
2871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Compare __comp)
2878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
2897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
2898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
2899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
2900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
2902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // min_element
2903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // max_element
2904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
2911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
2912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
2913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
2914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
2915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
GAS LISTING /tmp/ccmMnd7l.s 			page 229


2916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
2917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
2918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
2920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
2923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __ii))
2924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(__i, --__j))
2927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
2928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
2929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
2930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
2932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
2934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
2936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
2938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
2947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
2958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
GAS LISTING /tmp/ccmMnd7l.s 			page 230


2973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
2976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
2977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  smallest is generated and false returned.
2984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
2989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
3000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
3005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
3010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
3011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
3012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
3014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
3015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
3017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
3020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__ii, __i))
3021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(--__j, __i))
3024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
3025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
3026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
3027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
3029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
GAS LISTING /tmp/ccmMnd7l.s 			page 231


3030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
3031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
3033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
3035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
3051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
3053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
3056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
3071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
3075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the largest is generated and false returned.
3082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
GAS LISTING /tmp/ccmMnd7l.s 			page 232


3087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
3098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace
3101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace_if
3102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
3106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
3107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _OutputIterator __result,
3108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
3111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = __new_value;
3113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
3114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__first;
3115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
3116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
3121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
3125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result,
3136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
GAS LISTING /tmp/ccmMnd7l.s 			page 233


3144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         returns true with another value.
3154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
3159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
3163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _OutputIterator __result,
3171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     typename iterator_traits<_InputIterator>::difference_type
3188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
3191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__n;
3194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __n;
3195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
3198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
GAS LISTING /tmp/ccmMnd7l.s 			page 234


3201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
3212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          according to a comparison functor.
3213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Compare __comp)
3223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
3227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
3229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
3232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (++__next; __next != __last; __first = __next, ++__next)
3235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__next, __first))
3236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __next;
3237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __next;
3238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 235


3258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
3275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	               : pair<const _Tp&, const _Tp&>(__a, __b);
3304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
GAS LISTING /tmp/ccmMnd7l.s 			page 236


3315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
3318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	                      : pair<const _Tp&, const _Tp&>(__a, __b);
3321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
3327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last
3330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  || ++__next == __last)
3331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::make_pair(__first, __first);
3332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __min, __max;
3334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__next, __first))
3335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __next;
3337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __first;
3338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __first;
3342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __next;
3343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = __next;
3346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
3347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
3349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __next = __first;
3351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__next == __last)
3352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else if (!__comp(__first, __max))
3356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
3358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__next, __first))
3361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__next, __min))
3363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __next;
3364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__first, __max))
3365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
3368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__next, __max))
GAS LISTING /tmp/ccmMnd7l.s 			page 237


3372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __next;
3373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
3376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
3377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(__min, __max);
3380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
3385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
3410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   Comparison functor.
3414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
3423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
GAS LISTING /tmp/ccmMnd7l.s 			page 238


3429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // N2722 + DR 915.
3436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l)
3439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l)
3449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _BinaryPredicate __pred)
3479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
3485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 239


3486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
3487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return true;
3488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Establish __last2 assuming equal ranges by iterating over the
3490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // rest of the list.
3491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __last2 = __first2;
3492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__last2, std::distance(__first1, __last1));
3493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  
3499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches
3500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__count_if(__first2, __last2,
3501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches ||
3503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__count_if(__scan, __last1,
3504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __first2 + (__last1 - __first1)), beginning with 
3520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          ForwardIterator2 begin, such that equal(__first1, __last1, begin)
3521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          returns true; otherwise, returns false.
3522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2)
3527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator1>::value_type,
3533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator2>::value_type>)
3534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_equal_to_iter());
3538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
GAS LISTING /tmp/ccmMnd7l.s 			page 240


3543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus > 201103L
3573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BinaryPredicate __pred)
3579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat1
3581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat2
3583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
GAS LISTING /tmp/ccmMnd7l.s 			page 241


3600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
3604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches
3625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return
3655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
GAS LISTING /tmp/ccmMnd7l.s 			page 242


3657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
3671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _BinaryPredicate __pred)
3679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifdef _GLIBCXX_USE_C99_STDINT_TR1
3689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Shuffle the elements of a sequence using a uniform random
3691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         number generator.
3692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
3694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
3695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __g       A UniformRandomNumberGenerator (26.5.1.3).
3696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
3697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reorders the elements in the range @p [__first,__last) using @p __g to
3699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  provide random numbers.
3700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator,
3702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UniformRandomNumberGenerator>
3703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
3704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
3705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _UniformRandomNumberGenerator&& __g)
3706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
3709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _RandomAccessIterator>)
3710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
GAS LISTING /tmp/ccmMnd7l.s 			page 243


3714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
3716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
3717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::make_unsigned<_DistanceType>::type __ud_type;
3719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::uniform_int_distribution<__ud_type> __distr_type;
3720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename __distr_type::param_type __p_type;
3721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __distr_type __d;
3722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
3724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__i, __first + __d(__g, __p_type(0, __i - __first)));
3725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif // C++11
3729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_END_NAMESPACE_VERSION
3731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
3733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Apply a function to every element of a sequence.
3736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __f      A unary function object.
3740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   @p __f (std::move(@p __f) in C++0x).
3741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the function object @p __f to each element in the range
3743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [first,last).  @p __f must not modify the order of the sequence.
3744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If @p __f has a return value it is ignored.
3745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Function>
3747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _Function
3748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     for_each(_InputIterator __first, _InputIterator __last, _Function __f)
3749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__f(*__first);
3755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE(__f);
3756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first occurrence of a value in a sequence.
3760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
3764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @c *i == @p __val, or @p __last if no such iterator exists.
3766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find(_InputIterator __first, _InputIterator __last,
3770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	 const _Tp& __val)
GAS LISTING /tmp/ccmMnd7l.s 			page 244


3771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_InputIterator>::value_type, _Tp>)
3776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__iter_equals_val(__val));
3779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first element in a sequence for which a
3783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate is true.
3784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is true, or @p __last if no such iterator exists.
3790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if(_InputIterator __first, _InputIterator __last,
3794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _Predicate __pred)
3795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
3800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__pred_iter(__pred));
3804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence.
3808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c *i == @p *(i2) such that i2 is an
3815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator in [__first2,__last2), or @p __last1 if no such iterator exists.
3816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator>
3823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
3825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2)
3826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
GAS LISTING /tmp/ccmMnd7l.s 			page 245


3828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (*__first1 == *__iter)
3839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence using a predicate.
3845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Predicate to use.
3851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c comp(*i, @p *(i2)) is true
3853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and i2 is an iterator in [__first2,__last2), or @p __last1 if no
3854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such iterator exists.
3855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
3863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
3866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2,
3867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __comp)
3868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(*__first1, *__iter))
3881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 246


3885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence that are equal.
3887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
3889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
3890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that @c *i == @c *(i+1),
3892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  or @p __last if no such iterator exists.
3893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
3897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
3901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __gnu_cxx::__ops::__iter_equal_to_iter());
3906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence using a predicate.
3910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first         A forward iterator.
3912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last          A forward iterator.
3913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred   A binary predicate.
3914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that
3916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __binary_pred(*i,*(i+1)) is true, or @p __last if no such iterator
3917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
3918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
3920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
3922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __binary_pred)
3923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
3933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the number of copies of a value in a sequence.
3937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be counted.
3941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
GAS LISTING /tmp/ccmMnd7l.s 			page 247


3942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @c *i == @p __value
3943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
3947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__value));
3956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the elements of a sequence for which a predicate is true.
3960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
3965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @p __pred(*i) is true.
3966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__pred_iter(__pred));
3979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence.
3983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  A forward iterator.
3985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   A forward iterator.
3986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  A forward iterator.
3987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   A forward iterator.
3988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
3989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c *(i+N) == @p
3990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__first2+N) for each @c N in the range @p
3991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
3992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
3994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
3995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the first element
3996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  of the sub-sequence, or @p __last1 if the sub-sequence is not
3997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found.
3998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 248


3999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
4000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
4001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
4002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.
4003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This means that the returned iterator @c i will be in the range
4005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2))
4006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
4008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
4011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
4015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
4018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
4023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence using a predicate.
4027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     A forward iterator.
4029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      A forward iterator.
4030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     A forward iterator.
4031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2      A forward iterator.
4032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __predicate  A binary predicate.
4033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
4034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that
4035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __predicate(*(i+N),*(__first2+N)) is true for each @c N in the range
4036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__last2-__first2), or @p __last1 if no such iterator exists.
4037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
4039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
4040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2), using @p __predicate to determine equality,
4041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and returns an iterator to the first element of the
4042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sub-sequence, or @p __last1 if no such iterator exists.
4043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @see search(_ForwardIter1, _ForwardIter1, _ForwardIter2, _ForwardIter2)
4045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
4047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
4048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
4051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _BinaryPredicate  __predicate)
4052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
GAS LISTING /tmp/ccmMnd7l.s 			page 249


4056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
4059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__predicate));
4064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values.
4068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count  The number of consecutive values.
4072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
4073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @c *(i+N) == @p __val for
4075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each @c N in the range @p [0,__count), or @p __last if no such
4076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator exists.
4077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p count consecutive elements
4079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __val.
4080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp>
4082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val)
4085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__val));
4094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values using a
4099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate.
4100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
4102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
4103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count        The number of consecutive values.
4104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val          The value to find.
4105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
4106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @p
4108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __binary_pred(*(i+N),__val) is true for each @c N in the range
4109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__count), or @p __last if no such iterator exists.
4110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p __count
4112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  consecutive elements for which the predicate returns true.
GAS LISTING /tmp/ccmMnd7l.s 			page 250


4113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp,
4115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _BinaryPredicate>
4116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val,
4119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
4120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_val(__binary_pred, __val));
4129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on a sequence.
4134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first     An input iterator.
4136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last      An input iterator.
4137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result    An output iterator.
4138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __unary_op  A unary operator.
4139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p __result+(__last-__first).
4140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to each element in the input range and assigns
4142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the results to successive elements of the output sequence.
4143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p *(__result+N)=unary_op(*(__first+N)) for each @c N in the
4144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last-__first).
4145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p unary_op must not alter its argument.
4147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
4149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryOperation>
4150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
4151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator __first, _InputIterator __last,
4152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _OutputIterator __result, _UnaryOperation __unary_op)
4153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
4156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _UnaryOperation"
4158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__unary_op(*__first))>)
4159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
4162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __unary_op(*__first);
4163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on corresponding elements of two sequences.
4168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     An input iterator.
GAS LISTING /tmp/ccmMnd7l.s 			page 251


4170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      An input iterator.
4171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     An input iterator.
4172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
4173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_op  A binary operator.
4174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p result+(last-first).
4175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to the corresponding elements in the two
4177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  input ranges and assigns the results to successive elements of the
4178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output sequence.
4179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p
4180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__result+N)=__binary_op(*(__first1+N),*(__first2+N)) for each
4181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @c N in the range @p [0,__last1-__first1).
4182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p binary_op must not alter either of its arguments.
4184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
4186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _BinaryOperation>
4187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
4188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator1 __first1, _InputIterator1 __last1,
4189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _InputIterator2 __first2, _OutputIterator __result,
4190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BinaryOperation __binary_op)
4191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
4194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
4195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _BinaryOperation"
4197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__binary_op(*__first1,*__first2))>)
4198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2, ++__result)
4201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __binary_op(*__first1, *__first2);
4202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each occurrence of one value in a sequence with another
4207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
4208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
4212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace() returns no value.
4214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @c *i ==
4216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __old_value then the assignment @c *i = @p __new_value is performed.
4217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
4219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace(_ForwardIterator __first, _ForwardIterator __last,
4221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    const _Tp& __old_value, const _Tp& __new_value)
4222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
GAS LISTING /tmp/ccmMnd7l.s 			page 252


4227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
4233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (*__first == __old_value)
4234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each value in a sequence for which a predicate returns
4239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         true with another value.
4240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
4244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace_if() returns no value.
4246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @p __pred(*i)
4248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is true then the assignment @c *i = @p __new_value is performed.
4249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Tp>
4251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_if(_ForwardIterator __first, _ForwardIterator __last,
4253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Predicate __pred, const _Tp& __new_value)
4254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
4261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
4265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
4266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Assign the result of a function object to each value in a
4271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         sequence.
4272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __gen    A function object taking no arguments and returning
4276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                 std::iterator_traits<_ForwardIterator>::value_type
4277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   generate() returns no value.
4278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the assignment @c *i = @p __gen() for each @c i in the range
4280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
4281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Generator>
4283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
GAS LISTING /tmp/ccmMnd7l.s 			page 253


4284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     generate(_ForwardIterator __first, _ForwardIterator __last,
4285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Generator __gen)
4286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_GeneratorConcept<_Generator,
4290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 1587              		.loc 12 4294 0
 1588 018c 4C39EB   		cmpq	%r13, %rbx
 1589              	.LBB3475:
 1590              	.LBB3476:
 1591              	.LBB3477:
 1592              	.LBB3478:
 1593              	.LBB3479:
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _GLIBCXX_DEBUG_ASSERT(_M_a <= _M_b);
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	a() const
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _M_a; }
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	b() const
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _M_b; }
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend bool
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator==(const param_type& __p1, const param_type& __p2)
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       private:
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_IntType _M_a;
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_IntType _M_b;
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a uniform distribution object.
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       uniform_int_distribution(_IntType __a = 0,
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			   _IntType __b = std::numeric_limits<_IntType>::max())
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_param(__a, __b)
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { }
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       uniform_int_distribution(const param_type& __p)
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_param(__p)
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { }
1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Resets the distribution state.
1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Does nothing for the uniform integer distribution.
GAS LISTING /tmp/ccmMnd7l.s 			page 254


1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       reset() { }
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       a() const
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param.a(); }
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       b() const
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param.b(); }
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the parameter set of the distribution.
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param_type
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param() const
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param; }
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Sets the parameter set of the distribution.
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __param The new parameter set of the distribution.
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param(const param_type& __param)
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_param = __param; }
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the inclusive lower bound of the distribution range.
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min() const
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return this->a(); }
1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the inclusive upper bound of the distribution range.
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max() const
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return this->b(); }
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generating functions.
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UniformRandomNumberGenerator>
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator()(_UniformRandomNumberGenerator& __urng)
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { return this->operator()(__urng, _M_param); }
 1594              		.loc 4 1772 0
 1595 018f 4C8D7508 		leaq	8(%rbp), %r14
 1596              	.LVL156:
 1597              	.LBE3479:
 1598              	.LBE3478:
 1599              	.LBE3477:
 1600              	.LBE3476:
 1601              	.LBE3475:
 1602              		.loc 12 4294 0
GAS LISTING /tmp/ccmMnd7l.s 			page 255


 1603 0193 741E     		je	.L98
 1604              	.LVL157:
 1605              		.p2align 4,,10
 1606 0195 0F1F00   		.p2align 3
 1607              	.L117:
 1608              	.LBB3484:
 1609              	.LBB3483:
 1610              	.LBB3482:
 1611              	.LBB3481:
 1612              	.LBB3480:
 1613              		.loc 4 1772 0
 1614 0198 4889EA   		movq	%rbp, %rdx
 1615 019b 4C89F6   		movq	%r14, %rsi
 1616 019e 4889EF   		movq	%rbp, %rdi
 1617 01a1 E8000000 		call	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256
 1617      00
 1618              	.LVL158:
 1619 01a6 4983C504 		addq	$4, %r13
 1620              	.LVL159:
 1621              	.LBE3480:
 1622              	.LBE3481:
 1623              	.LBE3482:
 1624              	.LBE3483:
 1625              	.LBE3484:
4294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__first = __gen();
 1626              		.loc 12 4295 0
 1627 01aa 418945FC 		movl	%eax, -4(%r13)
 1628              	.LVL160:
4294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__first = __gen();
 1629              		.loc 12 4294 0
 1630 01ae 4C39EB   		cmpq	%r13, %rbx
 1631 01b1 75E5     		jne	.L117
 1632              	.LVL161:
 1633              	.L98:
 1634              	.LBE3474:
 1635              	.LBE3473:
 1636              	.LBB3485:
 1637              	.LBB3486:
  46:./benchs/timing.hpp ****     ~Timer() {
  47:./benchs/timing.hpp ****         double t1 = gimme_time();
 1638              		.loc 2 48 0
 1639 01b3 E8000000 		call	_Z10gimme_timev@PLT
 1639      00
 1640              	.LVL162:
 1641              	.LBB3487:
 1642              	.LBB3488:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1643              		.loc 8 535 0
 1644 01b8 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1644      000000
 1645 01bf 488D3500 		leaq	.LC7(%rip), %rsi
 1645      000000
 1646 01c6 BA080000 		movl	$8, %edx
 1646      00
 1647              	.LBE3488:
 1648              	.LBE3487:
 1649              		.loc 2 48 0
GAS LISTING /tmp/ccmMnd7l.s 			page 256


 1650 01cb F20F1144 		movsd	%xmm0, 8(%rsp)
 1650      2408
 1651              	.LVL163:
 1652              	.LBB3490:
 1653              	.LBB3489:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1654              		.loc 8 535 0
 1655 01d1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1655      00
 1656              	.LVL164:
 1657              	.LBE3489:
 1658              	.LBE3490:
  48:./benchs/timing.hpp ****         std::cout << "done in " << (t1-_t0)*1000.0 << "ms" << std::endl;
 1659              		.loc 2 49 0
 1660 01d6 F20F1044 		movsd	8(%rsp), %xmm0
 1660      2408
 1661              	.LBB3491:
 1662              	.LBB3492:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1663              		.loc 8 221 0
 1664 01dc 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1664      000000
 1665              	.LBE3492:
 1666              	.LBE3491:
 1667              		.loc 2 49 0
 1668 01e3 F20F5C04 		subsd	(%rsp), %xmm0
 1668      24
 1669 01e8 F20F5905 		mulsd	.LC8(%rip), %xmm0
 1669      00000000 
 1670              	.LVL165:
 1671              	.LBB3495:
 1672              	.LBB3493:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1673              		.loc 8 221 0
 1674 01f0 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 1674      00
 1675              	.LVL166:
 1676              	.LBE3493:
 1677              	.LBE3495:
 1678              	.LBB3496:
 1679              	.LBB3497:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1680              		.loc 8 535 0
 1681 01f5 488D3500 		leaq	.LC9(%rip), %rsi
 1681      000000
 1682              	.LBE3497:
 1683              	.LBE3496:
 1684              	.LBB3499:
 1685              	.LBB3494:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1686              		.loc 8 221 0
 1687 01fc 4889C3   		movq	%rax, %rbx
 1688              	.LVL167:
 1689              	.LBE3494:
 1690              	.LBE3499:
 1691              	.LBB3500:
 1692              	.LBB3498:
GAS LISTING /tmp/ccmMnd7l.s 			page 257


 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1693              		.loc 8 535 0
 1694 01ff BA020000 		movl	$2, %edx
 1694      00
 1695 0204 4889C7   		movq	%rax, %rdi
 1696 0207 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1696      00
 1697              	.LVL168:
 1698              	.LBE3498:
 1699              	.LBE3500:
 1700              	.LBB3501:
 1701              	.LBB3502:
 1702              	.LBB3503:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 1703              		.loc 8 565 0
 1704 020c 488B03   		movq	(%rbx), %rax
 1705              	.LBB3504:
 1706              	.LBB3505:
 1707              		.file 13 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** /** @file bits/basic_ios.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #pragma GCC system_header
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/localefwd.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_classes.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_facets.h>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
GAS LISTING /tmp/ccmMnd7l.s 			page 258


  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _Facet>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     inline const _Facet&
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       return *__f;
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     }
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   /**
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  stream classes. 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @ingroup io
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     class basic_ios : public ios_base
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are non-standard types.
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_put_type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_get_type;
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Data members:
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     protected:
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
GAS LISTING /tmp/ccmMnd7l.s 			page 259


  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For ostream.
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For istream.
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This allows you to write constructs such as
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator void*() const
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator!() const
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail(); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdstate() const
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf_state; }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will not need to pass an argument.
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       setstate(iostate __state)
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
GAS LISTING /tmp/ccmMnd7l.s 			page 260


 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then re
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // throws the propagated exception if bit also set in
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // exceptions().
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       _M_setstate(iostate __state)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  __throw_exception_again;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A wrapper around rdstate.
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       good() const
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       eof() const
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fail() const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bad() const
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
GAS LISTING /tmp/ccmMnd7l.s 			page 261


 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions() const
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_exception; }
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <iostream>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <fstream>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <exception>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  int main()
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  {
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions(iostate __except)
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_exception = __except;
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Constructor/destructor:
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
GAS LISTING /tmp/ccmMnd7l.s 			page 262


 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->init(__sb); }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Empty.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       virtual
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       ~basic_ios() { }
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Members:
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           not tied.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie() const
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_tie; }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           was not tied.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_tie = __tiestr;
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         return __old;
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current stream buffer.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This does not change the state of the stream.
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf() const
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf; }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
GAS LISTING /tmp/ccmMnd7l.s 			page 263


 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  error state.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  derived class.  For example:
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  Reference to this object.
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios&
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current fill character.
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill() const
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (!_M_fill_init)
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  {
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill_init = true;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  }
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return _M_fill;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __ch  The new character.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous fill character.
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
GAS LISTING /tmp/ccmMnd7l.s 			page 264


 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill(char_type __ch)
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	char_type __old = this->fill();
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_fill = __ch;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return __old;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Locales:
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous locale.
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       locale
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       imbue(const locale& __loc);
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The narrowed character.
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  if possible.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Widens characters.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The widened character.
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
GAS LISTING /tmp/ccmMnd7l.s 			page 265


 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       widen(char __c) const
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 1708              		.loc 13 444 0
 1709 020f 488B40E8 		movq	-24(%rax), %rax
 1710 0213 488BAC03 		movq	240(%rbx,%rax), %rbp
 1710      F0000000 
 1711              	.LVL169:
 1712              	.LBB3506:
 1713              	.LBB3507:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 1714              		.loc 13 48 0
 1715 021b 4885ED   		testq	%rbp, %rbp
 1716 021e 0F841A01 		je	.L127
 1716      0000
 1717              	.LVL170:
 1718              	.LBE3507:
 1719              	.LBE3506:
 1720              	.LBB3509:
 1721              	.LBB3510:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 1722              		.loc 1 867 0
 1723 0224 807D3800 		cmpb	$0, 56(%rbp)
 1724 0228 7473     		je	.L99
 1725 022a 0FBE7543 		movsbl	67(%rbp), %esi
 1726              	.LVL171:
 1727              	.L100:
 1728              	.LBE3510:
 1729              	.LBE3509:
 1730              	.LBE3505:
 1731              	.LBE3504:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 1732              		.loc 8 565 0
 1733 022e 4889DF   		movq	%rbx, %rdi
 1734 0231 E8000000 		call	_ZNSo3putEc@PLT
 1734      00
 1735              	.LVL172:
 1736              	.LBB3518:
 1737              	.LBB3519:
 1738              		.loc 8 587 0
 1739 0236 4889C7   		movq	%rax, %rdi
 1740 0239 E8000000 		call	_ZNSo5flushEv@PLT
 1740      00
 1741              	.LVL173:
 1742              	.LBE3519:
 1743              	.LBE3518:
 1744              	.LBE3503:
 1745              	.LBE3502:
 1746              	.LBE3501:
 1747              	.LBE3486:
 1748              	.LBE3485:
 1749              	.LBE3438:
 1750              	.LBB3532:
GAS LISTING /tmp/ccmMnd7l.s 			page 266


 1751              	.LBB3533:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 1752              		.loc 4 1594 0
 1753 023e 4C89FF   		movq	%r15, %rdi
 1754 0241 E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 1754      00
 1755              	.LVL174:
 1756              	.LBE3533:
 1757              	.LBE3532:
 1758              	.LBE3569:
  53:./benchs/common.hpp ****     std::mt19937 prng(rd());
  54:./benchs/common.hpp ****     std::uniform_int_distribution<> dist(0, maxval);
  55:./benchs/common.hpp **** 
  56:./benchs/common.hpp ****     std::cout << "Generating " << npoints << " random points... " << std::flush;
  57:./benchs/common.hpp ****     { Timer t;
  58:./benchs/common.hpp ****         std::generate(points.begin(), points.end(), std::bind(dist, prng));
  59:./benchs/common.hpp ****     }
  60:./benchs/common.hpp **** 
  61:./benchs/common.hpp ****     return points;
  62:./benchs/common.hpp **** }
 1759              		.loc 5 63 0
 1760 0246 4881C4D8 		addq	$15064, %rsp
 1760      3A0000
 1761              		.cfi_remember_state
 1762              		.cfi_def_cfa_offset 56
 1763              	.LVL175:
 1764 024d 4C89E0   		movq	%r12, %rax
 1765 0250 5B       		popq	%rbx
 1766              		.cfi_def_cfa_offset 48
 1767              	.LVL176:
 1768 0251 5D       		popq	%rbp
 1769              		.cfi_def_cfa_offset 40
 1770              	.LVL177:
 1771 0252 415C     		popq	%r12
 1772              		.cfi_def_cfa_offset 32
 1773              	.LVL178:
 1774 0254 415D     		popq	%r13
 1775              		.cfi_def_cfa_offset 24
 1776 0256 415E     		popq	%r14
 1777              		.cfi_def_cfa_offset 16
 1778              	.LVL179:
 1779 0258 415F     		popq	%r15
 1780              		.cfi_def_cfa_offset 8
 1781              	.LVL180:
 1782 025a C3       		ret
 1783              	.LVL181:
 1784              	.L125:
 1785              		.cfi_restore_state
 1786              	.LBB3570:
 1787              	.LBB3534:
 1788              	.LBB3369:
 1789              	.LBB3364:
 1790              	.LBB3358:
 1791              	.LBB3354:
 1792              	.LBB3350:
 1793              	.LBB3342:
 1794              	.LBB3343:
GAS LISTING /tmp/ccmMnd7l.s 			page 267


 1795              	.LBB3344:
 1796              		.file 14 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** /** @file ext/new_allocator.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/c++config.h>
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <new>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/functexcept.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/move.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <type_traits>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::size_t;
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::ptrdiff_t;
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   /**
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @ingroup allocators
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all allocation calls operator new
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
GAS LISTING /tmp/ccmMnd7l.s 			page 268


  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   template<typename _Tp>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     class new_allocator
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef size_t     size_type;
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp        value_type;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         struct rebind
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       const_pointer
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	if (__n > this->max_size())
 1797              		.loc 14 101 0
 1798 025b 48BAFFFF 		movabsq	$4611686018427387903, %rdx
 1798      FFFFFFFF 
 1798      FF3F
 1799              	.LVL182:
 1800 0265 4839D0   		cmpq	%rdx, %rax
 1801 0268 0F87A800 		ja	.L128
 1801      0000
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
GAS LISTING /tmp/ccmMnd7l.s 			page 269


 1802              		.loc 14 104 0
 1803 026e 488D2CF5 		leaq	0(,%rsi,8), %rbp
 1803      00000000 
 1804 0276 4889EF   		movq	%rbp, %rdi
 1805              	.LVL183:
 1806              	.LEHB3:
 1807 0279 E8000000 		call	_Znwm@PLT
 1807      00
 1808              	.LEHE3:
 1809              	.LVL184:
 1810              	.LBE3344:
 1811              	.LBE3343:
 1812              	.LBE3342:
 1813              	.LBE3350:
 1814              	.LBE3354:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1815              		.loc 6 187 0
 1816 027e 488D1C28 		leaq	(%rax,%rbp), %rbx
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 1817              		.loc 6 185 0
 1818 0282 49890424 		movq	%rax, (%r12)
 1819 0286 4889EA   		movq	%rbp, %rdx
 1820 0289 31F6     		xorl	%esi, %esi
 1821 028b 4889C7   		movq	%rax, %rdi
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1822              		.loc 6 187 0
 1823 028e 49895C24 		movq	%rbx, 16(%r12)
 1823      10
 1824              	.LVL185:
 1825 0293 E8000000 		call	memset@PLT
 1825      00
 1826              	.LVL186:
 1827 0298 E9AAFDFF 		jmp	.L110
 1827      FF
 1828              	.LVL187:
 1829              	.L99:
 1830              	.LBE3358:
 1831              	.LBE3364:
 1832              	.LBE3369:
 1833              	.LBE3534:
 1834              	.LBB3535:
 1835              	.LBB3530:
 1836              	.LBB3528:
 1837              	.LBB3526:
 1838              	.LBB3524:
 1839              	.LBB3522:
 1840              	.LBB3520:
 1841              	.LBB3516:
 1842              	.LBB3514:
 1843              	.LBB3513:
 1844              	.LBB3511:
 1845              	.LBB3512:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 1846              		.loc 1 869 0
 1847 029d 4889EF   		movq	%rbp, %rdi
 1848 02a0 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 1848      00
GAS LISTING /tmp/ccmMnd7l.s 			page 270


 1849              	.LVL188:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 1850              		.loc 1 870 0
 1851 02a5 488B4500 		movq	0(%rbp), %rax
 1852 02a9 BE0A0000 		movl	$10, %esi
 1852      00
 1853 02ae 488B4030 		movq	48(%rax), %rax
 1854 02b2 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 1854      000000
 1855 02b9 0F846FFF 		je	.L100
 1855      FFFF
 1856 02bf 4889EF   		movq	%rbp, %rdi
 1857 02c2 FFD0     		call	*%rax
 1858              	.LVL189:
 1859 02c4 0FBEF0   		movsbl	%al, %esi
 1860 02c7 E962FFFF 		jmp	.L100
 1860      FF
 1861              	.LVL190:
 1862              	.L126:
 1863              	.LBE3512:
 1864              	.LBE3511:
 1865              	.LBE3513:
 1866              	.LBE3514:
 1867              	.LBE3516:
 1868              	.LBE3520:
 1869              	.LBE3522:
 1870              	.LBE3524:
 1871              	.LBE3526:
 1872              	.LBE3528:
 1873              	.LBE3530:
 1874              	.LBE3535:
 1875              	.LBB3536:
 1876              	.LBB3395:
 1877              	.LBB3394:
 1878              	.LBB3393:
 1879              	.LBB3383:
 1880              	.LBB3384:
 1881              	.LBB3385:
 1882              	.LBB3386:
 1883              		.file 15 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Support for atomic operations -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Copyright (C) 2004-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccmMnd7l.s 			page 271


  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** /** @file ext/atomicity.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifndef _GLIBCXX_ATOMICITY_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #define _GLIBCXX_ATOMICITY_H	1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #pragma GCC system_header
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/c++config.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/gthr.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/atomic_word.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** {
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // Functions for portable atomic access.
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // To abstract locking primitives across all thread policies, use:
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __exchange_and_add_dispatch
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __atomic_add_dispatch
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef _GLIBCXX_ATOMIC_BUILTINS
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word* __mem, int __val)
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #else
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   _Atomic_word
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word*, int) throw ();
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   void
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word*, int) throw ();
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #endif
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_single(_Atomic_word* __mem, int __val)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     return __result;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   }
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add_single(_Atomic_word* __mem, int __val)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { *__mem += __val; }
GAS LISTING /tmp/ccmMnd7l.s 			page 272


  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef __GTHREADS
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 1884              		.loc 15 81 0
 1885 02cc 48833D00 		cmpq	$0, _ZL28__gthrw___pthread_key_createPjPFvPvE@GOTPCREL(%rip)
 1885      00000000 
 1886 02d4 7429     		je	.L90
 1887              	.LVL191:
 1888              	.LBB3387:
 1889              	.LBB3388:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
 1890              		.loc 15 49 0
 1891 02d6 BAFFFFFF 		movl	$-1, %edx
 1891      FF
 1892 02db F00FC150 		lock; xaddl	%edx, -8(%rax)
 1892      F8
 1893 02e0 89D0     		movl	%edx, %eax
 1894              	.LVL192:
 1895              	.L91:
 1896              	.LBE3388:
 1897              	.LBE3387:
 1898              	.LBE3386:
 1899              	.LBE3385:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 1900              		.loc 7 245 0
 1901 02e2 85C0     		testl	%eax, %eax
 1902 02e4 0F8FA7FD 		jg	.L89
 1902      FFFF
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 1903              		.loc 7 249 0
 1904 02ea 488D9C24 		leaq	5040(%rsp), %rbx
 1904      B0130000 
 1905              	.LVL193:
 1906 02f2 4889DE   		movq	%rbx, %rsi
 1907 02f5 E8000000 		call	_ZNSs4_Rep10_M_destroyERKSaIcE@PLT
 1907      00
 1908              	.LVL194:
 1909 02fa E992FDFF 		jmp	.L89
 1909      FF
 1910              	.LVL195:
 1911              	.L90:
 1912              	.LBB3392:
 1913              	.LBB3391:
 1914              	.LBB3389:
 1915              	.LBB3390:
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 1916              		.loc 15 67 0
 1917 02ff 8B50F8   		movl	-8(%rax), %edx
 1918              	.LVL196:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 1919              		.loc 15 68 0
 1920 0302 8D4AFF   		leal	-1(%rdx), %ecx
 1921 0305 8948F8   		movl	%ecx, -8(%rax)
GAS LISTING /tmp/ccmMnd7l.s 			page 273


 1922              	.LBE3390:
 1923              	.LBE3389:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****       return __exchange_and_add(__mem, __val);
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     else
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****       return __exchange_and_add_single(__mem, __val);
 1924              		.loc 15 84 0
 1925 0308 89D0     		movl	%edx, %eax
 1926              	.LVL197:
 1927 030a EBD6     		jmp	.L91
 1928              	.LVL198:
 1929              	.L114:
 1930 030c 4889C3   		movq	%rax, %rbx
 1931 030f EB0F     		jmp	.L108
 1932              	.LVL199:
 1933              	.L112:
 1934 0311 4889C3   		movq	%rax, %rbx
 1935 0314 EB2D     		jmp	.L101
 1936              	.LVL200:
 1937              	.L128:
 1938              	.LEHB4:
 1939              	.LBE3391:
 1940              	.LBE3392:
 1941              	.LBE3384:
 1942              	.LBE3383:
 1943              	.LBE3393:
 1944              	.LBE3394:
 1945              	.LBE3395:
 1946              	.LBE3536:
 1947              	.LBB3537:
 1948              	.LBB3370:
 1949              	.LBB3365:
 1950              	.LBB3359:
 1951              	.LBB3355:
 1952              	.LBB3351:
 1953              	.LBB3347:
 1954              	.LBB3346:
 1955              	.LBB3345:
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 1956              		.loc 14 102 0
 1957 0316 E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 1957      00
 1958              	.LEHE4:
 1959              	.LVL201:
 1960              	.L113:
 1961 031b 4889C3   		movq	%rax, %rbx
 1962 031e EB08     		jmp	.L107
 1963              	.LVL202:
 1964              	.L108:
 1965              	.LBE3345:
 1966              	.LBE3346:
 1967              	.LBE3347:
 1968              	.LBE3351:
 1969              	.LBE3355:
 1970              	.LBE3359:
 1971              	.LBE3365:
 1972              	.LBE3370:
 1973              	.LBE3537:
GAS LISTING /tmp/ccmMnd7l.s 			page 274


 1974              	.LBB3538:
 1975              	.LBB3539:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 1976              		.loc 4 1594 0
 1977 0320 4C89FF   		movq	%r15, %rdi
 1978 0323 E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 1978      00
 1979              	.LVL203:
 1980              	.L107:
 1981              	.LBE3539:
 1982              	.LBE3538:
 1983              	.LBB3540:
 1984              	.LBB3541:
 1985              	.LBB3542:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 1986              		.loc 6 161 0
 1987 0328 498B3C24 		movq	(%r12), %rdi
 1988              	.LVL204:
 1989              	.LBB3543:
 1990              	.LBB3544:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 1991              		.loc 6 177 0
 1992 032c 4885FF   		testq	%rdi, %rdi
 1993 032f 7405     		je	.L109
 1994              	.LVL205:
 1995              	.LBB3545:
 1996              	.LBB3546:
 1997              	.LBB3547:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       }
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       void
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { ::operator delete(__p); }
 1998              		.loc 14 110 0
 1999 0331 E8000000 		call	_ZdlPv@PLT
 1999      00
 2000              	.LVL206:
 2001              	.L109:
 2002 0336 4889DF   		movq	%rbx, %rdi
 2003              	.LEHB5:
 2004 0339 E8000000 		call	_Unwind_Resume@PLT
 2004      00
 2005              	.LEHE5:
 2006              	.LVL207:
 2007              	.L127:
 2008              	.LBE3547:
 2009              	.LBE3546:
 2010              	.LBE3545:
 2011              	.LBE3544:
 2012              	.LBE3543:
 2013              	.LBE3542:
 2014              	.LBE3541:
 2015              	.LBE3540:
 2016              	.LBB3548:
 2017              	.LBB3531:
 2018              	.LBB3529:
GAS LISTING /tmp/ccmMnd7l.s 			page 275


 2019              	.LBB3527:
 2020              	.LBB3525:
 2021              	.LBB3523:
 2022              	.LBB3521:
 2023              	.LBB3517:
 2024              	.LBB3515:
 2025              	.LBB3508:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 2026              		.loc 13 49 0
 2027 033e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 2027      00
 2028              	.LVL208:
 2029              	.L101:
 2030              	.LBE3508:
 2031              	.LBE3515:
 2032              	.LBE3517:
 2033              	.LBE3521:
 2034              	.LBE3523:
 2035              	.LBE3525:
 2036              	.LBE3527:
 2037              	.LBE3529:
 2038              	.LBE3531:
 2039              	.LBE3548:
 2040              	.LBB3549:
 2041              	.LBB3550:
 2042              	.LBB3551:
 2043              	.LBB3552:
 2044              	.LBB3553:
 2045              	.LBB3554:
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 2046              		.loc 7 293 0
 2047 0343 488B9424 		movq	10048(%rsp), %rdx
 2047      40270000 
 2048              	.LBE3554:
 2049              	.LBE3553:
 2050              		.loc 7 301 0
 2051 034b 488D7AE8 		leaq	-24(%rdx), %rdi
 2052              	.LVL209:
 2053              	.LBE3552:
 2054              	.LBE3551:
 2055              	.LBB3555:
 2056              	.LBB3556:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 2057              		.loc 7 240 0
 2058 034f 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 2058      000000
 2059 0356 74D0     		je	.L107
 2060              	.LVL210:
 2061              	.LBB3557:
 2062              	.LBB3558:
 2063              	.LBB3559:
 2064              	.LBB3560:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 2065              		.loc 15 81 0
 2066 0358 48833D00 		cmpq	$0, _ZL28__gthrw___pthread_key_createPjPFvPvE@GOTPCREL(%rip)
 2066      00000000 
 2067              	.LBE3560:
GAS LISTING /tmp/ccmMnd7l.s 			page 276


 2068              	.LBE3559:
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 							 -1) <= 0)
 2069              		.loc 7 246 0
 2070 0360 488D4F10 		leaq	16(%rdi), %rcx
 2071              	.LVL211:
 2072              	.LBB3567:
 2073              	.LBB3565:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 2074              		.loc 15 81 0
 2075 0364 741C     		je	.L104
 2076              	.LVL212:
 2077              	.LBB3561:
 2078              	.LBB3562:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
 2079              		.loc 15 49 0
 2080 0366 B8FFFFFF 		movl	$-1, %eax
 2080      FF
 2081 036b F00FC101 		lock; xaddl	%eax, (%rcx)
 2082              	.LVL213:
 2083              	.L105:
 2084              	.LBE3562:
 2085              	.LBE3561:
 2086              	.LBE3565:
 2087              	.LBE3567:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 2088              		.loc 7 245 0
 2089 036f 85C0     		testl	%eax, %eax
 2090 0371 7FB5     		jg	.L107
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 2091              		.loc 7 249 0
 2092 0373 488DB424 		leaq	5040(%rsp), %rsi
 2092      B0130000 
 2093              	.LVL214:
 2094 037b E8000000 		call	_ZNSs4_Rep10_M_destroyERKSaIcE@PLT
 2094      00
 2095              	.LVL215:
 2096 0380 EBA6     		jmp	.L107
 2097              	.LVL216:
 2098              	.L104:
 2099              	.LBB3568:
 2100              	.LBB3566:
 2101              	.LBB3563:
 2102              	.LBB3564:
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 2103              		.loc 15 67 0
 2104 0382 8B42F8   		movl	-8(%rdx), %eax
 2105              	.LVL217:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 2106              		.loc 15 68 0
 2107 0385 8D48FF   		leal	-1(%rax), %ecx
 2108              	.LVL218:
 2109 0388 894AF8   		movl	%ecx, -8(%rdx)
 2110 038b EBE2     		jmp	.L105
 2111              	.LBE3564:
 2112              	.LBE3563:
 2113              	.LBE3566:
 2114              	.LBE3568:
GAS LISTING /tmp/ccmMnd7l.s 			page 277


 2115              	.LBE3558:
 2116              	.LBE3557:
 2117              	.LBE3556:
 2118              	.LBE3555:
 2119              	.LBE3550:
 2120              	.LBE3549:
 2121              	.LBE3570:
 2122              		.cfi_endproc
 2123              	.LFE6050:
 2124              		.globl	__gxx_personality_v0
 2125              		.section	.gcc_except_table._Z9genpointsmj,"aG",@progbits,_Z9genpointsmj,comdat
 2126              	.LLSDA6050:
 2127 0000 FF       		.byte	0xff
 2128 0001 FF       		.byte	0xff
 2129 0002 01       		.byte	0x1
 2130 0003 20       		.uleb128 .LLSDACSE6050-.LLSDACSB6050
 2131              	.LLSDACSB6050:
 2132 0004 63       		.uleb128 .LEHB0-.LFB6050
 2133 0005 05       		.uleb128 .LEHE0-.LEHB0
 2134 0006 9B06     		.uleb128 .L113-.LFB6050
 2135 0008 00       		.uleb128 0
 2136 0009 73       		.uleb128 .LEHB1-.LFB6050
 2137 000a 05       		.uleb128 .LEHE1-.LEHB1
 2138 000b 9106     		.uleb128 .L112-.LFB6050
 2139 000d 00       		.uleb128 0
 2140 000e 9401     		.uleb128 .LEHB2-.LFB6050
 2141 0010 B801     		.uleb128 .LEHE2-.LEHB2
 2142 0012 8C06     		.uleb128 .L114-.LFB6050
 2143 0014 00       		.uleb128 0
 2144 0015 F904     		.uleb128 .LEHB3-.LFB6050
 2145 0017 05       		.uleb128 .LEHE3-.LEHB3
 2146 0018 00       		.uleb128 0
 2147 0019 00       		.uleb128 0
 2148 001a 9606     		.uleb128 .LEHB4-.LFB6050
 2149 001c 05       		.uleb128 .LEHE4-.LEHB4
 2150 001d 00       		.uleb128 0
 2151 001e 00       		.uleb128 0
 2152 001f B906     		.uleb128 .LEHB5-.LFB6050
 2153 0021 05       		.uleb128 .LEHE5-.LEHB5
 2154 0022 00       		.uleb128 0
 2155 0023 00       		.uleb128 0
 2156              	.LLSDACSE6050:
 2157              		.section	.text._Z9genpointsmj,"axG",@progbits,_Z9genpointsmj,comdat
 2158              		.size	_Z9genpointsmj, .-_Z9genpointsmj
 2159              		.section	.text.unlikely._Z9genpointsmj,"axG",@progbits,_Z9genpointsmj,comdat
 2160              	.LCOLDE10:
 2161              		.section	.text._Z9genpointsmj,"axG",@progbits,_Z9genpointsmj,comdat
 2162              	.LHOTE10:
 2163              		.section	.text.unlikely._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEld
 2164              	.LCOLDB11:
 2165              		.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__op
 2166              	.LHOTB11:
 2167              		.p2align 4,,15
 2168              		.weak	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2169              		.type	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2170              	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_it
 2171              	.LFB6560:
GAS LISTING /tmp/ccmMnd7l.s 			page 278


 2172              		.file 16 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Heap implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Copyright (c) 1997
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Silicon Graphics Computer Systems, Inc.
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Permission to use, copy, modify, distribute and sell this software
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * and its documentation for any purpose is hereby granted without fee,
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * provided that the above copyright notice appear in all copies and
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * that both that copyright notice and this permission notice appear
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * in supporting documentation.  Silicon Graphics makes no
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * representations about the suitability of this software for any
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  */
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** /** @file bits/stl_heap.h
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *  This is an internal header file, included by other library headers.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *  Do not attempt to use it directly. @headername{queue}
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  */
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #ifndef _STL_HEAP_H
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #define _STL_HEAP_H 1
GAS LISTING /tmp/ccmMnd7l.s 			page 279


  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <debug/debug.h>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <bits/move.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <bits/predefined_ops.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** namespace std _GLIBCXX_VISIBILITY(default)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** {
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    * @defgroup heap_algorithms Heap
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    * @ingroup sorting_algorithms
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    */
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance,
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Compare>
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     _Distance
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap_until(_RandomAccessIterator __first, _Distance __n,
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		    _Compare __comp)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = 0;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       for (_Distance __child = 1; __child < __n; ++__child)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__comp(__first + __parent, __first + __child))
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    return __child;
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if ((__child & 1) == 0)
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    ++__parent;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return __n;
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // __is_heap, a predicate testing whether or not a range is a heap.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // This function is an extension, not part of the C++ standard.
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance>
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _Distance __n)
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return std::__is_heap_until(__first, __n,
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			__gnu_cxx::__ops::__iter_less_iter()) == __n;
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare,
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Distance>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return std::__is_heap_until(__first, __n,
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	__gnu_cxx::__ops::__iter_comp_iter(__comp)) == __n;
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     { return std::__is_heap(__first, std::distance(__first, __last)); }
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
GAS LISTING /tmp/ccmMnd7l.s 			page 280


 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     { return std::__is_heap(__first, __comp, std::distance(__first, __last)); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // Heap-manipulation functions: push_heap, pop_heap, make_heap, sort_heap,
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // + is_heap and is_heap_until in C++0x.
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance, typename _Tp,
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Compare>
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __push_heap(_RandomAccessIterator __first,
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Distance __holeIndex, _Distance __topIndex, _Tp __value,
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = (__holeIndex - 1) / 2;
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __parent;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Push an element onto a heap.
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap + element.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pushes the element at last-1 onto the valid heap
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  over the range [__first,__last-1).  After completion,
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  [__first,__last) is a valid heap.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_ValueType>)
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap(__first, __last - 1);
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, _DistanceType((__last - __first) - 1),
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _DistanceType(0), _GLIBCXX_MOVE(__value),
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_less_val());
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
GAS LISTING /tmp/ccmMnd7l.s 			page 281


 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Push an element onto a heap using comparison functor.
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap + element.
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pushes the element at __last-1 onto the valid
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap over the range [__first,__last-1).  After completion,
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  [__first,__last) is a valid heap.  Compare operations are
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  performed using comp.
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap_pred(__first, __last - 1, __comp);
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, _DistanceType((__last - __first) - 1),
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _DistanceType(0), _GLIBCXX_MOVE(__value),
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_val(__comp));
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance,
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Tp, typename _Compare>
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
 2173              		.loc 16 207 0
 2174              		.cfi_startproc
 2175              	.LVL219:
 2176              	.LBB3571:
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		  _Distance __len, _Tp __value, _Compare __comp)
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       const _Distance __topIndex = __holeIndex;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __secondChild = __holeIndex;
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2177              		.loc 16 212 0
 2178 0000 488D42FF 		leaq	-1(%rdx), %rax
 2179 0004 4989C3   		movq	%rax, %r11
 2180 0007 49C1EB3F 		shrq	$63, %r11
 2181 000b 4901C3   		addq	%rax, %r11
 2182 000e 49D1FB   		sarq	%r11
 2183 0011 4C39DE   		cmpq	%r11, %rsi
 2184 0014 0F8DDC00 		jge	.L130
 2184      0000
 2185 001a 4989F0   		movq	%rsi, %r8
 2186              	.LVL220:
GAS LISTING /tmp/ccmMnd7l.s 			page 282


 2187 001d 0F1F00   		.p2align 4,,10
 2188              		.p2align 3
 2189              	.L140:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __secondChild = 2 * (__secondChild + 1);
 2190              		.loc 16 214 0
 2191 0020 498D4001 		leaq	1(%r8), %rax
 2192 0024 488D0C00 		leaq	(%rax,%rax), %rcx
 2193              	.LBB3572:
 2194              	.LBB3573:
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       template<typename _Iter>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 			  typename __enable_if<
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Forward iterator requirements
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *_M_current; }
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       pointer
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current; }
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Random access iterator requirements
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current[__n]; }
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
GAS LISTING /tmp/ccmMnd7l.s 			page 283


 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2195              		.loc 11 782 0
 2196 0028 48C1E004 		salq	$4, %rax
 2197 002c 4801F8   		addq	%rdi, %rax
 2198              	.LBE3573:
 2199              	.LBE3572:
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__comp(__first + __secondChild,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		     __first + (__secondChild - 1)))
 2200              		.loc 16 216 0
 2201 002f 4C8D51FF 		leaq	-1(%rcx), %r10
 2202              	.LBB3574:
 2203              	.LBB3575:
 2204              		.file 17 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Default predicates for internal use -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Copyright (C) 2013-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** /** @file predefined_ops.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  *  You should not attempt to use it directly.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** #ifndef _GLIBCXX_PREDEFINED_OPS_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** #define _GLIBCXX_PREDEFINED_OPS_H	1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** namespace __gnu_cxx
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** {
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** namespace __ops
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** {
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Iter_less_iter
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Iterator1, typename _Iterator2>
GAS LISTING /tmp/ccmMnd7l.s 			page 284


  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Iterator1 __it1, _Iterator2 __it2) const
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2205              		.loc 17 42 0
 2206 0033 F20F1010 		movsd	(%rax), %xmm2
 2207              	.LBE3575:
 2208              	.LBE3574:
 2209              	.LBB3577:
 2210              	.LBB3578:
 2211              		.loc 11 782 0
 2212 0037 4E8D0CD7 		leaq	(%rdi,%r10,8), %r9
 2213              	.LBE3578:
 2214              	.LBE3577:
 2215              	.LBB3579:
 2216              	.LBB3576:
 2217              		.loc 17 42 0
 2218 003b F2410F10 		movsd	(%r9), %xmm1
 2218      09
 2219 0040 660F2ECA 		ucomisd	%xmm2, %xmm1
 2220 0044 F20F5FCA 		maxsd	%xmm2, %xmm1
 2221 0048 490F47CA 		cmova	%r10, %rcx
 2222 004c 490F47C1 		cmova	%r9, %rax
 2223              	.LVL221:
 2224              	.LBE3576:
 2225              	.LBE3579:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2226              		.loc 16 212 0
 2227 0050 4C39D9   		cmpq	%r11, %rcx
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    __secondChild--;
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
 2228              		.loc 16 218 0
 2229 0053 F2420F11 		movsd	%xmm1, (%rdi,%r8,8)
 2229      0CC7
 2230              	.LVL222:
 2231 0059 4989C8   		movq	%rcx, %r8
 2232              	.LVL223:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2233              		.loc 16 212 0
 2234 005c 7CC2     		jl	.L140
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __secondChild;
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if ((__len & 1) == 0 && __secondChild == (__len - 2) / 2)
 2235              		.loc 16 221 0
 2236 005e F6C201   		testb	$1, %dl
 2237 0061 7516     		jne	.L141
 2238              	.LVL224:
 2239              	.L147:
 2240              		.loc 16 221 0 is_stmt 0 discriminator 1
 2241 0063 4883EA02 		subq	$2, %rdx
 2242              	.LVL225:
 2243 0067 4989D0   		movq	%rdx, %r8
 2244 006a 49C1E83F 		shrq	$63, %r8
 2245 006e 4C01C2   		addq	%r8, %rdx
 2246              	.LVL226:
 2247 0071 48D1FA   		sarq	%rdx
 2248 0074 4839D1   		cmpq	%rdx, %rcx
 2249 0077 7467     		je	.L151
GAS LISTING /tmp/ccmMnd7l.s 			page 285


 2250              	.L141:
 2251              	.LVL227:
 2252              	.LBB3580:
 2253              	.LBB3581:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2254              		.loc 16 129 0 is_stmt 1
 2255 0079 4839F1   		cmpq	%rsi, %rcx
 2256 007c 7E22     		jle	.L142
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = (__holeIndex - 1) / 2;
 2257              		.loc 16 128 0
 2258 007e 488D51FF 		leaq	-1(%rcx), %rdx
 2259 0082 4989D0   		movq	%rdx, %r8
 2260 0085 49C1E83F 		shrq	$63, %r8
 2261 0089 4901D0   		addq	%rdx, %r8
 2262 008c 49D1F8   		sarq	%r8
 2263              	.LVL228:
 2264              	.LBB3582:
 2265              	.LBB3583:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   };
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_iter
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_less_iter()
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_iter(); }
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Iter_less_val
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Iterator, typename _Value>
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Iterator __it, _Value& __val) const
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it < __val; }
 2266              		.loc 17 54 0
 2267 008f F2420F10 		movsd	(%rdi,%r8,8), %xmm1
 2267      0CC7
 2268              	.LBE3583:
 2269              	.LBE3582:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2270              		.loc 16 129 0
 2271 0095 660F2EC1 		ucomisd	%xmm1, %xmm0
 2272 0099 7710     		ja	.L144
 2273              	.LVL229:
 2274 009b 0F1F4400 		.p2align 4,,10
 2274      00
 2275              		.p2align 3
 2276              	.L142:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 2277              		.loc 16 135 0
 2278 00a0 F20F1100 		movsd	%xmm0, (%rax)
 2279 00a4 C3       		ret
 2280              	.LVL230:
 2281              		.p2align 4,,10
 2282 00a5 0F1F00   		.p2align 3
 2283              	.L148:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 2284              		.loc 16 133 0
 2285 00a8 4989D0   		movq	%rdx, %r8
 2286              	.LVL231:
 2287              	.L144:
GAS LISTING /tmp/ccmMnd7l.s 			page 286


 2288 00ab 498D50FF 		leaq	-1(%r8), %rdx
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 2289              		.loc 16 131 0
 2290 00af F20F110C 		movsd	%xmm1, (%rdi,%rcx,8)
 2290      CF
 2291              	.LBB3585:
 2292              	.LBB3586:
 2293              		.loc 11 782 0
 2294 00b4 4A8D04C7 		leaq	(%rdi,%r8,8), %rax
 2295              	.LVL232:
 2296              	.LBE3586:
 2297              	.LBE3585:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 2298              		.loc 16 133 0
 2299 00b8 4889D1   		movq	%rdx, %rcx
 2300 00bb 48C1E93F 		shrq	$63, %rcx
 2301 00bf 4801CA   		addq	%rcx, %rdx
 2302 00c2 48D1FA   		sarq	%rdx
 2303              	.LVL233:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2304              		.loc 16 129 0
 2305 00c5 4C39C6   		cmpq	%r8, %rsi
 2306 00c8 7DD6     		jge	.L142
 2307              	.LVL234:
 2308              	.LBB3587:
 2309              	.LBB3584:
 2310              		.loc 17 54 0
 2311 00ca F20F100C 		movsd	(%rdi,%rdx,8), %xmm1
 2311      D7
 2312              	.LVL235:
 2313 00cf 4C89C1   		movq	%r8, %rcx
 2314              	.LBE3584:
 2315              	.LBE3587:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2316              		.loc 16 129 0
 2317 00d2 660F2EC1 		ucomisd	%xmm1, %xmm0
 2318 00d6 77D0     		ja	.L148
 2319              	.LVL236:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 2320              		.loc 16 135 0
 2321 00d8 F20F1100 		movsd	%xmm0, (%rax)
 2322 00dc C3       		ret
 2323              	.LVL237:
 2324 00dd 0F1F00   		.p2align 4,,10
 2325              		.p2align 3
 2326              	.L151:
 2327              	.LBE3581:
 2328              	.LBE3580:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __secondChild = 2 * (__secondChild + 1);
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
 2329              		.loc 16 224 0
 2330 00e0 488D4C09 		leaq	1(%rcx,%rcx), %rcx
 2330      01
 2331              	.LVL238:
 2332              	.LBB3588:
 2333              	.LBB3589:
GAS LISTING /tmp/ccmMnd7l.s 			page 287


 2334              		.loc 11 782 0
 2335 00e5 488D14CF 		leaq	(%rdi,%rcx,8), %rdx
 2336              	.LVL239:
 2337              	.LBE3589:
 2338              	.LBE3588:
 2339              		.loc 16 224 0
 2340 00e9 F20F100A 		movsd	(%rdx), %xmm1
 2341 00ed F20F1108 		movsd	%xmm1, (%rax)
 2342              	.LVL240:
 2343 00f1 4889D0   		movq	%rdx, %rax
 2344 00f4 EB83     		jmp	.L141
 2345              	.LVL241:
 2346              	.L130:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 2347              		.loc 16 221 0
 2348 00f6 F6C201   		testb	$1, %dl
 2349 00f9 488D04F7 		leaq	(%rdi,%rsi,8), %rax
 2350 00fd 4889F1   		movq	%rsi, %rcx
 2351 0100 0F845DFF 		je	.L147
 2351      FFFF
 2352              	.LVL242:
 2353 0106 EB98     		jmp	.L142
 2354              	.LBE3571:
 2355              		.cfi_endproc
 2356              	.LFE6560:
 2357              		.size	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2358              		.section	.text.unlikely._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEld
 2359              	.LCOLDE11:
 2360              		.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__op
 2361              	.LHOTE11:
 2362              		.section	.text.unlikely
 2363              	.LCOLDB12:
 2364              		.text
 2365              	.LHOTB12:
 2366 0005 66662E0F 		.p2align 4,,15
 2366      1F840000 
 2366      000000
 2367              		.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Ite
 2368              	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_
 2369              	.LFB6650:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2370              		.loc 12 1939 0
 2371              		.cfi_startproc
 2372 0010 4155     		pushq	%r13
 2373              		.cfi_def_cfa_offset 16
 2374              		.cfi_offset 13, -16
 2375 0012 4989D5   		movq	%rdx, %r13
 2376 0015 4154     		pushq	%r12
 2377              		.cfi_def_cfa_offset 24
 2378              		.cfi_offset 12, -24
 2379              	.LBB3590:
 2380              	.LBB3591:
 2381              	.LBB3592:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
GAS LISTING /tmp/ccmMnd7l.s 			page 288


 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       const _Iterator&
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current; }
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Forward iterator requirements
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Random access iterator requirements
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
GAS LISTING /tmp/ccmMnd7l.s 			page 289


 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // parameters.
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     // DR 685.
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline auto
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
GAS LISTING /tmp/ccmMnd7l.s 			page 290


 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 2382              		.loc 11 914 0
 2383 0017 4889F2   		movq	%rsi, %rdx
 2384              	.LBE3592:
 2385              	.LBE3591:
 2386              	.LBE3590:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2387              		.loc 12 1939 0
 2388 001a 55       		pushq	%rbp
 2389              		.cfi_def_cfa_offset 32
 2390              		.cfi_offset 6, -32
 2391 001b 53       		pushq	%rbx
 2392              		.cfi_def_cfa_offset 40
 2393              		.cfi_offset 3, -40
 2394              	.LBB3685:
 2395              	.LBB3595:
 2396              	.LBB3593:
 2397              		.loc 11 914 0
 2398 001c 4829FA   		subq	%rdi, %rdx
 2399              	.LBE3593:
 2400              	.LBE3595:
 2401              	.LBE3685:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2402              		.loc 12 1939 0
 2403 001f 4989FC   		movq	%rdi, %r12
 2404 0022 4889F3   		movq	%rsi, %rbx
 2405 0025 4883EC08 		subq	$8, %rsp
 2406              		.cfi_def_cfa_offset 48
 2407              	.LBB3686:
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
 2408              		.loc 12 1943 0
 2409 0029 4881FA87 		cmpq	$135, %rdx
 2409      000000
 2410 0030 0F8EEE01 		jle	.L152
 2410      0000
 2411              	.LBB3596:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2412              		.loc 12 1945 0
 2413 0036 4D85ED   		testq	%r13, %r13
 2414 0039 4889F0   		movq	%rsi, %rax
 2415 003c 488D6F08 		leaq	8(%rdi), %rbp
 2416 0040 0F847201 		je	.L154
 2416      0000
 2417              	.L156:
GAS LISTING /tmp/ccmMnd7l.s 			page 291


 2418              	.LBB3597:
 2419              	.LBB3598:
 2420              	.LBB3599:
 2421              	.LBB3600:
 2422              		.loc 11 914 0
 2423 0046 4C29E0   		subq	%r12, %rax
 2424              	.LBE3600:
 2425              	.LBE3599:
 2426              	.LBB3602:
 2427              	.LBB3603:
 2428              	.LBB3604:
 2429              	.LBB3605:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2430              		.loc 17 42 0
 2431 0049 F2410F10 		movsd	8(%r12), %xmm0
 2431      442408
 2432              	.LBE3605:
 2433              	.LBE3604:
 2434              	.LBE3603:
 2435              	.LBE3602:
 2436              	.LBB3622:
 2437              	.LBB3601:
 2438              		.loc 11 914 0
 2439 0050 48C1F803 		sarq	$3, %rax
 2440              	.LBE3601:
 2441              	.LBE3622:
 2442              	.LBE3598:
 2443              	.LBE3597:
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
 2444              		.loc 12 1950 0
 2445 0054 4983ED01 		subq	$1, %r13
 2446              	.LBB3657:
 2447              	.LBB3654:
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
 2448              		.loc 12 1919 0
 2449 0058 4889C2   		movq	%rax, %rdx
 2450              	.LBB3623:
 2451              	.LBB3619:
 2452              	.LBB3607:
 2453              	.LBB3608:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2454              		.loc 17 42 0
 2455 005b F20F105E 		movsd	-8(%rsi), %xmm3
 2455      F8
 2456              	.LBE3608:
 2457              	.LBE3607:
 2458              	.LBE3619:
 2459              	.LBE3623:
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
 2460              		.loc 12 1919 0
 2461 0060 48C1EA3F 		shrq	$63, %rdx
 2462 0064 4801D0   		addq	%rdx, %rax
 2463 0067 48D1F8   		sarq	%rax
 2464              	.LBB3624:
 2465              	.LBB3625:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2466              		.loc 11 782 0
GAS LISTING /tmp/ccmMnd7l.s 			page 292


 2467 006a 498D04C4 		leaq	(%r12,%rax,8), %rax
 2468              	.LBE3625:
 2469              	.LBE3624:
 2470              	.LBB3626:
 2471              	.LBB3620:
 2472              	.LBB3609:
 2473              	.LBB3606:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2474              		.loc 17 42 0
 2475 006e F20F1008 		movsd	(%rax), %xmm1
 2476              	.LBE3606:
 2477              	.LBE3609:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__a, __b))
 2478              		.loc 12 81 0
 2479 0072 660F2EC8 		ucomisd	%xmm0, %xmm1
 2480 0076 0F86E800 		jbe	.L199
 2480      0000
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__b, __c))
 2481              		.loc 12 83 0
 2482 007c 660F2ED9 		ucomisd	%xmm1, %xmm3
 2483 0080 0F87EE00 		ja	.L208
 2483      0000
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
 2484              		.loc 12 85 0
 2485 0086 660F2ED8 		ucomisd	%xmm0, %xmm3
 2486 008a 0F860B01 		jbe	.L209
 2486      0000
 2487              	.L207:
 2488              	.LBB3610:
 2489              	.LBB3611:
 2490              	.LBB3612:
 2491              		.file 18 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** /** @file bits/move.h
GAS LISTING /tmp/ccmMnd7l.s 			page 293


  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #ifndef _MOVE_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _MOVE_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <bits/c++config.h>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <bits/concept_check.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Same as C++11 std::addressof
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @ingroup utilities
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline _Tp*
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       return reinterpret_cast<_Tp*>
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     }
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** } // namespace
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #if __cplusplus >= 201103L
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @addtogroup utilities
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @{
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Forward an lvalue.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to the specified type.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr _Tp&&
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Forward an rvalue.
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to the specified type.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
GAS LISTING /tmp/ccmMnd7l.s 			page 294


  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr _Tp&&
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       return static_cast<_Tp&&>(__t);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     move(_Tp&& __t) noexcept
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     struct __move_if_noexcept_cond
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****                     is_copy_constructible<_Tp>>::type { };
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __x  A thing of arbitrary type.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr typename
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     move_if_noexcept(_Tp& __x) noexcept
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return std::move(__x); }
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   // declval, from type_traits.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Returns the actual address of the object or function
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *         referenced by r, even in the presence of an overloaded
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *         operator&.
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __r  Reference to an object or function.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return   The actual address.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline _Tp*
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     addressof(_Tp& __r) noexcept
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return std::__addressof(__r); }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /// @} group utilities
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
GAS LISTING /tmp/ccmMnd7l.s 			page 295


 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** } // namespace
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #else
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #endif
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @addtogroup utilities
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @{
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Swaps two values.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __a  A thing of arbitrary type.
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __b  Another thing of arbitrary type.
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return   Nothing.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline void
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     swap(_Tp& __a, _Tp& __b)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #if __cplusplus >= 201103L
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     noexcept(__and_<is_nothrow_move_constructible<_Tp>,
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 	            is_nothrow_move_assignable<_Tp>>::value)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #endif
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       // concept requirements
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2492              		.loc 18 175 0
 2493 0090 F2410F10 		movsd	(%r12), %xmm2
 2493      1424
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2494              		.loc 18 176 0
 2495 0096 F2410F11 		movsd	%xmm3, (%r12)
 2495      1C24
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 2496              		.loc 18 177 0
 2497 009c F20F1156 		movsd	%xmm2, -8(%rsi)
 2497      F8
 2498 00a1 F2410F10 		movsd	8(%r12), %xmm1
 2498      4C2408
 2499 00a8 F2410F10 		movsd	(%r12), %xmm0
 2499      0424
 2500              	.L168:
 2501              	.LBE3612:
 2502              	.LBE3611:
 2503              	.LBE3610:
 2504              	.LBE3620:
 2505              	.LBE3626:
GAS LISTING /tmp/ccmMnd7l.s 			page 296


 2506              	.LBB3627:
 2507              	.LBB3628:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2508              		.loc 12 1901 0
 2509 00ae 660F2EC1 		ucomisd	%xmm1, %xmm0
 2510              	.LBE3628:
 2511              	.LBE3627:
 2512              	.LBE3654:
 2513              	.LBE3657:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2514              		.loc 12 1945 0
 2515 00b2 4989E8   		movq	%rbp, %r8
 2516 00b5 4889F1   		movq	%rsi, %rcx
 2517 00b8 498D4008 		leaq	8(%r8), %rax
 2518              	.LBB3658:
 2519              	.LBB3655:
 2520              	.LBB3652:
 2521              	.LBB3651:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2522              		.loc 12 1901 0
 2523 00bc 765F     		jbe	.L204
 2524 00be 6690     		.p2align 4,,10
 2525              		.p2align 3
 2526              	.L193:
 2527              	.LBB3629:
 2528              	.LBB3630:
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 2529              		.loc 11 751 0
 2530 00c0 4889C3   		movq	%rax, %rbx
 2531 00c3 4883C008 		addq	$8, %rax
 2532              	.LBE3630:
 2533              	.LBE3629:
 2534              	.LBB3631:
 2535              	.LBB3632:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2536              		.loc 17 42 0
 2537 00c7 F20F1048 		movsd	-8(%rax), %xmm1
 2537      F8
 2538              	.LBE3632:
 2539              	.LBE3631:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2540              		.loc 12 1901 0
 2541 00cc 660F2EC1 		ucomisd	%xmm1, %xmm0
 2542 00d0 77EE     		ja	.L193
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2543              		.loc 12 1904 0
 2544 00d2 660F2ED0 		ucomisd	%xmm0, %xmm2
 2545              	.LBB3633:
 2546              	.LBB3634:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2547              		.loc 11 763 0
 2548 00d6 488D51F8 		leaq	-8(%rcx), %rdx
 2549 00da 488D41F0 		leaq	-16(%rcx), %rax
 2550              	.LBE3634:
 2551              	.LBE3633:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2552              		.loc 12 1904 0
GAS LISTING /tmp/ccmMnd7l.s 			page 297


 2553 00de 764E     		jbe	.L205
 2554              		.p2align 4,,10
 2555              		.p2align 3
 2556              	.L192:
 2557              	.LBB3637:
 2558              	.LBB3638:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2559              		.loc 11 763 0
 2560 00e0 4889C1   		movq	%rax, %rcx
 2561 00e3 4883E808 		subq	$8, %rax
 2562              	.LBE3638:
 2563              	.LBE3637:
 2564              	.LBB3639:
 2565              	.LBB3640:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2566              		.loc 17 42 0
 2567 00e7 F20F1050 		movsd	8(%rax), %xmm2
 2567      08
 2568              	.LBE3640:
 2569              	.LBE3639:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2570              		.loc 12 1904 0
 2571 00ec 660F2ED0 		ucomisd	%xmm0, %xmm2
 2572 00f0 77EE     		ja	.L192
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
 2573              		.loc 12 1906 0
 2574 00f2 4839D9   		cmpq	%rbx, %rcx
 2575 00f5 763F     		jbe	.L210
 2576              	.L179:
 2577              	.LBB3641:
 2578              	.LBB3642:
 2579              	.LBB3643:
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2580              		.loc 18 176 0
 2581 00f7 F20F1113 		movsd	%xmm2, (%rbx)
 2582              	.LBE3643:
 2583              	.LBE3642:
 2584              	.LBE3641:
 2585              	.LBB3646:
 2586              	.LBB3647:
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 2587              		.loc 11 751 0
 2588 00fb 4C8D4308 		leaq	8(%rbx), %r8
 2589              	.LBE3647:
 2590              	.LBE3646:
 2591              	.LBB3648:
 2592              	.LBB3645:
 2593              	.LBB3644:
 2594              		.loc 18 177 0
 2595 00ff F20F1109 		movsd	%xmm1, (%rcx)
 2596 0103 F20F1051 		movsd	-8(%rcx), %xmm2
 2596      F8
 2597 0108 498D4008 		leaq	8(%r8), %rax
 2598 010c F20F104B 		movsd	8(%rbx), %xmm1
 2598      08
 2599 0111 F2410F10 		movsd	(%r12), %xmm0
 2599      0424
GAS LISTING /tmp/ccmMnd7l.s 			page 298


 2600              	.LBE3644:
 2601              	.LBE3645:
 2602              	.LBE3648:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2603              		.loc 12 1901 0
 2604 0117 660F2EC1 		ucomisd	%xmm1, %xmm0
 2605 011b 77A3     		ja	.L193
 2606              	.L204:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2607              		.loc 12 1904 0
 2608 011d 660F2ED0 		ucomisd	%xmm0, %xmm2
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2609              		.loc 12 1901 0
 2610 0121 4C89C3   		movq	%r8, %rbx
 2611              	.LBB3649:
 2612              	.LBB3635:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2613              		.loc 11 763 0
 2614 0124 488D51F8 		leaq	-8(%rcx), %rdx
 2615 0128 488D41F0 		leaq	-16(%rcx), %rax
 2616              	.LBE3635:
 2617              	.LBE3649:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2618              		.loc 12 1904 0
 2619 012c 77B2     		ja	.L192
 2620              	.L205:
 2621              	.LBB3650:
 2622              	.LBB3636:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2623              		.loc 11 763 0
 2624 012e 4889D1   		movq	%rdx, %rcx
 2625              	.LBE3636:
 2626              	.LBE3650:
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
 2627              		.loc 12 1906 0
 2628 0131 4839D9   		cmpq	%rbx, %rcx
 2629 0134 77C1     		ja	.L179
 2630              	.L210:
 2631              	.LBE3651:
 2632              	.LBE3652:
 2633              	.LBE3655:
 2634              	.LBE3658:
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
 2635              		.loc 12 1953 0
 2636 0136 4C89EA   		movq	%r13, %rdx
 2637 0139 4889DF   		movq	%rbx, %rdi
 2638 013c E8CFFEFF 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 2638      FF
 2639              	.LBE3596:
 2640              	.LBB3683:
 2641              	.LBB3594:
 2642              		.loc 11 914 0
 2643 0141 4889DA   		movq	%rbx, %rdx
 2644 0144 4889D8   		movq	%rbx, %rax
 2645 0147 4C29E2   		subq	%r12, %rdx
 2646              	.LBE3594:
 2647              	.LBE3683:
GAS LISTING /tmp/ccmMnd7l.s 			page 299


1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
 2648              		.loc 12 1943 0
 2649 014a 4881FA87 		cmpq	$135, %rdx
 2649      000000
 2650 0151 0F8ECD00 		jle	.L152
 2650      0000
 2651              	.LBB3684:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2652              		.loc 12 1945 0
 2653 0157 4D85ED   		testq	%r13, %r13
 2654 015a 745C     		je	.L154
 2655 015c 4889C6   		movq	%rax, %rsi
 2656 015f E9E2FEFF 		jmp	.L156
 2656      FF
 2657              	.L199:
 2658              	.LBB3659:
 2659              	.LBB3656:
 2660              	.LBB3653:
 2661              	.LBB3621:
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__a, __c))
 2662              		.loc 12 90 0
 2663 0164 660F2ED8 		ucomisd	%xmm0, %xmm3
 2664 0168 7731     		ja	.L209
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__b, __c))
 2665              		.loc 12 92 0
 2666 016a 660F2ED9 		ucomisd	%xmm1, %xmm3
 2667 016e 0F871CFF 		ja	.L207
 2667      FFFF
 2668              	.L208:
 2669              	.LBB3613:
 2670              	.LBB3614:
 2671              	.LBB3615:
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2672              		.loc 18 175 0
 2673 0174 F2410F10 		movsd	(%r12), %xmm0
 2673      0424
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2674              		.loc 18 176 0
 2675 017a F2410F11 		movsd	%xmm1, (%r12)
 2675      0C24
 2676              		.loc 18 177 0
 2677 0180 F20F1100 		movsd	%xmm0, (%rax)
 2678 0184 F20F1056 		movsd	-8(%rsi), %xmm2
 2678      F8
 2679 0189 F2410F10 		movsd	8(%r12), %xmm1
 2679      4C2408
 2680 0190 F2410F10 		movsd	(%r12), %xmm0
 2680      0424
 2681 0196 E913FFFF 		jmp	.L168
 2681      FF
 2682              	.L209:
 2683              	.LBE3615:
 2684              	.LBE3614:
 2685              	.LBE3613:
 2686              	.LBB3616:
 2687              	.LBB3617:
 2688              	.LBB3618:
GAS LISTING /tmp/ccmMnd7l.s 			page 300


 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2689              		.loc 18 175 0
 2690 019b F2410F10 		movsd	(%r12), %xmm1
 2690      0C24
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2691              		.loc 18 176 0
 2692 01a1 F2410F11 		movsd	%xmm0, (%r12)
 2692      0424
 2693              		.loc 18 177 0
 2694 01a7 F2410F11 		movsd	%xmm1, 8(%r12)
 2694      4C2408
 2695 01ae F20F1056 		movsd	-8(%rsi), %xmm2
 2695      F8
 2696 01b3 E9F6FEFF 		jmp	.L168
 2696      FF
 2697              	.L154:
 2698              	.LBE3618:
 2699              	.LBE3617:
 2700              	.LBE3616:
 2701              	.LBE3621:
 2702              	.LBE3653:
 2703              	.LBE3656:
 2704              	.LBE3659:
 2705              	.LBB3660:
 2706              	.LBB3661:
 2707              	.LBB3662:
 2708              	.LBB3663:
 2709              	.LBB3664:
 2710              	.LBB3665:
 2711              		.loc 11 914 0
 2712 01b8 48C1FA03 		sarq	$3, %rdx
 2713              	.LBE3665:
 2714              	.LBE3664:
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 						     + (__secondChild - 1)));
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __secondChild - 1;
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, __holeIndex, __topIndex, 
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _GLIBCXX_MOVE(__value),
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_val(__comp));
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	       _RandomAccessIterator __result, _Compare __comp)
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_ValueType;
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_DistanceType;
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*__result);
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			 _DistanceType(__last - __first),
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			 _GLIBCXX_MOVE(__value), __comp);
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
GAS LISTING /tmp/ccmMnd7l.s 			page 301


 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Pop an element off a heap.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @pre    [__first, __last) is a valid, non-empty range.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pops the top of the heap.  The elements __first
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  and __last-1 are swapped and [__first,__last-1) is made into a
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap.
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_ValueType;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_ValueType>)
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_non_empty_range(__first, __last);
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap(__first, __last);
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first > 1)
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  --__last;
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__pop_heap(__first, __last, __last,
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			  __gnu_cxx::__ops::__iter_less_iter());
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Pop an element off a heap using comparison functor.
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor to use.
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pops the top of the heap.  The elements __first
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  and __last-1 are swapped and [__first,__last-1) is made into a
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap.  Comparisons are made using comp.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     pop_heap(_RandomAccessIterator __first,
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	     _RandomAccessIterator __last, _Compare __comp)
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_non_empty_range(__first, __last);
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap_pred(__first, __last, __comp);
GAS LISTING /tmp/ccmMnd7l.s 			page 302


 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first > 1)
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  --__last;
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__pop_heap(__first, __last, __last,
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__comp));
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first < 2)
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	return;
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       const _DistanceType __len = __last - __first;
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _DistanceType __parent = (__len - 2) / 2;
 2715              		.loc 16 329 0
 2716 01bc 4C8D6AFE 		leaq	-2(%rdx), %r13
 2717              	.LBB3667:
 2718              	.LBB3666:
 2719              		.loc 11 914 0
 2720 01c0 4889D5   		movq	%rdx, %rbp
 2721              	.LBE3666:
 2722              	.LBE3667:
 2723              		.loc 16 329 0
 2724 01c3 49D1FD   		sarq	%r13
 2725 01c6 EB04     		jmp	.L158
 2726              	.L211:
 2727              	.LBB3668:
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (true)
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType __value = _GLIBCXX_MOVE(*(__first + __parent));
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			     __comp);
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__parent == 0)
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    return;
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent--;
 2728              		.loc 16 337 0
 2729 01c8 4983ED01 		subq	$1, %r13
 2730              	.L158:
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 2731              		.loc 16 333 0
 2732 01cc 4883EC08 		subq	$8, %rsp
 2733              		.cfi_def_cfa_offset 56
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType __value = _GLIBCXX_MOVE(*(__first + __parent));
 2734              		.loc 16 332 0
 2735 01d0 F2430F10 		movsd	(%r12,%r13,8), %xmm0
 2735      04EC
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
GAS LISTING /tmp/ccmMnd7l.s 			page 303


 2736              		.loc 16 333 0
 2737 01d6 6A00     		pushq	$0
 2738              		.cfi_def_cfa_offset 64
 2739 01d8 4C89EE   		movq	%r13, %rsi
 2740 01db 4889EA   		movq	%rbp, %rdx
 2741 01de 4C89E7   		movq	%r12, %rdi
 2742 01e1 E8000000 		call	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_l
 2742      00
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__parent == 0)
 2743              		.loc 16 335 0
 2744 01e6 4D85ED   		testq	%r13, %r13
 2745 01e9 59       		popq	%rcx
 2746              		.cfi_def_cfa_offset 56
 2747 01ea 5E       		popq	%rsi
 2748              		.cfi_def_cfa_offset 48
 2749 01eb 75DB     		jne	.L211
 2750              	.L159:
 2751              	.LBE3668:
 2752              	.LBE3663:
 2753              	.LBE3662:
 2754              	.LBE3661:
 2755              	.LBB3669:
 2756              	.LBB3670:
 2757              	.LBB3671:
 2758              	.LBB3672:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2759              		.loc 11 763 0
 2760 01ed 4883EB08 		subq	$8, %rbx
 2761              	.LBE3672:
 2762              	.LBE3671:
 2763              	.LBB3673:
 2764              	.LBB3674:
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 2765              		.loc 16 244 0
 2766 01f1 F2410F10 		movsd	(%r12), %xmm1
 2766      0C24
 2767              	.LBB3675:
 2768              	.LBB3676:
 2769              		.loc 11 914 0
 2770 01f7 4889DD   		movq	%rbx, %rbp
 2771              	.LBE3676:
 2772              	.LBE3675:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2773              		.loc 16 245 0
 2774 01fa 4883EC08 		subq	$8, %rsp
 2775              		.cfi_def_cfa_offset 56
 2776 01fe 31F6     		xorl	%esi, %esi
 2777              	.LBB3680:
 2778              	.LBB3677:
 2779              		.loc 11 914 0
 2780 0200 4C29E5   		subq	%r12, %rbp
 2781              	.LBE3677:
 2782              	.LBE3680:
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*__result);
 2783              		.loc 16 243 0
 2784 0203 F20F1003 		movsd	(%rbx), %xmm0
 2785              	.LBB3681:
GAS LISTING /tmp/ccmMnd7l.s 			page 304


 2786              	.LBB3678:
 2787              		.loc 11 914 0
 2788 0207 4889EA   		movq	%rbp, %rdx
 2789              	.LBE3678:
 2790              	.LBE3681:
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 2791              		.loc 16 244 0
 2792 020a F20F110B 		movsd	%xmm1, (%rbx)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2793              		.loc 16 245 0
 2794 020e 6A00     		pushq	$0
 2795              		.cfi_def_cfa_offset 64
 2796              	.LBB3682:
 2797              	.LBB3679:
 2798              		.loc 11 914 0
 2799 0210 48C1FA03 		sarq	$3, %rdx
 2800              	.LBE3679:
 2801              	.LBE3682:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2802              		.loc 16 245 0
 2803 0214 4C89E7   		movq	%r12, %rdi
 2804 0217 E8000000 		call	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_l
 2804      00
 2805              	.LBE3674:
 2806              	.LBE3673:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Construct a heap over a range.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation makes the elements in [__first,__last) into a heap.
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    typename iterator_traits<_RandomAccessIterator>::value_type>)
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__make_heap(__first, __last,
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_less_iter());
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Construct a heap over a range using comparison functor.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor to use.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
GAS LISTING /tmp/ccmMnd7l.s 			page 305


 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation makes the elements in [__first,__last) into a heap.
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  Comparisons are made using __comp.
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__make_heap(__first, __last,
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_iter(__comp));
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__last - __first > 1)
 2807              		.loc 16 393 0
 2808 021c 4883FD0F 		cmpq	$15, %rbp
 2809 0220 58       		popq	%rax
 2810              		.cfi_def_cfa_offset 56
 2811 0221 5A       		popq	%rdx
 2812              		.cfi_def_cfa_offset 48
 2813 0222 7FC9     		jg	.L159
 2814              	.L152:
 2815              	.LBE3670:
 2816              	.LBE3669:
 2817              	.LBE3660:
 2818              	.LBE3684:
 2819              	.LBE3686:
1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 2820              		.loc 12 1956 0
 2821 0224 4883C408 		addq	$8, %rsp
 2822              		.cfi_def_cfa_offset 40
 2823 0228 5B       		popq	%rbx
 2824              		.cfi_def_cfa_offset 32
 2825 0229 5D       		popq	%rbp
 2826              		.cfi_def_cfa_offset 24
 2827 022a 415C     		popq	%r12
 2828              		.cfi_def_cfa_offset 16
 2829 022c 415D     		popq	%r13
 2830              		.cfi_def_cfa_offset 8
 2831 022e C3       		ret
 2832              		.cfi_endproc
 2833              	.LFE6650:
 2834              		.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Ite
 2835              		.section	.text.unlikely
 2836              	.LCOLDE12:
 2837              		.text
 2838              	.LHOTE12:
GAS LISTING /tmp/ccmMnd7l.s 			page 306


 2839              		.section	.rodata.str1.1
 2840              	.LC14:
 2841 0033 646F6E65 		.string	"done in a median of "
 2841      20696E20 
 2841      61206D65 
 2841      6469616E 
 2841      206F6620 
 2842              	.LC15:
 2843 0048 6D732028 		.string	"ms (avg is "
 2843      61766720 
 2843      69732000 
 2844              	.LC16:
 2845 0054 2900     		.string	")"
 2846              	.LC17:
 2847 0056 276D6564 		.string	"'medt': "
 2847      74273A20 
 2847      00
 2848              	.LC18:
 2849 005f 2C202761 		.string	", 'avgt': "
 2849      76677427 
 2849      3A2000
 2850              	.LC19:
 2851 006a 7D00     		.string	"}"
 2852              		.section	.text.unlikely._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 2853              		.align 2
 2854              	.LCOLDB20:
 2855              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 2856              	.LHOTB20:
 2857              		.align 2
 2858              		.p2align 4,,15
 2859              		.weak	_ZN11RepeatTimerD2Ev
 2860              		.type	_ZN11RepeatTimerD2Ev, @function
 2861              	_ZN11RepeatTimerD2Ev:
 2862              	.LFB6046:
  49:./benchs/timing.hpp ****     }
  50:./benchs/timing.hpp ****     double _t0;
  51:./benchs/timing.hpp **** };
  52:./benchs/timing.hpp **** 
  53:./benchs/timing.hpp **** struct RepeatTimer {
  54:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
  55:./benchs/timing.hpp ****     bool next() {
  56:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
  57:./benchs/timing.hpp ****         bool done = _i != _ts.end();
  58:./benchs/timing.hpp ****         _t0 = gimme_time();
  59:./benchs/timing.hpp ****         return done;
  60:./benchs/timing.hpp ****     }
  61:./benchs/timing.hpp ****     operator bool() const {
  62:./benchs/timing.hpp ****         return _i != _ts.end();
  63:./benchs/timing.hpp ****     }
  64:./benchs/timing.hpp ****     ~RepeatTimer() {
 2863              		.loc 2 65 0
 2864              		.cfi_startproc
 2865              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2866              		.cfi_lsda 0x1b,.LLSDA6046
 2867              	.LVL243:
 2868 0000 4157     		pushq	%r15
 2869              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccmMnd7l.s 			page 307


 2870              		.cfi_offset 15, -16
 2871 0002 4156     		pushq	%r14
 2872              		.cfi_def_cfa_offset 24
 2873              		.cfi_offset 14, -24
 2874 0004 4155     		pushq	%r13
 2875              		.cfi_def_cfa_offset 32
 2876              		.cfi_offset 13, -32
 2877 0006 4154     		pushq	%r12
 2878              		.cfi_def_cfa_offset 40
 2879              		.cfi_offset 12, -40
 2880 0008 55       		pushq	%rbp
 2881              		.cfi_def_cfa_offset 48
 2882              		.cfi_offset 6, -48
 2883 0009 53       		pushq	%rbx
 2884              		.cfi_def_cfa_offset 56
 2885              		.cfi_offset 3, -56
 2886 000a 4889FB   		movq	%rdi, %rbx
 2887 000d 4883EC18 		subq	$24, %rsp
 2888              		.cfi_def_cfa_offset 80
 2889              	.LBB3687:
 2890              	.LBB3688:
 2891              	.LBB3689:
 2892              	.LBB3690:
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(__i) { }
 2893              		.loc 11 729 0
 2894 0011 4C8B6710 		movq	16(%rdi), %r12
 2895              	.LVL244:
 2896              	.LBE3690:
 2897              	.LBE3689:
 2898              	.LBE3688:
 2899              	.LBB3691:
 2900              	.LBB3692:
 2901              	.LBB3693:
 2902 0015 4C8B7708 		movq	8(%rdi), %r14
 2903              	.LVL245:
 2904              	.LBE3693:
 2905              	.LBE3692:
 2906              	.LBE3691:
 2907              	.LBB3694:
 2908              	.LBB3695:
 2909              		.file 19 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Numeric functions implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Under Section 7 of GPL version 3, you are granted additional
GAS LISTING /tmp/ccmMnd7l.s 			page 308


  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Copyright (c) 1996,1997
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** /** @file bits/stl_numeric.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *  Do not attempt to use it directly. @headername{numeric}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #ifndef _STL_NUMERIC_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #define _STL_NUMERIC_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <bits/concept_check.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <debug/debug.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <bits/move.h> // For _GLIBCXX_MOVE
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #if __cplusplus >= 201103L
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   /**
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @brief  Create a range of sequentially increasing values.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  For each element in the range @p [first,last) assigns @p value and
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  increments @p value as if by @p ++value.
GAS LISTING /tmp/ccmMnd7l.s 			page 309


  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __first  Start of range.
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __last  End of range.
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __value  Starting value.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @return  Nothing.
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    */
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   template<typename _ForwardIterator, typename _Tp>
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     void
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     iota(_ForwardIterator __first, _ForwardIterator __last, _Tp __value)
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     {
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       // concept requirements
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 				  _ForwardIterator>)
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_requires_valid_range(__first, __last);
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	{
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	  *__first = __value;
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	  ++__value;
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	}
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_END_NAMESPACE_VERSION
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** } // namespace std
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #endif
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** namespace std _GLIBCXX_VISIBILITY(default)
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** {
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   /**
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @brief  Accumulate values in a range.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  Accumulates the values in the range [first,last) using operator+().  The
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  initial value is @a init.  The values are processed in order.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __first  Start of range.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __last  End of range.
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __init  Starting value to add other values to.
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @return  The final sum.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   template<typename _InputIterator, typename _Tp>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     inline _Tp
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       // concept requirements
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_requires_valid_range(__first, __last);
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 2910              		.loc 19 126 0
 2911 0019 4D39E6   		cmpq	%r12, %r14
 2912 001c 0F840104 		je	.L213
 2912      0000
GAS LISTING /tmp/ccmMnd7l.s 			page 310


 2913 0022 660FEFC0 		pxor	%xmm0, %xmm0
 2914 0026 4C89F0   		movq	%r14, %rax
 2915              	.LVL246:
 2916 0029 0F1F8000 		.p2align 4,,10
 2916      000000
 2917              		.p2align 3
 2918              	.L214:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	__init = __init + *__first;
 2919              		.loc 19 127 0
 2920 0030 F20F5800 		addsd	(%rax), %xmm0
 2921              	.LVL247:
 2922 0034 4883C008 		addq	$8, %rax
 2923              	.LVL248:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	__init = __init + *__first;
 2924              		.loc 19 126 0
 2925 0038 4939C4   		cmpq	%rax, %r12
 2926 003b 75F3     		jne	.L214
 2927              	.LVL249:
 2928              	.LBE3695:
 2929              	.LBE3694:
 2930              	.LBB3696:
 2931              	.LBB3697:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2932              		.loc 6 655 0
 2933 003d 4C89E5   		movq	%r12, %rbp
 2934 0040 4C29F5   		subq	%r14, %rbp
 2935 0043 4889E8   		movq	%rbp, %rax
 2936              	.LVL250:
 2937 0046 48C1F803 		sarq	$3, %rax
 2938              	.LBE3697:
 2939              	.LBE3696:
  65:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 2940              		.loc 2 66 0
 2941 004a 4885C0   		testq	%rax, %rax
 2942 004d 0F88AF03 		js	.L215
 2942      0000
 2943 0053 660FEFC9 		pxor	%xmm1, %xmm1
 2944 0057 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 2944      C8
 2945              	.L216:
 2946 005c F20F5EC1 		divsd	%xmm1, %xmm0
 2947              	.LVL251:
 2948              	.LBB3698:
 2949              	.LBB3699:
 2950              	.LBB3700:
 2951              	.LBB3701:
 2952              	.LBB3702:
 2953              		.file 20 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // any later version.
GAS LISTING /tmp/ccmMnd7l.s 			page 311


   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/c++config.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/type_traits.h>
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
GAS LISTING /tmp/ccmMnd7l.s 			page 312


  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/concept_check.h>
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <debug/debug.h>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** {
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****             _ValueType1;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap<true>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           swap(*__a, *__b);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         }
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   Nothing.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  iterators themselves.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline void
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
GAS LISTING /tmp/ccmMnd7l.s 			page 313


 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType1;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType2;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType2>)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType1>)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType1;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType2;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       swap(*__a, *__b);
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The ranges must not overlap.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     _ForwardIterator2
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first2;
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 314


 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__a < __b)
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
GAS LISTING /tmp/ccmMnd7l.s 			page 315


 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__b, __a))
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__a, __b))
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Niter_base
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Miter_base
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
GAS LISTING /tmp/ccmMnd7l.s 			page 316


 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // a for loop with an explicit count.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = *__first;
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = *__first;
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
GAS LISTING /tmp/ccmMnd7l.s 			page 317


 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result + _Num;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT>
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct char_traits;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class istreambuf_iterator;
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class ostreambuf_iterator;
GAS LISTING /tmp/ccmMnd7l.s 			page 318


 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				    _CharT*>::__type
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
GAS LISTING /tmp/ccmMnd7l.s 			page 319


 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccmMnd7l.s 			page 320


 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result - _Num;
GAS LISTING /tmp/ccmMnd7l.s 			page 321


 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __last,
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __result);
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
GAS LISTING /tmp/ccmMnd7l.s 			page 322


 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						std::__miter_base(__last),
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						__result);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  	     const _Tp& __value)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __value;
GAS LISTING /tmp/ccmMnd7l.s 			page 323


 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     const _Tp& __value)
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		       __last - __first);
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   Nothing.
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline void
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator>)
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		    __value);
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __value;
GAS LISTING /tmp/ccmMnd7l.s 			page 324


 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first + __n;
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __equal
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         equal(_II1 __first1, _II1 __last1, _II2 __first2)
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first1 != __last1; ++__first1, ++__first2)
GAS LISTING /tmp/ccmMnd7l.s 			page 325


 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    if (!(*__first1 == *__first2))
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      return false;
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return true;
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __equal<true>
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return !__builtin_memcmp(__first1, __first2, sizeof(_Tp)
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   * (__last1 - __first1));
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2>
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline bool
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::value_type _ValueType1;
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::value_type _ValueType2;
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = ((__is_integer<_ValueType1>::__value
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			      || __is_pointer<_ValueType1>::__value)
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II1>::__value
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II2>::__value
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__equal<__simple>::equal(__first1, __last1, __first2);
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename, typename>
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lc_rai
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _II1
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __newlast1(_II1, _II1 __last1, _II2, _II2)
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return __last1; }
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II>
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __cnd2(_II __first, _II __last)
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return __first != __last; }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lc_rai<random_access_iterator_tag, random_access_iterator_tag>
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _RAI1, typename _RAI2>
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _RAI1
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __newlast1(_RAI1 __first1, _RAI1 __last1,
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   _RAI2 __first2, _RAI2 __last2)
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const typename iterator_traits<_RAI1>::difference_type
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __diff1 = __last1 - __first1;
GAS LISTING /tmp/ccmMnd7l.s 			page 326


 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const typename iterator_traits<_RAI2>::difference_type
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __diff2 = __last2 - __first2;
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _RAI>
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __cnd2(_RAI, _RAI)
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return true; }
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2, typename _Compare>
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     bool
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lexicographical_compare_impl(_II1 __first1, _II1 __last1,
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   _II2 __first2, _II2 __last2,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   _Compare __comp)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::iterator_category _Category1;
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::iterator_category _Category2;
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef std::__lc_rai<_Category1, _Category2> __rai_type;
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first1 != __last1 && __rai_type::__cnd2(__first2, __last2);
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   ++__first1, ++__first2)
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__first1, __first2))
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    return true;
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__first2, __first1))
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    return false;
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first1 == __last1 && __first2 != __last2;
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lexicographical_compare
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool __lc(_II1, _II1, _II2, _II2);
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     template<typename _II1, typename _II2>
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       bool
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __lexicographical_compare<_BoolType>::
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       {
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return std::__lexicographical_compare_impl(__first1, __last1,
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						   __first2, __last2,
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					__gnu_cxx::__ops::__iter_less_iter());
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       }
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lexicographical_compare<true>
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __lc(const _Tp* __first1, const _Tp* __last1,
GAS LISTING /tmp/ccmMnd7l.s 			page 327


 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     const _Up* __first2, const _Up* __last2)
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const size_t __len1 = __last1 - __first1;
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const size_t __len2 = __last2 - __first2;
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const int __result = __builtin_memcmp(__first1, __first2,
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						std::min(__len1, __len2));
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result != 0 ? __result < 0 : __len1 < __len2;
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2>
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline bool
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lexicographical_compare_aux(_II1 __first1, _II1 __last1,
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _II2 __first2, _II2 __last2)
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::value_type _ValueType1;
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::value_type _ValueType2;
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple =
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	(__is_byte<_ValueType1>::__value && __is_byte<_ValueType2>::__value
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && !__gnu_cxx::__numeric_traits<_ValueType1>::__is_signed
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && !__gnu_cxx::__numeric_traits<_ValueType2>::__is_signed
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && __is_pointer<_II1>::__value
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && __is_pointer<_II2>::__value);
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__lexicographical_compare<__simple>::__lc(__first1, __last1,
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 							    __first2, __last2);
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     _ForwardIterator
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lower_bound(_ForwardIterator __first, _ForwardIterator __last,
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		  const _Tp& __val, _Compare __comp)
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_DistanceType;
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       _DistanceType __len = std::distance(__first, __last);
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       while (__len > 0)
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  _DistanceType __half = __len >> 1;
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  _ForwardIterator __middle = __first;
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  std::advance(__middle, __half);
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__middle, __val))
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      __first = __middle;
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      __len = __len - __half - 1;
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  else
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __len = __half;
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Finds the first position in which @a val could be inserted
GAS LISTING /tmp/ccmMnd7l.s 			page 328


 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *         without changing the ordering.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first   An iterator.
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last    Another iterator.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __val     The search term.
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return         An iterator pointing to the first element <em>not less
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *                  than</em> @a val, or end() if every element is less than 
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *                  @a val.
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup binary_search_algorithms
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _ForwardIterator
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		const _Tp& __val)
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanOpConcept<
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__lower_bound(__first, __last, __val,
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				__gnu_cxx::__ops::__iter_less_val());
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /// This is a helper function for the sort routines and for random.tcc.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   //  Precondition: __n > 0.
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR int
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(int __n)
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(unsigned __n)
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(long __n)
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(long) * __CHAR_BIT__ - 1 - __builtin_clzl(__n); }
 2954              		.loc 20 1015 0
 2955 0060 480FBDC0 		bsrq	%rax, %rax
 2956 0064 BA3F0000 		movl	$63, %edx
 2956      00
 2957 0069 4883F03F 		xorq	$63, %rax
 2958              	.LBE3702:
 2959              	.LBE3701:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 2960              		.loc 12 1967 0
 2961 006d 4C89E6   		movq	%r12, %rsi
 2962 0070 4C89F7   		movq	%r14, %rdi
 2963              	.LVL252:
 2964              	.LBB3704:
 2965              	.LBB3703:
 2966              		.loc 20 1015 0
 2967 0073 4898     		cltq
 2968 0075 4829C2   		subq	%rax, %rdx
 2969              	.LBE3703:
 2970              	.LBE3704:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
GAS LISTING /tmp/ccmMnd7l.s 			page 329


 2971              		.loc 12 1969 0
 2972 0078 4801D2   		addq	%rdx, %rdx
 2973              	.LBE3700:
 2974              	.LBE3699:
 2975              	.LBE3698:
 2976              		.loc 2 66 0
 2977 007b F20F1104 		movsd	%xmm0, (%rsp)
 2977      24
 2978              	.LVL253:
 2979              	.LBB3791:
 2980              	.LBB3788:
 2981              	.LBB3785:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 2982              		.loc 12 1967 0
 2983 0080 E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 2983      00
 2984              	.LVL254:
 2985              	.LBB3705:
 2986              	.LBB3706:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 2987              		.loc 12 1882 0
 2988 0085 4881FD87 		cmpq	$135, %rbp
 2988      000000
 2989 008c 0F8E1E02 		jle	.L217
 2989      0000
 2990              	.LVL255:
 2991 0092 4D8DAE80 		leaq	128(%r14), %r13
 2991      000000
 2992              	.LBB3707:
 2993              	.LBB3708:
 2994              	.LBB3709:
 2995              	.LBB3710:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2996              		.loc 11 782 0
 2997 0099 4D8D7E08 		leaq	8(%r14), %r15
 2998 009d 4C89ED   		movq	%r13, %rbp
 2999              	.LVL256:
 3000              		.p2align 4,,10
 3001              		.p2align 3
 3002              	.L218:
 3003              	.LBE3710:
 3004              	.LBE3709:
 3005              	.LBB3711:
 3006              	.LBB3712:
 3007              	.LBB3713:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 3008              		.loc 17 42 0
 3009 00a0 F2410F10 		movsd	(%r15), %xmm1
 3009      0F
 3010              	.LVL257:
 3011              	.LBE3713:
 3012              	.LBE3712:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 3013              		.loc 12 1846 0
 3014 00a5 F2410F10 		movsd	(%r14), %xmm0
 3014      06
 3015 00aa 660F2EC1 		ucomisd	%xmm1, %xmm0
GAS LISTING /tmp/ccmMnd7l.s 			page 330


 3016 00ae 0F87AC02 		ja	.L284
 3016      0000
 3017              	.LVL258:
 3018              	.LBB3714:
 3019              	.LBB3715:
 3020              	.LBB3716:
 3021              	.LBB3717:
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     };
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_val
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_less_val()
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_val
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_comp_val(_Iter_less_iter)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Val_less_iter
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Value, typename _Iterator>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Value& __val, _Iterator __it) const
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return __val < *__it; }
 3022              		.loc 17 70 0
 3023 00b4 F2410F10 		movsd	-8(%r15), %xmm0
 3023      47F8
 3024 00ba 498D47F8 		leaq	-8(%r15), %rax
 3025              	.LVL259:
 3026              	.LBE3717:
 3027              	.LBE3716:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3028              		.loc 12 1827 0
 3029 00be 660F2EC1 		ucomisd	%xmm1, %xmm0
 3030 00c2 770F     		ja	.L267
 3031 00c4 E9220300 		jmp	.L285
 3031      00
 3032              	.LVL260:
 3033 00c9 0F1F8000 		.p2align 4,,10
 3033      000000
 3034              		.p2align 3
 3035              	.L246:
 3036 00d0 4889D0   		movq	%rdx, %rax
 3037              	.LVL261:
 3038              	.L267:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 3039              		.loc 12 1829 0
 3040 00d3 F20F1140 		movsd	%xmm0, 8(%rax)
 3040      08
 3041              	.LVL262:
 3042              	.LBB3719:
 3043              	.LBB3720:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 3044              		.loc 11 763 0
 3045 00d8 488D50F8 		leaq	-8(%rax), %rdx
 3046              	.LVL263:
 3047              	.LBE3720:
 3048              	.LBE3719:
GAS LISTING /tmp/ccmMnd7l.s 			page 331


 3049              	.LBB3721:
 3050              	.LBB3718:
 3051              		.loc 17 70 0
 3052 00dc F20F1040 		movsd	-8(%rax), %xmm0
 3052      F8
 3053              	.LBE3718:
 3054              	.LBE3721:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3055              		.loc 12 1827 0
 3056 00e1 660F2EC1 		ucomisd	%xmm1, %xmm0
 3057 00e5 77E9     		ja	.L246
 3058              	.LVL264:
 3059              	.L225:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3060              		.loc 12 1833 0
 3061 00e7 F20F1108 		movsd	%xmm1, (%rax)
 3062              	.LVL265:
 3063              	.L224:
 3064 00eb 4983C708 		addq	$8, %r15
 3065              	.LVL266:
 3066              	.LBE3715:
 3067              	.LBE3714:
 3068              	.LBE3711:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3069              		.loc 12 1844 0
 3070 00ef 4D39EF   		cmpq	%r13, %r15
 3071 00f2 75AC     		jne	.L218
 3072              	.LVL267:
 3073              	.LBE3708:
 3074              	.LBE3707:
 3075              	.LBB3735:
 3076              	.LBB3736:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3077              		.loc 12 1865 0
 3078 00f4 4D39FC   		cmpq	%r15, %r12
 3079 00f7 744B     		je	.L279
 3080              	.LVL268:
 3081 00f9 0F1F8000 		.p2align 4,,10
 3081      000000
 3082              		.p2align 3
 3083              	.L261:
 3084              	.LBB3737:
 3085              	.LBB3738:
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 3086              		.loc 12 1824 0
 3087 0100 F20F104D 		movsd	0(%rbp), %xmm1
 3087      00
 3088              	.LVL269:
 3089 0105 488D45F8 		leaq	-8(%rbp), %rax
 3090              	.LVL270:
 3091              	.LBB3739:
 3092              	.LBB3740:
 3093              		.loc 17 70 0
 3094 0109 F20F1045 		movsd	-8(%rbp), %xmm0
 3094      F8
 3095              	.LBE3740:
 3096              	.LBE3739:
GAS LISTING /tmp/ccmMnd7l.s 			page 332


1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3097              		.loc 12 1827 0
 3098 010e 660F2EC1 		ucomisd	%xmm1, %xmm0
 3099 0112 770F     		ja	.L268
 3100 0114 E9B10200 		jmp	.L286
 3100      00
 3101              	.LVL271:
 3102 0119 0F1F8000 		.p2align 4,,10
 3102      000000
 3103              		.p2align 3
 3104              	.L248:
 3105 0120 4889D0   		movq	%rdx, %rax
 3106              	.LVL272:
 3107              	.L268:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 3108              		.loc 12 1829 0
 3109 0123 F20F1140 		movsd	%xmm0, 8(%rax)
 3109      08
 3110              	.LVL273:
 3111              	.LBB3742:
 3112              	.LBB3743:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 3113              		.loc 11 763 0
 3114 0128 488D50F8 		leaq	-8(%rax), %rdx
 3115              	.LVL274:
 3116              	.LBE3743:
 3117              	.LBE3742:
 3118              	.LBB3744:
 3119              	.LBB3741:
 3120              		.loc 17 70 0
 3121 012c F20F1040 		movsd	-8(%rax), %xmm0
 3121      F8
 3122              	.LBE3741:
 3123              	.LBE3744:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3124              		.loc 12 1827 0
 3125 0131 660F2EC1 		ucomisd	%xmm1, %xmm0
 3126 0135 77E9     		ja	.L248
 3127              	.LVL275:
 3128 0137 4883C508 		addq	$8, %rbp
 3129              	.LVL276:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3130              		.loc 12 1833 0
 3131 013b F20F1108 		movsd	%xmm1, (%rax)
 3132              	.LVL277:
 3133              	.LBE3738:
 3134              	.LBE3737:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3135              		.loc 12 1865 0
 3136 013f 4939EC   		cmpq	%rbp, %r12
 3137 0142 75BC     		jne	.L261
 3138              	.LVL278:
 3139              	.L279:
 3140 0144 4C8B7308 		movq	8(%rbx), %r14
 3141              	.LVL279:
 3142 0148 488B4310 		movq	16(%rbx), %rax
 3143 014c 4C29F0   		subq	%r14, %rax
GAS LISTING /tmp/ccmMnd7l.s 			page 333


 3144 014f 48C1F803 		sarq	$3, %rax
 3145              	.LVL280:
 3146              	.L220:
 3147              	.LBE3736:
 3148              	.LBE3735:
 3149              	.LBE3706:
 3150              	.LBE3705:
 3151              	.LBE3785:
 3152              	.LBE3788:
 3153              	.LBE3791:
 3154              	.LBB3792:
 3155              	.LBB3793:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3156              		.loc 8 535 0
 3157 0153 488B2D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rbp
 3157      000000
 3158              	.LBE3793:
 3159              	.LBE3792:
  66:./benchs/timing.hpp **** 
  67:./benchs/timing.hpp ****         // Figure out the median time.
  68:./benchs/timing.hpp ****         std::sort(_ts.begin(), _ts.end());
  69:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 3160              		.loc 2 70 0
 3161 015a 48D1E8   		shrq	%rax
 3162              	.LVL281:
 3163              	.LBB3797:
 3164              	.LBB3794:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3165              		.loc 8 535 0
 3166 015d 488D3500 		leaq	.LC14(%rip), %rsi
 3166      000000
 3167              	.LBE3794:
 3168              	.LBE3797:
 3169              		.loc 2 70 0
 3170 0164 F2410F10 		movsd	(%r14,%rax,8), %xmm2
 3170      14C6
 3171              	.LBB3798:
 3172              	.LBB3795:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3173              		.loc 8 535 0
 3174 016a BA140000 		movl	$20, %edx
 3174      00
 3175 016f 4889EF   		movq	%rbp, %rdi
 3176              	.LBE3795:
 3177              	.LBE3798:
 3178              		.loc 2 70 0
 3179 0172 F20F1154 		movsd	%xmm2, 8(%rsp)
 3179      2408
 3180              	.LVL282:
 3181              	.LBB3799:
 3182              	.LBB3796:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3183              		.loc 8 535 0
 3184 0178 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3184      00
 3185              	.LVL283:
 3186              	.LBE3796:
GAS LISTING /tmp/ccmMnd7l.s 			page 334


 3187              	.LBE3799:
 3188              	.LBB3800:
 3189              	.LBB3801:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 3190              		.loc 8 132 0
 3191 017d 488B4500 		movq	0(%rbp), %rax
 3192 0181 4889EA   		movq	%rbp, %rdx
 3193              	.LBE3801:
 3194              	.LBE3800:
 3195              	.LBB3814:
 3196              	.LBB3815:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3197              		.loc 8 221 0
 3198 0184 4889EF   		movq	%rbp, %rdi
 3199              	.LBE3815:
 3200              	.LBE3814:
  70:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 3201              		.loc 2 71 0
 3202 0187 F20F1005 		movsd	.LC8(%rip), %xmm0
 3202      00000000 
 3203              	.LBB3818:
 3204              	.LBB3812:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 3205              		.loc 8 132 0
 3206 018f 480350E8 		addq	-24(%rax), %rdx
 3207              	.LVL284:
 3208              	.LBE3812:
 3209              	.LBE3818:
 3210              		.loc 2 71 0
 3211 0193 F20F5944 		mulsd	8(%rsp), %xmm0
 3211      2408
 3212              	.LBB3819:
 3213              	.LBB3813:
 3214              	.LBB3802:
 3215              	.LBB3803:
 3216              	.LBB3804:
 3217              	.LBB3805:
 3218              	.LBB3806:
 3219              	.LBB3807:
 3220              		.file 21 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccmMnd7l.s 			page 335


  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** /** @file bits/ios_base.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #ifndef _IOS_BASE_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #define _IOS_BASE_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/localefwd.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/locale_classes.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** {
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // expressions involving them are no longer compile-time constants.
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   enum _Ios_Fmtflags 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     { 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_left 		= 1L << 5,
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_right 		= 1L << 7,
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     };
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
GAS LISTING /tmp/ccmMnd7l.s 			page 336


  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 3221              		.loc 21 76 0
 3222 0199 8B4218   		movl	24(%rdx), %eax
 3223 019c 25FBFEFF 		andl	$-261, %eax
 3223      FF
 3224              	.LVL285:
 3225              	.LBE3807:
 3226              	.LBE3806:
 3227              	.LBE3805:
 3228              	.LBB3808:
 3229              	.LBB3809:
 3230              	.LBB3810:
 3231              	.LBB3811:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
 3232              		.loc 21 80 0
 3233 01a1 83C804   		orl	$4, %eax
 3234              	.LVL286:
 3235 01a4 894218   		movl	%eax, 24(%rdx)
 3236              	.LVL287:
 3237              	.LBE3811:
 3238              	.LBE3810:
 3239              	.LBE3809:
 3240              	.LBE3808:
 3241              	.LBE3804:
 3242              	.LBE3803:
 3243              	.LBE3802:
 3244              	.LBE3813:
 3245              	.LBE3819:
 3246              	.LBB3820:
 3247              	.LBB3816:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3248              		.loc 8 221 0
 3249 01a7 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3249      00
 3250              	.LVL288:
 3251              	.LBE3816:
 3252              	.LBE3820:
 3253              	.LBB3821:
 3254              	.LBB3822:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3255              		.loc 8 535 0
 3256 01ac 488D3500 		leaq	.LC15(%rip), %rsi
 3256      000000
 3257 01b3 BA0B0000 		movl	$11, %edx
 3257      00
 3258 01b8 4889C7   		movq	%rax, %rdi
 3259              	.LBE3822:
 3260              	.LBE3821:
 3261              	.LBB3824:
 3262              	.LBB3817:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3263              		.loc 8 221 0
 3264 01bb 4889C5   		movq	%rax, %rbp
GAS LISTING /tmp/ccmMnd7l.s 			page 337


 3265              	.LVL289:
 3266              	.LBE3817:
 3267              	.LBE3824:
 3268              	.LBB3825:
 3269              	.LBB3823:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3270              		.loc 8 535 0
 3271 01be E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3271      00
 3272              	.LVL290:
 3273              	.LBE3823:
 3274              	.LBE3825:
 3275              		.loc 2 71 0
 3276 01c3 F20F1005 		movsd	.LC8(%rip), %xmm0
 3276      00000000 
 3277              	.LVL291:
 3278              	.LBB3826:
 3279              	.LBB3827:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3280              		.loc 8 221 0
 3281 01cb 4889EF   		movq	%rbp, %rdi
 3282              	.LBE3827:
 3283              	.LBE3826:
 3284              		.loc 2 71 0
 3285 01ce F20F5904 		mulsd	(%rsp), %xmm0
 3285      24
 3286              	.LVL292:
 3287              	.LBB3830:
 3288              	.LBB3828:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3289              		.loc 8 221 0
 3290 01d3 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3290      00
 3291              	.LVL293:
 3292              	.LBE3828:
 3293              	.LBE3830:
 3294              	.LBB3831:
 3295              	.LBB3832:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3296              		.loc 8 535 0
 3297 01d8 488D3500 		leaq	.LC16(%rip), %rsi
 3297      000000
 3298              	.LBE3832:
 3299              	.LBE3831:
 3300              	.LBB3834:
 3301              	.LBB3829:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3302              		.loc 8 221 0
 3303 01df 4889C5   		movq	%rax, %rbp
 3304              	.LVL294:
 3305              	.LBE3829:
 3306              	.LBE3834:
 3307              	.LBB3835:
 3308              	.LBB3833:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3309              		.loc 8 535 0
 3310 01e2 BA010000 		movl	$1, %edx
GAS LISTING /tmp/ccmMnd7l.s 			page 338


 3310      00
 3311 01e7 4889C7   		movq	%rax, %rdi
 3312 01ea E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3312      00
 3313              	.LVL295:
 3314              	.LBE3833:
 3315              	.LBE3835:
 3316              	.LBB3836:
 3317              	.LBB3837:
 3318              	.LBB3838:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 3319              		.loc 8 565 0
 3320 01ef 488B4500 		movq	0(%rbp), %rax
 3321              	.LBB3839:
 3322              	.LBB3840:
 3323              		.loc 13 444 0
 3324 01f3 488B40E8 		movq	-24(%rax), %rax
 3325 01f7 4C8BA405 		movq	240(%rbp,%rax), %r12
 3325      F0000000 
 3326              	.LVL296:
 3327              	.LBB3841:
 3328              	.LBB3842:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 3329              		.loc 13 48 0
 3330 01ff 4D85E4   		testq	%r12, %r12
 3331 0202 0F843302 		je	.L287
 3331      0000
 3332              	.LVL297:
 3333              	.LBE3842:
 3334              	.LBE3841:
 3335              	.LBB3844:
 3336              	.LBB3845:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 3337              		.loc 1 867 0
 3338 0208 41807C24 		cmpb	$0, 56(%r12)
 3338      3800
 3339 020e 0F848701 		je	.L242
 3339      0000
 3340 0214 410FBE74 		movsbl	67(%r12), %esi
 3340      2443
 3341              	.LVL298:
 3342              	.L243:
 3343              	.LBE3845:
 3344              	.LBE3844:
 3345              	.LBE3840:
 3346              	.LBE3839:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 3347              		.loc 8 565 0
 3348 021a 4889EF   		movq	%rbp, %rdi
 3349 021d E8000000 		call	_ZNSo3putEc@PLT
 3349      00
 3350              	.LVL299:
 3351              	.LBB3853:
 3352              	.LBB3854:
 3353              		.loc 8 587 0
 3354 0222 4889C7   		movq	%rax, %rdi
 3355 0225 E8000000 		call	_ZNSo5flushEv@PLT
GAS LISTING /tmp/ccmMnd7l.s 			page 339


 3355      00
 3356              	.LVL300:
 3357              	.LBE3854:
 3358              	.LBE3853:
 3359              	.LBE3838:
 3360              	.LBE3837:
 3361              	.LBE3836:
 3362              	.LBB3861:
 3363              	.LBB3862:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3364              		.loc 8 535 0
 3365 022a 488B2D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rbp
 3365      000000
 3366              	.LVL301:
 3367 0231 488D3500 		leaq	.LC17(%rip), %rsi
 3367      000000
 3368 0238 BA080000 		movl	$8, %edx
 3368      00
 3369 023d 4889EF   		movq	%rbp, %rdi
 3370 0240 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3370      00
 3371              	.LVL302:
 3372              	.LBE3862:
 3373              	.LBE3861:
 3374              	.LBB3863:
 3375              	.LBB3864:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3376              		.loc 8 221 0
 3377 0245 F20F1044 		movsd	8(%rsp), %xmm0
 3377      2408
 3378 024b 4889EF   		movq	%rbp, %rdi
 3379 024e E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3379      00
 3380              	.LVL303:
 3381              	.LBE3864:
 3382              	.LBE3863:
 3383              	.LBB3866:
 3384              	.LBB3867:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3385              		.loc 8 535 0
 3386 0253 488D3500 		leaq	.LC18(%rip), %rsi
 3386      000000
 3387 025a BA0A0000 		movl	$10, %edx
 3387      00
 3388 025f 4889C7   		movq	%rax, %rdi
 3389              	.LBE3867:
 3390              	.LBE3866:
 3391              	.LBB3869:
 3392              	.LBB3865:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3393              		.loc 8 221 0
 3394 0262 4889C5   		movq	%rax, %rbp
 3395              	.LVL304:
 3396              	.LBE3865:
 3397              	.LBE3869:
 3398              	.LBB3870:
 3399              	.LBB3868:
GAS LISTING /tmp/ccmMnd7l.s 			page 340


 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3400              		.loc 8 535 0
 3401 0265 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3401      00
 3402              	.LVL305:
 3403              	.LBE3868:
 3404              	.LBE3870:
 3405              	.LBB3871:
 3406              	.LBB3872:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3407              		.loc 8 221 0
 3408 026a F20F1004 		movsd	(%rsp), %xmm0
 3408      24
 3409 026f 4889EF   		movq	%rbp, %rdi
 3410 0272 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3410      00
 3411              	.LVL306:
 3412              	.LBE3872:
 3413              	.LBE3871:
 3414              	.LBB3873:
 3415              	.LBB3874:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3416              		.loc 8 535 0
 3417 0277 488D3500 		leaq	.LC19(%rip), %rsi
 3417      000000
 3418 027e 4889C7   		movq	%rax, %rdi
 3419 0281 BA010000 		movl	$1, %edx
 3419      00
 3420 0286 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3420      00
 3421              	.LVL307:
 3422              	.LBE3874:
 3423              	.LBE3873:
 3424              	.LBE3687:
 3425              	.LBB3879:
 3426              	.LBB3880:
 3427              	.LBB3881:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 3428              		.loc 6 161 0
 3429 028b 488B7B08 		movq	8(%rbx), %rdi
 3430              	.LVL308:
 3431              	.LBB3882:
 3432              	.LBB3883:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 3433              		.loc 6 177 0
 3434 028f 4885FF   		testq	%rdi, %rdi
 3435 0292 0F845B01 		je	.L212
 3435      0000
 3436              	.LVL309:
 3437              	.LBE3883:
 3438              	.LBE3882:
 3439              	.LBE3881:
 3440              	.LBE3880:
 3441              	.LBE3879:
  71:./benchs/timing.hpp ****         std::cerr << "'medt': " << med << ", 'avgt': " << avg << "}";
  72:./benchs/timing.hpp ****     }
 3442              		.loc 2 73 0
GAS LISTING /tmp/ccmMnd7l.s 			page 341


 3443 0298 4883C418 		addq	$24, %rsp
 3444              		.cfi_remember_state
 3445              		.cfi_def_cfa_offset 56
 3446              	.LVL310:
 3447 029c 5B       		popq	%rbx
 3448              		.cfi_def_cfa_offset 48
 3449              	.LVL311:
 3450 029d 5D       		popq	%rbp
 3451              		.cfi_def_cfa_offset 40
 3452              	.LVL312:
 3453 029e 415C     		popq	%r12
 3454              		.cfi_def_cfa_offset 32
 3455              	.LVL313:
 3456 02a0 415D     		popq	%r13
 3457              		.cfi_def_cfa_offset 24
 3458 02a2 415E     		popq	%r14
 3459              		.cfi_def_cfa_offset 16
 3460 02a4 415F     		popq	%r15
 3461              		.cfi_def_cfa_offset 8
 3462              	.LBB3891:
 3463              	.LBB3890:
 3464              	.LBB3889:
 3465              	.LBB3888:
 3466              	.LBB3887:
 3467              	.LBB3884:
 3468              	.LBB3885:
 3469              	.LBB3886:
 3470              		.loc 14 110 0
 3471 02a6 E9000000 		jmp	_ZdlPv@PLT
 3471      00
 3472              	.LVL314:
 3473 02ab 0F1F4400 		.p2align 4,,10
 3473      00
 3474              		.p2align 3
 3475              	.L217:
 3476              		.cfi_restore_state
 3477              	.LBE3886:
 3478              	.LBE3885:
 3479              	.LBE3884:
 3480              	.LBE3887:
 3481              	.LBE3888:
 3482              	.LBE3889:
 3483              	.LBE3890:
 3484              	.LBE3891:
 3485              	.LBB3892:
 3486              	.LBB3875:
 3487              	.LBB3789:
 3488              	.LBB3786:
 3489              	.LBB3783:
 3490              	.LBB3781:
 3491              	.LBB3750:
 3492              	.LBB3751:
 3493              	.LBB3752:
 3494              	.LBB3753:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 3495              		.loc 11 782 0
 3496 02b0 4D8D6E08 		leaq	8(%r14), %r13
GAS LISTING /tmp/ccmMnd7l.s 			page 342


 3497              	.LVL315:
 3498 02b4 BD080000 		movl	$8, %ebp
 3498      00
 3499              	.LVL316:
 3500              	.LBE3753:
 3501              	.LBE3752:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3502              		.loc 12 1844 0
 3503 02b9 4D39EC   		cmpq	%r13, %r12
 3504 02bc 0F8482FE 		je	.L279
 3504      FFFF
 3505              	.LVL317:
 3506              		.p2align 4,,10
 3507 02c2 660F1F44 		.p2align 3
 3507      0000
 3508              	.L262:
 3509              	.LBB3754:
 3510              	.LBB3755:
 3511              	.LBB3756:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 3512              		.loc 17 42 0
 3513 02c8 F2410F10 		movsd	0(%r13), %xmm1
 3513      4D00
 3514              	.LVL318:
 3515              	.LBE3756:
 3516              	.LBE3755:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 3517              		.loc 12 1846 0
 3518 02ce F2410F10 		movsd	(%r14), %xmm0
 3518      06
 3519 02d3 660F2EC1 		ucomisd	%xmm1, %xmm0
 3520 02d7 7747     		ja	.L288
 3521              	.LVL319:
 3522              	.LBB3757:
 3523              	.LBB3758:
 3524              	.LBB3759:
 3525              	.LBB3760:
 3526              		.loc 17 70 0
 3527 02d9 F2410F10 		movsd	-8(%r13), %xmm0
 3527      45F8
 3528 02df 498D45F8 		leaq	-8(%r13), %rax
 3529              	.LVL320:
 3530              	.LBE3760:
 3531              	.LBE3759:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3532              		.loc 12 1827 0
 3533 02e3 660F2EC1 		ucomisd	%xmm1, %xmm0
 3534 02e7 770A     		ja	.L269
 3535 02e9 E9F50000 		jmp	.L289
 3535      00
 3536              	.LVL321:
 3537 02ee 6690     		.p2align 4,,10
 3538              		.p2align 3
 3539              	.L250:
 3540 02f0 4889D0   		movq	%rdx, %rax
 3541              	.LVL322:
 3542              	.L269:
GAS LISTING /tmp/ccmMnd7l.s 			page 343


1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 3543              		.loc 12 1829 0
 3544 02f3 F20F1140 		movsd	%xmm0, 8(%rax)
 3544      08
 3545              	.LVL323:
 3546              	.LBB3762:
 3547              	.LBB3763:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 3548              		.loc 11 763 0
 3549 02f8 488D50F8 		leaq	-8(%rax), %rdx
 3550              	.LVL324:
 3551              	.LBE3763:
 3552              	.LBE3762:
 3553              	.LBB3764:
 3554              	.LBB3761:
 3555              		.loc 17 70 0
 3556 02fc F20F1040 		movsd	-8(%rax), %xmm0
 3556      F8
 3557              	.LBE3761:
 3558              	.LBE3764:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3559              		.loc 12 1827 0
 3560 0301 660F2EC1 		ucomisd	%xmm1, %xmm0
 3561 0305 77E9     		ja	.L250
 3562              	.LVL325:
 3563              	.L237:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3564              		.loc 12 1833 0
 3565 0307 F20F1108 		movsd	%xmm1, (%rax)
 3566              	.LVL326:
 3567              	.L236:
 3568 030b 4983C508 		addq	$8, %r13
 3569              	.LVL327:
 3570              	.LBE3758:
 3571              	.LBE3757:
 3572              	.LBE3754:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3573              		.loc 12 1844 0
 3574 030f 4D39EC   		cmpq	%r13, %r12
 3575 0312 75B4     		jne	.L262
 3576 0314 E92BFEFF 		jmp	.L279
 3576      FF
 3577              	.LVL328:
 3578 0319 0F1F8000 		.p2align 4,,10
 3578      000000
 3579              		.p2align 3
 3580              	.L288:
 3581              	.LBB3774:
 3582              	.LBB3766:
 3583              	.LBB3767:
 3584              	.LBB3768:
 3585              	.LBB3769:
 3586              	.LBB3770:
 3587              	.LBB3771:
 3588              	.LBB3772:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 3589              		.loc 20 576 0
GAS LISTING /tmp/ccmMnd7l.s 			page 344


 3590 0320 4C89EA   		movq	%r13, %rdx
 3591 0323 4C29F2   		subq	%r14, %rdx
 3592              	.LVL329:
 3593 0326 4889D0   		movq	%rdx, %rax
 3594 0329 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 3595              		.loc 20 577 0
 3596 032d 4885C0   		testq	%rax, %rax
 3597 0330 741D     		je	.L235
 3598 0332 4889EF   		movq	%rbp, %rdi
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 3599              		.loc 20 578 0
 3600 0335 4C89F6   		movq	%r14, %rsi
 3601 0338 F20F114C 		movsd	%xmm1, 8(%rsp)
 3601      2408
 3602 033e 4829D7   		subq	%rdx, %rdi
 3603 0341 4C01EF   		addq	%r13, %rdi
 3604 0344 E8000000 		call	memmove@PLT
 3604      00
 3605              	.LVL330:
 3606 0349 F20F104C 		movsd	8(%rsp), %xmm1
 3606      2408
 3607              	.LVL331:
 3608              	.L235:
 3609              	.LBE3772:
 3610              	.LBE3771:
 3611              	.LBE3770:
 3612              	.LBE3769:
 3613              	.LBE3768:
 3614              	.LBE3767:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 3615              		.loc 12 1851 0
 3616 034f F2410F11 		movsd	%xmm1, (%r14)
 3616      0E
 3617 0354 EBB5     		jmp	.L236
 3618              	.LVL332:
 3619 0356 662E0F1F 		.p2align 4,,10
 3619      84000000 
 3619      0000
 3620              		.p2align 3
 3621              	.L284:
 3622              	.LBE3766:
 3623              	.LBE3774:
 3624              	.LBE3751:
 3625              	.LBE3750:
 3626              	.LBB3777:
 3627              	.LBB3733:
 3628              	.LBB3731:
 3629              	.LBB3723:
 3630              	.LBB3724:
 3631              	.LBB3725:
 3632              	.LBB3726:
 3633              	.LBB3727:
 3634              	.LBB3728:
 3635              	.LBB3729:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 3636              		.loc 20 576 0
GAS LISTING /tmp/ccmMnd7l.s 			page 345


 3637 0360 4C89FA   		movq	%r15, %rdx
 3638 0363 4C29F2   		subq	%r14, %rdx
 3639              	.LVL333:
 3640 0366 4889D0   		movq	%rdx, %rax
 3641 0369 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 3642              		.loc 20 577 0
 3643 036d 4885C0   		testq	%rax, %rax
 3644 0370 741F     		je	.L223
 3645 0372 BF080000 		movl	$8, %edi
 3645      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 3646              		.loc 20 578 0
 3647 0377 4C89F6   		movq	%r14, %rsi
 3648 037a F20F114C 		movsd	%xmm1, 8(%rsp)
 3648      2408
 3649 0380 4829D7   		subq	%rdx, %rdi
 3650 0383 4C01FF   		addq	%r15, %rdi
 3651 0386 E8000000 		call	memmove@PLT
 3651      00
 3652              	.LVL334:
 3653 038b F20F104C 		movsd	8(%rsp), %xmm1
 3653      2408
 3654              	.LVL335:
 3655              	.L223:
 3656              	.LBE3729:
 3657              	.LBE3728:
 3658              	.LBE3727:
 3659              	.LBE3726:
 3660              	.LBE3725:
 3661              	.LBE3724:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 3662              		.loc 12 1851 0
 3663 0391 F2410F11 		movsd	%xmm1, (%r14)
 3663      0E
 3664 0396 E950FDFF 		jmp	.L224
 3664      FF
 3665              	.LVL336:
 3666              	.L242:
 3667              	.LBE3723:
 3668              	.LBE3731:
 3669              	.LBE3733:
 3670              	.LBE3777:
 3671              	.LBE3781:
 3672              	.LBE3783:
 3673              	.LBE3786:
 3674              	.LBE3789:
 3675              	.LBE3875:
 3676              	.LBB3876:
 3677              	.LBB3859:
 3678              	.LBB3857:
 3679              	.LBB3855:
 3680              	.LBB3851:
 3681              	.LBB3849:
 3682              	.LBB3848:
 3683              	.LBB3846:
 3684              	.LBB3847:
GAS LISTING /tmp/ccmMnd7l.s 			page 346


 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 3685              		.loc 1 869 0
 3686 039b 4C89E7   		movq	%r12, %rdi
 3687 039e E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 3687      00
 3688              	.LVL337:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 3689              		.loc 1 870 0
 3690 03a3 498B0424 		movq	(%r12), %rax
 3691 03a7 BE0A0000 		movl	$10, %esi
 3691      00
 3692 03ac 488B4030 		movq	48(%rax), %rax
 3693 03b0 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 3693      000000
 3694 03b7 0F845DFE 		je	.L243
 3694      FFFF
 3695 03bd 4C89E7   		movq	%r12, %rdi
 3696 03c0 FFD0     		call	*%rax
 3697              	.LVL338:
 3698 03c2 0FBEF0   		movsbl	%al, %esi
 3699 03c5 E950FEFF 		jmp	.L243
 3699      FF
 3700              	.LVL339:
 3701              	.L286:
 3702              	.LBE3847:
 3703              	.LBE3846:
 3704              	.LBE3848:
 3705              	.LBE3849:
 3706              	.LBE3851:
 3707              	.LBE3855:
 3708              	.LBE3857:
 3709              	.LBE3859:
 3710              	.LBE3876:
 3711              	.LBB3877:
 3712              	.LBB3790:
 3713              	.LBB3787:
 3714              	.LBB3784:
 3715              	.LBB3782:
 3716              	.LBB3778:
 3717              	.LBB3749:
 3718              	.LBB3747:
 3719              	.LBB3745:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3720              		.loc 12 1827 0
 3721 03ca 4889E8   		movq	%rbp, %rax
 3722              	.LVL340:
 3723 03cd 4883C508 		addq	$8, %rbp
 3724              	.LVL341:
 3725              	.LBE3745:
 3726              	.LBE3747:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3727              		.loc 12 1865 0
 3728 03d1 4939EC   		cmpq	%rbp, %r12
 3729              	.LBB3748:
 3730              	.LBB3746:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3731              		.loc 12 1833 0
GAS LISTING /tmp/ccmMnd7l.s 			page 347


 3732 03d4 F20F1108 		movsd	%xmm1, (%rax)
 3733              	.LVL342:
 3734              	.LBE3746:
 3735              	.LBE3748:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3736              		.loc 12 1865 0
 3737 03d8 0F8522FD 		jne	.L261
 3737      FFFF
 3738 03de E961FDFF 		jmp	.L279
 3738      FF
 3739              	.LVL343:
 3740              	.L289:
 3741              	.LBE3749:
 3742              	.LBE3778:
 3743              	.LBB3779:
 3744              	.LBB3776:
 3745              	.LBB3775:
 3746              	.LBB3773:
 3747              	.LBB3765:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3748              		.loc 12 1827 0
 3749 03e3 4C89E8   		movq	%r13, %rax
 3750              	.LVL344:
 3751 03e6 E91CFFFF 		jmp	.L237
 3751      FF
 3752              	.LVL345:
 3753              	.L285:
 3754              	.LBE3765:
 3755              	.LBE3773:
 3756              	.LBE3775:
 3757              	.LBE3776:
 3758              	.LBE3779:
 3759              	.LBB3780:
 3760              	.LBB3734:
 3761              	.LBB3732:
 3762              	.LBB3730:
 3763              	.LBB3722:
 3764 03eb 4C89F8   		movq	%r15, %rax
 3765              	.LVL346:
 3766 03ee E9F4FCFF 		jmp	.L225
 3766      FF
 3767              	.LVL347:
 3768              	.L212:
 3769              	.LBE3722:
 3770              	.LBE3730:
 3771              	.LBE3732:
 3772              	.LBE3734:
 3773              	.LBE3780:
 3774              	.LBE3782:
 3775              	.LBE3784:
 3776              	.LBE3787:
 3777              	.LBE3790:
 3778              	.LBE3877:
 3779              	.LBE3892:
 3780              		.loc 2 73 0
 3781 03f3 4883C418 		addq	$24, %rsp
 3782              		.cfi_remember_state
GAS LISTING /tmp/ccmMnd7l.s 			page 348


 3783              		.cfi_def_cfa_offset 56
 3784              	.LVL348:
 3785 03f7 5B       		popq	%rbx
 3786              		.cfi_def_cfa_offset 48
 3787              	.LVL349:
 3788 03f8 5D       		popq	%rbp
 3789              		.cfi_def_cfa_offset 40
 3790              	.LVL350:
 3791 03f9 415C     		popq	%r12
 3792              		.cfi_def_cfa_offset 32
 3793              	.LVL351:
 3794 03fb 415D     		popq	%r13
 3795              		.cfi_def_cfa_offset 24
 3796 03fd 415E     		popq	%r14
 3797              		.cfi_def_cfa_offset 16
 3798 03ff 415F     		popq	%r15
 3799              		.cfi_def_cfa_offset 8
 3800 0401 C3       		ret
 3801              	.LVL352:
 3802              	.L215:
 3803              		.cfi_restore_state
 3804              	.LBB3893:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 3805              		.loc 2 66 0
 3806 0402 4889C2   		movq	%rax, %rdx
 3807 0405 4889C1   		movq	%rax, %rcx
 3808 0408 660FEFC9 		pxor	%xmm1, %xmm1
 3809 040c 48D1EA   		shrq	%rdx
 3810 040f 83E101   		andl	$1, %ecx
 3811 0412 4809CA   		orq	%rcx, %rdx
 3812 0415 F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 3812      CA
 3813 041a F20F58C9 		addsd	%xmm1, %xmm1
 3814 041e E939FCFF 		jmp	.L216
 3814      FF
 3815              	.LVL353:
 3816              	.L213:
 3817 0423 660FEFC0 		pxor	%xmm0, %xmm0
 3818 0427 31C0     		xorl	%eax, %eax
 3819 0429 660F28E0 		movapd	%xmm0, %xmm4
 3820 042d F20F5EE0 		divsd	%xmm0, %xmm4
 3821 0431 F20F1124 		movsd	%xmm4, (%rsp)
 3821      24
 3822              	.LVL354:
 3823 0436 E918FDFF 		jmp	.L220
 3823      FF
 3824              	.LVL355:
 3825              	.L287:
 3826              	.LBB3878:
 3827              	.LBB3860:
 3828              	.LBB3858:
 3829              	.LBB3856:
 3830              	.LBB3852:
 3831              	.LBB3850:
 3832              	.LBB3843:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 3833              		.loc 13 49 0
GAS LISTING /tmp/ccmMnd7l.s 			page 349


 3834 043b E8000000 		call	_ZSt16__throw_bad_castv@PLT
 3834      00
 3835              	.LVL356:
 3836              	.LBE3843:
 3837              	.LBE3850:
 3838              	.LBE3852:
 3839              	.LBE3856:
 3840              	.LBE3858:
 3841              	.LBE3860:
 3842              	.LBE3878:
 3843              	.LBE3893:
 3844              		.cfi_endproc
 3845              	.LFE6046:
 3846              		.section	.gcc_except_table._ZN11RepeatTimerD2Ev,"aG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3847              	.LLSDA6046:
 3848 0000 FF       		.byte	0xff
 3849 0001 FF       		.byte	0xff
 3850 0002 01       		.byte	0x1
 3851 0003 00       		.uleb128 .LLSDACSE6046-.LLSDACSB6046
 3852              	.LLSDACSB6046:
 3853              	.LLSDACSE6046:
 3854              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3855              		.size	_ZN11RepeatTimerD2Ev, .-_ZN11RepeatTimerD2Ev
 3856              		.section	.text.unlikely._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3857              	.LCOLDE20:
 3858              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3859              	.LHOTE20:
 3860              		.weak	_ZN11RepeatTimerD1Ev
 3861              		.set	_ZN11RepeatTimerD1Ev,_ZN11RepeatTimerD2Ev
 3862              		.section	.rodata.str1.1
 3863              	.LC21:
 3864 006c 5B00     		.string	"["
 3865              	.LC22:
 3866 006e 7B276E70 		.string	"{'npoints': "
 3866      6F696E74 
 3866      73273A20 
 3866      00
 3867              	.LC23:
 3868 007b 2C202773 		.string	", 'size': "
 3868      697A6527 
 3868      3A2000
 3869              	.LC24:
 3870 0086 2C202777 		.string	", 'weighted': false, "
 3870      65696768 
 3870      74656427 
 3870      3A206661 
 3870      6C73652C 
 3871              	.LC25:
 3872 009c 41646469 		.string	"Adding "
 3872      6E672000 
 3873              	.LC26:
 3874 00a4 20706F69 		.string	" points of size "
 3874      6E747320 
 3874      6F662073 
 3874      697A6520 
 3874      00
 3875              	.LC27:
GAS LISTING /tmp/ccmMnd7l.s 			page 350


 3876 00b5 206F6E65 		.string	" one after another... "
 3876      20616674 
 3876      65722061 
 3876      6E6F7468 
 3876      65722E2E 
 3877              	.LC28:
 3878 00cc 2C00     		.string	","
 3879              	.LC30:
 3880 00ce 2C202777 		.string	", 'weighted': true, "
 3880      65696768 
 3880      74656427 
 3880      3A207472 
 3880      75652C20 
 3881              	.LC32:
 3882 00e3 5D00     		.string	"]"
 3883              		.section	.text.unlikely
 3884              	.LCOLDB33:
 3885              		.section	.text.startup,"ax",@progbits
 3886              	.LHOTB33:
 3887              		.p2align 4,,15
 3888              		.globl	main
 3889              		.type	main, @function
 3890              	main:
 3891              	.LFB6051:
 3892              		.file 22 "benchs/weighted_unweighted.cpp"
   0:benchs/weighted_unweighted.cpp **** /* heatmap - High performance heatmap creation in C.
   1:benchs/weighted_unweighted.cpp ****  *
   2:benchs/weighted_unweighted.cpp ****  * The MIT License (MIT)
   3:benchs/weighted_unweighted.cpp ****  *
   4:benchs/weighted_unweighted.cpp ****  * Copyright (c) 2013 Lucas Beyer
   5:benchs/weighted_unweighted.cpp ****  *
   6:benchs/weighted_unweighted.cpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:benchs/weighted_unweighted.cpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:benchs/weighted_unweighted.cpp ****  * the Software without restriction, including without limitation the rights to
   9:benchs/weighted_unweighted.cpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:benchs/weighted_unweighted.cpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:benchs/weighted_unweighted.cpp ****  * subject to the following conditions:
  12:benchs/weighted_unweighted.cpp ****  *
  13:benchs/weighted_unweighted.cpp ****  * The above copyright notice and this permission notice shall be included in all
  14:benchs/weighted_unweighted.cpp ****  * copies or substantial portions of the Software.
  15:benchs/weighted_unweighted.cpp ****  *
  16:benchs/weighted_unweighted.cpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:benchs/weighted_unweighted.cpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:benchs/weighted_unweighted.cpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:benchs/weighted_unweighted.cpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:benchs/weighted_unweighted.cpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:benchs/weighted_unweighted.cpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:benchs/weighted_unweighted.cpp ****  */
  23:benchs/weighted_unweighted.cpp **** 
  24:benchs/weighted_unweighted.cpp **** // The same as `benchs/add_point_with_stamp.cpp` but compares that to the same
  25:benchs/weighted_unweighted.cpp **** // calls using weights.
  26:benchs/weighted_unweighted.cpp **** 
  27:benchs/weighted_unweighted.cpp **** #include "benchs/common.hpp"
  28:benchs/weighted_unweighted.cpp **** 
  29:benchs/weighted_unweighted.cpp **** static const size_t NPOINTS_MIN = 1;
  30:benchs/weighted_unweighted.cpp **** static const size_t NPOINTS_MAX = 1000*1000;
  31:benchs/weighted_unweighted.cpp **** static const size_t STAMP_MIN = 1;
GAS LISTING /tmp/ccmMnd7l.s 			page 351


  32:benchs/weighted_unweighted.cpp **** static const size_t STAMP_MAX = 512;
  33:benchs/weighted_unweighted.cpp **** static const size_t MAPSIZE = STAMP_MAX*30;
  34:benchs/weighted_unweighted.cpp **** 
  35:benchs/weighted_unweighted.cpp **** int main(/* int argc, char *argv[] */)
  36:benchs/weighted_unweighted.cpp **** {
 3893              		.loc 22 37 0
 3894              		.cfi_startproc
 3895              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3896              		.cfi_lsda 0x1b,.LLSDA6051
 3897              	.LVL357:
 3898 0000 4157     		pushq	%r15
 3899              		.cfi_def_cfa_offset 16
 3900              		.cfi_offset 15, -16
 3901 0002 4156     		pushq	%r14
 3902              		.cfi_def_cfa_offset 24
 3903              		.cfi_offset 14, -24
 3904              	.LBB3894:
  37:benchs/weighted_unweighted.cpp ****     // We'll do something funky with ret in order to avoid optimizing
  38:benchs/weighted_unweighted.cpp ****     // whole code-blocks away.
  39:benchs/weighted_unweighted.cpp ****     int ret = 0;
  40:benchs/weighted_unweighted.cpp ****     auto points = genpoints(NPOINTS_MAX, MAPSIZE);
 3905              		.loc 22 41 0
 3906 0004 BA003C00 		movl	$15360, %edx
 3906      00
 3907              	.LBE3894:
  37:benchs/weighted_unweighted.cpp ****     // We'll do something funky with ret in order to avoid optimizing
 3908              		.loc 22 37 0
 3909 0009 4155     		pushq	%r13
 3910              		.cfi_def_cfa_offset 32
 3911              		.cfi_offset 13, -32
 3912 000b 4154     		pushq	%r12
 3913              		.cfi_def_cfa_offset 40
 3914              		.cfi_offset 12, -40
 3915              	.LBB4654:
 3916              		.loc 22 41 0
 3917 000d BE40420F 		movl	$1000000, %esi
 3917      00
 3918              	.LBE4654:
  37:benchs/weighted_unweighted.cpp ****     // We'll do something funky with ret in order to avoid optimizing
 3919              		.loc 22 37 0
 3920 0012 55       		pushq	%rbp
 3921              		.cfi_def_cfa_offset 48
 3922              		.cfi_offset 6, -48
 3923 0013 53       		pushq	%rbx
 3924              		.cfi_def_cfa_offset 56
 3925              		.cfi_offset 3, -56
 3926 0014 4881ECD8 		subq	$216, %rsp
 3926      000000
 3927              		.cfi_def_cfa_offset 272
 3928              	.LBB4655:
 3929              		.loc 22 41 0
 3930 001b 488D7C24 		leaq	80(%rsp), %rdi
 3930      50
 3931              	.LEHB6:
 3932 0020 E8000000 		call	_Z9genpointsmj@PLT
 3932      00
 3933              	.LEHE6:
GAS LISTING /tmp/ccmMnd7l.s 			page 352


 3934              	.LVL358:
 3935              	.LBB3895:
 3936              	.LBB3896:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3937              		.loc 8 535 0
 3938 0025 4C8B2D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %r13
 3938      000000
 3939 002c 488D3500 		leaq	.LC21(%rip), %rsi
 3939      000000
 3940 0033 BA010000 		movl	$1, %edx
 3940      00
 3941 0038 4C89EF   		movq	%r13, %rdi
 3942              	.LEHB7:
 3943 003b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3943      00
 3944              	.LVL359:
 3945              	.LBE3896:
 3946              	.LBE3895:
 3947              	.LBB3897:
 3948              	.LBB3898:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 3949              		.loc 8 113 0
 3950 0040 4C89EF   		movq	%r13, %rdi
 3951 0043 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 3951      00
 3952              	.LVL360:
 3953 0048 C7442430 		movl	$10, 48(%rsp)
 3953      0A000000 
 3954 0050 48C74424 		movq	$1, 24(%rsp)
 3954      18010000 
 3954      00
 3955 0059 C7442414 		movl	$0, 20(%rsp)
 3955      00000000 
 3956              	.LVL361:
 3957              	.L330:
 3958              	.LBE3898:
 3959              	.LBE3897:
 3960              	.LBB3899:
 3961              	.LBB3900:
  41:benchs/weighted_unweighted.cpp **** 
  42:benchs/weighted_unweighted.cpp ****     std::cerr << "[" << std::endl;
  43:benchs/weighted_unweighted.cpp ****     for(size_t stampsize = STAMP_MIN ; stampsize <= STAMP_MAX ; stampsize *= 2) {
  44:benchs/weighted_unweighted.cpp ****         std::unique_ptr<heatmap_stamp_t> stamp(heatmap_stamp_gen(stampsize));
 3962              		.loc 22 45 0
 3963 0061 8B7C2418 		movl	24(%rsp), %edi
 3964 0065 E8000000 		call	heatmap_stamp_gen@PLT
 3964      00
 3965              	.LEHE7:
 3966              	.LVL362:
 3967 006a 4989C6   		movq	%rax, %r14
 3968 006d C7442434 		movl	$7, 52(%rsp)
 3968      07000000 
 3969 0075 41BC0100 		movl	$1, %r12d
 3969      0000
 3970              	.L328:
 3971              	.LVL363:
 3972              	.LBB3901:
GAS LISTING /tmp/ccmMnd7l.s 			page 353


 3973              	.LBB3902:
  45:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
  46:benchs/weighted_unweighted.cpp ****             std::unique_ptr<heatmap_t> hm(heatmap_new(MAPSIZE, MAPSIZE));
 3974              		.loc 22 47 0
 3975 007b BE003C00 		movl	$15360, %esi
 3975      00
 3976 0080 BF003C00 		movl	$15360, %edi
 3976      00
 3977              	.LEHB8:
 3978 0085 E8000000 		call	heatmap_new@PLT
 3978      00
 3979              	.LEHE8:
 3980              	.LVL364:
 3981              	.LBB3903:
 3982              	.LBB3904:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3983              		.loc 8 535 0
 3984 008a 488D3500 		leaq	.LC22(%rip), %rsi
 3984      000000
 3985 0091 BA0C0000 		movl	$12, %edx
 3985      00
 3986 0096 4C89EF   		movq	%r13, %rdi
 3987              	.LBE3904:
 3988              	.LBE3903:
 3989              		.loc 22 47 0
 3990 0099 4989C7   		movq	%rax, %r15
 3991              	.LVL365:
 3992              	.LEHB9:
 3993              	.LBB3906:
 3994              	.LBB3905:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3995              		.loc 8 535 0
 3996 009c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3996      00
 3997              	.LVL366:
 3998              	.LBE3905:
 3999              	.LBE3906:
 4000              	.LBB3907:
 4001              	.LBB3908:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4002              		.loc 8 171 0
 4003 00a1 4C89E6   		movq	%r12, %rsi
 4004 00a4 4C89EF   		movq	%r13, %rdi
 4005 00a7 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4005      00
 4006              	.LVL367:
 4007              	.LBE3908:
 4008              	.LBE3907:
 4009              	.LBB3910:
 4010              	.LBB3911:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4011              		.loc 8 535 0
 4012 00ac 488D3500 		leaq	.LC23(%rip), %rsi
 4012      000000
 4013 00b3 BA0A0000 		movl	$10, %edx
 4013      00
 4014 00b8 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccmMnd7l.s 			page 354


 4015              	.LBE3911:
 4016              	.LBE3910:
 4017              	.LBB3913:
 4018              	.LBB3909:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4019              		.loc 8 171 0
 4020 00bb 4889C3   		movq	%rax, %rbx
 4021              	.LVL368:
 4022              	.LBE3909:
 4023              	.LBE3913:
 4024              	.LBB3914:
 4025              	.LBB3912:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4026              		.loc 8 535 0
 4027 00be E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4027      00
 4028              	.LVL369:
 4029              	.LBE3912:
 4030              	.LBE3914:
 4031              	.LBB3915:
 4032              	.LBB3916:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4033              		.loc 8 171 0
 4034 00c3 488B6C24 		movq	24(%rsp), %rbp
 4034      18
 4035 00c8 4889DF   		movq	%rbx, %rdi
 4036 00cb 4889EE   		movq	%rbp, %rsi
 4037 00ce E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4037      00
 4038              	.LVL370:
 4039              	.LBE3916:
 4040              	.LBE3915:
 4041              	.LBB3917:
 4042              	.LBB3918:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4043              		.loc 8 535 0
 4044 00d3 488D3500 		leaq	.LC24(%rip), %rsi
 4044      000000
 4045 00da BA150000 		movl	$21, %edx
 4045      00
 4046 00df 4889C7   		movq	%rax, %rdi
 4047 00e2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4047      00
 4048              	.LVL371:
 4049              	.LBE3918:
 4050              	.LBE3917:
 4051              	.LBB3919:
 4052              	.LBB3920:
 4053 00e7 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4053      000000
 4054 00ee 488D3500 		leaq	.LC25(%rip), %rsi
 4054      000000
 4055 00f5 BA070000 		movl	$7, %edx
 4055      00
 4056 00fa E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4056      00
 4057              	.LVL372:
GAS LISTING /tmp/ccmMnd7l.s 			page 355


 4058              	.LBE3920:
 4059              	.LBE3919:
 4060              	.LBB3921:
 4061              	.LBB3922:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4062              		.loc 8 171 0
 4063 00ff 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4063      000000
 4064 0106 4C89E6   		movq	%r12, %rsi
 4065 0109 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4065      00
 4066              	.LVL373:
 4067              	.LBE3922:
 4068              	.LBE3921:
 4069              	.LBB3924:
 4070              	.LBB3925:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4071              		.loc 8 535 0
 4072 010e 488D3500 		leaq	.LC26(%rip), %rsi
 4072      000000
 4073 0115 BA100000 		movl	$16, %edx
 4073      00
 4074 011a 4889C7   		movq	%rax, %rdi
 4075              	.LBE3925:
 4076              	.LBE3924:
 4077              	.LBB3927:
 4078              	.LBB3923:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4079              		.loc 8 171 0
 4080 011d 4889C3   		movq	%rax, %rbx
 4081              	.LVL374:
 4082              	.LBE3923:
 4083              	.LBE3927:
 4084              	.LBB3928:
 4085              	.LBB3926:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4086              		.loc 8 535 0
 4087 0120 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4087      00
 4088              	.LVL375:
 4089              	.LBE3926:
 4090              	.LBE3928:
 4091              	.LBB3929:
 4092              	.LBB3930:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4093              		.loc 8 171 0
 4094 0125 4889EE   		movq	%rbp, %rsi
 4095 0128 4889DF   		movq	%rbx, %rdi
 4096 012b E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4096      00
 4097              	.LVL376:
 4098              	.LBE3930:
 4099              	.LBE3929:
 4100              	.LBB3932:
 4101              	.LBB3933:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4102              		.loc 8 535 0
GAS LISTING /tmp/ccmMnd7l.s 			page 356


 4103 0130 488D3500 		leaq	.LC27(%rip), %rsi
 4103      000000
 4104 0137 BA160000 		movl	$22, %edx
 4104      00
 4105 013c 4889C7   		movq	%rax, %rdi
 4106              	.LBE3933:
 4107              	.LBE3932:
 4108              	.LBB3935:
 4109              	.LBB3931:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4110              		.loc 8 171 0
 4111 013f 4889C3   		movq	%rax, %rbx
 4112              	.LVL377:
 4113              	.LBE3931:
 4114              	.LBE3935:
 4115              	.LBB3936:
 4116              	.LBB3934:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4117              		.loc 8 535 0
 4118 0142 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4118      00
 4119              	.LVL378:
 4120              	.LBE3934:
 4121              	.LBE3936:
 4122              	.LBB3937:
 4123              	.LBB3938:
 4124              	.LBB3939:
 4125              		.loc 8 587 0
 4126 0147 4889DF   		movq	%rbx, %rdi
 4127 014a E8000000 		call	_ZNSo5flushEv@PLT
 4127      00
 4128              	.LVL379:
 4129              	.LBE3939:
 4130              	.LBE3938:
 4131              	.LBE3937:
 4132              	.LBB3940:
 4133              	.LBB3941:
 4134              	.LBB3942:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 4135              		.loc 2 55 0
 4136 014f E8000000 		call	_Z10gimme_timev@PLT
 4136      00
 4137              	.LVL380:
 4138              	.LBB3943:
 4139              	.LBB3944:
 4140              	.LBB3945:
 4141              	.LBB3946:
 4142              	.LBB3947:
 4143              	.LBB3948:
 4144              	.LBB3949:
 4145              	.LBB3950:
 4146              	.LBB3951:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 4147              		.loc 14 104 0
 4148 0154 BF280000 		movl	$40, %edi
 4148      00
 4149              	.LBE3951:
GAS LISTING /tmp/ccmMnd7l.s 			page 357


 4150              	.LBE3950:
 4151              	.LBE3949:
 4152              	.LBE3948:
 4153              	.LBE3947:
 4154              	.LBE3946:
 4155              	.LBE3945:
 4156              	.LBE3944:
 4157              	.LBE3943:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 4158              		.loc 2 55 0
 4159 0159 F20F1144 		movsd	%xmm0, 112(%rsp)
 4159      2470
 4160              	.LVL381:
 4161              	.LBB3987:
 4162              	.LBB3963:
 4163              	.LBB3959:
 4164              	.LBB3960:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 4165              		.loc 6 91 0
 4166 015f 48C74424 		movq	$0, 120(%rsp)
 4166      78000000 
 4166      00
 4167 0168 48C78424 		movq	$0, 128(%rsp)
 4167      80000000 
 4167      00000000 
 4168 0174 48C78424 		movq	$0, 136(%rsp)
 4168      88000000 
 4168      00000000 
 4169              	.LVL382:
 4170              	.LBE3960:
 4171              	.LBE3959:
 4172              	.LBB3961:
 4173              	.LBB3957:
 4174              	.LBB3956:
 4175              	.LBB3955:
 4176              	.LBB3954:
 4177              	.LBB3953:
 4178              	.LBB3952:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 4179              		.loc 14 104 0
 4180 0180 E8000000 		call	_Znwm@PLT
 4180      00
 4181              	.LEHE9:
 4182              	.LVL383:
 4183              	.LBE3952:
 4184              	.LBE3953:
 4185              	.LBE3954:
 4186              	.LBE3955:
 4187              	.LBE3956:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4188              		.loc 6 187 0
 4189 0185 488D5028 		leaq	40(%rax), %rdx
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 4190              		.loc 6 185 0
 4191 0189 48894424 		movq	%rax, 120(%rsp)
 4191      78
 4192              	.LBE3957:
GAS LISTING /tmp/ccmMnd7l.s 			page 358


 4193              	.LBE3961:
 4194              	.LBE3963:
 4195              	.LBB3964:
 4196              	.LBB3965:
 4197              	.LBB3966:
 4198              	.LBB3967:
 4199              	.LBB3968:
 4200              	.LBB3969:
 4201              	.LBB3970:
 4202              	.LBB3971:
 4203              	.LBB3972:
 4204              	.LBB3973:
 4205              	.LBB3974:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 4206              		.loc 20 762 0
 4207 018e 48C74020 		movq	$0, 32(%rax)
 4207      00000000 
 4208              	.LBE3974:
 4209              	.LBE3973:
 4210              	.LBE3972:
 4211              	.LBE3971:
 4212              	.LBE3970:
 4213              	.LBE3969:
 4214              	.LBE3968:
 4215              	.LBE3967:
 4216              	.LBE3966:
 4217              	.LBE3965:
 4218              	.LBE3964:
 4219              	.LBB3985:
 4220              	.LBB3962:
 4221              	.LBB3958:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4222              		.loc 6 187 0
 4223 0196 48899424 		movq	%rdx, 136(%rsp)
 4223      88000000 
 4224              	.LVL384:
 4225              	.LBE3958:
 4226              	.LBE3962:
 4227              	.LBE3985:
 4228              	.LBB3986:
 4229              	.LBB3984:
 4230              	.LBB3983:
 4231              	.LBB3982:
 4232              	.LBB3981:
 4233              	.LBB3980:
 4234              	.LBB3979:
 4235              	.LBB3978:
 4236              	.LBB3977:
 4237              	.LBB3976:
 4238              	.LBB3975:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 4239              		.loc 20 762 0
 4240 019e 48C70000 		movq	$0, (%rax)
 4240      000000
 4241              	.LVL385:
 4242 01a5 48C74008 		movq	$0, 8(%rax)
 4242      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 359


 4243              	.LVL386:
 4244 01ad 48C74010 		movq	$0, 16(%rax)
 4244      00000000 
 4245              	.LVL387:
 4246 01b5 48C74018 		movq	$0, 24(%rax)
 4246      00000000 
 4247              	.LVL388:
 4248              	.LBE3975:
 4249              	.LBE3976:
 4250              	.LBE3977:
 4251              	.LBE3978:
 4252              	.LBE3979:
 4253              	.LBE3980:
 4254              	.LBE3981:
 4255              	.LBE3982:
 4256              	.LBE3983:
 4257              		.loc 6 1312 0
 4258 01bd 48899424 		movq	%rdx, 128(%rsp)
 4258      80000000 
 4259              	.LVL389:
 4260              	.LBE3984:
 4261              	.LBE3986:
 4262              	.LBE3987:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 4263              		.loc 2 55 0
 4264 01c5 48898424 		movq	%rax, 144(%rsp)
 4264      90000000 
 4265              	.LVL390:
 4266 01cd 0F1F00   		.p2align 4,,10
 4267              		.p2align 3
 4268              	.L291:
 4269              	.LBE3942:
 4270              	.LBE3941:
 4271              	.LBE3940:
 4272              	.LBE3902:
 4273              	.LBE3901:
  45:benchs/weighted_unweighted.cpp ****         std::unique_ptr<heatmap_stamp_t> stamp(heatmap_stamp_gen(stampsize));
 4274              		.loc 22 45 0
 4275 01d0 BD040000 		movl	$4, %ebp
 4275      00
 4276 01d5 31DB     		xorl	%ebx, %ebx
 4277              	.LVL391:
 4278 01d7 660F1F84 		.p2align 4,,10
 4278      00000000 
 4278      00
 4279              		.p2align 3
 4280              	.L292:
 4281 01e0 488B4424 		movq	80(%rsp), %rax
 4281      50
 4282              	.LVL392:
 4283              	.LBB4255:
 4284              	.LBB4251:
 4285              	.LBB4206:
 4286              	.LBB3988:
  47:benchs/weighted_unweighted.cpp ****             std::cerr << "{'npoints': " << npoints << ", 'size': " << stampsize << ", 'weighted': f
  48:benchs/weighted_unweighted.cpp ****             std::cout << "Adding " << npoints << " points of size " << stampsize << " one after ano
  49:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
GAS LISTING /tmp/ccmMnd7l.s 			page 360


  50:benchs/weighted_unweighted.cpp ****                 for(size_t i = 0 ; i < npoints ; ++i) {
  51:benchs/weighted_unweighted.cpp ****                     heatmap_add_point_with_stamp(hm.get(), points[2*i], points[2*i+1], stamp.get())
 4287              		.loc 22 52 0
 4288 01e5 4C89F1   		movq	%r14, %rcx
 4289 01e8 4C89FF   		movq	%r15, %rdi
 4290 01eb 8B1428   		movl	(%rax,%rbp), %edx
 4291 01ee 8B34D8   		movl	(%rax,%rbx,8), %esi
 4292              	.LEHB10:
 4293 01f1 E8000000 		call	heatmap_add_point_with_stamp@PLT
 4293      00
 4294              	.LVL393:
  51:benchs/weighted_unweighted.cpp ****                     heatmap_add_point_with_stamp(hm.get(), points[2*i], points[2*i+1], stamp.get())
 4295              		.loc 22 51 0 discriminator 2
 4296 01f6 4883C301 		addq	$1, %rbx
 4297              	.LVL394:
 4298 01fa 4883C508 		addq	$8, %rbp
 4299 01fe 4C39E3   		cmpq	%r12, %rbx
 4300 0201 75DD     		jne	.L292
 4301              	.LVL395:
 4302              	.LBE3988:
 4303              	.LBB3989:
 4304              	.LBB3990:
 4305              	.LBB3991:
 4306              	.LBB3992:
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 4307              		.loc 11 757 0
 4308 0203 488B9C24 		movq	144(%rsp), %rbx
 4308      90000000 
 4309              	.LVL396:
 4310 020b 488D4308 		leaq	8(%rbx), %rax
 4311 020f 48898424 		movq	%rax, 144(%rsp)
 4311      90000000 
 4312              	.LBE3992:
 4313              	.LBE3991:
  57:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
 4314              		.loc 2 57 0
 4315 0217 E8000000 		call	_Z10gimme_timev@PLT
 4315      00
 4316              	.LVL397:
 4317 021c F20F5C44 		subsd	112(%rsp), %xmm0
 4317      2470
 4318 0222 F20F1103 		movsd	%xmm0, (%rbx)
 4319              	.LVL398:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 4320              		.loc 2 59 0
 4321 0226 E8000000 		call	_Z10gimme_timev@PLT
 4321      00
 4322              	.LEHE10:
 4323              	.LVL399:
 4324 022b 488BAC24 		movq	128(%rsp), %rbp
 4324      80000000 
 4325              	.LBE3990:
 4326              	.LBE3989:
  50:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
 4327              		.loc 22 50 0
 4328 0233 483BAC24 		cmpq	144(%rsp), %rbp
 4328      90000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 361


 4329              	.LBB3994:
 4330              	.LBB3993:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 4331              		.loc 2 59 0
 4332 023b F20F1144 		movsd	%xmm0, 112(%rsp)
 4332      2470
 4333              	.LBE3993:
 4334              	.LBE3994:
  50:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
 4335              		.loc 22 50 0
 4336 0241 758D     		jne	.L291
 4337 0243 488B5C24 		movq	120(%rsp), %rbx
 4337      78
 4338 0248 4989E8   		movq	%rbp, %r8
 4339 024b 4929D8   		subq	%rbx, %r8
 4340 024e 4889D9   		movq	%rbx, %rcx
 4341 0251 4C89C2   		movq	%r8, %rdx
 4342 0254 48C1FA03 		sarq	$3, %rdx
 4343 0258 4885D2   		testq	%rdx, %rdx
 4344 025b 0F88F409 		js	.L293
 4344      0000
 4345 0261 660FEFC9 		pxor	%xmm1, %xmm1
 4346              	.LBB3995:
 4347              	.LBB3996:
 4348              	.LBB3997:
 4349              	.LBB3998:
 4350              	.LBB3999:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 4351              		.loc 19 126 0
 4352 0265 4839DD   		cmpq	%rbx, %rbp
 4353 0268 F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 4353      CA
 4354              	.LVL400:
 4355 026d 0F84070A 		je	.L295
 4355      0000
 4356              	.LVL401:
 4357              	.L543:
 4358 0273 660FEFC0 		pxor	%xmm0, %xmm0
 4359 0277 4889D8   		movq	%rbx, %rax
 4360 027a 48C74424 		movq	$0, 32(%rsp)
 4360      20000000 
 4360      00
 4361              	.LVL402:
 4362              		.p2align 4,,10
 4363 0283 0F1F4400 		.p2align 3
 4363      00
 4364              	.L296:
 4365              		.loc 19 127 0
 4366 0288 F20F5800 		addsd	(%rax), %xmm0
 4367              	.LVL403:
 4368 028c 4883C008 		addq	$8, %rax
 4369              	.LVL404:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 4370              		.loc 19 126 0
 4371 0290 4839C5   		cmpq	%rax, %rbp
 4372 0293 75F3     		jne	.L296
 4373              	.LBE3999:
GAS LISTING /tmp/ccmMnd7l.s 			page 362


 4374              	.LBE3998:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 4375              		.loc 2 66 0
 4376 0295 F20F5EC1 		divsd	%xmm1, %xmm0
 4377              	.LVL405:
 4378              	.LBB4001:
 4379              	.LBB4002:
 4380              	.LBB4003:
 4381              	.LBB4004:
 4382              	.LBB4005:
 4383              		.loc 20 1015 0
 4384 0299 480FBDD2 		bsrq	%rdx, %rdx
 4385 029d B83F0000 		movl	$63, %eax
 4385      00
 4386              	.LVL406:
 4387 02a2 4883F23F 		xorq	$63, %rdx
 4388              	.LBE4005:
 4389              	.LBE4004:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 4390              		.loc 12 1967 0
 4391 02a6 4889EE   		movq	%rbp, %rsi
 4392 02a9 4889DF   		movq	%rbx, %rdi
 4393              	.LBB4007:
 4394              	.LBB4006:
 4395              		.loc 20 1015 0
 4396 02ac 4863D2   		movslq	%edx, %rdx
 4397 02af 4C894424 		movq	%r8, 40(%rsp)
 4397      28
 4398              	.LVL407:
 4399 02b4 4829D0   		subq	%rdx, %rax
 4400 02b7 4889C2   		movq	%rax, %rdx
 4401              	.LBE4006:
 4402              	.LBE4007:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
 4403              		.loc 12 1969 0
 4404 02ba 4801D2   		addq	%rdx, %rdx
 4405              	.LBE4003:
 4406              	.LBE4002:
 4407              	.LBE4001:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 4408              		.loc 2 66 0
 4409 02bd F20F1144 		movsd	%xmm0, 8(%rsp)
 4409      2408
 4410              	.LVL408:
 4411              	.LBB4100:
 4412              	.LBB4096:
 4413              	.LBB4092:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 4414              		.loc 12 1967 0
 4415 02c3 E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 4415      00
 4416              	.LVL409:
 4417              	.LBB4008:
 4418              	.LBB4009:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 4419              		.loc 12 1882 0
 4420 02c8 4C8B4424 		movq	40(%rsp), %r8
GAS LISTING /tmp/ccmMnd7l.s 			page 363


 4420      28
 4421 02cd 4981F887 		cmpq	$135, %r8
 4421      000000
 4422 02d4 0F8E9608 		jle	.L533
 4422      0000
 4423              	.LVL410:
 4424 02da 4C8D9380 		leaq	128(%rbx), %r10
 4424      000000
 4425              	.LBB4010:
 4426              	.LBB4011:
 4427              	.LBB4012:
 4428              	.LBB4013:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 4429              		.loc 11 782 0
 4430 02e1 4C8D4308 		leaq	8(%rbx), %r8
 4431 02e5 4C89D1   		movq	%r10, %rcx
 4432              	.LVL411:
 4433              	.L298:
 4434              	.LBE4013:
 4435              	.LBE4012:
 4436              	.LBB4014:
 4437              	.LBB4015:
 4438              	.LBB4016:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 4439              		.loc 17 42 0
 4440 02e8 F2410F10 		movsd	(%r8), %xmm1
 4440      08
 4441              	.LVL412:
 4442              	.LBE4016:
 4443              	.LBE4015:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 4444              		.loc 12 1846 0
 4445 02ed F20F1003 		movsd	(%rbx), %xmm0
 4446 02f1 660F2EC1 		ucomisd	%xmm1, %xmm0
 4447 02f5 0F87D507 		ja	.L534
 4447      0000
 4448              	.LVL413:
 4449              	.LBB4017:
 4450              	.LBB4018:
 4451              	.LBB4019:
 4452              	.LBB4020:
 4453              		.loc 17 70 0
 4454 02fb F2410F10 		movsd	-8(%r8), %xmm0
 4454      40F8
 4455 0301 498D40F8 		leaq	-8(%r8), %rax
 4456              	.LVL414:
 4457              	.LBE4020:
 4458              	.LBE4019:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4459              		.loc 12 1827 0
 4460 0305 660F2EC1 		ucomisd	%xmm1, %xmm0
 4461 0309 7708     		ja	.L473
 4462 030b E93D0900 		jmp	.L535
 4462      00
 4463              	.LVL415:
 4464              		.p2align 4,,10
 4465              		.p2align 3
GAS LISTING /tmp/ccmMnd7l.s 			page 364


 4466              	.L390:
 4467 0310 4889D0   		movq	%rdx, %rax
 4468              	.LVL416:
 4469              	.L473:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 4470              		.loc 12 1829 0
 4471 0313 F20F1140 		movsd	%xmm0, 8(%rax)
 4471      08
 4472              	.LVL417:
 4473              	.LBB4022:
 4474              	.LBB4023:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 4475              		.loc 11 763 0
 4476 0318 488D50F8 		leaq	-8(%rax), %rdx
 4477              	.LVL418:
 4478              	.LBE4023:
 4479              	.LBE4022:
 4480              	.LBB4024:
 4481              	.LBB4021:
 4482              		.loc 17 70 0
 4483 031c F20F1040 		movsd	-8(%rax), %xmm0
 4483      F8
 4484              	.LBE4021:
 4485              	.LBE4024:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4486              		.loc 12 1827 0
 4487 0321 660F2EC1 		ucomisd	%xmm1, %xmm0
 4488 0325 77E9     		ja	.L390
 4489              	.LVL419:
 4490              	.L305:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 4491              		.loc 12 1833 0
 4492 0327 F20F1108 		movsd	%xmm1, (%rax)
 4493              	.LVL420:
 4494              	.L304:
 4495 032b 4983C008 		addq	$8, %r8
 4496              	.LVL421:
 4497              	.LBE4018:
 4498              	.LBE4017:
 4499              	.LBE4014:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 4500              		.loc 12 1844 0
 4501 032f 4D39D0   		cmpq	%r10, %r8
 4502 0332 75B4     		jne	.L298
 4503              	.LVL422:
 4504              	.LBE4011:
 4505              	.LBE4010:
 4506              	.LBB4038:
 4507              	.LBB4039:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 4508              		.loc 12 1865 0
 4509 0334 4C39C5   		cmpq	%r8, %rbp
 4510 0337 7443     		je	.L518
 4511              	.LVL423:
 4512              	.L455:
 4513              	.LBB4040:
 4514              	.LBB4041:
GAS LISTING /tmp/ccmMnd7l.s 			page 365


1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 4515              		.loc 12 1824 0
 4516 0339 F20F1009 		movsd	(%rcx), %xmm1
 4517              	.LVL424:
 4518 033d 488D41F8 		leaq	-8(%rcx), %rax
 4519              	.LVL425:
 4520              	.LBB4042:
 4521              	.LBB4043:
 4522              		.loc 17 70 0
 4523 0341 F20F1041 		movsd	-8(%rcx), %xmm0
 4523      F8
 4524              	.LBE4043:
 4525              	.LBE4042:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4526              		.loc 12 1827 0
 4527 0346 660F2EC1 		ucomisd	%xmm1, %xmm0
 4528 034a 770F     		ja	.L474
 4529 034c E9060800 		jmp	.L536
 4529      00
 4530              	.LVL426:
 4531              		.p2align 4,,10
 4532 0351 0F1F8000 		.p2align 3
 4532      000000
 4533              	.L392:
 4534 0358 4889D0   		movq	%rdx, %rax
 4535              	.LVL427:
 4536              	.L474:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 4537              		.loc 12 1829 0
 4538 035b F20F1140 		movsd	%xmm0, 8(%rax)
 4538      08
 4539              	.LVL428:
 4540              	.LBB4045:
 4541              	.LBB4046:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 4542              		.loc 11 763 0
 4543 0360 488D50F8 		leaq	-8(%rax), %rdx
 4544              	.LVL429:
 4545              	.LBE4046:
 4546              	.LBE4045:
 4547              	.LBB4047:
 4548              	.LBB4044:
 4549              		.loc 17 70 0
 4550 0364 F20F1040 		movsd	-8(%rax), %xmm0
 4550      F8
 4551              	.LBE4044:
 4552              	.LBE4047:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4553              		.loc 12 1827 0
 4554 0369 660F2EC1 		ucomisd	%xmm1, %xmm0
 4555 036d 77E9     		ja	.L392
 4556              	.LVL430:
 4557 036f 4883C108 		addq	$8, %rcx
 4558              	.LVL431:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 4559              		.loc 12 1833 0
 4560 0373 F20F1108 		movsd	%xmm1, (%rax)
GAS LISTING /tmp/ccmMnd7l.s 			page 366


 4561              	.LVL432:
 4562              	.LBE4041:
 4563              	.LBE4040:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 4564              		.loc 12 1865 0
 4565 0377 4839CD   		cmpq	%rcx, %rbp
 4566 037a 75BD     		jne	.L455
 4567              	.LVL433:
 4568              	.L518:
 4569 037c 488B5424 		movq	120(%rsp), %rdx
 4569      78
 4570 0381 488BAC24 		movq	128(%rsp), %rbp
 4570      80000000 
 4571              	.LVL434:
 4572 0389 4889D1   		movq	%rdx, %rcx
 4573              	.LVL435:
 4574              	.L300:
 4575              	.LBE4039:
 4576              	.LBE4038:
 4577              	.LBE4009:
 4578              	.LBE4008:
 4579              	.LBE4092:
 4580              	.LBE4096:
 4581              	.LBE4100:
 4582              	.LBB4101:
 4583              	.LBB4102:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4584              		.loc 6 655 0
 4585 038c 4889E8   		movq	%rbp, %rax
 4586              	.LBE4102:
 4587              	.LBE4101:
 4588              	.LBB4104:
 4589              	.LBB4105:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4590              		.loc 8 535 0
 4591 038f 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4591      000000
 4592 0396 488D3500 		leaq	.LC14(%rip), %rsi
 4592      000000
 4593              	.LBE4105:
 4594              	.LBE4104:
 4595              	.LBB4108:
 4596              	.LBB4103:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4597              		.loc 6 655 0
 4598 039d 4829C8   		subq	%rcx, %rax
 4599 03a0 48C1F803 		sarq	$3, %rax
 4600              	.LBE4103:
 4601              	.LBE4108:
  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 4602              		.loc 2 70 0
 4603 03a4 48D1E8   		shrq	%rax
 4604 03a7 F20F1014 		movsd	(%rdx,%rax,8), %xmm2
 4604      C2
 4605              	.LBB4109:
 4606              	.LBB4106:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccmMnd7l.s 			page 367


 4607              		.loc 8 535 0
 4608 03ac BA140000 		movl	$20, %edx
 4608      00
 4609              	.LBE4106:
 4610              	.LBE4109:
  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 4611              		.loc 2 70 0
 4612 03b1 F20F1154 		movsd	%xmm2, 40(%rsp)
 4612      2428
 4613              	.LVL436:
 4614              	.LBB4110:
 4615              	.LBB4107:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4616              		.loc 8 535 0
 4617 03b7 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4617      00
 4618              	.LVL437:
 4619              	.LBE4107:
 4620              	.LBE4110:
 4621              	.LBB4111:
 4622              	.LBB4112:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4623              		.loc 8 132 0
 4624 03bc 488B0500 		movq	_ZSt4cout@GOTPCREL(%rip), %rax
 4624      000000
 4625 03c3 488B1500 		movq	_ZSt4cout@GOTPCREL(%rip), %rdx
 4625      000000
 4626              	.LBE4112:
 4627              	.LBE4111:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4628              		.loc 2 71 0
 4629 03ca F20F1005 		movsd	.LC8(%rip), %xmm0
 4629      00000000 
 4630              	.LBB4125:
 4631              	.LBB4126:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4632              		.loc 8 221 0
 4633 03d2 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4633      000000
 4634              	.LBE4126:
 4635              	.LBE4125:
 4636              	.LBB4129:
 4637              	.LBB4123:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4638              		.loc 8 132 0
 4639 03d9 488B00   		movq	(%rax), %rax
 4640              	.LBE4123:
 4641              	.LBE4129:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4642              		.loc 2 71 0
 4643 03dc F20F5944 		mulsd	40(%rsp), %xmm0
 4643      2428
 4644              	.LBB4130:
 4645              	.LBB4124:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4646              		.loc 8 132 0
 4647 03e2 480350E8 		addq	-24(%rax), %rdx
GAS LISTING /tmp/ccmMnd7l.s 			page 368


 4648              	.LVL438:
 4649              	.LBB4113:
 4650              	.LBB4114:
 4651              	.LBB4115:
 4652              	.LBB4116:
 4653              	.LBB4117:
 4654              	.LBB4118:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 4655              		.loc 21 76 0
 4656 03e6 8B4218   		movl	24(%rdx), %eax
 4657 03e9 25FBFEFF 		andl	$-261, %eax
 4657      FF
 4658              	.LVL439:
 4659              	.LBE4118:
 4660              	.LBE4117:
 4661              	.LBE4116:
 4662              	.LBB4119:
 4663              	.LBB4120:
 4664              	.LBB4121:
 4665              	.LBB4122:
 4666              		.loc 21 80 0
 4667 03ee 83C804   		orl	$4, %eax
 4668              	.LVL440:
 4669 03f1 894218   		movl	%eax, 24(%rdx)
 4670              	.LVL441:
 4671              	.LBE4122:
 4672              	.LBE4121:
 4673              	.LBE4120:
 4674              	.LBE4119:
 4675              	.LBE4115:
 4676              	.LBE4114:
 4677              	.LBE4113:
 4678              	.LBE4124:
 4679              	.LBE4130:
 4680              	.LBB4131:
 4681              	.LBB4127:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4682              		.loc 8 221 0
 4683 03f4 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4683      00
 4684              	.LVL442:
 4685              	.LBE4127:
 4686              	.LBE4131:
 4687              	.LBB4132:
 4688              	.LBB4133:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4689              		.loc 8 535 0
 4690 03f9 488D3500 		leaq	.LC15(%rip), %rsi
 4690      000000
 4691 0400 BA0B0000 		movl	$11, %edx
 4691      00
 4692 0405 4889C7   		movq	%rax, %rdi
 4693              	.LBE4133:
 4694              	.LBE4132:
 4695              	.LBB4135:
 4696              	.LBB4128:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
GAS LISTING /tmp/ccmMnd7l.s 			page 369


 4697              		.loc 8 221 0
 4698 0408 4889C3   		movq	%rax, %rbx
 4699              	.LVL443:
 4700              	.LBE4128:
 4701              	.LBE4135:
 4702              	.LBB4136:
 4703              	.LBB4134:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4704              		.loc 8 535 0
 4705 040b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4705      00
 4706              	.LVL444:
 4707              	.LBE4134:
 4708              	.LBE4136:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4709              		.loc 2 71 0
 4710 0410 F20F1005 		movsd	.LC8(%rip), %xmm0
 4710      00000000 
 4711              	.LVL445:
 4712              	.LBB4137:
 4713              	.LBB4138:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4714              		.loc 8 221 0
 4715 0418 4889DF   		movq	%rbx, %rdi
 4716              	.LBE4138:
 4717              	.LBE4137:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4718              		.loc 2 71 0
 4719 041b F20F5944 		mulsd	8(%rsp), %xmm0
 4719      2408
 4720              	.LVL446:
 4721              	.LBB4141:
 4722              	.LBB4139:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4723              		.loc 8 221 0
 4724 0421 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4724      00
 4725              	.LVL447:
 4726              	.LBE4139:
 4727              	.LBE4141:
 4728              	.LBB4142:
 4729              	.LBB4143:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4730              		.loc 8 535 0
 4731 0426 488D3500 		leaq	.LC16(%rip), %rsi
 4731      000000
 4732              	.LBE4143:
 4733              	.LBE4142:
 4734              	.LBB4145:
 4735              	.LBB4140:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4736              		.loc 8 221 0
 4737 042d 4889C3   		movq	%rax, %rbx
 4738              	.LVL448:
 4739              	.LBE4140:
 4740              	.LBE4145:
 4741              	.LBB4146:
GAS LISTING /tmp/ccmMnd7l.s 			page 370


 4742              	.LBB4144:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4743              		.loc 8 535 0
 4744 0430 BA010000 		movl	$1, %edx
 4744      00
 4745 0435 4889C7   		movq	%rax, %rdi
 4746 0438 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4746      00
 4747              	.LVL449:
 4748              	.LBE4144:
 4749              	.LBE4146:
 4750              	.LBB4147:
 4751              	.LBB4148:
 4752              	.LBB4149:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4753              		.loc 8 565 0
 4754 043d 488B03   		movq	(%rbx), %rax
 4755              	.LBB4150:
 4756              	.LBB4151:
 4757              		.loc 13 444 0
 4758 0440 488B40E8 		movq	-24(%rax), %rax
 4759 0444 488BAC03 		movq	240(%rbx,%rax), %rbp
 4759      F0000000 
 4760              	.LVL450:
 4761              	.LBB4152:
 4762              	.LBB4153:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 4763              		.loc 13 48 0
 4764 044c 4885ED   		testq	%rbp, %rbp
 4765 044f 0F844408 		je	.L361
 4765      0000
 4766              	.LVL451:
 4767              	.LBE4153:
 4768              	.LBE4152:
 4769              	.LBB4155:
 4770              	.LBB4156:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 4771              		.loc 1 867 0
 4772 0455 807D3800 		cmpb	$0, 56(%rbp)
 4773 0459 0F84C906 		je	.L322
 4773      0000
 4774 045f 0FBE7543 		movsbl	67(%rbp), %esi
 4775              	.LVL452:
 4776              	.L323:
 4777              	.LBE4156:
 4778              	.LBE4155:
 4779              	.LBE4151:
 4780              	.LBE4150:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4781              		.loc 8 565 0
 4782 0463 4889DF   		movq	%rbx, %rdi
 4783 0466 E8000000 		call	_ZNSo3putEc@PLT
 4783      00
 4784              	.LVL453:
 4785              	.LBB4164:
 4786              	.LBB4165:
 4787              		.loc 8 587 0
GAS LISTING /tmp/ccmMnd7l.s 			page 371


 4788 046b 4889C7   		movq	%rax, %rdi
 4789 046e E8000000 		call	_ZNSo5flushEv@PLT
 4789      00
 4790              	.LVL454:
 4791              	.LBE4165:
 4792              	.LBE4164:
 4793              	.LBE4149:
 4794              	.LBE4148:
 4795              	.LBE4147:
 4796              	.LBB4172:
 4797              	.LBB4173:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4798              		.loc 8 535 0
 4799 0473 488D3500 		leaq	.LC17(%rip), %rsi
 4799      000000
 4800 047a BA080000 		movl	$8, %edx
 4800      00
 4801 047f 4C89EF   		movq	%r13, %rdi
 4802 0482 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4802      00
 4803              	.LVL455:
 4804              	.LBE4173:
 4805              	.LBE4172:
 4806              	.LBB4174:
 4807              	.LBB4175:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4808              		.loc 8 221 0
 4809 0487 F20F1044 		movsd	40(%rsp), %xmm0
 4809      2428
 4810 048d 4C89EF   		movq	%r13, %rdi
 4811 0490 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4811      00
 4812              	.LVL456:
 4813              	.LBE4175:
 4814              	.LBE4174:
 4815              	.LBB4177:
 4816              	.LBB4178:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4817              		.loc 8 535 0
 4818 0495 488D3500 		leaq	.LC18(%rip), %rsi
 4818      000000
 4819 049c BA0A0000 		movl	$10, %edx
 4819      00
 4820 04a1 4889C7   		movq	%rax, %rdi
 4821              	.LBE4178:
 4822              	.LBE4177:
 4823              	.LBB4180:
 4824              	.LBB4176:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4825              		.loc 8 221 0
 4826 04a4 4889C3   		movq	%rax, %rbx
 4827              	.LVL457:
 4828              	.LBE4176:
 4829              	.LBE4180:
 4830              	.LBB4181:
 4831              	.LBB4179:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccmMnd7l.s 			page 372


 4832              		.loc 8 535 0
 4833 04a7 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4833      00
 4834              	.LVL458:
 4835              	.LBE4179:
 4836              	.LBE4181:
 4837              	.LBB4182:
 4838              	.LBB4183:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4839              		.loc 8 221 0
 4840 04ac F20F1044 		movsd	8(%rsp), %xmm0
 4840      2408
 4841 04b2 4889DF   		movq	%rbx, %rdi
 4842 04b5 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4842      00
 4843              	.LVL459:
 4844              	.LBE4183:
 4845              	.LBE4182:
 4846              	.LBB4184:
 4847              	.LBB4185:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4848              		.loc 8 535 0
 4849 04ba 488D3500 		leaq	.LC19(%rip), %rsi
 4849      000000
 4850 04c1 4889C7   		movq	%rax, %rdi
 4851 04c4 BA010000 		movl	$1, %edx
 4851      00
 4852 04c9 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4852      00
 4853              	.LVL460:
 4854              	.LBE4185:
 4855              	.LBE4184:
 4856              	.LBE3997:
 4857              	.LBB4192:
 4858              	.LBB4193:
 4859              	.LBB4194:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 4860              		.loc 6 161 0
 4861 04ce 488B7C24 		movq	120(%rsp), %rdi
 4861      78
 4862              	.LVL461:
 4863              	.LBB4195:
 4864              	.LBB4196:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 4865              		.loc 6 177 0
 4866 04d3 4885FF   		testq	%rdi, %rdi
 4867 04d6 7405     		je	.L324
 4868              	.LVL462:
 4869              	.LBB4197:
 4870              	.LBB4198:
 4871              	.LBB4199:
 4872              		.loc 14 110 0
 4873 04d8 E8000000 		call	_ZdlPv@PLT
 4873      00
 4874              	.LVL463:
 4875              	.L324:
 4876              	.LBE4199:
GAS LISTING /tmp/ccmMnd7l.s 			page 373


 4877              	.LBE4198:
 4878              	.LBE4197:
 4879              	.LBE4196:
 4880              	.LBE4195:
 4881              	.LBE4194:
 4882              	.LBE4193:
 4883              	.LBE4192:
 4884              	.LBE3996:
 4885              	.LBE3995:
 4886              	.LBE4206:
 4887              	.LBB4207:
 4888              	.LBB4208:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4889              		.loc 8 535 0
 4890 04dd 488D3500 		leaq	.LC28(%rip), %rsi
 4890      000000
 4891 04e4 BA010000 		movl	$1, %edx
 4891      00
 4892 04e9 4C89EF   		movq	%r13, %rdi
 4893              	.LEHB11:
 4894 04ec E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4894      00
 4895              	.LVL464:
 4896              	.LBE4208:
 4897              	.LBE4207:
 4898              	.LBB4209:
 4899              	.LBB4210:
 4900              	.LBB4211:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4901              		.loc 8 565 0
 4902 04f1 498B4500 		movq	0(%r13), %rax
 4903              	.LBB4212:
 4904              	.LBB4213:
 4905              		.loc 13 444 0
 4906 04f5 488B40E8 		movq	-24(%rax), %rax
 4907 04f9 4A8B9C28 		movq	240(%rax,%r13), %rbx
 4907      F0000000 
 4908              	.LVL465:
 4909              	.LBB4214:
 4910              	.LBB4215:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 4911              		.loc 13 48 0
 4912 0501 4885DB   		testq	%rbx, %rbx
 4913 0504 0F849407 		je	.L537
 4913      0000
 4914              	.LVL466:
 4915              	.LBE4215:
 4916              	.LBE4214:
 4917              	.LBB4217:
 4918              	.LBB4218:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 4919              		.loc 1 867 0
 4920 050a 807B3800 		cmpb	$0, 56(%rbx)
 4921 050e 0F840307 		je	.L326
 4921      0000
 4922 0514 0FBE7343 		movsbl	67(%rbx), %esi
 4923              	.LVL467:
GAS LISTING /tmp/ccmMnd7l.s 			page 374


 4924              	.L327:
 4925              	.LBE4218:
 4926              	.LBE4217:
 4927              	.LBE4213:
 4928              	.LBE4212:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4929              		.loc 8 565 0
 4930 0518 4C89EF   		movq	%r13, %rdi
 4931 051b E8000000 		call	_ZNSo3putEc@PLT
 4931      00
 4932              	.LVL468:
 4933              	.LBB4226:
 4934              	.LBB4227:
 4935              		.loc 8 587 0
 4936 0520 4889C7   		movq	%rax, %rdi
 4937 0523 E8000000 		call	_ZNSo5flushEv@PLT
 4937      00
 4938              	.LEHE11:
 4939              	.LVL469:
 4940              	.LBE4227:
 4941              	.LBE4226:
 4942              	.LBE4211:
 4943              	.LBE4210:
 4944              	.LBE4209:
  52:benchs/weighted_unweighted.cpp ****                 }
  53:benchs/weighted_unweighted.cpp ****             }
  54:benchs/weighted_unweighted.cpp ****             std::cerr << "," << std::endl;
  55:benchs/weighted_unweighted.cpp **** 
  56:benchs/weighted_unweighted.cpp ****             ret += hm->buf[0] > 0.0f;
 4945              		.loc 22 57 0
 4946 0528 498B07   		movq	(%r15), %rax
 4947 052b 660FEFFF 		pxor	%xmm7, %xmm7
 4948              	.LBE4251:
  46:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 4949              		.loc 22 46 0
 4950 052f 4F8D24A4 		leaq	(%r12,%r12,4), %r12
 4951              	.LVL470:
 4952              	.LBB4252:
 4953              	.LBB4234:
 4954              	.LBB4235:
 4955              	.LBB4236:
 4956              	.LBB4237:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 4957              		.loc 5 41 0
 4958 0533 4C89FF   		movq	%r15, %rdi
 4959              	.LBE4237:
 4960              	.LBE4236:
 4961              	.LBE4235:
 4962              	.LBE4234:
 4963              		.loc 22 57 0
 4964 0536 F30F1000 		movss	(%rax), %xmm0
 4965 053a 31C0     		xorl	%eax, %eax
 4966 053c 0F2EC7   		ucomiss	%xmm7, %xmm0
 4967 053f 0F97C0   		seta	%al
 4968              	.LBE4252:
  46:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 4969              		.loc 22 46 0
GAS LISTING /tmp/ccmMnd7l.s 			page 375


 4970 0542 4D01E4   		addq	%r12, %r12
 4971              	.LBB4253:
 4972              		.loc 22 57 0
 4973 0545 01442414 		addl	%eax, 20(%rsp)
 4974              	.LVL471:
 4975              	.LBB4241:
 4976              	.LBB4240:
 4977              	.LBB4239:
 4978              	.LBB4238:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 4979              		.loc 5 41 0
 4980 0549 E8000000 		call	heatmap_free@PLT
 4980      00
 4981              	.LVL472:
 4982              	.LBE4238:
 4983              	.LBE4239:
 4984              	.LBE4240:
 4985              	.LBE4241:
 4986              	.LBE4253:
  46:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 4987              		.loc 22 46 0
 4988 054e 836C2434 		subl	$1, 52(%rsp)
 4988      01
 4989 0553 0F8522FB 		jne	.L328
 4989      FFFF
 4990              	.LVL473:
 4991              	.LBE4255:
 4992              	.LBB4256:
 4993              	.LBB4257:
 4994              		.file 23 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Copyright (C) 2008-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** /** @file bits/unique_ptr.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
GAS LISTING /tmp/ccmMnd7l.s 			page 376


  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #define _UNIQUE_PTR_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <bits/c++config.h>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <debug/debug.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <type_traits>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <utility>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <tuple>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** {
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /**
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    * @addtogroup pointer_abstractions
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    * @{
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    */
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename> class auto_ptr;
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #endif
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename _Tp>
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     struct default_delete
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor.
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, @p _Up,
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * only if @p _Up* is convertible to @p _Tp*.
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = typename
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       enable_if<is_convertible<_Up*, _Tp*>::value>::type>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Calls @c delete @p __ptr
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       void
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	delete __ptr;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       }
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     };
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// Specialization for arrays, default_delete.
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename _Tp>
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     struct default_delete<_Tp[]>
GAS LISTING /tmp/ccmMnd7l.s 			page 377


  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     private:
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	using __remove_cv = typename remove_cv<_Up>::type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Like is_base_of<_Tp, _Up> but false if unqualified types are the same
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	using __is_derived_Tp
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  = __and_< is_base_of<_Tp, _Up>,
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		    __not_<is_same<__remove_cv<_Tp>, __remove_cv<_Up>>> >;
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     public:
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, such as
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * a const-qualified version of @p _Tp.
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Conversions from types derived from @c _Tp are not allowed because
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * it is unsafe to @c delete[] an array of derived types through a
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * pointer to the base type.
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = typename
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       enable_if<!__is_derived_Tp<_Up>::value>::type>
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****         default_delete(const default_delete<_Up[]>&) noexcept { }
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Calls @c delete[] @p __ptr
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       void
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	delete [] __ptr;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typename enable_if<__is_derived_Tp<_Up>::value>::type
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	operator()(_Up*) const = delete;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     };
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// 20.7.1.2 unique_ptr for single objects.
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp = default_delete<_Tp> >
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     class unique_ptr
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // use SFINAE to determine whether _Del::pointer exists
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       class _Pointer
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	template<typename _Up>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  static typename _Up::pointer __test(typename _Up::pointer*);
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	template<typename _Up>
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  static _Tp* __test(...);
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typedef typename remove_reference<_Dp>::type _Del;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 378


 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       public:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typedef decltype(__test<_Del>(0)) type;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       };
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       __tuple_type                                      _M_t;
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     public:
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef typename _Pointer::type   pointer;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef _Tp                       element_type;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef _Dp                       deleter_type;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Constructors.
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr unique_ptr() noexcept
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t()
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be value-initialized.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       explicit
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p) noexcept
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__p, deleter_type())
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be initialized with @p __d
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  typename conditional<is_reference<deleter_type>::value,
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	    deleter_type, const deleter_type&>::type __d) noexcept
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__p, __d) { }
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __d  An rvalue reference to a deleter.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  typename remove_reference<deleter_type>::type&& __d) noexcept
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(std::move(__p), std::move(__d))
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!std::is_reference<deleter_type>::value,
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "rvalue deleter bound to reference"); }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 379


 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Move constructors.
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Move constructor.
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(unique_ptr&& __u) noexcept
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor from another type
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Requires that the pointer owned by @p __u is convertible to the
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * type of pointer owned by this object, @p __u does not own an array,
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * and @p __u has a compatible deleter type.
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename _Ep, typename = _Require<
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       __not_<is_array<_Up>>,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       typename conditional<is_reference<_Dp>::value,
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 				    is_same<_Ep, _Dp>,
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 				    is_convertible<_Ep, _Dp>>::type>>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	{ }
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Converting constructor from @c auto_ptr
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = _Require<
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       is_convertible<_Up*, _Tp*>, is_same<_Dp, default_delete<_Tp>>>>
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	unique_ptr(auto_ptr<_Up>&& __u) noexcept;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #endif
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Destructor, invokes the deleter if the stored pointer is not null.
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       ~unique_ptr() noexcept
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	auto& __ptr = std::get<0>(_M_t);
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	if (__ptr != nullptr)
 4995              		.loc 23 235 0
 4996 0559 4D85F6   		testq	%r14, %r14
 4997 055c 7408     		je	.L329
 4998              	.LVL474:
 4999              	.LBB4258:
 5000              	.LBB4259:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
 5001              		.loc 5 45 0
 5002 055e 4C89F7   		movq	%r14, %rdi
 5003 0561 E8000000 		call	heatmap_stamp_free@PLT
 5003      00
 5004              	.LVL475:
 5005              	.L329:
 5006              	.LBE4259:
 5007              	.LBE4258:
 5008              	.LBE4257:
 5009              	.LBE4256:
 5010              	.LBE3900:
  44:benchs/weighted_unweighted.cpp ****     for(size_t stampsize = STAMP_MIN ; stampsize <= STAMP_MAX ; stampsize *= 2) {
 5011              		.loc 22 44 0
GAS LISTING /tmp/ccmMnd7l.s 			page 380


 5012 0566 48D16424 		salq	24(%rsp)
 5012      18
 5013              	.LVL476:
 5014 056b 836C2430 		subl	$1, 48(%rsp)
 5014      01
 5015 0570 0F85EBFA 		jne	.L330
 5015      FFFF
 5016 0576 C7442430 		movl	$10, 48(%rsp)
 5016      0A000000 
 5017 057e 48C74424 		movq	$1, 8(%rsp)
 5017      08010000 
 5017      00
 5018              	.LVL477:
 5019              	.L373:
 5020              	.LBE3899:
 5021              	.LBB4266:
 5022              	.LBB4267:
  57:benchs/weighted_unweighted.cpp ****         }
  58:benchs/weighted_unweighted.cpp ****     }
  59:benchs/weighted_unweighted.cpp **** 
  60:benchs/weighted_unweighted.cpp ****     for(size_t stampsize = STAMP_MIN ; stampsize <= STAMP_MAX ; stampsize *= 2) {
  61:benchs/weighted_unweighted.cpp ****         std::unique_ptr<heatmap_stamp_t> stamp(heatmap_stamp_gen(stampsize));
 5023              		.loc 22 62 0
 5024 0587 8B7C2408 		movl	8(%rsp), %edi
 5025              	.LEHB12:
 5026 058b E8000000 		call	heatmap_stamp_gen@PLT
 5026      00
 5027              	.LEHE12:
 5028              	.LVL478:
 5029 0590 4989C6   		movq	%rax, %r14
 5030 0593 C7442434 		movl	$7, 52(%rsp)
 5030      07000000 
 5031 059b 41BC0100 		movl	$1, %r12d
 5031      0000
 5032              	.L366:
 5033              	.LVL479:
 5034              	.LBB4268:
 5035              	.LBB4269:
  62:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
  63:benchs/weighted_unweighted.cpp ****             std::unique_ptr<heatmap_t> hm(heatmap_new(MAPSIZE, MAPSIZE));
 5036              		.loc 22 64 0
 5037 05a1 BE003C00 		movl	$15360, %esi
 5037      00
 5038 05a6 BF003C00 		movl	$15360, %edi
 5038      00
 5039              	.LEHB13:
 5040 05ab E8000000 		call	heatmap_new@PLT
 5040      00
 5041              	.LEHE13:
 5042              	.LVL480:
 5043              	.LBB4270:
 5044              	.LBB4271:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5045              		.loc 8 535 0
 5046 05b0 488D3500 		leaq	.LC22(%rip), %rsi
 5046      000000
 5047 05b7 BA0C0000 		movl	$12, %edx
GAS LISTING /tmp/ccmMnd7l.s 			page 381


 5047      00
 5048 05bc 4C89EF   		movq	%r13, %rdi
 5049              	.LBE4271:
 5050              	.LBE4270:
 5051              		.loc 22 64 0
 5052 05bf 4989C7   		movq	%rax, %r15
 5053              	.LVL481:
 5054              	.LEHB14:
 5055              	.LBB4273:
 5056              	.LBB4272:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5057              		.loc 8 535 0
 5058 05c2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5058      00
 5059              	.LVL482:
 5060              	.LBE4272:
 5061              	.LBE4273:
 5062              	.LBB4274:
 5063              	.LBB4275:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5064              		.loc 8 171 0
 5065 05c7 4C89E6   		movq	%r12, %rsi
 5066 05ca 4C89EF   		movq	%r13, %rdi
 5067 05cd E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 5067      00
 5068              	.LVL483:
 5069              	.LBE4275:
 5070              	.LBE4274:
 5071              	.LBB4277:
 5072              	.LBB4278:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5073              		.loc 8 535 0
 5074 05d2 488D3500 		leaq	.LC23(%rip), %rsi
 5074      000000
 5075 05d9 BA0A0000 		movl	$10, %edx
 5075      00
 5076 05de 4889C7   		movq	%rax, %rdi
 5077              	.LBE4278:
 5078              	.LBE4277:
 5079              	.LBB4280:
 5080              	.LBB4276:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5081              		.loc 8 171 0
 5082 05e1 4889C3   		movq	%rax, %rbx
 5083              	.LVL484:
 5084              	.LBE4276:
 5085              	.LBE4280:
 5086              	.LBB4281:
 5087              	.LBB4279:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5088              		.loc 8 535 0
 5089 05e4 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5089      00
 5090              	.LVL485:
 5091              	.LBE4279:
 5092              	.LBE4281:
 5093              	.LBB4282:
GAS LISTING /tmp/ccmMnd7l.s 			page 382


 5094              	.LBB4283:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5095              		.loc 8 171 0
 5096 05e9 488B6C24 		movq	8(%rsp), %rbp
 5096      08
 5097 05ee 4889DF   		movq	%rbx, %rdi
 5098 05f1 4889EE   		movq	%rbp, %rsi
 5099 05f4 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 5099      00
 5100              	.LVL486:
 5101              	.LBE4283:
 5102              	.LBE4282:
 5103              	.LBB4284:
 5104              	.LBB4285:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5105              		.loc 8 535 0
 5106 05f9 488D3500 		leaq	.LC30(%rip), %rsi
 5106      000000
 5107 0600 BA140000 		movl	$20, %edx
 5107      00
 5108 0605 4889C7   		movq	%rax, %rdi
 5109 0608 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5109      00
 5110              	.LVL487:
 5111              	.LBE4285:
 5112              	.LBE4284:
 5113              	.LBB4286:
 5114              	.LBB4287:
 5115 060d 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5115      000000
 5116 0614 488D3500 		leaq	.LC25(%rip), %rsi
 5116      000000
 5117 061b BA070000 		movl	$7, %edx
 5117      00
 5118 0620 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5118      00
 5119              	.LVL488:
 5120              	.LBE4287:
 5121              	.LBE4286:
 5122              	.LBB4288:
 5123              	.LBB4289:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5124              		.loc 8 171 0
 5125 0625 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5125      000000
 5126 062c 4C89E6   		movq	%r12, %rsi
 5127 062f E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 5127      00
 5128              	.LVL489:
 5129              	.LBE4289:
 5130              	.LBE4288:
 5131              	.LBB4291:
 5132              	.LBB4292:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5133              		.loc 8 535 0
 5134 0634 488D3500 		leaq	.LC26(%rip), %rsi
 5134      000000
GAS LISTING /tmp/ccmMnd7l.s 			page 383


 5135 063b BA100000 		movl	$16, %edx
 5135      00
 5136 0640 4889C7   		movq	%rax, %rdi
 5137              	.LBE4292:
 5138              	.LBE4291:
 5139              	.LBB4294:
 5140              	.LBB4290:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5141              		.loc 8 171 0
 5142 0643 4889C3   		movq	%rax, %rbx
 5143              	.LVL490:
 5144              	.LBE4290:
 5145              	.LBE4294:
 5146              	.LBB4295:
 5147              	.LBB4293:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5148              		.loc 8 535 0
 5149 0646 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5149      00
 5150              	.LVL491:
 5151              	.LBE4293:
 5152              	.LBE4295:
 5153              	.LBB4296:
 5154              	.LBB4297:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5155              		.loc 8 171 0
 5156 064b 4889EE   		movq	%rbp, %rsi
 5157 064e 4889DF   		movq	%rbx, %rdi
 5158 0651 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 5158      00
 5159              	.LVL492:
 5160              	.LBE4297:
 5161              	.LBE4296:
 5162              	.LBB4299:
 5163              	.LBB4300:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5164              		.loc 8 535 0
 5165 0656 488D3500 		leaq	.LC27(%rip), %rsi
 5165      000000
 5166 065d BA160000 		movl	$22, %edx
 5166      00
 5167 0662 4889C7   		movq	%rax, %rdi
 5168              	.LBE4300:
 5169              	.LBE4299:
 5170              	.LBB4302:
 5171              	.LBB4298:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5172              		.loc 8 171 0
 5173 0665 4889C3   		movq	%rax, %rbx
 5174              	.LVL493:
 5175              	.LBE4298:
 5176              	.LBE4302:
 5177              	.LBB4303:
 5178              	.LBB4301:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5179              		.loc 8 535 0
 5180 0668 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
GAS LISTING /tmp/ccmMnd7l.s 			page 384


 5180      00
 5181              	.LVL494:
 5182              	.LBE4301:
 5183              	.LBE4303:
 5184              	.LBB4304:
 5185              	.LBB4305:
 5186              	.LBB4306:
 5187              		.loc 8 587 0
 5188 066d 4889DF   		movq	%rbx, %rdi
 5189 0670 E8000000 		call	_ZNSo5flushEv@PLT
 5189      00
 5190              	.LVL495:
 5191              	.LBE4306:
 5192              	.LBE4305:
 5193              	.LBE4304:
 5194              	.LBB4307:
 5195              	.LBB4308:
 5196              	.LBB4309:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5197              		.loc 2 55 0
 5198 0675 E8000000 		call	_Z10gimme_timev@PLT
 5198      00
 5199              	.LVL496:
 5200              	.LBB4310:
 5201              	.LBB4311:
 5202              	.LBB4312:
 5203              	.LBB4313:
 5204              	.LBB4314:
 5205              	.LBB4315:
 5206              	.LBB4316:
 5207              	.LBB4317:
 5208              	.LBB4318:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 5209              		.loc 14 104 0
 5210 067a BF280000 		movl	$40, %edi
 5210      00
 5211              	.LBE4318:
 5212              	.LBE4317:
 5213              	.LBE4316:
 5214              	.LBE4315:
 5215              	.LBE4314:
 5216              	.LBE4313:
 5217              	.LBE4312:
 5218              	.LBE4311:
 5219              	.LBE4310:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5220              		.loc 2 55 0
 5221 067f F20F1184 		movsd	%xmm0, 160(%rsp)
 5221      24A00000 
 5221      00
 5222              	.LVL497:
 5223              	.LBB4354:
 5224              	.LBB4330:
 5225              	.LBB4326:
 5226              	.LBB4327:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 5227              		.loc 6 91 0
GAS LISTING /tmp/ccmMnd7l.s 			page 385


 5228 0688 48C78424 		movq	$0, 168(%rsp)
 5228      A8000000 
 5228      00000000 
 5229 0694 48C78424 		movq	$0, 176(%rsp)
 5229      B0000000 
 5229      00000000 
 5230 06a0 48C78424 		movq	$0, 184(%rsp)
 5230      B8000000 
 5230      00000000 
 5231              	.LVL498:
 5232              	.LBE4327:
 5233              	.LBE4326:
 5234              	.LBB4328:
 5235              	.LBB4324:
 5236              	.LBB4323:
 5237              	.LBB4322:
 5238              	.LBB4321:
 5239              	.LBB4320:
 5240              	.LBB4319:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 5241              		.loc 14 104 0
 5242 06ac E8000000 		call	_Znwm@PLT
 5242      00
 5243              	.LEHE14:
 5244              	.LVL499:
 5245              	.LBE4319:
 5246              	.LBE4320:
 5247              	.LBE4321:
 5248              	.LBE4322:
 5249              	.LBE4323:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5250              		.loc 6 187 0
 5251 06b1 488D5028 		leaq	40(%rax), %rdx
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 5252              		.loc 6 185 0
 5253 06b5 48898424 		movq	%rax, 168(%rsp)
 5253      A8000000 
 5254              	.LBE4324:
 5255              	.LBE4328:
 5256              	.LBE4330:
 5257              	.LBB4331:
 5258              	.LBB4332:
 5259              	.LBB4333:
 5260              	.LBB4334:
 5261              	.LBB4335:
 5262              	.LBB4336:
 5263              	.LBB4337:
 5264              	.LBB4338:
 5265              	.LBB4339:
 5266              	.LBB4340:
 5267              	.LBB4341:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 5268              		.loc 20 762 0
 5269 06bd 48C74020 		movq	$0, 32(%rax)
 5269      00000000 
 5270              	.LBE4341:
 5271              	.LBE4340:
GAS LISTING /tmp/ccmMnd7l.s 			page 386


 5272              	.LBE4339:
 5273              	.LBE4338:
 5274              	.LBE4337:
 5275              	.LBE4336:
 5276              	.LBE4335:
 5277              	.LBE4334:
 5278              	.LBE4333:
 5279              	.LBE4332:
 5280              	.LBE4331:
 5281              	.LBB4352:
 5282              	.LBB4329:
 5283              	.LBB4325:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5284              		.loc 6 187 0
 5285 06c5 48899424 		movq	%rdx, 184(%rsp)
 5285      B8000000 
 5286              	.LVL500:
 5287              	.LBE4325:
 5288              	.LBE4329:
 5289              	.LBE4352:
 5290              	.LBB4353:
 5291              	.LBB4351:
 5292              	.LBB4350:
 5293              	.LBB4349:
 5294              	.LBB4348:
 5295              	.LBB4347:
 5296              	.LBB4346:
 5297              	.LBB4345:
 5298              	.LBB4344:
 5299              	.LBB4343:
 5300              	.LBB4342:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 5301              		.loc 20 762 0
 5302 06cd 48C70000 		movq	$0, (%rax)
 5302      000000
 5303              	.LVL501:
 5304 06d4 48C74008 		movq	$0, 8(%rax)
 5304      00000000 
 5305              	.LVL502:
 5306 06dc 48C74010 		movq	$0, 16(%rax)
 5306      00000000 
 5307              	.LVL503:
 5308 06e4 48C74018 		movq	$0, 24(%rax)
 5308      00000000 
 5309              	.LVL504:
 5310              	.LBE4342:
 5311              	.LBE4343:
 5312              	.LBE4344:
 5313              	.LBE4345:
 5314              	.LBE4346:
 5315              	.LBE4347:
 5316              	.LBE4348:
 5317              	.LBE4349:
 5318              	.LBE4350:
 5319              		.loc 6 1312 0
 5320 06ec 48899424 		movq	%rdx, 176(%rsp)
 5320      B0000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 387


 5321              	.LVL505:
 5322              	.LBE4351:
 5323              	.LBE4353:
 5324              	.LBE4354:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5325              		.loc 2 55 0
 5326 06f4 48898424 		movq	%rax, 192(%rsp)
 5326      C0000000 
 5327              	.LVL506:
 5328 06fc 0F1F4000 		.p2align 4,,10
 5329              		.p2align 3
 5330              	.L331:
 5331              	.LBE4309:
 5332              	.LBE4308:
 5333              	.LBE4307:
 5334              	.LBE4269:
 5335              	.LBE4268:
  62:benchs/weighted_unweighted.cpp ****         std::unique_ptr<heatmap_stamp_t> stamp(heatmap_stamp_gen(stampsize));
 5336              		.loc 22 62 0
 5337 0700 BD040000 		movl	$4, %ebp
 5337      00
 5338 0705 31DB     		xorl	%ebx, %ebx
 5339              	.LVL507:
 5340 0707 660F1F84 		.p2align 4,,10
 5340      00000000 
 5340      00
 5341              		.p2align 3
 5342              	.L332:
 5343 0710 488B4424 		movq	80(%rsp), %rax
 5343      50
 5344              	.LVL508:
 5345              	.LBB4619:
 5346              	.LBB4615:
 5347              	.LBB4575:
 5348              	.LBB4355:
  64:benchs/weighted_unweighted.cpp ****             std::cerr << "{'npoints': " << npoints << ", 'size': " << stampsize << ", 'weighted': t
  65:benchs/weighted_unweighted.cpp ****             std::cout << "Adding " << npoints << " points of size " << stampsize << " one after ano
  66:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
  67:benchs/weighted_unweighted.cpp ****                 for(size_t i = 0 ; i < npoints ; ++i) {
  68:benchs/weighted_unweighted.cpp ****                     heatmap_add_weighted_point_with_stamp(hm.get(), points[2*i], points[2*i+1], 1.0
 5349              		.loc 22 69 0
 5350 0715 4C89F1   		movq	%r14, %rcx
 5351 0718 4C89FF   		movq	%r15, %rdi
 5352 071b F30F1005 		movss	.LC31(%rip), %xmm0
 5352      00000000 
 5353 0723 8B1428   		movl	(%rax,%rbp), %edx
 5354 0726 8B34D8   		movl	(%rax,%rbx,8), %esi
 5355              	.LEHB15:
 5356 0729 E8000000 		call	heatmap_add_weighted_point_with_stamp@PLT
 5356      00
 5357              	.LVL509:
  68:benchs/weighted_unweighted.cpp ****                     heatmap_add_weighted_point_with_stamp(hm.get(), points[2*i], points[2*i+1], 1.0
 5358              		.loc 22 68 0 discriminator 2
 5359 072e 4883C301 		addq	$1, %rbx
 5360              	.LVL510:
 5361 0732 4883C508 		addq	$8, %rbp
 5362 0736 4C39E3   		cmpq	%r12, %rbx
GAS LISTING /tmp/ccmMnd7l.s 			page 388


 5363 0739 75D5     		jne	.L332
 5364              	.LVL511:
 5365              	.LBE4355:
 5366              	.LBB4356:
 5367              	.LBB4357:
 5368              	.LBB4358:
 5369              	.LBB4359:
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 5370              		.loc 11 757 0
 5371 073b 488B9C24 		movq	192(%rsp), %rbx
 5371      C0000000 
 5372              	.LVL512:
 5373 0743 488D4308 		leaq	8(%rbx), %rax
 5374 0747 48898424 		movq	%rax, 192(%rsp)
 5374      C0000000 
 5375              	.LBE4359:
 5376              	.LBE4358:
  57:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
 5377              		.loc 2 57 0
 5378 074f E8000000 		call	_Z10gimme_timev@PLT
 5378      00
 5379              	.LVL513:
 5380 0754 F20F5C84 		subsd	160(%rsp), %xmm0
 5380      24A00000 
 5380      00
 5381 075d F20F1103 		movsd	%xmm0, (%rbx)
 5382              	.LVL514:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 5383              		.loc 2 59 0
 5384 0761 E8000000 		call	_Z10gimme_timev@PLT
 5384      00
 5385              	.LEHE15:
 5386              	.LVL515:
 5387 0766 488BAC24 		movq	176(%rsp), %rbp
 5387      B0000000 
 5388              	.LBE4357:
 5389              	.LBE4356:
  67:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
 5390              		.loc 22 67 0
 5391 076e 483BAC24 		cmpq	192(%rsp), %rbp
 5391      C0000000 
 5392              	.LBB4361:
 5393              	.LBB4360:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 5394              		.loc 2 59 0
 5395 0776 F20F1184 		movsd	%xmm0, 160(%rsp)
 5395      24A00000 
 5395      00
 5396              	.LBE4360:
 5397              	.LBE4361:
  67:benchs/weighted_unweighted.cpp ****             for(RepeatTimer t(5) ; t ; t.next()) {
 5398              		.loc 22 67 0
 5399 077f 0F857BFF 		jne	.L331
 5399      FFFF
 5400 0785 488B8C24 		movq	168(%rsp), %rcx
 5400      A8000000 
 5401 078d 4889EB   		movq	%rbp, %rbx
GAS LISTING /tmp/ccmMnd7l.s 			page 389


 5402 0790 4829CB   		subq	%rcx, %rbx
 5403 0793 4889CE   		movq	%rcx, %rsi
 5404 0796 4889DA   		movq	%rbx, %rdx
 5405 0799 48C1FA03 		sarq	$3, %rdx
 5406 079d 4885D2   		testq	%rdx, %rdx
 5407 07a0 0F881507 		js	.L333
 5407      0000
 5408 07a6 660FEFC9 		pxor	%xmm1, %xmm1
 5409 07aa F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 5409      CA
 5410              	.L334:
 5411              	.LVL516:
 5412              	.LBB4362:
 5413              	.LBB4363:
 5414              	.LBB4364:
 5415              	.LBB4365:
 5416              	.LBB4366:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 5417              		.loc 19 126 0
 5418 07af 4839CD   		cmpq	%rcx, %rbp
 5419 07b2 0F84EB06 		je	.L335
 5419      0000
 5420 07b8 660FEFC0 		pxor	%xmm0, %xmm0
 5421 07bc 4889C8   		movq	%rcx, %rax
 5422              	.LVL517:
 5423              	.L336:
 5424              		.loc 19 127 0
 5425 07bf F20F5800 		addsd	(%rax), %xmm0
 5426              	.LVL518:
 5427 07c3 4883C008 		addq	$8, %rax
 5428              	.LVL519:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 5429              		.loc 19 126 0
 5430 07c7 4839C5   		cmpq	%rax, %rbp
 5431 07ca 75F3     		jne	.L336
 5432              	.LVL520:
 5433              	.LBE4366:
 5434              	.LBE4365:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 5435              		.loc 2 66 0
 5436 07cc F20F5EC1 		divsd	%xmm1, %xmm0
 5437              	.LVL521:
 5438              	.LBB4367:
 5439              	.LBB4368:
 5440              	.LBB4369:
 5441              	.LBB4370:
 5442              	.LBB4371:
 5443              		.loc 20 1015 0
 5444 07d0 480FBDD2 		bsrq	%rdx, %rdx
 5445 07d4 B83F0000 		movl	$63, %eax
 5445      00
 5446              	.LVL522:
 5447 07d9 4883F23F 		xorq	$63, %rdx
 5448              	.LBE4371:
 5449              	.LBE4370:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5450              		.loc 12 1967 0
GAS LISTING /tmp/ccmMnd7l.s 			page 390


 5451 07dd 4889CF   		movq	%rcx, %rdi
 5452 07e0 4889EE   		movq	%rbp, %rsi
 5453              	.LBB4374:
 5454              	.LBB4372:
 5455              		.loc 20 1015 0
 5456 07e3 4863D2   		movslq	%edx, %rdx
 5457              	.LBE4372:
 5458              	.LBE4374:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5459              		.loc 12 1967 0
 5460 07e6 48894C24 		movq	%rcx, 40(%rsp)
 5460      28
 5461              	.LBB4375:
 5462              	.LBB4373:
 5463              		.loc 20 1015 0
 5464 07eb 4829D0   		subq	%rdx, %rax
 5465 07ee 4889C2   		movq	%rax, %rdx
 5466              	.LBE4373:
 5467              	.LBE4375:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
 5468              		.loc 12 1969 0
 5469 07f1 4801D2   		addq	%rdx, %rdx
 5470              	.LBE4369:
 5471              	.LBE4368:
 5472              	.LBE4367:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 5473              		.loc 2 66 0
 5474 07f4 F20F1144 		movsd	%xmm0, 24(%rsp)
 5474      2418
 5475              	.LVL523:
 5476              	.LBB4472:
 5477              	.LBB4467:
 5478              	.LBB4462:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5479              		.loc 12 1967 0
 5480 07fa E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 5480      00
 5481              	.LVL524:
 5482              	.LBB4376:
 5483              	.LBB4377:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 5484              		.loc 12 1882 0
 5485 07ff 4881FB87 		cmpq	$135, %rbx
 5485      000000
 5486 0806 488B4C24 		movq	40(%rsp), %rcx
 5486      28
 5487 080b 0F8E8F05 		jle	.L337
 5487      0000
 5488              	.LVL525:
 5489 0811 4C8D9180 		leaq	128(%rcx), %r10
 5489      000000
 5490              	.LBB4378:
 5491              	.LBB4379:
 5492              	.LBB4380:
 5493              	.LBB4381:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 5494              		.loc 11 782 0
GAS LISTING /tmp/ccmMnd7l.s 			page 391


 5495 0818 488D5908 		leaq	8(%rcx), %rbx
 5496 081c 4D89D1   		movq	%r10, %r9
 5497              	.LVL526:
 5498              	.L338:
 5499              	.LBE4381:
 5500              	.LBE4380:
 5501              	.LBB4382:
 5502              	.LBB4383:
 5503              	.LBB4384:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 5504              		.loc 17 42 0
 5505 081f F20F100B 		movsd	(%rbx), %xmm1
 5506              	.LVL527:
 5507              	.LBE4384:
 5508              	.LBE4383:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 5509              		.loc 12 1846 0
 5510 0823 F20F1001 		movsd	(%rcx), %xmm0
 5511 0827 660F2EC1 		ucomisd	%xmm1, %xmm0
 5512 082b 0F87BF04 		ja	.L538
 5512      0000
 5513              	.LVL528:
 5514              	.LBB4385:
 5515              	.LBB4386:
 5516              	.LBB4387:
 5517              	.LBB4388:
 5518              		.loc 17 70 0
 5519 0831 F20F1043 		movsd	-8(%rbx), %xmm0
 5519      F8
 5520 0836 488D43F8 		leaq	-8(%rbx), %rax
 5521              	.LVL529:
 5522              	.LBE4388:
 5523              	.LBE4387:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5524              		.loc 12 1827 0
 5525 083a 660F2EC1 		ucomisd	%xmm1, %xmm0
 5526 083e 770B     		ja	.L476
 5527 0840 E9970600 		jmp	.L539
 5527      00
 5528              	.LVL530:
 5529              		.p2align 4,,10
 5530 0845 0F1F00   		.p2align 3
 5531              	.L398:
 5532 0848 4889D0   		movq	%rdx, %rax
 5533              	.LVL531:
 5534              	.L476:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 5535              		.loc 12 1829 0
 5536 084b F20F1140 		movsd	%xmm0, 8(%rax)
 5536      08
 5537              	.LVL532:
 5538              	.LBB4390:
 5539              	.LBB4391:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 5540              		.loc 11 763 0
 5541 0850 488D50F8 		leaq	-8(%rax), %rdx
 5542              	.LVL533:
GAS LISTING /tmp/ccmMnd7l.s 			page 392


 5543              	.LBE4391:
 5544              	.LBE4390:
 5545              	.LBB4392:
 5546              	.LBB4389:
 5547              		.loc 17 70 0
 5548 0854 F20F1040 		movsd	-8(%rax), %xmm0
 5548      F8
 5549              	.LBE4389:
 5550              	.LBE4392:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5551              		.loc 12 1827 0
 5552 0859 660F2EC1 		ucomisd	%xmm1, %xmm0
 5553 085d 77E9     		ja	.L398
 5554              	.LVL534:
 5555              	.L345:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 5556              		.loc 12 1833 0
 5557 085f F20F1108 		movsd	%xmm1, (%rax)
 5558              	.LVL535:
 5559              	.L344:
 5560 0863 4883C308 		addq	$8, %rbx
 5561              	.LVL536:
 5562              	.LBE4386:
 5563              	.LBE4385:
 5564              	.LBE4382:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 5565              		.loc 12 1844 0
 5566 0867 4C39D3   		cmpq	%r10, %rbx
 5567 086a 75B3     		jne	.L338
 5568              	.LVL537:
 5569              	.LBE4379:
 5570              	.LBE4378:
 5571              	.LBB4406:
 5572              	.LBB4407:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 5573              		.loc 12 1865 0
 5574 086c 4839DD   		cmpq	%rbx, %rbp
 5575 086f 7443     		je	.L519
 5576              	.L453:
 5577              	.LVL538:
 5578              	.LBB4408:
 5579              	.LBB4409:
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 5580              		.loc 12 1824 0
 5581 0871 F2410F10 		movsd	(%r9), %xmm1
 5581      09
 5582              	.LVL539:
 5583 0876 498D41F8 		leaq	-8(%r9), %rax
 5584              	.LVL540:
 5585              	.LBB4410:
 5586              	.LBB4411:
 5587              		.loc 17 70 0
 5588 087a F2410F10 		movsd	-8(%r9), %xmm0
 5588      41F8
 5589              	.LBE4411:
 5590              	.LBE4410:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
GAS LISTING /tmp/ccmMnd7l.s 			page 393


 5591              		.loc 12 1827 0
 5592 0880 660F2EC1 		ucomisd	%xmm1, %xmm0
 5593 0884 770D     		ja	.L477
 5594 0886 E9F50400 		jmp	.L540
 5594      00
 5595              	.LVL541:
 5596 088b 0F1F4400 		.p2align 4,,10
 5596      00
 5597              		.p2align 3
 5598              	.L400:
 5599 0890 4889D0   		movq	%rdx, %rax
 5600              	.LVL542:
 5601              	.L477:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 5602              		.loc 12 1829 0
 5603 0893 F20F1140 		movsd	%xmm0, 8(%rax)
 5603      08
 5604              	.LVL543:
 5605              	.LBB4413:
 5606              	.LBB4414:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 5607              		.loc 11 763 0
 5608 0898 488D50F8 		leaq	-8(%rax), %rdx
 5609              	.LVL544:
 5610              	.LBE4414:
 5611              	.LBE4413:
 5612              	.LBB4415:
 5613              	.LBB4412:
 5614              		.loc 17 70 0
 5615 089c F20F1040 		movsd	-8(%rax), %xmm0
 5615      F8
 5616              	.LBE4412:
 5617              	.LBE4415:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5618              		.loc 12 1827 0
 5619 08a1 660F2EC1 		ucomisd	%xmm1, %xmm0
 5620 08a5 77E9     		ja	.L400
 5621              	.LVL545:
 5622 08a7 4983C108 		addq	$8, %r9
 5623              	.LVL546:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 5624              		.loc 12 1833 0
 5625 08ab F20F1108 		movsd	%xmm1, (%rax)
 5626              	.LVL547:
 5627              	.LBE4409:
 5628              	.LBE4408:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 5629              		.loc 12 1865 0
 5630 08af 4C39CD   		cmpq	%r9, %rbp
 5631 08b2 75BD     		jne	.L453
 5632              	.LVL548:
 5633              	.L519:
 5634 08b4 488B9424 		movq	168(%rsp), %rdx
 5634      A8000000 
 5635 08bc 488BAC24 		movq	176(%rsp), %rbp
 5635      B0000000 
 5636              	.LVL549:
GAS LISTING /tmp/ccmMnd7l.s 			page 394


 5637 08c4 4889D6   		movq	%rdx, %rsi
 5638              	.LVL550:
 5639              	.L340:
 5640              	.LBE4407:
 5641              	.LBE4406:
 5642              	.LBE4377:
 5643              	.LBE4376:
 5644              	.LBE4462:
 5645              	.LBE4467:
 5646              	.LBE4472:
 5647              	.LBB4473:
 5648              	.LBB4474:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5649              		.loc 6 655 0
 5650 08c7 4889E8   		movq	%rbp, %rax
 5651              	.LBE4474:
 5652              	.LBE4473:
 5653              	.LBB4477:
 5654              	.LBB4478:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5655              		.loc 8 535 0
 5656 08ca 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5656      000000
 5657              	.LBE4478:
 5658              	.LBE4477:
 5659              	.LBB4482:
 5660              	.LBB4475:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5661              		.loc 6 655 0
 5662 08d1 4829F0   		subq	%rsi, %rax
 5663              	.LBE4475:
 5664              	.LBE4482:
 5665              	.LBB4483:
 5666              	.LBB4479:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5667              		.loc 8 535 0
 5668 08d4 488D3500 		leaq	.LC14(%rip), %rsi
 5668      000000
 5669              	.LVL551:
 5670              	.LBE4479:
 5671              	.LBE4483:
 5672              	.LBB4484:
 5673              	.LBB4476:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5674              		.loc 6 655 0
 5675 08db 48C1F803 		sarq	$3, %rax
 5676              	.LBE4476:
 5677              	.LBE4484:
  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 5678              		.loc 2 70 0
 5679 08df 48D1E8   		shrq	%rax
 5680 08e2 F20F101C 		movsd	(%rdx,%rax,8), %xmm3
 5680      C2
 5681              	.LBB4485:
 5682              	.LBB4480:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5683              		.loc 8 535 0
GAS LISTING /tmp/ccmMnd7l.s 			page 395


 5684 08e7 BA140000 		movl	$20, %edx
 5684      00
 5685              	.LBE4480:
 5686              	.LBE4485:
  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 5687              		.loc 2 70 0
 5688 08ec F20F115C 		movsd	%xmm3, 40(%rsp)
 5688      2428
 5689              	.LVL552:
 5690              	.LBB4486:
 5691              	.LBB4481:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5692              		.loc 8 535 0
 5693 08f2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5693      00
 5694              	.LVL553:
 5695              	.LBE4481:
 5696              	.LBE4486:
 5697              	.LBB4487:
 5698              	.LBB4488:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5699              		.loc 8 132 0
 5700 08f7 488B0500 		movq	_ZSt4cout@GOTPCREL(%rip), %rax
 5700      000000
 5701 08fe 488B1500 		movq	_ZSt4cout@GOTPCREL(%rip), %rdx
 5701      000000
 5702              	.LBE4488:
 5703              	.LBE4487:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5704              		.loc 2 71 0
 5705 0905 F20F1005 		movsd	.LC8(%rip), %xmm0
 5705      00000000 
 5706              	.LBB4501:
 5707              	.LBB4502:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5708              		.loc 8 221 0
 5709 090d 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5709      000000
 5710              	.LBE4502:
 5711              	.LBE4501:
 5712              	.LBB4505:
 5713              	.LBB4499:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5714              		.loc 8 132 0
 5715 0914 488B00   		movq	(%rax), %rax
 5716              	.LBE4499:
 5717              	.LBE4505:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5718              		.loc 2 71 0
 5719 0917 F20F5944 		mulsd	40(%rsp), %xmm0
 5719      2428
 5720              	.LBB4506:
 5721              	.LBB4500:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5722              		.loc 8 132 0
 5723 091d 480350E8 		addq	-24(%rax), %rdx
 5724              	.LVL554:
GAS LISTING /tmp/ccmMnd7l.s 			page 396


 5725              	.LBB4489:
 5726              	.LBB4490:
 5727              	.LBB4491:
 5728              	.LBB4492:
 5729              	.LBB4493:
 5730              	.LBB4494:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 5731              		.loc 21 76 0
 5732 0921 8B4218   		movl	24(%rdx), %eax
 5733 0924 25FBFEFF 		andl	$-261, %eax
 5733      FF
 5734              	.LVL555:
 5735              	.LBE4494:
 5736              	.LBE4493:
 5737              	.LBE4492:
 5738              	.LBB4495:
 5739              	.LBB4496:
 5740              	.LBB4497:
 5741              	.LBB4498:
 5742              		.loc 21 80 0
 5743 0929 83C804   		orl	$4, %eax
 5744              	.LVL556:
 5745 092c 894218   		movl	%eax, 24(%rdx)
 5746              	.LVL557:
 5747              	.LBE4498:
 5748              	.LBE4497:
 5749              	.LBE4496:
 5750              	.LBE4495:
 5751              	.LBE4491:
 5752              	.LBE4490:
 5753              	.LBE4489:
 5754              	.LBE4500:
 5755              	.LBE4506:
 5756              	.LBB4507:
 5757              	.LBB4503:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5758              		.loc 8 221 0
 5759 092f E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5759      00
 5760              	.LVL558:
 5761              	.LBE4503:
 5762              	.LBE4507:
 5763              	.LBB4508:
 5764              	.LBB4509:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5765              		.loc 8 535 0
 5766 0934 488D3500 		leaq	.LC15(%rip), %rsi
 5766      000000
 5767 093b BA0B0000 		movl	$11, %edx
 5767      00
 5768 0940 4889C7   		movq	%rax, %rdi
 5769              	.LBE4509:
 5770              	.LBE4508:
 5771              	.LBB4511:
 5772              	.LBB4504:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5773              		.loc 8 221 0
GAS LISTING /tmp/ccmMnd7l.s 			page 397


 5774 0943 4889C3   		movq	%rax, %rbx
 5775              	.LVL559:
 5776              	.LBE4504:
 5777              	.LBE4511:
 5778              	.LBB4512:
 5779              	.LBB4510:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5780              		.loc 8 535 0
 5781 0946 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5781      00
 5782              	.LVL560:
 5783              	.LBE4510:
 5784              	.LBE4512:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5785              		.loc 2 71 0
 5786 094b F20F1005 		movsd	.LC8(%rip), %xmm0
 5786      00000000 
 5787              	.LVL561:
 5788              	.LBB4513:
 5789              	.LBB4514:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5790              		.loc 8 221 0
 5791 0953 4889DF   		movq	%rbx, %rdi
 5792              	.LBE4514:
 5793              	.LBE4513:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5794              		.loc 2 71 0
 5795 0956 F20F5944 		mulsd	24(%rsp), %xmm0
 5795      2418
 5796              	.LVL562:
 5797              	.LBB4517:
 5798              	.LBB4515:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5799              		.loc 8 221 0
 5800 095c E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5800      00
 5801              	.LVL563:
 5802              	.LBE4515:
 5803              	.LBE4517:
 5804              	.LBB4518:
 5805              	.LBB4519:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5806              		.loc 8 535 0
 5807 0961 488D3500 		leaq	.LC16(%rip), %rsi
 5807      000000
 5808              	.LBE4519:
 5809              	.LBE4518:
 5810              	.LBB4521:
 5811              	.LBB4516:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5812              		.loc 8 221 0
 5813 0968 4889C3   		movq	%rax, %rbx
 5814              	.LVL564:
 5815              	.LBE4516:
 5816              	.LBE4521:
 5817              	.LBB4522:
 5818              	.LBB4520:
GAS LISTING /tmp/ccmMnd7l.s 			page 398


 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5819              		.loc 8 535 0
 5820 096b BA010000 		movl	$1, %edx
 5820      00
 5821 0970 4889C7   		movq	%rax, %rdi
 5822 0973 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5822      00
 5823              	.LVL565:
 5824              	.LBE4520:
 5825              	.LBE4522:
 5826              	.LBB4523:
 5827              	.LBB4524:
 5828              	.LBB4525:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 5829              		.loc 8 565 0
 5830 0978 488B03   		movq	(%rbx), %rax
 5831              	.LBB4526:
 5832              	.LBB4527:
 5833              		.loc 13 444 0
 5834 097b 488B40E8 		movq	-24(%rax), %rax
 5835 097f 488BAC03 		movq	240(%rbx,%rax), %rbp
 5835      F0000000 
 5836              	.LVL566:
 5837              	.LBB4528:
 5838              	.LBB4529:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 5839              		.loc 13 48 0
 5840 0987 4885ED   		testq	%rbp, %rbp
 5841 098a 0F840903 		je	.L361
 5841      0000
 5842              	.LVL567:
 5843              	.LBE4529:
 5844              	.LBE4528:
 5845              	.LBB4530:
 5846              	.LBB4531:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 5847              		.loc 1 867 0
 5848 0990 807D3800 		cmpb	$0, 56(%rbp)
 5849 0994 0F84AE03 		je	.L362
 5849      0000
 5850 099a 0FBE7543 		movsbl	67(%rbp), %esi
 5851              	.LVL568:
 5852              	.L363:
 5853              	.LBE4531:
 5854              	.LBE4530:
 5855              	.LBE4527:
 5856              	.LBE4526:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 5857              		.loc 8 565 0
 5858 099e 4889DF   		movq	%rbx, %rdi
 5859 09a1 E8000000 		call	_ZNSo3putEc@PLT
 5859      00
 5860              	.LVL569:
 5861              	.LBB4537:
 5862              	.LBB4538:
 5863              		.loc 8 587 0
 5864 09a6 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccmMnd7l.s 			page 399


 5865 09a9 E8000000 		call	_ZNSo5flushEv@PLT
 5865      00
 5866              	.LVL570:
 5867              	.LBE4538:
 5868              	.LBE4537:
 5869              	.LBE4525:
 5870              	.LBE4524:
 5871              	.LBE4523:
 5872              	.LBB4542:
 5873              	.LBB4543:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5874              		.loc 8 535 0
 5875 09ae 488D3500 		leaq	.LC17(%rip), %rsi
 5875      000000
 5876 09b5 BA080000 		movl	$8, %edx
 5876      00
 5877 09ba 4C89EF   		movq	%r13, %rdi
 5878 09bd E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5878      00
 5879              	.LVL571:
 5880              	.LBE4543:
 5881              	.LBE4542:
 5882              	.LBB4544:
 5883              	.LBB4545:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5884              		.loc 8 221 0
 5885 09c2 F20F1044 		movsd	40(%rsp), %xmm0
 5885      2428
 5886 09c8 4C89EF   		movq	%r13, %rdi
 5887 09cb E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5887      00
 5888              	.LVL572:
 5889              	.LBE4545:
 5890              	.LBE4544:
 5891              	.LBB4547:
 5892              	.LBB4548:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5893              		.loc 8 535 0
 5894 09d0 488D3500 		leaq	.LC18(%rip), %rsi
 5894      000000
 5895 09d7 BA0A0000 		movl	$10, %edx
 5895      00
 5896 09dc 4889C7   		movq	%rax, %rdi
 5897              	.LBE4548:
 5898              	.LBE4547:
 5899              	.LBB4550:
 5900              	.LBB4546:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5901              		.loc 8 221 0
 5902 09df 4889C3   		movq	%rax, %rbx
 5903              	.LVL573:
 5904              	.LBE4546:
 5905              	.LBE4550:
 5906              	.LBB4551:
 5907              	.LBB4549:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5908              		.loc 8 535 0
GAS LISTING /tmp/ccmMnd7l.s 			page 400


 5909 09e2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5909      00
 5910              	.LVL574:
 5911              	.LBE4549:
 5912              	.LBE4551:
 5913              	.LBB4552:
 5914              	.LBB4553:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5915              		.loc 8 221 0
 5916 09e7 F20F1044 		movsd	24(%rsp), %xmm0
 5916      2418
 5917 09ed 4889DF   		movq	%rbx, %rdi
 5918 09f0 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5918      00
 5919              	.LVL575:
 5920              	.LBE4553:
 5921              	.LBE4552:
 5922              	.LBB4554:
 5923              	.LBB4555:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5924              		.loc 8 535 0
 5925 09f5 488D3500 		leaq	.LC19(%rip), %rsi
 5925      000000
 5926 09fc 4889C7   		movq	%rax, %rdi
 5927 09ff BA010000 		movl	$1, %edx
 5927      00
 5928 0a04 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5928      00
 5929              	.LVL576:
 5930              	.LBE4555:
 5931              	.LBE4554:
 5932              	.LBE4364:
 5933              	.LBB4561:
 5934              	.LBB4562:
 5935              	.LBB4563:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 5936              		.loc 6 161 0
 5937 0a09 488BBC24 		movq	168(%rsp), %rdi
 5937      A8000000 
 5938              	.LVL577:
 5939              	.LBB4564:
 5940              	.LBB4565:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 5941              		.loc 6 177 0
 5942 0a11 4885FF   		testq	%rdi, %rdi
 5943 0a14 7405     		je	.L364
 5944              	.LVL578:
 5945              	.LBB4566:
 5946              	.LBB4567:
 5947              	.LBB4568:
 5948              		.loc 14 110 0
 5949 0a16 E8000000 		call	_ZdlPv@PLT
 5949      00
 5950              	.LVL579:
 5951              	.L364:
 5952              	.LBE4568:
 5953              	.LBE4567:
GAS LISTING /tmp/ccmMnd7l.s 			page 401


 5954              	.LBE4566:
 5955              	.LBE4565:
 5956              	.LBE4564:
 5957              	.LBE4563:
 5958              	.LBE4562:
 5959              	.LBE4561:
 5960              	.LBE4363:
 5961              	.LBE4362:
 5962              	.LBE4575:
  69:benchs/weighted_unweighted.cpp ****                 }
  70:benchs/weighted_unweighted.cpp ****             }
  71:benchs/weighted_unweighted.cpp ****             if(npoints < NPOINTS_MAX || stampsize < STAMP_MAX)
 5963              		.loc 22 72 0
 5964 0a1b 4981FC3F 		cmpq	$999999, %r12
 5964      420F00
 5965 0a22 0F862704 		jbe	.L365
 5965      0000
 5966 0a28 48817C24 		cmpq	$511, 8(%rsp)
 5966      08FF0100 
 5966      00
 5967 0a31 0F861804 		jbe	.L365
 5967      0000
 5968              	.LVL580:
 5969              	.L371:
  72:benchs/weighted_unweighted.cpp ****                 std::cerr << "," << std::endl;
  73:benchs/weighted_unweighted.cpp **** 
  74:benchs/weighted_unweighted.cpp ****             ret += hm->buf[0] > 0.0f;
 5970              		.loc 22 75 0
 5971 0a37 498B07   		movq	(%r15), %rax
 5972 0a3a 660FEFFF 		pxor	%xmm7, %xmm7
 5973              	.LBE4615:
  63:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 5974              		.loc 22 63 0
 5975 0a3e 4F8D24A4 		leaq	(%r12,%r12,4), %r12
 5976              	.LVL581:
 5977              	.LBB4616:
 5978              	.LBB4576:
 5979              	.LBB4577:
 5980              	.LBB4578:
 5981              	.LBB4579:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 5982              		.loc 5 41 0
 5983 0a42 4C89FF   		movq	%r15, %rdi
 5984              	.LBE4579:
 5985              	.LBE4578:
 5986              	.LBE4577:
 5987              	.LBE4576:
 5988              		.loc 22 75 0
 5989 0a45 F30F1000 		movss	(%rax), %xmm0
 5990 0a49 31C0     		xorl	%eax, %eax
 5991 0a4b 0F2EC7   		ucomiss	%xmm7, %xmm0
 5992 0a4e 0F97C0   		seta	%al
 5993              	.LBE4616:
  63:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 5994              		.loc 22 63 0
 5995 0a51 4D01E4   		addq	%r12, %r12
 5996              	.LBB4617:
GAS LISTING /tmp/ccmMnd7l.s 			page 402


 5997              		.loc 22 75 0
 5998 0a54 01442414 		addl	%eax, 20(%rsp)
 5999              	.LVL582:
 6000              	.LBB4583:
 6001              	.LBB4582:
 6002              	.LBB4581:
 6003              	.LBB4580:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 6004              		.loc 5 41 0
 6005 0a58 E8000000 		call	heatmap_free@PLT
 6005      00
 6006              	.LVL583:
 6007              	.LBE4580:
 6008              	.LBE4581:
 6009              	.LBE4582:
 6010              	.LBE4583:
 6011              	.LBE4617:
  63:benchs/weighted_unweighted.cpp ****         for(size_t npoints = NPOINTS_MIN ; npoints <= NPOINTS_MAX ; npoints *= 10) {
 6012              		.loc 22 63 0
 6013 0a5d 836C2434 		subl	$1, 52(%rsp)
 6013      01
 6014 0a62 0F8539FB 		jne	.L366
 6014      FFFF
 6015              	.LVL584:
 6016              	.LBE4619:
 6017              	.LBB4620:
 6018              	.LBB4621:
 6019              		.loc 23 235 0
 6020 0a68 4D85F6   		testq	%r14, %r14
 6021 0a6b 7408     		je	.L372
 6022              	.LVL585:
 6023              	.LBB4622:
 6024              	.LBB4623:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
 6025              		.loc 5 45 0
 6026 0a6d 4C89F7   		movq	%r14, %rdi
 6027 0a70 E8000000 		call	heatmap_stamp_free@PLT
 6027      00
 6028              	.LVL586:
 6029              	.L372:
 6030              	.LBE4623:
 6031              	.LBE4622:
 6032              	.LBE4621:
 6033              	.LBE4620:
 6034              	.LBE4267:
  61:benchs/weighted_unweighted.cpp ****     for(size_t stampsize = STAMP_MIN ; stampsize <= STAMP_MAX ; stampsize *= 2) {
 6035              		.loc 22 61 0
 6036 0a75 48D16424 		salq	8(%rsp)
 6036      08
 6037              	.LVL587:
 6038 0a7a 836C2430 		subl	$1, 48(%rsp)
 6038      01
 6039 0a7f 0F8502FB 		jne	.L373
 6039      FFFF
 6040              	.LVL588:
 6041              	.LBE4266:
 6042              	.LBB4630:
GAS LISTING /tmp/ccmMnd7l.s 			page 403


 6043              	.LBB4631:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 6044              		.loc 8 113 0
 6045 0a85 4C89EF   		movq	%r13, %rdi
 6046              	.LEHB16:
 6047 0a88 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6047      00
 6048              	.LVL589:
 6049              	.LBE4631:
 6050              	.LBE4630:
  75:benchs/weighted_unweighted.cpp ****         }
  76:benchs/weighted_unweighted.cpp ****     }
  77:benchs/weighted_unweighted.cpp ****     std::cerr << std::endl << "]" << std::endl;
 6051              		.loc 22 78 0
 6052 0a8d 488D3500 		leaq	.LC32(%rip), %rsi
 6052      000000
 6053 0a94 4889C7   		movq	%rax, %rdi
 6054 0a97 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6054      00
 6055              	.LVL590:
 6056              	.LBB4632:
 6057              	.LBB4633:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 6058              		.loc 8 113 0
 6059 0a9c 4889C7   		movq	%rax, %rdi
 6060 0a9f E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6060      00
 6061              	.LEHE16:
 6062              	.LVL591:
 6063              	.LBE4633:
 6064              	.LBE4632:
 6065              	.LBB4634:
 6066              	.LBB4635:
 6067              	.LBB4636:
 6068              	.LBB4637:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6069              		.loc 6 161 0
 6070 0aa4 488B7C24 		movq	80(%rsp), %rdi
 6070      50
 6071              	.LVL592:
 6072              	.LBB4638:
 6073              	.LBB4639:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 6074              		.loc 6 177 0
 6075 0aa9 4885FF   		testq	%rdi, %rdi
 6076 0aac 7405     		je	.L437
 6077              	.LVL593:
 6078              	.LBB4640:
 6079              	.LBB4641:
 6080              	.LBB4642:
 6081              		.loc 14 110 0
 6082 0aae E8000000 		call	_ZdlPv@PLT
 6082      00
 6083              	.LVL594:
 6084              	.L437:
 6085              	.LBE4642:
 6086              	.LBE4641:
GAS LISTING /tmp/ccmMnd7l.s 			page 404


 6087              	.LBE4640:
 6088              	.LBE4639:
 6089              	.LBE4638:
 6090              	.LBE4637:
 6091              	.LBE4636:
 6092              	.LBE4635:
 6093              	.LBE4634:
 6094              	.LBE4655:
  78:benchs/weighted_unweighted.cpp **** 
  79:benchs/weighted_unweighted.cpp ****     return ret;
  80:benchs/weighted_unweighted.cpp **** }
 6095              		.loc 22 81 0
 6096 0ab3 8B442414 		movl	20(%rsp), %eax
 6097 0ab7 4881C4D8 		addq	$216, %rsp
 6097      000000
 6098              		.cfi_remember_state
 6099              		.cfi_def_cfa_offset 56
 6100 0abe 5B       		popq	%rbx
 6101              		.cfi_def_cfa_offset 48
 6102 0abf 5D       		popq	%rbp
 6103              		.cfi_def_cfa_offset 40
 6104              	.LVL595:
 6105 0ac0 415C     		popq	%r12
 6106              		.cfi_def_cfa_offset 32
 6107 0ac2 415D     		popq	%r13
 6108              		.cfi_def_cfa_offset 24
 6109 0ac4 415E     		popq	%r14
 6110              		.cfi_def_cfa_offset 16
 6111 0ac6 415F     		popq	%r15
 6112              		.cfi_def_cfa_offset 8
 6113              	.LVL596:
 6114 0ac8 C3       		ret
 6115              	.LVL597:
 6116 0ac9 0F1F8000 		.p2align 4,,10
 6116      000000
 6117              		.p2align 3
 6118              	.L534:
 6119              		.cfi_restore_state
 6120              	.LBB4656:
 6121              	.LBB4643:
 6122              	.LBB4265:
 6123              	.LBB4260:
 6124              	.LBB4254:
 6125              	.LBB4242:
 6126              	.LBB4204:
 6127              	.LBB4202:
 6128              	.LBB4200:
 6129              	.LBB4186:
 6130              	.LBB4097:
 6131              	.LBB4093:
 6132              	.LBB4089:
 6133              	.LBB4086:
 6134              	.LBB4053:
 6135              	.LBB4036:
 6136              	.LBB4034:
 6137              	.LBB4026:
 6138              	.LBB4027:
GAS LISTING /tmp/ccmMnd7l.s 			page 405


 6139              	.LBB4028:
 6140              	.LBB4029:
 6141              	.LBB4030:
 6142              	.LBB4031:
 6143              	.LBB4032:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6144              		.loc 20 576 0
 6145 0ad0 4C89C2   		movq	%r8, %rdx
 6146 0ad3 4829DA   		subq	%rbx, %rdx
 6147              	.LVL598:
 6148 0ad6 4889D0   		movq	%rdx, %rax
 6149 0ad9 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6150              		.loc 20 577 0
 6151 0add 4885C0   		testq	%rax, %rax
 6152 0ae0 743D     		je	.L303
 6153 0ae2 BF080000 		movl	$8, %edi
 6153      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6154              		.loc 20 578 0
 6155 0ae7 4889DE   		movq	%rbx, %rsi
 6156 0aea 4C895424 		movq	%r10, 72(%rsp)
 6156      48
 6157 0aef 4829D7   		subq	%rdx, %rdi
 6158 0af2 48894C24 		movq	%rcx, 64(%rsp)
 6158      40
 6159 0af7 F20F114C 		movsd	%xmm1, 56(%rsp)
 6159      2438
 6160 0afd 4C01C7   		addq	%r8, %rdi
 6161 0b00 4C894424 		movq	%r8, 40(%rsp)
 6161      28
 6162 0b05 E8000000 		call	memmove@PLT
 6162      00
 6163              	.LVL599:
 6164 0b0a 4C8B5424 		movq	72(%rsp), %r10
 6164      48
 6165 0b0f 488B4C24 		movq	64(%rsp), %rcx
 6165      40
 6166 0b14 4C8B4424 		movq	40(%rsp), %r8
 6166      28
 6167 0b19 F20F104C 		movsd	56(%rsp), %xmm1
 6167      2438
 6168              	.LVL600:
 6169              	.L303:
 6170              	.LBE4032:
 6171              	.LBE4031:
 6172              	.LBE4030:
 6173              	.LBE4029:
 6174              	.LBE4028:
 6175              	.LBE4027:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6176              		.loc 12 1851 0
 6177 0b1f F20F110B 		movsd	%xmm1, (%rbx)
 6178 0b23 E903F8FF 		jmp	.L304
 6178      FF
 6179              	.LVL601:
 6180              	.L322:
GAS LISTING /tmp/ccmMnd7l.s 			page 406


 6181              	.LBE4026:
 6182              	.LBE4034:
 6183              	.LBE4036:
 6184              	.LBE4053:
 6185              	.LBE4086:
 6186              	.LBE4089:
 6187              	.LBE4093:
 6188              	.LBE4097:
 6189              	.LBE4186:
 6190              	.LBB4187:
 6191              	.LBB4170:
 6192              	.LBB4168:
 6193              	.LBB4166:
 6194              	.LBB4162:
 6195              	.LBB4160:
 6196              	.LBB4159:
 6197              	.LBB4157:
 6198              	.LBB4158:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6199              		.loc 1 869 0
 6200 0b28 4889EF   		movq	%rbp, %rdi
 6201 0b2b E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6201      00
 6202              	.LVL602:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6203              		.loc 1 870 0
 6204 0b30 488B4500 		movq	0(%rbp), %rax
 6205 0b34 BE0A0000 		movl	$10, %esi
 6205      00
 6206 0b39 488B4030 		movq	48(%rax), %rax
 6207 0b3d 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6207      000000
 6208 0b44 0F8419F9 		je	.L323
 6208      FFFF
 6209 0b4a 4889EF   		movq	%rbp, %rdi
 6210 0b4d FFD0     		call	*%rax
 6211              	.LVL603:
 6212 0b4f 0FBEF0   		movsbl	%al, %esi
 6213 0b52 E90CF9FF 		jmp	.L323
 6213      FF
 6214              	.LVL604:
 6215              	.L536:
 6216              	.LBE4158:
 6217              	.LBE4157:
 6218              	.LBE4159:
 6219              	.LBE4160:
 6220              	.LBE4162:
 6221              	.LBE4166:
 6222              	.LBE4168:
 6223              	.LBE4170:
 6224              	.LBE4187:
 6225              	.LBB4188:
 6226              	.LBB4098:
 6227              	.LBB4094:
 6228              	.LBB4090:
 6229              	.LBB4087:
 6230              	.LBB4054:
GAS LISTING /tmp/ccmMnd7l.s 			page 407


 6231              	.LBB4052:
 6232              	.LBB4050:
 6233              	.LBB4048:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6234              		.loc 12 1827 0
 6235 0b57 4889C8   		movq	%rcx, %rax
 6236              	.LVL605:
 6237 0b5a 4883C108 		addq	$8, %rcx
 6238              	.LVL606:
 6239              	.LBE4048:
 6240              	.LBE4050:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6241              		.loc 12 1865 0
 6242 0b5e 4839CD   		cmpq	%rcx, %rbp
 6243              	.LBB4051:
 6244              	.LBB4049:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6245              		.loc 12 1833 0
 6246 0b61 F20F1108 		movsd	%xmm1, (%rax)
 6247              	.LVL607:
 6248              	.LBE4049:
 6249              	.LBE4051:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6250              		.loc 12 1865 0
 6251 0b65 0F85CEF7 		jne	.L455
 6251      FFFF
 6252 0b6b E90CF8FF 		jmp	.L518
 6252      FF
 6253              	.LVL608:
 6254              		.p2align 4,,10
 6255              		.p2align 3
 6256              	.L533:
 6257              	.LBE4052:
 6258              	.LBE4054:
 6259              	.LBB4055:
 6260              	.LBB4056:
 6261              	.LBB4057:
 6262              	.LBB4058:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 6263              		.loc 11 782 0
 6264 0b70 488D4B08 		leaq	8(%rbx), %rcx
 6265              	.LVL609:
 6266              	.LBE4058:
 6267              	.LBE4057:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6268              		.loc 12 1844 0
 6269 0b74 4839CD   		cmpq	%rcx, %rbp
 6270 0b77 0F84FFF7 		je	.L518
 6270      FFFF
 6271              	.LVL610:
 6272              	.LBB4059:
 6273              	.LBB4060:
 6274              	.LBB4061:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6275              		.loc 17 42 0
 6276 0b7d F20F1009 		movsd	(%rcx), %xmm1
 6277              	.LVL611:
GAS LISTING /tmp/ccmMnd7l.s 			page 408


 6278              	.LBE4061:
 6279              	.LBE4060:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6280              		.loc 12 1846 0
 6281 0b81 F20F1003 		movsd	(%rbx), %xmm0
 6282 0b85 660F2EC1 		ucomisd	%xmm1, %xmm0
 6283 0b89 774B     		ja	.L541
 6284              	.L499:
 6285              	.LVL612:
 6286              	.LBB4063:
 6287              	.LBB4064:
 6288              	.LBB4065:
 6289              	.LBB4066:
 6290              		.loc 17 70 0
 6291 0b8b F20F1041 		movsd	-8(%rcx), %xmm0
 6291      F8
 6292 0b90 488D41F8 		leaq	-8(%rcx), %rax
 6293              	.LVL613:
 6294              	.LBE4066:
 6295              	.LBE4065:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6296              		.loc 12 1827 0
 6297 0b94 660F2EC1 		ucomisd	%xmm1, %xmm0
 6298 0b98 7709     		ja	.L475
 6299 0b9a E9A60000 		jmp	.L542
 6299      00
 6300              	.LVL614:
 6301 0b9f 90       		.p2align 4,,10
 6302              		.p2align 3
 6303              	.L394:
 6304 0ba0 4889D0   		movq	%rdx, %rax
 6305              	.LVL615:
 6306              	.L475:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 6307              		.loc 12 1829 0
 6308 0ba3 F20F1140 		movsd	%xmm0, 8(%rax)
 6308      08
 6309              	.LVL616:
 6310              	.LBB4068:
 6311              	.LBB4069:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 6312              		.loc 11 763 0
 6313 0ba8 488D50F8 		leaq	-8(%rax), %rdx
 6314              	.LVL617:
 6315              	.LBE4069:
 6316              	.LBE4068:
 6317              	.LBB4070:
 6318              	.LBB4067:
 6319              		.loc 17 70 0
 6320 0bac F20F1040 		movsd	-8(%rax), %xmm0
 6320      F8
 6321              	.LBE4067:
 6322              	.LBE4070:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6323              		.loc 12 1827 0
 6324 0bb1 660F2EC1 		ucomisd	%xmm1, %xmm0
 6325 0bb5 77E9     		ja	.L394
GAS LISTING /tmp/ccmMnd7l.s 			page 409


 6326              	.LVL618:
 6327              	.L317:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6328              		.loc 12 1833 0
 6329 0bb7 F20F1108 		movsd	%xmm1, (%rax)
 6330              	.LVL619:
 6331              	.L316:
 6332 0bbb 4883C108 		addq	$8, %rcx
 6333              	.LVL620:
 6334              	.LBE4064:
 6335              	.LBE4063:
 6336              	.LBE4059:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6337              		.loc 12 1844 0
 6338 0bbf 4839CD   		cmpq	%rcx, %rbp
 6339 0bc2 0F84B4F7 		je	.L518
 6339      FFFF
 6340              	.LVL621:
 6341              	.LBB4081:
 6342              	.LBB4072:
 6343              	.LBB4062:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6344              		.loc 17 42 0
 6345 0bc8 F20F1009 		movsd	(%rcx), %xmm1
 6346              	.LBE4062:
 6347              	.LBE4072:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6348              		.loc 12 1846 0
 6349 0bcc F20F1003 		movsd	(%rbx), %xmm0
 6350 0bd0 660F2EC1 		ucomisd	%xmm1, %xmm0
 6351 0bd4 76B5     		jbe	.L499
 6352              	.LVL622:
 6353              	.L541:
 6354              	.LBB4073:
 6355              	.LBB4074:
 6356              	.LBB4075:
 6357              	.LBB4076:
 6358              	.LBB4077:
 6359              	.LBB4078:
 6360              	.LBB4079:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6361              		.loc 20 576 0
 6362 0bd6 4889CA   		movq	%rcx, %rdx
 6363 0bd9 4829DA   		subq	%rbx, %rdx
 6364              	.LVL623:
 6365 0bdc 4889D0   		movq	%rdx, %rax
 6366 0bdf 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6367              		.loc 20 577 0
 6368 0be3 4885C0   		testq	%rax, %rax
 6369 0be6 7429     		je	.L315
 6370 0be8 BF080000 		movl	$8, %edi
 6370      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6371              		.loc 20 578 0
 6372 0bed 4889DE   		movq	%rbx, %rsi
 6373 0bf0 F20F114C 		movsd	%xmm1, 56(%rsp)
GAS LISTING /tmp/ccmMnd7l.s 			page 410


 6373      2438
 6374 0bf6 4829D7   		subq	%rdx, %rdi
 6375 0bf9 48894C24 		movq	%rcx, 40(%rsp)
 6375      28
 6376 0bfe 4801CF   		addq	%rcx, %rdi
 6377 0c01 E8000000 		call	memmove@PLT
 6377      00
 6378              	.LVL624:
 6379 0c06 488B4C24 		movq	40(%rsp), %rcx
 6379      28
 6380 0c0b F20F104C 		movsd	56(%rsp), %xmm1
 6380      2438
 6381              	.LVL625:
 6382              	.L315:
 6383              	.LBE4079:
 6384              	.LBE4078:
 6385              	.LBE4077:
 6386              	.LBE4076:
 6387              	.LBE4075:
 6388              	.LBE4074:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6389              		.loc 12 1851 0
 6390 0c11 F20F110B 		movsd	%xmm1, (%rbx)
 6391 0c15 EBA4     		jmp	.L316
 6392              	.LVL626:
 6393              	.L326:
 6394              	.LBE4073:
 6395              	.LBE4081:
 6396              	.LBE4056:
 6397              	.LBE4055:
 6398              	.LBE4087:
 6399              	.LBE4090:
 6400              	.LBE4094:
 6401              	.LBE4098:
 6402              	.LBE4188:
 6403              	.LBE4200:
 6404              	.LBE4202:
 6405              	.LBE4204:
 6406              	.LBE4242:
 6407              	.LBB4243:
 6408              	.LBB4232:
 6409              	.LBB4230:
 6410              	.LBB4228:
 6411              	.LBB4224:
 6412              	.LBB4222:
 6413              	.LBB4221:
 6414              	.LBB4219:
 6415              	.LBB4220:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6416              		.loc 1 869 0
 6417 0c17 4889DF   		movq	%rbx, %rdi
 6418              	.LEHB17:
 6419 0c1a E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6419      00
 6420              	.LVL627:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6421              		.loc 1 870 0
GAS LISTING /tmp/ccmMnd7l.s 			page 411


 6422 0c1f 488B03   		movq	(%rbx), %rax
 6423 0c22 BE0A0000 		movl	$10, %esi
 6423      00
 6424 0c27 488B4030 		movq	48(%rax), %rax
 6425 0c2b 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6425      000000
 6426 0c32 0F84E0F8 		je	.L327
 6426      FFFF
 6427 0c38 4889DF   		movq	%rbx, %rdi
 6428 0c3b FFD0     		call	*%rax
 6429              	.LEHE17:
 6430              	.LVL628:
 6431 0c3d 0FBEF0   		movsbl	%al, %esi
 6432 0c40 E9D3F8FF 		jmp	.L327
 6432      FF
 6433              	.LVL629:
 6434              	.L542:
 6435              	.LBE4220:
 6436              	.LBE4219:
 6437              	.LBE4221:
 6438              	.LBE4222:
 6439              	.LBE4224:
 6440              	.LBE4228:
 6441              	.LBE4230:
 6442              	.LBE4232:
 6443              	.LBE4243:
 6444              	.LBB4244:
 6445              	.LBB4205:
 6446              	.LBB4203:
 6447              	.LBB4201:
 6448              	.LBB4189:
 6449              	.LBB4099:
 6450              	.LBB4095:
 6451              	.LBB4091:
 6452              	.LBB4088:
 6453              	.LBB4084:
 6454              	.LBB4083:
 6455              	.LBB4082:
 6456              	.LBB4080:
 6457              	.LBB4071:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6458              		.loc 12 1827 0
 6459 0c45 4889C8   		movq	%rcx, %rax
 6460              	.LVL630:
 6461 0c48 E96AFFFF 		jmp	.L317
 6461      FF
 6462              	.LVL631:
 6463              	.L535:
 6464              	.LBE4071:
 6465              	.LBE4080:
 6466              	.LBE4082:
 6467              	.LBE4083:
 6468              	.LBE4084:
 6469              	.LBB4085:
 6470              	.LBB4037:
 6471              	.LBB4035:
 6472              	.LBB4033:
GAS LISTING /tmp/ccmMnd7l.s 			page 412


 6473              	.LBB4025:
 6474 0c4d 4C89C0   		movq	%r8, %rax
 6475              	.LVL632:
 6476 0c50 E9D2F6FF 		jmp	.L305
 6476      FF
 6477              	.LVL633:
 6478              	.L293:
 6479 0c55 4889D0   		movq	%rdx, %rax
 6480 0c58 4889D6   		movq	%rdx, %rsi
 6481 0c5b 660FEFC9 		pxor	%xmm1, %xmm1
 6482 0c5f 48D1E8   		shrq	%rax
 6483 0c62 83E601   		andl	$1, %esi
 6484 0c65 4809F0   		orq	%rsi, %rax
 6485              	.LBE4025:
 6486              	.LBE4033:
 6487              	.LBE4035:
 6488              	.LBE4037:
 6489              	.LBE4085:
 6490              	.LBE4088:
 6491              	.LBE4091:
 6492              	.LBE4095:
 6493              	.LBE4099:
 6494              	.LBE4189:
 6495              	.LBB4190:
 6496              	.LBB4000:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 6497              		.loc 19 126 0
 6498 0c68 4839DD   		cmpq	%rbx, %rbp
 6499 0c6b F2480F2A 		cvtsi2sdq	%rax, %xmm1
 6499      C8
 6500 0c70 F20F58C9 		addsd	%xmm1, %xmm1
 6501              	.LVL634:
 6502 0c74 0F85F9F5 		jne	.L543
 6502      FFFF
 6503              	.LVL635:
 6504              	.L295:
 6505              	.LBE4000:
 6506              	.LBE4190:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 6507              		.loc 2 66 0
 6508 0c7a 660FEFE4 		pxor	%xmm4, %xmm4
 6509 0c7e 48C74424 		movq	$0, 32(%rsp)
 6509      20000000 
 6509      00
 6510 0c87 4889EA   		movq	%rbp, %rdx
 6511 0c8a F20F5EE1 		divsd	%xmm1, %xmm4
 6512 0c8e F20F1164 		movsd	%xmm4, 8(%rsp)
 6512      2408
 6513              	.LVL636:
 6514 0c94 E9F3F6FF 		jmp	.L300
 6514      FF
 6515              	.LVL637:
 6516              	.L361:
 6517              	.LBB4191:
 6518              	.LBB4171:
 6519              	.LBB4169:
 6520              	.LBB4167:
GAS LISTING /tmp/ccmMnd7l.s 			page 413


 6521              	.LBB4163:
 6522              	.LBB4161:
 6523              	.LBB4154:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 6524              		.loc 13 49 0
 6525 0c99 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 6525      00
 6526              	.LVL638:
 6527              	.L537:
 6528              	.LEHB18:
 6529              	.LBE4154:
 6530              	.LBE4161:
 6531              	.LBE4163:
 6532              	.LBE4167:
 6533              	.LBE4169:
 6534              	.LBE4171:
 6535              	.LBE4191:
 6536              	.LBE4201:
 6537              	.LBE4203:
 6538              	.LBE4205:
 6539              	.LBE4244:
 6540              	.LBB4245:
 6541              	.LBB4233:
 6542              	.LBB4231:
 6543              	.LBB4229:
 6544              	.LBB4225:
 6545              	.LBB4223:
 6546              	.LBB4216:
 6547 0c9e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 6547      00
 6548              	.LEHE18:
 6549              	.LVL639:
 6550              	.L408:
 6551              	.LBE4216:
 6552              	.LBE4223:
 6553              	.LBE4225:
 6554              	.LBE4229:
 6555              	.LBE4231:
 6556              	.LBE4233:
 6557              	.LBE4245:
 6558              	.LBB4246:
  54:benchs/weighted_unweighted.cpp ****             }
 6559              		.loc 22 54 0
 6560 0ca3 488D7C24 		leaq	112(%rsp), %rdi
 6560      70
 6561              	.LVL640:
 6562 0ca8 4889C3   		movq	%rax, %rbx
 6563 0cab E8000000 		call	_ZN11RepeatTimerD1Ev@PLT
 6563      00
 6564              	.LVL641:
 6565              	.L376:
 6566              	.LBE4246:
 6567              	.LBB4247:
 6568              	.LBB4248:
 6569              		.loc 23 235 0
 6570 0cb0 4D85FF   		testq	%r15, %r15
 6571 0cb3 7408     		je	.L378
GAS LISTING /tmp/ccmMnd7l.s 			page 414


 6572              	.LVL642:
 6573              	.LBB4249:
 6574              	.LBB4250:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 6575              		.loc 5 41 0
 6576 0cb5 4C89FF   		movq	%r15, %rdi
 6577 0cb8 E8000000 		call	heatmap_free@PLT
 6577      00
 6578              	.LVL643:
 6579              	.L378:
 6580              	.LBE4250:
 6581              	.LBE4249:
 6582              	.LBE4248:
 6583              	.LBE4247:
 6584              	.LBE4254:
 6585              	.LBE4260:
 6586              	.LBB4261:
 6587              	.LBB4262:
 6588              		.loc 23 235 0
 6589 0cbd 4D85F6   		testq	%r14, %r14
 6590 0cc0 7408     		je	.L380
 6591              	.LVL644:
 6592              	.LBB4263:
 6593              	.LBB4264:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
 6594              		.loc 5 45 0
 6595 0cc2 4C89F7   		movq	%r14, %rdi
 6596 0cc5 E8000000 		call	heatmap_stamp_free@PLT
 6596      00
 6597              	.LVL645:
 6598              	.L380:
 6599              	.LBE4264:
 6600              	.LBE4263:
 6601              	.LBE4262:
 6602              	.LBE4261:
 6603              	.LBE4265:
 6604              	.LBE4643:
 6605              	.LBB4644:
 6606              	.LBB4645:
 6607              	.LBB4646:
 6608              	.LBB4647:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6609              		.loc 6 161 0
 6610 0cca 488B7C24 		movq	80(%rsp), %rdi
 6610      50
 6611              	.LVL646:
 6612              	.LBB4648:
 6613              	.LBB4649:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 6614              		.loc 6 177 0
 6615 0ccf 4885FF   		testq	%rdi, %rdi
 6616 0cd2 7405     		je	.L386
 6617              	.LVL647:
 6618              	.LBB4650:
 6619              	.LBB4651:
 6620              	.LBB4652:
 6621              		.loc 14 110 0
GAS LISTING /tmp/ccmMnd7l.s 			page 415


 6622 0cd4 E8000000 		call	_ZdlPv@PLT
 6622      00
 6623              	.LVL648:
 6624              	.L386:
 6625 0cd9 4889DF   		movq	%rbx, %rdi
 6626              	.LEHB19:
 6627 0cdc E8000000 		call	_Unwind_Resume@PLT
 6627      00
 6628              	.LEHE19:
 6629              	.LVL649:
 6630              	.L406:
 6631 0ce1 4889C3   		movq	%rax, %rbx
 6632 0ce4 EBD7     		jmp	.L378
 6633              	.LVL650:
 6634              	.L405:
 6635 0ce6 4889C3   		movq	%rax, %rbx
 6636 0ce9 EBDF     		jmp	.L380
 6637              	.LVL651:
 6638              	.L407:
 6639 0ceb 4889C3   		movq	%rax, %rbx
 6640 0cee EBC0     		jmp	.L376
 6641              	.LVL652:
 6642              		.p2align 4,,10
 6643              		.p2align 3
 6644              	.L538:
 6645              	.LBE4652:
 6646              	.LBE4651:
 6647              	.LBE4650:
 6648              	.LBE4649:
 6649              	.LBE4648:
 6650              	.LBE4647:
 6651              	.LBE4646:
 6652              	.LBE4645:
 6653              	.LBE4644:
 6654              	.LBB4653:
 6655              	.LBB4629:
 6656              	.LBB4624:
 6657              	.LBB4618:
 6658              	.LBB4584:
 6659              	.LBB4573:
 6660              	.LBB4571:
 6661              	.LBB4569:
 6662              	.LBB4556:
 6663              	.LBB4468:
 6664              	.LBB4463:
 6665              	.LBB4458:
 6666              	.LBB4454:
 6667              	.LBB4421:
 6668              	.LBB4404:
 6669              	.LBB4402:
 6670              	.LBB4394:
 6671              	.LBB4395:
 6672              	.LBB4396:
 6673              	.LBB4397:
 6674              	.LBB4398:
 6675              	.LBB4399:
 6676              	.LBB4400:
GAS LISTING /tmp/ccmMnd7l.s 			page 416


 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6677              		.loc 20 576 0
 6678 0cf0 4889DA   		movq	%rbx, %rdx
 6679 0cf3 4829CA   		subq	%rcx, %rdx
 6680              	.LVL653:
 6681 0cf6 4889D0   		movq	%rdx, %rax
 6682 0cf9 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6683              		.loc 20 577 0
 6684 0cfd 4885C0   		testq	%rax, %rax
 6685 0d00 743D     		je	.L343
 6686 0d02 BF080000 		movl	$8, %edi
 6686      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6687              		.loc 20 578 0
 6688 0d07 4889CE   		movq	%rcx, %rsi
 6689 0d0a 4C895424 		movq	%r10, 72(%rsp)
 6689      48
 6690 0d0f 4829D7   		subq	%rdx, %rdi
 6691 0d12 4C894C24 		movq	%r9, 64(%rsp)
 6691      40
 6692 0d17 F20F114C 		movsd	%xmm1, 56(%rsp)
 6692      2438
 6693 0d1d 4801DF   		addq	%rbx, %rdi
 6694 0d20 48894C24 		movq	%rcx, 40(%rsp)
 6694      28
 6695 0d25 E8000000 		call	memmove@PLT
 6695      00
 6696              	.LVL654:
 6697 0d2a 4C8B5424 		movq	72(%rsp), %r10
 6697      48
 6698 0d2f 4C8B4C24 		movq	64(%rsp), %r9
 6698      40
 6699 0d34 488B4C24 		movq	40(%rsp), %rcx
 6699      28
 6700 0d39 F20F104C 		movsd	56(%rsp), %xmm1
 6700      2438
 6701              	.LVL655:
 6702              	.L343:
 6703              	.LBE4400:
 6704              	.LBE4399:
 6705              	.LBE4398:
 6706              	.LBE4397:
 6707              	.LBE4396:
 6708              	.LBE4395:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6709              		.loc 12 1851 0
 6710 0d3f F20F1109 		movsd	%xmm1, (%rcx)
 6711 0d43 E91BFBFF 		jmp	.L344
 6711      FF
 6712              	.LVL656:
 6713              	.L362:
 6714              	.LBE4394:
 6715              	.LBE4402:
 6716              	.LBE4404:
 6717              	.LBE4421:
 6718              	.LBE4454:
GAS LISTING /tmp/ccmMnd7l.s 			page 417


 6719              	.LBE4458:
 6720              	.LBE4463:
 6721              	.LBE4468:
 6722              	.LBE4556:
 6723              	.LBB4557:
 6724              	.LBB4541:
 6725              	.LBB4540:
 6726              	.LBB4539:
 6727              	.LBB4536:
 6728              	.LBB4535:
 6729              	.LBB4534:
 6730              	.LBB4532:
 6731              	.LBB4533:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6732              		.loc 1 869 0
 6733 0d48 4889EF   		movq	%rbp, %rdi
 6734 0d4b E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6734      00
 6735              	.LVL657:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6736              		.loc 1 870 0
 6737 0d50 488B4500 		movq	0(%rbp), %rax
 6738 0d54 BE0A0000 		movl	$10, %esi
 6738      00
 6739 0d59 488B4030 		movq	48(%rax), %rax
 6740 0d5d 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6740      000000
 6741 0d64 0F8434FC 		je	.L363
 6741      FFFF
 6742 0d6a 4889EF   		movq	%rbp, %rdi
 6743 0d6d FFD0     		call	*%rax
 6744              	.LVL658:
 6745 0d6f 0FBEF0   		movsbl	%al, %esi
 6746 0d72 E927FCFF 		jmp	.L363
 6746      FF
 6747              	.LVL659:
 6748 0d77 660F1F84 		.p2align 4,,10
 6748      00000000 
 6748      00
 6749              		.p2align 3
 6750              	.L540:
 6751              	.LBE4533:
 6752              	.LBE4532:
 6753              	.LBE4534:
 6754              	.LBE4535:
 6755              	.LBE4536:
 6756              	.LBE4539:
 6757              	.LBE4540:
 6758              	.LBE4541:
 6759              	.LBE4557:
 6760              	.LBB4558:
 6761              	.LBB4469:
 6762              	.LBB4464:
 6763              	.LBB4459:
 6764              	.LBB4455:
 6765              	.LBB4422:
 6766              	.LBB4420:
GAS LISTING /tmp/ccmMnd7l.s 			page 418


 6767              	.LBB4418:
 6768              	.LBB4416:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6769              		.loc 12 1827 0
 6770 0d80 4C89C8   		movq	%r9, %rax
 6771              	.LVL660:
 6772 0d83 4983C108 		addq	$8, %r9
 6773              	.LVL661:
 6774              	.LBE4416:
 6775              	.LBE4418:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6776              		.loc 12 1865 0
 6777 0d87 4C39CD   		cmpq	%r9, %rbp
 6778              	.LBB4419:
 6779              	.LBB4417:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6780              		.loc 12 1833 0
 6781 0d8a F20F1108 		movsd	%xmm1, (%rax)
 6782              	.LVL662:
 6783              	.LBE4417:
 6784              	.LBE4419:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6785              		.loc 12 1865 0
 6786 0d8e 0F85DDFA 		jne	.L453
 6786      FFFF
 6787 0d94 E91BFBFF 		jmp	.L519
 6787      FF
 6788              	.LVL663:
 6789 0d99 0F1F8000 		.p2align 4,,10
 6789      000000
 6790              		.p2align 3
 6791              	.L337:
 6792              	.LBE4420:
 6793              	.LBE4422:
 6794              	.LBB4423:
 6795              	.LBB4424:
 6796              	.LBB4425:
 6797              	.LBB4426:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 6798              		.loc 11 782 0
 6799 0da0 4C8D4108 		leaq	8(%rcx), %r8
 6800              	.LVL664:
 6801              	.LBE4426:
 6802              	.LBE4425:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6803              		.loc 12 1844 0
 6804 0da4 4C39C5   		cmpq	%r8, %rbp
 6805 0da7 4C89C3   		movq	%r8, %rbx
 6806 0daa 0F8404FB 		je	.L519
 6806      FFFF
 6807              	.LVL665:
 6808              	.LBB4427:
 6809              	.LBB4428:
 6810              	.LBB4429:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6811              		.loc 17 42 0
 6812 0db0 F20F100B 		movsd	(%rbx), %xmm1
GAS LISTING /tmp/ccmMnd7l.s 			page 419


 6813              	.LVL666:
 6814              	.LBE4429:
 6815              	.LBE4428:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6816              		.loc 12 1846 0
 6817 0db4 F20F1001 		movsd	(%rcx), %xmm0
 6818 0db8 660F2EC1 		ucomisd	%xmm1, %xmm0
 6819 0dbc 7750     		ja	.L544
 6820              	.LVL667:
 6821              	.L505:
 6822              	.LBB4431:
 6823              	.LBB4432:
 6824              	.LBB4433:
 6825              	.LBB4434:
 6826              		.loc 17 70 0
 6827 0dbe F20F1043 		movsd	-8(%rbx), %xmm0
 6827      F8
 6828 0dc3 488D43F8 		leaq	-8(%rbx), %rax
 6829              	.LVL668:
 6830              	.LBE4434:
 6831              	.LBE4433:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6832              		.loc 12 1827 0
 6833 0dc7 660F2EC1 		ucomisd	%xmm1, %xmm0
 6834 0dcb 770E     		ja	.L478
 6835 0dcd E9C90000 		jmp	.L545
 6835      00
 6836              	.LVL669:
 6837              		.p2align 4,,10
 6838 0dd2 660F1F44 		.p2align 3
 6838      0000
 6839              	.L402:
 6840 0dd8 4889D0   		movq	%rdx, %rax
 6841              	.LVL670:
 6842              	.L478:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 6843              		.loc 12 1829 0
 6844 0ddb F20F1140 		movsd	%xmm0, 8(%rax)
 6844      08
 6845              	.LVL671:
 6846              	.LBB4436:
 6847              	.LBB4437:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 6848              		.loc 11 763 0
 6849 0de0 488D50F8 		leaq	-8(%rax), %rdx
 6850              	.LVL672:
 6851              	.LBE4437:
 6852              	.LBE4436:
 6853              	.LBB4438:
 6854              	.LBB4435:
 6855              		.loc 17 70 0
 6856 0de4 F20F1040 		movsd	-8(%rax), %xmm0
 6856      F8
 6857              	.LBE4435:
 6858              	.LBE4438:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6859              		.loc 12 1827 0
GAS LISTING /tmp/ccmMnd7l.s 			page 420


 6860 0de9 660F2EC1 		ucomisd	%xmm1, %xmm0
 6861 0ded 77E9     		ja	.L402
 6862              	.LVL673:
 6863              	.L357:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6864              		.loc 12 1833 0
 6865 0def F20F1108 		movsd	%xmm1, (%rax)
 6866              	.LVL674:
 6867              	.L356:
 6868 0df3 4883C308 		addq	$8, %rbx
 6869              	.LVL675:
 6870              	.LBE4432:
 6871              	.LBE4431:
 6872              	.LBE4427:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6873              		.loc 12 1844 0
 6874 0df7 4839DD   		cmpq	%rbx, %rbp
 6875 0dfa 0F84B4FA 		je	.L519
 6875      FFFF
 6876              	.LVL676:
 6877              	.LBB4449:
 6878              	.LBB4440:
 6879              	.LBB4430:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6880              		.loc 17 42 0
 6881 0e00 F20F100B 		movsd	(%rbx), %xmm1
 6882              	.LBE4430:
 6883              	.LBE4440:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6884              		.loc 12 1846 0
 6885 0e04 F20F1001 		movsd	(%rcx), %xmm0
 6886 0e08 660F2EC1 		ucomisd	%xmm1, %xmm0
 6887 0e0c 76B0     		jbe	.L505
 6888              	.LVL677:
 6889              	.L544:
 6890              	.LBB4441:
 6891              	.LBB4442:
 6892              	.LBB4443:
 6893              	.LBB4444:
 6894              	.LBB4445:
 6895              	.LBB4446:
 6896              	.LBB4447:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6897              		.loc 20 576 0
 6898 0e0e 4889DA   		movq	%rbx, %rdx
 6899 0e11 4829CA   		subq	%rcx, %rdx
 6900              	.LVL678:
 6901 0e14 4889D0   		movq	%rdx, %rax
 6902 0e17 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6903              		.loc 20 577 0
 6904 0e1b 4885C0   		testq	%rax, %rax
 6905 0e1e 7429     		je	.L355
 6906 0e20 BF080000 		movl	$8, %edi
 6906      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6907              		.loc 20 578 0
GAS LISTING /tmp/ccmMnd7l.s 			page 421


 6908 0e25 4889CE   		movq	%rcx, %rsi
 6909 0e28 F20F114C 		movsd	%xmm1, 56(%rsp)
 6909      2438
 6910 0e2e 4829D7   		subq	%rdx, %rdi
 6911 0e31 48894C24 		movq	%rcx, 40(%rsp)
 6911      28
 6912 0e36 4801DF   		addq	%rbx, %rdi
 6913 0e39 E8000000 		call	memmove@PLT
 6913      00
 6914              	.LVL679:
 6915 0e3e 488B4C24 		movq	40(%rsp), %rcx
 6915      28
 6916 0e43 F20F104C 		movsd	56(%rsp), %xmm1
 6916      2438
 6917              	.LVL680:
 6918              	.L355:
 6919              	.LBE4447:
 6920              	.LBE4446:
 6921              	.LBE4445:
 6922              	.LBE4444:
 6923              	.LBE4443:
 6924              	.LBE4442:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6925              		.loc 12 1851 0
 6926 0e49 F20F1109 		movsd	%xmm1, (%rcx)
 6927 0e4d EBA4     		jmp	.L356
 6928              	.LVL681:
 6929              	.L365:
 6930              	.LBE4441:
 6931              	.LBE4449:
 6932              	.LBE4424:
 6933              	.LBE4423:
 6934              	.LBE4455:
 6935              	.LBE4459:
 6936              	.LBE4464:
 6937              	.LBE4469:
 6938              	.LBE4558:
 6939              	.LBE4569:
 6940              	.LBE4571:
 6941              	.LBE4573:
 6942              	.LBE4584:
 6943              	.LBB4585:
 6944              	.LBB4586:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 6945              		.loc 8 535 0
 6946 0e4f 488D3500 		leaq	.LC28(%rip), %rsi
 6946      000000
 6947 0e56 BA010000 		movl	$1, %edx
 6947      00
 6948 0e5b 4C89EF   		movq	%r13, %rdi
 6949              	.LEHB20:
 6950 0e5e E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6950      00
 6951              	.LVL682:
 6952              	.LBE4586:
 6953              	.LBE4585:
 6954              	.LBB4587:
GAS LISTING /tmp/ccmMnd7l.s 			page 422


 6955              	.LBB4588:
 6956              	.LBB4589:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 6957              		.loc 8 565 0
 6958 0e63 498B4500 		movq	0(%r13), %rax
 6959              	.LBB4590:
 6960              	.LBB4591:
 6961              		.loc 13 444 0
 6962 0e67 488B40E8 		movq	-24(%rax), %rax
 6963 0e6b 4A8B9C28 		movq	240(%rax,%r13), %rbx
 6963      F0000000 
 6964              	.LVL683:
 6965              	.LBB4592:
 6966              	.LBB4593:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 6967              		.loc 13 48 0
 6968 0e73 4885DB   		testq	%rbx, %rbx
 6969 0e76 0F849200 		je	.L546
 6969      0000
 6970              	.LVL684:
 6971              	.LBE4593:
 6972              	.LBE4592:
 6973              	.LBB4595:
 6974              	.LBB4596:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 6975              		.loc 1 867 0
 6976 0e7c 807B3800 		cmpb	$0, 56(%rbx)
 6977 0e80 7462     		je	.L369
 6978 0e82 0FBE7343 		movsbl	67(%rbx), %esi
 6979              	.LVL685:
 6980              	.L370:
 6981              	.LBE4596:
 6982              	.LBE4595:
 6983              	.LBE4591:
 6984              	.LBE4590:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 6985              		.loc 8 565 0
 6986 0e86 4C89EF   		movq	%r13, %rdi
 6987 0e89 E8000000 		call	_ZNSo3putEc@PLT
 6987      00
 6988              	.LVL686:
 6989              	.LBB4603:
 6990              	.LBB4604:
 6991              		.loc 8 587 0
 6992 0e8e 4889C7   		movq	%rax, %rdi
 6993 0e91 E8000000 		call	_ZNSo5flushEv@PLT
 6993      00
 6994              	.LVL687:
 6995 0e96 E99CFBFF 		jmp	.L371
 6995      FF
 6996              	.LVL688:
 6997              	.L545:
 6998              	.LBE4604:
 6999              	.LBE4603:
 7000              	.LBE4589:
 7001              	.LBE4588:
 7002              	.LBE4587:
GAS LISTING /tmp/ccmMnd7l.s 			page 423


 7003              	.LBB4608:
 7004              	.LBB4574:
 7005              	.LBB4572:
 7006              	.LBB4570:
 7007              	.LBB4559:
 7008              	.LBB4470:
 7009              	.LBB4465:
 7010              	.LBB4460:
 7011              	.LBB4456:
 7012              	.LBB4452:
 7013              	.LBB4451:
 7014              	.LBB4450:
 7015              	.LBB4448:
 7016              	.LBB4439:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 7017              		.loc 12 1827 0
 7018 0e9b 4889D8   		movq	%rbx, %rax
 7019              	.LVL689:
 7020 0e9e E94CFFFF 		jmp	.L357
 7020      FF
 7021              	.LVL690:
 7022              	.L335:
 7023              	.LBE4439:
 7024              	.LBE4448:
 7025              	.LBE4450:
 7026              	.LBE4451:
 7027              	.LBE4452:
 7028              	.LBE4456:
 7029              	.LBE4460:
 7030              	.LBE4465:
 7031              	.LBE4470:
 7032              	.LBE4559:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 7033              		.loc 2 66 0
 7034 0ea3 F20F106C 		movsd	32(%rsp), %xmm5
 7034      2420
 7035 0ea9 4889EA   		movq	%rbp, %rdx
 7036 0eac F20F5EE9 		divsd	%xmm1, %xmm5
 7037 0eb0 F20F116C 		movsd	%xmm5, 24(%rsp)
 7037      2418
 7038              	.LVL691:
 7039 0eb6 E90CFAFF 		jmp	.L340
 7039      FF
 7040              	.LVL692:
 7041              	.L333:
 7042 0ebb 4889D0   		movq	%rdx, %rax
 7043 0ebe 4889D7   		movq	%rdx, %rdi
 7044 0ec1 660FEFC9 		pxor	%xmm1, %xmm1
 7045 0ec5 48D1E8   		shrq	%rax
 7046 0ec8 83E701   		andl	$1, %edi
 7047 0ecb 4809F8   		orq	%rdi, %rax
 7048 0ece F2480F2A 		cvtsi2sdq	%rax, %xmm1
 7048      C8
 7049 0ed3 F20F58C9 		addsd	%xmm1, %xmm1
 7050 0ed7 E9D3F8FF 		jmp	.L334
 7050      FF
 7051              	.LVL693:
GAS LISTING /tmp/ccmMnd7l.s 			page 424


 7052              	.L539:
 7053              	.LBB4560:
 7054              	.LBB4471:
 7055              	.LBB4466:
 7056              	.LBB4461:
 7057              	.LBB4457:
 7058              	.LBB4453:
 7059              	.LBB4405:
 7060              	.LBB4403:
 7061              	.LBB4401:
 7062              	.LBB4393:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 7063              		.loc 12 1827 0
 7064 0edc 4889D8   		movq	%rbx, %rax
 7065              	.LVL694:
 7066 0edf E97BF9FF 		jmp	.L345
 7066      FF
 7067              	.LVL695:
 7068              	.L369:
 7069              	.LBE4393:
 7070              	.LBE4401:
 7071              	.LBE4403:
 7072              	.LBE4405:
 7073              	.LBE4453:
 7074              	.LBE4457:
 7075              	.LBE4461:
 7076              	.LBE4466:
 7077              	.LBE4471:
 7078              	.LBE4560:
 7079              	.LBE4570:
 7080              	.LBE4572:
 7081              	.LBE4574:
 7082              	.LBE4608:
 7083              	.LBB4609:
 7084              	.LBB4607:
 7085              	.LBB4606:
 7086              	.LBB4605:
 7087              	.LBB4602:
 7088              	.LBB4600:
 7089              	.LBB4599:
 7090              	.LBB4597:
 7091              	.LBB4598:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 7092              		.loc 1 869 0
 7093 0ee4 4889DF   		movq	%rbx, %rdi
 7094 0ee7 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 7094      00
 7095              	.LVL696:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 7096              		.loc 1 870 0
 7097 0eec 488B03   		movq	(%rbx), %rax
 7098 0eef BE0A0000 		movl	$10, %esi
 7098      00
 7099 0ef4 488B4030 		movq	48(%rax), %rax
 7100 0ef8 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 7100      000000
 7101 0eff 7485     		je	.L370
GAS LISTING /tmp/ccmMnd7l.s 			page 425


 7102 0f01 4889DF   		movq	%rbx, %rdi
 7103 0f04 FFD0     		call	*%rax
 7104              	.LVL697:
 7105 0f06 0FBEF0   		movsbl	%al, %esi
 7106 0f09 E978FFFF 		jmp	.L370
 7106      FF
 7107              	.LVL698:
 7108              	.L546:
 7109              	.LBE4598:
 7110              	.LBE4597:
 7111              	.LBE4599:
 7112              	.LBE4600:
 7113              	.LBB4601:
 7114              	.LBB4594:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 7115              		.loc 13 49 0
 7116 0f0e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 7116      00
 7117              	.LEHE20:
 7118              	.LVL699:
 7119              	.L411:
 7120              	.LBE4594:
 7121              	.LBE4601:
 7122              	.LBE4602:
 7123              	.LBE4605:
 7124              	.LBE4606:
 7125              	.LBE4607:
 7126              	.LBE4609:
 7127              	.LBB4610:
  71:benchs/weighted_unweighted.cpp ****             }
 7128              		.loc 22 71 0
 7129 0f13 488DBC24 		leaq	160(%rsp), %rdi
 7129      A0000000 
 7130              	.LVL700:
 7131 0f1b 4889C3   		movq	%rax, %rbx
 7132 0f1e E8000000 		call	_ZN11RepeatTimerD1Ev@PLT
 7132      00
 7133              	.LVL701:
 7134              	.L382:
 7135              	.LBE4610:
 7136              	.LBB4611:
 7137              	.LBB4612:
 7138              		.loc 23 235 0
 7139 0f23 4D85FF   		testq	%r15, %r15
 7140 0f26 7408     		je	.L384
 7141              	.LVL702:
 7142              	.LBB4613:
 7143              	.LBB4614:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 7144              		.loc 5 41 0
 7145 0f28 4C89FF   		movq	%r15, %rdi
 7146 0f2b E8000000 		call	heatmap_free@PLT
 7146      00
 7147              	.LVL703:
 7148              	.L384:
 7149              	.LBE4614:
 7150              	.LBE4613:
GAS LISTING /tmp/ccmMnd7l.s 			page 426


 7151              	.LBE4612:
 7152              	.LBE4611:
 7153              	.LBE4618:
 7154              	.LBE4624:
 7155              	.LBB4625:
 7156              	.LBB4626:
 7157              		.loc 23 235 0
 7158 0f30 4D85F6   		testq	%r14, %r14
 7159 0f33 0F8491FD 		je	.L380
 7159      FFFF
 7160              	.LVL704:
 7161              	.LBB4627:
 7162              	.LBB4628:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
 7163              		.loc 5 45 0
 7164 0f39 4C89F7   		movq	%r14, %rdi
 7165 0f3c E8000000 		call	heatmap_stamp_free@PLT
 7165      00
 7166              	.LVL705:
 7167 0f41 E984FDFF 		jmp	.L380
 7167      FF
 7168              	.LVL706:
 7169              	.L410:
 7170 0f46 4889C3   		movq	%rax, %rbx
 7171 0f49 EBD8     		jmp	.L382
 7172              	.LVL707:
 7173              	.L409:
 7174 0f4b 4889C3   		movq	%rax, %rbx
 7175 0f4e EBE0     		jmp	.L384
 7176              	.LBE4628:
 7177              	.LBE4627:
 7178              	.LBE4626:
 7179              	.LBE4625:
 7180              	.LBE4629:
 7181              	.LBE4653:
 7182              	.LBE4656:
 7183              		.cfi_endproc
 7184              	.LFE6051:
 7185              		.section	.gcc_except_table,"a",@progbits
 7186              	.LLSDA6051:
 7187 0000 FF       		.byte	0xff
 7188 0001 FF       		.byte	0xff
 7189 0002 01       		.byte	0x1
 7190 0003 59       		.uleb128 .LLSDACSE6051-.LLSDACSB6051
 7191              	.LLSDACSB6051:
 7192 0004 20       		.uleb128 .LEHB6-.LFB6051
 7193 0005 05       		.uleb128 .LEHE6-.LEHB6
 7194 0006 00       		.uleb128 0
 7195 0007 00       		.uleb128 0
 7196 0008 3B       		.uleb128 .LEHB7-.LFB6051
 7197 0009 2F       		.uleb128 .LEHE7-.LEHB7
 7198 000a E619     		.uleb128 .L405-.LFB6051
 7199 000c 00       		.uleb128 0
 7200 000d 8501     		.uleb128 .LEHB8-.LFB6051
 7201 000f 05       		.uleb128 .LEHE8-.LEHB8
 7202 0010 E119     		.uleb128 .L406-.LFB6051
 7203 0012 00       		.uleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 427


 7204 0013 9C01     		.uleb128 .LEHB9-.LFB6051
 7205 0015 E901     		.uleb128 .LEHE9-.LEHB9
 7206 0017 EB19     		.uleb128 .L407-.LFB6051
 7207 0019 00       		.uleb128 0
 7208 001a F103     		.uleb128 .LEHB10-.LFB6051
 7209 001c 3A       		.uleb128 .LEHE10-.LEHB10
 7210 001d A319     		.uleb128 .L408-.LFB6051
 7211 001f 00       		.uleb128 0
 7212 0020 EC09     		.uleb128 .LEHB11-.LFB6051
 7213 0022 3C       		.uleb128 .LEHE11-.LEHB11
 7214 0023 EB19     		.uleb128 .L407-.LFB6051
 7215 0025 00       		.uleb128 0
 7216 0026 8B0B     		.uleb128 .LEHB12-.LFB6051
 7217 0028 05       		.uleb128 .LEHE12-.LEHB12
 7218 0029 E619     		.uleb128 .L405-.LFB6051
 7219 002b 00       		.uleb128 0
 7220 002c AB0B     		.uleb128 .LEHB13-.LFB6051
 7221 002e 05       		.uleb128 .LEHE13-.LEHB13
 7222 002f CB1E     		.uleb128 .L409-.LFB6051
 7223 0031 00       		.uleb128 0
 7224 0032 C20B     		.uleb128 .LEHB14-.LFB6051
 7225 0034 EF01     		.uleb128 .LEHE14-.LEHB14
 7226 0036 C61E     		.uleb128 .L410-.LFB6051
 7227 0038 00       		.uleb128 0
 7228 0039 A90E     		.uleb128 .LEHB15-.LFB6051
 7229 003b 3D       		.uleb128 .LEHE15-.LEHB15
 7230 003c 931E     		.uleb128 .L411-.LFB6051
 7231 003e 00       		.uleb128 0
 7232 003f 8815     		.uleb128 .LEHB16-.LFB6051
 7233 0041 1C       		.uleb128 .LEHE16-.LEHB16
 7234 0042 E619     		.uleb128 .L405-.LFB6051
 7235 0044 00       		.uleb128 0
 7236 0045 9A18     		.uleb128 .LEHB17-.LFB6051
 7237 0047 23       		.uleb128 .LEHE17-.LEHB17
 7238 0048 EB19     		.uleb128 .L407-.LFB6051
 7239 004a 00       		.uleb128 0
 7240 004b 9E19     		.uleb128 .LEHB18-.LFB6051
 7241 004d 05       		.uleb128 .LEHE18-.LEHB18
 7242 004e EB19     		.uleb128 .L407-.LFB6051
 7243 0050 00       		.uleb128 0
 7244 0051 DC19     		.uleb128 .LEHB19-.LFB6051
 7245 0053 05       		.uleb128 .LEHE19-.LEHB19
 7246 0054 00       		.uleb128 0
 7247 0055 00       		.uleb128 0
 7248 0056 DE1C     		.uleb128 .LEHB20-.LFB6051
 7249 0058 B501     		.uleb128 .LEHE20-.LEHB20
 7250 005a C61E     		.uleb128 .L410-.LFB6051
 7251 005c 00       		.uleb128 0
 7252              	.LLSDACSE6051:
 7253              		.section	.text.startup
 7254              		.size	main, .-main
 7255              		.section	.text.unlikely
 7256              	.LCOLDE33:
 7257              		.section	.text.startup
 7258              	.LHOTE33:
 7259              		.section	.text.unlikely
 7260              	.LCOLDB34:
GAS LISTING /tmp/ccmMnd7l.s 			page 428


 7261              		.section	.text.startup
 7262              	.LHOTB34:
 7263              		.p2align 4,,15
 7264              		.type	_GLOBAL__sub_I_weighted_unweighted.cpp, @function
 7265              	_GLOBAL__sub_I_weighted_unweighted.cpp:
 7266              	.LFB6592:
 7267              		.loc 22 81 0
 7268              		.cfi_startproc
 7269              	.LVL708:
 7270              	.LBB4657:
 7271              	.LBB4658:
 7272              		.file 24 "/opt/gcc/4.9.2/include/c++/4.9.2/iostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Standard iostream objects -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** /** @file include/iostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  30:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifndef _GLIBCXX_IOSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #define _GLIBCXX_IOSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <bits/c++config.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <ostream>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <istream>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
GAS LISTING /tmp/ccmMnd7l.s 			page 429


  45:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  @name Standard Stream Objects
  47:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  49:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  objects</em>.  For other declarations, see
  50:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  51:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  52:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  53:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  They are required by default to cooperate with the global C
  54:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  library's @c FILE streams, and to be available during program
  55:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  startup and termination. For more information, see the section of the
  56:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  manual linked to above.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@{
  59:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern istream cin;		/// Linked to standard input
  60:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cout;		/// Linked to standard output
  61:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  63:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  65:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wistream wcin;		/// Linked to standard input
  66:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcout;	/// Linked to standard output
  67:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  69:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #endif
  70:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@}
  71:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   static ios_base::Init __ioinit;
 7273              		.loc 24 74 0
 7274 0f50 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 7274      000000
 7275              	.LBE4658:
 7276              	.LBE4657:
 7277              		.loc 22 81 0
 7278 0f57 4883EC08 		subq	$8, %rsp
 7279              		.cfi_def_cfa_offset 16
 7280              	.LBB4661:
 7281              	.LBB4659:
 7282              		.loc 24 74 0
 7283 0f5b E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 7283      00
 7284              	.LVL709:
 7285 0f60 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 7285      000000
 7286 0f67 488D1500 		leaq	__dso_handle(%rip), %rdx
 7286      000000
 7287 0f6e 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 7287      000000
 7288              	.LBE4659:
 7289              	.LBE4661:
 7290              		.loc 22 81 0
 7291 0f75 4883C408 		addq	$8, %rsp
 7292              		.cfi_def_cfa_offset 8
 7293              	.LBB4662:
 7294              	.LBB4660:
 7295              		.loc 24 74 0
GAS LISTING /tmp/ccmMnd7l.s 			page 430


 7296 0f79 E9000000 		jmp	__cxa_atexit@PLT
 7296      00
 7297              	.LVL710:
 7298              	.LBE4660:
 7299              	.LBE4662:
 7300              		.cfi_endproc
 7301              	.LFE6592:
 7302              		.size	_GLOBAL__sub_I_weighted_unweighted.cpp, .-_GLOBAL__sub_I_weighted_unweighted.cpp
 7303              		.section	.text.unlikely
 7304              	.LCOLDE34:
 7305              		.section	.text.startup
 7306              	.LHOTE34:
 7307              		.section	.ctors,"aw",@progbits
 7308              		.align 8
 7309 0000 00000000 		.quad	_GLOBAL__sub_I_weighted_unweighted.cpp
 7309      00000000 
 7310              		.local	_ZStL8__ioinit
 7311              		.comm	_ZStL8__ioinit,1,1
 7312              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 7313              		.section	.rodata.cst8,"aM",@progbits,8
 7314              		.align 8
 7315              	.LC8:
 7316 0000 00000000 		.long	0
 7317 0004 00408F40 		.long	1083129856
 7318              		.section	.rodata.cst4,"aM",@progbits,4
 7319              		.align 4
 7320              	.LC31:
 7321 0000 0000803F 		.long	1065353216
 7322              		.text
 7323              	.Letext0:
 7324              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
 7325              	.Letext_cold0:
 7326              		.file 25 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/exception_ptr.h"
 7327              		.file 26 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/c++config.h"
 7328              		.file 27 "/opt/gcc/4.9.2/include/c++/4.9.2/type_traits"
 7329              		.file 28 "/opt/gcc/4.9.2/include/c++/4.9.2/new"
 7330              		.file 29 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h"
 7331              		.file 30 "/opt/gcc/4.9.2/include/c++/4.9.2/cwchar"
 7332              		.file 31 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h"
 7333              		.file 32 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdint"
 7334              		.file 33 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/allocator.h"
 7335              		.file 34 "/opt/gcc/4.9.2/include/c++/4.9.2/clocale"
 7336              		.file 35 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib"
 7337              		.file 36 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdio"
 7338              		.file 37 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.tcc"
 7339              		.file 38 "/opt/gcc/4.9.2/include/c++/4.9.2/initializer_list"
 7340              		.file 39 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stringfwd.h"
 7341              		.file 40 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/uses_allocator.h"
 7342              		.file 41 "/opt/gcc/4.9.2/include/c++/4.9.2/cwctype"
 7343              		.file 42 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream.tcc"
 7344              		.file 43 "/opt/gcc/4.9.2/include/c++/4.9.2/cmath"
 7345              		.file 44 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h"
 7346              		.file 45 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h"
 7347              		.file 46 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ptr_traits.h"
 7348              		.file 47 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/alloc_traits.h"
 7349              		.file 48 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/vector.tcc"
 7350              		.file 49 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator_base_types.h"
GAS LISTING /tmp/ccmMnd7l.s 			page 431


 7351              		.file 50 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h"
 7352              		.file 51 "/opt/gcc/4.9.2/include/c++/4.9.2/utility"
 7353              		.file 52 "/opt/gcc/4.9.2/include/c++/4.9.2/iosfwd"
 7354              		.file 53 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream_insert.h"
 7355              		.file 54 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/postypes.h"
 7356              		.file 55 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/functexcept.h"
 7357              		.file 56 "/opt/gcc/4.9.2/include/c++/4.9.2/exception"
 7358              		.file 57 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/numeric_traits.h"
 7359              		.file 58 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/alloc_traits.h"
 7360              		.file 59 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/concurrence.h"
 7361              		.file 60 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/type_traits.h"
 7362              		.file 61 "/opt/gcc/4.9.2/include/c++/4.9.2/debug/debug.h"
 7363              		.file 62 "/usr/include/stdio.h"
 7364              		.file 63 "/usr/include/libio.h"
 7365              		.file 64 "<built-in>"
 7366              		.file 65 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/stddef.h"
 7367              		.file 66 "/usr/include/wchar.h"
 7368              		.file 67 "/usr/include/time.h"
 7369              		.file 68 "/usr/include/stdint.h"
 7370              		.file 69 "/usr/include/locale.h"
 7371              		.file 70 "/usr/include/bits/types.h"
 7372              		.file 71 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/atomic_word.h"
 7373              		.file 72 "/usr/include/stdlib.h"
 7374              		.file 73 "/usr/include/_G_config.h"
 7375              		.file 74 "/usr/include/bits/stdio.h"
 7376              		.file 75 "/usr/include/wctype.h"
 7377              		.file 76 "/usr/include/bits/mathdef.h"
 7378              		.file 77 "./heatmap.h"
 7379              		.file 78 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/gthr-default.h"
 7380              		.file 79 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/omp.h"
 7381              		.section	.debug_info,"",@progbits
 7382              	.Ldebug_info0:
 7383 0000 19510100 		.long	0x15119
 7384 0004 0400     		.value	0x4
 7385 0006 00000000 		.long	.Ldebug_abbrev0
 7386 000a 08       		.byte	0x8
 7387 000b 01       		.uleb128 0x1
 7388 000c 00000000 		.long	.LASF1660
 7389 0010 04       		.byte	0x4
 7390 0011 00000000 		.long	.LASF1661
 7391 0015 00000000 		.long	.LASF1662
 7392 0019 00000000 		.long	.Ldebug_ranges0+0x2e90
 7393 001d 00000000 		.quad	0
 7393      00000000 
 7394 0025 00000000 		.long	.Ldebug_line0
 7395 0029 02       		.uleb128 0x2
 7396 002a 08       		.byte	0x8
 7397 002b 04       		.byte	0x4
 7398 002c 00000000 		.long	.LASF0
 7399 0030 02       		.uleb128 0x2
 7400 0031 04       		.byte	0x4
 7401 0032 04       		.byte	0x4
 7402 0033 00000000 		.long	.LASF1
 7403 0037 03       		.uleb128 0x3
 7404 0038 73746400 		.string	"std"
 7405 003c 40       		.byte	0x40
 7406 003d 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 432


 7407 003e B1800000 		.long	0x80b1
 7408 0042 04       		.uleb128 0x4
 7409 0043 00000000 		.long	.LASF2
 7410 0047 19       		.byte	0x19
 7411 0048 36       		.byte	0x36
 7412 0049 F4010000 		.long	0x1f4
 7413 004d 05       		.uleb128 0x5
 7414 004e 00000000 		.long	.LASF3
 7415 0052 08       		.byte	0x8
 7416 0053 19       		.byte	0x19
 7417 0054 4B       		.byte	0x4b
 7418 0055 EE010000 		.long	0x1ee
 7419 0059 06       		.uleb128 0x6
 7420 005a 00000000 		.long	.LASF64
 7421 005e 19       		.byte	0x19
 7422 005f 4D       		.byte	0x4d
 7423 0060 B1800000 		.long	0x80b1
 7424 0064 00       		.byte	0
 7425 0065 07       		.uleb128 0x7
 7426 0066 00000000 		.long	.LASF3
 7427 006a 19       		.byte	0x19
 7428 006b 4F       		.byte	0x4f
 7429 006c 74000000 		.long	0x74
 7430 0070 7F000000 		.long	0x7f
 7431 0074 08       		.uleb128 0x8
 7432 0075 B3800000 		.long	0x80b3
 7433 0079 09       		.uleb128 0x9
 7434 007a B1800000 		.long	0x80b1
 7435 007e 00       		.byte	0
 7436 007f 0A       		.uleb128 0xa
 7437 0080 00000000 		.long	.LASF4
 7438 0084 19       		.byte	0x19
 7439 0085 51       		.byte	0x51
 7440 0086 00000000 		.long	.LASF6
 7441 008a 92000000 		.long	0x92
 7442 008e 98000000 		.long	0x98
 7443 0092 08       		.uleb128 0x8
 7444 0093 B3800000 		.long	0x80b3
 7445 0097 00       		.byte	0
 7446 0098 0A       		.uleb128 0xa
 7447 0099 00000000 		.long	.LASF5
 7448 009d 19       		.byte	0x19
 7449 009e 52       		.byte	0x52
 7450 009f 00000000 		.long	.LASF7
 7451 00a3 AB000000 		.long	0xab
 7452 00a7 B1000000 		.long	0xb1
 7453 00ab 08       		.uleb128 0x8
 7454 00ac B3800000 		.long	0x80b3
 7455 00b0 00       		.byte	0
 7456 00b1 0B       		.uleb128 0xb
 7457 00b2 00000000 		.long	.LASF12
 7458 00b6 19       		.byte	0x19
 7459 00b7 54       		.byte	0x54
 7460 00b8 00000000 		.long	.LASF14
 7461 00bc B1800000 		.long	0x80b1
 7462 00c0 C8000000 		.long	0xc8
 7463 00c4 CE000000 		.long	0xce
GAS LISTING /tmp/ccmMnd7l.s 			page 433


 7464 00c8 08       		.uleb128 0x8
 7465 00c9 B9800000 		.long	0x80b9
 7466 00cd 00       		.byte	0
 7467 00ce 0C       		.uleb128 0xc
 7468 00cf 00000000 		.long	.LASF3
 7469 00d3 19       		.byte	0x19
 7470 00d4 5A       		.byte	0x5a
 7471 00d5 01       		.byte	0x1
 7472 00d6 DE000000 		.long	0xde
 7473 00da E4000000 		.long	0xe4
 7474 00de 08       		.uleb128 0x8
 7475 00df B3800000 		.long	0x80b3
 7476 00e3 00       		.byte	0
 7477 00e4 0C       		.uleb128 0xc
 7478 00e5 00000000 		.long	.LASF3
 7479 00e9 19       		.byte	0x19
 7480 00ea 5C       		.byte	0x5c
 7481 00eb 01       		.byte	0x1
 7482 00ec F4000000 		.long	0xf4
 7483 00f0 FF000000 		.long	0xff
 7484 00f4 08       		.uleb128 0x8
 7485 00f5 B3800000 		.long	0x80b3
 7486 00f9 09       		.uleb128 0x9
 7487 00fa BF800000 		.long	0x80bf
 7488 00fe 00       		.byte	0
 7489 00ff 0C       		.uleb128 0xc
 7490 0100 00000000 		.long	.LASF3
 7491 0104 19       		.byte	0x19
 7492 0105 5F       		.byte	0x5f
 7493 0106 01       		.byte	0x1
 7494 0107 0F010000 		.long	0x10f
 7495 010b 1A010000 		.long	0x11a
 7496 010f 08       		.uleb128 0x8
 7497 0110 B3800000 		.long	0x80b3
 7498 0114 09       		.uleb128 0x9
 7499 0115 FB010000 		.long	0x1fb
 7500 0119 00       		.byte	0
 7501 011a 0C       		.uleb128 0xc
 7502 011b 00000000 		.long	.LASF3
 7503 011f 19       		.byte	0x19
 7504 0120 63       		.byte	0x63
 7505 0121 01       		.byte	0x1
 7506 0122 2A010000 		.long	0x12a
 7507 0126 35010000 		.long	0x135
 7508 012a 08       		.uleb128 0x8
 7509 012b B3800000 		.long	0x80b3
 7510 012f 09       		.uleb128 0x9
 7511 0130 CB800000 		.long	0x80cb
 7512 0134 00       		.byte	0
 7513 0135 0D       		.uleb128 0xd
 7514 0136 00000000 		.long	.LASF8
 7515 013a 19       		.byte	0x19
 7516 013b 70       		.byte	0x70
 7517 013c 00000000 		.long	.LASF9
 7518 0140 D2800000 		.long	0x80d2
 7519 0144 01       		.byte	0x1
 7520 0145 4D010000 		.long	0x14d
GAS LISTING /tmp/ccmMnd7l.s 			page 434


 7521 0149 58010000 		.long	0x158
 7522 014d 08       		.uleb128 0x8
 7523 014e B3800000 		.long	0x80b3
 7524 0152 09       		.uleb128 0x9
 7525 0153 BF800000 		.long	0x80bf
 7526 0157 00       		.byte	0
 7527 0158 0D       		.uleb128 0xd
 7528 0159 00000000 		.long	.LASF8
 7529 015d 19       		.byte	0x19
 7530 015e 74       		.byte	0x74
 7531 015f 00000000 		.long	.LASF10
 7532 0163 D2800000 		.long	0x80d2
 7533 0167 01       		.byte	0x1
 7534 0168 70010000 		.long	0x170
 7535 016c 7B010000 		.long	0x17b
 7536 0170 08       		.uleb128 0x8
 7537 0171 B3800000 		.long	0x80b3
 7538 0175 09       		.uleb128 0x9
 7539 0176 CB800000 		.long	0x80cb
 7540 017a 00       		.byte	0
 7541 017b 0C       		.uleb128 0xc
 7542 017c 00000000 		.long	.LASF11
 7543 0180 19       		.byte	0x19
 7544 0181 7B       		.byte	0x7b
 7545 0182 01       		.byte	0x1
 7546 0183 8B010000 		.long	0x18b
 7547 0187 96010000 		.long	0x196
 7548 018b 08       		.uleb128 0x8
 7549 018c B3800000 		.long	0x80b3
 7550 0190 08       		.uleb128 0x8
 7551 0191 D8800000 		.long	0x80d8
 7552 0195 00       		.byte	0
 7553 0196 0E       		.uleb128 0xe
 7554 0197 00000000 		.long	.LASF13
 7555 019b 19       		.byte	0x19
 7556 019c 7E       		.byte	0x7e
 7557 019d 00000000 		.long	.LASF15
 7558 01a1 01       		.byte	0x1
 7559 01a2 AA010000 		.long	0x1aa
 7560 01a6 B5010000 		.long	0x1b5
 7561 01aa 08       		.uleb128 0x8
 7562 01ab B3800000 		.long	0x80b3
 7563 01af 09       		.uleb128 0x9
 7564 01b0 D2800000 		.long	0x80d2
 7565 01b4 00       		.byte	0
 7566 01b5 0F       		.uleb128 0xf
 7567 01b6 00000000 		.long	.LASF851
 7568 01ba 19       		.byte	0x19
 7569 01bb 8A       		.byte	0x8a
 7570 01bc 00000000 		.long	.LASF1605
 7571 01c0 E0800000 		.long	0x80e0
 7572 01c4 01       		.byte	0x1
 7573 01c5 CD010000 		.long	0x1cd
 7574 01c9 D3010000 		.long	0x1d3
 7575 01cd 08       		.uleb128 0x8
 7576 01ce B9800000 		.long	0x80b9
 7577 01d2 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 435


 7578 01d3 10       		.uleb128 0x10
 7579 01d4 00000000 		.long	.LASF16
 7580 01d8 19       		.byte	0x19
 7581 01d9 93       		.byte	0x93
 7582 01da 00000000 		.long	.LASF17
 7583 01de E7800000 		.long	0x80e7
 7584 01e2 01       		.byte	0x1
 7585 01e3 E7010000 		.long	0x1e7
 7586 01e7 08       		.uleb128 0x8
 7587 01e8 B9800000 		.long	0x80b9
 7588 01ec 00       		.byte	0
 7589 01ed 00       		.byte	0
 7590 01ee 11       		.uleb128 0x11
 7591 01ef 4D000000 		.long	0x4d
 7592 01f3 00       		.byte	0
 7593 01f4 12       		.uleb128 0x12
 7594 01f5 19       		.byte	0x19
 7595 01f6 3A       		.byte	0x3a
 7596 01f7 4D000000 		.long	0x4d
 7597 01fb 13       		.uleb128 0x13
 7598 01fc 00000000 		.long	.LASF18
 7599 0200 1A       		.byte	0x1a
 7600 0201 C0       		.byte	0xc0
 7601 0202 C5800000 		.long	0x80c5
 7602 0206 14       		.uleb128 0x14
 7603 0207 00000000 		.long	.LASF304
 7604 020b 11       		.uleb128 0x11
 7605 020c 06020000 		.long	0x206
 7606 0210 15       		.uleb128 0x15
 7607 0211 00000000 		.long	.LASF27
 7608 0215 01       		.byte	0x1
 7609 0216 1C       		.byte	0x1c
 7610 0217 63       		.byte	0x63
 7611 0218 16       		.uleb128 0x16
 7612 0219 00000000 		.long	.LASF22
 7613 021d 01       		.byte	0x1
 7614 021e 1B       		.byte	0x1b
 7615 021f 45       		.byte	0x45
 7616 0220 6B020000 		.long	0x26b
 7617 0224 17       		.uleb128 0x17
 7618 0225 00000000 		.long	.LASF24
 7619 0229 1B       		.byte	0x1b
 7620 022a 47       		.byte	0x47
 7621 022b ED800000 		.long	0x80ed
 7622 022f 13       		.uleb128 0x13
 7623 0230 00000000 		.long	.LASF19
 7624 0234 1B       		.byte	0x1b
 7625 0235 48       		.byte	0x48
 7626 0236 E0800000 		.long	0x80e0
 7627 023a 0B       		.uleb128 0xb
 7628 023b 00000000 		.long	.LASF20
 7629 023f 1B       		.byte	0x1b
 7630 0240 4A       		.byte	0x4a
 7631 0241 00000000 		.long	.LASF21
 7632 0245 2F020000 		.long	0x22f
 7633 0249 51020000 		.long	0x251
 7634 024d 57020000 		.long	0x257
GAS LISTING /tmp/ccmMnd7l.s 			page 436


 7635 0251 08       		.uleb128 0x8
 7636 0252 F2800000 		.long	0x80f2
 7637 0256 00       		.byte	0
 7638 0257 18       		.uleb128 0x18
 7639 0258 5F547000 		.string	"_Tp"
 7640 025c E0800000 		.long	0x80e0
 7641 0260 19       		.uleb128 0x19
 7642 0261 5F5F7600 		.string	"__v"
 7643 0265 E0800000 		.long	0x80e0
 7644 0269 00       		.byte	0
 7645 026a 00       		.byte	0
 7646 026b 11       		.uleb128 0x11
 7647 026c 18020000 		.long	0x218
 7648 0270 16       		.uleb128 0x16
 7649 0271 00000000 		.long	.LASF23
 7650 0275 01       		.byte	0x1
 7651 0276 1B       		.byte	0x1b
 7652 0277 45       		.byte	0x45
 7653 0278 C3020000 		.long	0x2c3
 7654 027c 17       		.uleb128 0x17
 7655 027d 00000000 		.long	.LASF24
 7656 0281 1B       		.byte	0x1b
 7657 0282 47       		.byte	0x47
 7658 0283 ED800000 		.long	0x80ed
 7659 0287 13       		.uleb128 0x13
 7660 0288 00000000 		.long	.LASF19
 7661 028c 1B       		.byte	0x1b
 7662 028d 48       		.byte	0x48
 7663 028e E0800000 		.long	0x80e0
 7664 0292 0B       		.uleb128 0xb
 7665 0293 00000000 		.long	.LASF25
 7666 0297 1B       		.byte	0x1b
 7667 0298 4A       		.byte	0x4a
 7668 0299 00000000 		.long	.LASF26
 7669 029d 87020000 		.long	0x287
 7670 02a1 A9020000 		.long	0x2a9
 7671 02a5 AF020000 		.long	0x2af
 7672 02a9 08       		.uleb128 0x8
 7673 02aa F8800000 		.long	0x80f8
 7674 02ae 00       		.byte	0
 7675 02af 18       		.uleb128 0x18
 7676 02b0 5F547000 		.string	"_Tp"
 7677 02b4 E0800000 		.long	0x80e0
 7678 02b8 19       		.uleb128 0x19
 7679 02b9 5F5F7600 		.string	"__v"
 7680 02bd E0800000 		.long	0x80e0
 7681 02c1 01       		.byte	0x1
 7682 02c2 00       		.byte	0
 7683 02c3 11       		.uleb128 0x11
 7684 02c4 70020000 		.long	0x270
 7685 02c8 15       		.uleb128 0x15
 7686 02c9 00000000 		.long	.LASF28
 7687 02cd 01       		.byte	0x1
 7688 02ce 1D       		.byte	0x1d
 7689 02cf 4C       		.byte	0x4c
 7690 02d0 1A       		.uleb128 0x1a
 7691 02d1 00000000 		.long	.LASF1663
GAS LISTING /tmp/ccmMnd7l.s 			page 437


 7692 02d5 3D       		.byte	0x3d
 7693 02d6 30       		.byte	0x30
 7694 02d7 12       		.uleb128 0x12
 7695 02d8 1E       		.byte	0x1e
 7696 02d9 40       		.byte	0x40
 7697 02da F6990000 		.long	0x99f6
 7698 02de 12       		.uleb128 0x12
 7699 02df 1E       		.byte	0x1e
 7700 02e0 8B       		.byte	0x8b
 7701 02e1 7E990000 		.long	0x997e
 7702 02e5 12       		.uleb128 0x12
 7703 02e6 1E       		.byte	0x1e
 7704 02e7 8D       		.byte	0x8d
 7705 02e8 119A0000 		.long	0x9a11
 7706 02ec 12       		.uleb128 0x12
 7707 02ed 1E       		.byte	0x1e
 7708 02ee 8E       		.byte	0x8e
 7709 02ef 279A0000 		.long	0x9a27
 7710 02f3 12       		.uleb128 0x12
 7711 02f4 1E       		.byte	0x1e
 7712 02f5 8F       		.byte	0x8f
 7713 02f6 439A0000 		.long	0x9a43
 7714 02fa 12       		.uleb128 0x12
 7715 02fb 1E       		.byte	0x1e
 7716 02fc 90       		.byte	0x90
 7717 02fd 709A0000 		.long	0x9a70
 7718 0301 12       		.uleb128 0x12
 7719 0302 1E       		.byte	0x1e
 7720 0303 91       		.byte	0x91
 7721 0304 8B9A0000 		.long	0x9a8b
 7722 0308 12       		.uleb128 0x12
 7723 0309 1E       		.byte	0x1e
 7724 030a 92       		.byte	0x92
 7725 030b B19A0000 		.long	0x9ab1
 7726 030f 12       		.uleb128 0x12
 7727 0310 1E       		.byte	0x1e
 7728 0311 93       		.byte	0x93
 7729 0312 CC9A0000 		.long	0x9acc
 7730 0316 12       		.uleb128 0x12
 7731 0317 1E       		.byte	0x1e
 7732 0318 94       		.byte	0x94
 7733 0319 E89A0000 		.long	0x9ae8
 7734 031d 12       		.uleb128 0x12
 7735 031e 1E       		.byte	0x1e
 7736 031f 95       		.byte	0x95
 7737 0320 049B0000 		.long	0x9b04
 7738 0324 12       		.uleb128 0x12
 7739 0325 1E       		.byte	0x1e
 7740 0326 96       		.byte	0x96
 7741 0327 1A9B0000 		.long	0x9b1a
 7742 032b 12       		.uleb128 0x12
 7743 032c 1E       		.byte	0x1e
 7744 032d 97       		.byte	0x97
 7745 032e 279B0000 		.long	0x9b27
 7746 0332 12       		.uleb128 0x12
 7747 0333 1E       		.byte	0x1e
 7748 0334 98       		.byte	0x98
GAS LISTING /tmp/ccmMnd7l.s 			page 438


 7749 0335 4D9B0000 		.long	0x9b4d
 7750 0339 12       		.uleb128 0x12
 7751 033a 1E       		.byte	0x1e
 7752 033b 99       		.byte	0x99
 7753 033c 729B0000 		.long	0x9b72
 7754 0340 12       		.uleb128 0x12
 7755 0341 1E       		.byte	0x1e
 7756 0342 9A       		.byte	0x9a
 7757 0343 939B0000 		.long	0x9b93
 7758 0347 12       		.uleb128 0x12
 7759 0348 1E       		.byte	0x1e
 7760 0349 9B       		.byte	0x9b
 7761 034a BE9B0000 		.long	0x9bbe
 7762 034e 12       		.uleb128 0x12
 7763 034f 1E       		.byte	0x1e
 7764 0350 9C       		.byte	0x9c
 7765 0351 D99B0000 		.long	0x9bd9
 7766 0355 12       		.uleb128 0x12
 7767 0356 1E       		.byte	0x1e
 7768 0357 9E       		.byte	0x9e
 7769 0358 EF9B0000 		.long	0x9bef
 7770 035c 12       		.uleb128 0x12
 7771 035d 1E       		.byte	0x1e
 7772 035e A0       		.byte	0xa0
 7773 035f 109C0000 		.long	0x9c10
 7774 0363 12       		.uleb128 0x12
 7775 0364 1E       		.byte	0x1e
 7776 0365 A1       		.byte	0xa1
 7777 0366 2C9C0000 		.long	0x9c2c
 7778 036a 12       		.uleb128 0x12
 7779 036b 1E       		.byte	0x1e
 7780 036c A2       		.byte	0xa2
 7781 036d 479C0000 		.long	0x9c47
 7782 0371 12       		.uleb128 0x12
 7783 0372 1E       		.byte	0x1e
 7784 0373 A4       		.byte	0xa4
 7785 0374 6D9C0000 		.long	0x9c6d
 7786 0378 12       		.uleb128 0x12
 7787 0379 1E       		.byte	0x1e
 7788 037a A7       		.byte	0xa7
 7789 037b 8D9C0000 		.long	0x9c8d
 7790 037f 12       		.uleb128 0x12
 7791 0380 1E       		.byte	0x1e
 7792 0381 AA       		.byte	0xaa
 7793 0382 B29C0000 		.long	0x9cb2
 7794 0386 12       		.uleb128 0x12
 7795 0387 1E       		.byte	0x1e
 7796 0388 AC       		.byte	0xac
 7797 0389 D29C0000 		.long	0x9cd2
 7798 038d 12       		.uleb128 0x12
 7799 038e 1E       		.byte	0x1e
 7800 038f AE       		.byte	0xae
 7801 0390 ED9C0000 		.long	0x9ced
 7802 0394 12       		.uleb128 0x12
 7803 0395 1E       		.byte	0x1e
 7804 0396 B0       		.byte	0xb0
 7805 0397 089D0000 		.long	0x9d08
GAS LISTING /tmp/ccmMnd7l.s 			page 439


 7806 039b 12       		.uleb128 0x12
 7807 039c 1E       		.byte	0x1e
 7808 039d B1       		.byte	0xb1
 7809 039e 2E9D0000 		.long	0x9d2e
 7810 03a2 12       		.uleb128 0x12
 7811 03a3 1E       		.byte	0x1e
 7812 03a4 B2       		.byte	0xb2
 7813 03a5 489D0000 		.long	0x9d48
 7814 03a9 12       		.uleb128 0x12
 7815 03aa 1E       		.byte	0x1e
 7816 03ab B3       		.byte	0xb3
 7817 03ac 629D0000 		.long	0x9d62
 7818 03b0 12       		.uleb128 0x12
 7819 03b1 1E       		.byte	0x1e
 7820 03b2 B4       		.byte	0xb4
 7821 03b3 7C9D0000 		.long	0x9d7c
 7822 03b7 12       		.uleb128 0x12
 7823 03b8 1E       		.byte	0x1e
 7824 03b9 B5       		.byte	0xb5
 7825 03ba 969D0000 		.long	0x9d96
 7826 03be 12       		.uleb128 0x12
 7827 03bf 1E       		.byte	0x1e
 7828 03c0 B6       		.byte	0xb6
 7829 03c1 B09D0000 		.long	0x9db0
 7830 03c5 12       		.uleb128 0x12
 7831 03c6 1E       		.byte	0x1e
 7832 03c7 B7       		.byte	0xb7
 7833 03c8 719E0000 		.long	0x9e71
 7834 03cc 12       		.uleb128 0x12
 7835 03cd 1E       		.byte	0x1e
 7836 03ce B8       		.byte	0xb8
 7837 03cf 879E0000 		.long	0x9e87
 7838 03d3 12       		.uleb128 0x12
 7839 03d4 1E       		.byte	0x1e
 7840 03d5 B9       		.byte	0xb9
 7841 03d6 A69E0000 		.long	0x9ea6
 7842 03da 12       		.uleb128 0x12
 7843 03db 1E       		.byte	0x1e
 7844 03dc BA       		.byte	0xba
 7845 03dd C59E0000 		.long	0x9ec5
 7846 03e1 12       		.uleb128 0x12
 7847 03e2 1E       		.byte	0x1e
 7848 03e3 BB       		.byte	0xbb
 7849 03e4 E49E0000 		.long	0x9ee4
 7850 03e8 12       		.uleb128 0x12
 7851 03e9 1E       		.byte	0x1e
 7852 03ea BC       		.byte	0xbc
 7853 03eb 0F9F0000 		.long	0x9f0f
 7854 03ef 12       		.uleb128 0x12
 7855 03f0 1E       		.byte	0x1e
 7856 03f1 BD       		.byte	0xbd
 7857 03f2 299F0000 		.long	0x9f29
 7858 03f6 12       		.uleb128 0x12
 7859 03f7 1E       		.byte	0x1e
 7860 03f8 BF       		.byte	0xbf
 7861 03f9 4A9F0000 		.long	0x9f4a
 7862 03fd 12       		.uleb128 0x12
GAS LISTING /tmp/ccmMnd7l.s 			page 440


 7863 03fe 1E       		.byte	0x1e
 7864 03ff C1       		.byte	0xc1
 7865 0400 659F0000 		.long	0x9f65
 7866 0404 12       		.uleb128 0x12
 7867 0405 1E       		.byte	0x1e
 7868 0406 C2       		.byte	0xc2
 7869 0407 859F0000 		.long	0x9f85
 7870 040b 12       		.uleb128 0x12
 7871 040c 1E       		.byte	0x1e
 7872 040d C3       		.byte	0xc3
 7873 040e A59F0000 		.long	0x9fa5
 7874 0412 12       		.uleb128 0x12
 7875 0413 1E       		.byte	0x1e
 7876 0414 C4       		.byte	0xc4
 7877 0415 C59F0000 		.long	0x9fc5
 7878 0419 12       		.uleb128 0x12
 7879 041a 1E       		.byte	0x1e
 7880 041b C5       		.byte	0xc5
 7881 041c E49F0000 		.long	0x9fe4
 7882 0420 12       		.uleb128 0x12
 7883 0421 1E       		.byte	0x1e
 7884 0422 C6       		.byte	0xc6
 7885 0423 FA9F0000 		.long	0x9ffa
 7886 0427 12       		.uleb128 0x12
 7887 0428 1E       		.byte	0x1e
 7888 0429 C7       		.byte	0xc7
 7889 042a 1AA00000 		.long	0xa01a
 7890 042e 12       		.uleb128 0x12
 7891 042f 1E       		.byte	0x1e
 7892 0430 C8       		.byte	0xc8
 7893 0431 3AA00000 		.long	0xa03a
 7894 0435 12       		.uleb128 0x12
 7895 0436 1E       		.byte	0x1e
 7896 0437 C9       		.byte	0xc9
 7897 0438 5AA00000 		.long	0xa05a
 7898 043c 12       		.uleb128 0x12
 7899 043d 1E       		.byte	0x1e
 7900 043e CA       		.byte	0xca
 7901 043f 7AA00000 		.long	0xa07a
 7902 0443 12       		.uleb128 0x12
 7903 0444 1E       		.byte	0x1e
 7904 0445 CB       		.byte	0xcb
 7905 0446 91A00000 		.long	0xa091
 7906 044a 12       		.uleb128 0x12
 7907 044b 1E       		.byte	0x1e
 7908 044c CC       		.byte	0xcc
 7909 044d A8A00000 		.long	0xa0a8
 7910 0451 12       		.uleb128 0x12
 7911 0452 1E       		.byte	0x1e
 7912 0453 CD       		.byte	0xcd
 7913 0454 C6A00000 		.long	0xa0c6
 7914 0458 12       		.uleb128 0x12
 7915 0459 1E       		.byte	0x1e
 7916 045a CE       		.byte	0xce
 7917 045b E5A00000 		.long	0xa0e5
 7918 045f 12       		.uleb128 0x12
 7919 0460 1E       		.byte	0x1e
GAS LISTING /tmp/ccmMnd7l.s 			page 441


 7920 0461 CF       		.byte	0xcf
 7921 0462 03A10000 		.long	0xa103
 7922 0466 12       		.uleb128 0x12
 7923 0467 1E       		.byte	0x1e
 7924 0468 D0       		.byte	0xd0
 7925 0469 22A10000 		.long	0xa122
 7926 046d 1B       		.uleb128 0x1b
 7927 046e 1E       		.byte	0x1e
 7928 046f 0801     		.value	0x108
 7929 0471 46A10000 		.long	0xa146
 7930 0475 1B       		.uleb128 0x1b
 7931 0476 1E       		.byte	0x1e
 7932 0477 0901     		.value	0x109
 7933 0479 61A10000 		.long	0xa161
 7934 047d 1B       		.uleb128 0x1b
 7935 047e 1E       		.byte	0x1e
 7936 047f 0A01     		.value	0x10a
 7937 0481 81A10000 		.long	0xa181
 7938 0485 1B       		.uleb128 0x1b
 7939 0486 1E       		.byte	0x1e
 7940 0487 1801     		.value	0x118
 7941 0489 4A9F0000 		.long	0x9f4a
 7942 048d 1B       		.uleb128 0x1b
 7943 048e 1E       		.byte	0x1e
 7944 048f 1B01     		.value	0x11b
 7945 0491 6D9C0000 		.long	0x9c6d
 7946 0495 1B       		.uleb128 0x1b
 7947 0496 1E       		.byte	0x1e
 7948 0497 1E01     		.value	0x11e
 7949 0499 B29C0000 		.long	0x9cb2
 7950 049d 1B       		.uleb128 0x1b
 7951 049e 1E       		.byte	0x1e
 7952 049f 2101     		.value	0x121
 7953 04a1 ED9C0000 		.long	0x9ced
 7954 04a5 1B       		.uleb128 0x1b
 7955 04a6 1E       		.byte	0x1e
 7956 04a7 2501     		.value	0x125
 7957 04a9 46A10000 		.long	0xa146
 7958 04ad 1B       		.uleb128 0x1b
 7959 04ae 1E       		.byte	0x1e
 7960 04af 2601     		.value	0x126
 7961 04b1 61A10000 		.long	0xa161
 7962 04b5 1B       		.uleb128 0x1b
 7963 04b6 1E       		.byte	0x1e
 7964 04b7 2701     		.value	0x127
 7965 04b9 81A10000 		.long	0xa181
 7966 04bd 16       		.uleb128 0x16
 7967 04be 00000000 		.long	.LASF29
 7968 04c2 01       		.byte	0x1
 7969 04c3 1F       		.byte	0x1f
 7970 04c4 E9       		.byte	0xe9
 7971 04c5 85060000 		.long	0x685
 7972 04c9 13       		.uleb128 0x13
 7973 04ca 00000000 		.long	.LASF30
 7974 04ce 1F       		.byte	0x1f
 7975 04cf EB       		.byte	0xeb
 7976 04d0 E4990000 		.long	0x99e4
GAS LISTING /tmp/ccmMnd7l.s 			page 442


 7977 04d4 13       		.uleb128 0x13
 7978 04d5 00000000 		.long	.LASF31
 7979 04d9 1F       		.byte	0x1f
 7980 04da EC       		.byte	0xec
 7981 04db D8800000 		.long	0x80d8
 7982 04df 1C       		.uleb128 0x1c
 7983 04e0 00000000 		.long	.LASF44
 7984 04e4 1F       		.byte	0x1f
 7985 04e5 F2       		.byte	0xf2
 7986 04e6 00000000 		.long	.LASF747
 7987 04ea F9040000 		.long	0x4f9
 7988 04ee 09       		.uleb128 0x9
 7989 04ef A1A10000 		.long	0xa1a1
 7990 04f3 09       		.uleb128 0x9
 7991 04f4 A7A10000 		.long	0xa1a7
 7992 04f8 00       		.byte	0
 7993 04f9 11       		.uleb128 0x11
 7994 04fa C9040000 		.long	0x4c9
 7995 04fe 1D       		.uleb128 0x1d
 7996 04ff 657100   		.string	"eq"
 7997 0502 1F       		.byte	0x1f
 7998 0503 F6       		.byte	0xf6
 7999 0504 00000000 		.long	.LASF32
 8000 0508 E0800000 		.long	0x80e0
 8001 050c 1B050000 		.long	0x51b
 8002 0510 09       		.uleb128 0x9
 8003 0511 A7A10000 		.long	0xa1a7
 8004 0515 09       		.uleb128 0x9
 8005 0516 A7A10000 		.long	0xa1a7
 8006 051a 00       		.byte	0
 8007 051b 1D       		.uleb128 0x1d
 8008 051c 6C7400   		.string	"lt"
 8009 051f 1F       		.byte	0x1f
 8010 0520 FA       		.byte	0xfa
 8011 0521 00000000 		.long	.LASF33
 8012 0525 E0800000 		.long	0x80e0
 8013 0529 38050000 		.long	0x538
 8014 052d 09       		.uleb128 0x9
 8015 052e A7A10000 		.long	0xa1a7
 8016 0532 09       		.uleb128 0x9
 8017 0533 A7A10000 		.long	0xa1a7
 8018 0537 00       		.byte	0
 8019 0538 1E       		.uleb128 0x1e
 8020 0539 00000000 		.long	.LASF34
 8021 053d 1F       		.byte	0x1f
 8022 053e 0201     		.value	0x102
 8023 0540 00000000 		.long	.LASF36
 8024 0544 D8800000 		.long	0x80d8
 8025 0548 5C050000 		.long	0x55c
 8026 054c 09       		.uleb128 0x9
 8027 054d ADA10000 		.long	0xa1ad
 8028 0551 09       		.uleb128 0x9
 8029 0552 ADA10000 		.long	0xa1ad
 8030 0556 09       		.uleb128 0x9
 8031 0557 85060000 		.long	0x685
 8032 055b 00       		.byte	0
 8033 055c 1E       		.uleb128 0x1e
GAS LISTING /tmp/ccmMnd7l.s 			page 443


 8034 055d 00000000 		.long	.LASF35
 8035 0561 1F       		.byte	0x1f
 8036 0562 0601     		.value	0x106
 8037 0564 00000000 		.long	.LASF37
 8038 0568 85060000 		.long	0x685
 8039 056c 76050000 		.long	0x576
 8040 0570 09       		.uleb128 0x9
 8041 0571 ADA10000 		.long	0xa1ad
 8042 0575 00       		.byte	0
 8043 0576 1E       		.uleb128 0x1e
 8044 0577 00000000 		.long	.LASF38
 8045 057b 1F       		.byte	0x1f
 8046 057c 0A01     		.value	0x10a
 8047 057e 00000000 		.long	.LASF39
 8048 0582 ADA10000 		.long	0xa1ad
 8049 0586 9A050000 		.long	0x59a
 8050 058a 09       		.uleb128 0x9
 8051 058b ADA10000 		.long	0xa1ad
 8052 058f 09       		.uleb128 0x9
 8053 0590 85060000 		.long	0x685
 8054 0594 09       		.uleb128 0x9
 8055 0595 A7A10000 		.long	0xa1a7
 8056 0599 00       		.byte	0
 8057 059a 1E       		.uleb128 0x1e
 8058 059b 00000000 		.long	.LASF40
 8059 059f 1F       		.byte	0x1f
 8060 05a0 0E01     		.value	0x10e
 8061 05a2 00000000 		.long	.LASF41
 8062 05a6 B3A10000 		.long	0xa1b3
 8063 05aa BE050000 		.long	0x5be
 8064 05ae 09       		.uleb128 0x9
 8065 05af B3A10000 		.long	0xa1b3
 8066 05b3 09       		.uleb128 0x9
 8067 05b4 ADA10000 		.long	0xa1ad
 8068 05b8 09       		.uleb128 0x9
 8069 05b9 85060000 		.long	0x685
 8070 05bd 00       		.byte	0
 8071 05be 1E       		.uleb128 0x1e
 8072 05bf 00000000 		.long	.LASF42
 8073 05c3 1F       		.byte	0x1f
 8074 05c4 1201     		.value	0x112
 8075 05c6 00000000 		.long	.LASF43
 8076 05ca B3A10000 		.long	0xa1b3
 8077 05ce E2050000 		.long	0x5e2
 8078 05d2 09       		.uleb128 0x9
 8079 05d3 B3A10000 		.long	0xa1b3
 8080 05d7 09       		.uleb128 0x9
 8081 05d8 ADA10000 		.long	0xa1ad
 8082 05dc 09       		.uleb128 0x9
 8083 05dd 85060000 		.long	0x685
 8084 05e1 00       		.byte	0
 8085 05e2 1E       		.uleb128 0x1e
 8086 05e3 00000000 		.long	.LASF44
 8087 05e7 1F       		.byte	0x1f
 8088 05e8 1601     		.value	0x116
 8089 05ea 00000000 		.long	.LASF45
 8090 05ee B3A10000 		.long	0xa1b3
GAS LISTING /tmp/ccmMnd7l.s 			page 444


 8091 05f2 06060000 		.long	0x606
 8092 05f6 09       		.uleb128 0x9
 8093 05f7 B3A10000 		.long	0xa1b3
 8094 05fb 09       		.uleb128 0x9
 8095 05fc 85060000 		.long	0x685
 8096 0600 09       		.uleb128 0x9
 8097 0601 C9040000 		.long	0x4c9
 8098 0605 00       		.byte	0
 8099 0606 1E       		.uleb128 0x1e
 8100 0607 00000000 		.long	.LASF46
 8101 060b 1F       		.byte	0x1f
 8102 060c 1A01     		.value	0x11a
 8103 060e 00000000 		.long	.LASF47
 8104 0612 C9040000 		.long	0x4c9
 8105 0616 20060000 		.long	0x620
 8106 061a 09       		.uleb128 0x9
 8107 061b B9A10000 		.long	0xa1b9
 8108 061f 00       		.byte	0
 8109 0620 11       		.uleb128 0x11
 8110 0621 D4040000 		.long	0x4d4
 8111 0625 1E       		.uleb128 0x1e
 8112 0626 00000000 		.long	.LASF48
 8113 062a 1F       		.byte	0x1f
 8114 062b 2001     		.value	0x120
 8115 062d 00000000 		.long	.LASF49
 8116 0631 D4040000 		.long	0x4d4
 8117 0635 3F060000 		.long	0x63f
 8118 0639 09       		.uleb128 0x9
 8119 063a A7A10000 		.long	0xa1a7
 8120 063e 00       		.byte	0
 8121 063f 1E       		.uleb128 0x1e
 8122 0640 00000000 		.long	.LASF50
 8123 0644 1F       		.byte	0x1f
 8124 0645 2401     		.value	0x124
 8125 0647 00000000 		.long	.LASF51
 8126 064b E0800000 		.long	0x80e0
 8127 064f 5E060000 		.long	0x65e
 8128 0653 09       		.uleb128 0x9
 8129 0654 B9A10000 		.long	0xa1b9
 8130 0658 09       		.uleb128 0x9
 8131 0659 B9A10000 		.long	0xa1b9
 8132 065d 00       		.byte	0
 8133 065e 1F       		.uleb128 0x1f
 8134 065f 656F6600 		.string	"eof"
 8135 0663 1F       		.byte	0x1f
 8136 0664 2801     		.value	0x128
 8137 0666 00000000 		.long	.LASF1664
 8138 066a D4040000 		.long	0x4d4
 8139 066e 20       		.uleb128 0x20
 8140 066f 00000000 		.long	.LASF52
 8141 0673 1F       		.byte	0x1f
 8142 0674 2C01     		.value	0x12c
 8143 0676 00000000 		.long	.LASF125
 8144 067a D4040000 		.long	0x4d4
 8145 067e 09       		.uleb128 0x9
 8146 067f B9A10000 		.long	0xa1b9
 8147 0683 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 445


 8148 0684 00       		.byte	0
 8149 0685 13       		.uleb128 0x13
 8150 0686 00000000 		.long	.LASF53
 8151 068a 1A       		.byte	0x1a
 8152 068b BC       		.byte	0xbc
 8153 068c 03810000 		.long	0x8103
 8154 0690 12       		.uleb128 0x12
 8155 0691 20       		.byte	0x20
 8156 0692 30       		.byte	0x30
 8157 0693 BFA10000 		.long	0xa1bf
 8158 0697 12       		.uleb128 0x12
 8159 0698 20       		.byte	0x20
 8160 0699 31       		.byte	0x31
 8161 069a CAA10000 		.long	0xa1ca
 8162 069e 12       		.uleb128 0x12
 8163 069f 20       		.byte	0x20
 8164 06a0 32       		.byte	0x32
 8165 06a1 D5A10000 		.long	0xa1d5
 8166 06a5 12       		.uleb128 0x12
 8167 06a6 20       		.byte	0x20
 8168 06a7 33       		.byte	0x33
 8169 06a8 E0A10000 		.long	0xa1e0
 8170 06ac 12       		.uleb128 0x12
 8171 06ad 20       		.byte	0x20
 8172 06ae 35       		.byte	0x35
 8173 06af 6FA20000 		.long	0xa26f
 8174 06b3 12       		.uleb128 0x12
 8175 06b4 20       		.byte	0x20
 8176 06b5 36       		.byte	0x36
 8177 06b6 7AA20000 		.long	0xa27a
 8178 06ba 12       		.uleb128 0x12
 8179 06bb 20       		.byte	0x20
 8180 06bc 37       		.byte	0x37
 8181 06bd 85A20000 		.long	0xa285
 8182 06c1 12       		.uleb128 0x12
 8183 06c2 20       		.byte	0x20
 8184 06c3 38       		.byte	0x38
 8185 06c4 90A20000 		.long	0xa290
 8186 06c8 12       		.uleb128 0x12
 8187 06c9 20       		.byte	0x20
 8188 06ca 3A       		.byte	0x3a
 8189 06cb 17A20000 		.long	0xa217
 8190 06cf 12       		.uleb128 0x12
 8191 06d0 20       		.byte	0x20
 8192 06d1 3B       		.byte	0x3b
 8193 06d2 22A20000 		.long	0xa222
 8194 06d6 12       		.uleb128 0x12
 8195 06d7 20       		.byte	0x20
 8196 06d8 3C       		.byte	0x3c
 8197 06d9 2DA20000 		.long	0xa22d
 8198 06dd 12       		.uleb128 0x12
 8199 06de 20       		.byte	0x20
 8200 06df 3D       		.byte	0x3d
 8201 06e0 38A20000 		.long	0xa238
 8202 06e4 12       		.uleb128 0x12
 8203 06e5 20       		.byte	0x20
 8204 06e6 3F       		.byte	0x3f
GAS LISTING /tmp/ccmMnd7l.s 			page 446


 8205 06e7 DDA20000 		.long	0xa2dd
 8206 06eb 12       		.uleb128 0x12
 8207 06ec 20       		.byte	0x20
 8208 06ed 40       		.byte	0x40
 8209 06ee C7A20000 		.long	0xa2c7
 8210 06f2 12       		.uleb128 0x12
 8211 06f3 20       		.byte	0x20
 8212 06f4 42       		.byte	0x42
 8213 06f5 EBA10000 		.long	0xa1eb
 8214 06f9 12       		.uleb128 0x12
 8215 06fa 20       		.byte	0x20
 8216 06fb 43       		.byte	0x43
 8217 06fc F6A10000 		.long	0xa1f6
 8218 0700 12       		.uleb128 0x12
 8219 0701 20       		.byte	0x20
 8220 0702 44       		.byte	0x44
 8221 0703 01A20000 		.long	0xa201
 8222 0707 12       		.uleb128 0x12
 8223 0708 20       		.byte	0x20
 8224 0709 45       		.byte	0x45
 8225 070a 0CA20000 		.long	0xa20c
 8226 070e 12       		.uleb128 0x12
 8227 070f 20       		.byte	0x20
 8228 0710 47       		.byte	0x47
 8229 0711 9BA20000 		.long	0xa29b
 8230 0715 12       		.uleb128 0x12
 8231 0716 20       		.byte	0x20
 8232 0717 48       		.byte	0x48
 8233 0718 A6A20000 		.long	0xa2a6
 8234 071c 12       		.uleb128 0x12
 8235 071d 20       		.byte	0x20
 8236 071e 49       		.byte	0x49
 8237 071f B1A20000 		.long	0xa2b1
 8238 0723 12       		.uleb128 0x12
 8239 0724 20       		.byte	0x20
 8240 0725 4A       		.byte	0x4a
 8241 0726 BCA20000 		.long	0xa2bc
 8242 072a 12       		.uleb128 0x12
 8243 072b 20       		.byte	0x20
 8244 072c 4C       		.byte	0x4c
 8245 072d 43A20000 		.long	0xa243
 8246 0731 12       		.uleb128 0x12
 8247 0732 20       		.byte	0x20
 8248 0733 4D       		.byte	0x4d
 8249 0734 4EA20000 		.long	0xa24e
 8250 0738 12       		.uleb128 0x12
 8251 0739 20       		.byte	0x20
 8252 073a 4E       		.byte	0x4e
 8253 073b 59A20000 		.long	0xa259
 8254 073f 12       		.uleb128 0x12
 8255 0740 20       		.byte	0x20
 8256 0741 4F       		.byte	0x4f
 8257 0742 64A20000 		.long	0xa264
 8258 0746 12       		.uleb128 0x12
 8259 0747 20       		.byte	0x20
 8260 0748 51       		.byte	0x51
 8261 0749 E8A20000 		.long	0xa2e8
GAS LISTING /tmp/ccmMnd7l.s 			page 447


 8262 074d 12       		.uleb128 0x12
 8263 074e 20       		.byte	0x20
 8264 074f 52       		.byte	0x52
 8265 0750 D2A20000 		.long	0xa2d2
 8266 0754 13       		.uleb128 0x13
 8267 0755 00000000 		.long	.LASF54
 8268 0759 1A       		.byte	0x1a
 8269 075a BD       		.byte	0xbd
 8270 075b 34810000 		.long	0x8134
 8271 075f 13       		.uleb128 0x13
 8272 0760 00000000 		.long	.LASF55
 8273 0764 1B       		.byte	0x1b
 8274 0765 57       		.byte	0x57
 8275 0766 70020000 		.long	0x270
 8276 076a 05       		.uleb128 0x5
 8277 076b 00000000 		.long	.LASF56
 8278 076f 01       		.byte	0x1
 8279 0770 21       		.byte	0x21
 8280 0771 5C       		.byte	0x5c
 8281 0772 EA070000 		.long	0x7ea
 8282 0776 21       		.uleb128 0x21
 8283 0777 80820000 		.long	0x8280
 8284 077b 00       		.byte	0
 8285 077c 01       		.byte	0x1
 8286 077d 22       		.uleb128 0x22
 8287 077e 00000000 		.long	.LASF57
 8288 0782 21       		.byte	0x21
 8289 0783 5F       		.byte	0x5f
 8290 0784 85060000 		.long	0x685
 8291 0788 01       		.byte	0x1
 8292 0789 22       		.uleb128 0x22
 8293 078a 00000000 		.long	.LASF58
 8294 078e 21       		.byte	0x21
 8295 078f 63       		.byte	0x63
 8296 0790 09A30000 		.long	0xa309
 8297 0794 01       		.byte	0x1
 8298 0795 22       		.uleb128 0x22
 8299 0796 00000000 		.long	.LASF59
 8300 079a 21       		.byte	0x21
 8301 079b 64       		.byte	0x64
 8302 079c 0FA30000 		.long	0xa30f
 8303 07a0 01       		.byte	0x1
 8304 07a1 0C       		.uleb128 0xc
 8305 07a2 00000000 		.long	.LASF60
 8306 07a6 21       		.byte	0x21
 8307 07a7 71       		.byte	0x71
 8308 07a8 01       		.byte	0x1
 8309 07a9 B1070000 		.long	0x7b1
 8310 07ad B7070000 		.long	0x7b7
 8311 07b1 08       		.uleb128 0x8
 8312 07b2 27A30000 		.long	0xa327
 8313 07b6 00       		.byte	0
 8314 07b7 0C       		.uleb128 0xc
 8315 07b8 00000000 		.long	.LASF60
 8316 07bc 21       		.byte	0x21
 8317 07bd 73       		.byte	0x73
 8318 07be 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 448


 8319 07bf C7070000 		.long	0x7c7
 8320 07c3 D2070000 		.long	0x7d2
 8321 07c7 08       		.uleb128 0x8
 8322 07c8 27A30000 		.long	0xa327
 8323 07cc 09       		.uleb128 0x9
 8324 07cd 2DA30000 		.long	0xa32d
 8325 07d1 00       		.byte	0
 8326 07d2 23       		.uleb128 0x23
 8327 07d3 00000000 		.long	.LASF61
 8328 07d7 21       		.byte	0x21
 8329 07d8 79       		.byte	0x79
 8330 07d9 01       		.byte	0x1
 8331 07da DE070000 		.long	0x7de
 8332 07de 08       		.uleb128 0x8
 8333 07df 27A30000 		.long	0xa327
 8334 07e3 08       		.uleb128 0x8
 8335 07e4 D8800000 		.long	0x80d8
 8336 07e8 00       		.byte	0
 8337 07e9 00       		.byte	0
 8338 07ea 11       		.uleb128 0x11
 8339 07eb 6A070000 		.long	0x76a
 8340 07ef 12       		.uleb128 0x12
 8341 07f0 22       		.byte	0x22
 8342 07f1 35       		.byte	0x35
 8343 07f2 33A30000 		.long	0xa333
 8344 07f6 12       		.uleb128 0x12
 8345 07f7 22       		.byte	0x22
 8346 07f8 36       		.byte	0x36
 8347 07f9 60A40000 		.long	0xa460
 8348 07fd 12       		.uleb128 0x12
 8349 07fe 22       		.byte	0x22
 8350 07ff 37       		.byte	0x37
 8351 0800 7AA40000 		.long	0xa47a
 8352 0804 12       		.uleb128 0x12
 8353 0805 23       		.byte	0x23
 8354 0806 76       		.byte	0x76
 8355 0807 F1A40000 		.long	0xa4f1
 8356 080b 12       		.uleb128 0x12
 8357 080c 23       		.byte	0x23
 8358 080d 77       		.byte	0x77
 8359 080e 23A50000 		.long	0xa523
 8360 0812 12       		.uleb128 0x12
 8361 0813 23       		.byte	0x23
 8362 0814 7B       		.byte	0x7b
 8363 0815 87A50000 		.long	0xa587
 8364 0819 12       		.uleb128 0x12
 8365 081a 23       		.byte	0x23
 8366 081b 7E       		.byte	0x7e
 8367 081c A5A50000 		.long	0xa5a5
 8368 0820 12       		.uleb128 0x12
 8369 0821 23       		.byte	0x23
 8370 0822 81       		.byte	0x81
 8371 0823 BFA50000 		.long	0xa5bf
 8372 0827 12       		.uleb128 0x12
 8373 0828 23       		.byte	0x23
 8374 0829 82       		.byte	0x82
 8375 082a D5A50000 		.long	0xa5d5
GAS LISTING /tmp/ccmMnd7l.s 			page 449


 8376 082e 12       		.uleb128 0x12
 8377 082f 23       		.byte	0x23
 8378 0830 83       		.byte	0x83
 8379 0831 EBA50000 		.long	0xa5eb
 8380 0835 12       		.uleb128 0x12
 8381 0836 23       		.byte	0x23
 8382 0837 84       		.byte	0x84
 8383 0838 01A60000 		.long	0xa601
 8384 083c 12       		.uleb128 0x12
 8385 083d 23       		.byte	0x23
 8386 083e 86       		.byte	0x86
 8387 083f 2BA60000 		.long	0xa62b
 8388 0843 12       		.uleb128 0x12
 8389 0844 23       		.byte	0x23
 8390 0845 89       		.byte	0x89
 8391 0846 47A60000 		.long	0xa647
 8392 084a 12       		.uleb128 0x12
 8393 084b 23       		.byte	0x23
 8394 084c 8B       		.byte	0x8b
 8395 084d 5DA60000 		.long	0xa65d
 8396 0851 12       		.uleb128 0x12
 8397 0852 23       		.byte	0x23
 8398 0853 8E       		.byte	0x8e
 8399 0854 78A60000 		.long	0xa678
 8400 0858 12       		.uleb128 0x12
 8401 0859 23       		.byte	0x23
 8402 085a 8F       		.byte	0x8f
 8403 085b 93A60000 		.long	0xa693
 8404 085f 12       		.uleb128 0x12
 8405 0860 23       		.byte	0x23
 8406 0861 90       		.byte	0x90
 8407 0862 B3A60000 		.long	0xa6b3
 8408 0866 12       		.uleb128 0x12
 8409 0867 23       		.byte	0x23
 8410 0868 92       		.byte	0x92
 8411 0869 D3A60000 		.long	0xa6d3
 8412 086d 12       		.uleb128 0x12
 8413 086e 23       		.byte	0x23
 8414 086f 95       		.byte	0x95
 8415 0870 F4A60000 		.long	0xa6f4
 8416 0874 12       		.uleb128 0x12
 8417 0875 23       		.byte	0x23
 8418 0876 98       		.byte	0x98
 8419 0877 06A70000 		.long	0xa706
 8420 087b 12       		.uleb128 0x12
 8421 087c 23       		.byte	0x23
 8422 087d 9A       		.byte	0x9a
 8423 087e 13A70000 		.long	0xa713
 8424 0882 12       		.uleb128 0x12
 8425 0883 23       		.byte	0x23
 8426 0884 9B       		.byte	0x9b
 8427 0885 25A70000 		.long	0xa725
 8428 0889 12       		.uleb128 0x12
 8429 088a 23       		.byte	0x23
 8430 088b 9C       		.byte	0x9c
 8431 088c 45A70000 		.long	0xa745
 8432 0890 12       		.uleb128 0x12
GAS LISTING /tmp/ccmMnd7l.s 			page 450


 8433 0891 23       		.byte	0x23
 8434 0892 9D       		.byte	0x9d
 8435 0893 64A70000 		.long	0xa764
 8436 0897 12       		.uleb128 0x12
 8437 0898 23       		.byte	0x23
 8438 0899 9E       		.byte	0x9e
 8439 089a 83A70000 		.long	0xa783
 8440 089e 12       		.uleb128 0x12
 8441 089f 23       		.byte	0x23
 8442 08a0 A0       		.byte	0xa0
 8443 08a1 99A70000 		.long	0xa799
 8444 08a5 12       		.uleb128 0x12
 8445 08a6 23       		.byte	0x23
 8446 08a7 A1       		.byte	0xa1
 8447 08a8 B9A70000 		.long	0xa7b9
 8448 08ac 12       		.uleb128 0x12
 8449 08ad 23       		.byte	0x23
 8450 08ae F1       		.byte	0xf1
 8451 08af 55A50000 		.long	0xa555
 8452 08b3 12       		.uleb128 0x12
 8453 08b4 23       		.byte	0x23
 8454 08b5 F6       		.byte	0xf6
 8455 08b6 46840000 		.long	0x8446
 8456 08ba 12       		.uleb128 0x12
 8457 08bb 23       		.byte	0x23
 8458 08bc F7       		.byte	0xf7
 8459 08bd D4A70000 		.long	0xa7d4
 8460 08c1 12       		.uleb128 0x12
 8461 08c2 23       		.byte	0x23
 8462 08c3 F9       		.byte	0xf9
 8463 08c4 EFA70000 		.long	0xa7ef
 8464 08c8 12       		.uleb128 0x12
 8465 08c9 23       		.byte	0x23
 8466 08ca FA       		.byte	0xfa
 8467 08cb 43A80000 		.long	0xa843
 8468 08cf 12       		.uleb128 0x12
 8469 08d0 23       		.byte	0x23
 8470 08d1 FB       		.byte	0xfb
 8471 08d2 05A80000 		.long	0xa805
 8472 08d6 12       		.uleb128 0x12
 8473 08d7 23       		.byte	0x23
 8474 08d8 FC       		.byte	0xfc
 8475 08d9 24A80000 		.long	0xa824
 8476 08dd 12       		.uleb128 0x12
 8477 08de 23       		.byte	0x23
 8478 08df FD       		.byte	0xfd
 8479 08e0 5DA80000 		.long	0xa85d
 8480 08e4 12       		.uleb128 0x12
 8481 08e5 24       		.byte	0x24
 8482 08e6 62       		.byte	0x62
 8483 08e7 92970000 		.long	0x9792
 8484 08eb 12       		.uleb128 0x12
 8485 08ec 24       		.byte	0x24
 8486 08ed 63       		.byte	0x63
 8487 08ee 17A90000 		.long	0xa917
 8488 08f2 12       		.uleb128 0x12
 8489 08f3 24       		.byte	0x24
GAS LISTING /tmp/ccmMnd7l.s 			page 451


 8490 08f4 65       		.byte	0x65
 8491 08f5 22A90000 		.long	0xa922
 8492 08f9 12       		.uleb128 0x12
 8493 08fa 24       		.byte	0x24
 8494 08fb 66       		.byte	0x66
 8495 08fc 3AA90000 		.long	0xa93a
 8496 0900 12       		.uleb128 0x12
 8497 0901 24       		.byte	0x24
 8498 0902 67       		.byte	0x67
 8499 0903 4FA90000 		.long	0xa94f
 8500 0907 12       		.uleb128 0x12
 8501 0908 24       		.byte	0x24
 8502 0909 68       		.byte	0x68
 8503 090a 65A90000 		.long	0xa965
 8504 090e 12       		.uleb128 0x12
 8505 090f 24       		.byte	0x24
 8506 0910 69       		.byte	0x69
 8507 0911 7BA90000 		.long	0xa97b
 8508 0915 12       		.uleb128 0x12
 8509 0916 24       		.byte	0x24
 8510 0917 6A       		.byte	0x6a
 8511 0918 90A90000 		.long	0xa990
 8512 091c 12       		.uleb128 0x12
 8513 091d 24       		.byte	0x24
 8514 091e 6B       		.byte	0x6b
 8515 091f A6A90000 		.long	0xa9a6
 8516 0923 12       		.uleb128 0x12
 8517 0924 24       		.byte	0x24
 8518 0925 6C       		.byte	0x6c
 8519 0926 C7A90000 		.long	0xa9c7
 8520 092a 12       		.uleb128 0x12
 8521 092b 24       		.byte	0x24
 8522 092c 6D       		.byte	0x6d
 8523 092d E7A90000 		.long	0xa9e7
 8524 0931 12       		.uleb128 0x12
 8525 0932 24       		.byte	0x24
 8526 0933 71       		.byte	0x71
 8527 0934 02AA0000 		.long	0xaa02
 8528 0938 12       		.uleb128 0x12
 8529 0939 24       		.byte	0x24
 8530 093a 72       		.byte	0x72
 8531 093b 27AA0000 		.long	0xaa27
 8532 093f 12       		.uleb128 0x12
 8533 0940 24       		.byte	0x24
 8534 0941 74       		.byte	0x74
 8535 0942 47AA0000 		.long	0xaa47
 8536 0946 12       		.uleb128 0x12
 8537 0947 24       		.byte	0x24
 8538 0948 75       		.byte	0x75
 8539 0949 67AA0000 		.long	0xaa67
 8540 094d 12       		.uleb128 0x12
 8541 094e 24       		.byte	0x24
 8542 094f 76       		.byte	0x76
 8543 0950 8DAA0000 		.long	0xaa8d
 8544 0954 12       		.uleb128 0x12
 8545 0955 24       		.byte	0x24
 8546 0956 78       		.byte	0x78
GAS LISTING /tmp/ccmMnd7l.s 			page 452


 8547 0957 A3AA0000 		.long	0xaaa3
 8548 095b 12       		.uleb128 0x12
 8549 095c 24       		.byte	0x24
 8550 095d 79       		.byte	0x79
 8551 095e B9AA0000 		.long	0xaab9
 8552 0962 12       		.uleb128 0x12
 8553 0963 24       		.byte	0x24
 8554 0964 7C       		.byte	0x7c
 8555 0965 C5AA0000 		.long	0xaac5
 8556 0969 12       		.uleb128 0x12
 8557 096a 24       		.byte	0x24
 8558 096b 7E       		.byte	0x7e
 8559 096c DBAA0000 		.long	0xaadb
 8560 0970 12       		.uleb128 0x12
 8561 0971 24       		.byte	0x24
 8562 0972 83       		.byte	0x83
 8563 0973 EDAA0000 		.long	0xaaed
 8564 0977 12       		.uleb128 0x12
 8565 0978 24       		.byte	0x24
 8566 0979 84       		.byte	0x84
 8567 097a 02AB0000 		.long	0xab02
 8568 097e 12       		.uleb128 0x12
 8569 097f 24       		.byte	0x24
 8570 0980 85       		.byte	0x85
 8571 0981 1CAB0000 		.long	0xab1c
 8572 0985 12       		.uleb128 0x12
 8573 0986 24       		.byte	0x24
 8574 0987 87       		.byte	0x87
 8575 0988 2EAB0000 		.long	0xab2e
 8576 098c 12       		.uleb128 0x12
 8577 098d 24       		.byte	0x24
 8578 098e 88       		.byte	0x88
 8579 098f 45AB0000 		.long	0xab45
 8580 0993 12       		.uleb128 0x12
 8581 0994 24       		.byte	0x24
 8582 0995 8B       		.byte	0x8b
 8583 0996 6AAB0000 		.long	0xab6a
 8584 099a 12       		.uleb128 0x12
 8585 099b 24       		.byte	0x24
 8586 099c 8D       		.byte	0x8d
 8587 099d 76AB0000 		.long	0xab76
 8588 09a1 12       		.uleb128 0x12
 8589 09a2 24       		.byte	0x24
 8590 09a3 8F       		.byte	0x8f
 8591 09a4 8BAB0000 		.long	0xab8b
 8592 09a8 05       		.uleb128 0x5
 8593 09a9 00000000 		.long	.LASF62
 8594 09ad 08       		.byte	0x8
 8595 09ae 07       		.byte	0x7
 8596 09af 70       		.byte	0x70
 8597 09b0 D0220000 		.long	0x22d0
 8598 09b4 24       		.uleb128 0x24
 8599 09b5 00000000 		.long	.LASF63
 8600 09b9 08       		.byte	0x8
 8601 09ba 07       		.byte	0x7
 8602 09bb 1001     		.value	0x110
 8603 09bd 090A0000 		.long	0xa09
GAS LISTING /tmp/ccmMnd7l.s 			page 453


 8604 09c1 25       		.uleb128 0x25
 8605 09c2 6A070000 		.long	0x76a
 8606 09c6 00       		.byte	0
 8607 09c7 26       		.uleb128 0x26
 8608 09c8 00000000 		.long	.LASF65
 8609 09cc 07       		.byte	0x7
 8610 09cd 1501     		.value	0x115
 8611 09cf 289D0000 		.long	0x9d28
 8612 09d3 00       		.byte	0
 8613 09d4 27       		.uleb128 0x27
 8614 09d5 00000000 		.long	.LASF63
 8615 09d9 07       		.byte	0x7
 8616 09da 1201     		.value	0x112
 8617 09dc E4090000 		.long	0x9e4
 8618 09e0 F4090000 		.long	0x9f4
 8619 09e4 08       		.uleb128 0x8
 8620 09e5 A6AB0000 		.long	0xaba6
 8621 09e9 09       		.uleb128 0x9
 8622 09ea 289D0000 		.long	0x9d28
 8623 09ee 09       		.uleb128 0x9
 8624 09ef 2DA30000 		.long	0xa32d
 8625 09f3 00       		.byte	0
 8626 09f4 28       		.uleb128 0x28
 8627 09f5 00000000 		.long	.LASF319
 8628 09f9 FD090000 		.long	0x9fd
 8629 09fd 08       		.uleb128 0x8
 8630 09fe A6AB0000 		.long	0xaba6
 8631 0a02 08       		.uleb128 0x8
 8632 0a03 D8800000 		.long	0x80d8
 8633 0a07 00       		.byte	0
 8634 0a08 00       		.byte	0
 8635 0a09 22       		.uleb128 0x22
 8636 0a0a 00000000 		.long	.LASF57
 8637 0a0e 07       		.byte	0x7
 8638 0a0f 79       		.byte	0x79
 8639 0a10 7D070000 		.long	0x77d
 8640 0a14 01       		.byte	0x1
 8641 0a15 29       		.uleb128 0x29
 8642 0a16 00000000 		.long	.LASF438
 8643 0a1a 07       		.byte	0x7
 8644 0a1b 1D01     		.value	0x11d
 8645 0a1d 220A0000 		.long	0xa22
 8646 0a21 01       		.byte	0x1
 8647 0a22 11       		.uleb128 0x11
 8648 0a23 090A0000 		.long	0xa09
 8649 0a27 26       		.uleb128 0x26
 8650 0a28 00000000 		.long	.LASF66
 8651 0a2c 07       		.byte	0x7
 8652 0a2d 2101     		.value	0x121
 8653 0a2f B4090000 		.long	0x9b4
 8654 0a33 00       		.byte	0
 8655 0a34 22       		.uleb128 0x22
 8656 0a35 00000000 		.long	.LASF67
 8657 0a39 07       		.byte	0x7
 8658 0a3a 78       		.byte	0x78
 8659 0a3b 6A070000 		.long	0x76a
 8660 0a3f 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 454


 8661 0a40 22       		.uleb128 0x22
 8662 0a41 00000000 		.long	.LASF58
 8663 0a45 07       		.byte	0x7
 8664 0a46 7B       		.byte	0x7b
 8665 0a47 89070000 		.long	0x789
 8666 0a4b 01       		.byte	0x1
 8667 0a4c 22       		.uleb128 0x22
 8668 0a4d 00000000 		.long	.LASF59
 8669 0a51 07       		.byte	0x7
 8670 0a52 7C       		.byte	0x7c
 8671 0a53 95070000 		.long	0x795
 8672 0a57 01       		.byte	0x1
 8673 0a58 22       		.uleb128 0x22
 8674 0a59 00000000 		.long	.LASF68
 8675 0a5d 07       		.byte	0x7
 8676 0a5e 7F       		.byte	0x7f
 8677 0a5f 64840000 		.long	0x8464
 8678 0a63 01       		.byte	0x1
 8679 0a64 22       		.uleb128 0x22
 8680 0a65 00000000 		.long	.LASF69
 8681 0a69 07       		.byte	0x7
 8682 0a6a 81       		.byte	0x81
 8683 0a6b 83860000 		.long	0x8683
 8684 0a6f 01       		.byte	0x1
 8685 0a70 22       		.uleb128 0x22
 8686 0a71 00000000 		.long	.LASF70
 8687 0a75 07       		.byte	0x7
 8688 0a76 82       		.byte	0x82
 8689 0a77 D0220000 		.long	0x22d0
 8690 0a7b 01       		.byte	0x1
 8691 0a7c 22       		.uleb128 0x22
 8692 0a7d 00000000 		.long	.LASF71
 8693 0a81 07       		.byte	0x7
 8694 0a82 83       		.byte	0x83
 8695 0a83 D5220000 		.long	0x22d5
 8696 0a87 01       		.byte	0x1
 8697 0a88 16       		.uleb128 0x16
 8698 0a89 00000000 		.long	.LASF72
 8699 0a8d 18       		.byte	0x18
 8700 0a8e 07       		.byte	0x7
 8701 0a8f 94       		.byte	0x94
 8702 0a90 B90A0000 		.long	0xab9
 8703 0a94 06       		.uleb128 0x6
 8704 0a95 00000000 		.long	.LASF73
 8705 0a99 07       		.byte	0x7
 8706 0a9a 96       		.byte	0x96
 8707 0a9b 090A0000 		.long	0xa09
 8708 0a9f 00       		.byte	0
 8709 0aa0 06       		.uleb128 0x6
 8710 0aa1 00000000 		.long	.LASF74
 8711 0aa5 07       		.byte	0x7
 8712 0aa6 97       		.byte	0x97
 8713 0aa7 090A0000 		.long	0xa09
 8714 0aab 08       		.byte	0x8
 8715 0aac 06       		.uleb128 0x6
 8716 0aad 00000000 		.long	.LASF75
 8717 0ab1 07       		.byte	0x7
GAS LISTING /tmp/ccmMnd7l.s 			page 455


 8718 0ab2 98       		.byte	0x98
 8719 0ab3 BFA40000 		.long	0xa4bf
 8720 0ab7 10       		.byte	0x10
 8721 0ab8 00       		.byte	0
 8722 0ab9 16       		.uleb128 0x16
 8723 0aba 00000000 		.long	.LASF76
 8724 0abe 18       		.byte	0x18
 8725 0abf 07       		.byte	0x7
 8726 0ac0 9B       		.byte	0x9b
 8727 0ac1 6D0C0000 		.long	0xc6d
 8728 0ac5 25       		.uleb128 0x25
 8729 0ac6 880A0000 		.long	0xa88
 8730 0aca 00       		.byte	0
 8731 0acb 17       		.uleb128 0x17
 8732 0acc 00000000 		.long	.LASF77
 8733 0ad0 25       		.byte	0x25
 8734 0ad1 32       		.byte	0x32
 8735 0ad2 220A0000 		.long	0xa22
 8736 0ad6 17       		.uleb128 0x17
 8737 0ad7 00000000 		.long	.LASF78
 8738 0adb 25       		.byte	0x25
 8739 0adc 37       		.byte	0x37
 8740 0add 0C9A0000 		.long	0x9a0c
 8741 0ae1 17       		.uleb128 0x17
 8742 0ae2 00000000 		.long	.LASF79
 8743 0ae6 25       		.byte	0x25
 8744 0ae7 42       		.byte	0x42
 8745 0ae8 E9AB0000 		.long	0xabe9
 8746 0aec 2A       		.uleb128 0x2a
 8747 0aed 00000000 		.long	.LASF80
 8748 0af1 07       		.byte	0x7
 8749 0af2 B5       		.byte	0xb5
 8750 0af3 00000000 		.long	.LASF1180
 8751 0af7 BEAB0000 		.long	0xabbe
 8752 0afb 0B       		.uleb128 0xb
 8753 0afc 00000000 		.long	.LASF81
 8754 0b00 07       		.byte	0x7
 8755 0b01 BF       		.byte	0xbf
 8756 0b02 00000000 		.long	.LASF82
 8757 0b06 E0800000 		.long	0x80e0
 8758 0b0a 120B0000 		.long	0xb12
 8759 0b0e 180B0000 		.long	0xb18
 8760 0b12 08       		.uleb128 0x8
 8761 0b13 F6AB0000 		.long	0xabf6
 8762 0b17 00       		.byte	0
 8763 0b18 0B       		.uleb128 0xb
 8764 0b19 00000000 		.long	.LASF83
 8765 0b1d 07       		.byte	0x7
 8766 0b1e C3       		.byte	0xc3
 8767 0b1f 00000000 		.long	.LASF84
 8768 0b23 E0800000 		.long	0x80e0
 8769 0b27 2F0B0000 		.long	0xb2f
 8770 0b2b 350B0000 		.long	0xb35
 8771 0b2f 08       		.uleb128 0x8
 8772 0b30 F6AB0000 		.long	0xabf6
 8773 0b34 00       		.byte	0
 8774 0b35 0A       		.uleb128 0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 456


 8775 0b36 00000000 		.long	.LASF85
 8776 0b3a 07       		.byte	0x7
 8777 0b3b C7       		.byte	0xc7
 8778 0b3c 00000000 		.long	.LASF86
 8779 0b40 480B0000 		.long	0xb48
 8780 0b44 4E0B0000 		.long	0xb4e
 8781 0b48 08       		.uleb128 0x8
 8782 0b49 B8AB0000 		.long	0xabb8
 8783 0b4d 00       		.byte	0
 8784 0b4e 0A       		.uleb128 0xa
 8785 0b4f 00000000 		.long	.LASF87
 8786 0b53 07       		.byte	0x7
 8787 0b54 CB       		.byte	0xcb
 8788 0b55 00000000 		.long	.LASF88
 8789 0b59 610B0000 		.long	0xb61
 8790 0b5d 670B0000 		.long	0xb67
 8791 0b61 08       		.uleb128 0x8
 8792 0b62 B8AB0000 		.long	0xabb8
 8793 0b66 00       		.byte	0
 8794 0b67 0A       		.uleb128 0xa
 8795 0b68 00000000 		.long	.LASF89
 8796 0b6c 07       		.byte	0x7
 8797 0b6d CF       		.byte	0xcf
 8798 0b6e 00000000 		.long	.LASF90
 8799 0b72 7A0B0000 		.long	0xb7a
 8800 0b76 850B0000 		.long	0xb85
 8801 0b7a 08       		.uleb128 0x8
 8802 0b7b B8AB0000 		.long	0xabb8
 8803 0b7f 09       		.uleb128 0x9
 8804 0b80 090A0000 		.long	0xa09
 8805 0b84 00       		.byte	0
 8806 0b85 0B       		.uleb128 0xb
 8807 0b86 00000000 		.long	.LASF91
 8808 0b8a 07       		.byte	0x7
 8809 0b8b DE       		.byte	0xde
 8810 0b8c 00000000 		.long	.LASF92
 8811 0b90 289D0000 		.long	0x9d28
 8812 0b94 9C0B0000 		.long	0xb9c
 8813 0b98 A20B0000 		.long	0xba2
 8814 0b9c 08       		.uleb128 0x8
 8815 0b9d B8AB0000 		.long	0xabb8
 8816 0ba1 00       		.byte	0
 8817 0ba2 0B       		.uleb128 0xb
 8818 0ba3 00000000 		.long	.LASF93
 8819 0ba7 07       		.byte	0x7
 8820 0ba8 E2       		.byte	0xe2
 8821 0ba9 00000000 		.long	.LASF94
 8822 0bad 289D0000 		.long	0x9d28
 8823 0bb1 B90B0000 		.long	0xbb9
 8824 0bb5 C90B0000 		.long	0xbc9
 8825 0bb9 08       		.uleb128 0x8
 8826 0bba B8AB0000 		.long	0xabb8
 8827 0bbe 09       		.uleb128 0x9
 8828 0bbf 2DA30000 		.long	0xa32d
 8829 0bc3 09       		.uleb128 0x9
 8830 0bc4 2DA30000 		.long	0xa32d
 8831 0bc8 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 457


 8832 0bc9 1E       		.uleb128 0x1e
 8833 0bca 00000000 		.long	.LASF95
 8834 0bce 25       		.byte	0x25
 8835 0bcf 2102     		.value	0x221
 8836 0bd1 00000000 		.long	.LASF96
 8837 0bd5 B8AB0000 		.long	0xabb8
 8838 0bd9 ED0B0000 		.long	0xbed
 8839 0bdd 09       		.uleb128 0x9
 8840 0bde 090A0000 		.long	0xa09
 8841 0be2 09       		.uleb128 0x9
 8842 0be3 090A0000 		.long	0xa09
 8843 0be7 09       		.uleb128 0x9
 8844 0be8 2DA30000 		.long	0xa32d
 8845 0bec 00       		.byte	0
 8846 0bed 0A       		.uleb128 0xa
 8847 0bee 00000000 		.long	.LASF97
 8848 0bf2 07       		.byte	0x7
 8849 0bf3 ED       		.byte	0xed
 8850 0bf4 00000000 		.long	.LASF98
 8851 0bf8 000C0000 		.long	0xc00
 8852 0bfc 0B0C0000 		.long	0xc0b
 8853 0c00 08       		.uleb128 0x8
 8854 0c01 B8AB0000 		.long	0xabb8
 8855 0c05 09       		.uleb128 0x9
 8856 0c06 2DA30000 		.long	0xa32d
 8857 0c0a 00       		.byte	0
 8858 0c0b 2B       		.uleb128 0x2b
 8859 0c0c 00000000 		.long	.LASF99
 8860 0c10 25       		.byte	0x25
 8861 0c11 BC01     		.value	0x1bc
 8862 0c13 00000000 		.long	.LASF100
 8863 0c17 1F0C0000 		.long	0xc1f
 8864 0c1b 2A0C0000 		.long	0xc2a
 8865 0c1f 08       		.uleb128 0x8
 8866 0c20 B8AB0000 		.long	0xabb8
 8867 0c24 09       		.uleb128 0x9
 8868 0c25 2DA30000 		.long	0xa32d
 8869 0c29 00       		.byte	0
 8870 0c2a 2C       		.uleb128 0x2c
 8871 0c2b 00000000 		.long	.LASF101
 8872 0c2f 07       		.byte	0x7
 8873 0c30 0201     		.value	0x102
 8874 0c32 00000000 		.long	.LASF105
 8875 0c36 289D0000 		.long	0x9d28
 8876 0c3a 420C0000 		.long	0xc42
 8877 0c3e 480C0000 		.long	0xc48
 8878 0c42 08       		.uleb128 0x8
 8879 0c43 B8AB0000 		.long	0xabb8
 8880 0c47 00       		.byte	0
 8881 0c48 2D       		.uleb128 0x2d
 8882 0c49 00000000 		.long	.LASF102
 8883 0c4d 25       		.byte	0x25
 8884 0c4e 6F02     		.value	0x26f
 8885 0c50 00000000 		.long	.LASF103
 8886 0c54 289D0000 		.long	0x9d28
 8887 0c58 5C0C0000 		.long	0xc5c
 8888 0c5c 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 458


 8889 0c5d B8AB0000 		.long	0xabb8
 8890 0c61 09       		.uleb128 0x9
 8891 0c62 2DA30000 		.long	0xa32d
 8892 0c66 09       		.uleb128 0x9
 8893 0c67 090A0000 		.long	0xa09
 8894 0c6b 00       		.byte	0
 8895 0c6c 00       		.byte	0
 8896 0c6d 2C       		.uleb128 0x2c
 8897 0c6e 00000000 		.long	.LASF104
 8898 0c72 07       		.byte	0x7
 8899 0c73 2401     		.value	0x124
 8900 0c75 00000000 		.long	.LASF106
 8901 0c79 289D0000 		.long	0x9d28
 8902 0c7d 850C0000 		.long	0xc85
 8903 0c81 8B0C0000 		.long	0xc8b
 8904 0c85 08       		.uleb128 0x8
 8905 0c86 ACAB0000 		.long	0xabac
 8906 0c8a 00       		.byte	0
 8907 0c8b 2C       		.uleb128 0x2c
 8908 0c8c 00000000 		.long	.LASF104
 8909 0c90 07       		.byte	0x7
 8910 0c91 2801     		.value	0x128
 8911 0c93 00000000 		.long	.LASF107
 8912 0c97 289D0000 		.long	0x9d28
 8913 0c9b A30C0000 		.long	0xca3
 8914 0c9f AE0C0000 		.long	0xcae
 8915 0ca3 08       		.uleb128 0x8
 8916 0ca4 B2AB0000 		.long	0xabb2
 8917 0ca8 09       		.uleb128 0x9
 8918 0ca9 289D0000 		.long	0x9d28
 8919 0cad 00       		.byte	0
 8920 0cae 2C       		.uleb128 0x2c
 8921 0caf 00000000 		.long	.LASF108
 8922 0cb3 07       		.byte	0x7
 8923 0cb4 2C01     		.value	0x12c
 8924 0cb6 00000000 		.long	.LASF109
 8925 0cba B8AB0000 		.long	0xabb8
 8926 0cbe C60C0000 		.long	0xcc6
 8927 0cc2 CC0C0000 		.long	0xccc
 8928 0cc6 08       		.uleb128 0x8
 8929 0cc7 ACAB0000 		.long	0xabac
 8930 0ccb 00       		.byte	0
 8931 0ccc 2C       		.uleb128 0x2c
 8932 0ccd 00000000 		.long	.LASF110
 8933 0cd1 07       		.byte	0x7
 8934 0cd2 3201     		.value	0x132
 8935 0cd4 00000000 		.long	.LASF111
 8936 0cd8 580A0000 		.long	0xa58
 8937 0cdc E40C0000 		.long	0xce4
 8938 0ce0 EA0C0000 		.long	0xcea
 8939 0ce4 08       		.uleb128 0x8
 8940 0ce5 ACAB0000 		.long	0xabac
 8941 0ce9 00       		.byte	0
 8942 0cea 2C       		.uleb128 0x2c
 8943 0ceb 00000000 		.long	.LASF112
 8944 0cef 07       		.byte	0x7
 8945 0cf0 3601     		.value	0x136
GAS LISTING /tmp/ccmMnd7l.s 			page 459


 8946 0cf2 00000000 		.long	.LASF113
 8947 0cf6 580A0000 		.long	0xa58
 8948 0cfa 020D0000 		.long	0xd02
 8949 0cfe 080D0000 		.long	0xd08
 8950 0d02 08       		.uleb128 0x8
 8951 0d03 ACAB0000 		.long	0xabac
 8952 0d07 00       		.byte	0
 8953 0d08 2B       		.uleb128 0x2b
 8954 0d09 00000000 		.long	.LASF114
 8955 0d0d 07       		.byte	0x7
 8956 0d0e 3A01     		.value	0x13a
 8957 0d10 00000000 		.long	.LASF115
 8958 0d14 1C0D0000 		.long	0xd1c
 8959 0d18 220D0000 		.long	0xd22
 8960 0d1c 08       		.uleb128 0x8
 8961 0d1d B2AB0000 		.long	0xabb2
 8962 0d21 00       		.byte	0
 8963 0d22 2C       		.uleb128 0x2c
 8964 0d23 00000000 		.long	.LASF116
 8965 0d27 07       		.byte	0x7
 8966 0d28 4101     		.value	0x141
 8967 0d2a 00000000 		.long	.LASF117
 8968 0d2e 090A0000 		.long	0xa09
 8969 0d32 3A0D0000 		.long	0xd3a
 8970 0d36 4A0D0000 		.long	0xd4a
 8971 0d3a 08       		.uleb128 0x8
 8972 0d3b ACAB0000 		.long	0xabac
 8973 0d3f 09       		.uleb128 0x9
 8974 0d40 090A0000 		.long	0xa09
 8975 0d44 09       		.uleb128 0x9
 8976 0d45 069A0000 		.long	0x9a06
 8977 0d49 00       		.byte	0
 8978 0d4a 2B       		.uleb128 0x2b
 8979 0d4b 00000000 		.long	.LASF118
 8980 0d4f 07       		.byte	0x7
 8981 0d50 4B01     		.value	0x14b
 8982 0d52 00000000 		.long	.LASF119
 8983 0d56 5E0D0000 		.long	0xd5e
 8984 0d5a 730D0000 		.long	0xd73
 8985 0d5e 08       		.uleb128 0x8
 8986 0d5f ACAB0000 		.long	0xabac
 8987 0d63 09       		.uleb128 0x9
 8988 0d64 090A0000 		.long	0xa09
 8989 0d68 09       		.uleb128 0x9
 8990 0d69 090A0000 		.long	0xa09
 8991 0d6d 09       		.uleb128 0x9
 8992 0d6e 069A0000 		.long	0x9a06
 8993 0d72 00       		.byte	0
 8994 0d73 2C       		.uleb128 0x2c
 8995 0d74 00000000 		.long	.LASF120
 8996 0d78 07       		.byte	0x7
 8997 0d79 5301     		.value	0x153
 8998 0d7b 00000000 		.long	.LASF121
 8999 0d7f 090A0000 		.long	0xa09
 9000 0d83 8B0D0000 		.long	0xd8b
 9001 0d87 9B0D0000 		.long	0xd9b
 9002 0d8b 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 460


 9003 0d8c ACAB0000 		.long	0xabac
 9004 0d90 09       		.uleb128 0x9
 9005 0d91 090A0000 		.long	0xa09
 9006 0d95 09       		.uleb128 0x9
 9007 0d96 090A0000 		.long	0xa09
 9008 0d9a 00       		.byte	0
 9009 0d9b 2C       		.uleb128 0x2c
 9010 0d9c 00000000 		.long	.LASF122
 9011 0da0 07       		.byte	0x7
 9012 0da1 5B01     		.value	0x15b
 9013 0da3 00000000 		.long	.LASF123
 9014 0da7 E0800000 		.long	0x80e0
 9015 0dab B30D0000 		.long	0xdb3
 9016 0daf BE0D0000 		.long	0xdbe
 9017 0db3 08       		.uleb128 0x8
 9018 0db4 ACAB0000 		.long	0xabac
 9019 0db8 09       		.uleb128 0x9
 9020 0db9 069A0000 		.long	0x9a06
 9021 0dbd 00       		.byte	0
 9022 0dbe 2E       		.uleb128 0x2e
 9023 0dbf 00000000 		.long	.LASF124
 9024 0dc3 07       		.byte	0x7
 9025 0dc4 6401     		.value	0x164
 9026 0dc6 00000000 		.long	.LASF126
 9027 0dca DE0D0000 		.long	0xdde
 9028 0dce 09       		.uleb128 0x9
 9029 0dcf 289D0000 		.long	0x9d28
 9030 0dd3 09       		.uleb128 0x9
 9031 0dd4 069A0000 		.long	0x9a06
 9032 0dd8 09       		.uleb128 0x9
 9033 0dd9 090A0000 		.long	0xa09
 9034 0ddd 00       		.byte	0
 9035 0dde 2E       		.uleb128 0x2e
 9036 0ddf 00000000 		.long	.LASF127
 9037 0de3 07       		.byte	0x7
 9038 0de4 6D01     		.value	0x16d
 9039 0de6 00000000 		.long	.LASF128
 9040 0dea FE0D0000 		.long	0xdfe
 9041 0dee 09       		.uleb128 0x9
 9042 0def 289D0000 		.long	0x9d28
 9043 0df3 09       		.uleb128 0x9
 9044 0df4 069A0000 		.long	0x9a06
 9045 0df8 09       		.uleb128 0x9
 9046 0df9 090A0000 		.long	0xa09
 9047 0dfd 00       		.byte	0
 9048 0dfe 2E       		.uleb128 0x2e
 9049 0dff 00000000 		.long	.LASF129
 9050 0e03 07       		.byte	0x7
 9051 0e04 7601     		.value	0x176
 9052 0e06 00000000 		.long	.LASF130
 9053 0e0a 1E0E0000 		.long	0xe1e
 9054 0e0e 09       		.uleb128 0x9
 9055 0e0f 289D0000 		.long	0x9d28
 9056 0e13 09       		.uleb128 0x9
 9057 0e14 090A0000 		.long	0xa09
 9058 0e18 09       		.uleb128 0x9
 9059 0e19 E4990000 		.long	0x99e4
GAS LISTING /tmp/ccmMnd7l.s 			page 461


 9060 0e1d 00       		.byte	0
 9061 0e1e 2E       		.uleb128 0x2e
 9062 0e1f 00000000 		.long	.LASF131
 9063 0e23 07       		.byte	0x7
 9064 0e24 8A01     		.value	0x18a
 9065 0e26 00000000 		.long	.LASF132
 9066 0e2a 3E0E0000 		.long	0xe3e
 9067 0e2e 09       		.uleb128 0x9
 9068 0e2f 289D0000 		.long	0x9d28
 9069 0e33 09       		.uleb128 0x9
 9070 0e34 580A0000 		.long	0xa58
 9071 0e38 09       		.uleb128 0x9
 9072 0e39 580A0000 		.long	0xa58
 9073 0e3d 00       		.byte	0
 9074 0e3e 2E       		.uleb128 0x2e
 9075 0e3f 00000000 		.long	.LASF131
 9076 0e43 07       		.byte	0x7
 9077 0e44 8E01     		.value	0x18e
 9078 0e46 00000000 		.long	.LASF133
 9079 0e4a 5E0E0000 		.long	0xe5e
 9080 0e4e 09       		.uleb128 0x9
 9081 0e4f 289D0000 		.long	0x9d28
 9082 0e53 09       		.uleb128 0x9
 9083 0e54 640A0000 		.long	0xa64
 9084 0e58 09       		.uleb128 0x9
 9085 0e59 640A0000 		.long	0xa64
 9086 0e5d 00       		.byte	0
 9087 0e5e 2E       		.uleb128 0x2e
 9088 0e5f 00000000 		.long	.LASF131
 9089 0e63 07       		.byte	0x7
 9090 0e64 9301     		.value	0x193
 9091 0e66 00000000 		.long	.LASF134
 9092 0e6a 7E0E0000 		.long	0xe7e
 9093 0e6e 09       		.uleb128 0x9
 9094 0e6f 289D0000 		.long	0x9d28
 9095 0e73 09       		.uleb128 0x9
 9096 0e74 289D0000 		.long	0x9d28
 9097 0e78 09       		.uleb128 0x9
 9098 0e79 289D0000 		.long	0x9d28
 9099 0e7d 00       		.byte	0
 9100 0e7e 2E       		.uleb128 0x2e
 9101 0e7f 00000000 		.long	.LASF131
 9102 0e83 07       		.byte	0x7
 9103 0e84 9701     		.value	0x197
 9104 0e86 00000000 		.long	.LASF135
 9105 0e8a 9E0E0000 		.long	0xe9e
 9106 0e8e 09       		.uleb128 0x9
 9107 0e8f 289D0000 		.long	0x9d28
 9108 0e93 09       		.uleb128 0x9
 9109 0e94 069A0000 		.long	0x9a06
 9110 0e98 09       		.uleb128 0x9
 9111 0e99 069A0000 		.long	0x9a06
 9112 0e9d 00       		.byte	0
 9113 0e9e 1E       		.uleb128 0x1e
 9114 0e9f 00000000 		.long	.LASF136
 9115 0ea3 07       		.byte	0x7
 9116 0ea4 9C01     		.value	0x19c
GAS LISTING /tmp/ccmMnd7l.s 			page 462


 9117 0ea6 00000000 		.long	.LASF137
 9118 0eaa D8800000 		.long	0x80d8
 9119 0eae BD0E0000 		.long	0xebd
 9120 0eb2 09       		.uleb128 0x9
 9121 0eb3 090A0000 		.long	0xa09
 9122 0eb7 09       		.uleb128 0x9
 9123 0eb8 090A0000 		.long	0xa09
 9124 0ebc 00       		.byte	0
 9125 0ebd 2B       		.uleb128 0x2b
 9126 0ebe 00000000 		.long	.LASF138
 9127 0ec2 07       		.byte	0x7
 9128 0ec3 A901     		.value	0x1a9
 9129 0ec5 00000000 		.long	.LASF139
 9130 0ec9 D10E0000 		.long	0xed1
 9131 0ecd E60E0000 		.long	0xee6
 9132 0ed1 08       		.uleb128 0x8
 9133 0ed2 B2AB0000 		.long	0xabb2
 9134 0ed6 09       		.uleb128 0x9
 9135 0ed7 090A0000 		.long	0xa09
 9136 0edb 09       		.uleb128 0x9
 9137 0edc 090A0000 		.long	0xa09
 9138 0ee0 09       		.uleb128 0x9
 9139 0ee1 090A0000 		.long	0xa09
 9140 0ee5 00       		.byte	0
 9141 0ee6 2B       		.uleb128 0x2b
 9142 0ee7 00000000 		.long	.LASF140
 9143 0eeb 07       		.byte	0x7
 9144 0eec AC01     		.value	0x1ac
 9145 0eee 00000000 		.long	.LASF141
 9146 0ef2 FA0E0000 		.long	0xefa
 9147 0ef6 000F0000 		.long	0xf00
 9148 0efa 08       		.uleb128 0x8
 9149 0efb B2AB0000 		.long	0xabb2
 9150 0eff 00       		.byte	0
 9151 0f00 2F       		.uleb128 0x2f
 9152 0f01 00000000 		.long	.LASF80
 9153 0f05 07       		.byte	0x7
 9154 0f06 AF01     		.value	0x1af
 9155 0f08 00000000 		.long	.LASF1665
 9156 0f0c BEAB0000 		.long	0xabbe
 9157 0f10 30       		.uleb128 0x30
 9158 0f11 00000000 		.long	.LASF142
 9159 0f15 07       		.byte	0x7
 9160 0f16 BA01     		.value	0x1ba
 9161 0f18 01       		.byte	0x1
 9162 0f19 210F0000 		.long	0xf21
 9163 0f1d 270F0000 		.long	0xf27
 9164 0f21 08       		.uleb128 0x8
 9165 0f22 B2AB0000 		.long	0xabb2
 9166 0f26 00       		.byte	0
 9167 0f27 31       		.uleb128 0x31
 9168 0f28 00000000 		.long	.LASF142
 9169 0f2c 07       		.byte	0x7
 9170 0f2d C501     		.value	0x1c5
 9171 0f2f 01       		.byte	0x1
 9172 0f30 380F0000 		.long	0xf38
 9173 0f34 430F0000 		.long	0xf43
GAS LISTING /tmp/ccmMnd7l.s 			page 463


 9174 0f38 08       		.uleb128 0x8
 9175 0f39 B2AB0000 		.long	0xabb2
 9176 0f3d 09       		.uleb128 0x9
 9177 0f3e 2DA30000 		.long	0xa32d
 9178 0f42 00       		.byte	0
 9179 0f43 30       		.uleb128 0x30
 9180 0f44 00000000 		.long	.LASF142
 9181 0f48 07       		.byte	0x7
 9182 0f49 CC01     		.value	0x1cc
 9183 0f4b 01       		.byte	0x1
 9184 0f4c 540F0000 		.long	0xf54
 9185 0f50 5F0F0000 		.long	0xf5f
 9186 0f54 08       		.uleb128 0x8
 9187 0f55 B2AB0000 		.long	0xabb2
 9188 0f59 09       		.uleb128 0x9
 9189 0f5a C4AB0000 		.long	0xabc4
 9190 0f5e 00       		.byte	0
 9191 0f5f 30       		.uleb128 0x30
 9192 0f60 00000000 		.long	.LASF142
 9193 0f64 07       		.byte	0x7
 9194 0f65 D301     		.value	0x1d3
 9195 0f67 01       		.byte	0x1
 9196 0f68 700F0000 		.long	0xf70
 9197 0f6c 850F0000 		.long	0xf85
 9198 0f70 08       		.uleb128 0x8
 9199 0f71 B2AB0000 		.long	0xabb2
 9200 0f75 09       		.uleb128 0x9
 9201 0f76 C4AB0000 		.long	0xabc4
 9202 0f7a 09       		.uleb128 0x9
 9203 0f7b 090A0000 		.long	0xa09
 9204 0f7f 09       		.uleb128 0x9
 9205 0f80 090A0000 		.long	0xa09
 9206 0f84 00       		.byte	0
 9207 0f85 30       		.uleb128 0x30
 9208 0f86 00000000 		.long	.LASF142
 9209 0f8a 07       		.byte	0x7
 9210 0f8b DC01     		.value	0x1dc
 9211 0f8d 01       		.byte	0x1
 9212 0f8e 960F0000 		.long	0xf96
 9213 0f92 B00F0000 		.long	0xfb0
 9214 0f96 08       		.uleb128 0x8
 9215 0f97 B2AB0000 		.long	0xabb2
 9216 0f9b 09       		.uleb128 0x9
 9217 0f9c C4AB0000 		.long	0xabc4
 9218 0fa0 09       		.uleb128 0x9
 9219 0fa1 090A0000 		.long	0xa09
 9220 0fa5 09       		.uleb128 0x9
 9221 0fa6 090A0000 		.long	0xa09
 9222 0faa 09       		.uleb128 0x9
 9223 0fab 2DA30000 		.long	0xa32d
 9224 0faf 00       		.byte	0
 9225 0fb0 30       		.uleb128 0x30
 9226 0fb1 00000000 		.long	.LASF142
 9227 0fb5 07       		.byte	0x7
 9228 0fb6 E801     		.value	0x1e8
 9229 0fb8 01       		.byte	0x1
 9230 0fb9 C10F0000 		.long	0xfc1
GAS LISTING /tmp/ccmMnd7l.s 			page 464


 9231 0fbd D60F0000 		.long	0xfd6
 9232 0fc1 08       		.uleb128 0x8
 9233 0fc2 B2AB0000 		.long	0xabb2
 9234 0fc6 09       		.uleb128 0x9
 9235 0fc7 069A0000 		.long	0x9a06
 9236 0fcb 09       		.uleb128 0x9
 9237 0fcc 090A0000 		.long	0xa09
 9238 0fd0 09       		.uleb128 0x9
 9239 0fd1 2DA30000 		.long	0xa32d
 9240 0fd5 00       		.byte	0
 9241 0fd6 30       		.uleb128 0x30
 9242 0fd7 00000000 		.long	.LASF142
 9243 0fdb 07       		.byte	0x7
 9244 0fdc EF01     		.value	0x1ef
 9245 0fde 01       		.byte	0x1
 9246 0fdf E70F0000 		.long	0xfe7
 9247 0fe3 F70F0000 		.long	0xff7
 9248 0fe7 08       		.uleb128 0x8
 9249 0fe8 B2AB0000 		.long	0xabb2
 9250 0fec 09       		.uleb128 0x9
 9251 0fed 069A0000 		.long	0x9a06
 9252 0ff1 09       		.uleb128 0x9
 9253 0ff2 2DA30000 		.long	0xa32d
 9254 0ff6 00       		.byte	0
 9255 0ff7 30       		.uleb128 0x30
 9256 0ff8 00000000 		.long	.LASF142
 9257 0ffc 07       		.byte	0x7
 9258 0ffd F601     		.value	0x1f6
 9259 0fff 01       		.byte	0x1
 9260 1000 08100000 		.long	0x1008
 9261 1004 1D100000 		.long	0x101d
 9262 1008 08       		.uleb128 0x8
 9263 1009 B2AB0000 		.long	0xabb2
 9264 100d 09       		.uleb128 0x9
 9265 100e 090A0000 		.long	0xa09
 9266 1012 09       		.uleb128 0x9
 9267 1013 E4990000 		.long	0x99e4
 9268 1017 09       		.uleb128 0x9
 9269 1018 2DA30000 		.long	0xa32d
 9270 101c 00       		.byte	0
 9271 101d 30       		.uleb128 0x30
 9272 101e 00000000 		.long	.LASF142
 9273 1022 07       		.byte	0x7
 9274 1023 0002     		.value	0x200
 9275 1025 01       		.byte	0x1
 9276 1026 2E100000 		.long	0x102e
 9277 102a 39100000 		.long	0x1039
 9278 102e 08       		.uleb128 0x8
 9279 102f B2AB0000 		.long	0xabb2
 9280 1033 09       		.uleb128 0x9
 9281 1034 CAAB0000 		.long	0xabca
 9282 1038 00       		.byte	0
 9283 1039 30       		.uleb128 0x30
 9284 103a 00000000 		.long	.LASF142
 9285 103e 07       		.byte	0x7
 9286 103f 1202     		.value	0x212
 9287 1041 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 465


 9288 1042 4A100000 		.long	0x104a
 9289 1046 5A100000 		.long	0x105a
 9290 104a 08       		.uleb128 0x8
 9291 104b B2AB0000 		.long	0xabb2
 9292 104f 09       		.uleb128 0x9
 9293 1050 DF220000 		.long	0x22df
 9294 1054 09       		.uleb128 0x9
 9295 1055 2DA30000 		.long	0xa32d
 9296 1059 00       		.byte	0
 9297 105a 30       		.uleb128 0x30
 9298 105b 00000000 		.long	.LASF143
 9299 105f 07       		.byte	0x7
 9300 1060 2202     		.value	0x222
 9301 1062 01       		.byte	0x1
 9302 1063 6B100000 		.long	0x106b
 9303 1067 76100000 		.long	0x1076
 9304 106b 08       		.uleb128 0x8
 9305 106c B2AB0000 		.long	0xabb2
 9306 1070 08       		.uleb128 0x8
 9307 1071 D8800000 		.long	0x80d8
 9308 1075 00       		.byte	0
 9309 1076 32       		.uleb128 0x32
 9310 1077 00000000 		.long	.LASF8
 9311 107b 07       		.byte	0x7
 9312 107c 2A02     		.value	0x22a
 9313 107e 00000000 		.long	.LASF144
 9314 1082 D1AB0000 		.long	0xabd1
 9315 1086 01       		.byte	0x1
 9316 1087 8F100000 		.long	0x108f
 9317 108b 9A100000 		.long	0x109a
 9318 108f 08       		.uleb128 0x8
 9319 1090 B2AB0000 		.long	0xabb2
 9320 1094 09       		.uleb128 0x9
 9321 1095 C4AB0000 		.long	0xabc4
 9322 1099 00       		.byte	0
 9323 109a 32       		.uleb128 0x32
 9324 109b 00000000 		.long	.LASF8
 9325 109f 07       		.byte	0x7
 9326 10a0 3202     		.value	0x232
 9327 10a2 00000000 		.long	.LASF145
 9328 10a6 D1AB0000 		.long	0xabd1
 9329 10aa 01       		.byte	0x1
 9330 10ab B3100000 		.long	0x10b3
 9331 10af BE100000 		.long	0x10be
 9332 10b3 08       		.uleb128 0x8
 9333 10b4 B2AB0000 		.long	0xabb2
 9334 10b8 09       		.uleb128 0x9
 9335 10b9 069A0000 		.long	0x9a06
 9336 10bd 00       		.byte	0
 9337 10be 32       		.uleb128 0x32
 9338 10bf 00000000 		.long	.LASF8
 9339 10c3 07       		.byte	0x7
 9340 10c4 3D02     		.value	0x23d
 9341 10c6 00000000 		.long	.LASF146
 9342 10ca D1AB0000 		.long	0xabd1
 9343 10ce 01       		.byte	0x1
 9344 10cf D7100000 		.long	0x10d7
GAS LISTING /tmp/ccmMnd7l.s 			page 466


 9345 10d3 E2100000 		.long	0x10e2
 9346 10d7 08       		.uleb128 0x8
 9347 10d8 B2AB0000 		.long	0xabb2
 9348 10dc 09       		.uleb128 0x9
 9349 10dd E4990000 		.long	0x99e4
 9350 10e1 00       		.byte	0
 9351 10e2 32       		.uleb128 0x32
 9352 10e3 00000000 		.long	.LASF8
 9353 10e7 07       		.byte	0x7
 9354 10e8 4D02     		.value	0x24d
 9355 10ea 00000000 		.long	.LASF147
 9356 10ee D1AB0000 		.long	0xabd1
 9357 10f2 01       		.byte	0x1
 9358 10f3 FB100000 		.long	0x10fb
 9359 10f7 06110000 		.long	0x1106
 9360 10fb 08       		.uleb128 0x8
 9361 10fc B2AB0000 		.long	0xabb2
 9362 1100 09       		.uleb128 0x9
 9363 1101 CAAB0000 		.long	0xabca
 9364 1105 00       		.byte	0
 9365 1106 32       		.uleb128 0x32
 9366 1107 00000000 		.long	.LASF8
 9367 110b 07       		.byte	0x7
 9368 110c 5902     		.value	0x259
 9369 110e 00000000 		.long	.LASF148
 9370 1112 D1AB0000 		.long	0xabd1
 9371 1116 01       		.byte	0x1
 9372 1117 1F110000 		.long	0x111f
 9373 111b 2A110000 		.long	0x112a
 9374 111f 08       		.uleb128 0x8
 9375 1120 B2AB0000 		.long	0xabb2
 9376 1124 09       		.uleb128 0x9
 9377 1125 DF220000 		.long	0x22df
 9378 1129 00       		.byte	0
 9379 112a 32       		.uleb128 0x32
 9380 112b 00000000 		.long	.LASF149
 9381 112f 07       		.byte	0x7
 9382 1130 6602     		.value	0x266
 9383 1132 00000000 		.long	.LASF150
 9384 1136 580A0000 		.long	0xa58
 9385 113a 01       		.byte	0x1
 9386 113b 43110000 		.long	0x1143
 9387 113f 49110000 		.long	0x1149
 9388 1143 08       		.uleb128 0x8
 9389 1144 B2AB0000 		.long	0xabb2
 9390 1148 00       		.byte	0
 9391 1149 32       		.uleb128 0x32
 9392 114a 00000000 		.long	.LASF149
 9393 114e 07       		.byte	0x7
 9394 114f 7102     		.value	0x271
 9395 1151 00000000 		.long	.LASF151
 9396 1155 640A0000 		.long	0xa64
 9397 1159 01       		.byte	0x1
 9398 115a 62110000 		.long	0x1162
 9399 115e 68110000 		.long	0x1168
 9400 1162 08       		.uleb128 0x8
 9401 1163 ACAB0000 		.long	0xabac
GAS LISTING /tmp/ccmMnd7l.s 			page 467


 9402 1167 00       		.byte	0
 9403 1168 33       		.uleb128 0x33
 9404 1169 656E6400 		.string	"end"
 9405 116d 07       		.byte	0x7
 9406 116e 7902     		.value	0x279
 9407 1170 00000000 		.long	.LASF152
 9408 1174 580A0000 		.long	0xa58
 9409 1178 01       		.byte	0x1
 9410 1179 81110000 		.long	0x1181
 9411 117d 87110000 		.long	0x1187
 9412 1181 08       		.uleb128 0x8
 9413 1182 B2AB0000 		.long	0xabb2
 9414 1186 00       		.byte	0
 9415 1187 33       		.uleb128 0x33
 9416 1188 656E6400 		.string	"end"
 9417 118c 07       		.byte	0x7
 9418 118d 8402     		.value	0x284
 9419 118f 00000000 		.long	.LASF153
 9420 1193 640A0000 		.long	0xa64
 9421 1197 01       		.byte	0x1
 9422 1198 A0110000 		.long	0x11a0
 9423 119c A6110000 		.long	0x11a6
 9424 11a0 08       		.uleb128 0x8
 9425 11a1 ACAB0000 		.long	0xabac
 9426 11a5 00       		.byte	0
 9427 11a6 32       		.uleb128 0x32
 9428 11a7 00000000 		.long	.LASF154
 9429 11ab 07       		.byte	0x7
 9430 11ac 8D02     		.value	0x28d
 9431 11ae 00000000 		.long	.LASF155
 9432 11b2 7C0A0000 		.long	0xa7c
 9433 11b6 01       		.byte	0x1
 9434 11b7 BF110000 		.long	0x11bf
 9435 11bb C5110000 		.long	0x11c5
 9436 11bf 08       		.uleb128 0x8
 9437 11c0 B2AB0000 		.long	0xabb2
 9438 11c4 00       		.byte	0
 9439 11c5 32       		.uleb128 0x32
 9440 11c6 00000000 		.long	.LASF154
 9441 11ca 07       		.byte	0x7
 9442 11cb 9602     		.value	0x296
 9443 11cd 00000000 		.long	.LASF156
 9444 11d1 700A0000 		.long	0xa70
 9445 11d5 01       		.byte	0x1
 9446 11d6 DE110000 		.long	0x11de
 9447 11da E4110000 		.long	0x11e4
 9448 11de 08       		.uleb128 0x8
 9449 11df ACAB0000 		.long	0xabac
 9450 11e3 00       		.byte	0
 9451 11e4 32       		.uleb128 0x32
 9452 11e5 00000000 		.long	.LASF157
 9453 11e9 07       		.byte	0x7
 9454 11ea 9F02     		.value	0x29f
 9455 11ec 00000000 		.long	.LASF158
 9456 11f0 7C0A0000 		.long	0xa7c
 9457 11f4 01       		.byte	0x1
 9458 11f5 FD110000 		.long	0x11fd
GAS LISTING /tmp/ccmMnd7l.s 			page 468


 9459 11f9 03120000 		.long	0x1203
 9460 11fd 08       		.uleb128 0x8
 9461 11fe B2AB0000 		.long	0xabb2
 9462 1202 00       		.byte	0
 9463 1203 32       		.uleb128 0x32
 9464 1204 00000000 		.long	.LASF157
 9465 1208 07       		.byte	0x7
 9466 1209 A802     		.value	0x2a8
 9467 120b 00000000 		.long	.LASF159
 9468 120f 700A0000 		.long	0xa70
 9469 1213 01       		.byte	0x1
 9470 1214 1C120000 		.long	0x121c
 9471 1218 22120000 		.long	0x1222
 9472 121c 08       		.uleb128 0x8
 9473 121d ACAB0000 		.long	0xabac
 9474 1221 00       		.byte	0
 9475 1222 32       		.uleb128 0x32
 9476 1223 00000000 		.long	.LASF160
 9477 1227 07       		.byte	0x7
 9478 1228 B102     		.value	0x2b1
 9479 122a 00000000 		.long	.LASF161
 9480 122e 640A0000 		.long	0xa64
 9481 1232 01       		.byte	0x1
 9482 1233 3B120000 		.long	0x123b
 9483 1237 41120000 		.long	0x1241
 9484 123b 08       		.uleb128 0x8
 9485 123c ACAB0000 		.long	0xabac
 9486 1240 00       		.byte	0
 9487 1241 32       		.uleb128 0x32
 9488 1242 00000000 		.long	.LASF162
 9489 1246 07       		.byte	0x7
 9490 1247 B902     		.value	0x2b9
 9491 1249 00000000 		.long	.LASF163
 9492 124d 640A0000 		.long	0xa64
 9493 1251 01       		.byte	0x1
 9494 1252 5A120000 		.long	0x125a
 9495 1256 60120000 		.long	0x1260
 9496 125a 08       		.uleb128 0x8
 9497 125b ACAB0000 		.long	0xabac
 9498 125f 00       		.byte	0
 9499 1260 32       		.uleb128 0x32
 9500 1261 00000000 		.long	.LASF164
 9501 1265 07       		.byte	0x7
 9502 1266 C202     		.value	0x2c2
 9503 1268 00000000 		.long	.LASF165
 9504 126c 700A0000 		.long	0xa70
 9505 1270 01       		.byte	0x1
 9506 1271 79120000 		.long	0x1279
 9507 1275 7F120000 		.long	0x127f
 9508 1279 08       		.uleb128 0x8
 9509 127a ACAB0000 		.long	0xabac
 9510 127e 00       		.byte	0
 9511 127f 32       		.uleb128 0x32
 9512 1280 00000000 		.long	.LASF166
 9513 1284 07       		.byte	0x7
 9514 1285 CB02     		.value	0x2cb
 9515 1287 00000000 		.long	.LASF167
GAS LISTING /tmp/ccmMnd7l.s 			page 469


 9516 128b 700A0000 		.long	0xa70
 9517 128f 01       		.byte	0x1
 9518 1290 98120000 		.long	0x1298
 9519 1294 9E120000 		.long	0x129e
 9520 1298 08       		.uleb128 0x8
 9521 1299 ACAB0000 		.long	0xabac
 9522 129d 00       		.byte	0
 9523 129e 32       		.uleb128 0x32
 9524 129f 00000000 		.long	.LASF168
 9525 12a3 07       		.byte	0x7
 9526 12a4 D402     		.value	0x2d4
 9527 12a6 00000000 		.long	.LASF169
 9528 12aa 090A0000 		.long	0xa09
 9529 12ae 01       		.byte	0x1
 9530 12af B7120000 		.long	0x12b7
 9531 12b3 BD120000 		.long	0x12bd
 9532 12b7 08       		.uleb128 0x8
 9533 12b8 ACAB0000 		.long	0xabac
 9534 12bc 00       		.byte	0
 9535 12bd 32       		.uleb128 0x32
 9536 12be 00000000 		.long	.LASF35
 9537 12c2 07       		.byte	0x7
 9538 12c3 DA02     		.value	0x2da
 9539 12c5 00000000 		.long	.LASF170
 9540 12c9 090A0000 		.long	0xa09
 9541 12cd 01       		.byte	0x1
 9542 12ce D6120000 		.long	0x12d6
 9543 12d2 DC120000 		.long	0x12dc
 9544 12d6 08       		.uleb128 0x8
 9545 12d7 ACAB0000 		.long	0xabac
 9546 12db 00       		.byte	0
 9547 12dc 32       		.uleb128 0x32
 9548 12dd 00000000 		.long	.LASF171
 9549 12e1 07       		.byte	0x7
 9550 12e2 DF02     		.value	0x2df
 9551 12e4 00000000 		.long	.LASF172
 9552 12e8 090A0000 		.long	0xa09
 9553 12ec 01       		.byte	0x1
 9554 12ed F5120000 		.long	0x12f5
 9555 12f1 FB120000 		.long	0x12fb
 9556 12f5 08       		.uleb128 0x8
 9557 12f6 ACAB0000 		.long	0xabac
 9558 12fa 00       		.byte	0
 9559 12fb 34       		.uleb128 0x34
 9560 12fc 00000000 		.long	.LASF173
 9561 1300 07       		.byte	0x7
 9562 1301 ED02     		.value	0x2ed
 9563 1303 00000000 		.long	.LASF174
 9564 1307 01       		.byte	0x1
 9565 1308 10130000 		.long	0x1310
 9566 130c 20130000 		.long	0x1320
 9567 1310 08       		.uleb128 0x8
 9568 1311 B2AB0000 		.long	0xabb2
 9569 1315 09       		.uleb128 0x9
 9570 1316 090A0000 		.long	0xa09
 9571 131a 09       		.uleb128 0x9
 9572 131b E4990000 		.long	0x99e4
GAS LISTING /tmp/ccmMnd7l.s 			page 470


 9573 131f 00       		.byte	0
 9574 1320 34       		.uleb128 0x34
 9575 1321 00000000 		.long	.LASF173
 9576 1325 07       		.byte	0x7
 9577 1326 FA02     		.value	0x2fa
 9578 1328 00000000 		.long	.LASF175
 9579 132c 01       		.byte	0x1
 9580 132d 35130000 		.long	0x1335
 9581 1331 40130000 		.long	0x1340
 9582 1335 08       		.uleb128 0x8
 9583 1336 B2AB0000 		.long	0xabb2
 9584 133a 09       		.uleb128 0x9
 9585 133b 090A0000 		.long	0xa09
 9586 133f 00       		.byte	0
 9587 1340 34       		.uleb128 0x34
 9588 1341 00000000 		.long	.LASF176
 9589 1345 07       		.byte	0x7
 9590 1346 0003     		.value	0x300
 9591 1348 00000000 		.long	.LASF177
 9592 134c 01       		.byte	0x1
 9593 134d 55130000 		.long	0x1355
 9594 1351 5B130000 		.long	0x135b
 9595 1355 08       		.uleb128 0x8
 9596 1356 B2AB0000 		.long	0xabb2
 9597 135a 00       		.byte	0
 9598 135b 32       		.uleb128 0x32
 9599 135c 00000000 		.long	.LASF178
 9600 1360 07       		.byte	0x7
 9601 1361 1103     		.value	0x311
 9602 1363 00000000 		.long	.LASF179
 9603 1367 090A0000 		.long	0xa09
 9604 136b 01       		.byte	0x1
 9605 136c 74130000 		.long	0x1374
 9606 1370 7A130000 		.long	0x137a
 9607 1374 08       		.uleb128 0x8
 9608 1375 ACAB0000 		.long	0xabac
 9609 1379 00       		.byte	0
 9610 137a 34       		.uleb128 0x34
 9611 137b 00000000 		.long	.LASF180
 9612 137f 07       		.byte	0x7
 9613 1380 2603     		.value	0x326
 9614 1382 00000000 		.long	.LASF181
 9615 1386 01       		.byte	0x1
 9616 1387 8F130000 		.long	0x138f
 9617 138b 9A130000 		.long	0x139a
 9618 138f 08       		.uleb128 0x8
 9619 1390 B2AB0000 		.long	0xabb2
 9620 1394 09       		.uleb128 0x9
 9621 1395 090A0000 		.long	0xa09
 9622 1399 00       		.byte	0
 9623 139a 34       		.uleb128 0x34
 9624 139b 00000000 		.long	.LASF182
 9625 139f 07       		.byte	0x7
 9626 13a0 2D03     		.value	0x32d
 9627 13a2 00000000 		.long	.LASF183
 9628 13a6 01       		.byte	0x1
 9629 13a7 AF130000 		.long	0x13af
GAS LISTING /tmp/ccmMnd7l.s 			page 471


 9630 13ab B5130000 		.long	0x13b5
 9631 13af 08       		.uleb128 0x8
 9632 13b0 B2AB0000 		.long	0xabb2
 9633 13b4 00       		.byte	0
 9634 13b5 32       		.uleb128 0x32
 9635 13b6 00000000 		.long	.LASF184
 9636 13ba 07       		.byte	0x7
 9637 13bb 3503     		.value	0x335
 9638 13bd 00000000 		.long	.LASF185
 9639 13c1 E0800000 		.long	0x80e0
 9640 13c5 01       		.byte	0x1
 9641 13c6 CE130000 		.long	0x13ce
 9642 13ca D4130000 		.long	0x13d4
 9643 13ce 08       		.uleb128 0x8
 9644 13cf ACAB0000 		.long	0xabac
 9645 13d3 00       		.byte	0
 9646 13d4 32       		.uleb128 0x32
 9647 13d5 00000000 		.long	.LASF186
 9648 13d9 07       		.byte	0x7
 9649 13da 4403     		.value	0x344
 9650 13dc 00000000 		.long	.LASF187
 9651 13e0 4C0A0000 		.long	0xa4c
 9652 13e4 01       		.byte	0x1
 9653 13e5 ED130000 		.long	0x13ed
 9654 13e9 F8130000 		.long	0x13f8
 9655 13ed 08       		.uleb128 0x8
 9656 13ee ACAB0000 		.long	0xabac
 9657 13f2 09       		.uleb128 0x9
 9658 13f3 090A0000 		.long	0xa09
 9659 13f7 00       		.byte	0
 9660 13f8 32       		.uleb128 0x32
 9661 13f9 00000000 		.long	.LASF186
 9662 13fd 07       		.byte	0x7
 9663 13fe 5503     		.value	0x355
 9664 1400 00000000 		.long	.LASF188
 9665 1404 400A0000 		.long	0xa40
 9666 1408 01       		.byte	0x1
 9667 1409 11140000 		.long	0x1411
 9668 140d 1C140000 		.long	0x141c
 9669 1411 08       		.uleb128 0x8
 9670 1412 B2AB0000 		.long	0xabb2
 9671 1416 09       		.uleb128 0x9
 9672 1417 090A0000 		.long	0xa09
 9673 141b 00       		.byte	0
 9674 141c 33       		.uleb128 0x33
 9675 141d 617400   		.string	"at"
 9676 1420 07       		.byte	0x7
 9677 1421 6B03     		.value	0x36b
 9678 1423 00000000 		.long	.LASF189
 9679 1427 4C0A0000 		.long	0xa4c
 9680 142b 01       		.byte	0x1
 9681 142c 34140000 		.long	0x1434
 9682 1430 3F140000 		.long	0x143f
 9683 1434 08       		.uleb128 0x8
 9684 1435 ACAB0000 		.long	0xabac
 9685 1439 09       		.uleb128 0x9
 9686 143a 090A0000 		.long	0xa09
GAS LISTING /tmp/ccmMnd7l.s 			page 472


 9687 143e 00       		.byte	0
 9688 143f 33       		.uleb128 0x33
 9689 1440 617400   		.string	"at"
 9690 1443 07       		.byte	0x7
 9691 1444 8103     		.value	0x381
 9692 1446 00000000 		.long	.LASF190
 9693 144a 400A0000 		.long	0xa40
 9694 144e 01       		.byte	0x1
 9695 144f 57140000 		.long	0x1457
 9696 1453 62140000 		.long	0x1462
 9697 1457 08       		.uleb128 0x8
 9698 1458 B2AB0000 		.long	0xabb2
 9699 145c 09       		.uleb128 0x9
 9700 145d 090A0000 		.long	0xa09
 9701 1461 00       		.byte	0
 9702 1462 32       		.uleb128 0x32
 9703 1463 00000000 		.long	.LASF191
 9704 1467 07       		.byte	0x7
 9705 1468 9203     		.value	0x392
 9706 146a 00000000 		.long	.LASF192
 9707 146e 400A0000 		.long	0xa40
 9708 1472 01       		.byte	0x1
 9709 1473 7B140000 		.long	0x147b
 9710 1477 81140000 		.long	0x1481
 9711 147b 08       		.uleb128 0x8
 9712 147c B2AB0000 		.long	0xabb2
 9713 1480 00       		.byte	0
 9714 1481 32       		.uleb128 0x32
 9715 1482 00000000 		.long	.LASF191
 9716 1486 07       		.byte	0x7
 9717 1487 9A03     		.value	0x39a
 9718 1489 00000000 		.long	.LASF193
 9719 148d 4C0A0000 		.long	0xa4c
 9720 1491 01       		.byte	0x1
 9721 1492 9A140000 		.long	0x149a
 9722 1496 A0140000 		.long	0x14a0
 9723 149a 08       		.uleb128 0x8
 9724 149b ACAB0000 		.long	0xabac
 9725 149f 00       		.byte	0
 9726 14a0 32       		.uleb128 0x32
 9727 14a1 00000000 		.long	.LASF194
 9728 14a5 07       		.byte	0x7
 9729 14a6 A203     		.value	0x3a2
 9730 14a8 00000000 		.long	.LASF195
 9731 14ac 400A0000 		.long	0xa40
 9732 14b0 01       		.byte	0x1
 9733 14b1 B9140000 		.long	0x14b9
 9734 14b5 BF140000 		.long	0x14bf
 9735 14b9 08       		.uleb128 0x8
 9736 14ba B2AB0000 		.long	0xabb2
 9737 14be 00       		.byte	0
 9738 14bf 32       		.uleb128 0x32
 9739 14c0 00000000 		.long	.LASF194
 9740 14c4 07       		.byte	0x7
 9741 14c5 AA03     		.value	0x3aa
 9742 14c7 00000000 		.long	.LASF196
 9743 14cb 4C0A0000 		.long	0xa4c
GAS LISTING /tmp/ccmMnd7l.s 			page 473


 9744 14cf 01       		.byte	0x1
 9745 14d0 D8140000 		.long	0x14d8
 9746 14d4 DE140000 		.long	0x14de
 9747 14d8 08       		.uleb128 0x8
 9748 14d9 ACAB0000 		.long	0xabac
 9749 14dd 00       		.byte	0
 9750 14de 32       		.uleb128 0x32
 9751 14df 00000000 		.long	.LASF197
 9752 14e3 07       		.byte	0x7
 9753 14e4 B503     		.value	0x3b5
 9754 14e6 00000000 		.long	.LASF198
 9755 14ea D1AB0000 		.long	0xabd1
 9756 14ee 01       		.byte	0x1
 9757 14ef F7140000 		.long	0x14f7
 9758 14f3 02150000 		.long	0x1502
 9759 14f7 08       		.uleb128 0x8
 9760 14f8 B2AB0000 		.long	0xabb2
 9761 14fc 09       		.uleb128 0x9
 9762 14fd C4AB0000 		.long	0xabc4
 9763 1501 00       		.byte	0
 9764 1502 32       		.uleb128 0x32
 9765 1503 00000000 		.long	.LASF197
 9766 1507 07       		.byte	0x7
 9767 1508 BE03     		.value	0x3be
 9768 150a 00000000 		.long	.LASF199
 9769 150e D1AB0000 		.long	0xabd1
 9770 1512 01       		.byte	0x1
 9771 1513 1B150000 		.long	0x151b
 9772 1517 26150000 		.long	0x1526
 9773 151b 08       		.uleb128 0x8
 9774 151c B2AB0000 		.long	0xabb2
 9775 1520 09       		.uleb128 0x9
 9776 1521 069A0000 		.long	0x9a06
 9777 1525 00       		.byte	0
 9778 1526 32       		.uleb128 0x32
 9779 1527 00000000 		.long	.LASF197
 9780 152b 07       		.byte	0x7
 9781 152c C703     		.value	0x3c7
 9782 152e 00000000 		.long	.LASF200
 9783 1532 D1AB0000 		.long	0xabd1
 9784 1536 01       		.byte	0x1
 9785 1537 3F150000 		.long	0x153f
 9786 153b 4A150000 		.long	0x154a
 9787 153f 08       		.uleb128 0x8
 9788 1540 B2AB0000 		.long	0xabb2
 9789 1544 09       		.uleb128 0x9
 9790 1545 E4990000 		.long	0x99e4
 9791 1549 00       		.byte	0
 9792 154a 32       		.uleb128 0x32
 9793 154b 00000000 		.long	.LASF197
 9794 154f 07       		.byte	0x7
 9795 1550 D403     		.value	0x3d4
 9796 1552 00000000 		.long	.LASF201
 9797 1556 D1AB0000 		.long	0xabd1
 9798 155a 01       		.byte	0x1
 9799 155b 63150000 		.long	0x1563
 9800 155f 6E150000 		.long	0x156e
GAS LISTING /tmp/ccmMnd7l.s 			page 474


 9801 1563 08       		.uleb128 0x8
 9802 1564 B2AB0000 		.long	0xabb2
 9803 1568 09       		.uleb128 0x9
 9804 1569 DF220000 		.long	0x22df
 9805 156d 00       		.byte	0
 9806 156e 32       		.uleb128 0x32
 9807 156f 00000000 		.long	.LASF202
 9808 1573 07       		.byte	0x7
 9809 1574 DE03     		.value	0x3de
 9810 1576 00000000 		.long	.LASF203
 9811 157a D1AB0000 		.long	0xabd1
 9812 157e 01       		.byte	0x1
 9813 157f 87150000 		.long	0x1587
 9814 1583 92150000 		.long	0x1592
 9815 1587 08       		.uleb128 0x8
 9816 1588 B2AB0000 		.long	0xabb2
 9817 158c 09       		.uleb128 0x9
 9818 158d C4AB0000 		.long	0xabc4
 9819 1591 00       		.byte	0
 9820 1592 32       		.uleb128 0x32
 9821 1593 00000000 		.long	.LASF202
 9822 1597 07       		.byte	0x7
 9823 1598 EE03     		.value	0x3ee
 9824 159a 00000000 		.long	.LASF204
 9825 159e D1AB0000 		.long	0xabd1
 9826 15a2 01       		.byte	0x1
 9827 15a3 AB150000 		.long	0x15ab
 9828 15a7 C0150000 		.long	0x15c0
 9829 15ab 08       		.uleb128 0x8
 9830 15ac B2AB0000 		.long	0xabb2
 9831 15b0 09       		.uleb128 0x9
 9832 15b1 C4AB0000 		.long	0xabc4
 9833 15b5 09       		.uleb128 0x9
 9834 15b6 090A0000 		.long	0xa09
 9835 15ba 09       		.uleb128 0x9
 9836 15bb 090A0000 		.long	0xa09
 9837 15bf 00       		.byte	0
 9838 15c0 32       		.uleb128 0x32
 9839 15c1 00000000 		.long	.LASF202
 9840 15c5 07       		.byte	0x7
 9841 15c6 F703     		.value	0x3f7
 9842 15c8 00000000 		.long	.LASF205
 9843 15cc D1AB0000 		.long	0xabd1
 9844 15d0 01       		.byte	0x1
 9845 15d1 D9150000 		.long	0x15d9
 9846 15d5 E9150000 		.long	0x15e9
 9847 15d9 08       		.uleb128 0x8
 9848 15da B2AB0000 		.long	0xabb2
 9849 15de 09       		.uleb128 0x9
 9850 15df 069A0000 		.long	0x9a06
 9851 15e3 09       		.uleb128 0x9
 9852 15e4 090A0000 		.long	0xa09
 9853 15e8 00       		.byte	0
 9854 15e9 32       		.uleb128 0x32
 9855 15ea 00000000 		.long	.LASF202
 9856 15ee 07       		.byte	0x7
 9857 15ef FF03     		.value	0x3ff
GAS LISTING /tmp/ccmMnd7l.s 			page 475


 9858 15f1 00000000 		.long	.LASF206
 9859 15f5 D1AB0000 		.long	0xabd1
 9860 15f9 01       		.byte	0x1
 9861 15fa 02160000 		.long	0x1602
 9862 15fe 0D160000 		.long	0x160d
 9863 1602 08       		.uleb128 0x8
 9864 1603 B2AB0000 		.long	0xabb2
 9865 1607 09       		.uleb128 0x9
 9866 1608 069A0000 		.long	0x9a06
 9867 160c 00       		.byte	0
 9868 160d 32       		.uleb128 0x32
 9869 160e 00000000 		.long	.LASF202
 9870 1612 07       		.byte	0x7
 9871 1613 0E04     		.value	0x40e
 9872 1615 00000000 		.long	.LASF207
 9873 1619 D1AB0000 		.long	0xabd1
 9874 161d 01       		.byte	0x1
 9875 161e 26160000 		.long	0x1626
 9876 1622 36160000 		.long	0x1636
 9877 1626 08       		.uleb128 0x8
 9878 1627 B2AB0000 		.long	0xabb2
 9879 162b 09       		.uleb128 0x9
 9880 162c 090A0000 		.long	0xa09
 9881 1630 09       		.uleb128 0x9
 9882 1631 E4990000 		.long	0x99e4
 9883 1635 00       		.byte	0
 9884 1636 32       		.uleb128 0x32
 9885 1637 00000000 		.long	.LASF202
 9886 163b 07       		.byte	0x7
 9887 163c 1704     		.value	0x417
 9888 163e 00000000 		.long	.LASF208
 9889 1642 D1AB0000 		.long	0xabd1
 9890 1646 01       		.byte	0x1
 9891 1647 4F160000 		.long	0x164f
 9892 164b 5A160000 		.long	0x165a
 9893 164f 08       		.uleb128 0x8
 9894 1650 B2AB0000 		.long	0xabb2
 9895 1654 09       		.uleb128 0x9
 9896 1655 DF220000 		.long	0x22df
 9897 1659 00       		.byte	0
 9898 165a 34       		.uleb128 0x34
 9899 165b 00000000 		.long	.LASF209
 9900 165f 07       		.byte	0x7
 9901 1660 2D04     		.value	0x42d
 9902 1662 00000000 		.long	.LASF210
 9903 1666 01       		.byte	0x1
 9904 1667 6F160000 		.long	0x166f
 9905 166b 7A160000 		.long	0x167a
 9906 166f 08       		.uleb128 0x8
 9907 1670 B2AB0000 		.long	0xabb2
 9908 1674 09       		.uleb128 0x9
 9909 1675 E4990000 		.long	0x99e4
 9910 1679 00       		.byte	0
 9911 167a 32       		.uleb128 0x32
 9912 167b 00000000 		.long	.LASF44
 9913 167f 07       		.byte	0x7
 9914 1680 3C04     		.value	0x43c
GAS LISTING /tmp/ccmMnd7l.s 			page 476


 9915 1682 00000000 		.long	.LASF211
 9916 1686 D1AB0000 		.long	0xabd1
 9917 168a 01       		.byte	0x1
 9918 168b 93160000 		.long	0x1693
 9919 168f 9E160000 		.long	0x169e
 9920 1693 08       		.uleb128 0x8
 9921 1694 B2AB0000 		.long	0xabb2
 9922 1698 09       		.uleb128 0x9
 9923 1699 C4AB0000 		.long	0xabc4
 9924 169d 00       		.byte	0
 9925 169e 32       		.uleb128 0x32
 9926 169f 00000000 		.long	.LASF44
 9927 16a3 07       		.byte	0x7
 9928 16a4 4904     		.value	0x449
 9929 16a6 00000000 		.long	.LASF212
 9930 16aa D1AB0000 		.long	0xabd1
 9931 16ae 01       		.byte	0x1
 9932 16af B7160000 		.long	0x16b7
 9933 16b3 C2160000 		.long	0x16c2
 9934 16b7 08       		.uleb128 0x8
 9935 16b8 B2AB0000 		.long	0xabb2
 9936 16bc 09       		.uleb128 0x9
 9937 16bd CAAB0000 		.long	0xabca
 9938 16c1 00       		.byte	0
 9939 16c2 32       		.uleb128 0x32
 9940 16c3 00000000 		.long	.LASF44
 9941 16c7 07       		.byte	0x7
 9942 16c8 5E04     		.value	0x45e
 9943 16ca 00000000 		.long	.LASF213
 9944 16ce D1AB0000 		.long	0xabd1
 9945 16d2 01       		.byte	0x1
 9946 16d3 DB160000 		.long	0x16db
 9947 16d7 F0160000 		.long	0x16f0
 9948 16db 08       		.uleb128 0x8
 9949 16dc B2AB0000 		.long	0xabb2
 9950 16e0 09       		.uleb128 0x9
 9951 16e1 C4AB0000 		.long	0xabc4
 9952 16e5 09       		.uleb128 0x9
 9953 16e6 090A0000 		.long	0xa09
 9954 16ea 09       		.uleb128 0x9
 9955 16eb 090A0000 		.long	0xa09
 9956 16ef 00       		.byte	0
 9957 16f0 32       		.uleb128 0x32
 9958 16f1 00000000 		.long	.LASF44
 9959 16f5 07       		.byte	0x7
 9960 16f6 6E04     		.value	0x46e
 9961 16f8 00000000 		.long	.LASF214
 9962 16fc D1AB0000 		.long	0xabd1
 9963 1700 01       		.byte	0x1
 9964 1701 09170000 		.long	0x1709
 9965 1705 19170000 		.long	0x1719
 9966 1709 08       		.uleb128 0x8
 9967 170a B2AB0000 		.long	0xabb2
 9968 170e 09       		.uleb128 0x9
 9969 170f 069A0000 		.long	0x9a06
 9970 1713 09       		.uleb128 0x9
 9971 1714 090A0000 		.long	0xa09
GAS LISTING /tmp/ccmMnd7l.s 			page 477


 9972 1718 00       		.byte	0
 9973 1719 32       		.uleb128 0x32
 9974 171a 00000000 		.long	.LASF44
 9975 171e 07       		.byte	0x7
 9976 171f 7A04     		.value	0x47a
 9977 1721 00000000 		.long	.LASF215
 9978 1725 D1AB0000 		.long	0xabd1
 9979 1729 01       		.byte	0x1
 9980 172a 32170000 		.long	0x1732
 9981 172e 3D170000 		.long	0x173d
 9982 1732 08       		.uleb128 0x8
 9983 1733 B2AB0000 		.long	0xabb2
 9984 1737 09       		.uleb128 0x9
 9985 1738 069A0000 		.long	0x9a06
 9986 173c 00       		.byte	0
 9987 173d 32       		.uleb128 0x32
 9988 173e 00000000 		.long	.LASF44
 9989 1742 07       		.byte	0x7
 9990 1743 8A04     		.value	0x48a
 9991 1745 00000000 		.long	.LASF216
 9992 1749 D1AB0000 		.long	0xabd1
 9993 174d 01       		.byte	0x1
 9994 174e 56170000 		.long	0x1756
 9995 1752 66170000 		.long	0x1766
 9996 1756 08       		.uleb128 0x8
 9997 1757 B2AB0000 		.long	0xabb2
 9998 175b 09       		.uleb128 0x9
 9999 175c 090A0000 		.long	0xa09
 10000 1760 09       		.uleb128 0x9
 10001 1761 E4990000 		.long	0x99e4
 10002 1765 00       		.byte	0
 10003 1766 32       		.uleb128 0x32
 10004 1767 00000000 		.long	.LASF44
 10005 176b 07       		.byte	0x7
 10006 176c A104     		.value	0x4a1
 10007 176e 00000000 		.long	.LASF217
 10008 1772 D1AB0000 		.long	0xabd1
 10009 1776 01       		.byte	0x1
 10010 1777 7F170000 		.long	0x177f
 10011 177b 8A170000 		.long	0x178a
 10012 177f 08       		.uleb128 0x8
 10013 1780 B2AB0000 		.long	0xabb2
 10014 1784 09       		.uleb128 0x9
 10015 1785 DF220000 		.long	0x22df
 10016 1789 00       		.byte	0
 10017 178a 34       		.uleb128 0x34
 10018 178b 00000000 		.long	.LASF218
 10019 178f 07       		.byte	0x7
 10020 1790 B304     		.value	0x4b3
 10021 1792 00000000 		.long	.LASF219
 10022 1796 01       		.byte	0x1
 10023 1797 9F170000 		.long	0x179f
 10024 179b B4170000 		.long	0x17b4
 10025 179f 08       		.uleb128 0x8
 10026 17a0 B2AB0000 		.long	0xabb2
 10027 17a4 09       		.uleb128 0x9
 10028 17a5 580A0000 		.long	0xa58
GAS LISTING /tmp/ccmMnd7l.s 			page 478


 10029 17a9 09       		.uleb128 0x9
 10030 17aa 090A0000 		.long	0xa09
 10031 17ae 09       		.uleb128 0x9
 10032 17af E4990000 		.long	0x99e4
 10033 17b3 00       		.byte	0
 10034 17b4 34       		.uleb128 0x34
 10035 17b5 00000000 		.long	.LASF218
 10036 17b9 07       		.byte	0x7
 10037 17ba CF04     		.value	0x4cf
 10038 17bc 00000000 		.long	.LASF220
 10039 17c0 01       		.byte	0x1
 10040 17c1 C9170000 		.long	0x17c9
 10041 17c5 D9170000 		.long	0x17d9
 10042 17c9 08       		.uleb128 0x8
 10043 17ca B2AB0000 		.long	0xabb2
 10044 17ce 09       		.uleb128 0x9
 10045 17cf 580A0000 		.long	0xa58
 10046 17d3 09       		.uleb128 0x9
 10047 17d4 DF220000 		.long	0x22df
 10048 17d8 00       		.byte	0
 10049 17d9 32       		.uleb128 0x32
 10050 17da 00000000 		.long	.LASF218
 10051 17de 07       		.byte	0x7
 10052 17df E304     		.value	0x4e3
 10053 17e1 00000000 		.long	.LASF221
 10054 17e5 D1AB0000 		.long	0xabd1
 10055 17e9 01       		.byte	0x1
 10056 17ea F2170000 		.long	0x17f2
 10057 17ee 02180000 		.long	0x1802
 10058 17f2 08       		.uleb128 0x8
 10059 17f3 B2AB0000 		.long	0xabb2
 10060 17f7 09       		.uleb128 0x9
 10061 17f8 090A0000 		.long	0xa09
 10062 17fc 09       		.uleb128 0x9
 10063 17fd C4AB0000 		.long	0xabc4
 10064 1801 00       		.byte	0
 10065 1802 32       		.uleb128 0x32
 10066 1803 00000000 		.long	.LASF218
 10067 1807 07       		.byte	0x7
 10068 1808 F904     		.value	0x4f9
 10069 180a 00000000 		.long	.LASF222
 10070 180e D1AB0000 		.long	0xabd1
 10071 1812 01       		.byte	0x1
 10072 1813 1B180000 		.long	0x181b
 10073 1817 35180000 		.long	0x1835
 10074 181b 08       		.uleb128 0x8
 10075 181c B2AB0000 		.long	0xabb2
 10076 1820 09       		.uleb128 0x9
 10077 1821 090A0000 		.long	0xa09
 10078 1825 09       		.uleb128 0x9
 10079 1826 C4AB0000 		.long	0xabc4
 10080 182a 09       		.uleb128 0x9
 10081 182b 090A0000 		.long	0xa09
 10082 182f 09       		.uleb128 0x9
 10083 1830 090A0000 		.long	0xa09
 10084 1834 00       		.byte	0
 10085 1835 32       		.uleb128 0x32
GAS LISTING /tmp/ccmMnd7l.s 			page 479


 10086 1836 00000000 		.long	.LASF218
 10087 183a 07       		.byte	0x7
 10088 183b 1005     		.value	0x510
 10089 183d 00000000 		.long	.LASF223
 10090 1841 D1AB0000 		.long	0xabd1
 10091 1845 01       		.byte	0x1
 10092 1846 4E180000 		.long	0x184e
 10093 184a 63180000 		.long	0x1863
 10094 184e 08       		.uleb128 0x8
 10095 184f B2AB0000 		.long	0xabb2
 10096 1853 09       		.uleb128 0x9
 10097 1854 090A0000 		.long	0xa09
 10098 1858 09       		.uleb128 0x9
 10099 1859 069A0000 		.long	0x9a06
 10100 185d 09       		.uleb128 0x9
 10101 185e 090A0000 		.long	0xa09
 10102 1862 00       		.byte	0
 10103 1863 32       		.uleb128 0x32
 10104 1864 00000000 		.long	.LASF218
 10105 1868 07       		.byte	0x7
 10106 1869 2205     		.value	0x522
 10107 186b 00000000 		.long	.LASF224
 10108 186f D1AB0000 		.long	0xabd1
 10109 1873 01       		.byte	0x1
 10110 1874 7C180000 		.long	0x187c
 10111 1878 8C180000 		.long	0x188c
 10112 187c 08       		.uleb128 0x8
 10113 187d B2AB0000 		.long	0xabb2
 10114 1881 09       		.uleb128 0x9
 10115 1882 090A0000 		.long	0xa09
 10116 1886 09       		.uleb128 0x9
 10117 1887 069A0000 		.long	0x9a06
 10118 188b 00       		.byte	0
 10119 188c 32       		.uleb128 0x32
 10120 188d 00000000 		.long	.LASF218
 10121 1891 07       		.byte	0x7
 10122 1892 3905     		.value	0x539
 10123 1894 00000000 		.long	.LASF225
 10124 1898 D1AB0000 		.long	0xabd1
 10125 189c 01       		.byte	0x1
 10126 189d A5180000 		.long	0x18a5
 10127 18a1 BA180000 		.long	0x18ba
 10128 18a5 08       		.uleb128 0x8
 10129 18a6 B2AB0000 		.long	0xabb2
 10130 18aa 09       		.uleb128 0x9
 10131 18ab 090A0000 		.long	0xa09
 10132 18af 09       		.uleb128 0x9
 10133 18b0 090A0000 		.long	0xa09
 10134 18b4 09       		.uleb128 0x9
 10135 18b5 E4990000 		.long	0x99e4
 10136 18b9 00       		.byte	0
 10137 18ba 32       		.uleb128 0x32
 10138 18bb 00000000 		.long	.LASF218
 10139 18bf 07       		.byte	0x7
 10140 18c0 4B05     		.value	0x54b
 10141 18c2 00000000 		.long	.LASF226
 10142 18c6 580A0000 		.long	0xa58
GAS LISTING /tmp/ccmMnd7l.s 			page 480


 10143 18ca 01       		.byte	0x1
 10144 18cb D3180000 		.long	0x18d3
 10145 18cf E3180000 		.long	0x18e3
 10146 18d3 08       		.uleb128 0x8
 10147 18d4 B2AB0000 		.long	0xabb2
 10148 18d8 09       		.uleb128 0x9
 10149 18d9 580A0000 		.long	0xa58
 10150 18dd 09       		.uleb128 0x9
 10151 18de E4990000 		.long	0x99e4
 10152 18e2 00       		.byte	0
 10153 18e3 32       		.uleb128 0x32
 10154 18e4 00000000 		.long	.LASF227
 10155 18e8 07       		.byte	0x7
 10156 18e9 6405     		.value	0x564
 10157 18eb 00000000 		.long	.LASF228
 10158 18ef D1AB0000 		.long	0xabd1
 10159 18f3 01       		.byte	0x1
 10160 18f4 FC180000 		.long	0x18fc
 10161 18f8 0C190000 		.long	0x190c
 10162 18fc 08       		.uleb128 0x8
 10163 18fd B2AB0000 		.long	0xabb2
 10164 1901 09       		.uleb128 0x9
 10165 1902 090A0000 		.long	0xa09
 10166 1906 09       		.uleb128 0x9
 10167 1907 090A0000 		.long	0xa09
 10168 190b 00       		.byte	0
 10169 190c 32       		.uleb128 0x32
 10170 190d 00000000 		.long	.LASF227
 10171 1911 07       		.byte	0x7
 10172 1912 7405     		.value	0x574
 10173 1914 00000000 		.long	.LASF229
 10174 1918 580A0000 		.long	0xa58
 10175 191c 01       		.byte	0x1
 10176 191d 25190000 		.long	0x1925
 10177 1921 30190000 		.long	0x1930
 10178 1925 08       		.uleb128 0x8
 10179 1926 B2AB0000 		.long	0xabb2
 10180 192a 09       		.uleb128 0x9
 10181 192b 580A0000 		.long	0xa58
 10182 192f 00       		.byte	0
 10183 1930 32       		.uleb128 0x32
 10184 1931 00000000 		.long	.LASF227
 10185 1935 07       		.byte	0x7
 10186 1936 8805     		.value	0x588
 10187 1938 00000000 		.long	.LASF230
 10188 193c 580A0000 		.long	0xa58
 10189 1940 01       		.byte	0x1
 10190 1941 49190000 		.long	0x1949
 10191 1945 59190000 		.long	0x1959
 10192 1949 08       		.uleb128 0x8
 10193 194a B2AB0000 		.long	0xabb2
 10194 194e 09       		.uleb128 0x9
 10195 194f 580A0000 		.long	0xa58
 10196 1953 09       		.uleb128 0x9
 10197 1954 580A0000 		.long	0xa58
 10198 1958 00       		.byte	0
 10199 1959 34       		.uleb128 0x34
GAS LISTING /tmp/ccmMnd7l.s 			page 481


 10200 195a 00000000 		.long	.LASF231
 10201 195e 07       		.byte	0x7
 10202 195f 9105     		.value	0x591
 10203 1961 00000000 		.long	.LASF232
 10204 1965 01       		.byte	0x1
 10205 1966 6E190000 		.long	0x196e
 10206 196a 74190000 		.long	0x1974
 10207 196e 08       		.uleb128 0x8
 10208 196f B2AB0000 		.long	0xabb2
 10209 1973 00       		.byte	0
 10210 1974 32       		.uleb128 0x32
 10211 1975 00000000 		.long	.LASF233
 10212 1979 07       		.byte	0x7
 10213 197a A705     		.value	0x5a7
 10214 197c 00000000 		.long	.LASF234
 10215 1980 D1AB0000 		.long	0xabd1
 10216 1984 01       		.byte	0x1
 10217 1985 8D190000 		.long	0x198d
 10218 1989 A2190000 		.long	0x19a2
 10219 198d 08       		.uleb128 0x8
 10220 198e B2AB0000 		.long	0xabb2
 10221 1992 09       		.uleb128 0x9
 10222 1993 090A0000 		.long	0xa09
 10223 1997 09       		.uleb128 0x9
 10224 1998 090A0000 		.long	0xa09
 10225 199c 09       		.uleb128 0x9
 10226 199d C4AB0000 		.long	0xabc4
 10227 19a1 00       		.byte	0
 10228 19a2 32       		.uleb128 0x32
 10229 19a3 00000000 		.long	.LASF233
 10230 19a7 07       		.byte	0x7
 10231 19a8 BD05     		.value	0x5bd
 10232 19aa 00000000 		.long	.LASF235
 10233 19ae D1AB0000 		.long	0xabd1
 10234 19b2 01       		.byte	0x1
 10235 19b3 BB190000 		.long	0x19bb
 10236 19b7 DA190000 		.long	0x19da
 10237 19bb 08       		.uleb128 0x8
 10238 19bc B2AB0000 		.long	0xabb2
 10239 19c0 09       		.uleb128 0x9
 10240 19c1 090A0000 		.long	0xa09
 10241 19c5 09       		.uleb128 0x9
 10242 19c6 090A0000 		.long	0xa09
 10243 19ca 09       		.uleb128 0x9
 10244 19cb C4AB0000 		.long	0xabc4
 10245 19cf 09       		.uleb128 0x9
 10246 19d0 090A0000 		.long	0xa09
 10247 19d4 09       		.uleb128 0x9
 10248 19d5 090A0000 		.long	0xa09
 10249 19d9 00       		.byte	0
 10250 19da 32       		.uleb128 0x32
 10251 19db 00000000 		.long	.LASF233
 10252 19df 07       		.byte	0x7
 10253 19e0 D605     		.value	0x5d6
 10254 19e2 00000000 		.long	.LASF236
 10255 19e6 D1AB0000 		.long	0xabd1
 10256 19ea 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 482


 10257 19eb F3190000 		.long	0x19f3
 10258 19ef 0D1A0000 		.long	0x1a0d
 10259 19f3 08       		.uleb128 0x8
 10260 19f4 B2AB0000 		.long	0xabb2
 10261 19f8 09       		.uleb128 0x9
 10262 19f9 090A0000 		.long	0xa09
 10263 19fd 09       		.uleb128 0x9
 10264 19fe 090A0000 		.long	0xa09
 10265 1a02 09       		.uleb128 0x9
 10266 1a03 069A0000 		.long	0x9a06
 10267 1a07 09       		.uleb128 0x9
 10268 1a08 090A0000 		.long	0xa09
 10269 1a0c 00       		.byte	0
 10270 1a0d 32       		.uleb128 0x32
 10271 1a0e 00000000 		.long	.LASF233
 10272 1a12 07       		.byte	0x7
 10273 1a13 EA05     		.value	0x5ea
 10274 1a15 00000000 		.long	.LASF237
 10275 1a19 D1AB0000 		.long	0xabd1
 10276 1a1d 01       		.byte	0x1
 10277 1a1e 261A0000 		.long	0x1a26
 10278 1a22 3B1A0000 		.long	0x1a3b
 10279 1a26 08       		.uleb128 0x8
 10280 1a27 B2AB0000 		.long	0xabb2
 10281 1a2b 09       		.uleb128 0x9
 10282 1a2c 090A0000 		.long	0xa09
 10283 1a30 09       		.uleb128 0x9
 10284 1a31 090A0000 		.long	0xa09
 10285 1a35 09       		.uleb128 0x9
 10286 1a36 069A0000 		.long	0x9a06
 10287 1a3a 00       		.byte	0
 10288 1a3b 32       		.uleb128 0x32
 10289 1a3c 00000000 		.long	.LASF233
 10290 1a40 07       		.byte	0x7
 10291 1a41 0206     		.value	0x602
 10292 1a43 00000000 		.long	.LASF238
 10293 1a47 D1AB0000 		.long	0xabd1
 10294 1a4b 01       		.byte	0x1
 10295 1a4c 541A0000 		.long	0x1a54
 10296 1a50 6E1A0000 		.long	0x1a6e
 10297 1a54 08       		.uleb128 0x8
 10298 1a55 B2AB0000 		.long	0xabb2
 10299 1a59 09       		.uleb128 0x9
 10300 1a5a 090A0000 		.long	0xa09
 10301 1a5e 09       		.uleb128 0x9
 10302 1a5f 090A0000 		.long	0xa09
 10303 1a63 09       		.uleb128 0x9
 10304 1a64 090A0000 		.long	0xa09
 10305 1a68 09       		.uleb128 0x9
 10306 1a69 E4990000 		.long	0x99e4
 10307 1a6d 00       		.byte	0
 10308 1a6e 32       		.uleb128 0x32
 10309 1a6f 00000000 		.long	.LASF233
 10310 1a73 07       		.byte	0x7
 10311 1a74 1406     		.value	0x614
 10312 1a76 00000000 		.long	.LASF239
 10313 1a7a D1AB0000 		.long	0xabd1
GAS LISTING /tmp/ccmMnd7l.s 			page 483


 10314 1a7e 01       		.byte	0x1
 10315 1a7f 871A0000 		.long	0x1a87
 10316 1a83 9C1A0000 		.long	0x1a9c
 10317 1a87 08       		.uleb128 0x8
 10318 1a88 B2AB0000 		.long	0xabb2
 10319 1a8c 09       		.uleb128 0x9
 10320 1a8d 580A0000 		.long	0xa58
 10321 1a91 09       		.uleb128 0x9
 10322 1a92 580A0000 		.long	0xa58
 10323 1a96 09       		.uleb128 0x9
 10324 1a97 C4AB0000 		.long	0xabc4
 10325 1a9b 00       		.byte	0
 10326 1a9c 32       		.uleb128 0x32
 10327 1a9d 00000000 		.long	.LASF233
 10328 1aa1 07       		.byte	0x7
 10329 1aa2 2706     		.value	0x627
 10330 1aa4 00000000 		.long	.LASF240
 10331 1aa8 D1AB0000 		.long	0xabd1
 10332 1aac 01       		.byte	0x1
 10333 1aad B51A0000 		.long	0x1ab5
 10334 1ab1 CF1A0000 		.long	0x1acf
 10335 1ab5 08       		.uleb128 0x8
 10336 1ab6 B2AB0000 		.long	0xabb2
 10337 1aba 09       		.uleb128 0x9
 10338 1abb 580A0000 		.long	0xa58
 10339 1abf 09       		.uleb128 0x9
 10340 1ac0 580A0000 		.long	0xa58
 10341 1ac4 09       		.uleb128 0x9
 10342 1ac5 069A0000 		.long	0x9a06
 10343 1ac9 09       		.uleb128 0x9
 10344 1aca 090A0000 		.long	0xa09
 10345 1ace 00       		.byte	0
 10346 1acf 32       		.uleb128 0x32
 10347 1ad0 00000000 		.long	.LASF233
 10348 1ad4 07       		.byte	0x7
 10349 1ad5 3C06     		.value	0x63c
 10350 1ad7 00000000 		.long	.LASF241
 10351 1adb D1AB0000 		.long	0xabd1
 10352 1adf 01       		.byte	0x1
 10353 1ae0 E81A0000 		.long	0x1ae8
 10354 1ae4 FD1A0000 		.long	0x1afd
 10355 1ae8 08       		.uleb128 0x8
 10356 1ae9 B2AB0000 		.long	0xabb2
 10357 1aed 09       		.uleb128 0x9
 10358 1aee 580A0000 		.long	0xa58
 10359 1af2 09       		.uleb128 0x9
 10360 1af3 580A0000 		.long	0xa58
 10361 1af7 09       		.uleb128 0x9
 10362 1af8 069A0000 		.long	0x9a06
 10363 1afc 00       		.byte	0
 10364 1afd 32       		.uleb128 0x32
 10365 1afe 00000000 		.long	.LASF233
 10366 1b02 07       		.byte	0x7
 10367 1b03 5106     		.value	0x651
 10368 1b05 00000000 		.long	.LASF242
 10369 1b09 D1AB0000 		.long	0xabd1
 10370 1b0d 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 484


 10371 1b0e 161B0000 		.long	0x1b16
 10372 1b12 301B0000 		.long	0x1b30
 10373 1b16 08       		.uleb128 0x8
 10374 1b17 B2AB0000 		.long	0xabb2
 10375 1b1b 09       		.uleb128 0x9
 10376 1b1c 580A0000 		.long	0xa58
 10377 1b20 09       		.uleb128 0x9
 10378 1b21 580A0000 		.long	0xa58
 10379 1b25 09       		.uleb128 0x9
 10380 1b26 090A0000 		.long	0xa09
 10381 1b2a 09       		.uleb128 0x9
 10382 1b2b E4990000 		.long	0x99e4
 10383 1b2f 00       		.byte	0
 10384 1b30 32       		.uleb128 0x32
 10385 1b31 00000000 		.long	.LASF233
 10386 1b35 07       		.byte	0x7
 10387 1b36 7606     		.value	0x676
 10388 1b38 00000000 		.long	.LASF243
 10389 1b3c D1AB0000 		.long	0xabd1
 10390 1b40 01       		.byte	0x1
 10391 1b41 491B0000 		.long	0x1b49
 10392 1b45 631B0000 		.long	0x1b63
 10393 1b49 08       		.uleb128 0x8
 10394 1b4a B2AB0000 		.long	0xabb2
 10395 1b4e 09       		.uleb128 0x9
 10396 1b4f 580A0000 		.long	0xa58
 10397 1b53 09       		.uleb128 0x9
 10398 1b54 580A0000 		.long	0xa58
 10399 1b58 09       		.uleb128 0x9
 10400 1b59 289D0000 		.long	0x9d28
 10401 1b5d 09       		.uleb128 0x9
 10402 1b5e 289D0000 		.long	0x9d28
 10403 1b62 00       		.byte	0
 10404 1b63 32       		.uleb128 0x32
 10405 1b64 00000000 		.long	.LASF233
 10406 1b68 07       		.byte	0x7
 10407 1b69 8006     		.value	0x680
 10408 1b6b 00000000 		.long	.LASF244
 10409 1b6f D1AB0000 		.long	0xabd1
 10410 1b73 01       		.byte	0x1
 10411 1b74 7C1B0000 		.long	0x1b7c
 10412 1b78 961B0000 		.long	0x1b96
 10413 1b7c 08       		.uleb128 0x8
 10414 1b7d B2AB0000 		.long	0xabb2
 10415 1b81 09       		.uleb128 0x9
 10416 1b82 580A0000 		.long	0xa58
 10417 1b86 09       		.uleb128 0x9
 10418 1b87 580A0000 		.long	0xa58
 10419 1b8b 09       		.uleb128 0x9
 10420 1b8c 069A0000 		.long	0x9a06
 10421 1b90 09       		.uleb128 0x9
 10422 1b91 069A0000 		.long	0x9a06
 10423 1b95 00       		.byte	0
 10424 1b96 32       		.uleb128 0x32
 10425 1b97 00000000 		.long	.LASF233
 10426 1b9b 07       		.byte	0x7
 10427 1b9c 8B06     		.value	0x68b
GAS LISTING /tmp/ccmMnd7l.s 			page 485


 10428 1b9e 00000000 		.long	.LASF245
 10429 1ba2 D1AB0000 		.long	0xabd1
 10430 1ba6 01       		.byte	0x1
 10431 1ba7 AF1B0000 		.long	0x1baf
 10432 1bab C91B0000 		.long	0x1bc9
 10433 1baf 08       		.uleb128 0x8
 10434 1bb0 B2AB0000 		.long	0xabb2
 10435 1bb4 09       		.uleb128 0x9
 10436 1bb5 580A0000 		.long	0xa58
 10437 1bb9 09       		.uleb128 0x9
 10438 1bba 580A0000 		.long	0xa58
 10439 1bbe 09       		.uleb128 0x9
 10440 1bbf 580A0000 		.long	0xa58
 10441 1bc3 09       		.uleb128 0x9
 10442 1bc4 580A0000 		.long	0xa58
 10443 1bc8 00       		.byte	0
 10444 1bc9 32       		.uleb128 0x32
 10445 1bca 00000000 		.long	.LASF233
 10446 1bce 07       		.byte	0x7
 10447 1bcf 9506     		.value	0x695
 10448 1bd1 00000000 		.long	.LASF246
 10449 1bd5 D1AB0000 		.long	0xabd1
 10450 1bd9 01       		.byte	0x1
 10451 1bda E21B0000 		.long	0x1be2
 10452 1bde FC1B0000 		.long	0x1bfc
 10453 1be2 08       		.uleb128 0x8
 10454 1be3 B2AB0000 		.long	0xabb2
 10455 1be7 09       		.uleb128 0x9
 10456 1be8 580A0000 		.long	0xa58
 10457 1bec 09       		.uleb128 0x9
 10458 1bed 580A0000 		.long	0xa58
 10459 1bf1 09       		.uleb128 0x9
 10460 1bf2 640A0000 		.long	0xa64
 10461 1bf6 09       		.uleb128 0x9
 10462 1bf7 640A0000 		.long	0xa64
 10463 1bfb 00       		.byte	0
 10464 1bfc 32       		.uleb128 0x32
 10465 1bfd 00000000 		.long	.LASF233
 10466 1c01 07       		.byte	0x7
 10467 1c02 AE06     		.value	0x6ae
 10468 1c04 00000000 		.long	.LASF247
 10469 1c08 D1AB0000 		.long	0xabd1
 10470 1c0c 01       		.byte	0x1
 10471 1c0d 151C0000 		.long	0x1c15
 10472 1c11 2A1C0000 		.long	0x1c2a
 10473 1c15 08       		.uleb128 0x8
 10474 1c16 B2AB0000 		.long	0xabb2
 10475 1c1a 09       		.uleb128 0x9
 10476 1c1b 580A0000 		.long	0xa58
 10477 1c1f 09       		.uleb128 0x9
 10478 1c20 580A0000 		.long	0xa58
 10479 1c24 09       		.uleb128 0x9
 10480 1c25 DF220000 		.long	0x22df
 10481 1c29 00       		.byte	0
 10482 1c2a 2C       		.uleb128 0x2c
 10483 1c2b 00000000 		.long	.LASF248
 10484 1c2f 07       		.byte	0x7
GAS LISTING /tmp/ccmMnd7l.s 			page 486


 10485 1c30 C006     		.value	0x6c0
 10486 1c32 00000000 		.long	.LASF249
 10487 1c36 D1AB0000 		.long	0xabd1
 10488 1c3a 421C0000 		.long	0x1c42
 10489 1c3e 5C1C0000 		.long	0x1c5c
 10490 1c42 08       		.uleb128 0x8
 10491 1c43 B2AB0000 		.long	0xabb2
 10492 1c47 09       		.uleb128 0x9
 10493 1c48 090A0000 		.long	0xa09
 10494 1c4c 09       		.uleb128 0x9
 10495 1c4d 090A0000 		.long	0xa09
 10496 1c51 09       		.uleb128 0x9
 10497 1c52 090A0000 		.long	0xa09
 10498 1c56 09       		.uleb128 0x9
 10499 1c57 E4990000 		.long	0x99e4
 10500 1c5b 00       		.byte	0
 10501 1c5c 2C       		.uleb128 0x2c
 10502 1c5d 00000000 		.long	.LASF250
 10503 1c61 07       		.byte	0x7
 10504 1c62 C406     		.value	0x6c4
 10505 1c64 00000000 		.long	.LASF251
 10506 1c68 D1AB0000 		.long	0xabd1
 10507 1c6c 741C0000 		.long	0x1c74
 10508 1c70 8E1C0000 		.long	0x1c8e
 10509 1c74 08       		.uleb128 0x8
 10510 1c75 B2AB0000 		.long	0xabb2
 10511 1c79 09       		.uleb128 0x9
 10512 1c7a 090A0000 		.long	0xa09
 10513 1c7e 09       		.uleb128 0x9
 10514 1c7f 090A0000 		.long	0xa09
 10515 1c83 09       		.uleb128 0x9
 10516 1c84 069A0000 		.long	0x9a06
 10517 1c88 09       		.uleb128 0x9
 10518 1c89 090A0000 		.long	0xa09
 10519 1c8d 00       		.byte	0
 10520 1c8e 1E       		.uleb128 0x1e
 10521 1c8f 00000000 		.long	.LASF252
 10522 1c93 07       		.byte	0x7
 10523 1c94 DC06     		.value	0x6dc
 10524 1c96 00000000 		.long	.LASF253
 10525 1c9a 289D0000 		.long	0x9d28
 10526 1c9e B21C0000 		.long	0x1cb2
 10527 1ca2 09       		.uleb128 0x9
 10528 1ca3 090A0000 		.long	0xa09
 10529 1ca7 09       		.uleb128 0x9
 10530 1ca8 E4990000 		.long	0x99e4
 10531 1cac 09       		.uleb128 0x9
 10532 1cad 2DA30000 		.long	0xa32d
 10533 1cb1 00       		.byte	0
 10534 1cb2 1E       		.uleb128 0x1e
 10535 1cb3 00000000 		.long	.LASF254
 10536 1cb7 07       		.byte	0x7
 10537 1cb8 F506     		.value	0x6f5
 10538 1cba 00000000 		.long	.LASF255
 10539 1cbe 289D0000 		.long	0x9d28
 10540 1cc2 D61C0000 		.long	0x1cd6
 10541 1cc6 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 487


 10542 1cc7 090A0000 		.long	0xa09
 10543 1ccb 09       		.uleb128 0x9
 10544 1ccc E4990000 		.long	0x99e4
 10545 1cd0 09       		.uleb128 0x9
 10546 1cd1 2DA30000 		.long	0xa32d
 10547 1cd5 00       		.byte	0
 10548 1cd6 32       		.uleb128 0x32
 10549 1cd7 00000000 		.long	.LASF42
 10550 1cdb 07       		.byte	0x7
 10551 1cdc 0607     		.value	0x706
 10552 1cde 00000000 		.long	.LASF256
 10553 1ce2 090A0000 		.long	0xa09
 10554 1ce6 01       		.byte	0x1
 10555 1ce7 EF1C0000 		.long	0x1cef
 10556 1ceb 041D0000 		.long	0x1d04
 10557 1cef 08       		.uleb128 0x8
 10558 1cf0 ACAB0000 		.long	0xabac
 10559 1cf4 09       		.uleb128 0x9
 10560 1cf5 289D0000 		.long	0x9d28
 10561 1cf9 09       		.uleb128 0x9
 10562 1cfa 090A0000 		.long	0xa09
 10563 1cfe 09       		.uleb128 0x9
 10564 1cff 090A0000 		.long	0xa09
 10565 1d03 00       		.byte	0
 10566 1d04 34       		.uleb128 0x34
 10567 1d05 00000000 		.long	.LASF13
 10568 1d09 07       		.byte	0x7
 10569 1d0a 1107     		.value	0x711
 10570 1d0c 00000000 		.long	.LASF257
 10571 1d10 01       		.byte	0x1
 10572 1d11 191D0000 		.long	0x1d19
 10573 1d15 241D0000 		.long	0x1d24
 10574 1d19 08       		.uleb128 0x8
 10575 1d1a B2AB0000 		.long	0xabb2
 10576 1d1e 09       		.uleb128 0x9
 10577 1d1f D1AB0000 		.long	0xabd1
 10578 1d23 00       		.byte	0
 10579 1d24 32       		.uleb128 0x32
 10580 1d25 00000000 		.long	.LASF258
 10581 1d29 07       		.byte	0x7
 10582 1d2a 1B07     		.value	0x71b
 10583 1d2c 00000000 		.long	.LASF259
 10584 1d30 069A0000 		.long	0x9a06
 10585 1d34 01       		.byte	0x1
 10586 1d35 3D1D0000 		.long	0x1d3d
 10587 1d39 431D0000 		.long	0x1d43
 10588 1d3d 08       		.uleb128 0x8
 10589 1d3e ACAB0000 		.long	0xabac
 10590 1d42 00       		.byte	0
 10591 1d43 32       		.uleb128 0x32
 10592 1d44 00000000 		.long	.LASF260
 10593 1d48 07       		.byte	0x7
 10594 1d49 2507     		.value	0x725
 10595 1d4b 00000000 		.long	.LASF261
 10596 1d4f 069A0000 		.long	0x9a06
 10597 1d53 01       		.byte	0x1
 10598 1d54 5C1D0000 		.long	0x1d5c
GAS LISTING /tmp/ccmMnd7l.s 			page 488


 10599 1d58 621D0000 		.long	0x1d62
 10600 1d5c 08       		.uleb128 0x8
 10601 1d5d ACAB0000 		.long	0xabac
 10602 1d61 00       		.byte	0
 10603 1d62 32       		.uleb128 0x32
 10604 1d63 00000000 		.long	.LASF262
 10605 1d67 07       		.byte	0x7
 10606 1d68 2C07     		.value	0x72c
 10607 1d6a 00000000 		.long	.LASF263
 10608 1d6e 340A0000 		.long	0xa34
 10609 1d72 01       		.byte	0x1
 10610 1d73 7B1D0000 		.long	0x1d7b
 10611 1d77 811D0000 		.long	0x1d81
 10612 1d7b 08       		.uleb128 0x8
 10613 1d7c ACAB0000 		.long	0xabac
 10614 1d80 00       		.byte	0
 10615 1d81 32       		.uleb128 0x32
 10616 1d82 00000000 		.long	.LASF38
 10617 1d86 07       		.byte	0x7
 10618 1d87 3C07     		.value	0x73c
 10619 1d89 00000000 		.long	.LASF264
 10620 1d8d 090A0000 		.long	0xa09
 10621 1d91 01       		.byte	0x1
 10622 1d92 9A1D0000 		.long	0x1d9a
 10623 1d96 AF1D0000 		.long	0x1daf
 10624 1d9a 08       		.uleb128 0x8
 10625 1d9b ACAB0000 		.long	0xabac
 10626 1d9f 09       		.uleb128 0x9
 10627 1da0 069A0000 		.long	0x9a06
 10628 1da4 09       		.uleb128 0x9
 10629 1da5 090A0000 		.long	0xa09
 10630 1da9 09       		.uleb128 0x9
 10631 1daa 090A0000 		.long	0xa09
 10632 1dae 00       		.byte	0
 10633 1daf 32       		.uleb128 0x32
 10634 1db0 00000000 		.long	.LASF38
 10635 1db4 07       		.byte	0x7
 10636 1db5 4907     		.value	0x749
 10637 1db7 00000000 		.long	.LASF265
 10638 1dbb 090A0000 		.long	0xa09
 10639 1dbf 01       		.byte	0x1
 10640 1dc0 C81D0000 		.long	0x1dc8
 10641 1dc4 D81D0000 		.long	0x1dd8
 10642 1dc8 08       		.uleb128 0x8
 10643 1dc9 ACAB0000 		.long	0xabac
 10644 1dcd 09       		.uleb128 0x9
 10645 1dce C4AB0000 		.long	0xabc4
 10646 1dd2 09       		.uleb128 0x9
 10647 1dd3 090A0000 		.long	0xa09
 10648 1dd7 00       		.byte	0
 10649 1dd8 32       		.uleb128 0x32
 10650 1dd9 00000000 		.long	.LASF38
 10651 1ddd 07       		.byte	0x7
 10652 1dde 5807     		.value	0x758
 10653 1de0 00000000 		.long	.LASF266
 10654 1de4 090A0000 		.long	0xa09
 10655 1de8 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 489


 10656 1de9 F11D0000 		.long	0x1df1
 10657 1ded 011E0000 		.long	0x1e01
 10658 1df1 08       		.uleb128 0x8
 10659 1df2 ACAB0000 		.long	0xabac
 10660 1df6 09       		.uleb128 0x9
 10661 1df7 069A0000 		.long	0x9a06
 10662 1dfb 09       		.uleb128 0x9
 10663 1dfc 090A0000 		.long	0xa09
 10664 1e00 00       		.byte	0
 10665 1e01 32       		.uleb128 0x32
 10666 1e02 00000000 		.long	.LASF38
 10667 1e06 07       		.byte	0x7
 10668 1e07 6907     		.value	0x769
 10669 1e09 00000000 		.long	.LASF267
 10670 1e0d 090A0000 		.long	0xa09
 10671 1e11 01       		.byte	0x1
 10672 1e12 1A1E0000 		.long	0x1e1a
 10673 1e16 2A1E0000 		.long	0x1e2a
 10674 1e1a 08       		.uleb128 0x8
 10675 1e1b ACAB0000 		.long	0xabac
 10676 1e1f 09       		.uleb128 0x9
 10677 1e20 E4990000 		.long	0x99e4
 10678 1e24 09       		.uleb128 0x9
 10679 1e25 090A0000 		.long	0xa09
 10680 1e29 00       		.byte	0
 10681 1e2a 32       		.uleb128 0x32
 10682 1e2b 00000000 		.long	.LASF268
 10683 1e2f 07       		.byte	0x7
 10684 1e30 7607     		.value	0x776
 10685 1e32 00000000 		.long	.LASF269
 10686 1e36 090A0000 		.long	0xa09
 10687 1e3a 01       		.byte	0x1
 10688 1e3b 431E0000 		.long	0x1e43
 10689 1e3f 531E0000 		.long	0x1e53
 10690 1e43 08       		.uleb128 0x8
 10691 1e44 ACAB0000 		.long	0xabac
 10692 1e48 09       		.uleb128 0x9
 10693 1e49 C4AB0000 		.long	0xabc4
 10694 1e4d 09       		.uleb128 0x9
 10695 1e4e 090A0000 		.long	0xa09
 10696 1e52 00       		.byte	0
 10697 1e53 32       		.uleb128 0x32
 10698 1e54 00000000 		.long	.LASF268
 10699 1e58 07       		.byte	0x7
 10700 1e59 8707     		.value	0x787
 10701 1e5b 00000000 		.long	.LASF270
 10702 1e5f 090A0000 		.long	0xa09
 10703 1e63 01       		.byte	0x1
 10704 1e64 6C1E0000 		.long	0x1e6c
 10705 1e68 811E0000 		.long	0x1e81
 10706 1e6c 08       		.uleb128 0x8
 10707 1e6d ACAB0000 		.long	0xabac
 10708 1e71 09       		.uleb128 0x9
 10709 1e72 069A0000 		.long	0x9a06
 10710 1e76 09       		.uleb128 0x9
 10711 1e77 090A0000 		.long	0xa09
 10712 1e7b 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 490


 10713 1e7c 090A0000 		.long	0xa09
 10714 1e80 00       		.byte	0
 10715 1e81 32       		.uleb128 0x32
 10716 1e82 00000000 		.long	.LASF268
 10717 1e86 07       		.byte	0x7
 10718 1e87 9407     		.value	0x794
 10719 1e89 00000000 		.long	.LASF271
 10720 1e8d 090A0000 		.long	0xa09
 10721 1e91 01       		.byte	0x1
 10722 1e92 9A1E0000 		.long	0x1e9a
 10723 1e96 AA1E0000 		.long	0x1eaa
 10724 1e9a 08       		.uleb128 0x8
 10725 1e9b ACAB0000 		.long	0xabac
 10726 1e9f 09       		.uleb128 0x9
 10727 1ea0 069A0000 		.long	0x9a06
 10728 1ea4 09       		.uleb128 0x9
 10729 1ea5 090A0000 		.long	0xa09
 10730 1ea9 00       		.byte	0
 10731 1eaa 32       		.uleb128 0x32
 10732 1eab 00000000 		.long	.LASF268
 10733 1eaf 07       		.byte	0x7
 10734 1eb0 A507     		.value	0x7a5
 10735 1eb2 00000000 		.long	.LASF272
 10736 1eb6 090A0000 		.long	0xa09
 10737 1eba 01       		.byte	0x1
 10738 1ebb C31E0000 		.long	0x1ec3
 10739 1ebf D31E0000 		.long	0x1ed3
 10740 1ec3 08       		.uleb128 0x8
 10741 1ec4 ACAB0000 		.long	0xabac
 10742 1ec8 09       		.uleb128 0x9
 10743 1ec9 E4990000 		.long	0x99e4
 10744 1ecd 09       		.uleb128 0x9
 10745 1ece 090A0000 		.long	0xa09
 10746 1ed2 00       		.byte	0
 10747 1ed3 32       		.uleb128 0x32
 10748 1ed4 00000000 		.long	.LASF273
 10749 1ed8 07       		.byte	0x7
 10750 1ed9 B307     		.value	0x7b3
 10751 1edb 00000000 		.long	.LASF274
 10752 1edf 090A0000 		.long	0xa09
 10753 1ee3 01       		.byte	0x1
 10754 1ee4 EC1E0000 		.long	0x1eec
 10755 1ee8 FC1E0000 		.long	0x1efc
 10756 1eec 08       		.uleb128 0x8
 10757 1eed ACAB0000 		.long	0xabac
 10758 1ef1 09       		.uleb128 0x9
 10759 1ef2 C4AB0000 		.long	0xabc4
 10760 1ef6 09       		.uleb128 0x9
 10761 1ef7 090A0000 		.long	0xa09
 10762 1efb 00       		.byte	0
 10763 1efc 32       		.uleb128 0x32
 10764 1efd 00000000 		.long	.LASF273
 10765 1f01 07       		.byte	0x7
 10766 1f02 C407     		.value	0x7c4
 10767 1f04 00000000 		.long	.LASF275
 10768 1f08 090A0000 		.long	0xa09
 10769 1f0c 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 491


 10770 1f0d 151F0000 		.long	0x1f15
 10771 1f11 2A1F0000 		.long	0x1f2a
 10772 1f15 08       		.uleb128 0x8
 10773 1f16 ACAB0000 		.long	0xabac
 10774 1f1a 09       		.uleb128 0x9
 10775 1f1b 069A0000 		.long	0x9a06
 10776 1f1f 09       		.uleb128 0x9
 10777 1f20 090A0000 		.long	0xa09
 10778 1f24 09       		.uleb128 0x9
 10779 1f25 090A0000 		.long	0xa09
 10780 1f29 00       		.byte	0
 10781 1f2a 32       		.uleb128 0x32
 10782 1f2b 00000000 		.long	.LASF273
 10783 1f2f 07       		.byte	0x7
 10784 1f30 D107     		.value	0x7d1
 10785 1f32 00000000 		.long	.LASF276
 10786 1f36 090A0000 		.long	0xa09
 10787 1f3a 01       		.byte	0x1
 10788 1f3b 431F0000 		.long	0x1f43
 10789 1f3f 531F0000 		.long	0x1f53
 10790 1f43 08       		.uleb128 0x8
 10791 1f44 ACAB0000 		.long	0xabac
 10792 1f48 09       		.uleb128 0x9
 10793 1f49 069A0000 		.long	0x9a06
 10794 1f4d 09       		.uleb128 0x9
 10795 1f4e 090A0000 		.long	0xa09
 10796 1f52 00       		.byte	0
 10797 1f53 32       		.uleb128 0x32
 10798 1f54 00000000 		.long	.LASF273
 10799 1f58 07       		.byte	0x7
 10800 1f59 E407     		.value	0x7e4
 10801 1f5b 00000000 		.long	.LASF277
 10802 1f5f 090A0000 		.long	0xa09
 10803 1f63 01       		.byte	0x1
 10804 1f64 6C1F0000 		.long	0x1f6c
 10805 1f68 7C1F0000 		.long	0x1f7c
 10806 1f6c 08       		.uleb128 0x8
 10807 1f6d ACAB0000 		.long	0xabac
 10808 1f71 09       		.uleb128 0x9
 10809 1f72 E4990000 		.long	0x99e4
 10810 1f76 09       		.uleb128 0x9
 10811 1f77 090A0000 		.long	0xa09
 10812 1f7b 00       		.byte	0
 10813 1f7c 32       		.uleb128 0x32
 10814 1f7d 00000000 		.long	.LASF278
 10815 1f81 07       		.byte	0x7
 10816 1f82 F307     		.value	0x7f3
 10817 1f84 00000000 		.long	.LASF279
 10818 1f88 090A0000 		.long	0xa09
 10819 1f8c 01       		.byte	0x1
 10820 1f8d 951F0000 		.long	0x1f95
 10821 1f91 A51F0000 		.long	0x1fa5
 10822 1f95 08       		.uleb128 0x8
 10823 1f96 ACAB0000 		.long	0xabac
 10824 1f9a 09       		.uleb128 0x9
 10825 1f9b C4AB0000 		.long	0xabc4
 10826 1f9f 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 492


 10827 1fa0 090A0000 		.long	0xa09
 10828 1fa4 00       		.byte	0
 10829 1fa5 32       		.uleb128 0x32
 10830 1fa6 00000000 		.long	.LASF278
 10831 1faa 07       		.byte	0x7
 10832 1fab 0408     		.value	0x804
 10833 1fad 00000000 		.long	.LASF280
 10834 1fb1 090A0000 		.long	0xa09
 10835 1fb5 01       		.byte	0x1
 10836 1fb6 BE1F0000 		.long	0x1fbe
 10837 1fba D31F0000 		.long	0x1fd3
 10838 1fbe 08       		.uleb128 0x8
 10839 1fbf ACAB0000 		.long	0xabac
 10840 1fc3 09       		.uleb128 0x9
 10841 1fc4 069A0000 		.long	0x9a06
 10842 1fc8 09       		.uleb128 0x9
 10843 1fc9 090A0000 		.long	0xa09
 10844 1fcd 09       		.uleb128 0x9
 10845 1fce 090A0000 		.long	0xa09
 10846 1fd2 00       		.byte	0
 10847 1fd3 32       		.uleb128 0x32
 10848 1fd4 00000000 		.long	.LASF278
 10849 1fd8 07       		.byte	0x7
 10850 1fd9 1108     		.value	0x811
 10851 1fdb 00000000 		.long	.LASF281
 10852 1fdf 090A0000 		.long	0xa09
 10853 1fe3 01       		.byte	0x1
 10854 1fe4 EC1F0000 		.long	0x1fec
 10855 1fe8 FC1F0000 		.long	0x1ffc
 10856 1fec 08       		.uleb128 0x8
 10857 1fed ACAB0000 		.long	0xabac
 10858 1ff1 09       		.uleb128 0x9
 10859 1ff2 069A0000 		.long	0x9a06
 10860 1ff6 09       		.uleb128 0x9
 10861 1ff7 090A0000 		.long	0xa09
 10862 1ffb 00       		.byte	0
 10863 1ffc 32       		.uleb128 0x32
 10864 1ffd 00000000 		.long	.LASF278
 10865 2001 07       		.byte	0x7
 10866 2002 2408     		.value	0x824
 10867 2004 00000000 		.long	.LASF282
 10868 2008 090A0000 		.long	0xa09
 10869 200c 01       		.byte	0x1
 10870 200d 15200000 		.long	0x2015
 10871 2011 25200000 		.long	0x2025
 10872 2015 08       		.uleb128 0x8
 10873 2016 ACAB0000 		.long	0xabac
 10874 201a 09       		.uleb128 0x9
 10875 201b E4990000 		.long	0x99e4
 10876 201f 09       		.uleb128 0x9
 10877 2020 090A0000 		.long	0xa09
 10878 2024 00       		.byte	0
 10879 2025 32       		.uleb128 0x32
 10880 2026 00000000 		.long	.LASF283
 10881 202a 07       		.byte	0x7
 10882 202b 3208     		.value	0x832
 10883 202d 00000000 		.long	.LASF284
GAS LISTING /tmp/ccmMnd7l.s 			page 493


 10884 2031 090A0000 		.long	0xa09
 10885 2035 01       		.byte	0x1
 10886 2036 3E200000 		.long	0x203e
 10887 203a 4E200000 		.long	0x204e
 10888 203e 08       		.uleb128 0x8
 10889 203f ACAB0000 		.long	0xabac
 10890 2043 09       		.uleb128 0x9
 10891 2044 C4AB0000 		.long	0xabc4
 10892 2048 09       		.uleb128 0x9
 10893 2049 090A0000 		.long	0xa09
 10894 204d 00       		.byte	0
 10895 204e 32       		.uleb128 0x32
 10896 204f 00000000 		.long	.LASF283
 10897 2053 07       		.byte	0x7
 10898 2054 4308     		.value	0x843
 10899 2056 00000000 		.long	.LASF285
 10900 205a 090A0000 		.long	0xa09
 10901 205e 01       		.byte	0x1
 10902 205f 67200000 		.long	0x2067
 10903 2063 7C200000 		.long	0x207c
 10904 2067 08       		.uleb128 0x8
 10905 2068 ACAB0000 		.long	0xabac
 10906 206c 09       		.uleb128 0x9
 10907 206d 069A0000 		.long	0x9a06
 10908 2071 09       		.uleb128 0x9
 10909 2072 090A0000 		.long	0xa09
 10910 2076 09       		.uleb128 0x9
 10911 2077 090A0000 		.long	0xa09
 10912 207b 00       		.byte	0
 10913 207c 32       		.uleb128 0x32
 10914 207d 00000000 		.long	.LASF283
 10915 2081 07       		.byte	0x7
 10916 2082 5108     		.value	0x851
 10917 2084 00000000 		.long	.LASF286
 10918 2088 090A0000 		.long	0xa09
 10919 208c 01       		.byte	0x1
 10920 208d 95200000 		.long	0x2095
 10921 2091 A5200000 		.long	0x20a5
 10922 2095 08       		.uleb128 0x8
 10923 2096 ACAB0000 		.long	0xabac
 10924 209a 09       		.uleb128 0x9
 10925 209b 069A0000 		.long	0x9a06
 10926 209f 09       		.uleb128 0x9
 10927 20a0 090A0000 		.long	0xa09
 10928 20a4 00       		.byte	0
 10929 20a5 32       		.uleb128 0x32
 10930 20a6 00000000 		.long	.LASF283
 10931 20aa 07       		.byte	0x7
 10932 20ab 6208     		.value	0x862
 10933 20ad 00000000 		.long	.LASF287
 10934 20b1 090A0000 		.long	0xa09
 10935 20b5 01       		.byte	0x1
 10936 20b6 BE200000 		.long	0x20be
 10937 20ba CE200000 		.long	0x20ce
 10938 20be 08       		.uleb128 0x8
 10939 20bf ACAB0000 		.long	0xabac
 10940 20c3 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 494


 10941 20c4 E4990000 		.long	0x99e4
 10942 20c8 09       		.uleb128 0x9
 10943 20c9 090A0000 		.long	0xa09
 10944 20cd 00       		.byte	0
 10945 20ce 32       		.uleb128 0x32
 10946 20cf 00000000 		.long	.LASF288
 10947 20d3 07       		.byte	0x7
 10948 20d4 7108     		.value	0x871
 10949 20d6 00000000 		.long	.LASF289
 10950 20da 090A0000 		.long	0xa09
 10951 20de 01       		.byte	0x1
 10952 20df E7200000 		.long	0x20e7
 10953 20e3 F7200000 		.long	0x20f7
 10954 20e7 08       		.uleb128 0x8
 10955 20e8 ACAB0000 		.long	0xabac
 10956 20ec 09       		.uleb128 0x9
 10957 20ed C4AB0000 		.long	0xabc4
 10958 20f1 09       		.uleb128 0x9
 10959 20f2 090A0000 		.long	0xa09
 10960 20f6 00       		.byte	0
 10961 20f7 32       		.uleb128 0x32
 10962 20f8 00000000 		.long	.LASF288
 10963 20fc 07       		.byte	0x7
 10964 20fd 8208     		.value	0x882
 10965 20ff 00000000 		.long	.LASF290
 10966 2103 090A0000 		.long	0xa09
 10967 2107 01       		.byte	0x1
 10968 2108 10210000 		.long	0x2110
 10969 210c 25210000 		.long	0x2125
 10970 2110 08       		.uleb128 0x8
 10971 2111 ACAB0000 		.long	0xabac
 10972 2115 09       		.uleb128 0x9
 10973 2116 069A0000 		.long	0x9a06
 10974 211a 09       		.uleb128 0x9
 10975 211b 090A0000 		.long	0xa09
 10976 211f 09       		.uleb128 0x9
 10977 2120 090A0000 		.long	0xa09
 10978 2124 00       		.byte	0
 10979 2125 32       		.uleb128 0x32
 10980 2126 00000000 		.long	.LASF288
 10981 212a 07       		.byte	0x7
 10982 212b 9008     		.value	0x890
 10983 212d 00000000 		.long	.LASF291
 10984 2131 090A0000 		.long	0xa09
 10985 2135 01       		.byte	0x1
 10986 2136 3E210000 		.long	0x213e
 10987 213a 4E210000 		.long	0x214e
 10988 213e 08       		.uleb128 0x8
 10989 213f ACAB0000 		.long	0xabac
 10990 2143 09       		.uleb128 0x9
 10991 2144 069A0000 		.long	0x9a06
 10992 2148 09       		.uleb128 0x9
 10993 2149 090A0000 		.long	0xa09
 10994 214d 00       		.byte	0
 10995 214e 32       		.uleb128 0x32
 10996 214f 00000000 		.long	.LASF288
 10997 2153 07       		.byte	0x7
GAS LISTING /tmp/ccmMnd7l.s 			page 495


 10998 2154 A108     		.value	0x8a1
 10999 2156 00000000 		.long	.LASF292
 11000 215a 090A0000 		.long	0xa09
 11001 215e 01       		.byte	0x1
 11002 215f 67210000 		.long	0x2167
 11003 2163 77210000 		.long	0x2177
 11004 2167 08       		.uleb128 0x8
 11005 2168 ACAB0000 		.long	0xabac
 11006 216c 09       		.uleb128 0x9
 11007 216d E4990000 		.long	0x99e4
 11008 2171 09       		.uleb128 0x9
 11009 2172 090A0000 		.long	0xa09
 11010 2176 00       		.byte	0
 11011 2177 32       		.uleb128 0x32
 11012 2178 00000000 		.long	.LASF293
 11013 217c 07       		.byte	0x7
 11014 217d B108     		.value	0x8b1
 11015 217f 00000000 		.long	.LASF294
 11016 2183 A8090000 		.long	0x9a8
 11017 2187 01       		.byte	0x1
 11018 2188 90210000 		.long	0x2190
 11019 218c A0210000 		.long	0x21a0
 11020 2190 08       		.uleb128 0x8
 11021 2191 ACAB0000 		.long	0xabac
 11022 2195 09       		.uleb128 0x9
 11023 2196 090A0000 		.long	0xa09
 11024 219a 09       		.uleb128 0x9
 11025 219b 090A0000 		.long	0xa09
 11026 219f 00       		.byte	0
 11027 21a0 32       		.uleb128 0x32
 11028 21a1 00000000 		.long	.LASF34
 11029 21a5 07       		.byte	0x7
 11030 21a6 C408     		.value	0x8c4
 11031 21a8 00000000 		.long	.LASF295
 11032 21ac D8800000 		.long	0x80d8
 11033 21b0 01       		.byte	0x1
 11034 21b1 B9210000 		.long	0x21b9
 11035 21b5 C4210000 		.long	0x21c4
 11036 21b9 08       		.uleb128 0x8
 11037 21ba ACAB0000 		.long	0xabac
 11038 21be 09       		.uleb128 0x9
 11039 21bf C4AB0000 		.long	0xabc4
 11040 21c3 00       		.byte	0
 11041 21c4 32       		.uleb128 0x32
 11042 21c5 00000000 		.long	.LASF34
 11043 21c9 07       		.byte	0x7
 11044 21ca E408     		.value	0x8e4
 11045 21cc 00000000 		.long	.LASF296
 11046 21d0 D8800000 		.long	0x80d8
 11047 21d4 01       		.byte	0x1
 11048 21d5 DD210000 		.long	0x21dd
 11049 21d9 F2210000 		.long	0x21f2
 11050 21dd 08       		.uleb128 0x8
 11051 21de ACAB0000 		.long	0xabac
 11052 21e2 09       		.uleb128 0x9
 11053 21e3 090A0000 		.long	0xa09
 11054 21e7 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 496


 11055 21e8 090A0000 		.long	0xa09
 11056 21ec 09       		.uleb128 0x9
 11057 21ed C4AB0000 		.long	0xabc4
 11058 21f1 00       		.byte	0
 11059 21f2 32       		.uleb128 0x32
 11060 21f3 00000000 		.long	.LASF34
 11061 21f7 07       		.byte	0x7
 11062 21f8 FE08     		.value	0x8fe
 11063 21fa 00000000 		.long	.LASF297
 11064 21fe D8800000 		.long	0x80d8
 11065 2202 01       		.byte	0x1
 11066 2203 0B220000 		.long	0x220b
 11067 2207 2A220000 		.long	0x222a
 11068 220b 08       		.uleb128 0x8
 11069 220c ACAB0000 		.long	0xabac
 11070 2210 09       		.uleb128 0x9
 11071 2211 090A0000 		.long	0xa09
 11072 2215 09       		.uleb128 0x9
 11073 2216 090A0000 		.long	0xa09
 11074 221a 09       		.uleb128 0x9
 11075 221b C4AB0000 		.long	0xabc4
 11076 221f 09       		.uleb128 0x9
 11077 2220 090A0000 		.long	0xa09
 11078 2224 09       		.uleb128 0x9
 11079 2225 090A0000 		.long	0xa09
 11080 2229 00       		.byte	0
 11081 222a 32       		.uleb128 0x32
 11082 222b 00000000 		.long	.LASF34
 11083 222f 07       		.byte	0x7
 11084 2230 1009     		.value	0x910
 11085 2232 00000000 		.long	.LASF298
 11086 2236 D8800000 		.long	0x80d8
 11087 223a 01       		.byte	0x1
 11088 223b 43220000 		.long	0x2243
 11089 223f 4E220000 		.long	0x224e
 11090 2243 08       		.uleb128 0x8
 11091 2244 ACAB0000 		.long	0xabac
 11092 2248 09       		.uleb128 0x9
 11093 2249 069A0000 		.long	0x9a06
 11094 224d 00       		.byte	0
 11095 224e 32       		.uleb128 0x32
 11096 224f 00000000 		.long	.LASF34
 11097 2253 07       		.byte	0x7
 11098 2254 2809     		.value	0x928
 11099 2256 00000000 		.long	.LASF299
 11100 225a D8800000 		.long	0x80d8
 11101 225e 01       		.byte	0x1
 11102 225f 67220000 		.long	0x2267
 11103 2263 7C220000 		.long	0x227c
 11104 2267 08       		.uleb128 0x8
 11105 2268 ACAB0000 		.long	0xabac
 11106 226c 09       		.uleb128 0x9
 11107 226d 090A0000 		.long	0xa09
 11108 2271 09       		.uleb128 0x9
 11109 2272 090A0000 		.long	0xa09
 11110 2276 09       		.uleb128 0x9
 11111 2277 069A0000 		.long	0x9a06
GAS LISTING /tmp/ccmMnd7l.s 			page 497


 11112 227b 00       		.byte	0
 11113 227c 32       		.uleb128 0x32
 11114 227d 00000000 		.long	.LASF34
 11115 2281 07       		.byte	0x7
 11116 2282 4309     		.value	0x943
 11117 2284 00000000 		.long	.LASF300
 11118 2288 D8800000 		.long	0x80d8
 11119 228c 01       		.byte	0x1
 11120 228d 95220000 		.long	0x2295
 11121 2291 AF220000 		.long	0x22af
 11122 2295 08       		.uleb128 0x8
 11123 2296 ACAB0000 		.long	0xabac
 11124 229a 09       		.uleb128 0x9
 11125 229b 090A0000 		.long	0xa09
 11126 229f 09       		.uleb128 0x9
 11127 22a0 090A0000 		.long	0xa09
 11128 22a4 09       		.uleb128 0x9
 11129 22a5 069A0000 		.long	0x9a06
 11130 22a9 09       		.uleb128 0x9
 11131 22aa 090A0000 		.long	0xa09
 11132 22ae 00       		.byte	0
 11133 22af 11       		.uleb128 0x11
 11134 22b0 B90A0000 		.long	0xab9
 11135 22b4 35       		.uleb128 0x35
 11136 22b5 00000000 		.long	.LASF301
 11137 22b9 E4990000 		.long	0x99e4
 11138 22bd 36       		.uleb128 0x36
 11139 22be 00000000 		.long	.LASF302
 11140 22c2 BD040000 		.long	0x4bd
 11141 22c6 36       		.uleb128 0x36
 11142 22c7 00000000 		.long	.LASF303
 11143 22cb 6A070000 		.long	0x76a
 11144 22cf 00       		.byte	0
 11145 22d0 14       		.uleb128 0x14
 11146 22d1 00000000 		.long	.LASF305
 11147 22d5 14       		.uleb128 0x14
 11148 22d6 00000000 		.long	.LASF306
 11149 22da 11       		.uleb128 0x11
 11150 22db A8090000 		.long	0x9a8
 11151 22df 05       		.uleb128 0x5
 11152 22e0 00000000 		.long	.LASF307
 11153 22e4 10       		.byte	0x10
 11154 22e5 26       		.byte	0x26
 11155 22e6 2F       		.byte	0x2f
 11156 22e7 BF230000 		.long	0x23bf
 11157 22eb 22       		.uleb128 0x22
 11158 22ec 00000000 		.long	.LASF68
 11159 22f0 26       		.byte	0x26
 11160 22f1 36       		.byte	0x36
 11161 22f2 069A0000 		.long	0x9a06
 11162 22f6 01       		.byte	0x1
 11163 22f7 06       		.uleb128 0x6
 11164 22f8 00000000 		.long	.LASF308
 11165 22fc 26       		.byte	0x26
 11166 22fd 3A       		.byte	0x3a
 11167 22fe EB220000 		.long	0x22eb
 11168 2302 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 498


 11169 2303 22       		.uleb128 0x22
 11170 2304 00000000 		.long	.LASF57
 11171 2308 26       		.byte	0x26
 11172 2309 35       		.byte	0x35
 11173 230a 85060000 		.long	0x685
 11174 230e 01       		.byte	0x1
 11175 230f 06       		.uleb128 0x6
 11176 2310 00000000 		.long	.LASF309
 11177 2314 26       		.byte	0x26
 11178 2315 3B       		.byte	0x3b
 11179 2316 03230000 		.long	0x2303
 11180 231a 08       		.byte	0x8
 11181 231b 22       		.uleb128 0x22
 11182 231c 00000000 		.long	.LASF69
 11183 2320 26       		.byte	0x26
 11184 2321 37       		.byte	0x37
 11185 2322 069A0000 		.long	0x9a06
 11186 2326 01       		.byte	0x1
 11187 2327 37       		.uleb128 0x37
 11188 2328 00000000 		.long	.LASF310
 11189 232c 26       		.byte	0x26
 11190 232d 3E       		.byte	0x3e
 11191 232e 36230000 		.long	0x2336
 11192 2332 46230000 		.long	0x2346
 11193 2336 08       		.uleb128 0x8
 11194 2337 D7AB0000 		.long	0xabd7
 11195 233b 09       		.uleb128 0x9
 11196 233c 1B230000 		.long	0x231b
 11197 2340 09       		.uleb128 0x9
 11198 2341 03230000 		.long	0x2303
 11199 2345 00       		.byte	0
 11200 2346 0C       		.uleb128 0xc
 11201 2347 00000000 		.long	.LASF310
 11202 234b 26       		.byte	0x26
 11203 234c 42       		.byte	0x42
 11204 234d 01       		.byte	0x1
 11205 234e 56230000 		.long	0x2356
 11206 2352 5C230000 		.long	0x235c
 11207 2356 08       		.uleb128 0x8
 11208 2357 D7AB0000 		.long	0xabd7
 11209 235b 00       		.byte	0
 11210 235c 0D       		.uleb128 0xd
 11211 235d 00000000 		.long	.LASF168
 11212 2361 26       		.byte	0x26
 11213 2362 47       		.byte	0x47
 11214 2363 00000000 		.long	.LASF311
 11215 2367 03230000 		.long	0x2303
 11216 236b 01       		.byte	0x1
 11217 236c 74230000 		.long	0x2374
 11218 2370 7A230000 		.long	0x237a
 11219 2374 08       		.uleb128 0x8
 11220 2375 DDAB0000 		.long	0xabdd
 11221 2379 00       		.byte	0
 11222 237a 0D       		.uleb128 0xd
 11223 237b 00000000 		.long	.LASF149
 11224 237f 26       		.byte	0x26
 11225 2380 4B       		.byte	0x4b
GAS LISTING /tmp/ccmMnd7l.s 			page 499


 11226 2381 00000000 		.long	.LASF312
 11227 2385 1B230000 		.long	0x231b
 11228 2389 01       		.byte	0x1
 11229 238a 92230000 		.long	0x2392
 11230 238e 98230000 		.long	0x2398
 11231 2392 08       		.uleb128 0x8
 11232 2393 DDAB0000 		.long	0xabdd
 11233 2397 00       		.byte	0
 11234 2398 38       		.uleb128 0x38
 11235 2399 656E6400 		.string	"end"
 11236 239d 26       		.byte	0x26
 11237 239e 4F       		.byte	0x4f
 11238 239f 00000000 		.long	.LASF411
 11239 23a3 1B230000 		.long	0x231b
 11240 23a7 01       		.byte	0x1
 11241 23a8 B0230000 		.long	0x23b0
 11242 23ac B6230000 		.long	0x23b6
 11243 23b0 08       		.uleb128 0x8
 11244 23b1 DDAB0000 		.long	0xabdd
 11245 23b5 00       		.byte	0
 11246 23b6 18       		.uleb128 0x18
 11247 23b7 5F4500   		.string	"_E"
 11248 23ba E4990000 		.long	0x99e4
 11249 23be 00       		.byte	0
 11250 23bf 11       		.uleb128 0x11
 11251 23c0 DF220000 		.long	0x22df
 11252 23c4 11       		.uleb128 0x11
 11253 23c5 C9230000 		.long	0x23c9
 11254 23c9 13       		.uleb128 0x13
 11255 23ca 00000000 		.long	.LASF313
 11256 23ce 27       		.byte	0x27
 11257 23cf 3E       		.byte	0x3e
 11258 23d0 A8090000 		.long	0x9a8
 11259 23d4 15       		.uleb128 0x15
 11260 23d5 00000000 		.long	.LASF314
 11261 23d9 01       		.byte	0x1
 11262 23da 28       		.byte	0x28
 11263 23db 27       		.byte	0x27
 11264 23dc 15       		.uleb128 0x15
 11265 23dd 00000000 		.long	.LASF315
 11266 23e1 01       		.byte	0x1
 11267 23e2 28       		.byte	0x28
 11268 23e3 44       		.byte	0x44
 11269 23e4 16       		.uleb128 0x16
 11270 23e5 00000000 		.long	.LASF316
 11271 23e9 01       		.byte	0x1
 11272 23ea 28       		.byte	0x28
 11273 23eb 45       		.byte	0x45
 11274 23ec 31240000 		.long	0x2431
 11275 23f0 16       		.uleb128 0x16
 11276 23f1 00000000 		.long	.LASF317
 11277 23f5 01       		.byte	0x1
 11278 23f6 28       		.byte	0x28
 11279 23f7 46       		.byte	0x46
 11280 23f8 0F240000 		.long	0x240f
 11281 23fc 39       		.uleb128 0x39
 11282 23fd 00000000 		.long	.LASF317
GAS LISTING /tmp/ccmMnd7l.s 			page 500


 11283 2401 28       		.byte	0x28
 11284 2402 46       		.byte	0x46
 11285 2403 07240000 		.long	0x2407
 11286 2407 08       		.uleb128 0x8
 11287 2408 FCAB0000 		.long	0xabfc
 11288 240c 3A       		.uleb128 0x3a
 11289 240d 00       		.byte	0
 11290 240e 00       		.byte	0
 11291 240f 25       		.uleb128 0x25
 11292 2410 DC230000 		.long	0x23dc
 11293 2414 00       		.byte	0
 11294 2415 06       		.uleb128 0x6
 11295 2416 00000000 		.long	.LASF318
 11296 241a 28       		.byte	0x28
 11297 241b 46       		.byte	0x46
 11298 241c F0230000 		.long	0x23f0
 11299 2420 00       		.byte	0
 11300 2421 28       		.uleb128 0x28
 11301 2422 00000000 		.long	.LASF316
 11302 2426 2A240000 		.long	0x242a
 11303 242a 08       		.uleb128 0x8
 11304 242b 02AC0000 		.long	0xac02
 11305 242f 00       		.byte	0
 11306 2430 00       		.byte	0
 11307 2431 3B       		.uleb128 0x3b
 11308 2432 00000000 		.long	.LASF320
 11309 2436 01       		.byte	0x1
 11310 2437 0A       		.byte	0xa
 11311 2438 0002     		.value	0x200
 11312 243a 5B240000 		.long	0x245b
 11313 243e 3C       		.uleb128 0x3c
 11314 243f 00000000 		.long	.LASF13
 11315 2443 0A       		.byte	0xa
 11316 2444 0302     		.value	0x203
 11317 2446 00000000 		.long	.LASF321
 11318 244a 01       		.byte	0x1
 11319 244b 4F240000 		.long	0x244f
 11320 244f 08       		.uleb128 0x8
 11321 2450 08AC0000 		.long	0xac08
 11322 2454 09       		.uleb128 0x9
 11323 2455 0EAC0000 		.long	0xac0e
 11324 2459 00       		.byte	0
 11325 245a 00       		.byte	0
 11326 245b 3D       		.uleb128 0x3d
 11327 245c 00000000 		.long	.LASF322
 11328 2460 01       		.byte	0x1
 11329 2461 0A       		.byte	0xa
 11330 2462 2C04     		.value	0x42c
 11331 2464 16       		.uleb128 0x16
 11332 2465 00000000 		.long	.LASF323
 11333 2469 01       		.byte	0x1
 11334 246a 1B       		.byte	0x1b
 11335 246b 45       		.byte	0x45
 11336 246c B7240000 		.long	0x24b7
 11337 2470 17       		.uleb128 0x17
 11338 2471 00000000 		.long	.LASF24
 11339 2475 1B       		.byte	0x1b
GAS LISTING /tmp/ccmMnd7l.s 			page 501


 11340 2476 47       		.byte	0x47
 11341 2477 019A0000 		.long	0x9a01
 11342 247b 13       		.uleb128 0x13
 11343 247c 00000000 		.long	.LASF19
 11344 2480 1B       		.byte	0x1b
 11345 2481 48       		.byte	0x48
 11346 2482 D8800000 		.long	0x80d8
 11347 2486 0B       		.uleb128 0xb
 11348 2487 00000000 		.long	.LASF324
 11349 248b 1B       		.byte	0x1b
 11350 248c 4A       		.byte	0x4a
 11351 248d 00000000 		.long	.LASF325
 11352 2491 7B240000 		.long	0x247b
 11353 2495 9D240000 		.long	0x249d
 11354 2499 A3240000 		.long	0x24a3
 11355 249d 08       		.uleb128 0x8
 11356 249e 14AC0000 		.long	0xac14
 11357 24a2 00       		.byte	0
 11358 24a3 18       		.uleb128 0x18
 11359 24a4 5F547000 		.string	"_Tp"
 11360 24a8 D8800000 		.long	0x80d8
 11361 24ac 19       		.uleb128 0x19
 11362 24ad 5F5F7600 		.string	"__v"
 11363 24b1 D8800000 		.long	0x80d8
 11364 24b5 00       		.byte	0
 11365 24b6 00       		.byte	0
 11366 24b7 11       		.uleb128 0x11
 11367 24b8 64240000 		.long	0x2464
 11368 24bc 11       		.uleb128 0x11
 11369 24bd 85060000 		.long	0x685
 11370 24c1 3E       		.uleb128 0x3e
 11371 24c2 00000000 		.long	.LASF345
 11372 24c6 04       		.byte	0x4
 11373 24c7 15       		.byte	0x15
 11374 24c8 33       		.byte	0x33
 11375 24c9 50250000 		.long	0x2550
 11376 24cd 3F       		.uleb128 0x3f
 11377 24ce 00000000 		.long	.LASF326
 11378 24d2 01       		.sleb128 1
 11379 24d3 3F       		.uleb128 0x3f
 11380 24d4 00000000 		.long	.LASF327
 11381 24d8 02       		.sleb128 2
 11382 24d9 3F       		.uleb128 0x3f
 11383 24da 00000000 		.long	.LASF328
 11384 24de 04       		.sleb128 4
 11385 24df 3F       		.uleb128 0x3f
 11386 24e0 00000000 		.long	.LASF329
 11387 24e4 08       		.sleb128 8
 11388 24e5 3F       		.uleb128 0x3f
 11389 24e6 00000000 		.long	.LASF330
 11390 24ea 10       		.sleb128 16
 11391 24eb 3F       		.uleb128 0x3f
 11392 24ec 00000000 		.long	.LASF331
 11393 24f0 20       		.sleb128 32
 11394 24f1 3F       		.uleb128 0x3f
 11395 24f2 00000000 		.long	.LASF332
 11396 24f6 C000     		.sleb128 64
GAS LISTING /tmp/ccmMnd7l.s 			page 502


 11397 24f8 3F       		.uleb128 0x3f
 11398 24f9 00000000 		.long	.LASF333
 11399 24fd 8001     		.sleb128 128
 11400 24ff 3F       		.uleb128 0x3f
 11401 2500 00000000 		.long	.LASF334
 11402 2504 8002     		.sleb128 256
 11403 2506 3F       		.uleb128 0x3f
 11404 2507 00000000 		.long	.LASF335
 11405 250b 8004     		.sleb128 512
 11406 250d 3F       		.uleb128 0x3f
 11407 250e 00000000 		.long	.LASF336
 11408 2512 8008     		.sleb128 1024
 11409 2514 3F       		.uleb128 0x3f
 11410 2515 00000000 		.long	.LASF337
 11411 2519 8010     		.sleb128 2048
 11412 251b 3F       		.uleb128 0x3f
 11413 251c 00000000 		.long	.LASF338
 11414 2520 8020     		.sleb128 4096
 11415 2522 3F       		.uleb128 0x3f
 11416 2523 00000000 		.long	.LASF339
 11417 2527 80C000   		.sleb128 8192
 11418 252a 3F       		.uleb128 0x3f
 11419 252b 00000000 		.long	.LASF340
 11420 252f 808001   		.sleb128 16384
 11421 2532 3F       		.uleb128 0x3f
 11422 2533 00000000 		.long	.LASF341
 11423 2537 B001     		.sleb128 176
 11424 2539 3F       		.uleb128 0x3f
 11425 253a 00000000 		.long	.LASF342
 11426 253e CA00     		.sleb128 74
 11427 2540 3F       		.uleb128 0x3f
 11428 2541 00000000 		.long	.LASF343
 11429 2545 8402     		.sleb128 260
 11430 2547 3F       		.uleb128 0x3f
 11431 2548 00000000 		.long	.LASF344
 11432 254c 808004   		.sleb128 65536
 11433 254f 00       		.byte	0
 11434 2550 3E       		.uleb128 0x3e
 11435 2551 00000000 		.long	.LASF346
 11436 2555 04       		.byte	0x4
 11437 2556 15       		.byte	0x15
 11438 2557 67       		.byte	0x67
 11439 2558 89250000 		.long	0x2589
 11440 255c 3F       		.uleb128 0x3f
 11441 255d 00000000 		.long	.LASF347
 11442 2561 01       		.sleb128 1
 11443 2562 3F       		.uleb128 0x3f
 11444 2563 00000000 		.long	.LASF348
 11445 2567 02       		.sleb128 2
 11446 2568 3F       		.uleb128 0x3f
 11447 2569 00000000 		.long	.LASF349
 11448 256d 04       		.sleb128 4
 11449 256e 3F       		.uleb128 0x3f
 11450 256f 00000000 		.long	.LASF350
 11451 2573 08       		.sleb128 8
 11452 2574 3F       		.uleb128 0x3f
 11453 2575 00000000 		.long	.LASF351
GAS LISTING /tmp/ccmMnd7l.s 			page 503


 11454 2579 10       		.sleb128 16
 11455 257a 3F       		.uleb128 0x3f
 11456 257b 00000000 		.long	.LASF352
 11457 257f 20       		.sleb128 32
 11458 2580 3F       		.uleb128 0x3f
 11459 2581 00000000 		.long	.LASF353
 11460 2585 808004   		.sleb128 65536
 11461 2588 00       		.byte	0
 11462 2589 3E       		.uleb128 0x3e
 11463 258a 00000000 		.long	.LASF354
 11464 258e 04       		.byte	0x4
 11465 258f 15       		.byte	0x15
 11466 2590 8F       		.byte	0x8f
 11467 2591 B6250000 		.long	0x25b6
 11468 2595 3F       		.uleb128 0x3f
 11469 2596 00000000 		.long	.LASF355
 11470 259a 00       		.sleb128 0
 11471 259b 3F       		.uleb128 0x3f
 11472 259c 00000000 		.long	.LASF356
 11473 25a0 01       		.sleb128 1
 11474 25a1 3F       		.uleb128 0x3f
 11475 25a2 00000000 		.long	.LASF357
 11476 25a6 02       		.sleb128 2
 11477 25a7 3F       		.uleb128 0x3f
 11478 25a8 00000000 		.long	.LASF358
 11479 25ac 04       		.sleb128 4
 11480 25ad 3F       		.uleb128 0x3f
 11481 25ae 00000000 		.long	.LASF359
 11482 25b2 808004   		.sleb128 65536
 11483 25b5 00       		.byte	0
 11484 25b6 3E       		.uleb128 0x3e
 11485 25b7 00000000 		.long	.LASF360
 11486 25bb 04       		.byte	0x4
 11487 25bc 15       		.byte	0x15
 11488 25bd B5       		.byte	0xb5
 11489 25be DD250000 		.long	0x25dd
 11490 25c2 3F       		.uleb128 0x3f
 11491 25c3 00000000 		.long	.LASF361
 11492 25c7 00       		.sleb128 0
 11493 25c8 3F       		.uleb128 0x3f
 11494 25c9 00000000 		.long	.LASF362
 11495 25cd 01       		.sleb128 1
 11496 25ce 3F       		.uleb128 0x3f
 11497 25cf 00000000 		.long	.LASF363
 11498 25d3 02       		.sleb128 2
 11499 25d4 3F       		.uleb128 0x3f
 11500 25d5 00000000 		.long	.LASF364
 11501 25d9 808004   		.sleb128 65536
 11502 25dc 00       		.byte	0
 11503 25dd 40       		.uleb128 0x40
 11504 25de 00000000 		.long	.LASF396
 11505 25e2 66280000 		.long	0x2866
 11506 25e6 41       		.uleb128 0x41
 11507 25e7 00000000 		.long	.LASF367
 11508 25eb 01       		.byte	0x1
 11509 25ec 15       		.byte	0x15
 11510 25ed 1502     		.value	0x215
GAS LISTING /tmp/ccmMnd7l.s 			page 504


 11511 25ef 01       		.byte	0x1
 11512 25f0 3C260000 		.long	0x263c
 11513 25f4 42       		.uleb128 0x42
 11514 25f5 00000000 		.long	.LASF365
 11515 25f9 15       		.byte	0x15
 11516 25fa 1D02     		.value	0x21d
 11517 25fc BFA40000 		.long	0xa4bf
 11518 2600 42       		.uleb128 0x42
 11519 2601 00000000 		.long	.LASF366
 11520 2605 15       		.byte	0x15
 11521 2606 1E02     		.value	0x21e
 11522 2608 E0800000 		.long	0x80e0
 11523 260c 30       		.uleb128 0x30
 11524 260d 00000000 		.long	.LASF367
 11525 2611 15       		.byte	0x15
 11526 2612 1902     		.value	0x219
 11527 2614 01       		.byte	0x1
 11528 2615 1D260000 		.long	0x261d
 11529 2619 23260000 		.long	0x2623
 11530 261d 08       		.uleb128 0x8
 11531 261e 25AC0000 		.long	0xac25
 11532 2622 00       		.byte	0
 11533 2623 43       		.uleb128 0x43
 11534 2624 00000000 		.long	.LASF368
 11535 2628 15       		.byte	0x15
 11536 2629 1A02     		.value	0x21a
 11537 262b 01       		.byte	0x1
 11538 262c 30260000 		.long	0x2630
 11539 2630 08       		.uleb128 0x8
 11540 2631 25AC0000 		.long	0xac25
 11541 2635 08       		.uleb128 0x8
 11542 2636 D8800000 		.long	0x80d8
 11543 263a 00       		.byte	0
 11544 263b 00       		.byte	0
 11545 263c 44       		.uleb128 0x44
 11546 263d 00000000 		.long	.LASF369
 11547 2641 15       		.byte	0x15
 11548 2642 4A01     		.value	0x14a
 11549 2644 89250000 		.long	0x2589
 11550 2648 01       		.byte	0x1
 11551 2649 32       		.uleb128 0x32
 11552 264a 00000000 		.long	.LASF370
 11553 264e 15       		.byte	0x15
 11554 264f 5302     		.value	0x253
 11555 2651 00000000 		.long	.LASF371
 11556 2655 72260000 		.long	0x2672
 11557 2659 01       		.byte	0x1
 11558 265a 62260000 		.long	0x2662
 11559 265e 72260000 		.long	0x2672
 11560 2662 08       		.uleb128 0x8
 11561 2663 02B60000 		.long	0xb602
 11562 2667 09       		.uleb128 0x9
 11563 2668 72260000 		.long	0x2672
 11564 266c 09       		.uleb128 0x9
 11565 266d 72260000 		.long	0x2672
 11566 2671 00       		.byte	0
 11567 2672 22       		.uleb128 0x22
GAS LISTING /tmp/ccmMnd7l.s 			page 505


 11568 2673 00000000 		.long	.LASF372
 11569 2677 15       		.byte	0x15
 11570 2678 FF       		.byte	0xff
 11571 2679 C1240000 		.long	0x24c1
 11572 267d 01       		.byte	0x1
 11573 267e 45       		.uleb128 0x45
 11574 267f 00000000 		.long	.LASF373
 11575 2683 15       		.byte	0x15
 11576 2684 0201     		.value	0x102
 11577 2686 8C260000 		.long	0x268c
 11578 268a 01       		.byte	0x1
 11579 268b 01       		.byte	0x1
 11580 268c 11       		.uleb128 0x11
 11581 268d 72260000 		.long	0x2672
 11582 2691 46       		.uleb128 0x46
 11583 2692 64656300 		.string	"dec"
 11584 2696 15       		.byte	0x15
 11585 2697 0501     		.value	0x105
 11586 2699 8C260000 		.long	0x268c
 11587 269d 01       		.byte	0x1
 11588 269e 02       		.byte	0x2
 11589 269f 45       		.uleb128 0x45
 11590 26a0 00000000 		.long	.LASF374
 11591 26a4 15       		.byte	0x15
 11592 26a5 0801     		.value	0x108
 11593 26a7 8C260000 		.long	0x268c
 11594 26ab 01       		.byte	0x1
 11595 26ac 04       		.byte	0x4
 11596 26ad 46       		.uleb128 0x46
 11597 26ae 68657800 		.string	"hex"
 11598 26b2 15       		.byte	0x15
 11599 26b3 0B01     		.value	0x10b
 11600 26b5 8C260000 		.long	0x268c
 11601 26b9 01       		.byte	0x1
 11602 26ba 08       		.byte	0x8
 11603 26bb 45       		.uleb128 0x45
 11604 26bc 00000000 		.long	.LASF375
 11605 26c0 15       		.byte	0x15
 11606 26c1 1001     		.value	0x110
 11607 26c3 8C260000 		.long	0x268c
 11608 26c7 01       		.byte	0x1
 11609 26c8 10       		.byte	0x10
 11610 26c9 45       		.uleb128 0x45
 11611 26ca 00000000 		.long	.LASF376
 11612 26ce 15       		.byte	0x15
 11613 26cf 1401     		.value	0x114
 11614 26d1 8C260000 		.long	0x268c
 11615 26d5 01       		.byte	0x1
 11616 26d6 20       		.byte	0x20
 11617 26d7 46       		.uleb128 0x46
 11618 26d8 6F637400 		.string	"oct"
 11619 26dc 15       		.byte	0x15
 11620 26dd 1701     		.value	0x117
 11621 26df 8C260000 		.long	0x268c
 11622 26e3 01       		.byte	0x1
 11623 26e4 40       		.byte	0x40
 11624 26e5 45       		.uleb128 0x45
GAS LISTING /tmp/ccmMnd7l.s 			page 506


 11625 26e6 00000000 		.long	.LASF377
 11626 26ea 15       		.byte	0x15
 11627 26eb 1B01     		.value	0x11b
 11628 26ed 8C260000 		.long	0x268c
 11629 26f1 01       		.byte	0x1
 11630 26f2 80       		.byte	0x80
 11631 26f3 47       		.uleb128 0x47
 11632 26f4 00000000 		.long	.LASF378
 11633 26f8 15       		.byte	0x15
 11634 26f9 1E01     		.value	0x11e
 11635 26fb 8C260000 		.long	0x268c
 11636 26ff 01       		.byte	0x1
 11637 2700 0001     		.value	0x100
 11638 2702 47       		.uleb128 0x47
 11639 2703 00000000 		.long	.LASF379
 11640 2707 15       		.byte	0x15
 11641 2708 2201     		.value	0x122
 11642 270a 8C260000 		.long	0x268c
 11643 270e 01       		.byte	0x1
 11644 270f 0002     		.value	0x200
 11645 2711 47       		.uleb128 0x47
 11646 2712 00000000 		.long	.LASF380
 11647 2716 15       		.byte	0x15
 11648 2717 2601     		.value	0x126
 11649 2719 8C260000 		.long	0x268c
 11650 271d 01       		.byte	0x1
 11651 271e 0004     		.value	0x400
 11652 2720 47       		.uleb128 0x47
 11653 2721 00000000 		.long	.LASF381
 11654 2725 15       		.byte	0x15
 11655 2726 2901     		.value	0x129
 11656 2728 8C260000 		.long	0x268c
 11657 272c 01       		.byte	0x1
 11658 272d 0008     		.value	0x800
 11659 272f 47       		.uleb128 0x47
 11660 2730 00000000 		.long	.LASF382
 11661 2734 15       		.byte	0x15
 11662 2735 2C01     		.value	0x12c
 11663 2737 8C260000 		.long	0x268c
 11664 273b 01       		.byte	0x1
 11665 273c 0010     		.value	0x1000
 11666 273e 47       		.uleb128 0x47
 11667 273f 00000000 		.long	.LASF383
 11668 2743 15       		.byte	0x15
 11669 2744 2F01     		.value	0x12f
 11670 2746 8C260000 		.long	0x268c
 11671 274a 01       		.byte	0x1
 11672 274b 0020     		.value	0x2000
 11673 274d 47       		.uleb128 0x47
 11674 274e 00000000 		.long	.LASF384
 11675 2752 15       		.byte	0x15
 11676 2753 3301     		.value	0x133
 11677 2755 8C260000 		.long	0x268c
 11678 2759 01       		.byte	0x1
 11679 275a 0040     		.value	0x4000
 11680 275c 45       		.uleb128 0x45
 11681 275d 00000000 		.long	.LASF385
GAS LISTING /tmp/ccmMnd7l.s 			page 507


 11682 2761 15       		.byte	0x15
 11683 2762 3601     		.value	0x136
 11684 2764 8C260000 		.long	0x268c
 11685 2768 01       		.byte	0x1
 11686 2769 B0       		.byte	0xb0
 11687 276a 45       		.uleb128 0x45
 11688 276b 00000000 		.long	.LASF386
 11689 276f 15       		.byte	0x15
 11690 2770 3901     		.value	0x139
 11691 2772 8C260000 		.long	0x268c
 11692 2776 01       		.byte	0x1
 11693 2777 4A       		.byte	0x4a
 11694 2778 47       		.uleb128 0x47
 11695 2779 00000000 		.long	.LASF387
 11696 277d 15       		.byte	0x15
 11697 277e 3C01     		.value	0x13c
 11698 2780 8C260000 		.long	0x268c
 11699 2784 01       		.byte	0x1
 11700 2785 0401     		.value	0x104
 11701 2787 45       		.uleb128 0x45
 11702 2788 00000000 		.long	.LASF388
 11703 278c 15       		.byte	0x15
 11704 278d 4E01     		.value	0x14e
 11705 278f 95270000 		.long	0x2795
 11706 2793 01       		.byte	0x1
 11707 2794 01       		.byte	0x1
 11708 2795 11       		.uleb128 0x11
 11709 2796 3C260000 		.long	0x263c
 11710 279a 45       		.uleb128 0x45
 11711 279b 00000000 		.long	.LASF389
 11712 279f 15       		.byte	0x15
 11713 27a0 5101     		.value	0x151
 11714 27a2 95270000 		.long	0x2795
 11715 27a6 01       		.byte	0x1
 11716 27a7 02       		.byte	0x2
 11717 27a8 45       		.uleb128 0x45
 11718 27a9 00000000 		.long	.LASF390
 11719 27ad 15       		.byte	0x15
 11720 27ae 5601     		.value	0x156
 11721 27b0 95270000 		.long	0x2795
 11722 27b4 01       		.byte	0x1
 11723 27b5 04       		.byte	0x4
 11724 27b6 45       		.uleb128 0x45
 11725 27b7 00000000 		.long	.LASF391
 11726 27bb 15       		.byte	0x15
 11727 27bc 5901     		.value	0x159
 11728 27be 95270000 		.long	0x2795
 11729 27c2 01       		.byte	0x1
 11730 27c3 00       		.byte	0
 11731 27c4 44       		.uleb128 0x44
 11732 27c5 00000000 		.long	.LASF392
 11733 27c9 15       		.byte	0x15
 11734 27ca 6901     		.value	0x169
 11735 27cc 50250000 		.long	0x2550
 11736 27d0 01       		.byte	0x1
 11737 27d1 46       		.uleb128 0x46
 11738 27d2 61707000 		.string	"app"
GAS LISTING /tmp/ccmMnd7l.s 			page 508


 11739 27d6 15       		.byte	0x15
 11740 27d7 6C01     		.value	0x16c
 11741 27d9 DF270000 		.long	0x27df
 11742 27dd 01       		.byte	0x1
 11743 27de 01       		.byte	0x1
 11744 27df 11       		.uleb128 0x11
 11745 27e0 C4270000 		.long	0x27c4
 11746 27e4 46       		.uleb128 0x46
 11747 27e5 61746500 		.string	"ate"
 11748 27e9 15       		.byte	0x15
 11749 27ea 6F01     		.value	0x16f
 11750 27ec DF270000 		.long	0x27df
 11751 27f0 01       		.byte	0x1
 11752 27f1 02       		.byte	0x2
 11753 27f2 45       		.uleb128 0x45
 11754 27f3 00000000 		.long	.LASF393
 11755 27f7 15       		.byte	0x15
 11756 27f8 7401     		.value	0x174
 11757 27fa DF270000 		.long	0x27df
 11758 27fe 01       		.byte	0x1
 11759 27ff 04       		.byte	0x4
 11760 2800 46       		.uleb128 0x46
 11761 2801 696E00   		.string	"in"
 11762 2804 15       		.byte	0x15
 11763 2805 7701     		.value	0x177
 11764 2807 DF270000 		.long	0x27df
 11765 280b 01       		.byte	0x1
 11766 280c 08       		.byte	0x8
 11767 280d 46       		.uleb128 0x46
 11768 280e 6F757400 		.string	"out"
 11769 2812 15       		.byte	0x15
 11770 2813 7A01     		.value	0x17a
 11771 2815 DF270000 		.long	0x27df
 11772 2819 01       		.byte	0x1
 11773 281a 10       		.byte	0x10
 11774 281b 45       		.uleb128 0x45
 11775 281c 00000000 		.long	.LASF394
 11776 2820 15       		.byte	0x15
 11777 2821 7D01     		.value	0x17d
 11778 2823 DF270000 		.long	0x27df
 11779 2827 01       		.byte	0x1
 11780 2828 20       		.byte	0x20
 11781 2829 44       		.uleb128 0x44
 11782 282a 00000000 		.long	.LASF395
 11783 282e 15       		.byte	0x15
 11784 282f 8901     		.value	0x189
 11785 2831 B6250000 		.long	0x25b6
 11786 2835 01       		.byte	0x1
 11787 2836 46       		.uleb128 0x46
 11788 2837 62656700 		.string	"beg"
 11789 283b 15       		.byte	0x15
 11790 283c 8C01     		.value	0x18c
 11791 283e 44280000 		.long	0x2844
 11792 2842 01       		.byte	0x1
 11793 2843 00       		.byte	0
 11794 2844 11       		.uleb128 0x11
 11795 2845 29280000 		.long	0x2829
GAS LISTING /tmp/ccmMnd7l.s 			page 509


 11796 2849 46       		.uleb128 0x46
 11797 284a 63757200 		.string	"cur"
 11798 284e 15       		.byte	0x15
 11799 284f 8F01     		.value	0x18f
 11800 2851 44280000 		.long	0x2844
 11801 2855 01       		.byte	0x1
 11802 2856 01       		.byte	0x1
 11803 2857 46       		.uleb128 0x46
 11804 2858 656E6400 		.string	"end"
 11805 285c 15       		.byte	0x15
 11806 285d 9201     		.value	0x192
 11807 285f 44280000 		.long	0x2844
 11808 2863 01       		.byte	0x1
 11809 2864 02       		.byte	0x2
 11810 2865 00       		.byte	0
 11811 2866 12       		.uleb128 0x12
 11812 2867 29       		.byte	0x29
 11813 2868 52       		.byte	0x52
 11814 2869 36AC0000 		.long	0xac36
 11815 286d 12       		.uleb128 0x12
 11816 286e 29       		.byte	0x29
 11817 286f 53       		.byte	0x53
 11818 2870 2BAC0000 		.long	0xac2b
 11819 2874 12       		.uleb128 0x12
 11820 2875 29       		.byte	0x29
 11821 2876 54       		.byte	0x54
 11822 2877 7E990000 		.long	0x997e
 11823 287b 12       		.uleb128 0x12
 11824 287c 29       		.byte	0x29
 11825 287d 5C       		.byte	0x5c
 11826 287e 4CAC0000 		.long	0xac4c
 11827 2882 12       		.uleb128 0x12
 11828 2883 29       		.byte	0x29
 11829 2884 65       		.byte	0x65
 11830 2885 66AC0000 		.long	0xac66
 11831 2889 12       		.uleb128 0x12
 11832 288a 29       		.byte	0x29
 11833 288b 68       		.byte	0x68
 11834 288c 80AC0000 		.long	0xac80
 11835 2890 12       		.uleb128 0x12
 11836 2891 29       		.byte	0x29
 11837 2892 69       		.byte	0x69
 11838 2893 95AC0000 		.long	0xac95
 11839 2897 40       		.uleb128 0x40
 11840 2898 00000000 		.long	.LASF397
 11841 289c F0290000 		.long	0x29f0
 11842 28a0 0D       		.uleb128 0xd
 11843 28a1 00000000 		.long	.LASF398
 11844 28a5 08       		.byte	0x8
 11845 28a6 DC       		.byte	0xdc
 11846 28a7 00000000 		.long	.LASF399
 11847 28ab 83B60000 		.long	0xb683
 11848 28af 01       		.byte	0x1
 11849 28b0 B8280000 		.long	0x28b8
 11850 28b4 C3280000 		.long	0x28c3
 11851 28b8 08       		.uleb128 0x8
 11852 28b9 89B60000 		.long	0xb689
GAS LISTING /tmp/ccmMnd7l.s 			page 510


 11853 28bd 09       		.uleb128 0x9
 11854 28be 29000000 		.long	0x29
 11855 28c2 00       		.byte	0
 11856 28c3 22       		.uleb128 0x22
 11857 28c4 00000000 		.long	.LASF400
 11858 28c8 08       		.byte	0x8
 11859 28c9 47       		.byte	0x47
 11860 28ca 97280000 		.long	0x2897
 11861 28ce 01       		.byte	0x1
 11862 28cf 0D       		.uleb128 0xd
 11863 28d0 00000000 		.long	.LASF398
 11864 28d4 08       		.byte	0x8
 11865 28d5 6C       		.byte	0x6c
 11866 28d6 00000000 		.long	.LASF401
 11867 28da 83B60000 		.long	0xb683
 11868 28de 01       		.byte	0x1
 11869 28df E7280000 		.long	0x28e7
 11870 28e3 F2280000 		.long	0x28f2
 11871 28e7 08       		.uleb128 0x8
 11872 28e8 89B60000 		.long	0xb689
 11873 28ec 09       		.uleb128 0x9
 11874 28ed BAB60000 		.long	0xb6ba
 11875 28f1 00       		.byte	0
 11876 28f2 0D       		.uleb128 0xd
 11877 28f3 00000000 		.long	.LASF398
 11878 28f7 08       		.byte	0x8
 11879 28f8 AA       		.byte	0xaa
 11880 28f9 00000000 		.long	.LASF402
 11881 28fd 83B60000 		.long	0xb683
 11882 2901 01       		.byte	0x1
 11883 2902 0A290000 		.long	0x290a
 11884 2906 15290000 		.long	0x2915
 11885 290a 08       		.uleb128 0x8
 11886 290b 89B60000 		.long	0xb689
 11887 290f 09       		.uleb128 0x9
 11888 2910 03810000 		.long	0x8103
 11889 2914 00       		.byte	0
 11890 2915 0D       		.uleb128 0xd
 11891 2916 00000000 		.long	.LASF398
 11892 291a 08       		.byte	0x8
 11893 291b 7F       		.byte	0x7f
 11894 291c 00000000 		.long	.LASF403
 11895 2920 83B60000 		.long	0xb683
 11896 2924 01       		.byte	0x1
 11897 2925 2D290000 		.long	0x292d
 11898 2929 38290000 		.long	0x2938
 11899 292d 08       		.uleb128 0x8
 11900 292e 89B60000 		.long	0xb689
 11901 2932 09       		.uleb128 0x9
 11902 2933 8ADF0000 		.long	0xdf8a
 11903 2937 00       		.byte	0
 11904 2938 35       		.uleb128 0x35
 11905 2939 00000000 		.long	.LASF301
 11906 293d E4990000 		.long	0x99e4
 11907 2941 36       		.uleb128 0x36
 11908 2942 00000000 		.long	.LASF302
 11909 2946 BD040000 		.long	0x4bd
GAS LISTING /tmp/ccmMnd7l.s 			page 511


 11910 294a 0D       		.uleb128 0xd
 11911 294b 00000000 		.long	.LASF404
 11912 294f 2A       		.byte	0x2a
 11913 2950 3F       		.byte	0x3f
 11914 2951 00000000 		.long	.LASF405
 11915 2955 AAAC0000 		.long	0xacaa
 11916 2959 02       		.byte	0x2
 11917 295a 6B290000 		.long	0x296b
 11918 295e 76290000 		.long	0x2976
 11919 2962 35       		.uleb128 0x35
 11920 2963 00000000 		.long	.LASF406
 11921 2967 03810000 		.long	0x8103
 11922 296b 08       		.uleb128 0x8
 11923 296c 89B60000 		.long	0xb689
 11924 2970 09       		.uleb128 0x9
 11925 2971 03810000 		.long	0x8103
 11926 2975 00       		.byte	0
 11927 2976 0D       		.uleb128 0xd
 11928 2977 00000000 		.long	.LASF407
 11929 297b 2A       		.byte	0x2a
 11930 297c D2       		.byte	0xd2
 11931 297d 00000000 		.long	.LASF408
 11932 2981 AAAC0000 		.long	0xacaa
 11933 2985 01       		.byte	0x1
 11934 2986 8E290000 		.long	0x298e
 11935 298a 94290000 		.long	0x2994
 11936 298e 08       		.uleb128 0x8
 11937 298f 89B60000 		.long	0xb689
 11938 2993 00       		.byte	0
 11939 2994 0D       		.uleb128 0xd
 11940 2995 00000000 		.long	.LASF409
 11941 2999 2A       		.byte	0x2a
 11942 299a 3F       		.byte	0x3f
 11943 299b 00000000 		.long	.LASF410
 11944 299f AAAC0000 		.long	0xacaa
 11945 29a3 02       		.byte	0x2
 11946 29a4 B5290000 		.long	0x29b5
 11947 29a8 C0290000 		.long	0x29c0
 11948 29ac 35       		.uleb128 0x35
 11949 29ad 00000000 		.long	.LASF406
 11950 29b1 29000000 		.long	0x29
 11951 29b5 08       		.uleb128 0x8
 11952 29b6 89B60000 		.long	0xb689
 11953 29ba 09       		.uleb128 0x9
 11954 29bb 29000000 		.long	0x29
 11955 29bf 00       		.byte	0
 11956 29c0 38       		.uleb128 0x38
 11957 29c1 70757400 		.string	"put"
 11958 29c5 2A       		.byte	0x2a
 11959 29c6 94       		.byte	0x94
 11960 29c7 00000000 		.long	.LASF412
 11961 29cb AAAC0000 		.long	0xacaa
 11962 29cf 01       		.byte	0x1
 11963 29d0 D8290000 		.long	0x29d8
 11964 29d4 E3290000 		.long	0x29e3
 11965 29d8 08       		.uleb128 0x8
 11966 29d9 89B60000 		.long	0xb689
GAS LISTING /tmp/ccmMnd7l.s 			page 512


 11967 29dd 09       		.uleb128 0x9
 11968 29de E3290000 		.long	0x29e3
 11969 29e2 00       		.byte	0
 11970 29e3 22       		.uleb128 0x22
 11971 29e4 00000000 		.long	.LASF30
 11972 29e8 08       		.byte	0x8
 11973 29e9 3E       		.byte	0x3e
 11974 29ea E4990000 		.long	0x99e4
 11975 29ee 01       		.byte	0x1
 11976 29ef 00       		.byte	0
 11977 29f0 40       		.uleb128 0x40
 11978 29f1 00000000 		.long	.LASF413
 11979 29f5 7C2A0000 		.long	0x2a7c
 11980 29f9 32       		.uleb128 0x32
 11981 29fa 00000000 		.long	.LASF414
 11982 29fe 01       		.byte	0x1
 11983 29ff 6103     		.value	0x361
 11984 2a01 00000000 		.long	.LASF415
 11985 2a05 1D2A0000 		.long	0x2a1d
 11986 2a09 01       		.byte	0x1
 11987 2a0a 122A0000 		.long	0x2a12
 11988 2a0e 1D2A0000 		.long	0x2a1d
 11989 2a12 08       		.uleb128 0x8
 11990 2a13 51B60000 		.long	0xb651
 11991 2a17 09       		.uleb128 0x9
 11992 2a18 E4990000 		.long	0x99e4
 11993 2a1c 00       		.byte	0
 11994 2a1d 44       		.uleb128 0x44
 11995 2a1e 00000000 		.long	.LASF30
 11996 2a22 01       		.byte	0x1
 11997 2a23 A702     		.value	0x2a7
 11998 2a25 E4990000 		.long	0x99e4
 11999 2a29 01       		.byte	0x1
 12000 2a2a 48       		.uleb128 0x48
 12001 2a2b 00000000 		.long	.LASF1666
 12002 2a2f 01       		.byte	0x1
 12003 2a30 3304     		.value	0x433
 12004 2a32 00000000 		.long	.LASF1608
 12005 2a36 1D2A0000 		.long	0x2a1d
 12006 2a3a 01       		.byte	0x1
 12007 2a3b 02       		.uleb128 0x2
 12008 2a3c 10       		.byte	0x10
 12009 2a3d 06       		.uleb128 0x6
 12010 2a3e F0290000 		.long	0x29f0
 12011 2a42 02       		.byte	0x2
 12012 2a43 4B2A0000 		.long	0x2a4b
 12013 2a47 562A0000 		.long	0x2a56
 12014 2a4b 08       		.uleb128 0x8
 12015 2a4c 51B60000 		.long	0xb651
 12016 2a50 09       		.uleb128 0x9
 12017 2a51 E4990000 		.long	0x99e4
 12018 2a55 00       		.byte	0
 12019 2a56 47       		.uleb128 0x47
 12020 2a57 00000000 		.long	.LASF416
 12021 2a5b 01       		.byte	0x1
 12022 2a5c BA02     		.value	0x2ba
 12023 2a5e BC240000 		.long	0x24bc
GAS LISTING /tmp/ccmMnd7l.s 			page 513


 12024 2a62 01       		.byte	0x1
 12025 2a63 0001     		.value	0x100
 12026 2a65 49       		.uleb128 0x49
 12027 2a66 00000000 		.long	.LASF417
 12028 2a6a 01       		.byte	0x1
 12029 2a6b 8704     		.value	0x487
 12030 2a6d 00000000 		.long	.LASF418
 12031 2a71 752A0000 		.long	0x2a75
 12032 2a75 08       		.uleb128 0x8
 12033 2a76 51B60000 		.long	0xb651
 12034 2a7a 00       		.byte	0
 12035 2a7b 00       		.byte	0
 12036 2a7c 1B       		.uleb128 0x1b
 12037 2a7d 2B       		.byte	0x2b
 12038 2a7e 0E04     		.value	0x40e
 12039 2a80 C5AC0000 		.long	0xacc5
 12040 2a84 1B       		.uleb128 0x1b
 12041 2a85 2B       		.byte	0x2b
 12042 2a86 0F04     		.value	0x40f
 12043 2a88 BAAC0000 		.long	0xacba
 12044 2a8c 16       		.uleb128 0x16
 12045 2a8d 00000000 		.long	.LASF419
 12046 2a91 01       		.byte	0x1
 12047 2a92 2C       		.byte	0x2c
 12048 2a93 6C       		.byte	0x6c
 12049 2a94 D32A0000 		.long	0x2ad3
 12050 2a98 4A       		.uleb128 0x4a
 12051 2a99 00000000 		.long	.LASF420
 12052 2a9d 2C       		.byte	0x2c
 12053 2a9e 70       		.byte	0x70
 12054 2a9f B72A0000 		.long	0x2ab7
 12055 2aa3 35       		.uleb128 0x35
 12056 2aa4 00000000 		.long	.LASF421
 12057 2aa8 D0AD0000 		.long	0xadd0
 12058 2aac 09       		.uleb128 0x9
 12059 2aad D0AD0000 		.long	0xadd0
 12060 2ab1 09       		.uleb128 0x9
 12061 2ab2 D0AD0000 		.long	0xadd0
 12062 2ab6 00       		.byte	0
 12063 2ab7 4B       		.uleb128 0x4b
 12064 2ab8 00000000 		.long	.LASF422
 12065 2abc 2C       		.byte	0x2c
 12066 2abd 70       		.byte	0x70
 12067 2abe 35       		.uleb128 0x35
 12068 2abf 00000000 		.long	.LASF421
 12069 2ac3 01AD0000 		.long	0xad01
 12070 2ac7 09       		.uleb128 0x9
 12071 2ac8 01AD0000 		.long	0xad01
 12072 2acc 09       		.uleb128 0x9
 12073 2acd 01AD0000 		.long	0xad01
 12074 2ad1 00       		.byte	0
 12075 2ad2 00       		.byte	0
 12076 2ad3 24       		.uleb128 0x24
 12077 2ad4 00000000 		.long	.LASF423
 12078 2ad8 01       		.byte	0x1
 12079 2ad9 2D       		.byte	0x2d
 12080 2ada 0E02     		.value	0x20e
GAS LISTING /tmp/ccmMnd7l.s 			page 514


 12081 2adc 2F2B0000 		.long	0x2b2f
 12082 2ae0 4C       		.uleb128 0x4c
 12083 2ae1 00000000 		.long	.LASF424
 12084 2ae5 2D       		.byte	0x2d
 12085 2ae6 1202     		.value	0x212
 12086 2ae8 092B0000 		.long	0x2b09
 12087 2aec 35       		.uleb128 0x35
 12088 2aed 00000000 		.long	.LASF421
 12089 2af1 01AD0000 		.long	0xad01
 12090 2af5 35       		.uleb128 0x35
 12091 2af6 00000000 		.long	.LASF425
 12092 2afa 03810000 		.long	0x8103
 12093 2afe 09       		.uleb128 0x9
 12094 2aff 01AD0000 		.long	0xad01
 12095 2b03 09       		.uleb128 0x9
 12096 2b04 03810000 		.long	0x8103
 12097 2b08 00       		.byte	0
 12098 2b09 4D       		.uleb128 0x4d
 12099 2b0a 00000000 		.long	.LASF426
 12100 2b0e 2D       		.byte	0x2d
 12101 2b0f 1202     		.value	0x212
 12102 2b11 35       		.uleb128 0x35
 12103 2b12 00000000 		.long	.LASF421
 12104 2b16 D0AD0000 		.long	0xadd0
 12105 2b1a 35       		.uleb128 0x35
 12106 2b1b 00000000 		.long	.LASF425
 12107 2b1f 03810000 		.long	0x8103
 12108 2b23 09       		.uleb128 0x9
 12109 2b24 D0AD0000 		.long	0xadd0
 12110 2b28 09       		.uleb128 0x9
 12111 2b29 03810000 		.long	0x8103
 12112 2b2d 00       		.byte	0
 12113 2b2e 00       		.byte	0
 12114 2b2f 04       		.uleb128 0x4
 12115 2b30 00000000 		.long	.LASF427
 12116 2b34 04       		.byte	0x4
 12117 2b35 42       		.byte	0x42
 12118 2b36 812C0000 		.long	0x2c81
 12119 2b3a 16       		.uleb128 0x16
 12120 2b3b 00000000 		.long	.LASF428
 12121 2b3f 01       		.byte	0x1
 12122 2b40 04       		.byte	0x4
 12123 2b41 87       		.byte	0x87
 12124 2b42 A22B0000 		.long	0x2ba2
 12125 2b46 4E       		.uleb128 0x4e
 12126 2b47 00000000 		.long	.LASF429
 12127 2b4b 04       		.byte	0x4
 12128 2b4c 8A       		.byte	0x8a
 12129 2b4d 00000000 		.long	.LASF430
 12130 2b51 03810000 		.long	0x8103
 12131 2b55 5F2B0000 		.long	0x2b5f
 12132 2b59 09       		.uleb128 0x9
 12133 2b5a 03810000 		.long	0x8103
 12134 2b5e 00       		.byte	0
 12135 2b5f 18       		.uleb128 0x18
 12136 2b60 5F547000 		.string	"_Tp"
 12137 2b64 03810000 		.long	0x8103
GAS LISTING /tmp/ccmMnd7l.s 			page 515


 12138 2b68 4F       		.uleb128 0x4f
 12139 2b69 5F5F6D00 		.string	"__m"
 12140 2b6d 03810000 		.long	0x8103
 12141 2b71 00000000 		.quad	0x100000000
 12141      01000000 
 12142 2b79 19       		.uleb128 0x19
 12143 2b7a 5F5F6100 		.string	"__a"
 12144 2b7e 03810000 		.long	0x8103
 12145 2b82 01       		.byte	0x1
 12146 2b83 19       		.uleb128 0x19
 12147 2b84 5F5F6300 		.string	"__c"
 12148 2b88 03810000 		.long	0x8103
 12149 2b8c 00       		.byte	0
 12150 2b8d 50       		.uleb128 0x50
 12151 2b8e 00000000 		.long	.LASF431
 12152 2b92 E0800000 		.long	0x80e0
 12153 2b96 01       		.byte	0x1
 12154 2b97 50       		.uleb128 0x50
 12155 2b98 00000000 		.long	.LASF432
 12156 2b9c E0800000 		.long	0x80e0
 12157 2ba0 01       		.byte	0x1
 12158 2ba1 00       		.byte	0
 12159 2ba2 16       		.uleb128 0x16
 12160 2ba3 00000000 		.long	.LASF433
 12161 2ba7 01       		.byte	0x1
 12162 2ba8 04       		.byte	0x4
 12163 2ba9 87       		.byte	0x87
 12164 2baa 042C0000 		.long	0x2c04
 12165 2bae 4E       		.uleb128 0x4e
 12166 2baf 00000000 		.long	.LASF429
 12167 2bb3 04       		.byte	0x4
 12168 2bb4 8A       		.byte	0x8a
 12169 2bb5 00000000 		.long	.LASF434
 12170 2bb9 03810000 		.long	0x8103
 12171 2bbd C72B0000 		.long	0x2bc7
 12172 2bc1 09       		.uleb128 0x9
 12173 2bc2 03810000 		.long	0x8103
 12174 2bc6 00       		.byte	0
 12175 2bc7 18       		.uleb128 0x18
 12176 2bc8 5F547000 		.string	"_Tp"
 12177 2bcc 03810000 		.long	0x8103
 12178 2bd0 51       		.uleb128 0x51
 12179 2bd1 5F5F6D00 		.string	"__m"
 12180 2bd5 03810000 		.long	0x8103
 12181 2bd9 7002     		.value	0x270
 12182 2bdb 19       		.uleb128 0x19
 12183 2bdc 5F5F6100 		.string	"__a"
 12184 2be0 03810000 		.long	0x8103
 12185 2be4 01       		.byte	0x1
 12186 2be5 19       		.uleb128 0x19
 12187 2be6 5F5F6300 		.string	"__c"
 12188 2bea 03810000 		.long	0x8103
 12189 2bee 00       		.byte	0
 12190 2bef 50       		.uleb128 0x50
 12191 2bf0 00000000 		.long	.LASF431
 12192 2bf4 E0800000 		.long	0x80e0
 12193 2bf8 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 516


 12194 2bf9 50       		.uleb128 0x50
 12195 2bfa 00000000 		.long	.LASF432
 12196 2bfe E0800000 		.long	0x80e0
 12197 2c02 01       		.byte	0x1
 12198 2c03 00       		.byte	0
 12199 2c04 52       		.uleb128 0x52
 12200 2c05 00000000 		.long	.LASF435
 12201 2c09 04       		.byte	0x4
 12202 2c0a 95       		.byte	0x95
 12203 2c0b 03810000 		.long	0x8103
 12204 2c0f 472C0000 		.long	0x2c47
 12205 2c13 18       		.uleb128 0x18
 12206 2c14 5F547000 		.string	"_Tp"
 12207 2c18 03810000 		.long	0x8103
 12208 2c1c 4F       		.uleb128 0x4f
 12209 2c1d 5F5F6D00 		.string	"__m"
 12210 2c21 03810000 		.long	0x8103
 12211 2c25 00000000 		.quad	0x100000000
 12211      01000000 
 12212 2c2d 19       		.uleb128 0x19
 12213 2c2e 5F5F6100 		.string	"__a"
 12214 2c32 03810000 		.long	0x8103
 12215 2c36 01       		.byte	0x1
 12216 2c37 19       		.uleb128 0x19
 12217 2c38 5F5F6300 		.string	"__c"
 12218 2c3c 03810000 		.long	0x8103
 12219 2c40 00       		.byte	0
 12220 2c41 09       		.uleb128 0x9
 12221 2c42 03810000 		.long	0x8103
 12222 2c46 00       		.byte	0
 12223 2c47 53       		.uleb128 0x53
 12224 2c48 00000000 		.long	.LASF436
 12225 2c4c 04       		.byte	0x4
 12226 2c4d 95       		.byte	0x95
 12227 2c4e 03810000 		.long	0x8103
 12228 2c52 18       		.uleb128 0x18
 12229 2c53 5F547000 		.string	"_Tp"
 12230 2c57 03810000 		.long	0x8103
 12231 2c5b 51       		.uleb128 0x51
 12232 2c5c 5F5F6D00 		.string	"__m"
 12233 2c60 03810000 		.long	0x8103
 12234 2c64 7002     		.value	0x270
 12235 2c66 19       		.uleb128 0x19
 12236 2c67 5F5F6100 		.string	"__a"
 12237 2c6b 03810000 		.long	0x8103
 12238 2c6f 01       		.byte	0x1
 12239 2c70 19       		.uleb128 0x19
 12240 2c71 5F5F6300 		.string	"__c"
 12241 2c75 03810000 		.long	0x8103
 12242 2c79 00       		.byte	0
 12243 2c7a 09       		.uleb128 0x9
 12244 2c7b 03810000 		.long	0x8103
 12245 2c7f 00       		.byte	0
 12246 2c80 00       		.byte	0
 12247 2c81 54       		.uleb128 0x54
 12248 2c82 00000000 		.long	.LASF437
 12249 2c86 8813     		.value	0x1388
GAS LISTING /tmp/ccmMnd7l.s 			page 517


 12250 2c88 04       		.byte	0x4
 12251 2c89 C301     		.value	0x1c3
 12252 2c8b C82E0000 		.long	0x2ec8
 12253 2c8f 29       		.uleb128 0x29
 12254 2c90 00000000 		.long	.LASF439
 12255 2c94 04       		.byte	0x4
 12256 2c95 E501     		.value	0x1e5
 12257 2c97 BC240000 		.long	0x24bc
 12258 2c9b 01       		.byte	0x1
 12259 2c9c 47       		.uleb128 0x47
 12260 2c9d 00000000 		.long	.LASF440
 12261 2ca1 04       		.byte	0x4
 12262 2ca2 E601     		.value	0x1e6
 12263 2ca4 BC240000 		.long	0x24bc
 12264 2ca8 01       		.byte	0x1
 12265 2ca9 7002     		.value	0x270
 12266 2cab 29       		.uleb128 0x29
 12267 2cac 00000000 		.long	.LASF441
 12268 2cb0 04       		.byte	0x4
 12269 2cb1 E701     		.value	0x1e7
 12270 2cb3 BC240000 		.long	0x24bc
 12271 2cb7 01       		.byte	0x1
 12272 2cb8 29       		.uleb128 0x29
 12273 2cb9 00000000 		.long	.LASF442
 12274 2cbd 04       		.byte	0x4
 12275 2cbe E801     		.value	0x1e8
 12276 2cc0 BC240000 		.long	0x24bc
 12277 2cc4 01       		.byte	0x1
 12278 2cc5 44       		.uleb128 0x44
 12279 2cc6 00000000 		.long	.LASF443
 12280 2cca 04       		.byte	0x4
 12281 2ccb E201     		.value	0x1e2
 12282 2ccd 03810000 		.long	0x8103
 12283 2cd1 01       		.byte	0x1
 12284 2cd2 29       		.uleb128 0x29
 12285 2cd3 00000000 		.long	.LASF444
 12286 2cd7 04       		.byte	0x4
 12287 2cd8 E901     		.value	0x1e9
 12288 2cda DF2C0000 		.long	0x2cdf
 12289 2cde 01       		.byte	0x1
 12290 2cdf 11       		.uleb128 0x11
 12291 2ce0 C52C0000 		.long	0x2cc5
 12292 2ce4 29       		.uleb128 0x29
 12293 2ce5 00000000 		.long	.LASF445
 12294 2ce9 04       		.byte	0x4
 12295 2cea EA01     		.value	0x1ea
 12296 2cec BC240000 		.long	0x24bc
 12297 2cf0 01       		.byte	0x1
 12298 2cf1 29       		.uleb128 0x29
 12299 2cf2 00000000 		.long	.LASF446
 12300 2cf6 04       		.byte	0x4
 12301 2cf7 EB01     		.value	0x1eb
 12302 2cf9 DF2C0000 		.long	0x2cdf
 12303 2cfd 01       		.byte	0x1
 12304 2cfe 29       		.uleb128 0x29
 12305 2cff 00000000 		.long	.LASF447
 12306 2d03 04       		.byte	0x4
GAS LISTING /tmp/ccmMnd7l.s 			page 518


 12307 2d04 EC01     		.value	0x1ec
 12308 2d06 BC240000 		.long	0x24bc
 12309 2d0a 01       		.byte	0x1
 12310 2d0b 29       		.uleb128 0x29
 12311 2d0c 00000000 		.long	.LASF448
 12312 2d10 04       		.byte	0x4
 12313 2d11 ED01     		.value	0x1ed
 12314 2d13 DF2C0000 		.long	0x2cdf
 12315 2d17 01       		.byte	0x1
 12316 2d18 29       		.uleb128 0x29
 12317 2d19 00000000 		.long	.LASF449
 12318 2d1d 04       		.byte	0x4
 12319 2d1e EE01     		.value	0x1ee
 12320 2d20 BC240000 		.long	0x24bc
 12321 2d24 01       		.byte	0x1
 12322 2d25 29       		.uleb128 0x29
 12323 2d26 00000000 		.long	.LASF450
 12324 2d2a 04       		.byte	0x4
 12325 2d2b EF01     		.value	0x1ef
 12326 2d2d DF2C0000 		.long	0x2cdf
 12327 2d31 01       		.byte	0x1
 12328 2d32 29       		.uleb128 0x29
 12329 2d33 00000000 		.long	.LASF451
 12330 2d37 04       		.byte	0x4
 12331 2d38 F001     		.value	0x1f0
 12332 2d3a BC240000 		.long	0x24bc
 12333 2d3e 01       		.byte	0x1
 12334 2d3f 29       		.uleb128 0x29
 12335 2d40 00000000 		.long	.LASF452
 12336 2d44 04       		.byte	0x4
 12337 2d45 F101     		.value	0x1f1
 12338 2d47 DF2C0000 		.long	0x2cdf
 12339 2d4b 01       		.byte	0x1
 12340 2d4c 29       		.uleb128 0x29
 12341 2d4d 00000000 		.long	.LASF453
 12342 2d51 04       		.byte	0x4
 12343 2d52 F201     		.value	0x1f2
 12344 2d54 DF2C0000 		.long	0x2cdf
 12345 2d58 01       		.byte	0x1
 12346 2d59 26       		.uleb128 0x26
 12347 2d5a 00000000 		.long	.LASF454
 12348 2d5e 04       		.byte	0x4
 12349 2d5f 6D02     		.value	0x26d
 12350 2d61 D0AC0000 		.long	0xacd0
 12351 2d65 00       		.byte	0
 12352 2d66 55       		.uleb128 0x55
 12353 2d67 00000000 		.long	.LASF65
 12354 2d6b 04       		.byte	0x4
 12355 2d6c 6E02     		.value	0x26e
 12356 2d6e 85060000 		.long	0x685
 12357 2d72 8013     		.value	0x1380
 12358 2d74 31       		.uleb128 0x31
 12359 2d75 00000000 		.long	.LASF455
 12360 2d79 04       		.byte	0x4
 12361 2d7a F601     		.value	0x1f6
 12362 2d7c 01       		.byte	0x1
 12363 2d7d 852D0000 		.long	0x2d85
GAS LISTING /tmp/ccmMnd7l.s 			page 519


 12364 2d81 902D0000 		.long	0x2d90
 12365 2d85 08       		.uleb128 0x8
 12366 2d86 E3AC0000 		.long	0xace3
 12367 2d8a 09       		.uleb128 0x9
 12368 2d8b C52C0000 		.long	0x2cc5
 12369 2d8f 00       		.byte	0
 12370 2d90 34       		.uleb128 0x34
 12371 2d91 00000000 		.long	.LASF456
 12372 2d95 04       		.byte	0x4
 12373 2d96 0702     		.value	0x207
 12374 2d98 00000000 		.long	.LASF457
 12375 2d9c 01       		.byte	0x1
 12376 2d9d A52D0000 		.long	0x2da5
 12377 2da1 B02D0000 		.long	0x2db0
 12378 2da5 08       		.uleb128 0x8
 12379 2da6 E3AC0000 		.long	0xace3
 12380 2daa 09       		.uleb128 0x9
 12381 2dab C52C0000 		.long	0x2cc5
 12382 2daf 00       		.byte	0
 12383 2db0 56       		.uleb128 0x56
 12384 2db1 6D696E00 		.string	"min"
 12385 2db5 04       		.byte	0x4
 12386 2db6 1102     		.value	0x211
 12387 2db8 00000000 		.long	.LASF458
 12388 2dbc C52C0000 		.long	0x2cc5
 12389 2dc0 01       		.byte	0x1
 12390 2dc1 56       		.uleb128 0x56
 12391 2dc2 6D617800 		.string	"max"
 12392 2dc6 04       		.byte	0x4
 12393 2dc7 1802     		.value	0x218
 12394 2dc9 00000000 		.long	.LASF459
 12395 2dcd C52C0000 		.long	0x2cc5
 12396 2dd1 01       		.byte	0x1
 12397 2dd2 34       		.uleb128 0x34
 12398 2dd3 00000000 		.long	.LASF460
 12399 2dd7 04       		.byte	0x4
 12400 2dd8 1F02     		.value	0x21f
 12401 2dda 00000000 		.long	.LASF461
 12402 2dde 01       		.byte	0x1
 12403 2ddf E72D0000 		.long	0x2de7
 12404 2de3 F22D0000 		.long	0x2df2
 12405 2de7 08       		.uleb128 0x8
 12406 2de8 E3AC0000 		.long	0xace3
 12407 2dec 09       		.uleb128 0x9
 12408 2ded 1F810000 		.long	0x811f
 12409 2df1 00       		.byte	0
 12410 2df2 32       		.uleb128 0x32
 12411 2df3 00000000 		.long	.LASF462
 12412 2df7 04       		.byte	0x4
 12413 2df8 2202     		.value	0x222
 12414 2dfa 00000000 		.long	.LASF463
 12415 2dfe C52C0000 		.long	0x2cc5
 12416 2e02 01       		.byte	0x1
 12417 2e03 0B2E0000 		.long	0x2e0b
 12418 2e07 112E0000 		.long	0x2e11
 12419 2e0b 08       		.uleb128 0x8
 12420 2e0c E3AC0000 		.long	0xace3
GAS LISTING /tmp/ccmMnd7l.s 			page 520


 12421 2e10 00       		.byte	0
 12422 2e11 2B       		.uleb128 0x2b
 12423 2e12 00000000 		.long	.LASF464
 12424 2e16 04       		.byte	0x4
 12425 2e17 6B02     		.value	0x26b
 12426 2e19 00000000 		.long	.LASF465
 12427 2e1d 252E0000 		.long	0x2e25
 12428 2e21 2B2E0000 		.long	0x2e2b
 12429 2e25 08       		.uleb128 0x8
 12430 2e26 E3AC0000 		.long	0xace3
 12431 2e2a 00       		.byte	0
 12432 2e2b 35       		.uleb128 0x35
 12433 2e2c 00000000 		.long	.LASF466
 12434 2e30 03810000 		.long	0x8103
 12435 2e34 19       		.uleb128 0x19
 12436 2e35 5F5F7700 		.string	"__w"
 12437 2e39 03810000 		.long	0x8103
 12438 2e3d 20       		.byte	0x20
 12439 2e3e 51       		.uleb128 0x51
 12440 2e3f 5F5F6E00 		.string	"__n"
 12441 2e43 03810000 		.long	0x8103
 12442 2e47 7002     		.value	0x270
 12443 2e49 51       		.uleb128 0x51
 12444 2e4a 5F5F6D00 		.string	"__m"
 12445 2e4e 03810000 		.long	0x8103
 12446 2e52 8D01     		.value	0x18d
 12447 2e54 19       		.uleb128 0x19
 12448 2e55 5F5F7200 		.string	"__r"
 12449 2e59 03810000 		.long	0x8103
 12450 2e5d 1F       		.byte	0x1f
 12451 2e5e 57       		.uleb128 0x57
 12452 2e5f 5F5F6100 		.string	"__a"
 12453 2e63 03810000 		.long	0x8103
 12454 2e67 DFB00899 		.long	0x9908b0df
 12455 2e6b 19       		.uleb128 0x19
 12456 2e6c 5F5F7500 		.string	"__u"
 12457 2e70 03810000 		.long	0x8103
 12458 2e74 0B       		.byte	0xb
 12459 2e75 57       		.uleb128 0x57
 12460 2e76 5F5F6400 		.string	"__d"
 12461 2e7a 03810000 		.long	0x8103
 12462 2e7e FFFFFFFF 		.long	0xffffffff
 12463 2e82 19       		.uleb128 0x19
 12464 2e83 5F5F7300 		.string	"__s"
 12465 2e87 03810000 		.long	0x8103
 12466 2e8b 07       		.byte	0x7
 12467 2e8c 57       		.uleb128 0x57
 12468 2e8d 5F5F6200 		.string	"__b"
 12469 2e91 03810000 		.long	0x8103
 12470 2e95 80562C9D 		.long	0x9d2c5680
 12471 2e99 19       		.uleb128 0x19
 12472 2e9a 5F5F7400 		.string	"__t"
 12473 2e9e 03810000 		.long	0x8103
 12474 2ea2 0F       		.byte	0xf
 12475 2ea3 57       		.uleb128 0x57
 12476 2ea4 5F5F6300 		.string	"__c"
 12477 2ea8 03810000 		.long	0x8103
GAS LISTING /tmp/ccmMnd7l.s 			page 521


 12478 2eac 0000C6EF 		.long	0xefc60000
 12479 2eb0 19       		.uleb128 0x19
 12480 2eb1 5F5F6C00 		.string	"__l"
 12481 2eb5 03810000 		.long	0x8103
 12482 2eb9 12       		.byte	0x12
 12483 2eba 57       		.uleb128 0x57
 12484 2ebb 5F5F6600 		.string	"__f"
 12485 2ebf 03810000 		.long	0x8103
 12486 2ec3 6589076C 		.long	0x6c078965
 12487 2ec7 00       		.byte	0
 12488 2ec8 54       		.uleb128 0x54
 12489 2ec9 00000000 		.long	.LASF467
 12490 2ecd 8813     		.value	0x1388
 12491 2ecf 04       		.byte	0x4
 12492 2ed0 2906     		.value	0x629
 12493 2ed2 7C300000 		.long	0x307c
 12494 2ed6 58       		.uleb128 0x58
 12495 2ed7 8813     		.value	0x1388
 12496 2ed9 04       		.byte	0x4
 12497 2eda 6A06     		.value	0x66a
 12498 2edc 042F0000 		.long	0x2f04
 12499 2ee0 59       		.uleb128 0x59
 12500 2ee1 00000000 		.long	.LASF468
 12501 2ee5 04       		.byte	0x4
 12502 2ee6 6B06     		.value	0x66b
 12503 2ee8 B1800000 		.long	0x80b1
 12504 2eec 59       		.uleb128 0x59
 12505 2eed 00000000 		.long	.LASF469
 12506 2ef1 04       		.byte	0x4
 12507 2ef2 6C06     		.value	0x66c
 12508 2ef4 7C300000 		.long	0x307c
 12509 2ef8 5A       		.uleb128 0x5a
 12510 2ef9 FD2E0000 		.long	0x2efd
 12511 2efd 08       		.uleb128 0x8
 12512 2efe E9AC0000 		.long	0xace9
 12513 2f02 00       		.byte	0
 12514 2f03 00       		.byte	0
 12515 2f04 5B       		.uleb128 0x5b
 12516 2f05 D62E0000 		.long	0x2ed6
 12517 2f09 00       		.byte	0
 12518 2f0a 44       		.uleb128 0x44
 12519 2f0b 00000000 		.long	.LASF443
 12520 2f0f 04       		.byte	0x4
 12521 2f10 2D06     		.value	0x62d
 12522 2f12 18810000 		.long	0x8118
 12523 2f16 01       		.byte	0x1
 12524 2f17 31       		.uleb128 0x31
 12525 2f18 00000000 		.long	.LASF467
 12526 2f1c 04       		.byte	0x4
 12527 2f1d 3406     		.value	0x634
 12528 2f1f 01       		.byte	0x1
 12529 2f20 282F0000 		.long	0x2f28
 12530 2f24 332F0000 		.long	0x2f33
 12531 2f28 08       		.uleb128 0x8
 12532 2f29 EFAC0000 		.long	0xacef
 12533 2f2d 09       		.uleb128 0x9
 12534 2f2e E3AB0000 		.long	0xabe3
GAS LISTING /tmp/ccmMnd7l.s 			page 522


 12535 2f32 00       		.byte	0
 12536 2f33 30       		.uleb128 0x30
 12537 2f34 00000000 		.long	.LASF470
 12538 2f38 04       		.byte	0x4
 12539 2f39 3906     		.value	0x639
 12540 2f3b 01       		.byte	0x1
 12541 2f3c 442F0000 		.long	0x2f44
 12542 2f40 4F2F0000 		.long	0x2f4f
 12543 2f44 08       		.uleb128 0x8
 12544 2f45 EFAC0000 		.long	0xacef
 12545 2f49 08       		.uleb128 0x8
 12546 2f4a D8800000 		.long	0x80d8
 12547 2f4e 00       		.byte	0
 12548 2f4f 56       		.uleb128 0x56
 12549 2f50 6D696E00 		.string	"min"
 12550 2f54 04       		.byte	0x4
 12551 2f55 4706     		.value	0x647
 12552 2f57 00000000 		.long	.LASF471
 12553 2f5b 0A2F0000 		.long	0x2f0a
 12554 2f5f 01       		.byte	0x1
 12555 2f60 56       		.uleb128 0x56
 12556 2f61 6D617800 		.string	"max"
 12557 2f65 04       		.byte	0x4
 12558 2f66 4B06     		.value	0x64b
 12559 2f68 00000000 		.long	.LASF472
 12560 2f6c 0A2F0000 		.long	0x2f0a
 12561 2f70 01       		.byte	0x1
 12562 2f71 32       		.uleb128 0x32
 12563 2f72 00000000 		.long	.LASF473
 12564 2f76 04       		.byte	0x4
 12565 2f77 4F06     		.value	0x64f
 12566 2f79 00000000 		.long	.LASF474
 12567 2f7d 29000000 		.long	0x29
 12568 2f81 01       		.byte	0x1
 12569 2f82 8A2F0000 		.long	0x2f8a
 12570 2f86 902F0000 		.long	0x2f90
 12571 2f8a 08       		.uleb128 0x8
 12572 2f8b F5AC0000 		.long	0xacf5
 12573 2f8f 00       		.byte	0
 12574 2f90 32       		.uleb128 0x32
 12575 2f91 00000000 		.long	.LASF462
 12576 2f95 04       		.byte	0x4
 12577 2f96 5306     		.value	0x653
 12578 2f98 00000000 		.long	.LASF475
 12579 2f9c 0A2F0000 		.long	0x2f0a
 12580 2fa0 01       		.byte	0x1
 12581 2fa1 A92F0000 		.long	0x2fa9
 12582 2fa5 AF2F0000 		.long	0x2faf
 12583 2fa9 08       		.uleb128 0x8
 12584 2faa EFAC0000 		.long	0xacef
 12585 2fae 00       		.byte	0
 12586 2faf 30       		.uleb128 0x30
 12587 2fb0 00000000 		.long	.LASF467
 12588 2fb4 04       		.byte	0x4
 12589 2fb5 5D06     		.value	0x65d
 12590 2fb7 01       		.byte	0x1
 12591 2fb8 C02F0000 		.long	0x2fc0
GAS LISTING /tmp/ccmMnd7l.s 			page 523


 12592 2fbc CB2F0000 		.long	0x2fcb
 12593 2fc0 08       		.uleb128 0x8
 12594 2fc1 EFAC0000 		.long	0xacef
 12595 2fc5 09       		.uleb128 0x9
 12596 2fc6 FBAC0000 		.long	0xacfb
 12597 2fca 00       		.byte	0
 12598 2fcb 34       		.uleb128 0x34
 12599 2fcc 00000000 		.long	.LASF8
 12600 2fd0 04       		.byte	0x4
 12601 2fd1 5E06     		.value	0x65e
 12602 2fd3 00000000 		.long	.LASF476
 12603 2fd7 01       		.byte	0x1
 12604 2fd8 E02F0000 		.long	0x2fe0
 12605 2fdc EB2F0000 		.long	0x2feb
 12606 2fe0 08       		.uleb128 0x8
 12607 2fe1 EFAC0000 		.long	0xacef
 12608 2fe5 09       		.uleb128 0x9
 12609 2fe6 FBAC0000 		.long	0xacfb
 12610 2fea 00       		.byte	0
 12611 2feb 2B       		.uleb128 0x2b
 12612 2fec 00000000 		.long	.LASF477
 12613 2ff0 04       		.byte	0x4
 12614 2ff1 6206     		.value	0x662
 12615 2ff3 00000000 		.long	.LASF478
 12616 2ff7 FF2F0000 		.long	0x2fff
 12617 2ffb 0A300000 		.long	0x300a
 12618 2fff 08       		.uleb128 0x8
 12619 3000 EFAC0000 		.long	0xacef
 12620 3004 09       		.uleb128 0x9
 12621 3005 E3AB0000 		.long	0xabe3
 12622 3009 00       		.byte	0
 12623 300a 2B       		.uleb128 0x2b
 12624 300b 00000000 		.long	.LASF479
 12625 300f 04       		.byte	0x4
 12626 3010 6306     		.value	0x663
 12627 3012 00000000 		.long	.LASF480
 12628 3016 1E300000 		.long	0x301e
 12629 301a 29300000 		.long	0x3029
 12630 301e 08       		.uleb128 0x8
 12631 301f EFAC0000 		.long	0xacef
 12632 3023 09       		.uleb128 0x9
 12633 3024 E3AB0000 		.long	0xabe3
 12634 3028 00       		.byte	0
 12635 3029 2B       		.uleb128 0x2b
 12636 302a 00000000 		.long	.LASF481
 12637 302e 04       		.byte	0x4
 12638 302f 6406     		.value	0x664
 12639 3031 00000000 		.long	.LASF482
 12640 3035 3D300000 		.long	0x303d
 12641 3039 43300000 		.long	0x3043
 12642 303d 08       		.uleb128 0x8
 12643 303e EFAC0000 		.long	0xacef
 12644 3042 00       		.byte	0
 12645 3043 2C       		.uleb128 0x2c
 12646 3044 00000000 		.long	.LASF483
 12647 3048 04       		.byte	0x4
 12648 3049 6606     		.value	0x666
GAS LISTING /tmp/ccmMnd7l.s 			page 524


 12649 304b 00000000 		.long	.LASF484
 12650 304f 0A2F0000 		.long	0x2f0a
 12651 3053 5B300000 		.long	0x305b
 12652 3057 61300000 		.long	0x3061
 12653 305b 08       		.uleb128 0x8
 12654 305c EFAC0000 		.long	0xacef
 12655 3060 00       		.byte	0
 12656 3061 2D       		.uleb128 0x2d
 12657 3062 00000000 		.long	.LASF485
 12658 3066 04       		.byte	0x4
 12659 3067 6706     		.value	0x667
 12660 3069 00000000 		.long	.LASF486
 12661 306d 0A2F0000 		.long	0x2f0a
 12662 3071 75300000 		.long	0x3075
 12663 3075 08       		.uleb128 0x8
 12664 3076 EFAC0000 		.long	0xacef
 12665 307a 00       		.byte	0
 12666 307b 00       		.byte	0
 12667 307c 5C       		.uleb128 0x5c
 12668 307d 00000000 		.long	.LASF487
 12669 3081 04       		.byte	0x4
 12670 3082 0906     		.value	0x609
 12671 3084 812C0000 		.long	0x2c81
 12672 3088 11       		.uleb128 0x11
 12673 3089 C82E0000 		.long	0x2ec8
 12674 308d 05       		.uleb128 0x5
 12675 308e 00000000 		.long	.LASF488
 12676 3092 01       		.byte	0x1
 12677 3093 21       		.byte	0x21
 12678 3094 5C       		.byte	0x5c
 12679 3095 2F310000 		.long	0x312f
 12680 3099 21       		.uleb128 0x21
 12681 309a 708A0000 		.long	0x8a70
 12682 309e 00       		.byte	0
 12683 309f 01       		.byte	0x1
 12684 30a0 22       		.uleb128 0x22
 12685 30a1 00000000 		.long	.LASF57
 12686 30a5 21       		.byte	0x21
 12687 30a6 5F       		.byte	0x5f
 12688 30a7 85060000 		.long	0x685
 12689 30ab 01       		.byte	0x1
 12690 30ac 22       		.uleb128 0x22
 12691 30ad 00000000 		.long	.LASF489
 12692 30b1 21       		.byte	0x21
 12693 30b2 61       		.byte	0x61
 12694 30b3 01AD0000 		.long	0xad01
 12695 30b7 01       		.byte	0x1
 12696 30b8 22       		.uleb128 0x22
 12697 30b9 00000000 		.long	.LASF19
 12698 30bd 21       		.byte	0x21
 12699 30be 65       		.byte	0x65
 12700 30bf 29000000 		.long	0x29
 12701 30c3 01       		.byte	0x1
 12702 30c4 0C       		.uleb128 0xc
 12703 30c5 00000000 		.long	.LASF60
 12704 30c9 21       		.byte	0x21
 12705 30ca 71       		.byte	0x71
GAS LISTING /tmp/ccmMnd7l.s 			page 525


 12706 30cb 01       		.byte	0x1
 12707 30cc D4300000 		.long	0x30d4
 12708 30d0 DA300000 		.long	0x30da
 12709 30d4 08       		.uleb128 0x8
 12710 30d5 30AD0000 		.long	0xad30
 12711 30d9 00       		.byte	0
 12712 30da 0C       		.uleb128 0xc
 12713 30db 00000000 		.long	.LASF60
 12714 30df 21       		.byte	0x21
 12715 30e0 73       		.byte	0x73
 12716 30e1 01       		.byte	0x1
 12717 30e2 EA300000 		.long	0x30ea
 12718 30e6 F5300000 		.long	0x30f5
 12719 30ea 08       		.uleb128 0x8
 12720 30eb 30AD0000 		.long	0xad30
 12721 30ef 09       		.uleb128 0x9
 12722 30f0 36AD0000 		.long	0xad36
 12723 30f4 00       		.byte	0
 12724 30f5 0C       		.uleb128 0xc
 12725 30f6 00000000 		.long	.LASF61
 12726 30fa 21       		.byte	0x21
 12727 30fb 79       		.byte	0x79
 12728 30fc 01       		.byte	0x1
 12729 30fd 05310000 		.long	0x3105
 12730 3101 10310000 		.long	0x3110
 12731 3105 08       		.uleb128 0x8
 12732 3106 30AD0000 		.long	0xad30
 12733 310a 08       		.uleb128 0x8
 12734 310b D8800000 		.long	0x80d8
 12735 310f 00       		.byte	0
 12736 3110 5D       		.uleb128 0x5d
 12737 3111 00000000 		.long	.LASF490
 12738 3115 01       		.byte	0x1
 12739 3116 21       		.byte	0x21
 12740 3117 68       		.byte	0x68
 12741 3118 01       		.byte	0x1
 12742 3119 13       		.uleb128 0x13
 12743 311a 00000000 		.long	.LASF491
 12744 311e 21       		.byte	0x21
 12745 311f 69       		.byte	0x69
 12746 3120 8D300000 		.long	0x308d
 12747 3124 35       		.uleb128 0x35
 12748 3125 00000000 		.long	.LASF492
 12749 3129 29000000 		.long	0x29
 12750 312d 00       		.byte	0
 12751 312e 00       		.byte	0
 12752 312f 11       		.uleb128 0x11
 12753 3130 8D300000 		.long	0x308d
 12754 3134 16       		.uleb128 0x16
 12755 3135 00000000 		.long	.LASF493
 12756 3139 01       		.byte	0x1
 12757 313a 2E       		.byte	0x2e
 12758 313b 69       		.byte	0x69
 12759 313c 55310000 		.long	0x3155
 12760 3140 13       		.uleb128 0x13
 12761 3141 00000000 		.long	.LASF494
 12762 3145 2E       		.byte	0x2e
GAS LISTING /tmp/ccmMnd7l.s 			page 526


 12763 3146 6B       		.byte	0x6b
 12764 3147 29000000 		.long	0x29
 12765 314b 18       		.uleb128 0x18
 12766 314c 5F547000 		.string	"_Tp"
 12767 3150 29000000 		.long	0x29
 12768 3154 00       		.byte	0
 12769 3155 16       		.uleb128 0x16
 12770 3156 00000000 		.long	.LASF495
 12771 315a 01       		.byte	0x1
 12772 315b 2E       		.byte	0x2e
 12773 315c 96       		.byte	0x96
 12774 315d BB310000 		.long	0x31bb
 12775 3161 13       		.uleb128 0x13
 12776 3162 00000000 		.long	.LASF489
 12777 3166 2E       		.byte	0x2e
 12778 3167 99       		.byte	0x99
 12779 3168 01AD0000 		.long	0xad01
 12780 316c 13       		.uleb128 0x13
 12781 316d 00000000 		.long	.LASF496
 12782 3171 2E       		.byte	0x2e
 12783 3172 9D       		.byte	0x9d
 12784 3173 54070000 		.long	0x754
 12785 3177 4E       		.uleb128 0x4e
 12786 3178 00000000 		.long	.LASF497
 12787 317c 2E       		.byte	0x2e
 12788 317d A8       		.byte	0xa8
 12789 317e 00000000 		.long	.LASF498
 12790 3182 61310000 		.long	0x3161
 12791 3186 90310000 		.long	0x3190
 12792 318a 09       		.uleb128 0x9
 12793 318b 3CAD0000 		.long	0xad3c
 12794 318f 00       		.byte	0
 12795 3190 13       		.uleb128 0x13
 12796 3191 00000000 		.long	.LASF499
 12797 3195 2E       		.byte	0x2e
 12798 3196 A0       		.byte	0xa0
 12799 3197 B1800000 		.long	0x80b1
 12800 319b 13       		.uleb128 0x13
 12801 319c 00000000 		.long	.LASF499
 12802 31a0 2E       		.byte	0x2e
 12803 31a1 A0       		.byte	0xa0
 12804 31a2 01A30000 		.long	0xa301
 12805 31a6 13       		.uleb128 0x13
 12806 31a7 00000000 		.long	.LASF499
 12807 31ab 2E       		.byte	0x2e
 12808 31ac A0       		.byte	0xa0
 12809 31ad 07AD0000 		.long	0xad07
 12810 31b1 35       		.uleb128 0x35
 12811 31b2 00000000 		.long	.LASF500
 12812 31b6 01AD0000 		.long	0xad01
 12813 31ba 00       		.byte	0
 12814 31bb 24       		.uleb128 0x24
 12815 31bc 00000000 		.long	.LASF501
 12816 31c0 01       		.byte	0x1
 12817 31c1 1B       		.byte	0x1b
 12818 31c2 1806     		.value	0x618
 12819 31c4 F2310000 		.long	0x31f2
GAS LISTING /tmp/ccmMnd7l.s 			page 527


 12820 31c8 5C       		.uleb128 0x5c
 12821 31c9 00000000 		.long	.LASF494
 12822 31cd 1B       		.byte	0x1b
 12823 31ce 1906     		.value	0x619
 12824 31d0 03810000 		.long	0x8103
 12825 31d4 35       		.uleb128 0x35
 12826 31d5 00000000 		.long	.LASF502
 12827 31d9 03810000 		.long	0x8103
 12828 31dd 50       		.uleb128 0x50
 12829 31de 00000000 		.long	.LASF503
 12830 31e2 E0800000 		.long	0x80e0
 12831 31e6 00       		.byte	0
 12832 31e7 50       		.uleb128 0x50
 12833 31e8 00000000 		.long	.LASF504
 12834 31ec E0800000 		.long	0x80e0
 12835 31f0 00       		.byte	0
 12836 31f1 00       		.byte	0
 12837 31f2 3B       		.uleb128 0x3b
 12838 31f3 00000000 		.long	.LASF505
 12839 31f7 01       		.byte	0x1
 12840 31f8 1B       		.byte	0x1b
 12841 31f9 2A06     		.value	0x62a
 12842 31fb 33320000 		.long	0x3233
 12843 31ff 44       		.uleb128 0x44
 12844 3200 00000000 		.long	.LASF494
 12845 3204 1B       		.byte	0x1b
 12846 3205 2F06     		.value	0x62f
 12847 3207 C8310000 		.long	0x31c8
 12848 320b 01       		.byte	0x1
 12849 320c 35       		.uleb128 0x35
 12850 320d 00000000 		.long	.LASF506
 12851 3211 34810000 		.long	0x8134
 12852 3215 35       		.uleb128 0x35
 12853 3216 00000000 		.long	.LASF502
 12854 321a 03810000 		.long	0x8103
 12855 321e 50       		.uleb128 0x50
 12856 321f 00000000 		.long	.LASF503
 12857 3223 E0800000 		.long	0x80e0
 12858 3227 00       		.byte	0
 12859 3228 50       		.uleb128 0x50
 12860 3229 00000000 		.long	.LASF504
 12861 322d E0800000 		.long	0x80e0
 12862 3231 00       		.byte	0
 12863 3232 00       		.byte	0
 12864 3233 3B       		.uleb128 0x3b
 12865 3234 00000000 		.long	.LASF507
 12866 3238 01       		.byte	0x1
 12867 3239 1B       		.byte	0x1b
 12868 323a 6206     		.value	0x662
 12869 323c 6B320000 		.long	0x326b
 12870 3240 44       		.uleb128 0x44
 12871 3241 00000000 		.long	.LASF494
 12872 3245 1B       		.byte	0x1b
 12873 3246 6906     		.value	0x669
 12874 3248 FF310000 		.long	0x31ff
 12875 324c 01       		.byte	0x1
 12876 324d 18       		.uleb128 0x18
GAS LISTING /tmp/ccmMnd7l.s 			page 528


 12877 324e 5F547000 		.string	"_Tp"
 12878 3252 34810000 		.long	0x8134
 12879 3256 50       		.uleb128 0x50
 12880 3257 00000000 		.long	.LASF508
 12881 325b E0800000 		.long	0x80e0
 12882 325f 01       		.byte	0x1
 12883 3260 50       		.uleb128 0x50
 12884 3261 00000000 		.long	.LASF509
 12885 3265 E0800000 		.long	0x80e0
 12886 3269 00       		.byte	0
 12887 326a 00       		.byte	0
 12888 326b 24       		.uleb128 0x24
 12889 326c 00000000 		.long	.LASF510
 12890 3270 01       		.byte	0x1
 12891 3271 1B       		.byte	0x1b
 12892 3272 8206     		.value	0x682
 12893 3274 8E320000 		.long	0x328e
 12894 3278 5C       		.uleb128 0x5c
 12895 3279 00000000 		.long	.LASF511
 12896 327d 1B       		.byte	0x1b
 12897 327e 8306     		.value	0x683
 12898 3280 40320000 		.long	0x3240
 12899 3284 18       		.uleb128 0x18
 12900 3285 5F547000 		.string	"_Tp"
 12901 3289 34810000 		.long	0x8134
 12902 328d 00       		.byte	0
 12903 328e 16       		.uleb128 0x16
 12904 328f 00000000 		.long	.LASF512
 12905 3293 01       		.byte	0x1
 12906 3294 2F       		.byte	0x2f
 12907 3295 50       		.byte	0x50
 12908 3296 5C340000 		.long	0x345c
 12909 329a 13       		.uleb128 0x13
 12910 329b 00000000 		.long	.LASF19
 12911 329f 2F       		.byte	0x2f
 12912 32a0 55       		.byte	0x55
 12913 32a1 B8300000 		.long	0x30b8
 12914 32a5 22       		.uleb128 0x22
 12915 32a6 00000000 		.long	.LASF513
 12916 32aa 2F       		.byte	0x2f
 12917 32ab 5F       		.byte	0x5f
 12918 32ac AC300000 		.long	0x30ac
 12919 32b0 03       		.byte	0x3
 12920 32b1 13       		.uleb128 0x13
 12921 32b2 00000000 		.long	.LASF489
 12922 32b6 2F       		.byte	0x2f
 12923 32b7 66       		.byte	0x66
 12924 32b8 A5320000 		.long	0x32a5
 12925 32bc 22       		.uleb128 0x22
 12926 32bd 00000000 		.long	.LASF514
 12927 32c1 2F       		.byte	0x2f
 12928 32c2 7E       		.byte	0x7e
 12929 32c3 9B310000 		.long	0x319b
 12930 32c7 03       		.byte	0x3
 12931 32c8 13       		.uleb128 0x13
 12932 32c9 00000000 		.long	.LASF515
 12933 32cd 2F       		.byte	0x2f
GAS LISTING /tmp/ccmMnd7l.s 			page 529


 12934 32ce 87       		.byte	0x87
 12935 32cf BC320000 		.long	0x32bc
 12936 32d3 22       		.uleb128 0x22
 12937 32d4 00000000 		.long	.LASF516
 12938 32d8 2F       		.byte	0x2f
 12939 32d9 94       		.byte	0x94
 12940 32da A0300000 		.long	0x30a0
 12941 32de 03       		.byte	0x3
 12942 32df 13       		.uleb128 0x13
 12943 32e0 00000000 		.long	.LASF57
 12944 32e4 2F       		.byte	0x2f
 12945 32e5 9D       		.byte	0x9d
 12946 32e6 D3320000 		.long	0x32d3
 12947 32ea 5E       		.uleb128 0x5e
 12948 32eb 00000000 		.long	.LASF517
 12949 32ef 2F       		.byte	0x2f
 12950 32f0 5F       		.byte	0x5f
 12951 32f1 00000000 		.long	.LASF518
 12952 32f5 42AD0000 		.long	0xad42
 12953 32f9 03       		.byte	0x3
 12954 32fa 00330000 		.long	0x3300
 12955 32fe 3A       		.uleb128 0x3a
 12956 32ff 00       		.byte	0
 12957 3300 5E       		.uleb128 0x5e
 12958 3301 00000000 		.long	.LASF519
 12959 3305 2F       		.byte	0x2f
 12960 3306 68       		.byte	0x68
 12961 3307 00000000 		.long	.LASF520
 12962 330b A6310000 		.long	0x31a6
 12963 330f 03       		.byte	0x3
 12964 3310 16330000 		.long	0x3316
 12965 3314 3A       		.uleb128 0x3a
 12966 3315 00       		.byte	0
 12967 3316 5E       		.uleb128 0x5e
 12968 3317 00000000 		.long	.LASF521
 12969 331b 2F       		.byte	0x2f
 12970 331c 73       		.byte	0x73
 12971 331d 00000000 		.long	.LASF522
 12972 3321 90310000 		.long	0x3190
 12973 3325 03       		.byte	0x3
 12974 3326 2C330000 		.long	0x332c
 12975 332a 3A       		.uleb128 0x3a
 12976 332b 00       		.byte	0
 12977 332c 5E       		.uleb128 0x5e
 12978 332d 00000000 		.long	.LASF523
 12979 3331 2F       		.byte	0x2f
 12980 3332 7E       		.byte	0x7e
 12981 3333 00000000 		.long	.LASF524
 12982 3337 9B310000 		.long	0x319b
 12983 333b 03       		.byte	0x3
 12984 333c 42330000 		.long	0x3342
 12985 3340 3A       		.uleb128 0x3a
 12986 3341 00       		.byte	0
 12987 3342 5E       		.uleb128 0x5e
 12988 3343 00000000 		.long	.LASF525
 12989 3347 2F       		.byte	0x2f
 12990 3348 89       		.byte	0x89
GAS LISTING /tmp/ccmMnd7l.s 			page 530


 12991 3349 00000000 		.long	.LASF526
 12992 334d 6C310000 		.long	0x316c
 12993 3351 03       		.byte	0x3
 12994 3352 58330000 		.long	0x3358
 12995 3356 3A       		.uleb128 0x3a
 12996 3357 00       		.byte	0
 12997 3358 5E       		.uleb128 0x5e
 12998 3359 00000000 		.long	.LASF527
 12999 335d 2F       		.byte	0x2f
 13000 335e 94       		.byte	0x94
 13001 335f 00000000 		.long	.LASF528
 13002 3363 78320000 		.long	0x3278
 13003 3367 03       		.byte	0x3
 13004 3368 6E330000 		.long	0x336e
 13005 336c 3A       		.uleb128 0x3a
 13006 336d 00       		.byte	0
 13007 336e 5E       		.uleb128 0x5e
 13008 336f 00000000 		.long	.LASF529
 13009 3373 2F       		.byte	0x2f
 13010 3374 9F       		.byte	0x9f
 13011 3375 00000000 		.long	.LASF530
 13012 3379 5C340000 		.long	0x345c
 13013 337d 03       		.byte	0x3
 13014 337e 84330000 		.long	0x3384
 13015 3382 3A       		.uleb128 0x3a
 13016 3383 00       		.byte	0
 13017 3384 5E       		.uleb128 0x5e
 13018 3385 00000000 		.long	.LASF531
 13019 3389 2F       		.byte	0x2f
 13020 338a AB       		.byte	0xab
 13021 338b 00000000 		.long	.LASF532
 13022 338f 5C340000 		.long	0x345c
 13023 3393 03       		.byte	0x3
 13024 3394 9A330000 		.long	0x339a
 13025 3398 3A       		.uleb128 0x3a
 13026 3399 00       		.byte	0
 13027 339a 5E       		.uleb128 0x5e
 13028 339b 00000000 		.long	.LASF533
 13029 339f 2F       		.byte	0x2f
 13030 33a0 B7       		.byte	0xb7
 13031 33a1 00000000 		.long	.LASF534
 13032 33a5 5C340000 		.long	0x345c
 13033 33a9 03       		.byte	0x3
 13034 33aa B0330000 		.long	0x33b0
 13035 33ae 3A       		.uleb128 0x3a
 13036 33af 00       		.byte	0
 13037 33b0 1E       		.uleb128 0x1e
 13038 33b1 00000000 		.long	.LASF535
 13039 33b5 2F       		.byte	0x2f
 13040 33b6 6401     		.value	0x164
 13041 33b8 00000000 		.long	.LASF536
 13042 33bc B1320000 		.long	0x32b1
 13043 33c0 CF330000 		.long	0x33cf
 13044 33c4 09       		.uleb128 0x9
 13045 33c5 48AD0000 		.long	0xad48
 13046 33c9 09       		.uleb128 0x9
 13047 33ca DF320000 		.long	0x32df
GAS LISTING /tmp/ccmMnd7l.s 			page 531


 13048 33ce 00       		.byte	0
 13049 33cf 1E       		.uleb128 0x1e
 13050 33d0 00000000 		.long	.LASF535
 13051 33d4 2F       		.byte	0x2f
 13052 33d5 7301     		.value	0x173
 13053 33d7 00000000 		.long	.LASF537
 13054 33db B1320000 		.long	0x32b1
 13055 33df F3330000 		.long	0x33f3
 13056 33e3 09       		.uleb128 0x9
 13057 33e4 48AD0000 		.long	0xad48
 13058 33e8 09       		.uleb128 0x9
 13059 33e9 DF320000 		.long	0x32df
 13060 33ed 09       		.uleb128 0x9
 13061 33ee C8320000 		.long	0x32c8
 13062 33f2 00       		.byte	0
 13063 33f3 2E       		.uleb128 0x2e
 13064 33f4 00000000 		.long	.LASF538
 13065 33f8 2F       		.byte	0x2f
 13066 33f9 7E01     		.value	0x17e
 13067 33fb 00000000 		.long	.LASF539
 13068 33ff 13340000 		.long	0x3413
 13069 3403 09       		.uleb128 0x9
 13070 3404 48AD0000 		.long	0xad48
 13071 3408 09       		.uleb128 0x9
 13072 3409 B1320000 		.long	0x32b1
 13073 340d 09       		.uleb128 0x9
 13074 340e DF320000 		.long	0x32df
 13075 3412 00       		.byte	0
 13076 3413 1E       		.uleb128 0x1e
 13077 3414 00000000 		.long	.LASF171
 13078 3418 2F       		.byte	0x2f
 13079 3419 A501     		.value	0x1a5
 13080 341b 00000000 		.long	.LASF540
 13081 341f DF320000 		.long	0x32df
 13082 3423 2D340000 		.long	0x342d
 13083 3427 09       		.uleb128 0x9
 13084 3428 36AD0000 		.long	0xad36
 13085 342c 00       		.byte	0
 13086 342d 1E       		.uleb128 0x1e
 13087 342e 00000000 		.long	.LASF541
 13088 3432 2F       		.byte	0x2f
 13089 3433 B101     		.value	0x1b1
 13090 3435 00000000 		.long	.LASF542
 13091 3439 8D300000 		.long	0x308d
 13092 343d 47340000 		.long	0x3447
 13093 3441 09       		.uleb128 0x9
 13094 3442 36AD0000 		.long	0xad36
 13095 3446 00       		.byte	0
 13096 3447 13       		.uleb128 0x13
 13097 3448 00000000 		.long	.LASF543
 13098 344c 2F       		.byte	0x2f
 13099 344d C5       		.byte	0xc5
 13100 344e 73340000 		.long	0x3473
 13101 3452 35       		.uleb128 0x35
 13102 3453 00000000 		.long	.LASF303
 13103 3457 8D300000 		.long	0x308d
 13104 345b 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 532


 13105 345c 13       		.uleb128 0x13
 13106 345d 00000000 		.long	.LASF544
 13107 3461 1B       		.byte	0x1b
 13108 3462 5A       		.byte	0x5a
 13109 3463 18020000 		.long	0x218
 13110 3467 16       		.uleb128 0x16
 13111 3468 00000000 		.long	.LASF545
 13112 346c 01       		.byte	0x1
 13113 346d 2F       		.byte	0x2f
 13114 346e 3F       		.byte	0x3f
 13115 346f 91340000 		.long	0x3491
 13116 3473 13       		.uleb128 0x13
 13117 3474 00000000 		.long	.LASF494
 13118 3478 2F       		.byte	0x2f
 13119 3479 41       		.byte	0x41
 13120 347a 19310000 		.long	0x3119
 13121 347e 35       		.uleb128 0x35
 13122 347f 00000000 		.long	.LASF303
 13123 3483 8D300000 		.long	0x308d
 13124 3487 18       		.uleb128 0x18
 13125 3488 5F547000 		.string	"_Tp"
 13126 348c 29000000 		.long	0x29
 13127 3490 00       		.byte	0
 13128 3491 16       		.uleb128 0x16
 13129 3492 00000000 		.long	.LASF546
 13130 3496 18       		.byte	0x18
 13131 3497 06       		.byte	0x6
 13132 3498 48       		.byte	0x48
 13133 3499 29370000 		.long	0x3729
 13134 349d 16       		.uleb128 0x16
 13135 349e 00000000 		.long	.LASF547
 13136 34a2 18       		.byte	0x18
 13137 34a3 06       		.byte	0x6
 13138 34a4 4F       		.byte	0x4f
 13139 34a5 4F350000 		.long	0x354f
 13140 34a9 25       		.uleb128 0x25
 13141 34aa 8D300000 		.long	0x308d
 13142 34ae 00       		.byte	0
 13143 34af 06       		.uleb128 0x6
 13144 34b0 00000000 		.long	.LASF548
 13145 34b4 06       		.byte	0x6
 13146 34b5 52       		.byte	0x52
 13147 34b6 4F350000 		.long	0x354f
 13148 34ba 00       		.byte	0
 13149 34bb 06       		.uleb128 0x6
 13150 34bc 00000000 		.long	.LASF549
 13151 34c0 06       		.byte	0x6
 13152 34c1 53       		.byte	0x53
 13153 34c2 4F350000 		.long	0x354f
 13154 34c6 08       		.byte	0x8
 13155 34c7 06       		.uleb128 0x6
 13156 34c8 00000000 		.long	.LASF550
 13157 34cc 06       		.byte	0x6
 13158 34cd 54       		.byte	0x54
 13159 34ce 4F350000 		.long	0x354f
 13160 34d2 10       		.byte	0x10
 13161 34d3 37       		.uleb128 0x37
GAS LISTING /tmp/ccmMnd7l.s 			page 533


 13162 34d4 00000000 		.long	.LASF547
 13163 34d8 06       		.byte	0x6
 13164 34d9 56       		.byte	0x56
 13165 34da E2340000 		.long	0x34e2
 13166 34de E8340000 		.long	0x34e8
 13167 34e2 08       		.uleb128 0x8
 13168 34e3 5AAD0000 		.long	0xad5a
 13169 34e7 00       		.byte	0
 13170 34e8 37       		.uleb128 0x37
 13171 34e9 00000000 		.long	.LASF547
 13172 34ed 06       		.byte	0x6
 13173 34ee 5A       		.byte	0x5a
 13174 34ef F7340000 		.long	0x34f7
 13175 34f3 02350000 		.long	0x3502
 13176 34f7 08       		.uleb128 0x8
 13177 34f8 5AAD0000 		.long	0xad5a
 13178 34fc 09       		.uleb128 0x9
 13179 34fd 60AD0000 		.long	0xad60
 13180 3501 00       		.byte	0
 13181 3502 37       		.uleb128 0x37
 13182 3503 00000000 		.long	.LASF547
 13183 3507 06       		.byte	0x6
 13184 3508 5F       		.byte	0x5f
 13185 3509 11350000 		.long	0x3511
 13186 350d 1C350000 		.long	0x351c
 13187 3511 08       		.uleb128 0x8
 13188 3512 5AAD0000 		.long	0xad5a
 13189 3516 09       		.uleb128 0x9
 13190 3517 66AD0000 		.long	0xad66
 13191 351b 00       		.byte	0
 13192 351c 0A       		.uleb128 0xa
 13193 351d 00000000 		.long	.LASF551
 13194 3521 06       		.byte	0x6
 13195 3522 65       		.byte	0x65
 13196 3523 00000000 		.long	.LASF552
 13197 3527 2F350000 		.long	0x352f
 13198 352b 3A350000 		.long	0x353a
 13199 352f 08       		.uleb128 0x8
 13200 3530 5AAD0000 		.long	0xad5a
 13201 3534 09       		.uleb128 0x9
 13202 3535 6DAD0000 		.long	0xad6d
 13203 3539 00       		.byte	0
 13204 353a 28       		.uleb128 0x28
 13205 353b 00000000 		.long	.LASF553
 13206 353f 43350000 		.long	0x3543
 13207 3543 08       		.uleb128 0x8
 13208 3544 5AAD0000 		.long	0xad5a
 13209 3548 08       		.uleb128 0x8
 13210 3549 D8800000 		.long	0x80d8
 13211 354d 00       		.byte	0
 13212 354e 00       		.byte	0
 13213 354f 13       		.uleb128 0x13
 13214 3550 00000000 		.long	.LASF489
 13215 3554 06       		.byte	0x6
 13216 3555 4D       		.byte	0x4d
 13217 3556 E88B0000 		.long	0x8be8
 13218 355a 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 534


 13219 355b 5F350000 		.long	0x355f
 13220 355f 13       		.uleb128 0x13
 13221 3560 00000000 		.long	.LASF554
 13222 3564 06       		.byte	0x6
 13223 3565 4B       		.byte	0x4b
 13224 3566 A78C0000 		.long	0x8ca7
 13225 356a 06       		.uleb128 0x6
 13226 356b 00000000 		.long	.LASF555
 13227 356f 06       		.byte	0x6
 13228 3570 A4       		.byte	0xa4
 13229 3571 9D340000 		.long	0x349d
 13230 3575 00       		.byte	0
 13231 3576 13       		.uleb128 0x13
 13232 3577 00000000 		.long	.LASF67
 13233 357b 06       		.byte	0x6
 13234 357c 6E       		.byte	0x6e
 13235 357d 8D300000 		.long	0x308d
 13236 3581 0B       		.uleb128 0xb
 13237 3582 00000000 		.long	.LASF556
 13238 3586 06       		.byte	0x6
 13239 3587 71       		.byte	0x71
 13240 3588 00000000 		.long	.LASF557
 13241 358c 73AD0000 		.long	0xad73
 13242 3590 98350000 		.long	0x3598
 13243 3594 9E350000 		.long	0x359e
 13244 3598 08       		.uleb128 0x8
 13245 3599 79AD0000 		.long	0xad79
 13246 359d 00       		.byte	0
 13247 359e 0B       		.uleb128 0xb
 13248 359f 00000000 		.long	.LASF556
 13249 35a3 06       		.byte	0x6
 13250 35a4 75       		.byte	0x75
 13251 35a5 00000000 		.long	.LASF558
 13252 35a9 60AD0000 		.long	0xad60
 13253 35ad B5350000 		.long	0x35b5
 13254 35b1 BB350000 		.long	0x35bb
 13255 35b5 08       		.uleb128 0x8
 13256 35b6 7FAD0000 		.long	0xad7f
 13257 35ba 00       		.byte	0
 13258 35bb 0B       		.uleb128 0xb
 13259 35bc 00000000 		.long	.LASF262
 13260 35c0 06       		.byte	0x6
 13261 35c1 79       		.byte	0x79
 13262 35c2 00000000 		.long	.LASF559
 13263 35c6 76350000 		.long	0x3576
 13264 35ca D2350000 		.long	0x35d2
 13265 35ce D8350000 		.long	0x35d8
 13266 35d2 08       		.uleb128 0x8
 13267 35d3 7FAD0000 		.long	0xad7f
 13268 35d7 00       		.byte	0
 13269 35d8 37       		.uleb128 0x37
 13270 35d9 00000000 		.long	.LASF560
 13271 35dd 06       		.byte	0x6
 13272 35de 7C       		.byte	0x7c
 13273 35df E7350000 		.long	0x35e7
 13274 35e3 ED350000 		.long	0x35ed
 13275 35e7 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 535


 13276 35e8 79AD0000 		.long	0xad79
 13277 35ec 00       		.byte	0
 13278 35ed 37       		.uleb128 0x37
 13279 35ee 00000000 		.long	.LASF560
 13280 35f2 06       		.byte	0x6
 13281 35f3 7F       		.byte	0x7f
 13282 35f4 FC350000 		.long	0x35fc
 13283 35f8 07360000 		.long	0x3607
 13284 35fc 08       		.uleb128 0x8
 13285 35fd 79AD0000 		.long	0xad79
 13286 3601 09       		.uleb128 0x9
 13287 3602 85AD0000 		.long	0xad85
 13288 3606 00       		.byte	0
 13289 3607 11       		.uleb128 0x11
 13290 3608 76350000 		.long	0x3576
 13291 360c 37       		.uleb128 0x37
 13292 360d 00000000 		.long	.LASF560
 13293 3611 06       		.byte	0x6
 13294 3612 82       		.byte	0x82
 13295 3613 1B360000 		.long	0x361b
 13296 3617 26360000 		.long	0x3626
 13297 361b 08       		.uleb128 0x8
 13298 361c 79AD0000 		.long	0xad79
 13299 3620 09       		.uleb128 0x9
 13300 3621 85060000 		.long	0x685
 13301 3625 00       		.byte	0
 13302 3626 37       		.uleb128 0x37
 13303 3627 00000000 		.long	.LASF560
 13304 362b 06       		.byte	0x6
 13305 362c 86       		.byte	0x86
 13306 362d 35360000 		.long	0x3635
 13307 3631 45360000 		.long	0x3645
 13308 3635 08       		.uleb128 0x8
 13309 3636 79AD0000 		.long	0xad79
 13310 363a 09       		.uleb128 0x9
 13311 363b 85060000 		.long	0x685
 13312 363f 09       		.uleb128 0x9
 13313 3640 85AD0000 		.long	0xad85
 13314 3644 00       		.byte	0
 13315 3645 37       		.uleb128 0x37
 13316 3646 00000000 		.long	.LASF560
 13317 364a 06       		.byte	0x6
 13318 364b 8B       		.byte	0x8b
 13319 364c 54360000 		.long	0x3654
 13320 3650 5F360000 		.long	0x365f
 13321 3654 08       		.uleb128 0x8
 13322 3655 79AD0000 		.long	0xad79
 13323 3659 09       		.uleb128 0x9
 13324 365a 66AD0000 		.long	0xad66
 13325 365e 00       		.byte	0
 13326 365f 37       		.uleb128 0x37
 13327 3660 00000000 		.long	.LASF560
 13328 3664 06       		.byte	0x6
 13329 3665 8E       		.byte	0x8e
 13330 3666 6E360000 		.long	0x366e
 13331 366a 79360000 		.long	0x3679
 13332 366e 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 536


 13333 366f 79AD0000 		.long	0xad79
 13334 3673 09       		.uleb128 0x9
 13335 3674 8BAD0000 		.long	0xad8b
 13336 3678 00       		.byte	0
 13337 3679 37       		.uleb128 0x37
 13338 367a 00000000 		.long	.LASF560
 13339 367e 06       		.byte	0x6
 13340 367f 92       		.byte	0x92
 13341 3680 88360000 		.long	0x3688
 13342 3684 98360000 		.long	0x3698
 13343 3688 08       		.uleb128 0x8
 13344 3689 79AD0000 		.long	0xad79
 13345 368d 09       		.uleb128 0x9
 13346 368e 8BAD0000 		.long	0xad8b
 13347 3692 09       		.uleb128 0x9
 13348 3693 85AD0000 		.long	0xad85
 13349 3697 00       		.byte	0
 13350 3698 37       		.uleb128 0x37
 13351 3699 00000000 		.long	.LASF561
 13352 369d 06       		.byte	0x6
 13353 369e 9F       		.byte	0x9f
 13354 369f A7360000 		.long	0x36a7
 13355 36a3 B2360000 		.long	0x36b2
 13356 36a7 08       		.uleb128 0x8
 13357 36a8 79AD0000 		.long	0xad79
 13358 36ac 08       		.uleb128 0x8
 13359 36ad D8800000 		.long	0x80d8
 13360 36b1 00       		.byte	0
 13361 36b2 0B       		.uleb128 0xb
 13362 36b3 00000000 		.long	.LASF562
 13363 36b7 06       		.byte	0x6
 13364 36b8 A7       		.byte	0xa7
 13365 36b9 00000000 		.long	.LASF563
 13366 36bd 4F350000 		.long	0x354f
 13367 36c1 C9360000 		.long	0x36c9
 13368 36c5 D4360000 		.long	0x36d4
 13369 36c9 08       		.uleb128 0x8
 13370 36ca 79AD0000 		.long	0xad79
 13371 36ce 09       		.uleb128 0x9
 13372 36cf 85060000 		.long	0x685
 13373 36d3 00       		.byte	0
 13374 36d4 0A       		.uleb128 0xa
 13375 36d5 00000000 		.long	.LASF564
 13376 36d9 06       		.byte	0x6
 13377 36da AE       		.byte	0xae
 13378 36db 00000000 		.long	.LASF565
 13379 36df E7360000 		.long	0x36e7
 13380 36e3 F7360000 		.long	0x36f7
 13381 36e7 08       		.uleb128 0x8
 13382 36e8 79AD0000 		.long	0xad79
 13383 36ec 09       		.uleb128 0x9
 13384 36ed 4F350000 		.long	0x354f
 13385 36f1 09       		.uleb128 0x9
 13386 36f2 85060000 		.long	0x685
 13387 36f6 00       		.byte	0
 13388 36f7 0E       		.uleb128 0xe
 13389 36f8 00000000 		.long	.LASF566
GAS LISTING /tmp/ccmMnd7l.s 			page 537


 13390 36fc 06       		.byte	0x6
 13391 36fd B7       		.byte	0xb7
 13392 36fe 00000000 		.long	.LASF567
 13393 3702 03       		.byte	0x3
 13394 3703 0B370000 		.long	0x370b
 13395 3707 16370000 		.long	0x3716
 13396 370b 08       		.uleb128 0x8
 13397 370c 79AD0000 		.long	0xad79
 13398 3710 09       		.uleb128 0x9
 13399 3711 85060000 		.long	0x685
 13400 3715 00       		.byte	0
 13401 3716 18       		.uleb128 0x18
 13402 3717 5F547000 		.string	"_Tp"
 13403 371b 29000000 		.long	0x29
 13404 371f 35       		.uleb128 0x35
 13405 3720 00000000 		.long	.LASF303
 13406 3724 8D300000 		.long	0x308d
 13407 3728 00       		.byte	0
 13408 3729 11       		.uleb128 0x11
 13409 372a 91340000 		.long	0x3491
 13410 372e 05       		.uleb128 0x5
 13411 372f 00000000 		.long	.LASF568
 13412 3733 18       		.byte	0x18
 13413 3734 06       		.byte	0x6
 13414 3735 D6       		.byte	0xd6
 13415 3736 E9400000 		.long	0x40e9
 13416 373a 12       		.uleb128 0x12
 13417 373b 06       		.byte	0x6
 13418 373c D6       		.byte	0xd6
 13419 373d B2360000 		.long	0x36b2
 13420 3741 12       		.uleb128 0x12
 13421 3742 06       		.byte	0x6
 13422 3743 D6       		.byte	0xd6
 13423 3744 D4360000 		.long	0x36d4
 13424 3748 12       		.uleb128 0x12
 13425 3749 06       		.byte	0x6
 13426 374a D6       		.byte	0xd6
 13427 374b 6A350000 		.long	0x356a
 13428 374f 12       		.uleb128 0x12
 13429 3750 06       		.byte	0x6
 13430 3751 D6       		.byte	0xd6
 13431 3752 9E350000 		.long	0x359e
 13432 3756 12       		.uleb128 0x12
 13433 3757 06       		.byte	0x6
 13434 3758 D6       		.byte	0xd6
 13435 3759 BB350000 		.long	0x35bb
 13436 375d 21       		.uleb128 0x21
 13437 375e 91340000 		.long	0x3491
 13438 3762 00       		.byte	0
 13439 3763 02       		.byte	0x2
 13440 3764 22       		.uleb128 0x22
 13441 3765 00000000 		.long	.LASF19
 13442 3769 06       		.byte	0x6
 13443 376a E2       		.byte	0xe2
 13444 376b 29000000 		.long	0x29
 13445 376f 01       		.byte	0x1
 13446 3770 22       		.uleb128 0x22
GAS LISTING /tmp/ccmMnd7l.s 			page 538


 13447 3771 00000000 		.long	.LASF489
 13448 3775 06       		.byte	0x6
 13449 3776 E3       		.byte	0xe3
 13450 3777 4F350000 		.long	0x354f
 13451 377b 01       		.byte	0x1
 13452 377c 22       		.uleb128 0x22
 13453 377d 00000000 		.long	.LASF58
 13454 3781 06       		.byte	0x6
 13455 3782 E5       		.byte	0xe5
 13456 3783 F38B0000 		.long	0x8bf3
 13457 3787 01       		.byte	0x1
 13458 3788 22       		.uleb128 0x22
 13459 3789 00000000 		.long	.LASF59
 13460 378d 06       		.byte	0x6
 13461 378e E6       		.byte	0xe6
 13462 378f FE8B0000 		.long	0x8bfe
 13463 3793 01       		.byte	0x1
 13464 3794 22       		.uleb128 0x22
 13465 3795 00000000 		.long	.LASF68
 13466 3799 06       		.byte	0x6
 13467 379a E7       		.byte	0xe7
 13468 379b C68C0000 		.long	0x8cc6
 13469 379f 01       		.byte	0x1
 13470 37a0 22       		.uleb128 0x22
 13471 37a1 00000000 		.long	.LASF69
 13472 37a5 06       		.byte	0x6
 13473 37a6 E9       		.byte	0xe9
 13474 37a7 FF8E0000 		.long	0x8eff
 13475 37ab 01       		.byte	0x1
 13476 37ac 22       		.uleb128 0x22
 13477 37ad 00000000 		.long	.LASF70
 13478 37b1 06       		.byte	0x6
 13479 37b2 EA       		.byte	0xea
 13480 37b3 E9400000 		.long	0x40e9
 13481 37b7 01       		.byte	0x1
 13482 37b8 22       		.uleb128 0x22
 13483 37b9 00000000 		.long	.LASF71
 13484 37bd 06       		.byte	0x6
 13485 37be EB       		.byte	0xeb
 13486 37bf EE400000 		.long	0x40ee
 13487 37c3 01       		.byte	0x1
 13488 37c4 22       		.uleb128 0x22
 13489 37c5 00000000 		.long	.LASF57
 13490 37c9 06       		.byte	0x6
 13491 37ca EC       		.byte	0xec
 13492 37cb 85060000 		.long	0x685
 13493 37cf 01       		.byte	0x1
 13494 37d0 22       		.uleb128 0x22
 13495 37d1 00000000 		.long	.LASF67
 13496 37d5 06       		.byte	0x6
 13497 37d6 EE       		.byte	0xee
 13498 37d7 8D300000 		.long	0x308d
 13499 37db 01       		.byte	0x1
 13500 37dc 0C       		.uleb128 0xc
 13501 37dd 00000000 		.long	.LASF569
 13502 37e1 06       		.byte	0x6
 13503 37e2 FD       		.byte	0xfd
GAS LISTING /tmp/ccmMnd7l.s 			page 539


 13504 37e3 01       		.byte	0x1
 13505 37e4 EC370000 		.long	0x37ec
 13506 37e8 F2370000 		.long	0x37f2
 13507 37ec 08       		.uleb128 0x8
 13508 37ed 92AD0000 		.long	0xad92
 13509 37f1 00       		.byte	0
 13510 37f2 31       		.uleb128 0x31
 13511 37f3 00000000 		.long	.LASF569
 13512 37f7 06       		.byte	0x6
 13513 37f8 0801     		.value	0x108
 13514 37fa 01       		.byte	0x1
 13515 37fb 03380000 		.long	0x3803
 13516 37ff 0E380000 		.long	0x380e
 13517 3803 08       		.uleb128 0x8
 13518 3804 92AD0000 		.long	0xad92
 13519 3808 09       		.uleb128 0x9
 13520 3809 98AD0000 		.long	0xad98
 13521 380d 00       		.byte	0
 13522 380e 11       		.uleb128 0x11
 13523 380f D0370000 		.long	0x37d0
 13524 3813 31       		.uleb128 0x31
 13525 3814 00000000 		.long	.LASF569
 13526 3818 06       		.byte	0x6
 13527 3819 1501     		.value	0x115
 13528 381b 01       		.byte	0x1
 13529 381c 24380000 		.long	0x3824
 13530 3820 34380000 		.long	0x3834
 13531 3824 08       		.uleb128 0x8
 13532 3825 92AD0000 		.long	0xad92
 13533 3829 09       		.uleb128 0x9
 13534 382a C4370000 		.long	0x37c4
 13535 382e 09       		.uleb128 0x9
 13536 382f 98AD0000 		.long	0xad98
 13537 3833 00       		.byte	0
 13538 3834 30       		.uleb128 0x30
 13539 3835 00000000 		.long	.LASF569
 13540 3839 06       		.byte	0x6
 13541 383a 2101     		.value	0x121
 13542 383c 01       		.byte	0x1
 13543 383d 45380000 		.long	0x3845
 13544 3841 5A380000 		.long	0x385a
 13545 3845 08       		.uleb128 0x8
 13546 3846 92AD0000 		.long	0xad92
 13547 384a 09       		.uleb128 0x9
 13548 384b C4370000 		.long	0x37c4
 13549 384f 09       		.uleb128 0x9
 13550 3850 9EAD0000 		.long	0xad9e
 13551 3854 09       		.uleb128 0x9
 13552 3855 98AD0000 		.long	0xad98
 13553 3859 00       		.byte	0
 13554 385a 11       		.uleb128 0x11
 13555 385b 64370000 		.long	0x3764
 13556 385f 30       		.uleb128 0x30
 13557 3860 00000000 		.long	.LASF569
 13558 3864 06       		.byte	0x6
 13559 3865 3E01     		.value	0x13e
 13560 3867 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 540


 13561 3868 70380000 		.long	0x3870
 13562 386c 7B380000 		.long	0x387b
 13563 3870 08       		.uleb128 0x8
 13564 3871 92AD0000 		.long	0xad92
 13565 3875 09       		.uleb128 0x9
 13566 3876 A4AD0000 		.long	0xada4
 13567 387a 00       		.byte	0
 13568 387b 30       		.uleb128 0x30
 13569 387c 00000000 		.long	.LASF569
 13570 3880 06       		.byte	0x6
 13571 3881 4F01     		.value	0x14f
 13572 3883 01       		.byte	0x1
 13573 3884 8C380000 		.long	0x388c
 13574 3888 97380000 		.long	0x3897
 13575 388c 08       		.uleb128 0x8
 13576 388d 92AD0000 		.long	0xad92
 13577 3891 09       		.uleb128 0x9
 13578 3892 AAAD0000 		.long	0xadaa
 13579 3896 00       		.byte	0
 13580 3897 30       		.uleb128 0x30
 13581 3898 00000000 		.long	.LASF569
 13582 389c 06       		.byte	0x6
 13583 389d 5301     		.value	0x153
 13584 389f 01       		.byte	0x1
 13585 38a0 A8380000 		.long	0x38a8
 13586 38a4 B8380000 		.long	0x38b8
 13587 38a8 08       		.uleb128 0x8
 13588 38a9 92AD0000 		.long	0xad92
 13589 38ad 09       		.uleb128 0x9
 13590 38ae A4AD0000 		.long	0xada4
 13591 38b2 09       		.uleb128 0x9
 13592 38b3 98AD0000 		.long	0xad98
 13593 38b7 00       		.byte	0
 13594 38b8 30       		.uleb128 0x30
 13595 38b9 00000000 		.long	.LASF569
 13596 38bd 06       		.byte	0x6
 13597 38be 5C01     		.value	0x15c
 13598 38c0 01       		.byte	0x1
 13599 38c1 C9380000 		.long	0x38c9
 13600 38c5 D9380000 		.long	0x38d9
 13601 38c9 08       		.uleb128 0x8
 13602 38ca 92AD0000 		.long	0xad92
 13603 38ce 09       		.uleb128 0x9
 13604 38cf AAAD0000 		.long	0xadaa
 13605 38d3 09       		.uleb128 0x9
 13606 38d4 98AD0000 		.long	0xad98
 13607 38d8 00       		.byte	0
 13608 38d9 30       		.uleb128 0x30
 13609 38da 00000000 		.long	.LASF569
 13610 38de 06       		.byte	0x6
 13611 38df 7501     		.value	0x175
 13612 38e1 01       		.byte	0x1
 13613 38e2 EA380000 		.long	0x38ea
 13614 38e6 FA380000 		.long	0x38fa
 13615 38ea 08       		.uleb128 0x8
 13616 38eb 92AD0000 		.long	0xad92
 13617 38ef 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 541


 13618 38f0 F8400000 		.long	0x40f8
 13619 38f4 09       		.uleb128 0x9
 13620 38f5 98AD0000 		.long	0xad98
 13621 38f9 00       		.byte	0
 13622 38fa 30       		.uleb128 0x30
 13623 38fb 00000000 		.long	.LASF570
 13624 38ff 06       		.byte	0x6
 13625 3900 A701     		.value	0x1a7
 13626 3902 01       		.byte	0x1
 13627 3903 0B390000 		.long	0x390b
 13628 3907 16390000 		.long	0x3916
 13629 390b 08       		.uleb128 0x8
 13630 390c 92AD0000 		.long	0xad92
 13631 3910 08       		.uleb128 0x8
 13632 3911 D8800000 		.long	0x80d8
 13633 3915 00       		.byte	0
 13634 3916 0D       		.uleb128 0xd
 13635 3917 00000000 		.long	.LASF8
 13636 391b 30       		.byte	0x30
 13637 391c A7       		.byte	0xa7
 13638 391d 00000000 		.long	.LASF571
 13639 3921 B1AD0000 		.long	0xadb1
 13640 3925 01       		.byte	0x1
 13641 3926 2E390000 		.long	0x392e
 13642 392a 39390000 		.long	0x3939
 13643 392e 08       		.uleb128 0x8
 13644 392f 92AD0000 		.long	0xad92
 13645 3933 09       		.uleb128 0x9
 13646 3934 A4AD0000 		.long	0xada4
 13647 3938 00       		.byte	0
 13648 3939 32       		.uleb128 0x32
 13649 393a 00000000 		.long	.LASF8
 13650 393e 06       		.byte	0x6
 13651 393f C001     		.value	0x1c0
 13652 3941 00000000 		.long	.LASF572
 13653 3945 B1AD0000 		.long	0xadb1
 13654 3949 01       		.byte	0x1
 13655 394a 52390000 		.long	0x3952
 13656 394e 5D390000 		.long	0x395d
 13657 3952 08       		.uleb128 0x8
 13658 3953 92AD0000 		.long	0xad92
 13659 3957 09       		.uleb128 0x9
 13660 3958 AAAD0000 		.long	0xadaa
 13661 395c 00       		.byte	0
 13662 395d 32       		.uleb128 0x32
 13663 395e 00000000 		.long	.LASF8
 13664 3962 06       		.byte	0x6
 13665 3963 D601     		.value	0x1d6
 13666 3965 00000000 		.long	.LASF573
 13667 3969 B1AD0000 		.long	0xadb1
 13668 396d 01       		.byte	0x1
 13669 396e 76390000 		.long	0x3976
 13670 3972 81390000 		.long	0x3981
 13671 3976 08       		.uleb128 0x8
 13672 3977 92AD0000 		.long	0xad92
 13673 397b 09       		.uleb128 0x9
 13674 397c F8400000 		.long	0x40f8
GAS LISTING /tmp/ccmMnd7l.s 			page 542


 13675 3980 00       		.byte	0
 13676 3981 34       		.uleb128 0x34
 13677 3982 00000000 		.long	.LASF44
 13678 3986 06       		.byte	0x6
 13679 3987 E801     		.value	0x1e8
 13680 3989 00000000 		.long	.LASF574
 13681 398d 01       		.byte	0x1
 13682 398e 96390000 		.long	0x3996
 13683 3992 A6390000 		.long	0x39a6
 13684 3996 08       		.uleb128 0x8
 13685 3997 92AD0000 		.long	0xad92
 13686 399b 09       		.uleb128 0x9
 13687 399c C4370000 		.long	0x37c4
 13688 39a0 09       		.uleb128 0x9
 13689 39a1 9EAD0000 		.long	0xad9e
 13690 39a5 00       		.byte	0
 13691 39a6 34       		.uleb128 0x34
 13692 39a7 00000000 		.long	.LASF44
 13693 39ab 06       		.byte	0x6
 13694 39ac 1502     		.value	0x215
 13695 39ae 00000000 		.long	.LASF575
 13696 39b2 01       		.byte	0x1
 13697 39b3 BB390000 		.long	0x39bb
 13698 39b7 C6390000 		.long	0x39c6
 13699 39bb 08       		.uleb128 0x8
 13700 39bc 92AD0000 		.long	0xad92
 13701 39c0 09       		.uleb128 0x9
 13702 39c1 F8400000 		.long	0x40f8
 13703 39c5 00       		.byte	0
 13704 39c6 32       		.uleb128 0x32
 13705 39c7 00000000 		.long	.LASF149
 13706 39cb 06       		.byte	0x6
 13707 39cc 2302     		.value	0x223
 13708 39ce 00000000 		.long	.LASF576
 13709 39d2 94370000 		.long	0x3794
 13710 39d6 01       		.byte	0x1
 13711 39d7 DF390000 		.long	0x39df
 13712 39db E5390000 		.long	0x39e5
 13713 39df 08       		.uleb128 0x8
 13714 39e0 92AD0000 		.long	0xad92
 13715 39e4 00       		.byte	0
 13716 39e5 32       		.uleb128 0x32
 13717 39e6 00000000 		.long	.LASF149
 13718 39ea 06       		.byte	0x6
 13719 39eb 2C02     		.value	0x22c
 13720 39ed 00000000 		.long	.LASF577
 13721 39f1 A0370000 		.long	0x37a0
 13722 39f5 01       		.byte	0x1
 13723 39f6 FE390000 		.long	0x39fe
 13724 39fa 043A0000 		.long	0x3a04
 13725 39fe 08       		.uleb128 0x8
 13726 39ff B7AD0000 		.long	0xadb7
 13727 3a03 00       		.byte	0
 13728 3a04 33       		.uleb128 0x33
 13729 3a05 656E6400 		.string	"end"
 13730 3a09 06       		.byte	0x6
 13731 3a0a 3502     		.value	0x235
GAS LISTING /tmp/ccmMnd7l.s 			page 543


 13732 3a0c 00000000 		.long	.LASF578
 13733 3a10 94370000 		.long	0x3794
 13734 3a14 01       		.byte	0x1
 13735 3a15 1D3A0000 		.long	0x3a1d
 13736 3a19 233A0000 		.long	0x3a23
 13737 3a1d 08       		.uleb128 0x8
 13738 3a1e 92AD0000 		.long	0xad92
 13739 3a22 00       		.byte	0
 13740 3a23 33       		.uleb128 0x33
 13741 3a24 656E6400 		.string	"end"
 13742 3a28 06       		.byte	0x6
 13743 3a29 3E02     		.value	0x23e
 13744 3a2b 00000000 		.long	.LASF579
 13745 3a2f A0370000 		.long	0x37a0
 13746 3a33 01       		.byte	0x1
 13747 3a34 3C3A0000 		.long	0x3a3c
 13748 3a38 423A0000 		.long	0x3a42
 13749 3a3c 08       		.uleb128 0x8
 13750 3a3d B7AD0000 		.long	0xadb7
 13751 3a41 00       		.byte	0
 13752 3a42 32       		.uleb128 0x32
 13753 3a43 00000000 		.long	.LASF154
 13754 3a47 06       		.byte	0x6
 13755 3a48 4702     		.value	0x247
 13756 3a4a 00000000 		.long	.LASF580
 13757 3a4e B8370000 		.long	0x37b8
 13758 3a52 01       		.byte	0x1
 13759 3a53 5B3A0000 		.long	0x3a5b
 13760 3a57 613A0000 		.long	0x3a61
 13761 3a5b 08       		.uleb128 0x8
 13762 3a5c 92AD0000 		.long	0xad92
 13763 3a60 00       		.byte	0
 13764 3a61 32       		.uleb128 0x32
 13765 3a62 00000000 		.long	.LASF154
 13766 3a66 06       		.byte	0x6
 13767 3a67 5002     		.value	0x250
 13768 3a69 00000000 		.long	.LASF581
 13769 3a6d AC370000 		.long	0x37ac
 13770 3a71 01       		.byte	0x1
 13771 3a72 7A3A0000 		.long	0x3a7a
 13772 3a76 803A0000 		.long	0x3a80
 13773 3a7a 08       		.uleb128 0x8
 13774 3a7b B7AD0000 		.long	0xadb7
 13775 3a7f 00       		.byte	0
 13776 3a80 32       		.uleb128 0x32
 13777 3a81 00000000 		.long	.LASF157
 13778 3a85 06       		.byte	0x6
 13779 3a86 5902     		.value	0x259
 13780 3a88 00000000 		.long	.LASF582
 13781 3a8c B8370000 		.long	0x37b8
 13782 3a90 01       		.byte	0x1
 13783 3a91 993A0000 		.long	0x3a99
 13784 3a95 9F3A0000 		.long	0x3a9f
 13785 3a99 08       		.uleb128 0x8
 13786 3a9a 92AD0000 		.long	0xad92
 13787 3a9e 00       		.byte	0
 13788 3a9f 32       		.uleb128 0x32
GAS LISTING /tmp/ccmMnd7l.s 			page 544


 13789 3aa0 00000000 		.long	.LASF157
 13790 3aa4 06       		.byte	0x6
 13791 3aa5 6202     		.value	0x262
 13792 3aa7 00000000 		.long	.LASF583
 13793 3aab AC370000 		.long	0x37ac
 13794 3aaf 01       		.byte	0x1
 13795 3ab0 B83A0000 		.long	0x3ab8
 13796 3ab4 BE3A0000 		.long	0x3abe
 13797 3ab8 08       		.uleb128 0x8
 13798 3ab9 B7AD0000 		.long	0xadb7
 13799 3abd 00       		.byte	0
 13800 3abe 32       		.uleb128 0x32
 13801 3abf 00000000 		.long	.LASF160
 13802 3ac3 06       		.byte	0x6
 13803 3ac4 6C02     		.value	0x26c
 13804 3ac6 00000000 		.long	.LASF584
 13805 3aca A0370000 		.long	0x37a0
 13806 3ace 01       		.byte	0x1
 13807 3acf D73A0000 		.long	0x3ad7
 13808 3ad3 DD3A0000 		.long	0x3add
 13809 3ad7 08       		.uleb128 0x8
 13810 3ad8 B7AD0000 		.long	0xadb7
 13811 3adc 00       		.byte	0
 13812 3add 32       		.uleb128 0x32
 13813 3ade 00000000 		.long	.LASF162
 13814 3ae2 06       		.byte	0x6
 13815 3ae3 7502     		.value	0x275
 13816 3ae5 00000000 		.long	.LASF585
 13817 3ae9 A0370000 		.long	0x37a0
 13818 3aed 01       		.byte	0x1
 13819 3aee F63A0000 		.long	0x3af6
 13820 3af2 FC3A0000 		.long	0x3afc
 13821 3af6 08       		.uleb128 0x8
 13822 3af7 B7AD0000 		.long	0xadb7
 13823 3afb 00       		.byte	0
 13824 3afc 32       		.uleb128 0x32
 13825 3afd 00000000 		.long	.LASF164
 13826 3b01 06       		.byte	0x6
 13827 3b02 7E02     		.value	0x27e
 13828 3b04 00000000 		.long	.LASF586
 13829 3b08 AC370000 		.long	0x37ac
 13830 3b0c 01       		.byte	0x1
 13831 3b0d 153B0000 		.long	0x3b15
 13832 3b11 1B3B0000 		.long	0x3b1b
 13833 3b15 08       		.uleb128 0x8
 13834 3b16 B7AD0000 		.long	0xadb7
 13835 3b1a 00       		.byte	0
 13836 3b1b 32       		.uleb128 0x32
 13837 3b1c 00000000 		.long	.LASF166
 13838 3b20 06       		.byte	0x6
 13839 3b21 8702     		.value	0x287
 13840 3b23 00000000 		.long	.LASF587
 13841 3b27 AC370000 		.long	0x37ac
 13842 3b2b 01       		.byte	0x1
 13843 3b2c 343B0000 		.long	0x3b34
 13844 3b30 3A3B0000 		.long	0x3b3a
 13845 3b34 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 545


 13846 3b35 B7AD0000 		.long	0xadb7
 13847 3b39 00       		.byte	0
 13848 3b3a 32       		.uleb128 0x32
 13849 3b3b 00000000 		.long	.LASF168
 13850 3b3f 06       		.byte	0x6
 13851 3b40 8E02     		.value	0x28e
 13852 3b42 00000000 		.long	.LASF588
 13853 3b46 C4370000 		.long	0x37c4
 13854 3b4a 01       		.byte	0x1
 13855 3b4b 533B0000 		.long	0x3b53
 13856 3b4f 593B0000 		.long	0x3b59
 13857 3b53 08       		.uleb128 0x8
 13858 3b54 B7AD0000 		.long	0xadb7
 13859 3b58 00       		.byte	0
 13860 3b59 32       		.uleb128 0x32
 13861 3b5a 00000000 		.long	.LASF171
 13862 3b5e 06       		.byte	0x6
 13863 3b5f 9302     		.value	0x293
 13864 3b61 00000000 		.long	.LASF589
 13865 3b65 C4370000 		.long	0x37c4
 13866 3b69 01       		.byte	0x1
 13867 3b6a 723B0000 		.long	0x3b72
 13868 3b6e 783B0000 		.long	0x3b78
 13869 3b72 08       		.uleb128 0x8
 13870 3b73 B7AD0000 		.long	0xadb7
 13871 3b77 00       		.byte	0
 13872 3b78 34       		.uleb128 0x34
 13873 3b79 00000000 		.long	.LASF173
 13874 3b7d 06       		.byte	0x6
 13875 3b7e A102     		.value	0x2a1
 13876 3b80 00000000 		.long	.LASF590
 13877 3b84 01       		.byte	0x1
 13878 3b85 8D3B0000 		.long	0x3b8d
 13879 3b89 983B0000 		.long	0x3b98
 13880 3b8d 08       		.uleb128 0x8
 13881 3b8e 92AD0000 		.long	0xad92
 13882 3b92 09       		.uleb128 0x9
 13883 3b93 C4370000 		.long	0x37c4
 13884 3b97 00       		.byte	0
 13885 3b98 34       		.uleb128 0x34
 13886 3b99 00000000 		.long	.LASF173
 13887 3b9d 06       		.byte	0x6
 13888 3b9e B502     		.value	0x2b5
 13889 3ba0 00000000 		.long	.LASF591
 13890 3ba4 01       		.byte	0x1
 13891 3ba5 AD3B0000 		.long	0x3bad
 13892 3ba9 BD3B0000 		.long	0x3bbd
 13893 3bad 08       		.uleb128 0x8
 13894 3bae 92AD0000 		.long	0xad92
 13895 3bb2 09       		.uleb128 0x9
 13896 3bb3 C4370000 		.long	0x37c4
 13897 3bb7 09       		.uleb128 0x9
 13898 3bb8 9EAD0000 		.long	0xad9e
 13899 3bbc 00       		.byte	0
 13900 3bbd 34       		.uleb128 0x34
 13901 3bbe 00000000 		.long	.LASF176
 13902 3bc2 06       		.byte	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 546


 13903 3bc3 D502     		.value	0x2d5
 13904 3bc5 00000000 		.long	.LASF592
 13905 3bc9 01       		.byte	0x1
 13906 3bca D23B0000 		.long	0x3bd2
 13907 3bce D83B0000 		.long	0x3bd8
 13908 3bd2 08       		.uleb128 0x8
 13909 3bd3 92AD0000 		.long	0xad92
 13910 3bd7 00       		.byte	0
 13911 3bd8 32       		.uleb128 0x32
 13912 3bd9 00000000 		.long	.LASF178
 13913 3bdd 06       		.byte	0x6
 13914 3bde DE02     		.value	0x2de
 13915 3be0 00000000 		.long	.LASF593
 13916 3be4 C4370000 		.long	0x37c4
 13917 3be8 01       		.byte	0x1
 13918 3be9 F13B0000 		.long	0x3bf1
 13919 3bed F73B0000 		.long	0x3bf7
 13920 3bf1 08       		.uleb128 0x8
 13921 3bf2 B7AD0000 		.long	0xadb7
 13922 3bf6 00       		.byte	0
 13923 3bf7 32       		.uleb128 0x32
 13924 3bf8 00000000 		.long	.LASF184
 13925 3bfc 06       		.byte	0x6
 13926 3bfd E702     		.value	0x2e7
 13927 3bff 00000000 		.long	.LASF594
 13928 3c03 E0800000 		.long	0x80e0
 13929 3c07 01       		.byte	0x1
 13930 3c08 103C0000 		.long	0x3c10
 13931 3c0c 163C0000 		.long	0x3c16
 13932 3c10 08       		.uleb128 0x8
 13933 3c11 B7AD0000 		.long	0xadb7
 13934 3c15 00       		.byte	0
 13935 3c16 0E       		.uleb128 0xe
 13936 3c17 00000000 		.long	.LASF180
 13937 3c1b 30       		.byte	0x30
 13938 3c1c 41       		.byte	0x41
 13939 3c1d 00000000 		.long	.LASF595
 13940 3c21 01       		.byte	0x1
 13941 3c22 2A3C0000 		.long	0x3c2a
 13942 3c26 353C0000 		.long	0x3c35
 13943 3c2a 08       		.uleb128 0x8
 13944 3c2b 92AD0000 		.long	0xad92
 13945 3c2f 09       		.uleb128 0x9
 13946 3c30 C4370000 		.long	0x37c4
 13947 3c34 00       		.byte	0
 13948 3c35 32       		.uleb128 0x32
 13949 3c36 00000000 		.long	.LASF186
 13950 3c3a 06       		.byte	0x6
 13951 3c3b 0B03     		.value	0x30b
 13952 3c3d 00000000 		.long	.LASF596
 13953 3c41 7C370000 		.long	0x377c
 13954 3c45 01       		.byte	0x1
 13955 3c46 4E3C0000 		.long	0x3c4e
 13956 3c4a 593C0000 		.long	0x3c59
 13957 3c4e 08       		.uleb128 0x8
 13958 3c4f 92AD0000 		.long	0xad92
 13959 3c53 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 547


 13960 3c54 C4370000 		.long	0x37c4
 13961 3c58 00       		.byte	0
 13962 3c59 32       		.uleb128 0x32
 13963 3c5a 00000000 		.long	.LASF186
 13964 3c5e 06       		.byte	0x6
 13965 3c5f 1A03     		.value	0x31a
 13966 3c61 00000000 		.long	.LASF597
 13967 3c65 88370000 		.long	0x3788
 13968 3c69 01       		.byte	0x1
 13969 3c6a 723C0000 		.long	0x3c72
 13970 3c6e 7D3C0000 		.long	0x3c7d
 13971 3c72 08       		.uleb128 0x8
 13972 3c73 B7AD0000 		.long	0xadb7
 13973 3c77 09       		.uleb128 0x9
 13974 3c78 C4370000 		.long	0x37c4
 13975 3c7c 00       		.byte	0
 13976 3c7d 34       		.uleb128 0x34
 13977 3c7e 00000000 		.long	.LASF598
 13978 3c82 06       		.byte	0x6
 13979 3c83 2003     		.value	0x320
 13980 3c85 00000000 		.long	.LASF599
 13981 3c89 02       		.byte	0x2
 13982 3c8a 923C0000 		.long	0x3c92
 13983 3c8e 9D3C0000 		.long	0x3c9d
 13984 3c92 08       		.uleb128 0x8
 13985 3c93 B7AD0000 		.long	0xadb7
 13986 3c97 09       		.uleb128 0x9
 13987 3c98 C4370000 		.long	0x37c4
 13988 3c9c 00       		.byte	0
 13989 3c9d 33       		.uleb128 0x33
 13990 3c9e 617400   		.string	"at"
 13991 3ca1 06       		.byte	0x6
 13992 3ca2 3603     		.value	0x336
 13993 3ca4 00000000 		.long	.LASF600
 13994 3ca8 7C370000 		.long	0x377c
 13995 3cac 01       		.byte	0x1
 13996 3cad B53C0000 		.long	0x3cb5
 13997 3cb1 C03C0000 		.long	0x3cc0
 13998 3cb5 08       		.uleb128 0x8
 13999 3cb6 92AD0000 		.long	0xad92
 14000 3cba 09       		.uleb128 0x9
 14001 3cbb C4370000 		.long	0x37c4
 14002 3cbf 00       		.byte	0
 14003 3cc0 33       		.uleb128 0x33
 14004 3cc1 617400   		.string	"at"
 14005 3cc4 06       		.byte	0x6
 14006 3cc5 4803     		.value	0x348
 14007 3cc7 00000000 		.long	.LASF601
 14008 3ccb 88370000 		.long	0x3788
 14009 3ccf 01       		.byte	0x1
 14010 3cd0 D83C0000 		.long	0x3cd8
 14011 3cd4 E33C0000 		.long	0x3ce3
 14012 3cd8 08       		.uleb128 0x8
 14013 3cd9 B7AD0000 		.long	0xadb7
 14014 3cdd 09       		.uleb128 0x9
 14015 3cde C4370000 		.long	0x37c4
 14016 3ce2 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 548


 14017 3ce3 32       		.uleb128 0x32
 14018 3ce4 00000000 		.long	.LASF191
 14019 3ce8 06       		.byte	0x6
 14020 3ce9 5303     		.value	0x353
 14021 3ceb 00000000 		.long	.LASF602
 14022 3cef 7C370000 		.long	0x377c
 14023 3cf3 01       		.byte	0x1
 14024 3cf4 FC3C0000 		.long	0x3cfc
 14025 3cf8 023D0000 		.long	0x3d02
 14026 3cfc 08       		.uleb128 0x8
 14027 3cfd 92AD0000 		.long	0xad92
 14028 3d01 00       		.byte	0
 14029 3d02 32       		.uleb128 0x32
 14030 3d03 00000000 		.long	.LASF191
 14031 3d07 06       		.byte	0x6
 14032 3d08 5B03     		.value	0x35b
 14033 3d0a 00000000 		.long	.LASF603
 14034 3d0e 88370000 		.long	0x3788
 14035 3d12 01       		.byte	0x1
 14036 3d13 1B3D0000 		.long	0x3d1b
 14037 3d17 213D0000 		.long	0x3d21
 14038 3d1b 08       		.uleb128 0x8
 14039 3d1c B7AD0000 		.long	0xadb7
 14040 3d20 00       		.byte	0
 14041 3d21 32       		.uleb128 0x32
 14042 3d22 00000000 		.long	.LASF194
 14043 3d26 06       		.byte	0x6
 14044 3d27 6303     		.value	0x363
 14045 3d29 00000000 		.long	.LASF604
 14046 3d2d 7C370000 		.long	0x377c
 14047 3d31 01       		.byte	0x1
 14048 3d32 3A3D0000 		.long	0x3d3a
 14049 3d36 403D0000 		.long	0x3d40
 14050 3d3a 08       		.uleb128 0x8
 14051 3d3b 92AD0000 		.long	0xad92
 14052 3d3f 00       		.byte	0
 14053 3d40 32       		.uleb128 0x32
 14054 3d41 00000000 		.long	.LASF194
 14055 3d45 06       		.byte	0x6
 14056 3d46 6B03     		.value	0x36b
 14057 3d48 00000000 		.long	.LASF605
 14058 3d4c 88370000 		.long	0x3788
 14059 3d50 01       		.byte	0x1
 14060 3d51 593D0000 		.long	0x3d59
 14061 3d55 5F3D0000 		.long	0x3d5f
 14062 3d59 08       		.uleb128 0x8
 14063 3d5a B7AD0000 		.long	0xadb7
 14064 3d5e 00       		.byte	0
 14065 3d5f 32       		.uleb128 0x32
 14066 3d60 00000000 		.long	.LASF260
 14067 3d64 06       		.byte	0x6
 14068 3d65 7A03     		.value	0x37a
 14069 3d67 00000000 		.long	.LASF606
 14070 3d6b 01AD0000 		.long	0xad01
 14071 3d6f 01       		.byte	0x1
 14072 3d70 783D0000 		.long	0x3d78
 14073 3d74 7E3D0000 		.long	0x3d7e
GAS LISTING /tmp/ccmMnd7l.s 			page 549


 14074 3d78 08       		.uleb128 0x8
 14075 3d79 92AD0000 		.long	0xad92
 14076 3d7d 00       		.byte	0
 14077 3d7e 32       		.uleb128 0x32
 14078 3d7f 00000000 		.long	.LASF260
 14079 3d83 06       		.byte	0x6
 14080 3d84 8203     		.value	0x382
 14081 3d86 00000000 		.long	.LASF607
 14082 3d8a 07AD0000 		.long	0xad07
 14083 3d8e 01       		.byte	0x1
 14084 3d8f 973D0000 		.long	0x3d97
 14085 3d93 9D3D0000 		.long	0x3d9d
 14086 3d97 08       		.uleb128 0x8
 14087 3d98 B7AD0000 		.long	0xadb7
 14088 3d9c 00       		.byte	0
 14089 3d9d 34       		.uleb128 0x34
 14090 3d9e 00000000 		.long	.LASF209
 14091 3da2 06       		.byte	0x6
 14092 3da3 9103     		.value	0x391
 14093 3da5 00000000 		.long	.LASF608
 14094 3da9 01       		.byte	0x1
 14095 3daa B23D0000 		.long	0x3db2
 14096 3dae BD3D0000 		.long	0x3dbd
 14097 3db2 08       		.uleb128 0x8
 14098 3db3 92AD0000 		.long	0xad92
 14099 3db7 09       		.uleb128 0x9
 14100 3db8 9EAD0000 		.long	0xad9e
 14101 3dbc 00       		.byte	0
 14102 3dbd 34       		.uleb128 0x34
 14103 3dbe 00000000 		.long	.LASF209
 14104 3dc2 06       		.byte	0x6
 14105 3dc3 A303     		.value	0x3a3
 14106 3dc5 00000000 		.long	.LASF609
 14107 3dc9 01       		.byte	0x1
 14108 3dca D23D0000 		.long	0x3dd2
 14109 3dce DD3D0000 		.long	0x3ddd
 14110 3dd2 08       		.uleb128 0x8
 14111 3dd3 92AD0000 		.long	0xad92
 14112 3dd7 09       		.uleb128 0x9
 14113 3dd8 BDAD0000 		.long	0xadbd
 14114 3ddc 00       		.byte	0
 14115 3ddd 34       		.uleb128 0x34
 14116 3dde 00000000 		.long	.LASF231
 14117 3de2 06       		.byte	0x6
 14118 3de3 B503     		.value	0x3b5
 14119 3de5 00000000 		.long	.LASF610
 14120 3de9 01       		.byte	0x1
 14121 3dea F23D0000 		.long	0x3df2
 14122 3dee F83D0000 		.long	0x3df8
 14123 3df2 08       		.uleb128 0x8
 14124 3df3 92AD0000 		.long	0xad92
 14125 3df7 00       		.byte	0
 14126 3df8 0D       		.uleb128 0xd
 14127 3df9 00000000 		.long	.LASF218
 14128 3dfd 30       		.byte	0x30
 14129 3dfe 6B       		.byte	0x6b
 14130 3dff 00000000 		.long	.LASF611
GAS LISTING /tmp/ccmMnd7l.s 			page 550


 14131 3e03 94370000 		.long	0x3794
 14132 3e07 01       		.byte	0x1
 14133 3e08 103E0000 		.long	0x3e10
 14134 3e0c 203E0000 		.long	0x3e20
 14135 3e10 08       		.uleb128 0x8
 14136 3e11 92AD0000 		.long	0xad92
 14137 3e15 09       		.uleb128 0x9
 14138 3e16 A0370000 		.long	0x37a0
 14139 3e1a 09       		.uleb128 0x9
 14140 3e1b 9EAD0000 		.long	0xad9e
 14141 3e1f 00       		.byte	0
 14142 3e20 32       		.uleb128 0x32
 14143 3e21 00000000 		.long	.LASF218
 14144 3e25 06       		.byte	0x6
 14145 3e26 F603     		.value	0x3f6
 14146 3e28 00000000 		.long	.LASF612
 14147 3e2c 94370000 		.long	0x3794
 14148 3e30 01       		.byte	0x1
 14149 3e31 393E0000 		.long	0x3e39
 14150 3e35 493E0000 		.long	0x3e49
 14151 3e39 08       		.uleb128 0x8
 14152 3e3a 92AD0000 		.long	0xad92
 14153 3e3e 09       		.uleb128 0x9
 14154 3e3f A0370000 		.long	0x37a0
 14155 3e43 09       		.uleb128 0x9
 14156 3e44 BDAD0000 		.long	0xadbd
 14157 3e48 00       		.byte	0
 14158 3e49 32       		.uleb128 0x32
 14159 3e4a 00000000 		.long	.LASF218
 14160 3e4e 06       		.byte	0x6
 14161 3e4f 0704     		.value	0x407
 14162 3e51 00000000 		.long	.LASF613
 14163 3e55 94370000 		.long	0x3794
 14164 3e59 01       		.byte	0x1
 14165 3e5a 623E0000 		.long	0x3e62
 14166 3e5e 723E0000 		.long	0x3e72
 14167 3e62 08       		.uleb128 0x8
 14168 3e63 92AD0000 		.long	0xad92
 14169 3e67 09       		.uleb128 0x9
 14170 3e68 A0370000 		.long	0x37a0
 14171 3e6c 09       		.uleb128 0x9
 14172 3e6d F8400000 		.long	0x40f8
 14173 3e71 00       		.byte	0
 14174 3e72 32       		.uleb128 0x32
 14175 3e73 00000000 		.long	.LASF218
 14176 3e77 06       		.byte	0x6
 14177 3e78 1B04     		.value	0x41b
 14178 3e7a 00000000 		.long	.LASF614
 14179 3e7e 94370000 		.long	0x3794
 14180 3e82 01       		.byte	0x1
 14181 3e83 8B3E0000 		.long	0x3e8b
 14182 3e87 A03E0000 		.long	0x3ea0
 14183 3e8b 08       		.uleb128 0x8
 14184 3e8c 92AD0000 		.long	0xad92
 14185 3e90 09       		.uleb128 0x9
 14186 3e91 A0370000 		.long	0x37a0
 14187 3e95 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 551


 14188 3e96 C4370000 		.long	0x37c4
 14189 3e9a 09       		.uleb128 0x9
 14190 3e9b 9EAD0000 		.long	0xad9e
 14191 3e9f 00       		.byte	0
 14192 3ea0 32       		.uleb128 0x32
 14193 3ea1 00000000 		.long	.LASF227
 14194 3ea5 06       		.byte	0x6
 14195 3ea6 7A04     		.value	0x47a
 14196 3ea8 00000000 		.long	.LASF615
 14197 3eac 94370000 		.long	0x3794
 14198 3eb0 01       		.byte	0x1
 14199 3eb1 B93E0000 		.long	0x3eb9
 14200 3eb5 C43E0000 		.long	0x3ec4
 14201 3eb9 08       		.uleb128 0x8
 14202 3eba 92AD0000 		.long	0xad92
 14203 3ebe 09       		.uleb128 0x9
 14204 3ebf A0370000 		.long	0x37a0
 14205 3ec3 00       		.byte	0
 14206 3ec4 32       		.uleb128 0x32
 14207 3ec5 00000000 		.long	.LASF227
 14208 3ec9 06       		.byte	0x6
 14209 3eca 9504     		.value	0x495
 14210 3ecc 00000000 		.long	.LASF616
 14211 3ed0 94370000 		.long	0x3794
 14212 3ed4 01       		.byte	0x1
 14213 3ed5 DD3E0000 		.long	0x3edd
 14214 3ed9 ED3E0000 		.long	0x3eed
 14215 3edd 08       		.uleb128 0x8
 14216 3ede 92AD0000 		.long	0xad92
 14217 3ee2 09       		.uleb128 0x9
 14218 3ee3 A0370000 		.long	0x37a0
 14219 3ee7 09       		.uleb128 0x9
 14220 3ee8 A0370000 		.long	0x37a0
 14221 3eec 00       		.byte	0
 14222 3eed 34       		.uleb128 0x34
 14223 3eee 00000000 		.long	.LASF13
 14224 3ef2 06       		.byte	0x6
 14225 3ef3 AA04     		.value	0x4aa
 14226 3ef5 00000000 		.long	.LASF617
 14227 3ef9 01       		.byte	0x1
 14228 3efa 023F0000 		.long	0x3f02
 14229 3efe 0D3F0000 		.long	0x3f0d
 14230 3f02 08       		.uleb128 0x8
 14231 3f03 92AD0000 		.long	0xad92
 14232 3f07 09       		.uleb128 0x9
 14233 3f08 B1AD0000 		.long	0xadb1
 14234 3f0c 00       		.byte	0
 14235 3f0d 34       		.uleb128 0x34
 14236 3f0e 00000000 		.long	.LASF182
 14237 3f12 06       		.byte	0x6
 14238 3f13 BB04     		.value	0x4bb
 14239 3f15 00000000 		.long	.LASF618
 14240 3f19 01       		.byte	0x1
 14241 3f1a 223F0000 		.long	0x3f22
 14242 3f1e 283F0000 		.long	0x3f28
 14243 3f22 08       		.uleb128 0x8
 14244 3f23 92AD0000 		.long	0xad92
GAS LISTING /tmp/ccmMnd7l.s 			page 552


 14245 3f27 00       		.byte	0
 14246 3f28 34       		.uleb128 0x34
 14247 3f29 00000000 		.long	.LASF619
 14248 3f2d 06       		.byte	0x6
 14249 3f2e 1205     		.value	0x512
 14250 3f30 00000000 		.long	.LASF620
 14251 3f34 02       		.byte	0x2
 14252 3f35 3D3F0000 		.long	0x3f3d
 14253 3f39 4D3F0000 		.long	0x3f4d
 14254 3f3d 08       		.uleb128 0x8
 14255 3f3e 92AD0000 		.long	0xad92
 14256 3f42 09       		.uleb128 0x9
 14257 3f43 C4370000 		.long	0x37c4
 14258 3f47 09       		.uleb128 0x9
 14259 3f48 9EAD0000 		.long	0xad9e
 14260 3f4c 00       		.byte	0
 14261 3f4d 34       		.uleb128 0x34
 14262 3f4e 00000000 		.long	.LASF621
 14263 3f52 06       		.byte	0x6
 14264 3f53 1C05     		.value	0x51c
 14265 3f55 00000000 		.long	.LASF622
 14266 3f59 02       		.byte	0x2
 14267 3f5a 623F0000 		.long	0x3f62
 14268 3f5e 6D3F0000 		.long	0x3f6d
 14269 3f62 08       		.uleb128 0x8
 14270 3f63 92AD0000 		.long	0xad92
 14271 3f67 09       		.uleb128 0x9
 14272 3f68 C4370000 		.long	0x37c4
 14273 3f6c 00       		.byte	0
 14274 3f6d 0E       		.uleb128 0xe
 14275 3f6e 00000000 		.long	.LASF623
 14276 3f72 30       		.byte	0x30
 14277 3f73 E1       		.byte	0xe1
 14278 3f74 00000000 		.long	.LASF624
 14279 3f78 02       		.byte	0x2
 14280 3f79 813F0000 		.long	0x3f81
 14281 3f7d 913F0000 		.long	0x3f91
 14282 3f81 08       		.uleb128 0x8
 14283 3f82 92AD0000 		.long	0xad92
 14284 3f86 09       		.uleb128 0x9
 14285 3f87 85060000 		.long	0x685
 14286 3f8b 09       		.uleb128 0x9
 14287 3f8c 9EAD0000 		.long	0xad9e
 14288 3f90 00       		.byte	0
 14289 3f91 34       		.uleb128 0x34
 14290 3f92 00000000 		.long	.LASF625
 14291 3f96 30       		.byte	0x30
 14292 3f97 C101     		.value	0x1c1
 14293 3f99 00000000 		.long	.LASF626
 14294 3f9d 02       		.byte	0x2
 14295 3f9e A63F0000 		.long	0x3fa6
 14296 3fa2 BB3F0000 		.long	0x3fbb
 14297 3fa6 08       		.uleb128 0x8
 14298 3fa7 92AD0000 		.long	0xad92
 14299 3fab 09       		.uleb128 0x9
 14300 3fac 94370000 		.long	0x3794
 14301 3fb0 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 553


 14302 3fb1 C4370000 		.long	0x37c4
 14303 3fb5 09       		.uleb128 0x9
 14304 3fb6 9EAD0000 		.long	0xad9e
 14305 3fba 00       		.byte	0
 14306 3fbb 34       		.uleb128 0x34
 14307 3fbc 00000000 		.long	.LASF627
 14308 3fc0 30       		.byte	0x30
 14309 3fc1 1C02     		.value	0x21c
 14310 3fc3 00000000 		.long	.LASF628
 14311 3fc7 02       		.byte	0x2
 14312 3fc8 D03F0000 		.long	0x3fd0
 14313 3fcc DB3F0000 		.long	0x3fdb
 14314 3fd0 08       		.uleb128 0x8
 14315 3fd1 92AD0000 		.long	0xad92
 14316 3fd5 09       		.uleb128 0x9
 14317 3fd6 C4370000 		.long	0x37c4
 14318 3fda 00       		.byte	0
 14319 3fdb 32       		.uleb128 0x32
 14320 3fdc 00000000 		.long	.LASF629
 14321 3fe0 30       		.byte	0x30
 14322 3fe1 4E02     		.value	0x24e
 14323 3fe3 00000000 		.long	.LASF630
 14324 3fe7 E0800000 		.long	0x80e0
 14325 3feb 02       		.byte	0x2
 14326 3fec F43F0000 		.long	0x3ff4
 14327 3ff0 FA3F0000 		.long	0x3ffa
 14328 3ff4 08       		.uleb128 0x8
 14329 3ff5 92AD0000 		.long	0xad92
 14330 3ff9 00       		.byte	0
 14331 3ffa 32       		.uleb128 0x32
 14332 3ffb 00000000 		.long	.LASF631
 14333 3fff 06       		.byte	0x6
 14334 4000 8E05     		.value	0x58e
 14335 4002 00000000 		.long	.LASF632
 14336 4006 C4370000 		.long	0x37c4
 14337 400a 02       		.byte	0x2
 14338 400b 13400000 		.long	0x4013
 14339 400f 23400000 		.long	0x4023
 14340 4013 08       		.uleb128 0x8
 14341 4014 B7AD0000 		.long	0xadb7
 14342 4018 09       		.uleb128 0x9
 14343 4019 C4370000 		.long	0x37c4
 14344 401d 09       		.uleb128 0x9
 14345 401e 069A0000 		.long	0x9a06
 14346 4022 00       		.byte	0
 14347 4023 34       		.uleb128 0x34
 14348 4024 00000000 		.long	.LASF633
 14349 4028 06       		.byte	0x6
 14350 4029 9C05     		.value	0x59c
 14351 402b 00000000 		.long	.LASF634
 14352 402f 02       		.byte	0x2
 14353 4030 38400000 		.long	0x4038
 14354 4034 43400000 		.long	0x4043
 14355 4038 08       		.uleb128 0x8
 14356 4039 92AD0000 		.long	0xad92
 14357 403d 09       		.uleb128 0x9
 14358 403e 70370000 		.long	0x3770
GAS LISTING /tmp/ccmMnd7l.s 			page 554


 14359 4042 00       		.byte	0
 14360 4043 0D       		.uleb128 0xd
 14361 4044 00000000 		.long	.LASF635
 14362 4048 30       		.byte	0x30
 14363 4049 8D       		.byte	0x8d
 14364 404a 00000000 		.long	.LASF636
 14365 404e 94370000 		.long	0x3794
 14366 4052 02       		.byte	0x2
 14367 4053 5B400000 		.long	0x405b
 14368 4057 66400000 		.long	0x4066
 14369 405b 08       		.uleb128 0x8
 14370 405c 92AD0000 		.long	0xad92
 14371 4060 09       		.uleb128 0x9
 14372 4061 94370000 		.long	0x3794
 14373 4065 00       		.byte	0
 14374 4066 0D       		.uleb128 0xd
 14375 4067 00000000 		.long	.LASF635
 14376 406b 30       		.byte	0x30
 14377 406c 99       		.byte	0x99
 14378 406d 00000000 		.long	.LASF637
 14379 4071 94370000 		.long	0x3794
 14380 4075 02       		.byte	0x2
 14381 4076 7E400000 		.long	0x407e
 14382 407a 8E400000 		.long	0x408e
 14383 407e 08       		.uleb128 0x8
 14384 407f 92AD0000 		.long	0xad92
 14385 4083 09       		.uleb128 0x9
 14386 4084 94370000 		.long	0x3794
 14387 4088 09       		.uleb128 0x9
 14388 4089 94370000 		.long	0x3794
 14389 408d 00       		.byte	0
 14390 408e 2B       		.uleb128 0x2b
 14391 408f 00000000 		.long	.LASF638
 14392 4093 06       		.byte	0x6
 14393 4094 AE05     		.value	0x5ae
 14394 4096 00000000 		.long	.LASF639
 14395 409a A2400000 		.long	0x40a2
 14396 409e B2400000 		.long	0x40b2
 14397 40a2 08       		.uleb128 0x8
 14398 40a3 92AD0000 		.long	0xad92
 14399 40a7 09       		.uleb128 0x9
 14400 40a8 AAAD0000 		.long	0xadaa
 14401 40ac 09       		.uleb128 0x9
 14402 40ad 5F070000 		.long	0x75f
 14403 40b1 00       		.byte	0
 14404 40b2 2B       		.uleb128 0x2b
 14405 40b3 00000000 		.long	.LASF638
 14406 40b7 06       		.byte	0x6
 14407 40b8 B905     		.value	0x5b9
 14408 40ba 00000000 		.long	.LASF640
 14409 40be C6400000 		.long	0x40c6
 14410 40c2 D6400000 		.long	0x40d6
 14411 40c6 08       		.uleb128 0x8
 14412 40c7 92AD0000 		.long	0xad92
 14413 40cb 09       		.uleb128 0x9
 14414 40cc AAAD0000 		.long	0xadaa
 14415 40d0 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 555


 14416 40d1 5C340000 		.long	0x345c
 14417 40d5 00       		.byte	0
 14418 40d6 18       		.uleb128 0x18
 14419 40d7 5F547000 		.string	"_Tp"
 14420 40db 29000000 		.long	0x29
 14421 40df 36       		.uleb128 0x36
 14422 40e0 00000000 		.long	.LASF303
 14423 40e4 8D300000 		.long	0x308d
 14424 40e8 00       		.byte	0
 14425 40e9 14       		.uleb128 0x14
 14426 40ea 00000000 		.long	.LASF641
 14427 40ee 14       		.uleb128 0x14
 14428 40ef 00000000 		.long	.LASF642
 14429 40f3 11       		.uleb128 0x11
 14430 40f4 2E370000 		.long	0x372e
 14431 40f8 05       		.uleb128 0x5
 14432 40f9 00000000 		.long	.LASF643
 14433 40fd 10       		.byte	0x10
 14434 40fe 26       		.byte	0x26
 14435 40ff 2F       		.byte	0x2f
 14436 4100 D8410000 		.long	0x41d8
 14437 4104 22       		.uleb128 0x22
 14438 4105 00000000 		.long	.LASF68
 14439 4109 26       		.byte	0x26
 14440 410a 36       		.byte	0x36
 14441 410b 07AD0000 		.long	0xad07
 14442 410f 01       		.byte	0x1
 14443 4110 06       		.uleb128 0x6
 14444 4111 00000000 		.long	.LASF308
 14445 4115 26       		.byte	0x26
 14446 4116 3A       		.byte	0x3a
 14447 4117 04410000 		.long	0x4104
 14448 411b 00       		.byte	0
 14449 411c 22       		.uleb128 0x22
 14450 411d 00000000 		.long	.LASF57
 14451 4121 26       		.byte	0x26
 14452 4122 35       		.byte	0x35
 14453 4123 85060000 		.long	0x685
 14454 4127 01       		.byte	0x1
 14455 4128 06       		.uleb128 0x6
 14456 4129 00000000 		.long	.LASF309
 14457 412d 26       		.byte	0x26
 14458 412e 3B       		.byte	0x3b
 14459 412f 1C410000 		.long	0x411c
 14460 4133 08       		.byte	0x8
 14461 4134 22       		.uleb128 0x22
 14462 4135 00000000 		.long	.LASF69
 14463 4139 26       		.byte	0x26
 14464 413a 37       		.byte	0x37
 14465 413b 07AD0000 		.long	0xad07
 14466 413f 01       		.byte	0x1
 14467 4140 37       		.uleb128 0x37
 14468 4141 00000000 		.long	.LASF310
 14469 4145 26       		.byte	0x26
 14470 4146 3E       		.byte	0x3e
 14471 4147 4F410000 		.long	0x414f
 14472 414b 5F410000 		.long	0x415f
GAS LISTING /tmp/ccmMnd7l.s 			page 556


 14473 414f 08       		.uleb128 0x8
 14474 4150 C4AD0000 		.long	0xadc4
 14475 4154 09       		.uleb128 0x9
 14476 4155 34410000 		.long	0x4134
 14477 4159 09       		.uleb128 0x9
 14478 415a 1C410000 		.long	0x411c
 14479 415e 00       		.byte	0
 14480 415f 0C       		.uleb128 0xc
 14481 4160 00000000 		.long	.LASF310
 14482 4164 26       		.byte	0x26
 14483 4165 42       		.byte	0x42
 14484 4166 01       		.byte	0x1
 14485 4167 6F410000 		.long	0x416f
 14486 416b 75410000 		.long	0x4175
 14487 416f 08       		.uleb128 0x8
 14488 4170 C4AD0000 		.long	0xadc4
 14489 4174 00       		.byte	0
 14490 4175 0D       		.uleb128 0xd
 14491 4176 00000000 		.long	.LASF168
 14492 417a 26       		.byte	0x26
 14493 417b 47       		.byte	0x47
 14494 417c 00000000 		.long	.LASF644
 14495 4180 1C410000 		.long	0x411c
 14496 4184 01       		.byte	0x1
 14497 4185 8D410000 		.long	0x418d
 14498 4189 93410000 		.long	0x4193
 14499 418d 08       		.uleb128 0x8
 14500 418e CAAD0000 		.long	0xadca
 14501 4192 00       		.byte	0
 14502 4193 0D       		.uleb128 0xd
 14503 4194 00000000 		.long	.LASF149
 14504 4198 26       		.byte	0x26
 14505 4199 4B       		.byte	0x4b
 14506 419a 00000000 		.long	.LASF645
 14507 419e 34410000 		.long	0x4134
 14508 41a2 01       		.byte	0x1
 14509 41a3 AB410000 		.long	0x41ab
 14510 41a7 B1410000 		.long	0x41b1
 14511 41ab 08       		.uleb128 0x8
 14512 41ac CAAD0000 		.long	0xadca
 14513 41b0 00       		.byte	0
 14514 41b1 38       		.uleb128 0x38
 14515 41b2 656E6400 		.string	"end"
 14516 41b6 26       		.byte	0x26
 14517 41b7 4F       		.byte	0x4f
 14518 41b8 00000000 		.long	.LASF646
 14519 41bc 34410000 		.long	0x4134
 14520 41c0 01       		.byte	0x1
 14521 41c1 C9410000 		.long	0x41c9
 14522 41c5 CF410000 		.long	0x41cf
 14523 41c9 08       		.uleb128 0x8
 14524 41ca CAAD0000 		.long	0xadca
 14525 41ce 00       		.byte	0
 14526 41cf 18       		.uleb128 0x18
 14527 41d0 5F4500   		.string	"_E"
 14528 41d3 29000000 		.long	0x29
 14529 41d7 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 557


 14530 41d8 11       		.uleb128 0x11
 14531 41d9 F8400000 		.long	0x40f8
 14532 41dd 05       		.uleb128 0x5
 14533 41de 00000000 		.long	.LASF647
 14534 41e2 01       		.byte	0x1
 14535 41e3 21       		.byte	0x21
 14536 41e4 5C       		.byte	0x5c
 14537 41e5 7F420000 		.long	0x427f
 14538 41e9 21       		.uleb128 0x21
 14539 41ea 1E910000 		.long	0x911e
 14540 41ee 00       		.byte	0
 14541 41ef 01       		.byte	0x1
 14542 41f0 22       		.uleb128 0x22
 14543 41f1 00000000 		.long	.LASF57
 14544 41f5 21       		.byte	0x21
 14545 41f6 5F       		.byte	0x5f
 14546 41f7 85060000 		.long	0x685
 14547 41fb 01       		.byte	0x1
 14548 41fc 22       		.uleb128 0x22
 14549 41fd 00000000 		.long	.LASF489
 14550 4201 21       		.byte	0x21
 14551 4202 61       		.byte	0x61
 14552 4203 D0AD0000 		.long	0xadd0
 14553 4207 01       		.byte	0x1
 14554 4208 22       		.uleb128 0x22
 14555 4209 00000000 		.long	.LASF19
 14556 420d 21       		.byte	0x21
 14557 420e 65       		.byte	0x65
 14558 420f 18810000 		.long	0x8118
 14559 4213 01       		.byte	0x1
 14560 4214 0C       		.uleb128 0xc
 14561 4215 00000000 		.long	.LASF60
 14562 4219 21       		.byte	0x21
 14563 421a 71       		.byte	0x71
 14564 421b 01       		.byte	0x1
 14565 421c 24420000 		.long	0x4224
 14566 4220 2A420000 		.long	0x422a
 14567 4224 08       		.uleb128 0x8
 14568 4225 FFAD0000 		.long	0xadff
 14569 4229 00       		.byte	0
 14570 422a 0C       		.uleb128 0xc
 14571 422b 00000000 		.long	.LASF60
 14572 422f 21       		.byte	0x21
 14573 4230 73       		.byte	0x73
 14574 4231 01       		.byte	0x1
 14575 4232 3A420000 		.long	0x423a
 14576 4236 45420000 		.long	0x4245
 14577 423a 08       		.uleb128 0x8
 14578 423b FFAD0000 		.long	0xadff
 14579 423f 09       		.uleb128 0x9
 14580 4240 05AE0000 		.long	0xae05
 14581 4244 00       		.byte	0
 14582 4245 0C       		.uleb128 0xc
 14583 4246 00000000 		.long	.LASF61
 14584 424a 21       		.byte	0x21
 14585 424b 79       		.byte	0x79
 14586 424c 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 558


 14587 424d 55420000 		.long	0x4255
 14588 4251 60420000 		.long	0x4260
 14589 4255 08       		.uleb128 0x8
 14590 4256 FFAD0000 		.long	0xadff
 14591 425a 08       		.uleb128 0x8
 14592 425b D8800000 		.long	0x80d8
 14593 425f 00       		.byte	0
 14594 4260 5D       		.uleb128 0x5d
 14595 4261 00000000 		.long	.LASF648
 14596 4265 01       		.byte	0x1
 14597 4266 21       		.byte	0x21
 14598 4267 68       		.byte	0x68
 14599 4268 01       		.byte	0x1
 14600 4269 13       		.uleb128 0x13
 14601 426a 00000000 		.long	.LASF491
 14602 426e 21       		.byte	0x21
 14603 426f 69       		.byte	0x69
 14604 4270 DD410000 		.long	0x41dd
 14605 4274 35       		.uleb128 0x35
 14606 4275 00000000 		.long	.LASF492
 14607 4279 18810000 		.long	0x8118
 14608 427d 00       		.byte	0
 14609 427e 00       		.byte	0
 14610 427f 11       		.uleb128 0x11
 14611 4280 DD410000 		.long	0x41dd
 14612 4284 16       		.uleb128 0x16
 14613 4285 00000000 		.long	.LASF649
 14614 4289 01       		.byte	0x1
 14615 428a 2E       		.byte	0x2e
 14616 428b 69       		.byte	0x69
 14617 428c A5420000 		.long	0x42a5
 14618 4290 13       		.uleb128 0x13
 14619 4291 00000000 		.long	.LASF494
 14620 4295 2E       		.byte	0x2e
 14621 4296 6B       		.byte	0x6b
 14622 4297 18810000 		.long	0x8118
 14623 429b 18       		.uleb128 0x18
 14624 429c 5F547000 		.string	"_Tp"
 14625 42a0 18810000 		.long	0x8118
 14626 42a4 00       		.byte	0
 14627 42a5 16       		.uleb128 0x16
 14628 42a6 00000000 		.long	.LASF650
 14629 42aa 01       		.byte	0x1
 14630 42ab 2E       		.byte	0x2e
 14631 42ac 96       		.byte	0x96
 14632 42ad 0B430000 		.long	0x430b
 14633 42b1 13       		.uleb128 0x13
 14634 42b2 00000000 		.long	.LASF489
 14635 42b6 2E       		.byte	0x2e
 14636 42b7 99       		.byte	0x99
 14637 42b8 D0AD0000 		.long	0xadd0
 14638 42bc 13       		.uleb128 0x13
 14639 42bd 00000000 		.long	.LASF496
 14640 42c1 2E       		.byte	0x2e
 14641 42c2 9D       		.byte	0x9d
 14642 42c3 54070000 		.long	0x754
 14643 42c7 4E       		.uleb128 0x4e
GAS LISTING /tmp/ccmMnd7l.s 			page 559


 14644 42c8 00000000 		.long	.LASF497
 14645 42cc 2E       		.byte	0x2e
 14646 42cd A8       		.byte	0xa8
 14647 42ce 00000000 		.long	.LASF651
 14648 42d2 B1420000 		.long	0x42b1
 14649 42d6 E0420000 		.long	0x42e0
 14650 42da 09       		.uleb128 0x9
 14651 42db 0BAE0000 		.long	0xae0b
 14652 42df 00       		.byte	0
 14653 42e0 13       		.uleb128 0x13
 14654 42e1 00000000 		.long	.LASF499
 14655 42e5 2E       		.byte	0x2e
 14656 42e6 A0       		.byte	0xa0
 14657 42e7 B1800000 		.long	0x80b1
 14658 42eb 13       		.uleb128 0x13
 14659 42ec 00000000 		.long	.LASF499
 14660 42f0 2E       		.byte	0x2e
 14661 42f1 A0       		.byte	0xa0
 14662 42f2 01A30000 		.long	0xa301
 14663 42f6 13       		.uleb128 0x13
 14664 42f7 00000000 		.long	.LASF499
 14665 42fb 2E       		.byte	0x2e
 14666 42fc A0       		.byte	0xa0
 14667 42fd D6AD0000 		.long	0xadd6
 14668 4301 35       		.uleb128 0x35
 14669 4302 00000000 		.long	.LASF500
 14670 4306 D0AD0000 		.long	0xadd0
 14671 430a 00       		.byte	0
 14672 430b 16       		.uleb128 0x16
 14673 430c 00000000 		.long	.LASF652
 14674 4310 01       		.byte	0x1
 14675 4311 2F       		.byte	0x2f
 14676 4312 50       		.byte	0x50
 14677 4313 D9440000 		.long	0x44d9
 14678 4317 13       		.uleb128 0x13
 14679 4318 00000000 		.long	.LASF19
 14680 431c 2F       		.byte	0x2f
 14681 431d 55       		.byte	0x55
 14682 431e 08420000 		.long	0x4208
 14683 4322 22       		.uleb128 0x22
 14684 4323 00000000 		.long	.LASF513
 14685 4327 2F       		.byte	0x2f
 14686 4328 5F       		.byte	0x5f
 14687 4329 FC410000 		.long	0x41fc
 14688 432d 03       		.byte	0x3
 14689 432e 13       		.uleb128 0x13
 14690 432f 00000000 		.long	.LASF489
 14691 4333 2F       		.byte	0x2f
 14692 4334 66       		.byte	0x66
 14693 4335 22430000 		.long	0x4322
 14694 4339 22       		.uleb128 0x22
 14695 433a 00000000 		.long	.LASF514
 14696 433e 2F       		.byte	0x2f
 14697 433f 7E       		.byte	0x7e
 14698 4340 EB420000 		.long	0x42eb
 14699 4344 03       		.byte	0x3
 14700 4345 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 560


 14701 4346 00000000 		.long	.LASF515
 14702 434a 2F       		.byte	0x2f
 14703 434b 87       		.byte	0x87
 14704 434c 39430000 		.long	0x4339
 14705 4350 22       		.uleb128 0x22
 14706 4351 00000000 		.long	.LASF516
 14707 4355 2F       		.byte	0x2f
 14708 4356 94       		.byte	0x94
 14709 4357 F0410000 		.long	0x41f0
 14710 435b 03       		.byte	0x3
 14711 435c 13       		.uleb128 0x13
 14712 435d 00000000 		.long	.LASF57
 14713 4361 2F       		.byte	0x2f
 14714 4362 9D       		.byte	0x9d
 14715 4363 50430000 		.long	0x4350
 14716 4367 5E       		.uleb128 0x5e
 14717 4368 00000000 		.long	.LASF517
 14718 436c 2F       		.byte	0x2f
 14719 436d 5F       		.byte	0x5f
 14720 436e 00000000 		.long	.LASF653
 14721 4372 11AE0000 		.long	0xae11
 14722 4376 03       		.byte	0x3
 14723 4377 7D430000 		.long	0x437d
 14724 437b 3A       		.uleb128 0x3a
 14725 437c 00       		.byte	0
 14726 437d 5E       		.uleb128 0x5e
 14727 437e 00000000 		.long	.LASF519
 14728 4382 2F       		.byte	0x2f
 14729 4383 68       		.byte	0x68
 14730 4384 00000000 		.long	.LASF654
 14731 4388 F6420000 		.long	0x42f6
 14732 438c 03       		.byte	0x3
 14733 438d 93430000 		.long	0x4393
 14734 4391 3A       		.uleb128 0x3a
 14735 4392 00       		.byte	0
 14736 4393 5E       		.uleb128 0x5e
 14737 4394 00000000 		.long	.LASF521
 14738 4398 2F       		.byte	0x2f
 14739 4399 73       		.byte	0x73
 14740 439a 00000000 		.long	.LASF655
 14741 439e E0420000 		.long	0x42e0
 14742 43a2 03       		.byte	0x3
 14743 43a3 A9430000 		.long	0x43a9
 14744 43a7 3A       		.uleb128 0x3a
 14745 43a8 00       		.byte	0
 14746 43a9 5E       		.uleb128 0x5e
 14747 43aa 00000000 		.long	.LASF523
 14748 43ae 2F       		.byte	0x2f
 14749 43af 7E       		.byte	0x7e
 14750 43b0 00000000 		.long	.LASF656
 14751 43b4 EB420000 		.long	0x42eb
 14752 43b8 03       		.byte	0x3
 14753 43b9 BF430000 		.long	0x43bf
 14754 43bd 3A       		.uleb128 0x3a
 14755 43be 00       		.byte	0
 14756 43bf 5E       		.uleb128 0x5e
 14757 43c0 00000000 		.long	.LASF525
GAS LISTING /tmp/ccmMnd7l.s 			page 561


 14758 43c4 2F       		.byte	0x2f
 14759 43c5 89       		.byte	0x89
 14760 43c6 00000000 		.long	.LASF657
 14761 43ca BC420000 		.long	0x42bc
 14762 43ce 03       		.byte	0x3
 14763 43cf D5430000 		.long	0x43d5
 14764 43d3 3A       		.uleb128 0x3a
 14765 43d4 00       		.byte	0
 14766 43d5 5E       		.uleb128 0x5e
 14767 43d6 00000000 		.long	.LASF527
 14768 43da 2F       		.byte	0x2f
 14769 43db 94       		.byte	0x94
 14770 43dc 00000000 		.long	.LASF658
 14771 43e0 78320000 		.long	0x3278
 14772 43e4 03       		.byte	0x3
 14773 43e5 EB430000 		.long	0x43eb
 14774 43e9 3A       		.uleb128 0x3a
 14775 43ea 00       		.byte	0
 14776 43eb 5E       		.uleb128 0x5e
 14777 43ec 00000000 		.long	.LASF529
 14778 43f0 2F       		.byte	0x2f
 14779 43f1 9F       		.byte	0x9f
 14780 43f2 00000000 		.long	.LASF659
 14781 43f6 5C340000 		.long	0x345c
 14782 43fa 03       		.byte	0x3
 14783 43fb 01440000 		.long	0x4401
 14784 43ff 3A       		.uleb128 0x3a
 14785 4400 00       		.byte	0
 14786 4401 5E       		.uleb128 0x5e
 14787 4402 00000000 		.long	.LASF531
 14788 4406 2F       		.byte	0x2f
 14789 4407 AB       		.byte	0xab
 14790 4408 00000000 		.long	.LASF660
 14791 440c 5C340000 		.long	0x345c
 14792 4410 03       		.byte	0x3
 14793 4411 17440000 		.long	0x4417
 14794 4415 3A       		.uleb128 0x3a
 14795 4416 00       		.byte	0
 14796 4417 5E       		.uleb128 0x5e
 14797 4418 00000000 		.long	.LASF533
 14798 441c 2F       		.byte	0x2f
 14799 441d B7       		.byte	0xb7
 14800 441e 00000000 		.long	.LASF661
 14801 4422 5C340000 		.long	0x345c
 14802 4426 03       		.byte	0x3
 14803 4427 2D440000 		.long	0x442d
 14804 442b 3A       		.uleb128 0x3a
 14805 442c 00       		.byte	0
 14806 442d 1E       		.uleb128 0x1e
 14807 442e 00000000 		.long	.LASF535
 14808 4432 2F       		.byte	0x2f
 14809 4433 6401     		.value	0x164
 14810 4435 00000000 		.long	.LASF662
 14811 4439 2E430000 		.long	0x432e
 14812 443d 4C440000 		.long	0x444c
 14813 4441 09       		.uleb128 0x9
 14814 4442 17AE0000 		.long	0xae17
GAS LISTING /tmp/ccmMnd7l.s 			page 562


 14815 4446 09       		.uleb128 0x9
 14816 4447 5C430000 		.long	0x435c
 14817 444b 00       		.byte	0
 14818 444c 1E       		.uleb128 0x1e
 14819 444d 00000000 		.long	.LASF535
 14820 4451 2F       		.byte	0x2f
 14821 4452 7301     		.value	0x173
 14822 4454 00000000 		.long	.LASF663
 14823 4458 2E430000 		.long	0x432e
 14824 445c 70440000 		.long	0x4470
 14825 4460 09       		.uleb128 0x9
 14826 4461 17AE0000 		.long	0xae17
 14827 4465 09       		.uleb128 0x9
 14828 4466 5C430000 		.long	0x435c
 14829 446a 09       		.uleb128 0x9
 14830 446b 45430000 		.long	0x4345
 14831 446f 00       		.byte	0
 14832 4470 2E       		.uleb128 0x2e
 14833 4471 00000000 		.long	.LASF538
 14834 4475 2F       		.byte	0x2f
 14835 4476 7E01     		.value	0x17e
 14836 4478 00000000 		.long	.LASF664
 14837 447c 90440000 		.long	0x4490
 14838 4480 09       		.uleb128 0x9
 14839 4481 17AE0000 		.long	0xae17
 14840 4485 09       		.uleb128 0x9
 14841 4486 2E430000 		.long	0x432e
 14842 448a 09       		.uleb128 0x9
 14843 448b 5C430000 		.long	0x435c
 14844 448f 00       		.byte	0
 14845 4490 1E       		.uleb128 0x1e
 14846 4491 00000000 		.long	.LASF171
 14847 4495 2F       		.byte	0x2f
 14848 4496 A501     		.value	0x1a5
 14849 4498 00000000 		.long	.LASF665
 14850 449c 5C430000 		.long	0x435c
 14851 44a0 AA440000 		.long	0x44aa
 14852 44a4 09       		.uleb128 0x9
 14853 44a5 05AE0000 		.long	0xae05
 14854 44a9 00       		.byte	0
 14855 44aa 1E       		.uleb128 0x1e
 14856 44ab 00000000 		.long	.LASF541
 14857 44af 2F       		.byte	0x2f
 14858 44b0 B101     		.value	0x1b1
 14859 44b2 00000000 		.long	.LASF666
 14860 44b6 DD410000 		.long	0x41dd
 14861 44ba C4440000 		.long	0x44c4
 14862 44be 09       		.uleb128 0x9
 14863 44bf 05AE0000 		.long	0xae05
 14864 44c3 00       		.byte	0
 14865 44c4 13       		.uleb128 0x13
 14866 44c5 00000000 		.long	.LASF543
 14867 44c9 2F       		.byte	0x2f
 14868 44ca C5       		.byte	0xc5
 14869 44cb E5440000 		.long	0x44e5
 14870 44cf 35       		.uleb128 0x35
 14871 44d0 00000000 		.long	.LASF303
GAS LISTING /tmp/ccmMnd7l.s 			page 563


 14872 44d4 DD410000 		.long	0x41dd
 14873 44d8 00       		.byte	0
 14874 44d9 16       		.uleb128 0x16
 14875 44da 00000000 		.long	.LASF667
 14876 44de 01       		.byte	0x1
 14877 44df 2F       		.byte	0x2f
 14878 44e0 3F       		.byte	0x3f
 14879 44e1 03450000 		.long	0x4503
 14880 44e5 13       		.uleb128 0x13
 14881 44e6 00000000 		.long	.LASF494
 14882 44ea 2F       		.byte	0x2f
 14883 44eb 41       		.byte	0x41
 14884 44ec 69420000 		.long	0x4269
 14885 44f0 35       		.uleb128 0x35
 14886 44f1 00000000 		.long	.LASF303
 14887 44f5 DD410000 		.long	0x41dd
 14888 44f9 18       		.uleb128 0x18
 14889 44fa 5F547000 		.string	"_Tp"
 14890 44fe 18810000 		.long	0x8118
 14891 4502 00       		.byte	0
 14892 4503 16       		.uleb128 0x16
 14893 4504 00000000 		.long	.LASF668
 14894 4508 18       		.byte	0x18
 14895 4509 06       		.byte	0x6
 14896 450a 48       		.byte	0x48
 14897 450b 9B470000 		.long	0x479b
 14898 450f 16       		.uleb128 0x16
 14899 4510 00000000 		.long	.LASF547
 14900 4514 18       		.byte	0x18
 14901 4515 06       		.byte	0x6
 14902 4516 4F       		.byte	0x4f
 14903 4517 C1450000 		.long	0x45c1
 14904 451b 25       		.uleb128 0x25
 14905 451c DD410000 		.long	0x41dd
 14906 4520 00       		.byte	0
 14907 4521 06       		.uleb128 0x6
 14908 4522 00000000 		.long	.LASF548
 14909 4526 06       		.byte	0x6
 14910 4527 52       		.byte	0x52
 14911 4528 C1450000 		.long	0x45c1
 14912 452c 00       		.byte	0
 14913 452d 06       		.uleb128 0x6
 14914 452e 00000000 		.long	.LASF549
 14915 4532 06       		.byte	0x6
 14916 4533 53       		.byte	0x53
 14917 4534 C1450000 		.long	0x45c1
 14918 4538 08       		.byte	0x8
 14919 4539 06       		.uleb128 0x6
 14920 453a 00000000 		.long	.LASF550
 14921 453e 06       		.byte	0x6
 14922 453f 54       		.byte	0x54
 14923 4540 C1450000 		.long	0x45c1
 14924 4544 10       		.byte	0x10
 14925 4545 37       		.uleb128 0x37
 14926 4546 00000000 		.long	.LASF547
 14927 454a 06       		.byte	0x6
 14928 454b 56       		.byte	0x56
GAS LISTING /tmp/ccmMnd7l.s 			page 564


 14929 454c 54450000 		.long	0x4554
 14930 4550 5A450000 		.long	0x455a
 14931 4554 08       		.uleb128 0x8
 14932 4555 29AE0000 		.long	0xae29
 14933 4559 00       		.byte	0
 14934 455a 37       		.uleb128 0x37
 14935 455b 00000000 		.long	.LASF547
 14936 455f 06       		.byte	0x6
 14937 4560 5A       		.byte	0x5a
 14938 4561 69450000 		.long	0x4569
 14939 4565 74450000 		.long	0x4574
 14940 4569 08       		.uleb128 0x8
 14941 456a 29AE0000 		.long	0xae29
 14942 456e 09       		.uleb128 0x9
 14943 456f 2FAE0000 		.long	0xae2f
 14944 4573 00       		.byte	0
 14945 4574 37       		.uleb128 0x37
 14946 4575 00000000 		.long	.LASF547
 14947 4579 06       		.byte	0x6
 14948 457a 5F       		.byte	0x5f
 14949 457b 83450000 		.long	0x4583
 14950 457f 8E450000 		.long	0x458e
 14951 4583 08       		.uleb128 0x8
 14952 4584 29AE0000 		.long	0xae29
 14953 4588 09       		.uleb128 0x9
 14954 4589 35AE0000 		.long	0xae35
 14955 458d 00       		.byte	0
 14956 458e 0A       		.uleb128 0xa
 14957 458f 00000000 		.long	.LASF551
 14958 4593 06       		.byte	0x6
 14959 4594 65       		.byte	0x65
 14960 4595 00000000 		.long	.LASF669
 14961 4599 A1450000 		.long	0x45a1
 14962 459d AC450000 		.long	0x45ac
 14963 45a1 08       		.uleb128 0x8
 14964 45a2 29AE0000 		.long	0xae29
 14965 45a6 09       		.uleb128 0x9
 14966 45a7 3CAE0000 		.long	0xae3c
 14967 45ab 00       		.byte	0
 14968 45ac 28       		.uleb128 0x28
 14969 45ad 00000000 		.long	.LASF553
 14970 45b1 B5450000 		.long	0x45b5
 14971 45b5 08       		.uleb128 0x8
 14972 45b6 29AE0000 		.long	0xae29
 14973 45ba 08       		.uleb128 0x8
 14974 45bb D8800000 		.long	0x80d8
 14975 45bf 00       		.byte	0
 14976 45c0 00       		.byte	0
 14977 45c1 13       		.uleb128 0x13
 14978 45c2 00000000 		.long	.LASF489
 14979 45c6 06       		.byte	0x6
 14980 45c7 4D       		.byte	0x4d
 14981 45c8 96920000 		.long	0x9296
 14982 45cc 11       		.uleb128 0x11
 14983 45cd D1450000 		.long	0x45d1
 14984 45d1 13       		.uleb128 0x13
 14985 45d2 00000000 		.long	.LASF554
GAS LISTING /tmp/ccmMnd7l.s 			page 565


 14986 45d6 06       		.byte	0x6
 14987 45d7 4B       		.byte	0x4b
 14988 45d8 55930000 		.long	0x9355
 14989 45dc 06       		.uleb128 0x6
 14990 45dd 00000000 		.long	.LASF555
 14991 45e1 06       		.byte	0x6
 14992 45e2 A4       		.byte	0xa4
 14993 45e3 0F450000 		.long	0x450f
 14994 45e7 00       		.byte	0
 14995 45e8 13       		.uleb128 0x13
 14996 45e9 00000000 		.long	.LASF67
 14997 45ed 06       		.byte	0x6
 14998 45ee 6E       		.byte	0x6e
 14999 45ef DD410000 		.long	0x41dd
 15000 45f3 0B       		.uleb128 0xb
 15001 45f4 00000000 		.long	.LASF556
 15002 45f8 06       		.byte	0x6
 15003 45f9 71       		.byte	0x71
 15004 45fa 00000000 		.long	.LASF670
 15005 45fe 42AE0000 		.long	0xae42
 15006 4602 0A460000 		.long	0x460a
 15007 4606 10460000 		.long	0x4610
 15008 460a 08       		.uleb128 0x8
 15009 460b 48AE0000 		.long	0xae48
 15010 460f 00       		.byte	0
 15011 4610 0B       		.uleb128 0xb
 15012 4611 00000000 		.long	.LASF556
 15013 4615 06       		.byte	0x6
 15014 4616 75       		.byte	0x75
 15015 4617 00000000 		.long	.LASF671
 15016 461b 2FAE0000 		.long	0xae2f
 15017 461f 27460000 		.long	0x4627
 15018 4623 2D460000 		.long	0x462d
 15019 4627 08       		.uleb128 0x8
 15020 4628 4EAE0000 		.long	0xae4e
 15021 462c 00       		.byte	0
 15022 462d 0B       		.uleb128 0xb
 15023 462e 00000000 		.long	.LASF262
 15024 4632 06       		.byte	0x6
 15025 4633 79       		.byte	0x79
 15026 4634 00000000 		.long	.LASF672
 15027 4638 E8450000 		.long	0x45e8
 15028 463c 44460000 		.long	0x4644
 15029 4640 4A460000 		.long	0x464a
 15030 4644 08       		.uleb128 0x8
 15031 4645 4EAE0000 		.long	0xae4e
 15032 4649 00       		.byte	0
 15033 464a 37       		.uleb128 0x37
 15034 464b 00000000 		.long	.LASF560
 15035 464f 06       		.byte	0x6
 15036 4650 7C       		.byte	0x7c
 15037 4651 59460000 		.long	0x4659
 15038 4655 5F460000 		.long	0x465f
 15039 4659 08       		.uleb128 0x8
 15040 465a 48AE0000 		.long	0xae48
 15041 465e 00       		.byte	0
 15042 465f 37       		.uleb128 0x37
GAS LISTING /tmp/ccmMnd7l.s 			page 566


 15043 4660 00000000 		.long	.LASF560
 15044 4664 06       		.byte	0x6
 15045 4665 7F       		.byte	0x7f
 15046 4666 6E460000 		.long	0x466e
 15047 466a 79460000 		.long	0x4679
 15048 466e 08       		.uleb128 0x8
 15049 466f 48AE0000 		.long	0xae48
 15050 4673 09       		.uleb128 0x9
 15051 4674 54AE0000 		.long	0xae54
 15052 4678 00       		.byte	0
 15053 4679 11       		.uleb128 0x11
 15054 467a E8450000 		.long	0x45e8
 15055 467e 37       		.uleb128 0x37
 15056 467f 00000000 		.long	.LASF560
 15057 4683 06       		.byte	0x6
 15058 4684 82       		.byte	0x82
 15059 4685 8D460000 		.long	0x468d
 15060 4689 98460000 		.long	0x4698
 15061 468d 08       		.uleb128 0x8
 15062 468e 48AE0000 		.long	0xae48
 15063 4692 09       		.uleb128 0x9
 15064 4693 85060000 		.long	0x685
 15065 4697 00       		.byte	0
 15066 4698 37       		.uleb128 0x37
 15067 4699 00000000 		.long	.LASF560
 15068 469d 06       		.byte	0x6
 15069 469e 86       		.byte	0x86
 15070 469f A7460000 		.long	0x46a7
 15071 46a3 B7460000 		.long	0x46b7
 15072 46a7 08       		.uleb128 0x8
 15073 46a8 48AE0000 		.long	0xae48
 15074 46ac 09       		.uleb128 0x9
 15075 46ad 85060000 		.long	0x685
 15076 46b1 09       		.uleb128 0x9
 15077 46b2 54AE0000 		.long	0xae54
 15078 46b6 00       		.byte	0
 15079 46b7 37       		.uleb128 0x37
 15080 46b8 00000000 		.long	.LASF560
 15081 46bc 06       		.byte	0x6
 15082 46bd 8B       		.byte	0x8b
 15083 46be C6460000 		.long	0x46c6
 15084 46c2 D1460000 		.long	0x46d1
 15085 46c6 08       		.uleb128 0x8
 15086 46c7 48AE0000 		.long	0xae48
 15087 46cb 09       		.uleb128 0x9
 15088 46cc 35AE0000 		.long	0xae35
 15089 46d0 00       		.byte	0
 15090 46d1 37       		.uleb128 0x37
 15091 46d2 00000000 		.long	.LASF560
 15092 46d6 06       		.byte	0x6
 15093 46d7 8E       		.byte	0x8e
 15094 46d8 E0460000 		.long	0x46e0
 15095 46dc EB460000 		.long	0x46eb
 15096 46e0 08       		.uleb128 0x8
 15097 46e1 48AE0000 		.long	0xae48
 15098 46e5 09       		.uleb128 0x9
 15099 46e6 5AAE0000 		.long	0xae5a
GAS LISTING /tmp/ccmMnd7l.s 			page 567


 15100 46ea 00       		.byte	0
 15101 46eb 37       		.uleb128 0x37
 15102 46ec 00000000 		.long	.LASF560
 15103 46f0 06       		.byte	0x6
 15104 46f1 92       		.byte	0x92
 15105 46f2 FA460000 		.long	0x46fa
 15106 46f6 0A470000 		.long	0x470a
 15107 46fa 08       		.uleb128 0x8
 15108 46fb 48AE0000 		.long	0xae48
 15109 46ff 09       		.uleb128 0x9
 15110 4700 5AAE0000 		.long	0xae5a
 15111 4704 09       		.uleb128 0x9
 15112 4705 54AE0000 		.long	0xae54
 15113 4709 00       		.byte	0
 15114 470a 37       		.uleb128 0x37
 15115 470b 00000000 		.long	.LASF561
 15116 470f 06       		.byte	0x6
 15117 4710 9F       		.byte	0x9f
 15118 4711 19470000 		.long	0x4719
 15119 4715 24470000 		.long	0x4724
 15120 4719 08       		.uleb128 0x8
 15121 471a 48AE0000 		.long	0xae48
 15122 471e 08       		.uleb128 0x8
 15123 471f D8800000 		.long	0x80d8
 15124 4723 00       		.byte	0
 15125 4724 0B       		.uleb128 0xb
 15126 4725 00000000 		.long	.LASF562
 15127 4729 06       		.byte	0x6
 15128 472a A7       		.byte	0xa7
 15129 472b 00000000 		.long	.LASF673
 15130 472f C1450000 		.long	0x45c1
 15131 4733 3B470000 		.long	0x473b
 15132 4737 46470000 		.long	0x4746
 15133 473b 08       		.uleb128 0x8
 15134 473c 48AE0000 		.long	0xae48
 15135 4740 09       		.uleb128 0x9
 15136 4741 85060000 		.long	0x685
 15137 4745 00       		.byte	0
 15138 4746 0A       		.uleb128 0xa
 15139 4747 00000000 		.long	.LASF564
 15140 474b 06       		.byte	0x6
 15141 474c AE       		.byte	0xae
 15142 474d 00000000 		.long	.LASF674
 15143 4751 59470000 		.long	0x4759
 15144 4755 69470000 		.long	0x4769
 15145 4759 08       		.uleb128 0x8
 15146 475a 48AE0000 		.long	0xae48
 15147 475e 09       		.uleb128 0x9
 15148 475f C1450000 		.long	0x45c1
 15149 4763 09       		.uleb128 0x9
 15150 4764 85060000 		.long	0x685
 15151 4768 00       		.byte	0
 15152 4769 0E       		.uleb128 0xe
 15153 476a 00000000 		.long	.LASF566
 15154 476e 06       		.byte	0x6
 15155 476f B7       		.byte	0xb7
 15156 4770 00000000 		.long	.LASF675
GAS LISTING /tmp/ccmMnd7l.s 			page 568


 15157 4774 03       		.byte	0x3
 15158 4775 7D470000 		.long	0x477d
 15159 4779 88470000 		.long	0x4788
 15160 477d 08       		.uleb128 0x8
 15161 477e 48AE0000 		.long	0xae48
 15162 4782 09       		.uleb128 0x9
 15163 4783 85060000 		.long	0x685
 15164 4787 00       		.byte	0
 15165 4788 18       		.uleb128 0x18
 15166 4789 5F547000 		.string	"_Tp"
 15167 478d 18810000 		.long	0x8118
 15168 4791 35       		.uleb128 0x35
 15169 4792 00000000 		.long	.LASF303
 15170 4796 DD410000 		.long	0x41dd
 15171 479a 00       		.byte	0
 15172 479b 11       		.uleb128 0x11
 15173 479c 03450000 		.long	0x4503
 15174 47a0 05       		.uleb128 0x5
 15175 47a1 00000000 		.long	.LASF676
 15176 47a5 18       		.byte	0x18
 15177 47a6 06       		.byte	0x6
 15178 47a7 D6       		.byte	0xd6
 15179 47a8 5B510000 		.long	0x515b
 15180 47ac 12       		.uleb128 0x12
 15181 47ad 06       		.byte	0x6
 15182 47ae D6       		.byte	0xd6
 15183 47af 24470000 		.long	0x4724
 15184 47b3 12       		.uleb128 0x12
 15185 47b4 06       		.byte	0x6
 15186 47b5 D6       		.byte	0xd6
 15187 47b6 46470000 		.long	0x4746
 15188 47ba 12       		.uleb128 0x12
 15189 47bb 06       		.byte	0x6
 15190 47bc D6       		.byte	0xd6
 15191 47bd DC450000 		.long	0x45dc
 15192 47c1 12       		.uleb128 0x12
 15193 47c2 06       		.byte	0x6
 15194 47c3 D6       		.byte	0xd6
 15195 47c4 10460000 		.long	0x4610
 15196 47c8 12       		.uleb128 0x12
 15197 47c9 06       		.byte	0x6
 15198 47ca D6       		.byte	0xd6
 15199 47cb 2D460000 		.long	0x462d
 15200 47cf 21       		.uleb128 0x21
 15201 47d0 03450000 		.long	0x4503
 15202 47d4 00       		.byte	0
 15203 47d5 02       		.byte	0x2
 15204 47d6 22       		.uleb128 0x22
 15205 47d7 00000000 		.long	.LASF19
 15206 47db 06       		.byte	0x6
 15207 47dc E2       		.byte	0xe2
 15208 47dd 18810000 		.long	0x8118
 15209 47e1 01       		.byte	0x1
 15210 47e2 22       		.uleb128 0x22
 15211 47e3 00000000 		.long	.LASF489
 15212 47e7 06       		.byte	0x6
 15213 47e8 E3       		.byte	0xe3
GAS LISTING /tmp/ccmMnd7l.s 			page 569


 15214 47e9 C1450000 		.long	0x45c1
 15215 47ed 01       		.byte	0x1
 15216 47ee 22       		.uleb128 0x22
 15217 47ef 00000000 		.long	.LASF58
 15218 47f3 06       		.byte	0x6
 15219 47f4 E5       		.byte	0xe5
 15220 47f5 A1920000 		.long	0x92a1
 15221 47f9 01       		.byte	0x1
 15222 47fa 22       		.uleb128 0x22
 15223 47fb 00000000 		.long	.LASF59
 15224 47ff 06       		.byte	0x6
 15225 4800 E6       		.byte	0xe6
 15226 4801 AC920000 		.long	0x92ac
 15227 4805 01       		.byte	0x1
 15228 4806 22       		.uleb128 0x22
 15229 4807 00000000 		.long	.LASF68
 15230 480b 06       		.byte	0x6
 15231 480c E7       		.byte	0xe7
 15232 480d 74930000 		.long	0x9374
 15233 4811 01       		.byte	0x1
 15234 4812 22       		.uleb128 0x22
 15235 4813 00000000 		.long	.LASF69
 15236 4817 06       		.byte	0x6
 15237 4818 E9       		.byte	0xe9
 15238 4819 93950000 		.long	0x9593
 15239 481d 01       		.byte	0x1
 15240 481e 22       		.uleb128 0x22
 15241 481f 00000000 		.long	.LASF70
 15242 4823 06       		.byte	0x6
 15243 4824 EA       		.byte	0xea
 15244 4825 5B510000 		.long	0x515b
 15245 4829 01       		.byte	0x1
 15246 482a 22       		.uleb128 0x22
 15247 482b 00000000 		.long	.LASF71
 15248 482f 06       		.byte	0x6
 15249 4830 EB       		.byte	0xeb
 15250 4831 60510000 		.long	0x5160
 15251 4835 01       		.byte	0x1
 15252 4836 22       		.uleb128 0x22
 15253 4837 00000000 		.long	.LASF57
 15254 483b 06       		.byte	0x6
 15255 483c EC       		.byte	0xec
 15256 483d 85060000 		.long	0x685
 15257 4841 01       		.byte	0x1
 15258 4842 22       		.uleb128 0x22
 15259 4843 00000000 		.long	.LASF67
 15260 4847 06       		.byte	0x6
 15261 4848 EE       		.byte	0xee
 15262 4849 DD410000 		.long	0x41dd
 15263 484d 01       		.byte	0x1
 15264 484e 0C       		.uleb128 0xc
 15265 484f 00000000 		.long	.LASF569
 15266 4853 06       		.byte	0x6
 15267 4854 FD       		.byte	0xfd
 15268 4855 01       		.byte	0x1
 15269 4856 5E480000 		.long	0x485e
 15270 485a 64480000 		.long	0x4864
GAS LISTING /tmp/ccmMnd7l.s 			page 570


 15271 485e 08       		.uleb128 0x8
 15272 485f 61AE0000 		.long	0xae61
 15273 4863 00       		.byte	0
 15274 4864 31       		.uleb128 0x31
 15275 4865 00000000 		.long	.LASF569
 15276 4869 06       		.byte	0x6
 15277 486a 0801     		.value	0x108
 15278 486c 01       		.byte	0x1
 15279 486d 75480000 		.long	0x4875
 15280 4871 80480000 		.long	0x4880
 15281 4875 08       		.uleb128 0x8
 15282 4876 61AE0000 		.long	0xae61
 15283 487a 09       		.uleb128 0x9
 15284 487b 67AE0000 		.long	0xae67
 15285 487f 00       		.byte	0
 15286 4880 11       		.uleb128 0x11
 15287 4881 42480000 		.long	0x4842
 15288 4885 31       		.uleb128 0x31
 15289 4886 00000000 		.long	.LASF569
 15290 488a 06       		.byte	0x6
 15291 488b 1501     		.value	0x115
 15292 488d 01       		.byte	0x1
 15293 488e 96480000 		.long	0x4896
 15294 4892 A6480000 		.long	0x48a6
 15295 4896 08       		.uleb128 0x8
 15296 4897 61AE0000 		.long	0xae61
 15297 489b 09       		.uleb128 0x9
 15298 489c 36480000 		.long	0x4836
 15299 48a0 09       		.uleb128 0x9
 15300 48a1 67AE0000 		.long	0xae67
 15301 48a5 00       		.byte	0
 15302 48a6 30       		.uleb128 0x30
 15303 48a7 00000000 		.long	.LASF569
 15304 48ab 06       		.byte	0x6
 15305 48ac 2101     		.value	0x121
 15306 48ae 01       		.byte	0x1
 15307 48af B7480000 		.long	0x48b7
 15308 48b3 CC480000 		.long	0x48cc
 15309 48b7 08       		.uleb128 0x8
 15310 48b8 61AE0000 		.long	0xae61
 15311 48bc 09       		.uleb128 0x9
 15312 48bd 36480000 		.long	0x4836
 15313 48c1 09       		.uleb128 0x9
 15314 48c2 6DAE0000 		.long	0xae6d
 15315 48c6 09       		.uleb128 0x9
 15316 48c7 67AE0000 		.long	0xae67
 15317 48cb 00       		.byte	0
 15318 48cc 11       		.uleb128 0x11
 15319 48cd D6470000 		.long	0x47d6
 15320 48d1 30       		.uleb128 0x30
 15321 48d2 00000000 		.long	.LASF569
 15322 48d6 06       		.byte	0x6
 15323 48d7 3E01     		.value	0x13e
 15324 48d9 01       		.byte	0x1
 15325 48da E2480000 		.long	0x48e2
 15326 48de ED480000 		.long	0x48ed
 15327 48e2 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 571


 15328 48e3 61AE0000 		.long	0xae61
 15329 48e7 09       		.uleb128 0x9
 15330 48e8 73AE0000 		.long	0xae73
 15331 48ec 00       		.byte	0
 15332 48ed 30       		.uleb128 0x30
 15333 48ee 00000000 		.long	.LASF569
 15334 48f2 06       		.byte	0x6
 15335 48f3 4F01     		.value	0x14f
 15336 48f5 01       		.byte	0x1
 15337 48f6 FE480000 		.long	0x48fe
 15338 48fa 09490000 		.long	0x4909
 15339 48fe 08       		.uleb128 0x8
 15340 48ff 61AE0000 		.long	0xae61
 15341 4903 09       		.uleb128 0x9
 15342 4904 79AE0000 		.long	0xae79
 15343 4908 00       		.byte	0
 15344 4909 30       		.uleb128 0x30
 15345 490a 00000000 		.long	.LASF569
 15346 490e 06       		.byte	0x6
 15347 490f 5301     		.value	0x153
 15348 4911 01       		.byte	0x1
 15349 4912 1A490000 		.long	0x491a
 15350 4916 2A490000 		.long	0x492a
 15351 491a 08       		.uleb128 0x8
 15352 491b 61AE0000 		.long	0xae61
 15353 491f 09       		.uleb128 0x9
 15354 4920 73AE0000 		.long	0xae73
 15355 4924 09       		.uleb128 0x9
 15356 4925 67AE0000 		.long	0xae67
 15357 4929 00       		.byte	0
 15358 492a 30       		.uleb128 0x30
 15359 492b 00000000 		.long	.LASF569
 15360 492f 06       		.byte	0x6
 15361 4930 5C01     		.value	0x15c
 15362 4932 01       		.byte	0x1
 15363 4933 3B490000 		.long	0x493b
 15364 4937 4B490000 		.long	0x494b
 15365 493b 08       		.uleb128 0x8
 15366 493c 61AE0000 		.long	0xae61
 15367 4940 09       		.uleb128 0x9
 15368 4941 79AE0000 		.long	0xae79
 15369 4945 09       		.uleb128 0x9
 15370 4946 67AE0000 		.long	0xae67
 15371 494a 00       		.byte	0
 15372 494b 30       		.uleb128 0x30
 15373 494c 00000000 		.long	.LASF569
 15374 4950 06       		.byte	0x6
 15375 4951 7501     		.value	0x175
 15376 4953 01       		.byte	0x1
 15377 4954 5C490000 		.long	0x495c
 15378 4958 6C490000 		.long	0x496c
 15379 495c 08       		.uleb128 0x8
 15380 495d 61AE0000 		.long	0xae61
 15381 4961 09       		.uleb128 0x9
 15382 4962 6A510000 		.long	0x516a
 15383 4966 09       		.uleb128 0x9
 15384 4967 67AE0000 		.long	0xae67
GAS LISTING /tmp/ccmMnd7l.s 			page 572


 15385 496b 00       		.byte	0
 15386 496c 30       		.uleb128 0x30
 15387 496d 00000000 		.long	.LASF570
 15388 4971 06       		.byte	0x6
 15389 4972 A701     		.value	0x1a7
 15390 4974 01       		.byte	0x1
 15391 4975 7D490000 		.long	0x497d
 15392 4979 88490000 		.long	0x4988
 15393 497d 08       		.uleb128 0x8
 15394 497e 61AE0000 		.long	0xae61
 15395 4982 08       		.uleb128 0x8
 15396 4983 D8800000 		.long	0x80d8
 15397 4987 00       		.byte	0
 15398 4988 0D       		.uleb128 0xd
 15399 4989 00000000 		.long	.LASF8
 15400 498d 30       		.byte	0x30
 15401 498e A7       		.byte	0xa7
 15402 498f 00000000 		.long	.LASF677
 15403 4993 80AE0000 		.long	0xae80
 15404 4997 01       		.byte	0x1
 15405 4998 A0490000 		.long	0x49a0
 15406 499c AB490000 		.long	0x49ab
 15407 49a0 08       		.uleb128 0x8
 15408 49a1 61AE0000 		.long	0xae61
 15409 49a5 09       		.uleb128 0x9
 15410 49a6 73AE0000 		.long	0xae73
 15411 49aa 00       		.byte	0
 15412 49ab 32       		.uleb128 0x32
 15413 49ac 00000000 		.long	.LASF8
 15414 49b0 06       		.byte	0x6
 15415 49b1 C001     		.value	0x1c0
 15416 49b3 00000000 		.long	.LASF678
 15417 49b7 80AE0000 		.long	0xae80
 15418 49bb 01       		.byte	0x1
 15419 49bc C4490000 		.long	0x49c4
 15420 49c0 CF490000 		.long	0x49cf
 15421 49c4 08       		.uleb128 0x8
 15422 49c5 61AE0000 		.long	0xae61
 15423 49c9 09       		.uleb128 0x9
 15424 49ca 79AE0000 		.long	0xae79
 15425 49ce 00       		.byte	0
 15426 49cf 32       		.uleb128 0x32
 15427 49d0 00000000 		.long	.LASF8
 15428 49d4 06       		.byte	0x6
 15429 49d5 D601     		.value	0x1d6
 15430 49d7 00000000 		.long	.LASF679
 15431 49db 80AE0000 		.long	0xae80
 15432 49df 01       		.byte	0x1
 15433 49e0 E8490000 		.long	0x49e8
 15434 49e4 F3490000 		.long	0x49f3
 15435 49e8 08       		.uleb128 0x8
 15436 49e9 61AE0000 		.long	0xae61
 15437 49ed 09       		.uleb128 0x9
 15438 49ee 6A510000 		.long	0x516a
 15439 49f2 00       		.byte	0
 15440 49f3 34       		.uleb128 0x34
 15441 49f4 00000000 		.long	.LASF44
GAS LISTING /tmp/ccmMnd7l.s 			page 573


 15442 49f8 06       		.byte	0x6
 15443 49f9 E801     		.value	0x1e8
 15444 49fb 00000000 		.long	.LASF680
 15445 49ff 01       		.byte	0x1
 15446 4a00 084A0000 		.long	0x4a08
 15447 4a04 184A0000 		.long	0x4a18
 15448 4a08 08       		.uleb128 0x8
 15449 4a09 61AE0000 		.long	0xae61
 15450 4a0d 09       		.uleb128 0x9
 15451 4a0e 36480000 		.long	0x4836
 15452 4a12 09       		.uleb128 0x9
 15453 4a13 6DAE0000 		.long	0xae6d
 15454 4a17 00       		.byte	0
 15455 4a18 34       		.uleb128 0x34
 15456 4a19 00000000 		.long	.LASF44
 15457 4a1d 06       		.byte	0x6
 15458 4a1e 1502     		.value	0x215
 15459 4a20 00000000 		.long	.LASF681
 15460 4a24 01       		.byte	0x1
 15461 4a25 2D4A0000 		.long	0x4a2d
 15462 4a29 384A0000 		.long	0x4a38
 15463 4a2d 08       		.uleb128 0x8
 15464 4a2e 61AE0000 		.long	0xae61
 15465 4a32 09       		.uleb128 0x9
 15466 4a33 6A510000 		.long	0x516a
 15467 4a37 00       		.byte	0
 15468 4a38 32       		.uleb128 0x32
 15469 4a39 00000000 		.long	.LASF149
 15470 4a3d 06       		.byte	0x6
 15471 4a3e 2302     		.value	0x223
 15472 4a40 00000000 		.long	.LASF682
 15473 4a44 06480000 		.long	0x4806
 15474 4a48 01       		.byte	0x1
 15475 4a49 514A0000 		.long	0x4a51
 15476 4a4d 574A0000 		.long	0x4a57
 15477 4a51 08       		.uleb128 0x8
 15478 4a52 61AE0000 		.long	0xae61
 15479 4a56 00       		.byte	0
 15480 4a57 32       		.uleb128 0x32
 15481 4a58 00000000 		.long	.LASF149
 15482 4a5c 06       		.byte	0x6
 15483 4a5d 2C02     		.value	0x22c
 15484 4a5f 00000000 		.long	.LASF683
 15485 4a63 12480000 		.long	0x4812
 15486 4a67 01       		.byte	0x1
 15487 4a68 704A0000 		.long	0x4a70
 15488 4a6c 764A0000 		.long	0x4a76
 15489 4a70 08       		.uleb128 0x8
 15490 4a71 86AE0000 		.long	0xae86
 15491 4a75 00       		.byte	0
 15492 4a76 33       		.uleb128 0x33
 15493 4a77 656E6400 		.string	"end"
 15494 4a7b 06       		.byte	0x6
 15495 4a7c 3502     		.value	0x235
 15496 4a7e 00000000 		.long	.LASF684
 15497 4a82 06480000 		.long	0x4806
 15498 4a86 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 574


 15499 4a87 8F4A0000 		.long	0x4a8f
 15500 4a8b 954A0000 		.long	0x4a95
 15501 4a8f 08       		.uleb128 0x8
 15502 4a90 61AE0000 		.long	0xae61
 15503 4a94 00       		.byte	0
 15504 4a95 33       		.uleb128 0x33
 15505 4a96 656E6400 		.string	"end"
 15506 4a9a 06       		.byte	0x6
 15507 4a9b 3E02     		.value	0x23e
 15508 4a9d 00000000 		.long	.LASF685
 15509 4aa1 12480000 		.long	0x4812
 15510 4aa5 01       		.byte	0x1
 15511 4aa6 AE4A0000 		.long	0x4aae
 15512 4aaa B44A0000 		.long	0x4ab4
 15513 4aae 08       		.uleb128 0x8
 15514 4aaf 86AE0000 		.long	0xae86
 15515 4ab3 00       		.byte	0
 15516 4ab4 32       		.uleb128 0x32
 15517 4ab5 00000000 		.long	.LASF154
 15518 4ab9 06       		.byte	0x6
 15519 4aba 4702     		.value	0x247
 15520 4abc 00000000 		.long	.LASF686
 15521 4ac0 2A480000 		.long	0x482a
 15522 4ac4 01       		.byte	0x1
 15523 4ac5 CD4A0000 		.long	0x4acd
 15524 4ac9 D34A0000 		.long	0x4ad3
 15525 4acd 08       		.uleb128 0x8
 15526 4ace 61AE0000 		.long	0xae61
 15527 4ad2 00       		.byte	0
 15528 4ad3 32       		.uleb128 0x32
 15529 4ad4 00000000 		.long	.LASF154
 15530 4ad8 06       		.byte	0x6
 15531 4ad9 5002     		.value	0x250
 15532 4adb 00000000 		.long	.LASF687
 15533 4adf 1E480000 		.long	0x481e
 15534 4ae3 01       		.byte	0x1
 15535 4ae4 EC4A0000 		.long	0x4aec
 15536 4ae8 F24A0000 		.long	0x4af2
 15537 4aec 08       		.uleb128 0x8
 15538 4aed 86AE0000 		.long	0xae86
 15539 4af1 00       		.byte	0
 15540 4af2 32       		.uleb128 0x32
 15541 4af3 00000000 		.long	.LASF157
 15542 4af7 06       		.byte	0x6
 15543 4af8 5902     		.value	0x259
 15544 4afa 00000000 		.long	.LASF688
 15545 4afe 2A480000 		.long	0x482a
 15546 4b02 01       		.byte	0x1
 15547 4b03 0B4B0000 		.long	0x4b0b
 15548 4b07 114B0000 		.long	0x4b11
 15549 4b0b 08       		.uleb128 0x8
 15550 4b0c 61AE0000 		.long	0xae61
 15551 4b10 00       		.byte	0
 15552 4b11 32       		.uleb128 0x32
 15553 4b12 00000000 		.long	.LASF157
 15554 4b16 06       		.byte	0x6
 15555 4b17 6202     		.value	0x262
GAS LISTING /tmp/ccmMnd7l.s 			page 575


 15556 4b19 00000000 		.long	.LASF689
 15557 4b1d 1E480000 		.long	0x481e
 15558 4b21 01       		.byte	0x1
 15559 4b22 2A4B0000 		.long	0x4b2a
 15560 4b26 304B0000 		.long	0x4b30
 15561 4b2a 08       		.uleb128 0x8
 15562 4b2b 86AE0000 		.long	0xae86
 15563 4b2f 00       		.byte	0
 15564 4b30 32       		.uleb128 0x32
 15565 4b31 00000000 		.long	.LASF160
 15566 4b35 06       		.byte	0x6
 15567 4b36 6C02     		.value	0x26c
 15568 4b38 00000000 		.long	.LASF690
 15569 4b3c 12480000 		.long	0x4812
 15570 4b40 01       		.byte	0x1
 15571 4b41 494B0000 		.long	0x4b49
 15572 4b45 4F4B0000 		.long	0x4b4f
 15573 4b49 08       		.uleb128 0x8
 15574 4b4a 86AE0000 		.long	0xae86
 15575 4b4e 00       		.byte	0
 15576 4b4f 32       		.uleb128 0x32
 15577 4b50 00000000 		.long	.LASF162
 15578 4b54 06       		.byte	0x6
 15579 4b55 7502     		.value	0x275
 15580 4b57 00000000 		.long	.LASF691
 15581 4b5b 12480000 		.long	0x4812
 15582 4b5f 01       		.byte	0x1
 15583 4b60 684B0000 		.long	0x4b68
 15584 4b64 6E4B0000 		.long	0x4b6e
 15585 4b68 08       		.uleb128 0x8
 15586 4b69 86AE0000 		.long	0xae86
 15587 4b6d 00       		.byte	0
 15588 4b6e 32       		.uleb128 0x32
 15589 4b6f 00000000 		.long	.LASF164
 15590 4b73 06       		.byte	0x6
 15591 4b74 7E02     		.value	0x27e
 15592 4b76 00000000 		.long	.LASF692
 15593 4b7a 1E480000 		.long	0x481e
 15594 4b7e 01       		.byte	0x1
 15595 4b7f 874B0000 		.long	0x4b87
 15596 4b83 8D4B0000 		.long	0x4b8d
 15597 4b87 08       		.uleb128 0x8
 15598 4b88 86AE0000 		.long	0xae86
 15599 4b8c 00       		.byte	0
 15600 4b8d 32       		.uleb128 0x32
 15601 4b8e 00000000 		.long	.LASF166
 15602 4b92 06       		.byte	0x6
 15603 4b93 8702     		.value	0x287
 15604 4b95 00000000 		.long	.LASF693
 15605 4b99 1E480000 		.long	0x481e
 15606 4b9d 01       		.byte	0x1
 15607 4b9e A64B0000 		.long	0x4ba6
 15608 4ba2 AC4B0000 		.long	0x4bac
 15609 4ba6 08       		.uleb128 0x8
 15610 4ba7 86AE0000 		.long	0xae86
 15611 4bab 00       		.byte	0
 15612 4bac 32       		.uleb128 0x32
GAS LISTING /tmp/ccmMnd7l.s 			page 576


 15613 4bad 00000000 		.long	.LASF168
 15614 4bb1 06       		.byte	0x6
 15615 4bb2 8E02     		.value	0x28e
 15616 4bb4 00000000 		.long	.LASF694
 15617 4bb8 36480000 		.long	0x4836
 15618 4bbc 01       		.byte	0x1
 15619 4bbd C54B0000 		.long	0x4bc5
 15620 4bc1 CB4B0000 		.long	0x4bcb
 15621 4bc5 08       		.uleb128 0x8
 15622 4bc6 86AE0000 		.long	0xae86
 15623 4bca 00       		.byte	0
 15624 4bcb 32       		.uleb128 0x32
 15625 4bcc 00000000 		.long	.LASF171
 15626 4bd0 06       		.byte	0x6
 15627 4bd1 9302     		.value	0x293
 15628 4bd3 00000000 		.long	.LASF695
 15629 4bd7 36480000 		.long	0x4836
 15630 4bdb 01       		.byte	0x1
 15631 4bdc E44B0000 		.long	0x4be4
 15632 4be0 EA4B0000 		.long	0x4bea
 15633 4be4 08       		.uleb128 0x8
 15634 4be5 86AE0000 		.long	0xae86
 15635 4be9 00       		.byte	0
 15636 4bea 34       		.uleb128 0x34
 15637 4beb 00000000 		.long	.LASF173
 15638 4bef 06       		.byte	0x6
 15639 4bf0 A102     		.value	0x2a1
 15640 4bf2 00000000 		.long	.LASF696
 15641 4bf6 01       		.byte	0x1
 15642 4bf7 FF4B0000 		.long	0x4bff
 15643 4bfb 0A4C0000 		.long	0x4c0a
 15644 4bff 08       		.uleb128 0x8
 15645 4c00 61AE0000 		.long	0xae61
 15646 4c04 09       		.uleb128 0x9
 15647 4c05 36480000 		.long	0x4836
 15648 4c09 00       		.byte	0
 15649 4c0a 34       		.uleb128 0x34
 15650 4c0b 00000000 		.long	.LASF173
 15651 4c0f 06       		.byte	0x6
 15652 4c10 B502     		.value	0x2b5
 15653 4c12 00000000 		.long	.LASF697
 15654 4c16 01       		.byte	0x1
 15655 4c17 1F4C0000 		.long	0x4c1f
 15656 4c1b 2F4C0000 		.long	0x4c2f
 15657 4c1f 08       		.uleb128 0x8
 15658 4c20 61AE0000 		.long	0xae61
 15659 4c24 09       		.uleb128 0x9
 15660 4c25 36480000 		.long	0x4836
 15661 4c29 09       		.uleb128 0x9
 15662 4c2a 6DAE0000 		.long	0xae6d
 15663 4c2e 00       		.byte	0
 15664 4c2f 34       		.uleb128 0x34
 15665 4c30 00000000 		.long	.LASF176
 15666 4c34 06       		.byte	0x6
 15667 4c35 D502     		.value	0x2d5
 15668 4c37 00000000 		.long	.LASF698
 15669 4c3b 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 577


 15670 4c3c 444C0000 		.long	0x4c44
 15671 4c40 4A4C0000 		.long	0x4c4a
 15672 4c44 08       		.uleb128 0x8
 15673 4c45 61AE0000 		.long	0xae61
 15674 4c49 00       		.byte	0
 15675 4c4a 32       		.uleb128 0x32
 15676 4c4b 00000000 		.long	.LASF178
 15677 4c4f 06       		.byte	0x6
 15678 4c50 DE02     		.value	0x2de
 15679 4c52 00000000 		.long	.LASF699
 15680 4c56 36480000 		.long	0x4836
 15681 4c5a 01       		.byte	0x1
 15682 4c5b 634C0000 		.long	0x4c63
 15683 4c5f 694C0000 		.long	0x4c69
 15684 4c63 08       		.uleb128 0x8
 15685 4c64 86AE0000 		.long	0xae86
 15686 4c68 00       		.byte	0
 15687 4c69 32       		.uleb128 0x32
 15688 4c6a 00000000 		.long	.LASF184
 15689 4c6e 06       		.byte	0x6
 15690 4c6f E702     		.value	0x2e7
 15691 4c71 00000000 		.long	.LASF700
 15692 4c75 E0800000 		.long	0x80e0
 15693 4c79 01       		.byte	0x1
 15694 4c7a 824C0000 		.long	0x4c82
 15695 4c7e 884C0000 		.long	0x4c88
 15696 4c82 08       		.uleb128 0x8
 15697 4c83 86AE0000 		.long	0xae86
 15698 4c87 00       		.byte	0
 15699 4c88 0E       		.uleb128 0xe
 15700 4c89 00000000 		.long	.LASF180
 15701 4c8d 30       		.byte	0x30
 15702 4c8e 41       		.byte	0x41
 15703 4c8f 00000000 		.long	.LASF701
 15704 4c93 01       		.byte	0x1
 15705 4c94 9C4C0000 		.long	0x4c9c
 15706 4c98 A74C0000 		.long	0x4ca7
 15707 4c9c 08       		.uleb128 0x8
 15708 4c9d 61AE0000 		.long	0xae61
 15709 4ca1 09       		.uleb128 0x9
 15710 4ca2 36480000 		.long	0x4836
 15711 4ca6 00       		.byte	0
 15712 4ca7 32       		.uleb128 0x32
 15713 4ca8 00000000 		.long	.LASF186
 15714 4cac 06       		.byte	0x6
 15715 4cad 0B03     		.value	0x30b
 15716 4caf 00000000 		.long	.LASF702
 15717 4cb3 EE470000 		.long	0x47ee
 15718 4cb7 01       		.byte	0x1
 15719 4cb8 C04C0000 		.long	0x4cc0
 15720 4cbc CB4C0000 		.long	0x4ccb
 15721 4cc0 08       		.uleb128 0x8
 15722 4cc1 61AE0000 		.long	0xae61
 15723 4cc5 09       		.uleb128 0x9
 15724 4cc6 36480000 		.long	0x4836
 15725 4cca 00       		.byte	0
 15726 4ccb 32       		.uleb128 0x32
GAS LISTING /tmp/ccmMnd7l.s 			page 578


 15727 4ccc 00000000 		.long	.LASF186
 15728 4cd0 06       		.byte	0x6
 15729 4cd1 1A03     		.value	0x31a
 15730 4cd3 00000000 		.long	.LASF703
 15731 4cd7 FA470000 		.long	0x47fa
 15732 4cdb 01       		.byte	0x1
 15733 4cdc E44C0000 		.long	0x4ce4
 15734 4ce0 EF4C0000 		.long	0x4cef
 15735 4ce4 08       		.uleb128 0x8
 15736 4ce5 86AE0000 		.long	0xae86
 15737 4ce9 09       		.uleb128 0x9
 15738 4cea 36480000 		.long	0x4836
 15739 4cee 00       		.byte	0
 15740 4cef 34       		.uleb128 0x34
 15741 4cf0 00000000 		.long	.LASF598
 15742 4cf4 06       		.byte	0x6
 15743 4cf5 2003     		.value	0x320
 15744 4cf7 00000000 		.long	.LASF704
 15745 4cfb 02       		.byte	0x2
 15746 4cfc 044D0000 		.long	0x4d04
 15747 4d00 0F4D0000 		.long	0x4d0f
 15748 4d04 08       		.uleb128 0x8
 15749 4d05 86AE0000 		.long	0xae86
 15750 4d09 09       		.uleb128 0x9
 15751 4d0a 36480000 		.long	0x4836
 15752 4d0e 00       		.byte	0
 15753 4d0f 33       		.uleb128 0x33
 15754 4d10 617400   		.string	"at"
 15755 4d13 06       		.byte	0x6
 15756 4d14 3603     		.value	0x336
 15757 4d16 00000000 		.long	.LASF705
 15758 4d1a EE470000 		.long	0x47ee
 15759 4d1e 01       		.byte	0x1
 15760 4d1f 274D0000 		.long	0x4d27
 15761 4d23 324D0000 		.long	0x4d32
 15762 4d27 08       		.uleb128 0x8
 15763 4d28 61AE0000 		.long	0xae61
 15764 4d2c 09       		.uleb128 0x9
 15765 4d2d 36480000 		.long	0x4836
 15766 4d31 00       		.byte	0
 15767 4d32 33       		.uleb128 0x33
 15768 4d33 617400   		.string	"at"
 15769 4d36 06       		.byte	0x6
 15770 4d37 4803     		.value	0x348
 15771 4d39 00000000 		.long	.LASF706
 15772 4d3d FA470000 		.long	0x47fa
 15773 4d41 01       		.byte	0x1
 15774 4d42 4A4D0000 		.long	0x4d4a
 15775 4d46 554D0000 		.long	0x4d55
 15776 4d4a 08       		.uleb128 0x8
 15777 4d4b 86AE0000 		.long	0xae86
 15778 4d4f 09       		.uleb128 0x9
 15779 4d50 36480000 		.long	0x4836
 15780 4d54 00       		.byte	0
 15781 4d55 32       		.uleb128 0x32
 15782 4d56 00000000 		.long	.LASF191
 15783 4d5a 06       		.byte	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 579


 15784 4d5b 5303     		.value	0x353
 15785 4d5d 00000000 		.long	.LASF707
 15786 4d61 EE470000 		.long	0x47ee
 15787 4d65 01       		.byte	0x1
 15788 4d66 6E4D0000 		.long	0x4d6e
 15789 4d6a 744D0000 		.long	0x4d74
 15790 4d6e 08       		.uleb128 0x8
 15791 4d6f 61AE0000 		.long	0xae61
 15792 4d73 00       		.byte	0
 15793 4d74 32       		.uleb128 0x32
 15794 4d75 00000000 		.long	.LASF191
 15795 4d79 06       		.byte	0x6
 15796 4d7a 5B03     		.value	0x35b
 15797 4d7c 00000000 		.long	.LASF708
 15798 4d80 FA470000 		.long	0x47fa
 15799 4d84 01       		.byte	0x1
 15800 4d85 8D4D0000 		.long	0x4d8d
 15801 4d89 934D0000 		.long	0x4d93
 15802 4d8d 08       		.uleb128 0x8
 15803 4d8e 86AE0000 		.long	0xae86
 15804 4d92 00       		.byte	0
 15805 4d93 32       		.uleb128 0x32
 15806 4d94 00000000 		.long	.LASF194
 15807 4d98 06       		.byte	0x6
 15808 4d99 6303     		.value	0x363
 15809 4d9b 00000000 		.long	.LASF709
 15810 4d9f EE470000 		.long	0x47ee
 15811 4da3 01       		.byte	0x1
 15812 4da4 AC4D0000 		.long	0x4dac
 15813 4da8 B24D0000 		.long	0x4db2
 15814 4dac 08       		.uleb128 0x8
 15815 4dad 61AE0000 		.long	0xae61
 15816 4db1 00       		.byte	0
 15817 4db2 32       		.uleb128 0x32
 15818 4db3 00000000 		.long	.LASF194
 15819 4db7 06       		.byte	0x6
 15820 4db8 6B03     		.value	0x36b
 15821 4dba 00000000 		.long	.LASF710
 15822 4dbe FA470000 		.long	0x47fa
 15823 4dc2 01       		.byte	0x1
 15824 4dc3 CB4D0000 		.long	0x4dcb
 15825 4dc7 D14D0000 		.long	0x4dd1
 15826 4dcb 08       		.uleb128 0x8
 15827 4dcc 86AE0000 		.long	0xae86
 15828 4dd0 00       		.byte	0
 15829 4dd1 32       		.uleb128 0x32
 15830 4dd2 00000000 		.long	.LASF260
 15831 4dd6 06       		.byte	0x6
 15832 4dd7 7A03     		.value	0x37a
 15833 4dd9 00000000 		.long	.LASF711
 15834 4ddd D0AD0000 		.long	0xadd0
 15835 4de1 01       		.byte	0x1
 15836 4de2 EA4D0000 		.long	0x4dea
 15837 4de6 F04D0000 		.long	0x4df0
 15838 4dea 08       		.uleb128 0x8
 15839 4deb 61AE0000 		.long	0xae61
 15840 4def 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 580


 15841 4df0 32       		.uleb128 0x32
 15842 4df1 00000000 		.long	.LASF260
 15843 4df5 06       		.byte	0x6
 15844 4df6 8203     		.value	0x382
 15845 4df8 00000000 		.long	.LASF712
 15846 4dfc D6AD0000 		.long	0xadd6
 15847 4e00 01       		.byte	0x1
 15848 4e01 094E0000 		.long	0x4e09
 15849 4e05 0F4E0000 		.long	0x4e0f
 15850 4e09 08       		.uleb128 0x8
 15851 4e0a 86AE0000 		.long	0xae86
 15852 4e0e 00       		.byte	0
 15853 4e0f 34       		.uleb128 0x34
 15854 4e10 00000000 		.long	.LASF209
 15855 4e14 06       		.byte	0x6
 15856 4e15 9103     		.value	0x391
 15857 4e17 00000000 		.long	.LASF713
 15858 4e1b 01       		.byte	0x1
 15859 4e1c 244E0000 		.long	0x4e24
 15860 4e20 2F4E0000 		.long	0x4e2f
 15861 4e24 08       		.uleb128 0x8
 15862 4e25 61AE0000 		.long	0xae61
 15863 4e29 09       		.uleb128 0x9
 15864 4e2a 6DAE0000 		.long	0xae6d
 15865 4e2e 00       		.byte	0
 15866 4e2f 34       		.uleb128 0x34
 15867 4e30 00000000 		.long	.LASF209
 15868 4e34 06       		.byte	0x6
 15869 4e35 A303     		.value	0x3a3
 15870 4e37 00000000 		.long	.LASF714
 15871 4e3b 01       		.byte	0x1
 15872 4e3c 444E0000 		.long	0x4e44
 15873 4e40 4F4E0000 		.long	0x4e4f
 15874 4e44 08       		.uleb128 0x8
 15875 4e45 61AE0000 		.long	0xae61
 15876 4e49 09       		.uleb128 0x9
 15877 4e4a 8CAE0000 		.long	0xae8c
 15878 4e4e 00       		.byte	0
 15879 4e4f 34       		.uleb128 0x34
 15880 4e50 00000000 		.long	.LASF231
 15881 4e54 06       		.byte	0x6
 15882 4e55 B503     		.value	0x3b5
 15883 4e57 00000000 		.long	.LASF715
 15884 4e5b 01       		.byte	0x1
 15885 4e5c 644E0000 		.long	0x4e64
 15886 4e60 6A4E0000 		.long	0x4e6a
 15887 4e64 08       		.uleb128 0x8
 15888 4e65 61AE0000 		.long	0xae61
 15889 4e69 00       		.byte	0
 15890 4e6a 0D       		.uleb128 0xd
 15891 4e6b 00000000 		.long	.LASF218
 15892 4e6f 30       		.byte	0x30
 15893 4e70 6B       		.byte	0x6b
 15894 4e71 00000000 		.long	.LASF716
 15895 4e75 06480000 		.long	0x4806
 15896 4e79 01       		.byte	0x1
 15897 4e7a 824E0000 		.long	0x4e82
GAS LISTING /tmp/ccmMnd7l.s 			page 581


 15898 4e7e 924E0000 		.long	0x4e92
 15899 4e82 08       		.uleb128 0x8
 15900 4e83 61AE0000 		.long	0xae61
 15901 4e87 09       		.uleb128 0x9
 15902 4e88 12480000 		.long	0x4812
 15903 4e8c 09       		.uleb128 0x9
 15904 4e8d 6DAE0000 		.long	0xae6d
 15905 4e91 00       		.byte	0
 15906 4e92 32       		.uleb128 0x32
 15907 4e93 00000000 		.long	.LASF218
 15908 4e97 06       		.byte	0x6
 15909 4e98 F603     		.value	0x3f6
 15910 4e9a 00000000 		.long	.LASF717
 15911 4e9e 06480000 		.long	0x4806
 15912 4ea2 01       		.byte	0x1
 15913 4ea3 AB4E0000 		.long	0x4eab
 15914 4ea7 BB4E0000 		.long	0x4ebb
 15915 4eab 08       		.uleb128 0x8
 15916 4eac 61AE0000 		.long	0xae61
 15917 4eb0 09       		.uleb128 0x9
 15918 4eb1 12480000 		.long	0x4812
 15919 4eb5 09       		.uleb128 0x9
 15920 4eb6 8CAE0000 		.long	0xae8c
 15921 4eba 00       		.byte	0
 15922 4ebb 32       		.uleb128 0x32
 15923 4ebc 00000000 		.long	.LASF218
 15924 4ec0 06       		.byte	0x6
 15925 4ec1 0704     		.value	0x407
 15926 4ec3 00000000 		.long	.LASF718
 15927 4ec7 06480000 		.long	0x4806
 15928 4ecb 01       		.byte	0x1
 15929 4ecc D44E0000 		.long	0x4ed4
 15930 4ed0 E44E0000 		.long	0x4ee4
 15931 4ed4 08       		.uleb128 0x8
 15932 4ed5 61AE0000 		.long	0xae61
 15933 4ed9 09       		.uleb128 0x9
 15934 4eda 12480000 		.long	0x4812
 15935 4ede 09       		.uleb128 0x9
 15936 4edf 6A510000 		.long	0x516a
 15937 4ee3 00       		.byte	0
 15938 4ee4 32       		.uleb128 0x32
 15939 4ee5 00000000 		.long	.LASF218
 15940 4ee9 06       		.byte	0x6
 15941 4eea 1B04     		.value	0x41b
 15942 4eec 00000000 		.long	.LASF719
 15943 4ef0 06480000 		.long	0x4806
 15944 4ef4 01       		.byte	0x1
 15945 4ef5 FD4E0000 		.long	0x4efd
 15946 4ef9 124F0000 		.long	0x4f12
 15947 4efd 08       		.uleb128 0x8
 15948 4efe 61AE0000 		.long	0xae61
 15949 4f02 09       		.uleb128 0x9
 15950 4f03 12480000 		.long	0x4812
 15951 4f07 09       		.uleb128 0x9
 15952 4f08 36480000 		.long	0x4836
 15953 4f0c 09       		.uleb128 0x9
 15954 4f0d 6DAE0000 		.long	0xae6d
GAS LISTING /tmp/ccmMnd7l.s 			page 582


 15955 4f11 00       		.byte	0
 15956 4f12 32       		.uleb128 0x32
 15957 4f13 00000000 		.long	.LASF227
 15958 4f17 06       		.byte	0x6
 15959 4f18 7A04     		.value	0x47a
 15960 4f1a 00000000 		.long	.LASF720
 15961 4f1e 06480000 		.long	0x4806
 15962 4f22 01       		.byte	0x1
 15963 4f23 2B4F0000 		.long	0x4f2b
 15964 4f27 364F0000 		.long	0x4f36
 15965 4f2b 08       		.uleb128 0x8
 15966 4f2c 61AE0000 		.long	0xae61
 15967 4f30 09       		.uleb128 0x9
 15968 4f31 12480000 		.long	0x4812
 15969 4f35 00       		.byte	0
 15970 4f36 32       		.uleb128 0x32
 15971 4f37 00000000 		.long	.LASF227
 15972 4f3b 06       		.byte	0x6
 15973 4f3c 9504     		.value	0x495
 15974 4f3e 00000000 		.long	.LASF721
 15975 4f42 06480000 		.long	0x4806
 15976 4f46 01       		.byte	0x1
 15977 4f47 4F4F0000 		.long	0x4f4f
 15978 4f4b 5F4F0000 		.long	0x4f5f
 15979 4f4f 08       		.uleb128 0x8
 15980 4f50 61AE0000 		.long	0xae61
 15981 4f54 09       		.uleb128 0x9
 15982 4f55 12480000 		.long	0x4812
 15983 4f59 09       		.uleb128 0x9
 15984 4f5a 12480000 		.long	0x4812
 15985 4f5e 00       		.byte	0
 15986 4f5f 34       		.uleb128 0x34
 15987 4f60 00000000 		.long	.LASF13
 15988 4f64 06       		.byte	0x6
 15989 4f65 AA04     		.value	0x4aa
 15990 4f67 00000000 		.long	.LASF722
 15991 4f6b 01       		.byte	0x1
 15992 4f6c 744F0000 		.long	0x4f74
 15993 4f70 7F4F0000 		.long	0x4f7f
 15994 4f74 08       		.uleb128 0x8
 15995 4f75 61AE0000 		.long	0xae61
 15996 4f79 09       		.uleb128 0x9
 15997 4f7a 80AE0000 		.long	0xae80
 15998 4f7e 00       		.byte	0
 15999 4f7f 34       		.uleb128 0x34
 16000 4f80 00000000 		.long	.LASF182
 16001 4f84 06       		.byte	0x6
 16002 4f85 BB04     		.value	0x4bb
 16003 4f87 00000000 		.long	.LASF723
 16004 4f8b 01       		.byte	0x1
 16005 4f8c 944F0000 		.long	0x4f94
 16006 4f90 9A4F0000 		.long	0x4f9a
 16007 4f94 08       		.uleb128 0x8
 16008 4f95 61AE0000 		.long	0xae61
 16009 4f99 00       		.byte	0
 16010 4f9a 34       		.uleb128 0x34
 16011 4f9b 00000000 		.long	.LASF619
GAS LISTING /tmp/ccmMnd7l.s 			page 583


 16012 4f9f 06       		.byte	0x6
 16013 4fa0 1205     		.value	0x512
 16014 4fa2 00000000 		.long	.LASF724
 16015 4fa6 02       		.byte	0x2
 16016 4fa7 AF4F0000 		.long	0x4faf
 16017 4fab BF4F0000 		.long	0x4fbf
 16018 4faf 08       		.uleb128 0x8
 16019 4fb0 61AE0000 		.long	0xae61
 16020 4fb4 09       		.uleb128 0x9
 16021 4fb5 36480000 		.long	0x4836
 16022 4fb9 09       		.uleb128 0x9
 16023 4fba 6DAE0000 		.long	0xae6d
 16024 4fbe 00       		.byte	0
 16025 4fbf 34       		.uleb128 0x34
 16026 4fc0 00000000 		.long	.LASF621
 16027 4fc4 06       		.byte	0x6
 16028 4fc5 1C05     		.value	0x51c
 16029 4fc7 00000000 		.long	.LASF725
 16030 4fcb 02       		.byte	0x2
 16031 4fcc D44F0000 		.long	0x4fd4
 16032 4fd0 DF4F0000 		.long	0x4fdf
 16033 4fd4 08       		.uleb128 0x8
 16034 4fd5 61AE0000 		.long	0xae61
 16035 4fd9 09       		.uleb128 0x9
 16036 4fda 36480000 		.long	0x4836
 16037 4fde 00       		.byte	0
 16038 4fdf 0E       		.uleb128 0xe
 16039 4fe0 00000000 		.long	.LASF623
 16040 4fe4 30       		.byte	0x30
 16041 4fe5 E1       		.byte	0xe1
 16042 4fe6 00000000 		.long	.LASF726
 16043 4fea 02       		.byte	0x2
 16044 4feb F34F0000 		.long	0x4ff3
 16045 4fef 03500000 		.long	0x5003
 16046 4ff3 08       		.uleb128 0x8
 16047 4ff4 61AE0000 		.long	0xae61
 16048 4ff8 09       		.uleb128 0x9
 16049 4ff9 85060000 		.long	0x685
 16050 4ffd 09       		.uleb128 0x9
 16051 4ffe 6DAE0000 		.long	0xae6d
 16052 5002 00       		.byte	0
 16053 5003 34       		.uleb128 0x34
 16054 5004 00000000 		.long	.LASF625
 16055 5008 30       		.byte	0x30
 16056 5009 C101     		.value	0x1c1
 16057 500b 00000000 		.long	.LASF727
 16058 500f 02       		.byte	0x2
 16059 5010 18500000 		.long	0x5018
 16060 5014 2D500000 		.long	0x502d
 16061 5018 08       		.uleb128 0x8
 16062 5019 61AE0000 		.long	0xae61
 16063 501d 09       		.uleb128 0x9
 16064 501e 06480000 		.long	0x4806
 16065 5022 09       		.uleb128 0x9
 16066 5023 36480000 		.long	0x4836
 16067 5027 09       		.uleb128 0x9
 16068 5028 6DAE0000 		.long	0xae6d
GAS LISTING /tmp/ccmMnd7l.s 			page 584


 16069 502c 00       		.byte	0
 16070 502d 34       		.uleb128 0x34
 16071 502e 00000000 		.long	.LASF627
 16072 5032 30       		.byte	0x30
 16073 5033 1C02     		.value	0x21c
 16074 5035 00000000 		.long	.LASF728
 16075 5039 02       		.byte	0x2
 16076 503a 42500000 		.long	0x5042
 16077 503e 4D500000 		.long	0x504d
 16078 5042 08       		.uleb128 0x8
 16079 5043 61AE0000 		.long	0xae61
 16080 5047 09       		.uleb128 0x9
 16081 5048 36480000 		.long	0x4836
 16082 504c 00       		.byte	0
 16083 504d 32       		.uleb128 0x32
 16084 504e 00000000 		.long	.LASF629
 16085 5052 30       		.byte	0x30
 16086 5053 4E02     		.value	0x24e
 16087 5055 00000000 		.long	.LASF729
 16088 5059 E0800000 		.long	0x80e0
 16089 505d 02       		.byte	0x2
 16090 505e 66500000 		.long	0x5066
 16091 5062 6C500000 		.long	0x506c
 16092 5066 08       		.uleb128 0x8
 16093 5067 61AE0000 		.long	0xae61
 16094 506b 00       		.byte	0
 16095 506c 32       		.uleb128 0x32
 16096 506d 00000000 		.long	.LASF631
 16097 5071 06       		.byte	0x6
 16098 5072 8E05     		.value	0x58e
 16099 5074 00000000 		.long	.LASF730
 16100 5078 36480000 		.long	0x4836
 16101 507c 02       		.byte	0x2
 16102 507d 85500000 		.long	0x5085
 16103 5081 95500000 		.long	0x5095
 16104 5085 08       		.uleb128 0x8
 16105 5086 86AE0000 		.long	0xae86
 16106 508a 09       		.uleb128 0x9
 16107 508b 36480000 		.long	0x4836
 16108 508f 09       		.uleb128 0x9
 16109 5090 069A0000 		.long	0x9a06
 16110 5094 00       		.byte	0
 16111 5095 34       		.uleb128 0x34
 16112 5096 00000000 		.long	.LASF633
 16113 509a 06       		.byte	0x6
 16114 509b 9C05     		.value	0x59c
 16115 509d 00000000 		.long	.LASF731
 16116 50a1 02       		.byte	0x2
 16117 50a2 AA500000 		.long	0x50aa
 16118 50a6 B5500000 		.long	0x50b5
 16119 50aa 08       		.uleb128 0x8
 16120 50ab 61AE0000 		.long	0xae61
 16121 50af 09       		.uleb128 0x9
 16122 50b0 E2470000 		.long	0x47e2
 16123 50b4 00       		.byte	0
 16124 50b5 0D       		.uleb128 0xd
 16125 50b6 00000000 		.long	.LASF635
GAS LISTING /tmp/ccmMnd7l.s 			page 585


 16126 50ba 30       		.byte	0x30
 16127 50bb 8D       		.byte	0x8d
 16128 50bc 00000000 		.long	.LASF732
 16129 50c0 06480000 		.long	0x4806
 16130 50c4 02       		.byte	0x2
 16131 50c5 CD500000 		.long	0x50cd
 16132 50c9 D8500000 		.long	0x50d8
 16133 50cd 08       		.uleb128 0x8
 16134 50ce 61AE0000 		.long	0xae61
 16135 50d2 09       		.uleb128 0x9
 16136 50d3 06480000 		.long	0x4806
 16137 50d7 00       		.byte	0
 16138 50d8 0D       		.uleb128 0xd
 16139 50d9 00000000 		.long	.LASF635
 16140 50dd 30       		.byte	0x30
 16141 50de 99       		.byte	0x99
 16142 50df 00000000 		.long	.LASF733
 16143 50e3 06480000 		.long	0x4806
 16144 50e7 02       		.byte	0x2
 16145 50e8 F0500000 		.long	0x50f0
 16146 50ec 00510000 		.long	0x5100
 16147 50f0 08       		.uleb128 0x8
 16148 50f1 61AE0000 		.long	0xae61
 16149 50f5 09       		.uleb128 0x9
 16150 50f6 06480000 		.long	0x4806
 16151 50fa 09       		.uleb128 0x9
 16152 50fb 06480000 		.long	0x4806
 16153 50ff 00       		.byte	0
 16154 5100 2B       		.uleb128 0x2b
 16155 5101 00000000 		.long	.LASF638
 16156 5105 06       		.byte	0x6
 16157 5106 AE05     		.value	0x5ae
 16158 5108 00000000 		.long	.LASF734
 16159 510c 14510000 		.long	0x5114
 16160 5110 24510000 		.long	0x5124
 16161 5114 08       		.uleb128 0x8
 16162 5115 61AE0000 		.long	0xae61
 16163 5119 09       		.uleb128 0x9
 16164 511a 79AE0000 		.long	0xae79
 16165 511e 09       		.uleb128 0x9
 16166 511f 5F070000 		.long	0x75f
 16167 5123 00       		.byte	0
 16168 5124 2B       		.uleb128 0x2b
 16169 5125 00000000 		.long	.LASF638
 16170 5129 06       		.byte	0x6
 16171 512a B905     		.value	0x5b9
 16172 512c 00000000 		.long	.LASF735
 16173 5130 38510000 		.long	0x5138
 16174 5134 48510000 		.long	0x5148
 16175 5138 08       		.uleb128 0x8
 16176 5139 61AE0000 		.long	0xae61
 16177 513d 09       		.uleb128 0x9
 16178 513e 79AE0000 		.long	0xae79
 16179 5142 09       		.uleb128 0x9
 16180 5143 5C340000 		.long	0x345c
 16181 5147 00       		.byte	0
 16182 5148 18       		.uleb128 0x18
GAS LISTING /tmp/ccmMnd7l.s 			page 586


 16183 5149 5F547000 		.string	"_Tp"
 16184 514d 18810000 		.long	0x8118
 16185 5151 36       		.uleb128 0x36
 16186 5152 00000000 		.long	.LASF303
 16187 5156 DD410000 		.long	0x41dd
 16188 515a 00       		.byte	0
 16189 515b 14       		.uleb128 0x14
 16190 515c 00000000 		.long	.LASF736
 16191 5160 14       		.uleb128 0x14
 16192 5161 00000000 		.long	.LASF737
 16193 5165 11       		.uleb128 0x11
 16194 5166 A0470000 		.long	0x47a0
 16195 516a 05       		.uleb128 0x5
 16196 516b 00000000 		.long	.LASF738
 16197 516f 10       		.byte	0x10
 16198 5170 26       		.byte	0x26
 16199 5171 2F       		.byte	0x2f
 16200 5172 4A520000 		.long	0x524a
 16201 5176 22       		.uleb128 0x22
 16202 5177 00000000 		.long	.LASF68
 16203 517b 26       		.byte	0x26
 16204 517c 36       		.byte	0x36
 16205 517d D6AD0000 		.long	0xadd6
 16206 5181 01       		.byte	0x1
 16207 5182 06       		.uleb128 0x6
 16208 5183 00000000 		.long	.LASF308
 16209 5187 26       		.byte	0x26
 16210 5188 3A       		.byte	0x3a
 16211 5189 76510000 		.long	0x5176
 16212 518d 00       		.byte	0
 16213 518e 22       		.uleb128 0x22
 16214 518f 00000000 		.long	.LASF57
 16215 5193 26       		.byte	0x26
 16216 5194 35       		.byte	0x35
 16217 5195 85060000 		.long	0x685
 16218 5199 01       		.byte	0x1
 16219 519a 06       		.uleb128 0x6
 16220 519b 00000000 		.long	.LASF309
 16221 519f 26       		.byte	0x26
 16222 51a0 3B       		.byte	0x3b
 16223 51a1 8E510000 		.long	0x518e
 16224 51a5 08       		.byte	0x8
 16225 51a6 22       		.uleb128 0x22
 16226 51a7 00000000 		.long	.LASF69
 16227 51ab 26       		.byte	0x26
 16228 51ac 37       		.byte	0x37
 16229 51ad D6AD0000 		.long	0xadd6
 16230 51b1 01       		.byte	0x1
 16231 51b2 37       		.uleb128 0x37
 16232 51b3 00000000 		.long	.LASF310
 16233 51b7 26       		.byte	0x26
 16234 51b8 3E       		.byte	0x3e
 16235 51b9 C1510000 		.long	0x51c1
 16236 51bd D1510000 		.long	0x51d1
 16237 51c1 08       		.uleb128 0x8
 16238 51c2 69B00000 		.long	0xb069
 16239 51c6 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 587


 16240 51c7 A6510000 		.long	0x51a6
 16241 51cb 09       		.uleb128 0x9
 16242 51cc 8E510000 		.long	0x518e
 16243 51d0 00       		.byte	0
 16244 51d1 0C       		.uleb128 0xc
 16245 51d2 00000000 		.long	.LASF310
 16246 51d6 26       		.byte	0x26
 16247 51d7 42       		.byte	0x42
 16248 51d8 01       		.byte	0x1
 16249 51d9 E1510000 		.long	0x51e1
 16250 51dd E7510000 		.long	0x51e7
 16251 51e1 08       		.uleb128 0x8
 16252 51e2 69B00000 		.long	0xb069
 16253 51e6 00       		.byte	0
 16254 51e7 0D       		.uleb128 0xd
 16255 51e8 00000000 		.long	.LASF168
 16256 51ec 26       		.byte	0x26
 16257 51ed 47       		.byte	0x47
 16258 51ee 00000000 		.long	.LASF739
 16259 51f2 8E510000 		.long	0x518e
 16260 51f6 01       		.byte	0x1
 16261 51f7 FF510000 		.long	0x51ff
 16262 51fb 05520000 		.long	0x5205
 16263 51ff 08       		.uleb128 0x8
 16264 5200 6FB00000 		.long	0xb06f
 16265 5204 00       		.byte	0
 16266 5205 0D       		.uleb128 0xd
 16267 5206 00000000 		.long	.LASF149
 16268 520a 26       		.byte	0x26
 16269 520b 4B       		.byte	0x4b
 16270 520c 00000000 		.long	.LASF740
 16271 5210 A6510000 		.long	0x51a6
 16272 5214 01       		.byte	0x1
 16273 5215 1D520000 		.long	0x521d
 16274 5219 23520000 		.long	0x5223
 16275 521d 08       		.uleb128 0x8
 16276 521e 6FB00000 		.long	0xb06f
 16277 5222 00       		.byte	0
 16278 5223 38       		.uleb128 0x38
 16279 5224 656E6400 		.string	"end"
 16280 5228 26       		.byte	0x26
 16281 5229 4F       		.byte	0x4f
 16282 522a 00000000 		.long	.LASF741
 16283 522e A6510000 		.long	0x51a6
 16284 5232 01       		.byte	0x1
 16285 5233 3B520000 		.long	0x523b
 16286 5237 41520000 		.long	0x5241
 16287 523b 08       		.uleb128 0x8
 16288 523c 6FB00000 		.long	0xb06f
 16289 5240 00       		.byte	0
 16290 5241 18       		.uleb128 0x18
 16291 5242 5F4500   		.string	"_E"
 16292 5245 18810000 		.long	0x8118
 16293 5249 00       		.byte	0
 16294 524a 16       		.uleb128 0x16
 16295 524b 00000000 		.long	.LASF742
 16296 524f 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 588


 16297 5250 31       		.byte	0x31
 16298 5251 AF       		.byte	0xaf
 16299 5252 8C520000 		.long	0x528c
 16300 5256 13       		.uleb128 0x13
 16301 5257 00000000 		.long	.LASF19
 16302 525b 31       		.byte	0x31
 16303 525c B2       		.byte	0xb2
 16304 525d 29000000 		.long	0x29
 16305 5261 13       		.uleb128 0x13
 16306 5262 00000000 		.long	.LASF496
 16307 5266 31       		.byte	0x31
 16308 5267 B3       		.byte	0xb3
 16309 5268 54070000 		.long	0x754
 16310 526c 13       		.uleb128 0x13
 16311 526d 00000000 		.long	.LASF489
 16312 5271 31       		.byte	0x31
 16313 5272 B4       		.byte	0xb4
 16314 5273 01AD0000 		.long	0xad01
 16315 5277 13       		.uleb128 0x13
 16316 5278 00000000 		.long	.LASF58
 16317 527c 31       		.byte	0x31
 16318 527d B5       		.byte	0xb5
 16319 527e 12AD0000 		.long	0xad12
 16320 5282 35       		.uleb128 0x35
 16321 5283 00000000 		.long	.LASF743
 16322 5287 01AD0000 		.long	0xad01
 16323 528b 00       		.byte	0
 16324 528c 12       		.uleb128 0x12
 16325 528d 32       		.byte	0x32
 16326 528e 50       		.byte	0x50
 16327 528f 9D950000 		.long	0x959d
 16328 5293 12       		.uleb128 0x12
 16329 5294 32       		.byte	0x32
 16330 5295 51       		.byte	0x51
 16331 5296 BC950000 		.long	0x95bc
 16332 529a 12       		.uleb128 0x12
 16333 529b 32       		.byte	0x32
 16334 529c 52       		.byte	0x52
 16335 529d 9D950000 		.long	0x959d
 16336 52a1 12       		.uleb128 0x12
 16337 52a2 32       		.byte	0x32
 16338 52a3 53       		.byte	0x53
 16339 52a4 9D950000 		.long	0x959d
 16340 52a8 12       		.uleb128 0x12
 16341 52a9 32       		.byte	0x32
 16342 52aa 54       		.byte	0x54
 16343 52ab 9D950000 		.long	0x959d
 16344 52af 5F       		.uleb128 0x5f
 16345 52b0 04       		.byte	0x4
 16346 52b1 0C       		.byte	0xc
 16347 52b2 5207     		.value	0x752
 16348 52b4 BF520000 		.long	0x52bf
 16349 52b8 3F       		.uleb128 0x3f
 16350 52b9 00000000 		.long	.LASF744
 16351 52bd 10       		.sleb128 16
 16352 52be 00       		.byte	0
 16353 52bf 16       		.uleb128 0x16
GAS LISTING /tmp/ccmMnd7l.s 			page 589


 16354 52c0 00000000 		.long	.LASF745
 16355 52c4 01       		.byte	0x1
 16356 52c5 31       		.byte	0x31
 16357 52c6 BA       		.byte	0xba
 16358 52c7 F6520000 		.long	0x52f6
 16359 52cb 13       		.uleb128 0x13
 16360 52cc 00000000 		.long	.LASF496
 16361 52d0 31       		.byte	0x31
 16362 52d1 BE       		.byte	0xbe
 16363 52d2 54070000 		.long	0x754
 16364 52d6 13       		.uleb128 0x13
 16365 52d7 00000000 		.long	.LASF489
 16366 52db 31       		.byte	0x31
 16367 52dc BF       		.byte	0xbf
 16368 52dd 07AD0000 		.long	0xad07
 16369 52e1 13       		.uleb128 0x13
 16370 52e2 00000000 		.long	.LASF58
 16371 52e6 31       		.byte	0x31
 16372 52e7 C0       		.byte	0xc0
 16373 52e8 18AD0000 		.long	0xad18
 16374 52ec 35       		.uleb128 0x35
 16375 52ed 00000000 		.long	.LASF743
 16376 52f1 07AD0000 		.long	0xad07
 16377 52f5 00       		.byte	0
 16378 52f6 16       		.uleb128 0x16
 16379 52f7 00000000 		.long	.LASF746
 16380 52fb 01       		.byte	0x1
 16381 52fc 05       		.byte	0x5
 16382 52fd 28       		.byte	0x28
 16383 52fe 1D530000 		.long	0x531d
 16384 5302 60       		.uleb128 0x60
 16385 5303 00000000 		.long	.LASF462
 16386 5307 05       		.byte	0x5
 16387 5308 29       		.byte	0x29
 16388 5309 00000000 		.long	.LASF748
 16389 530d 11530000 		.long	0x5311
 16390 5311 08       		.uleb128 0x8
 16391 5312 51B00000 		.long	0xb051
 16392 5316 09       		.uleb128 0x9
 16393 5317 57B00000 		.long	0xb057
 16394 531b 00       		.byte	0
 16395 531c 00       		.byte	0
 16396 531d 16       		.uleb128 0x16
 16397 531e 00000000 		.long	.LASF749
 16398 5322 01       		.byte	0x1
 16399 5323 05       		.byte	0x5
 16400 5324 2C       		.byte	0x2c
 16401 5325 44530000 		.long	0x5344
 16402 5329 60       		.uleb128 0x60
 16403 532a 00000000 		.long	.LASF462
 16404 532e 05       		.byte	0x5
 16405 532f 2D       		.byte	0x2d
 16406 5330 00000000 		.long	.LASF750
 16407 5334 38530000 		.long	0x5338
 16408 5338 08       		.uleb128 0x8
 16409 5339 5DB00000 		.long	0xb05d
 16410 533d 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 590


 16411 533e 63B00000 		.long	0xb063
 16412 5342 00       		.byte	0
 16413 5343 00       		.byte	0
 16414 5344 11       		.uleb128 0x11
 16415 5345 6A510000 		.long	0x516a
 16416 5349 3B       		.uleb128 0x3b
 16417 534a 00000000 		.long	.LASF751
 16418 534e 08       		.byte	0x8
 16419 534f 04       		.byte	0x4
 16420 5350 8406     		.value	0x684
 16421 5352 64550000 		.long	0x5564
 16422 5356 61       		.uleb128 0x61
 16423 5357 00000000 		.long	.LASF753
 16424 535b 08       		.byte	0x8
 16425 535c 04       		.byte	0x4
 16426 535d 8D06     		.value	0x68d
 16427 535f 01       		.byte	0x1
 16428 5360 D5530000 		.long	0x53d5
 16429 5364 62       		.uleb128 0x62
 16430 5365 00000000 		.long	.LASF318
 16431 5369 04       		.byte	0x4
 16432 536a A606     		.value	0x6a6
 16433 536c D8800000 		.long	0x80d8
 16434 5370 00       		.byte	0
 16435 5371 03       		.byte	0x3
 16436 5372 62       		.uleb128 0x62
 16437 5373 00000000 		.long	.LASF752
 16438 5377 04       		.byte	0x4
 16439 5378 A706     		.value	0x6a7
 16440 537a D8800000 		.long	0x80d8
 16441 537e 04       		.byte	0x4
 16442 537f 03       		.byte	0x3
 16443 5380 63       		.uleb128 0x63
 16444 5381 00000000 		.long	.LASF753
 16445 5385 04       		.byte	0x4
 16446 5386 9206     		.value	0x692
 16447 5388 90530000 		.long	0x5390
 16448 538c A0530000 		.long	0x53a0
 16449 5390 08       		.uleb128 0x8
 16450 5391 75B00000 		.long	0xb075
 16451 5395 09       		.uleb128 0x9
 16452 5396 D8800000 		.long	0x80d8
 16453 539a 09       		.uleb128 0x9
 16454 539b D8800000 		.long	0x80d8
 16455 539f 00       		.byte	0
 16456 53a0 64       		.uleb128 0x64
 16457 53a1 6100     		.string	"a"
 16458 53a3 04       		.byte	0x4
 16459 53a4 9A06     		.value	0x69a
 16460 53a6 00000000 		.long	.LASF1667
 16461 53aa D5530000 		.long	0x53d5
 16462 53ae B6530000 		.long	0x53b6
 16463 53b2 BC530000 		.long	0x53bc
 16464 53b6 08       		.uleb128 0x8
 16465 53b7 7BB00000 		.long	0xb07b
 16466 53bb 00       		.byte	0
 16467 53bc 65       		.uleb128 0x65
GAS LISTING /tmp/ccmMnd7l.s 			page 591


 16468 53bd 6200     		.string	"b"
 16469 53bf 04       		.byte	0x4
 16470 53c0 9E06     		.value	0x69e
 16471 53c2 00000000 		.long	.LASF1668
 16472 53c6 D5530000 		.long	0x53d5
 16473 53ca CE530000 		.long	0x53ce
 16474 53ce 08       		.uleb128 0x8
 16475 53cf 7BB00000 		.long	0xb07b
 16476 53d3 00       		.byte	0
 16477 53d4 00       		.byte	0
 16478 53d5 44       		.uleb128 0x44
 16479 53d6 00000000 		.long	.LASF443
 16480 53da 04       		.byte	0x4
 16481 53db 8B06     		.value	0x68b
 16482 53dd D8800000 		.long	0x80d8
 16483 53e1 01       		.byte	0x1
 16484 53e2 11       		.uleb128 0x11
 16485 53e3 56530000 		.long	0x5356
 16486 53e7 26       		.uleb128 0x26
 16487 53e8 00000000 		.long	.LASF754
 16488 53ec 04       		.byte	0x4
 16489 53ed 1A07     		.value	0x71a
 16490 53ef 56530000 		.long	0x5356
 16491 53f3 00       		.byte	0
 16492 53f4 31       		.uleb128 0x31
 16493 53f5 00000000 		.long	.LASF755
 16494 53f9 04       		.byte	0x4
 16495 53fa AF06     		.value	0x6af
 16496 53fc 01       		.byte	0x1
 16497 53fd 05540000 		.long	0x5405
 16498 5401 15540000 		.long	0x5415
 16499 5405 08       		.uleb128 0x8
 16500 5406 81B00000 		.long	0xb081
 16501 540a 09       		.uleb128 0x9
 16502 540b D8800000 		.long	0x80d8
 16503 540f 09       		.uleb128 0x9
 16504 5410 D8800000 		.long	0x80d8
 16505 5414 00       		.byte	0
 16506 5415 31       		.uleb128 0x31
 16507 5416 00000000 		.long	.LASF755
 16508 541a 04       		.byte	0x4
 16509 541b B506     		.value	0x6b5
 16510 541d 01       		.byte	0x1
 16511 541e 26540000 		.long	0x5426
 16512 5422 31540000 		.long	0x5431
 16513 5426 08       		.uleb128 0x8
 16514 5427 81B00000 		.long	0xb081
 16515 542b 09       		.uleb128 0x9
 16516 542c 87B00000 		.long	0xb087
 16517 5430 00       		.byte	0
 16518 5431 34       		.uleb128 0x34
 16519 5432 00000000 		.long	.LASF756
 16520 5436 04       		.byte	0x4
 16521 5437 BF06     		.value	0x6bf
 16522 5439 00000000 		.long	.LASF757
 16523 543d 01       		.byte	0x1
 16524 543e 46540000 		.long	0x5446
GAS LISTING /tmp/ccmMnd7l.s 			page 592


 16525 5442 4C540000 		.long	0x544c
 16526 5446 08       		.uleb128 0x8
 16527 5447 81B00000 		.long	0xb081
 16528 544b 00       		.byte	0
 16529 544c 33       		.uleb128 0x33
 16530 544d 6100     		.string	"a"
 16531 544f 04       		.byte	0x4
 16532 5450 C206     		.value	0x6c2
 16533 5452 00000000 		.long	.LASF758
 16534 5456 D5530000 		.long	0x53d5
 16535 545a 01       		.byte	0x1
 16536 545b 63540000 		.long	0x5463
 16537 545f 69540000 		.long	0x5469
 16538 5463 08       		.uleb128 0x8
 16539 5464 8DB00000 		.long	0xb08d
 16540 5468 00       		.byte	0
 16541 5469 33       		.uleb128 0x33
 16542 546a 6200     		.string	"b"
 16543 546c 04       		.byte	0x4
 16544 546d C606     		.value	0x6c6
 16545 546f 00000000 		.long	.LASF759
 16546 5473 D5530000 		.long	0x53d5
 16547 5477 01       		.byte	0x1
 16548 5478 80540000 		.long	0x5480
 16549 547c 86540000 		.long	0x5486
 16550 5480 08       		.uleb128 0x8
 16551 5481 8DB00000 		.long	0xb08d
 16552 5485 00       		.byte	0
 16553 5486 32       		.uleb128 0x32
 16554 5487 00000000 		.long	.LASF760
 16555 548b 04       		.byte	0x4
 16556 548c CD06     		.value	0x6cd
 16557 548e 00000000 		.long	.LASF761
 16558 5492 56530000 		.long	0x5356
 16559 5496 01       		.byte	0x1
 16560 5497 9F540000 		.long	0x549f
 16561 549b A5540000 		.long	0x54a5
 16562 549f 08       		.uleb128 0x8
 16563 54a0 8DB00000 		.long	0xb08d
 16564 54a4 00       		.byte	0
 16565 54a5 34       		.uleb128 0x34
 16566 54a6 00000000 		.long	.LASF760
 16567 54aa 04       		.byte	0x4
 16568 54ab D506     		.value	0x6d5
 16569 54ad 00000000 		.long	.LASF762
 16570 54b1 01       		.byte	0x1
 16571 54b2 BA540000 		.long	0x54ba
 16572 54b6 C5540000 		.long	0x54c5
 16573 54ba 08       		.uleb128 0x8
 16574 54bb 81B00000 		.long	0xb081
 16575 54bf 09       		.uleb128 0x9
 16576 54c0 87B00000 		.long	0xb087
 16577 54c4 00       		.byte	0
 16578 54c5 33       		.uleb128 0x33
 16579 54c6 6D696E00 		.string	"min"
 16580 54ca 04       		.byte	0x4
 16581 54cb DC06     		.value	0x6dc
GAS LISTING /tmp/ccmMnd7l.s 			page 593


 16582 54cd 00000000 		.long	.LASF763
 16583 54d1 D5530000 		.long	0x53d5
 16584 54d5 01       		.byte	0x1
 16585 54d6 DE540000 		.long	0x54de
 16586 54da E4540000 		.long	0x54e4
 16587 54de 08       		.uleb128 0x8
 16588 54df 8DB00000 		.long	0xb08d
 16589 54e3 00       		.byte	0
 16590 54e4 33       		.uleb128 0x33
 16591 54e5 6D617800 		.string	"max"
 16592 54e9 04       		.byte	0x4
 16593 54ea E306     		.value	0x6e3
 16594 54ec 00000000 		.long	.LASF764
 16595 54f0 D5530000 		.long	0x53d5
 16596 54f4 01       		.byte	0x1
 16597 54f5 FD540000 		.long	0x54fd
 16598 54f9 03550000 		.long	0x5503
 16599 54fd 08       		.uleb128 0x8
 16600 54fe 8DB00000 		.long	0xb08d
 16601 5502 00       		.byte	0
 16602 5503 66       		.uleb128 0x66
 16603 5504 00000000 		.long	.LASF765
 16604 5508 04       		.byte	0x4
 16605 5509 EB06     		.value	0x6eb
 16606 550b D5530000 		.long	0x53d5
 16607 550f 01       		.byte	0x1
 16608 5510 21550000 		.long	0x5521
 16609 5514 2C550000 		.long	0x552c
 16610 5518 35       		.uleb128 0x35
 16611 5519 00000000 		.long	.LASF766
 16612 551d 812C0000 		.long	0x2c81
 16613 5521 08       		.uleb128 0x8
 16614 5522 81B00000 		.long	0xb081
 16615 5526 09       		.uleb128 0x9
 16616 5527 D5B00000 		.long	0xb0d5
 16617 552b 00       		.byte	0
 16618 552c 66       		.uleb128 0x66
 16619 552d 00000000 		.long	.LASF765
 16620 5531 03       		.byte	0x3
 16621 5532 6E03     		.value	0x36e
 16622 5534 D5530000 		.long	0x53d5
 16623 5538 01       		.byte	0x1
 16624 5539 4A550000 		.long	0x554a
 16625 553d 5A550000 		.long	0x555a
 16626 5541 35       		.uleb128 0x35
 16627 5542 00000000 		.long	.LASF766
 16628 5546 812C0000 		.long	0x2c81
 16629 554a 08       		.uleb128 0x8
 16630 554b 81B00000 		.long	0xb081
 16631 554f 09       		.uleb128 0x9
 16632 5550 D5B00000 		.long	0xb0d5
 16633 5554 09       		.uleb128 0x9
 16634 5555 87B00000 		.long	0xb087
 16635 5559 00       		.byte	0
 16636 555a 36       		.uleb128 0x36
 16637 555b 00000000 		.long	.LASF767
 16638 555f D8800000 		.long	0x80d8
GAS LISTING /tmp/ccmMnd7l.s 			page 594


 16639 5563 00       		.byte	0
 16640 5564 11       		.uleb128 0x11
 16641 5565 49530000 		.long	0x5349
 16642 5569 16       		.uleb128 0x16
 16643 556a 00000000 		.long	.LASF768
 16644 556e 01       		.byte	0x1
 16645 556f 31       		.byte	0x31
 16646 5570 AF       		.byte	0xaf
 16647 5571 A0550000 		.long	0x55a0
 16648 5575 13       		.uleb128 0x13
 16649 5576 00000000 		.long	.LASF496
 16650 557a 31       		.byte	0x31
 16651 557b B3       		.byte	0xb3
 16652 557c 54070000 		.long	0x754
 16653 5580 13       		.uleb128 0x13
 16654 5581 00000000 		.long	.LASF489
 16655 5585 31       		.byte	0x31
 16656 5586 B4       		.byte	0xb4
 16657 5587 D0AD0000 		.long	0xadd0
 16658 558b 13       		.uleb128 0x13
 16659 558c 00000000 		.long	.LASF58
 16660 5590 31       		.byte	0x31
 16661 5591 B5       		.byte	0xb5
 16662 5592 E1AD0000 		.long	0xade1
 16663 5596 35       		.uleb128 0x35
 16664 5597 00000000 		.long	.LASF743
 16665 559b D0AD0000 		.long	0xadd0
 16666 559f 00       		.byte	0
 16667 55a0 24       		.uleb128 0x24
 16668 55a1 00000000 		.long	.LASF769
 16669 55a5 01       		.byte	0x1
 16670 55a6 1B       		.byte	0x1b
 16671 55a7 E005     		.value	0x5e0
 16672 55a9 BA550000 		.long	0x55ba
 16673 55ad 5C       		.uleb128 0x5c
 16674 55ae 00000000 		.long	.LASF511
 16675 55b2 1B       		.byte	0x1b
 16676 55b3 E105     		.value	0x5e1
 16677 55b5 49530000 		.long	0x5349
 16678 55b9 00       		.byte	0
 16679 55ba 24       		.uleb128 0x24
 16680 55bb 00000000 		.long	.LASF770
 16681 55bf 01       		.byte	0x1
 16682 55c0 09       		.byte	0x9
 16683 55c1 A704     		.value	0x4a7
 16684 55c3 05560000 		.long	0x5605
 16685 55c7 1E       		.uleb128 0x1e
 16686 55c8 00000000 		.long	.LASF771
 16687 55cc 09       		.byte	0x9
 16688 55cd AC04     		.value	0x4ac
 16689 55cf 00000000 		.long	.LASF772
 16690 55d3 B0B00000 		.long	0xb0b0
 16691 55d7 E1550000 		.long	0x55e1
 16692 55db 09       		.uleb128 0x9
 16693 55dc B0B00000 		.long	0xb0b0
 16694 55e0 00       		.byte	0
 16695 55e1 1E       		.uleb128 0x1e
GAS LISTING /tmp/ccmMnd7l.s 			page 595


 16696 55e2 00000000 		.long	.LASF771
 16697 55e6 09       		.byte	0x9
 16698 55e7 B004     		.value	0x4b0
 16699 55e9 00000000 		.long	.LASF773
 16700 55ed B6B00000 		.long	0xb0b6
 16701 55f1 FB550000 		.long	0x55fb
 16702 55f5 09       		.uleb128 0x9
 16703 55f6 B6B00000 		.long	0xb0b6
 16704 55fa 00       		.byte	0
 16705 55fb 18       		.uleb128 0x18
 16706 55fc 5F547000 		.string	"_Tp"
 16707 5600 49530000 		.long	0x5349
 16708 5604 00       		.byte	0
 16709 5605 24       		.uleb128 0x24
 16710 5606 00000000 		.long	.LASF774
 16711 560a 01       		.byte	0x1
 16712 560b 1B       		.byte	0x1b
 16713 560c E005     		.value	0x5e0
 16714 560e 1F560000 		.long	0x561f
 16715 5612 5C       		.uleb128 0x5c
 16716 5613 00000000 		.long	.LASF511
 16717 5617 1B       		.byte	0x1b
 16718 5618 E105     		.value	0x5e1
 16719 561a 812C0000 		.long	0x2c81
 16720 561e 00       		.byte	0
 16721 561f 24       		.uleb128 0x24
 16722 5620 00000000 		.long	.LASF775
 16723 5624 01       		.byte	0x1
 16724 5625 09       		.byte	0x9
 16725 5626 4106     		.value	0x641
 16726 5628 57560000 		.long	0x5657
 16727 562c 5C       		.uleb128 0x5c
 16728 562d 00000000 		.long	.LASF511
 16729 5631 09       		.byte	0x9
 16730 5632 4606     		.value	0x646
 16731 5634 57560000 		.long	0x5657
 16732 5638 50       		.uleb128 0x50
 16733 5639 00000000 		.long	.LASF776
 16734 563d E0800000 		.long	0x80e0
 16735 5641 00       		.byte	0
 16736 5642 35       		.uleb128 0x35
 16737 5643 00000000 		.long	.LASF777
 16738 5647 F5C20000 		.long	0xc2f5
 16739 564b 67       		.uleb128 0x67
 16740 564c 00000000 		.long	.LASF825
 16741 5650 68       		.uleb128 0x68
 16742 5651 D5B00000 		.long	0xb0d5
 16743 5655 00       		.byte	0
 16744 5656 00       		.byte	0
 16745 5657 69       		.uleb128 0x69
 16746 5658 00000000 		.long	.LASF778
 16747 565c 9013     		.value	0x1390
 16748 565e 09       		.byte	0x9
 16749 565f E004     		.value	0x4e0
 16750 5661 64570000 		.long	0x5764
 16751 5665 25       		.uleb128 0x25
 16752 5666 C6570000 		.long	0x57c6
GAS LISTING /tmp/ccmMnd7l.s 			page 596


 16753 566a 00       		.byte	0
 16754 566b 62       		.uleb128 0x62
 16755 566c 00000000 		.long	.LASF779
 16756 5670 09       		.byte	0x9
 16757 5671 E704     		.value	0x4e7
 16758 5673 49530000 		.long	0x5349
 16759 5677 00       		.byte	0
 16760 5678 03       		.byte	0x3
 16761 5679 62       		.uleb128 0x62
 16762 567a 00000000 		.long	.LASF780
 16763 567e 09       		.byte	0x9
 16764 567f E804     		.value	0x4e8
 16765 5681 CF5A0000 		.long	0x5acf
 16766 5685 08       		.byte	0x8
 16767 5686 03       		.byte	0x3
 16768 5687 27       		.uleb128 0x27
 16769 5688 00000000 		.long	.LASF781
 16770 568c 09       		.byte	0x9
 16771 568d 1B05     		.value	0x51b
 16772 568f 97560000 		.long	0x5697
 16773 5693 A2560000 		.long	0x56a2
 16774 5697 08       		.uleb128 0x8
 16775 5698 25B10000 		.long	0xb125
 16776 569c 09       		.uleb128 0x9
 16777 569d 2BB10000 		.long	0xb12b
 16778 56a1 00       		.byte	0
 16779 56a2 27       		.uleb128 0x27
 16780 56a3 00000000 		.long	.LASF781
 16781 56a7 09       		.byte	0x9
 16782 56a8 1D05     		.value	0x51d
 16783 56aa B2560000 		.long	0x56b2
 16784 56ae BD560000 		.long	0x56bd
 16785 56b2 08       		.uleb128 0x8
 16786 56b3 25B10000 		.long	0xb125
 16787 56b7 09       		.uleb128 0x9
 16788 56b8 31B10000 		.long	0xb131
 16789 56bc 00       		.byte	0
 16790 56bd 63       		.uleb128 0x63
 16791 56be 00000000 		.long	.LASF782
 16792 56c2 09       		.byte	0x9
 16793 56c3 1205     		.value	0x512
 16794 56c5 DC560000 		.long	0x56dc
 16795 56c9 EC560000 		.long	0x56ec
 16796 56cd 6A       		.uleb128 0x6a
 16797 56ce 00000000 		.long	.LASF786
 16798 56d2 DC560000 		.long	0x56dc
 16799 56d6 68       		.uleb128 0x68
 16800 56d7 D5B00000 		.long	0xb0d5
 16801 56db 00       		.byte	0
 16802 56dc 08       		.uleb128 0x8
 16803 56dd 25B10000 		.long	0xb125
 16804 56e1 09       		.uleb128 0x9
 16805 56e2 B0B00000 		.long	0xb0b0
 16806 56e6 09       		.uleb128 0x9
 16807 56e7 D5B00000 		.long	0xb0d5
 16808 56eb 00       		.byte	0
 16809 56ec 66       		.uleb128 0x66
GAS LISTING /tmp/ccmMnd7l.s 			page 597


 16810 56ed 00000000 		.long	.LASF783
 16811 56f1 09       		.byte	0x9
 16812 56f2 ED04     		.value	0x4ed
 16813 56f4 D8800000 		.long	0x80d8
 16814 56f8 03       		.byte	0x3
 16815 56f9 22570000 		.long	0x5722
 16816 56fd 32570000 		.long	0x5732
 16817 5701 35       		.uleb128 0x35
 16818 5702 00000000 		.long	.LASF784
 16819 5706 D8800000 		.long	0x80d8
 16820 570a 6B       		.uleb128 0x6b
 16821 570b 00000000 		.long	.LASF786
 16822 570f 6C       		.uleb128 0x6c
 16823 5710 00000000 		.long	.LASF1567
 16824 5714 09       		.byte	0x9
 16825 5715 EB04     		.value	0x4eb
 16826 5717 22570000 		.long	0x5722
 16827 571b 6D       		.uleb128 0x6d
 16828 571c 03810000 		.long	0x8103
 16829 5720 00       		.byte	0
 16830 5721 00       		.byte	0
 16831 5722 08       		.uleb128 0x8
 16832 5723 25B10000 		.long	0xb125
 16833 5727 09       		.uleb128 0x9
 16834 5728 D3D20000 		.long	0xd2d3
 16835 572c 09       		.uleb128 0x9
 16836 572d F5570000 		.long	0x57f5
 16837 5731 00       		.byte	0
 16838 5732 6E       		.uleb128 0x6e
 16839 5733 00000000 		.long	.LASF785
 16840 5737 09       		.byte	0x9
 16841 5738 2705     		.value	0x527
 16842 573a D8800000 		.long	0x80d8
 16843 573e 54570000 		.long	0x5754
 16844 5742 5A570000 		.long	0x575a
 16845 5746 6B       		.uleb128 0x6b
 16846 5747 00000000 		.long	.LASF786
 16847 574b 35       		.uleb128 0x35
 16848 574c 00000000 		.long	.LASF784
 16849 5750 D8800000 		.long	0x80d8
 16850 5754 08       		.uleb128 0x8
 16851 5755 25B10000 		.long	0xb125
 16852 5759 00       		.byte	0
 16853 575a 35       		.uleb128 0x35
 16854 575b 00000000 		.long	.LASF787
 16855 575f C34F0100 		.long	0x14fc3
 16856 5763 00       		.byte	0
 16857 5764 16       		.uleb128 0x16
 16858 5765 00000000 		.long	.LASF788
 16859 5769 01       		.byte	0x1
 16860 576a 09       		.byte	0x9
 16861 576b 4E       		.byte	0x4e
 16862 576c 97570000 		.long	0x5797
 16863 5770 6F       		.uleb128 0x6f
 16864 5771 00000000 		.long	.LASF789
 16865 5775 7D570000 		.long	0x577d
 16866 5779 83570000 		.long	0x5783
GAS LISTING /tmp/ccmMnd7l.s 			page 598


 16867 577d 08       		.uleb128 0x8
 16868 577e 93B70000 		.long	0xb793
 16869 5782 00       		.byte	0
 16870 5783 50       		.uleb128 0x50
 16871 5784 00000000 		.long	.LASF790
 16872 5788 E0800000 		.long	0x80e0
 16873 578c 01       		.byte	0x1
 16874 578d 35       		.uleb128 0x35
 16875 578e 00000000 		.long	.LASF791
 16876 5792 49530000 		.long	0x5349
 16877 5796 00       		.byte	0
 16878 5797 16       		.uleb128 0x16
 16879 5798 00000000 		.long	.LASF792
 16880 579c 01       		.byte	0x1
 16881 579d 09       		.byte	0x9
 16882 579e 56       		.byte	0x56
 16883 579f C6570000 		.long	0x57c6
 16884 57a3 25       		.uleb128 0x25
 16885 57a4 64570000 		.long	0x5764
 16886 57a8 00       		.byte	0
 16887 57a9 6F       		.uleb128 0x6f
 16888 57aa 00000000 		.long	.LASF793
 16889 57ae B6570000 		.long	0x57b6
 16890 57b2 BC570000 		.long	0x57bc
 16891 57b6 08       		.uleb128 0x8
 16892 57b7 BAB70000 		.long	0xb7ba
 16893 57bb 00       		.byte	0
 16894 57bc 35       		.uleb128 0x35
 16895 57bd 00000000 		.long	.LASF791
 16896 57c1 49530000 		.long	0x5349
 16897 57c5 00       		.byte	0
 16898 57c6 16       		.uleb128 0x16
 16899 57c7 00000000 		.long	.LASF794
 16900 57cb 01       		.byte	0x1
 16901 57cc 09       		.byte	0x9
 16902 57cd B8       		.byte	0xb8
 16903 57ce F5570000 		.long	0x57f5
 16904 57d2 25       		.uleb128 0x25
 16905 57d3 97570000 		.long	0x5797
 16906 57d7 00       		.byte	0
 16907 57d8 6F       		.uleb128 0x6f
 16908 57d9 00000000 		.long	.LASF795
 16909 57dd E5570000 		.long	0x57e5
 16910 57e1 EB570000 		.long	0x57eb
 16911 57e5 08       		.uleb128 0x8
 16912 57e6 90C20000 		.long	0xc290
 16913 57ea 00       		.byte	0
 16914 57eb 35       		.uleb128 0x35
 16915 57ec 00000000 		.long	.LASF791
 16916 57f0 49530000 		.long	0x5349
 16917 57f4 00       		.byte	0
 16918 57f5 16       		.uleb128 0x16
 16919 57f6 00000000 		.long	.LASF796
 16920 57fa 01       		.byte	0x1
 16921 57fb 33       		.byte	0x33
 16922 57fc CE       		.byte	0xce
 16923 57fd 03580000 		.long	0x5803
GAS LISTING /tmp/ccmMnd7l.s 			page 599


 16924 5801 70       		.uleb128 0x70
 16925 5802 00       		.byte	0
 16926 5803 16       		.uleb128 0x16
 16927 5804 00000000 		.long	.LASF797
 16928 5808 01       		.byte	0x1
 16929 5809 0A       		.byte	0xa
 16930 580a BF       		.byte	0xbf
 16931 580b 53580000 		.long	0x5853
 16932 580f 37       		.uleb128 0x37
 16933 5810 00000000 		.long	.LASF798
 16934 5814 0A       		.byte	0xa
 16935 5815 C3       		.byte	0xc3
 16936 5816 1E580000 		.long	0x581e
 16937 581a 24580000 		.long	0x5824
 16938 581e 08       		.uleb128 0x8
 16939 581f BDB00000 		.long	0xb0bd
 16940 5823 00       		.byte	0
 16941 5824 0E       		.uleb128 0xe
 16942 5825 00000000 		.long	.LASF799
 16943 5829 0A       		.byte	0xa
 16944 582a CF       		.byte	0xcf
 16945 582b 00000000 		.long	.LASF800
 16946 582f 02       		.byte	0x2
 16947 5830 38580000 		.long	0x5838
 16948 5834 43580000 		.long	0x5843
 16949 5838 08       		.uleb128 0x8
 16950 5839 BDB00000 		.long	0xb0bd
 16951 583d 09       		.uleb128 0x9
 16952 583e C3B00000 		.long	0xb0c3
 16953 5842 00       		.byte	0
 16954 5843 50       		.uleb128 0x50
 16955 5844 00000000 		.long	.LASF801
 16956 5848 03810000 		.long	0x8103
 16957 584c 01       		.byte	0x1
 16958 584d 6B       		.uleb128 0x6b
 16959 584e 00000000 		.long	.LASF802
 16960 5852 00       		.byte	0
 16961 5853 71       		.uleb128 0x71
 16962 5854 00000000 		.long	.LASF803
 16963 5858 8813     		.value	0x1388
 16964 585a 0A       		.byte	0xa
 16965 585b 80       		.byte	0x80
 16966 585c 28590000 		.long	0x5928
 16967 5860 06       		.uleb128 0x6
 16968 5861 00000000 		.long	.LASF804
 16969 5865 0A       		.byte	0xa
 16970 5866 AC       		.byte	0xac
 16971 5867 812C0000 		.long	0x2c81
 16972 586b 00       		.byte	0
 16973 586c 37       		.uleb128 0x37
 16974 586d 00000000 		.long	.LASF805
 16975 5871 0A       		.byte	0xa
 16976 5872 82       		.byte	0x82
 16977 5873 7B580000 		.long	0x587b
 16978 5877 81580000 		.long	0x5881
 16979 587b 08       		.uleb128 0x8
 16980 587c C9B00000 		.long	0xb0c9
GAS LISTING /tmp/ccmMnd7l.s 			page 600


 16981 5880 00       		.byte	0
 16982 5881 37       		.uleb128 0x37
 16983 5882 00000000 		.long	.LASF805
 16984 5886 0A       		.byte	0xa
 16985 5887 85       		.byte	0x85
 16986 5888 90580000 		.long	0x5890
 16987 588c 9B580000 		.long	0x589b
 16988 5890 08       		.uleb128 0x8
 16989 5891 C9B00000 		.long	0xb0c9
 16990 5895 09       		.uleb128 0x9
 16991 5896 CFB00000 		.long	0xb0cf
 16992 589a 00       		.byte	0
 16993 589b 37       		.uleb128 0x37
 16994 589c 00000000 		.long	.LASF805
 16995 58a0 0A       		.byte	0xa
 16996 58a1 8E       		.byte	0x8e
 16997 58a2 AA580000 		.long	0x58aa
 16998 58a6 B5580000 		.long	0x58b5
 16999 58aa 08       		.uleb128 0x8
 17000 58ab C9B00000 		.long	0xb0c9
 17001 58af 09       		.uleb128 0x9
 17002 58b0 E4230000 		.long	0x23e4
 17003 58b4 00       		.byte	0
 17004 58b5 4E       		.uleb128 0x4e
 17005 58b6 00000000 		.long	.LASF806
 17006 58ba 0A       		.byte	0xa
 17007 58bb A7       		.byte	0xa7
 17008 58bc 00000000 		.long	.LASF807
 17009 58c0 D5B00000 		.long	0xb0d5
 17010 58c4 CE580000 		.long	0x58ce
 17011 58c8 09       		.uleb128 0x9
 17012 58c9 DBB00000 		.long	0xb0db
 17013 58cd 00       		.byte	0
 17014 58ce 4E       		.uleb128 0x4e
 17015 58cf 00000000 		.long	.LASF806
 17016 58d3 0A       		.byte	0xa
 17017 58d4 AA       		.byte	0xaa
 17018 58d5 00000000 		.long	.LASF808
 17019 58d9 CFB00000 		.long	0xb0cf
 17020 58dd E7580000 		.long	0x58e7
 17021 58e1 09       		.uleb128 0x9
 17022 58e2 E1B00000 		.long	0xb0e1
 17023 58e6 00       		.byte	0
 17024 58e7 37       		.uleb128 0x37
 17025 58e8 00000000 		.long	.LASF809
 17026 58ec 0A       		.byte	0xa
 17027 58ed 8B       		.byte	0x8b
 17028 58ee FF580000 		.long	0x58ff
 17029 58f2 0A590000 		.long	0x590a
 17030 58f6 35       		.uleb128 0x35
 17031 58f7 00000000 		.long	.LASF810
 17032 58fb D5B00000 		.long	0xb0d5
 17033 58ff 08       		.uleb128 0x8
 17034 5900 C9B00000 		.long	0xb0c9
 17035 5904 09       		.uleb128 0x9
 17036 5905 D5B00000 		.long	0xb0d5
 17037 5909 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 601


 17038 590a 50       		.uleb128 0x50
 17039 590b 00000000 		.long	.LASF801
 17040 590f 03810000 		.long	0x8103
 17041 5913 00       		.byte	0
 17042 5914 35       		.uleb128 0x35
 17043 5915 00000000 		.long	.LASF811
 17044 5919 812C0000 		.long	0x2c81
 17045 591d 50       		.uleb128 0x50
 17046 591e 00000000 		.long	.LASF812
 17047 5922 E0800000 		.long	0x80e0
 17048 5926 00       		.byte	0
 17049 5927 00       		.byte	0
 17050 5928 11       		.uleb128 0x11
 17051 5929 812C0000 		.long	0x2c81
 17052 592d 11       		.uleb128 0x11
 17053 592e 53580000 		.long	0x5853
 17054 5932 71       		.uleb128 0x71
 17055 5933 00000000 		.long	.LASF813
 17056 5937 8813     		.value	0x1388
 17057 5939 0A       		.byte	0xa
 17058 593a E5       		.byte	0xe5
 17059 593b CA5A0000 		.long	0x5aca
 17060 593f 25       		.uleb128 0x25
 17061 5940 03580000 		.long	0x5803
 17062 5944 00       		.byte	0
 17063 5945 21       		.uleb128 0x21
 17064 5946 53580000 		.long	0x5853
 17065 594a 00       		.byte	0
 17066 594b 03       		.byte	0x3
 17067 594c 13       		.uleb128 0x13
 17068 594d 00000000 		.long	.LASF814
 17069 5951 0A       		.byte	0xa
 17070 5952 EB       		.byte	0xeb
 17071 5953 03580000 		.long	0x5803
 17072 5957 4E       		.uleb128 0x4e
 17073 5958 00000000 		.long	.LASF806
 17074 595c 0A       		.byte	0xa
 17075 595d EF       		.byte	0xef
 17076 595e 00000000 		.long	.LASF815
 17077 5962 D5B00000 		.long	0xb0d5
 17078 5966 70590000 		.long	0x5970
 17079 596a 09       		.uleb128 0x9
 17080 596b E7B00000 		.long	0xb0e7
 17081 596f 00       		.byte	0
 17082 5970 4E       		.uleb128 0x4e
 17083 5971 00000000 		.long	.LASF806
 17084 5975 0A       		.byte	0xa
 17085 5976 F2       		.byte	0xf2
 17086 5977 00000000 		.long	.LASF816
 17087 597b CFB00000 		.long	0xb0cf
 17088 597f 89590000 		.long	0x5989
 17089 5983 09       		.uleb128 0x9
 17090 5984 EDB00000 		.long	0xb0ed
 17091 5988 00       		.byte	0
 17092 5989 4E       		.uleb128 0x4e
 17093 598a 00000000 		.long	.LASF817
 17094 598e 0A       		.byte	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 602


 17095 598f F5       		.byte	0xf5
 17096 5990 00000000 		.long	.LASF818
 17097 5994 F3B00000 		.long	0xb0f3
 17098 5998 A2590000 		.long	0x59a2
 17099 599c 09       		.uleb128 0x9
 17100 599d E7B00000 		.long	0xb0e7
 17101 59a1 00       		.byte	0
 17102 59a2 4E       		.uleb128 0x4e
 17103 59a3 00000000 		.long	.LASF817
 17104 59a7 0A       		.byte	0xa
 17105 59a8 F8       		.byte	0xf8
 17106 59a9 00000000 		.long	.LASF819
 17107 59ad F9B00000 		.long	0xb0f9
 17108 59b1 BB590000 		.long	0x59bb
 17109 59b5 09       		.uleb128 0x9
 17110 59b6 EDB00000 		.long	0xb0ed
 17111 59ba 00       		.byte	0
 17112 59bb 11       		.uleb128 0x11
 17113 59bc 4C590000 		.long	0x594c
 17114 59c0 37       		.uleb128 0x37
 17115 59c1 00000000 		.long	.LASF798
 17116 59c5 0A       		.byte	0xa
 17117 59c6 FA       		.byte	0xfa
 17118 59c7 CF590000 		.long	0x59cf
 17119 59cb D5590000 		.long	0x59d5
 17120 59cf 08       		.uleb128 0x8
 17121 59d0 FFB00000 		.long	0xb0ff
 17122 59d4 00       		.byte	0
 17123 59d5 07       		.uleb128 0x7
 17124 59d6 00000000 		.long	.LASF798
 17125 59da 0A       		.byte	0xa
 17126 59db FE       		.byte	0xfe
 17127 59dc E4590000 		.long	0x59e4
 17128 59e0 EF590000 		.long	0x59ef
 17129 59e4 08       		.uleb128 0x8
 17130 59e5 FFB00000 		.long	0xb0ff
 17131 59e9 09       		.uleb128 0x9
 17132 59ea CFB00000 		.long	0xb0cf
 17133 59ee 00       		.byte	0
 17134 59ef 27       		.uleb128 0x27
 17135 59f0 00000000 		.long	.LASF798
 17136 59f4 0A       		.byte	0xa
 17137 59f5 0801     		.value	0x108
 17138 59f7 FF590000 		.long	0x59ff
 17139 59fb 0A5A0000 		.long	0x5a0a
 17140 59ff 08       		.uleb128 0x8
 17141 5a00 FFB00000 		.long	0xb0ff
 17142 5a04 09       		.uleb128 0x9
 17143 5a05 EDB00000 		.long	0xb0ed
 17144 5a09 00       		.byte	0
 17145 5a0a 27       		.uleb128 0x27
 17146 5a0b 00000000 		.long	.LASF798
 17147 5a0f 0A       		.byte	0xa
 17148 5a10 0B01     		.value	0x10b
 17149 5a12 1A5A0000 		.long	0x5a1a
 17150 5a16 255A0000 		.long	0x5a25
 17151 5a1a 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 603


 17152 5a1b FFB00000 		.long	0xb0ff
 17153 5a1f 09       		.uleb128 0x9
 17154 5a20 05B10000 		.long	0xb105
 17155 5a24 00       		.byte	0
 17156 5a25 2C       		.uleb128 0x2c
 17157 5a26 00000000 		.long	.LASF8
 17158 5a2a 0A       		.byte	0xa
 17159 5a2b 5001     		.value	0x150
 17160 5a2d 00000000 		.long	.LASF820
 17161 5a31 E7B00000 		.long	0xb0e7
 17162 5a35 3D5A0000 		.long	0x5a3d
 17163 5a39 485A0000 		.long	0x5a48
 17164 5a3d 08       		.uleb128 0x8
 17165 5a3e FFB00000 		.long	0xb0ff
 17166 5a42 09       		.uleb128 0x9
 17167 5a43 EDB00000 		.long	0xb0ed
 17168 5a47 00       		.byte	0
 17169 5a48 2C       		.uleb128 0x2c
 17170 5a49 00000000 		.long	.LASF8
 17171 5a4d 0A       		.byte	0xa
 17172 5a4e 5801     		.value	0x158
 17173 5a50 00000000 		.long	.LASF821
 17174 5a54 E7B00000 		.long	0xb0e7
 17175 5a58 605A0000 		.long	0x5a60
 17176 5a5c 6B5A0000 		.long	0x5a6b
 17177 5a60 08       		.uleb128 0x8
 17178 5a61 FFB00000 		.long	0xb0ff
 17179 5a65 09       		.uleb128 0x9
 17180 5a66 05B10000 		.long	0xb105
 17181 5a6a 00       		.byte	0
 17182 5a6b 34       		.uleb128 0x34
 17183 5a6c 00000000 		.long	.LASF799
 17184 5a70 0A       		.byte	0xa
 17185 5a71 7701     		.value	0x177
 17186 5a73 00000000 		.long	.LASF822
 17187 5a77 02       		.byte	0x2
 17188 5a78 805A0000 		.long	0x5a80
 17189 5a7c 8B5A0000 		.long	0x5a8b
 17190 5a80 08       		.uleb128 0x8
 17191 5a81 FFB00000 		.long	0xb0ff
 17192 5a85 09       		.uleb128 0x9
 17193 5a86 E7B00000 		.long	0xb0e7
 17194 5a8a 00       		.byte	0
 17195 5a8b 63       		.uleb128 0x63
 17196 5a8c 00000000 		.long	.LASF823
 17197 5a90 0A       		.byte	0xa
 17198 5a91 0401     		.value	0x104
 17199 5a93 A95A0000 		.long	0x5aa9
 17200 5a97 B45A0000 		.long	0x5ab4
 17201 5a9b 35       		.uleb128 0x35
 17202 5a9c 00000000 		.long	.LASF810
 17203 5aa0 D5B00000 		.long	0xb0d5
 17204 5aa4 6B       		.uleb128 0x6b
 17205 5aa5 00000000 		.long	.LASF824
 17206 5aa9 08       		.uleb128 0x8
 17207 5aaa FFB00000 		.long	0xb0ff
 17208 5aae 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 604


 17209 5aaf D5B00000 		.long	0xb0d5
 17210 5ab3 00       		.byte	0
 17211 5ab4 50       		.uleb128 0x50
 17212 5ab5 00000000 		.long	.LASF801
 17213 5ab9 03810000 		.long	0x8103
 17214 5abd 00       		.byte	0
 17215 5abe 67       		.uleb128 0x67
 17216 5abf 00000000 		.long	.LASF802
 17217 5ac3 68       		.uleb128 0x68
 17218 5ac4 812C0000 		.long	0x2c81
 17219 5ac8 00       		.byte	0
 17220 5ac9 00       		.byte	0
 17221 5aca 11       		.uleb128 0x11
 17222 5acb 32590000 		.long	0x5932
 17223 5acf 54       		.uleb128 0x54
 17224 5ad0 00000000 		.long	.LASF826
 17225 5ad4 8813     		.value	0x1388
 17226 5ad6 0A       		.byte	0xa
 17227 5ad7 8401     		.value	0x184
 17228 5ad9 E45B0000 		.long	0x5be4
 17229 5add 21       		.uleb128 0x21
 17230 5ade 32590000 		.long	0x5932
 17231 5ae2 00       		.byte	0
 17232 5ae3 01       		.byte	0x1
 17233 5ae4 30       		.uleb128 0x30
 17234 5ae5 00000000 		.long	.LASF827
 17235 5ae9 0A       		.byte	0xa
 17236 5aea 8901     		.value	0x189
 17237 5aec 01       		.byte	0x1
 17238 5aed F55A0000 		.long	0x5af5
 17239 5af1 FB5A0000 		.long	0x5afb
 17240 5af5 08       		.uleb128 0x8
 17241 5af6 0CB10000 		.long	0xb10c
 17242 5afa 00       		.byte	0
 17243 5afb 31       		.uleb128 0x31
 17244 5afc 00000000 		.long	.LASF827
 17245 5b00 0A       		.byte	0xa
 17246 5b01 8D01     		.value	0x18d
 17247 5b03 01       		.byte	0x1
 17248 5b04 0C5B0000 		.long	0x5b0c
 17249 5b08 175B0000 		.long	0x5b17
 17250 5b0c 08       		.uleb128 0x8
 17251 5b0d 0CB10000 		.long	0xb10c
 17252 5b11 09       		.uleb128 0x9
 17253 5b12 CFB00000 		.long	0xb0cf
 17254 5b16 00       		.byte	0
 17255 5b17 30       		.uleb128 0x30
 17256 5b18 00000000 		.long	.LASF827
 17257 5b1c 0A       		.byte	0xa
 17258 5b1d 9701     		.value	0x197
 17259 5b1f 01       		.byte	0x1
 17260 5b20 285B0000 		.long	0x5b28
 17261 5b24 335B0000 		.long	0x5b33
 17262 5b28 08       		.uleb128 0x8
 17263 5b29 0CB10000 		.long	0xb10c
 17264 5b2d 09       		.uleb128 0x9
 17265 5b2e 12B10000 		.long	0xb112
GAS LISTING /tmp/ccmMnd7l.s 			page 605


 17266 5b32 00       		.byte	0
 17267 5b33 30       		.uleb128 0x30
 17268 5b34 00000000 		.long	.LASF827
 17269 5b38 0A       		.byte	0xa
 17270 5b39 9901     		.value	0x199
 17271 5b3b 01       		.byte	0x1
 17272 5b3c 445B0000 		.long	0x5b44
 17273 5b40 4F5B0000 		.long	0x5b4f
 17274 5b44 08       		.uleb128 0x8
 17275 5b45 0CB10000 		.long	0xb10c
 17276 5b49 09       		.uleb128 0x9
 17277 5b4a 18B10000 		.long	0xb118
 17278 5b4e 00       		.byte	0
 17279 5b4f 32       		.uleb128 0x32
 17280 5b50 00000000 		.long	.LASF8
 17281 5b54 0A       		.byte	0xa
 17282 5b55 D601     		.value	0x1d6
 17283 5b57 00000000 		.long	.LASF828
 17284 5b5b 1FB10000 		.long	0xb11f
 17285 5b5f 01       		.byte	0x1
 17286 5b60 685B0000 		.long	0x5b68
 17287 5b64 735B0000 		.long	0x5b73
 17288 5b68 08       		.uleb128 0x8
 17289 5b69 0CB10000 		.long	0xb10c
 17290 5b6d 09       		.uleb128 0x9
 17291 5b6e 12B10000 		.long	0xb112
 17292 5b72 00       		.byte	0
 17293 5b73 32       		.uleb128 0x32
 17294 5b74 00000000 		.long	.LASF8
 17295 5b78 0A       		.byte	0xa
 17296 5b79 DD01     		.value	0x1dd
 17297 5b7b 00000000 		.long	.LASF829
 17298 5b7f 1FB10000 		.long	0xb11f
 17299 5b83 01       		.byte	0x1
 17300 5b84 8C5B0000 		.long	0x5b8c
 17301 5b88 975B0000 		.long	0x5b97
 17302 5b8c 08       		.uleb128 0x8
 17303 5b8d 0CB10000 		.long	0xb10c
 17304 5b91 09       		.uleb128 0x9
 17305 5b92 18B10000 		.long	0xb118
 17306 5b96 00       		.byte	0
 17307 5b97 34       		.uleb128 0x34
 17308 5b98 00000000 		.long	.LASF13
 17309 5b9c 0A       		.byte	0xa
 17310 5b9d F901     		.value	0x1f9
 17311 5b9f 00000000 		.long	.LASF830
 17312 5ba3 01       		.byte	0x1
 17313 5ba4 AC5B0000 		.long	0x5bac
 17314 5ba8 B75B0000 		.long	0x5bb7
 17315 5bac 08       		.uleb128 0x8
 17316 5bad 0CB10000 		.long	0xb10c
 17317 5bb1 09       		.uleb128 0x9
 17318 5bb2 1FB10000 		.long	0xb11f
 17319 5bb6 00       		.byte	0
 17320 5bb7 31       		.uleb128 0x31
 17321 5bb8 00000000 		.long	.LASF831
 17322 5bbc 0A       		.byte	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 606


 17323 5bbd 9401     		.value	0x194
 17324 5bbf 01       		.byte	0x1
 17325 5bc0 D75B0000 		.long	0x5bd7
 17326 5bc4 E25B0000 		.long	0x5be2
 17327 5bc8 6A       		.uleb128 0x6a
 17328 5bc9 00000000 		.long	.LASF832
 17329 5bcd D75B0000 		.long	0x5bd7
 17330 5bd1 68       		.uleb128 0x68
 17331 5bd2 D5B00000 		.long	0xb0d5
 17332 5bd6 00       		.byte	0
 17333 5bd7 08       		.uleb128 0x8
 17334 5bd8 0CB10000 		.long	0xb10c
 17335 5bdc 09       		.uleb128 0x9
 17336 5bdd D5B00000 		.long	0xb0d5
 17337 5be1 00       		.byte	0
 17338 5be2 70       		.uleb128 0x70
 17339 5be3 00       		.byte	0
 17340 5be4 11       		.uleb128 0x11
 17341 5be5 CF5A0000 		.long	0x5acf
 17342 5be9 11       		.uleb128 0x11
 17343 5bea 57560000 		.long	0x5657
 17344 5bee 24       		.uleb128 0x24
 17345 5bef 00000000 		.long	.LASF833
 17346 5bf3 01       		.byte	0x1
 17347 5bf4 1B       		.byte	0x1b
 17348 5bf5 DC05     		.value	0x5dc
 17349 5bf7 085C0000 		.long	0x5c08
 17350 5bfb 5C       		.uleb128 0x5c
 17351 5bfc 00000000 		.long	.LASF511
 17352 5c00 1B       		.byte	0x1b
 17353 5c01 DD05     		.value	0x5dd
 17354 5c03 1D530000 		.long	0x531d
 17355 5c07 00       		.byte	0
 17356 5c08 05       		.uleb128 0x5
 17357 5c09 00000000 		.long	.LASF834
 17358 5c0d 08       		.byte	0x8
 17359 5c0e 17       		.byte	0x17
 17360 5c0f 81       		.byte	0x81
 17361 5c10 D65E0000 		.long	0x5ed6
 17362 5c14 05       		.uleb128 0x5
 17363 5c15 00000000 		.long	.LASF835
 17364 5c19 01       		.byte	0x1
 17365 5c1a 17       		.byte	0x17
 17366 5c1b 84       		.byte	0x84
 17367 5c1c 2D5C0000 		.long	0x5c2d
 17368 5c20 22       		.uleb128 0x22
 17369 5c21 00000000 		.long	.LASF511
 17370 5c25 17       		.byte	0x17
 17371 5c26 8F       		.byte	0x8f
 17372 5c27 63B00000 		.long	0xb063
 17373 5c2b 01       		.byte	0x1
 17374 5c2c 00       		.byte	0
 17375 5c2d 13       		.uleb128 0x13
 17376 5c2e 00000000 		.long	.LASF836
 17377 5c32 17       		.byte	0x17
 17378 5c33 92       		.byte	0x92
 17379 5c34 28640000 		.long	0x6428
GAS LISTING /tmp/ccmMnd7l.s 			page 607


 17380 5c38 06       		.uleb128 0x6
 17381 5c39 00000000 		.long	.LASF837
 17382 5c3d 17       		.byte	0x17
 17383 5c3e 93       		.byte	0x93
 17384 5c3f 2D5C0000 		.long	0x5c2d
 17385 5c43 00       		.byte	0
 17386 5c44 22       		.uleb128 0x22
 17387 5c45 00000000 		.long	.LASF489
 17388 5c49 17       		.byte	0x17
 17389 5c4a 96       		.byte	0x96
 17390 5c4b 205C0000 		.long	0x5c20
 17391 5c4f 01       		.byte	0x1
 17392 5c50 22       		.uleb128 0x22
 17393 5c51 00000000 		.long	.LASF838
 17394 5c55 17       		.byte	0x17
 17395 5c56 98       		.byte	0x98
 17396 5c57 1D530000 		.long	0x531d
 17397 5c5b 01       		.byte	0x1
 17398 5c5c 0C       		.uleb128 0xc
 17399 5c5d 00000000 		.long	.LASF839
 17400 5c61 17       		.byte	0x17
 17401 5c62 9D       		.byte	0x9d
 17402 5c63 01       		.byte	0x1
 17403 5c64 6C5C0000 		.long	0x5c6c
 17404 5c68 725C0000 		.long	0x5c72
 17405 5c6c 08       		.uleb128 0x8
 17406 5c6d EEB10000 		.long	0xb1ee
 17407 5c71 00       		.byte	0
 17408 5c72 72       		.uleb128 0x72
 17409 5c73 00000000 		.long	.LASF839
 17410 5c77 17       		.byte	0x17
 17411 5c78 A9       		.byte	0xa9
 17412 5c79 01       		.byte	0x1
 17413 5c7a 825C0000 		.long	0x5c82
 17414 5c7e 8D5C0000 		.long	0x5c8d
 17415 5c82 08       		.uleb128 0x8
 17416 5c83 EEB10000 		.long	0xb1ee
 17417 5c87 09       		.uleb128 0x9
 17418 5c88 445C0000 		.long	0x5c44
 17419 5c8c 00       		.byte	0
 17420 5c8d 0C       		.uleb128 0xc
 17421 5c8e 00000000 		.long	.LASF839
 17422 5c92 17       		.byte	0x17
 17423 5c93 B5       		.byte	0xb5
 17424 5c94 01       		.byte	0x1
 17425 5c95 9D5C0000 		.long	0x5c9d
 17426 5c99 AD5C0000 		.long	0x5cad
 17427 5c9d 08       		.uleb128 0x8
 17428 5c9e EEB10000 		.long	0xb1ee
 17429 5ca2 09       		.uleb128 0x9
 17430 5ca3 445C0000 		.long	0x5c44
 17431 5ca7 09       		.uleb128 0x9
 17432 5ca8 5B650000 		.long	0x655b
 17433 5cac 00       		.byte	0
 17434 5cad 0C       		.uleb128 0xc
 17435 5cae 00000000 		.long	.LASF839
 17436 5cb2 17       		.byte	0x17
GAS LISTING /tmp/ccmMnd7l.s 			page 608


 17437 5cb3 C1       		.byte	0xc1
 17438 5cb4 01       		.byte	0x1
 17439 5cb5 BD5C0000 		.long	0x5cbd
 17440 5cb9 CD5C0000 		.long	0x5ccd
 17441 5cbd 08       		.uleb128 0x8
 17442 5cbe EEB10000 		.long	0xb1ee
 17443 5cc2 09       		.uleb128 0x9
 17444 5cc3 445C0000 		.long	0x5c44
 17445 5cc7 09       		.uleb128 0x9
 17446 5cc8 F4B10000 		.long	0xb1f4
 17447 5ccc 00       		.byte	0
 17448 5ccd 0C       		.uleb128 0xc
 17449 5cce 00000000 		.long	.LASF839
 17450 5cd2 17       		.byte	0x17
 17451 5cd3 C8       		.byte	0xc8
 17452 5cd4 01       		.byte	0x1
 17453 5cd5 DD5C0000 		.long	0x5cdd
 17454 5cd9 E85C0000 		.long	0x5ce8
 17455 5cdd 08       		.uleb128 0x8
 17456 5cde EEB10000 		.long	0xb1ee
 17457 5ce2 09       		.uleb128 0x9
 17458 5ce3 FB010000 		.long	0x1fb
 17459 5ce7 00       		.byte	0
 17460 5ce8 0C       		.uleb128 0xc
 17461 5ce9 00000000 		.long	.LASF839
 17462 5ced 17       		.byte	0x17
 17463 5cee CD       		.byte	0xcd
 17464 5cef 01       		.byte	0x1
 17465 5cf0 F85C0000 		.long	0x5cf8
 17466 5cf4 035D0000 		.long	0x5d03
 17467 5cf8 08       		.uleb128 0x8
 17468 5cf9 EEB10000 		.long	0xb1ee
 17469 5cfd 09       		.uleb128 0x9
 17470 5cfe FBB10000 		.long	0xb1fb
 17471 5d02 00       		.byte	0
 17472 5d03 0C       		.uleb128 0xc
 17473 5d04 00000000 		.long	.LASF840
 17474 5d08 17       		.byte	0x17
 17475 5d09 E8       		.byte	0xe8
 17476 5d0a 01       		.byte	0x1
 17477 5d0b 135D0000 		.long	0x5d13
 17478 5d0f 1E5D0000 		.long	0x5d1e
 17479 5d13 08       		.uleb128 0x8
 17480 5d14 EEB10000 		.long	0xb1ee
 17481 5d18 08       		.uleb128 0x8
 17482 5d19 D8800000 		.long	0x80d8
 17483 5d1d 00       		.byte	0
 17484 5d1e 0D       		.uleb128 0xd
 17485 5d1f 00000000 		.long	.LASF8
 17486 5d23 17       		.byte	0x17
 17487 5d24 F9       		.byte	0xf9
 17488 5d25 00000000 		.long	.LASF841
 17489 5d29 02B20000 		.long	0xb202
 17490 5d2d 01       		.byte	0x1
 17491 5d2e 365D0000 		.long	0x5d36
 17492 5d32 415D0000 		.long	0x5d41
 17493 5d36 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 609


 17494 5d37 EEB10000 		.long	0xb1ee
 17495 5d3b 09       		.uleb128 0x9
 17496 5d3c FBB10000 		.long	0xb1fb
 17497 5d40 00       		.byte	0
 17498 5d41 32       		.uleb128 0x32
 17499 5d42 00000000 		.long	.LASF8
 17500 5d46 17       		.byte	0x17
 17501 5d47 1601     		.value	0x116
 17502 5d49 00000000 		.long	.LASF842
 17503 5d4d 02B20000 		.long	0xb202
 17504 5d51 01       		.byte	0x1
 17505 5d52 5A5D0000 		.long	0x5d5a
 17506 5d56 655D0000 		.long	0x5d65
 17507 5d5a 08       		.uleb128 0x8
 17508 5d5b EEB10000 		.long	0xb1ee
 17509 5d5f 09       		.uleb128 0x9
 17510 5d60 FB010000 		.long	0x1fb
 17511 5d64 00       		.byte	0
 17512 5d65 32       		.uleb128 0x32
 17513 5d66 00000000 		.long	.LASF843
 17514 5d6a 17       		.byte	0x17
 17515 5d6b 2001     		.value	0x120
 17516 5d6d 00000000 		.long	.LASF844
 17517 5d71 75650000 		.long	0x6575
 17518 5d75 01       		.byte	0x1
 17519 5d76 7E5D0000 		.long	0x5d7e
 17520 5d7a 845D0000 		.long	0x5d84
 17521 5d7e 08       		.uleb128 0x8
 17522 5d7f 08B20000 		.long	0xb208
 17523 5d83 00       		.byte	0
 17524 5d84 32       		.uleb128 0x32
 17525 5d85 00000000 		.long	.LASF845
 17526 5d89 17       		.byte	0x17
 17527 5d8a 2801     		.value	0x128
 17528 5d8c 00000000 		.long	.LASF846
 17529 5d90 445C0000 		.long	0x5c44
 17530 5d94 01       		.byte	0x1
 17531 5d95 9D5D0000 		.long	0x5d9d
 17532 5d99 A35D0000 		.long	0x5da3
 17533 5d9d 08       		.uleb128 0x8
 17534 5d9e 08B20000 		.long	0xb208
 17535 5da2 00       		.byte	0
 17536 5da3 33       		.uleb128 0x33
 17537 5da4 67657400 		.string	"get"
 17538 5da8 17       		.byte	0x17
 17539 5da9 3001     		.value	0x130
 17540 5dab 00000000 		.long	.LASF847
 17541 5daf 445C0000 		.long	0x5c44
 17542 5db3 01       		.byte	0x1
 17543 5db4 BC5D0000 		.long	0x5dbc
 17544 5db8 C25D0000 		.long	0x5dc2
 17545 5dbc 08       		.uleb128 0x8
 17546 5dbd 08B20000 		.long	0xb208
 17547 5dc1 00       		.byte	0
 17548 5dc2 32       		.uleb128 0x32
 17549 5dc3 00000000 		.long	.LASF848
 17550 5dc7 17       		.byte	0x17
GAS LISTING /tmp/ccmMnd7l.s 			page 610


 17551 5dc8 3501     		.value	0x135
 17552 5dca 00000000 		.long	.LASF849
 17553 5dce 0EB20000 		.long	0xb20e
 17554 5dd2 01       		.byte	0x1
 17555 5dd3 DB5D0000 		.long	0x5ddb
 17556 5dd7 E15D0000 		.long	0x5de1
 17557 5ddb 08       		.uleb128 0x8
 17558 5ddc EEB10000 		.long	0xb1ee
 17559 5de0 00       		.byte	0
 17560 5de1 32       		.uleb128 0x32
 17561 5de2 00000000 		.long	.LASF848
 17562 5de6 17       		.byte	0x17
 17563 5de7 3A01     		.value	0x13a
 17564 5de9 00000000 		.long	.LASF850
 17565 5ded 14B20000 		.long	0xb214
 17566 5df1 01       		.byte	0x1
 17567 5df2 FA5D0000 		.long	0x5dfa
 17568 5df6 005E0000 		.long	0x5e00
 17569 5dfa 08       		.uleb128 0x8
 17570 5dfb 08B20000 		.long	0xb208
 17571 5dff 00       		.byte	0
 17572 5e00 11       		.uleb128 0x11
 17573 5e01 505C0000 		.long	0x5c50
 17574 5e05 73       		.uleb128 0x73
 17575 5e06 00000000 		.long	.LASF851
 17576 5e0a 17       		.byte	0x17
 17577 5e0b 3E01     		.value	0x13e
 17578 5e0d 00000000 		.long	.LASF901
 17579 5e11 E0800000 		.long	0x80e0
 17580 5e15 01       		.byte	0x1
 17581 5e16 1E5E0000 		.long	0x5e1e
 17582 5e1a 245E0000 		.long	0x5e24
 17583 5e1e 08       		.uleb128 0x8
 17584 5e1f 08B20000 		.long	0xb208
 17585 5e23 00       		.byte	0
 17586 5e24 32       		.uleb128 0x32
 17587 5e25 00000000 		.long	.LASF852
 17588 5e29 17       		.byte	0x17
 17589 5e2a 4501     		.value	0x145
 17590 5e2c 00000000 		.long	.LASF853
 17591 5e30 445C0000 		.long	0x5c44
 17592 5e34 01       		.byte	0x1
 17593 5e35 3D5E0000 		.long	0x5e3d
 17594 5e39 435E0000 		.long	0x5e43
 17595 5e3d 08       		.uleb128 0x8
 17596 5e3e EEB10000 		.long	0xb1ee
 17597 5e42 00       		.byte	0
 17598 5e43 34       		.uleb128 0x34
 17599 5e44 00000000 		.long	.LASF756
 17600 5e48 17       		.byte	0x17
 17601 5e49 5301     		.value	0x153
 17602 5e4b 00000000 		.long	.LASF854
 17603 5e4f 01       		.byte	0x1
 17604 5e50 585E0000 		.long	0x5e58
 17605 5e54 635E0000 		.long	0x5e63
 17606 5e58 08       		.uleb128 0x8
 17607 5e59 EEB10000 		.long	0xb1ee
GAS LISTING /tmp/ccmMnd7l.s 			page 611


 17608 5e5d 09       		.uleb128 0x9
 17609 5e5e 445C0000 		.long	0x5c44
 17610 5e62 00       		.byte	0
 17611 5e63 34       		.uleb128 0x34
 17612 5e64 00000000 		.long	.LASF13
 17613 5e68 17       		.byte	0x17
 17614 5e69 5D01     		.value	0x15d
 17615 5e6b 00000000 		.long	.LASF855
 17616 5e6f 01       		.byte	0x1
 17617 5e70 785E0000 		.long	0x5e78
 17618 5e74 835E0000 		.long	0x5e83
 17619 5e78 08       		.uleb128 0x8
 17620 5e79 EEB10000 		.long	0xb1ee
 17621 5e7d 09       		.uleb128 0x9
 17622 5e7e 02B20000 		.long	0xb202
 17623 5e82 00       		.byte	0
 17624 5e83 30       		.uleb128 0x30
 17625 5e84 00000000 		.long	.LASF839
 17626 5e88 17       		.byte	0x17
 17627 5e89 6401     		.value	0x164
 17628 5e8b 01       		.byte	0x1
 17629 5e8c 945E0000 		.long	0x5e94
 17630 5e90 9F5E0000 		.long	0x5e9f
 17631 5e94 08       		.uleb128 0x8
 17632 5e95 EEB10000 		.long	0xb1ee
 17633 5e99 09       		.uleb128 0x9
 17634 5e9a 1AB20000 		.long	0xb21a
 17635 5e9e 00       		.byte	0
 17636 5e9f 32       		.uleb128 0x32
 17637 5ea0 00000000 		.long	.LASF8
 17638 5ea4 17       		.byte	0x17
 17639 5ea5 6501     		.value	0x165
 17640 5ea7 00000000 		.long	.LASF856
 17641 5eab 02B20000 		.long	0xb202
 17642 5eaf 01       		.byte	0x1
 17643 5eb0 B85E0000 		.long	0x5eb8
 17644 5eb4 C35E0000 		.long	0x5ec3
 17645 5eb8 08       		.uleb128 0x8
 17646 5eb9 EEB10000 		.long	0xb1ee
 17647 5ebd 09       		.uleb128 0x9
 17648 5ebe 1AB20000 		.long	0xb21a
 17649 5ec2 00       		.byte	0
 17650 5ec3 18       		.uleb128 0x18
 17651 5ec4 5F547000 		.string	"_Tp"
 17652 5ec8 46B00000 		.long	0xb046
 17653 5ecc 74       		.uleb128 0x74
 17654 5ecd 5F447000 		.string	"_Dp"
 17655 5ed1 1D530000 		.long	0x531d
 17656 5ed5 00       		.byte	0
 17657 5ed6 16       		.uleb128 0x16
 17658 5ed7 00000000 		.long	.LASF857
 17659 5edb 01       		.byte	0x1
 17660 5edc 0A       		.byte	0xa
 17661 5edd BF       		.byte	0xbf
 17662 5ede 265F0000 		.long	0x5f26
 17663 5ee2 37       		.uleb128 0x37
 17664 5ee3 00000000 		.long	.LASF798
GAS LISTING /tmp/ccmMnd7l.s 			page 612


 17665 5ee7 0A       		.byte	0xa
 17666 5ee8 C3       		.byte	0xc3
 17667 5ee9 F15E0000 		.long	0x5ef1
 17668 5eed F75E0000 		.long	0x5ef7
 17669 5ef1 08       		.uleb128 0x8
 17670 5ef2 38B10000 		.long	0xb138
 17671 5ef6 00       		.byte	0
 17672 5ef7 0E       		.uleb128 0xe
 17673 5ef8 00000000 		.long	.LASF799
 17674 5efc 0A       		.byte	0xa
 17675 5efd CF       		.byte	0xcf
 17676 5efe 00000000 		.long	.LASF858
 17677 5f02 02       		.byte	0x2
 17678 5f03 0B5F0000 		.long	0x5f0b
 17679 5f07 165F0000 		.long	0x5f16
 17680 5f0b 08       		.uleb128 0x8
 17681 5f0c 38B10000 		.long	0xb138
 17682 5f10 09       		.uleb128 0x9
 17683 5f11 3EB10000 		.long	0xb13e
 17684 5f15 00       		.byte	0
 17685 5f16 50       		.uleb128 0x50
 17686 5f17 00000000 		.long	.LASF801
 17687 5f1b 03810000 		.long	0x8103
 17688 5f1f 02       		.byte	0x2
 17689 5f20 6B       		.uleb128 0x6b
 17690 5f21 00000000 		.long	.LASF802
 17691 5f25 00       		.byte	0
 17692 5f26 16       		.uleb128 0x16
 17693 5f27 00000000 		.long	.LASF859
 17694 5f2b 01       		.byte	0x1
 17695 5f2c 0A       		.byte	0xa
 17696 5f2d 52       		.byte	0x52
 17697 5f2e F45F0000 		.long	0x5ff4
 17698 5f32 25       		.uleb128 0x25
 17699 5f33 1D530000 		.long	0x531d
 17700 5f37 00       		.byte	0
 17701 5f38 37       		.uleb128 0x37
 17702 5f39 00000000 		.long	.LASF805
 17703 5f3d 0A       		.byte	0xa
 17704 5f3e 55       		.byte	0x55
 17705 5f3f 475F0000 		.long	0x5f47
 17706 5f43 4D5F0000 		.long	0x5f4d
 17707 5f47 08       		.uleb128 0x8
 17708 5f48 44B10000 		.long	0xb144
 17709 5f4c 00       		.byte	0
 17710 5f4d 37       		.uleb128 0x37
 17711 5f4e 00000000 		.long	.LASF805
 17712 5f52 0A       		.byte	0xa
 17713 5f53 58       		.byte	0x58
 17714 5f54 5C5F0000 		.long	0x5f5c
 17715 5f58 675F0000 		.long	0x5f67
 17716 5f5c 08       		.uleb128 0x8
 17717 5f5d 44B10000 		.long	0xb144
 17718 5f61 09       		.uleb128 0x9
 17719 5f62 4AB10000 		.long	0xb14a
 17720 5f66 00       		.byte	0
 17721 5f67 37       		.uleb128 0x37
GAS LISTING /tmp/ccmMnd7l.s 			page 613


 17722 5f68 00000000 		.long	.LASF805
 17723 5f6c 0A       		.byte	0xa
 17724 5f6d 61       		.byte	0x61
 17725 5f6e 765F0000 		.long	0x5f76
 17726 5f72 815F0000 		.long	0x5f81
 17727 5f76 08       		.uleb128 0x8
 17728 5f77 44B10000 		.long	0xb144
 17729 5f7b 09       		.uleb128 0x9
 17730 5f7c E4230000 		.long	0x23e4
 17731 5f80 00       		.byte	0
 17732 5f81 4E       		.uleb128 0x4e
 17733 5f82 00000000 		.long	.LASF806
 17734 5f86 0A       		.byte	0xa
 17735 5f87 79       		.byte	0x79
 17736 5f88 00000000 		.long	.LASF860
 17737 5f8c 50B10000 		.long	0xb150
 17738 5f90 9A5F0000 		.long	0x5f9a
 17739 5f94 09       		.uleb128 0x9
 17740 5f95 56B10000 		.long	0xb156
 17741 5f99 00       		.byte	0
 17742 5f9a 4E       		.uleb128 0x4e
 17743 5f9b 00000000 		.long	.LASF806
 17744 5f9f 0A       		.byte	0xa
 17745 5fa0 7C       		.byte	0x7c
 17746 5fa1 00000000 		.long	.LASF861
 17747 5fa5 4AB10000 		.long	0xb14a
 17748 5fa9 B35F0000 		.long	0x5fb3
 17749 5fad 09       		.uleb128 0x9
 17750 5fae 5CB10000 		.long	0xb15c
 17751 5fb2 00       		.byte	0
 17752 5fb3 37       		.uleb128 0x37
 17753 5fb4 00000000 		.long	.LASF862
 17754 5fb8 0A       		.byte	0xa
 17755 5fb9 5E       		.byte	0x5e
 17756 5fba CB5F0000 		.long	0x5fcb
 17757 5fbe D65F0000 		.long	0x5fd6
 17758 5fc2 35       		.uleb128 0x35
 17759 5fc3 00000000 		.long	.LASF810
 17760 5fc7 1D530000 		.long	0x531d
 17761 5fcb 08       		.uleb128 0x8
 17762 5fcc 44B10000 		.long	0xb144
 17763 5fd0 09       		.uleb128 0x9
 17764 5fd1 FCB20000 		.long	0xb2fc
 17765 5fd5 00       		.byte	0
 17766 5fd6 50       		.uleb128 0x50
 17767 5fd7 00000000 		.long	.LASF801
 17768 5fdb 03810000 		.long	0x8103
 17769 5fdf 01       		.byte	0x1
 17770 5fe0 35       		.uleb128 0x35
 17771 5fe1 00000000 		.long	.LASF811
 17772 5fe5 1D530000 		.long	0x531d
 17773 5fe9 50       		.uleb128 0x50
 17774 5fea 00000000 		.long	.LASF812
 17775 5fee E0800000 		.long	0x80e0
 17776 5ff2 01       		.byte	0x1
 17777 5ff3 00       		.byte	0
 17778 5ff4 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 614


 17779 5ff5 1D530000 		.long	0x531d
 17780 5ff9 11       		.uleb128 0x11
 17781 5ffa 265F0000 		.long	0x5f26
 17782 5ffe 16       		.uleb128 0x16
 17783 5fff 00000000 		.long	.LASF863
 17784 6003 01       		.byte	0x1
 17785 6004 0A       		.byte	0xa
 17786 6005 E5       		.byte	0xe5
 17787 6006 95610000 		.long	0x6195
 17788 600a 25       		.uleb128 0x25
 17789 600b D65E0000 		.long	0x5ed6
 17790 600f 00       		.byte	0
 17791 6010 21       		.uleb128 0x21
 17792 6011 265F0000 		.long	0x5f26
 17793 6015 00       		.byte	0
 17794 6016 03       		.byte	0x3
 17795 6017 13       		.uleb128 0x13
 17796 6018 00000000 		.long	.LASF814
 17797 601c 0A       		.byte	0xa
 17798 601d EB       		.byte	0xeb
 17799 601e D65E0000 		.long	0x5ed6
 17800 6022 4E       		.uleb128 0x4e
 17801 6023 00000000 		.long	.LASF806
 17802 6027 0A       		.byte	0xa
 17803 6028 EF       		.byte	0xef
 17804 6029 00000000 		.long	.LASF864
 17805 602d 50B10000 		.long	0xb150
 17806 6031 3B600000 		.long	0x603b
 17807 6035 09       		.uleb128 0x9
 17808 6036 62B10000 		.long	0xb162
 17809 603a 00       		.byte	0
 17810 603b 4E       		.uleb128 0x4e
 17811 603c 00000000 		.long	.LASF806
 17812 6040 0A       		.byte	0xa
 17813 6041 F2       		.byte	0xf2
 17814 6042 00000000 		.long	.LASF865
 17815 6046 4AB10000 		.long	0xb14a
 17816 604a 54600000 		.long	0x6054
 17817 604e 09       		.uleb128 0x9
 17818 604f 68B10000 		.long	0xb168
 17819 6053 00       		.byte	0
 17820 6054 4E       		.uleb128 0x4e
 17821 6055 00000000 		.long	.LASF817
 17822 6059 0A       		.byte	0xa
 17823 605a F5       		.byte	0xf5
 17824 605b 00000000 		.long	.LASF866
 17825 605f 6EB10000 		.long	0xb16e
 17826 6063 6D600000 		.long	0x606d
 17827 6067 09       		.uleb128 0x9
 17828 6068 62B10000 		.long	0xb162
 17829 606c 00       		.byte	0
 17830 606d 4E       		.uleb128 0x4e
 17831 606e 00000000 		.long	.LASF817
 17832 6072 0A       		.byte	0xa
 17833 6073 F8       		.byte	0xf8
 17834 6074 00000000 		.long	.LASF867
 17835 6078 74B10000 		.long	0xb174
GAS LISTING /tmp/ccmMnd7l.s 			page 615


 17836 607c 86600000 		.long	0x6086
 17837 6080 09       		.uleb128 0x9
 17838 6081 68B10000 		.long	0xb168
 17839 6085 00       		.byte	0
 17840 6086 11       		.uleb128 0x11
 17841 6087 17600000 		.long	0x6017
 17842 608b 37       		.uleb128 0x37
 17843 608c 00000000 		.long	.LASF798
 17844 6090 0A       		.byte	0xa
 17845 6091 FA       		.byte	0xfa
 17846 6092 9A600000 		.long	0x609a
 17847 6096 A0600000 		.long	0x60a0
 17848 609a 08       		.uleb128 0x8
 17849 609b 7AB10000 		.long	0xb17a
 17850 609f 00       		.byte	0
 17851 60a0 07       		.uleb128 0x7
 17852 60a1 00000000 		.long	.LASF798
 17853 60a5 0A       		.byte	0xa
 17854 60a6 FE       		.byte	0xfe
 17855 60a7 AF600000 		.long	0x60af
 17856 60ab BA600000 		.long	0x60ba
 17857 60af 08       		.uleb128 0x8
 17858 60b0 7AB10000 		.long	0xb17a
 17859 60b4 09       		.uleb128 0x9
 17860 60b5 4AB10000 		.long	0xb14a
 17861 60b9 00       		.byte	0
 17862 60ba 27       		.uleb128 0x27
 17863 60bb 00000000 		.long	.LASF798
 17864 60bf 0A       		.byte	0xa
 17865 60c0 0801     		.value	0x108
 17866 60c2 CA600000 		.long	0x60ca
 17867 60c6 D5600000 		.long	0x60d5
 17868 60ca 08       		.uleb128 0x8
 17869 60cb 7AB10000 		.long	0xb17a
 17870 60cf 09       		.uleb128 0x9
 17871 60d0 68B10000 		.long	0xb168
 17872 60d4 00       		.byte	0
 17873 60d5 27       		.uleb128 0x27
 17874 60d6 00000000 		.long	.LASF798
 17875 60da 0A       		.byte	0xa
 17876 60db 0B01     		.value	0x10b
 17877 60dd E5600000 		.long	0x60e5
 17878 60e1 F0600000 		.long	0x60f0
 17879 60e5 08       		.uleb128 0x8
 17880 60e6 7AB10000 		.long	0xb17a
 17881 60ea 09       		.uleb128 0x9
 17882 60eb 80B10000 		.long	0xb180
 17883 60ef 00       		.byte	0
 17884 60f0 2C       		.uleb128 0x2c
 17885 60f1 00000000 		.long	.LASF8
 17886 60f5 0A       		.byte	0xa
 17887 60f6 5001     		.value	0x150
 17888 60f8 00000000 		.long	.LASF868
 17889 60fc 62B10000 		.long	0xb162
 17890 6100 08610000 		.long	0x6108
 17891 6104 13610000 		.long	0x6113
 17892 6108 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 616


 17893 6109 7AB10000 		.long	0xb17a
 17894 610d 09       		.uleb128 0x9
 17895 610e 68B10000 		.long	0xb168
 17896 6112 00       		.byte	0
 17897 6113 2C       		.uleb128 0x2c
 17898 6114 00000000 		.long	.LASF8
 17899 6118 0A       		.byte	0xa
 17900 6119 5801     		.value	0x158
 17901 611b 00000000 		.long	.LASF869
 17902 611f 62B10000 		.long	0xb162
 17903 6123 2B610000 		.long	0x612b
 17904 6127 36610000 		.long	0x6136
 17905 612b 08       		.uleb128 0x8
 17906 612c 7AB10000 		.long	0xb17a
 17907 6130 09       		.uleb128 0x9
 17908 6131 80B10000 		.long	0xb180
 17909 6135 00       		.byte	0
 17910 6136 34       		.uleb128 0x34
 17911 6137 00000000 		.long	.LASF799
 17912 613b 0A       		.byte	0xa
 17913 613c 7701     		.value	0x177
 17914 613e 00000000 		.long	.LASF870
 17915 6142 02       		.byte	0x2
 17916 6143 4B610000 		.long	0x614b
 17917 6147 56610000 		.long	0x6156
 17918 614b 08       		.uleb128 0x8
 17919 614c 7AB10000 		.long	0xb17a
 17920 6150 09       		.uleb128 0x9
 17921 6151 62B10000 		.long	0xb162
 17922 6155 00       		.byte	0
 17923 6156 63       		.uleb128 0x63
 17924 6157 00000000 		.long	.LASF871
 17925 615b 0A       		.byte	0xa
 17926 615c 0401     		.value	0x104
 17927 615e 74610000 		.long	0x6174
 17928 6162 7F610000 		.long	0x617f
 17929 6166 35       		.uleb128 0x35
 17930 6167 00000000 		.long	.LASF810
 17931 616b 1D530000 		.long	0x531d
 17932 616f 6B       		.uleb128 0x6b
 17933 6170 00000000 		.long	.LASF824
 17934 6174 08       		.uleb128 0x8
 17935 6175 7AB10000 		.long	0xb17a
 17936 6179 09       		.uleb128 0x9
 17937 617a FCB20000 		.long	0xb2fc
 17938 617e 00       		.byte	0
 17939 617f 50       		.uleb128 0x50
 17940 6180 00000000 		.long	.LASF801
 17941 6184 03810000 		.long	0x8103
 17942 6188 01       		.byte	0x1
 17943 6189 67       		.uleb128 0x67
 17944 618a 00000000 		.long	.LASF802
 17945 618e 68       		.uleb128 0x68
 17946 618f 1D530000 		.long	0x531d
 17947 6193 00       		.byte	0
 17948 6194 00       		.byte	0
 17949 6195 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 617


 17950 6196 FE5F0000 		.long	0x5ffe
 17951 619a 16       		.uleb128 0x16
 17952 619b 00000000 		.long	.LASF872
 17953 619f 08       		.byte	0x8
 17954 61a0 0A       		.byte	0xa
 17955 61a1 80       		.byte	0x80
 17956 61a2 6E620000 		.long	0x626e
 17957 61a6 06       		.uleb128 0x6
 17958 61a7 00000000 		.long	.LASF804
 17959 61ab 0A       		.byte	0xa
 17960 61ac AC       		.byte	0xac
 17961 61ad 63B00000 		.long	0xb063
 17962 61b1 00       		.byte	0
 17963 61b2 37       		.uleb128 0x37
 17964 61b3 00000000 		.long	.LASF805
 17965 61b7 0A       		.byte	0xa
 17966 61b8 82       		.byte	0x82
 17967 61b9 C1610000 		.long	0x61c1
 17968 61bd C7610000 		.long	0x61c7
 17969 61c1 08       		.uleb128 0x8
 17970 61c2 87B10000 		.long	0xb187
 17971 61c6 00       		.byte	0
 17972 61c7 37       		.uleb128 0x37
 17973 61c8 00000000 		.long	.LASF805
 17974 61cc 0A       		.byte	0xa
 17975 61cd 85       		.byte	0x85
 17976 61ce D6610000 		.long	0x61d6
 17977 61d2 E1610000 		.long	0x61e1
 17978 61d6 08       		.uleb128 0x8
 17979 61d7 87B10000 		.long	0xb187
 17980 61db 09       		.uleb128 0x9
 17981 61dc 8DB10000 		.long	0xb18d
 17982 61e0 00       		.byte	0
 17983 61e1 37       		.uleb128 0x37
 17984 61e2 00000000 		.long	.LASF805
 17985 61e6 0A       		.byte	0xa
 17986 61e7 8E       		.byte	0x8e
 17987 61e8 F0610000 		.long	0x61f0
 17988 61ec FB610000 		.long	0x61fb
 17989 61f0 08       		.uleb128 0x8
 17990 61f1 87B10000 		.long	0xb187
 17991 61f5 09       		.uleb128 0x9
 17992 61f6 E4230000 		.long	0x23e4
 17993 61fa 00       		.byte	0
 17994 61fb 4E       		.uleb128 0x4e
 17995 61fc 00000000 		.long	.LASF806
 17996 6200 0A       		.byte	0xa
 17997 6201 A7       		.byte	0xa7
 17998 6202 00000000 		.long	.LASF873
 17999 6206 98B10000 		.long	0xb198
 18000 620a 14620000 		.long	0x6214
 18001 620e 09       		.uleb128 0x9
 18002 620f 9EB10000 		.long	0xb19e
 18003 6213 00       		.byte	0
 18004 6214 4E       		.uleb128 0x4e
 18005 6215 00000000 		.long	.LASF806
 18006 6219 0A       		.byte	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 618


 18007 621a AA       		.byte	0xaa
 18008 621b 00000000 		.long	.LASF874
 18009 621f 8DB10000 		.long	0xb18d
 18010 6223 2D620000 		.long	0x622d
 18011 6227 09       		.uleb128 0x9
 18012 6228 A4B10000 		.long	0xb1a4
 18013 622c 00       		.byte	0
 18014 622d 37       		.uleb128 0x37
 18015 622e 00000000 		.long	.LASF875
 18016 6232 0A       		.byte	0xa
 18017 6233 8B       		.byte	0x8b
 18018 6234 45620000 		.long	0x6245
 18019 6238 50620000 		.long	0x6250
 18020 623c 35       		.uleb128 0x35
 18021 623d 00000000 		.long	.LASF810
 18022 6241 98B10000 		.long	0xb198
 18023 6245 08       		.uleb128 0x8
 18024 6246 87B10000 		.long	0xb187
 18025 624a 09       		.uleb128 0x9
 18026 624b 98B10000 		.long	0xb198
 18027 624f 00       		.byte	0
 18028 6250 50       		.uleb128 0x50
 18029 6251 00000000 		.long	.LASF801
 18030 6255 03810000 		.long	0x8103
 18031 6259 00       		.byte	0
 18032 625a 35       		.uleb128 0x35
 18033 625b 00000000 		.long	.LASF811
 18034 625f 63B00000 		.long	0xb063
 18035 6263 50       		.uleb128 0x50
 18036 6264 00000000 		.long	.LASF812
 18037 6268 E0800000 		.long	0x80e0
 18038 626c 00       		.byte	0
 18039 626d 00       		.byte	0
 18040 626e 11       		.uleb128 0x11
 18041 626f 9A610000 		.long	0x619a
 18042 6273 16       		.uleb128 0x16
 18043 6274 00000000 		.long	.LASF876
 18044 6278 08       		.byte	0x8
 18045 6279 0A       		.byte	0xa
 18046 627a E5       		.byte	0xe5
 18047 627b 23640000 		.long	0x6423
 18048 627f 25       		.uleb128 0x25
 18049 6280 FE5F0000 		.long	0x5ffe
 18050 6284 00       		.byte	0
 18051 6285 21       		.uleb128 0x21
 18052 6286 9A610000 		.long	0x619a
 18053 628a 00       		.byte	0
 18054 628b 03       		.byte	0x3
 18055 628c 13       		.uleb128 0x13
 18056 628d 00000000 		.long	.LASF814
 18057 6291 0A       		.byte	0xa
 18058 6292 EB       		.byte	0xeb
 18059 6293 FE5F0000 		.long	0x5ffe
 18060 6297 4E       		.uleb128 0x4e
 18061 6298 00000000 		.long	.LASF806
 18062 629c 0A       		.byte	0xa
 18063 629d EF       		.byte	0xef
GAS LISTING /tmp/ccmMnd7l.s 			page 619


 18064 629e 00000000 		.long	.LASF877
 18065 62a2 98B10000 		.long	0xb198
 18066 62a6 B0620000 		.long	0x62b0
 18067 62aa 09       		.uleb128 0x9
 18068 62ab AAB10000 		.long	0xb1aa
 18069 62af 00       		.byte	0
 18070 62b0 4E       		.uleb128 0x4e
 18071 62b1 00000000 		.long	.LASF806
 18072 62b5 0A       		.byte	0xa
 18073 62b6 F2       		.byte	0xf2
 18074 62b7 00000000 		.long	.LASF878
 18075 62bb 8DB10000 		.long	0xb18d
 18076 62bf C9620000 		.long	0x62c9
 18077 62c3 09       		.uleb128 0x9
 18078 62c4 B0B10000 		.long	0xb1b0
 18079 62c8 00       		.byte	0
 18080 62c9 4E       		.uleb128 0x4e
 18081 62ca 00000000 		.long	.LASF817
 18082 62ce 0A       		.byte	0xa
 18083 62cf F5       		.byte	0xf5
 18084 62d0 00000000 		.long	.LASF879
 18085 62d4 B6B10000 		.long	0xb1b6
 18086 62d8 E2620000 		.long	0x62e2
 18087 62dc 09       		.uleb128 0x9
 18088 62dd AAB10000 		.long	0xb1aa
 18089 62e1 00       		.byte	0
 18090 62e2 4E       		.uleb128 0x4e
 18091 62e3 00000000 		.long	.LASF817
 18092 62e7 0A       		.byte	0xa
 18093 62e8 F8       		.byte	0xf8
 18094 62e9 00000000 		.long	.LASF880
 18095 62ed BCB10000 		.long	0xb1bc
 18096 62f1 FB620000 		.long	0x62fb
 18097 62f5 09       		.uleb128 0x9
 18098 62f6 B0B10000 		.long	0xb1b0
 18099 62fa 00       		.byte	0
 18100 62fb 11       		.uleb128 0x11
 18101 62fc 8C620000 		.long	0x628c
 18102 6300 37       		.uleb128 0x37
 18103 6301 00000000 		.long	.LASF798
 18104 6305 0A       		.byte	0xa
 18105 6306 FA       		.byte	0xfa
 18106 6307 0F630000 		.long	0x630f
 18107 630b 15630000 		.long	0x6315
 18108 630f 08       		.uleb128 0x8
 18109 6310 C2B10000 		.long	0xb1c2
 18110 6314 00       		.byte	0
 18111 6315 07       		.uleb128 0x7
 18112 6316 00000000 		.long	.LASF798
 18113 631a 0A       		.byte	0xa
 18114 631b FE       		.byte	0xfe
 18115 631c 24630000 		.long	0x6324
 18116 6320 34630000 		.long	0x6334
 18117 6324 08       		.uleb128 0x8
 18118 6325 C2B10000 		.long	0xb1c2
 18119 6329 09       		.uleb128 0x9
 18120 632a 8DB10000 		.long	0xb18d
GAS LISTING /tmp/ccmMnd7l.s 			page 620


 18121 632e 09       		.uleb128 0x9
 18122 632f 4AB10000 		.long	0xb14a
 18123 6333 00       		.byte	0
 18124 6334 27       		.uleb128 0x27
 18125 6335 00000000 		.long	.LASF798
 18126 6339 0A       		.byte	0xa
 18127 633a 0801     		.value	0x108
 18128 633c 44630000 		.long	0x6344
 18129 6340 4F630000 		.long	0x634f
 18130 6344 08       		.uleb128 0x8
 18131 6345 C2B10000 		.long	0xb1c2
 18132 6349 09       		.uleb128 0x9
 18133 634a B0B10000 		.long	0xb1b0
 18134 634e 00       		.byte	0
 18135 634f 27       		.uleb128 0x27
 18136 6350 00000000 		.long	.LASF798
 18137 6354 0A       		.byte	0xa
 18138 6355 0B01     		.value	0x10b
 18139 6357 5F630000 		.long	0x635f
 18140 635b 6A630000 		.long	0x636a
 18141 635f 08       		.uleb128 0x8
 18142 6360 C2B10000 		.long	0xb1c2
 18143 6364 09       		.uleb128 0x9
 18144 6365 C8B10000 		.long	0xb1c8
 18145 6369 00       		.byte	0
 18146 636a 2C       		.uleb128 0x2c
 18147 636b 00000000 		.long	.LASF8
 18148 636f 0A       		.byte	0xa
 18149 6370 5001     		.value	0x150
 18150 6372 00000000 		.long	.LASF881
 18151 6376 AAB10000 		.long	0xb1aa
 18152 637a 82630000 		.long	0x6382
 18153 637e 8D630000 		.long	0x638d
 18154 6382 08       		.uleb128 0x8
 18155 6383 C2B10000 		.long	0xb1c2
 18156 6387 09       		.uleb128 0x9
 18157 6388 B0B10000 		.long	0xb1b0
 18158 638c 00       		.byte	0
 18159 638d 2C       		.uleb128 0x2c
 18160 638e 00000000 		.long	.LASF8
 18161 6392 0A       		.byte	0xa
 18162 6393 5801     		.value	0x158
 18163 6395 00000000 		.long	.LASF882
 18164 6399 AAB10000 		.long	0xb1aa
 18165 639d A5630000 		.long	0x63a5
 18166 63a1 B0630000 		.long	0x63b0
 18167 63a5 08       		.uleb128 0x8
 18168 63a6 C2B10000 		.long	0xb1c2
 18169 63aa 09       		.uleb128 0x9
 18170 63ab C8B10000 		.long	0xb1c8
 18171 63af 00       		.byte	0
 18172 63b0 34       		.uleb128 0x34
 18173 63b1 00000000 		.long	.LASF799
 18174 63b5 0A       		.byte	0xa
 18175 63b6 7701     		.value	0x177
 18176 63b8 00000000 		.long	.LASF883
 18177 63bc 02       		.byte	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 621


 18178 63bd C5630000 		.long	0x63c5
 18179 63c1 D0630000 		.long	0x63d0
 18180 63c5 08       		.uleb128 0x8
 18181 63c6 C2B10000 		.long	0xb1c2
 18182 63ca 09       		.uleb128 0x9
 18183 63cb AAB10000 		.long	0xb1aa
 18184 63cf 00       		.byte	0
 18185 63d0 63       		.uleb128 0x63
 18186 63d1 00000000 		.long	.LASF884
 18187 63d5 0A       		.byte	0xa
 18188 63d6 0401     		.value	0x104
 18189 63d8 F8630000 		.long	0x63f8
 18190 63dc 08640000 		.long	0x6408
 18191 63e0 35       		.uleb128 0x35
 18192 63e1 00000000 		.long	.LASF810
 18193 63e5 98B10000 		.long	0xb198
 18194 63e9 6A       		.uleb128 0x6a
 18195 63ea 00000000 		.long	.LASF824
 18196 63ee F8630000 		.long	0x63f8
 18197 63f2 68       		.uleb128 0x68
 18198 63f3 1D530000 		.long	0x531d
 18199 63f7 00       		.byte	0
 18200 63f8 08       		.uleb128 0x8
 18201 63f9 C2B10000 		.long	0xb1c2
 18202 63fd 09       		.uleb128 0x9
 18203 63fe 98B10000 		.long	0xb198
 18204 6402 09       		.uleb128 0x9
 18205 6403 FCB20000 		.long	0xb2fc
 18206 6407 00       		.byte	0
 18207 6408 50       		.uleb128 0x50
 18208 6409 00000000 		.long	.LASF801
 18209 640d 03810000 		.long	0x8103
 18210 6411 00       		.byte	0
 18211 6412 67       		.uleb128 0x67
 18212 6413 00000000 		.long	.LASF802
 18213 6417 68       		.uleb128 0x68
 18214 6418 63B00000 		.long	0xb063
 18215 641c 68       		.uleb128 0x68
 18216 641d 1D530000 		.long	0x531d
 18217 6421 00       		.byte	0
 18218 6422 00       		.byte	0
 18219 6423 11       		.uleb128 0x11
 18220 6424 73620000 		.long	0x6273
 18221 6428 3B       		.uleb128 0x3b
 18222 6429 00000000 		.long	.LASF885
 18223 642d 08       		.byte	0x8
 18224 642e 0A       		.byte	0xa
 18225 642f 0902     		.value	0x209
 18226 6431 49650000 		.long	0x6549
 18227 6435 21       		.uleb128 0x21
 18228 6436 73620000 		.long	0x6273
 18229 643a 00       		.byte	0
 18230 643b 01       		.byte	0x1
 18231 643c 30       		.uleb128 0x30
 18232 643d 00000000 		.long	.LASF827
 18233 6441 0A       		.byte	0xa
 18234 6442 0E02     		.value	0x20e
GAS LISTING /tmp/ccmMnd7l.s 			page 622


 18235 6444 01       		.byte	0x1
 18236 6445 4D640000 		.long	0x644d
 18237 6449 53640000 		.long	0x6453
 18238 644d 08       		.uleb128 0x8
 18239 644e CFB10000 		.long	0xb1cf
 18240 6452 00       		.byte	0
 18241 6453 31       		.uleb128 0x31
 18242 6454 00000000 		.long	.LASF827
 18243 6458 0A       		.byte	0xa
 18244 6459 1202     		.value	0x212
 18245 645b 01       		.byte	0x1
 18246 645c 64640000 		.long	0x6464
 18247 6460 74640000 		.long	0x6474
 18248 6464 08       		.uleb128 0x8
 18249 6465 CFB10000 		.long	0xb1cf
 18250 6469 09       		.uleb128 0x9
 18251 646a 8DB10000 		.long	0xb18d
 18252 646e 09       		.uleb128 0x9
 18253 646f 4AB10000 		.long	0xb14a
 18254 6473 00       		.byte	0
 18255 6474 30       		.uleb128 0x30
 18256 6475 00000000 		.long	.LASF827
 18257 6479 0A       		.byte	0xa
 18258 647a 1C02     		.value	0x21c
 18259 647c 01       		.byte	0x1
 18260 647d 85640000 		.long	0x6485
 18261 6481 90640000 		.long	0x6490
 18262 6485 08       		.uleb128 0x8
 18263 6486 CFB10000 		.long	0xb1cf
 18264 648a 09       		.uleb128 0x9
 18265 648b D5B10000 		.long	0xb1d5
 18266 648f 00       		.byte	0
 18267 6490 30       		.uleb128 0x30
 18268 6491 00000000 		.long	.LASF827
 18269 6495 0A       		.byte	0xa
 18270 6496 1E02     		.value	0x21e
 18271 6498 01       		.byte	0x1
 18272 6499 A1640000 		.long	0x64a1
 18273 649d AC640000 		.long	0x64ac
 18274 64a1 08       		.uleb128 0x8
 18275 64a2 CFB10000 		.long	0xb1cf
 18276 64a6 09       		.uleb128 0x9
 18277 64a7 DBB10000 		.long	0xb1db
 18278 64ab 00       		.byte	0
 18279 64ac 32       		.uleb128 0x32
 18280 64ad 00000000 		.long	.LASF8
 18281 64b1 0A       		.byte	0xa
 18282 64b2 6802     		.value	0x268
 18283 64b4 00000000 		.long	.LASF886
 18284 64b8 E2B10000 		.long	0xb1e2
 18285 64bc 01       		.byte	0x1
 18286 64bd C5640000 		.long	0x64c5
 18287 64c1 D0640000 		.long	0x64d0
 18288 64c5 08       		.uleb128 0x8
 18289 64c6 CFB10000 		.long	0xb1cf
 18290 64ca 09       		.uleb128 0x9
 18291 64cb D5B10000 		.long	0xb1d5
GAS LISTING /tmp/ccmMnd7l.s 			page 623


 18292 64cf 00       		.byte	0
 18293 64d0 32       		.uleb128 0x32
 18294 64d1 00000000 		.long	.LASF8
 18295 64d5 0A       		.byte	0xa
 18296 64d6 6F02     		.value	0x26f
 18297 64d8 00000000 		.long	.LASF887
 18298 64dc E2B10000 		.long	0xb1e2
 18299 64e0 01       		.byte	0x1
 18300 64e1 E9640000 		.long	0x64e9
 18301 64e5 F4640000 		.long	0x64f4
 18302 64e9 08       		.uleb128 0x8
 18303 64ea CFB10000 		.long	0xb1cf
 18304 64ee 09       		.uleb128 0x9
 18305 64ef DBB10000 		.long	0xb1db
 18306 64f3 00       		.byte	0
 18307 64f4 34       		.uleb128 0x34
 18308 64f5 00000000 		.long	.LASF13
 18309 64f9 0A       		.byte	0xa
 18310 64fa 9902     		.value	0x299
 18311 64fc 00000000 		.long	.LASF888
 18312 6500 01       		.byte	0x1
 18313 6501 09650000 		.long	0x6509
 18314 6505 14650000 		.long	0x6514
 18315 6509 08       		.uleb128 0x8
 18316 650a CFB10000 		.long	0xb1cf
 18317 650e 09       		.uleb128 0x9
 18318 650f E2B10000 		.long	0xb1e2
 18319 6513 00       		.byte	0
 18320 6514 31       		.uleb128 0x31
 18321 6515 00000000 		.long	.LASF889
 18322 6519 0A       		.byte	0xa
 18323 651a 1902     		.value	0x219
 18324 651c 01       		.byte	0x1
 18325 651d 37650000 		.long	0x6537
 18326 6521 47650000 		.long	0x6547
 18327 6525 18       		.uleb128 0x18
 18328 6526 5F553100 		.string	"_U1"
 18329 652a 98B10000 		.long	0xb198
 18330 652e 18       		.uleb128 0x18
 18331 652f 5F553200 		.string	"_U2"
 18332 6533 1D530000 		.long	0x531d
 18333 6537 08       		.uleb128 0x8
 18334 6538 CFB10000 		.long	0xb1cf
 18335 653c 09       		.uleb128 0x9
 18336 653d 98B10000 		.long	0xb198
 18337 6541 09       		.uleb128 0x9
 18338 6542 FCB20000 		.long	0xb2fc
 18339 6546 00       		.byte	0
 18340 6547 70       		.uleb128 0x70
 18341 6548 00       		.byte	0
 18342 6549 11       		.uleb128 0x11
 18343 654a 28640000 		.long	0x6428
 18344 654e 24       		.uleb128 0x24
 18345 654f 00000000 		.long	.LASF890
 18346 6553 01       		.byte	0x1
 18347 6554 1B       		.byte	0x1b
 18348 6555 AF07     		.value	0x7af
GAS LISTING /tmp/ccmMnd7l.s 			page 624


 18349 6557 68650000 		.long	0x6568
 18350 655b 5C       		.uleb128 0x5c
 18351 655c 00000000 		.long	.LASF511
 18352 6560 1B       		.byte	0x1b
 18353 6561 B007     		.value	0x7b0
 18354 6563 4AB10000 		.long	0xb14a
 18355 6567 00       		.byte	0
 18356 6568 24       		.uleb128 0x24
 18357 6569 00000000 		.long	.LASF891
 18358 656d 01       		.byte	0x1
 18359 656e 1B       		.byte	0x1b
 18360 656f EC05     		.value	0x5ec
 18361 6571 8B650000 		.long	0x658b
 18362 6575 5C       		.uleb128 0x5c
 18363 6576 00000000 		.long	.LASF511
 18364 657a 1B       		.byte	0x1b
 18365 657b ED05     		.value	0x5ed
 18366 657d E8B10000 		.long	0xb1e8
 18367 6581 18       		.uleb128 0x18
 18368 6582 5F547000 		.string	"_Tp"
 18369 6586 46B00000 		.long	0xb046
 18370 658a 00       		.byte	0
 18371 658b 11       		.uleb128 0x11
 18372 658c 085C0000 		.long	0x5c08
 18373 6590 24       		.uleb128 0x24
 18374 6591 00000000 		.long	.LASF892
 18375 6595 01       		.byte	0x1
 18376 6596 1B       		.byte	0x1b
 18377 6597 DC05     		.value	0x5dc
 18378 6599 AA650000 		.long	0x65aa
 18379 659d 5C       		.uleb128 0x5c
 18380 659e 00000000 		.long	.LASF511
 18381 65a2 1B       		.byte	0x1b
 18382 65a3 DD05     		.value	0x5dd
 18383 65a5 F6520000 		.long	0x52f6
 18384 65a9 00       		.byte	0
 18385 65aa 05       		.uleb128 0x5
 18386 65ab 00000000 		.long	.LASF893
 18387 65af 08       		.byte	0x8
 18388 65b0 17       		.byte	0x17
 18389 65b1 81       		.byte	0x81
 18390 65b2 78680000 		.long	0x6878
 18391 65b6 05       		.uleb128 0x5
 18392 65b7 00000000 		.long	.LASF835
 18393 65bb 01       		.byte	0x1
 18394 65bc 17       		.byte	0x17
 18395 65bd 84       		.byte	0x84
 18396 65be CF650000 		.long	0x65cf
 18397 65c2 22       		.uleb128 0x22
 18398 65c3 00000000 		.long	.LASF511
 18399 65c7 17       		.byte	0x17
 18400 65c8 8F       		.byte	0x8f
 18401 65c9 57B00000 		.long	0xb057
 18402 65cd 01       		.byte	0x1
 18403 65ce 00       		.byte	0
 18404 65cf 13       		.uleb128 0x13
 18405 65d0 00000000 		.long	.LASF836
GAS LISTING /tmp/ccmMnd7l.s 			page 625


 18406 65d4 17       		.byte	0x17
 18407 65d5 92       		.byte	0x92
 18408 65d6 7A6D0000 		.long	0x6d7a
 18409 65da 06       		.uleb128 0x6
 18410 65db 00000000 		.long	.LASF837
 18411 65df 17       		.byte	0x17
 18412 65e0 93       		.byte	0x93
 18413 65e1 CF650000 		.long	0x65cf
 18414 65e5 00       		.byte	0
 18415 65e6 22       		.uleb128 0x22
 18416 65e7 00000000 		.long	.LASF489
 18417 65eb 17       		.byte	0x17
 18418 65ec 96       		.byte	0x96
 18419 65ed C2650000 		.long	0x65c2
 18420 65f1 01       		.byte	0x1
 18421 65f2 22       		.uleb128 0x22
 18422 65f3 00000000 		.long	.LASF838
 18423 65f7 17       		.byte	0x17
 18424 65f8 98       		.byte	0x98
 18425 65f9 F6520000 		.long	0x52f6
 18426 65fd 01       		.byte	0x1
 18427 65fe 0C       		.uleb128 0xc
 18428 65ff 00000000 		.long	.LASF839
 18429 6603 17       		.byte	0x17
 18430 6604 9D       		.byte	0x9d
 18431 6605 01       		.byte	0x1
 18432 6606 0E660000 		.long	0x660e
 18433 660a 14660000 		.long	0x6614
 18434 660e 08       		.uleb128 0x8
 18435 660f CAB20000 		.long	0xb2ca
 18436 6613 00       		.byte	0
 18437 6614 72       		.uleb128 0x72
 18438 6615 00000000 		.long	.LASF839
 18439 6619 17       		.byte	0x17
 18440 661a A9       		.byte	0xa9
 18441 661b 01       		.byte	0x1
 18442 661c 24660000 		.long	0x6624
 18443 6620 2F660000 		.long	0x662f
 18444 6624 08       		.uleb128 0x8
 18445 6625 CAB20000 		.long	0xb2ca
 18446 6629 09       		.uleb128 0x9
 18447 662a E6650000 		.long	0x65e6
 18448 662e 00       		.byte	0
 18449 662f 0C       		.uleb128 0xc
 18450 6630 00000000 		.long	.LASF839
 18451 6634 17       		.byte	0x17
 18452 6635 B5       		.byte	0xb5
 18453 6636 01       		.byte	0x1
 18454 6637 3F660000 		.long	0x663f
 18455 663b 4F660000 		.long	0x664f
 18456 663f 08       		.uleb128 0x8
 18457 6640 CAB20000 		.long	0xb2ca
 18458 6644 09       		.uleb128 0x9
 18459 6645 E6650000 		.long	0x65e6
 18460 6649 09       		.uleb128 0x9
 18461 664a AD6E0000 		.long	0x6ead
 18462 664e 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 626


 18463 664f 0C       		.uleb128 0xc
 18464 6650 00000000 		.long	.LASF839
 18465 6654 17       		.byte	0x17
 18466 6655 C1       		.byte	0xc1
 18467 6656 01       		.byte	0x1
 18468 6657 5F660000 		.long	0x665f
 18469 665b 6F660000 		.long	0x666f
 18470 665f 08       		.uleb128 0x8
 18471 6660 CAB20000 		.long	0xb2ca
 18472 6664 09       		.uleb128 0x9
 18473 6665 E6650000 		.long	0x65e6
 18474 6669 09       		.uleb128 0x9
 18475 666a D0B20000 		.long	0xb2d0
 18476 666e 00       		.byte	0
 18477 666f 0C       		.uleb128 0xc
 18478 6670 00000000 		.long	.LASF839
 18479 6674 17       		.byte	0x17
 18480 6675 C8       		.byte	0xc8
 18481 6676 01       		.byte	0x1
 18482 6677 7F660000 		.long	0x667f
 18483 667b 8A660000 		.long	0x668a
 18484 667f 08       		.uleb128 0x8
 18485 6680 CAB20000 		.long	0xb2ca
 18486 6684 09       		.uleb128 0x9
 18487 6685 FB010000 		.long	0x1fb
 18488 6689 00       		.byte	0
 18489 668a 0C       		.uleb128 0xc
 18490 668b 00000000 		.long	.LASF839
 18491 668f 17       		.byte	0x17
 18492 6690 CD       		.byte	0xcd
 18493 6691 01       		.byte	0x1
 18494 6692 9A660000 		.long	0x669a
 18495 6696 A5660000 		.long	0x66a5
 18496 669a 08       		.uleb128 0x8
 18497 669b CAB20000 		.long	0xb2ca
 18498 669f 09       		.uleb128 0x9
 18499 66a0 D7B20000 		.long	0xb2d7
 18500 66a4 00       		.byte	0
 18501 66a5 0C       		.uleb128 0xc
 18502 66a6 00000000 		.long	.LASF840
 18503 66aa 17       		.byte	0x17
 18504 66ab E8       		.byte	0xe8
 18505 66ac 01       		.byte	0x1
 18506 66ad B5660000 		.long	0x66b5
 18507 66b1 C0660000 		.long	0x66c0
 18508 66b5 08       		.uleb128 0x8
 18509 66b6 CAB20000 		.long	0xb2ca
 18510 66ba 08       		.uleb128 0x8
 18511 66bb D8800000 		.long	0x80d8
 18512 66bf 00       		.byte	0
 18513 66c0 0D       		.uleb128 0xd
 18514 66c1 00000000 		.long	.LASF8
 18515 66c5 17       		.byte	0x17
 18516 66c6 F9       		.byte	0xf9
 18517 66c7 00000000 		.long	.LASF894
 18518 66cb DEB20000 		.long	0xb2de
 18519 66cf 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 627


 18520 66d0 D8660000 		.long	0x66d8
 18521 66d4 E3660000 		.long	0x66e3
 18522 66d8 08       		.uleb128 0x8
 18523 66d9 CAB20000 		.long	0xb2ca
 18524 66dd 09       		.uleb128 0x9
 18525 66de D7B20000 		.long	0xb2d7
 18526 66e2 00       		.byte	0
 18527 66e3 32       		.uleb128 0x32
 18528 66e4 00000000 		.long	.LASF8
 18529 66e8 17       		.byte	0x17
 18530 66e9 1601     		.value	0x116
 18531 66eb 00000000 		.long	.LASF895
 18532 66ef DEB20000 		.long	0xb2de
 18533 66f3 01       		.byte	0x1
 18534 66f4 FC660000 		.long	0x66fc
 18535 66f8 07670000 		.long	0x6707
 18536 66fc 08       		.uleb128 0x8
 18537 66fd CAB20000 		.long	0xb2ca
 18538 6701 09       		.uleb128 0x9
 18539 6702 FB010000 		.long	0x1fb
 18540 6706 00       		.byte	0
 18541 6707 32       		.uleb128 0x32
 18542 6708 00000000 		.long	.LASF843
 18543 670c 17       		.byte	0x17
 18544 670d 2001     		.value	0x120
 18545 670f 00000000 		.long	.LASF896
 18546 6713 C76E0000 		.long	0x6ec7
 18547 6717 01       		.byte	0x1
 18548 6718 20670000 		.long	0x6720
 18549 671c 26670000 		.long	0x6726
 18550 6720 08       		.uleb128 0x8
 18551 6721 E4B20000 		.long	0xb2e4
 18552 6725 00       		.byte	0
 18553 6726 32       		.uleb128 0x32
 18554 6727 00000000 		.long	.LASF845
 18555 672b 17       		.byte	0x17
 18556 672c 2801     		.value	0x128
 18557 672e 00000000 		.long	.LASF897
 18558 6732 E6650000 		.long	0x65e6
 18559 6736 01       		.byte	0x1
 18560 6737 3F670000 		.long	0x673f
 18561 673b 45670000 		.long	0x6745
 18562 673f 08       		.uleb128 0x8
 18563 6740 E4B20000 		.long	0xb2e4
 18564 6744 00       		.byte	0
 18565 6745 33       		.uleb128 0x33
 18566 6746 67657400 		.string	"get"
 18567 674a 17       		.byte	0x17
 18568 674b 3001     		.value	0x130
 18569 674d 00000000 		.long	.LASF898
 18570 6751 E6650000 		.long	0x65e6
 18571 6755 01       		.byte	0x1
 18572 6756 5E670000 		.long	0x675e
 18573 675a 64670000 		.long	0x6764
 18574 675e 08       		.uleb128 0x8
 18575 675f E4B20000 		.long	0xb2e4
 18576 6763 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 628


 18577 6764 32       		.uleb128 0x32
 18578 6765 00000000 		.long	.LASF848
 18579 6769 17       		.byte	0x17
 18580 676a 3501     		.value	0x135
 18581 676c 00000000 		.long	.LASF899
 18582 6770 EAB20000 		.long	0xb2ea
 18583 6774 01       		.byte	0x1
 18584 6775 7D670000 		.long	0x677d
 18585 6779 83670000 		.long	0x6783
 18586 677d 08       		.uleb128 0x8
 18587 677e CAB20000 		.long	0xb2ca
 18588 6782 00       		.byte	0
 18589 6783 32       		.uleb128 0x32
 18590 6784 00000000 		.long	.LASF848
 18591 6788 17       		.byte	0x17
 18592 6789 3A01     		.value	0x13a
 18593 678b 00000000 		.long	.LASF900
 18594 678f F0B20000 		.long	0xb2f0
 18595 6793 01       		.byte	0x1
 18596 6794 9C670000 		.long	0x679c
 18597 6798 A2670000 		.long	0x67a2
 18598 679c 08       		.uleb128 0x8
 18599 679d E4B20000 		.long	0xb2e4
 18600 67a1 00       		.byte	0
 18601 67a2 11       		.uleb128 0x11
 18602 67a3 F2650000 		.long	0x65f2
 18603 67a7 73       		.uleb128 0x73
 18604 67a8 00000000 		.long	.LASF851
 18605 67ac 17       		.byte	0x17
 18606 67ad 3E01     		.value	0x13e
 18607 67af 00000000 		.long	.LASF902
 18608 67b3 E0800000 		.long	0x80e0
 18609 67b7 01       		.byte	0x1
 18610 67b8 C0670000 		.long	0x67c0
 18611 67bc C6670000 		.long	0x67c6
 18612 67c0 08       		.uleb128 0x8
 18613 67c1 E4B20000 		.long	0xb2e4
 18614 67c5 00       		.byte	0
 18615 67c6 32       		.uleb128 0x32
 18616 67c7 00000000 		.long	.LASF852
 18617 67cb 17       		.byte	0x17
 18618 67cc 4501     		.value	0x145
 18619 67ce 00000000 		.long	.LASF903
 18620 67d2 E6650000 		.long	0x65e6
 18621 67d6 01       		.byte	0x1
 18622 67d7 DF670000 		.long	0x67df
 18623 67db E5670000 		.long	0x67e5
 18624 67df 08       		.uleb128 0x8
 18625 67e0 CAB20000 		.long	0xb2ca
 18626 67e4 00       		.byte	0
 18627 67e5 34       		.uleb128 0x34
 18628 67e6 00000000 		.long	.LASF756
 18629 67ea 17       		.byte	0x17
 18630 67eb 5301     		.value	0x153
 18631 67ed 00000000 		.long	.LASF904
 18632 67f1 01       		.byte	0x1
 18633 67f2 FA670000 		.long	0x67fa
GAS LISTING /tmp/ccmMnd7l.s 			page 629


 18634 67f6 05680000 		.long	0x6805
 18635 67fa 08       		.uleb128 0x8
 18636 67fb CAB20000 		.long	0xb2ca
 18637 67ff 09       		.uleb128 0x9
 18638 6800 E6650000 		.long	0x65e6
 18639 6804 00       		.byte	0
 18640 6805 34       		.uleb128 0x34
 18641 6806 00000000 		.long	.LASF13
 18642 680a 17       		.byte	0x17
 18643 680b 5D01     		.value	0x15d
 18644 680d 00000000 		.long	.LASF905
 18645 6811 01       		.byte	0x1
 18646 6812 1A680000 		.long	0x681a
 18647 6816 25680000 		.long	0x6825
 18648 681a 08       		.uleb128 0x8
 18649 681b CAB20000 		.long	0xb2ca
 18650 681f 09       		.uleb128 0x9
 18651 6820 DEB20000 		.long	0xb2de
 18652 6824 00       		.byte	0
 18653 6825 30       		.uleb128 0x30
 18654 6826 00000000 		.long	.LASF839
 18655 682a 17       		.byte	0x17
 18656 682b 6401     		.value	0x164
 18657 682d 01       		.byte	0x1
 18658 682e 36680000 		.long	0x6836
 18659 6832 41680000 		.long	0x6841
 18660 6836 08       		.uleb128 0x8
 18661 6837 CAB20000 		.long	0xb2ca
 18662 683b 09       		.uleb128 0x9
 18663 683c F6B20000 		.long	0xb2f6
 18664 6840 00       		.byte	0
 18665 6841 32       		.uleb128 0x32
 18666 6842 00000000 		.long	.LASF8
 18667 6846 17       		.byte	0x17
 18668 6847 6501     		.value	0x165
 18669 6849 00000000 		.long	.LASF906
 18670 684d DEB20000 		.long	0xb2de
 18671 6851 01       		.byte	0x1
 18672 6852 5A680000 		.long	0x685a
 18673 6856 65680000 		.long	0x6865
 18674 685a 08       		.uleb128 0x8
 18675 685b CAB20000 		.long	0xb2ca
 18676 685f 09       		.uleb128 0x9
 18677 6860 F6B20000 		.long	0xb2f6
 18678 6864 00       		.byte	0
 18679 6865 18       		.uleb128 0x18
 18680 6866 5F547000 		.string	"_Tp"
 18681 686a 0AB00000 		.long	0xb00a
 18682 686e 74       		.uleb128 0x74
 18683 686f 5F447000 		.string	"_Dp"
 18684 6873 F6520000 		.long	0x52f6
 18685 6877 00       		.byte	0
 18686 6878 16       		.uleb128 0x16
 18687 6879 00000000 		.long	.LASF907
 18688 687d 01       		.byte	0x1
 18689 687e 0A       		.byte	0xa
 18690 687f 52       		.byte	0x52
GAS LISTING /tmp/ccmMnd7l.s 			page 630


 18691 6880 46690000 		.long	0x6946
 18692 6884 25       		.uleb128 0x25
 18693 6885 F6520000 		.long	0x52f6
 18694 6889 00       		.byte	0
 18695 688a 37       		.uleb128 0x37
 18696 688b 00000000 		.long	.LASF805
 18697 688f 0A       		.byte	0xa
 18698 6890 55       		.byte	0x55
 18699 6891 99680000 		.long	0x6899
 18700 6895 9F680000 		.long	0x689f
 18701 6899 08       		.uleb128 0x8
 18702 689a 20B20000 		.long	0xb220
 18703 689e 00       		.byte	0
 18704 689f 37       		.uleb128 0x37
 18705 68a0 00000000 		.long	.LASF805
 18706 68a4 0A       		.byte	0xa
 18707 68a5 58       		.byte	0x58
 18708 68a6 AE680000 		.long	0x68ae
 18709 68aa B9680000 		.long	0x68b9
 18710 68ae 08       		.uleb128 0x8
 18711 68af 20B20000 		.long	0xb220
 18712 68b3 09       		.uleb128 0x9
 18713 68b4 26B20000 		.long	0xb226
 18714 68b8 00       		.byte	0
 18715 68b9 37       		.uleb128 0x37
 18716 68ba 00000000 		.long	.LASF805
 18717 68be 0A       		.byte	0xa
 18718 68bf 61       		.byte	0x61
 18719 68c0 C8680000 		.long	0x68c8
 18720 68c4 D3680000 		.long	0x68d3
 18721 68c8 08       		.uleb128 0x8
 18722 68c9 20B20000 		.long	0xb220
 18723 68cd 09       		.uleb128 0x9
 18724 68ce E4230000 		.long	0x23e4
 18725 68d2 00       		.byte	0
 18726 68d3 4E       		.uleb128 0x4e
 18727 68d4 00000000 		.long	.LASF806
 18728 68d8 0A       		.byte	0xa
 18729 68d9 79       		.byte	0x79
 18730 68da 00000000 		.long	.LASF908
 18731 68de 2CB20000 		.long	0xb22c
 18732 68e2 EC680000 		.long	0x68ec
 18733 68e6 09       		.uleb128 0x9
 18734 68e7 32B20000 		.long	0xb232
 18735 68eb 00       		.byte	0
 18736 68ec 4E       		.uleb128 0x4e
 18737 68ed 00000000 		.long	.LASF806
 18738 68f1 0A       		.byte	0xa
 18739 68f2 7C       		.byte	0x7c
 18740 68f3 00000000 		.long	.LASF909
 18741 68f7 26B20000 		.long	0xb226
 18742 68fb 05690000 		.long	0x6905
 18743 68ff 09       		.uleb128 0x9
 18744 6900 38B20000 		.long	0xb238
 18745 6904 00       		.byte	0
 18746 6905 37       		.uleb128 0x37
 18747 6906 00000000 		.long	.LASF910
GAS LISTING /tmp/ccmMnd7l.s 			page 631


 18748 690a 0A       		.byte	0xa
 18749 690b 5E       		.byte	0x5e
 18750 690c 1D690000 		.long	0x691d
 18751 6910 28690000 		.long	0x6928
 18752 6914 35       		.uleb128 0x35
 18753 6915 00000000 		.long	.LASF810
 18754 6919 F6520000 		.long	0x52f6
 18755 691d 08       		.uleb128 0x8
 18756 691e 20B20000 		.long	0xb220
 18757 6922 09       		.uleb128 0x9
 18758 6923 03B30000 		.long	0xb303
 18759 6927 00       		.byte	0
 18760 6928 50       		.uleb128 0x50
 18761 6929 00000000 		.long	.LASF801
 18762 692d 03810000 		.long	0x8103
 18763 6931 01       		.byte	0x1
 18764 6932 35       		.uleb128 0x35
 18765 6933 00000000 		.long	.LASF811
 18766 6937 F6520000 		.long	0x52f6
 18767 693b 50       		.uleb128 0x50
 18768 693c 00000000 		.long	.LASF812
 18769 6940 E0800000 		.long	0x80e0
 18770 6944 01       		.byte	0x1
 18771 6945 00       		.byte	0
 18772 6946 11       		.uleb128 0x11
 18773 6947 F6520000 		.long	0x52f6
 18774 694b 11       		.uleb128 0x11
 18775 694c 78680000 		.long	0x6878
 18776 6950 16       		.uleb128 0x16
 18777 6951 00000000 		.long	.LASF911
 18778 6955 01       		.byte	0x1
 18779 6956 0A       		.byte	0xa
 18780 6957 E5       		.byte	0xe5
 18781 6958 E76A0000 		.long	0x6ae7
 18782 695c 25       		.uleb128 0x25
 18783 695d D65E0000 		.long	0x5ed6
 18784 6961 00       		.byte	0
 18785 6962 21       		.uleb128 0x21
 18786 6963 78680000 		.long	0x6878
 18787 6967 00       		.byte	0
 18788 6968 03       		.byte	0x3
 18789 6969 13       		.uleb128 0x13
 18790 696a 00000000 		.long	.LASF814
 18791 696e 0A       		.byte	0xa
 18792 696f EB       		.byte	0xeb
 18793 6970 D65E0000 		.long	0x5ed6
 18794 6974 4E       		.uleb128 0x4e
 18795 6975 00000000 		.long	.LASF806
 18796 6979 0A       		.byte	0xa
 18797 697a EF       		.byte	0xef
 18798 697b 00000000 		.long	.LASF912
 18799 697f 2CB20000 		.long	0xb22c
 18800 6983 8D690000 		.long	0x698d
 18801 6987 09       		.uleb128 0x9
 18802 6988 3EB20000 		.long	0xb23e
 18803 698c 00       		.byte	0
 18804 698d 4E       		.uleb128 0x4e
GAS LISTING /tmp/ccmMnd7l.s 			page 632


 18805 698e 00000000 		.long	.LASF806
 18806 6992 0A       		.byte	0xa
 18807 6993 F2       		.byte	0xf2
 18808 6994 00000000 		.long	.LASF913
 18809 6998 26B20000 		.long	0xb226
 18810 699c A6690000 		.long	0x69a6
 18811 69a0 09       		.uleb128 0x9
 18812 69a1 44B20000 		.long	0xb244
 18813 69a5 00       		.byte	0
 18814 69a6 4E       		.uleb128 0x4e
 18815 69a7 00000000 		.long	.LASF817
 18816 69ab 0A       		.byte	0xa
 18817 69ac F5       		.byte	0xf5
 18818 69ad 00000000 		.long	.LASF914
 18819 69b1 4AB20000 		.long	0xb24a
 18820 69b5 BF690000 		.long	0x69bf
 18821 69b9 09       		.uleb128 0x9
 18822 69ba 3EB20000 		.long	0xb23e
 18823 69be 00       		.byte	0
 18824 69bf 4E       		.uleb128 0x4e
 18825 69c0 00000000 		.long	.LASF817
 18826 69c4 0A       		.byte	0xa
 18827 69c5 F8       		.byte	0xf8
 18828 69c6 00000000 		.long	.LASF915
 18829 69ca 50B20000 		.long	0xb250
 18830 69ce D8690000 		.long	0x69d8
 18831 69d2 09       		.uleb128 0x9
 18832 69d3 44B20000 		.long	0xb244
 18833 69d7 00       		.byte	0
 18834 69d8 11       		.uleb128 0x11
 18835 69d9 69690000 		.long	0x6969
 18836 69dd 37       		.uleb128 0x37
 18837 69de 00000000 		.long	.LASF798
 18838 69e2 0A       		.byte	0xa
 18839 69e3 FA       		.byte	0xfa
 18840 69e4 EC690000 		.long	0x69ec
 18841 69e8 F2690000 		.long	0x69f2
 18842 69ec 08       		.uleb128 0x8
 18843 69ed 56B20000 		.long	0xb256
 18844 69f1 00       		.byte	0
 18845 69f2 07       		.uleb128 0x7
 18846 69f3 00000000 		.long	.LASF798
 18847 69f7 0A       		.byte	0xa
 18848 69f8 FE       		.byte	0xfe
 18849 69f9 016A0000 		.long	0x6a01
 18850 69fd 0C6A0000 		.long	0x6a0c
 18851 6a01 08       		.uleb128 0x8
 18852 6a02 56B20000 		.long	0xb256
 18853 6a06 09       		.uleb128 0x9
 18854 6a07 26B20000 		.long	0xb226
 18855 6a0b 00       		.byte	0
 18856 6a0c 27       		.uleb128 0x27
 18857 6a0d 00000000 		.long	.LASF798
 18858 6a11 0A       		.byte	0xa
 18859 6a12 0801     		.value	0x108
 18860 6a14 1C6A0000 		.long	0x6a1c
 18861 6a18 276A0000 		.long	0x6a27
GAS LISTING /tmp/ccmMnd7l.s 			page 633


 18862 6a1c 08       		.uleb128 0x8
 18863 6a1d 56B20000 		.long	0xb256
 18864 6a21 09       		.uleb128 0x9
 18865 6a22 44B20000 		.long	0xb244
 18866 6a26 00       		.byte	0
 18867 6a27 27       		.uleb128 0x27
 18868 6a28 00000000 		.long	.LASF798
 18869 6a2c 0A       		.byte	0xa
 18870 6a2d 0B01     		.value	0x10b
 18871 6a2f 376A0000 		.long	0x6a37
 18872 6a33 426A0000 		.long	0x6a42
 18873 6a37 08       		.uleb128 0x8
 18874 6a38 56B20000 		.long	0xb256
 18875 6a3c 09       		.uleb128 0x9
 18876 6a3d 5CB20000 		.long	0xb25c
 18877 6a41 00       		.byte	0
 18878 6a42 2C       		.uleb128 0x2c
 18879 6a43 00000000 		.long	.LASF8
 18880 6a47 0A       		.byte	0xa
 18881 6a48 5001     		.value	0x150
 18882 6a4a 00000000 		.long	.LASF916
 18883 6a4e 3EB20000 		.long	0xb23e
 18884 6a52 5A6A0000 		.long	0x6a5a
 18885 6a56 656A0000 		.long	0x6a65
 18886 6a5a 08       		.uleb128 0x8
 18887 6a5b 56B20000 		.long	0xb256
 18888 6a5f 09       		.uleb128 0x9
 18889 6a60 44B20000 		.long	0xb244
 18890 6a64 00       		.byte	0
 18891 6a65 2C       		.uleb128 0x2c
 18892 6a66 00000000 		.long	.LASF8
 18893 6a6a 0A       		.byte	0xa
 18894 6a6b 5801     		.value	0x158
 18895 6a6d 00000000 		.long	.LASF917
 18896 6a71 3EB20000 		.long	0xb23e
 18897 6a75 7D6A0000 		.long	0x6a7d
 18898 6a79 886A0000 		.long	0x6a88
 18899 6a7d 08       		.uleb128 0x8
 18900 6a7e 56B20000 		.long	0xb256
 18901 6a82 09       		.uleb128 0x9
 18902 6a83 5CB20000 		.long	0xb25c
 18903 6a87 00       		.byte	0
 18904 6a88 34       		.uleb128 0x34
 18905 6a89 00000000 		.long	.LASF799
 18906 6a8d 0A       		.byte	0xa
 18907 6a8e 7701     		.value	0x177
 18908 6a90 00000000 		.long	.LASF918
 18909 6a94 02       		.byte	0x2
 18910 6a95 9D6A0000 		.long	0x6a9d
 18911 6a99 A86A0000 		.long	0x6aa8
 18912 6a9d 08       		.uleb128 0x8
 18913 6a9e 56B20000 		.long	0xb256
 18914 6aa2 09       		.uleb128 0x9
 18915 6aa3 3EB20000 		.long	0xb23e
 18916 6aa7 00       		.byte	0
 18917 6aa8 63       		.uleb128 0x63
 18918 6aa9 00000000 		.long	.LASF919
GAS LISTING /tmp/ccmMnd7l.s 			page 634


 18919 6aad 0A       		.byte	0xa
 18920 6aae 0401     		.value	0x104
 18921 6ab0 C66A0000 		.long	0x6ac6
 18922 6ab4 D16A0000 		.long	0x6ad1
 18923 6ab8 35       		.uleb128 0x35
 18924 6ab9 00000000 		.long	.LASF810
 18925 6abd F6520000 		.long	0x52f6
 18926 6ac1 6B       		.uleb128 0x6b
 18927 6ac2 00000000 		.long	.LASF824
 18928 6ac6 08       		.uleb128 0x8
 18929 6ac7 56B20000 		.long	0xb256
 18930 6acb 09       		.uleb128 0x9
 18931 6acc 03B30000 		.long	0xb303
 18932 6ad0 00       		.byte	0
 18933 6ad1 50       		.uleb128 0x50
 18934 6ad2 00000000 		.long	.LASF801
 18935 6ad6 03810000 		.long	0x8103
 18936 6ada 01       		.byte	0x1
 18937 6adb 67       		.uleb128 0x67
 18938 6adc 00000000 		.long	.LASF802
 18939 6ae0 68       		.uleb128 0x68
 18940 6ae1 F6520000 		.long	0x52f6
 18941 6ae5 00       		.byte	0
 18942 6ae6 00       		.byte	0
 18943 6ae7 11       		.uleb128 0x11
 18944 6ae8 50690000 		.long	0x6950
 18945 6aec 16       		.uleb128 0x16
 18946 6aed 00000000 		.long	.LASF920
 18947 6af1 08       		.byte	0x8
 18948 6af2 0A       		.byte	0xa
 18949 6af3 80       		.byte	0x80
 18950 6af4 C06B0000 		.long	0x6bc0
 18951 6af8 06       		.uleb128 0x6
 18952 6af9 00000000 		.long	.LASF804
 18953 6afd 0A       		.byte	0xa
 18954 6afe AC       		.byte	0xac
 18955 6aff 57B00000 		.long	0xb057
 18956 6b03 00       		.byte	0
 18957 6b04 37       		.uleb128 0x37
 18958 6b05 00000000 		.long	.LASF805
 18959 6b09 0A       		.byte	0xa
 18960 6b0a 82       		.byte	0x82
 18961 6b0b 136B0000 		.long	0x6b13
 18962 6b0f 196B0000 		.long	0x6b19
 18963 6b13 08       		.uleb128 0x8
 18964 6b14 63B20000 		.long	0xb263
 18965 6b18 00       		.byte	0
 18966 6b19 37       		.uleb128 0x37
 18967 6b1a 00000000 		.long	.LASF805
 18968 6b1e 0A       		.byte	0xa
 18969 6b1f 85       		.byte	0x85
 18970 6b20 286B0000 		.long	0x6b28
 18971 6b24 336B0000 		.long	0x6b33
 18972 6b28 08       		.uleb128 0x8
 18973 6b29 63B20000 		.long	0xb263
 18974 6b2d 09       		.uleb128 0x9
 18975 6b2e 69B20000 		.long	0xb269
GAS LISTING /tmp/ccmMnd7l.s 			page 635


 18976 6b32 00       		.byte	0
 18977 6b33 37       		.uleb128 0x37
 18978 6b34 00000000 		.long	.LASF805
 18979 6b38 0A       		.byte	0xa
 18980 6b39 8E       		.byte	0x8e
 18981 6b3a 426B0000 		.long	0x6b42
 18982 6b3e 4D6B0000 		.long	0x6b4d
 18983 6b42 08       		.uleb128 0x8
 18984 6b43 63B20000 		.long	0xb263
 18985 6b47 09       		.uleb128 0x9
 18986 6b48 E4230000 		.long	0x23e4
 18987 6b4c 00       		.byte	0
 18988 6b4d 4E       		.uleb128 0x4e
 18989 6b4e 00000000 		.long	.LASF806
 18990 6b52 0A       		.byte	0xa
 18991 6b53 A7       		.byte	0xa7
 18992 6b54 00000000 		.long	.LASF921
 18993 6b58 74B20000 		.long	0xb274
 18994 6b5c 666B0000 		.long	0x6b66
 18995 6b60 09       		.uleb128 0x9
 18996 6b61 7AB20000 		.long	0xb27a
 18997 6b65 00       		.byte	0
 18998 6b66 4E       		.uleb128 0x4e
 18999 6b67 00000000 		.long	.LASF806
 19000 6b6b 0A       		.byte	0xa
 19001 6b6c AA       		.byte	0xaa
 19002 6b6d 00000000 		.long	.LASF922
 19003 6b71 69B20000 		.long	0xb269
 19004 6b75 7F6B0000 		.long	0x6b7f
 19005 6b79 09       		.uleb128 0x9
 19006 6b7a 80B20000 		.long	0xb280
 19007 6b7e 00       		.byte	0
 19008 6b7f 37       		.uleb128 0x37
 19009 6b80 00000000 		.long	.LASF923
 19010 6b84 0A       		.byte	0xa
 19011 6b85 8B       		.byte	0x8b
 19012 6b86 976B0000 		.long	0x6b97
 19013 6b8a A26B0000 		.long	0x6ba2
 19014 6b8e 35       		.uleb128 0x35
 19015 6b8f 00000000 		.long	.LASF810
 19016 6b93 74B20000 		.long	0xb274
 19017 6b97 08       		.uleb128 0x8
 19018 6b98 63B20000 		.long	0xb263
 19019 6b9c 09       		.uleb128 0x9
 19020 6b9d 74B20000 		.long	0xb274
 19021 6ba1 00       		.byte	0
 19022 6ba2 50       		.uleb128 0x50
 19023 6ba3 00000000 		.long	.LASF801
 19024 6ba7 03810000 		.long	0x8103
 19025 6bab 00       		.byte	0
 19026 6bac 35       		.uleb128 0x35
 19027 6bad 00000000 		.long	.LASF811
 19028 6bb1 57B00000 		.long	0xb057
 19029 6bb5 50       		.uleb128 0x50
 19030 6bb6 00000000 		.long	.LASF812
 19031 6bba E0800000 		.long	0x80e0
 19032 6bbe 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 636


 19033 6bbf 00       		.byte	0
 19034 6bc0 11       		.uleb128 0x11
 19035 6bc1 EC6A0000 		.long	0x6aec
 19036 6bc5 16       		.uleb128 0x16
 19037 6bc6 00000000 		.long	.LASF924
 19038 6bca 08       		.byte	0x8
 19039 6bcb 0A       		.byte	0xa
 19040 6bcc E5       		.byte	0xe5
 19041 6bcd 756D0000 		.long	0x6d75
 19042 6bd1 25       		.uleb128 0x25
 19043 6bd2 50690000 		.long	0x6950
 19044 6bd6 00       		.byte	0
 19045 6bd7 21       		.uleb128 0x21
 19046 6bd8 EC6A0000 		.long	0x6aec
 19047 6bdc 00       		.byte	0
 19048 6bdd 03       		.byte	0x3
 19049 6bde 13       		.uleb128 0x13
 19050 6bdf 00000000 		.long	.LASF814
 19051 6be3 0A       		.byte	0xa
 19052 6be4 EB       		.byte	0xeb
 19053 6be5 50690000 		.long	0x6950
 19054 6be9 4E       		.uleb128 0x4e
 19055 6bea 00000000 		.long	.LASF806
 19056 6bee 0A       		.byte	0xa
 19057 6bef EF       		.byte	0xef
 19058 6bf0 00000000 		.long	.LASF925
 19059 6bf4 74B20000 		.long	0xb274
 19060 6bf8 026C0000 		.long	0x6c02
 19061 6bfc 09       		.uleb128 0x9
 19062 6bfd 86B20000 		.long	0xb286
 19063 6c01 00       		.byte	0
 19064 6c02 4E       		.uleb128 0x4e
 19065 6c03 00000000 		.long	.LASF806
 19066 6c07 0A       		.byte	0xa
 19067 6c08 F2       		.byte	0xf2
 19068 6c09 00000000 		.long	.LASF926
 19069 6c0d 69B20000 		.long	0xb269
 19070 6c11 1B6C0000 		.long	0x6c1b
 19071 6c15 09       		.uleb128 0x9
 19072 6c16 8CB20000 		.long	0xb28c
 19073 6c1a 00       		.byte	0
 19074 6c1b 4E       		.uleb128 0x4e
 19075 6c1c 00000000 		.long	.LASF817
 19076 6c20 0A       		.byte	0xa
 19077 6c21 F5       		.byte	0xf5
 19078 6c22 00000000 		.long	.LASF927
 19079 6c26 92B20000 		.long	0xb292
 19080 6c2a 346C0000 		.long	0x6c34
 19081 6c2e 09       		.uleb128 0x9
 19082 6c2f 86B20000 		.long	0xb286
 19083 6c33 00       		.byte	0
 19084 6c34 4E       		.uleb128 0x4e
 19085 6c35 00000000 		.long	.LASF817
 19086 6c39 0A       		.byte	0xa
 19087 6c3a F8       		.byte	0xf8
 19088 6c3b 00000000 		.long	.LASF928
 19089 6c3f 98B20000 		.long	0xb298
GAS LISTING /tmp/ccmMnd7l.s 			page 637


 19090 6c43 4D6C0000 		.long	0x6c4d
 19091 6c47 09       		.uleb128 0x9
 19092 6c48 8CB20000 		.long	0xb28c
 19093 6c4c 00       		.byte	0
 19094 6c4d 11       		.uleb128 0x11
 19095 6c4e DE6B0000 		.long	0x6bde
 19096 6c52 37       		.uleb128 0x37
 19097 6c53 00000000 		.long	.LASF798
 19098 6c57 0A       		.byte	0xa
 19099 6c58 FA       		.byte	0xfa
 19100 6c59 616C0000 		.long	0x6c61
 19101 6c5d 676C0000 		.long	0x6c67
 19102 6c61 08       		.uleb128 0x8
 19103 6c62 9EB20000 		.long	0xb29e
 19104 6c66 00       		.byte	0
 19105 6c67 07       		.uleb128 0x7
 19106 6c68 00000000 		.long	.LASF798
 19107 6c6c 0A       		.byte	0xa
 19108 6c6d FE       		.byte	0xfe
 19109 6c6e 766C0000 		.long	0x6c76
 19110 6c72 866C0000 		.long	0x6c86
 19111 6c76 08       		.uleb128 0x8
 19112 6c77 9EB20000 		.long	0xb29e
 19113 6c7b 09       		.uleb128 0x9
 19114 6c7c 69B20000 		.long	0xb269
 19115 6c80 09       		.uleb128 0x9
 19116 6c81 26B20000 		.long	0xb226
 19117 6c85 00       		.byte	0
 19118 6c86 27       		.uleb128 0x27
 19119 6c87 00000000 		.long	.LASF798
 19120 6c8b 0A       		.byte	0xa
 19121 6c8c 0801     		.value	0x108
 19122 6c8e 966C0000 		.long	0x6c96
 19123 6c92 A16C0000 		.long	0x6ca1
 19124 6c96 08       		.uleb128 0x8
 19125 6c97 9EB20000 		.long	0xb29e
 19126 6c9b 09       		.uleb128 0x9
 19127 6c9c 8CB20000 		.long	0xb28c
 19128 6ca0 00       		.byte	0
 19129 6ca1 27       		.uleb128 0x27
 19130 6ca2 00000000 		.long	.LASF798
 19131 6ca6 0A       		.byte	0xa
 19132 6ca7 0B01     		.value	0x10b
 19133 6ca9 B16C0000 		.long	0x6cb1
 19134 6cad BC6C0000 		.long	0x6cbc
 19135 6cb1 08       		.uleb128 0x8
 19136 6cb2 9EB20000 		.long	0xb29e
 19137 6cb6 09       		.uleb128 0x9
 19138 6cb7 A4B20000 		.long	0xb2a4
 19139 6cbb 00       		.byte	0
 19140 6cbc 2C       		.uleb128 0x2c
 19141 6cbd 00000000 		.long	.LASF8
 19142 6cc1 0A       		.byte	0xa
 19143 6cc2 5001     		.value	0x150
 19144 6cc4 00000000 		.long	.LASF929
 19145 6cc8 86B20000 		.long	0xb286
 19146 6ccc D46C0000 		.long	0x6cd4
GAS LISTING /tmp/ccmMnd7l.s 			page 638


 19147 6cd0 DF6C0000 		.long	0x6cdf
 19148 6cd4 08       		.uleb128 0x8
 19149 6cd5 9EB20000 		.long	0xb29e
 19150 6cd9 09       		.uleb128 0x9
 19151 6cda 8CB20000 		.long	0xb28c
 19152 6cde 00       		.byte	0
 19153 6cdf 2C       		.uleb128 0x2c
 19154 6ce0 00000000 		.long	.LASF8
 19155 6ce4 0A       		.byte	0xa
 19156 6ce5 5801     		.value	0x158
 19157 6ce7 00000000 		.long	.LASF930
 19158 6ceb 86B20000 		.long	0xb286
 19159 6cef F76C0000 		.long	0x6cf7
 19160 6cf3 026D0000 		.long	0x6d02
 19161 6cf7 08       		.uleb128 0x8
 19162 6cf8 9EB20000 		.long	0xb29e
 19163 6cfc 09       		.uleb128 0x9
 19164 6cfd A4B20000 		.long	0xb2a4
 19165 6d01 00       		.byte	0
 19166 6d02 34       		.uleb128 0x34
 19167 6d03 00000000 		.long	.LASF799
 19168 6d07 0A       		.byte	0xa
 19169 6d08 7701     		.value	0x177
 19170 6d0a 00000000 		.long	.LASF931
 19171 6d0e 02       		.byte	0x2
 19172 6d0f 176D0000 		.long	0x6d17
 19173 6d13 226D0000 		.long	0x6d22
 19174 6d17 08       		.uleb128 0x8
 19175 6d18 9EB20000 		.long	0xb29e
 19176 6d1c 09       		.uleb128 0x9
 19177 6d1d 86B20000 		.long	0xb286
 19178 6d21 00       		.byte	0
 19179 6d22 63       		.uleb128 0x63
 19180 6d23 00000000 		.long	.LASF932
 19181 6d27 0A       		.byte	0xa
 19182 6d28 0401     		.value	0x104
 19183 6d2a 4A6D0000 		.long	0x6d4a
 19184 6d2e 5A6D0000 		.long	0x6d5a
 19185 6d32 35       		.uleb128 0x35
 19186 6d33 00000000 		.long	.LASF810
 19187 6d37 74B20000 		.long	0xb274
 19188 6d3b 6A       		.uleb128 0x6a
 19189 6d3c 00000000 		.long	.LASF824
 19190 6d40 4A6D0000 		.long	0x6d4a
 19191 6d44 68       		.uleb128 0x68
 19192 6d45 F6520000 		.long	0x52f6
 19193 6d49 00       		.byte	0
 19194 6d4a 08       		.uleb128 0x8
 19195 6d4b 9EB20000 		.long	0xb29e
 19196 6d4f 09       		.uleb128 0x9
 19197 6d50 74B20000 		.long	0xb274
 19198 6d54 09       		.uleb128 0x9
 19199 6d55 03B30000 		.long	0xb303
 19200 6d59 00       		.byte	0
 19201 6d5a 50       		.uleb128 0x50
 19202 6d5b 00000000 		.long	.LASF801
 19203 6d5f 03810000 		.long	0x8103
GAS LISTING /tmp/ccmMnd7l.s 			page 639


 19204 6d63 00       		.byte	0
 19205 6d64 67       		.uleb128 0x67
 19206 6d65 00000000 		.long	.LASF802
 19207 6d69 68       		.uleb128 0x68
 19208 6d6a 57B00000 		.long	0xb057
 19209 6d6e 68       		.uleb128 0x68
 19210 6d6f F6520000 		.long	0x52f6
 19211 6d73 00       		.byte	0
 19212 6d74 00       		.byte	0
 19213 6d75 11       		.uleb128 0x11
 19214 6d76 C56B0000 		.long	0x6bc5
 19215 6d7a 3B       		.uleb128 0x3b
 19216 6d7b 00000000 		.long	.LASF933
 19217 6d7f 08       		.byte	0x8
 19218 6d80 0A       		.byte	0xa
 19219 6d81 0902     		.value	0x209
 19220 6d83 9B6E0000 		.long	0x6e9b
 19221 6d87 21       		.uleb128 0x21
 19222 6d88 C56B0000 		.long	0x6bc5
 19223 6d8c 00       		.byte	0
 19224 6d8d 01       		.byte	0x1
 19225 6d8e 30       		.uleb128 0x30
 19226 6d8f 00000000 		.long	.LASF827
 19227 6d93 0A       		.byte	0xa
 19228 6d94 0E02     		.value	0x20e
 19229 6d96 01       		.byte	0x1
 19230 6d97 9F6D0000 		.long	0x6d9f
 19231 6d9b A56D0000 		.long	0x6da5
 19232 6d9f 08       		.uleb128 0x8
 19233 6da0 ABB20000 		.long	0xb2ab
 19234 6da4 00       		.byte	0
 19235 6da5 31       		.uleb128 0x31
 19236 6da6 00000000 		.long	.LASF827
 19237 6daa 0A       		.byte	0xa
 19238 6dab 1202     		.value	0x212
 19239 6dad 01       		.byte	0x1
 19240 6dae B66D0000 		.long	0x6db6
 19241 6db2 C66D0000 		.long	0x6dc6
 19242 6db6 08       		.uleb128 0x8
 19243 6db7 ABB20000 		.long	0xb2ab
 19244 6dbb 09       		.uleb128 0x9
 19245 6dbc 69B20000 		.long	0xb269
 19246 6dc0 09       		.uleb128 0x9
 19247 6dc1 26B20000 		.long	0xb226
 19248 6dc5 00       		.byte	0
 19249 6dc6 30       		.uleb128 0x30
 19250 6dc7 00000000 		.long	.LASF827
 19251 6dcb 0A       		.byte	0xa
 19252 6dcc 1C02     		.value	0x21c
 19253 6dce 01       		.byte	0x1
 19254 6dcf D76D0000 		.long	0x6dd7
 19255 6dd3 E26D0000 		.long	0x6de2
 19256 6dd7 08       		.uleb128 0x8
 19257 6dd8 ABB20000 		.long	0xb2ab
 19258 6ddc 09       		.uleb128 0x9
 19259 6ddd B1B20000 		.long	0xb2b1
 19260 6de1 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 640


 19261 6de2 30       		.uleb128 0x30
 19262 6de3 00000000 		.long	.LASF827
 19263 6de7 0A       		.byte	0xa
 19264 6de8 1E02     		.value	0x21e
 19265 6dea 01       		.byte	0x1
 19266 6deb F36D0000 		.long	0x6df3
 19267 6def FE6D0000 		.long	0x6dfe
 19268 6df3 08       		.uleb128 0x8
 19269 6df4 ABB20000 		.long	0xb2ab
 19270 6df8 09       		.uleb128 0x9
 19271 6df9 B7B20000 		.long	0xb2b7
 19272 6dfd 00       		.byte	0
 19273 6dfe 32       		.uleb128 0x32
 19274 6dff 00000000 		.long	.LASF8
 19275 6e03 0A       		.byte	0xa
 19276 6e04 6802     		.value	0x268
 19277 6e06 00000000 		.long	.LASF934
 19278 6e0a BEB20000 		.long	0xb2be
 19279 6e0e 01       		.byte	0x1
 19280 6e0f 176E0000 		.long	0x6e17
 19281 6e13 226E0000 		.long	0x6e22
 19282 6e17 08       		.uleb128 0x8
 19283 6e18 ABB20000 		.long	0xb2ab
 19284 6e1c 09       		.uleb128 0x9
 19285 6e1d B1B20000 		.long	0xb2b1
 19286 6e21 00       		.byte	0
 19287 6e22 32       		.uleb128 0x32
 19288 6e23 00000000 		.long	.LASF8
 19289 6e27 0A       		.byte	0xa
 19290 6e28 6F02     		.value	0x26f
 19291 6e2a 00000000 		.long	.LASF935
 19292 6e2e BEB20000 		.long	0xb2be
 19293 6e32 01       		.byte	0x1
 19294 6e33 3B6E0000 		.long	0x6e3b
 19295 6e37 466E0000 		.long	0x6e46
 19296 6e3b 08       		.uleb128 0x8
 19297 6e3c ABB20000 		.long	0xb2ab
 19298 6e40 09       		.uleb128 0x9
 19299 6e41 B7B20000 		.long	0xb2b7
 19300 6e45 00       		.byte	0
 19301 6e46 34       		.uleb128 0x34
 19302 6e47 00000000 		.long	.LASF13
 19303 6e4b 0A       		.byte	0xa
 19304 6e4c 9902     		.value	0x299
 19305 6e4e 00000000 		.long	.LASF936
 19306 6e52 01       		.byte	0x1
 19307 6e53 5B6E0000 		.long	0x6e5b
 19308 6e57 666E0000 		.long	0x6e66
 19309 6e5b 08       		.uleb128 0x8
 19310 6e5c ABB20000 		.long	0xb2ab
 19311 6e60 09       		.uleb128 0x9
 19312 6e61 BEB20000 		.long	0xb2be
 19313 6e65 00       		.byte	0
 19314 6e66 31       		.uleb128 0x31
 19315 6e67 00000000 		.long	.LASF937
 19316 6e6b 0A       		.byte	0xa
 19317 6e6c 1902     		.value	0x219
GAS LISTING /tmp/ccmMnd7l.s 			page 641


 19318 6e6e 01       		.byte	0x1
 19319 6e6f 896E0000 		.long	0x6e89
 19320 6e73 996E0000 		.long	0x6e99
 19321 6e77 18       		.uleb128 0x18
 19322 6e78 5F553100 		.string	"_U1"
 19323 6e7c 74B20000 		.long	0xb274
 19324 6e80 18       		.uleb128 0x18
 19325 6e81 5F553200 		.string	"_U2"
 19326 6e85 F6520000 		.long	0x52f6
 19327 6e89 08       		.uleb128 0x8
 19328 6e8a ABB20000 		.long	0xb2ab
 19329 6e8e 09       		.uleb128 0x9
 19330 6e8f 74B20000 		.long	0xb274
 19331 6e93 09       		.uleb128 0x9
 19332 6e94 03B30000 		.long	0xb303
 19333 6e98 00       		.byte	0
 19334 6e99 70       		.uleb128 0x70
 19335 6e9a 00       		.byte	0
 19336 6e9b 11       		.uleb128 0x11
 19337 6e9c 7A6D0000 		.long	0x6d7a
 19338 6ea0 24       		.uleb128 0x24
 19339 6ea1 00000000 		.long	.LASF938
 19340 6ea5 01       		.byte	0x1
 19341 6ea6 1B       		.byte	0x1b
 19342 6ea7 AF07     		.value	0x7af
 19343 6ea9 BA6E0000 		.long	0x6eba
 19344 6ead 5C       		.uleb128 0x5c
 19345 6eae 00000000 		.long	.LASF511
 19346 6eb2 1B       		.byte	0x1b
 19347 6eb3 B007     		.value	0x7b0
 19348 6eb5 26B20000 		.long	0xb226
 19349 6eb9 00       		.byte	0
 19350 6eba 24       		.uleb128 0x24
 19351 6ebb 00000000 		.long	.LASF939
 19352 6ebf 01       		.byte	0x1
 19353 6ec0 1B       		.byte	0x1b
 19354 6ec1 EC05     		.value	0x5ec
 19355 6ec3 DD6E0000 		.long	0x6edd
 19356 6ec7 5C       		.uleb128 0x5c
 19357 6ec8 00000000 		.long	.LASF511
 19358 6ecc 1B       		.byte	0x1b
 19359 6ecd ED05     		.value	0x5ed
 19360 6ecf C4B20000 		.long	0xb2c4
 19361 6ed3 18       		.uleb128 0x18
 19362 6ed4 5F547000 		.string	"_Tp"
 19363 6ed8 0AB00000 		.long	0xb00a
 19364 6edc 00       		.byte	0
 19365 6edd 11       		.uleb128 0x11
 19366 6ede AA650000 		.long	0x65aa
 19367 6ee2 3B       		.uleb128 0x3b
 19368 6ee3 00000000 		.long	.LASF940
 19369 6ee7 01       		.byte	0x1
 19370 6ee8 09       		.byte	0x9
 19371 6ee9 8F04     		.value	0x48f
 19372 6eeb 446F0000 		.long	0x6f44
 19373 6eef 66       		.uleb128 0x66
 19374 6ef0 00000000 		.long	.LASF941
GAS LISTING /tmp/ccmMnd7l.s 			page 642


 19375 6ef4 09       		.byte	0x9
 19376 6ef5 9D04     		.value	0x49d
 19377 6ef7 D5B00000 		.long	0xb0d5
 19378 6efb 01       		.byte	0x1
 19379 6efc 166F0000 		.long	0x6f16
 19380 6f00 266F0000 		.long	0x6f26
 19381 6f04 35       		.uleb128 0x35
 19382 6f05 00000000 		.long	.LASF942
 19383 6f09 D5B00000 		.long	0xb0d5
 19384 6f0d 35       		.uleb128 0x35
 19385 6f0e 00000000 		.long	.LASF943
 19386 6f12 31240000 		.long	0x2431
 19387 6f16 08       		.uleb128 0x8
 19388 6f17 30D20000 		.long	0xd230
 19389 6f1b 09       		.uleb128 0x9
 19390 6f1c D5B00000 		.long	0xb0d5
 19391 6f20 09       		.uleb128 0x9
 19392 6f21 0EAC0000 		.long	0xac0e
 19393 6f25 00       		.byte	0
 19394 6f26 35       		.uleb128 0x35
 19395 6f27 00000000 		.long	.LASF944
 19396 6f2b 812C0000 		.long	0x2c81
 19397 6f2f 50       		.uleb128 0x50
 19398 6f30 00000000 		.long	.LASF945
 19399 6f34 E0800000 		.long	0x80e0
 19400 6f38 00       		.byte	0
 19401 6f39 50       		.uleb128 0x50
 19402 6f3a 00000000 		.long	.LASF946
 19403 6f3e E0800000 		.long	0x80e0
 19404 6f42 00       		.byte	0
 19405 6f43 00       		.byte	0
 19406 6f44 24       		.uleb128 0x24
 19407 6f45 00000000 		.long	.LASF947
 19408 6f49 01       		.byte	0x1
 19409 6f4a 1B       		.byte	0x1b
 19410 6f4b E005     		.value	0x5e0
 19411 6f4d 5E6F0000 		.long	0x6f5e
 19412 6f51 5C       		.uleb128 0x5c
 19413 6f52 00000000 		.long	.LASF511
 19414 6f56 1B       		.byte	0x1b
 19415 6f57 E105     		.value	0x5e1
 19416 6f59 63B00000 		.long	0xb063
 19417 6f5d 00       		.byte	0
 19418 6f5e 16       		.uleb128 0x16
 19419 6f5f 00000000 		.long	.LASF948
 19420 6f63 01       		.byte	0x1
 19421 6f64 0A       		.byte	0xa
 19422 6f65 35       		.byte	0x35
 19423 6f66 7F6F0000 		.long	0x6f7f
 19424 6f6a 13       		.uleb128 0x13
 19425 6f6b 00000000 		.long	.LASF511
 19426 6f6f 0A       		.byte	0xa
 19427 6f70 36       		.byte	0x36
 19428 6f71 8DB10000 		.long	0xb18d
 19429 6f75 18       		.uleb128 0x18
 19430 6f76 5F547000 		.string	"_Tp"
 19431 6f7a 63B00000 		.long	0xb063
GAS LISTING /tmp/ccmMnd7l.s 			page 643


 19432 6f7e 00       		.byte	0
 19433 6f7f 16       		.uleb128 0x16
 19434 6f80 00000000 		.long	.LASF949
 19435 6f84 01       		.byte	0x1
 19436 6f85 0A       		.byte	0xa
 19437 6f86 3E       		.byte	0x3e
 19438 6f87 A06F0000 		.long	0x6fa0
 19439 6f8b 13       		.uleb128 0x13
 19440 6f8c 00000000 		.long	.LASF511
 19441 6f90 0A       		.byte	0xa
 19442 6f91 3F       		.byte	0x3f
 19443 6f92 98B10000 		.long	0xb198
 19444 6f96 18       		.uleb128 0x18
 19445 6f97 5F547000 		.string	"_Tp"
 19446 6f9b 63B00000 		.long	0xb063
 19447 6f9f 00       		.byte	0
 19448 6fa0 24       		.uleb128 0x24
 19449 6fa1 00000000 		.long	.LASF950
 19450 6fa5 01       		.byte	0x1
 19451 6fa6 1B       		.byte	0x1b
 19452 6fa7 E005     		.value	0x5e0
 19453 6fa9 BA6F0000 		.long	0x6fba
 19454 6fad 5C       		.uleb128 0x5c
 19455 6fae 00000000 		.long	.LASF511
 19456 6fb2 1B       		.byte	0x1b
 19457 6fb3 E105     		.value	0x5e1
 19458 6fb5 57B00000 		.long	0xb057
 19459 6fb9 00       		.byte	0
 19460 6fba 16       		.uleb128 0x16
 19461 6fbb 00000000 		.long	.LASF951
 19462 6fbf 01       		.byte	0x1
 19463 6fc0 0A       		.byte	0xa
 19464 6fc1 35       		.byte	0x35
 19465 6fc2 DB6F0000 		.long	0x6fdb
 19466 6fc6 13       		.uleb128 0x13
 19467 6fc7 00000000 		.long	.LASF511
 19468 6fcb 0A       		.byte	0xa
 19469 6fcc 36       		.byte	0x36
 19470 6fcd 69B20000 		.long	0xb269
 19471 6fd1 18       		.uleb128 0x18
 19472 6fd2 5F547000 		.string	"_Tp"
 19473 6fd6 57B00000 		.long	0xb057
 19474 6fda 00       		.byte	0
 19475 6fdb 16       		.uleb128 0x16
 19476 6fdc 00000000 		.long	.LASF952
 19477 6fe0 01       		.byte	0x1
 19478 6fe1 0A       		.byte	0xa
 19479 6fe2 3E       		.byte	0x3e
 19480 6fe3 FC6F0000 		.long	0x6ffc
 19481 6fe7 13       		.uleb128 0x13
 19482 6fe8 00000000 		.long	.LASF511
 19483 6fec 0A       		.byte	0xa
 19484 6fed 3F       		.byte	0x3f
 19485 6fee 74B20000 		.long	0xb274
 19486 6ff2 18       		.uleb128 0x18
 19487 6ff3 5F547000 		.string	"_Tp"
 19488 6ff7 57B00000 		.long	0xb057
GAS LISTING /tmp/ccmMnd7l.s 			page 644


 19489 6ffb 00       		.byte	0
 19490 6ffc 16       		.uleb128 0x16
 19491 6ffd 00000000 		.long	.LASF953
 19492 7001 01       		.byte	0x1
 19493 7002 0A       		.byte	0xa
 19494 7003 3E       		.byte	0x3e
 19495 7004 1D700000 		.long	0x701d
 19496 7008 13       		.uleb128 0x13
 19497 7009 00000000 		.long	.LASF511
 19498 700d 0A       		.byte	0xa
 19499 700e 3F       		.byte	0x3f
 19500 700f 50B10000 		.long	0xb150
 19501 7013 18       		.uleb128 0x18
 19502 7014 5F547000 		.string	"_Tp"
 19503 7018 1D530000 		.long	0x531d
 19504 701c 00       		.byte	0
 19505 701d 16       		.uleb128 0x16
 19506 701e 00000000 		.long	.LASF954
 19507 7022 01       		.byte	0x1
 19508 7023 0A       		.byte	0xa
 19509 7024 3E       		.byte	0x3e
 19510 7025 3E700000 		.long	0x703e
 19511 7029 13       		.uleb128 0x13
 19512 702a 00000000 		.long	.LASF511
 19513 702e 0A       		.byte	0xa
 19514 702f 3F       		.byte	0x3f
 19515 7030 2CB20000 		.long	0xb22c
 19516 7034 18       		.uleb128 0x18
 19517 7035 5F547000 		.string	"_Tp"
 19518 7039 F6520000 		.long	0x52f6
 19519 703d 00       		.byte	0
 19520 703e 16       		.uleb128 0x16
 19521 703f 00000000 		.long	.LASF955
 19522 7043 01       		.byte	0x1
 19523 7044 0A       		.byte	0xa
 19524 7045 3E       		.byte	0x3e
 19525 7046 5F700000 		.long	0x705f
 19526 704a 13       		.uleb128 0x13
 19527 704b 00000000 		.long	.LASF511
 19528 704f 0A       		.byte	0xa
 19529 7050 3F       		.byte	0x3f
 19530 7051 D5B00000 		.long	0xb0d5
 19531 7055 18       		.uleb128 0x18
 19532 7056 5F547000 		.string	"_Tp"
 19533 705a 812C0000 		.long	0x2c81
 19534 705e 00       		.byte	0
 19535 705f 16       		.uleb128 0x16
 19536 7060 00000000 		.long	.LASF956
 19537 7064 01       		.byte	0x1
 19538 7065 31       		.byte	0x31
 19539 7066 AF       		.byte	0xaf
 19540 7067 96700000 		.long	0x7096
 19541 706b 13       		.uleb128 0x13
 19542 706c 00000000 		.long	.LASF496
 19543 7070 31       		.byte	0x31
 19544 7071 B3       		.byte	0xb3
 19545 7072 54070000 		.long	0x754
GAS LISTING /tmp/ccmMnd7l.s 			page 645


 19546 7076 13       		.uleb128 0x13
 19547 7077 00000000 		.long	.LASF489
 19548 707b 31       		.byte	0x31
 19549 707c B4       		.byte	0xb4
 19550 707d 289D0000 		.long	0x9d28
 19551 7081 13       		.uleb128 0x13
 19552 7082 00000000 		.long	.LASF58
 19553 7086 31       		.byte	0x31
 19554 7087 B5       		.byte	0xb5
 19555 7088 09A30000 		.long	0xa309
 19556 708c 35       		.uleb128 0x35
 19557 708d 00000000 		.long	.LASF743
 19558 7091 289D0000 		.long	0x9d28
 19559 7095 00       		.byte	0
 19560 7096 16       		.uleb128 0x16
 19561 7097 00000000 		.long	.LASF957
 19562 709b 01       		.byte	0x1
 19563 709c 31       		.byte	0x31
 19564 709d 95       		.byte	0x95
 19565 709e C2700000 		.long	0x70c2
 19566 70a2 13       		.uleb128 0x13
 19567 70a3 00000000 		.long	.LASF19
 19568 70a7 31       		.byte	0x31
 19569 70a8 98       		.byte	0x98
 19570 70a9 EE8C0000 		.long	0x8cee
 19571 70ad 13       		.uleb128 0x13
 19572 70ae 00000000 		.long	.LASF496
 19573 70b2 31       		.byte	0x31
 19574 70b3 99       		.byte	0x99
 19575 70b4 FB8C0000 		.long	0x8cfb
 19576 70b8 35       		.uleb128 0x35
 19577 70b9 00000000 		.long	.LASF743
 19578 70bd C68C0000 		.long	0x8cc6
 19579 70c1 00       		.byte	0
 19580 70c2 24       		.uleb128 0x24
 19581 70c3 00000000 		.long	.LASF958
 19582 70c7 01       		.byte	0x1
 19583 70c8 1B       		.byte	0x1b
 19584 70c9 E005     		.value	0x5e0
 19585 70cb DC700000 		.long	0x70dc
 19586 70cf 5C       		.uleb128 0x5c
 19587 70d0 00000000 		.long	.LASF511
 19588 70d4 1B       		.byte	0x1b
 19589 70d5 E105     		.value	0x5e1
 19590 70d7 29000000 		.long	0x29
 19591 70db 00       		.byte	0
 19592 70dc 16       		.uleb128 0x16
 19593 70dd 00000000 		.long	.LASF959
 19594 70e1 01       		.byte	0x1
 19595 70e2 31       		.byte	0x31
 19596 70e3 BA       		.byte	0xba
 19597 70e4 13710000 		.long	0x7113
 19598 70e8 13       		.uleb128 0x13
 19599 70e9 00000000 		.long	.LASF496
 19600 70ed 31       		.byte	0x31
 19601 70ee BE       		.byte	0xbe
 19602 70ef 54070000 		.long	0x754
GAS LISTING /tmp/ccmMnd7l.s 			page 646


 19603 70f3 13       		.uleb128 0x13
 19604 70f4 00000000 		.long	.LASF489
 19605 70f8 31       		.byte	0x31
 19606 70f9 BF       		.byte	0xbf
 19607 70fa 069A0000 		.long	0x9a06
 19608 70fe 13       		.uleb128 0x13
 19609 70ff 00000000 		.long	.LASF58
 19610 7103 31       		.byte	0x31
 19611 7104 C0       		.byte	0xc0
 19612 7105 0FA30000 		.long	0xa30f
 19613 7109 35       		.uleb128 0x35
 19614 710a 00000000 		.long	.LASF743
 19615 710e 069A0000 		.long	0x9a06
 19616 7112 00       		.byte	0
 19617 7113 16       		.uleb128 0x16
 19618 7114 00000000 		.long	.LASF960
 19619 7118 01       		.byte	0x1
 19620 7119 31       		.byte	0x31
 19621 711a D1       		.byte	0xd1
 19622 711b 57710000 		.long	0x7157
 19623 711f 13       		.uleb128 0x13
 19624 7120 00000000 		.long	.LASF961
 19625 7124 31       		.byte	0x31
 19626 7125 D3       		.byte	0xd3
 19627 7126 C68C0000 		.long	0x8cc6
 19628 712a 4E       		.uleb128 0x4e
 19629 712b 00000000 		.long	.LASF962
 19630 712f 31       		.byte	0x31
 19631 7130 D4       		.byte	0xd4
 19632 7131 00000000 		.long	.LASF963
 19633 7135 1F710000 		.long	0x711f
 19634 7139 43710000 		.long	0x7143
 19635 713d 09       		.uleb128 0x9
 19636 713e C68C0000 		.long	0x8cc6
 19637 7142 00       		.byte	0
 19638 7143 35       		.uleb128 0x35
 19639 7144 00000000 		.long	.LASF743
 19640 7148 C68C0000 		.long	0x8cc6
 19641 714c 50       		.uleb128 0x50
 19642 714d 00000000 		.long	.LASF964
 19643 7151 E0800000 		.long	0x80e0
 19644 7155 00       		.byte	0
 19645 7156 00       		.byte	0
 19646 7157 16       		.uleb128 0x16
 19647 7158 00000000 		.long	.LASF965
 19648 715c 01       		.byte	0x1
 19649 715d 1B       		.byte	0x1b
 19650 715e 9A       		.byte	0x9a
 19651 715f 78710000 		.long	0x7178
 19652 7163 13       		.uleb128 0x13
 19653 7164 00000000 		.long	.LASF511
 19654 7168 1B       		.byte	0x1b
 19655 7169 9B       		.byte	0x9b
 19656 716a 03810000 		.long	0x8103
 19657 716e 18       		.uleb128 0x18
 19658 716f 5F547000 		.string	"_Tp"
 19659 7173 03810000 		.long	0x8103
GAS LISTING /tmp/ccmMnd7l.s 			page 647


 19660 7177 00       		.byte	0
 19661 7178 16       		.uleb128 0x16
 19662 7179 00000000 		.long	.LASF966
 19663 717d 01       		.byte	0x1
 19664 717e 31       		.byte	0x31
 19665 717f D1       		.byte	0xd1
 19666 7180 BC710000 		.long	0x71bc
 19667 7184 13       		.uleb128 0x13
 19668 7185 00000000 		.long	.LASF961
 19669 7189 31       		.byte	0x31
 19670 718a D3       		.byte	0xd3
 19671 718b 01AD0000 		.long	0xad01
 19672 718f 4E       		.uleb128 0x4e
 19673 7190 00000000 		.long	.LASF962
 19674 7194 31       		.byte	0x31
 19675 7195 D4       		.byte	0xd4
 19676 7196 00000000 		.long	.LASF967
 19677 719a 84710000 		.long	0x7184
 19678 719e A8710000 		.long	0x71a8
 19679 71a2 09       		.uleb128 0x9
 19680 71a3 01AD0000 		.long	0xad01
 19681 71a7 00       		.byte	0
 19682 71a8 35       		.uleb128 0x35
 19683 71a9 00000000 		.long	.LASF743
 19684 71ad 01AD0000 		.long	0xad01
 19685 71b1 50       		.uleb128 0x50
 19686 71b2 00000000 		.long	.LASF964
 19687 71b6 E0800000 		.long	0x80e0
 19688 71ba 00       		.byte	0
 19689 71bb 00       		.byte	0
 19690 71bc 16       		.uleb128 0x16
 19691 71bd 00000000 		.long	.LASF968
 19692 71c1 01       		.byte	0x1
 19693 71c2 31       		.byte	0x31
 19694 71c3 D9       		.byte	0xd9
 19695 71c4 00720000 		.long	0x7200
 19696 71c8 13       		.uleb128 0x13
 19697 71c9 00000000 		.long	.LASF961
 19698 71cd 31       		.byte	0x31
 19699 71ce DB       		.byte	0xdb
 19700 71cf E18C0000 		.long	0x8ce1
 19701 71d3 4E       		.uleb128 0x4e
 19702 71d4 00000000 		.long	.LASF962
 19703 71d8 31       		.byte	0x31
 19704 71d9 DC       		.byte	0xdc
 19705 71da 00000000 		.long	.LASF969
 19706 71de C8710000 		.long	0x71c8
 19707 71e2 EC710000 		.long	0x71ec
 19708 71e6 09       		.uleb128 0x9
 19709 71e7 C68C0000 		.long	0x8cc6
 19710 71eb 00       		.byte	0
 19711 71ec 35       		.uleb128 0x35
 19712 71ed 00000000 		.long	.LASF743
 19713 71f1 C68C0000 		.long	0x8cc6
 19714 71f5 50       		.uleb128 0x50
 19715 71f6 00000000 		.long	.LASF964
 19716 71fa E0800000 		.long	0x80e0
GAS LISTING /tmp/ccmMnd7l.s 			page 648


 19717 71fe 01       		.byte	0x1
 19718 71ff 00       		.byte	0
 19719 7200 16       		.uleb128 0x16
 19720 7201 00000000 		.long	.LASF970
 19721 7205 01       		.byte	0x1
 19722 7206 31       		.byte	0x31
 19723 7207 D1       		.byte	0xd1
 19724 7208 44720000 		.long	0x7244
 19725 720c 13       		.uleb128 0x13
 19726 720d 00000000 		.long	.LASF961
 19727 7211 31       		.byte	0x31
 19728 7212 D3       		.byte	0xd3
 19729 7213 D0AD0000 		.long	0xadd0
 19730 7217 4E       		.uleb128 0x4e
 19731 7218 00000000 		.long	.LASF962
 19732 721c 31       		.byte	0x31
 19733 721d D4       		.byte	0xd4
 19734 721e 00000000 		.long	.LASF971
 19735 7222 0C720000 		.long	0x720c
 19736 7226 30720000 		.long	0x7230
 19737 722a 09       		.uleb128 0x9
 19738 722b D0AD0000 		.long	0xadd0
 19739 722f 00       		.byte	0
 19740 7230 35       		.uleb128 0x35
 19741 7231 00000000 		.long	.LASF743
 19742 7235 D0AD0000 		.long	0xadd0
 19743 7239 50       		.uleb128 0x50
 19744 723a 00000000 		.long	.LASF964
 19745 723e E0800000 		.long	0x80e0
 19746 7242 00       		.byte	0
 19747 7243 00       		.byte	0
 19748 7244 24       		.uleb128 0x24
 19749 7245 00000000 		.long	.LASF972
 19750 7249 01       		.byte	0x1
 19751 724a 14       		.byte	0x14
 19752 724b 3502     		.value	0x235
 19753 724d 77720000 		.long	0x7277
 19754 7251 75       		.uleb128 0x75
 19755 7252 00000000 		.long	.LASF973
 19756 7256 14       		.byte	0x14
 19757 7257 3902     		.value	0x239
 19758 7259 01AD0000 		.long	0xad01
 19759 725d 18       		.uleb128 0x18
 19760 725e 5F547000 		.string	"_Tp"
 19761 7262 29000000 		.long	0x29
 19762 7266 09       		.uleb128 0x9
 19763 7267 07AD0000 		.long	0xad07
 19764 726b 09       		.uleb128 0x9
 19765 726c 07AD0000 		.long	0xad07
 19766 7270 09       		.uleb128 0x9
 19767 7271 01AD0000 		.long	0xad01
 19768 7275 00       		.byte	0
 19769 7276 00       		.byte	0
 19770 7277 14       		.uleb128 0x14
 19771 7278 00000000 		.long	.LASF974
 19772 727c 40       		.uleb128 0x40
 19773 727d 00000000 		.long	.LASF975
GAS LISTING /tmp/ccmMnd7l.s 			page 649


 19774 7281 05730000 		.long	0x7305
 19775 7285 0D       		.uleb128 0xd
 19776 7286 00000000 		.long	.LASF976
 19777 728a 0D       		.byte	0xd
 19778 728b 83       		.byte	0x83
 19779 728c 00000000 		.long	.LASF977
 19780 7290 3C260000 		.long	0x263c
 19781 7294 01       		.byte	0x1
 19782 7295 9D720000 		.long	0x729d
 19783 7299 A3720000 		.long	0x72a3
 19784 729d 08       		.uleb128 0x8
 19785 729e 5EB30000 		.long	0xb35e
 19786 72a2 00       		.byte	0
 19787 72a3 0E       		.uleb128 0xe
 19788 72a4 00000000 		.long	.LASF978
 19789 72a8 0D       		.byte	0xd
 19790 72a9 97       		.byte	0x97
 19791 72aa 00000000 		.long	.LASF979
 19792 72ae 01       		.byte	0x1
 19793 72af B7720000 		.long	0x72b7
 19794 72b3 C2720000 		.long	0x72c2
 19795 72b7 08       		.uleb128 0x8
 19796 72b8 0EB50000 		.long	0xb50e
 19797 72bc 09       		.uleb128 0x9
 19798 72bd 3C260000 		.long	0x263c
 19799 72c1 00       		.byte	0
 19800 72c2 32       		.uleb128 0x32
 19801 72c3 00000000 		.long	.LASF414
 19802 72c7 0D       		.byte	0xd
 19803 72c8 BB01     		.value	0x1bb
 19804 72ca 00000000 		.long	.LASF980
 19805 72ce E6720000 		.long	0x72e6
 19806 72d2 01       		.byte	0x1
 19807 72d3 DB720000 		.long	0x72db
 19808 72d7 E6720000 		.long	0x72e6
 19809 72db 08       		.uleb128 0x8
 19810 72dc 5EB30000 		.long	0xb35e
 19811 72e0 09       		.uleb128 0x9
 19812 72e1 E4990000 		.long	0x99e4
 19813 72e5 00       		.byte	0
 19814 72e6 22       		.uleb128 0x22
 19815 72e7 00000000 		.long	.LASF30
 19816 72eb 0D       		.byte	0xd
 19817 72ec 4B       		.byte	0x4b
 19818 72ed E4990000 		.long	0x99e4
 19819 72f1 01       		.byte	0x1
 19820 72f2 35       		.uleb128 0x35
 19821 72f3 00000000 		.long	.LASF301
 19822 72f7 E4990000 		.long	0x99e4
 19823 72fb 36       		.uleb128 0x36
 19824 72fc 00000000 		.long	.LASF302
 19825 7300 BD040000 		.long	0x4bd
 19826 7304 00       		.byte	0
 19827 7305 11       		.uleb128 0x11
 19828 7306 7C720000 		.long	0x727c
 19829 730a 52       		.uleb128 0x52
 19830 730b 00000000 		.long	.LASF981
GAS LISTING /tmp/ccmMnd7l.s 			page 650


 19831 730f 15       		.byte	0x15
 19832 7310 4F       		.byte	0x4f
 19833 7311 C1240000 		.long	0x24c1
 19834 7315 24730000 		.long	0x7324
 19835 7319 09       		.uleb128 0x9
 19836 731a C1240000 		.long	0x24c1
 19837 731e 09       		.uleb128 0x9
 19838 731f C1240000 		.long	0x24c1
 19839 7323 00       		.byte	0
 19840 7324 52       		.uleb128 0x52
 19841 7325 00000000 		.long	.LASF982
 19842 7329 15       		.byte	0x15
 19843 732a 4B       		.byte	0x4b
 19844 732b C1240000 		.long	0x24c1
 19845 732f 3E730000 		.long	0x733e
 19846 7333 09       		.uleb128 0x9
 19847 7334 C1240000 		.long	0x24c1
 19848 7338 09       		.uleb128 0x9
 19849 7339 C1240000 		.long	0x24c1
 19850 733d 00       		.byte	0
 19851 733e 52       		.uleb128 0x52
 19852 733f 00000000 		.long	.LASF981
 19853 7343 15       		.byte	0x15
 19854 7344 9D       		.byte	0x9d
 19855 7345 89250000 		.long	0x2589
 19856 7349 58730000 		.long	0x7358
 19857 734d 09       		.uleb128 0x9
 19858 734e 89250000 		.long	0x2589
 19859 7352 09       		.uleb128 0x9
 19860 7353 89250000 		.long	0x2589
 19861 7357 00       		.byte	0
 19862 7358 76       		.uleb128 0x76
 19863 7359 00000000 		.long	.LASF983
 19864 735d 08       		.byte	0x8
 19865 735e 1202     		.value	0x212
 19866 7360 AAAC0000 		.long	0xacaa
 19867 7364 7C730000 		.long	0x737c
 19868 7368 35       		.uleb128 0x35
 19869 7369 00000000 		.long	.LASF302
 19870 736d BD040000 		.long	0x4bd
 19871 7371 09       		.uleb128 0x9
 19872 7372 AAAC0000 		.long	0xacaa
 19873 7376 09       		.uleb128 0x9
 19874 7377 069A0000 		.long	0x9a06
 19875 737b 00       		.byte	0
 19876 737c 52       		.uleb128 0x52
 19877 737d 00000000 		.long	.LASF984
 19878 7381 15       		.byte	0x15
 19879 7382 57       		.byte	0x57
 19880 7383 C1240000 		.long	0x24c1
 19881 7387 91730000 		.long	0x7391
 19882 738b 09       		.uleb128 0x9
 19883 738c C1240000 		.long	0x24c1
 19884 7390 00       		.byte	0
 19885 7391 52       		.uleb128 0x52
 19886 7392 00000000 		.long	.LASF985
 19887 7396 15       		.byte	0x15
GAS LISTING /tmp/ccmMnd7l.s 			page 651


 19888 7397 5F       		.byte	0x5f
 19889 7398 A4B50000 		.long	0xb5a4
 19890 739c AB730000 		.long	0x73ab
 19891 73a0 09       		.uleb128 0x9
 19892 73a1 AAB50000 		.long	0xb5aa
 19893 73a5 09       		.uleb128 0x9
 19894 73a6 C1240000 		.long	0x24c1
 19895 73aa 00       		.byte	0
 19896 73ab 11       		.uleb128 0x11
 19897 73ac C1240000 		.long	0x24c1
 19898 73b0 52       		.uleb128 0x52
 19899 73b1 00000000 		.long	.LASF986
 19900 73b5 15       		.byte	0x15
 19901 73b6 5B       		.byte	0x5b
 19902 73b7 A4B50000 		.long	0xb5a4
 19903 73bb CA730000 		.long	0x73ca
 19904 73bf 09       		.uleb128 0x9
 19905 73c0 AAB50000 		.long	0xb5aa
 19906 73c4 09       		.uleb128 0x9
 19907 73c5 C1240000 		.long	0x24c1
 19908 73c9 00       		.byte	0
 19909 73ca 11       		.uleb128 0x11
 19910 73cb F0290000 		.long	0x29f0
 19911 73cf 52       		.uleb128 0x52
 19912 73d0 00000000 		.long	.LASF987
 19913 73d4 12       		.byte	0x12
 19914 73d5 4C       		.byte	0x4c
 19915 73d6 FCB20000 		.long	0xb2fc
 19916 73da ED730000 		.long	0x73ed
 19917 73de 18       		.uleb128 0x18
 19918 73df 5F547000 		.string	"_Tp"
 19919 73e3 1D530000 		.long	0x531d
 19920 73e7 09       		.uleb128 0x9
 19921 73e8 FEB70000 		.long	0xb7fe
 19922 73ec 00       		.byte	0
 19923 73ed 52       		.uleb128 0x52
 19924 73ee 00000000 		.long	.LASF988
 19925 73f2 12       		.byte	0x12
 19926 73f3 4C       		.byte	0x4c
 19927 73f4 98B10000 		.long	0xb198
 19928 73f8 0B740000 		.long	0x740b
 19929 73fc 18       		.uleb128 0x18
 19930 73fd 5F547000 		.string	"_Tp"
 19931 7401 98B10000 		.long	0xb198
 19932 7405 09       		.uleb128 0x9
 19933 7406 82B80000 		.long	0xb882
 19934 740a 00       		.byte	0
 19935 740b 76       		.uleb128 0x76
 19936 740c 00000000 		.long	.LASF989
 19937 7410 0A       		.byte	0xa
 19938 7411 E702     		.value	0x2e7
 19939 7413 8B6F0000 		.long	0x6f8b
 19940 7417 43740000 		.long	0x7443
 19941 741b 19       		.uleb128 0x19
 19942 741c 5F5F6900 		.string	"__i"
 19943 7420 03810000 		.long	0x8103
 19944 7424 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 652


 19945 7425 35       		.uleb128 0x35
 19946 7426 00000000 		.long	.LASF811
 19947 742a 63B00000 		.long	0xb063
 19948 742e 6A       		.uleb128 0x6a
 19949 742f 00000000 		.long	.LASF990
 19950 7433 3D740000 		.long	0x743d
 19951 7437 68       		.uleb128 0x68
 19952 7438 1D530000 		.long	0x531d
 19953 743c 00       		.byte	0
 19954 743d 09       		.uleb128 0x9
 19955 743e AAB10000 		.long	0xb1aa
 19956 7442 00       		.byte	0
 19957 7443 52       		.uleb128 0x52
 19958 7444 00000000 		.long	.LASF991
 19959 7448 12       		.byte	0x12
 19960 7449 4C       		.byte	0x4c
 19961 744a 03B30000 		.long	0xb303
 19962 744e 61740000 		.long	0x7461
 19963 7452 18       		.uleb128 0x18
 19964 7453 5F547000 		.string	"_Tp"
 19965 7457 F6520000 		.long	0x52f6
 19966 745b 09       		.uleb128 0x9
 19967 745c 53BA0000 		.long	0xba53
 19968 7460 00       		.byte	0
 19969 7461 52       		.uleb128 0x52
 19970 7462 00000000 		.long	.LASF992
 19971 7466 12       		.byte	0x12
 19972 7467 4C       		.byte	0x4c
 19973 7468 74B20000 		.long	0xb274
 19974 746c 7F740000 		.long	0x747f
 19975 7470 18       		.uleb128 0x18
 19976 7471 5F547000 		.string	"_Tp"
 19977 7475 74B20000 		.long	0xb274
 19978 7479 09       		.uleb128 0x9
 19979 747a B8BA0000 		.long	0xbab8
 19980 747e 00       		.byte	0
 19981 747f 76       		.uleb128 0x76
 19982 7480 00000000 		.long	.LASF993
 19983 7484 0A       		.byte	0xa
 19984 7485 E702     		.value	0x2e7
 19985 7487 E76F0000 		.long	0x6fe7
 19986 748b B7740000 		.long	0x74b7
 19987 748f 19       		.uleb128 0x19
 19988 7490 5F5F6900 		.string	"__i"
 19989 7494 03810000 		.long	0x8103
 19990 7498 00       		.byte	0
 19991 7499 35       		.uleb128 0x35
 19992 749a 00000000 		.long	.LASF811
 19993 749e 57B00000 		.long	0xb057
 19994 74a2 6A       		.uleb128 0x6a
 19995 74a3 00000000 		.long	.LASF990
 19996 74a7 B1740000 		.long	0x74b1
 19997 74ab 68       		.uleb128 0x68
 19998 74ac F6520000 		.long	0x52f6
 19999 74b0 00       		.byte	0
 20000 74b1 09       		.uleb128 0x9
 20001 74b2 86B20000 		.long	0xb286
GAS LISTING /tmp/ccmMnd7l.s 			page 653


 20002 74b6 00       		.byte	0
 20003 74b7 76       		.uleb128 0x76
 20004 74b8 00000000 		.long	.LASF993
 20005 74bc 0A       		.byte	0xa
 20006 74bd EC02     		.value	0x2ec
 20007 74bf C66F0000 		.long	0x6fc6
 20008 74c3 EF740000 		.long	0x74ef
 20009 74c7 19       		.uleb128 0x19
 20010 74c8 5F5F6900 		.string	"__i"
 20011 74cc 03810000 		.long	0x8103
 20012 74d0 00       		.byte	0
 20013 74d1 35       		.uleb128 0x35
 20014 74d2 00000000 		.long	.LASF811
 20015 74d6 57B00000 		.long	0xb057
 20016 74da 6A       		.uleb128 0x6a
 20017 74db 00000000 		.long	.LASF990
 20018 74df E9740000 		.long	0x74e9
 20019 74e3 68       		.uleb128 0x68
 20020 74e4 F6520000 		.long	0x52f6
 20021 74e8 00       		.byte	0
 20022 74e9 09       		.uleb128 0x9
 20023 74ea 8CB20000 		.long	0xb28c
 20024 74ee 00       		.byte	0
 20025 74ef 76       		.uleb128 0x76
 20026 74f0 00000000 		.long	.LASF994
 20027 74f4 0A       		.byte	0xa
 20028 74f5 FC02     		.value	0x2fc
 20029 74f7 C66F0000 		.long	0x6fc6
 20030 74fb 23750000 		.long	0x7523
 20031 74ff 19       		.uleb128 0x19
 20032 7500 5F5F6900 		.string	"__i"
 20033 7504 03810000 		.long	0x8103
 20034 7508 00       		.byte	0
 20035 7509 6A       		.uleb128 0x6a
 20036 750a 00000000 		.long	.LASF802
 20037 750e 1D750000 		.long	0x751d
 20038 7512 68       		.uleb128 0x68
 20039 7513 57B00000 		.long	0xb057
 20040 7517 68       		.uleb128 0x68
 20041 7518 F6520000 		.long	0x52f6
 20042 751c 00       		.byte	0
 20043 751d 09       		.uleb128 0x9
 20044 751e B1B20000 		.long	0xb2b1
 20045 7522 00       		.byte	0
 20046 7523 76       		.uleb128 0x76
 20047 7524 00000000 		.long	.LASF989
 20048 7528 0A       		.byte	0xa
 20049 7529 EC02     		.value	0x2ec
 20050 752b 6A6F0000 		.long	0x6f6a
 20051 752f 5B750000 		.long	0x755b
 20052 7533 19       		.uleb128 0x19
 20053 7534 5F5F6900 		.string	"__i"
 20054 7538 03810000 		.long	0x8103
 20055 753c 00       		.byte	0
 20056 753d 35       		.uleb128 0x35
 20057 753e 00000000 		.long	.LASF811
 20058 7542 63B00000 		.long	0xb063
GAS LISTING /tmp/ccmMnd7l.s 			page 654


 20059 7546 6A       		.uleb128 0x6a
 20060 7547 00000000 		.long	.LASF990
 20061 754b 55750000 		.long	0x7555
 20062 754f 68       		.uleb128 0x68
 20063 7550 1D530000 		.long	0x531d
 20064 7554 00       		.byte	0
 20065 7555 09       		.uleb128 0x9
 20066 7556 B0B10000 		.long	0xb1b0
 20067 755a 00       		.byte	0
 20068 755b 76       		.uleb128 0x76
 20069 755c 00000000 		.long	.LASF995
 20070 7560 0A       		.byte	0xa
 20071 7561 FC02     		.value	0x2fc
 20072 7563 6A6F0000 		.long	0x6f6a
 20073 7567 8F750000 		.long	0x758f
 20074 756b 19       		.uleb128 0x19
 20075 756c 5F5F6900 		.string	"__i"
 20076 7570 03810000 		.long	0x8103
 20077 7574 00       		.byte	0
 20078 7575 6A       		.uleb128 0x6a
 20079 7576 00000000 		.long	.LASF802
 20080 757a 89750000 		.long	0x7589
 20081 757e 68       		.uleb128 0x68
 20082 757f 63B00000 		.long	0xb063
 20083 7583 68       		.uleb128 0x68
 20084 7584 1D530000 		.long	0x531d
 20085 7588 00       		.byte	0
 20086 7589 09       		.uleb128 0x9
 20087 758a D5B10000 		.long	0xb1d5
 20088 758e 00       		.byte	0
 20089 758f 52       		.uleb128 0x52
 20090 7590 00000000 		.long	.LASF996
 20091 7594 12       		.byte	0x12
 20092 7595 4C       		.byte	0x4c
 20093 7596 D5B00000 		.long	0xb0d5
 20094 759a AD750000 		.long	0x75ad
 20095 759e 18       		.uleb128 0x18
 20096 759f 5F547000 		.string	"_Tp"
 20097 75a3 D5B00000 		.long	0xb0d5
 20098 75a7 09       		.uleb128 0x9
 20099 75a8 C8C10000 		.long	0xc1c8
 20100 75ac 00       		.byte	0
 20101 75ad 52       		.uleb128 0x52
 20102 75ae 00000000 		.long	.LASF997
 20103 75b2 12       		.byte	0x12
 20104 75b3 4C       		.byte	0x4c
 20105 75b4 F5C20000 		.long	0xc2f5
 20106 75b8 CB750000 		.long	0x75cb
 20107 75bc 18       		.uleb128 0x18
 20108 75bd 5F547000 		.string	"_Tp"
 20109 75c1 F5C20000 		.long	0xc2f5
 20110 75c5 09       		.uleb128 0x9
 20111 75c6 FBC20000 		.long	0xc2fb
 20112 75ca 00       		.byte	0
 20113 75cb 76       		.uleb128 0x76
 20114 75cc 00000000 		.long	.LASF998
 20115 75d0 0A       		.byte	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 655


 20116 75d1 E702     		.value	0x2e7
 20117 75d3 08700000 		.long	0x7008
 20118 75d7 F9750000 		.long	0x75f9
 20119 75db 19       		.uleb128 0x19
 20120 75dc 5F5F6900 		.string	"__i"
 20121 75e0 03810000 		.long	0x8103
 20122 75e4 01       		.byte	0x1
 20123 75e5 35       		.uleb128 0x35
 20124 75e6 00000000 		.long	.LASF811
 20125 75ea 1D530000 		.long	0x531d
 20126 75ee 6B       		.uleb128 0x6b
 20127 75ef 00000000 		.long	.LASF990
 20128 75f3 09       		.uleb128 0x9
 20129 75f4 62B10000 		.long	0xb162
 20130 75f8 00       		.byte	0
 20131 75f9 76       		.uleb128 0x76
 20132 75fa 00000000 		.long	.LASF999
 20133 75fe 0A       		.byte	0xa
 20134 75ff F402     		.value	0x2f4
 20135 7601 08700000 		.long	0x7008
 20136 7605 2D760000 		.long	0x762d
 20137 7609 19       		.uleb128 0x19
 20138 760a 5F5F6900 		.string	"__i"
 20139 760e 03810000 		.long	0x8103
 20140 7612 01       		.byte	0x1
 20141 7613 6A       		.uleb128 0x6a
 20142 7614 00000000 		.long	.LASF802
 20143 7618 27760000 		.long	0x7627
 20144 761c 68       		.uleb128 0x68
 20145 761d 63B00000 		.long	0xb063
 20146 7621 68       		.uleb128 0x68
 20147 7622 1D530000 		.long	0x531d
 20148 7626 00       		.byte	0
 20149 7627 09       		.uleb128 0x9
 20150 7628 E2B10000 		.long	0xb1e2
 20151 762c 00       		.byte	0
 20152 762d 76       		.uleb128 0x76
 20153 762e 00000000 		.long	.LASF995
 20154 7632 0A       		.byte	0xa
 20155 7633 F402     		.value	0x2f4
 20156 7635 8B6F0000 		.long	0x6f8b
 20157 7639 61760000 		.long	0x7661
 20158 763d 19       		.uleb128 0x19
 20159 763e 5F5F6900 		.string	"__i"
 20160 7642 03810000 		.long	0x8103
 20161 7646 00       		.byte	0
 20162 7647 6A       		.uleb128 0x6a
 20163 7648 00000000 		.long	.LASF802
 20164 764c 5B760000 		.long	0x765b
 20165 7650 68       		.uleb128 0x68
 20166 7651 63B00000 		.long	0xb063
 20167 7655 68       		.uleb128 0x68
 20168 7656 1D530000 		.long	0x531d
 20169 765a 00       		.byte	0
 20170 765b 09       		.uleb128 0x9
 20171 765c E2B10000 		.long	0xb1e2
 20172 7660 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 656


 20173 7661 76       		.uleb128 0x76
 20174 7662 00000000 		.long	.LASF1000
 20175 7666 0A       		.byte	0xa
 20176 7667 E702     		.value	0x2e7
 20177 7669 29700000 		.long	0x7029
 20178 766d 8F760000 		.long	0x768f
 20179 7671 19       		.uleb128 0x19
 20180 7672 5F5F6900 		.string	"__i"
 20181 7676 03810000 		.long	0x8103
 20182 767a 01       		.byte	0x1
 20183 767b 35       		.uleb128 0x35
 20184 767c 00000000 		.long	.LASF811
 20185 7680 F6520000 		.long	0x52f6
 20186 7684 6B       		.uleb128 0x6b
 20187 7685 00000000 		.long	.LASF990
 20188 7689 09       		.uleb128 0x9
 20189 768a 3EB20000 		.long	0xb23e
 20190 768e 00       		.byte	0
 20191 768f 76       		.uleb128 0x76
 20192 7690 00000000 		.long	.LASF1001
 20193 7694 0A       		.byte	0xa
 20194 7695 F402     		.value	0x2f4
 20195 7697 29700000 		.long	0x7029
 20196 769b C3760000 		.long	0x76c3
 20197 769f 19       		.uleb128 0x19
 20198 76a0 5F5F6900 		.string	"__i"
 20199 76a4 03810000 		.long	0x8103
 20200 76a8 01       		.byte	0x1
 20201 76a9 6A       		.uleb128 0x6a
 20202 76aa 00000000 		.long	.LASF802
 20203 76ae BD760000 		.long	0x76bd
 20204 76b2 68       		.uleb128 0x68
 20205 76b3 57B00000 		.long	0xb057
 20206 76b7 68       		.uleb128 0x68
 20207 76b8 F6520000 		.long	0x52f6
 20208 76bc 00       		.byte	0
 20209 76bd 09       		.uleb128 0x9
 20210 76be BEB20000 		.long	0xb2be
 20211 76c2 00       		.byte	0
 20212 76c3 76       		.uleb128 0x76
 20213 76c4 00000000 		.long	.LASF994
 20214 76c8 0A       		.byte	0xa
 20215 76c9 F402     		.value	0x2f4
 20216 76cb E76F0000 		.long	0x6fe7
 20217 76cf F7760000 		.long	0x76f7
 20218 76d3 19       		.uleb128 0x19
 20219 76d4 5F5F6900 		.string	"__i"
 20220 76d8 03810000 		.long	0x8103
 20221 76dc 00       		.byte	0
 20222 76dd 6A       		.uleb128 0x6a
 20223 76de 00000000 		.long	.LASF802
 20224 76e2 F1760000 		.long	0x76f1
 20225 76e6 68       		.uleb128 0x68
 20226 76e7 57B00000 		.long	0xb057
 20227 76eb 68       		.uleb128 0x68
 20228 76ec F6520000 		.long	0x52f6
 20229 76f0 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 657


 20230 76f1 09       		.uleb128 0x9
 20231 76f2 BEB20000 		.long	0xb2be
 20232 76f6 00       		.byte	0
 20233 76f7 52       		.uleb128 0x52
 20234 76f8 00000000 		.long	.LASF1002
 20235 76fc 0D       		.byte	0xd
 20236 76fd 2E       		.byte	0x2e
 20237 76fe 52C60000 		.long	0xc652
 20238 7702 15770000 		.long	0x7715
 20239 7706 35       		.uleb128 0x35
 20240 7707 00000000 		.long	.LASF1003
 20241 770b F0290000 		.long	0x29f0
 20242 770f 09       		.uleb128 0x9
 20243 7710 51B60000 		.long	0xb651
 20244 7714 00       		.byte	0
 20245 7715 76       		.uleb128 0x76
 20246 7716 00000000 		.long	.LASF1004
 20247 771a 08       		.byte	0x8
 20248 771b 4A02     		.value	0x24a
 20249 771d AAAC0000 		.long	0xacaa
 20250 7721 3D770000 		.long	0x773d
 20251 7725 35       		.uleb128 0x35
 20252 7726 00000000 		.long	.LASF301
 20253 772a E4990000 		.long	0x99e4
 20254 772e 35       		.uleb128 0x35
 20255 772f 00000000 		.long	.LASF302
 20256 7733 BD040000 		.long	0x4bd
 20257 7737 09       		.uleb128 0x9
 20258 7738 AAAC0000 		.long	0xacaa
 20259 773c 00       		.byte	0
 20260 773d 76       		.uleb128 0x76
 20261 773e 00000000 		.long	.LASF1005
 20262 7742 0A       		.byte	0xa
 20263 7743 E702     		.value	0x2e7
 20264 7745 4A700000 		.long	0x704a
 20265 7749 6B770000 		.long	0x776b
 20266 774d 19       		.uleb128 0x19
 20267 774e 5F5F6900 		.string	"__i"
 20268 7752 03810000 		.long	0x8103
 20269 7756 00       		.byte	0
 20270 7757 35       		.uleb128 0x35
 20271 7758 00000000 		.long	.LASF811
 20272 775c 812C0000 		.long	0x2c81
 20273 7760 6B       		.uleb128 0x6b
 20274 7761 00000000 		.long	.LASF990
 20275 7765 09       		.uleb128 0x9
 20276 7766 E7B00000 		.long	0xb0e7
 20277 776a 00       		.byte	0
 20278 776b 4A       		.uleb128 0x4a
 20279 776c 00000000 		.long	.LASF1006
 20280 7770 2C       		.byte	0x2c
 20281 7771 7A       		.byte	0x7a
 20282 7772 8A770000 		.long	0x778a
 20283 7776 35       		.uleb128 0x35
 20284 7777 00000000 		.long	.LASF421
 20285 777b D0AD0000 		.long	0xadd0
 20286 777f 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 658


 20287 7780 D0AD0000 		.long	0xadd0
 20288 7784 09       		.uleb128 0x9
 20289 7785 D0AD0000 		.long	0xadd0
 20290 7789 00       		.byte	0
 20291 778a 4A       		.uleb128 0x4a
 20292 778b 00000000 		.long	.LASF1007
 20293 778f 2C       		.byte	0x2c
 20294 7790 94       		.byte	0x94
 20295 7791 B7770000 		.long	0x77b7
 20296 7795 35       		.uleb128 0x35
 20297 7796 00000000 		.long	.LASF421
 20298 779a D0AD0000 		.long	0xadd0
 20299 779e 18       		.uleb128 0x18
 20300 779f 5F547000 		.string	"_Tp"
 20301 77a3 18810000 		.long	0x8118
 20302 77a7 09       		.uleb128 0x9
 20303 77a8 D0AD0000 		.long	0xadd0
 20304 77ac 09       		.uleb128 0x9
 20305 77ad D0AD0000 		.long	0xadd0
 20306 77b1 09       		.uleb128 0x9
 20307 77b2 17AE0000 		.long	0xae17
 20308 77b6 00       		.byte	0
 20309 77b7 4A       		.uleb128 0x4a
 20310 77b8 00000000 		.long	.LASF1008
 20311 77bc 2C       		.byte	0x2c
 20312 77bd 7A       		.byte	0x7a
 20313 77be D6770000 		.long	0x77d6
 20314 77c2 35       		.uleb128 0x35
 20315 77c3 00000000 		.long	.LASF421
 20316 77c7 01AD0000 		.long	0xad01
 20317 77cb 09       		.uleb128 0x9
 20318 77cc 01AD0000 		.long	0xad01
 20319 77d0 09       		.uleb128 0x9
 20320 77d1 01AD0000 		.long	0xad01
 20321 77d5 00       		.byte	0
 20322 77d6 4A       		.uleb128 0x4a
 20323 77d7 00000000 		.long	.LASF1009
 20324 77db 2C       		.byte	0x2c
 20325 77dc 94       		.byte	0x94
 20326 77dd 03780000 		.long	0x7803
 20327 77e1 35       		.uleb128 0x35
 20328 77e2 00000000 		.long	.LASF421
 20329 77e6 01AD0000 		.long	0xad01
 20330 77ea 18       		.uleb128 0x18
 20331 77eb 5F547000 		.string	"_Tp"
 20332 77ef 29000000 		.long	0x29
 20333 77f3 09       		.uleb128 0x9
 20334 77f4 01AD0000 		.long	0xad01
 20335 77f8 09       		.uleb128 0x9
 20336 77f9 01AD0000 		.long	0xad01
 20337 77fd 09       		.uleb128 0x9
 20338 77fe 48AD0000 		.long	0xad48
 20339 7802 00       		.byte	0
 20340 7803 52       		.uleb128 0x52
 20341 7804 00000000 		.long	.LASF1010
 20342 7808 12       		.byte	0x12
 20343 7809 65       		.byte	0x65
GAS LISTING /tmp/ccmMnd7l.s 			page 659


 20344 780a A1CC0000 		.long	0xcca1
 20345 780e 21780000 		.long	0x7821
 20346 7812 18       		.uleb128 0x18
 20347 7813 5F547000 		.string	"_Tp"
 20348 7817 12AD0000 		.long	0xad12
 20349 781b 09       		.uleb128 0x9
 20350 781c 12AD0000 		.long	0xad12
 20351 7820 00       		.byte	0
 20352 7821 4C       		.uleb128 0x4c
 20353 7822 00000000 		.long	.LASF1011
 20354 7826 0C       		.byte	0xc
 20355 7827 1C07     		.value	0x71c
 20356 7829 4A780000 		.long	0x784a
 20357 782d 35       		.uleb128 0x35
 20358 782e 00000000 		.long	.LASF1012
 20359 7832 C68C0000 		.long	0x8cc6
 20360 7836 35       		.uleb128 0x35
 20361 7837 00000000 		.long	.LASF1013
 20362 783b D6810000 		.long	0x81d6
 20363 783f 09       		.uleb128 0x9
 20364 7840 C68C0000 		.long	0x8cc6
 20365 7844 09       		.uleb128 0x9
 20366 7845 D6810000 		.long	0x81d6
 20367 7849 00       		.byte	0
 20368 784a 4C       		.uleb128 0x4c
 20369 784b 00000000 		.long	.LASF1014
 20370 784f 0C       		.byte	0xc
 20371 7850 4607     		.value	0x746
 20372 7852 78780000 		.long	0x7878
 20373 7856 35       		.uleb128 0x35
 20374 7857 00000000 		.long	.LASF1012
 20375 785b C68C0000 		.long	0x8cc6
 20376 785f 35       		.uleb128 0x35
 20377 7860 00000000 		.long	.LASF1013
 20378 7864 58810000 		.long	0x8158
 20379 7868 09       		.uleb128 0x9
 20380 7869 C68C0000 		.long	0x8cc6
 20381 786d 09       		.uleb128 0x9
 20382 786e C68C0000 		.long	0x8cc6
 20383 7872 09       		.uleb128 0x9
 20384 7873 58810000 		.long	0x8158
 20385 7877 00       		.byte	0
 20386 7878 76       		.uleb128 0x76
 20387 7879 00000000 		.long	.LASF1015
 20388 787d 14       		.byte	0x14
 20389 787e F502     		.value	0x2f5
 20390 7880 EE950000 		.long	0x95ee
 20391 7884 B3780000 		.long	0x78b3
 20392 7888 35       		.uleb128 0x35
 20393 7889 00000000 		.long	.LASF1016
 20394 788d 01AD0000 		.long	0xad01
 20395 7891 35       		.uleb128 0x35
 20396 7892 00000000 		.long	.LASF425
 20397 7896 03810000 		.long	0x8103
 20398 789a 18       		.uleb128 0x18
 20399 789b 5F547000 		.string	"_Tp"
 20400 789f 29000000 		.long	0x29
GAS LISTING /tmp/ccmMnd7l.s 			page 660


 20401 78a3 09       		.uleb128 0x9
 20402 78a4 01AD0000 		.long	0xad01
 20403 78a8 09       		.uleb128 0x9
 20404 78a9 03810000 		.long	0x8103
 20405 78ad 09       		.uleb128 0x9
 20406 78ae 18AD0000 		.long	0xad18
 20407 78b2 00       		.byte	0
 20408 78b3 4A       		.uleb128 0x4a
 20409 78b4 00000000 		.long	.LASF1017
 20410 78b8 12       		.byte	0x12
 20411 78b9 A6       		.byte	0xa6
 20412 78ba D2780000 		.long	0x78d2
 20413 78be 18       		.uleb128 0x18
 20414 78bf 5F547000 		.string	"_Tp"
 20415 78c3 29000000 		.long	0x29
 20416 78c7 09       		.uleb128 0x9
 20417 78c8 12AD0000 		.long	0xad12
 20418 78cc 09       		.uleb128 0x9
 20419 78cd 12AD0000 		.long	0xad12
 20420 78d1 00       		.byte	0
 20421 78d2 4A       		.uleb128 0x4a
 20422 78d3 00000000 		.long	.LASF1018
 20423 78d7 14       		.byte	0x14
 20424 78d8 78       		.byte	0x78
 20425 78d9 FA780000 		.long	0x78fa
 20426 78dd 35       		.uleb128 0x35
 20427 78de 00000000 		.long	.LASF1019
 20428 78e2 C68C0000 		.long	0x8cc6
 20429 78e6 35       		.uleb128 0x35
 20430 78e7 00000000 		.long	.LASF1020
 20431 78eb C68C0000 		.long	0x8cc6
 20432 78ef 09       		.uleb128 0x9
 20433 78f0 C68C0000 		.long	0x8cc6
 20434 78f4 09       		.uleb128 0x9
 20435 78f5 C68C0000 		.long	0x8cc6
 20436 78f9 00       		.byte	0
 20437 78fa 76       		.uleb128 0x76
 20438 78fb 00000000 		.long	.LASF1021
 20439 78ff 0C       		.byte	0xc
 20440 7900 6707     		.value	0x767
 20441 7902 C68C0000 		.long	0x8cc6
 20442 7906 31790000 		.long	0x7931
 20443 790a 35       		.uleb128 0x35
 20444 790b 00000000 		.long	.LASF1012
 20445 790f C68C0000 		.long	0x8cc6
 20446 7913 35       		.uleb128 0x35
 20447 7914 00000000 		.long	.LASF1013
 20448 7918 58810000 		.long	0x8158
 20449 791c 09       		.uleb128 0x9
 20450 791d C68C0000 		.long	0x8cc6
 20451 7921 09       		.uleb128 0x9
 20452 7922 C68C0000 		.long	0x8cc6
 20453 7926 09       		.uleb128 0x9
 20454 7927 C68C0000 		.long	0x8cc6
 20455 792b 09       		.uleb128 0x9
 20456 792c 58810000 		.long	0x8158
 20457 7930 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 661


 20458 7931 76       		.uleb128 0x76
 20459 7932 00000000 		.long	.LASF1022
 20460 7936 14       		.byte	0x14
 20461 7937 F502     		.value	0x2f5
 20462 7939 06960000 		.long	0x9606
 20463 793d 6C790000 		.long	0x796c
 20464 7941 35       		.uleb128 0x35
 20465 7942 00000000 		.long	.LASF1016
 20466 7946 D0AD0000 		.long	0xadd0
 20467 794a 35       		.uleb128 0x35
 20468 794b 00000000 		.long	.LASF425
 20469 794f 03810000 		.long	0x8103
 20470 7953 18       		.uleb128 0x18
 20471 7954 5F547000 		.string	"_Tp"
 20472 7958 18810000 		.long	0x8118
 20473 795c 09       		.uleb128 0x9
 20474 795d D0AD0000 		.long	0xadd0
 20475 7961 09       		.uleb128 0x9
 20476 7962 03810000 		.long	0x8103
 20477 7966 09       		.uleb128 0x9
 20478 7967 E7AD0000 		.long	0xade7
 20479 796b 00       		.byte	0
 20480 796c 76       		.uleb128 0x76
 20481 796d 00000000 		.long	.LASF1023
 20482 7971 0A       		.byte	0xa
 20483 7972 F402     		.value	0x2f4
 20484 7974 4A700000 		.long	0x704a
 20485 7978 9B790000 		.long	0x799b
 20486 797c 19       		.uleb128 0x19
 20487 797d 5F5F6900 		.string	"__i"
 20488 7981 03810000 		.long	0x8103
 20489 7985 00       		.byte	0
 20490 7986 6A       		.uleb128 0x6a
 20491 7987 00000000 		.long	.LASF802
 20492 798b 95790000 		.long	0x7995
 20493 798f 68       		.uleb128 0x68
 20494 7990 812C0000 		.long	0x2c81
 20495 7994 00       		.byte	0
 20496 7995 09       		.uleb128 0x9
 20497 7996 1FB10000 		.long	0xb11f
 20498 799a 00       		.byte	0
 20499 799b 77       		.uleb128 0x77
 20500 799c A0790000 		.long	0x79a0
 20501 79a0 11       		.uleb128 0x11
 20502 79a1 E26E0000 		.long	0x6ee2
 20503 79a5 76       		.uleb128 0x76
 20504 79a6 00000000 		.long	.LASF1024
 20505 79aa 0A       		.byte	0xa
 20506 79ab 8603     		.value	0x386
 20507 79ad 31240000 		.long	0x2431
 20508 79b1 BB790000 		.long	0x79bb
 20509 79b5 6B       		.uleb128 0x6b
 20510 79b6 00000000 		.long	.LASF802
 20511 79ba 00       		.byte	0
 20512 79bb 76       		.uleb128 0x76
 20513 79bc 00000000 		.long	.LASF1025
 20514 79c0 14       		.byte	0x14
GAS LISTING /tmp/ccmMnd7l.s 			page 662


 20515 79c1 1601     		.value	0x116
 20516 79c3 84710000 		.long	0x7184
 20517 79c7 DA790000 		.long	0x79da
 20518 79cb 35       		.uleb128 0x35
 20519 79cc 00000000 		.long	.LASF743
 20520 79d0 01AD0000 		.long	0xad01
 20521 79d4 09       		.uleb128 0x9
 20522 79d5 01AD0000 		.long	0xad01
 20523 79d9 00       		.byte	0
 20524 79da 76       		.uleb128 0x76
 20525 79db 00000000 		.long	.LASF1026
 20526 79df 14       		.byte	0x14
 20527 79e0 1803     		.value	0x318
 20528 79e2 01AD0000 		.long	0xad01
 20529 79e6 157A0000 		.long	0x7a15
 20530 79ea 18       		.uleb128 0x18
 20531 79eb 5F4F4900 		.string	"_OI"
 20532 79ef 01AD0000 		.long	0xad01
 20533 79f3 35       		.uleb128 0x35
 20534 79f4 00000000 		.long	.LASF425
 20535 79f8 03810000 		.long	0x8103
 20536 79fc 18       		.uleb128 0x18
 20537 79fd 5F547000 		.string	"_Tp"
 20538 7a01 29000000 		.long	0x29
 20539 7a05 09       		.uleb128 0x9
 20540 7a06 01AD0000 		.long	0xad01
 20541 7a0a 09       		.uleb128 0x9
 20542 7a0b 03810000 		.long	0x8103
 20543 7a0f 09       		.uleb128 0x9
 20544 7a10 18AD0000 		.long	0xad18
 20545 7a14 00       		.byte	0
 20546 7a15 4C       		.uleb128 0x4c
 20547 7a16 00000000 		.long	.LASF1027
 20548 7a1a 2D       		.byte	0x2d
 20549 7a1b 3102     		.value	0x231
 20550 7a1d 3E7A0000 		.long	0x7a3e
 20551 7a21 35       		.uleb128 0x35
 20552 7a22 00000000 		.long	.LASF421
 20553 7a26 01AD0000 		.long	0xad01
 20554 7a2a 35       		.uleb128 0x35
 20555 7a2b 00000000 		.long	.LASF425
 20556 7a2f 03810000 		.long	0x8103
 20557 7a33 09       		.uleb128 0x9
 20558 7a34 01AD0000 		.long	0xad01
 20559 7a38 09       		.uleb128 0x9
 20560 7a39 03810000 		.long	0x8103
 20561 7a3d 00       		.byte	0
 20562 7a3e 4C       		.uleb128 0x4c
 20563 7a3f 00000000 		.long	.LASF1028
 20564 7a43 2D       		.byte	0x2d
 20565 7a44 7502     		.value	0x275
 20566 7a46 757A0000 		.long	0x7a75
 20567 7a4a 35       		.uleb128 0x35
 20568 7a4b 00000000 		.long	.LASF421
 20569 7a4f 01AD0000 		.long	0xad01
 20570 7a53 35       		.uleb128 0x35
 20571 7a54 00000000 		.long	.LASF425
GAS LISTING /tmp/ccmMnd7l.s 			page 663


 20572 7a58 03810000 		.long	0x8103
 20573 7a5c 18       		.uleb128 0x18
 20574 7a5d 5F547000 		.string	"_Tp"
 20575 7a61 29000000 		.long	0x29
 20576 7a65 09       		.uleb128 0x9
 20577 7a66 01AD0000 		.long	0xad01
 20578 7a6a 09       		.uleb128 0x9
 20579 7a6b 03810000 		.long	0x8103
 20580 7a6f 09       		.uleb128 0x9
 20581 7a70 48AD0000 		.long	0xad48
 20582 7a74 00       		.byte	0
 20583 7a75 76       		.uleb128 0x76
 20584 7a76 00000000 		.long	.LASF1029
 20585 7a7a 14       		.byte	0x14
 20586 7a7b 1601     		.value	0x116
 20587 7a7d C8710000 		.long	0x71c8
 20588 7a81 947A0000 		.long	0x7a94
 20589 7a85 35       		.uleb128 0x35
 20590 7a86 00000000 		.long	.LASF743
 20591 7a8a C68C0000 		.long	0x8cc6
 20592 7a8e 09       		.uleb128 0x9
 20593 7a8f C68C0000 		.long	0x8cc6
 20594 7a93 00       		.byte	0
 20595 7a94 76       		.uleb128 0x76
 20596 7a95 00000000 		.long	.LASF1030
 20597 7a99 14       		.byte	0x14
 20598 7a9a 4902     		.value	0x249
 20599 7a9c 01AD0000 		.long	0xad01
 20600 7aa0 D07A0000 		.long	0x7ad0
 20601 7aa4 50       		.uleb128 0x50
 20602 7aa5 00000000 		.long	.LASF1031
 20603 7aa9 E0800000 		.long	0x80e0
 20604 7aad 01       		.byte	0x1
 20605 7aae 35       		.uleb128 0x35
 20606 7aaf 00000000 		.long	.LASF1032
 20607 7ab3 01AD0000 		.long	0xad01
 20608 7ab7 35       		.uleb128 0x35
 20609 7ab8 00000000 		.long	.LASF1033
 20610 7abc 01AD0000 		.long	0xad01
 20611 7ac0 09       		.uleb128 0x9
 20612 7ac1 01AD0000 		.long	0xad01
 20613 7ac5 09       		.uleb128 0x9
 20614 7ac6 01AD0000 		.long	0xad01
 20615 7aca 09       		.uleb128 0x9
 20616 7acb 01AD0000 		.long	0xad01
 20617 7acf 00       		.byte	0
 20618 7ad0 76       		.uleb128 0x76
 20619 7ad1 00000000 		.long	.LASF1034
 20620 7ad5 14       		.byte	0x14
 20621 7ad6 2101     		.value	0x121
 20622 7ad8 1F710000 		.long	0x711f
 20623 7adc EF7A0000 		.long	0x7aef
 20624 7ae0 35       		.uleb128 0x35
 20625 7ae1 00000000 		.long	.LASF743
 20626 7ae5 C68C0000 		.long	0x8cc6
 20627 7ae9 09       		.uleb128 0x9
 20628 7aea C68C0000 		.long	0x8cc6
GAS LISTING /tmp/ccmMnd7l.s 			page 664


 20629 7aee 00       		.byte	0
 20630 7aef 76       		.uleb128 0x76
 20631 7af0 00000000 		.long	.LASF1035
 20632 7af4 14       		.byte	0x14
 20633 7af5 5B02     		.value	0x25b
 20634 7af7 C68C0000 		.long	0x8cc6
 20635 7afb 2B7B0000 		.long	0x7b2b
 20636 7aff 50       		.uleb128 0x50
 20637 7b00 00000000 		.long	.LASF1031
 20638 7b04 E0800000 		.long	0x80e0
 20639 7b08 01       		.byte	0x1
 20640 7b09 35       		.uleb128 0x35
 20641 7b0a 00000000 		.long	.LASF1032
 20642 7b0e C68C0000 		.long	0x8cc6
 20643 7b12 35       		.uleb128 0x35
 20644 7b13 00000000 		.long	.LASF1033
 20645 7b17 C68C0000 		.long	0x8cc6
 20646 7b1b 09       		.uleb128 0x9
 20647 7b1c C68C0000 		.long	0x8cc6
 20648 7b20 09       		.uleb128 0x9
 20649 7b21 C68C0000 		.long	0x8cc6
 20650 7b25 09       		.uleb128 0x9
 20651 7b26 C68C0000 		.long	0x8cc6
 20652 7b2a 00       		.byte	0
 20653 7b2b 76       		.uleb128 0x76
 20654 7b2c 00000000 		.long	.LASF1036
 20655 7b30 14       		.byte	0x14
 20656 7b31 9A02     		.value	0x29a
 20657 7b33 C68C0000 		.long	0x8cc6
 20658 7b37 5D7B0000 		.long	0x7b5d
 20659 7b3b 35       		.uleb128 0x35
 20660 7b3c 00000000 		.long	.LASF1032
 20661 7b40 C68C0000 		.long	0x8cc6
 20662 7b44 35       		.uleb128 0x35
 20663 7b45 00000000 		.long	.LASF1033
 20664 7b49 C68C0000 		.long	0x8cc6
 20665 7b4d 09       		.uleb128 0x9
 20666 7b4e C68C0000 		.long	0x8cc6
 20667 7b52 09       		.uleb128 0x9
 20668 7b53 C68C0000 		.long	0x8cc6
 20669 7b57 09       		.uleb128 0x9
 20670 7b58 C68C0000 		.long	0x8cc6
 20671 7b5c 00       		.byte	0
 20672 7b5d 4C       		.uleb128 0x4c
 20673 7b5e 00000000 		.long	.LASF1037
 20674 7b62 0C       		.byte	0xc
 20675 7b63 5707     		.value	0x757
 20676 7b65 8B7B0000 		.long	0x7b8b
 20677 7b69 35       		.uleb128 0x35
 20678 7b6a 00000000 		.long	.LASF1012
 20679 7b6e C68C0000 		.long	0x8cc6
 20680 7b72 35       		.uleb128 0x35
 20681 7b73 00000000 		.long	.LASF1013
 20682 7b77 58810000 		.long	0x8158
 20683 7b7b 09       		.uleb128 0x9
 20684 7b7c C68C0000 		.long	0x8cc6
 20685 7b80 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 665


 20686 7b81 C68C0000 		.long	0x8cc6
 20687 7b85 09       		.uleb128 0x9
 20688 7b86 58810000 		.long	0x8158
 20689 7b8a 00       		.byte	0
 20690 7b8b 76       		.uleb128 0x76
 20691 7b8c 00000000 		.long	.LASF1038
 20692 7b90 14       		.byte	0x14
 20693 7b91 1601     		.value	0x116
 20694 7b93 0C720000 		.long	0x720c
 20695 7b97 AA7B0000 		.long	0x7baa
 20696 7b9b 35       		.uleb128 0x35
 20697 7b9c 00000000 		.long	.LASF743
 20698 7ba0 D0AD0000 		.long	0xadd0
 20699 7ba4 09       		.uleb128 0x9
 20700 7ba5 D0AD0000 		.long	0xadd0
 20701 7ba9 00       		.byte	0
 20702 7baa 76       		.uleb128 0x76
 20703 7bab 00000000 		.long	.LASF1039
 20704 7baf 14       		.byte	0x14
 20705 7bb0 1803     		.value	0x318
 20706 7bb2 D0AD0000 		.long	0xadd0
 20707 7bb6 E57B0000 		.long	0x7be5
 20708 7bba 18       		.uleb128 0x18
 20709 7bbb 5F4F4900 		.string	"_OI"
 20710 7bbf D0AD0000 		.long	0xadd0
 20711 7bc3 35       		.uleb128 0x35
 20712 7bc4 00000000 		.long	.LASF425
 20713 7bc8 03810000 		.long	0x8103
 20714 7bcc 18       		.uleb128 0x18
 20715 7bcd 5F547000 		.string	"_Tp"
 20716 7bd1 18810000 		.long	0x8118
 20717 7bd5 09       		.uleb128 0x9
 20718 7bd6 D0AD0000 		.long	0xadd0
 20719 7bda 09       		.uleb128 0x9
 20720 7bdb 03810000 		.long	0x8103
 20721 7bdf 09       		.uleb128 0x9
 20722 7be0 E7AD0000 		.long	0xade7
 20723 7be4 00       		.byte	0
 20724 7be5 4C       		.uleb128 0x4c
 20725 7be6 00000000 		.long	.LASF1040
 20726 7bea 2D       		.byte	0x2d
 20727 7beb 3102     		.value	0x231
 20728 7bed 0E7C0000 		.long	0x7c0e
 20729 7bf1 35       		.uleb128 0x35
 20730 7bf2 00000000 		.long	.LASF421
 20731 7bf6 D0AD0000 		.long	0xadd0
 20732 7bfa 35       		.uleb128 0x35
 20733 7bfb 00000000 		.long	.LASF425
 20734 7bff 03810000 		.long	0x8103
 20735 7c03 09       		.uleb128 0x9
 20736 7c04 D0AD0000 		.long	0xadd0
 20737 7c08 09       		.uleb128 0x9
 20738 7c09 03810000 		.long	0x8103
 20739 7c0d 00       		.byte	0
 20740 7c0e 4C       		.uleb128 0x4c
 20741 7c0f 00000000 		.long	.LASF1041
 20742 7c13 2D       		.byte	0x2d
GAS LISTING /tmp/ccmMnd7l.s 			page 666


 20743 7c14 7502     		.value	0x275
 20744 7c16 457C0000 		.long	0x7c45
 20745 7c1a 35       		.uleb128 0x35
 20746 7c1b 00000000 		.long	.LASF421
 20747 7c1f D0AD0000 		.long	0xadd0
 20748 7c23 35       		.uleb128 0x35
 20749 7c24 00000000 		.long	.LASF425
 20750 7c28 03810000 		.long	0x8103
 20751 7c2c 18       		.uleb128 0x18
 20752 7c2d 5F547000 		.string	"_Tp"
 20753 7c31 18810000 		.long	0x8118
 20754 7c35 09       		.uleb128 0x9
 20755 7c36 D0AD0000 		.long	0xadd0
 20756 7c3a 09       		.uleb128 0x9
 20757 7c3b 03810000 		.long	0x8103
 20758 7c3f 09       		.uleb128 0x9
 20759 7c40 17AE0000 		.long	0xae17
 20760 7c44 00       		.byte	0
 20761 7c45 76       		.uleb128 0x76
 20762 7c46 00000000 		.long	.LASF1042
 20763 7c4a 09       		.byte	0x9
 20764 7c4b 5706     		.value	0x657
 20765 7c4d 2C560000 		.long	0x562c
 20766 7c51 787C0000 		.long	0x7c78
 20767 7c55 35       		.uleb128 0x35
 20768 7c56 00000000 		.long	.LASF777
 20769 7c5a F5C20000 		.long	0xc2f5
 20770 7c5e 6A       		.uleb128 0x6a
 20771 7c5f 00000000 		.long	.LASF825
 20772 7c63 6D7C0000 		.long	0x7c6d
 20773 7c67 68       		.uleb128 0x68
 20774 7c68 D5B00000 		.long	0xb0d5
 20775 7c6c 00       		.byte	0
 20776 7c6d 09       		.uleb128 0x9
 20777 7c6e F5C20000 		.long	0xc2f5
 20778 7c72 09       		.uleb128 0x9
 20779 7c73 D5B00000 		.long	0xb0d5
 20780 7c77 00       		.byte	0
 20781 7c78 4C       		.uleb128 0x4c
 20782 7c79 00000000 		.long	.LASF1043
 20783 7c7d 0C       		.byte	0xc
 20784 7c7e BD10     		.value	0x10bd
 20785 7c80 A67C0000 		.long	0x7ca6
 20786 7c84 35       		.uleb128 0x35
 20787 7c85 00000000 		.long	.LASF1044
 20788 7c89 74930000 		.long	0x9374
 20789 7c8d 35       		.uleb128 0x35
 20790 7c8e 00000000 		.long	.LASF1045
 20791 7c92 57560000 		.long	0x5657
 20792 7c96 09       		.uleb128 0x9
 20793 7c97 74930000 		.long	0x9374
 20794 7c9b 09       		.uleb128 0x9
 20795 7c9c 74930000 		.long	0x9374
 20796 7ca0 09       		.uleb128 0x9
 20797 7ca1 57560000 		.long	0x5657
 20798 7ca5 00       		.byte	0
 20799 7ca6 4A       		.uleb128 0x4a
GAS LISTING /tmp/ccmMnd7l.s 			page 667


 20800 7ca7 00000000 		.long	.LASF1046
 20801 7cab 10       		.byte	0x10
 20802 7cac 7C       		.byte	0x7c
 20803 7cad EF7C0000 		.long	0x7cef
 20804 7cb1 35       		.uleb128 0x35
 20805 7cb2 00000000 		.long	.LASF1012
 20806 7cb6 C68C0000 		.long	0x8cc6
 20807 7cba 35       		.uleb128 0x35
 20808 7cbb 00000000 		.long	.LASF1047
 20809 7cbf 34810000 		.long	0x8134
 20810 7cc3 18       		.uleb128 0x18
 20811 7cc4 5F547000 		.string	"_Tp"
 20812 7cc8 29000000 		.long	0x29
 20813 7ccc 35       		.uleb128 0x35
 20814 7ccd 00000000 		.long	.LASF1013
 20815 7cd1 97810000 		.long	0x8197
 20816 7cd5 09       		.uleb128 0x9
 20817 7cd6 C68C0000 		.long	0x8cc6
 20818 7cda 09       		.uleb128 0x9
 20819 7cdb 34810000 		.long	0x8134
 20820 7cdf 09       		.uleb128 0x9
 20821 7ce0 34810000 		.long	0x8134
 20822 7ce4 09       		.uleb128 0x9
 20823 7ce5 29000000 		.long	0x29
 20824 7ce9 09       		.uleb128 0x9
 20825 7cea 97810000 		.long	0x8197
 20826 7cee 00       		.byte	0
 20827 7cef 4C       		.uleb128 0x4c
 20828 7cf0 00000000 		.long	.LASF1048
 20829 7cf4 10       		.byte	0x10
 20830 7cf5 3D01     		.value	0x13d
 20831 7cf7 1D7D0000 		.long	0x7d1d
 20832 7cfb 35       		.uleb128 0x35
 20833 7cfc 00000000 		.long	.LASF1012
 20834 7d00 C68C0000 		.long	0x8cc6
 20835 7d04 35       		.uleb128 0x35
 20836 7d05 00000000 		.long	.LASF1013
 20837 7d09 58810000 		.long	0x8158
 20838 7d0d 09       		.uleb128 0x9
 20839 7d0e C68C0000 		.long	0x8cc6
 20840 7d12 09       		.uleb128 0x9
 20841 7d13 C68C0000 		.long	0x8cc6
 20842 7d17 09       		.uleb128 0x9
 20843 7d18 58810000 		.long	0x8158
 20844 7d1c 00       		.byte	0
 20845 7d1d 4A       		.uleb128 0x4a
 20846 7d1e 00000000 		.long	.LASF1049
 20847 7d22 10       		.byte	0x10
 20848 7d23 EB       		.byte	0xeb
 20849 7d24 4F7D0000 		.long	0x7d4f
 20850 7d28 35       		.uleb128 0x35
 20851 7d29 00000000 		.long	.LASF1012
 20852 7d2d C68C0000 		.long	0x8cc6
 20853 7d31 35       		.uleb128 0x35
 20854 7d32 00000000 		.long	.LASF1013
 20855 7d36 58810000 		.long	0x8158
 20856 7d3a 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 668


 20857 7d3b C68C0000 		.long	0x8cc6
 20858 7d3f 09       		.uleb128 0x9
 20859 7d40 C68C0000 		.long	0x8cc6
 20860 7d44 09       		.uleb128 0x9
 20861 7d45 C68C0000 		.long	0x8cc6
 20862 7d49 09       		.uleb128 0x9
 20863 7d4a 58810000 		.long	0x8158
 20864 7d4e 00       		.byte	0
 20865 7d4f 4C       		.uleb128 0x4c
 20866 7d50 00000000 		.long	.LASF1050
 20867 7d54 0C       		.byte	0xc
 20868 7d55 8506     		.value	0x685
 20869 7d57 827D0000 		.long	0x7d82
 20870 7d5b 35       		.uleb128 0x35
 20871 7d5c 00000000 		.long	.LASF1012
 20872 7d60 C68C0000 		.long	0x8cc6
 20873 7d64 35       		.uleb128 0x35
 20874 7d65 00000000 		.long	.LASF1013
 20875 7d69 58810000 		.long	0x8158
 20876 7d6d 09       		.uleb128 0x9
 20877 7d6e C68C0000 		.long	0x8cc6
 20878 7d72 09       		.uleb128 0x9
 20879 7d73 C68C0000 		.long	0x8cc6
 20880 7d77 09       		.uleb128 0x9
 20881 7d78 C68C0000 		.long	0x8cc6
 20882 7d7c 09       		.uleb128 0x9
 20883 7d7d 58810000 		.long	0x8158
 20884 7d81 00       		.byte	0
 20885 7d82 4C       		.uleb128 0x4c
 20886 7d83 00000000 		.long	.LASF1051
 20887 7d87 10       		.byte	0x10
 20888 7d88 8601     		.value	0x186
 20889 7d8a B07D0000 		.long	0x7db0
 20890 7d8e 35       		.uleb128 0x35
 20891 7d8f 00000000 		.long	.LASF1012
 20892 7d93 C68C0000 		.long	0x8cc6
 20893 7d97 35       		.uleb128 0x35
 20894 7d98 00000000 		.long	.LASF1013
 20895 7d9c 58810000 		.long	0x8158
 20896 7da0 09       		.uleb128 0x9
 20897 7da1 C68C0000 		.long	0x8cc6
 20898 7da5 09       		.uleb128 0x9
 20899 7da6 C68C0000 		.long	0x8cc6
 20900 7daa 09       		.uleb128 0x9
 20901 7dab 58810000 		.long	0x8158
 20902 7daf 00       		.byte	0
 20903 7db0 4C       		.uleb128 0x4c
 20904 7db1 00000000 		.long	.LASF1052
 20905 7db5 0C       		.byte	0xc
 20906 7db6 8707     		.value	0x787
 20907 7db8 E37D0000 		.long	0x7de3
 20908 7dbc 35       		.uleb128 0x35
 20909 7dbd 00000000 		.long	.LASF1012
 20910 7dc1 C68C0000 		.long	0x8cc6
 20911 7dc5 35       		.uleb128 0x35
 20912 7dc6 00000000 		.long	.LASF1013
 20913 7dca 58810000 		.long	0x8158
GAS LISTING /tmp/ccmMnd7l.s 			page 669


 20914 7dce 09       		.uleb128 0x9
 20915 7dcf C68C0000 		.long	0x8cc6
 20916 7dd3 09       		.uleb128 0x9
 20917 7dd4 C68C0000 		.long	0x8cc6
 20918 7dd8 09       		.uleb128 0x9
 20919 7dd9 C68C0000 		.long	0x8cc6
 20920 7ddd 09       		.uleb128 0x9
 20921 7dde 58810000 		.long	0x8158
 20922 7de2 00       		.byte	0
 20923 7de3 4C       		.uleb128 0x4c
 20924 7de4 00000000 		.long	.LASF1053
 20925 7de8 0C       		.byte	0xc
 20926 7de9 9307     		.value	0x793
 20927 7deb 1F7E0000 		.long	0x7e1f
 20928 7def 35       		.uleb128 0x35
 20929 7df0 00000000 		.long	.LASF1012
 20930 7df4 C68C0000 		.long	0x8cc6
 20931 7df8 35       		.uleb128 0x35
 20932 7df9 00000000 		.long	.LASF425
 20933 7dfd 34810000 		.long	0x8134
 20934 7e01 35       		.uleb128 0x35
 20935 7e02 00000000 		.long	.LASF1013
 20936 7e06 58810000 		.long	0x8158
 20937 7e0a 09       		.uleb128 0x9
 20938 7e0b C68C0000 		.long	0x8cc6
 20939 7e0f 09       		.uleb128 0x9
 20940 7e10 C68C0000 		.long	0x8cc6
 20941 7e14 09       		.uleb128 0x9
 20942 7e15 34810000 		.long	0x8134
 20943 7e19 09       		.uleb128 0x9
 20944 7e1a 58810000 		.long	0x8158
 20945 7e1e 00       		.byte	0
 20946 7e1f 76       		.uleb128 0x76
 20947 7e20 00000000 		.long	.LASF1054
 20948 7e24 14       		.byte	0x14
 20949 7e25 F603     		.value	0x3f6
 20950 7e27 34810000 		.long	0x8134
 20951 7e2b 357E0000 		.long	0x7e35
 20952 7e2f 09       		.uleb128 0x9
 20953 7e30 34810000 		.long	0x8134
 20954 7e34 00       		.byte	0
 20955 7e35 4C       		.uleb128 0x4c
 20956 7e36 00000000 		.long	.LASF1055
 20957 7e3a 0C       		.byte	0xc
 20958 7e3b AA07     		.value	0x7aa
 20959 7e3d 637E0000 		.long	0x7e63
 20960 7e41 35       		.uleb128 0x35
 20961 7e42 00000000 		.long	.LASF1012
 20962 7e46 C68C0000 		.long	0x8cc6
 20963 7e4a 35       		.uleb128 0x35
 20964 7e4b 00000000 		.long	.LASF1013
 20965 7e4f 58810000 		.long	0x8158
 20966 7e53 09       		.uleb128 0x9
 20967 7e54 C68C0000 		.long	0x8cc6
 20968 7e58 09       		.uleb128 0x9
 20969 7e59 C68C0000 		.long	0x8cc6
 20970 7e5d 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 670


 20971 7e5e 58810000 		.long	0x8158
 20972 7e62 00       		.byte	0
 20973 7e63 52       		.uleb128 0x52
 20974 7e64 00000000 		.long	.LASF1056
 20975 7e68 13       		.byte	0x13
 20976 7e69 78       		.byte	0x78
 20977 7e6a 29000000 		.long	0x29
 20978 7e6e 947E0000 		.long	0x7e94
 20979 7e72 35       		.uleb128 0x35
 20980 7e73 00000000 		.long	.LASF1057
 20981 7e77 C68C0000 		.long	0x8cc6
 20982 7e7b 18       		.uleb128 0x18
 20983 7e7c 5F547000 		.string	"_Tp"
 20984 7e80 29000000 		.long	0x29
 20985 7e84 09       		.uleb128 0x9
 20986 7e85 C68C0000 		.long	0x8cc6
 20987 7e89 09       		.uleb128 0x9
 20988 7e8a C68C0000 		.long	0x8cc6
 20989 7e8e 09       		.uleb128 0x9
 20990 7e8f 29000000 		.long	0x29
 20991 7e93 00       		.byte	0
 20992 7e94 4C       		.uleb128 0x4c
 20993 7e95 00000000 		.long	.LASF1058
 20994 7e99 0C       		.byte	0xc
 20995 7e9a 4412     		.value	0x1244
 20996 7e9c B47E0000 		.long	0x7eb4
 20997 7ea0 35       		.uleb128 0x35
 20998 7ea1 00000000 		.long	.LASF1059
 20999 7ea5 C68C0000 		.long	0x8cc6
 21000 7ea9 09       		.uleb128 0x9
 21001 7eaa C68C0000 		.long	0x8cc6
 21002 7eae 09       		.uleb128 0x9
 21003 7eaf C68C0000 		.long	0x8cc6
 21004 7eb3 00       		.byte	0
 21005 7eb4 76       		.uleb128 0x76
 21006 7eb5 00000000 		.long	.LASF1060
 21007 7eb9 0C       		.byte	0xc
 21008 7eba 7C07     		.value	0x77c
 21009 7ebc C68C0000 		.long	0x8cc6
 21010 7ec0 E67E0000 		.long	0x7ee6
 21011 7ec4 35       		.uleb128 0x35
 21012 7ec5 00000000 		.long	.LASF1012
 21013 7ec9 C68C0000 		.long	0x8cc6
 21014 7ecd 35       		.uleb128 0x35
 21015 7ece 00000000 		.long	.LASF1013
 21016 7ed2 58810000 		.long	0x8158
 21017 7ed6 09       		.uleb128 0x9
 21018 7ed7 C68C0000 		.long	0x8cc6
 21019 7edb 09       		.uleb128 0x9
 21020 7edc C68C0000 		.long	0x8cc6
 21021 7ee0 09       		.uleb128 0x9
 21022 7ee1 58810000 		.long	0x8158
 21023 7ee5 00       		.byte	0
 21024 7ee6 4A       		.uleb128 0x4a
 21025 7ee7 00000000 		.long	.LASF1061
 21026 7eeb 0C       		.byte	0xc
 21027 7eec 4E       		.byte	0x4e
GAS LISTING /tmp/ccmMnd7l.s 			page 671


 21028 7eed 1D7F0000 		.long	0x7f1d
 21029 7ef1 35       		.uleb128 0x35
 21030 7ef2 00000000 		.long	.LASF743
 21031 7ef6 C68C0000 		.long	0x8cc6
 21032 7efa 35       		.uleb128 0x35
 21033 7efb 00000000 		.long	.LASF1013
 21034 7eff 58810000 		.long	0x8158
 21035 7f03 09       		.uleb128 0x9
 21036 7f04 C68C0000 		.long	0x8cc6
 21037 7f08 09       		.uleb128 0x9
 21038 7f09 C68C0000 		.long	0x8cc6
 21039 7f0d 09       		.uleb128 0x9
 21040 7f0e C68C0000 		.long	0x8cc6
 21041 7f12 09       		.uleb128 0x9
 21042 7f13 C68C0000 		.long	0x8cc6
 21043 7f17 09       		.uleb128 0x9
 21044 7f18 58810000 		.long	0x8158
 21045 7f1c 00       		.byte	0
 21046 7f1d 4C       		.uleb128 0x4c
 21047 7f1e 00000000 		.long	.LASF1062
 21048 7f22 0C       		.byte	0xc
 21049 7f23 2F07     		.value	0x72f
 21050 7f25 4B7F0000 		.long	0x7f4b
 21051 7f29 35       		.uleb128 0x35
 21052 7f2a 00000000 		.long	.LASF1012
 21053 7f2e C68C0000 		.long	0x8cc6
 21054 7f32 35       		.uleb128 0x35
 21055 7f33 00000000 		.long	.LASF1013
 21056 7f37 58810000 		.long	0x8158
 21057 7f3b 09       		.uleb128 0x9
 21058 7f3c C68C0000 		.long	0x8cc6
 21059 7f40 09       		.uleb128 0x9
 21060 7f41 C68C0000 		.long	0x8cc6
 21061 7f45 09       		.uleb128 0x9
 21062 7f46 58810000 		.long	0x8158
 21063 7f4a 00       		.byte	0
 21064 7f4b 11       		.uleb128 0x11
 21065 7f4c 54070000 		.long	0x754
 21066 7f50 76       		.uleb128 0x76
 21067 7f51 00000000 		.long	.LASF374
 21068 7f55 15       		.byte	0x15
 21069 7f56 BE03     		.value	0x3be
 21070 7f58 1FAC0000 		.long	0xac1f
 21071 7f5c 667F0000 		.long	0x7f66
 21072 7f60 09       		.uleb128 0x9
 21073 7f61 1FAC0000 		.long	0xac1f
 21074 7f65 00       		.byte	0
 21075 7f66 76       		.uleb128 0x76
 21076 7f67 00000000 		.long	.LASF1063
 21077 7f6b 08       		.byte	0x8
 21078 7f6c 3402     		.value	0x234
 21079 7f6e AAAC0000 		.long	0xacaa
 21080 7f72 8E7F0000 		.long	0x7f8e
 21081 7f76 35       		.uleb128 0x35
 21082 7f77 00000000 		.long	.LASF301
 21083 7f7b E4990000 		.long	0x99e4
 21084 7f7f 35       		.uleb128 0x35
GAS LISTING /tmp/ccmMnd7l.s 			page 672


 21085 7f80 00000000 		.long	.LASF302
 21086 7f84 BD040000 		.long	0x4bd
 21087 7f88 09       		.uleb128 0x9
 21088 7f89 AAAC0000 		.long	0xacaa
 21089 7f8d 00       		.byte	0
 21090 7f8e 1C       		.uleb128 0x1c
 21091 7f8f 00000000 		.long	.LASF1064
 21092 7f93 10       		.byte	0x10
 21093 7f94 CF       		.byte	0xcf
 21094 7f95 00000000 		.long	.LASF1065
 21095 7f99 DB7F0000 		.long	0x7fdb
 21096 7f9d 35       		.uleb128 0x35
 21097 7f9e 00000000 		.long	.LASF1012
 21098 7fa2 C68C0000 		.long	0x8cc6
 21099 7fa6 35       		.uleb128 0x35
 21100 7fa7 00000000 		.long	.LASF1047
 21101 7fab 34810000 		.long	0x8134
 21102 7faf 18       		.uleb128 0x18
 21103 7fb0 5F547000 		.string	"_Tp"
 21104 7fb4 29000000 		.long	0x29
 21105 7fb8 35       		.uleb128 0x35
 21106 7fb9 00000000 		.long	.LASF1013
 21107 7fbd 58810000 		.long	0x8158
 21108 7fc1 09       		.uleb128 0x9
 21109 7fc2 C68C0000 		.long	0x8cc6
 21110 7fc6 09       		.uleb128 0x9
 21111 7fc7 34810000 		.long	0x8134
 21112 7fcb 09       		.uleb128 0x9
 21113 7fcc 34810000 		.long	0x8134
 21114 7fd0 09       		.uleb128 0x9
 21115 7fd1 29000000 		.long	0x29
 21116 7fd5 09       		.uleb128 0x9
 21117 7fd6 58810000 		.long	0x8158
 21118 7fda 00       		.byte	0
 21119 7fdb 78       		.uleb128 0x78
 21120 7fdc 00000000 		.long	.LASF1070
 21121 7fe0 1C       		.byte	0x1c
 21122 7fe1 65       		.byte	0x65
 21123 7fe2 00000000 		.long	.LASF1072
 21124 7fe6 EA7F0000 		.long	0x7fea
 21125 7fea 11       		.uleb128 0x11
 21126 7feb 10020000 		.long	0x210
 21127 7fef 79       		.uleb128 0x79
 21128 7ff0 00000000 		.long	.LASF1066
 21129 7ff4 1D       		.byte	0x1d
 21130 7ff5 4F       		.byte	0x4f
 21131 7ff6 FC7F0000 		.long	0x7ffc
 21132 7ffa 01       		.byte	0x1
 21133 7ffb 00       		.byte	0
 21134 7ffc 11       		.uleb128 0x11
 21135 7ffd C8020000 		.long	0x2c8
 21136 8001 79       		.uleb128 0x79
 21137 8002 00000000 		.long	.LASF1067
 21138 8006 28       		.byte	0x28
 21139 8007 29       		.byte	0x29
 21140 8008 0E800000 		.long	0x800e
 21141 800c 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 673


 21142 800d 00       		.byte	0
 21143 800e 11       		.uleb128 0x11
 21144 800f D4230000 		.long	0x23d4
 21145 8013 7A       		.uleb128 0x7a
 21146 8014 00000000 		.long	.LASF1068
 21147 8018 0A       		.byte	0xa
 21148 8019 3404     		.value	0x434
 21149 801b 21800000 		.long	0x8021
 21150 801f 01       		.byte	0x1
 21151 8020 00       		.byte	0
 21152 8021 11       		.uleb128 0x11
 21153 8022 5B240000 		.long	0x245b
 21154 8026 13       		.uleb128 0x13
 21155 8027 00000000 		.long	.LASF1069
 21156 802b 34       		.byte	0x34
 21157 802c 88       		.byte	0x88
 21158 802d 97280000 		.long	0x2897
 21159 8031 78       		.uleb128 0x78
 21160 8032 00000000 		.long	.LASF1071
 21161 8036 18       		.byte	0x18
 21162 8037 3D       		.byte	0x3d
 21163 8038 00000000 		.long	.LASF1073
 21164 803c 26800000 		.long	0x8026
 21165 8040 78       		.uleb128 0x78
 21166 8041 00000000 		.long	.LASF1074
 21167 8045 18       		.byte	0x18
 21168 8046 3E       		.byte	0x3e
 21169 8047 00000000 		.long	.LASF1075
 21170 804b 26800000 		.long	0x8026
 21171 804f 7B       		.uleb128 0x7b
 21172 8050 00000000 		.long	.LASF1607
 21173 8054 18       		.byte	0x18
 21174 8055 4A       		.byte	0x4a
 21175 8056 E6250000 		.long	0x25e6
 21176 805a 7C       		.uleb128 0x7c
 21177 805b 00000000 		.long	.LASF1079
 21178 805f 37       		.byte	0x37
 21179 8060 34       		.byte	0x34
 21180 8061 00000000 		.long	.LASF1081
 21181 8065 4E       		.uleb128 0x4e
 21182 8066 00000000 		.long	.LASF1076
 21183 806a 35       		.byte	0x35
 21184 806b 4C       		.byte	0x4c
 21185 806c 00000000 		.long	.LASF1077
 21186 8070 AAAC0000 		.long	0xacaa
 21187 8074 9A800000 		.long	0x809a
 21188 8078 35       		.uleb128 0x35
 21189 8079 00000000 		.long	.LASF301
 21190 807d E4990000 		.long	0x99e4
 21191 8081 35       		.uleb128 0x35
 21192 8082 00000000 		.long	.LASF302
 21193 8086 BD040000 		.long	0x4bd
 21194 808a 09       		.uleb128 0x9
 21195 808b AAAC0000 		.long	0xacaa
 21196 808f 09       		.uleb128 0x9
 21197 8090 069A0000 		.long	0x9a06
 21198 8094 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 674


 21199 8095 9A800000 		.long	0x809a
 21200 8099 00       		.byte	0
 21201 809a 13       		.uleb128 0x13
 21202 809b 00000000 		.long	.LASF1078
 21203 809f 36       		.byte	0x36
 21204 80a0 62       		.byte	0x62
 21205 80a1 54070000 		.long	0x754
 21206 80a5 7C       		.uleb128 0x7c
 21207 80a6 00000000 		.long	.LASF1080
 21208 80aa 37       		.byte	0x37
 21209 80ab 38       		.byte	0x38
 21210 80ac 00000000 		.long	.LASF1082
 21211 80b0 00       		.byte	0
 21212 80b1 7D       		.uleb128 0x7d
 21213 80b2 08       		.byte	0x8
 21214 80b3 7E       		.uleb128 0x7e
 21215 80b4 08       		.byte	0x8
 21216 80b5 4D000000 		.long	0x4d
 21217 80b9 7E       		.uleb128 0x7e
 21218 80ba 08       		.byte	0x8
 21219 80bb EE010000 		.long	0x1ee
 21220 80bf 7F       		.uleb128 0x7f
 21221 80c0 08       		.byte	0x8
 21222 80c1 EE010000 		.long	0x1ee
 21223 80c5 8001     		.uleb128 0x80
 21224 80c7 00000000 		.long	.LASF1669
 21225 80cb 8101     		.uleb128 0x81
 21226 80cd 08       		.byte	0x8
 21227 80ce 4D000000 		.long	0x4d
 21228 80d2 7F       		.uleb128 0x7f
 21229 80d3 08       		.byte	0x8
 21230 80d4 4D000000 		.long	0x4d
 21231 80d8 8201     		.uleb128 0x82
 21232 80da 04       		.byte	0x4
 21233 80db 05       		.byte	0x5
 21234 80dc 696E7400 		.string	"int"
 21235 80e0 02       		.uleb128 0x2
 21236 80e1 01       		.byte	0x1
 21237 80e2 02       		.byte	0x2
 21238 80e3 00000000 		.long	.LASF1083
 21239 80e7 7E       		.uleb128 0x7e
 21240 80e8 08       		.byte	0x8
 21241 80e9 0B020000 		.long	0x20b
 21242 80ed 11       		.uleb128 0x11
 21243 80ee E0800000 		.long	0x80e0
 21244 80f2 7E       		.uleb128 0x7e
 21245 80f3 08       		.byte	0x8
 21246 80f4 6B020000 		.long	0x26b
 21247 80f8 7E       		.uleb128 0x7e
 21248 80f9 08       		.byte	0x8
 21249 80fa C3020000 		.long	0x2c3
 21250 80fe 11       		.uleb128 0x11
 21251 80ff 03810000 		.long	0x8103
 21252 8103 02       		.uleb128 0x2
 21253 8104 08       		.byte	0x8
 21254 8105 07       		.byte	0x7
 21255 8106 00000000 		.long	.LASF1084
GAS LISTING /tmp/ccmMnd7l.s 			page 675


 21256 810a 02       		.uleb128 0x2
 21257 810b 01       		.byte	0x1
 21258 810c 08       		.byte	0x8
 21259 810d 00000000 		.long	.LASF1085
 21260 8111 02       		.uleb128 0x2
 21261 8112 02       		.byte	0x2
 21262 8113 07       		.byte	0x7
 21263 8114 00000000 		.long	.LASF1086
 21264 8118 02       		.uleb128 0x2
 21265 8119 04       		.byte	0x4
 21266 811a 07       		.byte	0x7
 21267 811b 00000000 		.long	.LASF1087
 21268 811f 02       		.uleb128 0x2
 21269 8120 08       		.byte	0x8
 21270 8121 07       		.byte	0x7
 21271 8122 00000000 		.long	.LASF1088
 21272 8126 02       		.uleb128 0x2
 21273 8127 01       		.byte	0x1
 21274 8128 06       		.byte	0x6
 21275 8129 00000000 		.long	.LASF1089
 21276 812d 02       		.uleb128 0x2
 21277 812e 02       		.byte	0x2
 21278 812f 05       		.byte	0x5
 21279 8130 00000000 		.long	.LASF1090
 21280 8134 02       		.uleb128 0x2
 21281 8135 08       		.byte	0x8
 21282 8136 05       		.byte	0x5
 21283 8137 00000000 		.long	.LASF1091
 21284 813b 02       		.uleb128 0x2
 21285 813c 08       		.byte	0x8
 21286 813d 05       		.byte	0x5
 21287 813e 00000000 		.long	.LASF1092
 21288 8142 04       		.uleb128 0x4
 21289 8143 00000000 		.long	.LASF1093
 21290 8147 38       		.byte	0x38
 21291 8148 85       		.byte	0x85
 21292 8149 77970000 		.long	0x9777
 21293 814d 04       		.uleb128 0x4
 21294 814e 00000000 		.long	.LASF1094
 21295 8152 11       		.byte	0x11
 21296 8153 24       		.byte	0x24
 21297 8154 5B820000 		.long	0x825b
 21298 8158 16       		.uleb128 0x16
 21299 8159 00000000 		.long	.LASF1095
 21300 815d 01       		.byte	0x1
 21301 815e 11       		.byte	0x11
 21302 815f 25       		.byte	0x25
 21303 8160 97810000 		.long	0x8197
 21304 8164 8301     		.uleb128 0x83
 21305 8166 00000000 		.long	.LASF1096
 21306 816a 11       		.byte	0x11
 21307 816b 29       		.byte	0x29
 21308 816c E0800000 		.long	0x80e0
 21309 8170 86810000 		.long	0x8186
 21310 8174 35       		.uleb128 0x35
 21311 8175 00000000 		.long	.LASF1097
 21312 8179 C68C0000 		.long	0x8cc6
GAS LISTING /tmp/ccmMnd7l.s 			page 676


 21313 817d 35       		.uleb128 0x35
 21314 817e 00000000 		.long	.LASF1098
 21315 8182 C68C0000 		.long	0x8cc6
 21316 8186 08       		.uleb128 0x8
 21317 8187 AFCB0000 		.long	0xcbaf
 21318 818b 09       		.uleb128 0x9
 21319 818c C68C0000 		.long	0x8cc6
 21320 8190 09       		.uleb128 0x9
 21321 8191 C68C0000 		.long	0x8cc6
 21322 8195 00       		.byte	0
 21323 8196 00       		.byte	0
 21324 8197 16       		.uleb128 0x16
 21325 8198 00000000 		.long	.LASF1099
 21326 819c 01       		.byte	0x1
 21327 819d 11       		.byte	0x11
 21328 819e 31       		.byte	0x31
 21329 819f D6810000 		.long	0x81d6
 21330 81a3 8301     		.uleb128 0x83
 21331 81a5 00000000 		.long	.LASF1100
 21332 81a9 11       		.byte	0x11
 21333 81aa 35       		.byte	0x35
 21334 81ab E0800000 		.long	0x80e0
 21335 81af C5810000 		.long	0x81c5
 21336 81b3 35       		.uleb128 0x35
 21337 81b4 00000000 		.long	.LASF743
 21338 81b8 C68C0000 		.long	0x8cc6
 21339 81bc 35       		.uleb128 0x35
 21340 81bd 00000000 		.long	.LASF1101
 21341 81c1 29000000 		.long	0x29
 21342 81c5 08       		.uleb128 0x8
 21343 81c6 8ADB0000 		.long	0xdb8a
 21344 81ca 09       		.uleb128 0x9
 21345 81cb C68C0000 		.long	0x8cc6
 21346 81cf 09       		.uleb128 0x9
 21347 81d0 12AD0000 		.long	0xad12
 21348 81d4 00       		.byte	0
 21349 81d5 00       		.byte	0
 21350 81d6 16       		.uleb128 0x16
 21351 81d7 00000000 		.long	.LASF1102
 21352 81db 01       		.byte	0x1
 21353 81dc 11       		.byte	0x11
 21354 81dd 41       		.byte	0x41
 21355 81de 15820000 		.long	0x8215
 21356 81e2 8301     		.uleb128 0x83
 21357 81e4 00000000 		.long	.LASF1103
 21358 81e8 11       		.byte	0x11
 21359 81e9 45       		.byte	0x45
 21360 81ea E0800000 		.long	0x80e0
 21361 81ee 04820000 		.long	0x8204
 21362 81f2 35       		.uleb128 0x35
 21363 81f3 00000000 		.long	.LASF1101
 21364 81f7 29000000 		.long	0x29
 21365 81fb 35       		.uleb128 0x35
 21366 81fc 00000000 		.long	.LASF743
 21367 8200 C68C0000 		.long	0x8cc6
 21368 8204 08       		.uleb128 0x8
 21369 8205 4DCC0000 		.long	0xcc4d
GAS LISTING /tmp/ccmMnd7l.s 			page 677


 21370 8209 09       		.uleb128 0x9
 21371 820a 12AD0000 		.long	0xad12
 21372 820e 09       		.uleb128 0x9
 21373 820f C68C0000 		.long	0x8cc6
 21374 8213 00       		.byte	0
 21375 8214 00       		.byte	0
 21376 8215 52       		.uleb128 0x52
 21377 8216 00000000 		.long	.LASF1104
 21378 821a 11       		.byte	0x11
 21379 821b 3E       		.byte	0x3e
 21380 821c 97810000 		.long	0x8197
 21381 8220 2A820000 		.long	0x822a
 21382 8224 09       		.uleb128 0x9
 21383 8225 58810000 		.long	0x8158
 21384 8229 00       		.byte	0
 21385 822a 52       		.uleb128 0x52
 21386 822b 00000000 		.long	.LASF1105
 21387 822f 11       		.byte	0x11
 21388 8230 4E       		.byte	0x4e
 21389 8231 D6810000 		.long	0x81d6
 21390 8235 3F820000 		.long	0x823f
 21391 8239 09       		.uleb128 0x9
 21392 823a 58810000 		.long	0x8158
 21393 823e 00       		.byte	0
 21394 823f 11       		.uleb128 0x11
 21395 8240 58810000 		.long	0x8158
 21396 8244 11       		.uleb128 0x11
 21397 8245 D6810000 		.long	0x81d6
 21398 8249 11       		.uleb128 0x11
 21399 824a 97810000 		.long	0x8197
 21400 824e 8401     		.uleb128 0x84
 21401 8250 00000000 		.long	.LASF1106
 21402 8254 11       		.byte	0x11
 21403 8255 2E       		.byte	0x2e
 21404 8256 58810000 		.long	0x8158
 21405 825a 00       		.byte	0
 21406 825b 12       		.uleb128 0x12
 21407 825c 1E       		.byte	0x1e
 21408 825d F8       		.byte	0xf8
 21409 825e 46A10000 		.long	0xa146
 21410 8262 1B       		.uleb128 0x1b
 21411 8263 1E       		.byte	0x1e
 21412 8264 0101     		.value	0x101
 21413 8266 61A10000 		.long	0xa161
 21414 826a 1B       		.uleb128 0x1b
 21415 826b 1E       		.byte	0x1e
 21416 826c 0201     		.value	0x102
 21417 826e 81A10000 		.long	0xa181
 21418 8272 12       		.uleb128 0x12
 21419 8273 0E       		.byte	0xe
 21420 8274 2C       		.byte	0x2c
 21421 8275 85060000 		.long	0x685
 21422 8279 12       		.uleb128 0x12
 21423 827a 0E       		.byte	0xe
 21424 827b 2D       		.byte	0x2d
 21425 827c 54070000 		.long	0x754
 21426 8280 05       		.uleb128 0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 678


 21427 8281 00000000 		.long	.LASF1107
 21428 8285 01       		.byte	0x1
 21429 8286 0E       		.byte	0xe
 21430 8287 3A       		.byte	0x3a
 21431 8288 CE830000 		.long	0x83ce
 21432 828c 22       		.uleb128 0x22
 21433 828d 00000000 		.long	.LASF57
 21434 8291 0E       		.byte	0xe
 21435 8292 3D       		.byte	0x3d
 21436 8293 85060000 		.long	0x685
 21437 8297 01       		.byte	0x1
 21438 8298 22       		.uleb128 0x22
 21439 8299 00000000 		.long	.LASF489
 21440 829d 0E       		.byte	0xe
 21441 829e 3F       		.byte	0x3f
 21442 829f 289D0000 		.long	0x9d28
 21443 82a3 01       		.byte	0x1
 21444 82a4 22       		.uleb128 0x22
 21445 82a5 00000000 		.long	.LASF1108
 21446 82a9 0E       		.byte	0xe
 21447 82aa 40       		.byte	0x40
 21448 82ab 069A0000 		.long	0x9a06
 21449 82af 01       		.byte	0x1
 21450 82b0 22       		.uleb128 0x22
 21451 82b1 00000000 		.long	.LASF58
 21452 82b5 0E       		.byte	0xe
 21453 82b6 41       		.byte	0x41
 21454 82b7 09A30000 		.long	0xa309
 21455 82bb 01       		.byte	0x1
 21456 82bc 22       		.uleb128 0x22
 21457 82bd 00000000 		.long	.LASF59
 21458 82c1 0E       		.byte	0xe
 21459 82c2 42       		.byte	0x42
 21460 82c3 0FA30000 		.long	0xa30f
 21461 82c7 01       		.byte	0x1
 21462 82c8 0C       		.uleb128 0xc
 21463 82c9 00000000 		.long	.LASF1109
 21464 82cd 0E       		.byte	0xe
 21465 82ce 4F       		.byte	0x4f
 21466 82cf 01       		.byte	0x1
 21467 82d0 D8820000 		.long	0x82d8
 21468 82d4 DE820000 		.long	0x82de
 21469 82d8 08       		.uleb128 0x8
 21470 82d9 15A30000 		.long	0xa315
 21471 82dd 00       		.byte	0
 21472 82de 0C       		.uleb128 0xc
 21473 82df 00000000 		.long	.LASF1109
 21474 82e3 0E       		.byte	0xe
 21475 82e4 51       		.byte	0x51
 21476 82e5 01       		.byte	0x1
 21477 82e6 EE820000 		.long	0x82ee
 21478 82ea F9820000 		.long	0x82f9
 21479 82ee 08       		.uleb128 0x8
 21480 82ef 15A30000 		.long	0xa315
 21481 82f3 09       		.uleb128 0x9
 21482 82f4 1BA30000 		.long	0xa31b
 21483 82f8 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 679


 21484 82f9 0C       		.uleb128 0xc
 21485 82fa 00000000 		.long	.LASF1110
 21486 82fe 0E       		.byte	0xe
 21487 82ff 56       		.byte	0x56
 21488 8300 01       		.byte	0x1
 21489 8301 09830000 		.long	0x8309
 21490 8305 14830000 		.long	0x8314
 21491 8309 08       		.uleb128 0x8
 21492 830a 15A30000 		.long	0xa315
 21493 830e 08       		.uleb128 0x8
 21494 830f D8800000 		.long	0x80d8
 21495 8313 00       		.byte	0
 21496 8314 0D       		.uleb128 0xd
 21497 8315 00000000 		.long	.LASF1111
 21498 8319 0E       		.byte	0xe
 21499 831a 59       		.byte	0x59
 21500 831b 00000000 		.long	.LASF1112
 21501 831f 98820000 		.long	0x8298
 21502 8323 01       		.byte	0x1
 21503 8324 2C830000 		.long	0x832c
 21504 8328 37830000 		.long	0x8337
 21505 832c 08       		.uleb128 0x8
 21506 832d 21A30000 		.long	0xa321
 21507 8331 09       		.uleb128 0x9
 21508 8332 B0820000 		.long	0x82b0
 21509 8336 00       		.byte	0
 21510 8337 0D       		.uleb128 0xd
 21511 8338 00000000 		.long	.LASF1111
 21512 833c 0E       		.byte	0xe
 21513 833d 5D       		.byte	0x5d
 21514 833e 00000000 		.long	.LASF1113
 21515 8342 A4820000 		.long	0x82a4
 21516 8346 01       		.byte	0x1
 21517 8347 4F830000 		.long	0x834f
 21518 834b 5A830000 		.long	0x835a
 21519 834f 08       		.uleb128 0x8
 21520 8350 21A30000 		.long	0xa321
 21521 8354 09       		.uleb128 0x9
 21522 8355 BC820000 		.long	0x82bc
 21523 8359 00       		.byte	0
 21524 835a 0D       		.uleb128 0xd
 21525 835b 00000000 		.long	.LASF535
 21526 835f 0E       		.byte	0xe
 21527 8360 63       		.byte	0x63
 21528 8361 00000000 		.long	.LASF1114
 21529 8365 98820000 		.long	0x8298
 21530 8369 01       		.byte	0x1
 21531 836a 72830000 		.long	0x8372
 21532 836e 82830000 		.long	0x8382
 21533 8372 08       		.uleb128 0x8
 21534 8373 15A30000 		.long	0xa315
 21535 8377 09       		.uleb128 0x9
 21536 8378 8C820000 		.long	0x828c
 21537 837c 09       		.uleb128 0x9
 21538 837d 01A30000 		.long	0xa301
 21539 8381 00       		.byte	0
 21540 8382 0E       		.uleb128 0xe
GAS LISTING /tmp/ccmMnd7l.s 			page 680


 21541 8383 00000000 		.long	.LASF538
 21542 8387 0E       		.byte	0xe
 21543 8388 6D       		.byte	0x6d
 21544 8389 00000000 		.long	.LASF1115
 21545 838d 01       		.byte	0x1
 21546 838e 96830000 		.long	0x8396
 21547 8392 A6830000 		.long	0x83a6
 21548 8396 08       		.uleb128 0x8
 21549 8397 15A30000 		.long	0xa315
 21550 839b 09       		.uleb128 0x9
 21551 839c 98820000 		.long	0x8298
 21552 83a0 09       		.uleb128 0x9
 21553 83a1 8C820000 		.long	0x828c
 21554 83a5 00       		.byte	0
 21555 83a6 0D       		.uleb128 0xd
 21556 83a7 00000000 		.long	.LASF171
 21557 83ab 0E       		.byte	0xe
 21558 83ac 71       		.byte	0x71
 21559 83ad 00000000 		.long	.LASF1116
 21560 83b1 8C820000 		.long	0x828c
 21561 83b5 01       		.byte	0x1
 21562 83b6 BE830000 		.long	0x83be
 21563 83ba C4830000 		.long	0x83c4
 21564 83be 08       		.uleb128 0x8
 21565 83bf 21A30000 		.long	0xa321
 21566 83c3 00       		.byte	0
 21567 83c4 18       		.uleb128 0x18
 21568 83c5 5F547000 		.string	"_Tp"
 21569 83c9 E4990000 		.long	0x99e4
 21570 83cd 00       		.byte	0
 21571 83ce 11       		.uleb128 0x11
 21572 83cf 80820000 		.long	0x8280
 21573 83d3 16       		.uleb128 0x16
 21574 83d4 00000000 		.long	.LASF1117
 21575 83d8 01       		.byte	0x1
 21576 83d9 39       		.byte	0x39
 21577 83da 37       		.byte	0x37
 21578 83db 15840000 		.long	0x8415
 21579 83df 17       		.uleb128 0x17
 21580 83e0 00000000 		.long	.LASF1118
 21581 83e4 39       		.byte	0x39
 21582 83e5 3A       		.byte	0x3a
 21583 83e6 019A0000 		.long	0x9a01
 21584 83ea 17       		.uleb128 0x17
 21585 83eb 00000000 		.long	.LASF1119
 21586 83ef 39       		.byte	0x39
 21587 83f0 3B       		.byte	0x3b
 21588 83f1 019A0000 		.long	0x9a01
 21589 83f5 17       		.uleb128 0x17
 21590 83f6 00000000 		.long	.LASF1120
 21591 83fa 39       		.byte	0x39
 21592 83fb 3F       		.byte	0x3f
 21593 83fc ED800000 		.long	0x80ed
 21594 8400 17       		.uleb128 0x17
 21595 8401 00000000 		.long	.LASF1121
 21596 8405 39       		.byte	0x39
 21597 8406 40       		.byte	0x40
GAS LISTING /tmp/ccmMnd7l.s 			page 681


 21598 8407 019A0000 		.long	0x9a01
 21599 840b 35       		.uleb128 0x35
 21600 840c 00000000 		.long	.LASF1101
 21601 8410 D8800000 		.long	0x80d8
 21602 8414 00       		.byte	0
 21603 8415 12       		.uleb128 0x12
 21604 8416 23       		.byte	0x23
 21605 8417 C9       		.byte	0xc9
 21606 8418 55A50000 		.long	0xa555
 21607 841c 12       		.uleb128 0x12
 21608 841d 23       		.byte	0x23
 21609 841e D9       		.byte	0xd9
 21610 841f D4A70000 		.long	0xa7d4
 21611 8423 12       		.uleb128 0x12
 21612 8424 23       		.byte	0x23
 21613 8425 E4       		.byte	0xe4
 21614 8426 EFA70000 		.long	0xa7ef
 21615 842a 12       		.uleb128 0x12
 21616 842b 23       		.byte	0x23
 21617 842c E5       		.byte	0xe5
 21618 842d 05A80000 		.long	0xa805
 21619 8431 12       		.uleb128 0x12
 21620 8432 23       		.byte	0x23
 21621 8433 E6       		.byte	0xe6
 21622 8434 24A80000 		.long	0xa824
 21623 8438 12       		.uleb128 0x12
 21624 8439 23       		.byte	0x23
 21625 843a E8       		.byte	0xe8
 21626 843b 43A80000 		.long	0xa843
 21627 843f 12       		.uleb128 0x12
 21628 8440 23       		.byte	0x23
 21629 8441 E9       		.byte	0xe9
 21630 8442 5DA80000 		.long	0xa85d
 21631 8446 1D       		.uleb128 0x1d
 21632 8447 64697600 		.string	"div"
 21633 844b 23       		.byte	0x23
 21634 844c D6       		.byte	0xd6
 21635 844d 00000000 		.long	.LASF1122
 21636 8451 55A50000 		.long	0xa555
 21637 8455 64840000 		.long	0x8464
 21638 8459 09       		.uleb128 0x9
 21639 845a 3B810000 		.long	0x813b
 21640 845e 09       		.uleb128 0x9
 21641 845f 3B810000 		.long	0x813b
 21642 8463 00       		.byte	0
 21643 8464 3B       		.uleb128 0x3b
 21644 8465 00000000 		.long	.LASF1123
 21645 8469 08       		.byte	0x8
 21646 846a 0B       		.byte	0xb
 21647 846b C502     		.value	0x2c5
 21648 846d 83860000 		.long	0x8683
 21649 8471 62       		.uleb128 0x62
 21650 8472 00000000 		.long	.LASF1124
 21651 8476 0B       		.byte	0xb
 21652 8477 C802     		.value	0x2c8
 21653 8479 289D0000 		.long	0x9d28
 21654 847d 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 682


 21655 847e 02       		.byte	0x2
 21656 847f 44       		.uleb128 0x44
 21657 8480 00000000 		.long	.LASF496
 21658 8484 0B       		.byte	0xb
 21659 8485 D002     		.value	0x2d0
 21660 8487 6B700000 		.long	0x706b
 21661 848b 01       		.byte	0x1
 21662 848c 44       		.uleb128 0x44
 21663 848d 00000000 		.long	.LASF58
 21664 8491 0B       		.byte	0xb
 21665 8492 D102     		.value	0x2d1
 21666 8494 81700000 		.long	0x7081
 21667 8498 01       		.byte	0x1
 21668 8499 44       		.uleb128 0x44
 21669 849a 00000000 		.long	.LASF489
 21670 849e 0B       		.byte	0xb
 21671 849f D202     		.value	0x2d2
 21672 84a1 76700000 		.long	0x7076
 21673 84a5 01       		.byte	0x1
 21674 84a6 30       		.uleb128 0x30
 21675 84a7 00000000 		.long	.LASF1125
 21676 84ab 0B       		.byte	0xb
 21677 84ac D402     		.value	0x2d4
 21678 84ae 01       		.byte	0x1
 21679 84af B7840000 		.long	0x84b7
 21680 84b3 BD840000 		.long	0x84bd
 21681 84b7 08       		.uleb128 0x8
 21682 84b8 22B30000 		.long	0xb322
 21683 84bc 00       		.byte	0
 21684 84bd 31       		.uleb128 0x31
 21685 84be 00000000 		.long	.LASF1125
 21686 84c2 0B       		.byte	0xb
 21687 84c3 D802     		.value	0x2d8
 21688 84c5 01       		.byte	0x1
 21689 84c6 CE840000 		.long	0x84ce
 21690 84ca D9840000 		.long	0x84d9
 21691 84ce 08       		.uleb128 0x8
 21692 84cf 22B30000 		.long	0xb322
 21693 84d3 09       		.uleb128 0x9
 21694 84d4 28B30000 		.long	0xb328
 21695 84d8 00       		.byte	0
 21696 84d9 32       		.uleb128 0x32
 21697 84da 00000000 		.long	.LASF843
 21698 84de 0B       		.byte	0xb
 21699 84df E502     		.value	0x2e5
 21700 84e1 00000000 		.long	.LASF1126
 21701 84e5 8C840000 		.long	0x848c
 21702 84e9 01       		.byte	0x1
 21703 84ea F2840000 		.long	0x84f2
 21704 84ee F8840000 		.long	0x84f8
 21705 84f2 08       		.uleb128 0x8
 21706 84f3 33B30000 		.long	0xb333
 21707 84f7 00       		.byte	0
 21708 84f8 32       		.uleb128 0x32
 21709 84f9 00000000 		.long	.LASF845
 21710 84fd 0B       		.byte	0xb
 21711 84fe E902     		.value	0x2e9
GAS LISTING /tmp/ccmMnd7l.s 			page 683


 21712 8500 00000000 		.long	.LASF1127
 21713 8504 99840000 		.long	0x8499
 21714 8508 01       		.byte	0x1
 21715 8509 11850000 		.long	0x8511
 21716 850d 17850000 		.long	0x8517
 21717 8511 08       		.uleb128 0x8
 21718 8512 33B30000 		.long	0xb333
 21719 8516 00       		.byte	0
 21720 8517 32       		.uleb128 0x32
 21721 8518 00000000 		.long	.LASF1128
 21722 851c 0B       		.byte	0xb
 21723 851d ED02     		.value	0x2ed
 21724 851f 00000000 		.long	.LASF1129
 21725 8523 39B30000 		.long	0xb339
 21726 8527 01       		.byte	0x1
 21727 8528 30850000 		.long	0x8530
 21728 852c 36850000 		.long	0x8536
 21729 8530 08       		.uleb128 0x8
 21730 8531 22B30000 		.long	0xb322
 21731 8535 00       		.byte	0
 21732 8536 32       		.uleb128 0x32
 21733 8537 00000000 		.long	.LASF1128
 21734 853b 0B       		.byte	0xb
 21735 853c F402     		.value	0x2f4
 21736 853e 00000000 		.long	.LASF1130
 21737 8542 64840000 		.long	0x8464
 21738 8546 01       		.byte	0x1
 21739 8547 4F850000 		.long	0x854f
 21740 854b 5A850000 		.long	0x855a
 21741 854f 08       		.uleb128 0x8
 21742 8550 22B30000 		.long	0xb322
 21743 8554 09       		.uleb128 0x9
 21744 8555 D8800000 		.long	0x80d8
 21745 8559 00       		.byte	0
 21746 855a 32       		.uleb128 0x32
 21747 855b 00000000 		.long	.LASF1131
 21748 855f 0B       		.byte	0xb
 21749 8560 F902     		.value	0x2f9
 21750 8562 00000000 		.long	.LASF1132
 21751 8566 39B30000 		.long	0xb339
 21752 856a 01       		.byte	0x1
 21753 856b 73850000 		.long	0x8573
 21754 856f 79850000 		.long	0x8579
 21755 8573 08       		.uleb128 0x8
 21756 8574 22B30000 		.long	0xb322
 21757 8578 00       		.byte	0
 21758 8579 32       		.uleb128 0x32
 21759 857a 00000000 		.long	.LASF1131
 21760 857e 0B       		.byte	0xb
 21761 857f 0003     		.value	0x300
 21762 8581 00000000 		.long	.LASF1133
 21763 8585 64840000 		.long	0x8464
 21764 8589 01       		.byte	0x1
 21765 858a 92850000 		.long	0x8592
 21766 858e 9D850000 		.long	0x859d
 21767 8592 08       		.uleb128 0x8
 21768 8593 22B30000 		.long	0xb322
GAS LISTING /tmp/ccmMnd7l.s 			page 684


 21769 8597 09       		.uleb128 0x9
 21770 8598 D8800000 		.long	0x80d8
 21771 859c 00       		.byte	0
 21772 859d 32       		.uleb128 0x32
 21773 859e 00000000 		.long	.LASF186
 21774 85a2 0B       		.byte	0xb
 21775 85a3 0503     		.value	0x305
 21776 85a5 00000000 		.long	.LASF1134
 21777 85a9 8C840000 		.long	0x848c
 21778 85ad 01       		.byte	0x1
 21779 85ae B6850000 		.long	0x85b6
 21780 85b2 C1850000 		.long	0x85c1
 21781 85b6 08       		.uleb128 0x8
 21782 85b7 33B30000 		.long	0xb333
 21783 85bb 09       		.uleb128 0x9
 21784 85bc 7F840000 		.long	0x847f
 21785 85c0 00       		.byte	0
 21786 85c1 32       		.uleb128 0x32
 21787 85c2 00000000 		.long	.LASF197
 21788 85c6 0B       		.byte	0xb
 21789 85c7 0903     		.value	0x309
 21790 85c9 00000000 		.long	.LASF1135
 21791 85cd 39B30000 		.long	0xb339
 21792 85d1 01       		.byte	0x1
 21793 85d2 DA850000 		.long	0x85da
 21794 85d6 E5850000 		.long	0x85e5
 21795 85da 08       		.uleb128 0x8
 21796 85db 22B30000 		.long	0xb322
 21797 85df 09       		.uleb128 0x9
 21798 85e0 7F840000 		.long	0x847f
 21799 85e4 00       		.byte	0
 21800 85e5 32       		.uleb128 0x32
 21801 85e6 00000000 		.long	.LASF1136
 21802 85ea 0B       		.byte	0xb
 21803 85eb 0D03     		.value	0x30d
 21804 85ed 00000000 		.long	.LASF1137
 21805 85f1 64840000 		.long	0x8464
 21806 85f5 01       		.byte	0x1
 21807 85f6 FE850000 		.long	0x85fe
 21808 85fa 09860000 		.long	0x8609
 21809 85fe 08       		.uleb128 0x8
 21810 85ff 33B30000 		.long	0xb333
 21811 8603 09       		.uleb128 0x9
 21812 8604 7F840000 		.long	0x847f
 21813 8608 00       		.byte	0
 21814 8609 32       		.uleb128 0x32
 21815 860a 00000000 		.long	.LASF1138
 21816 860e 0B       		.byte	0xb
 21817 860f 1103     		.value	0x311
 21818 8611 00000000 		.long	.LASF1139
 21819 8615 39B30000 		.long	0xb339
 21820 8619 01       		.byte	0x1
 21821 861a 22860000 		.long	0x8622
 21822 861e 2D860000 		.long	0x862d
 21823 8622 08       		.uleb128 0x8
 21824 8623 22B30000 		.long	0xb322
 21825 8627 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 685


 21826 8628 7F840000 		.long	0x847f
 21827 862c 00       		.byte	0
 21828 862d 32       		.uleb128 0x32
 21829 862e 00000000 		.long	.LASF1140
 21830 8632 0B       		.byte	0xb
 21831 8633 1503     		.value	0x315
 21832 8635 00000000 		.long	.LASF1141
 21833 8639 64840000 		.long	0x8464
 21834 863d 01       		.byte	0x1
 21835 863e 46860000 		.long	0x8646
 21836 8642 51860000 		.long	0x8651
 21837 8646 08       		.uleb128 0x8
 21838 8647 33B30000 		.long	0xb333
 21839 864b 09       		.uleb128 0x9
 21840 864c 7F840000 		.long	0x847f
 21841 8650 00       		.byte	0
 21842 8651 32       		.uleb128 0x32
 21843 8652 00000000 		.long	.LASF1142
 21844 8656 0B       		.byte	0xb
 21845 8657 1903     		.value	0x319
 21846 8659 00000000 		.long	.LASF1143
 21847 865d 28B30000 		.long	0xb328
 21848 8661 01       		.byte	0x1
 21849 8662 6A860000 		.long	0x866a
 21850 8666 70860000 		.long	0x8670
 21851 866a 08       		.uleb128 0x8
 21852 866b 33B30000 		.long	0xb333
 21853 866f 00       		.byte	0
 21854 8670 35       		.uleb128 0x35
 21855 8671 00000000 		.long	.LASF743
 21856 8675 289D0000 		.long	0x9d28
 21857 8679 35       		.uleb128 0x35
 21858 867a 00000000 		.long	.LASF1144
 21859 867e A8090000 		.long	0x9a8
 21860 8682 00       		.byte	0
 21861 8683 3B       		.uleb128 0x3b
 21862 8684 00000000 		.long	.LASF1145
 21863 8688 08       		.byte	0x8
 21864 8689 0B       		.byte	0xb
 21865 868a C502     		.value	0x2c5
 21866 868c A2880000 		.long	0x88a2
 21867 8690 62       		.uleb128 0x62
 21868 8691 00000000 		.long	.LASF1124
 21869 8695 0B       		.byte	0xb
 21870 8696 C802     		.value	0x2c8
 21871 8698 069A0000 		.long	0x9a06
 21872 869c 00       		.byte	0
 21873 869d 02       		.byte	0x2
 21874 869e 44       		.uleb128 0x44
 21875 869f 00000000 		.long	.LASF496
 21876 86a3 0B       		.byte	0xb
 21877 86a4 D002     		.value	0x2d0
 21878 86a6 E8700000 		.long	0x70e8
 21879 86aa 01       		.byte	0x1
 21880 86ab 44       		.uleb128 0x44
 21881 86ac 00000000 		.long	.LASF58
 21882 86b0 0B       		.byte	0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 686


 21883 86b1 D102     		.value	0x2d1
 21884 86b3 FE700000 		.long	0x70fe
 21885 86b7 01       		.byte	0x1
 21886 86b8 44       		.uleb128 0x44
 21887 86b9 00000000 		.long	.LASF489
 21888 86bd 0B       		.byte	0xb
 21889 86be D202     		.value	0x2d2
 21890 86c0 F3700000 		.long	0x70f3
 21891 86c4 01       		.byte	0x1
 21892 86c5 30       		.uleb128 0x30
 21893 86c6 00000000 		.long	.LASF1125
 21894 86ca 0B       		.byte	0xb
 21895 86cb D402     		.value	0x2d4
 21896 86cd 01       		.byte	0x1
 21897 86ce D6860000 		.long	0x86d6
 21898 86d2 DC860000 		.long	0x86dc
 21899 86d6 08       		.uleb128 0x8
 21900 86d7 0AB30000 		.long	0xb30a
 21901 86db 00       		.byte	0
 21902 86dc 31       		.uleb128 0x31
 21903 86dd 00000000 		.long	.LASF1125
 21904 86e1 0B       		.byte	0xb
 21905 86e2 D802     		.value	0x2d8
 21906 86e4 01       		.byte	0x1
 21907 86e5 ED860000 		.long	0x86ed
 21908 86e9 F8860000 		.long	0x86f8
 21909 86ed 08       		.uleb128 0x8
 21910 86ee 0AB30000 		.long	0xb30a
 21911 86f2 09       		.uleb128 0x9
 21912 86f3 10B30000 		.long	0xb310
 21913 86f7 00       		.byte	0
 21914 86f8 32       		.uleb128 0x32
 21915 86f9 00000000 		.long	.LASF843
 21916 86fd 0B       		.byte	0xb
 21917 86fe E502     		.value	0x2e5
 21918 8700 00000000 		.long	.LASF1146
 21919 8704 AB860000 		.long	0x86ab
 21920 8708 01       		.byte	0x1
 21921 8709 11870000 		.long	0x8711
 21922 870d 17870000 		.long	0x8717
 21923 8711 08       		.uleb128 0x8
 21924 8712 16B30000 		.long	0xb316
 21925 8716 00       		.byte	0
 21926 8717 32       		.uleb128 0x32
 21927 8718 00000000 		.long	.LASF845
 21928 871c 0B       		.byte	0xb
 21929 871d E902     		.value	0x2e9
 21930 871f 00000000 		.long	.LASF1147
 21931 8723 B8860000 		.long	0x86b8
 21932 8727 01       		.byte	0x1
 21933 8728 30870000 		.long	0x8730
 21934 872c 36870000 		.long	0x8736
 21935 8730 08       		.uleb128 0x8
 21936 8731 16B30000 		.long	0xb316
 21937 8735 00       		.byte	0
 21938 8736 32       		.uleb128 0x32
 21939 8737 00000000 		.long	.LASF1128
GAS LISTING /tmp/ccmMnd7l.s 			page 687


 21940 873b 0B       		.byte	0xb
 21941 873c ED02     		.value	0x2ed
 21942 873e 00000000 		.long	.LASF1148
 21943 8742 1CB30000 		.long	0xb31c
 21944 8746 01       		.byte	0x1
 21945 8747 4F870000 		.long	0x874f
 21946 874b 55870000 		.long	0x8755
 21947 874f 08       		.uleb128 0x8
 21948 8750 0AB30000 		.long	0xb30a
 21949 8754 00       		.byte	0
 21950 8755 32       		.uleb128 0x32
 21951 8756 00000000 		.long	.LASF1128
 21952 875a 0B       		.byte	0xb
 21953 875b F402     		.value	0x2f4
 21954 875d 00000000 		.long	.LASF1149
 21955 8761 83860000 		.long	0x8683
 21956 8765 01       		.byte	0x1
 21957 8766 6E870000 		.long	0x876e
 21958 876a 79870000 		.long	0x8779
 21959 876e 08       		.uleb128 0x8
 21960 876f 0AB30000 		.long	0xb30a
 21961 8773 09       		.uleb128 0x9
 21962 8774 D8800000 		.long	0x80d8
 21963 8778 00       		.byte	0
 21964 8779 32       		.uleb128 0x32
 21965 877a 00000000 		.long	.LASF1131
 21966 877e 0B       		.byte	0xb
 21967 877f F902     		.value	0x2f9
 21968 8781 00000000 		.long	.LASF1150
 21969 8785 1CB30000 		.long	0xb31c
 21970 8789 01       		.byte	0x1
 21971 878a 92870000 		.long	0x8792
 21972 878e 98870000 		.long	0x8798
 21973 8792 08       		.uleb128 0x8
 21974 8793 0AB30000 		.long	0xb30a
 21975 8797 00       		.byte	0
 21976 8798 32       		.uleb128 0x32
 21977 8799 00000000 		.long	.LASF1131
 21978 879d 0B       		.byte	0xb
 21979 879e 0003     		.value	0x300
 21980 87a0 00000000 		.long	.LASF1151
 21981 87a4 83860000 		.long	0x8683
 21982 87a8 01       		.byte	0x1
 21983 87a9 B1870000 		.long	0x87b1
 21984 87ad BC870000 		.long	0x87bc
 21985 87b1 08       		.uleb128 0x8
 21986 87b2 0AB30000 		.long	0xb30a
 21987 87b6 09       		.uleb128 0x9
 21988 87b7 D8800000 		.long	0x80d8
 21989 87bb 00       		.byte	0
 21990 87bc 32       		.uleb128 0x32
 21991 87bd 00000000 		.long	.LASF186
 21992 87c1 0B       		.byte	0xb
 21993 87c2 0503     		.value	0x305
 21994 87c4 00000000 		.long	.LASF1152
 21995 87c8 AB860000 		.long	0x86ab
 21996 87cc 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 688


 21997 87cd D5870000 		.long	0x87d5
 21998 87d1 E0870000 		.long	0x87e0
 21999 87d5 08       		.uleb128 0x8
 22000 87d6 16B30000 		.long	0xb316
 22001 87da 09       		.uleb128 0x9
 22002 87db 9E860000 		.long	0x869e
 22003 87df 00       		.byte	0
 22004 87e0 32       		.uleb128 0x32
 22005 87e1 00000000 		.long	.LASF197
 22006 87e5 0B       		.byte	0xb
 22007 87e6 0903     		.value	0x309
 22008 87e8 00000000 		.long	.LASF1153
 22009 87ec 1CB30000 		.long	0xb31c
 22010 87f0 01       		.byte	0x1
 22011 87f1 F9870000 		.long	0x87f9
 22012 87f5 04880000 		.long	0x8804
 22013 87f9 08       		.uleb128 0x8
 22014 87fa 0AB30000 		.long	0xb30a
 22015 87fe 09       		.uleb128 0x9
 22016 87ff 9E860000 		.long	0x869e
 22017 8803 00       		.byte	0
 22018 8804 32       		.uleb128 0x32
 22019 8805 00000000 		.long	.LASF1136
 22020 8809 0B       		.byte	0xb
 22021 880a 0D03     		.value	0x30d
 22022 880c 00000000 		.long	.LASF1154
 22023 8810 83860000 		.long	0x8683
 22024 8814 01       		.byte	0x1
 22025 8815 1D880000 		.long	0x881d
 22026 8819 28880000 		.long	0x8828
 22027 881d 08       		.uleb128 0x8
 22028 881e 16B30000 		.long	0xb316
 22029 8822 09       		.uleb128 0x9
 22030 8823 9E860000 		.long	0x869e
 22031 8827 00       		.byte	0
 22032 8828 32       		.uleb128 0x32
 22033 8829 00000000 		.long	.LASF1138
 22034 882d 0B       		.byte	0xb
 22035 882e 1103     		.value	0x311
 22036 8830 00000000 		.long	.LASF1155
 22037 8834 1CB30000 		.long	0xb31c
 22038 8838 01       		.byte	0x1
 22039 8839 41880000 		.long	0x8841
 22040 883d 4C880000 		.long	0x884c
 22041 8841 08       		.uleb128 0x8
 22042 8842 0AB30000 		.long	0xb30a
 22043 8846 09       		.uleb128 0x9
 22044 8847 9E860000 		.long	0x869e
 22045 884b 00       		.byte	0
 22046 884c 32       		.uleb128 0x32
 22047 884d 00000000 		.long	.LASF1140
 22048 8851 0B       		.byte	0xb
 22049 8852 1503     		.value	0x315
 22050 8854 00000000 		.long	.LASF1156
 22051 8858 83860000 		.long	0x8683
 22052 885c 01       		.byte	0x1
 22053 885d 65880000 		.long	0x8865
GAS LISTING /tmp/ccmMnd7l.s 			page 689


 22054 8861 70880000 		.long	0x8870
 22055 8865 08       		.uleb128 0x8
 22056 8866 16B30000 		.long	0xb316
 22057 886a 09       		.uleb128 0x9
 22058 886b 9E860000 		.long	0x869e
 22059 886f 00       		.byte	0
 22060 8870 32       		.uleb128 0x32
 22061 8871 00000000 		.long	.LASF1142
 22062 8875 0B       		.byte	0xb
 22063 8876 1903     		.value	0x319
 22064 8878 00000000 		.long	.LASF1157
 22065 887c 10B30000 		.long	0xb310
 22066 8880 01       		.byte	0x1
 22067 8881 89880000 		.long	0x8889
 22068 8885 8F880000 		.long	0x888f
 22069 8889 08       		.uleb128 0x8
 22070 888a 16B30000 		.long	0xb316
 22071 888e 00       		.byte	0
 22072 888f 35       		.uleb128 0x35
 22073 8890 00000000 		.long	.LASF743
 22074 8894 069A0000 		.long	0x9a06
 22075 8898 35       		.uleb128 0x35
 22076 8899 00000000 		.long	.LASF1144
 22077 889d A8090000 		.long	0x9a8
 22078 88a1 00       		.byte	0
 22079 88a2 16       		.uleb128 0x16
 22080 88a3 00000000 		.long	.LASF1158
 22081 88a7 01       		.byte	0x1
 22082 88a8 39       		.byte	0x39
 22083 88a9 64       		.byte	0x64
 22084 88aa E4880000 		.long	0x88e4
 22085 88ae 17       		.uleb128 0x17
 22086 88af 00000000 		.long	.LASF1159
 22087 88b3 39       		.byte	0x39
 22088 88b4 67       		.byte	0x67
 22089 88b5 019A0000 		.long	0x9a01
 22090 88b9 17       		.uleb128 0x17
 22091 88ba 00000000 		.long	.LASF1120
 22092 88be 39       		.byte	0x39
 22093 88bf 6A       		.byte	0x6a
 22094 88c0 ED800000 		.long	0x80ed
 22095 88c4 17       		.uleb128 0x17
 22096 88c5 00000000 		.long	.LASF1160
 22097 88c9 39       		.byte	0x39
 22098 88ca 6B       		.byte	0x6b
 22099 88cb 019A0000 		.long	0x9a01
 22100 88cf 17       		.uleb128 0x17
 22101 88d0 00000000 		.long	.LASF1161
 22102 88d4 39       		.byte	0x39
 22103 88d5 6C       		.byte	0x6c
 22104 88d6 019A0000 		.long	0x9a01
 22105 88da 35       		.uleb128 0x35
 22106 88db 00000000 		.long	.LASF1101
 22107 88df 30000000 		.long	0x30
 22108 88e3 00       		.byte	0
 22109 88e4 16       		.uleb128 0x16
 22110 88e5 00000000 		.long	.LASF1162
GAS LISTING /tmp/ccmMnd7l.s 			page 690


 22111 88e9 01       		.byte	0x1
 22112 88ea 39       		.byte	0x39
 22113 88eb 64       		.byte	0x64
 22114 88ec 26890000 		.long	0x8926
 22115 88f0 17       		.uleb128 0x17
 22116 88f1 00000000 		.long	.LASF1159
 22117 88f5 39       		.byte	0x39
 22118 88f6 67       		.byte	0x67
 22119 88f7 019A0000 		.long	0x9a01
 22120 88fb 17       		.uleb128 0x17
 22121 88fc 00000000 		.long	.LASF1120
 22122 8900 39       		.byte	0x39
 22123 8901 6A       		.byte	0x6a
 22124 8902 ED800000 		.long	0x80ed
 22125 8906 17       		.uleb128 0x17
 22126 8907 00000000 		.long	.LASF1160
 22127 890b 39       		.byte	0x39
 22128 890c 6B       		.byte	0x6b
 22129 890d 019A0000 		.long	0x9a01
 22130 8911 17       		.uleb128 0x17
 22131 8912 00000000 		.long	.LASF1161
 22132 8916 39       		.byte	0x39
 22133 8917 6C       		.byte	0x6c
 22134 8918 019A0000 		.long	0x9a01
 22135 891c 35       		.uleb128 0x35
 22136 891d 00000000 		.long	.LASF1101
 22137 8921 29000000 		.long	0x29
 22138 8925 00       		.byte	0
 22139 8926 16       		.uleb128 0x16
 22140 8927 00000000 		.long	.LASF1163
 22141 892b 01       		.byte	0x1
 22142 892c 39       		.byte	0x39
 22143 892d 64       		.byte	0x64
 22144 892e 68890000 		.long	0x8968
 22145 8932 17       		.uleb128 0x17
 22146 8933 00000000 		.long	.LASF1159
 22147 8937 39       		.byte	0x39
 22148 8938 67       		.byte	0x67
 22149 8939 019A0000 		.long	0x9a01
 22150 893d 17       		.uleb128 0x17
 22151 893e 00000000 		.long	.LASF1120
 22152 8942 39       		.byte	0x39
 22153 8943 6A       		.byte	0x6a
 22154 8944 ED800000 		.long	0x80ed
 22155 8948 17       		.uleb128 0x17
 22156 8949 00000000 		.long	.LASF1160
 22157 894d 39       		.byte	0x39
 22158 894e 6B       		.byte	0x6b
 22159 894f 019A0000 		.long	0x9a01
 22160 8953 17       		.uleb128 0x17
 22161 8954 00000000 		.long	.LASF1161
 22162 8958 39       		.byte	0x39
 22163 8959 6C       		.byte	0x6c
 22164 895a 019A0000 		.long	0x9a01
 22165 895e 35       		.uleb128 0x35
 22166 895f 00000000 		.long	.LASF1101
 22167 8963 77970000 		.long	0x9777
GAS LISTING /tmp/ccmMnd7l.s 			page 691


 22168 8967 00       		.byte	0
 22169 8968 16       		.uleb128 0x16
 22170 8969 00000000 		.long	.LASF1164
 22171 896d 01       		.byte	0x1
 22172 896e 39       		.byte	0x39
 22173 896f 37       		.byte	0x37
 22174 8970 AA890000 		.long	0x89aa
 22175 8974 17       		.uleb128 0x17
 22176 8975 00000000 		.long	.LASF1118
 22177 8979 39       		.byte	0x39
 22178 897a 3A       		.byte	0x3a
 22179 897b FE800000 		.long	0x80fe
 22180 897f 17       		.uleb128 0x17
 22181 8980 00000000 		.long	.LASF1119
 22182 8984 39       		.byte	0x39
 22183 8985 3B       		.byte	0x3b
 22184 8986 FE800000 		.long	0x80fe
 22185 898a 17       		.uleb128 0x17
 22186 898b 00000000 		.long	.LASF1120
 22187 898f 39       		.byte	0x39
 22188 8990 3F       		.byte	0x3f
 22189 8991 ED800000 		.long	0x80ed
 22190 8995 17       		.uleb128 0x17
 22191 8996 00000000 		.long	.LASF1121
 22192 899a 39       		.byte	0x39
 22193 899b 40       		.byte	0x40
 22194 899c 019A0000 		.long	0x9a01
 22195 89a0 35       		.uleb128 0x35
 22196 89a1 00000000 		.long	.LASF1101
 22197 89a5 03810000 		.long	0x8103
 22198 89a9 00       		.byte	0
 22199 89aa 16       		.uleb128 0x16
 22200 89ab 00000000 		.long	.LASF1165
 22201 89af 01       		.byte	0x1
 22202 89b0 39       		.byte	0x39
 22203 89b1 37       		.byte	0x37
 22204 89b2 EC890000 		.long	0x89ec
 22205 89b6 17       		.uleb128 0x17
 22206 89b7 00000000 		.long	.LASF1118
 22207 89bb 39       		.byte	0x39
 22208 89bc 3A       		.byte	0x3a
 22209 89bd 0C9A0000 		.long	0x9a0c
 22210 89c1 17       		.uleb128 0x17
 22211 89c2 00000000 		.long	.LASF1119
 22212 89c6 39       		.byte	0x39
 22213 89c7 3B       		.byte	0x3b
 22214 89c8 0C9A0000 		.long	0x9a0c
 22215 89cc 17       		.uleb128 0x17
 22216 89cd 00000000 		.long	.LASF1120
 22217 89d1 39       		.byte	0x39
 22218 89d2 3F       		.byte	0x3f
 22219 89d3 ED800000 		.long	0x80ed
 22220 89d7 17       		.uleb128 0x17
 22221 89d8 00000000 		.long	.LASF1121
 22222 89dc 39       		.byte	0x39
 22223 89dd 40       		.byte	0x40
 22224 89de 019A0000 		.long	0x9a01
GAS LISTING /tmp/ccmMnd7l.s 			page 692


 22225 89e2 35       		.uleb128 0x35
 22226 89e3 00000000 		.long	.LASF1101
 22227 89e7 E4990000 		.long	0x99e4
 22228 89eb 00       		.byte	0
 22229 89ec 16       		.uleb128 0x16
 22230 89ed 00000000 		.long	.LASF1166
 22231 89f1 01       		.byte	0x1
 22232 89f2 39       		.byte	0x39
 22233 89f3 37       		.byte	0x37
 22234 89f4 2E8A0000 		.long	0x8a2e
 22235 89f8 17       		.uleb128 0x17
 22236 89f9 00000000 		.long	.LASF1118
 22237 89fd 39       		.byte	0x39
 22238 89fe 3A       		.byte	0x3a
 22239 89ff B0AC0000 		.long	0xacb0
 22240 8a03 17       		.uleb128 0x17
 22241 8a04 00000000 		.long	.LASF1119
 22242 8a08 39       		.byte	0x39
 22243 8a09 3B       		.byte	0x3b
 22244 8a0a B0AC0000 		.long	0xacb0
 22245 8a0e 17       		.uleb128 0x17
 22246 8a0f 00000000 		.long	.LASF1120
 22247 8a13 39       		.byte	0x39
 22248 8a14 3F       		.byte	0x3f
 22249 8a15 ED800000 		.long	0x80ed
 22250 8a19 17       		.uleb128 0x17
 22251 8a1a 00000000 		.long	.LASF1121
 22252 8a1e 39       		.byte	0x39
 22253 8a1f 40       		.byte	0x40
 22254 8a20 019A0000 		.long	0x9a01
 22255 8a24 35       		.uleb128 0x35
 22256 8a25 00000000 		.long	.LASF1101
 22257 8a29 2D810000 		.long	0x812d
 22258 8a2d 00       		.byte	0
 22259 8a2e 16       		.uleb128 0x16
 22260 8a2f 00000000 		.long	.LASF1167
 22261 8a33 01       		.byte	0x1
 22262 8a34 39       		.byte	0x39
 22263 8a35 37       		.byte	0x37
 22264 8a36 708A0000 		.long	0x8a70
 22265 8a3a 17       		.uleb128 0x17
 22266 8a3b 00000000 		.long	.LASF1118
 22267 8a3f 39       		.byte	0x39
 22268 8a40 3A       		.byte	0x3a
 22269 8a41 B5AC0000 		.long	0xacb5
 22270 8a45 17       		.uleb128 0x17
 22271 8a46 00000000 		.long	.LASF1119
 22272 8a4a 39       		.byte	0x39
 22273 8a4b 3B       		.byte	0x3b
 22274 8a4c B5AC0000 		.long	0xacb5
 22275 8a50 17       		.uleb128 0x17
 22276 8a51 00000000 		.long	.LASF1120
 22277 8a55 39       		.byte	0x39
 22278 8a56 3F       		.byte	0x3f
 22279 8a57 ED800000 		.long	0x80ed
 22280 8a5b 17       		.uleb128 0x17
 22281 8a5c 00000000 		.long	.LASF1121
GAS LISTING /tmp/ccmMnd7l.s 			page 693


 22282 8a60 39       		.byte	0x39
 22283 8a61 40       		.byte	0x40
 22284 8a62 019A0000 		.long	0x9a01
 22285 8a66 35       		.uleb128 0x35
 22286 8a67 00000000 		.long	.LASF1101
 22287 8a6b 34810000 		.long	0x8134
 22288 8a6f 00       		.byte	0
 22289 8a70 16       		.uleb128 0x16
 22290 8a71 00000000 		.long	.LASF1168
 22291 8a75 01       		.byte	0x1
 22292 8a76 0E       		.byte	0xe
 22293 8a77 3A       		.byte	0x3a
 22294 8a78 B18B0000 		.long	0x8bb1
 22295 8a7c 13       		.uleb128 0x13
 22296 8a7d 00000000 		.long	.LASF57
 22297 8a81 0E       		.byte	0xe
 22298 8a82 3D       		.byte	0x3d
 22299 8a83 85060000 		.long	0x685
 22300 8a87 13       		.uleb128 0x13
 22301 8a88 00000000 		.long	.LASF489
 22302 8a8c 0E       		.byte	0xe
 22303 8a8d 3F       		.byte	0x3f
 22304 8a8e 01AD0000 		.long	0xad01
 22305 8a92 13       		.uleb128 0x13
 22306 8a93 00000000 		.long	.LASF1108
 22307 8a97 0E       		.byte	0xe
 22308 8a98 40       		.byte	0x40
 22309 8a99 07AD0000 		.long	0xad07
 22310 8a9d 13       		.uleb128 0x13
 22311 8a9e 00000000 		.long	.LASF58
 22312 8aa2 0E       		.byte	0xe
 22313 8aa3 41       		.byte	0x41
 22314 8aa4 12AD0000 		.long	0xad12
 22315 8aa8 13       		.uleb128 0x13
 22316 8aa9 00000000 		.long	.LASF59
 22317 8aad 0E       		.byte	0xe
 22318 8aae 42       		.byte	0x42
 22319 8aaf 18AD0000 		.long	0xad18
 22320 8ab3 37       		.uleb128 0x37
 22321 8ab4 00000000 		.long	.LASF1109
 22322 8ab8 0E       		.byte	0xe
 22323 8ab9 4F       		.byte	0x4f
 22324 8aba C28A0000 		.long	0x8ac2
 22325 8abe C88A0000 		.long	0x8ac8
 22326 8ac2 08       		.uleb128 0x8
 22327 8ac3 1EAD0000 		.long	0xad1e
 22328 8ac7 00       		.byte	0
 22329 8ac8 37       		.uleb128 0x37
 22330 8ac9 00000000 		.long	.LASF1109
 22331 8acd 0E       		.byte	0xe
 22332 8ace 51       		.byte	0x51
 22333 8acf D78A0000 		.long	0x8ad7
 22334 8ad3 E28A0000 		.long	0x8ae2
 22335 8ad7 08       		.uleb128 0x8
 22336 8ad8 1EAD0000 		.long	0xad1e
 22337 8adc 09       		.uleb128 0x9
 22338 8add 24AD0000 		.long	0xad24
GAS LISTING /tmp/ccmMnd7l.s 			page 694


 22339 8ae1 00       		.byte	0
 22340 8ae2 37       		.uleb128 0x37
 22341 8ae3 00000000 		.long	.LASF1110
 22342 8ae7 0E       		.byte	0xe
 22343 8ae8 56       		.byte	0x56
 22344 8ae9 F18A0000 		.long	0x8af1
 22345 8aed FC8A0000 		.long	0x8afc
 22346 8af1 08       		.uleb128 0x8
 22347 8af2 1EAD0000 		.long	0xad1e
 22348 8af6 08       		.uleb128 0x8
 22349 8af7 D8800000 		.long	0x80d8
 22350 8afb 00       		.byte	0
 22351 8afc 0B       		.uleb128 0xb
 22352 8afd 00000000 		.long	.LASF1111
 22353 8b01 0E       		.byte	0xe
 22354 8b02 59       		.byte	0x59
 22355 8b03 00000000 		.long	.LASF1169
 22356 8b07 878A0000 		.long	0x8a87
 22357 8b0b 138B0000 		.long	0x8b13
 22358 8b0f 1E8B0000 		.long	0x8b1e
 22359 8b13 08       		.uleb128 0x8
 22360 8b14 2AAD0000 		.long	0xad2a
 22361 8b18 09       		.uleb128 0x9
 22362 8b19 9D8A0000 		.long	0x8a9d
 22363 8b1d 00       		.byte	0
 22364 8b1e 0B       		.uleb128 0xb
 22365 8b1f 00000000 		.long	.LASF1111
 22366 8b23 0E       		.byte	0xe
 22367 8b24 5D       		.byte	0x5d
 22368 8b25 00000000 		.long	.LASF1170
 22369 8b29 928A0000 		.long	0x8a92
 22370 8b2d 358B0000 		.long	0x8b35
 22371 8b31 408B0000 		.long	0x8b40
 22372 8b35 08       		.uleb128 0x8
 22373 8b36 2AAD0000 		.long	0xad2a
 22374 8b3a 09       		.uleb128 0x9
 22375 8b3b A88A0000 		.long	0x8aa8
 22376 8b3f 00       		.byte	0
 22377 8b40 0B       		.uleb128 0xb
 22378 8b41 00000000 		.long	.LASF535
 22379 8b45 0E       		.byte	0xe
 22380 8b46 63       		.byte	0x63
 22381 8b47 00000000 		.long	.LASF1171
 22382 8b4b 878A0000 		.long	0x8a87
 22383 8b4f 578B0000 		.long	0x8b57
 22384 8b53 678B0000 		.long	0x8b67
 22385 8b57 08       		.uleb128 0x8
 22386 8b58 1EAD0000 		.long	0xad1e
 22387 8b5c 09       		.uleb128 0x9
 22388 8b5d 7C8A0000 		.long	0x8a7c
 22389 8b61 09       		.uleb128 0x9
 22390 8b62 01A30000 		.long	0xa301
 22391 8b66 00       		.byte	0
 22392 8b67 0A       		.uleb128 0xa
 22393 8b68 00000000 		.long	.LASF538
 22394 8b6c 0E       		.byte	0xe
 22395 8b6d 6D       		.byte	0x6d
GAS LISTING /tmp/ccmMnd7l.s 			page 695


 22396 8b6e 00000000 		.long	.LASF1172
 22397 8b72 7A8B0000 		.long	0x8b7a
 22398 8b76 8A8B0000 		.long	0x8b8a
 22399 8b7a 08       		.uleb128 0x8
 22400 8b7b 1EAD0000 		.long	0xad1e
 22401 8b7f 09       		.uleb128 0x9
 22402 8b80 878A0000 		.long	0x8a87
 22403 8b84 09       		.uleb128 0x9
 22404 8b85 7C8A0000 		.long	0x8a7c
 22405 8b89 00       		.byte	0
 22406 8b8a 0B       		.uleb128 0xb
 22407 8b8b 00000000 		.long	.LASF171
 22408 8b8f 0E       		.byte	0xe
 22409 8b90 71       		.byte	0x71
 22410 8b91 00000000 		.long	.LASF1173
 22411 8b95 7C8A0000 		.long	0x8a7c
 22412 8b99 A18B0000 		.long	0x8ba1
 22413 8b9d A78B0000 		.long	0x8ba7
 22414 8ba1 08       		.uleb128 0x8
 22415 8ba2 2AAD0000 		.long	0xad2a
 22416 8ba6 00       		.byte	0
 22417 8ba7 18       		.uleb128 0x18
 22418 8ba8 5F547000 		.string	"_Tp"
 22419 8bac 29000000 		.long	0x29
 22420 8bb0 00       		.byte	0
 22421 8bb1 11       		.uleb128 0x11
 22422 8bb2 708A0000 		.long	0x8a70
 22423 8bb6 16       		.uleb128 0x16
 22424 8bb7 00000000 		.long	.LASF1174
 22425 8bbb 01       		.byte	0x1
 22426 8bbc 3A       		.byte	0x3a
 22427 8bbd 5F       		.byte	0x5f
 22428 8bbe C68C0000 		.long	0x8cc6
 22429 8bc2 12       		.uleb128 0x12
 22430 8bc3 3A       		.byte	0x3a
 22431 8bc4 5F       		.byte	0x5f
 22432 8bc5 CF330000 		.long	0x33cf
 22433 8bc9 12       		.uleb128 0x12
 22434 8bca 3A       		.byte	0x3a
 22435 8bcb 5F       		.byte	0x5f
 22436 8bcc F3330000 		.long	0x33f3
 22437 8bd0 12       		.uleb128 0x12
 22438 8bd1 3A       		.byte	0x3a
 22439 8bd2 5F       		.byte	0x5f
 22440 8bd3 13340000 		.long	0x3413
 22441 8bd7 25       		.uleb128 0x25
 22442 8bd8 8E320000 		.long	0x328e
 22443 8bdc 00       		.byte	0
 22444 8bdd 13       		.uleb128 0x13
 22445 8bde 00000000 		.long	.LASF19
 22446 8be2 3A       		.byte	0x3a
 22447 8be3 67       		.byte	0x67
 22448 8be4 9A320000 		.long	0x329a
 22449 8be8 13       		.uleb128 0x13
 22450 8be9 00000000 		.long	.LASF489
 22451 8bed 3A       		.byte	0x3a
 22452 8bee 68       		.byte	0x68
GAS LISTING /tmp/ccmMnd7l.s 			page 696


 22453 8bef B1320000 		.long	0x32b1
 22454 8bf3 13       		.uleb128 0x13
 22455 8bf4 00000000 		.long	.LASF58
 22456 8bf8 3A       		.byte	0x3a
 22457 8bf9 6D       		.byte	0x6d
 22458 8bfa 4EAD0000 		.long	0xad4e
 22459 8bfe 13       		.uleb128 0x13
 22460 8bff 00000000 		.long	.LASF59
 22461 8c03 3A       		.byte	0x3a
 22462 8c04 6E       		.byte	0x6e
 22463 8c05 54AD0000 		.long	0xad54
 22464 8c09 11       		.uleb128 0x11
 22465 8c0a DD8B0000 		.long	0x8bdd
 22466 8c0e 4E       		.uleb128 0x4e
 22467 8c0f 00000000 		.long	.LASF1175
 22468 8c13 3A       		.byte	0x3a
 22469 8c14 8B       		.byte	0x8b
 22470 8c15 00000000 		.long	.LASF1176
 22471 8c19 8D300000 		.long	0x308d
 22472 8c1d 278C0000 		.long	0x8c27
 22473 8c21 09       		.uleb128 0x9
 22474 8c22 36AD0000 		.long	0xad36
 22475 8c26 00       		.byte	0
 22476 8c27 1C       		.uleb128 0x1c
 22477 8c28 00000000 		.long	.LASF1177
 22478 8c2c 3A       		.byte	0x3a
 22479 8c2d 8E       		.byte	0x8e
 22480 8c2e 00000000 		.long	.LASF1178
 22481 8c32 418C0000 		.long	0x8c41
 22482 8c36 09       		.uleb128 0x9
 22483 8c37 48AD0000 		.long	0xad48
 22484 8c3b 09       		.uleb128 0x9
 22485 8c3c 48AD0000 		.long	0xad48
 22486 8c40 00       		.byte	0
 22487 8c41 2A       		.uleb128 0x2a
 22488 8c42 00000000 		.long	.LASF1179
 22489 8c46 3A       		.byte	0x3a
 22490 8c47 91       		.byte	0x91
 22491 8c48 00000000 		.long	.LASF1181
 22492 8c4c E0800000 		.long	0x80e0
 22493 8c50 2A       		.uleb128 0x2a
 22494 8c51 00000000 		.long	.LASF1182
 22495 8c55 3A       		.byte	0x3a
 22496 8c56 94       		.byte	0x94
 22497 8c57 00000000 		.long	.LASF1183
 22498 8c5b E0800000 		.long	0x80e0
 22499 8c5f 2A       		.uleb128 0x2a
 22500 8c60 00000000 		.long	.LASF1184
 22501 8c64 3A       		.byte	0x3a
 22502 8c65 97       		.byte	0x97
 22503 8c66 00000000 		.long	.LASF1185
 22504 8c6a E0800000 		.long	0x80e0
 22505 8c6e 2A       		.uleb128 0x2a
 22506 8c6f 00000000 		.long	.LASF1186
 22507 8c73 3A       		.byte	0x3a
 22508 8c74 9A       		.byte	0x9a
 22509 8c75 00000000 		.long	.LASF1187
GAS LISTING /tmp/ccmMnd7l.s 			page 697


 22510 8c79 E0800000 		.long	0x80e0
 22511 8c7d 2A       		.uleb128 0x2a
 22512 8c7e 00000000 		.long	.LASF1188
 22513 8c82 3A       		.byte	0x3a
 22514 8c83 9D       		.byte	0x9d
 22515 8c84 00000000 		.long	.LASF1189
 22516 8c88 E0800000 		.long	0x80e0
 22517 8c8c 2A       		.uleb128 0x2a
 22518 8c8d 00000000 		.long	.LASF1190
 22519 8c91 3A       		.byte	0x3a
 22520 8c92 A0       		.byte	0xa0
 22521 8c93 00000000 		.long	.LASF1191
 22522 8c97 E0800000 		.long	0x80e0
 22523 8c9b 16       		.uleb128 0x16
 22524 8c9c 00000000 		.long	.LASF490
 22525 8ca0 01       		.byte	0x1
 22526 8ca1 3A       		.byte	0x3a
 22527 8ca2 A8       		.byte	0xa8
 22528 8ca3 BC8C0000 		.long	0x8cbc
 22529 8ca7 13       		.uleb128 0x13
 22530 8ca8 00000000 		.long	.LASF491
 22531 8cac 3A       		.byte	0x3a
 22532 8cad A9       		.byte	0xa9
 22533 8cae 47340000 		.long	0x3447
 22534 8cb2 18       		.uleb128 0x18
 22535 8cb3 5F547000 		.string	"_Tp"
 22536 8cb7 29000000 		.long	0x29
 22537 8cbb 00       		.byte	0
 22538 8cbc 35       		.uleb128 0x35
 22539 8cbd 00000000 		.long	.LASF303
 22540 8cc1 8D300000 		.long	0x308d
 22541 8cc5 00       		.byte	0
 22542 8cc6 3B       		.uleb128 0x3b
 22543 8cc7 00000000 		.long	.LASF1192
 22544 8ccb 08       		.byte	0x8
 22545 8ccc 0B       		.byte	0xb
 22546 8ccd C502     		.value	0x2c5
 22547 8ccf FF8E0000 		.long	0x8eff
 22548 8cd3 62       		.uleb128 0x62
 22549 8cd4 00000000 		.long	.LASF1124
 22550 8cd8 0B       		.byte	0xb
 22551 8cd9 C802     		.value	0x2c8
 22552 8cdb 01AD0000 		.long	0xad01
 22553 8cdf 00       		.byte	0
 22554 8ce0 02       		.byte	0x2
 22555 8ce1 44       		.uleb128 0x44
 22556 8ce2 00000000 		.long	.LASF961
 22557 8ce6 0B       		.byte	0xb
 22558 8ce7 CD02     		.value	0x2cd
 22559 8ce9 01AD0000 		.long	0xad01
 22560 8ced 01       		.byte	0x1
 22561 8cee 44       		.uleb128 0x44
 22562 8cef 00000000 		.long	.LASF19
 22563 8cf3 0B       		.byte	0xb
 22564 8cf4 CF02     		.value	0x2cf
 22565 8cf6 56520000 		.long	0x5256
 22566 8cfa 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 698


 22567 8cfb 44       		.uleb128 0x44
 22568 8cfc 00000000 		.long	.LASF496
 22569 8d00 0B       		.byte	0xb
 22570 8d01 D002     		.value	0x2d0
 22571 8d03 61520000 		.long	0x5261
 22572 8d07 01       		.byte	0x1
 22573 8d08 44       		.uleb128 0x44
 22574 8d09 00000000 		.long	.LASF58
 22575 8d0d 0B       		.byte	0xb
 22576 8d0e D102     		.value	0x2d1
 22577 8d10 77520000 		.long	0x5277
 22578 8d14 01       		.byte	0x1
 22579 8d15 44       		.uleb128 0x44
 22580 8d16 00000000 		.long	.LASF489
 22581 8d1a 0B       		.byte	0xb
 22582 8d1b D202     		.value	0x2d2
 22583 8d1d 6C520000 		.long	0x526c
 22584 8d21 01       		.byte	0x1
 22585 8d22 30       		.uleb128 0x30
 22586 8d23 00000000 		.long	.LASF1125
 22587 8d27 0B       		.byte	0xb
 22588 8d28 D402     		.value	0x2d4
 22589 8d2a 01       		.byte	0x1
 22590 8d2b 338D0000 		.long	0x8d33
 22591 8d2f 398D0000 		.long	0x8d39
 22592 8d33 08       		.uleb128 0x8
 22593 8d34 93AE0000 		.long	0xae93
 22594 8d38 00       		.byte	0
 22595 8d39 31       		.uleb128 0x31
 22596 8d3a 00000000 		.long	.LASF1125
 22597 8d3e 0B       		.byte	0xb
 22598 8d3f D802     		.value	0x2d8
 22599 8d41 01       		.byte	0x1
 22600 8d42 4A8D0000 		.long	0x8d4a
 22601 8d46 558D0000 		.long	0x8d55
 22602 8d4a 08       		.uleb128 0x8
 22603 8d4b 93AE0000 		.long	0xae93
 22604 8d4f 09       		.uleb128 0x9
 22605 8d50 99AE0000 		.long	0xae99
 22606 8d54 00       		.byte	0
 22607 8d55 32       		.uleb128 0x32
 22608 8d56 00000000 		.long	.LASF843
 22609 8d5a 0B       		.byte	0xb
 22610 8d5b E502     		.value	0x2e5
 22611 8d5d 00000000 		.long	.LASF1193
 22612 8d61 088D0000 		.long	0x8d08
 22613 8d65 01       		.byte	0x1
 22614 8d66 6E8D0000 		.long	0x8d6e
 22615 8d6a 748D0000 		.long	0x8d74
 22616 8d6e 08       		.uleb128 0x8
 22617 8d6f A4AE0000 		.long	0xaea4
 22618 8d73 00       		.byte	0
 22619 8d74 32       		.uleb128 0x32
 22620 8d75 00000000 		.long	.LASF845
 22621 8d79 0B       		.byte	0xb
 22622 8d7a E902     		.value	0x2e9
 22623 8d7c 00000000 		.long	.LASF1194
GAS LISTING /tmp/ccmMnd7l.s 			page 699


 22624 8d80 158D0000 		.long	0x8d15
 22625 8d84 01       		.byte	0x1
 22626 8d85 8D8D0000 		.long	0x8d8d
 22627 8d89 938D0000 		.long	0x8d93
 22628 8d8d 08       		.uleb128 0x8
 22629 8d8e A4AE0000 		.long	0xaea4
 22630 8d92 00       		.byte	0
 22631 8d93 32       		.uleb128 0x32
 22632 8d94 00000000 		.long	.LASF1128
 22633 8d98 0B       		.byte	0xb
 22634 8d99 ED02     		.value	0x2ed
 22635 8d9b 00000000 		.long	.LASF1195
 22636 8d9f AAAE0000 		.long	0xaeaa
 22637 8da3 01       		.byte	0x1
 22638 8da4 AC8D0000 		.long	0x8dac
 22639 8da8 B28D0000 		.long	0x8db2
 22640 8dac 08       		.uleb128 0x8
 22641 8dad 93AE0000 		.long	0xae93
 22642 8db1 00       		.byte	0
 22643 8db2 32       		.uleb128 0x32
 22644 8db3 00000000 		.long	.LASF1128
 22645 8db7 0B       		.byte	0xb
 22646 8db8 F402     		.value	0x2f4
 22647 8dba 00000000 		.long	.LASF1196
 22648 8dbe C68C0000 		.long	0x8cc6
 22649 8dc2 01       		.byte	0x1
 22650 8dc3 CB8D0000 		.long	0x8dcb
 22651 8dc7 D68D0000 		.long	0x8dd6
 22652 8dcb 08       		.uleb128 0x8
 22653 8dcc 93AE0000 		.long	0xae93
 22654 8dd0 09       		.uleb128 0x9
 22655 8dd1 D8800000 		.long	0x80d8
 22656 8dd5 00       		.byte	0
 22657 8dd6 32       		.uleb128 0x32
 22658 8dd7 00000000 		.long	.LASF1131
 22659 8ddb 0B       		.byte	0xb
 22660 8ddc F902     		.value	0x2f9
 22661 8dde 00000000 		.long	.LASF1197
 22662 8de2 AAAE0000 		.long	0xaeaa
 22663 8de6 01       		.byte	0x1
 22664 8de7 EF8D0000 		.long	0x8def
 22665 8deb F58D0000 		.long	0x8df5
 22666 8def 08       		.uleb128 0x8
 22667 8df0 93AE0000 		.long	0xae93
 22668 8df4 00       		.byte	0
 22669 8df5 32       		.uleb128 0x32
 22670 8df6 00000000 		.long	.LASF1131
 22671 8dfa 0B       		.byte	0xb
 22672 8dfb 0003     		.value	0x300
 22673 8dfd 00000000 		.long	.LASF1198
 22674 8e01 C68C0000 		.long	0x8cc6
 22675 8e05 01       		.byte	0x1
 22676 8e06 0E8E0000 		.long	0x8e0e
 22677 8e0a 198E0000 		.long	0x8e19
 22678 8e0e 08       		.uleb128 0x8
 22679 8e0f 93AE0000 		.long	0xae93
 22680 8e13 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 700


 22681 8e14 D8800000 		.long	0x80d8
 22682 8e18 00       		.byte	0
 22683 8e19 32       		.uleb128 0x32
 22684 8e1a 00000000 		.long	.LASF186
 22685 8e1e 0B       		.byte	0xb
 22686 8e1f 0503     		.value	0x305
 22687 8e21 00000000 		.long	.LASF1199
 22688 8e25 088D0000 		.long	0x8d08
 22689 8e29 01       		.byte	0x1
 22690 8e2a 328E0000 		.long	0x8e32
 22691 8e2e 3D8E0000 		.long	0x8e3d
 22692 8e32 08       		.uleb128 0x8
 22693 8e33 A4AE0000 		.long	0xaea4
 22694 8e37 09       		.uleb128 0x9
 22695 8e38 FB8C0000 		.long	0x8cfb
 22696 8e3c 00       		.byte	0
 22697 8e3d 32       		.uleb128 0x32
 22698 8e3e 00000000 		.long	.LASF197
 22699 8e42 0B       		.byte	0xb
 22700 8e43 0903     		.value	0x309
 22701 8e45 00000000 		.long	.LASF1200
 22702 8e49 AAAE0000 		.long	0xaeaa
 22703 8e4d 01       		.byte	0x1
 22704 8e4e 568E0000 		.long	0x8e56
 22705 8e52 618E0000 		.long	0x8e61
 22706 8e56 08       		.uleb128 0x8
 22707 8e57 93AE0000 		.long	0xae93
 22708 8e5b 09       		.uleb128 0x9
 22709 8e5c FB8C0000 		.long	0x8cfb
 22710 8e60 00       		.byte	0
 22711 8e61 32       		.uleb128 0x32
 22712 8e62 00000000 		.long	.LASF1136
 22713 8e66 0B       		.byte	0xb
 22714 8e67 0D03     		.value	0x30d
 22715 8e69 00000000 		.long	.LASF1201
 22716 8e6d C68C0000 		.long	0x8cc6
 22717 8e71 01       		.byte	0x1
 22718 8e72 7A8E0000 		.long	0x8e7a
 22719 8e76 858E0000 		.long	0x8e85
 22720 8e7a 08       		.uleb128 0x8
 22721 8e7b A4AE0000 		.long	0xaea4
 22722 8e7f 09       		.uleb128 0x9
 22723 8e80 FB8C0000 		.long	0x8cfb
 22724 8e84 00       		.byte	0
 22725 8e85 32       		.uleb128 0x32
 22726 8e86 00000000 		.long	.LASF1138
 22727 8e8a 0B       		.byte	0xb
 22728 8e8b 1103     		.value	0x311
 22729 8e8d 00000000 		.long	.LASF1202
 22730 8e91 AAAE0000 		.long	0xaeaa
 22731 8e95 01       		.byte	0x1
 22732 8e96 9E8E0000 		.long	0x8e9e
 22733 8e9a A98E0000 		.long	0x8ea9
 22734 8e9e 08       		.uleb128 0x8
 22735 8e9f 93AE0000 		.long	0xae93
 22736 8ea3 09       		.uleb128 0x9
 22737 8ea4 FB8C0000 		.long	0x8cfb
GAS LISTING /tmp/ccmMnd7l.s 			page 701


 22738 8ea8 00       		.byte	0
 22739 8ea9 32       		.uleb128 0x32
 22740 8eaa 00000000 		.long	.LASF1140
 22741 8eae 0B       		.byte	0xb
 22742 8eaf 1503     		.value	0x315
 22743 8eb1 00000000 		.long	.LASF1203
 22744 8eb5 C68C0000 		.long	0x8cc6
 22745 8eb9 01       		.byte	0x1
 22746 8eba C28E0000 		.long	0x8ec2
 22747 8ebe CD8E0000 		.long	0x8ecd
 22748 8ec2 08       		.uleb128 0x8
 22749 8ec3 A4AE0000 		.long	0xaea4
 22750 8ec7 09       		.uleb128 0x9
 22751 8ec8 FB8C0000 		.long	0x8cfb
 22752 8ecc 00       		.byte	0
 22753 8ecd 32       		.uleb128 0x32
 22754 8ece 00000000 		.long	.LASF1142
 22755 8ed2 0B       		.byte	0xb
 22756 8ed3 1903     		.value	0x319
 22757 8ed5 00000000 		.long	.LASF1204
 22758 8ed9 99AE0000 		.long	0xae99
 22759 8edd 01       		.byte	0x1
 22760 8ede E68E0000 		.long	0x8ee6
 22761 8ee2 EC8E0000 		.long	0x8eec
 22762 8ee6 08       		.uleb128 0x8
 22763 8ee7 A4AE0000 		.long	0xaea4
 22764 8eeb 00       		.byte	0
 22765 8eec 35       		.uleb128 0x35
 22766 8eed 00000000 		.long	.LASF743
 22767 8ef1 01AD0000 		.long	0xad01
 22768 8ef5 35       		.uleb128 0x35
 22769 8ef6 00000000 		.long	.LASF1144
 22770 8efa 2E370000 		.long	0x372e
 22771 8efe 00       		.byte	0
 22772 8eff 3B       		.uleb128 0x3b
 22773 8f00 00000000 		.long	.LASF1205
 22774 8f04 08       		.byte	0x8
 22775 8f05 0B       		.byte	0xb
 22776 8f06 C502     		.value	0x2c5
 22777 8f08 1E910000 		.long	0x911e
 22778 8f0c 62       		.uleb128 0x62
 22779 8f0d 00000000 		.long	.LASF1124
 22780 8f11 0B       		.byte	0xb
 22781 8f12 C802     		.value	0x2c8
 22782 8f14 07AD0000 		.long	0xad07
 22783 8f18 00       		.byte	0
 22784 8f19 02       		.byte	0x2
 22785 8f1a 44       		.uleb128 0x44
 22786 8f1b 00000000 		.long	.LASF496
 22787 8f1f 0B       		.byte	0xb
 22788 8f20 D002     		.value	0x2d0
 22789 8f22 CB520000 		.long	0x52cb
 22790 8f26 01       		.byte	0x1
 22791 8f27 44       		.uleb128 0x44
 22792 8f28 00000000 		.long	.LASF58
 22793 8f2c 0B       		.byte	0xb
 22794 8f2d D102     		.value	0x2d1
GAS LISTING /tmp/ccmMnd7l.s 			page 702


 22795 8f2f E1520000 		.long	0x52e1
 22796 8f33 01       		.byte	0x1
 22797 8f34 44       		.uleb128 0x44
 22798 8f35 00000000 		.long	.LASF489
 22799 8f39 0B       		.byte	0xb
 22800 8f3a D202     		.value	0x2d2
 22801 8f3c D6520000 		.long	0x52d6
 22802 8f40 01       		.byte	0x1
 22803 8f41 30       		.uleb128 0x30
 22804 8f42 00000000 		.long	.LASF1125
 22805 8f46 0B       		.byte	0xb
 22806 8f47 D402     		.value	0x2d4
 22807 8f49 01       		.byte	0x1
 22808 8f4a 528F0000 		.long	0x8f52
 22809 8f4e 588F0000 		.long	0x8f58
 22810 8f52 08       		.uleb128 0x8
 22811 8f53 A9AF0000 		.long	0xafa9
 22812 8f57 00       		.byte	0
 22813 8f58 31       		.uleb128 0x31
 22814 8f59 00000000 		.long	.LASF1125
 22815 8f5d 0B       		.byte	0xb
 22816 8f5e D802     		.value	0x2d8
 22817 8f60 01       		.byte	0x1
 22818 8f61 698F0000 		.long	0x8f69
 22819 8f65 748F0000 		.long	0x8f74
 22820 8f69 08       		.uleb128 0x8
 22821 8f6a A9AF0000 		.long	0xafa9
 22822 8f6e 09       		.uleb128 0x9
 22823 8f6f AFAF0000 		.long	0xafaf
 22824 8f73 00       		.byte	0
 22825 8f74 32       		.uleb128 0x32
 22826 8f75 00000000 		.long	.LASF843
 22827 8f79 0B       		.byte	0xb
 22828 8f7a E502     		.value	0x2e5
 22829 8f7c 00000000 		.long	.LASF1206
 22830 8f80 278F0000 		.long	0x8f27
 22831 8f84 01       		.byte	0x1
 22832 8f85 8D8F0000 		.long	0x8f8d
 22833 8f89 938F0000 		.long	0x8f93
 22834 8f8d 08       		.uleb128 0x8
 22835 8f8e BAAF0000 		.long	0xafba
 22836 8f92 00       		.byte	0
 22837 8f93 32       		.uleb128 0x32
 22838 8f94 00000000 		.long	.LASF845
 22839 8f98 0B       		.byte	0xb
 22840 8f99 E902     		.value	0x2e9
 22841 8f9b 00000000 		.long	.LASF1207
 22842 8f9f 348F0000 		.long	0x8f34
 22843 8fa3 01       		.byte	0x1
 22844 8fa4 AC8F0000 		.long	0x8fac
 22845 8fa8 B28F0000 		.long	0x8fb2
 22846 8fac 08       		.uleb128 0x8
 22847 8fad BAAF0000 		.long	0xafba
 22848 8fb1 00       		.byte	0
 22849 8fb2 32       		.uleb128 0x32
 22850 8fb3 00000000 		.long	.LASF1128
 22851 8fb7 0B       		.byte	0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 703


 22852 8fb8 ED02     		.value	0x2ed
 22853 8fba 00000000 		.long	.LASF1208
 22854 8fbe C0AF0000 		.long	0xafc0
 22855 8fc2 01       		.byte	0x1
 22856 8fc3 CB8F0000 		.long	0x8fcb
 22857 8fc7 D18F0000 		.long	0x8fd1
 22858 8fcb 08       		.uleb128 0x8
 22859 8fcc A9AF0000 		.long	0xafa9
 22860 8fd0 00       		.byte	0
 22861 8fd1 32       		.uleb128 0x32
 22862 8fd2 00000000 		.long	.LASF1128
 22863 8fd6 0B       		.byte	0xb
 22864 8fd7 F402     		.value	0x2f4
 22865 8fd9 00000000 		.long	.LASF1209
 22866 8fdd FF8E0000 		.long	0x8eff
 22867 8fe1 01       		.byte	0x1
 22868 8fe2 EA8F0000 		.long	0x8fea
 22869 8fe6 F58F0000 		.long	0x8ff5
 22870 8fea 08       		.uleb128 0x8
 22871 8feb A9AF0000 		.long	0xafa9
 22872 8fef 09       		.uleb128 0x9
 22873 8ff0 D8800000 		.long	0x80d8
 22874 8ff4 00       		.byte	0
 22875 8ff5 32       		.uleb128 0x32
 22876 8ff6 00000000 		.long	.LASF1131
 22877 8ffa 0B       		.byte	0xb
 22878 8ffb F902     		.value	0x2f9
 22879 8ffd 00000000 		.long	.LASF1210
 22880 9001 C0AF0000 		.long	0xafc0
 22881 9005 01       		.byte	0x1
 22882 9006 0E900000 		.long	0x900e
 22883 900a 14900000 		.long	0x9014
 22884 900e 08       		.uleb128 0x8
 22885 900f A9AF0000 		.long	0xafa9
 22886 9013 00       		.byte	0
 22887 9014 32       		.uleb128 0x32
 22888 9015 00000000 		.long	.LASF1131
 22889 9019 0B       		.byte	0xb
 22890 901a 0003     		.value	0x300
 22891 901c 00000000 		.long	.LASF1211
 22892 9020 FF8E0000 		.long	0x8eff
 22893 9024 01       		.byte	0x1
 22894 9025 2D900000 		.long	0x902d
 22895 9029 38900000 		.long	0x9038
 22896 902d 08       		.uleb128 0x8
 22897 902e A9AF0000 		.long	0xafa9
 22898 9032 09       		.uleb128 0x9
 22899 9033 D8800000 		.long	0x80d8
 22900 9037 00       		.byte	0
 22901 9038 32       		.uleb128 0x32
 22902 9039 00000000 		.long	.LASF186
 22903 903d 0B       		.byte	0xb
 22904 903e 0503     		.value	0x305
 22905 9040 00000000 		.long	.LASF1212
 22906 9044 278F0000 		.long	0x8f27
 22907 9048 01       		.byte	0x1
 22908 9049 51900000 		.long	0x9051
GAS LISTING /tmp/ccmMnd7l.s 			page 704


 22909 904d 5C900000 		.long	0x905c
 22910 9051 08       		.uleb128 0x8
 22911 9052 BAAF0000 		.long	0xafba
 22912 9056 09       		.uleb128 0x9
 22913 9057 1A8F0000 		.long	0x8f1a
 22914 905b 00       		.byte	0
 22915 905c 32       		.uleb128 0x32
 22916 905d 00000000 		.long	.LASF197
 22917 9061 0B       		.byte	0xb
 22918 9062 0903     		.value	0x309
 22919 9064 00000000 		.long	.LASF1213
 22920 9068 C0AF0000 		.long	0xafc0
 22921 906c 01       		.byte	0x1
 22922 906d 75900000 		.long	0x9075
 22923 9071 80900000 		.long	0x9080
 22924 9075 08       		.uleb128 0x8
 22925 9076 A9AF0000 		.long	0xafa9
 22926 907a 09       		.uleb128 0x9
 22927 907b 1A8F0000 		.long	0x8f1a
 22928 907f 00       		.byte	0
 22929 9080 32       		.uleb128 0x32
 22930 9081 00000000 		.long	.LASF1136
 22931 9085 0B       		.byte	0xb
 22932 9086 0D03     		.value	0x30d
 22933 9088 00000000 		.long	.LASF1214
 22934 908c FF8E0000 		.long	0x8eff
 22935 9090 01       		.byte	0x1
 22936 9091 99900000 		.long	0x9099
 22937 9095 A4900000 		.long	0x90a4
 22938 9099 08       		.uleb128 0x8
 22939 909a BAAF0000 		.long	0xafba
 22940 909e 09       		.uleb128 0x9
 22941 909f 1A8F0000 		.long	0x8f1a
 22942 90a3 00       		.byte	0
 22943 90a4 32       		.uleb128 0x32
 22944 90a5 00000000 		.long	.LASF1138
 22945 90a9 0B       		.byte	0xb
 22946 90aa 1103     		.value	0x311
 22947 90ac 00000000 		.long	.LASF1215
 22948 90b0 C0AF0000 		.long	0xafc0
 22949 90b4 01       		.byte	0x1
 22950 90b5 BD900000 		.long	0x90bd
 22951 90b9 C8900000 		.long	0x90c8
 22952 90bd 08       		.uleb128 0x8
 22953 90be A9AF0000 		.long	0xafa9
 22954 90c2 09       		.uleb128 0x9
 22955 90c3 1A8F0000 		.long	0x8f1a
 22956 90c7 00       		.byte	0
 22957 90c8 32       		.uleb128 0x32
 22958 90c9 00000000 		.long	.LASF1140
 22959 90cd 0B       		.byte	0xb
 22960 90ce 1503     		.value	0x315
 22961 90d0 00000000 		.long	.LASF1216
 22962 90d4 FF8E0000 		.long	0x8eff
 22963 90d8 01       		.byte	0x1
 22964 90d9 E1900000 		.long	0x90e1
 22965 90dd EC900000 		.long	0x90ec
GAS LISTING /tmp/ccmMnd7l.s 			page 705


 22966 90e1 08       		.uleb128 0x8
 22967 90e2 BAAF0000 		.long	0xafba
 22968 90e6 09       		.uleb128 0x9
 22969 90e7 1A8F0000 		.long	0x8f1a
 22970 90eb 00       		.byte	0
 22971 90ec 32       		.uleb128 0x32
 22972 90ed 00000000 		.long	.LASF1142
 22973 90f1 0B       		.byte	0xb
 22974 90f2 1903     		.value	0x319
 22975 90f4 00000000 		.long	.LASF1217
 22976 90f8 AFAF0000 		.long	0xafaf
 22977 90fc 01       		.byte	0x1
 22978 90fd 05910000 		.long	0x9105
 22979 9101 0B910000 		.long	0x910b
 22980 9105 08       		.uleb128 0x8
 22981 9106 BAAF0000 		.long	0xafba
 22982 910a 00       		.byte	0
 22983 910b 35       		.uleb128 0x35
 22984 910c 00000000 		.long	.LASF743
 22985 9110 07AD0000 		.long	0xad07
 22986 9114 35       		.uleb128 0x35
 22987 9115 00000000 		.long	.LASF1144
 22988 9119 2E370000 		.long	0x372e
 22989 911d 00       		.byte	0
 22990 911e 16       		.uleb128 0x16
 22991 911f 00000000 		.long	.LASF1218
 22992 9123 01       		.byte	0x1
 22993 9124 0E       		.byte	0xe
 22994 9125 3A       		.byte	0x3a
 22995 9126 5F920000 		.long	0x925f
 22996 912a 13       		.uleb128 0x13
 22997 912b 00000000 		.long	.LASF57
 22998 912f 0E       		.byte	0xe
 22999 9130 3D       		.byte	0x3d
 23000 9131 85060000 		.long	0x685
 23001 9135 13       		.uleb128 0x13
 23002 9136 00000000 		.long	.LASF489
 23003 913a 0E       		.byte	0xe
 23004 913b 3F       		.byte	0x3f
 23005 913c D0AD0000 		.long	0xadd0
 23006 9140 13       		.uleb128 0x13
 23007 9141 00000000 		.long	.LASF1108
 23008 9145 0E       		.byte	0xe
 23009 9146 40       		.byte	0x40
 23010 9147 D6AD0000 		.long	0xadd6
 23011 914b 13       		.uleb128 0x13
 23012 914c 00000000 		.long	.LASF58
 23013 9150 0E       		.byte	0xe
 23014 9151 41       		.byte	0x41
 23015 9152 E1AD0000 		.long	0xade1
 23016 9156 13       		.uleb128 0x13
 23017 9157 00000000 		.long	.LASF59
 23018 915b 0E       		.byte	0xe
 23019 915c 42       		.byte	0x42
 23020 915d E7AD0000 		.long	0xade7
 23021 9161 37       		.uleb128 0x37
 23022 9162 00000000 		.long	.LASF1109
GAS LISTING /tmp/ccmMnd7l.s 			page 706


 23023 9166 0E       		.byte	0xe
 23024 9167 4F       		.byte	0x4f
 23025 9168 70910000 		.long	0x9170
 23026 916c 76910000 		.long	0x9176
 23027 9170 08       		.uleb128 0x8
 23028 9171 EDAD0000 		.long	0xaded
 23029 9175 00       		.byte	0
 23030 9176 37       		.uleb128 0x37
 23031 9177 00000000 		.long	.LASF1109
 23032 917b 0E       		.byte	0xe
 23033 917c 51       		.byte	0x51
 23034 917d 85910000 		.long	0x9185
 23035 9181 90910000 		.long	0x9190
 23036 9185 08       		.uleb128 0x8
 23037 9186 EDAD0000 		.long	0xaded
 23038 918a 09       		.uleb128 0x9
 23039 918b F3AD0000 		.long	0xadf3
 23040 918f 00       		.byte	0
 23041 9190 37       		.uleb128 0x37
 23042 9191 00000000 		.long	.LASF1110
 23043 9195 0E       		.byte	0xe
 23044 9196 56       		.byte	0x56
 23045 9197 9F910000 		.long	0x919f
 23046 919b AA910000 		.long	0x91aa
 23047 919f 08       		.uleb128 0x8
 23048 91a0 EDAD0000 		.long	0xaded
 23049 91a4 08       		.uleb128 0x8
 23050 91a5 D8800000 		.long	0x80d8
 23051 91a9 00       		.byte	0
 23052 91aa 0B       		.uleb128 0xb
 23053 91ab 00000000 		.long	.LASF1111
 23054 91af 0E       		.byte	0xe
 23055 91b0 59       		.byte	0x59
 23056 91b1 00000000 		.long	.LASF1219
 23057 91b5 35910000 		.long	0x9135
 23058 91b9 C1910000 		.long	0x91c1
 23059 91bd CC910000 		.long	0x91cc
 23060 91c1 08       		.uleb128 0x8
 23061 91c2 F9AD0000 		.long	0xadf9
 23062 91c6 09       		.uleb128 0x9
 23063 91c7 4B910000 		.long	0x914b
 23064 91cb 00       		.byte	0
 23065 91cc 0B       		.uleb128 0xb
 23066 91cd 00000000 		.long	.LASF1111
 23067 91d1 0E       		.byte	0xe
 23068 91d2 5D       		.byte	0x5d
 23069 91d3 00000000 		.long	.LASF1220
 23070 91d7 40910000 		.long	0x9140
 23071 91db E3910000 		.long	0x91e3
 23072 91df EE910000 		.long	0x91ee
 23073 91e3 08       		.uleb128 0x8
 23074 91e4 F9AD0000 		.long	0xadf9
 23075 91e8 09       		.uleb128 0x9
 23076 91e9 56910000 		.long	0x9156
 23077 91ed 00       		.byte	0
 23078 91ee 0B       		.uleb128 0xb
 23079 91ef 00000000 		.long	.LASF535
GAS LISTING /tmp/ccmMnd7l.s 			page 707


 23080 91f3 0E       		.byte	0xe
 23081 91f4 63       		.byte	0x63
 23082 91f5 00000000 		.long	.LASF1221
 23083 91f9 35910000 		.long	0x9135
 23084 91fd 05920000 		.long	0x9205
 23085 9201 15920000 		.long	0x9215
 23086 9205 08       		.uleb128 0x8
 23087 9206 EDAD0000 		.long	0xaded
 23088 920a 09       		.uleb128 0x9
 23089 920b 2A910000 		.long	0x912a
 23090 920f 09       		.uleb128 0x9
 23091 9210 01A30000 		.long	0xa301
 23092 9214 00       		.byte	0
 23093 9215 0A       		.uleb128 0xa
 23094 9216 00000000 		.long	.LASF538
 23095 921a 0E       		.byte	0xe
 23096 921b 6D       		.byte	0x6d
 23097 921c 00000000 		.long	.LASF1222
 23098 9220 28920000 		.long	0x9228
 23099 9224 38920000 		.long	0x9238
 23100 9228 08       		.uleb128 0x8
 23101 9229 EDAD0000 		.long	0xaded
 23102 922d 09       		.uleb128 0x9
 23103 922e 35910000 		.long	0x9135
 23104 9232 09       		.uleb128 0x9
 23105 9233 2A910000 		.long	0x912a
 23106 9237 00       		.byte	0
 23107 9238 0B       		.uleb128 0xb
 23108 9239 00000000 		.long	.LASF171
 23109 923d 0E       		.byte	0xe
 23110 923e 71       		.byte	0x71
 23111 923f 00000000 		.long	.LASF1223
 23112 9243 2A910000 		.long	0x912a
 23113 9247 4F920000 		.long	0x924f
 23114 924b 55920000 		.long	0x9255
 23115 924f 08       		.uleb128 0x8
 23116 9250 F9AD0000 		.long	0xadf9
 23117 9254 00       		.byte	0
 23118 9255 18       		.uleb128 0x18
 23119 9256 5F547000 		.string	"_Tp"
 23120 925a 18810000 		.long	0x8118
 23121 925e 00       		.byte	0
 23122 925f 11       		.uleb128 0x11
 23123 9260 1E910000 		.long	0x911e
 23124 9264 16       		.uleb128 0x16
 23125 9265 00000000 		.long	.LASF1224
 23126 9269 01       		.byte	0x1
 23127 926a 3A       		.byte	0x3a
 23128 926b 5F       		.byte	0x5f
 23129 926c 74930000 		.long	0x9374
 23130 9270 12       		.uleb128 0x12
 23131 9271 3A       		.byte	0x3a
 23132 9272 5F       		.byte	0x5f
 23133 9273 4C440000 		.long	0x444c
 23134 9277 12       		.uleb128 0x12
 23135 9278 3A       		.byte	0x3a
 23136 9279 5F       		.byte	0x5f
GAS LISTING /tmp/ccmMnd7l.s 			page 708


 23137 927a 70440000 		.long	0x4470
 23138 927e 12       		.uleb128 0x12
 23139 927f 3A       		.byte	0x3a
 23140 9280 5F       		.byte	0x5f
 23141 9281 90440000 		.long	0x4490
 23142 9285 25       		.uleb128 0x25
 23143 9286 0B430000 		.long	0x430b
 23144 928a 00       		.byte	0
 23145 928b 13       		.uleb128 0x13
 23146 928c 00000000 		.long	.LASF19
 23147 9290 3A       		.byte	0x3a
 23148 9291 67       		.byte	0x67
 23149 9292 17430000 		.long	0x4317
 23150 9296 13       		.uleb128 0x13
 23151 9297 00000000 		.long	.LASF489
 23152 929b 3A       		.byte	0x3a
 23153 929c 68       		.byte	0x68
 23154 929d 2E430000 		.long	0x432e
 23155 92a1 13       		.uleb128 0x13
 23156 92a2 00000000 		.long	.LASF58
 23157 92a6 3A       		.byte	0x3a
 23158 92a7 6D       		.byte	0x6d
 23159 92a8 1DAE0000 		.long	0xae1d
 23160 92ac 13       		.uleb128 0x13
 23161 92ad 00000000 		.long	.LASF59
 23162 92b1 3A       		.byte	0x3a
 23163 92b2 6E       		.byte	0x6e
 23164 92b3 23AE0000 		.long	0xae23
 23165 92b7 11       		.uleb128 0x11
 23166 92b8 8B920000 		.long	0x928b
 23167 92bc 4E       		.uleb128 0x4e
 23168 92bd 00000000 		.long	.LASF1175
 23169 92c1 3A       		.byte	0x3a
 23170 92c2 8B       		.byte	0x8b
 23171 92c3 00000000 		.long	.LASF1225
 23172 92c7 DD410000 		.long	0x41dd
 23173 92cb D5920000 		.long	0x92d5
 23174 92cf 09       		.uleb128 0x9
 23175 92d0 05AE0000 		.long	0xae05
 23176 92d4 00       		.byte	0
 23177 92d5 1C       		.uleb128 0x1c
 23178 92d6 00000000 		.long	.LASF1177
 23179 92da 3A       		.byte	0x3a
 23180 92db 8E       		.byte	0x8e
 23181 92dc 00000000 		.long	.LASF1226
 23182 92e0 EF920000 		.long	0x92ef
 23183 92e4 09       		.uleb128 0x9
 23184 92e5 17AE0000 		.long	0xae17
 23185 92e9 09       		.uleb128 0x9
 23186 92ea 17AE0000 		.long	0xae17
 23187 92ee 00       		.byte	0
 23188 92ef 2A       		.uleb128 0x2a
 23189 92f0 00000000 		.long	.LASF1179
 23190 92f4 3A       		.byte	0x3a
 23191 92f5 91       		.byte	0x91
 23192 92f6 00000000 		.long	.LASF1227
 23193 92fa E0800000 		.long	0x80e0
GAS LISTING /tmp/ccmMnd7l.s 			page 709


 23194 92fe 2A       		.uleb128 0x2a
 23195 92ff 00000000 		.long	.LASF1182
 23196 9303 3A       		.byte	0x3a
 23197 9304 94       		.byte	0x94
 23198 9305 00000000 		.long	.LASF1228
 23199 9309 E0800000 		.long	0x80e0
 23200 930d 2A       		.uleb128 0x2a
 23201 930e 00000000 		.long	.LASF1184
 23202 9312 3A       		.byte	0x3a
 23203 9313 97       		.byte	0x97
 23204 9314 00000000 		.long	.LASF1229
 23205 9318 E0800000 		.long	0x80e0
 23206 931c 2A       		.uleb128 0x2a
 23207 931d 00000000 		.long	.LASF1186
 23208 9321 3A       		.byte	0x3a
 23209 9322 9A       		.byte	0x9a
 23210 9323 00000000 		.long	.LASF1230
 23211 9327 E0800000 		.long	0x80e0
 23212 932b 2A       		.uleb128 0x2a
 23213 932c 00000000 		.long	.LASF1188
 23214 9330 3A       		.byte	0x3a
 23215 9331 9D       		.byte	0x9d
 23216 9332 00000000 		.long	.LASF1231
 23217 9336 E0800000 		.long	0x80e0
 23218 933a 2A       		.uleb128 0x2a
 23219 933b 00000000 		.long	.LASF1190
 23220 933f 3A       		.byte	0x3a
 23221 9340 A0       		.byte	0xa0
 23222 9341 00000000 		.long	.LASF1232
 23223 9345 E0800000 		.long	0x80e0
 23224 9349 16       		.uleb128 0x16
 23225 934a 00000000 		.long	.LASF648
 23226 934e 01       		.byte	0x1
 23227 934f 3A       		.byte	0x3a
 23228 9350 A8       		.byte	0xa8
 23229 9351 6A930000 		.long	0x936a
 23230 9355 13       		.uleb128 0x13
 23231 9356 00000000 		.long	.LASF491
 23232 935a 3A       		.byte	0x3a
 23233 935b A9       		.byte	0xa9
 23234 935c C4440000 		.long	0x44c4
 23235 9360 18       		.uleb128 0x18
 23236 9361 5F547000 		.string	"_Tp"
 23237 9365 18810000 		.long	0x8118
 23238 9369 00       		.byte	0
 23239 936a 35       		.uleb128 0x35
 23240 936b 00000000 		.long	.LASF303
 23241 936f DD410000 		.long	0x41dd
 23242 9373 00       		.byte	0
 23243 9374 3B       		.uleb128 0x3b
 23244 9375 00000000 		.long	.LASF1233
 23245 9379 08       		.byte	0x8
 23246 937a 0B       		.byte	0xb
 23247 937b C502     		.value	0x2c5
 23248 937d 93950000 		.long	0x9593
 23249 9381 62       		.uleb128 0x62
 23250 9382 00000000 		.long	.LASF1124
GAS LISTING /tmp/ccmMnd7l.s 			page 710


 23251 9386 0B       		.byte	0xb
 23252 9387 C802     		.value	0x2c8
 23253 9389 D0AD0000 		.long	0xadd0
 23254 938d 00       		.byte	0
 23255 938e 02       		.byte	0x2
 23256 938f 44       		.uleb128 0x44
 23257 9390 00000000 		.long	.LASF496
 23258 9394 0B       		.byte	0xb
 23259 9395 D002     		.value	0x2d0
 23260 9397 75550000 		.long	0x5575
 23261 939b 01       		.byte	0x1
 23262 939c 44       		.uleb128 0x44
 23263 939d 00000000 		.long	.LASF58
 23264 93a1 0B       		.byte	0xb
 23265 93a2 D102     		.value	0x2d1
 23266 93a4 8B550000 		.long	0x558b
 23267 93a8 01       		.byte	0x1
 23268 93a9 44       		.uleb128 0x44
 23269 93aa 00000000 		.long	.LASF489
 23270 93ae 0B       		.byte	0xb
 23271 93af D202     		.value	0x2d2
 23272 93b1 80550000 		.long	0x5580
 23273 93b5 01       		.byte	0x1
 23274 93b6 30       		.uleb128 0x30
 23275 93b7 00000000 		.long	.LASF1125
 23276 93bb 0B       		.byte	0xb
 23277 93bc D402     		.value	0x2d4
 23278 93be 01       		.byte	0x1
 23279 93bf C7930000 		.long	0x93c7
 23280 93c3 CD930000 		.long	0x93cd
 23281 93c7 08       		.uleb128 0x8
 23282 93c8 93B00000 		.long	0xb093
 23283 93cc 00       		.byte	0
 23284 93cd 31       		.uleb128 0x31
 23285 93ce 00000000 		.long	.LASF1125
 23286 93d2 0B       		.byte	0xb
 23287 93d3 D802     		.value	0x2d8
 23288 93d5 01       		.byte	0x1
 23289 93d6 DE930000 		.long	0x93de
 23290 93da E9930000 		.long	0x93e9
 23291 93de 08       		.uleb128 0x8
 23292 93df 93B00000 		.long	0xb093
 23293 93e3 09       		.uleb128 0x9
 23294 93e4 99B00000 		.long	0xb099
 23295 93e8 00       		.byte	0
 23296 93e9 32       		.uleb128 0x32
 23297 93ea 00000000 		.long	.LASF843
 23298 93ee 0B       		.byte	0xb
 23299 93ef E502     		.value	0x2e5
 23300 93f1 00000000 		.long	.LASF1234
 23301 93f5 9C930000 		.long	0x939c
 23302 93f9 01       		.byte	0x1
 23303 93fa 02940000 		.long	0x9402
 23304 93fe 08940000 		.long	0x9408
 23305 9402 08       		.uleb128 0x8
 23306 9403 A4B00000 		.long	0xb0a4
 23307 9407 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 711


 23308 9408 32       		.uleb128 0x32
 23309 9409 00000000 		.long	.LASF845
 23310 940d 0B       		.byte	0xb
 23311 940e E902     		.value	0x2e9
 23312 9410 00000000 		.long	.LASF1235
 23313 9414 A9930000 		.long	0x93a9
 23314 9418 01       		.byte	0x1
 23315 9419 21940000 		.long	0x9421
 23316 941d 27940000 		.long	0x9427
 23317 9421 08       		.uleb128 0x8
 23318 9422 A4B00000 		.long	0xb0a4
 23319 9426 00       		.byte	0
 23320 9427 32       		.uleb128 0x32
 23321 9428 00000000 		.long	.LASF1128
 23322 942c 0B       		.byte	0xb
 23323 942d ED02     		.value	0x2ed
 23324 942f 00000000 		.long	.LASF1236
 23325 9433 AAB00000 		.long	0xb0aa
 23326 9437 01       		.byte	0x1
 23327 9438 40940000 		.long	0x9440
 23328 943c 46940000 		.long	0x9446
 23329 9440 08       		.uleb128 0x8
 23330 9441 93B00000 		.long	0xb093
 23331 9445 00       		.byte	0
 23332 9446 32       		.uleb128 0x32
 23333 9447 00000000 		.long	.LASF1128
 23334 944b 0B       		.byte	0xb
 23335 944c F402     		.value	0x2f4
 23336 944e 00000000 		.long	.LASF1237
 23337 9452 74930000 		.long	0x9374
 23338 9456 01       		.byte	0x1
 23339 9457 5F940000 		.long	0x945f
 23340 945b 6A940000 		.long	0x946a
 23341 945f 08       		.uleb128 0x8
 23342 9460 93B00000 		.long	0xb093
 23343 9464 09       		.uleb128 0x9
 23344 9465 D8800000 		.long	0x80d8
 23345 9469 00       		.byte	0
 23346 946a 32       		.uleb128 0x32
 23347 946b 00000000 		.long	.LASF1131
 23348 946f 0B       		.byte	0xb
 23349 9470 F902     		.value	0x2f9
 23350 9472 00000000 		.long	.LASF1238
 23351 9476 AAB00000 		.long	0xb0aa
 23352 947a 01       		.byte	0x1
 23353 947b 83940000 		.long	0x9483
 23354 947f 89940000 		.long	0x9489
 23355 9483 08       		.uleb128 0x8
 23356 9484 93B00000 		.long	0xb093
 23357 9488 00       		.byte	0
 23358 9489 32       		.uleb128 0x32
 23359 948a 00000000 		.long	.LASF1131
 23360 948e 0B       		.byte	0xb
 23361 948f 0003     		.value	0x300
 23362 9491 00000000 		.long	.LASF1239
 23363 9495 74930000 		.long	0x9374
 23364 9499 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 712


 23365 949a A2940000 		.long	0x94a2
 23366 949e AD940000 		.long	0x94ad
 23367 94a2 08       		.uleb128 0x8
 23368 94a3 93B00000 		.long	0xb093
 23369 94a7 09       		.uleb128 0x9
 23370 94a8 D8800000 		.long	0x80d8
 23371 94ac 00       		.byte	0
 23372 94ad 32       		.uleb128 0x32
 23373 94ae 00000000 		.long	.LASF186
 23374 94b2 0B       		.byte	0xb
 23375 94b3 0503     		.value	0x305
 23376 94b5 00000000 		.long	.LASF1240
 23377 94b9 9C930000 		.long	0x939c
 23378 94bd 01       		.byte	0x1
 23379 94be C6940000 		.long	0x94c6
 23380 94c2 D1940000 		.long	0x94d1
 23381 94c6 08       		.uleb128 0x8
 23382 94c7 A4B00000 		.long	0xb0a4
 23383 94cb 09       		.uleb128 0x9
 23384 94cc 8F930000 		.long	0x938f
 23385 94d0 00       		.byte	0
 23386 94d1 32       		.uleb128 0x32
 23387 94d2 00000000 		.long	.LASF197
 23388 94d6 0B       		.byte	0xb
 23389 94d7 0903     		.value	0x309
 23390 94d9 00000000 		.long	.LASF1241
 23391 94dd AAB00000 		.long	0xb0aa
 23392 94e1 01       		.byte	0x1
 23393 94e2 EA940000 		.long	0x94ea
 23394 94e6 F5940000 		.long	0x94f5
 23395 94ea 08       		.uleb128 0x8
 23396 94eb 93B00000 		.long	0xb093
 23397 94ef 09       		.uleb128 0x9
 23398 94f0 8F930000 		.long	0x938f
 23399 94f4 00       		.byte	0
 23400 94f5 32       		.uleb128 0x32
 23401 94f6 00000000 		.long	.LASF1136
 23402 94fa 0B       		.byte	0xb
 23403 94fb 0D03     		.value	0x30d
 23404 94fd 00000000 		.long	.LASF1242
 23405 9501 74930000 		.long	0x9374
 23406 9505 01       		.byte	0x1
 23407 9506 0E950000 		.long	0x950e
 23408 950a 19950000 		.long	0x9519
 23409 950e 08       		.uleb128 0x8
 23410 950f A4B00000 		.long	0xb0a4
 23411 9513 09       		.uleb128 0x9
 23412 9514 8F930000 		.long	0x938f
 23413 9518 00       		.byte	0
 23414 9519 32       		.uleb128 0x32
 23415 951a 00000000 		.long	.LASF1138
 23416 951e 0B       		.byte	0xb
 23417 951f 1103     		.value	0x311
 23418 9521 00000000 		.long	.LASF1243
 23419 9525 AAB00000 		.long	0xb0aa
 23420 9529 01       		.byte	0x1
 23421 952a 32950000 		.long	0x9532
GAS LISTING /tmp/ccmMnd7l.s 			page 713


 23422 952e 3D950000 		.long	0x953d
 23423 9532 08       		.uleb128 0x8
 23424 9533 93B00000 		.long	0xb093
 23425 9537 09       		.uleb128 0x9
 23426 9538 8F930000 		.long	0x938f
 23427 953c 00       		.byte	0
 23428 953d 32       		.uleb128 0x32
 23429 953e 00000000 		.long	.LASF1140
 23430 9542 0B       		.byte	0xb
 23431 9543 1503     		.value	0x315
 23432 9545 00000000 		.long	.LASF1244
 23433 9549 74930000 		.long	0x9374
 23434 954d 01       		.byte	0x1
 23435 954e 56950000 		.long	0x9556
 23436 9552 61950000 		.long	0x9561
 23437 9556 08       		.uleb128 0x8
 23438 9557 A4B00000 		.long	0xb0a4
 23439 955b 09       		.uleb128 0x9
 23440 955c 8F930000 		.long	0x938f
 23441 9560 00       		.byte	0
 23442 9561 32       		.uleb128 0x32
 23443 9562 00000000 		.long	.LASF1142
 23444 9566 0B       		.byte	0xb
 23445 9567 1903     		.value	0x319
 23446 9569 00000000 		.long	.LASF1245
 23447 956d 99B00000 		.long	0xb099
 23448 9571 01       		.byte	0x1
 23449 9572 7A950000 		.long	0x957a
 23450 9576 80950000 		.long	0x9580
 23451 957a 08       		.uleb128 0x8
 23452 957b A4B00000 		.long	0xb0a4
 23453 957f 00       		.byte	0
 23454 9580 35       		.uleb128 0x35
 23455 9581 00000000 		.long	.LASF743
 23456 9585 D0AD0000 		.long	0xadd0
 23457 9589 35       		.uleb128 0x35
 23458 958a 00000000 		.long	.LASF1144
 23459 958e A0470000 		.long	0x47a0
 23460 9592 00       		.byte	0
 23461 9593 14       		.uleb128 0x14
 23462 9594 00000000 		.long	.LASF1246
 23463 9598 11       		.uleb128 0x11
 23464 9599 C68C0000 		.long	0x8cc6
 23465 959d 3E       		.uleb128 0x3e
 23466 959e 00000000 		.long	.LASF1247
 23467 95a2 04       		.byte	0x4
 23468 95a3 3B       		.byte	0x3b
 23469 95a4 31       		.byte	0x31
 23470 95a5 BC950000 		.long	0x95bc
 23471 95a9 3F       		.uleb128 0x3f
 23472 95aa 00000000 		.long	.LASF1248
 23473 95ae 00       		.sleb128 0
 23474 95af 3F       		.uleb128 0x3f
 23475 95b0 00000000 		.long	.LASF1249
 23476 95b4 01       		.sleb128 1
 23477 95b5 3F       		.uleb128 0x3f
 23478 95b6 00000000 		.long	.LASF1250
GAS LISTING /tmp/ccmMnd7l.s 			page 714


 23479 95ba 02       		.sleb128 2
 23480 95bb 00       		.byte	0
 23481 95bc 8501     		.uleb128 0x85
 23482 95be 00000000 		.long	.LASF1251
 23483 95c2 3B       		.byte	0x3b
 23484 95c3 35       		.byte	0x35
 23485 95c4 C9950000 		.long	0x95c9
 23486 95c8 02       		.byte	0x2
 23487 95c9 11       		.uleb128 0x11
 23488 95ca 9D950000 		.long	0x959d
 23489 95ce 11       		.uleb128 0x11
 23490 95cf FF8E0000 		.long	0x8eff
 23491 95d3 11       		.uleb128 0x11
 23492 95d4 74930000 		.long	0x9374
 23493 95d8 11       		.uleb128 0x11
 23494 95d9 83860000 		.long	0x8683
 23495 95dd 11       		.uleb128 0x11
 23496 95de 64840000 		.long	0x8464
 23497 95e2 16       		.uleb128 0x16
 23498 95e3 00000000 		.long	.LASF1252
 23499 95e7 01       		.byte	0x1
 23500 95e8 3C       		.byte	0x3c
 23501 95e9 2F       		.byte	0x2f
 23502 95ea FA950000 		.long	0x95fa
 23503 95ee 13       		.uleb128 0x13
 23504 95ef 00000000 		.long	.LASF494
 23505 95f3 3C       		.byte	0x3c
 23506 95f4 30       		.byte	0x30
 23507 95f5 01AD0000 		.long	0xad01
 23508 95f9 00       		.byte	0
 23509 95fa 16       		.uleb128 0x16
 23510 95fb 00000000 		.long	.LASF1253
 23511 95ff 01       		.byte	0x1
 23512 9600 3C       		.byte	0x3c
 23513 9601 2F       		.byte	0x2f
 23514 9602 12960000 		.long	0x9612
 23515 9606 13       		.uleb128 0x13
 23516 9607 00000000 		.long	.LASF494
 23517 960b 3C       		.byte	0x3c
 23518 960c 30       		.byte	0x30
 23519 960d D0AD0000 		.long	0xadd0
 23520 9611 00       		.byte	0
 23521 9612 8601     		.uleb128 0x86
 23522 9614 00000000 		.long	.LASF1254
 23523 9618 0F       		.byte	0xf
 23524 9619 30       		.byte	0x30
 23525 961a BFA40000 		.long	0xa4bf
 23526 961e 2D960000 		.long	0x962d
 23527 9622 09       		.uleb128 0x9
 23528 9623 A9B30000 		.long	0xb3a9
 23529 9627 09       		.uleb128 0x9
 23530 9628 D8800000 		.long	0x80d8
 23531 962c 00       		.byte	0
 23532 962d 8601     		.uleb128 0x86
 23533 962f 00000000 		.long	.LASF1255
 23534 9633 0F       		.byte	0xf
 23535 9634 41       		.byte	0x41
GAS LISTING /tmp/ccmMnd7l.s 			page 715


 23536 9635 BFA40000 		.long	0xa4bf
 23537 9639 48960000 		.long	0x9648
 23538 963d 09       		.uleb128 0x9
 23539 963e D8B30000 		.long	0xb3d8
 23540 9642 09       		.uleb128 0x9
 23541 9643 D8800000 		.long	0x80d8
 23542 9647 00       		.byte	0
 23543 9648 8601     		.uleb128 0x86
 23544 964a 00000000 		.long	.LASF1256
 23545 964e 0F       		.byte	0xf
 23546 964f 4E       		.byte	0x4e
 23547 9650 BFA40000 		.long	0xa4bf
 23548 9654 63960000 		.long	0x9663
 23549 9658 09       		.uleb128 0x9
 23550 9659 D8B30000 		.long	0xb3d8
 23551 965d 09       		.uleb128 0x9
 23552 965e D8800000 		.long	0x80d8
 23553 9662 00       		.byte	0
 23554 9663 76       		.uleb128 0x76
 23555 9664 00000000 		.long	.LASF1257
 23556 9668 0B       		.byte	0xb
 23557 9669 3D03     		.value	0x33d
 23558 966b E0800000 		.long	0x80e0
 23559 966f 90960000 		.long	0x9690
 23560 9673 35       		.uleb128 0x35
 23561 9674 00000000 		.long	.LASF743
 23562 9678 01AD0000 		.long	0xad01
 23563 967c 35       		.uleb128 0x35
 23564 967d 00000000 		.long	.LASF1144
 23565 9681 2E370000 		.long	0x372e
 23566 9685 09       		.uleb128 0x9
 23567 9686 4FBF0000 		.long	0xbf4f
 23568 968a 09       		.uleb128 0x9
 23569 968b 4FBF0000 		.long	0xbf4f
 23570 968f 00       		.byte	0
 23571 9690 76       		.uleb128 0x76
 23572 9691 00000000 		.long	.LASF1258
 23573 9695 0B       		.byte	0xb
 23574 9696 3603     		.value	0x336
 23575 9698 E0800000 		.long	0x80e0
 23576 969c C6960000 		.long	0x96c6
 23577 96a0 35       		.uleb128 0x35
 23578 96a1 00000000 		.long	.LASF1259
 23579 96a5 01AD0000 		.long	0xad01
 23580 96a9 35       		.uleb128 0x35
 23581 96aa 00000000 		.long	.LASF1260
 23582 96ae 07AD0000 		.long	0xad07
 23583 96b2 35       		.uleb128 0x35
 23584 96b3 00000000 		.long	.LASF1144
 23585 96b7 2E370000 		.long	0x372e
 23586 96bb 09       		.uleb128 0x9
 23587 96bc 4FBF0000 		.long	0xbf4f
 23588 96c0 09       		.uleb128 0x9
 23589 96c1 01C00000 		.long	0xc001
 23590 96c5 00       		.byte	0
 23591 96c6 76       		.uleb128 0x76
 23592 96c7 00000000 		.long	.LASF1261
GAS LISTING /tmp/ccmMnd7l.s 			page 716


 23593 96cb 0B       		.byte	0xb
 23594 96cc 4C03     		.value	0x34c
 23595 96ce E0800000 		.long	0x80e0
 23596 96d2 F3960000 		.long	0x96f3
 23597 96d6 35       		.uleb128 0x35
 23598 96d7 00000000 		.long	.LASF743
 23599 96db 01AD0000 		.long	0xad01
 23600 96df 35       		.uleb128 0x35
 23601 96e0 00000000 		.long	.LASF1144
 23602 96e4 2E370000 		.long	0x372e
 23603 96e8 09       		.uleb128 0x9
 23604 96e9 4FBF0000 		.long	0xbf4f
 23605 96ed 09       		.uleb128 0x9
 23606 96ee 4FBF0000 		.long	0xbf4f
 23607 96f2 00       		.byte	0
 23608 96f3 76       		.uleb128 0x76
 23609 96f4 00000000 		.long	.LASF1262
 23610 96f8 0B       		.byte	0xb
 23611 96f9 8F03     		.value	0x38f
 23612 96fb FB8C0000 		.long	0x8cfb
 23613 96ff 20970000 		.long	0x9720
 23614 9703 35       		.uleb128 0x35
 23615 9704 00000000 		.long	.LASF743
 23616 9708 01AD0000 		.long	0xad01
 23617 970c 35       		.uleb128 0x35
 23618 970d 00000000 		.long	.LASF1144
 23619 9711 2E370000 		.long	0x372e
 23620 9715 09       		.uleb128 0x9
 23621 9716 4FBF0000 		.long	0xbf4f
 23622 971a 09       		.uleb128 0x9
 23623 971b 4FBF0000 		.long	0xbf4f
 23624 971f 00       		.byte	0
 23625 9720 76       		.uleb128 0x76
 23626 9721 00000000 		.long	.LASF1263
 23627 9725 0B       		.byte	0xb
 23628 9726 3D03     		.value	0x33d
 23629 9728 E0800000 		.long	0x80e0
 23630 972c 4D970000 		.long	0x974d
 23631 9730 35       		.uleb128 0x35
 23632 9731 00000000 		.long	.LASF743
 23633 9735 D0AD0000 		.long	0xadd0
 23634 9739 35       		.uleb128 0x35
 23635 973a 00000000 		.long	.LASF1144
 23636 973e A0470000 		.long	0x47a0
 23637 9742 09       		.uleb128 0x9
 23638 9743 8DD30000 		.long	0xd38d
 23639 9747 09       		.uleb128 0x9
 23640 9748 8DD30000 		.long	0xd38d
 23641 974c 00       		.byte	0
 23642 974d 75       		.uleb128 0x75
 23643 974e 00000000 		.long	.LASF1264
 23644 9752 0B       		.byte	0xb
 23645 9753 2F03     		.value	0x32f
 23646 9755 E0800000 		.long	0x80e0
 23647 9759 35       		.uleb128 0x35
 23648 975a 00000000 		.long	.LASF743
 23649 975e 01AD0000 		.long	0xad01
GAS LISTING /tmp/ccmMnd7l.s 			page 717


 23650 9762 35       		.uleb128 0x35
 23651 9763 00000000 		.long	.LASF1144
 23652 9767 2E370000 		.long	0x372e
 23653 976b 09       		.uleb128 0x9
 23654 976c 4FBF0000 		.long	0xbf4f
 23655 9770 09       		.uleb128 0x9
 23656 9771 4FBF0000 		.long	0xbf4f
 23657 9775 00       		.byte	0
 23658 9776 00       		.byte	0
 23659 9777 02       		.uleb128 0x2
 23660 9778 10       		.byte	0x10
 23661 9779 04       		.byte	0x4
 23662 977a 00000000 		.long	.LASF1265
 23663 977e 04       		.uleb128 0x4
 23664 977f 00000000 		.long	.LASF1266
 23665 9783 3D       		.byte	0x3d
 23666 9784 37       		.byte	0x37
 23667 9785 92970000 		.long	0x9792
 23668 9789 8701     		.uleb128 0x87
 23669 978b 3D       		.byte	0x3d
 23670 978c 38       		.byte	0x38
 23671 978d D0020000 		.long	0x2d0
 23672 9791 00       		.byte	0
 23673 9792 13       		.uleb128 0x13
 23674 9793 00000000 		.long	.LASF1267
 23675 9797 3E       		.byte	0x3e
 23676 9798 31       		.byte	0x31
 23677 9799 9D970000 		.long	0x979d
 23678 979d 24       		.uleb128 0x24
 23679 979e 00000000 		.long	.LASF1268
 23680 97a2 D8       		.byte	0xd8
 23681 97a3 3F       		.byte	0x3f
 23682 97a4 0F01     		.value	0x10f
 23683 97a6 24990000 		.long	0x9924
 23684 97aa 26       		.uleb128 0x26
 23685 97ab 00000000 		.long	.LASF1269
 23686 97af 3F       		.byte	0x3f
 23687 97b0 1001     		.value	0x110
 23688 97b2 D8800000 		.long	0x80d8
 23689 97b6 00       		.byte	0
 23690 97b7 26       		.uleb128 0x26
 23691 97b8 00000000 		.long	.LASF1270
 23692 97bc 3F       		.byte	0x3f
 23693 97bd 1501     		.value	0x115
 23694 97bf 289D0000 		.long	0x9d28
 23695 97c3 08       		.byte	0x8
 23696 97c4 26       		.uleb128 0x26
 23697 97c5 00000000 		.long	.LASF1271
 23698 97c9 3F       		.byte	0x3f
 23699 97ca 1601     		.value	0x116
 23700 97cc 289D0000 		.long	0x9d28
 23701 97d0 10       		.byte	0x10
 23702 97d1 26       		.uleb128 0x26
 23703 97d2 00000000 		.long	.LASF1272
 23704 97d6 3F       		.byte	0x3f
 23705 97d7 1701     		.value	0x117
 23706 97d9 289D0000 		.long	0x9d28
GAS LISTING /tmp/ccmMnd7l.s 			page 718


 23707 97dd 18       		.byte	0x18
 23708 97de 26       		.uleb128 0x26
 23709 97df 00000000 		.long	.LASF1273
 23710 97e3 3F       		.byte	0x3f
 23711 97e4 1801     		.value	0x118
 23712 97e6 289D0000 		.long	0x9d28
 23713 97ea 20       		.byte	0x20
 23714 97eb 26       		.uleb128 0x26
 23715 97ec 00000000 		.long	.LASF1274
 23716 97f0 3F       		.byte	0x3f
 23717 97f1 1901     		.value	0x119
 23718 97f3 289D0000 		.long	0x9d28
 23719 97f7 28       		.byte	0x28
 23720 97f8 26       		.uleb128 0x26
 23721 97f9 00000000 		.long	.LASF1275
 23722 97fd 3F       		.byte	0x3f
 23723 97fe 1A01     		.value	0x11a
 23724 9800 289D0000 		.long	0x9d28
 23725 9804 30       		.byte	0x30
 23726 9805 26       		.uleb128 0x26
 23727 9806 00000000 		.long	.LASF1276
 23728 980a 3F       		.byte	0x3f
 23729 980b 1B01     		.value	0x11b
 23730 980d 289D0000 		.long	0x9d28
 23731 9811 38       		.byte	0x38
 23732 9812 26       		.uleb128 0x26
 23733 9813 00000000 		.long	.LASF1277
 23734 9817 3F       		.byte	0x3f
 23735 9818 1C01     		.value	0x11c
 23736 981a 289D0000 		.long	0x9d28
 23737 981e 40       		.byte	0x40
 23738 981f 26       		.uleb128 0x26
 23739 9820 00000000 		.long	.LASF1278
 23740 9824 3F       		.byte	0x3f
 23741 9825 1E01     		.value	0x11e
 23742 9827 289D0000 		.long	0x9d28
 23743 982b 48       		.byte	0x48
 23744 982c 26       		.uleb128 0x26
 23745 982d 00000000 		.long	.LASF1279
 23746 9831 3F       		.byte	0x3f
 23747 9832 1F01     		.value	0x11f
 23748 9834 289D0000 		.long	0x9d28
 23749 9838 50       		.byte	0x50
 23750 9839 26       		.uleb128 0x26
 23751 983a 00000000 		.long	.LASF1280
 23752 983e 3F       		.byte	0x3f
 23753 983f 2001     		.value	0x120
 23754 9841 289D0000 		.long	0x9d28
 23755 9845 58       		.byte	0x58
 23756 9846 26       		.uleb128 0x26
 23757 9847 00000000 		.long	.LASF1281
 23758 984b 3F       		.byte	0x3f
 23759 984c 2201     		.value	0x122
 23760 984e E1A80000 		.long	0xa8e1
 23761 9852 60       		.byte	0x60
 23762 9853 26       		.uleb128 0x26
 23763 9854 00000000 		.long	.LASF1282
GAS LISTING /tmp/ccmMnd7l.s 			page 719


 23764 9858 3F       		.byte	0x3f
 23765 9859 2401     		.value	0x124
 23766 985b E7A80000 		.long	0xa8e7
 23767 985f 68       		.byte	0x68
 23768 9860 26       		.uleb128 0x26
 23769 9861 00000000 		.long	.LASF1283
 23770 9865 3F       		.byte	0x3f
 23771 9866 2601     		.value	0x126
 23772 9868 D8800000 		.long	0x80d8
 23773 986c 70       		.byte	0x70
 23774 986d 26       		.uleb128 0x26
 23775 986e 00000000 		.long	.LASF1284
 23776 9872 3F       		.byte	0x3f
 23777 9873 2A01     		.value	0x12a
 23778 9875 D8800000 		.long	0x80d8
 23779 9879 74       		.byte	0x74
 23780 987a 26       		.uleb128 0x26
 23781 987b 00000000 		.long	.LASF1285
 23782 987f 3F       		.byte	0x3f
 23783 9880 2C01     		.value	0x12c
 23784 9882 97A40000 		.long	0xa497
 23785 9886 78       		.byte	0x78
 23786 9887 26       		.uleb128 0x26
 23787 9888 00000000 		.long	.LASF1286
 23788 988c 3F       		.byte	0x3f
 23789 988d 3001     		.value	0x130
 23790 988f 11810000 		.long	0x8111
 23791 9893 80       		.byte	0x80
 23792 9894 26       		.uleb128 0x26
 23793 9895 00000000 		.long	.LASF1287
 23794 9899 3F       		.byte	0x3f
 23795 989a 3101     		.value	0x131
 23796 989c 26810000 		.long	0x8126
 23797 98a0 82       		.byte	0x82
 23798 98a1 26       		.uleb128 0x26
 23799 98a2 00000000 		.long	.LASF1288
 23800 98a6 3F       		.byte	0x3f
 23801 98a7 3201     		.value	0x132
 23802 98a9 EDA80000 		.long	0xa8ed
 23803 98ad 83       		.byte	0x83
 23804 98ae 26       		.uleb128 0x26
 23805 98af 00000000 		.long	.LASF1289
 23806 98b3 3F       		.byte	0x3f
 23807 98b4 3601     		.value	0x136
 23808 98b6 FFA80000 		.long	0xa8ff
 23809 98ba 88       		.byte	0x88
 23810 98bb 26       		.uleb128 0x26
 23811 98bc 00000000 		.long	.LASF1290
 23812 98c0 3F       		.byte	0x3f
 23813 98c1 3F01     		.value	0x13f
 23814 98c3 A2A40000 		.long	0xa4a2
 23815 98c7 90       		.byte	0x90
 23816 98c8 26       		.uleb128 0x26
 23817 98c9 00000000 		.long	.LASF1291
 23818 98cd 3F       		.byte	0x3f
 23819 98ce 4801     		.value	0x148
 23820 98d0 B1800000 		.long	0x80b1
GAS LISTING /tmp/ccmMnd7l.s 			page 720


 23821 98d4 98       		.byte	0x98
 23822 98d5 26       		.uleb128 0x26
 23823 98d6 00000000 		.long	.LASF1292
 23824 98da 3F       		.byte	0x3f
 23825 98db 4901     		.value	0x149
 23826 98dd B1800000 		.long	0x80b1
 23827 98e1 A0       		.byte	0xa0
 23828 98e2 26       		.uleb128 0x26
 23829 98e3 00000000 		.long	.LASF1293
 23830 98e7 3F       		.byte	0x3f
 23831 98e8 4A01     		.value	0x14a
 23832 98ea B1800000 		.long	0x80b1
 23833 98ee A8       		.byte	0xa8
 23834 98ef 26       		.uleb128 0x26
 23835 98f0 00000000 		.long	.LASF1294
 23836 98f4 3F       		.byte	0x3f
 23837 98f5 4B01     		.value	0x14b
 23838 98f7 B1800000 		.long	0x80b1
 23839 98fb B0       		.byte	0xb0
 23840 98fc 26       		.uleb128 0x26
 23841 98fd 00000000 		.long	.LASF1295
 23842 9901 3F       		.byte	0x3f
 23843 9902 4C01     		.value	0x14c
 23844 9904 73990000 		.long	0x9973
 23845 9908 B8       		.byte	0xb8
 23846 9909 26       		.uleb128 0x26
 23847 990a 00000000 		.long	.LASF1296
 23848 990e 3F       		.byte	0x3f
 23849 990f 4E01     		.value	0x14e
 23850 9911 D8800000 		.long	0x80d8
 23851 9915 C0       		.byte	0xc0
 23852 9916 26       		.uleb128 0x26
 23853 9917 00000000 		.long	.LASF1297
 23854 991b 3F       		.byte	0x3f
 23855 991c 5001     		.value	0x150
 23856 991e 05A90000 		.long	0xa905
 23857 9922 C4       		.byte	0xc4
 23858 9923 00       		.byte	0
 23859 9924 13       		.uleb128 0x13
 23860 9925 00000000 		.long	.LASF1298
 23861 9929 3E       		.byte	0x3e
 23862 992a 41       		.byte	0x41
 23863 992b 9D970000 		.long	0x979d
 23864 992f 02       		.uleb128 0x2
 23865 9930 08       		.byte	0x8
 23866 9931 07       		.byte	0x7
 23867 9932 00000000 		.long	.LASF1299
 23868 9936 16       		.uleb128 0x16
 23869 9937 00000000 		.long	.LASF1300
 23870 993b 18       		.byte	0x18
 23871 993c 40       		.byte	0x40
 23872 993d 00       		.byte	0
 23873 993e 73990000 		.long	0x9973
 23874 9942 06       		.uleb128 0x6
 23875 9943 00000000 		.long	.LASF1301
 23876 9947 40       		.byte	0x40
 23877 9948 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 721


 23878 9949 18810000 		.long	0x8118
 23879 994d 00       		.byte	0
 23880 994e 06       		.uleb128 0x6
 23881 994f 00000000 		.long	.LASF1302
 23882 9953 40       		.byte	0x40
 23883 9954 00       		.byte	0
 23884 9955 18810000 		.long	0x8118
 23885 9959 04       		.byte	0x4
 23886 995a 06       		.uleb128 0x6
 23887 995b 00000000 		.long	.LASF1303
 23888 995f 40       		.byte	0x40
 23889 9960 00       		.byte	0
 23890 9961 B1800000 		.long	0x80b1
 23891 9965 08       		.byte	0x8
 23892 9966 06       		.uleb128 0x6
 23893 9967 00000000 		.long	.LASF1304
 23894 996b 40       		.byte	0x40
 23895 996c 00       		.byte	0
 23896 996d B1800000 		.long	0x80b1
 23897 9971 10       		.byte	0x10
 23898 9972 00       		.byte	0
 23899 9973 13       		.uleb128 0x13
 23900 9974 00000000 		.long	.LASF53
 23901 9978 41       		.byte	0x41
 23902 9979 D4       		.byte	0xd4
 23903 997a 03810000 		.long	0x8103
 23904 997e 5C       		.uleb128 0x5c
 23905 997f 00000000 		.long	.LASF1305
 23906 9983 41       		.byte	0x41
 23907 9984 6101     		.value	0x161
 23908 9986 18810000 		.long	0x8118
 23909 998a 8801     		.uleb128 0x88
 23910 998c 08       		.byte	0x8
 23911 998d 42       		.byte	0x42
 23912 998e 54       		.byte	0x54
 23913 998f 00000000 		.long	.LASF1445
 23914 9993 D2990000 		.long	0x99d2
 23915 9997 8901     		.uleb128 0x89
 23916 9999 04       		.byte	0x4
 23917 999a 42       		.byte	0x42
 23918 999b 57       		.byte	0x57
 23919 999c B9990000 		.long	0x99b9
 23920 99a0 8A01     		.uleb128 0x8a
 23921 99a2 00000000 		.long	.LASF1306
 23922 99a6 42       		.byte	0x42
 23923 99a7 59       		.byte	0x59
 23924 99a8 18810000 		.long	0x8118
 23925 99ac 8A01     		.uleb128 0x8a
 23926 99ae 00000000 		.long	.LASF1307
 23927 99b2 42       		.byte	0x42
 23928 99b3 5D       		.byte	0x5d
 23929 99b4 D2990000 		.long	0x99d2
 23930 99b8 00       		.byte	0
 23931 99b9 06       		.uleb128 0x6
 23932 99ba 00000000 		.long	.LASF1308
 23933 99be 42       		.byte	0x42
 23934 99bf 55       		.byte	0x55
GAS LISTING /tmp/ccmMnd7l.s 			page 722


 23935 99c0 D8800000 		.long	0x80d8
 23936 99c4 00       		.byte	0
 23937 99c5 06       		.uleb128 0x6
 23938 99c6 00000000 		.long	.LASF1309
 23939 99ca 42       		.byte	0x42
 23940 99cb 5E       		.byte	0x5e
 23941 99cc 97990000 		.long	0x9997
 23942 99d0 04       		.byte	0x4
 23943 99d1 00       		.byte	0
 23944 99d2 8B01     		.uleb128 0x8b
 23945 99d4 E4990000 		.long	0x99e4
 23946 99d8 E4990000 		.long	0x99e4
 23947 99dc 8C01     		.uleb128 0x8c
 23948 99de 2F990000 		.long	0x992f
 23949 99e2 03       		.byte	0x3
 23950 99e3 00       		.byte	0
 23951 99e4 02       		.uleb128 0x2
 23952 99e5 01       		.byte	0x1
 23953 99e6 06       		.byte	0x6
 23954 99e7 00000000 		.long	.LASF1310
 23955 99eb 13       		.uleb128 0x13
 23956 99ec 00000000 		.long	.LASF1311
 23957 99f0 42       		.byte	0x42
 23958 99f1 5F       		.byte	0x5f
 23959 99f2 8A990000 		.long	0x998a
 23960 99f6 13       		.uleb128 0x13
 23961 99f7 00000000 		.long	.LASF1312
 23962 99fb 42       		.byte	0x42
 23963 99fc 6A       		.byte	0x6a
 23964 99fd EB990000 		.long	0x99eb
 23965 9a01 11       		.uleb128 0x11
 23966 9a02 D8800000 		.long	0x80d8
 23967 9a06 7E       		.uleb128 0x7e
 23968 9a07 08       		.byte	0x8
 23969 9a08 0C9A0000 		.long	0x9a0c
 23970 9a0c 11       		.uleb128 0x11
 23971 9a0d E4990000 		.long	0x99e4
 23972 9a11 76       		.uleb128 0x76
 23973 9a12 00000000 		.long	.LASF1313
 23974 9a16 42       		.byte	0x42
 23975 9a17 8201     		.value	0x182
 23976 9a19 7E990000 		.long	0x997e
 23977 9a1d 279A0000 		.long	0x9a27
 23978 9a21 09       		.uleb128 0x9
 23979 9a22 D8800000 		.long	0x80d8
 23980 9a26 00       		.byte	0
 23981 9a27 76       		.uleb128 0x76
 23982 9a28 00000000 		.long	.LASF1314
 23983 9a2c 42       		.byte	0x42
 23984 9a2d E702     		.value	0x2e7
 23985 9a2f 7E990000 		.long	0x997e
 23986 9a33 3D9A0000 		.long	0x9a3d
 23987 9a37 09       		.uleb128 0x9
 23988 9a38 3D9A0000 		.long	0x9a3d
 23989 9a3c 00       		.byte	0
 23990 9a3d 7E       		.uleb128 0x7e
 23991 9a3e 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 723


 23992 9a3f 24990000 		.long	0x9924
 23993 9a43 76       		.uleb128 0x76
 23994 9a44 00000000 		.long	.LASF1315
 23995 9a48 42       		.byte	0x42
 23996 9a49 0403     		.value	0x304
 23997 9a4b 639A0000 		.long	0x9a63
 23998 9a4f 639A0000 		.long	0x9a63
 23999 9a53 09       		.uleb128 0x9
 24000 9a54 639A0000 		.long	0x9a63
 24001 9a58 09       		.uleb128 0x9
 24002 9a59 D8800000 		.long	0x80d8
 24003 9a5d 09       		.uleb128 0x9
 24004 9a5e 3D9A0000 		.long	0x9a3d
 24005 9a62 00       		.byte	0
 24006 9a63 7E       		.uleb128 0x7e
 24007 9a64 08       		.byte	0x8
 24008 9a65 699A0000 		.long	0x9a69
 24009 9a69 02       		.uleb128 0x2
 24010 9a6a 04       		.byte	0x4
 24011 9a6b 05       		.byte	0x5
 24012 9a6c 00000000 		.long	.LASF1316
 24013 9a70 76       		.uleb128 0x76
 24014 9a71 00000000 		.long	.LASF1317
 24015 9a75 42       		.byte	0x42
 24016 9a76 F502     		.value	0x2f5
 24017 9a78 7E990000 		.long	0x997e
 24018 9a7c 8B9A0000 		.long	0x9a8b
 24019 9a80 09       		.uleb128 0x9
 24020 9a81 699A0000 		.long	0x9a69
 24021 9a85 09       		.uleb128 0x9
 24022 9a86 3D9A0000 		.long	0x9a3d
 24023 9a8a 00       		.byte	0
 24024 9a8b 76       		.uleb128 0x76
 24025 9a8c 00000000 		.long	.LASF1318
 24026 9a90 42       		.byte	0x42
 24027 9a91 0B03     		.value	0x30b
 24028 9a93 D8800000 		.long	0x80d8
 24029 9a97 A69A0000 		.long	0x9aa6
 24030 9a9b 09       		.uleb128 0x9
 24031 9a9c A69A0000 		.long	0x9aa6
 24032 9aa0 09       		.uleb128 0x9
 24033 9aa1 3D9A0000 		.long	0x9a3d
 24034 9aa5 00       		.byte	0
 24035 9aa6 7E       		.uleb128 0x7e
 24036 9aa7 08       		.byte	0x8
 24037 9aa8 AC9A0000 		.long	0x9aac
 24038 9aac 11       		.uleb128 0x11
 24039 9aad 699A0000 		.long	0x9a69
 24040 9ab1 76       		.uleb128 0x76
 24041 9ab2 00000000 		.long	.LASF1319
 24042 9ab6 42       		.byte	0x42
 24043 9ab7 4902     		.value	0x249
 24044 9ab9 D8800000 		.long	0x80d8
 24045 9abd CC9A0000 		.long	0x9acc
 24046 9ac1 09       		.uleb128 0x9
 24047 9ac2 3D9A0000 		.long	0x9a3d
 24048 9ac6 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 724


 24049 9ac7 D8800000 		.long	0x80d8
 24050 9acb 00       		.byte	0
 24051 9acc 76       		.uleb128 0x76
 24052 9acd 00000000 		.long	.LASF1320
 24053 9ad1 42       		.byte	0x42
 24054 9ad2 5002     		.value	0x250
 24055 9ad4 D8800000 		.long	0x80d8
 24056 9ad8 E89A0000 		.long	0x9ae8
 24057 9adc 09       		.uleb128 0x9
 24058 9add 3D9A0000 		.long	0x9a3d
 24059 9ae1 09       		.uleb128 0x9
 24060 9ae2 A69A0000 		.long	0x9aa6
 24061 9ae6 3A       		.uleb128 0x3a
 24062 9ae7 00       		.byte	0
 24063 9ae8 76       		.uleb128 0x76
 24064 9ae9 00000000 		.long	.LASF1321
 24065 9aed 42       		.byte	0x42
 24066 9aee 7902     		.value	0x279
 24067 9af0 D8800000 		.long	0x80d8
 24068 9af4 049B0000 		.long	0x9b04
 24069 9af8 09       		.uleb128 0x9
 24070 9af9 3D9A0000 		.long	0x9a3d
 24071 9afd 09       		.uleb128 0x9
 24072 9afe A69A0000 		.long	0x9aa6
 24073 9b02 3A       		.uleb128 0x3a
 24074 9b03 00       		.byte	0
 24075 9b04 76       		.uleb128 0x76
 24076 9b05 00000000 		.long	.LASF1322
 24077 9b09 42       		.byte	0x42
 24078 9b0a E802     		.value	0x2e8
 24079 9b0c 7E990000 		.long	0x997e
 24080 9b10 1A9B0000 		.long	0x9b1a
 24081 9b14 09       		.uleb128 0x9
 24082 9b15 3D9A0000 		.long	0x9a3d
 24083 9b19 00       		.byte	0
 24084 9b1a 8D01     		.uleb128 0x8d
 24085 9b1c 00000000 		.long	.LASF1323
 24086 9b20 42       		.byte	0x42
 24087 9b21 EE02     		.value	0x2ee
 24088 9b23 7E990000 		.long	0x997e
 24089 9b27 76       		.uleb128 0x76
 24090 9b28 00000000 		.long	.LASF1324
 24091 9b2c 42       		.byte	0x42
 24092 9b2d 8D01     		.value	0x18d
 24093 9b2f 73990000 		.long	0x9973
 24094 9b33 479B0000 		.long	0x9b47
 24095 9b37 09       		.uleb128 0x9
 24096 9b38 069A0000 		.long	0x9a06
 24097 9b3c 09       		.uleb128 0x9
 24098 9b3d 73990000 		.long	0x9973
 24099 9b41 09       		.uleb128 0x9
 24100 9b42 479B0000 		.long	0x9b47
 24101 9b46 00       		.byte	0
 24102 9b47 7E       		.uleb128 0x7e
 24103 9b48 08       		.byte	0x8
 24104 9b49 F6990000 		.long	0x99f6
 24105 9b4d 76       		.uleb128 0x76
GAS LISTING /tmp/ccmMnd7l.s 			page 725


 24106 9b4e 00000000 		.long	.LASF1325
 24107 9b52 42       		.byte	0x42
 24108 9b53 6B01     		.value	0x16b
 24109 9b55 73990000 		.long	0x9973
 24110 9b59 729B0000 		.long	0x9b72
 24111 9b5d 09       		.uleb128 0x9
 24112 9b5e 639A0000 		.long	0x9a63
 24113 9b62 09       		.uleb128 0x9
 24114 9b63 069A0000 		.long	0x9a06
 24115 9b67 09       		.uleb128 0x9
 24116 9b68 73990000 		.long	0x9973
 24117 9b6c 09       		.uleb128 0x9
 24118 9b6d 479B0000 		.long	0x9b47
 24119 9b71 00       		.byte	0
 24120 9b72 76       		.uleb128 0x76
 24121 9b73 00000000 		.long	.LASF1326
 24122 9b77 42       		.byte	0x42
 24123 9b78 6701     		.value	0x167
 24124 9b7a D8800000 		.long	0x80d8
 24125 9b7e 889B0000 		.long	0x9b88
 24126 9b82 09       		.uleb128 0x9
 24127 9b83 889B0000 		.long	0x9b88
 24128 9b87 00       		.byte	0
 24129 9b88 7E       		.uleb128 0x7e
 24130 9b89 08       		.byte	0x8
 24131 9b8a 8E9B0000 		.long	0x9b8e
 24132 9b8e 11       		.uleb128 0x11
 24133 9b8f F6990000 		.long	0x99f6
 24134 9b93 76       		.uleb128 0x76
 24135 9b94 00000000 		.long	.LASF1327
 24136 9b98 42       		.byte	0x42
 24137 9b99 9601     		.value	0x196
 24138 9b9b 73990000 		.long	0x9973
 24139 9b9f B89B0000 		.long	0x9bb8
 24140 9ba3 09       		.uleb128 0x9
 24141 9ba4 639A0000 		.long	0x9a63
 24142 9ba8 09       		.uleb128 0x9
 24143 9ba9 B89B0000 		.long	0x9bb8
 24144 9bad 09       		.uleb128 0x9
 24145 9bae 73990000 		.long	0x9973
 24146 9bb2 09       		.uleb128 0x9
 24147 9bb3 479B0000 		.long	0x9b47
 24148 9bb7 00       		.byte	0
 24149 9bb8 7E       		.uleb128 0x7e
 24150 9bb9 08       		.byte	0x8
 24151 9bba 069A0000 		.long	0x9a06
 24152 9bbe 76       		.uleb128 0x76
 24153 9bbf 00000000 		.long	.LASF1328
 24154 9bc3 42       		.byte	0x42
 24155 9bc4 F602     		.value	0x2f6
 24156 9bc6 7E990000 		.long	0x997e
 24157 9bca D99B0000 		.long	0x9bd9
 24158 9bce 09       		.uleb128 0x9
 24159 9bcf 699A0000 		.long	0x9a69
 24160 9bd3 09       		.uleb128 0x9
 24161 9bd4 3D9A0000 		.long	0x9a3d
 24162 9bd8 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 726


 24163 9bd9 76       		.uleb128 0x76
 24164 9bda 00000000 		.long	.LASF1329
 24165 9bde 42       		.byte	0x42
 24166 9bdf FC02     		.value	0x2fc
 24167 9be1 7E990000 		.long	0x997e
 24168 9be5 EF9B0000 		.long	0x9bef
 24169 9be9 09       		.uleb128 0x9
 24170 9bea 699A0000 		.long	0x9a69
 24171 9bee 00       		.byte	0
 24172 9bef 76       		.uleb128 0x76
 24173 9bf0 00000000 		.long	.LASF1330
 24174 9bf4 42       		.byte	0x42
 24175 9bf5 5A02     		.value	0x25a
 24176 9bf7 D8800000 		.long	0x80d8
 24177 9bfb 109C0000 		.long	0x9c10
 24178 9bff 09       		.uleb128 0x9
 24179 9c00 639A0000 		.long	0x9a63
 24180 9c04 09       		.uleb128 0x9
 24181 9c05 73990000 		.long	0x9973
 24182 9c09 09       		.uleb128 0x9
 24183 9c0a A69A0000 		.long	0x9aa6
 24184 9c0e 3A       		.uleb128 0x3a
 24185 9c0f 00       		.byte	0
 24186 9c10 76       		.uleb128 0x76
 24187 9c11 00000000 		.long	.LASF1331
 24188 9c15 42       		.byte	0x42
 24189 9c16 8302     		.value	0x283
 24190 9c18 D8800000 		.long	0x80d8
 24191 9c1c 2C9C0000 		.long	0x9c2c
 24192 9c20 09       		.uleb128 0x9
 24193 9c21 A69A0000 		.long	0x9aa6
 24194 9c25 09       		.uleb128 0x9
 24195 9c26 A69A0000 		.long	0x9aa6
 24196 9c2a 3A       		.uleb128 0x3a
 24197 9c2b 00       		.byte	0
 24198 9c2c 76       		.uleb128 0x76
 24199 9c2d 00000000 		.long	.LASF1332
 24200 9c31 42       		.byte	0x42
 24201 9c32 1303     		.value	0x313
 24202 9c34 7E990000 		.long	0x997e
 24203 9c38 479C0000 		.long	0x9c47
 24204 9c3c 09       		.uleb128 0x9
 24205 9c3d 7E990000 		.long	0x997e
 24206 9c41 09       		.uleb128 0x9
 24207 9c42 3D9A0000 		.long	0x9a3d
 24208 9c46 00       		.byte	0
 24209 9c47 76       		.uleb128 0x76
 24210 9c48 00000000 		.long	.LASF1333
 24211 9c4c 42       		.byte	0x42
 24212 9c4d 6202     		.value	0x262
 24213 9c4f D8800000 		.long	0x80d8
 24214 9c53 679C0000 		.long	0x9c67
 24215 9c57 09       		.uleb128 0x9
 24216 9c58 3D9A0000 		.long	0x9a3d
 24217 9c5c 09       		.uleb128 0x9
 24218 9c5d A69A0000 		.long	0x9aa6
 24219 9c61 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 727


 24220 9c62 679C0000 		.long	0x9c67
 24221 9c66 00       		.byte	0
 24222 9c67 7E       		.uleb128 0x7e
 24223 9c68 08       		.byte	0x8
 24224 9c69 36990000 		.long	0x9936
 24225 9c6d 76       		.uleb128 0x76
 24226 9c6e 00000000 		.long	.LASF1334
 24227 9c72 42       		.byte	0x42
 24228 9c73 AF02     		.value	0x2af
 24229 9c75 D8800000 		.long	0x80d8
 24230 9c79 8D9C0000 		.long	0x9c8d
 24231 9c7d 09       		.uleb128 0x9
 24232 9c7e 3D9A0000 		.long	0x9a3d
 24233 9c82 09       		.uleb128 0x9
 24234 9c83 A69A0000 		.long	0x9aa6
 24235 9c87 09       		.uleb128 0x9
 24236 9c88 679C0000 		.long	0x9c67
 24237 9c8c 00       		.byte	0
 24238 9c8d 76       		.uleb128 0x76
 24239 9c8e 00000000 		.long	.LASF1335
 24240 9c92 42       		.byte	0x42
 24241 9c93 6F02     		.value	0x26f
 24242 9c95 D8800000 		.long	0x80d8
 24243 9c99 B29C0000 		.long	0x9cb2
 24244 9c9d 09       		.uleb128 0x9
 24245 9c9e 639A0000 		.long	0x9a63
 24246 9ca2 09       		.uleb128 0x9
 24247 9ca3 73990000 		.long	0x9973
 24248 9ca7 09       		.uleb128 0x9
 24249 9ca8 A69A0000 		.long	0x9aa6
 24250 9cac 09       		.uleb128 0x9
 24251 9cad 679C0000 		.long	0x9c67
 24252 9cb1 00       		.byte	0
 24253 9cb2 76       		.uleb128 0x76
 24254 9cb3 00000000 		.long	.LASF1336
 24255 9cb7 42       		.byte	0x42
 24256 9cb8 BB02     		.value	0x2bb
 24257 9cba D8800000 		.long	0x80d8
 24258 9cbe D29C0000 		.long	0x9cd2
 24259 9cc2 09       		.uleb128 0x9
 24260 9cc3 A69A0000 		.long	0x9aa6
 24261 9cc7 09       		.uleb128 0x9
 24262 9cc8 A69A0000 		.long	0x9aa6
 24263 9ccc 09       		.uleb128 0x9
 24264 9ccd 679C0000 		.long	0x9c67
 24265 9cd1 00       		.byte	0
 24266 9cd2 76       		.uleb128 0x76
 24267 9cd3 00000000 		.long	.LASF1337
 24268 9cd7 42       		.byte	0x42
 24269 9cd8 6A02     		.value	0x26a
 24270 9cda D8800000 		.long	0x80d8
 24271 9cde ED9C0000 		.long	0x9ced
 24272 9ce2 09       		.uleb128 0x9
 24273 9ce3 A69A0000 		.long	0x9aa6
 24274 9ce7 09       		.uleb128 0x9
 24275 9ce8 679C0000 		.long	0x9c67
 24276 9cec 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 728


 24277 9ced 76       		.uleb128 0x76
 24278 9cee 00000000 		.long	.LASF1338
 24279 9cf2 42       		.byte	0x42
 24280 9cf3 B702     		.value	0x2b7
 24281 9cf5 D8800000 		.long	0x80d8
 24282 9cf9 089D0000 		.long	0x9d08
 24283 9cfd 09       		.uleb128 0x9
 24284 9cfe A69A0000 		.long	0x9aa6
 24285 9d02 09       		.uleb128 0x9
 24286 9d03 679C0000 		.long	0x9c67
 24287 9d07 00       		.byte	0
 24288 9d08 76       		.uleb128 0x76
 24289 9d09 00000000 		.long	.LASF1339
 24290 9d0d 42       		.byte	0x42
 24291 9d0e 7001     		.value	0x170
 24292 9d10 73990000 		.long	0x9973
 24293 9d14 289D0000 		.long	0x9d28
 24294 9d18 09       		.uleb128 0x9
 24295 9d19 289D0000 		.long	0x9d28
 24296 9d1d 09       		.uleb128 0x9
 24297 9d1e 699A0000 		.long	0x9a69
 24298 9d22 09       		.uleb128 0x9
 24299 9d23 479B0000 		.long	0x9b47
 24300 9d27 00       		.byte	0
 24301 9d28 7E       		.uleb128 0x7e
 24302 9d29 08       		.byte	0x8
 24303 9d2a E4990000 		.long	0x99e4
 24304 9d2e 52       		.uleb128 0x52
 24305 9d2f 00000000 		.long	.LASF1340
 24306 9d33 42       		.byte	0x42
 24307 9d34 98       		.byte	0x98
 24308 9d35 639A0000 		.long	0x9a63
 24309 9d39 489D0000 		.long	0x9d48
 24310 9d3d 09       		.uleb128 0x9
 24311 9d3e 639A0000 		.long	0x9a63
 24312 9d42 09       		.uleb128 0x9
 24313 9d43 A69A0000 		.long	0x9aa6
 24314 9d47 00       		.byte	0
 24315 9d48 52       		.uleb128 0x52
 24316 9d49 00000000 		.long	.LASF1341
 24317 9d4d 42       		.byte	0x42
 24318 9d4e A0       		.byte	0xa0
 24319 9d4f D8800000 		.long	0x80d8
 24320 9d53 629D0000 		.long	0x9d62
 24321 9d57 09       		.uleb128 0x9
 24322 9d58 A69A0000 		.long	0x9aa6
 24323 9d5c 09       		.uleb128 0x9
 24324 9d5d A69A0000 		.long	0x9aa6
 24325 9d61 00       		.byte	0
 24326 9d62 52       		.uleb128 0x52
 24327 9d63 00000000 		.long	.LASF1342
 24328 9d67 42       		.byte	0x42
 24329 9d68 BD       		.byte	0xbd
 24330 9d69 D8800000 		.long	0x80d8
 24331 9d6d 7C9D0000 		.long	0x9d7c
 24332 9d71 09       		.uleb128 0x9
 24333 9d72 A69A0000 		.long	0x9aa6
GAS LISTING /tmp/ccmMnd7l.s 			page 729


 24334 9d76 09       		.uleb128 0x9
 24335 9d77 A69A0000 		.long	0x9aa6
 24336 9d7b 00       		.byte	0
 24337 9d7c 52       		.uleb128 0x52
 24338 9d7d 00000000 		.long	.LASF1343
 24339 9d81 42       		.byte	0x42
 24340 9d82 90       		.byte	0x90
 24341 9d83 639A0000 		.long	0x9a63
 24342 9d87 969D0000 		.long	0x9d96
 24343 9d8b 09       		.uleb128 0x9
 24344 9d8c 639A0000 		.long	0x9a63
 24345 9d90 09       		.uleb128 0x9
 24346 9d91 A69A0000 		.long	0x9aa6
 24347 9d95 00       		.byte	0
 24348 9d96 52       		.uleb128 0x52
 24349 9d97 00000000 		.long	.LASF1344
 24350 9d9b 42       		.byte	0x42
 24351 9d9c F9       		.byte	0xf9
 24352 9d9d 73990000 		.long	0x9973
 24353 9da1 B09D0000 		.long	0x9db0
 24354 9da5 09       		.uleb128 0x9
 24355 9da6 A69A0000 		.long	0x9aa6
 24356 9daa 09       		.uleb128 0x9
 24357 9dab A69A0000 		.long	0x9aa6
 24358 9daf 00       		.byte	0
 24359 9db0 76       		.uleb128 0x76
 24360 9db1 00000000 		.long	.LASF1345
 24361 9db5 42       		.byte	0x42
 24362 9db6 5503     		.value	0x355
 24363 9db8 73990000 		.long	0x9973
 24364 9dbc D59D0000 		.long	0x9dd5
 24365 9dc0 09       		.uleb128 0x9
 24366 9dc1 639A0000 		.long	0x9a63
 24367 9dc5 09       		.uleb128 0x9
 24368 9dc6 73990000 		.long	0x9973
 24369 9dca 09       		.uleb128 0x9
 24370 9dcb A69A0000 		.long	0x9aa6
 24371 9dcf 09       		.uleb128 0x9
 24372 9dd0 D59D0000 		.long	0x9dd5
 24373 9dd4 00       		.byte	0
 24374 9dd5 7E       		.uleb128 0x7e
 24375 9dd6 08       		.byte	0x8
 24376 9dd7 DB9D0000 		.long	0x9ddb
 24377 9ddb 11       		.uleb128 0x11
 24378 9ddc E09D0000 		.long	0x9de0
 24379 9de0 8E01     		.uleb128 0x8e
 24380 9de2 746D00   		.string	"tm"
 24381 9de5 38       		.byte	0x38
 24382 9de6 43       		.byte	0x43
 24383 9de7 85       		.byte	0x85
 24384 9de8 719E0000 		.long	0x9e71
 24385 9dec 06       		.uleb128 0x6
 24386 9ded 00000000 		.long	.LASF1346
 24387 9df1 43       		.byte	0x43
 24388 9df2 87       		.byte	0x87
 24389 9df3 D8800000 		.long	0x80d8
 24390 9df7 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 730


 24391 9df8 06       		.uleb128 0x6
 24392 9df9 00000000 		.long	.LASF1347
 24393 9dfd 43       		.byte	0x43
 24394 9dfe 88       		.byte	0x88
 24395 9dff D8800000 		.long	0x80d8
 24396 9e03 04       		.byte	0x4
 24397 9e04 06       		.uleb128 0x6
 24398 9e05 00000000 		.long	.LASF1348
 24399 9e09 43       		.byte	0x43
 24400 9e0a 89       		.byte	0x89
 24401 9e0b D8800000 		.long	0x80d8
 24402 9e0f 08       		.byte	0x8
 24403 9e10 06       		.uleb128 0x6
 24404 9e11 00000000 		.long	.LASF1349
 24405 9e15 43       		.byte	0x43
 24406 9e16 8A       		.byte	0x8a
 24407 9e17 D8800000 		.long	0x80d8
 24408 9e1b 0C       		.byte	0xc
 24409 9e1c 06       		.uleb128 0x6
 24410 9e1d 00000000 		.long	.LASF1350
 24411 9e21 43       		.byte	0x43
 24412 9e22 8B       		.byte	0x8b
 24413 9e23 D8800000 		.long	0x80d8
 24414 9e27 10       		.byte	0x10
 24415 9e28 06       		.uleb128 0x6
 24416 9e29 00000000 		.long	.LASF1351
 24417 9e2d 43       		.byte	0x43
 24418 9e2e 8C       		.byte	0x8c
 24419 9e2f D8800000 		.long	0x80d8
 24420 9e33 14       		.byte	0x14
 24421 9e34 06       		.uleb128 0x6
 24422 9e35 00000000 		.long	.LASF1352
 24423 9e39 43       		.byte	0x43
 24424 9e3a 8D       		.byte	0x8d
 24425 9e3b D8800000 		.long	0x80d8
 24426 9e3f 18       		.byte	0x18
 24427 9e40 06       		.uleb128 0x6
 24428 9e41 00000000 		.long	.LASF1353
 24429 9e45 43       		.byte	0x43
 24430 9e46 8E       		.byte	0x8e
 24431 9e47 D8800000 		.long	0x80d8
 24432 9e4b 1C       		.byte	0x1c
 24433 9e4c 06       		.uleb128 0x6
 24434 9e4d 00000000 		.long	.LASF1354
 24435 9e51 43       		.byte	0x43
 24436 9e52 8F       		.byte	0x8f
 24437 9e53 D8800000 		.long	0x80d8
 24438 9e57 20       		.byte	0x20
 24439 9e58 06       		.uleb128 0x6
 24440 9e59 00000000 		.long	.LASF1355
 24441 9e5d 43       		.byte	0x43
 24442 9e5e 92       		.byte	0x92
 24443 9e5f 34810000 		.long	0x8134
 24444 9e63 28       		.byte	0x28
 24445 9e64 06       		.uleb128 0x6
 24446 9e65 00000000 		.long	.LASF1356
 24447 9e69 43       		.byte	0x43
GAS LISTING /tmp/ccmMnd7l.s 			page 731


 24448 9e6a 93       		.byte	0x93
 24449 9e6b 069A0000 		.long	0x9a06
 24450 9e6f 30       		.byte	0x30
 24451 9e70 00       		.byte	0
 24452 9e71 76       		.uleb128 0x76
 24453 9e72 00000000 		.long	.LASF1357
 24454 9e76 42       		.byte	0x42
 24455 9e77 1C01     		.value	0x11c
 24456 9e79 73990000 		.long	0x9973
 24457 9e7d 879E0000 		.long	0x9e87
 24458 9e81 09       		.uleb128 0x9
 24459 9e82 A69A0000 		.long	0x9aa6
 24460 9e86 00       		.byte	0
 24461 9e87 52       		.uleb128 0x52
 24462 9e88 00000000 		.long	.LASF1358
 24463 9e8c 42       		.byte	0x42
 24464 9e8d 9B       		.byte	0x9b
 24465 9e8e 639A0000 		.long	0x9a63
 24466 9e92 A69E0000 		.long	0x9ea6
 24467 9e96 09       		.uleb128 0x9
 24468 9e97 639A0000 		.long	0x9a63
 24469 9e9b 09       		.uleb128 0x9
 24470 9e9c A69A0000 		.long	0x9aa6
 24471 9ea0 09       		.uleb128 0x9
 24472 9ea1 73990000 		.long	0x9973
 24473 9ea5 00       		.byte	0
 24474 9ea6 52       		.uleb128 0x52
 24475 9ea7 00000000 		.long	.LASF1359
 24476 9eab 42       		.byte	0x42
 24477 9eac A3       		.byte	0xa3
 24478 9ead D8800000 		.long	0x80d8
 24479 9eb1 C59E0000 		.long	0x9ec5
 24480 9eb5 09       		.uleb128 0x9
 24481 9eb6 A69A0000 		.long	0x9aa6
 24482 9eba 09       		.uleb128 0x9
 24483 9ebb A69A0000 		.long	0x9aa6
 24484 9ebf 09       		.uleb128 0x9
 24485 9ec0 73990000 		.long	0x9973
 24486 9ec4 00       		.byte	0
 24487 9ec5 52       		.uleb128 0x52
 24488 9ec6 00000000 		.long	.LASF1360
 24489 9eca 42       		.byte	0x42
 24490 9ecb 93       		.byte	0x93
 24491 9ecc 639A0000 		.long	0x9a63
 24492 9ed0 E49E0000 		.long	0x9ee4
 24493 9ed4 09       		.uleb128 0x9
 24494 9ed5 639A0000 		.long	0x9a63
 24495 9ed9 09       		.uleb128 0x9
 24496 9eda A69A0000 		.long	0x9aa6
 24497 9ede 09       		.uleb128 0x9
 24498 9edf 73990000 		.long	0x9973
 24499 9ee3 00       		.byte	0
 24500 9ee4 76       		.uleb128 0x76
 24501 9ee5 00000000 		.long	.LASF1361
 24502 9ee9 42       		.byte	0x42
 24503 9eea 9C01     		.value	0x19c
 24504 9eec 73990000 		.long	0x9973
GAS LISTING /tmp/ccmMnd7l.s 			page 732


 24505 9ef0 099F0000 		.long	0x9f09
 24506 9ef4 09       		.uleb128 0x9
 24507 9ef5 289D0000 		.long	0x9d28
 24508 9ef9 09       		.uleb128 0x9
 24509 9efa 099F0000 		.long	0x9f09
 24510 9efe 09       		.uleb128 0x9
 24511 9eff 73990000 		.long	0x9973
 24512 9f03 09       		.uleb128 0x9
 24513 9f04 479B0000 		.long	0x9b47
 24514 9f08 00       		.byte	0
 24515 9f09 7E       		.uleb128 0x7e
 24516 9f0a 08       		.byte	0x8
 24517 9f0b A69A0000 		.long	0x9aa6
 24518 9f0f 52       		.uleb128 0x52
 24519 9f10 00000000 		.long	.LASF1362
 24520 9f14 42       		.byte	0x42
 24521 9f15 FD       		.byte	0xfd
 24522 9f16 73990000 		.long	0x9973
 24523 9f1a 299F0000 		.long	0x9f29
 24524 9f1e 09       		.uleb128 0x9
 24525 9f1f A69A0000 		.long	0x9aa6
 24526 9f23 09       		.uleb128 0x9
 24527 9f24 A69A0000 		.long	0x9aa6
 24528 9f28 00       		.byte	0
 24529 9f29 76       		.uleb128 0x76
 24530 9f2a 00000000 		.long	.LASF1363
 24531 9f2e 42       		.byte	0x42
 24532 9f2f C001     		.value	0x1c0
 24533 9f31 29000000 		.long	0x29
 24534 9f35 449F0000 		.long	0x9f44
 24535 9f39 09       		.uleb128 0x9
 24536 9f3a A69A0000 		.long	0x9aa6
 24537 9f3e 09       		.uleb128 0x9
 24538 9f3f 449F0000 		.long	0x9f44
 24539 9f43 00       		.byte	0
 24540 9f44 7E       		.uleb128 0x7e
 24541 9f45 08       		.byte	0x8
 24542 9f46 639A0000 		.long	0x9a63
 24543 9f4a 76       		.uleb128 0x76
 24544 9f4b 00000000 		.long	.LASF1364
 24545 9f4f 42       		.byte	0x42
 24546 9f50 C701     		.value	0x1c7
 24547 9f52 30000000 		.long	0x30
 24548 9f56 659F0000 		.long	0x9f65
 24549 9f5a 09       		.uleb128 0x9
 24550 9f5b A69A0000 		.long	0x9aa6
 24551 9f5f 09       		.uleb128 0x9
 24552 9f60 449F0000 		.long	0x9f44
 24553 9f64 00       		.byte	0
 24554 9f65 76       		.uleb128 0x76
 24555 9f66 00000000 		.long	.LASF1365
 24556 9f6a 42       		.byte	0x42
 24557 9f6b 1701     		.value	0x117
 24558 9f6d 639A0000 		.long	0x9a63
 24559 9f71 859F0000 		.long	0x9f85
 24560 9f75 09       		.uleb128 0x9
 24561 9f76 639A0000 		.long	0x9a63
GAS LISTING /tmp/ccmMnd7l.s 			page 733


 24562 9f7a 09       		.uleb128 0x9
 24563 9f7b A69A0000 		.long	0x9aa6
 24564 9f7f 09       		.uleb128 0x9
 24565 9f80 449F0000 		.long	0x9f44
 24566 9f84 00       		.byte	0
 24567 9f85 76       		.uleb128 0x76
 24568 9f86 00000000 		.long	.LASF1366
 24569 9f8a 42       		.byte	0x42
 24570 9f8b D201     		.value	0x1d2
 24571 9f8d 34810000 		.long	0x8134
 24572 9f91 A59F0000 		.long	0x9fa5
 24573 9f95 09       		.uleb128 0x9
 24574 9f96 A69A0000 		.long	0x9aa6
 24575 9f9a 09       		.uleb128 0x9
 24576 9f9b 449F0000 		.long	0x9f44
 24577 9f9f 09       		.uleb128 0x9
 24578 9fa0 D8800000 		.long	0x80d8
 24579 9fa4 00       		.byte	0
 24580 9fa5 76       		.uleb128 0x76
 24581 9fa6 00000000 		.long	.LASF1367
 24582 9faa 42       		.byte	0x42
 24583 9fab D701     		.value	0x1d7
 24584 9fad 03810000 		.long	0x8103
 24585 9fb1 C59F0000 		.long	0x9fc5
 24586 9fb5 09       		.uleb128 0x9
 24587 9fb6 A69A0000 		.long	0x9aa6
 24588 9fba 09       		.uleb128 0x9
 24589 9fbb 449F0000 		.long	0x9f44
 24590 9fbf 09       		.uleb128 0x9
 24591 9fc0 D8800000 		.long	0x80d8
 24592 9fc4 00       		.byte	0
 24593 9fc5 52       		.uleb128 0x52
 24594 9fc6 00000000 		.long	.LASF1368
 24595 9fca 42       		.byte	0x42
 24596 9fcb C1       		.byte	0xc1
 24597 9fcc 73990000 		.long	0x9973
 24598 9fd0 E49F0000 		.long	0x9fe4
 24599 9fd4 09       		.uleb128 0x9
 24600 9fd5 639A0000 		.long	0x9a63
 24601 9fd9 09       		.uleb128 0x9
 24602 9fda A69A0000 		.long	0x9aa6
 24603 9fde 09       		.uleb128 0x9
 24604 9fdf 73990000 		.long	0x9973
 24605 9fe3 00       		.byte	0
 24606 9fe4 76       		.uleb128 0x76
 24607 9fe5 00000000 		.long	.LASF1369
 24608 9fe9 42       		.byte	0x42
 24609 9fea 8801     		.value	0x188
 24610 9fec D8800000 		.long	0x80d8
 24611 9ff0 FA9F0000 		.long	0x9ffa
 24612 9ff4 09       		.uleb128 0x9
 24613 9ff5 7E990000 		.long	0x997e
 24614 9ff9 00       		.byte	0
 24615 9ffa 76       		.uleb128 0x76
 24616 9ffb 00000000 		.long	.LASF1370
 24617 9fff 42       		.byte	0x42
 24618 a000 4201     		.value	0x142
GAS LISTING /tmp/ccmMnd7l.s 			page 734


 24619 a002 D8800000 		.long	0x80d8
 24620 a006 1AA00000 		.long	0xa01a
 24621 a00a 09       		.uleb128 0x9
 24622 a00b A69A0000 		.long	0x9aa6
 24623 a00f 09       		.uleb128 0x9
 24624 a010 A69A0000 		.long	0x9aa6
 24625 a014 09       		.uleb128 0x9
 24626 a015 73990000 		.long	0x9973
 24627 a019 00       		.byte	0
 24628 a01a 76       		.uleb128 0x76
 24629 a01b 00000000 		.long	.LASF1371
 24630 a01f 42       		.byte	0x42
 24631 a020 4701     		.value	0x147
 24632 a022 639A0000 		.long	0x9a63
 24633 a026 3AA00000 		.long	0xa03a
 24634 a02a 09       		.uleb128 0x9
 24635 a02b 639A0000 		.long	0x9a63
 24636 a02f 09       		.uleb128 0x9
 24637 a030 A69A0000 		.long	0x9aa6
 24638 a034 09       		.uleb128 0x9
 24639 a035 73990000 		.long	0x9973
 24640 a039 00       		.byte	0
 24641 a03a 76       		.uleb128 0x76
 24642 a03b 00000000 		.long	.LASF1372
 24643 a03f 42       		.byte	0x42
 24644 a040 4C01     		.value	0x14c
 24645 a042 639A0000 		.long	0x9a63
 24646 a046 5AA00000 		.long	0xa05a
 24647 a04a 09       		.uleb128 0x9
 24648 a04b 639A0000 		.long	0x9a63
 24649 a04f 09       		.uleb128 0x9
 24650 a050 A69A0000 		.long	0x9aa6
 24651 a054 09       		.uleb128 0x9
 24652 a055 73990000 		.long	0x9973
 24653 a059 00       		.byte	0
 24654 a05a 76       		.uleb128 0x76
 24655 a05b 00000000 		.long	.LASF1373
 24656 a05f 42       		.byte	0x42
 24657 a060 5001     		.value	0x150
 24658 a062 639A0000 		.long	0x9a63
 24659 a066 7AA00000 		.long	0xa07a
 24660 a06a 09       		.uleb128 0x9
 24661 a06b 639A0000 		.long	0x9a63
 24662 a06f 09       		.uleb128 0x9
 24663 a070 699A0000 		.long	0x9a69
 24664 a074 09       		.uleb128 0x9
 24665 a075 73990000 		.long	0x9973
 24666 a079 00       		.byte	0
 24667 a07a 76       		.uleb128 0x76
 24668 a07b 00000000 		.long	.LASF1374
 24669 a07f 42       		.byte	0x42
 24670 a080 5702     		.value	0x257
 24671 a082 D8800000 		.long	0x80d8
 24672 a086 91A00000 		.long	0xa091
 24673 a08a 09       		.uleb128 0x9
 24674 a08b A69A0000 		.long	0x9aa6
 24675 a08f 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccmMnd7l.s 			page 735


 24676 a090 00       		.byte	0
 24677 a091 76       		.uleb128 0x76
 24678 a092 00000000 		.long	.LASF1375
 24679 a096 42       		.byte	0x42
 24680 a097 8002     		.value	0x280
 24681 a099 D8800000 		.long	0x80d8
 24682 a09d A8A00000 		.long	0xa0a8
 24683 a0a1 09       		.uleb128 0x9
 24684 a0a2 A69A0000 		.long	0x9aa6
 24685 a0a6 3A       		.uleb128 0x3a
 24686 a0a7 00       		.byte	0
 24687 a0a8 4E       		.uleb128 0x4e
 24688 a0a9 00000000 		.long	.LASF1376
 24689 a0ad 42       		.byte	0x42
 24690 a0ae DD       		.byte	0xdd
 24691 a0af 00000000 		.long	.LASF1376
 24692 a0b3 A69A0000 		.long	0x9aa6
 24693 a0b7 C6A00000 		.long	0xa0c6
 24694 a0bb 09       		.uleb128 0x9
 24695 a0bc A69A0000 		.long	0x9aa6
 24696 a0c0 09       		.uleb128 0x9
 24697 a0c1 699A0000 		.long	0x9a69
 24698 a0c5 00       		.byte	0
 24699 a0c6 1E       		.uleb128 0x1e
 24700 a0c7 00000000 		.long	.LASF1377
 24701 a0cb 42       		.byte	0x42
 24702 a0cc 0301     		.value	0x103
 24703 a0ce 00000000 		.long	.LASF1377
 24704 a0d2 A69A0000 		.long	0x9aa6
 24705 a0d6 E5A00000 		.long	0xa0e5
 24706 a0da 09       		.uleb128 0x9
 24707 a0db A69A0000 		.long	0x9aa6
 24708 a0df 09       		.uleb128 0x9
 24709 a0e0 A69A0000 		.long	0x9aa6
 24710 a0e4 00       		.byte	0
 24711 a0e5 4E       		.uleb128 0x4e
 24712 a0e6 00000000 		.long	.LASF1378
 24713 a0ea 42       		.byte	0x42
 24714 a0eb E7       		.byte	0xe7
 24715 a0ec 00000000 		.long	.LASF1378
 24716 a0f0 A69A0000 		.long	0x9aa6
 24717 a0f4 03A10000 		.long	0xa103
 24718 a0f8 09       		.uleb128 0x9
 24719 a0f9 A69A0000 		.long	0x9aa6
 24720 a0fd 09       		.uleb128 0x9
 24721 a0fe 699A0000 		.long	0x9a69
 24722 a102 00       		.byte	0
 24723 a103 1E       		.uleb128 0x1e
 24724 a104 00000000 		.long	.LASF1379
 24725 a108 42       		.byte	0x42
 24726 a109 0E01     		.value	0x10e
 24727 a10b 00000000 		.long	.LASF1379
 24728 a10f A69A0000 		.long	0x9aa6
 24729 a113 22A10000 		.long	0xa122
 24730 a117 09       		.uleb128 0x9
 24731 a118 A69A0000 		.long	0x9aa6
 24732 a11c 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 736


 24733 a11d A69A0000 		.long	0x9aa6
 24734 a121 00       		.byte	0
 24735 a122 1E       		.uleb128 0x1e
 24736 a123 00000000 		.long	.LASF1380
 24737 a127 42       		.byte	0x42
 24738 a128 3901     		.value	0x139
 24739 a12a 00000000 		.long	.LASF1380
 24740 a12e A69A0000 		.long	0x9aa6
 24741 a132 46A10000 		.long	0xa146
 24742 a136 09       		.uleb128 0x9
 24743 a137 A69A0000 		.long	0x9aa6
 24744 a13b 09       		.uleb128 0x9
 24745 a13c 699A0000 		.long	0x9a69
 24746 a140 09       		.uleb128 0x9
 24747 a141 73990000 		.long	0x9973
 24748 a145 00       		.byte	0
 24749 a146 76       		.uleb128 0x76
 24750 a147 00000000 		.long	.LASF1381
 24751 a14b 42       		.byte	0x42
 24752 a14c C901     		.value	0x1c9
 24753 a14e 77970000 		.long	0x9777
 24754 a152 61A10000 		.long	0xa161
 24755 a156 09       		.uleb128 0x9
 24756 a157 A69A0000 		.long	0x9aa6
 24757 a15b 09       		.uleb128 0x9
 24758 a15c 449F0000 		.long	0x9f44
 24759 a160 00       		.byte	0
 24760 a161 76       		.uleb128 0x76
 24761 a162 00000000 		.long	.LASF1382
 24762 a166 42       		.byte	0x42
 24763 a167 E101     		.value	0x1e1
 24764 a169 3B810000 		.long	0x813b
 24765 a16d 81A10000 		.long	0xa181
 24766 a171 09       		.uleb128 0x9
 24767 a172 A69A0000 		.long	0x9aa6
 24768 a176 09       		.uleb128 0x9
 24769 a177 449F0000 		.long	0x9f44
 24770 a17b 09       		.uleb128 0x9
 24771 a17c D8800000 		.long	0x80d8
 24772 a180 00       		.byte	0
 24773 a181 76       		.uleb128 0x76
 24774 a182 00000000 		.long	.LASF1383
 24775 a186 42       		.byte	0x42
 24776 a187 E801     		.value	0x1e8
 24777 a189 1F810000 		.long	0x811f
 24778 a18d A1A10000 		.long	0xa1a1
 24779 a191 09       		.uleb128 0x9
 24780 a192 A69A0000 		.long	0x9aa6
 24781 a196 09       		.uleb128 0x9
 24782 a197 449F0000 		.long	0x9f44
 24783 a19b 09       		.uleb128 0x9
 24784 a19c D8800000 		.long	0x80d8
 24785 a1a0 00       		.byte	0
 24786 a1a1 7F       		.uleb128 0x7f
 24787 a1a2 08       		.byte	0x8
 24788 a1a3 C9040000 		.long	0x4c9
 24789 a1a7 7F       		.uleb128 0x7f
GAS LISTING /tmp/ccmMnd7l.s 			page 737


 24790 a1a8 08       		.byte	0x8
 24791 a1a9 F9040000 		.long	0x4f9
 24792 a1ad 7E       		.uleb128 0x7e
 24793 a1ae 08       		.byte	0x8
 24794 a1af F9040000 		.long	0x4f9
 24795 a1b3 7E       		.uleb128 0x7e
 24796 a1b4 08       		.byte	0x8
 24797 a1b5 C9040000 		.long	0x4c9
 24798 a1b9 7F       		.uleb128 0x7f
 24799 a1ba 08       		.byte	0x8
 24800 a1bb 20060000 		.long	0x620
 24801 a1bf 13       		.uleb128 0x13
 24802 a1c0 00000000 		.long	.LASF1384
 24803 a1c4 44       		.byte	0x44
 24804 a1c5 25       		.byte	0x25
 24805 a1c6 26810000 		.long	0x8126
 24806 a1ca 13       		.uleb128 0x13
 24807 a1cb 00000000 		.long	.LASF1385
 24808 a1cf 44       		.byte	0x44
 24809 a1d0 26       		.byte	0x26
 24810 a1d1 2D810000 		.long	0x812d
 24811 a1d5 13       		.uleb128 0x13
 24812 a1d6 00000000 		.long	.LASF1386
 24813 a1da 44       		.byte	0x44
 24814 a1db 27       		.byte	0x27
 24815 a1dc D8800000 		.long	0x80d8
 24816 a1e0 13       		.uleb128 0x13
 24817 a1e1 00000000 		.long	.LASF1387
 24818 a1e5 44       		.byte	0x44
 24819 a1e6 29       		.byte	0x29
 24820 a1e7 34810000 		.long	0x8134
 24821 a1eb 13       		.uleb128 0x13
 24822 a1ec 00000000 		.long	.LASF1388
 24823 a1f0 44       		.byte	0x44
 24824 a1f1 31       		.byte	0x31
 24825 a1f2 0A810000 		.long	0x810a
 24826 a1f6 13       		.uleb128 0x13
 24827 a1f7 00000000 		.long	.LASF1389
 24828 a1fb 44       		.byte	0x44
 24829 a1fc 32       		.byte	0x32
 24830 a1fd 11810000 		.long	0x8111
 24831 a201 13       		.uleb128 0x13
 24832 a202 00000000 		.long	.LASF1390
 24833 a206 44       		.byte	0x44
 24834 a207 34       		.byte	0x34
 24835 a208 18810000 		.long	0x8118
 24836 a20c 13       		.uleb128 0x13
 24837 a20d 00000000 		.long	.LASF1391
 24838 a211 44       		.byte	0x44
 24839 a212 38       		.byte	0x38
 24840 a213 03810000 		.long	0x8103
 24841 a217 13       		.uleb128 0x13
 24842 a218 00000000 		.long	.LASF1392
 24843 a21c 44       		.byte	0x44
 24844 a21d 42       		.byte	0x42
 24845 a21e 26810000 		.long	0x8126
 24846 a222 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 738


 24847 a223 00000000 		.long	.LASF1393
 24848 a227 44       		.byte	0x44
 24849 a228 43       		.byte	0x43
 24850 a229 2D810000 		.long	0x812d
 24851 a22d 13       		.uleb128 0x13
 24852 a22e 00000000 		.long	.LASF1394
 24853 a232 44       		.byte	0x44
 24854 a233 44       		.byte	0x44
 24855 a234 D8800000 		.long	0x80d8
 24856 a238 13       		.uleb128 0x13
 24857 a239 00000000 		.long	.LASF1395
 24858 a23d 44       		.byte	0x44
 24859 a23e 46       		.byte	0x46
 24860 a23f 34810000 		.long	0x8134
 24861 a243 13       		.uleb128 0x13
 24862 a244 00000000 		.long	.LASF1396
 24863 a248 44       		.byte	0x44
 24864 a249 4D       		.byte	0x4d
 24865 a24a 0A810000 		.long	0x810a
 24866 a24e 13       		.uleb128 0x13
 24867 a24f 00000000 		.long	.LASF1397
 24868 a253 44       		.byte	0x44
 24869 a254 4E       		.byte	0x4e
 24870 a255 11810000 		.long	0x8111
 24871 a259 13       		.uleb128 0x13
 24872 a25a 00000000 		.long	.LASF1398
 24873 a25e 44       		.byte	0x44
 24874 a25f 4F       		.byte	0x4f
 24875 a260 18810000 		.long	0x8118
 24876 a264 13       		.uleb128 0x13
 24877 a265 00000000 		.long	.LASF1399
 24878 a269 44       		.byte	0x44
 24879 a26a 51       		.byte	0x51
 24880 a26b 03810000 		.long	0x8103
 24881 a26f 13       		.uleb128 0x13
 24882 a270 00000000 		.long	.LASF1400
 24883 a274 44       		.byte	0x44
 24884 a275 5B       		.byte	0x5b
 24885 a276 26810000 		.long	0x8126
 24886 a27a 13       		.uleb128 0x13
 24887 a27b 00000000 		.long	.LASF1401
 24888 a27f 44       		.byte	0x44
 24889 a280 5D       		.byte	0x5d
 24890 a281 34810000 		.long	0x8134
 24891 a285 13       		.uleb128 0x13
 24892 a286 00000000 		.long	.LASF1402
 24893 a28a 44       		.byte	0x44
 24894 a28b 5E       		.byte	0x5e
 24895 a28c 34810000 		.long	0x8134
 24896 a290 13       		.uleb128 0x13
 24897 a291 00000000 		.long	.LASF1403
 24898 a295 44       		.byte	0x44
 24899 a296 5F       		.byte	0x5f
 24900 a297 34810000 		.long	0x8134
 24901 a29b 13       		.uleb128 0x13
 24902 a29c 00000000 		.long	.LASF1404
 24903 a2a0 44       		.byte	0x44
GAS LISTING /tmp/ccmMnd7l.s 			page 739


 24904 a2a1 68       		.byte	0x68
 24905 a2a2 0A810000 		.long	0x810a
 24906 a2a6 13       		.uleb128 0x13
 24907 a2a7 00000000 		.long	.LASF1405
 24908 a2ab 44       		.byte	0x44
 24909 a2ac 6A       		.byte	0x6a
 24910 a2ad 03810000 		.long	0x8103
 24911 a2b1 13       		.uleb128 0x13
 24912 a2b2 00000000 		.long	.LASF1406
 24913 a2b6 44       		.byte	0x44
 24914 a2b7 6B       		.byte	0x6b
 24915 a2b8 03810000 		.long	0x8103
 24916 a2bc 13       		.uleb128 0x13
 24917 a2bd 00000000 		.long	.LASF1407
 24918 a2c1 44       		.byte	0x44
 24919 a2c2 6C       		.byte	0x6c
 24920 a2c3 03810000 		.long	0x8103
 24921 a2c7 13       		.uleb128 0x13
 24922 a2c8 00000000 		.long	.LASF1408
 24923 a2cc 44       		.byte	0x44
 24924 a2cd 78       		.byte	0x78
 24925 a2ce 34810000 		.long	0x8134
 24926 a2d2 13       		.uleb128 0x13
 24927 a2d3 00000000 		.long	.LASF1409
 24928 a2d7 44       		.byte	0x44
 24929 a2d8 7B       		.byte	0x7b
 24930 a2d9 03810000 		.long	0x8103
 24931 a2dd 13       		.uleb128 0x13
 24932 a2de 00000000 		.long	.LASF1410
 24933 a2e2 44       		.byte	0x44
 24934 a2e3 87       		.byte	0x87
 24935 a2e4 34810000 		.long	0x8134
 24936 a2e8 13       		.uleb128 0x13
 24937 a2e9 00000000 		.long	.LASF1411
 24938 a2ed 44       		.byte	0x44
 24939 a2ee 88       		.byte	0x88
 24940 a2ef 03810000 		.long	0x8103
 24941 a2f3 02       		.uleb128 0x2
 24942 a2f4 02       		.byte	0x2
 24943 a2f5 10       		.byte	0x10
 24944 a2f6 00000000 		.long	.LASF1412
 24945 a2fa 02       		.uleb128 0x2
 24946 a2fb 04       		.byte	0x4
 24947 a2fc 10       		.byte	0x10
 24948 a2fd 00000000 		.long	.LASF1413
 24949 a301 7E       		.uleb128 0x7e
 24950 a302 08       		.byte	0x8
 24951 a303 07A30000 		.long	0xa307
 24952 a307 8F01     		.uleb128 0x8f
 24953 a309 7F       		.uleb128 0x7f
 24954 a30a 08       		.byte	0x8
 24955 a30b E4990000 		.long	0x99e4
 24956 a30f 7F       		.uleb128 0x7f
 24957 a310 08       		.byte	0x8
 24958 a311 0C9A0000 		.long	0x9a0c
 24959 a315 7E       		.uleb128 0x7e
 24960 a316 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 740


 24961 a317 80820000 		.long	0x8280
 24962 a31b 7F       		.uleb128 0x7f
 24963 a31c 08       		.byte	0x8
 24964 a31d CE830000 		.long	0x83ce
 24965 a321 7E       		.uleb128 0x7e
 24966 a322 08       		.byte	0x8
 24967 a323 CE830000 		.long	0x83ce
 24968 a327 7E       		.uleb128 0x7e
 24969 a328 08       		.byte	0x8
 24970 a329 6A070000 		.long	0x76a
 24971 a32d 7F       		.uleb128 0x7f
 24972 a32e 08       		.byte	0x8
 24973 a32f EA070000 		.long	0x7ea
 24974 a333 16       		.uleb128 0x16
 24975 a334 00000000 		.long	.LASF1414
 24976 a338 60       		.byte	0x60
 24977 a339 45       		.byte	0x45
 24978 a33a 36       		.byte	0x36
 24979 a33b 60A40000 		.long	0xa460
 24980 a33f 06       		.uleb128 0x6
 24981 a340 00000000 		.long	.LASF1415
 24982 a344 45       		.byte	0x45
 24983 a345 3A       		.byte	0x3a
 24984 a346 289D0000 		.long	0x9d28
 24985 a34a 00       		.byte	0
 24986 a34b 06       		.uleb128 0x6
 24987 a34c 00000000 		.long	.LASF1416
 24988 a350 45       		.byte	0x45
 24989 a351 3B       		.byte	0x3b
 24990 a352 289D0000 		.long	0x9d28
 24991 a356 08       		.byte	0x8
 24992 a357 06       		.uleb128 0x6
 24993 a358 00000000 		.long	.LASF1417
 24994 a35c 45       		.byte	0x45
 24995 a35d 41       		.byte	0x41
 24996 a35e 289D0000 		.long	0x9d28
 24997 a362 10       		.byte	0x10
 24998 a363 06       		.uleb128 0x6
 24999 a364 00000000 		.long	.LASF1418
 25000 a368 45       		.byte	0x45
 25001 a369 47       		.byte	0x47
 25002 a36a 289D0000 		.long	0x9d28
 25003 a36e 18       		.byte	0x18
 25004 a36f 06       		.uleb128 0x6
 25005 a370 00000000 		.long	.LASF1419
 25006 a374 45       		.byte	0x45
 25007 a375 48       		.byte	0x48
 25008 a376 289D0000 		.long	0x9d28
 25009 a37a 20       		.byte	0x20
 25010 a37b 06       		.uleb128 0x6
 25011 a37c 00000000 		.long	.LASF1420
 25012 a380 45       		.byte	0x45
 25013 a381 49       		.byte	0x49
 25014 a382 289D0000 		.long	0x9d28
 25015 a386 28       		.byte	0x28
 25016 a387 06       		.uleb128 0x6
 25017 a388 00000000 		.long	.LASF1421
GAS LISTING /tmp/ccmMnd7l.s 			page 741


 25018 a38c 45       		.byte	0x45
 25019 a38d 4A       		.byte	0x4a
 25020 a38e 289D0000 		.long	0x9d28
 25021 a392 30       		.byte	0x30
 25022 a393 06       		.uleb128 0x6
 25023 a394 00000000 		.long	.LASF1422
 25024 a398 45       		.byte	0x45
 25025 a399 4B       		.byte	0x4b
 25026 a39a 289D0000 		.long	0x9d28
 25027 a39e 38       		.byte	0x38
 25028 a39f 06       		.uleb128 0x6
 25029 a3a0 00000000 		.long	.LASF1423
 25030 a3a4 45       		.byte	0x45
 25031 a3a5 4C       		.byte	0x4c
 25032 a3a6 289D0000 		.long	0x9d28
 25033 a3aa 40       		.byte	0x40
 25034 a3ab 06       		.uleb128 0x6
 25035 a3ac 00000000 		.long	.LASF1424
 25036 a3b0 45       		.byte	0x45
 25037 a3b1 4D       		.byte	0x4d
 25038 a3b2 289D0000 		.long	0x9d28
 25039 a3b6 48       		.byte	0x48
 25040 a3b7 06       		.uleb128 0x6
 25041 a3b8 00000000 		.long	.LASF1425
 25042 a3bc 45       		.byte	0x45
 25043 a3bd 4E       		.byte	0x4e
 25044 a3be E4990000 		.long	0x99e4
 25045 a3c2 50       		.byte	0x50
 25046 a3c3 06       		.uleb128 0x6
 25047 a3c4 00000000 		.long	.LASF1426
 25048 a3c8 45       		.byte	0x45
 25049 a3c9 4F       		.byte	0x4f
 25050 a3ca E4990000 		.long	0x99e4
 25051 a3ce 51       		.byte	0x51
 25052 a3cf 06       		.uleb128 0x6
 25053 a3d0 00000000 		.long	.LASF1427
 25054 a3d4 45       		.byte	0x45
 25055 a3d5 51       		.byte	0x51
 25056 a3d6 E4990000 		.long	0x99e4
 25057 a3da 52       		.byte	0x52
 25058 a3db 06       		.uleb128 0x6
 25059 a3dc 00000000 		.long	.LASF1428
 25060 a3e0 45       		.byte	0x45
 25061 a3e1 53       		.byte	0x53
 25062 a3e2 E4990000 		.long	0x99e4
 25063 a3e6 53       		.byte	0x53
 25064 a3e7 06       		.uleb128 0x6
 25065 a3e8 00000000 		.long	.LASF1429
 25066 a3ec 45       		.byte	0x45
 25067 a3ed 55       		.byte	0x55
 25068 a3ee E4990000 		.long	0x99e4
 25069 a3f2 54       		.byte	0x54
 25070 a3f3 06       		.uleb128 0x6
 25071 a3f4 00000000 		.long	.LASF1430
 25072 a3f8 45       		.byte	0x45
 25073 a3f9 57       		.byte	0x57
 25074 a3fa E4990000 		.long	0x99e4
GAS LISTING /tmp/ccmMnd7l.s 			page 742


 25075 a3fe 55       		.byte	0x55
 25076 a3ff 06       		.uleb128 0x6
 25077 a400 00000000 		.long	.LASF1431
 25078 a404 45       		.byte	0x45
 25079 a405 5E       		.byte	0x5e
 25080 a406 E4990000 		.long	0x99e4
 25081 a40a 56       		.byte	0x56
 25082 a40b 06       		.uleb128 0x6
 25083 a40c 00000000 		.long	.LASF1432
 25084 a410 45       		.byte	0x45
 25085 a411 5F       		.byte	0x5f
 25086 a412 E4990000 		.long	0x99e4
 25087 a416 57       		.byte	0x57
 25088 a417 06       		.uleb128 0x6
 25089 a418 00000000 		.long	.LASF1433
 25090 a41c 45       		.byte	0x45
 25091 a41d 62       		.byte	0x62
 25092 a41e E4990000 		.long	0x99e4
 25093 a422 58       		.byte	0x58
 25094 a423 06       		.uleb128 0x6
 25095 a424 00000000 		.long	.LASF1434
 25096 a428 45       		.byte	0x45
 25097 a429 64       		.byte	0x64
 25098 a42a E4990000 		.long	0x99e4
 25099 a42e 59       		.byte	0x59
 25100 a42f 06       		.uleb128 0x6
 25101 a430 00000000 		.long	.LASF1435
 25102 a434 45       		.byte	0x45
 25103 a435 66       		.byte	0x66
 25104 a436 E4990000 		.long	0x99e4
 25105 a43a 5A       		.byte	0x5a
 25106 a43b 06       		.uleb128 0x6
 25107 a43c 00000000 		.long	.LASF1436
 25108 a440 45       		.byte	0x45
 25109 a441 68       		.byte	0x68
 25110 a442 E4990000 		.long	0x99e4
 25111 a446 5B       		.byte	0x5b
 25112 a447 06       		.uleb128 0x6
 25113 a448 00000000 		.long	.LASF1437
 25114 a44c 45       		.byte	0x45
 25115 a44d 6F       		.byte	0x6f
 25116 a44e E4990000 		.long	0x99e4
 25117 a452 5C       		.byte	0x5c
 25118 a453 06       		.uleb128 0x6
 25119 a454 00000000 		.long	.LASF1438
 25120 a458 45       		.byte	0x45
 25121 a459 70       		.byte	0x70
 25122 a45a E4990000 		.long	0x99e4
 25123 a45e 5D       		.byte	0x5d
 25124 a45f 00       		.byte	0
 25125 a460 52       		.uleb128 0x52
 25126 a461 00000000 		.long	.LASF1439
 25127 a465 45       		.byte	0x45
 25128 a466 7D       		.byte	0x7d
 25129 a467 289D0000 		.long	0x9d28
 25130 a46b 7AA40000 		.long	0xa47a
 25131 a46f 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 743


 25132 a470 D8800000 		.long	0x80d8
 25133 a474 09       		.uleb128 0x9
 25134 a475 069A0000 		.long	0x9a06
 25135 a479 00       		.byte	0
 25136 a47a 8401     		.uleb128 0x84
 25137 a47c 00000000 		.long	.LASF1440
 25138 a480 45       		.byte	0x45
 25139 a481 80       		.byte	0x80
 25140 a482 86A40000 		.long	0xa486
 25141 a486 7E       		.uleb128 0x7e
 25142 a487 08       		.byte	0x8
 25143 a488 33A30000 		.long	0xa333
 25144 a48c 13       		.uleb128 0x13
 25145 a48d 00000000 		.long	.LASF1441
 25146 a491 46       		.byte	0x46
 25147 a492 29       		.byte	0x29
 25148 a493 D8800000 		.long	0x80d8
 25149 a497 13       		.uleb128 0x13
 25150 a498 00000000 		.long	.LASF1442
 25151 a49c 46       		.byte	0x46
 25152 a49d 8D       		.byte	0x8d
 25153 a49e 34810000 		.long	0x8134
 25154 a4a2 13       		.uleb128 0x13
 25155 a4a3 00000000 		.long	.LASF1443
 25156 a4a7 46       		.byte	0x46
 25157 a4a8 8E       		.byte	0x8e
 25158 a4a9 34810000 		.long	0x8134
 25159 a4ad 9001     		.uleb128 0x90
 25160 a4af B9A40000 		.long	0xa4b9
 25161 a4b3 09       		.uleb128 0x9
 25162 a4b4 B1800000 		.long	0x80b1
 25163 a4b8 00       		.byte	0
 25164 a4b9 7E       		.uleb128 0x7e
 25165 a4ba 08       		.byte	0x8
 25166 a4bb ADA40000 		.long	0xa4ad
 25167 a4bf 13       		.uleb128 0x13
 25168 a4c0 00000000 		.long	.LASF1444
 25169 a4c4 47       		.byte	0x47
 25170 a4c5 20       		.byte	0x20
 25171 a4c6 D8800000 		.long	0x80d8
 25172 a4ca 8801     		.uleb128 0x88
 25173 a4cc 08       		.byte	0x8
 25174 a4cd 48       		.byte	0x48
 25175 a4ce 63       		.byte	0x63
 25176 a4cf 00000000 		.long	.LASF1446
 25177 a4d3 F1A40000 		.long	0xa4f1
 25178 a4d7 06       		.uleb128 0x6
 25179 a4d8 00000000 		.long	.LASF1447
 25180 a4dc 48       		.byte	0x48
 25181 a4dd 64       		.byte	0x64
 25182 a4de D8800000 		.long	0x80d8
 25183 a4e2 00       		.byte	0
 25184 a4e3 9101     		.uleb128 0x91
 25185 a4e5 72656D00 		.string	"rem"
 25186 a4e9 48       		.byte	0x48
 25187 a4ea 65       		.byte	0x65
 25188 a4eb D8800000 		.long	0x80d8
GAS LISTING /tmp/ccmMnd7l.s 			page 744


 25189 a4ef 04       		.byte	0x4
 25190 a4f0 00       		.byte	0
 25191 a4f1 13       		.uleb128 0x13
 25192 a4f2 00000000 		.long	.LASF1448
 25193 a4f6 48       		.byte	0x48
 25194 a4f7 66       		.byte	0x66
 25195 a4f8 CAA40000 		.long	0xa4ca
 25196 a4fc 8801     		.uleb128 0x88
 25197 a4fe 10       		.byte	0x10
 25198 a4ff 48       		.byte	0x48
 25199 a500 6B       		.byte	0x6b
 25200 a501 00000000 		.long	.LASF1449
 25201 a505 23A50000 		.long	0xa523
 25202 a509 06       		.uleb128 0x6
 25203 a50a 00000000 		.long	.LASF1447
 25204 a50e 48       		.byte	0x48
 25205 a50f 6C       		.byte	0x6c
 25206 a510 34810000 		.long	0x8134
 25207 a514 00       		.byte	0
 25208 a515 9101     		.uleb128 0x91
 25209 a517 72656D00 		.string	"rem"
 25210 a51b 48       		.byte	0x48
 25211 a51c 6D       		.byte	0x6d
 25212 a51d 34810000 		.long	0x8134
 25213 a521 08       		.byte	0x8
 25214 a522 00       		.byte	0
 25215 a523 13       		.uleb128 0x13
 25216 a524 00000000 		.long	.LASF1450
 25217 a528 48       		.byte	0x48
 25218 a529 6E       		.byte	0x6e
 25219 a52a FCA40000 		.long	0xa4fc
 25220 a52e 8801     		.uleb128 0x88
 25221 a530 10       		.byte	0x10
 25222 a531 48       		.byte	0x48
 25223 a532 77       		.byte	0x77
 25224 a533 00000000 		.long	.LASF1451
 25225 a537 55A50000 		.long	0xa555
 25226 a53b 06       		.uleb128 0x6
 25227 a53c 00000000 		.long	.LASF1447
 25228 a540 48       		.byte	0x48
 25229 a541 78       		.byte	0x78
 25230 a542 3B810000 		.long	0x813b
 25231 a546 00       		.byte	0
 25232 a547 9101     		.uleb128 0x91
 25233 a549 72656D00 		.string	"rem"
 25234 a54d 48       		.byte	0x48
 25235 a54e 79       		.byte	0x79
 25236 a54f 3B810000 		.long	0x813b
 25237 a553 08       		.byte	0x8
 25238 a554 00       		.byte	0
 25239 a555 13       		.uleb128 0x13
 25240 a556 00000000 		.long	.LASF1452
 25241 a55a 48       		.byte	0x48
 25242 a55b 7A       		.byte	0x7a
 25243 a55c 2EA50000 		.long	0xa52e
 25244 a560 5C       		.uleb128 0x5c
 25245 a561 00000000 		.long	.LASF1453
GAS LISTING /tmp/ccmMnd7l.s 			page 745


 25246 a565 48       		.byte	0x48
 25247 a566 E602     		.value	0x2e6
 25248 a568 6CA50000 		.long	0xa56c
 25249 a56c 7E       		.uleb128 0x7e
 25250 a56d 08       		.byte	0x8
 25251 a56e 72A50000 		.long	0xa572
 25252 a572 9201     		.uleb128 0x92
 25253 a574 D8800000 		.long	0x80d8
 25254 a578 87A50000 		.long	0xa587
 25255 a57c 09       		.uleb128 0x9
 25256 a57d 01A30000 		.long	0xa301
 25257 a581 09       		.uleb128 0x9
 25258 a582 01A30000 		.long	0xa301
 25259 a586 00       		.byte	0
 25260 a587 76       		.uleb128 0x76
 25261 a588 00000000 		.long	.LASF1454
 25262 a58c 48       		.byte	0x48
 25263 a58d 0602     		.value	0x206
 25264 a58f D8800000 		.long	0x80d8
 25265 a593 9DA50000 		.long	0xa59d
 25266 a597 09       		.uleb128 0x9
 25267 a598 9DA50000 		.long	0xa59d
 25268 a59c 00       		.byte	0
 25269 a59d 7E       		.uleb128 0x7e
 25270 a59e 08       		.byte	0x8
 25271 a59f A3A50000 		.long	0xa5a3
 25272 a5a3 9301     		.uleb128 0x93
 25273 a5a5 1E       		.uleb128 0x1e
 25274 a5a6 00000000 		.long	.LASF1455
 25275 a5aa 48       		.byte	0x48
 25276 a5ab 0D02     		.value	0x20d
 25277 a5ad 00000000 		.long	.LASF1455
 25278 a5b1 D8800000 		.long	0x80d8
 25279 a5b5 BFA50000 		.long	0xa5bf
 25280 a5b9 09       		.uleb128 0x9
 25281 a5ba 9DA50000 		.long	0xa59d
 25282 a5be 00       		.byte	0
 25283 a5bf 76       		.uleb128 0x76
 25284 a5c0 00000000 		.long	.LASF1456
 25285 a5c4 48       		.byte	0x48
 25286 a5c5 1701     		.value	0x117
 25287 a5c7 29000000 		.long	0x29
 25288 a5cb D5A50000 		.long	0xa5d5
 25289 a5cf 09       		.uleb128 0x9
 25290 a5d0 069A0000 		.long	0x9a06
 25291 a5d4 00       		.byte	0
 25292 a5d5 76       		.uleb128 0x76
 25293 a5d6 00000000 		.long	.LASF1457
 25294 a5da 48       		.byte	0x48
 25295 a5db 1C01     		.value	0x11c
 25296 a5dd D8800000 		.long	0x80d8
 25297 a5e1 EBA50000 		.long	0xa5eb
 25298 a5e5 09       		.uleb128 0x9
 25299 a5e6 069A0000 		.long	0x9a06
 25300 a5ea 00       		.byte	0
 25301 a5eb 76       		.uleb128 0x76
 25302 a5ec 00000000 		.long	.LASF1458
GAS LISTING /tmp/ccmMnd7l.s 			page 746


 25303 a5f0 48       		.byte	0x48
 25304 a5f1 2101     		.value	0x121
 25305 a5f3 34810000 		.long	0x8134
 25306 a5f7 01A60000 		.long	0xa601
 25307 a5fb 09       		.uleb128 0x9
 25308 a5fc 069A0000 		.long	0x9a06
 25309 a600 00       		.byte	0
 25310 a601 76       		.uleb128 0x76
 25311 a602 00000000 		.long	.LASF1459
 25312 a606 48       		.byte	0x48
 25313 a607 F302     		.value	0x2f3
 25314 a609 B1800000 		.long	0x80b1
 25315 a60d 2BA60000 		.long	0xa62b
 25316 a611 09       		.uleb128 0x9
 25317 a612 01A30000 		.long	0xa301
 25318 a616 09       		.uleb128 0x9
 25319 a617 01A30000 		.long	0xa301
 25320 a61b 09       		.uleb128 0x9
 25321 a61c 73990000 		.long	0x9973
 25322 a620 09       		.uleb128 0x9
 25323 a621 73990000 		.long	0x9973
 25324 a625 09       		.uleb128 0x9
 25325 a626 60A50000 		.long	0xa560
 25326 a62a 00       		.byte	0
 25327 a62b 9401     		.uleb128 0x94
 25328 a62d 64697600 		.string	"div"
 25329 a631 48       		.byte	0x48
 25330 a632 1103     		.value	0x311
 25331 a634 F1A40000 		.long	0xa4f1
 25332 a638 47A60000 		.long	0xa647
 25333 a63c 09       		.uleb128 0x9
 25334 a63d D8800000 		.long	0x80d8
 25335 a641 09       		.uleb128 0x9
 25336 a642 D8800000 		.long	0x80d8
 25337 a646 00       		.byte	0
 25338 a647 76       		.uleb128 0x76
 25339 a648 00000000 		.long	.LASF1460
 25340 a64c 48       		.byte	0x48
 25341 a64d 3702     		.value	0x237
 25342 a64f 289D0000 		.long	0x9d28
 25343 a653 5DA60000 		.long	0xa65d
 25344 a657 09       		.uleb128 0x9
 25345 a658 069A0000 		.long	0x9a06
 25346 a65c 00       		.byte	0
 25347 a65d 76       		.uleb128 0x76
 25348 a65e 00000000 		.long	.LASF1461
 25349 a662 48       		.byte	0x48
 25350 a663 1303     		.value	0x313
 25351 a665 23A50000 		.long	0xa523
 25352 a669 78A60000 		.long	0xa678
 25353 a66d 09       		.uleb128 0x9
 25354 a66e 34810000 		.long	0x8134
 25355 a672 09       		.uleb128 0x9
 25356 a673 34810000 		.long	0x8134
 25357 a677 00       		.byte	0
 25358 a678 76       		.uleb128 0x76
 25359 a679 00000000 		.long	.LASF1462
GAS LISTING /tmp/ccmMnd7l.s 			page 747


 25360 a67d 48       		.byte	0x48
 25361 a67e 5C03     		.value	0x35c
 25362 a680 D8800000 		.long	0x80d8
 25363 a684 93A60000 		.long	0xa693
 25364 a688 09       		.uleb128 0x9
 25365 a689 069A0000 		.long	0x9a06
 25366 a68d 09       		.uleb128 0x9
 25367 a68e 73990000 		.long	0x9973
 25368 a692 00       		.byte	0
 25369 a693 76       		.uleb128 0x76
 25370 a694 00000000 		.long	.LASF1463
 25371 a698 48       		.byte	0x48
 25372 a699 6703     		.value	0x367
 25373 a69b 73990000 		.long	0x9973
 25374 a69f B3A60000 		.long	0xa6b3
 25375 a6a3 09       		.uleb128 0x9
 25376 a6a4 639A0000 		.long	0x9a63
 25377 a6a8 09       		.uleb128 0x9
 25378 a6a9 069A0000 		.long	0x9a06
 25379 a6ad 09       		.uleb128 0x9
 25380 a6ae 73990000 		.long	0x9973
 25381 a6b2 00       		.byte	0
 25382 a6b3 76       		.uleb128 0x76
 25383 a6b4 00000000 		.long	.LASF1464
 25384 a6b8 48       		.byte	0x48
 25385 a6b9 5F03     		.value	0x35f
 25386 a6bb D8800000 		.long	0x80d8
 25387 a6bf D3A60000 		.long	0xa6d3
 25388 a6c3 09       		.uleb128 0x9
 25389 a6c4 639A0000 		.long	0x9a63
 25390 a6c8 09       		.uleb128 0x9
 25391 a6c9 069A0000 		.long	0x9a06
 25392 a6cd 09       		.uleb128 0x9
 25393 a6ce 73990000 		.long	0x9973
 25394 a6d2 00       		.byte	0
 25395 a6d3 4C       		.uleb128 0x4c
 25396 a6d4 00000000 		.long	.LASF1465
 25397 a6d8 48       		.byte	0x48
 25398 a6d9 F902     		.value	0x2f9
 25399 a6db F4A60000 		.long	0xa6f4
 25400 a6df 09       		.uleb128 0x9
 25401 a6e0 B1800000 		.long	0x80b1
 25402 a6e4 09       		.uleb128 0x9
 25403 a6e5 73990000 		.long	0x9973
 25404 a6e9 09       		.uleb128 0x9
 25405 a6ea 73990000 		.long	0x9973
 25406 a6ee 09       		.uleb128 0x9
 25407 a6ef 60A50000 		.long	0xa560
 25408 a6f3 00       		.byte	0
 25409 a6f4 4C       		.uleb128 0x4c
 25410 a6f5 00000000 		.long	.LASF1466
 25411 a6f9 48       		.byte	0x48
 25412 a6fa 2802     		.value	0x228
 25413 a6fc 06A70000 		.long	0xa706
 25414 a700 09       		.uleb128 0x9
 25415 a701 D8800000 		.long	0x80d8
 25416 a705 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 748


 25417 a706 8D01     		.uleb128 0x8d
 25418 a708 00000000 		.long	.LASF1467
 25419 a70c 48       		.byte	0x48
 25420 a70d 7C01     		.value	0x17c
 25421 a70f D8800000 		.long	0x80d8
 25422 a713 4C       		.uleb128 0x4c
 25423 a714 00000000 		.long	.LASF1468
 25424 a718 48       		.byte	0x48
 25425 a719 7E01     		.value	0x17e
 25426 a71b 25A70000 		.long	0xa725
 25427 a71f 09       		.uleb128 0x9
 25428 a720 18810000 		.long	0x8118
 25429 a724 00       		.byte	0
 25430 a725 52       		.uleb128 0x52
 25431 a726 00000000 		.long	.LASF1469
 25432 a72a 48       		.byte	0x48
 25433 a72b A5       		.byte	0xa5
 25434 a72c 29000000 		.long	0x29
 25435 a730 3FA70000 		.long	0xa73f
 25436 a734 09       		.uleb128 0x9
 25437 a735 069A0000 		.long	0x9a06
 25438 a739 09       		.uleb128 0x9
 25439 a73a 3FA70000 		.long	0xa73f
 25440 a73e 00       		.byte	0
 25441 a73f 7E       		.uleb128 0x7e
 25442 a740 08       		.byte	0x8
 25443 a741 289D0000 		.long	0x9d28
 25444 a745 52       		.uleb128 0x52
 25445 a746 00000000 		.long	.LASF1470
 25446 a74a 48       		.byte	0x48
 25447 a74b B8       		.byte	0xb8
 25448 a74c 34810000 		.long	0x8134
 25449 a750 64A70000 		.long	0xa764
 25450 a754 09       		.uleb128 0x9
 25451 a755 069A0000 		.long	0x9a06
 25452 a759 09       		.uleb128 0x9
 25453 a75a 3FA70000 		.long	0xa73f
 25454 a75e 09       		.uleb128 0x9
 25455 a75f D8800000 		.long	0x80d8
 25456 a763 00       		.byte	0
 25457 a764 52       		.uleb128 0x52
 25458 a765 00000000 		.long	.LASF1471
 25459 a769 48       		.byte	0x48
 25460 a76a BC       		.byte	0xbc
 25461 a76b 03810000 		.long	0x8103
 25462 a76f 83A70000 		.long	0xa783
 25463 a773 09       		.uleb128 0x9
 25464 a774 069A0000 		.long	0x9a06
 25465 a778 09       		.uleb128 0x9
 25466 a779 3FA70000 		.long	0xa73f
 25467 a77d 09       		.uleb128 0x9
 25468 a77e D8800000 		.long	0x80d8
 25469 a782 00       		.byte	0
 25470 a783 76       		.uleb128 0x76
 25471 a784 00000000 		.long	.LASF1472
 25472 a788 48       		.byte	0x48
 25473 a789 CD02     		.value	0x2cd
GAS LISTING /tmp/ccmMnd7l.s 			page 749


 25474 a78b D8800000 		.long	0x80d8
 25475 a78f 99A70000 		.long	0xa799
 25476 a793 09       		.uleb128 0x9
 25477 a794 069A0000 		.long	0x9a06
 25478 a798 00       		.byte	0
 25479 a799 76       		.uleb128 0x76
 25480 a79a 00000000 		.long	.LASF1473
 25481 a79e 48       		.byte	0x48
 25482 a79f 6A03     		.value	0x36a
 25483 a7a1 73990000 		.long	0x9973
 25484 a7a5 B9A70000 		.long	0xa7b9
 25485 a7a9 09       		.uleb128 0x9
 25486 a7aa 289D0000 		.long	0x9d28
 25487 a7ae 09       		.uleb128 0x9
 25488 a7af A69A0000 		.long	0x9aa6
 25489 a7b3 09       		.uleb128 0x9
 25490 a7b4 73990000 		.long	0x9973
 25491 a7b8 00       		.byte	0
 25492 a7b9 76       		.uleb128 0x76
 25493 a7ba 00000000 		.long	.LASF1474
 25494 a7be 48       		.byte	0x48
 25495 a7bf 6303     		.value	0x363
 25496 a7c1 D8800000 		.long	0x80d8
 25497 a7c5 D4A70000 		.long	0xa7d4
 25498 a7c9 09       		.uleb128 0x9
 25499 a7ca 289D0000 		.long	0x9d28
 25500 a7ce 09       		.uleb128 0x9
 25501 a7cf 699A0000 		.long	0x9a69
 25502 a7d3 00       		.byte	0
 25503 a7d4 76       		.uleb128 0x76
 25504 a7d5 00000000 		.long	.LASF1475
 25505 a7d9 48       		.byte	0x48
 25506 a7da 1903     		.value	0x319
 25507 a7dc 55A50000 		.long	0xa555
 25508 a7e0 EFA70000 		.long	0xa7ef
 25509 a7e4 09       		.uleb128 0x9
 25510 a7e5 3B810000 		.long	0x813b
 25511 a7e9 09       		.uleb128 0x9
 25512 a7ea 3B810000 		.long	0x813b
 25513 a7ee 00       		.byte	0
 25514 a7ef 76       		.uleb128 0x76
 25515 a7f0 00000000 		.long	.LASF1476
 25516 a7f4 48       		.byte	0x48
 25517 a7f5 2A01     		.value	0x12a
 25518 a7f7 3B810000 		.long	0x813b
 25519 a7fb 05A80000 		.long	0xa805
 25520 a7ff 09       		.uleb128 0x9
 25521 a800 069A0000 		.long	0x9a06
 25522 a804 00       		.byte	0
 25523 a805 52       		.uleb128 0x52
 25524 a806 00000000 		.long	.LASF1477
 25525 a80a 48       		.byte	0x48
 25526 a80b D2       		.byte	0xd2
 25527 a80c 3B810000 		.long	0x813b
 25528 a810 24A80000 		.long	0xa824
 25529 a814 09       		.uleb128 0x9
 25530 a815 069A0000 		.long	0x9a06
GAS LISTING /tmp/ccmMnd7l.s 			page 750


 25531 a819 09       		.uleb128 0x9
 25532 a81a 3FA70000 		.long	0xa73f
 25533 a81e 09       		.uleb128 0x9
 25534 a81f D8800000 		.long	0x80d8
 25535 a823 00       		.byte	0
 25536 a824 52       		.uleb128 0x52
 25537 a825 00000000 		.long	.LASF1478
 25538 a829 48       		.byte	0x48
 25539 a82a D7       		.byte	0xd7
 25540 a82b 1F810000 		.long	0x811f
 25541 a82f 43A80000 		.long	0xa843
 25542 a833 09       		.uleb128 0x9
 25543 a834 069A0000 		.long	0x9a06
 25544 a838 09       		.uleb128 0x9
 25545 a839 3FA70000 		.long	0xa73f
 25546 a83d 09       		.uleb128 0x9
 25547 a83e D8800000 		.long	0x80d8
 25548 a842 00       		.byte	0
 25549 a843 52       		.uleb128 0x52
 25550 a844 00000000 		.long	.LASF1479
 25551 a848 48       		.byte	0x48
 25552 a849 AD       		.byte	0xad
 25553 a84a 30000000 		.long	0x30
 25554 a84e 5DA80000 		.long	0xa85d
 25555 a852 09       		.uleb128 0x9
 25556 a853 069A0000 		.long	0x9a06
 25557 a857 09       		.uleb128 0x9
 25558 a858 3FA70000 		.long	0xa73f
 25559 a85c 00       		.byte	0
 25560 a85d 52       		.uleb128 0x52
 25561 a85e 00000000 		.long	.LASF1480
 25562 a862 48       		.byte	0x48
 25563 a863 B0       		.byte	0xb0
 25564 a864 77970000 		.long	0x9777
 25565 a868 77A80000 		.long	0xa877
 25566 a86c 09       		.uleb128 0x9
 25567 a86d 069A0000 		.long	0x9a06
 25568 a871 09       		.uleb128 0x9
 25569 a872 3FA70000 		.long	0xa73f
 25570 a876 00       		.byte	0
 25571 a877 8801     		.uleb128 0x88
 25572 a879 10       		.byte	0x10
 25573 a87a 49       		.byte	0x49
 25574 a87b 17       		.byte	0x17
 25575 a87c 00000000 		.long	.LASF1481
 25576 a880 9DA80000 		.long	0xa89d
 25577 a884 06       		.uleb128 0x6
 25578 a885 00000000 		.long	.LASF1482
 25579 a889 49       		.byte	0x49
 25580 a88a 18       		.byte	0x18
 25581 a88b 97A40000 		.long	0xa497
 25582 a88f 00       		.byte	0
 25583 a890 06       		.uleb128 0x6
 25584 a891 00000000 		.long	.LASF1483
 25585 a895 49       		.byte	0x49
 25586 a896 19       		.byte	0x19
 25587 a897 EB990000 		.long	0x99eb
GAS LISTING /tmp/ccmMnd7l.s 			page 751


 25588 a89b 08       		.byte	0x8
 25589 a89c 00       		.byte	0
 25590 a89d 13       		.uleb128 0x13
 25591 a89e 00000000 		.long	.LASF1484
 25592 a8a2 49       		.byte	0x49
 25593 a8a3 1A       		.byte	0x1a
 25594 a8a4 77A80000 		.long	0xa877
 25595 a8a8 9501     		.uleb128 0x95
 25596 a8aa 00000000 		.long	.LASF1670
 25597 a8ae 3F       		.byte	0x3f
 25598 a8af B4       		.byte	0xb4
 25599 a8b0 16       		.uleb128 0x16
 25600 a8b1 00000000 		.long	.LASF1485
 25601 a8b5 18       		.byte	0x18
 25602 a8b6 3F       		.byte	0x3f
 25603 a8b7 BA       		.byte	0xba
 25604 a8b8 E1A80000 		.long	0xa8e1
 25605 a8bc 06       		.uleb128 0x6
 25606 a8bd 00000000 		.long	.LASF1486
 25607 a8c1 3F       		.byte	0x3f
 25608 a8c2 BB       		.byte	0xbb
 25609 a8c3 E1A80000 		.long	0xa8e1
 25610 a8c7 00       		.byte	0
 25611 a8c8 06       		.uleb128 0x6
 25612 a8c9 00000000 		.long	.LASF1487
 25613 a8cd 3F       		.byte	0x3f
 25614 a8ce BC       		.byte	0xbc
 25615 a8cf E7A80000 		.long	0xa8e7
 25616 a8d3 08       		.byte	0x8
 25617 a8d4 06       		.uleb128 0x6
 25618 a8d5 00000000 		.long	.LASF1488
 25619 a8d9 3F       		.byte	0x3f
 25620 a8da C0       		.byte	0xc0
 25621 a8db D8800000 		.long	0x80d8
 25622 a8df 10       		.byte	0x10
 25623 a8e0 00       		.byte	0
 25624 a8e1 7E       		.uleb128 0x7e
 25625 a8e2 08       		.byte	0x8
 25626 a8e3 B0A80000 		.long	0xa8b0
 25627 a8e7 7E       		.uleb128 0x7e
 25628 a8e8 08       		.byte	0x8
 25629 a8e9 9D970000 		.long	0x979d
 25630 a8ed 8B01     		.uleb128 0x8b
 25631 a8ef E4990000 		.long	0x99e4
 25632 a8f3 FFA80000 		.long	0xa8ff
 25633 a8f7 8C01     		.uleb128 0x8c
 25634 a8f9 2F990000 		.long	0x992f
 25635 a8fd 00       		.byte	0
 25636 a8fe 00       		.byte	0
 25637 a8ff 7E       		.uleb128 0x7e
 25638 a900 08       		.byte	0x8
 25639 a901 A8A80000 		.long	0xa8a8
 25640 a905 8B01     		.uleb128 0x8b
 25641 a907 E4990000 		.long	0x99e4
 25642 a90b 17A90000 		.long	0xa917
 25643 a90f 8C01     		.uleb128 0x8c
 25644 a911 2F990000 		.long	0x992f
GAS LISTING /tmp/ccmMnd7l.s 			page 752


 25645 a915 13       		.byte	0x13
 25646 a916 00       		.byte	0
 25647 a917 13       		.uleb128 0x13
 25648 a918 00000000 		.long	.LASF1489
 25649 a91c 3E       		.byte	0x3e
 25650 a91d 6F       		.byte	0x6f
 25651 a91e 9DA80000 		.long	0xa89d
 25652 a922 4C       		.uleb128 0x4c
 25653 a923 00000000 		.long	.LASF1490
 25654 a927 3E       		.byte	0x3e
 25655 a928 3503     		.value	0x335
 25656 a92a 34A90000 		.long	0xa934
 25657 a92e 09       		.uleb128 0x9
 25658 a92f 34A90000 		.long	0xa934
 25659 a933 00       		.byte	0
 25660 a934 7E       		.uleb128 0x7e
 25661 a935 08       		.byte	0x8
 25662 a936 92970000 		.long	0x9792
 25663 a93a 52       		.uleb128 0x52
 25664 a93b 00000000 		.long	.LASF1491
 25665 a93f 3E       		.byte	0x3e
 25666 a940 EC       		.byte	0xec
 25667 a941 D8800000 		.long	0x80d8
 25668 a945 4FA90000 		.long	0xa94f
 25669 a949 09       		.uleb128 0x9
 25670 a94a 34A90000 		.long	0xa934
 25671 a94e 00       		.byte	0
 25672 a94f 76       		.uleb128 0x76
 25673 a950 00000000 		.long	.LASF1492
 25674 a954 3E       		.byte	0x3e
 25675 a955 3703     		.value	0x337
 25676 a957 D8800000 		.long	0x80d8
 25677 a95b 65A90000 		.long	0xa965
 25678 a95f 09       		.uleb128 0x9
 25679 a960 34A90000 		.long	0xa934
 25680 a964 00       		.byte	0
 25681 a965 76       		.uleb128 0x76
 25682 a966 00000000 		.long	.LASF1493
 25683 a96a 3E       		.byte	0x3e
 25684 a96b 3903     		.value	0x339
 25685 a96d D8800000 		.long	0x80d8
 25686 a971 7BA90000 		.long	0xa97b
 25687 a975 09       		.uleb128 0x9
 25688 a976 34A90000 		.long	0xa934
 25689 a97a 00       		.byte	0
 25690 a97b 52       		.uleb128 0x52
 25691 a97c 00000000 		.long	.LASF1494
 25692 a980 3E       		.byte	0x3e
 25693 a981 F1       		.byte	0xf1
 25694 a982 D8800000 		.long	0x80d8
 25695 a986 90A90000 		.long	0xa990
 25696 a98a 09       		.uleb128 0x9
 25697 a98b 34A90000 		.long	0xa934
 25698 a98f 00       		.byte	0
 25699 a990 76       		.uleb128 0x76
 25700 a991 00000000 		.long	.LASF1495
 25701 a995 3E       		.byte	0x3e
GAS LISTING /tmp/ccmMnd7l.s 			page 753


 25702 a996 1702     		.value	0x217
 25703 a998 D8800000 		.long	0x80d8
 25704 a99c A6A90000 		.long	0xa9a6
 25705 a9a0 09       		.uleb128 0x9
 25706 a9a1 34A90000 		.long	0xa934
 25707 a9a5 00       		.byte	0
 25708 a9a6 76       		.uleb128 0x76
 25709 a9a7 00000000 		.long	.LASF1496
 25710 a9ab 3E       		.byte	0x3e
 25711 a9ac 1903     		.value	0x319
 25712 a9ae D8800000 		.long	0x80d8
 25713 a9b2 C1A90000 		.long	0xa9c1
 25714 a9b6 09       		.uleb128 0x9
 25715 a9b7 34A90000 		.long	0xa934
 25716 a9bb 09       		.uleb128 0x9
 25717 a9bc C1A90000 		.long	0xa9c1
 25718 a9c0 00       		.byte	0
 25719 a9c1 7E       		.uleb128 0x7e
 25720 a9c2 08       		.byte	0x8
 25721 a9c3 17A90000 		.long	0xa917
 25722 a9c7 76       		.uleb128 0x76
 25723 a9c8 00000000 		.long	.LASF1497
 25724 a9cc 3E       		.byte	0x3e
 25725 a9cd 7202     		.value	0x272
 25726 a9cf 289D0000 		.long	0x9d28
 25727 a9d3 E7A90000 		.long	0xa9e7
 25728 a9d7 09       		.uleb128 0x9
 25729 a9d8 289D0000 		.long	0x9d28
 25730 a9dc 09       		.uleb128 0x9
 25731 a9dd D8800000 		.long	0x80d8
 25732 a9e1 09       		.uleb128 0x9
 25733 a9e2 34A90000 		.long	0xa934
 25734 a9e6 00       		.byte	0
 25735 a9e7 76       		.uleb128 0x76
 25736 a9e8 00000000 		.long	.LASF1498
 25737 a9ec 3E       		.byte	0x3e
 25738 a9ed 0F01     		.value	0x10f
 25739 a9ef 34A90000 		.long	0xa934
 25740 a9f3 02AA0000 		.long	0xaa02
 25741 a9f7 09       		.uleb128 0x9
 25742 a9f8 069A0000 		.long	0x9a06
 25743 a9fc 09       		.uleb128 0x9
 25744 a9fd 069A0000 		.long	0x9a06
 25745 aa01 00       		.byte	0
 25746 aa02 76       		.uleb128 0x76
 25747 aa03 00000000 		.long	.LASF1499
 25748 aa07 3E       		.byte	0x3e
 25749 aa08 C002     		.value	0x2c0
 25750 aa0a 73990000 		.long	0x9973
 25751 aa0e 27AA0000 		.long	0xaa27
 25752 aa12 09       		.uleb128 0x9
 25753 aa13 B1800000 		.long	0x80b1
 25754 aa17 09       		.uleb128 0x9
 25755 aa18 73990000 		.long	0x9973
 25756 aa1c 09       		.uleb128 0x9
 25757 aa1d 73990000 		.long	0x9973
 25758 aa21 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 754


 25759 aa22 34A90000 		.long	0xa934
 25760 aa26 00       		.byte	0
 25761 aa27 76       		.uleb128 0x76
 25762 aa28 00000000 		.long	.LASF1500
 25763 aa2c 3E       		.byte	0x3e
 25764 aa2d 1501     		.value	0x115
 25765 aa2f 34A90000 		.long	0xa934
 25766 aa33 47AA0000 		.long	0xaa47
 25767 aa37 09       		.uleb128 0x9
 25768 aa38 069A0000 		.long	0x9a06
 25769 aa3c 09       		.uleb128 0x9
 25770 aa3d 069A0000 		.long	0x9a06
 25771 aa41 09       		.uleb128 0x9
 25772 aa42 34A90000 		.long	0xa934
 25773 aa46 00       		.byte	0
 25774 aa47 76       		.uleb128 0x76
 25775 aa48 00000000 		.long	.LASF1501
 25776 aa4c 3E       		.byte	0x3e
 25777 aa4d E802     		.value	0x2e8
 25778 aa4f D8800000 		.long	0x80d8
 25779 aa53 67AA0000 		.long	0xaa67
 25780 aa57 09       		.uleb128 0x9
 25781 aa58 34A90000 		.long	0xa934
 25782 aa5c 09       		.uleb128 0x9
 25783 aa5d 34810000 		.long	0x8134
 25784 aa61 09       		.uleb128 0x9
 25785 aa62 D8800000 		.long	0x80d8
 25786 aa66 00       		.byte	0
 25787 aa67 76       		.uleb128 0x76
 25788 aa68 00000000 		.long	.LASF1502
 25789 aa6c 3E       		.byte	0x3e
 25790 aa6d 1E03     		.value	0x31e
 25791 aa6f D8800000 		.long	0x80d8
 25792 aa73 82AA0000 		.long	0xaa82
 25793 aa77 09       		.uleb128 0x9
 25794 aa78 34A90000 		.long	0xa934
 25795 aa7c 09       		.uleb128 0x9
 25796 aa7d 82AA0000 		.long	0xaa82
 25797 aa81 00       		.byte	0
 25798 aa82 7E       		.uleb128 0x7e
 25799 aa83 08       		.byte	0x8
 25800 aa84 88AA0000 		.long	0xaa88
 25801 aa88 11       		.uleb128 0x11
 25802 aa89 17A90000 		.long	0xa917
 25803 aa8d 76       		.uleb128 0x76
 25804 aa8e 00000000 		.long	.LASF1503
 25805 aa92 3E       		.byte	0x3e
 25806 aa93 ED02     		.value	0x2ed
 25807 aa95 34810000 		.long	0x8134
 25808 aa99 A3AA0000 		.long	0xaaa3
 25809 aa9d 09       		.uleb128 0x9
 25810 aa9e 34A90000 		.long	0xa934
 25811 aaa2 00       		.byte	0
 25812 aaa3 76       		.uleb128 0x76
 25813 aaa4 00000000 		.long	.LASF1504
 25814 aaa8 3E       		.byte	0x3e
 25815 aaa9 1802     		.value	0x218
GAS LISTING /tmp/ccmMnd7l.s 			page 755


 25816 aaab D8800000 		.long	0x80d8
 25817 aaaf B9AA0000 		.long	0xaab9
 25818 aab3 09       		.uleb128 0x9
 25819 aab4 34A90000 		.long	0xa934
 25820 aab8 00       		.byte	0
 25821 aab9 8401     		.uleb128 0x84
 25822 aabb 00000000 		.long	.LASF1505
 25823 aabf 4A       		.byte	0x4a
 25824 aac0 2D       		.byte	0x2d
 25825 aac1 D8800000 		.long	0x80d8
 25826 aac5 76       		.uleb128 0x76
 25827 aac6 00000000 		.long	.LASF1506
 25828 aaca 3E       		.byte	0x3e
 25829 aacb 7A02     		.value	0x27a
 25830 aacd 289D0000 		.long	0x9d28
 25831 aad1 DBAA0000 		.long	0xaadb
 25832 aad5 09       		.uleb128 0x9
 25833 aad6 289D0000 		.long	0x9d28
 25834 aada 00       		.byte	0
 25835 aadb 4C       		.uleb128 0x4c
 25836 aadc 00000000 		.long	.LASF1507
 25837 aae0 3E       		.byte	0x3e
 25838 aae1 4903     		.value	0x349
 25839 aae3 EDAA0000 		.long	0xaaed
 25840 aae7 09       		.uleb128 0x9
 25841 aae8 069A0000 		.long	0x9a06
 25842 aaec 00       		.byte	0
 25843 aaed 52       		.uleb128 0x52
 25844 aaee 00000000 		.long	.LASF1508
 25845 aaf2 3E       		.byte	0x3e
 25846 aaf3 B1       		.byte	0xb1
 25847 aaf4 D8800000 		.long	0x80d8
 25848 aaf8 02AB0000 		.long	0xab02
 25849 aafc 09       		.uleb128 0x9
 25850 aafd 069A0000 		.long	0x9a06
 25851 ab01 00       		.byte	0
 25852 ab02 52       		.uleb128 0x52
 25853 ab03 00000000 		.long	.LASF1509
 25854 ab07 3E       		.byte	0x3e
 25855 ab08 B3       		.byte	0xb3
 25856 ab09 D8800000 		.long	0x80d8
 25857 ab0d 1CAB0000 		.long	0xab1c
 25858 ab11 09       		.uleb128 0x9
 25859 ab12 069A0000 		.long	0x9a06
 25860 ab16 09       		.uleb128 0x9
 25861 ab17 069A0000 		.long	0x9a06
 25862 ab1b 00       		.byte	0
 25863 ab1c 4C       		.uleb128 0x4c
 25864 ab1d 00000000 		.long	.LASF1510
 25865 ab21 3E       		.byte	0x3e
 25866 ab22 F202     		.value	0x2f2
 25867 ab24 2EAB0000 		.long	0xab2e
 25868 ab28 09       		.uleb128 0x9
 25869 ab29 34A90000 		.long	0xa934
 25870 ab2d 00       		.byte	0
 25871 ab2e 4C       		.uleb128 0x4c
 25872 ab2f 00000000 		.long	.LASF1511
GAS LISTING /tmp/ccmMnd7l.s 			page 756


 25873 ab33 3E       		.byte	0x3e
 25874 ab34 4B01     		.value	0x14b
 25875 ab36 45AB0000 		.long	0xab45
 25876 ab3a 09       		.uleb128 0x9
 25877 ab3b 34A90000 		.long	0xa934
 25878 ab3f 09       		.uleb128 0x9
 25879 ab40 289D0000 		.long	0x9d28
 25880 ab44 00       		.byte	0
 25881 ab45 76       		.uleb128 0x76
 25882 ab46 00000000 		.long	.LASF1512
 25883 ab4a 3E       		.byte	0x3e
 25884 ab4b 4F01     		.value	0x14f
 25885 ab4d D8800000 		.long	0x80d8
 25886 ab51 6AAB0000 		.long	0xab6a
 25887 ab55 09       		.uleb128 0x9
 25888 ab56 34A90000 		.long	0xa934
 25889 ab5a 09       		.uleb128 0x9
 25890 ab5b 289D0000 		.long	0x9d28
 25891 ab5f 09       		.uleb128 0x9
 25892 ab60 D8800000 		.long	0x80d8
 25893 ab64 09       		.uleb128 0x9
 25894 ab65 73990000 		.long	0x9973
 25895 ab69 00       		.byte	0
 25896 ab6a 8401     		.uleb128 0x84
 25897 ab6c 00000000 		.long	.LASF1513
 25898 ab70 3E       		.byte	0x3e
 25899 ab71 C2       		.byte	0xc2
 25900 ab72 34A90000 		.long	0xa934
 25901 ab76 52       		.uleb128 0x52
 25902 ab77 00000000 		.long	.LASF1514
 25903 ab7b 3E       		.byte	0x3e
 25904 ab7c D0       		.byte	0xd0
 25905 ab7d 289D0000 		.long	0x9d28
 25906 ab81 8BAB0000 		.long	0xab8b
 25907 ab85 09       		.uleb128 0x9
 25908 ab86 289D0000 		.long	0x9d28
 25909 ab8a 00       		.byte	0
 25910 ab8b 76       		.uleb128 0x76
 25911 ab8c 00000000 		.long	.LASF1515
 25912 ab90 3E       		.byte	0x3e
 25913 ab91 B902     		.value	0x2b9
 25914 ab93 D8800000 		.long	0x80d8
 25915 ab97 A6AB0000 		.long	0xaba6
 25916 ab9b 09       		.uleb128 0x9
 25917 ab9c D8800000 		.long	0x80d8
 25918 aba0 09       		.uleb128 0x9
 25919 aba1 34A90000 		.long	0xa934
 25920 aba5 00       		.byte	0
 25921 aba6 7E       		.uleb128 0x7e
 25922 aba7 08       		.byte	0x8
 25923 aba8 B4090000 		.long	0x9b4
 25924 abac 7E       		.uleb128 0x7e
 25925 abad 08       		.byte	0x8
 25926 abae DA220000 		.long	0x22da
 25927 abb2 7E       		.uleb128 0x7e
 25928 abb3 08       		.byte	0x8
 25929 abb4 A8090000 		.long	0x9a8
GAS LISTING /tmp/ccmMnd7l.s 			page 757


 25930 abb8 7E       		.uleb128 0x7e
 25931 abb9 08       		.byte	0x8
 25932 abba B90A0000 		.long	0xab9
 25933 abbe 7F       		.uleb128 0x7f
 25934 abbf 08       		.byte	0x8
 25935 abc0 B90A0000 		.long	0xab9
 25936 abc4 7F       		.uleb128 0x7f
 25937 abc5 08       		.byte	0x8
 25938 abc6 DA220000 		.long	0x22da
 25939 abca 8101     		.uleb128 0x81
 25940 abcc 08       		.byte	0x8
 25941 abcd A8090000 		.long	0x9a8
 25942 abd1 7F       		.uleb128 0x7f
 25943 abd2 08       		.byte	0x8
 25944 abd3 A8090000 		.long	0x9a8
 25945 abd7 7E       		.uleb128 0x7e
 25946 abd8 08       		.byte	0x8
 25947 abd9 DF220000 		.long	0x22df
 25948 abdd 7E       		.uleb128 0x7e
 25949 abde 08       		.byte	0x8
 25950 abdf BF230000 		.long	0x23bf
 25951 abe3 7F       		.uleb128 0x7f
 25952 abe4 08       		.byte	0x8
 25953 abe5 C4230000 		.long	0x23c4
 25954 abe9 8B01     		.uleb128 0x8b
 25955 abeb 03810000 		.long	0x8103
 25956 abef F6AB0000 		.long	0xabf6
 25957 abf3 9601     		.uleb128 0x96
 25958 abf5 00       		.byte	0
 25959 abf6 7E       		.uleb128 0x7e
 25960 abf7 08       		.byte	0x8
 25961 abf8 AF220000 		.long	0x22af
 25962 abfc 7E       		.uleb128 0x7e
 25963 abfd 08       		.byte	0x8
 25964 abfe F0230000 		.long	0x23f0
 25965 ac02 7E       		.uleb128 0x7e
 25966 ac03 08       		.byte	0x8
 25967 ac04 E4230000 		.long	0x23e4
 25968 ac08 7E       		.uleb128 0x7e
 25969 ac09 08       		.byte	0x8
 25970 ac0a 31240000 		.long	0x2431
 25971 ac0e 7F       		.uleb128 0x7f
 25972 ac0f 08       		.byte	0x8
 25973 ac10 31240000 		.long	0x2431
 25974 ac14 7E       		.uleb128 0x7e
 25975 ac15 08       		.byte	0x8
 25976 ac16 B7240000 		.long	0x24b7
 25977 ac1a 11       		.uleb128 0x11
 25978 ac1b 069A0000 		.long	0x9a06
 25979 ac1f 7F       		.uleb128 0x7f
 25980 ac20 08       		.byte	0x8
 25981 ac21 DD250000 		.long	0x25dd
 25982 ac25 7E       		.uleb128 0x7e
 25983 ac26 08       		.byte	0x8
 25984 ac27 E6250000 		.long	0x25e6
 25985 ac2b 13       		.uleb128 0x13
 25986 ac2c 00000000 		.long	.LASF1516
GAS LISTING /tmp/ccmMnd7l.s 			page 758


 25987 ac30 4B       		.byte	0x4b
 25988 ac31 35       		.byte	0x35
 25989 ac32 03810000 		.long	0x8103
 25990 ac36 13       		.uleb128 0x13
 25991 ac37 00000000 		.long	.LASF1517
 25992 ac3b 4B       		.byte	0x4b
 25993 ac3c BB       		.byte	0xbb
 25994 ac3d 41AC0000 		.long	0xac41
 25995 ac41 7E       		.uleb128 0x7e
 25996 ac42 08       		.byte	0x8
 25997 ac43 47AC0000 		.long	0xac47
 25998 ac47 11       		.uleb128 0x11
 25999 ac48 8CA40000 		.long	0xa48c
 26000 ac4c 52       		.uleb128 0x52
 26001 ac4d 00000000 		.long	.LASF1518
 26002 ac51 4B       		.byte	0x4b
 26003 ac52 B0       		.byte	0xb0
 26004 ac53 D8800000 		.long	0x80d8
 26005 ac57 66AC0000 		.long	0xac66
 26006 ac5b 09       		.uleb128 0x9
 26007 ac5c 7E990000 		.long	0x997e
 26008 ac60 09       		.uleb128 0x9
 26009 ac61 2BAC0000 		.long	0xac2b
 26010 ac65 00       		.byte	0
 26011 ac66 52       		.uleb128 0x52
 26012 ac67 00000000 		.long	.LASF1519
 26013 ac6b 4B       		.byte	0x4b
 26014 ac6c DE       		.byte	0xde
 26015 ac6d 7E990000 		.long	0x997e
 26016 ac71 80AC0000 		.long	0xac80
 26017 ac75 09       		.uleb128 0x9
 26018 ac76 7E990000 		.long	0x997e
 26019 ac7a 09       		.uleb128 0x9
 26020 ac7b 36AC0000 		.long	0xac36
 26021 ac7f 00       		.byte	0
 26022 ac80 52       		.uleb128 0x52
 26023 ac81 00000000 		.long	.LASF1520
 26024 ac85 4B       		.byte	0x4b
 26025 ac86 DB       		.byte	0xdb
 26026 ac87 36AC0000 		.long	0xac36
 26027 ac8b 95AC0000 		.long	0xac95
 26028 ac8f 09       		.uleb128 0x9
 26029 ac90 069A0000 		.long	0x9a06
 26030 ac94 00       		.byte	0
 26031 ac95 52       		.uleb128 0x52
 26032 ac96 00000000 		.long	.LASF1521
 26033 ac9a 4B       		.byte	0x4b
 26034 ac9b AC       		.byte	0xac
 26035 ac9c 2BAC0000 		.long	0xac2b
 26036 aca0 AAAC0000 		.long	0xacaa
 26037 aca4 09       		.uleb128 0x9
 26038 aca5 069A0000 		.long	0x9a06
 26039 aca9 00       		.byte	0
 26040 acaa 7F       		.uleb128 0x7f
 26041 acab 08       		.byte	0x8
 26042 acac 97280000 		.long	0x2897
 26043 acb0 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 759


 26044 acb1 2D810000 		.long	0x812d
 26045 acb5 11       		.uleb128 0x11
 26046 acb6 34810000 		.long	0x8134
 26047 acba 13       		.uleb128 0x13
 26048 acbb 00000000 		.long	.LASF1522
 26049 acbf 4C       		.byte	0x4c
 26050 acc0 1F       		.byte	0x1f
 26051 acc1 30000000 		.long	0x30
 26052 acc5 13       		.uleb128 0x13
 26053 acc6 00000000 		.long	.LASF1523
 26054 acca 4C       		.byte	0x4c
 26055 accb 20       		.byte	0x20
 26056 accc 29000000 		.long	0x29
 26057 acd0 8B01     		.uleb128 0x8b
 26058 acd2 03810000 		.long	0x8103
 26059 acd6 E3AC0000 		.long	0xace3
 26060 acda 9701     		.uleb128 0x97
 26061 acdc 2F990000 		.long	0x992f
 26062 ace0 6F02     		.value	0x26f
 26063 ace2 00       		.byte	0
 26064 ace3 7E       		.uleb128 0x7e
 26065 ace4 08       		.byte	0x8
 26066 ace5 812C0000 		.long	0x2c81
 26067 ace9 7E       		.uleb128 0x7e
 26068 acea 08       		.byte	0x8
 26069 aceb D62E0000 		.long	0x2ed6
 26070 acef 7E       		.uleb128 0x7e
 26071 acf0 08       		.byte	0x8
 26072 acf1 C82E0000 		.long	0x2ec8
 26073 acf5 7E       		.uleb128 0x7e
 26074 acf6 08       		.byte	0x8
 26075 acf7 88300000 		.long	0x3088
 26076 acfb 7F       		.uleb128 0x7f
 26077 acfc 08       		.byte	0x8
 26078 acfd 88300000 		.long	0x3088
 26079 ad01 7E       		.uleb128 0x7e
 26080 ad02 08       		.byte	0x8
 26081 ad03 29000000 		.long	0x29
 26082 ad07 7E       		.uleb128 0x7e
 26083 ad08 08       		.byte	0x8
 26084 ad09 0DAD0000 		.long	0xad0d
 26085 ad0d 11       		.uleb128 0x11
 26086 ad0e 29000000 		.long	0x29
 26087 ad12 7F       		.uleb128 0x7f
 26088 ad13 08       		.byte	0x8
 26089 ad14 29000000 		.long	0x29
 26090 ad18 7F       		.uleb128 0x7f
 26091 ad19 08       		.byte	0x8
 26092 ad1a 0DAD0000 		.long	0xad0d
 26093 ad1e 7E       		.uleb128 0x7e
 26094 ad1f 08       		.byte	0x8
 26095 ad20 708A0000 		.long	0x8a70
 26096 ad24 7F       		.uleb128 0x7f
 26097 ad25 08       		.byte	0x8
 26098 ad26 B18B0000 		.long	0x8bb1
 26099 ad2a 7E       		.uleb128 0x7e
 26100 ad2b 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 760


 26101 ad2c B18B0000 		.long	0x8bb1
 26102 ad30 7E       		.uleb128 0x7e
 26103 ad31 08       		.byte	0x8
 26104 ad32 8D300000 		.long	0x308d
 26105 ad36 7F       		.uleb128 0x7f
 26106 ad37 08       		.byte	0x8
 26107 ad38 2F310000 		.long	0x312f
 26108 ad3c 7F       		.uleb128 0x7f
 26109 ad3d 08       		.byte	0x8
 26110 ad3e 40310000 		.long	0x3140
 26111 ad42 7E       		.uleb128 0x7e
 26112 ad43 08       		.byte	0x8
 26113 ad44 9A320000 		.long	0x329a
 26114 ad48 7F       		.uleb128 0x7f
 26115 ad49 08       		.byte	0x8
 26116 ad4a 8D300000 		.long	0x308d
 26117 ad4e 7F       		.uleb128 0x7f
 26118 ad4f 08       		.byte	0x8
 26119 ad50 DD8B0000 		.long	0x8bdd
 26120 ad54 7F       		.uleb128 0x7f
 26121 ad55 08       		.byte	0x8
 26122 ad56 098C0000 		.long	0x8c09
 26123 ad5a 7E       		.uleb128 0x7e
 26124 ad5b 08       		.byte	0x8
 26125 ad5c 9D340000 		.long	0x349d
 26126 ad60 7F       		.uleb128 0x7f
 26127 ad61 08       		.byte	0x8
 26128 ad62 5A350000 		.long	0x355a
 26129 ad66 8101     		.uleb128 0x81
 26130 ad68 08       		.byte	0x8
 26131 ad69 5F350000 		.long	0x355f
 26132 ad6d 7F       		.uleb128 0x7f
 26133 ad6e 08       		.byte	0x8
 26134 ad6f 9D340000 		.long	0x349d
 26135 ad73 7F       		.uleb128 0x7f
 26136 ad74 08       		.byte	0x8
 26137 ad75 5F350000 		.long	0x355f
 26138 ad79 7E       		.uleb128 0x7e
 26139 ad7a 08       		.byte	0x8
 26140 ad7b 91340000 		.long	0x3491
 26141 ad7f 7E       		.uleb128 0x7e
 26142 ad80 08       		.byte	0x8
 26143 ad81 29370000 		.long	0x3729
 26144 ad85 7F       		.uleb128 0x7f
 26145 ad86 08       		.byte	0x8
 26146 ad87 07360000 		.long	0x3607
 26147 ad8b 8101     		.uleb128 0x81
 26148 ad8d 08       		.byte	0x8
 26149 ad8e 91340000 		.long	0x3491
 26150 ad92 7E       		.uleb128 0x7e
 26151 ad93 08       		.byte	0x8
 26152 ad94 2E370000 		.long	0x372e
 26153 ad98 7F       		.uleb128 0x7f
 26154 ad99 08       		.byte	0x8
 26155 ad9a 0E380000 		.long	0x380e
 26156 ad9e 7F       		.uleb128 0x7f
 26157 ad9f 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 761


 26158 ada0 5A380000 		.long	0x385a
 26159 ada4 7F       		.uleb128 0x7f
 26160 ada5 08       		.byte	0x8
 26161 ada6 F3400000 		.long	0x40f3
 26162 adaa 8101     		.uleb128 0x81
 26163 adac 08       		.byte	0x8
 26164 adad 2E370000 		.long	0x372e
 26165 adb1 7F       		.uleb128 0x7f
 26166 adb2 08       		.byte	0x8
 26167 adb3 2E370000 		.long	0x372e
 26168 adb7 7E       		.uleb128 0x7e
 26169 adb8 08       		.byte	0x8
 26170 adb9 F3400000 		.long	0x40f3
 26171 adbd 8101     		.uleb128 0x81
 26172 adbf 08       		.byte	0x8
 26173 adc0 64370000 		.long	0x3764
 26174 adc4 7E       		.uleb128 0x7e
 26175 adc5 08       		.byte	0x8
 26176 adc6 F8400000 		.long	0x40f8
 26177 adca 7E       		.uleb128 0x7e
 26178 adcb 08       		.byte	0x8
 26179 adcc D8410000 		.long	0x41d8
 26180 add0 7E       		.uleb128 0x7e
 26181 add1 08       		.byte	0x8
 26182 add2 18810000 		.long	0x8118
 26183 add6 7E       		.uleb128 0x7e
 26184 add7 08       		.byte	0x8
 26185 add8 DCAD0000 		.long	0xaddc
 26186 addc 11       		.uleb128 0x11
 26187 addd 18810000 		.long	0x8118
 26188 ade1 7F       		.uleb128 0x7f
 26189 ade2 08       		.byte	0x8
 26190 ade3 18810000 		.long	0x8118
 26191 ade7 7F       		.uleb128 0x7f
 26192 ade8 08       		.byte	0x8
 26193 ade9 DCAD0000 		.long	0xaddc
 26194 aded 7E       		.uleb128 0x7e
 26195 adee 08       		.byte	0x8
 26196 adef 1E910000 		.long	0x911e
 26197 adf3 7F       		.uleb128 0x7f
 26198 adf4 08       		.byte	0x8
 26199 adf5 5F920000 		.long	0x925f
 26200 adf9 7E       		.uleb128 0x7e
 26201 adfa 08       		.byte	0x8
 26202 adfb 5F920000 		.long	0x925f
 26203 adff 7E       		.uleb128 0x7e
 26204 ae00 08       		.byte	0x8
 26205 ae01 DD410000 		.long	0x41dd
 26206 ae05 7F       		.uleb128 0x7f
 26207 ae06 08       		.byte	0x8
 26208 ae07 7F420000 		.long	0x427f
 26209 ae0b 7F       		.uleb128 0x7f
 26210 ae0c 08       		.byte	0x8
 26211 ae0d 90420000 		.long	0x4290
 26212 ae11 7E       		.uleb128 0x7e
 26213 ae12 08       		.byte	0x8
 26214 ae13 17430000 		.long	0x4317
GAS LISTING /tmp/ccmMnd7l.s 			page 762


 26215 ae17 7F       		.uleb128 0x7f
 26216 ae18 08       		.byte	0x8
 26217 ae19 DD410000 		.long	0x41dd
 26218 ae1d 7F       		.uleb128 0x7f
 26219 ae1e 08       		.byte	0x8
 26220 ae1f 8B920000 		.long	0x928b
 26221 ae23 7F       		.uleb128 0x7f
 26222 ae24 08       		.byte	0x8
 26223 ae25 B7920000 		.long	0x92b7
 26224 ae29 7E       		.uleb128 0x7e
 26225 ae2a 08       		.byte	0x8
 26226 ae2b 0F450000 		.long	0x450f
 26227 ae2f 7F       		.uleb128 0x7f
 26228 ae30 08       		.byte	0x8
 26229 ae31 CC450000 		.long	0x45cc
 26230 ae35 8101     		.uleb128 0x81
 26231 ae37 08       		.byte	0x8
 26232 ae38 D1450000 		.long	0x45d1
 26233 ae3c 7F       		.uleb128 0x7f
 26234 ae3d 08       		.byte	0x8
 26235 ae3e 0F450000 		.long	0x450f
 26236 ae42 7F       		.uleb128 0x7f
 26237 ae43 08       		.byte	0x8
 26238 ae44 D1450000 		.long	0x45d1
 26239 ae48 7E       		.uleb128 0x7e
 26240 ae49 08       		.byte	0x8
 26241 ae4a 03450000 		.long	0x4503
 26242 ae4e 7E       		.uleb128 0x7e
 26243 ae4f 08       		.byte	0x8
 26244 ae50 9B470000 		.long	0x479b
 26245 ae54 7F       		.uleb128 0x7f
 26246 ae55 08       		.byte	0x8
 26247 ae56 79460000 		.long	0x4679
 26248 ae5a 8101     		.uleb128 0x81
 26249 ae5c 08       		.byte	0x8
 26250 ae5d 03450000 		.long	0x4503
 26251 ae61 7E       		.uleb128 0x7e
 26252 ae62 08       		.byte	0x8
 26253 ae63 A0470000 		.long	0x47a0
 26254 ae67 7F       		.uleb128 0x7f
 26255 ae68 08       		.byte	0x8
 26256 ae69 80480000 		.long	0x4880
 26257 ae6d 7F       		.uleb128 0x7f
 26258 ae6e 08       		.byte	0x8
 26259 ae6f CC480000 		.long	0x48cc
 26260 ae73 7F       		.uleb128 0x7f
 26261 ae74 08       		.byte	0x8
 26262 ae75 65510000 		.long	0x5165
 26263 ae79 8101     		.uleb128 0x81
 26264 ae7b 08       		.byte	0x8
 26265 ae7c A0470000 		.long	0x47a0
 26266 ae80 7F       		.uleb128 0x7f
 26267 ae81 08       		.byte	0x8
 26268 ae82 A0470000 		.long	0x47a0
 26269 ae86 7E       		.uleb128 0x7e
 26270 ae87 08       		.byte	0x8
 26271 ae88 65510000 		.long	0x5165
GAS LISTING /tmp/ccmMnd7l.s 			page 763


 26272 ae8c 8101     		.uleb128 0x81
 26273 ae8e 08       		.byte	0x8
 26274 ae8f D6470000 		.long	0x47d6
 26275 ae93 7E       		.uleb128 0x7e
 26276 ae94 08       		.byte	0x8
 26277 ae95 C68C0000 		.long	0x8cc6
 26278 ae99 7F       		.uleb128 0x7f
 26279 ae9a 08       		.byte	0x8
 26280 ae9b 9FAE0000 		.long	0xae9f
 26281 ae9f 11       		.uleb128 0x11
 26282 aea0 01AD0000 		.long	0xad01
 26283 aea4 7E       		.uleb128 0x7e
 26284 aea5 08       		.byte	0x8
 26285 aea6 98950000 		.long	0x9598
 26286 aeaa 7F       		.uleb128 0x7f
 26287 aeab 08       		.byte	0x8
 26288 aeac C68C0000 		.long	0x8cc6
 26289 aeb0 16       		.uleb128 0x16
 26290 aeb1 00000000 		.long	.LASF1524
 26291 aeb5 08       		.byte	0x8
 26292 aeb6 02       		.byte	0x2
 26293 aeb7 2D       		.byte	0x2d
 26294 aeb8 F5AE0000 		.long	0xaef5
 26295 aebc 9101     		.uleb128 0x91
 26296 aebe 5F743000 		.string	"_t0"
 26297 aec2 02       		.byte	0x2
 26298 aec3 33       		.byte	0x33
 26299 aec4 29000000 		.long	0x29
 26300 aec8 00       		.byte	0
 26301 aec9 37       		.uleb128 0x37
 26302 aeca 00000000 		.long	.LASF1524
 26303 aece 02       		.byte	0x2
 26304 aecf 2E       		.byte	0x2e
 26305 aed0 D8AE0000 		.long	0xaed8
 26306 aed4 DEAE0000 		.long	0xaede
 26307 aed8 08       		.uleb128 0x8
 26308 aed9 F5AE0000 		.long	0xaef5
 26309 aedd 00       		.byte	0
 26310 aede 39       		.uleb128 0x39
 26311 aedf 00000000 		.long	.LASF1525
 26312 aee3 02       		.byte	0x2
 26313 aee4 2F       		.byte	0x2f
 26314 aee5 E9AE0000 		.long	0xaee9
 26315 aee9 08       		.uleb128 0x8
 26316 aeea F5AE0000 		.long	0xaef5
 26317 aeee 08       		.uleb128 0x8
 26318 aeef D8800000 		.long	0x80d8
 26319 aef3 00       		.byte	0
 26320 aef4 00       		.byte	0
 26321 aef5 7E       		.uleb128 0x7e
 26322 aef6 08       		.byte	0x8
 26323 aef7 B0AE0000 		.long	0xaeb0
 26324 aefb 16       		.uleb128 0x16
 26325 aefc 00000000 		.long	.LASF1526
 26326 af00 28       		.byte	0x28
 26327 af01 02       		.byte	0x2
 26328 af02 36       		.byte	0x36
GAS LISTING /tmp/ccmMnd7l.s 			page 764


 26329 af03 98AF0000 		.long	0xaf98
 26330 af07 9101     		.uleb128 0x91
 26331 af09 5F743000 		.string	"_t0"
 26332 af0d 02       		.byte	0x2
 26333 af0e 4A       		.byte	0x4a
 26334 af0f 29000000 		.long	0x29
 26335 af13 00       		.byte	0
 26336 af14 9101     		.uleb128 0x91
 26337 af16 5F747300 		.string	"_ts"
 26338 af1a 02       		.byte	0x2
 26339 af1b 4B       		.byte	0x4b
 26340 af1c 2E370000 		.long	0x372e
 26341 af20 08       		.byte	0x8
 26342 af21 9101     		.uleb128 0x91
 26343 af23 5F6900   		.string	"_i"
 26344 af26 02       		.byte	0x2
 26345 af27 4C       		.byte	0x4c
 26346 af28 94370000 		.long	0x3794
 26347 af2c 20       		.byte	0x20
 26348 af2d 37       		.uleb128 0x37
 26349 af2e 00000000 		.long	.LASF1526
 26350 af32 02       		.byte	0x2
 26351 af33 37       		.byte	0x37
 26352 af34 3CAF0000 		.long	0xaf3c
 26353 af38 47AF0000 		.long	0xaf47
 26354 af3c 08       		.uleb128 0x8
 26355 af3d 98AF0000 		.long	0xaf98
 26356 af41 09       		.uleb128 0x9
 26357 af42 D8800000 		.long	0x80d8
 26358 af46 00       		.byte	0
 26359 af47 0B       		.uleb128 0xb
 26360 af48 00000000 		.long	.LASF1527
 26361 af4c 02       		.byte	0x2
 26362 af4d 38       		.byte	0x38
 26363 af4e 00000000 		.long	.LASF1528
 26364 af52 E0800000 		.long	0x80e0
 26365 af56 5EAF0000 		.long	0xaf5e
 26366 af5a 64AF0000 		.long	0xaf64
 26367 af5e 08       		.uleb128 0x8
 26368 af5f 98AF0000 		.long	0xaf98
 26369 af63 00       		.byte	0
 26370 af64 0B       		.uleb128 0xb
 26371 af65 00000000 		.long	.LASF851
 26372 af69 02       		.byte	0x2
 26373 af6a 3E       		.byte	0x3e
 26374 af6b 00000000 		.long	.LASF1529
 26375 af6f E0800000 		.long	0x80e0
 26376 af73 7BAF0000 		.long	0xaf7b
 26377 af77 81AF0000 		.long	0xaf81
 26378 af7b 08       		.uleb128 0x8
 26379 af7c 9EAF0000 		.long	0xaf9e
 26380 af80 00       		.byte	0
 26381 af81 39       		.uleb128 0x39
 26382 af82 00000000 		.long	.LASF1530
 26383 af86 02       		.byte	0x2
 26384 af87 41       		.byte	0x41
 26385 af88 8CAF0000 		.long	0xaf8c
GAS LISTING /tmp/ccmMnd7l.s 			page 765


 26386 af8c 08       		.uleb128 0x8
 26387 af8d 98AF0000 		.long	0xaf98
 26388 af91 08       		.uleb128 0x8
 26389 af92 D8800000 		.long	0x80d8
 26390 af96 00       		.byte	0
 26391 af97 00       		.byte	0
 26392 af98 7E       		.uleb128 0x7e
 26393 af99 08       		.byte	0x8
 26394 af9a FBAE0000 		.long	0xaefb
 26395 af9e 7E       		.uleb128 0x7e
 26396 af9f 08       		.byte	0x8
 26397 afa0 A4AF0000 		.long	0xafa4
 26398 afa4 11       		.uleb128 0x11
 26399 afa5 FBAE0000 		.long	0xaefb
 26400 afa9 7E       		.uleb128 0x7e
 26401 afaa 08       		.byte	0x8
 26402 afab FF8E0000 		.long	0x8eff
 26403 afaf 7F       		.uleb128 0x7f
 26404 afb0 08       		.byte	0x8
 26405 afb1 B5AF0000 		.long	0xafb5
 26406 afb5 11       		.uleb128 0x11
 26407 afb6 07AD0000 		.long	0xad07
 26408 afba 7E       		.uleb128 0x7e
 26409 afbb 08       		.byte	0x8
 26410 afbc CE950000 		.long	0x95ce
 26411 afc0 7F       		.uleb128 0x7f
 26412 afc1 08       		.byte	0x8
 26413 afc2 FF8E0000 		.long	0x8eff
 26414 afc6 8801     		.uleb128 0x88
 26415 afc8 18       		.byte	0x18
 26416 afc9 4D       		.byte	0x4d
 26417 afca 27       		.byte	0x27
 26418 afcb 00000000 		.long	.LASF1531
 26419 afcf 04B00000 		.long	0xb004
 26420 afd3 9101     		.uleb128 0x91
 26421 afd5 62756600 		.string	"buf"
 26422 afd9 4D       		.byte	0x4d
 26423 afda 28       		.byte	0x28
 26424 afdb 04B00000 		.long	0xb004
 26425 afdf 00       		.byte	0
 26426 afe0 9101     		.uleb128 0x91
 26427 afe2 6D617800 		.string	"max"
 26428 afe6 4D       		.byte	0x4d
 26429 afe7 29       		.byte	0x29
 26430 afe8 30000000 		.long	0x30
 26431 afec 08       		.byte	0x8
 26432 afed 9101     		.uleb128 0x91
 26433 afef 7700     		.string	"w"
 26434 aff1 4D       		.byte	0x4d
 26435 aff2 2A       		.byte	0x2a
 26436 aff3 18810000 		.long	0x8118
 26437 aff7 0C       		.byte	0xc
 26438 aff8 9101     		.uleb128 0x91
 26439 affa 6800     		.string	"h"
 26440 affc 4D       		.byte	0x4d
 26441 affd 2A       		.byte	0x2a
 26442 affe 18810000 		.long	0x8118
GAS LISTING /tmp/ccmMnd7l.s 			page 766


 26443 b002 10       		.byte	0x10
 26444 b003 00       		.byte	0
 26445 b004 7E       		.uleb128 0x7e
 26446 b005 08       		.byte	0x8
 26447 b006 30000000 		.long	0x30
 26448 b00a 13       		.uleb128 0x13
 26449 b00b 00000000 		.long	.LASF1532
 26450 b00f 4D       		.byte	0x4d
 26451 b010 2B       		.byte	0x2b
 26452 b011 C6AF0000 		.long	0xafc6
 26453 b015 8801     		.uleb128 0x88
 26454 b017 10       		.byte	0x10
 26455 b018 4D       		.byte	0x4d
 26456 b019 31       		.byte	0x31
 26457 b01a 00000000 		.long	.LASF1533
 26458 b01e 46B00000 		.long	0xb046
 26459 b022 9101     		.uleb128 0x91
 26460 b024 62756600 		.string	"buf"
 26461 b028 4D       		.byte	0x4d
 26462 b029 32       		.byte	0x32
 26463 b02a 04B00000 		.long	0xb004
 26464 b02e 00       		.byte	0
 26465 b02f 9101     		.uleb128 0x91
 26466 b031 7700     		.string	"w"
 26467 b033 4D       		.byte	0x4d
 26468 b034 33       		.byte	0x33
 26469 b035 18810000 		.long	0x8118
 26470 b039 08       		.byte	0x8
 26471 b03a 9101     		.uleb128 0x91
 26472 b03c 6800     		.string	"h"
 26473 b03e 4D       		.byte	0x4d
 26474 b03f 33       		.byte	0x33
 26475 b040 18810000 		.long	0x8118
 26476 b044 0C       		.byte	0xc
 26477 b045 00       		.byte	0
 26478 b046 13       		.uleb128 0x13
 26479 b047 00000000 		.long	.LASF1534
 26480 b04b 4D       		.byte	0x4d
 26481 b04c 34       		.byte	0x34
 26482 b04d 15B00000 		.long	0xb015
 26483 b051 7E       		.uleb128 0x7e
 26484 b052 08       		.byte	0x8
 26485 b053 F6520000 		.long	0x52f6
 26486 b057 7E       		.uleb128 0x7e
 26487 b058 08       		.byte	0x8
 26488 b059 0AB00000 		.long	0xb00a
 26489 b05d 7E       		.uleb128 0x7e
 26490 b05e 08       		.byte	0x8
 26491 b05f 1D530000 		.long	0x531d
 26492 b063 7E       		.uleb128 0x7e
 26493 b064 08       		.byte	0x8
 26494 b065 46B00000 		.long	0xb046
 26495 b069 7E       		.uleb128 0x7e
 26496 b06a 08       		.byte	0x8
 26497 b06b 6A510000 		.long	0x516a
 26498 b06f 7E       		.uleb128 0x7e
 26499 b070 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 767


 26500 b071 44530000 		.long	0x5344
 26501 b075 7E       		.uleb128 0x7e
 26502 b076 08       		.byte	0x8
 26503 b077 56530000 		.long	0x5356
 26504 b07b 7E       		.uleb128 0x7e
 26505 b07c 08       		.byte	0x8
 26506 b07d E2530000 		.long	0x53e2
 26507 b081 7E       		.uleb128 0x7e
 26508 b082 08       		.byte	0x8
 26509 b083 49530000 		.long	0x5349
 26510 b087 7F       		.uleb128 0x7f
 26511 b088 08       		.byte	0x8
 26512 b089 E2530000 		.long	0x53e2
 26513 b08d 7E       		.uleb128 0x7e
 26514 b08e 08       		.byte	0x8
 26515 b08f 64550000 		.long	0x5564
 26516 b093 7E       		.uleb128 0x7e
 26517 b094 08       		.byte	0x8
 26518 b095 74930000 		.long	0x9374
 26519 b099 7F       		.uleb128 0x7f
 26520 b09a 08       		.byte	0x8
 26521 b09b 9FB00000 		.long	0xb09f
 26522 b09f 11       		.uleb128 0x11
 26523 b0a0 D0AD0000 		.long	0xadd0
 26524 b0a4 7E       		.uleb128 0x7e
 26525 b0a5 08       		.byte	0x8
 26526 b0a6 D3950000 		.long	0x95d3
 26527 b0aa 7F       		.uleb128 0x7f
 26528 b0ab 08       		.byte	0x8
 26529 b0ac 74930000 		.long	0x9374
 26530 b0b0 7F       		.uleb128 0x7f
 26531 b0b1 08       		.byte	0x8
 26532 b0b2 64550000 		.long	0x5564
 26533 b0b6 8101     		.uleb128 0x81
 26534 b0b8 08       		.byte	0x8
 26535 b0b9 49530000 		.long	0x5349
 26536 b0bd 7E       		.uleb128 0x7e
 26537 b0be 08       		.byte	0x8
 26538 b0bf 03580000 		.long	0x5803
 26539 b0c3 7F       		.uleb128 0x7f
 26540 b0c4 08       		.byte	0x8
 26541 b0c5 03580000 		.long	0x5803
 26542 b0c9 7E       		.uleb128 0x7e
 26543 b0ca 08       		.byte	0x8
 26544 b0cb 53580000 		.long	0x5853
 26545 b0cf 7F       		.uleb128 0x7f
 26546 b0d0 08       		.byte	0x8
 26547 b0d1 28590000 		.long	0x5928
 26548 b0d5 7F       		.uleb128 0x7f
 26549 b0d6 08       		.byte	0x8
 26550 b0d7 812C0000 		.long	0x2c81
 26551 b0db 7F       		.uleb128 0x7f
 26552 b0dc 08       		.byte	0x8
 26553 b0dd 53580000 		.long	0x5853
 26554 b0e1 7F       		.uleb128 0x7f
 26555 b0e2 08       		.byte	0x8
 26556 b0e3 2D590000 		.long	0x592d
GAS LISTING /tmp/ccmMnd7l.s 			page 768


 26557 b0e7 7F       		.uleb128 0x7f
 26558 b0e8 08       		.byte	0x8
 26559 b0e9 32590000 		.long	0x5932
 26560 b0ed 7F       		.uleb128 0x7f
 26561 b0ee 08       		.byte	0x8
 26562 b0ef CA5A0000 		.long	0x5aca
 26563 b0f3 7F       		.uleb128 0x7f
 26564 b0f4 08       		.byte	0x8
 26565 b0f5 4C590000 		.long	0x594c
 26566 b0f9 7F       		.uleb128 0x7f
 26567 b0fa 08       		.byte	0x8
 26568 b0fb BB590000 		.long	0x59bb
 26569 b0ff 7E       		.uleb128 0x7e
 26570 b100 08       		.byte	0x8
 26571 b101 32590000 		.long	0x5932
 26572 b105 8101     		.uleb128 0x81
 26573 b107 08       		.byte	0x8
 26574 b108 32590000 		.long	0x5932
 26575 b10c 7E       		.uleb128 0x7e
 26576 b10d 08       		.byte	0x8
 26577 b10e CF5A0000 		.long	0x5acf
 26578 b112 7F       		.uleb128 0x7f
 26579 b113 08       		.byte	0x8
 26580 b114 E45B0000 		.long	0x5be4
 26581 b118 8101     		.uleb128 0x81
 26582 b11a 08       		.byte	0x8
 26583 b11b CF5A0000 		.long	0x5acf
 26584 b11f 7F       		.uleb128 0x7f
 26585 b120 08       		.byte	0x8
 26586 b121 CF5A0000 		.long	0x5acf
 26587 b125 7E       		.uleb128 0x7e
 26588 b126 08       		.byte	0x8
 26589 b127 57560000 		.long	0x5657
 26590 b12b 7F       		.uleb128 0x7f
 26591 b12c 08       		.byte	0x8
 26592 b12d E95B0000 		.long	0x5be9
 26593 b131 8101     		.uleb128 0x81
 26594 b133 08       		.byte	0x8
 26595 b134 57560000 		.long	0x5657
 26596 b138 7E       		.uleb128 0x7e
 26597 b139 08       		.byte	0x8
 26598 b13a D65E0000 		.long	0x5ed6
 26599 b13e 7F       		.uleb128 0x7f
 26600 b13f 08       		.byte	0x8
 26601 b140 D65E0000 		.long	0x5ed6
 26602 b144 7E       		.uleb128 0x7e
 26603 b145 08       		.byte	0x8
 26604 b146 265F0000 		.long	0x5f26
 26605 b14a 7F       		.uleb128 0x7f
 26606 b14b 08       		.byte	0x8
 26607 b14c F45F0000 		.long	0x5ff4
 26608 b150 7F       		.uleb128 0x7f
 26609 b151 08       		.byte	0x8
 26610 b152 1D530000 		.long	0x531d
 26611 b156 7F       		.uleb128 0x7f
 26612 b157 08       		.byte	0x8
 26613 b158 265F0000 		.long	0x5f26
GAS LISTING /tmp/ccmMnd7l.s 			page 769


 26614 b15c 7F       		.uleb128 0x7f
 26615 b15d 08       		.byte	0x8
 26616 b15e F95F0000 		.long	0x5ff9
 26617 b162 7F       		.uleb128 0x7f
 26618 b163 08       		.byte	0x8
 26619 b164 FE5F0000 		.long	0x5ffe
 26620 b168 7F       		.uleb128 0x7f
 26621 b169 08       		.byte	0x8
 26622 b16a 95610000 		.long	0x6195
 26623 b16e 7F       		.uleb128 0x7f
 26624 b16f 08       		.byte	0x8
 26625 b170 17600000 		.long	0x6017
 26626 b174 7F       		.uleb128 0x7f
 26627 b175 08       		.byte	0x8
 26628 b176 86600000 		.long	0x6086
 26629 b17a 7E       		.uleb128 0x7e
 26630 b17b 08       		.byte	0x8
 26631 b17c FE5F0000 		.long	0x5ffe
 26632 b180 8101     		.uleb128 0x81
 26633 b182 08       		.byte	0x8
 26634 b183 FE5F0000 		.long	0x5ffe
 26635 b187 7E       		.uleb128 0x7e
 26636 b188 08       		.byte	0x8
 26637 b189 9A610000 		.long	0x619a
 26638 b18d 7F       		.uleb128 0x7f
 26639 b18e 08       		.byte	0x8
 26640 b18f 93B10000 		.long	0xb193
 26641 b193 11       		.uleb128 0x11
 26642 b194 63B00000 		.long	0xb063
 26643 b198 7F       		.uleb128 0x7f
 26644 b199 08       		.byte	0x8
 26645 b19a 63B00000 		.long	0xb063
 26646 b19e 7F       		.uleb128 0x7f
 26647 b19f 08       		.byte	0x8
 26648 b1a0 9A610000 		.long	0x619a
 26649 b1a4 7F       		.uleb128 0x7f
 26650 b1a5 08       		.byte	0x8
 26651 b1a6 6E620000 		.long	0x626e
 26652 b1aa 7F       		.uleb128 0x7f
 26653 b1ab 08       		.byte	0x8
 26654 b1ac 73620000 		.long	0x6273
 26655 b1b0 7F       		.uleb128 0x7f
 26656 b1b1 08       		.byte	0x8
 26657 b1b2 23640000 		.long	0x6423
 26658 b1b6 7F       		.uleb128 0x7f
 26659 b1b7 08       		.byte	0x8
 26660 b1b8 8C620000 		.long	0x628c
 26661 b1bc 7F       		.uleb128 0x7f
 26662 b1bd 08       		.byte	0x8
 26663 b1be FB620000 		.long	0x62fb
 26664 b1c2 7E       		.uleb128 0x7e
 26665 b1c3 08       		.byte	0x8
 26666 b1c4 73620000 		.long	0x6273
 26667 b1c8 8101     		.uleb128 0x81
 26668 b1ca 08       		.byte	0x8
 26669 b1cb 73620000 		.long	0x6273
 26670 b1cf 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccmMnd7l.s 			page 770


 26671 b1d0 08       		.byte	0x8
 26672 b1d1 28640000 		.long	0x6428
 26673 b1d5 7F       		.uleb128 0x7f
 26674 b1d6 08       		.byte	0x8
 26675 b1d7 49650000 		.long	0x6549
 26676 b1db 8101     		.uleb128 0x81
 26677 b1dd 08       		.byte	0x8
 26678 b1de 28640000 		.long	0x6428
 26679 b1e2 7F       		.uleb128 0x7f
 26680 b1e3 08       		.byte	0x8
 26681 b1e4 28640000 		.long	0x6428
 26682 b1e8 7F       		.uleb128 0x7f
 26683 b1e9 08       		.byte	0x8
 26684 b1ea 46B00000 		.long	0xb046
 26685 b1ee 7E       		.uleb128 0x7e
 26686 b1ef 08       		.byte	0x8
 26687 b1f0 085C0000 		.long	0x5c08
 26688 b1f4 8101     		.uleb128 0x81
 26689 b1f6 08       		.byte	0x8
 26690 b1f7 FB5B0000 		.long	0x5bfb
 26691 b1fb 8101     		.uleb128 0x81
 26692 b1fd 08       		.byte	0x8
 26693 b1fe 085C0000 		.long	0x5c08
 26694 b202 7F       		.uleb128 0x7f
 26695 b203 08       		.byte	0x8
 26696 b204 085C0000 		.long	0x5c08
 26697 b208 7E       		.uleb128 0x7e
 26698 b209 08       		.byte	0x8
 26699 b20a 8B650000 		.long	0x658b
 26700 b20e 7F       		.uleb128 0x7f
 26701 b20f 08       		.byte	0x8
 26702 b210 505C0000 		.long	0x5c50
 26703 b214 7F       		.uleb128 0x7f
 26704 b215 08       		.byte	0x8
 26705 b216 005E0000 		.long	0x5e00
 26706 b21a 7F       		.uleb128 0x7f
 26707 b21b 08       		.byte	0x8
 26708 b21c 8B650000 		.long	0x658b
 26709 b220 7E       		.uleb128 0x7e
 26710 b221 08       		.byte	0x8
 26711 b222 78680000 		.long	0x6878
 26712 b226 7F       		.uleb128 0x7f
 26713 b227 08       		.byte	0x8
 26714 b228 46690000 		.long	0x6946
 26715 b22c 7F       		.uleb128 0x7f
 26716 b22d 08       		.byte	0x8
 26717 b22e F6520000 		.long	0x52f6
 26718 b232 7F       		.uleb128 0x7f
 26719 b233 08       		.byte	0x8
 26720 b234 78680000 		.long	0x6878
 26721 b238 7F       		.uleb128 0x7f
 26722 b239 08       		.byte	0x8
 26723 b23a 4B690000 		.long	0x694b
 26724 b23e 7F       		.uleb128 0x7f
 26725 b23f 08       		.byte	0x8
 26726 b240 50690000 		.long	0x6950
 26727 b244 7F       		.uleb128 0x7f
GAS LISTING /tmp/ccmMnd7l.s 			page 771


 26728 b245 08       		.byte	0x8
 26729 b246 E76A0000 		.long	0x6ae7
 26730 b24a 7F       		.uleb128 0x7f
 26731 b24b 08       		.byte	0x8
 26732 b24c 69690000 		.long	0x6969
 26733 b250 7F       		.uleb128 0x7f
 26734 b251 08       		.byte	0x8
 26735 b252 D8690000 		.long	0x69d8
 26736 b256 7E       		.uleb128 0x7e
 26737 b257 08       		.byte	0x8
 26738 b258 50690000 		.long	0x6950
 26739 b25c 8101     		.uleb128 0x81
 26740 b25e 08       		.byte	0x8
 26741 b25f 50690000 		.long	0x6950
 26742 b263 7E       		.uleb128 0x7e
 26743 b264 08       		.byte	0x8
 26744 b265 EC6A0000 		.long	0x6aec
 26745 b269 7F       		.uleb128 0x7f
 26746 b26a 08       		.byte	0x8
 26747 b26b 6FB20000 		.long	0xb26f
 26748 b26f 11       		.uleb128 0x11
 26749 b270 57B00000 		.long	0xb057
 26750 b274 7F       		.uleb128 0x7f
 26751 b275 08       		.byte	0x8
 26752 b276 57B00000 		.long	0xb057
 26753 b27a 7F       		.uleb128 0x7f
 26754 b27b 08       		.byte	0x8
 26755 b27c EC6A0000 		.long	0x6aec
 26756 b280 7F       		.uleb128 0x7f
 26757 b281 08       		.byte	0x8
 26758 b282 C06B0000 		.long	0x6bc0
 26759 b286 7F       		.uleb128 0x7f
 26760 b287 08       		.byte	0x8
 26761 b288 C56B0000 		.long	0x6bc5
 26762 b28c 7F       		.uleb128 0x7f
 26763 b28d 08       		.byte	0x8
 26764 b28e 756D0000 		.long	0x6d75
 26765 b292 7F       		.uleb128 0x7f
 26766 b293 08       		.byte	0x8
 26767 b294 DE6B0000 		.long	0x6bde
 26768 b298 7F       		.uleb128 0x7f
 26769 b299 08       		.byte	0x8
 26770 b29a 4D6C0000 		.long	0x6c4d
 26771 b29e 7E       		.uleb128 0x7e
 26772 b29f 08       		.byte	0x8
 26773 b2a0 C56B0000 		.long	0x6bc5
 26774 b2a4 8101     		.uleb128 0x81
 26775 b2a6 08       		.byte	0x8
 26776 b2a7 C56B0000 		.long	0x6bc5
 26777 b2ab 7E       		.uleb128 0x7e
 26778 b2ac 08       		.byte	0x8
 26779 b2ad 7A6D0000 		.long	0x6d7a
 26780 b2b1 7F       		.uleb128 0x7f
 26781 b2b2 08       		.byte	0x8
 26782 b2b3 9B6E0000 		.long	0x6e9b
 26783 b2b7 8101     		.uleb128 0x81
 26784 b2b9 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 772


 26785 b2ba 7A6D0000 		.long	0x6d7a
 26786 b2be 7F       		.uleb128 0x7f
 26787 b2bf 08       		.byte	0x8
 26788 b2c0 7A6D0000 		.long	0x6d7a
 26789 b2c4 7F       		.uleb128 0x7f
 26790 b2c5 08       		.byte	0x8
 26791 b2c6 0AB00000 		.long	0xb00a
 26792 b2ca 7E       		.uleb128 0x7e
 26793 b2cb 08       		.byte	0x8
 26794 b2cc AA650000 		.long	0x65aa
 26795 b2d0 8101     		.uleb128 0x81
 26796 b2d2 08       		.byte	0x8
 26797 b2d3 9D650000 		.long	0x659d
 26798 b2d7 8101     		.uleb128 0x81
 26799 b2d9 08       		.byte	0x8
 26800 b2da AA650000 		.long	0x65aa
 26801 b2de 7F       		.uleb128 0x7f
 26802 b2df 08       		.byte	0x8
 26803 b2e0 AA650000 		.long	0x65aa
 26804 b2e4 7E       		.uleb128 0x7e
 26805 b2e5 08       		.byte	0x8
 26806 b2e6 DD6E0000 		.long	0x6edd
 26807 b2ea 7F       		.uleb128 0x7f
 26808 b2eb 08       		.byte	0x8
 26809 b2ec F2650000 		.long	0x65f2
 26810 b2f0 7F       		.uleb128 0x7f
 26811 b2f1 08       		.byte	0x8
 26812 b2f2 A2670000 		.long	0x67a2
 26813 b2f6 7F       		.uleb128 0x7f
 26814 b2f7 08       		.byte	0x8
 26815 b2f8 DD6E0000 		.long	0x6edd
 26816 b2fc 8101     		.uleb128 0x81
 26817 b2fe 08       		.byte	0x8
 26818 b2ff 1D530000 		.long	0x531d
 26819 b303 8101     		.uleb128 0x81
 26820 b305 08       		.byte	0x8
 26821 b306 F6520000 		.long	0x52f6
 26822 b30a 7E       		.uleb128 0x7e
 26823 b30b 08       		.byte	0x8
 26824 b30c 83860000 		.long	0x8683
 26825 b310 7F       		.uleb128 0x7f
 26826 b311 08       		.byte	0x8
 26827 b312 1AAC0000 		.long	0xac1a
 26828 b316 7E       		.uleb128 0x7e
 26829 b317 08       		.byte	0x8
 26830 b318 D8950000 		.long	0x95d8
 26831 b31c 7F       		.uleb128 0x7f
 26832 b31d 08       		.byte	0x8
 26833 b31e 83860000 		.long	0x8683
 26834 b322 7E       		.uleb128 0x7e
 26835 b323 08       		.byte	0x8
 26836 b324 64840000 		.long	0x8464
 26837 b328 7F       		.uleb128 0x7f
 26838 b329 08       		.byte	0x8
 26839 b32a 2EB30000 		.long	0xb32e
 26840 b32e 11       		.uleb128 0x11
 26841 b32f 289D0000 		.long	0x9d28
GAS LISTING /tmp/ccmMnd7l.s 			page 773


 26842 b333 7E       		.uleb128 0x7e
 26843 b334 08       		.byte	0x8
 26844 b335 DD950000 		.long	0x95dd
 26845 b339 7F       		.uleb128 0x7f
 26846 b33a 08       		.byte	0x8
 26847 b33b 64840000 		.long	0x8464
 26848 b33f 9801     		.uleb128 0x98
 26849 b341 6D0C0000 		.long	0xc6d
 26850 b345 03       		.byte	0x3
 26851 b346 4EB30000 		.long	0xb34e
 26852 b34a 59B30000 		.long	0xb359
 26853 b34e 9901     		.uleb128 0x99
 26854 b350 00000000 		.long	.LASF1535
 26855 b354 59B30000 		.long	0xb359
 26856 b358 00       		.byte	0
 26857 b359 11       		.uleb128 0x11
 26858 b35a ACAB0000 		.long	0xabac
 26859 b35e 7E       		.uleb128 0x7e
 26860 b35f 08       		.byte	0x8
 26861 b360 05730000 		.long	0x7305
 26862 b364 9801     		.uleb128 0x98
 26863 b366 85720000 		.long	0x7285
 26864 b36a 03       		.byte	0x3
 26865 b36b 73B30000 		.long	0xb373
 26866 b36f 7EB30000 		.long	0xb37e
 26867 b373 9901     		.uleb128 0x99
 26868 b375 00000000 		.long	.LASF1535
 26869 b379 7EB30000 		.long	0xb37e
 26870 b37d 00       		.byte	0
 26871 b37e 11       		.uleb128 0x11
 26872 b37f 5EB30000 		.long	0xb35e
 26873 b383 9A01     		.uleb128 0x9a
 26874 b385 00000000 		.long	.LASF1536
 26875 b389 4E       		.byte	0x4e
 26876 b38a F7       		.byte	0xf7
 26877 b38b D8800000 		.long	0x80d8
 26878 b38f 03       		.byte	0x3
 26879 b390 A4B30000 		.long	0xb3a4
 26880 b394 9B01     		.uleb128 0x9b
 26881 b396 9C01     		.uleb128 0x9c
 26882 b398 00000000 		.long	.LASF1539
 26883 b39c 4E       		.byte	0x4e
 26884 b39d F9       		.byte	0xf9
 26885 b39e A4B30000 		.long	0xb3a4
 26886 b3a2 00       		.byte	0
 26887 b3a3 00       		.byte	0
 26888 b3a4 11       		.uleb128 0x11
 26889 b3a5 B1800000 		.long	0x80b1
 26890 b3a9 7E       		.uleb128 0x7e
 26891 b3aa 08       		.byte	0x8
 26892 b3ab AFB30000 		.long	0xb3af
 26893 b3af 77       		.uleb128 0x77
 26894 b3b0 BFA40000 		.long	0xa4bf
 26895 b3b4 9D01     		.uleb128 0x9d
 26896 b3b6 12960000 		.long	0x9612
 26897 b3ba 03       		.byte	0x3
 26898 b3bb D8B30000 		.long	0xb3d8
GAS LISTING /tmp/ccmMnd7l.s 			page 774


 26899 b3bf 9E01     		.uleb128 0x9e
 26900 b3c1 00000000 		.long	.LASF1537
 26901 b3c5 0F       		.byte	0xf
 26902 b3c6 30       		.byte	0x30
 26903 b3c7 A9B30000 		.long	0xb3a9
 26904 b3cb 9E01     		.uleb128 0x9e
 26905 b3cd 00000000 		.long	.LASF1538
 26906 b3d1 0F       		.byte	0xf
 26907 b3d2 30       		.byte	0x30
 26908 b3d3 D8800000 		.long	0x80d8
 26909 b3d7 00       		.byte	0
 26910 b3d8 7E       		.uleb128 0x7e
 26911 b3d9 08       		.byte	0x8
 26912 b3da BFA40000 		.long	0xa4bf
 26913 b3de 9D01     		.uleb128 0x9d
 26914 b3e0 2D960000 		.long	0x962d
 26915 b3e4 03       		.byte	0x3
 26916 b3e5 11B40000 		.long	0xb411
 26917 b3e9 9E01     		.uleb128 0x9e
 26918 b3eb 00000000 		.long	.LASF1537
 26919 b3ef 0F       		.byte	0xf
 26920 b3f0 41       		.byte	0x41
 26921 b3f1 D8B30000 		.long	0xb3d8
 26922 b3f5 9E01     		.uleb128 0x9e
 26923 b3f7 00000000 		.long	.LASF1538
 26924 b3fb 0F       		.byte	0xf
 26925 b3fc 41       		.byte	0x41
 26926 b3fd D8800000 		.long	0x80d8
 26927 b401 9B01     		.uleb128 0x9b
 26928 b403 9C01     		.uleb128 0x9c
 26929 b405 00000000 		.long	.LASF1540
 26930 b409 0F       		.byte	0xf
 26931 b40a 43       		.byte	0x43
 26932 b40b BFA40000 		.long	0xa4bf
 26933 b40f 00       		.byte	0
 26934 b410 00       		.byte	0
 26935 b411 9D01     		.uleb128 0x9d
 26936 b413 EC0A0000 		.long	0xaec
 26937 b417 03       		.byte	0x3
 26938 b418 2CB40000 		.long	0xb42c
 26939 b41c 9B01     		.uleb128 0x9b
 26940 b41e 9F01     		.uleb128 0x9f
 26941 b420 5F5F7000 		.string	"__p"
 26942 b424 07       		.byte	0x7
 26943 b425 BA       		.byte	0xba
 26944 b426 B1800000 		.long	0x80b1
 26945 b42a 00       		.byte	0
 26946 b42b 00       		.byte	0
 26947 b42c 9D01     		.uleb128 0x9d
 26948 b42e 48960000 		.long	0x9648
 26949 b432 03       		.byte	0x3
 26950 b433 50B40000 		.long	0xb450
 26951 b437 9E01     		.uleb128 0x9e
 26952 b439 00000000 		.long	.LASF1537
 26953 b43d 0F       		.byte	0xf
 26954 b43e 4E       		.byte	0x4e
 26955 b43f D8B30000 		.long	0xb3d8
GAS LISTING /tmp/ccmMnd7l.s 			page 775


 26956 b443 9E01     		.uleb128 0x9e
 26957 b445 00000000 		.long	.LASF1538
 26958 b449 0F       		.byte	0xf
 26959 b44a 4E       		.byte	0x4e
 26960 b44b D8800000 		.long	0x80d8
 26961 b44f 00       		.byte	0
 26962 b450 9801     		.uleb128 0x98
 26963 b452 ED0B0000 		.long	0xbed
 26964 b456 03       		.byte	0x3
 26965 b457 5FB40000 		.long	0xb45f
 26966 b45b 76B40000 		.long	0xb476
 26967 b45f 9901     		.uleb128 0x99
 26968 b461 00000000 		.long	.LASF1535
 26969 b465 76B40000 		.long	0xb476
 26970 b469 A001     		.uleb128 0xa0
 26971 b46b 5F5F6100 		.string	"__a"
 26972 b46f 07       		.byte	0x7
 26973 b470 ED       		.byte	0xed
 26974 b471 7BB40000 		.long	0xb47b
 26975 b475 00       		.byte	0
 26976 b476 11       		.uleb128 0x11
 26977 b477 B8AB0000 		.long	0xabb8
 26978 b47b 11       		.uleb128 0x11
 26979 b47c 2DA30000 		.long	0xa32d
 26980 b480 9D01     		.uleb128 0x9d
 26981 b482 15820000 		.long	0x8215
 26982 b486 03       		.byte	0x3
 26983 b487 91B40000 		.long	0xb491
 26984 b48b 09       		.uleb128 0x9
 26985 b48c 58810000 		.long	0x8158
 26986 b490 00       		.byte	0
 26987 b491 9D01     		.uleb128 0x9d
 26988 b493 2A820000 		.long	0x822a
 26989 b497 03       		.byte	0x3
 26990 b498 A2B40000 		.long	0xb4a2
 26991 b49c 09       		.uleb128 0x9
 26992 b49d 58810000 		.long	0x8158
 26993 b4a1 00       		.byte	0
 26994 b4a2 9D01     		.uleb128 0x9d
 26995 b4a4 0A730000 		.long	0x730a
 26996 b4a8 03       		.byte	0x3
 26997 b4a9 C6B40000 		.long	0xb4c6
 26998 b4ad A001     		.uleb128 0xa0
 26999 b4af 5F5F6100 		.string	"__a"
 27000 b4b3 15       		.byte	0x15
 27001 b4b4 4F       		.byte	0x4f
 27002 b4b5 C1240000 		.long	0x24c1
 27003 b4b9 A001     		.uleb128 0xa0
 27004 b4bb 5F5F6200 		.string	"__b"
 27005 b4bf 15       		.byte	0x15
 27006 b4c0 4F       		.byte	0x4f
 27007 b4c1 C1240000 		.long	0x24c1
 27008 b4c5 00       		.byte	0
 27009 b4c6 9D01     		.uleb128 0x9d
 27010 b4c8 24730000 		.long	0x7324
 27011 b4cc 03       		.byte	0x3
 27012 b4cd EAB40000 		.long	0xb4ea
GAS LISTING /tmp/ccmMnd7l.s 			page 776


 27013 b4d1 A001     		.uleb128 0xa0
 27014 b4d3 5F5F6100 		.string	"__a"
 27015 b4d7 15       		.byte	0x15
 27016 b4d8 4B       		.byte	0x4b
 27017 b4d9 C1240000 		.long	0x24c1
 27018 b4dd A001     		.uleb128 0xa0
 27019 b4df 5F5F6200 		.string	"__b"
 27020 b4e3 15       		.byte	0x15
 27021 b4e4 4B       		.byte	0x4b
 27022 b4e5 C1240000 		.long	0x24c1
 27023 b4e9 00       		.byte	0
 27024 b4ea 9D01     		.uleb128 0x9d
 27025 b4ec 3E730000 		.long	0x733e
 27026 b4f0 03       		.byte	0x3
 27027 b4f1 0EB50000 		.long	0xb50e
 27028 b4f5 A001     		.uleb128 0xa0
 27029 b4f7 5F5F6100 		.string	"__a"
 27030 b4fb 15       		.byte	0x15
 27031 b4fc 9D       		.byte	0x9d
 27032 b4fd 89250000 		.long	0x2589
 27033 b501 A001     		.uleb128 0xa0
 27034 b503 5F5F6200 		.string	"__b"
 27035 b507 15       		.byte	0x15
 27036 b508 9D       		.byte	0x9d
 27037 b509 89250000 		.long	0x2589
 27038 b50d 00       		.byte	0
 27039 b50e 7E       		.uleb128 0x7e
 27040 b50f 08       		.byte	0x8
 27041 b510 7C720000 		.long	0x727c
 27042 b514 9801     		.uleb128 0x98
 27043 b516 A3720000 		.long	0x72a3
 27044 b51a 03       		.byte	0x3
 27045 b51b 23B50000 		.long	0xb523
 27046 b51f 3AB50000 		.long	0xb53a
 27047 b523 9901     		.uleb128 0x99
 27048 b525 00000000 		.long	.LASF1535
 27049 b529 3AB50000 		.long	0xb53a
 27050 b52d 9E01     		.uleb128 0x9e
 27051 b52f 00000000 		.long	.LASF1483
 27052 b533 0D       		.byte	0xd
 27053 b534 97       		.byte	0x97
 27054 b535 3C260000 		.long	0x263c
 27055 b539 00       		.byte	0
 27056 b53a 11       		.uleb128 0x11
 27057 b53b 0EB50000 		.long	0xb50e
 27058 b53f 9D01     		.uleb128 0x9d
 27059 b541 5C050000 		.long	0x55c
 27060 b545 03       		.byte	0x3
 27061 b546 58B50000 		.long	0xb558
 27062 b54a A101     		.uleb128 0xa1
 27063 b54c 5F5F7300 		.string	"__s"
 27064 b550 1F       		.byte	0x1f
 27065 b551 0601     		.value	0x106
 27066 b553 ADA10000 		.long	0xa1ad
 27067 b557 00       		.byte	0
 27068 b558 9D01     		.uleb128 0x9d
 27069 b55a 58730000 		.long	0x7358
GAS LISTING /tmp/ccmMnd7l.s 			page 777


 27070 b55e 03       		.byte	0x3
 27071 b55f 87B50000 		.long	0xb587
 27072 b563 35       		.uleb128 0x35
 27073 b564 00000000 		.long	.LASF302
 27074 b568 BD040000 		.long	0x4bd
 27075 b56c A201     		.uleb128 0xa2
 27076 b56e 00000000 		.long	.LASF1541
 27077 b572 08       		.byte	0x8
 27078 b573 1202     		.value	0x212
 27079 b575 87B50000 		.long	0xb587
 27080 b579 A101     		.uleb128 0xa1
 27081 b57b 5F5F7300 		.string	"__s"
 27082 b57f 08       		.byte	0x8
 27083 b580 1202     		.value	0x212
 27084 b582 069A0000 		.long	0x9a06
 27085 b586 00       		.byte	0
 27086 b587 11       		.uleb128 0x11
 27087 b588 AAAC0000 		.long	0xacaa
 27088 b58c 9D01     		.uleb128 0x9d
 27089 b58e 7C730000 		.long	0x737c
 27090 b592 03       		.byte	0x3
 27091 b593 A4B50000 		.long	0xb5a4
 27092 b597 A001     		.uleb128 0xa0
 27093 b599 5F5F6100 		.string	"__a"
 27094 b59d 15       		.byte	0x15
 27095 b59e 57       		.byte	0x57
 27096 b59f C1240000 		.long	0x24c1
 27097 b5a3 00       		.byte	0
 27098 b5a4 7F       		.uleb128 0x7f
 27099 b5a5 08       		.byte	0x8
 27100 b5a6 AB730000 		.long	0x73ab
 27101 b5aa 7F       		.uleb128 0x7f
 27102 b5ab 08       		.byte	0x8
 27103 b5ac C1240000 		.long	0x24c1
 27104 b5b0 9D01     		.uleb128 0x9d
 27105 b5b2 91730000 		.long	0x7391
 27106 b5b6 03       		.byte	0x3
 27107 b5b7 D4B50000 		.long	0xb5d4
 27108 b5bb A001     		.uleb128 0xa0
 27109 b5bd 5F5F6100 		.string	"__a"
 27110 b5c1 15       		.byte	0x15
 27111 b5c2 5F       		.byte	0x5f
 27112 b5c3 D4B50000 		.long	0xb5d4
 27113 b5c7 A001     		.uleb128 0xa0
 27114 b5c9 5F5F6200 		.string	"__b"
 27115 b5cd 15       		.byte	0x15
 27116 b5ce 5F       		.byte	0x5f
 27117 b5cf C1240000 		.long	0x24c1
 27118 b5d3 00       		.byte	0
 27119 b5d4 11       		.uleb128 0x11
 27120 b5d5 AAB50000 		.long	0xb5aa
 27121 b5d9 9D01     		.uleb128 0x9d
 27122 b5db B0730000 		.long	0x73b0
 27123 b5df 03       		.byte	0x3
 27124 b5e0 FDB50000 		.long	0xb5fd
 27125 b5e4 A001     		.uleb128 0xa0
 27126 b5e6 5F5F6100 		.string	"__a"
GAS LISTING /tmp/ccmMnd7l.s 			page 778


 27127 b5ea 15       		.byte	0x15
 27128 b5eb 5B       		.byte	0x5b
 27129 b5ec FDB50000 		.long	0xb5fd
 27130 b5f0 A001     		.uleb128 0xa0
 27131 b5f2 5F5F6200 		.string	"__b"
 27132 b5f6 15       		.byte	0x15
 27133 b5f7 5B       		.byte	0x5b
 27134 b5f8 C1240000 		.long	0x24c1
 27135 b5fc 00       		.byte	0
 27136 b5fd 11       		.uleb128 0x11
 27137 b5fe AAB50000 		.long	0xb5aa
 27138 b602 7E       		.uleb128 0x7e
 27139 b603 08       		.byte	0x8
 27140 b604 DD250000 		.long	0x25dd
 27141 b608 9801     		.uleb128 0x98
 27142 b60a 49260000 		.long	0x2649
 27143 b60e 03       		.byte	0x3
 27144 b60f 17B60000 		.long	0xb617
 27145 b613 4CB60000 		.long	0xb64c
 27146 b617 9901     		.uleb128 0x99
 27147 b619 00000000 		.long	.LASF1535
 27148 b61d 4CB60000 		.long	0xb64c
 27149 b621 A201     		.uleb128 0xa2
 27150 b623 00000000 		.long	.LASF1542
 27151 b627 15       		.byte	0x15
 27152 b628 5302     		.value	0x253
 27153 b62a 72260000 		.long	0x2672
 27154 b62e A201     		.uleb128 0xa2
 27155 b630 00000000 		.long	.LASF1543
 27156 b634 15       		.byte	0x15
 27157 b635 5302     		.value	0x253
 27158 b637 72260000 		.long	0x2672
 27159 b63b 9B01     		.uleb128 0x9b
 27160 b63d A301     		.uleb128 0xa3
 27161 b63f 00000000 		.long	.LASF1544
 27162 b643 15       		.byte	0x15
 27163 b644 5502     		.value	0x255
 27164 b646 72260000 		.long	0x2672
 27165 b64a 00       		.byte	0
 27166 b64b 00       		.byte	0
 27167 b64c 11       		.uleb128 0x11
 27168 b64d 02B60000 		.long	0xb602
 27169 b651 7E       		.uleb128 0x7e
 27170 b652 08       		.byte	0x8
 27171 b653 CA730000 		.long	0x73ca
 27172 b657 9801     		.uleb128 0x98
 27173 b659 F9290000 		.long	0x29f9
 27174 b65d 03       		.byte	0x3
 27175 b65e 66B60000 		.long	0xb666
 27176 b662 7EB60000 		.long	0xb67e
 27177 b666 9901     		.uleb128 0x99
 27178 b668 00000000 		.long	.LASF1535
 27179 b66c 7EB60000 		.long	0xb67e
 27180 b670 A101     		.uleb128 0xa1
 27181 b672 5F5F6300 		.string	"__c"
 27182 b676 01       		.byte	0x1
 27183 b677 6103     		.value	0x361
GAS LISTING /tmp/ccmMnd7l.s 			page 779


 27184 b679 E4990000 		.long	0x99e4
 27185 b67d 00       		.byte	0
 27186 b67e 11       		.uleb128 0x11
 27187 b67f 51B60000 		.long	0xb651
 27188 b683 7F       		.uleb128 0x7f
 27189 b684 08       		.byte	0x8
 27190 b685 C3280000 		.long	0x28c3
 27191 b689 7E       		.uleb128 0x7e
 27192 b68a 08       		.byte	0x8
 27193 b68b 97280000 		.long	0x2897
 27194 b68f 9801     		.uleb128 0x98
 27195 b691 A0280000 		.long	0x28a0
 27196 b695 03       		.byte	0x3
 27197 b696 9EB60000 		.long	0xb69e
 27198 b69a B5B60000 		.long	0xb6b5
 27199 b69e 9901     		.uleb128 0x99
 27200 b6a0 00000000 		.long	.LASF1535
 27201 b6a4 B5B60000 		.long	0xb6b5
 27202 b6a8 A001     		.uleb128 0xa0
 27203 b6aa 5F5F6600 		.string	"__f"
 27204 b6ae 08       		.byte	0x8
 27205 b6af DC       		.byte	0xdc
 27206 b6b0 29000000 		.long	0x29
 27207 b6b4 00       		.byte	0
 27208 b6b5 11       		.uleb128 0x11
 27209 b6b6 89B60000 		.long	0xb689
 27210 b6ba 7E       		.uleb128 0x7e
 27211 b6bb 08       		.byte	0x8
 27212 b6bc C0B60000 		.long	0xb6c0
 27213 b6c0 9201     		.uleb128 0x92
 27214 b6c2 83B60000 		.long	0xb683
 27215 b6c6 D0B60000 		.long	0xb6d0
 27216 b6ca 09       		.uleb128 0x9
 27217 b6cb 83B60000 		.long	0xb683
 27218 b6cf 00       		.byte	0
 27219 b6d0 9801     		.uleb128 0x98
 27220 b6d2 CF280000 		.long	0x28cf
 27221 b6d6 03       		.byte	0x3
 27222 b6d7 DFB60000 		.long	0xb6df
 27223 b6db F6B60000 		.long	0xb6f6
 27224 b6df 9901     		.uleb128 0x99
 27225 b6e1 00000000 		.long	.LASF1535
 27226 b6e5 B5B60000 		.long	0xb6b5
 27227 b6e9 9E01     		.uleb128 0x9e
 27228 b6eb 00000000 		.long	.LASF1545
 27229 b6ef 08       		.byte	0x8
 27230 b6f0 6C       		.byte	0x6c
 27231 b6f1 BAB60000 		.long	0xb6ba
 27232 b6f5 00       		.byte	0
 27233 b6f6 9801     		.uleb128 0x98
 27234 b6f8 02530000 		.long	0x5302
 27235 b6fc 03       		.byte	0x3
 27236 b6fd 05B70000 		.long	0xb705
 27237 b701 1AB70000 		.long	0xb71a
 27238 b705 9901     		.uleb128 0x99
 27239 b707 00000000 		.long	.LASF1535
 27240 b70b 1AB70000 		.long	0xb71a
GAS LISTING /tmp/ccmMnd7l.s 			page 780


 27241 b70f A001     		.uleb128 0xa0
 27242 b711 7000     		.string	"p"
 27243 b713 05       		.byte	0x5
 27244 b714 29       		.byte	0x29
 27245 b715 57B00000 		.long	0xb057
 27246 b719 00       		.byte	0
 27247 b71a 11       		.uleb128 0x11
 27248 b71b 51B00000 		.long	0xb051
 27249 b71f 9801     		.uleb128 0x98
 27250 b721 29530000 		.long	0x5329
 27251 b725 03       		.byte	0x3
 27252 b726 2EB70000 		.long	0xb72e
 27253 b72a 43B70000 		.long	0xb743
 27254 b72e 9901     		.uleb128 0x99
 27255 b730 00000000 		.long	.LASF1535
 27256 b734 43B70000 		.long	0xb743
 27257 b738 A001     		.uleb128 0xa0
 27258 b73a 7000     		.string	"p"
 27259 b73c 05       		.byte	0x5
 27260 b73d 2D       		.byte	0x2d
 27261 b73e 63B00000 		.long	0xb063
 27262 b742 00       		.byte	0
 27263 b743 11       		.uleb128 0x11
 27264 b744 5DB00000 		.long	0xb05d
 27265 b748 9801     		.uleb128 0x98
 27266 b74a 3A3B0000 		.long	0x3b3a
 27267 b74e 03       		.byte	0x3
 27268 b74f 57B70000 		.long	0xb757
 27269 b753 62B70000 		.long	0xb762
 27270 b757 9901     		.uleb128 0x99
 27271 b759 00000000 		.long	.LASF1535
 27272 b75d 62B70000 		.long	0xb762
 27273 b761 00       		.byte	0
 27274 b762 11       		.uleb128 0x11
 27275 b763 B7AD0000 		.long	0xadb7
 27276 b767 9801     		.uleb128 0x98
 27277 b769 353C0000 		.long	0x3c35
 27278 b76d 03       		.byte	0x3
 27279 b76e 76B70000 		.long	0xb776
 27280 b772 8EB70000 		.long	0xb78e
 27281 b776 9901     		.uleb128 0x99
 27282 b778 00000000 		.long	.LASF1535
 27283 b77c 8EB70000 		.long	0xb78e
 27284 b780 A101     		.uleb128 0xa1
 27285 b782 5F5F6E00 		.string	"__n"
 27286 b786 06       		.byte	0x6
 27287 b787 0B03     		.value	0x30b
 27288 b789 C4370000 		.long	0x37c4
 27289 b78d 00       		.byte	0
 27290 b78e 11       		.uleb128 0x11
 27291 b78f 92AD0000 		.long	0xad92
 27292 b793 7E       		.uleb128 0x7e
 27293 b794 08       		.byte	0x8
 27294 b795 64570000 		.long	0x5764
 27295 b799 A401     		.uleb128 0xa4
 27296 b79b 70570000 		.long	0x5770
 27297 b79f 09       		.byte	0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 781


 27298 b7a0 4E       		.byte	0x4e
 27299 b7a1 03       		.byte	0x3
 27300 b7a2 AAB70000 		.long	0xb7aa
 27301 b7a6 B5B70000 		.long	0xb7b5
 27302 b7aa 9901     		.uleb128 0x99
 27303 b7ac 00000000 		.long	.LASF1535
 27304 b7b0 B5B70000 		.long	0xb7b5
 27305 b7b4 00       		.byte	0
 27306 b7b5 11       		.uleb128 0x11
 27307 b7b6 93B70000 		.long	0xb793
 27308 b7ba 7E       		.uleb128 0x7e
 27309 b7bb 08       		.byte	0x8
 27310 b7bc 97570000 		.long	0x5797
 27311 b7c0 A401     		.uleb128 0xa4
 27312 b7c2 A9570000 		.long	0x57a9
 27313 b7c6 09       		.byte	0x9
 27314 b7c7 56       		.byte	0x56
 27315 b7c8 03       		.byte	0x3
 27316 b7c9 D1B70000 		.long	0xb7d1
 27317 b7cd DCB70000 		.long	0xb7dc
 27318 b7d1 9901     		.uleb128 0x99
 27319 b7d3 00000000 		.long	.LASF1535
 27320 b7d7 DCB70000 		.long	0xb7dc
 27321 b7db 00       		.byte	0
 27322 b7dc 11       		.uleb128 0x11
 27323 b7dd BAB70000 		.long	0xb7ba
 27324 b7e1 9D01     		.uleb128 0x9d
 27325 b7e3 B5580000 		.long	0x58b5
 27326 b7e7 03       		.byte	0x3
 27327 b7e8 F9B70000 		.long	0xb7f9
 27328 b7ec A001     		.uleb128 0xa0
 27329 b7ee 5F5F6200 		.string	"__b"
 27330 b7f2 0A       		.byte	0xa
 27331 b7f3 A7       		.byte	0xa7
 27332 b7f4 F9B70000 		.long	0xb7f9
 27333 b7f8 00       		.byte	0
 27334 b7f9 11       		.uleb128 0x11
 27335 b7fa DBB00000 		.long	0xb0db
 27336 b7fe 7F       		.uleb128 0x7f
 27337 b7ff 08       		.byte	0x8
 27338 b800 FB5B0000 		.long	0x5bfb
 27339 b804 9D01     		.uleb128 0x9d
 27340 b806 CF730000 		.long	0x73cf
 27341 b80a 03       		.byte	0x3
 27342 b80b 25B80000 		.long	0xb825
 27343 b80f 18       		.uleb128 0x18
 27344 b810 5F547000 		.string	"_Tp"
 27345 b814 1D530000 		.long	0x531d
 27346 b818 A001     		.uleb128 0xa0
 27347 b81a 5F5F7400 		.string	"__t"
 27348 b81e 12       		.byte	0x12
 27349 b81f 4C       		.byte	0x4c
 27350 b820 25B80000 		.long	0xb825
 27351 b824 00       		.byte	0
 27352 b825 11       		.uleb128 0x11
 27353 b826 FEB70000 		.long	0xb7fe
 27354 b82a 9801     		.uleb128 0x98
GAS LISTING /tmp/ccmMnd7l.s 			page 782


 27355 b82c E25E0000 		.long	0x5ee2
 27356 b830 03       		.byte	0x3
 27357 b831 39B80000 		.long	0xb839
 27358 b835 44B80000 		.long	0xb844
 27359 b839 9901     		.uleb128 0x99
 27360 b83b 00000000 		.long	.LASF1535
 27361 b83f 44B80000 		.long	0xb844
 27362 b843 00       		.byte	0
 27363 b844 11       		.uleb128 0x11
 27364 b845 38B10000 		.long	0xb138
 27365 b849 9801     		.uleb128 0x98
 27366 b84b B35F0000 		.long	0x5fb3
 27367 b84f 03       		.byte	0x3
 27368 b850 61B80000 		.long	0xb861
 27369 b854 78B80000 		.long	0xb878
 27370 b858 35       		.uleb128 0x35
 27371 b859 00000000 		.long	.LASF810
 27372 b85d 1D530000 		.long	0x531d
 27373 b861 9901     		.uleb128 0x99
 27374 b863 00000000 		.long	.LASF1535
 27375 b867 78B80000 		.long	0xb878
 27376 b86b A001     		.uleb128 0xa0
 27377 b86d 5F5F6800 		.string	"__h"
 27378 b871 0A       		.byte	0xa
 27379 b872 5E       		.byte	0x5e
 27380 b873 7DB80000 		.long	0xb87d
 27381 b877 00       		.byte	0
 27382 b878 11       		.uleb128 0x11
 27383 b879 44B10000 		.long	0xb144
 27384 b87d 11       		.uleb128 0x11
 27385 b87e FCB20000 		.long	0xb2fc
 27386 b882 7F       		.uleb128 0x7f
 27387 b883 08       		.byte	0x8
 27388 b884 516F0000 		.long	0x6f51
 27389 b888 9D01     		.uleb128 0x9d
 27390 b88a ED730000 		.long	0x73ed
 27391 b88e 03       		.byte	0x3
 27392 b88f A9B80000 		.long	0xb8a9
 27393 b893 18       		.uleb128 0x18
 27394 b894 5F547000 		.string	"_Tp"
 27395 b898 98B10000 		.long	0xb198
 27396 b89c A001     		.uleb128 0xa0
 27397 b89e 5F5F7400 		.string	"__t"
 27398 b8a2 12       		.byte	0x12
 27399 b8a3 4C       		.byte	0x4c
 27400 b8a4 A9B80000 		.long	0xb8a9
 27401 b8a8 00       		.byte	0
 27402 b8a9 11       		.uleb128 0x11
 27403 b8aa 82B80000 		.long	0xb882
 27404 b8ae 9801     		.uleb128 0x98
 27405 b8b0 56610000 		.long	0x6156
 27406 b8b4 03       		.byte	0x3
 27407 b8b5 CBB80000 		.long	0xb8cb
 27408 b8b9 E8B80000 		.long	0xb8e8
 27409 b8bd 35       		.uleb128 0x35
 27410 b8be 00000000 		.long	.LASF810
 27411 b8c2 1D530000 		.long	0x531d
GAS LISTING /tmp/ccmMnd7l.s 			page 783


 27412 b8c6 6B       		.uleb128 0x6b
 27413 b8c7 00000000 		.long	.LASF824
 27414 b8cb 9901     		.uleb128 0x99
 27415 b8cd 00000000 		.long	.LASF1535
 27416 b8d1 E8B80000 		.long	0xb8e8
 27417 b8d5 A201     		.uleb128 0xa2
 27418 b8d7 00000000 		.long	.LASF1546
 27419 b8db 0A       		.byte	0xa
 27420 b8dc 0401     		.value	0x104
 27421 b8de EDB80000 		.long	0xb8ed
 27422 b8e2 A501     		.uleb128 0xa5
 27423 b8e4 0A       		.byte	0xa
 27424 b8e5 0401     		.value	0x104
 27425 b8e7 00       		.byte	0
 27426 b8e8 11       		.uleb128 0x11
 27427 b8e9 7AB10000 		.long	0xb17a
 27428 b8ed 11       		.uleb128 0x11
 27429 b8ee FCB20000 		.long	0xb2fc
 27430 b8f2 9801     		.uleb128 0x98
 27431 b8f4 2D620000 		.long	0x622d
 27432 b8f8 03       		.byte	0x3
 27433 b8f9 0AB90000 		.long	0xb90a
 27434 b8fd 21B90000 		.long	0xb921
 27435 b901 35       		.uleb128 0x35
 27436 b902 00000000 		.long	.LASF810
 27437 b906 98B10000 		.long	0xb198
 27438 b90a 9901     		.uleb128 0x99
 27439 b90c 00000000 		.long	.LASF1535
 27440 b910 21B90000 		.long	0xb921
 27441 b914 A001     		.uleb128 0xa0
 27442 b916 5F5F6800 		.string	"__h"
 27443 b91a 0A       		.byte	0xa
 27444 b91b 8B       		.byte	0x8b
 27445 b91c 26B90000 		.long	0xb926
 27446 b920 00       		.byte	0
 27447 b921 11       		.uleb128 0x11
 27448 b922 87B10000 		.long	0xb187
 27449 b926 11       		.uleb128 0x11
 27450 b927 98B10000 		.long	0xb198
 27451 b92b 9801     		.uleb128 0x98
 27452 b92d D0630000 		.long	0x63d0
 27453 b931 03       		.byte	0x3
 27454 b932 52B90000 		.long	0xb952
 27455 b936 75B90000 		.long	0xb975
 27456 b93a 35       		.uleb128 0x35
 27457 b93b 00000000 		.long	.LASF810
 27458 b93f 98B10000 		.long	0xb198
 27459 b943 6A       		.uleb128 0x6a
 27460 b944 00000000 		.long	.LASF824
 27461 b948 52B90000 		.long	0xb952
 27462 b94c 68       		.uleb128 0x68
 27463 b94d 1D530000 		.long	0x531d
 27464 b951 00       		.byte	0
 27465 b952 9901     		.uleb128 0x99
 27466 b954 00000000 		.long	.LASF1535
 27467 b958 75B90000 		.long	0xb975
 27468 b95c A201     		.uleb128 0xa2
GAS LISTING /tmp/ccmMnd7l.s 			page 784


 27469 b95e 00000000 		.long	.LASF1546
 27470 b962 0A       		.byte	0xa
 27471 b963 0401     		.value	0x104
 27472 b965 7AB90000 		.long	0xb97a
 27473 b969 A601     		.uleb128 0xa6
 27474 b96b 0A       		.byte	0xa
 27475 b96c 0401     		.value	0x104
 27476 b96e 09       		.uleb128 0x9
 27477 b96f 7FB90000 		.long	0xb97f
 27478 b973 00       		.byte	0
 27479 b974 00       		.byte	0
 27480 b975 11       		.uleb128 0x11
 27481 b976 C2B10000 		.long	0xb1c2
 27482 b97a 11       		.uleb128 0x11
 27483 b97b 98B10000 		.long	0xb198
 27484 b97f 11       		.uleb128 0x11
 27485 b980 FCB20000 		.long	0xb2fc
 27486 b984 9801     		.uleb128 0x98
 27487 b986 14650000 		.long	0x6514
 27488 b98a 03       		.byte	0x3
 27489 b98b A5B90000 		.long	0xb9a5
 27490 b98f CAB90000 		.long	0xb9ca
 27491 b993 18       		.uleb128 0x18
 27492 b994 5F553100 		.string	"_U1"
 27493 b998 98B10000 		.long	0xb198
 27494 b99c 18       		.uleb128 0x18
 27495 b99d 5F553200 		.string	"_U2"
 27496 b9a1 1D530000 		.long	0x531d
 27497 b9a5 9901     		.uleb128 0x99
 27498 b9a7 00000000 		.long	.LASF1535
 27499 b9ab CAB90000 		.long	0xb9ca
 27500 b9af A201     		.uleb128 0xa2
 27501 b9b1 00000000 		.long	.LASF1547
 27502 b9b5 0A       		.byte	0xa
 27503 b9b6 1902     		.value	0x219
 27504 b9b8 CFB90000 		.long	0xb9cf
 27505 b9bc A201     		.uleb128 0xa2
 27506 b9be 00000000 		.long	.LASF1548
 27507 b9c2 0A       		.byte	0xa
 27508 b9c3 1902     		.value	0x219
 27509 b9c5 D4B90000 		.long	0xb9d4
 27510 b9c9 00       		.byte	0
 27511 b9ca 11       		.uleb128 0x11
 27512 b9cb CFB10000 		.long	0xb1cf
 27513 b9cf 11       		.uleb128 0x11
 27514 b9d0 98B10000 		.long	0xb198
 27515 b9d4 11       		.uleb128 0x11
 27516 b9d5 FCB20000 		.long	0xb2fc
 27517 b9d9 9D01     		.uleb128 0x9d
 27518 b9db FB610000 		.long	0x61fb
 27519 b9df 03       		.byte	0x3
 27520 b9e0 F1B90000 		.long	0xb9f1
 27521 b9e4 A001     		.uleb128 0xa0
 27522 b9e6 5F5F6200 		.string	"__b"
 27523 b9ea 0A       		.byte	0xa
 27524 b9eb A7       		.byte	0xa7
 27525 b9ec F1B90000 		.long	0xb9f1
GAS LISTING /tmp/ccmMnd7l.s 			page 785


 27526 b9f0 00       		.byte	0
 27527 b9f1 11       		.uleb128 0x11
 27528 b9f2 9EB10000 		.long	0xb19e
 27529 b9f6 9D01     		.uleb128 0x9d
 27530 b9f8 97620000 		.long	0x6297
 27531 b9fc 03       		.byte	0x3
 27532 b9fd 0EBA0000 		.long	0xba0e
 27533 ba01 A001     		.uleb128 0xa0
 27534 ba03 5F5F7400 		.string	"__t"
 27535 ba07 0A       		.byte	0xa
 27536 ba08 EF       		.byte	0xef
 27537 ba09 0EBA0000 		.long	0xba0e
 27538 ba0d 00       		.byte	0
 27539 ba0e 11       		.uleb128 0x11
 27540 ba0f AAB10000 		.long	0xb1aa
 27541 ba13 9D01     		.uleb128 0x9d
 27542 ba15 0B740000 		.long	0x740b
 27543 ba19 03       		.byte	0x3
 27544 ba1a 4EBA0000 		.long	0xba4e
 27545 ba1e 19       		.uleb128 0x19
 27546 ba1f 5F5F6900 		.string	"__i"
 27547 ba23 03810000 		.long	0x8103
 27548 ba27 00       		.byte	0
 27549 ba28 35       		.uleb128 0x35
 27550 ba29 00000000 		.long	.LASF811
 27551 ba2d 63B00000 		.long	0xb063
 27552 ba31 6A       		.uleb128 0x6a
 27553 ba32 00000000 		.long	.LASF990
 27554 ba36 40BA0000 		.long	0xba40
 27555 ba3a 68       		.uleb128 0x68
 27556 ba3b 1D530000 		.long	0x531d
 27557 ba3f 00       		.byte	0
 27558 ba40 A101     		.uleb128 0xa1
 27559 ba42 5F5F7400 		.string	"__t"
 27560 ba46 0A       		.byte	0xa
 27561 ba47 E702     		.value	0x2e7
 27562 ba49 4EBA0000 		.long	0xba4e
 27563 ba4d 00       		.byte	0
 27564 ba4e 11       		.uleb128 0x11
 27565 ba4f AAB10000 		.long	0xb1aa
 27566 ba53 7F       		.uleb128 0x7f
 27567 ba54 08       		.byte	0x8
 27568 ba55 9D650000 		.long	0x659d
 27569 ba59 9D01     		.uleb128 0x9d
 27570 ba5b 43740000 		.long	0x7443
 27571 ba5f 03       		.byte	0x3
 27572 ba60 7ABA0000 		.long	0xba7a
 27573 ba64 18       		.uleb128 0x18
 27574 ba65 5F547000 		.string	"_Tp"
 27575 ba69 F6520000 		.long	0x52f6
 27576 ba6d A001     		.uleb128 0xa0
 27577 ba6f 5F5F7400 		.string	"__t"
 27578 ba73 12       		.byte	0x12
 27579 ba74 4C       		.byte	0x4c
 27580 ba75 7ABA0000 		.long	0xba7a
 27581 ba79 00       		.byte	0
 27582 ba7a 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 786


 27583 ba7b 53BA0000 		.long	0xba53
 27584 ba7f 9801     		.uleb128 0x98
 27585 ba81 05690000 		.long	0x6905
 27586 ba85 03       		.byte	0x3
 27587 ba86 97BA0000 		.long	0xba97
 27588 ba8a AEBA0000 		.long	0xbaae
 27589 ba8e 35       		.uleb128 0x35
 27590 ba8f 00000000 		.long	.LASF810
 27591 ba93 F6520000 		.long	0x52f6
 27592 ba97 9901     		.uleb128 0x99
 27593 ba99 00000000 		.long	.LASF1535
 27594 ba9d AEBA0000 		.long	0xbaae
 27595 baa1 A001     		.uleb128 0xa0
 27596 baa3 5F5F6800 		.string	"__h"
 27597 baa7 0A       		.byte	0xa
 27598 baa8 5E       		.byte	0x5e
 27599 baa9 B3BA0000 		.long	0xbab3
 27600 baad 00       		.byte	0
 27601 baae 11       		.uleb128 0x11
 27602 baaf 20B20000 		.long	0xb220
 27603 bab3 11       		.uleb128 0x11
 27604 bab4 03B30000 		.long	0xb303
 27605 bab8 7F       		.uleb128 0x7f
 27606 bab9 08       		.byte	0x8
 27607 baba AD6F0000 		.long	0x6fad
 27608 babe 9D01     		.uleb128 0x9d
 27609 bac0 61740000 		.long	0x7461
 27610 bac4 03       		.byte	0x3
 27611 bac5 DFBA0000 		.long	0xbadf
 27612 bac9 18       		.uleb128 0x18
 27613 baca 5F547000 		.string	"_Tp"
 27614 bace 74B20000 		.long	0xb274
 27615 bad2 A001     		.uleb128 0xa0
 27616 bad4 5F5F7400 		.string	"__t"
 27617 bad8 12       		.byte	0x12
 27618 bad9 4C       		.byte	0x4c
 27619 bada DFBA0000 		.long	0xbadf
 27620 bade 00       		.byte	0
 27621 badf 11       		.uleb128 0x11
 27622 bae0 B8BA0000 		.long	0xbab8
 27623 bae4 9801     		.uleb128 0x98
 27624 bae6 A86A0000 		.long	0x6aa8
 27625 baea 03       		.byte	0x3
 27626 baeb 01BB0000 		.long	0xbb01
 27627 baef 1EBB0000 		.long	0xbb1e
 27628 baf3 35       		.uleb128 0x35
 27629 baf4 00000000 		.long	.LASF810
 27630 baf8 F6520000 		.long	0x52f6
 27631 bafc 6B       		.uleb128 0x6b
 27632 bafd 00000000 		.long	.LASF824
 27633 bb01 9901     		.uleb128 0x99
 27634 bb03 00000000 		.long	.LASF1535
 27635 bb07 1EBB0000 		.long	0xbb1e
 27636 bb0b A201     		.uleb128 0xa2
 27637 bb0d 00000000 		.long	.LASF1546
 27638 bb11 0A       		.byte	0xa
 27639 bb12 0401     		.value	0x104
GAS LISTING /tmp/ccmMnd7l.s 			page 787


 27640 bb14 23BB0000 		.long	0xbb23
 27641 bb18 A501     		.uleb128 0xa5
 27642 bb1a 0A       		.byte	0xa
 27643 bb1b 0401     		.value	0x104
 27644 bb1d 00       		.byte	0
 27645 bb1e 11       		.uleb128 0x11
 27646 bb1f 56B20000 		.long	0xb256
 27647 bb23 11       		.uleb128 0x11
 27648 bb24 03B30000 		.long	0xb303
 27649 bb28 9801     		.uleb128 0x98
 27650 bb2a 7F6B0000 		.long	0x6b7f
 27651 bb2e 03       		.byte	0x3
 27652 bb2f 40BB0000 		.long	0xbb40
 27653 bb33 57BB0000 		.long	0xbb57
 27654 bb37 35       		.uleb128 0x35
 27655 bb38 00000000 		.long	.LASF810
 27656 bb3c 74B20000 		.long	0xb274
 27657 bb40 9901     		.uleb128 0x99
 27658 bb42 00000000 		.long	.LASF1535
 27659 bb46 57BB0000 		.long	0xbb57
 27660 bb4a A001     		.uleb128 0xa0
 27661 bb4c 5F5F6800 		.string	"__h"
 27662 bb50 0A       		.byte	0xa
 27663 bb51 8B       		.byte	0x8b
 27664 bb52 5CBB0000 		.long	0xbb5c
 27665 bb56 00       		.byte	0
 27666 bb57 11       		.uleb128 0x11
 27667 bb58 63B20000 		.long	0xb263
 27668 bb5c 11       		.uleb128 0x11
 27669 bb5d 74B20000 		.long	0xb274
 27670 bb61 9801     		.uleb128 0x98
 27671 bb63 226D0000 		.long	0x6d22
 27672 bb67 03       		.byte	0x3
 27673 bb68 88BB0000 		.long	0xbb88
 27674 bb6c ABBB0000 		.long	0xbbab
 27675 bb70 35       		.uleb128 0x35
 27676 bb71 00000000 		.long	.LASF810
 27677 bb75 74B20000 		.long	0xb274
 27678 bb79 6A       		.uleb128 0x6a
 27679 bb7a 00000000 		.long	.LASF824
 27680 bb7e 88BB0000 		.long	0xbb88
 27681 bb82 68       		.uleb128 0x68
 27682 bb83 F6520000 		.long	0x52f6
 27683 bb87 00       		.byte	0
 27684 bb88 9901     		.uleb128 0x99
 27685 bb8a 00000000 		.long	.LASF1535
 27686 bb8e ABBB0000 		.long	0xbbab
 27687 bb92 A201     		.uleb128 0xa2
 27688 bb94 00000000 		.long	.LASF1546
 27689 bb98 0A       		.byte	0xa
 27690 bb99 0401     		.value	0x104
 27691 bb9b B0BB0000 		.long	0xbbb0
 27692 bb9f A601     		.uleb128 0xa6
 27693 bba1 0A       		.byte	0xa
 27694 bba2 0401     		.value	0x104
 27695 bba4 09       		.uleb128 0x9
 27696 bba5 B5BB0000 		.long	0xbbb5
GAS LISTING /tmp/ccmMnd7l.s 			page 788


 27697 bba9 00       		.byte	0
 27698 bbaa 00       		.byte	0
 27699 bbab 11       		.uleb128 0x11
 27700 bbac 9EB20000 		.long	0xb29e
 27701 bbb0 11       		.uleb128 0x11
 27702 bbb1 74B20000 		.long	0xb274
 27703 bbb5 11       		.uleb128 0x11
 27704 bbb6 03B30000 		.long	0xb303
 27705 bbba 9801     		.uleb128 0x98
 27706 bbbc 666E0000 		.long	0x6e66
 27707 bbc0 03       		.byte	0x3
 27708 bbc1 DBBB0000 		.long	0xbbdb
 27709 bbc5 00BC0000 		.long	0xbc00
 27710 bbc9 18       		.uleb128 0x18
 27711 bbca 5F553100 		.string	"_U1"
 27712 bbce 74B20000 		.long	0xb274
 27713 bbd2 18       		.uleb128 0x18
 27714 bbd3 5F553200 		.string	"_U2"
 27715 bbd7 F6520000 		.long	0x52f6
 27716 bbdb 9901     		.uleb128 0x99
 27717 bbdd 00000000 		.long	.LASF1535
 27718 bbe1 00BC0000 		.long	0xbc00
 27719 bbe5 A201     		.uleb128 0xa2
 27720 bbe7 00000000 		.long	.LASF1547
 27721 bbeb 0A       		.byte	0xa
 27722 bbec 1902     		.value	0x219
 27723 bbee 05BC0000 		.long	0xbc05
 27724 bbf2 A201     		.uleb128 0xa2
 27725 bbf4 00000000 		.long	.LASF1548
 27726 bbf8 0A       		.byte	0xa
 27727 bbf9 1902     		.value	0x219
 27728 bbfb 0ABC0000 		.long	0xbc0a
 27729 bbff 00       		.byte	0
 27730 bc00 11       		.uleb128 0x11
 27731 bc01 ABB20000 		.long	0xb2ab
 27732 bc05 11       		.uleb128 0x11
 27733 bc06 74B20000 		.long	0xb274
 27734 bc0a 11       		.uleb128 0x11
 27735 bc0b 03B30000 		.long	0xb303
 27736 bc0f 9D01     		.uleb128 0x9d
 27737 bc11 4D6B0000 		.long	0x6b4d
 27738 bc15 03       		.byte	0x3
 27739 bc16 27BC0000 		.long	0xbc27
 27740 bc1a A001     		.uleb128 0xa0
 27741 bc1c 5F5F6200 		.string	"__b"
 27742 bc20 0A       		.byte	0xa
 27743 bc21 A7       		.byte	0xa7
 27744 bc22 27BC0000 		.long	0xbc27
 27745 bc26 00       		.byte	0
 27746 bc27 11       		.uleb128 0x11
 27747 bc28 7AB20000 		.long	0xb27a
 27748 bc2c 9D01     		.uleb128 0x9d
 27749 bc2e E96B0000 		.long	0x6be9
 27750 bc32 03       		.byte	0x3
 27751 bc33 44BC0000 		.long	0xbc44
 27752 bc37 A001     		.uleb128 0xa0
 27753 bc39 5F5F7400 		.string	"__t"
GAS LISTING /tmp/ccmMnd7l.s 			page 789


 27754 bc3d 0A       		.byte	0xa
 27755 bc3e EF       		.byte	0xef
 27756 bc3f 44BC0000 		.long	0xbc44
 27757 bc43 00       		.byte	0
 27758 bc44 11       		.uleb128 0x11
 27759 bc45 86B20000 		.long	0xb286
 27760 bc49 9D01     		.uleb128 0x9d
 27761 bc4b 7F740000 		.long	0x747f
 27762 bc4f 03       		.byte	0x3
 27763 bc50 84BC0000 		.long	0xbc84
 27764 bc54 19       		.uleb128 0x19
 27765 bc55 5F5F6900 		.string	"__i"
 27766 bc59 03810000 		.long	0x8103
 27767 bc5d 00       		.byte	0
 27768 bc5e 35       		.uleb128 0x35
 27769 bc5f 00000000 		.long	.LASF811
 27770 bc63 57B00000 		.long	0xb057
 27771 bc67 6A       		.uleb128 0x6a
 27772 bc68 00000000 		.long	.LASF990
 27773 bc6c 76BC0000 		.long	0xbc76
 27774 bc70 68       		.uleb128 0x68
 27775 bc71 F6520000 		.long	0x52f6
 27776 bc75 00       		.byte	0
 27777 bc76 A101     		.uleb128 0xa1
 27778 bc78 5F5F7400 		.string	"__t"
 27779 bc7c 0A       		.byte	0xa
 27780 bc7d E702     		.value	0x2e7
 27781 bc7f 84BC0000 		.long	0xbc84
 27782 bc83 00       		.byte	0
 27783 bc84 11       		.uleb128 0x11
 27784 bc85 86B20000 		.long	0xb286
 27785 bc89 9D01     		.uleb128 0x9d
 27786 bc8b 666B0000 		.long	0x6b66
 27787 bc8f 03       		.byte	0x3
 27788 bc90 A1BC0000 		.long	0xbca1
 27789 bc94 A001     		.uleb128 0xa0
 27790 bc96 5F5F6200 		.string	"__b"
 27791 bc9a 0A       		.byte	0xa
 27792 bc9b AA       		.byte	0xaa
 27793 bc9c A1BC0000 		.long	0xbca1
 27794 bca0 00       		.byte	0
 27795 bca1 11       		.uleb128 0x11
 27796 bca2 80B20000 		.long	0xb280
 27797 bca6 9D01     		.uleb128 0x9d
 27798 bca8 026C0000 		.long	0x6c02
 27799 bcac 03       		.byte	0x3
 27800 bcad BEBC0000 		.long	0xbcbe
 27801 bcb1 A001     		.uleb128 0xa0
 27802 bcb3 5F5F7400 		.string	"__t"
 27803 bcb7 0A       		.byte	0xa
 27804 bcb8 F2       		.byte	0xf2
 27805 bcb9 BEBC0000 		.long	0xbcbe
 27806 bcbd 00       		.byte	0
 27807 bcbe 11       		.uleb128 0x11
 27808 bcbf 8CB20000 		.long	0xb28c
 27809 bcc3 9D01     		.uleb128 0x9d
 27810 bcc5 B7740000 		.long	0x74b7
GAS LISTING /tmp/ccmMnd7l.s 			page 790


 27811 bcc9 03       		.byte	0x3
 27812 bcca FEBC0000 		.long	0xbcfe
 27813 bcce 19       		.uleb128 0x19
 27814 bccf 5F5F6900 		.string	"__i"
 27815 bcd3 03810000 		.long	0x8103
 27816 bcd7 00       		.byte	0
 27817 bcd8 35       		.uleb128 0x35
 27818 bcd9 00000000 		.long	.LASF811
 27819 bcdd 57B00000 		.long	0xb057
 27820 bce1 6A       		.uleb128 0x6a
 27821 bce2 00000000 		.long	.LASF990
 27822 bce6 F0BC0000 		.long	0xbcf0
 27823 bcea 68       		.uleb128 0x68
 27824 bceb F6520000 		.long	0x52f6
 27825 bcef 00       		.byte	0
 27826 bcf0 A101     		.uleb128 0xa1
 27827 bcf2 5F5F7400 		.string	"__t"
 27828 bcf6 0A       		.byte	0xa
 27829 bcf7 EC02     		.value	0x2ec
 27830 bcf9 FEBC0000 		.long	0xbcfe
 27831 bcfd 00       		.byte	0
 27832 bcfe 11       		.uleb128 0x11
 27833 bcff 8CB20000 		.long	0xb28c
 27834 bd03 9D01     		.uleb128 0x9d
 27835 bd05 EF740000 		.long	0x74ef
 27836 bd09 03       		.byte	0x3
 27837 bd0a 3ABD0000 		.long	0xbd3a
 27838 bd0e 19       		.uleb128 0x19
 27839 bd0f 5F5F6900 		.string	"__i"
 27840 bd13 03810000 		.long	0x8103
 27841 bd17 00       		.byte	0
 27842 bd18 6A       		.uleb128 0x6a
 27843 bd19 00000000 		.long	.LASF802
 27844 bd1d 2CBD0000 		.long	0xbd2c
 27845 bd21 68       		.uleb128 0x68
 27846 bd22 57B00000 		.long	0xb057
 27847 bd26 68       		.uleb128 0x68
 27848 bd27 F6520000 		.long	0x52f6
 27849 bd2b 00       		.byte	0
 27850 bd2c A101     		.uleb128 0xa1
 27851 bd2e 5F5F7400 		.string	"__t"
 27852 bd32 0A       		.byte	0xa
 27853 bd33 FC02     		.value	0x2fc
 27854 bd35 3ABD0000 		.long	0xbd3a
 27855 bd39 00       		.byte	0
 27856 bd3a 11       		.uleb128 0x11
 27857 bd3b B1B20000 		.long	0xb2b1
 27858 bd3f 9801     		.uleb128 0x98
 27859 bd41 A74C0000 		.long	0x4ca7
 27860 bd45 03       		.byte	0x3
 27861 bd46 4EBD0000 		.long	0xbd4e
 27862 bd4a 66BD0000 		.long	0xbd66
 27863 bd4e 9901     		.uleb128 0x99
 27864 bd50 00000000 		.long	.LASF1535
 27865 bd54 66BD0000 		.long	0xbd66
 27866 bd58 A101     		.uleb128 0xa1
 27867 bd5a 5F5F6E00 		.string	"__n"
GAS LISTING /tmp/ccmMnd7l.s 			page 791


 27868 bd5e 06       		.byte	0x6
 27869 bd5f 0B03     		.value	0x30b
 27870 bd61 36480000 		.long	0x4836
 27871 bd65 00       		.byte	0
 27872 bd66 11       		.uleb128 0x11
 27873 bd67 61AE0000 		.long	0xae61
 27874 bd6b 9D01     		.uleb128 0x9d
 27875 bd6d 14620000 		.long	0x6214
 27876 bd71 03       		.byte	0x3
 27877 bd72 83BD0000 		.long	0xbd83
 27878 bd76 A001     		.uleb128 0xa0
 27879 bd78 5F5F6200 		.string	"__b"
 27880 bd7c 0A       		.byte	0xa
 27881 bd7d AA       		.byte	0xaa
 27882 bd7e 83BD0000 		.long	0xbd83
 27883 bd82 00       		.byte	0
 27884 bd83 11       		.uleb128 0x11
 27885 bd84 A4B10000 		.long	0xb1a4
 27886 bd88 9D01     		.uleb128 0x9d
 27887 bd8a B0620000 		.long	0x62b0
 27888 bd8e 03       		.byte	0x3
 27889 bd8f A0BD0000 		.long	0xbda0
 27890 bd93 A001     		.uleb128 0xa0
 27891 bd95 5F5F7400 		.string	"__t"
 27892 bd99 0A       		.byte	0xa
 27893 bd9a F2       		.byte	0xf2
 27894 bd9b A0BD0000 		.long	0xbda0
 27895 bd9f 00       		.byte	0
 27896 bda0 11       		.uleb128 0x11
 27897 bda1 B0B10000 		.long	0xb1b0
 27898 bda5 9D01     		.uleb128 0x9d
 27899 bda7 23750000 		.long	0x7523
 27900 bdab 03       		.byte	0x3
 27901 bdac E0BD0000 		.long	0xbde0
 27902 bdb0 19       		.uleb128 0x19
 27903 bdb1 5F5F6900 		.string	"__i"
 27904 bdb5 03810000 		.long	0x8103
 27905 bdb9 00       		.byte	0
 27906 bdba 35       		.uleb128 0x35
 27907 bdbb 00000000 		.long	.LASF811
 27908 bdbf 63B00000 		.long	0xb063
 27909 bdc3 6A       		.uleb128 0x6a
 27910 bdc4 00000000 		.long	.LASF990
 27911 bdc8 D2BD0000 		.long	0xbdd2
 27912 bdcc 68       		.uleb128 0x68
 27913 bdcd 1D530000 		.long	0x531d
 27914 bdd1 00       		.byte	0
 27915 bdd2 A101     		.uleb128 0xa1
 27916 bdd4 5F5F7400 		.string	"__t"
 27917 bdd8 0A       		.byte	0xa
 27918 bdd9 EC02     		.value	0x2ec
 27919 bddb E0BD0000 		.long	0xbde0
 27920 bddf 00       		.byte	0
 27921 bde0 11       		.uleb128 0x11
 27922 bde1 B0B10000 		.long	0xb1b0
 27923 bde5 9D01     		.uleb128 0x9d
 27924 bde7 5B750000 		.long	0x755b
GAS LISTING /tmp/ccmMnd7l.s 			page 792


 27925 bdeb 03       		.byte	0x3
 27926 bdec 1CBE0000 		.long	0xbe1c
 27927 bdf0 19       		.uleb128 0x19
 27928 bdf1 5F5F6900 		.string	"__i"
 27929 bdf5 03810000 		.long	0x8103
 27930 bdf9 00       		.byte	0
 27931 bdfa 6A       		.uleb128 0x6a
 27932 bdfb 00000000 		.long	.LASF802
 27933 bdff 0EBE0000 		.long	0xbe0e
 27934 be03 68       		.uleb128 0x68
 27935 be04 63B00000 		.long	0xb063
 27936 be08 68       		.uleb128 0x68
 27937 be09 1D530000 		.long	0x531d
 27938 be0d 00       		.byte	0
 27939 be0e A101     		.uleb128 0xa1
 27940 be10 5F5F7400 		.string	"__t"
 27941 be14 0A       		.byte	0xa
 27942 be15 FC02     		.value	0x2fc
 27943 be17 1CBE0000 		.long	0xbe1c
 27944 be1b 00       		.byte	0
 27945 be1c 11       		.uleb128 0x11
 27946 be1d D5B10000 		.long	0xb1d5
 27947 be21 9801     		.uleb128 0x98
 27948 be23 45670000 		.long	0x6745
 27949 be27 03       		.byte	0x3
 27950 be28 30BE0000 		.long	0xbe30
 27951 be2c 3BBE0000 		.long	0xbe3b
 27952 be30 9901     		.uleb128 0x99
 27953 be32 00000000 		.long	.LASF1535
 27954 be36 3BBE0000 		.long	0xbe3b
 27955 be3a 00       		.byte	0
 27956 be3b 11       		.uleb128 0x11
 27957 be3c E4B20000 		.long	0xb2e4
 27958 be40 9801     		.uleb128 0x98
 27959 be42 398D0000 		.long	0x8d39
 27960 be46 03       		.byte	0x3
 27961 be47 4FBE0000 		.long	0xbe4f
 27962 be4b 67BE0000 		.long	0xbe67
 27963 be4f 9901     		.uleb128 0x99
 27964 be51 00000000 		.long	.LASF1535
 27965 be55 67BE0000 		.long	0xbe67
 27966 be59 A101     		.uleb128 0xa1
 27967 be5b 5F5F6900 		.string	"__i"
 27968 be5f 0B       		.byte	0xb
 27969 be60 D802     		.value	0x2d8
 27970 be62 6CBE0000 		.long	0xbe6c
 27971 be66 00       		.byte	0
 27972 be67 11       		.uleb128 0x11
 27973 be68 93AE0000 		.long	0xae93
 27974 be6c 11       		.uleb128 0x11
 27975 be6d 99AE0000 		.long	0xae99
 27976 be71 9801     		.uleb128 0x98
 27977 be73 B28D0000 		.long	0x8db2
 27978 be77 03       		.byte	0x3
 27979 be78 80BE0000 		.long	0xbe80
 27980 be7c 90BE0000 		.long	0xbe90
 27981 be80 9901     		.uleb128 0x99
GAS LISTING /tmp/ccmMnd7l.s 			page 793


 27982 be82 00000000 		.long	.LASF1535
 27983 be86 67BE0000 		.long	0xbe67
 27984 be8a 09       		.uleb128 0x9
 27985 be8b D8800000 		.long	0x80d8
 27986 be8f 00       		.byte	0
 27987 be90 9801     		.uleb128 0x98
 27988 be92 B38A0000 		.long	0x8ab3
 27989 be96 03       		.byte	0x3
 27990 be97 9FBE0000 		.long	0xbe9f
 27991 be9b AABE0000 		.long	0xbeaa
 27992 be9f 9901     		.uleb128 0x99
 27993 bea1 00000000 		.long	.LASF1535
 27994 bea5 AABE0000 		.long	0xbeaa
 27995 bea9 00       		.byte	0
 27996 beaa 11       		.uleb128 0x11
 27997 beab 1EAD0000 		.long	0xad1e
 27998 beaf 9801     		.uleb128 0x98
 27999 beb1 E28A0000 		.long	0x8ae2
 28000 beb5 03       		.byte	0x3
 28001 beb6 BEBE0000 		.long	0xbebe
 28002 beba D3BE0000 		.long	0xbed3
 28003 bebe 9901     		.uleb128 0x99
 28004 bec0 00000000 		.long	.LASF1535
 28005 bec4 AABE0000 		.long	0xbeaa
 28006 bec8 9901     		.uleb128 0x99
 28007 beca 00000000 		.long	.LASF1549
 28008 bece 019A0000 		.long	0x9a01
 28009 bed2 00       		.byte	0
 28010 bed3 9801     		.uleb128 0x98
 28011 bed5 F5300000 		.long	0x30f5
 28012 bed9 03       		.byte	0x3
 28013 beda E2BE0000 		.long	0xbee2
 28014 bede F7BE0000 		.long	0xbef7
 28015 bee2 9901     		.uleb128 0x99
 28016 bee4 00000000 		.long	.LASF1535
 28017 bee8 F7BE0000 		.long	0xbef7
 28018 beec 9901     		.uleb128 0x99
 28019 beee 00000000 		.long	.LASF1549
 28020 bef2 019A0000 		.long	0x9a01
 28021 bef6 00       		.byte	0
 28022 bef7 11       		.uleb128 0x11
 28023 bef8 30AD0000 		.long	0xad30
 28024 befc 9801     		.uleb128 0x98
 28025 befe CD8E0000 		.long	0x8ecd
 28026 bf02 03       		.byte	0x3
 28027 bf03 0BBF0000 		.long	0xbf0b
 28028 bf07 16BF0000 		.long	0xbf16
 28029 bf0b 9901     		.uleb128 0x99
 28030 bf0d 00000000 		.long	.LASF1535
 28031 bf11 16BF0000 		.long	0xbf16
 28032 bf15 00       		.byte	0
 28033 bf16 11       		.uleb128 0x11
 28034 bf17 A4AE0000 		.long	0xaea4
 28035 bf1b 9801     		.uleb128 0x98
 28036 bf1d 558D0000 		.long	0x8d55
 28037 bf21 03       		.byte	0x3
 28038 bf22 2ABF0000 		.long	0xbf2a
GAS LISTING /tmp/ccmMnd7l.s 			page 794


 28039 bf26 35BF0000 		.long	0xbf35
 28040 bf2a 9901     		.uleb128 0x99
 28041 bf2c 00000000 		.long	.LASF1535
 28042 bf30 16BF0000 		.long	0xbf16
 28043 bf34 00       		.byte	0
 28044 bf35 9801     		.uleb128 0x98
 28045 bf37 043A0000 		.long	0x3a04
 28046 bf3b 03       		.byte	0x3
 28047 bf3c 44BF0000 		.long	0xbf44
 28048 bf40 4FBF0000 		.long	0xbf4f
 28049 bf44 9901     		.uleb128 0x99
 28050 bf46 00000000 		.long	.LASF1535
 28051 bf4a 8EB70000 		.long	0xb78e
 28052 bf4e 00       		.byte	0
 28053 bf4f 7F       		.uleb128 0x7f
 28054 bf50 08       		.byte	0x8
 28055 bf51 98950000 		.long	0x9598
 28056 bf55 9D01     		.uleb128 0x9d
 28057 bf57 63960000 		.long	0x9663
 28058 bf5b 03       		.byte	0x3
 28059 bf5c 8DBF0000 		.long	0xbf8d
 28060 bf60 35       		.uleb128 0x35
 28061 bf61 00000000 		.long	.LASF743
 28062 bf65 01AD0000 		.long	0xad01
 28063 bf69 35       		.uleb128 0x35
 28064 bf6a 00000000 		.long	.LASF1144
 28065 bf6e 2E370000 		.long	0x372e
 28066 bf72 A201     		.uleb128 0xa2
 28067 bf74 00000000 		.long	.LASF1550
 28068 bf78 0B       		.byte	0xb
 28069 bf79 3D03     		.value	0x33d
 28070 bf7b 8DBF0000 		.long	0xbf8d
 28071 bf7f A201     		.uleb128 0xa2
 28072 bf81 00000000 		.long	.LASF1551
 28073 bf85 0B       		.byte	0xb
 28074 bf86 3E03     		.value	0x33e
 28075 bf88 92BF0000 		.long	0xbf92
 28076 bf8c 00       		.byte	0
 28077 bf8d 11       		.uleb128 0x11
 28078 bf8e 4FBF0000 		.long	0xbf4f
 28079 bf92 11       		.uleb128 0x11
 28080 bf93 4FBF0000 		.long	0xbf4f
 28081 bf97 9801     		.uleb128 0x98
 28082 bf99 588F0000 		.long	0x8f58
 28083 bf9d 03       		.byte	0x3
 28084 bf9e A6BF0000 		.long	0xbfa6
 28085 bfa2 BEBF0000 		.long	0xbfbe
 28086 bfa6 9901     		.uleb128 0x99
 28087 bfa8 00000000 		.long	.LASF1535
 28088 bfac BEBF0000 		.long	0xbfbe
 28089 bfb0 A101     		.uleb128 0xa1
 28090 bfb2 5F5F6900 		.string	"__i"
 28091 bfb6 0B       		.byte	0xb
 28092 bfb7 D802     		.value	0x2d8
 28093 bfb9 C3BF0000 		.long	0xbfc3
 28094 bfbd 00       		.byte	0
 28095 bfbe 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 795


 28096 bfbf A9AF0000 		.long	0xafa9
 28097 bfc3 11       		.uleb128 0x11
 28098 bfc4 AFAF0000 		.long	0xafaf
 28099 bfc8 9801     		.uleb128 0x98
 28100 bfca 233A0000 		.long	0x3a23
 28101 bfce 03       		.byte	0x3
 28102 bfcf D7BF0000 		.long	0xbfd7
 28103 bfd3 E2BF0000 		.long	0xbfe2
 28104 bfd7 9901     		.uleb128 0x99
 28105 bfd9 00000000 		.long	.LASF1535
 28106 bfdd 62B70000 		.long	0xb762
 28107 bfe1 00       		.byte	0
 28108 bfe2 9801     		.uleb128 0x98
 28109 bfe4 EC900000 		.long	0x90ec
 28110 bfe8 03       		.byte	0x3
 28111 bfe9 F1BF0000 		.long	0xbff1
 28112 bfed FCBF0000 		.long	0xbffc
 28113 bff1 9901     		.uleb128 0x99
 28114 bff3 00000000 		.long	.LASF1535
 28115 bff7 FCBF0000 		.long	0xbffc
 28116 bffb 00       		.byte	0
 28117 bffc 11       		.uleb128 0x11
 28118 bffd BAAF0000 		.long	0xafba
 28119 c001 7F       		.uleb128 0x7f
 28120 c002 08       		.byte	0x8
 28121 c003 CE950000 		.long	0x95ce
 28122 c007 9D01     		.uleb128 0x9d
 28123 c009 90960000 		.long	0x9690
 28124 c00d 03       		.byte	0x3
 28125 c00e 48C00000 		.long	0xc048
 28126 c012 35       		.uleb128 0x35
 28127 c013 00000000 		.long	.LASF1259
 28128 c017 01AD0000 		.long	0xad01
 28129 c01b 35       		.uleb128 0x35
 28130 c01c 00000000 		.long	.LASF1260
 28131 c020 07AD0000 		.long	0xad07
 28132 c024 35       		.uleb128 0x35
 28133 c025 00000000 		.long	.LASF1144
 28134 c029 2E370000 		.long	0x372e
 28135 c02d A201     		.uleb128 0xa2
 28136 c02f 00000000 		.long	.LASF1550
 28137 c033 0B       		.byte	0xb
 28138 c034 3603     		.value	0x336
 28139 c036 48C00000 		.long	0xc048
 28140 c03a A201     		.uleb128 0xa2
 28141 c03c 00000000 		.long	.LASF1551
 28142 c040 0B       		.byte	0xb
 28143 c041 3703     		.value	0x337
 28144 c043 4DC00000 		.long	0xc04d
 28145 c047 00       		.byte	0
 28146 c048 11       		.uleb128 0x11
 28147 c049 4FBF0000 		.long	0xbf4f
 28148 c04d 11       		.uleb128 0x11
 28149 c04e 01C00000 		.long	0xc001
 28150 c052 9801     		.uleb128 0x98
 28151 c054 938D0000 		.long	0x8d93
 28152 c058 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 796


 28153 c059 61C00000 		.long	0xc061
 28154 c05d 6CC00000 		.long	0xc06c
 28155 c061 9901     		.uleb128 0x99
 28156 c063 00000000 		.long	.LASF1535
 28157 c067 67BE0000 		.long	0xbe67
 28158 c06b 00       		.byte	0
 28159 c06c 9801     		.uleb128 0x98
 28160 c06e 61910000 		.long	0x9161
 28161 c072 03       		.byte	0x3
 28162 c073 7BC00000 		.long	0xc07b
 28163 c077 86C00000 		.long	0xc086
 28164 c07b 9901     		.uleb128 0x99
 28165 c07d 00000000 		.long	.LASF1535
 28166 c081 86C00000 		.long	0xc086
 28167 c085 00       		.byte	0
 28168 c086 11       		.uleb128 0x11
 28169 c087 EDAD0000 		.long	0xaded
 28170 c08b 9801     		.uleb128 0x98
 28171 c08d 90910000 		.long	0x9190
 28172 c091 03       		.byte	0x3
 28173 c092 9AC00000 		.long	0xc09a
 28174 c096 AFC00000 		.long	0xc0af
 28175 c09a 9901     		.uleb128 0x99
 28176 c09c 00000000 		.long	.LASF1535
 28177 c0a0 86C00000 		.long	0xc086
 28178 c0a4 9901     		.uleb128 0x99
 28179 c0a6 00000000 		.long	.LASF1549
 28180 c0aa 019A0000 		.long	0x9a01
 28181 c0ae 00       		.byte	0
 28182 c0af 9801     		.uleb128 0x98
 28183 c0b1 45420000 		.long	0x4245
 28184 c0b5 03       		.byte	0x3
 28185 c0b6 BEC00000 		.long	0xc0be
 28186 c0ba D3C00000 		.long	0xc0d3
 28187 c0be 9901     		.uleb128 0x99
 28188 c0c0 00000000 		.long	.LASF1535
 28189 c0c4 D3C00000 		.long	0xc0d3
 28190 c0c8 9901     		.uleb128 0x99
 28191 c0ca 00000000 		.long	.LASF1549
 28192 c0ce 019A0000 		.long	0x9a01
 28193 c0d2 00       		.byte	0
 28194 c0d3 11       		.uleb128 0x11
 28195 c0d4 FFAD0000 		.long	0xadff
 28196 c0d8 9801     		.uleb128 0x98
 28197 c0da C8820000 		.long	0x82c8
 28198 c0de 03       		.byte	0x3
 28199 c0df E7C00000 		.long	0xc0e7
 28200 c0e3 F2C00000 		.long	0xc0f2
 28201 c0e7 9901     		.uleb128 0x99
 28202 c0e9 00000000 		.long	.LASF1535
 28203 c0ed F2C00000 		.long	0xc0f2
 28204 c0f1 00       		.byte	0
 28205 c0f2 11       		.uleb128 0x11
 28206 c0f3 15A30000 		.long	0xa315
 28207 c0f7 9801     		.uleb128 0x98
 28208 c0f9 A1070000 		.long	0x7a1
 28209 c0fd 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 797


 28210 c0fe 06C10000 		.long	0xc106
 28211 c102 11C10000 		.long	0xc111
 28212 c106 9901     		.uleb128 0x99
 28213 c108 00000000 		.long	.LASF1535
 28214 c10c 11C10000 		.long	0xc111
 28215 c110 00       		.byte	0
 28216 c111 11       		.uleb128 0x11
 28217 c112 27A30000 		.long	0xa327
 28218 c116 9801     		.uleb128 0x98
 28219 c118 F9820000 		.long	0x82f9
 28220 c11c 03       		.byte	0x3
 28221 c11d 25C10000 		.long	0xc125
 28222 c121 3AC10000 		.long	0xc13a
 28223 c125 9901     		.uleb128 0x99
 28224 c127 00000000 		.long	.LASF1535
 28225 c12b F2C00000 		.long	0xc0f2
 28226 c12f 9901     		.uleb128 0x99
 28227 c131 00000000 		.long	.LASF1549
 28228 c135 019A0000 		.long	0x9a01
 28229 c139 00       		.byte	0
 28230 c13a 9801     		.uleb128 0x98
 28231 c13c D2070000 		.long	0x7d2
 28232 c140 03       		.byte	0x3
 28233 c141 49C10000 		.long	0xc149
 28234 c145 5EC10000 		.long	0xc15e
 28235 c149 9901     		.uleb128 0x99
 28236 c14b 00000000 		.long	.LASF1535
 28237 c14f 11C10000 		.long	0xc111
 28238 c153 9901     		.uleb128 0x99
 28239 c155 00000000 		.long	.LASF1549
 28240 c159 019A0000 		.long	0x9a01
 28241 c15d 00       		.byte	0
 28242 c15e 9801     		.uleb128 0x98
 28243 c160 80530000 		.long	0x5380
 28244 c164 03       		.byte	0x3
 28245 c165 6DC10000 		.long	0xc16d
 28246 c169 92C10000 		.long	0xc192
 28247 c16d 9901     		.uleb128 0x99
 28248 c16f 00000000 		.long	.LASF1535
 28249 c173 92C10000 		.long	0xc192
 28250 c177 A101     		.uleb128 0xa1
 28251 c179 5F5F6100 		.string	"__a"
 28252 c17d 04       		.byte	0x4
 28253 c17e 9206     		.value	0x692
 28254 c180 D8800000 		.long	0x80d8
 28255 c184 A101     		.uleb128 0xa1
 28256 c186 5F5F6200 		.string	"__b"
 28257 c18a 04       		.byte	0x4
 28258 c18b 9306     		.value	0x693
 28259 c18d D8800000 		.long	0x80d8
 28260 c191 00       		.byte	0
 28261 c192 11       		.uleb128 0x11
 28262 c193 75B00000 		.long	0xb075
 28263 c197 9801     		.uleb128 0x98
 28264 c199 CD930000 		.long	0x93cd
 28265 c19d 03       		.byte	0x3
 28266 c19e A6C10000 		.long	0xc1a6
GAS LISTING /tmp/ccmMnd7l.s 			page 798


 28267 c1a2 BEC10000 		.long	0xc1be
 28268 c1a6 9901     		.uleb128 0x99
 28269 c1a8 00000000 		.long	.LASF1535
 28270 c1ac BEC10000 		.long	0xc1be
 28271 c1b0 A101     		.uleb128 0xa1
 28272 c1b2 5F5F6900 		.string	"__i"
 28273 c1b6 0B       		.byte	0xb
 28274 c1b7 D802     		.value	0x2d8
 28275 c1b9 C3C10000 		.long	0xc1c3
 28276 c1bd 00       		.byte	0
 28277 c1be 11       		.uleb128 0x11
 28278 c1bf 93B00000 		.long	0xb093
 28279 c1c3 11       		.uleb128 0x11
 28280 c1c4 99B00000 		.long	0xb099
 28281 c1c8 7F       		.uleb128 0x7f
 28282 c1c9 08       		.byte	0x8
 28283 c1ca 12560000 		.long	0x5612
 28284 c1ce 9D01     		.uleb128 0x9d
 28285 c1d0 8F750000 		.long	0x758f
 28286 c1d4 03       		.byte	0x3
 28287 c1d5 EFC10000 		.long	0xc1ef
 28288 c1d9 18       		.uleb128 0x18
 28289 c1da 5F547000 		.string	"_Tp"
 28290 c1de D5B00000 		.long	0xb0d5
 28291 c1e2 A001     		.uleb128 0xa0
 28292 c1e4 5F5F7400 		.string	"__t"
 28293 c1e8 12       		.byte	0x12
 28294 c1e9 4C       		.byte	0x4c
 28295 c1ea EFC10000 		.long	0xc1ef
 28296 c1ee 00       		.byte	0
 28297 c1ef 11       		.uleb128 0x11
 28298 c1f0 C8C10000 		.long	0xc1c8
 28299 c1f4 9801     		.uleb128 0x98
 28300 c1f6 0F580000 		.long	0x580f
 28301 c1fa 03       		.byte	0x3
 28302 c1fb 03C20000 		.long	0xc203
 28303 c1ff 0EC20000 		.long	0xc20e
 28304 c203 9901     		.uleb128 0x99
 28305 c205 00000000 		.long	.LASF1535
 28306 c209 0EC20000 		.long	0xc20e
 28307 c20d 00       		.byte	0
 28308 c20e 11       		.uleb128 0x11
 28309 c20f BDB00000 		.long	0xb0bd
 28310 c213 9801     		.uleb128 0x98
 28311 c215 E7580000 		.long	0x58e7
 28312 c219 03       		.byte	0x3
 28313 c21a 2BC20000 		.long	0xc22b
 28314 c21e 42C20000 		.long	0xc242
 28315 c222 35       		.uleb128 0x35
 28316 c223 00000000 		.long	.LASF810
 28317 c227 D5B00000 		.long	0xb0d5
 28318 c22b 9901     		.uleb128 0x99
 28319 c22d 00000000 		.long	.LASF1535
 28320 c231 42C20000 		.long	0xc242
 28321 c235 A001     		.uleb128 0xa0
 28322 c237 5F5F6800 		.string	"__h"
 28323 c23b 0A       		.byte	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 799


 28324 c23c 8B       		.byte	0x8b
 28325 c23d 47C20000 		.long	0xc247
 28326 c241 00       		.byte	0
 28327 c242 11       		.uleb128 0x11
 28328 c243 C9B00000 		.long	0xb0c9
 28329 c247 11       		.uleb128 0x11
 28330 c248 D5B00000 		.long	0xb0d5
 28331 c24c 9801     		.uleb128 0x98
 28332 c24e 8B5A0000 		.long	0x5a8b
 28333 c252 03       		.byte	0x3
 28334 c253 69C20000 		.long	0xc269
 28335 c257 86C20000 		.long	0xc286
 28336 c25b 35       		.uleb128 0x35
 28337 c25c 00000000 		.long	.LASF810
 28338 c260 D5B00000 		.long	0xb0d5
 28339 c264 6B       		.uleb128 0x6b
 28340 c265 00000000 		.long	.LASF824
 28341 c269 9901     		.uleb128 0x99
 28342 c26b 00000000 		.long	.LASF1535
 28343 c26f 86C20000 		.long	0xc286
 28344 c273 A201     		.uleb128 0xa2
 28345 c275 00000000 		.long	.LASF1546
 28346 c279 0A       		.byte	0xa
 28347 c27a 0401     		.value	0x104
 28348 c27c 8BC20000 		.long	0xc28b
 28349 c280 A501     		.uleb128 0xa5
 28350 c282 0A       		.byte	0xa
 28351 c283 0401     		.value	0x104
 28352 c285 00       		.byte	0
 28353 c286 11       		.uleb128 0x11
 28354 c287 FFB00000 		.long	0xb0ff
 28355 c28b 11       		.uleb128 0x11
 28356 c28c D5B00000 		.long	0xb0d5
 28357 c290 7E       		.uleb128 0x7e
 28358 c291 08       		.byte	0x8
 28359 c292 C6570000 		.long	0x57c6
 28360 c296 A401     		.uleb128 0xa4
 28361 c298 D8570000 		.long	0x57d8
 28362 c29c 09       		.byte	0x9
 28363 c29d B8       		.byte	0xb8
 28364 c29e 03       		.byte	0x3
 28365 c29f A7C20000 		.long	0xc2a7
 28366 c2a3 B2C20000 		.long	0xc2b2
 28367 c2a7 9901     		.uleb128 0x99
 28368 c2a9 00000000 		.long	.LASF1535
 28369 c2ad B2C20000 		.long	0xc2b2
 28370 c2b1 00       		.byte	0
 28371 c2b2 11       		.uleb128 0x11
 28372 c2b3 90C20000 		.long	0xc290
 28373 c2b7 9801     		.uleb128 0x98
 28374 c2b9 B75B0000 		.long	0x5bb7
 28375 c2bd 03       		.byte	0x3
 28376 c2be D5C20000 		.long	0xc2d5
 28377 c2c2 EBC20000 		.long	0xc2eb
 28378 c2c6 6A       		.uleb128 0x6a
 28379 c2c7 00000000 		.long	.LASF832
 28380 c2cb D5C20000 		.long	0xc2d5
GAS LISTING /tmp/ccmMnd7l.s 			page 800


 28381 c2cf 68       		.uleb128 0x68
 28382 c2d0 D5B00000 		.long	0xb0d5
 28383 c2d4 00       		.byte	0
 28384 c2d5 9901     		.uleb128 0x99
 28385 c2d7 00000000 		.long	.LASF1535
 28386 c2db EBC20000 		.long	0xc2eb
 28387 c2df A601     		.uleb128 0xa6
 28388 c2e1 0A       		.byte	0xa
 28389 c2e2 9401     		.value	0x194
 28390 c2e4 09       		.uleb128 0x9
 28391 c2e5 F0C20000 		.long	0xc2f0
 28392 c2e9 00       		.byte	0
 28393 c2ea 00       		.byte	0
 28394 c2eb 11       		.uleb128 0x11
 28395 c2ec 0CB10000 		.long	0xb10c
 28396 c2f0 11       		.uleb128 0x11
 28397 c2f1 D5B00000 		.long	0xb0d5
 28398 c2f5 7F       		.uleb128 0x7f
 28399 c2f6 08       		.byte	0x8
 28400 c2f7 49530000 		.long	0x5349
 28401 c2fb 7F       		.uleb128 0x7f
 28402 c2fc 08       		.byte	0x8
 28403 c2fd AD550000 		.long	0x55ad
 28404 c301 9D01     		.uleb128 0x9d
 28405 c303 AD750000 		.long	0x75ad
 28406 c307 03       		.byte	0x3
 28407 c308 22C30000 		.long	0xc322
 28408 c30c 18       		.uleb128 0x18
 28409 c30d 5F547000 		.string	"_Tp"
 28410 c311 F5C20000 		.long	0xc2f5
 28411 c315 A001     		.uleb128 0xa0
 28412 c317 5F5F7400 		.string	"__t"
 28413 c31b 12       		.byte	0x12
 28414 c31c 4C       		.byte	0x4c
 28415 c31d 22C30000 		.long	0xc322
 28416 c321 00       		.byte	0
 28417 c322 11       		.uleb128 0x11
 28418 c323 FBC20000 		.long	0xc2fb
 28419 c327 9D01     		.uleb128 0x9d
 28420 c329 C7550000 		.long	0x55c7
 28421 c32d 03       		.byte	0x3
 28422 c32e 40C30000 		.long	0xc340
 28423 c332 A101     		.uleb128 0xa1
 28424 c334 5F5F7800 		.string	"__x"
 28425 c338 09       		.byte	0x9
 28426 c339 AC04     		.value	0x4ac
 28427 c33b 40C30000 		.long	0xc340
 28428 c33f 00       		.byte	0
 28429 c340 11       		.uleb128 0x11
 28430 c341 B0B00000 		.long	0xb0b0
 28431 c345 9801     		.uleb128 0x98
 28432 c347 BD560000 		.long	0x56bd
 28433 c34b 03       		.byte	0x3
 28434 c34c 63C30000 		.long	0xc363
 28435 c350 86C30000 		.long	0xc386
 28436 c354 6A       		.uleb128 0x6a
 28437 c355 00000000 		.long	.LASF786
GAS LISTING /tmp/ccmMnd7l.s 			page 801


 28438 c359 63C30000 		.long	0xc363
 28439 c35d 68       		.uleb128 0x68
 28440 c35e D5B00000 		.long	0xb0d5
 28441 c362 00       		.byte	0
 28442 c363 9901     		.uleb128 0x99
 28443 c365 00000000 		.long	.LASF1535
 28444 c369 86C30000 		.long	0xc386
 28445 c36d A101     		.uleb128 0xa1
 28446 c36f 5F5F6600 		.string	"__f"
 28447 c373 09       		.byte	0x9
 28448 c374 1205     		.value	0x512
 28449 c376 8BC30000 		.long	0xc38b
 28450 c37a A601     		.uleb128 0xa6
 28451 c37c 09       		.byte	0x9
 28452 c37d 1205     		.value	0x512
 28453 c37f 09       		.uleb128 0x9
 28454 c380 90C30000 		.long	0xc390
 28455 c384 00       		.byte	0
 28456 c385 00       		.byte	0
 28457 c386 11       		.uleb128 0x11
 28458 c387 25B10000 		.long	0xb125
 28459 c38b 11       		.uleb128 0x11
 28460 c38c B0B00000 		.long	0xb0b0
 28461 c390 11       		.uleb128 0x11
 28462 c391 D5B00000 		.long	0xb0d5
 28463 c395 9D01     		.uleb128 0x9d
 28464 c397 815F0000 		.long	0x5f81
 28465 c39b 03       		.byte	0x3
 28466 c39c ADC30000 		.long	0xc3ad
 28467 c3a0 A001     		.uleb128 0xa0
 28468 c3a2 5F5F6200 		.string	"__b"
 28469 c3a6 0A       		.byte	0xa
 28470 c3a7 79       		.byte	0x79
 28471 c3a8 ADC30000 		.long	0xc3ad
 28472 c3ac 00       		.byte	0
 28473 c3ad 11       		.uleb128 0x11
 28474 c3ae 56B10000 		.long	0xb156
 28475 c3b2 9D01     		.uleb128 0x9d
 28476 c3b4 22600000 		.long	0x6022
 28477 c3b8 03       		.byte	0x3
 28478 c3b9 CAC30000 		.long	0xc3ca
 28479 c3bd A001     		.uleb128 0xa0
 28480 c3bf 5F5F7400 		.string	"__t"
 28481 c3c3 0A       		.byte	0xa
 28482 c3c4 EF       		.byte	0xef
 28483 c3c5 CAC30000 		.long	0xc3ca
 28484 c3c9 00       		.byte	0
 28485 c3ca 11       		.uleb128 0x11
 28486 c3cb 62B10000 		.long	0xb162
 28487 c3cf 9D01     		.uleb128 0x9d
 28488 c3d1 CB750000 		.long	0x75cb
 28489 c3d5 03       		.byte	0x3
 28490 c3d6 00C40000 		.long	0xc400
 28491 c3da 19       		.uleb128 0x19
 28492 c3db 5F5F6900 		.string	"__i"
 28493 c3df 03810000 		.long	0x8103
 28494 c3e3 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 802


 28495 c3e4 35       		.uleb128 0x35
 28496 c3e5 00000000 		.long	.LASF811
 28497 c3e9 1D530000 		.long	0x531d
 28498 c3ed 6B       		.uleb128 0x6b
 28499 c3ee 00000000 		.long	.LASF990
 28500 c3f2 A101     		.uleb128 0xa1
 28501 c3f4 5F5F7400 		.string	"__t"
 28502 c3f8 0A       		.byte	0xa
 28503 c3f9 E702     		.value	0x2e7
 28504 c3fb 00C40000 		.long	0xc400
 28505 c3ff 00       		.byte	0
 28506 c400 11       		.uleb128 0x11
 28507 c401 62B10000 		.long	0xb162
 28508 c405 9D01     		.uleb128 0x9d
 28509 c407 F9750000 		.long	0x75f9
 28510 c40b 03       		.byte	0x3
 28511 c40c 3CC40000 		.long	0xc43c
 28512 c410 19       		.uleb128 0x19
 28513 c411 5F5F6900 		.string	"__i"
 28514 c415 03810000 		.long	0x8103
 28515 c419 01       		.byte	0x1
 28516 c41a 6A       		.uleb128 0x6a
 28517 c41b 00000000 		.long	.LASF802
 28518 c41f 2EC40000 		.long	0xc42e
 28519 c423 68       		.uleb128 0x68
 28520 c424 63B00000 		.long	0xb063
 28521 c428 68       		.uleb128 0x68
 28522 c429 1D530000 		.long	0x531d
 28523 c42d 00       		.byte	0
 28524 c42e A101     		.uleb128 0xa1
 28525 c430 5F5F7400 		.string	"__t"
 28526 c434 0A       		.byte	0xa
 28527 c435 F402     		.value	0x2f4
 28528 c437 3CC40000 		.long	0xc43c
 28529 c43b 00       		.byte	0
 28530 c43c 11       		.uleb128 0x11
 28531 c43d E2B10000 		.long	0xb1e2
 28532 c441 9D01     		.uleb128 0x9d
 28533 c443 2D760000 		.long	0x762d
 28534 c447 03       		.byte	0x3
 28535 c448 78C40000 		.long	0xc478
 28536 c44c 19       		.uleb128 0x19
 28537 c44d 5F5F6900 		.string	"__i"
 28538 c451 03810000 		.long	0x8103
 28539 c455 00       		.byte	0
 28540 c456 6A       		.uleb128 0x6a
 28541 c457 00000000 		.long	.LASF802
 28542 c45b 6AC40000 		.long	0xc46a
 28543 c45f 68       		.uleb128 0x68
 28544 c460 63B00000 		.long	0xb063
 28545 c464 68       		.uleb128 0x68
 28546 c465 1D530000 		.long	0x531d
 28547 c469 00       		.byte	0
 28548 c46a A101     		.uleb128 0xa1
 28549 c46c 5F5F7400 		.string	"__t"
 28550 c470 0A       		.byte	0xa
 28551 c471 F402     		.value	0x2f4
GAS LISTING /tmp/ccmMnd7l.s 			page 803


 28552 c473 78C40000 		.long	0xc478
 28553 c477 00       		.byte	0
 28554 c478 11       		.uleb128 0x11
 28555 c479 E2B10000 		.long	0xb1e2
 28556 c47d 9801     		.uleb128 0x98
 28557 c47f C25D0000 		.long	0x5dc2
 28558 c483 03       		.byte	0x3
 28559 c484 8CC40000 		.long	0xc48c
 28560 c488 97C40000 		.long	0xc497
 28561 c48c 9901     		.uleb128 0x99
 28562 c48e 00000000 		.long	.LASF1535
 28563 c492 97C40000 		.long	0xc497
 28564 c496 00       		.byte	0
 28565 c497 11       		.uleb128 0x11
 28566 c498 EEB10000 		.long	0xb1ee
 28567 c49c 9D01     		.uleb128 0x9d
 28568 c49e D3680000 		.long	0x68d3
 28569 c4a2 03       		.byte	0x3
 28570 c4a3 B4C40000 		.long	0xc4b4
 28571 c4a7 A001     		.uleb128 0xa0
 28572 c4a9 5F5F6200 		.string	"__b"
 28573 c4ad 0A       		.byte	0xa
 28574 c4ae 79       		.byte	0x79
 28575 c4af B4C40000 		.long	0xc4b4
 28576 c4b3 00       		.byte	0
 28577 c4b4 11       		.uleb128 0x11
 28578 c4b5 32B20000 		.long	0xb232
 28579 c4b9 9D01     		.uleb128 0x9d
 28580 c4bb 74690000 		.long	0x6974
 28581 c4bf 03       		.byte	0x3
 28582 c4c0 D1C40000 		.long	0xc4d1
 28583 c4c4 A001     		.uleb128 0xa0
 28584 c4c6 5F5F7400 		.string	"__t"
 28585 c4ca 0A       		.byte	0xa
 28586 c4cb EF       		.byte	0xef
 28587 c4cc D1C40000 		.long	0xc4d1
 28588 c4d0 00       		.byte	0
 28589 c4d1 11       		.uleb128 0x11
 28590 c4d2 3EB20000 		.long	0xb23e
 28591 c4d6 9D01     		.uleb128 0x9d
 28592 c4d8 61760000 		.long	0x7661
 28593 c4dc 03       		.byte	0x3
 28594 c4dd 07C50000 		.long	0xc507
 28595 c4e1 19       		.uleb128 0x19
 28596 c4e2 5F5F6900 		.string	"__i"
 28597 c4e6 03810000 		.long	0x8103
 28598 c4ea 01       		.byte	0x1
 28599 c4eb 35       		.uleb128 0x35
 28600 c4ec 00000000 		.long	.LASF811
 28601 c4f0 F6520000 		.long	0x52f6
 28602 c4f4 6B       		.uleb128 0x6b
 28603 c4f5 00000000 		.long	.LASF990
 28604 c4f9 A101     		.uleb128 0xa1
 28605 c4fb 5F5F7400 		.string	"__t"
 28606 c4ff 0A       		.byte	0xa
 28607 c500 E702     		.value	0x2e7
 28608 c502 07C50000 		.long	0xc507
GAS LISTING /tmp/ccmMnd7l.s 			page 804


 28609 c506 00       		.byte	0
 28610 c507 11       		.uleb128 0x11
 28611 c508 3EB20000 		.long	0xb23e
 28612 c50c 9D01     		.uleb128 0x9d
 28613 c50e 8F760000 		.long	0x768f
 28614 c512 03       		.byte	0x3
 28615 c513 43C50000 		.long	0xc543
 28616 c517 19       		.uleb128 0x19
 28617 c518 5F5F6900 		.string	"__i"
 28618 c51c 03810000 		.long	0x8103
 28619 c520 01       		.byte	0x1
 28620 c521 6A       		.uleb128 0x6a
 28621 c522 00000000 		.long	.LASF802
 28622 c526 35C50000 		.long	0xc535
 28623 c52a 68       		.uleb128 0x68
 28624 c52b 57B00000 		.long	0xb057
 28625 c52f 68       		.uleb128 0x68
 28626 c530 F6520000 		.long	0x52f6
 28627 c534 00       		.byte	0
 28628 c535 A101     		.uleb128 0xa1
 28629 c537 5F5F7400 		.string	"__t"
 28630 c53b 0A       		.byte	0xa
 28631 c53c F402     		.value	0x2f4
 28632 c53e 43C50000 		.long	0xc543
 28633 c542 00       		.byte	0
 28634 c543 11       		.uleb128 0x11
 28635 c544 BEB20000 		.long	0xb2be
 28636 c548 9D01     		.uleb128 0x9d
 28637 c54a C3760000 		.long	0x76c3
 28638 c54e 03       		.byte	0x3
 28639 c54f 7FC50000 		.long	0xc57f
 28640 c553 19       		.uleb128 0x19
 28641 c554 5F5F6900 		.string	"__i"
 28642 c558 03810000 		.long	0x8103
 28643 c55c 00       		.byte	0
 28644 c55d 6A       		.uleb128 0x6a
 28645 c55e 00000000 		.long	.LASF802
 28646 c562 71C50000 		.long	0xc571
 28647 c566 68       		.uleb128 0x68
 28648 c567 57B00000 		.long	0xb057
 28649 c56b 68       		.uleb128 0x68
 28650 c56c F6520000 		.long	0x52f6
 28651 c570 00       		.byte	0
 28652 c571 A101     		.uleb128 0xa1
 28653 c573 5F5F7400 		.string	"__t"
 28654 c577 0A       		.byte	0xa
 28655 c578 F402     		.value	0x2f4
 28656 c57a 7FC50000 		.long	0xc57f
 28657 c57e 00       		.byte	0
 28658 c57f 11       		.uleb128 0x11
 28659 c580 BEB20000 		.long	0xb2be
 28660 c584 9801     		.uleb128 0x98
 28661 c586 64670000 		.long	0x6764
 28662 c58a 03       		.byte	0x3
 28663 c58b 93C50000 		.long	0xc593
 28664 c58f 9EC50000 		.long	0xc59e
 28665 c593 9901     		.uleb128 0x99
GAS LISTING /tmp/ccmMnd7l.s 			page 805


 28666 c595 00000000 		.long	.LASF1535
 28667 c599 9EC50000 		.long	0xc59e
 28668 c59d 00       		.byte	0
 28669 c59e 11       		.uleb128 0x11
 28670 c59f CAB20000 		.long	0xb2ca
 28671 c5a3 9801     		.uleb128 0x98
 28672 c5a5 DE820000 		.long	0x82de
 28673 c5a9 03       		.byte	0x3
 28674 c5aa B2C50000 		.long	0xc5b2
 28675 c5ae C2C50000 		.long	0xc5c2
 28676 c5b2 9901     		.uleb128 0x99
 28677 c5b4 00000000 		.long	.LASF1535
 28678 c5b8 F2C00000 		.long	0xc0f2
 28679 c5bc 09       		.uleb128 0x9
 28680 c5bd C2C50000 		.long	0xc5c2
 28681 c5c1 00       		.byte	0
 28682 c5c2 11       		.uleb128 0x11
 28683 c5c3 1BA30000 		.long	0xa31b
 28684 c5c7 9801     		.uleb128 0x98
 28685 c5c9 B7070000 		.long	0x7b7
 28686 c5cd 03       		.byte	0x3
 28687 c5ce D6C50000 		.long	0xc5d6
 28688 c5d2 EDC50000 		.long	0xc5ed
 28689 c5d6 9901     		.uleb128 0x99
 28690 c5d8 00000000 		.long	.LASF1535
 28691 c5dc 11C10000 		.long	0xc111
 28692 c5e0 A001     		.uleb128 0xa0
 28693 c5e2 5F5F6100 		.string	"__a"
 28694 c5e6 21       		.byte	0x21
 28695 c5e7 73       		.byte	0x73
 28696 c5e8 EDC50000 		.long	0xc5ed
 28697 c5ec 00       		.byte	0
 28698 c5ed 11       		.uleb128 0x11
 28699 c5ee 2DA30000 		.long	0xa32d
 28700 c5f2 9801     		.uleb128 0x98
 28701 c5f4 621D0000 		.long	0x1d62
 28702 c5f8 03       		.byte	0x3
 28703 c5f9 01C60000 		.long	0xc601
 28704 c5fd 0CC60000 		.long	0xc60c
 28705 c601 9901     		.uleb128 0x99
 28706 c603 00000000 		.long	.LASF1535
 28707 c607 59B30000 		.long	0xb359
 28708 c60b 00       		.byte	0
 28709 c60c 9801     		.uleb128 0x98
 28710 c60e AE0C0000 		.long	0xcae
 28711 c612 03       		.byte	0x3
 28712 c613 1BC60000 		.long	0xc61b
 28713 c617 26C60000 		.long	0xc626
 28714 c61b 9901     		.uleb128 0x99
 28715 c61d 00000000 		.long	.LASF1535
 28716 c621 59B30000 		.long	0xb359
 28717 c625 00       		.byte	0
 28718 c626 A701     		.uleb128 0xa7
 28719 c628 F4090000 		.long	0x9f4
 28720 c62c 07       		.byte	0x7
 28721 c62d 1001     		.value	0x110
 28722 c62f 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 806


 28723 c630 38C60000 		.long	0xc638
 28724 c634 4DC60000 		.long	0xc64d
 28725 c638 9901     		.uleb128 0x99
 28726 c63a 00000000 		.long	.LASF1535
 28727 c63e 4DC60000 		.long	0xc64d
 28728 c642 9901     		.uleb128 0x99
 28729 c644 00000000 		.long	.LASF1549
 28730 c648 019A0000 		.long	0x9a01
 28731 c64c 00       		.byte	0
 28732 c64d 11       		.uleb128 0x11
 28733 c64e A6AB0000 		.long	0xaba6
 28734 c652 7F       		.uleb128 0x7f
 28735 c653 08       		.byte	0x8
 28736 c654 CA730000 		.long	0x73ca
 28737 c658 9D01     		.uleb128 0x9d
 28738 c65a F7760000 		.long	0x76f7
 28739 c65e 03       		.byte	0x3
 28740 c65f 79C60000 		.long	0xc679
 28741 c663 35       		.uleb128 0x35
 28742 c664 00000000 		.long	.LASF1003
 28743 c668 F0290000 		.long	0x29f0
 28744 c66c A001     		.uleb128 0xa0
 28745 c66e 5F5F6600 		.string	"__f"
 28746 c672 0D       		.byte	0xd
 28747 c673 2E       		.byte	0x2e
 28748 c674 51B60000 		.long	0xb651
 28749 c678 00       		.byte	0
 28750 c679 9D01     		.uleb128 0x9d
 28751 c67b 15770000 		.long	0x7715
 28752 c67f 03       		.byte	0x3
 28753 c680 A4C60000 		.long	0xc6a4
 28754 c684 35       		.uleb128 0x35
 28755 c685 00000000 		.long	.LASF301
 28756 c689 E4990000 		.long	0x99e4
 28757 c68d 35       		.uleb128 0x35
 28758 c68e 00000000 		.long	.LASF302
 28759 c692 BD040000 		.long	0x4bd
 28760 c696 A201     		.uleb128 0xa2
 28761 c698 00000000 		.long	.LASF1552
 28762 c69c 08       		.byte	0x8
 28763 c69d 4A02     		.value	0x24a
 28764 c69f A4C60000 		.long	0xc6a4
 28765 c6a3 00       		.byte	0
 28766 c6a4 11       		.uleb128 0x11
 28767 c6a5 AAAC0000 		.long	0xacaa
 28768 c6a9 9801     		.uleb128 0x98
 28769 c6ab 61950000 		.long	0x9561
 28770 c6af 03       		.byte	0x3
 28771 c6b0 B8C60000 		.long	0xc6b8
 28772 c6b4 C3C60000 		.long	0xc6c3
 28773 c6b8 9901     		.uleb128 0x99
 28774 c6ba 00000000 		.long	.LASF1535
 28775 c6be C3C60000 		.long	0xc6c3
 28776 c6c2 00       		.byte	0
 28777 c6c3 11       		.uleb128 0x11
 28778 c6c4 A4B00000 		.long	0xb0a4
 28779 c6c8 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccmMnd7l.s 			page 807


 28780 c6ca 57590000 		.long	0x5957
 28781 c6ce 03       		.byte	0x3
 28782 c6cf E0C60000 		.long	0xc6e0
 28783 c6d3 A001     		.uleb128 0xa0
 28784 c6d5 5F5F7400 		.string	"__t"
 28785 c6d9 0A       		.byte	0xa
 28786 c6da EF       		.byte	0xef
 28787 c6db E0C60000 		.long	0xc6e0
 28788 c6df 00       		.byte	0
 28789 c6e0 11       		.uleb128 0x11
 28790 c6e1 E7B00000 		.long	0xb0e7
 28791 c6e5 9D01     		.uleb128 0x9d
 28792 c6e7 3D770000 		.long	0x773d
 28793 c6eb 03       		.byte	0x3
 28794 c6ec 16C70000 		.long	0xc716
 28795 c6f0 19       		.uleb128 0x19
 28796 c6f1 5F5F6900 		.string	"__i"
 28797 c6f5 03810000 		.long	0x8103
 28798 c6f9 00       		.byte	0
 28799 c6fa 35       		.uleb128 0x35
 28800 c6fb 00000000 		.long	.LASF811
 28801 c6ff 812C0000 		.long	0x2c81
 28802 c703 6B       		.uleb128 0x6b
 28803 c704 00000000 		.long	.LASF990
 28804 c708 A101     		.uleb128 0xa1
 28805 c70a 5F5F7400 		.string	"__t"
 28806 c70e 0A       		.byte	0xa
 28807 c70f E702     		.value	0x2e7
 28808 c711 16C70000 		.long	0xc716
 28809 c715 00       		.byte	0
 28810 c716 11       		.uleb128 0x11
 28811 c717 E7B00000 		.long	0xb0e7
 28812 c71b 9D01     		.uleb128 0x9d
 28813 c71d 982A0000 		.long	0x2a98
 28814 c721 03       		.byte	0x3
 28815 c722 3AC70000 		.long	0xc73a
 28816 c726 35       		.uleb128 0x35
 28817 c727 00000000 		.long	.LASF421
 28818 c72b D0AD0000 		.long	0xadd0
 28819 c72f 09       		.uleb128 0x9
 28820 c730 D0AD0000 		.long	0xadd0
 28821 c734 09       		.uleb128 0x9
 28822 c735 D0AD0000 		.long	0xadd0
 28823 c739 00       		.byte	0
 28824 c73a 9D01     		.uleb128 0x9d
 28825 c73c 6B770000 		.long	0x776b
 28826 c740 03       		.byte	0x3
 28827 c741 67C70000 		.long	0xc767
 28828 c745 35       		.uleb128 0x35
 28829 c746 00000000 		.long	.LASF421
 28830 c74a D0AD0000 		.long	0xadd0
 28831 c74e 9E01     		.uleb128 0x9e
 28832 c750 00000000 		.long	.LASF1553
 28833 c754 2C       		.byte	0x2c
 28834 c755 7A       		.byte	0x7a
 28835 c756 D0AD0000 		.long	0xadd0
 28836 c75a 9E01     		.uleb128 0x9e
GAS LISTING /tmp/ccmMnd7l.s 			page 808


 28837 c75c 00000000 		.long	.LASF1554
 28838 c760 2C       		.byte	0x2c
 28839 c761 7A       		.byte	0x7a
 28840 c762 D0AD0000 		.long	0xadd0
 28841 c766 00       		.byte	0
 28842 c767 9D01     		.uleb128 0x9d
 28843 c769 8A770000 		.long	0x778a
 28844 c76d 03       		.byte	0x3
 28845 c76e A2C70000 		.long	0xc7a2
 28846 c772 35       		.uleb128 0x35
 28847 c773 00000000 		.long	.LASF421
 28848 c777 D0AD0000 		.long	0xadd0
 28849 c77b 18       		.uleb128 0x18
 28850 c77c 5F547000 		.string	"_Tp"
 28851 c780 18810000 		.long	0x8118
 28852 c784 9E01     		.uleb128 0x9e
 28853 c786 00000000 		.long	.LASF1553
 28854 c78a 2C       		.byte	0x2c
 28855 c78b 94       		.byte	0x94
 28856 c78c D0AD0000 		.long	0xadd0
 28857 c790 9E01     		.uleb128 0x9e
 28858 c792 00000000 		.long	.LASF1554
 28859 c796 2C       		.byte	0x2c
 28860 c797 94       		.byte	0x94
 28861 c798 D0AD0000 		.long	0xadd0
 28862 c79c 09       		.uleb128 0x9
 28863 c79d A2C70000 		.long	0xc7a2
 28864 c7a1 00       		.byte	0
 28865 c7a2 11       		.uleb128 0x11
 28866 c7a3 17AE0000 		.long	0xae17
 28867 c7a7 9D01     		.uleb128 0x9d
 28868 c7a9 B72A0000 		.long	0x2ab7
 28869 c7ad 03       		.byte	0x3
 28870 c7ae C6C70000 		.long	0xc7c6
 28871 c7b2 35       		.uleb128 0x35
 28872 c7b3 00000000 		.long	.LASF421
 28873 c7b7 01AD0000 		.long	0xad01
 28874 c7bb 09       		.uleb128 0x9
 28875 c7bc 01AD0000 		.long	0xad01
 28876 c7c0 09       		.uleb128 0x9
 28877 c7c1 01AD0000 		.long	0xad01
 28878 c7c5 00       		.byte	0
 28879 c7c6 9D01     		.uleb128 0x9d
 28880 c7c8 B7770000 		.long	0x77b7
 28881 c7cc 03       		.byte	0x3
 28882 c7cd F3C70000 		.long	0xc7f3
 28883 c7d1 35       		.uleb128 0x35
 28884 c7d2 00000000 		.long	.LASF421
 28885 c7d6 01AD0000 		.long	0xad01
 28886 c7da 9E01     		.uleb128 0x9e
 28887 c7dc 00000000 		.long	.LASF1553
 28888 c7e0 2C       		.byte	0x2c
 28889 c7e1 7A       		.byte	0x7a
 28890 c7e2 01AD0000 		.long	0xad01
 28891 c7e6 9E01     		.uleb128 0x9e
 28892 c7e8 00000000 		.long	.LASF1554
 28893 c7ec 2C       		.byte	0x2c
GAS LISTING /tmp/ccmMnd7l.s 			page 809


 28894 c7ed 7A       		.byte	0x7a
 28895 c7ee 01AD0000 		.long	0xad01
 28896 c7f2 00       		.byte	0
 28897 c7f3 9D01     		.uleb128 0x9d
 28898 c7f5 D6770000 		.long	0x77d6
 28899 c7f9 03       		.byte	0x3
 28900 c7fa 2EC80000 		.long	0xc82e
 28901 c7fe 35       		.uleb128 0x35
 28902 c7ff 00000000 		.long	.LASF421
 28903 c803 01AD0000 		.long	0xad01
 28904 c807 18       		.uleb128 0x18
 28905 c808 5F547000 		.string	"_Tp"
 28906 c80c 29000000 		.long	0x29
 28907 c810 9E01     		.uleb128 0x9e
 28908 c812 00000000 		.long	.LASF1553
 28909 c816 2C       		.byte	0x2c
 28910 c817 94       		.byte	0x94
 28911 c818 01AD0000 		.long	0xad01
 28912 c81c 9E01     		.uleb128 0x9e
 28913 c81e 00000000 		.long	.LASF1554
 28914 c822 2C       		.byte	0x2c
 28915 c823 94       		.byte	0x94
 28916 c824 01AD0000 		.long	0xad01
 28917 c828 09       		.uleb128 0x9
 28918 c829 2EC80000 		.long	0xc82e
 28919 c82d 00       		.byte	0
 28920 c82e 11       		.uleb128 0x11
 28921 c82f 48AD0000 		.long	0xad48
 28922 c833 9D01     		.uleb128 0x9d
 28923 c835 462B0000 		.long	0x2b46
 28924 c839 03       		.byte	0x3
 28925 c83a 5AC80000 		.long	0xc85a
 28926 c83e A001     		.uleb128 0xa0
 28927 c840 5F5F7800 		.string	"__x"
 28928 c844 04       		.byte	0x4
 28929 c845 8A       		.byte	0x8a
 28930 c846 03810000 		.long	0x8103
 28931 c84a 9B01     		.uleb128 0x9b
 28932 c84c 9C01     		.uleb128 0x9c
 28933 c84e 00000000 		.long	.LASF1555
 28934 c852 04       		.byte	0x4
 28935 c853 8C       		.byte	0x8c
 28936 c854 03810000 		.long	0x8103
 28937 c858 00       		.byte	0
 28938 c859 00       		.byte	0
 28939 c85a 9D01     		.uleb128 0x9d
 28940 c85c AE2B0000 		.long	0x2bae
 28941 c860 03       		.byte	0x3
 28942 c861 81C80000 		.long	0xc881
 28943 c865 A001     		.uleb128 0xa0
 28944 c867 5F5F7800 		.string	"__x"
 28945 c86b 04       		.byte	0x4
 28946 c86c 8A       		.byte	0x8a
 28947 c86d 03810000 		.long	0x8103
 28948 c871 9B01     		.uleb128 0x9b
 28949 c873 9C01     		.uleb128 0x9c
 28950 c875 00000000 		.long	.LASF1555
GAS LISTING /tmp/ccmMnd7l.s 			page 810


 28951 c879 04       		.byte	0x4
 28952 c87a 8C       		.byte	0x8c
 28953 c87b 03810000 		.long	0x8103
 28954 c87f 00       		.byte	0
 28955 c880 00       		.byte	0
 28956 c881 9D01     		.uleb128 0x9d
 28957 c883 042C0000 		.long	0x2c04
 28958 c887 03       		.byte	0x3
 28959 c888 C7C80000 		.long	0xc8c7
 28960 c88c 18       		.uleb128 0x18
 28961 c88d 5F547000 		.string	"_Tp"
 28962 c891 03810000 		.long	0x8103
 28963 c895 4F       		.uleb128 0x4f
 28964 c896 5F5F6D00 		.string	"__m"
 28965 c89a 03810000 		.long	0x8103
 28966 c89e 00000000 		.quad	0x100000000
 28966      01000000 
 28967 c8a6 19       		.uleb128 0x19
 28968 c8a7 5F5F6100 		.string	"__a"
 28969 c8ab 03810000 		.long	0x8103
 28970 c8af 01       		.byte	0x1
 28971 c8b0 19       		.uleb128 0x19
 28972 c8b1 5F5F6300 		.string	"__c"
 28973 c8b5 03810000 		.long	0x8103
 28974 c8b9 00       		.byte	0
 28975 c8ba A001     		.uleb128 0xa0
 28976 c8bc 5F5F7800 		.string	"__x"
 28977 c8c0 04       		.byte	0x4
 28978 c8c1 95       		.byte	0x95
 28979 c8c2 03810000 		.long	0x8103
 28980 c8c6 00       		.byte	0
 28981 c8c7 9D01     		.uleb128 0x9d
 28982 c8c9 472C0000 		.long	0x2c47
 28983 c8cd 03       		.byte	0x3
 28984 c8ce 07C90000 		.long	0xc907
 28985 c8d2 18       		.uleb128 0x18
 28986 c8d3 5F547000 		.string	"_Tp"
 28987 c8d7 03810000 		.long	0x8103
 28988 c8db 51       		.uleb128 0x51
 28989 c8dc 5F5F6D00 		.string	"__m"
 28990 c8e0 03810000 		.long	0x8103
 28991 c8e4 7002     		.value	0x270
 28992 c8e6 19       		.uleb128 0x19
 28993 c8e7 5F5F6100 		.string	"__a"
 28994 c8eb 03810000 		.long	0x8103
 28995 c8ef 01       		.byte	0x1
 28996 c8f0 19       		.uleb128 0x19
 28997 c8f1 5F5F6300 		.string	"__c"
 28998 c8f5 03810000 		.long	0x8103
 28999 c8f9 00       		.byte	0
 29000 c8fa A001     		.uleb128 0xa0
 29001 c8fc 5F5F7800 		.string	"__x"
 29002 c900 04       		.byte	0x4
 29003 c901 95       		.byte	0x95
 29004 c902 03810000 		.long	0x8103
 29005 c906 00       		.byte	0
 29006 c907 A701     		.uleb128 0xa7
GAS LISTING /tmp/ccmMnd7l.s 			page 811


 29007 c909 902D0000 		.long	0x2d90
 29008 c90d 03       		.byte	0x3
 29009 c90e 4701     		.value	0x147
 29010 c910 01       		.byte	0x1
 29011 c911 19C90000 		.long	0xc919
 29012 c915 51C90000 		.long	0xc951
 29013 c919 9901     		.uleb128 0x99
 29014 c91b 00000000 		.long	.LASF1535
 29015 c91f 51C90000 		.long	0xc951
 29016 c923 A201     		.uleb128 0xa2
 29017 c925 00000000 		.long	.LASF1556
 29018 c929 04       		.byte	0x4
 29019 c92a 0702     		.value	0x207
 29020 c92c C52C0000 		.long	0x2cc5
 29021 c930 9B01     		.uleb128 0x9b
 29022 c932 A801     		.uleb128 0xa8
 29023 c934 5F5F6900 		.string	"__i"
 29024 c938 03       		.byte	0x3
 29025 c939 4E01     		.value	0x14e
 29026 c93b 85060000 		.long	0x685
 29027 c93f 9B01     		.uleb128 0x9b
 29028 c941 A801     		.uleb128 0xa8
 29029 c943 5F5F7800 		.string	"__x"
 29030 c947 03       		.byte	0x3
 29031 c948 5001     		.value	0x150
 29032 c94a 03810000 		.long	0x8103
 29033 c94e 00       		.byte	0
 29034 c94f 00       		.byte	0
 29035 c950 00       		.byte	0
 29036 c951 11       		.uleb128 0x11
 29037 c952 E3AC0000 		.long	0xace3
 29038 c956 9801     		.uleb128 0x98
 29039 c958 15920000 		.long	0x9215
 29040 c95c 03       		.byte	0x3
 29041 c95d 65C90000 		.long	0xc965
 29042 c961 81C90000 		.long	0xc981
 29043 c965 9901     		.uleb128 0x99
 29044 c967 00000000 		.long	.LASF1535
 29045 c96b 86C00000 		.long	0xc086
 29046 c96f A001     		.uleb128 0xa0
 29047 c971 5F5F7000 		.string	"__p"
 29048 c975 0E       		.byte	0xe
 29049 c976 6D       		.byte	0x6d
 29050 c977 35910000 		.long	0x9135
 29051 c97b 09       		.uleb128 0x9
 29052 c97c 2A910000 		.long	0x912a
 29053 c980 00       		.byte	0
 29054 c981 9D01     		.uleb128 0x9d
 29055 c983 70440000 		.long	0x4470
 29056 c987 03       		.byte	0x3
 29057 c988 B4C90000 		.long	0xc9b4
 29058 c98c A101     		.uleb128 0xa1
 29059 c98e 5F5F6100 		.string	"__a"
 29060 c992 2F       		.byte	0x2f
 29061 c993 7E01     		.value	0x17e
 29062 c995 B4C90000 		.long	0xc9b4
 29063 c999 A101     		.uleb128 0xa1
GAS LISTING /tmp/ccmMnd7l.s 			page 812


 29064 c99b 5F5F7000 		.string	"__p"
 29065 c99f 2F       		.byte	0x2f
 29066 c9a0 7E01     		.value	0x17e
 29067 c9a2 2E430000 		.long	0x432e
 29068 c9a6 A101     		.uleb128 0xa1
 29069 c9a8 5F5F6E00 		.string	"__n"
 29070 c9ac 2F       		.byte	0x2f
 29071 c9ad 7E01     		.value	0x17e
 29072 c9af 5C430000 		.long	0x435c
 29073 c9b3 00       		.byte	0
 29074 c9b4 11       		.uleb128 0x11
 29075 c9b5 17AE0000 		.long	0xae17
 29076 c9b9 9801     		.uleb128 0x98
 29077 c9bb 46470000 		.long	0x4746
 29078 c9bf 03       		.byte	0x3
 29079 c9c0 C8C90000 		.long	0xc9c8
 29080 c9c4 EDC90000 		.long	0xc9ed
 29081 c9c8 9901     		.uleb128 0x99
 29082 c9ca 00000000 		.long	.LASF1535
 29083 c9ce EDC90000 		.long	0xc9ed
 29084 c9d2 A001     		.uleb128 0xa0
 29085 c9d4 5F5F7000 		.string	"__p"
 29086 c9d8 06       		.byte	0x6
 29087 c9d9 AE       		.byte	0xae
 29088 c9da C1450000 		.long	0x45c1
 29089 c9de A001     		.uleb128 0xa0
 29090 c9e0 5F5F6E00 		.string	"__n"
 29091 c9e4 06       		.byte	0x6
 29092 c9e5 AE       		.byte	0xae
 29093 c9e6 85060000 		.long	0x685
 29094 c9ea A901     		.uleb128 0xa9
 29095 c9ec 00       		.byte	0
 29096 c9ed 11       		.uleb128 0x11
 29097 c9ee 48AE0000 		.long	0xae48
 29098 c9f2 A401     		.uleb128 0xa4
 29099 c9f4 AC450000 		.long	0x45ac
 29100 c9f8 06       		.byte	0x6
 29101 c9f9 4F       		.byte	0x4f
 29102 c9fa 03       		.byte	0x3
 29103 c9fb 03CA0000 		.long	0xca03
 29104 c9ff 18CA0000 		.long	0xca18
 29105 ca03 9901     		.uleb128 0x99
 29106 ca05 00000000 		.long	.LASF1535
 29107 ca09 18CA0000 		.long	0xca18
 29108 ca0d 9901     		.uleb128 0x99
 29109 ca0f 00000000 		.long	.LASF1549
 29110 ca13 019A0000 		.long	0x9a01
 29111 ca17 00       		.byte	0
 29112 ca18 11       		.uleb128 0x11
 29113 ca19 29AE0000 		.long	0xae29
 29114 ca1d 9801     		.uleb128 0x98
 29115 ca1f F3450000 		.long	0x45f3
 29116 ca23 03       		.byte	0x3
 29117 ca24 2CCA0000 		.long	0xca2c
 29118 ca28 37CA0000 		.long	0xca37
 29119 ca2c 9901     		.uleb128 0x99
 29120 ca2e 00000000 		.long	.LASF1535
GAS LISTING /tmp/ccmMnd7l.s 			page 813


 29121 ca32 EDC90000 		.long	0xc9ed
 29122 ca36 00       		.byte	0
 29123 ca37 9801     		.uleb128 0x98
 29124 ca39 0A470000 		.long	0x470a
 29125 ca3d 03       		.byte	0x3
 29126 ca3e 46CA0000 		.long	0xca46
 29127 ca42 5BCA0000 		.long	0xca5b
 29128 ca46 9901     		.uleb128 0x99
 29129 ca48 00000000 		.long	.LASF1535
 29130 ca4c EDC90000 		.long	0xc9ed
 29131 ca50 9901     		.uleb128 0x99
 29132 ca52 00000000 		.long	.LASF1549
 29133 ca56 019A0000 		.long	0x9a01
 29134 ca5a 00       		.byte	0
 29135 ca5b 9801     		.uleb128 0x98
 29136 ca5d C88A0000 		.long	0x8ac8
 29137 ca61 03       		.byte	0x3
 29138 ca62 6ACA0000 		.long	0xca6a
 29139 ca66 7ACA0000 		.long	0xca7a
 29140 ca6a 9901     		.uleb128 0x99
 29141 ca6c 00000000 		.long	.LASF1535
 29142 ca70 AABE0000 		.long	0xbeaa
 29143 ca74 09       		.uleb128 0x9
 29144 ca75 7ACA0000 		.long	0xca7a
 29145 ca79 00       		.byte	0
 29146 ca7a 11       		.uleb128 0x11
 29147 ca7b 24AD0000 		.long	0xad24
 29148 ca7f 9801     		.uleb128 0x98
 29149 ca81 DA300000 		.long	0x30da
 29150 ca85 03       		.byte	0x3
 29151 ca86 8ECA0000 		.long	0xca8e
 29152 ca8a A5CA0000 		.long	0xcaa5
 29153 ca8e 9901     		.uleb128 0x99
 29154 ca90 00000000 		.long	.LASF1535
 29155 ca94 F7BE0000 		.long	0xbef7
 29156 ca98 A001     		.uleb128 0xa0
 29157 ca9a 5F5F6100 		.string	"__a"
 29158 ca9e 21       		.byte	0x21
 29159 ca9f 73       		.byte	0x73
 29160 caa0 A5CA0000 		.long	0xcaa5
 29161 caa4 00       		.byte	0
 29162 caa5 11       		.uleb128 0x11
 29163 caa6 36AD0000 		.long	0xad36
 29164 caaa 9801     		.uleb128 0x98
 29165 caac 678B0000 		.long	0x8b67
 29166 cab0 03       		.byte	0x3
 29167 cab1 B9CA0000 		.long	0xcab9
 29168 cab5 D5CA0000 		.long	0xcad5
 29169 cab9 9901     		.uleb128 0x99
 29170 cabb 00000000 		.long	.LASF1535
 29171 cabf AABE0000 		.long	0xbeaa
 29172 cac3 A001     		.uleb128 0xa0
 29173 cac5 5F5F7000 		.string	"__p"
 29174 cac9 0E       		.byte	0xe
 29175 caca 6D       		.byte	0x6d
 29176 cacb 878A0000 		.long	0x8a87
 29177 cacf 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 814


 29178 cad0 7C8A0000 		.long	0x8a7c
 29179 cad4 00       		.byte	0
 29180 cad5 9D01     		.uleb128 0x9d
 29181 cad7 F3330000 		.long	0x33f3
 29182 cadb 03       		.byte	0x3
 29183 cadc 08CB0000 		.long	0xcb08
 29184 cae0 A101     		.uleb128 0xa1
 29185 cae2 5F5F6100 		.string	"__a"
 29186 cae6 2F       		.byte	0x2f
 29187 cae7 7E01     		.value	0x17e
 29188 cae9 08CB0000 		.long	0xcb08
 29189 caed A101     		.uleb128 0xa1
 29190 caef 5F5F7000 		.string	"__p"
 29191 caf3 2F       		.byte	0x2f
 29192 caf4 7E01     		.value	0x17e
 29193 caf6 B1320000 		.long	0x32b1
 29194 cafa A101     		.uleb128 0xa1
 29195 cafc 5F5F6E00 		.string	"__n"
 29196 cb00 2F       		.byte	0x2f
 29197 cb01 7E01     		.value	0x17e
 29198 cb03 DF320000 		.long	0x32df
 29199 cb07 00       		.byte	0
 29200 cb08 11       		.uleb128 0x11
 29201 cb09 48AD0000 		.long	0xad48
 29202 cb0d 9801     		.uleb128 0x98
 29203 cb0f D4360000 		.long	0x36d4
 29204 cb13 03       		.byte	0x3
 29205 cb14 1CCB0000 		.long	0xcb1c
 29206 cb18 41CB0000 		.long	0xcb41
 29207 cb1c 9901     		.uleb128 0x99
 29208 cb1e 00000000 		.long	.LASF1535
 29209 cb22 41CB0000 		.long	0xcb41
 29210 cb26 A001     		.uleb128 0xa0
 29211 cb28 5F5F7000 		.string	"__p"
 29212 cb2c 06       		.byte	0x6
 29213 cb2d AE       		.byte	0xae
 29214 cb2e 4F350000 		.long	0x354f
 29215 cb32 A001     		.uleb128 0xa0
 29216 cb34 5F5F6E00 		.string	"__n"
 29217 cb38 06       		.byte	0x6
 29218 cb39 AE       		.byte	0xae
 29219 cb3a 85060000 		.long	0x685
 29220 cb3e A901     		.uleb128 0xa9
 29221 cb40 00       		.byte	0
 29222 cb41 11       		.uleb128 0x11
 29223 cb42 79AD0000 		.long	0xad79
 29224 cb46 A401     		.uleb128 0xa4
 29225 cb48 3A350000 		.long	0x353a
 29226 cb4c 06       		.byte	0x6
 29227 cb4d 4F       		.byte	0x4f
 29228 cb4e 03       		.byte	0x3
 29229 cb4f 57CB0000 		.long	0xcb57
 29230 cb53 6CCB0000 		.long	0xcb6c
 29231 cb57 9901     		.uleb128 0x99
 29232 cb59 00000000 		.long	.LASF1535
 29233 cb5d 6CCB0000 		.long	0xcb6c
 29234 cb61 9901     		.uleb128 0x99
GAS LISTING /tmp/ccmMnd7l.s 			page 815


 29235 cb63 00000000 		.long	.LASF1549
 29236 cb67 019A0000 		.long	0x9a01
 29237 cb6b 00       		.byte	0
 29238 cb6c 11       		.uleb128 0x11
 29239 cb6d 5AAD0000 		.long	0xad5a
 29240 cb71 9801     		.uleb128 0x98
 29241 cb73 81350000 		.long	0x3581
 29242 cb77 03       		.byte	0x3
 29243 cb78 80CB0000 		.long	0xcb80
 29244 cb7c 8BCB0000 		.long	0xcb8b
 29245 cb80 9901     		.uleb128 0x99
 29246 cb82 00000000 		.long	.LASF1535
 29247 cb86 41CB0000 		.long	0xcb41
 29248 cb8a 00       		.byte	0
 29249 cb8b 9801     		.uleb128 0x98
 29250 cb8d 98360000 		.long	0x3698
 29251 cb91 03       		.byte	0x3
 29252 cb92 9ACB0000 		.long	0xcb9a
 29253 cb96 AFCB0000 		.long	0xcbaf
 29254 cb9a 9901     		.uleb128 0x99
 29255 cb9c 00000000 		.long	.LASF1535
 29256 cba0 41CB0000 		.long	0xcb41
 29257 cba4 9901     		.uleb128 0x99
 29258 cba6 00000000 		.long	.LASF1549
 29259 cbaa 019A0000 		.long	0x9a01
 29260 cbae 00       		.byte	0
 29261 cbaf 7E       		.uleb128 0x7e
 29262 cbb0 08       		.byte	0x8
 29263 cbb1 3F820000 		.long	0x823f
 29264 cbb5 9801     		.uleb128 0x98
 29265 cbb7 64810000 		.long	0x8164
 29266 cbbb 03       		.byte	0x3
 29267 cbbc D6CB0000 		.long	0xcbd6
 29268 cbc0 F9CB0000 		.long	0xcbf9
 29269 cbc4 35       		.uleb128 0x35
 29270 cbc5 00000000 		.long	.LASF1097
 29271 cbc9 C68C0000 		.long	0x8cc6
 29272 cbcd 35       		.uleb128 0x35
 29273 cbce 00000000 		.long	.LASF1098
 29274 cbd2 C68C0000 		.long	0x8cc6
 29275 cbd6 9901     		.uleb128 0x99
 29276 cbd8 00000000 		.long	.LASF1535
 29277 cbdc F9CB0000 		.long	0xcbf9
 29278 cbe0 9E01     		.uleb128 0x9e
 29279 cbe2 00000000 		.long	.LASF1557
 29280 cbe6 11       		.byte	0x11
 29281 cbe7 29       		.byte	0x29
 29282 cbe8 C68C0000 		.long	0x8cc6
 29283 cbec 9E01     		.uleb128 0x9e
 29284 cbee 00000000 		.long	.LASF1558
 29285 cbf2 11       		.byte	0x11
 29286 cbf3 29       		.byte	0x29
 29287 cbf4 C68C0000 		.long	0x8cc6
 29288 cbf8 00       		.byte	0
 29289 cbf9 11       		.uleb128 0x11
 29290 cbfa AFCB0000 		.long	0xcbaf
 29291 cbfe 9801     		.uleb128 0x98
GAS LISTING /tmp/ccmMnd7l.s 			page 816


 29292 cc00 76910000 		.long	0x9176
 29293 cc04 03       		.byte	0x3
 29294 cc05 0DCC0000 		.long	0xcc0d
 29295 cc09 1DCC0000 		.long	0xcc1d
 29296 cc0d 9901     		.uleb128 0x99
 29297 cc0f 00000000 		.long	.LASF1535
 29298 cc13 86C00000 		.long	0xc086
 29299 cc17 09       		.uleb128 0x9
 29300 cc18 1DCC0000 		.long	0xcc1d
 29301 cc1c 00       		.byte	0
 29302 cc1d 11       		.uleb128 0x11
 29303 cc1e F3AD0000 		.long	0xadf3
 29304 cc22 9801     		.uleb128 0x98
 29305 cc24 2A420000 		.long	0x422a
 29306 cc28 03       		.byte	0x3
 29307 cc29 31CC0000 		.long	0xcc31
 29308 cc2d 48CC0000 		.long	0xcc48
 29309 cc31 9901     		.uleb128 0x99
 29310 cc33 00000000 		.long	.LASF1535
 29311 cc37 D3C00000 		.long	0xc0d3
 29312 cc3b A001     		.uleb128 0xa0
 29313 cc3d 5F5F6100 		.string	"__a"
 29314 cc41 21       		.byte	0x21
 29315 cc42 73       		.byte	0x73
 29316 cc43 48CC0000 		.long	0xcc48
 29317 cc47 00       		.byte	0
 29318 cc48 11       		.uleb128 0x11
 29319 cc49 05AE0000 		.long	0xae05
 29320 cc4d 7E       		.uleb128 0x7e
 29321 cc4e 08       		.byte	0x8
 29322 cc4f 44820000 		.long	0x8244
 29323 cc53 9801     		.uleb128 0x98
 29324 cc55 E2810000 		.long	0x81e2
 29325 cc59 03       		.byte	0x3
 29326 cc5a 74CC0000 		.long	0xcc74
 29327 cc5e 97CC0000 		.long	0xcc97
 29328 cc62 35       		.uleb128 0x35
 29329 cc63 00000000 		.long	.LASF1101
 29330 cc67 29000000 		.long	0x29
 29331 cc6b 35       		.uleb128 0x35
 29332 cc6c 00000000 		.long	.LASF743
 29333 cc70 C68C0000 		.long	0x8cc6
 29334 cc74 9901     		.uleb128 0x99
 29335 cc76 00000000 		.long	.LASF1535
 29336 cc7a 97CC0000 		.long	0xcc97
 29337 cc7e 9E01     		.uleb128 0x9e
 29338 cc80 00000000 		.long	.LASF1538
 29339 cc84 11       		.byte	0x11
 29340 cc85 45       		.byte	0x45
 29341 cc86 9CCC0000 		.long	0xcc9c
 29342 cc8a 9E01     		.uleb128 0x9e
 29343 cc8c 00000000 		.long	.LASF1559
 29344 cc90 11       		.byte	0x11
 29345 cc91 45       		.byte	0x45
 29346 cc92 C68C0000 		.long	0x8cc6
 29347 cc96 00       		.byte	0
 29348 cc97 11       		.uleb128 0x11
GAS LISTING /tmp/ccmMnd7l.s 			page 817


 29349 cc98 4DCC0000 		.long	0xcc4d
 29350 cc9c 11       		.uleb128 0x11
 29351 cc9d 12AD0000 		.long	0xad12
 29352 cca1 8101     		.uleb128 0x81
 29353 cca3 08       		.byte	0x8
 29354 cca4 CF700000 		.long	0x70cf
 29355 cca8 9D01     		.uleb128 0x9d
 29356 ccaa 03780000 		.long	0x7803
 29357 ccae 03       		.byte	0x3
 29358 ccaf C9CC0000 		.long	0xccc9
 29359 ccb3 18       		.uleb128 0x18
 29360 ccb4 5F547000 		.string	"_Tp"
 29361 ccb8 12AD0000 		.long	0xad12
 29362 ccbc A001     		.uleb128 0xa0
 29363 ccbe 5F5F7400 		.string	"__t"
 29364 ccc2 12       		.byte	0x12
 29365 ccc3 65       		.byte	0x65
 29366 ccc4 C9CC0000 		.long	0xccc9
 29367 ccc8 00       		.byte	0
 29368 ccc9 11       		.uleb128 0x11
 29369 ccca 12AD0000 		.long	0xad12
 29370 ccce 9801     		.uleb128 0x98
 29371 ccd0 D68D0000 		.long	0x8dd6
 29372 ccd4 03       		.byte	0x3
 29373 ccd5 DDCC0000 		.long	0xccdd
 29374 ccd9 E8CC0000 		.long	0xcce8
 29375 ccdd 9901     		.uleb128 0x99
 29376 ccdf 00000000 		.long	.LASF1535
 29377 cce3 67BE0000 		.long	0xbe67
 29378 cce7 00       		.byte	0
 29379 cce8 9D01     		.uleb128 0x9d
 29380 ccea 21780000 		.long	0x7821
 29381 ccee 01       		.byte	0x1
 29382 ccef 3DCD0000 		.long	0xcd3d
 29383 ccf3 35       		.uleb128 0x35
 29384 ccf4 00000000 		.long	.LASF1012
 29385 ccf8 C68C0000 		.long	0x8cc6
 29386 ccfc 35       		.uleb128 0x35
 29387 ccfd 00000000 		.long	.LASF1013
 29388 cd01 D6810000 		.long	0x81d6
 29389 cd05 A201     		.uleb128 0xa2
 29390 cd07 00000000 		.long	.LASF1554
 29391 cd0b 0C       		.byte	0xc
 29392 cd0c 1C07     		.value	0x71c
 29393 cd0e C68C0000 		.long	0x8cc6
 29394 cd12 A201     		.uleb128 0xa2
 29395 cd14 00000000 		.long	.LASF1560
 29396 cd18 0C       		.byte	0xc
 29397 cd19 1D07     		.value	0x71d
 29398 cd1b D6810000 		.long	0x81d6
 29399 cd1f 9B01     		.uleb128 0x9b
 29400 cd21 A301     		.uleb128 0xa3
 29401 cd23 00000000 		.long	.LASF1538
 29402 cd27 0C       		.byte	0xc
 29403 cd28 2007     		.value	0x720
 29404 cd2a A2700000 		.long	0x70a2
 29405 cd2e A301     		.uleb128 0xa3
GAS LISTING /tmp/ccmMnd7l.s 			page 818


 29406 cd30 00000000 		.long	.LASF1561
 29407 cd34 0C       		.byte	0xc
 29408 cd35 2107     		.value	0x721
 29409 cd37 C68C0000 		.long	0x8cc6
 29410 cd3b 00       		.byte	0
 29411 cd3c 00       		.byte	0
 29412 cd3d 9D01     		.uleb128 0x9d
 29413 cd3f 4A780000 		.long	0x784a
 29414 cd43 03       		.byte	0x3
 29415 cd44 92CD0000 		.long	0xcd92
 29416 cd48 35       		.uleb128 0x35
 29417 cd49 00000000 		.long	.LASF1012
 29418 cd4d C68C0000 		.long	0x8cc6
 29419 cd51 35       		.uleb128 0x35
 29420 cd52 00000000 		.long	.LASF1013
 29421 cd56 58810000 		.long	0x8158
 29422 cd5a A201     		.uleb128 0xa2
 29423 cd5c 00000000 		.long	.LASF1553
 29424 cd60 0C       		.byte	0xc
 29425 cd61 4607     		.value	0x746
 29426 cd63 C68C0000 		.long	0x8cc6
 29427 cd67 A201     		.uleb128 0xa2
 29428 cd69 00000000 		.long	.LASF1554
 29429 cd6d 0C       		.byte	0xc
 29430 cd6e 4707     		.value	0x747
 29431 cd70 C68C0000 		.long	0x8cc6
 29432 cd74 A201     		.uleb128 0xa2
 29433 cd76 00000000 		.long	.LASF1560
 29434 cd7a 0C       		.byte	0xc
 29435 cd7b 4707     		.value	0x747
 29436 cd7d 58810000 		.long	0x8158
 29437 cd81 9B01     		.uleb128 0x9b
 29438 cd83 A801     		.uleb128 0xa8
 29439 cd85 5F5F6900 		.string	"__i"
 29440 cd89 0C       		.byte	0xc
 29441 cd8a 4907     		.value	0x749
 29442 cd8c C68C0000 		.long	0x8cc6
 29443 cd90 00       		.byte	0
 29444 cd91 00       		.byte	0
 29445 cd92 9801     		.uleb128 0x98
 29446 cd94 A0530000 		.long	0x53a0
 29447 cd98 03       		.byte	0x3
 29448 cd99 A1CD0000 		.long	0xcda1
 29449 cd9d ACCD0000 		.long	0xcdac
 29450 cda1 9901     		.uleb128 0x99
 29451 cda3 00000000 		.long	.LASF1535
 29452 cda7 ACCD0000 		.long	0xcdac
 29453 cdab 00       		.byte	0
 29454 cdac 11       		.uleb128 0x11
 29455 cdad 7BB00000 		.long	0xb07b
 29456 cdb1 9801     		.uleb128 0x98
 29457 cdb3 BC530000 		.long	0x53bc
 29458 cdb7 03       		.byte	0x3
 29459 cdb8 C0CD0000 		.long	0xcdc0
 29460 cdbc CBCD0000 		.long	0xcdcb
 29461 cdc0 9901     		.uleb128 0x99
 29462 cdc2 00000000 		.long	.LASF1535
GAS LISTING /tmp/ccmMnd7l.s 			page 819


 29463 cdc6 ACCD0000 		.long	0xcdac
 29464 cdca 00       		.byte	0
 29465 cdcb 9801     		.uleb128 0x98
 29466 cdcd 8A8B0000 		.long	0x8b8a
 29467 cdd1 03       		.byte	0x3
 29468 cdd2 DACD0000 		.long	0xcdda
 29469 cdd6 E5CD0000 		.long	0xcde5
 29470 cdda 9901     		.uleb128 0x99
 29471 cddc 00000000 		.long	.LASF1535
 29472 cde0 E5CD0000 		.long	0xcde5
 29473 cde4 00       		.byte	0
 29474 cde5 11       		.uleb128 0x11
 29475 cde6 2AAD0000 		.long	0xad2a
 29476 cdea 9801     		.uleb128 0x98
 29477 cdec 408B0000 		.long	0x8b40
 29478 cdf0 03       		.byte	0x3
 29479 cdf1 F9CD0000 		.long	0xcdf9
 29480 cdf5 15CE0000 		.long	0xce15
 29481 cdf9 9901     		.uleb128 0x99
 29482 cdfb 00000000 		.long	.LASF1535
 29483 cdff AABE0000 		.long	0xbeaa
 29484 ce03 A001     		.uleb128 0xa0
 29485 ce05 5F5F6E00 		.string	"__n"
 29486 ce09 0E       		.byte	0xe
 29487 ce0a 63       		.byte	0x63
 29488 ce0b 7C8A0000 		.long	0x8a7c
 29489 ce0f 09       		.uleb128 0x9
 29490 ce10 01A30000 		.long	0xa301
 29491 ce14 00       		.byte	0
 29492 ce15 9D01     		.uleb128 0x9d
 29493 ce17 B0330000 		.long	0x33b0
 29494 ce1b 03       		.byte	0x3
 29495 ce1c 3BCE0000 		.long	0xce3b
 29496 ce20 A101     		.uleb128 0xa1
 29497 ce22 5F5F6100 		.string	"__a"
 29498 ce26 2F       		.byte	0x2f
 29499 ce27 6401     		.value	0x164
 29500 ce29 3BCE0000 		.long	0xce3b
 29501 ce2d A101     		.uleb128 0xa1
 29502 ce2f 5F5F6E00 		.string	"__n"
 29503 ce33 2F       		.byte	0x2f
 29504 ce34 6401     		.value	0x164
 29505 ce36 DF320000 		.long	0x32df
 29506 ce3a 00       		.byte	0
 29507 ce3b 11       		.uleb128 0x11
 29508 ce3c 48AD0000 		.long	0xad48
 29509 ce40 9801     		.uleb128 0x98
 29510 ce42 B2360000 		.long	0x36b2
 29511 ce46 03       		.byte	0x3
 29512 ce47 4FCE0000 		.long	0xce4f
 29513 ce4b 68CE0000 		.long	0xce68
 29514 ce4f 9901     		.uleb128 0x99
 29515 ce51 00000000 		.long	.LASF1535
 29516 ce55 41CB0000 		.long	0xcb41
 29517 ce59 A001     		.uleb128 0xa0
 29518 ce5b 5F5F6E00 		.string	"__n"
 29519 ce5f 06       		.byte	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 820


 29520 ce60 A7       		.byte	0xa7
 29521 ce61 85060000 		.long	0x685
 29522 ce65 A901     		.uleb128 0xa9
 29523 ce67 00       		.byte	0
 29524 ce68 9801     		.uleb128 0x98
 29525 ce6a E8340000 		.long	0x34e8
 29526 ce6e 03       		.byte	0x3
 29527 ce6f 77CE0000 		.long	0xce77
 29528 ce73 8ECE0000 		.long	0xce8e
 29529 ce77 9901     		.uleb128 0x99
 29530 ce79 00000000 		.long	.LASF1535
 29531 ce7d 6CCB0000 		.long	0xcb6c
 29532 ce81 A001     		.uleb128 0xa0
 29533 ce83 5F5F6100 		.string	"__a"
 29534 ce87 06       		.byte	0x6
 29535 ce88 5A       		.byte	0x5a
 29536 ce89 8ECE0000 		.long	0xce8e
 29537 ce8d 00       		.byte	0
 29538 ce8e 11       		.uleb128 0x11
 29539 ce8f 60AD0000 		.long	0xad60
 29540 ce93 9D01     		.uleb128 0x9d
 29541 ce95 78780000 		.long	0x7878
 29542 ce99 03       		.byte	0x3
 29543 ce9a 01CF0000 		.long	0xcf01
 29544 ce9e 35       		.uleb128 0x35
 29545 ce9f 00000000 		.long	.LASF1016
 29546 cea3 01AD0000 		.long	0xad01
 29547 cea7 35       		.uleb128 0x35
 29548 cea8 00000000 		.long	.LASF425
 29549 ceac 03810000 		.long	0x8103
 29550 ceb0 18       		.uleb128 0x18
 29551 ceb1 5F547000 		.string	"_Tp"
 29552 ceb5 29000000 		.long	0x29
 29553 ceb9 A201     		.uleb128 0xa2
 29554 cebb 00000000 		.long	.LASF1553
 29555 cebf 14       		.byte	0x14
 29556 cec0 F502     		.value	0x2f5
 29557 cec2 01AD0000 		.long	0xad01
 29558 cec6 A101     		.uleb128 0xa1
 29559 cec8 5F5F6E00 		.string	"__n"
 29560 cecc 14       		.byte	0x14
 29561 cecd F502     		.value	0x2f5
 29562 cecf 03810000 		.long	0x8103
 29563 ced3 A201     		.uleb128 0xa2
 29564 ced5 00000000 		.long	.LASF1309
 29565 ced9 14       		.byte	0x14
 29566 ceda F502     		.value	0x2f5
 29567 cedc 01CF0000 		.long	0xcf01
 29568 cee0 9B01     		.uleb128 0x9b
 29569 cee2 A301     		.uleb128 0xa3
 29570 cee4 00000000 		.long	.LASF1562
 29571 cee8 14       		.byte	0x14
 29572 cee9 F702     		.value	0x2f7
 29573 ceeb 0DAD0000 		.long	0xad0d
 29574 ceef 9B01     		.uleb128 0x9b
 29575 cef1 A301     		.uleb128 0xa3
 29576 cef3 00000000 		.long	.LASF1563
GAS LISTING /tmp/ccmMnd7l.s 			page 821


 29577 cef7 14       		.byte	0x14
 29578 cef8 F802     		.value	0x2f8
 29579 cefa 03810000 		.long	0x8103
 29580 cefe 00       		.byte	0
 29581 ceff 00       		.byte	0
 29582 cf00 00       		.byte	0
 29583 cf01 11       		.uleb128 0x11
 29584 cf02 18AD0000 		.long	0xad18
 29585 cf06 9D01     		.uleb128 0x9d
 29586 cf08 B3780000 		.long	0x78b3
 29587 cf0c 03       		.byte	0x3
 29588 cf0d 42CF0000 		.long	0xcf42
 29589 cf11 18       		.uleb128 0x18
 29590 cf12 5F547000 		.string	"_Tp"
 29591 cf16 29000000 		.long	0x29
 29592 cf1a A001     		.uleb128 0xa0
 29593 cf1c 5F5F6100 		.string	"__a"
 29594 cf20 12       		.byte	0x12
 29595 cf21 A6       		.byte	0xa6
 29596 cf22 42CF0000 		.long	0xcf42
 29597 cf26 A001     		.uleb128 0xa0
 29598 cf28 5F5F6200 		.string	"__b"
 29599 cf2c 12       		.byte	0x12
 29600 cf2d A6       		.byte	0xa6
 29601 cf2e 47CF0000 		.long	0xcf47
 29602 cf32 9B01     		.uleb128 0x9b
 29603 cf34 9C01     		.uleb128 0x9c
 29604 cf36 00000000 		.long	.LASF1562
 29605 cf3a 12       		.byte	0x12
 29606 cf3b AF       		.byte	0xaf
 29607 cf3c 29000000 		.long	0x29
 29608 cf40 00       		.byte	0
 29609 cf41 00       		.byte	0
 29610 cf42 11       		.uleb128 0x11
 29611 cf43 12AD0000 		.long	0xad12
 29612 cf47 11       		.uleb128 0x11
 29613 cf48 12AD0000 		.long	0xad12
 29614 cf4c 9D01     		.uleb128 0x9d
 29615 cf4e D2780000 		.long	0x78d2
 29616 cf52 03       		.byte	0x3
 29617 cf53 82CF0000 		.long	0xcf82
 29618 cf57 35       		.uleb128 0x35
 29619 cf58 00000000 		.long	.LASF1019
 29620 cf5c C68C0000 		.long	0x8cc6
 29621 cf60 35       		.uleb128 0x35
 29622 cf61 00000000 		.long	.LASF1020
 29623 cf65 C68C0000 		.long	0x8cc6
 29624 cf69 A001     		.uleb128 0xa0
 29625 cf6b 5F5F6100 		.string	"__a"
 29626 cf6f 14       		.byte	0x14
 29627 cf70 78       		.byte	0x78
 29628 cf71 C68C0000 		.long	0x8cc6
 29629 cf75 A001     		.uleb128 0xa0
 29630 cf77 5F5F6200 		.string	"__b"
 29631 cf7b 14       		.byte	0x14
 29632 cf7c 78       		.byte	0x78
 29633 cf7d C68C0000 		.long	0x8cc6
GAS LISTING /tmp/ccmMnd7l.s 			page 822


 29634 cf81 00       		.byte	0
 29635 cf82 9D01     		.uleb128 0x9d
 29636 cf84 C6960000 		.long	0x96c6
 29637 cf88 03       		.byte	0x3
 29638 cf89 BACF0000 		.long	0xcfba
 29639 cf8d 35       		.uleb128 0x35
 29640 cf8e 00000000 		.long	.LASF743
 29641 cf92 01AD0000 		.long	0xad01
 29642 cf96 35       		.uleb128 0x35
 29643 cf97 00000000 		.long	.LASF1144
 29644 cf9b 2E370000 		.long	0x372e
 29645 cf9f A201     		.uleb128 0xa2
 29646 cfa1 00000000 		.long	.LASF1550
 29647 cfa5 0B       		.byte	0xb
 29648 cfa6 4C03     		.value	0x34c
 29649 cfa8 BACF0000 		.long	0xcfba
 29650 cfac A201     		.uleb128 0xa2
 29651 cfae 00000000 		.long	.LASF1551
 29652 cfb2 0B       		.byte	0xb
 29653 cfb3 4D03     		.value	0x34d
 29654 cfb5 BFCF0000 		.long	0xcfbf
 29655 cfb9 00       		.byte	0
 29656 cfba 11       		.uleb128 0x11
 29657 cfbb 4FBF0000 		.long	0xbf4f
 29658 cfbf 11       		.uleb128 0x11
 29659 cfc0 4FBF0000 		.long	0xbf4f
 29660 cfc4 9D01     		.uleb128 0x9d
 29661 cfc6 FA780000 		.long	0x78fa
 29662 cfca 01       		.byte	0x1
 29663 cfcb 16D00000 		.long	0xd016
 29664 cfcf 35       		.uleb128 0x35
 29665 cfd0 00000000 		.long	.LASF1012
 29666 cfd4 C68C0000 		.long	0x8cc6
 29667 cfd8 35       		.uleb128 0x35
 29668 cfd9 00000000 		.long	.LASF1013
 29669 cfdd 58810000 		.long	0x8158
 29670 cfe1 A201     		.uleb128 0xa2
 29671 cfe3 00000000 		.long	.LASF1553
 29672 cfe7 0C       		.byte	0xc
 29673 cfe8 6707     		.value	0x767
 29674 cfea C68C0000 		.long	0x8cc6
 29675 cfee A201     		.uleb128 0xa2
 29676 cff0 00000000 		.long	.LASF1554
 29677 cff4 0C       		.byte	0xc
 29678 cff5 6807     		.value	0x768
 29679 cff7 C68C0000 		.long	0x8cc6
 29680 cffb A201     		.uleb128 0xa2
 29681 cffd 00000000 		.long	.LASF1564
 29682 d001 0C       		.byte	0xc
 29683 d002 6907     		.value	0x769
 29684 d004 C68C0000 		.long	0x8cc6
 29685 d008 A201     		.uleb128 0xa2
 29686 d00a 00000000 		.long	.LASF1560
 29687 d00e 0C       		.byte	0xc
 29688 d00f 6907     		.value	0x769
 29689 d011 58810000 		.long	0x8158
 29690 d015 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 823


 29691 d016 9D01     		.uleb128 0x9d
 29692 d018 F3960000 		.long	0x96f3
 29693 d01c 03       		.byte	0x3
 29694 d01d 4ED00000 		.long	0xd04e
 29695 d021 35       		.uleb128 0x35
 29696 d022 00000000 		.long	.LASF743
 29697 d026 01AD0000 		.long	0xad01
 29698 d02a 35       		.uleb128 0x35
 29699 d02b 00000000 		.long	.LASF1144
 29700 d02f 2E370000 		.long	0x372e
 29701 d033 A201     		.uleb128 0xa2
 29702 d035 00000000 		.long	.LASF1550
 29703 d039 0B       		.byte	0xb
 29704 d03a 8F03     		.value	0x38f
 29705 d03c 4ED00000 		.long	0xd04e
 29706 d040 A201     		.uleb128 0xa2
 29707 d042 00000000 		.long	.LASF1551
 29708 d046 0B       		.byte	0xb
 29709 d047 9003     		.value	0x390
 29710 d049 53D00000 		.long	0xd053
 29711 d04d 00       		.byte	0
 29712 d04e 11       		.uleb128 0x11
 29713 d04f 4FBF0000 		.long	0xbf4f
 29714 d053 11       		.uleb128 0x11
 29715 d054 4FBF0000 		.long	0xbf4f
 29716 d058 9801     		.uleb128 0x98
 29717 d05a 618E0000 		.long	0x8e61
 29718 d05e 03       		.byte	0x3
 29719 d05f 67D00000 		.long	0xd067
 29720 d063 7FD00000 		.long	0xd07f
 29721 d067 9901     		.uleb128 0x99
 29722 d069 00000000 		.long	.LASF1535
 29723 d06d 16BF0000 		.long	0xbf16
 29724 d071 A101     		.uleb128 0xa1
 29725 d073 5F5F6E00 		.string	"__n"
 29726 d077 0B       		.byte	0xb
 29727 d078 0D03     		.value	0x30d
 29728 d07a FB8C0000 		.long	0x8cfb
 29729 d07e 00       		.byte	0
 29730 d07f 9801     		.uleb128 0x98
 29731 d081 A98E0000 		.long	0x8ea9
 29732 d085 03       		.byte	0x3
 29733 d086 8ED00000 		.long	0xd08e
 29734 d08a A6D00000 		.long	0xd0a6
 29735 d08e 9901     		.uleb128 0x99
 29736 d090 00000000 		.long	.LASF1535
 29737 d094 16BF0000 		.long	0xbf16
 29738 d098 A101     		.uleb128 0xa1
 29739 d09a 5F5F6E00 		.string	"__n"
 29740 d09e 0B       		.byte	0xb
 29741 d09f 1503     		.value	0x315
 29742 d0a1 FB8C0000 		.long	0x8cfb
 29743 d0a5 00       		.byte	0
 29744 d0a6 9D01     		.uleb128 0x9d
 29745 d0a8 2A710000 		.long	0x712a
 29746 d0ac 03       		.byte	0x3
 29747 d0ad BED00000 		.long	0xd0be
GAS LISTING /tmp/ccmMnd7l.s 			page 824


 29748 d0b1 9E01     		.uleb128 0x9e
 29749 d0b3 00000000 		.long	.LASF1559
 29750 d0b7 31       		.byte	0x31
 29751 d0b8 D4       		.byte	0xd4
 29752 d0b9 C68C0000 		.long	0x8cc6
 29753 d0bd 00       		.byte	0
 29754 d0be 9801     		.uleb128 0x98
 29755 d0c0 38920000 		.long	0x9238
 29756 d0c4 03       		.byte	0x3
 29757 d0c5 CDD00000 		.long	0xd0cd
 29758 d0c9 D8D00000 		.long	0xd0d8
 29759 d0cd 9901     		.uleb128 0x99
 29760 d0cf 00000000 		.long	.LASF1535
 29761 d0d3 D8D00000 		.long	0xd0d8
 29762 d0d7 00       		.byte	0
 29763 d0d8 11       		.uleb128 0x11
 29764 d0d9 F9AD0000 		.long	0xadf9
 29765 d0dd 9801     		.uleb128 0x98
 29766 d0df EE910000 		.long	0x91ee
 29767 d0e3 03       		.byte	0x3
 29768 d0e4 ECD00000 		.long	0xd0ec
 29769 d0e8 08D10000 		.long	0xd108
 29770 d0ec 9901     		.uleb128 0x99
 29771 d0ee 00000000 		.long	.LASF1535
 29772 d0f2 86C00000 		.long	0xc086
 29773 d0f6 A001     		.uleb128 0xa0
 29774 d0f8 5F5F6E00 		.string	"__n"
 29775 d0fc 0E       		.byte	0xe
 29776 d0fd 63       		.byte	0x63
 29777 d0fe 2A910000 		.long	0x912a
 29778 d102 09       		.uleb128 0x9
 29779 d103 01A30000 		.long	0xa301
 29780 d107 00       		.byte	0
 29781 d108 9D01     		.uleb128 0x9d
 29782 d10a 2D440000 		.long	0x442d
 29783 d10e 03       		.byte	0x3
 29784 d10f 2ED10000 		.long	0xd12e
 29785 d113 A101     		.uleb128 0xa1
 29786 d115 5F5F6100 		.string	"__a"
 29787 d119 2F       		.byte	0x2f
 29788 d11a 6401     		.value	0x164
 29789 d11c 2ED10000 		.long	0xd12e
 29790 d120 A101     		.uleb128 0xa1
 29791 d122 5F5F6E00 		.string	"__n"
 29792 d126 2F       		.byte	0x2f
 29793 d127 6401     		.value	0x164
 29794 d129 5C430000 		.long	0x435c
 29795 d12d 00       		.byte	0
 29796 d12e 11       		.uleb128 0x11
 29797 d12f 17AE0000 		.long	0xae17
 29798 d133 9801     		.uleb128 0x98
 29799 d135 24470000 		.long	0x4724
 29800 d139 03       		.byte	0x3
 29801 d13a 42D10000 		.long	0xd142
 29802 d13e 5BD10000 		.long	0xd15b
 29803 d142 9901     		.uleb128 0x99
 29804 d144 00000000 		.long	.LASF1535
GAS LISTING /tmp/ccmMnd7l.s 			page 825


 29805 d148 EDC90000 		.long	0xc9ed
 29806 d14c A001     		.uleb128 0xa0
 29807 d14e 5F5F6E00 		.string	"__n"
 29808 d152 06       		.byte	0x6
 29809 d153 A7       		.byte	0xa7
 29810 d154 85060000 		.long	0x685
 29811 d158 A901     		.uleb128 0xa9
 29812 d15a 00       		.byte	0
 29813 d15b 9801     		.uleb128 0x98
 29814 d15d 5A450000 		.long	0x455a
 29815 d161 03       		.byte	0x3
 29816 d162 6AD10000 		.long	0xd16a
 29817 d166 81D10000 		.long	0xd181
 29818 d16a 9901     		.uleb128 0x99
 29819 d16c 00000000 		.long	.LASF1535
 29820 d170 18CA0000 		.long	0xca18
 29821 d174 A001     		.uleb128 0xa0
 29822 d176 5F5F6100 		.string	"__a"
 29823 d17a 06       		.byte	0x6
 29824 d17b 5A       		.byte	0x5a
 29825 d17c 81D10000 		.long	0xd181
 29826 d180 00       		.byte	0
 29827 d181 11       		.uleb128 0x11
 29828 d182 2FAE0000 		.long	0xae2f
 29829 d186 9D01     		.uleb128 0x9d
 29830 d188 31790000 		.long	0x7931
 29831 d18c 03       		.byte	0x3
 29832 d18d F4D10000 		.long	0xd1f4
 29833 d191 35       		.uleb128 0x35
 29834 d192 00000000 		.long	.LASF1016
 29835 d196 D0AD0000 		.long	0xadd0
 29836 d19a 35       		.uleb128 0x35
 29837 d19b 00000000 		.long	.LASF425
 29838 d19f 03810000 		.long	0x8103
 29839 d1a3 18       		.uleb128 0x18
 29840 d1a4 5F547000 		.string	"_Tp"
 29841 d1a8 18810000 		.long	0x8118
 29842 d1ac A201     		.uleb128 0xa2
 29843 d1ae 00000000 		.long	.LASF1553
 29844 d1b2 14       		.byte	0x14
 29845 d1b3 F502     		.value	0x2f5
 29846 d1b5 D0AD0000 		.long	0xadd0
 29847 d1b9 A101     		.uleb128 0xa1
 29848 d1bb 5F5F6E00 		.string	"__n"
 29849 d1bf 14       		.byte	0x14
 29850 d1c0 F502     		.value	0x2f5
 29851 d1c2 03810000 		.long	0x8103
 29852 d1c6 A201     		.uleb128 0xa2
 29853 d1c8 00000000 		.long	.LASF1309
 29854 d1cc 14       		.byte	0x14
 29855 d1cd F502     		.value	0x2f5
 29856 d1cf F4D10000 		.long	0xd1f4
 29857 d1d3 9B01     		.uleb128 0x9b
 29858 d1d5 A301     		.uleb128 0xa3
 29859 d1d7 00000000 		.long	.LASF1562
 29860 d1db 14       		.byte	0x14
 29861 d1dc F702     		.value	0x2f7
GAS LISTING /tmp/ccmMnd7l.s 			page 826


 29862 d1de DCAD0000 		.long	0xaddc
 29863 d1e2 9B01     		.uleb128 0x9b
 29864 d1e4 A301     		.uleb128 0xa3
 29865 d1e6 00000000 		.long	.LASF1563
 29866 d1ea 14       		.byte	0x14
 29867 d1eb F802     		.value	0x2f8
 29868 d1ed 03810000 		.long	0x8103
 29869 d1f1 00       		.byte	0
 29870 d1f2 00       		.byte	0
 29871 d1f3 00       		.byte	0
 29872 d1f4 11       		.uleb128 0x11
 29873 d1f5 E7AD0000 		.long	0xade7
 29874 d1f9 9D01     		.uleb128 0x9d
 29875 d1fb 6C790000 		.long	0x796c
 29876 d1ff 03       		.byte	0x3
 29877 d200 2BD20000 		.long	0xd22b
 29878 d204 19       		.uleb128 0x19
 29879 d205 5F5F6900 		.string	"__i"
 29880 d209 03810000 		.long	0x8103
 29881 d20d 00       		.byte	0
 29882 d20e 6A       		.uleb128 0x6a
 29883 d20f 00000000 		.long	.LASF802
 29884 d213 1DD20000 		.long	0xd21d
 29885 d217 68       		.uleb128 0x68
 29886 d218 812C0000 		.long	0x2c81
 29887 d21c 00       		.byte	0
 29888 d21d A101     		.uleb128 0xa1
 29889 d21f 5F5F7400 		.string	"__t"
 29890 d223 0A       		.byte	0xa
 29891 d224 F402     		.value	0x2f4
 29892 d226 2BD20000 		.long	0xd22b
 29893 d22a 00       		.byte	0
 29894 d22b 11       		.uleb128 0x11
 29895 d22c 1FB10000 		.long	0xb11f
 29896 d230 7E       		.uleb128 0x7e
 29897 d231 08       		.byte	0x8
 29898 d232 9B790000 		.long	0x799b
 29899 d236 9801     		.uleb128 0x98
 29900 d238 EF6E0000 		.long	0x6eef
 29901 d23c 03       		.byte	0x3
 29902 d23d 57D20000 		.long	0xd257
 29903 d241 74D20000 		.long	0xd274
 29904 d245 35       		.uleb128 0x35
 29905 d246 00000000 		.long	.LASF942
 29906 d24a D5B00000 		.long	0xb0d5
 29907 d24e 35       		.uleb128 0x35
 29908 d24f 00000000 		.long	.LASF943
 29909 d253 31240000 		.long	0x2431
 29910 d257 9901     		.uleb128 0x99
 29911 d259 00000000 		.long	.LASF1535
 29912 d25d 74D20000 		.long	0xd274
 29913 d261 A201     		.uleb128 0xa2
 29914 d263 00000000 		.long	.LASF1565
 29915 d267 09       		.byte	0x9
 29916 d268 9D04     		.value	0x49d
 29917 d26a 79D20000 		.long	0xd279
 29918 d26e 09       		.uleb128 0x9
GAS LISTING /tmp/ccmMnd7l.s 			page 827


 29919 d26f 7ED20000 		.long	0xd27e
 29920 d273 00       		.byte	0
 29921 d274 11       		.uleb128 0x11
 29922 d275 30D20000 		.long	0xd230
 29923 d279 11       		.uleb128 0x11
 29924 d27a D5B00000 		.long	0xb0d5
 29925 d27e 11       		.uleb128 0x11
 29926 d27f 0EAC0000 		.long	0xac0e
 29927 d283 9801     		.uleb128 0x98
 29928 d285 03550000 		.long	0x5503
 29929 d289 03       		.byte	0x3
 29930 d28a 9BD20000 		.long	0xd29b
 29931 d28e B3D20000 		.long	0xd2b3
 29932 d292 35       		.uleb128 0x35
 29933 d293 00000000 		.long	.LASF766
 29934 d297 812C0000 		.long	0x2c81
 29935 d29b 9901     		.uleb128 0x99
 29936 d29d 00000000 		.long	.LASF1535
 29937 d2a1 B3D20000 		.long	0xd2b3
 29938 d2a5 A201     		.uleb128 0xa2
 29939 d2a7 00000000 		.long	.LASF1566
 29940 d2ab 04       		.byte	0x4
 29941 d2ac EB06     		.value	0x6eb
 29942 d2ae B8D20000 		.long	0xd2b8
 29943 d2b2 00       		.byte	0
 29944 d2b3 11       		.uleb128 0x11
 29945 d2b4 81B00000 		.long	0xb081
 29946 d2b8 11       		.uleb128 0x11
 29947 d2b9 D5B00000 		.long	0xb0d5
 29948 d2bd 9D01     		.uleb128 0x9d
 29949 d2bf A5790000 		.long	0x79a5
 29950 d2c3 01       		.byte	0x1
 29951 d2c4 D3D20000 		.long	0xd2d3
 29952 d2c8 6B       		.uleb128 0x6b
 29953 d2c9 00000000 		.long	.LASF802
 29954 d2cd A501     		.uleb128 0xa5
 29955 d2cf 0A       		.byte	0xa
 29956 d2d0 8603     		.value	0x386
 29957 d2d2 00       		.byte	0
 29958 d2d3 8101     		.uleb128 0x81
 29959 d2d5 08       		.byte	0x8
 29960 d2d6 31240000 		.long	0x2431
 29961 d2da 9801     		.uleb128 0x98
 29962 d2dc EC560000 		.long	0x56ec
 29963 d2e0 03       		.byte	0x3
 29964 d2e1 0AD30000 		.long	0xd30a
 29965 d2e5 27D30000 		.long	0xd327
 29966 d2e9 35       		.uleb128 0x35
 29967 d2ea 00000000 		.long	.LASF784
 29968 d2ee D8800000 		.long	0x80d8
 29969 d2f2 6B       		.uleb128 0x6b
 29970 d2f3 00000000 		.long	.LASF786
 29971 d2f7 6C       		.uleb128 0x6c
 29972 d2f8 00000000 		.long	.LASF1567
 29973 d2fc 09       		.byte	0x9
 29974 d2fd EB04     		.value	0x4eb
 29975 d2ff 0AD30000 		.long	0xd30a
GAS LISTING /tmp/ccmMnd7l.s 			page 828


 29976 d303 6D       		.uleb128 0x6d
 29977 d304 03810000 		.long	0x8103
 29978 d308 00       		.byte	0
 29979 d309 00       		.byte	0
 29980 d30a 9901     		.uleb128 0x99
 29981 d30c 00000000 		.long	.LASF1535
 29982 d310 86C30000 		.long	0xc386
 29983 d314 A201     		.uleb128 0xa2
 29984 d316 00000000 		.long	.LASF1568
 29985 d31a 09       		.byte	0x9
 29986 d31b ED04     		.value	0x4ed
 29987 d31d 27D30000 		.long	0xd327
 29988 d321 09       		.uleb128 0x9
 29989 d322 F5570000 		.long	0x57f5
 29990 d326 00       		.byte	0
 29991 d327 11       		.uleb128 0x11
 29992 d328 D3D20000 		.long	0xd2d3
 29993 d32c 9801     		.uleb128 0x98
 29994 d32e E9930000 		.long	0x93e9
 29995 d332 03       		.byte	0x3
 29996 d333 3BD30000 		.long	0xd33b
 29997 d337 46D30000 		.long	0xd346
 29998 d33b 9901     		.uleb128 0x99
 29999 d33d 00000000 		.long	.LASF1535
 30000 d341 C3C60000 		.long	0xc6c3
 30001 d345 00       		.byte	0
 30002 d346 9801     		.uleb128 0x98
 30003 d348 32570000 		.long	0x5732
 30004 d34c 03       		.byte	0x3
 30005 d34d 63D30000 		.long	0xd363
 30006 d351 73D30000 		.long	0xd373
 30007 d355 6B       		.uleb128 0x6b
 30008 d356 00000000 		.long	.LASF786
 30009 d35a 35       		.uleb128 0x35
 30010 d35b 00000000 		.long	.LASF784
 30011 d35f D8800000 		.long	0x80d8
 30012 d363 9901     		.uleb128 0x99
 30013 d365 00000000 		.long	.LASF1535
 30014 d369 86C30000 		.long	0xc386
 30015 d36d A501     		.uleb128 0xa5
 30016 d36f 09       		.byte	0x9
 30017 d370 2705     		.value	0x527
 30018 d372 00       		.byte	0
 30019 d373 9801     		.uleb128 0x98
 30020 d375 27940000 		.long	0x9427
 30021 d379 03       		.byte	0x3
 30022 d37a 82D30000 		.long	0xd382
 30023 d37e 8DD30000 		.long	0xd38d
 30024 d382 9901     		.uleb128 0x99
 30025 d384 00000000 		.long	.LASF1535
 30026 d388 BEC10000 		.long	0xc1be
 30027 d38c 00       		.byte	0
 30028 d38d 7F       		.uleb128 0x7f
 30029 d38e 08       		.byte	0x8
 30030 d38f D3950000 		.long	0x95d3
 30031 d393 9D01     		.uleb128 0x9d
 30032 d395 20970000 		.long	0x9720
GAS LISTING /tmp/ccmMnd7l.s 			page 829


 30033 d399 03       		.byte	0x3
 30034 d39a CBD30000 		.long	0xd3cb
 30035 d39e 35       		.uleb128 0x35
 30036 d39f 00000000 		.long	.LASF743
 30037 d3a3 D0AD0000 		.long	0xadd0
 30038 d3a7 35       		.uleb128 0x35
 30039 d3a8 00000000 		.long	.LASF1144
 30040 d3ac A0470000 		.long	0x47a0
 30041 d3b0 A201     		.uleb128 0xa2
 30042 d3b2 00000000 		.long	.LASF1550
 30043 d3b6 0B       		.byte	0xb
 30044 d3b7 3D03     		.value	0x33d
 30045 d3b9 CBD30000 		.long	0xd3cb
 30046 d3bd A201     		.uleb128 0xa2
 30047 d3bf 00000000 		.long	.LASF1551
 30048 d3c3 0B       		.byte	0xb
 30049 d3c4 3E03     		.value	0x33e
 30050 d3c6 D0D30000 		.long	0xd3d0
 30051 d3ca 00       		.byte	0
 30052 d3cb 11       		.uleb128 0x11
 30053 d3cc 8DD30000 		.long	0xd38d
 30054 d3d0 11       		.uleb128 0x11
 30055 d3d1 8DD30000 		.long	0xd38d
 30056 d3d5 9D01     		.uleb128 0x9d
 30057 d3d7 8F710000 		.long	0x718f
 30058 d3db 03       		.byte	0x3
 30059 d3dc EDD30000 		.long	0xd3ed
 30060 d3e0 9E01     		.uleb128 0x9e
 30061 d3e2 00000000 		.long	.LASF1559
 30062 d3e6 31       		.byte	0x31
 30063 d3e7 D4       		.byte	0xd4
 30064 d3e8 01AD0000 		.long	0xad01
 30065 d3ec 00       		.byte	0
 30066 d3ed 9D01     		.uleb128 0x9d
 30067 d3ef BB790000 		.long	0x79bb
 30068 d3f3 03       		.byte	0x3
 30069 d3f4 0FD40000 		.long	0xd40f
 30070 d3f8 35       		.uleb128 0x35
 30071 d3f9 00000000 		.long	.LASF743
 30072 d3fd 01AD0000 		.long	0xad01
 30073 d401 A201     		.uleb128 0xa2
 30074 d403 00000000 		.long	.LASF1559
 30075 d407 14       		.byte	0x14
 30076 d408 1601     		.value	0x116
 30077 d40a 01AD0000 		.long	0xad01
 30078 d40e 00       		.byte	0
 30079 d40f 9D01     		.uleb128 0x9d
 30080 d411 DA790000 		.long	0x79da
 30081 d415 03       		.byte	0x3
 30082 d416 5DD40000 		.long	0xd45d
 30083 d41a 18       		.uleb128 0x18
 30084 d41b 5F4F4900 		.string	"_OI"
 30085 d41f 01AD0000 		.long	0xad01
 30086 d423 35       		.uleb128 0x35
 30087 d424 00000000 		.long	.LASF425
 30088 d428 03810000 		.long	0x8103
 30089 d42c 18       		.uleb128 0x18
GAS LISTING /tmp/ccmMnd7l.s 			page 830


 30090 d42d 5F547000 		.string	"_Tp"
 30091 d431 29000000 		.long	0x29
 30092 d435 A201     		.uleb128 0xa2
 30093 d437 00000000 		.long	.LASF1553
 30094 d43b 14       		.byte	0x14
 30095 d43c 1803     		.value	0x318
 30096 d43e 01AD0000 		.long	0xad01
 30097 d442 A101     		.uleb128 0xa1
 30098 d444 5F5F6E00 		.string	"__n"
 30099 d448 14       		.byte	0x14
 30100 d449 1803     		.value	0x318
 30101 d44b 03810000 		.long	0x8103
 30102 d44f A201     		.uleb128 0xa2
 30103 d451 00000000 		.long	.LASF1309
 30104 d455 14       		.byte	0x14
 30105 d456 1803     		.value	0x318
 30106 d458 5DD40000 		.long	0xd45d
 30107 d45c 00       		.byte	0
 30108 d45d 11       		.uleb128 0x11
 30109 d45e 18AD0000 		.long	0xad18
 30110 d462 9D01     		.uleb128 0x9d
 30111 d464 E02A0000 		.long	0x2ae0
 30112 d468 03       		.byte	0x3
 30113 d469 9CD40000 		.long	0xd49c
 30114 d46d 35       		.uleb128 0x35
 30115 d46e 00000000 		.long	.LASF421
 30116 d472 01AD0000 		.long	0xad01
 30117 d476 35       		.uleb128 0x35
 30118 d477 00000000 		.long	.LASF425
 30119 d47b 03810000 		.long	0x8103
 30120 d47f A201     		.uleb128 0xa2
 30121 d481 00000000 		.long	.LASF1553
 30122 d485 2D       		.byte	0x2d
 30123 d486 1202     		.value	0x212
 30124 d488 01AD0000 		.long	0xad01
 30125 d48c A101     		.uleb128 0xa1
 30126 d48e 5F5F6E00 		.string	"__n"
 30127 d492 2D       		.byte	0x2d
 30128 d493 1202     		.value	0x212
 30129 d495 03810000 		.long	0x8103
 30130 d499 A901     		.uleb128 0xa9
 30131 d49b 00       		.byte	0
 30132 d49c 9D01     		.uleb128 0x9d
 30133 d49e 157A0000 		.long	0x7a15
 30134 d4a2 03       		.byte	0x3
 30135 d4a3 E4D40000 		.long	0xd4e4
 30136 d4a7 35       		.uleb128 0x35
 30137 d4a8 00000000 		.long	.LASF421
 30138 d4ac 01AD0000 		.long	0xad01
 30139 d4b0 35       		.uleb128 0x35
 30140 d4b1 00000000 		.long	.LASF425
 30141 d4b5 03810000 		.long	0x8103
 30142 d4b9 A201     		.uleb128 0xa2
 30143 d4bb 00000000 		.long	.LASF1553
 30144 d4bf 2D       		.byte	0x2d
 30145 d4c0 3102     		.value	0x231
 30146 d4c2 01AD0000 		.long	0xad01
GAS LISTING /tmp/ccmMnd7l.s 			page 831


 30147 d4c6 A101     		.uleb128 0xa1
 30148 d4c8 5F5F6E00 		.string	"__n"
 30149 d4cc 2D       		.byte	0x2d
 30150 d4cd 3102     		.value	0x231
 30151 d4cf 03810000 		.long	0x8103
 30152 d4d3 9B01     		.uleb128 0x9b
 30153 d4d5 A301     		.uleb128 0xa3
 30154 d4d7 00000000 		.long	.LASF1569
 30155 d4db 2D       		.byte	0x2d
 30156 d4dc 3602     		.value	0x236
 30157 d4de ED800000 		.long	0x80ed
 30158 d4e2 00       		.byte	0
 30159 d4e3 00       		.byte	0
 30160 d4e4 9D01     		.uleb128 0x9d
 30161 d4e6 3E7A0000 		.long	0x7a3e
 30162 d4ea 03       		.byte	0x3
 30163 d4eb 2AD50000 		.long	0xd52a
 30164 d4ef 35       		.uleb128 0x35
 30165 d4f0 00000000 		.long	.LASF421
 30166 d4f4 01AD0000 		.long	0xad01
 30167 d4f8 35       		.uleb128 0x35
 30168 d4f9 00000000 		.long	.LASF425
 30169 d4fd 03810000 		.long	0x8103
 30170 d501 18       		.uleb128 0x18
 30171 d502 5F547000 		.string	"_Tp"
 30172 d506 29000000 		.long	0x29
 30173 d50a A201     		.uleb128 0xa2
 30174 d50c 00000000 		.long	.LASF1553
 30175 d510 2D       		.byte	0x2d
 30176 d511 7502     		.value	0x275
 30177 d513 01AD0000 		.long	0xad01
 30178 d517 A101     		.uleb128 0xa1
 30179 d519 5F5F6E00 		.string	"__n"
 30180 d51d 2D       		.byte	0x2d
 30181 d51e 7502     		.value	0x275
 30182 d520 03810000 		.long	0x8103
 30183 d524 09       		.uleb128 0x9
 30184 d525 2AD50000 		.long	0xd52a
 30185 d529 00       		.byte	0
 30186 d52a 11       		.uleb128 0x11
 30187 d52b 48AD0000 		.long	0xad48
 30188 d52f 9801     		.uleb128 0x98
 30189 d531 26360000 		.long	0x3626
 30190 d535 03       		.byte	0x3
 30191 d536 3ED50000 		.long	0xd53e
 30192 d53a 61D50000 		.long	0xd561
 30193 d53e 9901     		.uleb128 0x99
 30194 d540 00000000 		.long	.LASF1535
 30195 d544 41CB0000 		.long	0xcb41
 30196 d548 A001     		.uleb128 0xa0
 30197 d54a 5F5F6E00 		.string	"__n"
 30198 d54e 06       		.byte	0x6
 30199 d54f 86       		.byte	0x86
 30200 d550 85060000 		.long	0x685
 30201 d554 A001     		.uleb128 0xa0
 30202 d556 5F5F6100 		.string	"__a"
 30203 d55a 06       		.byte	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 832


 30204 d55b 86       		.byte	0x86
 30205 d55c 61D50000 		.long	0xd561
 30206 d560 00       		.byte	0
 30207 d561 11       		.uleb128 0x11
 30208 d562 85AD0000 		.long	0xad85
 30209 d566 9801     		.uleb128 0x98
 30210 d568 4D3F0000 		.long	0x3f4d
 30211 d56c 03       		.byte	0x3
 30212 d56d 75D50000 		.long	0xd575
 30213 d571 8DD50000 		.long	0xd58d
 30214 d575 9901     		.uleb128 0x99
 30215 d577 00000000 		.long	.LASF1535
 30216 d57b 8EB70000 		.long	0xb78e
 30217 d57f A101     		.uleb128 0xa1
 30218 d581 5F5F6E00 		.string	"__n"
 30219 d585 06       		.byte	0x6
 30220 d586 1C05     		.value	0x51c
 30221 d588 C4370000 		.long	0x37c4
 30222 d58c 00       		.byte	0
 30223 d58d 9801     		.uleb128 0x98
 30224 d58f C4300000 		.long	0x30c4
 30225 d593 03       		.byte	0x3
 30226 d594 9CD50000 		.long	0xd59c
 30227 d598 A7D50000 		.long	0xd5a7
 30228 d59c 9901     		.uleb128 0x99
 30229 d59e 00000000 		.long	.LASF1535
 30230 d5a2 F7BE0000 		.long	0xbef7
 30231 d5a6 00       		.byte	0
 30232 d5a7 9801     		.uleb128 0x98
 30233 d5a9 C6390000 		.long	0x39c6
 30234 d5ad 03       		.byte	0x3
 30235 d5ae B6D50000 		.long	0xd5b6
 30236 d5b2 C1D50000 		.long	0xd5c1
 30237 d5b6 9901     		.uleb128 0x99
 30238 d5b8 00000000 		.long	.LASF1535
 30239 d5bc 8EB70000 		.long	0xb78e
 30240 d5c0 00       		.byte	0
 30241 d5c1 9D01     		.uleb128 0x9d
 30242 d5c3 D3710000 		.long	0x71d3
 30243 d5c7 03       		.byte	0x3
 30244 d5c8 D9D50000 		.long	0xd5d9
 30245 d5cc 9E01     		.uleb128 0x9e
 30246 d5ce 00000000 		.long	.LASF1559
 30247 d5d2 31       		.byte	0x31
 30248 d5d3 DC       		.byte	0xdc
 30249 d5d4 C68C0000 		.long	0x8cc6
 30250 d5d8 00       		.byte	0
 30251 d5d9 9D01     		.uleb128 0x9d
 30252 d5db 757A0000 		.long	0x7a75
 30253 d5df 03       		.byte	0x3
 30254 d5e0 FBD50000 		.long	0xd5fb
 30255 d5e4 35       		.uleb128 0x35
 30256 d5e5 00000000 		.long	.LASF743
 30257 d5e9 C68C0000 		.long	0x8cc6
 30258 d5ed A201     		.uleb128 0xa2
 30259 d5ef 00000000 		.long	.LASF1559
 30260 d5f3 14       		.byte	0x14
GAS LISTING /tmp/ccmMnd7l.s 			page 833


 30261 d5f4 1601     		.value	0x116
 30262 d5f6 C68C0000 		.long	0x8cc6
 30263 d5fa 00       		.byte	0
 30264 d5fb 9D01     		.uleb128 0x9d
 30265 d5fd 947A0000 		.long	0x7a94
 30266 d601 03       		.byte	0x3
 30267 d602 5AD60000 		.long	0xd65a
 30268 d606 50       		.uleb128 0x50
 30269 d607 00000000 		.long	.LASF1031
 30270 d60b E0800000 		.long	0x80e0
 30271 d60f 01       		.byte	0x1
 30272 d610 35       		.uleb128 0x35
 30273 d611 00000000 		.long	.LASF1032
 30274 d615 01AD0000 		.long	0xad01
 30275 d619 35       		.uleb128 0x35
 30276 d61a 00000000 		.long	.LASF1033
 30277 d61e 01AD0000 		.long	0xad01
 30278 d622 A201     		.uleb128 0xa2
 30279 d624 00000000 		.long	.LASF1553
 30280 d628 14       		.byte	0x14
 30281 d629 4902     		.value	0x249
 30282 d62b 01AD0000 		.long	0xad01
 30283 d62f A201     		.uleb128 0xa2
 30284 d631 00000000 		.long	.LASF1554
 30285 d635 14       		.byte	0x14
 30286 d636 4902     		.value	0x249
 30287 d638 01AD0000 		.long	0xad01
 30288 d63c A201     		.uleb128 0xa2
 30289 d63e 00000000 		.long	.LASF1540
 30290 d642 14       		.byte	0x14
 30291 d643 4902     		.value	0x249
 30292 d645 01AD0000 		.long	0xad01
 30293 d649 9B01     		.uleb128 0x9b
 30294 d64b A301     		.uleb128 0xa3
 30295 d64d 00000000 		.long	.LASF1570
 30296 d651 14       		.byte	0x14
 30297 d652 4E02     		.value	0x24e
 30298 d654 ED800000 		.long	0x80ed
 30299 d658 00       		.byte	0
 30300 d659 00       		.byte	0
 30301 d65a 9D01     		.uleb128 0x9d
 30302 d65c D07A0000 		.long	0x7ad0
 30303 d660 03       		.byte	0x3
 30304 d661 7CD60000 		.long	0xd67c
 30305 d665 35       		.uleb128 0x35
 30306 d666 00000000 		.long	.LASF743
 30307 d66a C68C0000 		.long	0x8cc6
 30308 d66e A201     		.uleb128 0xa2
 30309 d670 00000000 		.long	.LASF1559
 30310 d674 14       		.byte	0x14
 30311 d675 2101     		.value	0x121
 30312 d677 C68C0000 		.long	0x8cc6
 30313 d67b 00       		.byte	0
 30314 d67c 9D01     		.uleb128 0x9d
 30315 d67e EF7A0000 		.long	0x7aef
 30316 d682 03       		.byte	0x3
 30317 d683 CBD60000 		.long	0xd6cb
GAS LISTING /tmp/ccmMnd7l.s 			page 834


 30318 d687 50       		.uleb128 0x50
 30319 d688 00000000 		.long	.LASF1031
 30320 d68c E0800000 		.long	0x80e0
 30321 d690 01       		.byte	0x1
 30322 d691 35       		.uleb128 0x35
 30323 d692 00000000 		.long	.LASF1032
 30324 d696 C68C0000 		.long	0x8cc6
 30325 d69a 35       		.uleb128 0x35
 30326 d69b 00000000 		.long	.LASF1033
 30327 d69f C68C0000 		.long	0x8cc6
 30328 d6a3 A201     		.uleb128 0xa2
 30329 d6a5 00000000 		.long	.LASF1553
 30330 d6a9 14       		.byte	0x14
 30331 d6aa 5B02     		.value	0x25b
 30332 d6ac C68C0000 		.long	0x8cc6
 30333 d6b0 A201     		.uleb128 0xa2
 30334 d6b2 00000000 		.long	.LASF1554
 30335 d6b6 14       		.byte	0x14
 30336 d6b7 5B02     		.value	0x25b
 30337 d6b9 C68C0000 		.long	0x8cc6
 30338 d6bd A201     		.uleb128 0xa2
 30339 d6bf 00000000 		.long	.LASF1540
 30340 d6c3 14       		.byte	0x14
 30341 d6c4 5B02     		.value	0x25b
 30342 d6c6 C68C0000 		.long	0x8cc6
 30343 d6ca 00       		.byte	0
 30344 d6cb 9D01     		.uleb128 0x9d
 30345 d6cd 4D970000 		.long	0x974d
 30346 d6d1 03       		.byte	0x3
 30347 d6d2 03D70000 		.long	0xd703
 30348 d6d6 35       		.uleb128 0x35
 30349 d6d7 00000000 		.long	.LASF743
 30350 d6db 01AD0000 		.long	0xad01
 30351 d6df 35       		.uleb128 0x35
 30352 d6e0 00000000 		.long	.LASF1144
 30353 d6e4 2E370000 		.long	0x372e
 30354 d6e8 A201     		.uleb128 0xa2
 30355 d6ea 00000000 		.long	.LASF1550
 30356 d6ee 0B       		.byte	0xb
 30357 d6ef 2F03     		.value	0x32f
 30358 d6f1 03D70000 		.long	0xd703
 30359 d6f5 A201     		.uleb128 0xa2
 30360 d6f7 00000000 		.long	.LASF1551
 30361 d6fb 0B       		.byte	0xb
 30362 d6fc 3003     		.value	0x330
 30363 d6fe 08D70000 		.long	0xd708
 30364 d702 00       		.byte	0
 30365 d703 11       		.uleb128 0x11
 30366 d704 4FBF0000 		.long	0xbf4f
 30367 d708 11       		.uleb128 0x11
 30368 d709 4FBF0000 		.long	0xbf4f
 30369 d70d 9D01     		.uleb128 0x9d
 30370 d70f 2B7B0000 		.long	0x7b2b
 30371 d713 03       		.byte	0x3
 30372 d714 52D70000 		.long	0xd752
 30373 d718 35       		.uleb128 0x35
 30374 d719 00000000 		.long	.LASF1032
GAS LISTING /tmp/ccmMnd7l.s 			page 835


 30375 d71d C68C0000 		.long	0x8cc6
 30376 d721 35       		.uleb128 0x35
 30377 d722 00000000 		.long	.LASF1033
 30378 d726 C68C0000 		.long	0x8cc6
 30379 d72a A201     		.uleb128 0xa2
 30380 d72c 00000000 		.long	.LASF1553
 30381 d730 14       		.byte	0x14
 30382 d731 9A02     		.value	0x29a
 30383 d733 C68C0000 		.long	0x8cc6
 30384 d737 A201     		.uleb128 0xa2
 30385 d739 00000000 		.long	.LASF1554
 30386 d73d 14       		.byte	0x14
 30387 d73e 9A02     		.value	0x29a
 30388 d740 C68C0000 		.long	0x8cc6
 30389 d744 A201     		.uleb128 0xa2
 30390 d746 00000000 		.long	.LASF1540
 30391 d74a 14       		.byte	0x14
 30392 d74b 9A02     		.value	0x29a
 30393 d74d C68C0000 		.long	0x8cc6
 30394 d751 00       		.byte	0
 30395 d752 9D01     		.uleb128 0x9d
 30396 d754 5D7B0000 		.long	0x7b5d
 30397 d758 01       		.byte	0x1
 30398 d759 97D70000 		.long	0xd797
 30399 d75d 35       		.uleb128 0x35
 30400 d75e 00000000 		.long	.LASF1012
 30401 d762 C68C0000 		.long	0x8cc6
 30402 d766 35       		.uleb128 0x35
 30403 d767 00000000 		.long	.LASF1013
 30404 d76b 58810000 		.long	0x8158
 30405 d76f A201     		.uleb128 0xa2
 30406 d771 00000000 		.long	.LASF1553
 30407 d775 0C       		.byte	0xc
 30408 d776 5707     		.value	0x757
 30409 d778 C68C0000 		.long	0x8cc6
 30410 d77c A201     		.uleb128 0xa2
 30411 d77e 00000000 		.long	.LASF1554
 30412 d782 0C       		.byte	0xc
 30413 d783 5807     		.value	0x758
 30414 d785 C68C0000 		.long	0x8cc6
 30415 d789 A201     		.uleb128 0xa2
 30416 d78b 00000000 		.long	.LASF1560
 30417 d78f 0C       		.byte	0xc
 30418 d790 5807     		.value	0x758
 30419 d792 58810000 		.long	0x8158
 30420 d796 00       		.byte	0
 30421 d797 9D01     		.uleb128 0x9d
 30422 d799 17720000 		.long	0x7217
 30423 d79d 03       		.byte	0x3
 30424 d79e AFD70000 		.long	0xd7af
 30425 d7a2 9E01     		.uleb128 0x9e
 30426 d7a4 00000000 		.long	.LASF1559
 30427 d7a8 31       		.byte	0x31
 30428 d7a9 D4       		.byte	0xd4
 30429 d7aa D0AD0000 		.long	0xadd0
 30430 d7ae 00       		.byte	0
 30431 d7af 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccmMnd7l.s 			page 836


 30432 d7b1 8B7B0000 		.long	0x7b8b
 30433 d7b5 03       		.byte	0x3
 30434 d7b6 D1D70000 		.long	0xd7d1
 30435 d7ba 35       		.uleb128 0x35
 30436 d7bb 00000000 		.long	.LASF743
 30437 d7bf D0AD0000 		.long	0xadd0
 30438 d7c3 A201     		.uleb128 0xa2
 30439 d7c5 00000000 		.long	.LASF1559
 30440 d7c9 14       		.byte	0x14
 30441 d7ca 1601     		.value	0x116
 30442 d7cc D0AD0000 		.long	0xadd0
 30443 d7d0 00       		.byte	0
 30444 d7d1 9D01     		.uleb128 0x9d
 30445 d7d3 AA7B0000 		.long	0x7baa
 30446 d7d7 03       		.byte	0x3
 30447 d7d8 1FD80000 		.long	0xd81f
 30448 d7dc 18       		.uleb128 0x18
 30449 d7dd 5F4F4900 		.string	"_OI"
 30450 d7e1 D0AD0000 		.long	0xadd0
 30451 d7e5 35       		.uleb128 0x35
 30452 d7e6 00000000 		.long	.LASF425
 30453 d7ea 03810000 		.long	0x8103
 30454 d7ee 18       		.uleb128 0x18
 30455 d7ef 5F547000 		.string	"_Tp"
 30456 d7f3 18810000 		.long	0x8118
 30457 d7f7 A201     		.uleb128 0xa2
 30458 d7f9 00000000 		.long	.LASF1553
 30459 d7fd 14       		.byte	0x14
 30460 d7fe 1803     		.value	0x318
 30461 d800 D0AD0000 		.long	0xadd0
 30462 d804 A101     		.uleb128 0xa1
 30463 d806 5F5F6E00 		.string	"__n"
 30464 d80a 14       		.byte	0x14
 30465 d80b 1803     		.value	0x318
 30466 d80d 03810000 		.long	0x8103
 30467 d811 A201     		.uleb128 0xa2
 30468 d813 00000000 		.long	.LASF1309
 30469 d817 14       		.byte	0x14
 30470 d818 1803     		.value	0x318
 30471 d81a 1FD80000 		.long	0xd81f
 30472 d81e 00       		.byte	0
 30473 d81f 11       		.uleb128 0x11
 30474 d820 E7AD0000 		.long	0xade7
 30475 d824 9D01     		.uleb128 0x9d
 30476 d826 092B0000 		.long	0x2b09
 30477 d82a 03       		.byte	0x3
 30478 d82b 5ED80000 		.long	0xd85e
 30479 d82f 35       		.uleb128 0x35
 30480 d830 00000000 		.long	.LASF421
 30481 d834 D0AD0000 		.long	0xadd0
 30482 d838 35       		.uleb128 0x35
 30483 d839 00000000 		.long	.LASF425
 30484 d83d 03810000 		.long	0x8103
 30485 d841 A201     		.uleb128 0xa2
 30486 d843 00000000 		.long	.LASF1553
 30487 d847 2D       		.byte	0x2d
 30488 d848 1202     		.value	0x212
GAS LISTING /tmp/ccmMnd7l.s 			page 837


 30489 d84a D0AD0000 		.long	0xadd0
 30490 d84e A101     		.uleb128 0xa1
 30491 d850 5F5F6E00 		.string	"__n"
 30492 d854 2D       		.byte	0x2d
 30493 d855 1202     		.value	0x212
 30494 d857 03810000 		.long	0x8103
 30495 d85b A901     		.uleb128 0xa9
 30496 d85d 00       		.byte	0
 30497 d85e 9D01     		.uleb128 0x9d
 30498 d860 E57B0000 		.long	0x7be5
 30499 d864 03       		.byte	0x3
 30500 d865 A6D80000 		.long	0xd8a6
 30501 d869 35       		.uleb128 0x35
 30502 d86a 00000000 		.long	.LASF421
 30503 d86e D0AD0000 		.long	0xadd0
 30504 d872 35       		.uleb128 0x35
 30505 d873 00000000 		.long	.LASF425
 30506 d877 03810000 		.long	0x8103
 30507 d87b A201     		.uleb128 0xa2
 30508 d87d 00000000 		.long	.LASF1553
 30509 d881 2D       		.byte	0x2d
 30510 d882 3102     		.value	0x231
 30511 d884 D0AD0000 		.long	0xadd0
 30512 d888 A101     		.uleb128 0xa1
 30513 d88a 5F5F6E00 		.string	"__n"
 30514 d88e 2D       		.byte	0x2d
 30515 d88f 3102     		.value	0x231
 30516 d891 03810000 		.long	0x8103
 30517 d895 9B01     		.uleb128 0x9b
 30518 d897 A301     		.uleb128 0xa3
 30519 d899 00000000 		.long	.LASF1569
 30520 d89d 2D       		.byte	0x2d
 30521 d89e 3602     		.value	0x236
 30522 d8a0 ED800000 		.long	0x80ed
 30523 d8a4 00       		.byte	0
 30524 d8a5 00       		.byte	0
 30525 d8a6 9D01     		.uleb128 0x9d
 30526 d8a8 0E7C0000 		.long	0x7c0e
 30527 d8ac 03       		.byte	0x3
 30528 d8ad ECD80000 		.long	0xd8ec
 30529 d8b1 35       		.uleb128 0x35
 30530 d8b2 00000000 		.long	.LASF421
 30531 d8b6 D0AD0000 		.long	0xadd0
 30532 d8ba 35       		.uleb128 0x35
 30533 d8bb 00000000 		.long	.LASF425
 30534 d8bf 03810000 		.long	0x8103
 30535 d8c3 18       		.uleb128 0x18
 30536 d8c4 5F547000 		.string	"_Tp"
 30537 d8c8 18810000 		.long	0x8118
 30538 d8cc A201     		.uleb128 0xa2
 30539 d8ce 00000000 		.long	.LASF1553
 30540 d8d2 2D       		.byte	0x2d
 30541 d8d3 7502     		.value	0x275
 30542 d8d5 D0AD0000 		.long	0xadd0
 30543 d8d9 A101     		.uleb128 0xa1
 30544 d8db 5F5F6E00 		.string	"__n"
 30545 d8df 2D       		.byte	0x2d
GAS LISTING /tmp/ccmMnd7l.s 			page 838


 30546 d8e0 7502     		.value	0x275
 30547 d8e2 03810000 		.long	0x8103
 30548 d8e6 09       		.uleb128 0x9
 30549 d8e7 ECD80000 		.long	0xd8ec
 30550 d8eb 00       		.byte	0
 30551 d8ec 11       		.uleb128 0x11
 30552 d8ed 17AE0000 		.long	0xae17
 30553 d8f1 9801     		.uleb128 0x98
 30554 d8f3 98460000 		.long	0x4698
 30555 d8f7 03       		.byte	0x3
 30556 d8f8 00D90000 		.long	0xd900
 30557 d8fc 23D90000 		.long	0xd923
 30558 d900 9901     		.uleb128 0x99
 30559 d902 00000000 		.long	.LASF1535
 30560 d906 EDC90000 		.long	0xc9ed
 30561 d90a A001     		.uleb128 0xa0
 30562 d90c 5F5F6E00 		.string	"__n"
 30563 d910 06       		.byte	0x6
 30564 d911 86       		.byte	0x86
 30565 d912 85060000 		.long	0x685
 30566 d916 A001     		.uleb128 0xa0
 30567 d918 5F5F6100 		.string	"__a"
 30568 d91c 06       		.byte	0x6
 30569 d91d 86       		.byte	0x86
 30570 d91e 23D90000 		.long	0xd923
 30571 d922 00       		.byte	0
 30572 d923 11       		.uleb128 0x11
 30573 d924 54AE0000 		.long	0xae54
 30574 d928 9801     		.uleb128 0x98
 30575 d92a BF4F0000 		.long	0x4fbf
 30576 d92e 03       		.byte	0x3
 30577 d92f 37D90000 		.long	0xd937
 30578 d933 4FD90000 		.long	0xd94f
 30579 d937 9901     		.uleb128 0x99
 30580 d939 00000000 		.long	.LASF1535
 30581 d93d 66BD0000 		.long	0xbd66
 30582 d941 A101     		.uleb128 0xa1
 30583 d943 5F5F6E00 		.string	"__n"
 30584 d947 06       		.byte	0x6
 30585 d948 1C05     		.value	0x51c
 30586 d94a 36480000 		.long	0x4836
 30587 d94e 00       		.byte	0
 30588 d94f 9801     		.uleb128 0x98
 30589 d951 14420000 		.long	0x4214
 30590 d955 03       		.byte	0x3
 30591 d956 5ED90000 		.long	0xd95e
 30592 d95a 69D90000 		.long	0xd969
 30593 d95e 9901     		.uleb128 0x99
 30594 d960 00000000 		.long	.LASF1535
 30595 d964 D3C00000 		.long	0xc0d3
 30596 d968 00       		.byte	0
 30597 d969 9801     		.uleb128 0x98
 30598 d96b 172F0000 		.long	0x2f17
 30599 d96f 03       		.byte	0x3
 30600 d970 78D90000 		.long	0xd978
 30601 d974 90D90000 		.long	0xd990
 30602 d978 9901     		.uleb128 0x99
GAS LISTING /tmp/ccmMnd7l.s 			page 839


 30603 d97a 00000000 		.long	.LASF1535
 30604 d97e 90D90000 		.long	0xd990
 30605 d982 A201     		.uleb128 0xa2
 30606 d984 00000000 		.long	.LASF1571
 30607 d988 04       		.byte	0x4
 30608 d989 3406     		.value	0x634
 30609 d98b 95D90000 		.long	0xd995
 30610 d98f 00       		.byte	0
 30611 d990 11       		.uleb128 0x11
 30612 d991 EFAC0000 		.long	0xacef
 30613 d995 11       		.uleb128 0x11
 30614 d996 E3AB0000 		.long	0xabe3
 30615 d99a 9801     		.uleb128 0x98
 30616 d99c 5A100000 		.long	0x105a
 30617 d9a0 03       		.byte	0x3
 30618 d9a1 A9D90000 		.long	0xd9a9
 30619 d9a5 BED90000 		.long	0xd9be
 30620 d9a9 9901     		.uleb128 0x99
 30621 d9ab 00000000 		.long	.LASF1535
 30622 d9af BED90000 		.long	0xd9be
 30623 d9b3 9901     		.uleb128 0x99
 30624 d9b5 00000000 		.long	.LASF1549
 30625 d9b9 019A0000 		.long	0x9a01
 30626 d9bd 00       		.byte	0
 30627 d9be 11       		.uleb128 0x11
 30628 d9bf B2AB0000 		.long	0xabb2
 30629 d9c3 9801     		.uleb128 0x98
 30630 d9c5 902F0000 		.long	0x2f90
 30631 d9c9 03       		.byte	0x3
 30632 d9ca D2D90000 		.long	0xd9d2
 30633 d9ce DDD90000 		.long	0xd9dd
 30634 d9d2 9901     		.uleb128 0x99
 30635 d9d4 00000000 		.long	.LASF1535
 30636 d9d8 90D90000 		.long	0xd990
 30637 d9dc 00       		.byte	0
 30638 d9dd 9801     		.uleb128 0x98
 30639 d9df 742D0000 		.long	0x2d74
 30640 d9e3 03       		.byte	0x3
 30641 d9e4 ECD90000 		.long	0xd9ec
 30642 d9e8 04DA0000 		.long	0xda04
 30643 d9ec 9901     		.uleb128 0x99
 30644 d9ee 00000000 		.long	.LASF1535
 30645 d9f2 51C90000 		.long	0xc951
 30646 d9f6 A201     		.uleb128 0xa2
 30647 d9f8 00000000 		.long	.LASF1556
 30648 d9fc 04       		.byte	0x4
 30649 d9fd F601     		.value	0x1f6
 30650 d9ff C52C0000 		.long	0x2cc5
 30651 da03 00       		.byte	0
 30652 da04 9801     		.uleb128 0x98
 30653 da06 F4530000 		.long	0x53f4
 30654 da0a 03       		.byte	0x3
 30655 da0b 13DA0000 		.long	0xda13
 30656 da0f 38DA0000 		.long	0xda38
 30657 da13 9901     		.uleb128 0x99
 30658 da15 00000000 		.long	.LASF1535
 30659 da19 B3D20000 		.long	0xd2b3
GAS LISTING /tmp/ccmMnd7l.s 			page 840


 30660 da1d A101     		.uleb128 0xa1
 30661 da1f 5F5F6100 		.string	"__a"
 30662 da23 04       		.byte	0x4
 30663 da24 AF06     		.value	0x6af
 30664 da26 D8800000 		.long	0x80d8
 30665 da2a A101     		.uleb128 0xa1
 30666 da2c 5F5F6200 		.string	"__b"
 30667 da30 04       		.byte	0x4
 30668 da31 B006     		.value	0x6b0
 30669 da33 D8800000 		.long	0x80d8
 30670 da37 00       		.byte	0
 30671 da38 9801     		.uleb128 0x98
 30672 da3a F2280000 		.long	0x28f2
 30673 da3e 03       		.byte	0x3
 30674 da3f 47DA0000 		.long	0xda47
 30675 da43 5EDA0000 		.long	0xda5e
 30676 da47 9901     		.uleb128 0x99
 30677 da49 00000000 		.long	.LASF1535
 30678 da4d B5B60000 		.long	0xb6b5
 30679 da51 A001     		.uleb128 0xa0
 30680 da53 5F5F6E00 		.string	"__n"
 30681 da57 08       		.byte	0x8
 30682 da58 AA       		.byte	0xaa
 30683 da59 03810000 		.long	0x8103
 30684 da5d 00       		.byte	0
 30685 da5e 9801     		.uleb128 0x98
 30686 da60 C9AE0000 		.long	0xaec9
 30687 da64 03       		.byte	0x3
 30688 da65 6DDA0000 		.long	0xda6d
 30689 da69 78DA0000 		.long	0xda78
 30690 da6d 9901     		.uleb128 0x99
 30691 da6f 00000000 		.long	.LASF1535
 30692 da73 78DA0000 		.long	0xda78
 30693 da77 00       		.byte	0
 30694 da78 11       		.uleb128 0x11
 30695 da79 F5AE0000 		.long	0xaef5
 30696 da7d 9D01     		.uleb128 0x9d
 30697 da7f 457C0000 		.long	0x7c45
 30698 da83 03       		.byte	0x3
 30699 da84 BFDA0000 		.long	0xdabf
 30700 da88 35       		.uleb128 0x35
 30701 da89 00000000 		.long	.LASF777
 30702 da8d F5C20000 		.long	0xc2f5
 30703 da91 6A       		.uleb128 0x6a
 30704 da92 00000000 		.long	.LASF825
 30705 da96 A0DA0000 		.long	0xdaa0
 30706 da9a 68       		.uleb128 0x68
 30707 da9b D5B00000 		.long	0xb0d5
 30708 da9f 00       		.byte	0
 30709 daa0 A101     		.uleb128 0xa1
 30710 daa2 5F5F6600 		.string	"__f"
 30711 daa6 09       		.byte	0x9
 30712 daa7 5706     		.value	0x657
 30713 daa9 BFDA0000 		.long	0xdabf
 30714 daad AA01     		.uleb128 0xaa
 30715 daaf 09       		.byte	0x9
 30716 dab0 5706     		.value	0x657
GAS LISTING /tmp/ccmMnd7l.s 			page 841


 30717 dab2 BCDA0000 		.long	0xdabc
 30718 dab6 09       		.uleb128 0x9
 30719 dab7 C4DA0000 		.long	0xdac4
 30720 dabb 00       		.byte	0
 30721 dabc A901     		.uleb128 0xa9
 30722 dabe 00       		.byte	0
 30723 dabf 11       		.uleb128 0x11
 30724 dac0 F5C20000 		.long	0xc2f5
 30725 dac4 11       		.uleb128 0x11
 30726 dac5 D5B00000 		.long	0xb0d5
 30727 dac9 9801     		.uleb128 0x98
 30728 dacb 764A0000 		.long	0x4a76
 30729 dacf 03       		.byte	0x3
 30730 dad0 D8DA0000 		.long	0xdad8
 30731 dad4 E3DA0000 		.long	0xdae3
 30732 dad8 9901     		.uleb128 0x99
 30733 dada 00000000 		.long	.LASF1535
 30734 dade 66BD0000 		.long	0xbd66
 30735 dae2 00       		.byte	0
 30736 dae3 9801     		.uleb128 0x98
 30737 dae5 384A0000 		.long	0x4a38
 30738 dae9 03       		.byte	0x3
 30739 daea F2DA0000 		.long	0xdaf2
 30740 daee FDDA0000 		.long	0xdafd
 30741 daf2 9901     		.uleb128 0x99
 30742 daf4 00000000 		.long	.LASF1535
 30743 daf8 66BD0000 		.long	0xbd66
 30744 dafc 00       		.byte	0
 30745 dafd 9D01     		.uleb128 0x9d
 30746 daff 787C0000 		.long	0x7c78
 30747 db03 01       		.byte	0x1
 30748 db04 42DB0000 		.long	0xdb42
 30749 db08 35       		.uleb128 0x35
 30750 db09 00000000 		.long	.LASF1044
 30751 db0d 74930000 		.long	0x9374
 30752 db11 35       		.uleb128 0x35
 30753 db12 00000000 		.long	.LASF1045
 30754 db16 57560000 		.long	0x5657
 30755 db1a A201     		.uleb128 0xa2
 30756 db1c 00000000 		.long	.LASF1553
 30757 db20 0C       		.byte	0xc
 30758 db21 BD10     		.value	0x10bd
 30759 db23 74930000 		.long	0x9374
 30760 db27 A201     		.uleb128 0xa2
 30761 db29 00000000 		.long	.LASF1554
 30762 db2d 0C       		.byte	0xc
 30763 db2e BD10     		.value	0x10bd
 30764 db30 74930000 		.long	0x9374
 30765 db34 A201     		.uleb128 0xa2
 30766 db36 00000000 		.long	.LASF1572
 30767 db3a 0C       		.byte	0xc
 30768 db3b BE10     		.value	0x10be
 30769 db3d 57560000 		.long	0x5657
 30770 db41 00       		.byte	0
 30771 db42 9801     		.uleb128 0x98
 30772 db44 332F0000 		.long	0x2f33
 30773 db48 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 842


 30774 db49 51DB0000 		.long	0xdb51
 30775 db4d 66DB0000 		.long	0xdb66
 30776 db51 9901     		.uleb128 0x99
 30777 db53 00000000 		.long	.LASF1535
 30778 db57 90D90000 		.long	0xd990
 30779 db5b 9901     		.uleb128 0x99
 30780 db5d 00000000 		.long	.LASF1549
 30781 db61 019A0000 		.long	0x9a01
 30782 db65 00       		.byte	0
 30783 db66 9801     		.uleb128 0x98
 30784 db68 6C490000 		.long	0x496c
 30785 db6c 03       		.byte	0x3
 30786 db6d 75DB0000 		.long	0xdb75
 30787 db71 8ADB0000 		.long	0xdb8a
 30788 db75 9901     		.uleb128 0x99
 30789 db77 00000000 		.long	.LASF1535
 30790 db7b 66BD0000 		.long	0xbd66
 30791 db7f 9901     		.uleb128 0x99
 30792 db81 00000000 		.long	.LASF1549
 30793 db85 019A0000 		.long	0x9a01
 30794 db89 00       		.byte	0
 30795 db8a 7E       		.uleb128 0x7e
 30796 db8b 08       		.byte	0x8
 30797 db8c 49820000 		.long	0x8249
 30798 db90 9801     		.uleb128 0x98
 30799 db92 A3810000 		.long	0x81a3
 30800 db96 03       		.byte	0x3
 30801 db97 B1DB0000 		.long	0xdbb1
 30802 db9b D4DB0000 		.long	0xdbd4
 30803 db9f 35       		.uleb128 0x35
 30804 dba0 00000000 		.long	.LASF743
 30805 dba4 C68C0000 		.long	0x8cc6
 30806 dba8 35       		.uleb128 0x35
 30807 dba9 00000000 		.long	.LASF1101
 30808 dbad 29000000 		.long	0x29
 30809 dbb1 9901     		.uleb128 0x99
 30810 dbb3 00000000 		.long	.LASF1535
 30811 dbb7 D4DB0000 		.long	0xdbd4
 30812 dbbb 9E01     		.uleb128 0x9e
 30813 dbbd 00000000 		.long	.LASF1559
 30814 dbc1 11       		.byte	0x11
 30815 dbc2 35       		.byte	0x35
 30816 dbc3 C68C0000 		.long	0x8cc6
 30817 dbc7 9E01     		.uleb128 0x9e
 30818 dbc9 00000000 		.long	.LASF1538
 30819 dbcd 11       		.byte	0x11
 30820 dbce 35       		.byte	0x35
 30821 dbcf D9DB0000 		.long	0xdbd9
 30822 dbd3 00       		.byte	0
 30823 dbd4 11       		.uleb128 0x11
 30824 dbd5 8ADB0000 		.long	0xdb8a
 30825 dbd9 11       		.uleb128 0x11
 30826 dbda 12AD0000 		.long	0xad12
 30827 dbde 9D01     		.uleb128 0x9d
 30828 dbe0 A67C0000 		.long	0x7ca6
 30829 dbe4 01       		.byte	0x1
 30830 dbe5 59DC0000 		.long	0xdc59
GAS LISTING /tmp/ccmMnd7l.s 			page 843


 30831 dbe9 35       		.uleb128 0x35
 30832 dbea 00000000 		.long	.LASF1012
 30833 dbee C68C0000 		.long	0x8cc6
 30834 dbf2 35       		.uleb128 0x35
 30835 dbf3 00000000 		.long	.LASF1047
 30836 dbf7 34810000 		.long	0x8134
 30837 dbfb 18       		.uleb128 0x18
 30838 dbfc 5F547000 		.string	"_Tp"
 30839 dc00 29000000 		.long	0x29
 30840 dc04 35       		.uleb128 0x35
 30841 dc05 00000000 		.long	.LASF1013
 30842 dc09 97810000 		.long	0x8197
 30843 dc0d 9E01     		.uleb128 0x9e
 30844 dc0f 00000000 		.long	.LASF1553
 30845 dc13 10       		.byte	0x10
 30846 dc14 7C       		.byte	0x7c
 30847 dc15 C68C0000 		.long	0x8cc6
 30848 dc19 9E01     		.uleb128 0x9e
 30849 dc1b 00000000 		.long	.LASF1573
 30850 dc1f 10       		.byte	0x10
 30851 dc20 7D       		.byte	0x7d
 30852 dc21 34810000 		.long	0x8134
 30853 dc25 9E01     		.uleb128 0x9e
 30854 dc27 00000000 		.long	.LASF1574
 30855 dc2b 10       		.byte	0x10
 30856 dc2c 7D       		.byte	0x7d
 30857 dc2d 34810000 		.long	0x8134
 30858 dc31 9E01     		.uleb128 0x9e
 30859 dc33 00000000 		.long	.LASF1309
 30860 dc37 10       		.byte	0x10
 30861 dc38 7D       		.byte	0x7d
 30862 dc39 29000000 		.long	0x29
 30863 dc3d 9E01     		.uleb128 0x9e
 30864 dc3f 00000000 		.long	.LASF1560
 30865 dc43 10       		.byte	0x10
 30866 dc44 7E       		.byte	0x7e
 30867 dc45 97810000 		.long	0x8197
 30868 dc49 9B01     		.uleb128 0x9b
 30869 dc4b 9C01     		.uleb128 0x9c
 30870 dc4d 00000000 		.long	.LASF1575
 30871 dc51 10       		.byte	0x10
 30872 dc52 80       		.byte	0x80
 30873 dc53 34810000 		.long	0x8134
 30874 dc57 00       		.byte	0
 30875 dc58 00       		.byte	0
 30876 dc59 9D01     		.uleb128 0x9d
 30877 dc5b EF7C0000 		.long	0x7cef
 30878 dc5f 01       		.byte	0x1
 30879 dc60 E8DC0000 		.long	0xdce8
 30880 dc64 35       		.uleb128 0x35
 30881 dc65 00000000 		.long	.LASF1012
 30882 dc69 C68C0000 		.long	0x8cc6
 30883 dc6d 35       		.uleb128 0x35
 30884 dc6e 00000000 		.long	.LASF1013
 30885 dc72 58810000 		.long	0x8158
 30886 dc76 A201     		.uleb128 0xa2
 30887 dc78 00000000 		.long	.LASF1553
GAS LISTING /tmp/ccmMnd7l.s 			page 844


 30888 dc7c 10       		.byte	0x10
 30889 dc7d 3D01     		.value	0x13d
 30890 dc7f C68C0000 		.long	0x8cc6
 30891 dc83 A201     		.uleb128 0xa2
 30892 dc85 00000000 		.long	.LASF1554
 30893 dc89 10       		.byte	0x10
 30894 dc8a 3D01     		.value	0x13d
 30895 dc8c C68C0000 		.long	0x8cc6
 30896 dc90 A201     		.uleb128 0xa2
 30897 dc92 00000000 		.long	.LASF1560
 30898 dc96 10       		.byte	0x10
 30899 dc97 3E01     		.value	0x13e
 30900 dc99 58810000 		.long	0x8158
 30901 dc9d 9B01     		.uleb128 0x9b
 30902 dc9f 5C       		.uleb128 0x5c
 30903 dca0 00000000 		.long	.LASF1576
 30904 dca4 10       		.byte	0x10
 30905 dca5 4101     		.value	0x141
 30906 dca7 A2700000 		.long	0x70a2
 30907 dcab 5C       		.uleb128 0x5c
 30908 dcac 00000000 		.long	.LASF1577
 30909 dcb0 10       		.byte	0x10
 30910 dcb1 4301     		.value	0x143
 30911 dcb3 AD700000 		.long	0x70ad
 30912 dcb7 A301     		.uleb128 0xa3
 30913 dcb9 00000000 		.long	.LASF1578
 30914 dcbd 10       		.byte	0x10
 30915 dcbe 4801     		.value	0x148
 30916 dcc0 C4DC0000 		.long	0xdcc4
 30917 dcc4 11       		.uleb128 0x11
 30918 dcc5 ABDC0000 		.long	0xdcab
 30919 dcc9 A301     		.uleb128 0xa3
 30920 dccb 00000000 		.long	.LASF1575
 30921 dccf 10       		.byte	0x10
 30922 dcd0 4901     		.value	0x149
 30923 dcd2 ABDC0000 		.long	0xdcab
 30924 dcd6 9B01     		.uleb128 0x9b
 30925 dcd8 A301     		.uleb128 0xa3
 30926 dcda 00000000 		.long	.LASF1309
 30927 dcde 10       		.byte	0x10
 30928 dcdf 4C01     		.value	0x14c
 30929 dce1 9FDC0000 		.long	0xdc9f
 30930 dce5 00       		.byte	0
 30931 dce6 00       		.byte	0
 30932 dce7 00       		.byte	0
 30933 dce8 9D01     		.uleb128 0x9d
 30934 dcea 1D7D0000 		.long	0x7d1d
 30935 dcee 03       		.byte	0x3
 30936 dcef 50DD0000 		.long	0xdd50
 30937 dcf3 35       		.uleb128 0x35
 30938 dcf4 00000000 		.long	.LASF1012
 30939 dcf8 C68C0000 		.long	0x8cc6
 30940 dcfc 35       		.uleb128 0x35
 30941 dcfd 00000000 		.long	.LASF1013
 30942 dd01 58810000 		.long	0x8158
 30943 dd05 9E01     		.uleb128 0x9e
 30944 dd07 00000000 		.long	.LASF1553
GAS LISTING /tmp/ccmMnd7l.s 			page 845


 30945 dd0b 10       		.byte	0x10
 30946 dd0c EB       		.byte	0xeb
 30947 dd0d C68C0000 		.long	0x8cc6
 30948 dd11 9E01     		.uleb128 0x9e
 30949 dd13 00000000 		.long	.LASF1554
 30950 dd17 10       		.byte	0x10
 30951 dd18 EB       		.byte	0xeb
 30952 dd19 C68C0000 		.long	0x8cc6
 30953 dd1d 9E01     		.uleb128 0x9e
 30954 dd1f 00000000 		.long	.LASF1540
 30955 dd23 10       		.byte	0x10
 30956 dd24 EC       		.byte	0xec
 30957 dd25 C68C0000 		.long	0x8cc6
 30958 dd29 9E01     		.uleb128 0x9e
 30959 dd2b 00000000 		.long	.LASF1560
 30960 dd2f 10       		.byte	0x10
 30961 dd30 EC       		.byte	0xec
 30962 dd31 58810000 		.long	0x8158
 30963 dd35 9B01     		.uleb128 0x9b
 30964 dd37 13       		.uleb128 0x13
 30965 dd38 00000000 		.long	.LASF1576
 30966 dd3c 10       		.byte	0x10
 30967 dd3d EF       		.byte	0xef
 30968 dd3e A2700000 		.long	0x70a2
 30969 dd42 9C01     		.uleb128 0x9c
 30970 dd44 00000000 		.long	.LASF1309
 30971 dd48 10       		.byte	0x10
 30972 dd49 F3       		.byte	0xf3
 30973 dd4a 37DD0000 		.long	0xdd37
 30974 dd4e 00       		.byte	0
 30975 dd4f 00       		.byte	0
 30976 dd50 9D01     		.uleb128 0x9d
 30977 dd52 4F7D0000 		.long	0x7d4f
 30978 dd56 01       		.byte	0x1
 30979 dd57 B2DD0000 		.long	0xddb2
 30980 dd5b 35       		.uleb128 0x35
 30981 dd5c 00000000 		.long	.LASF1012
 30982 dd60 C68C0000 		.long	0x8cc6
 30983 dd64 35       		.uleb128 0x35
 30984 dd65 00000000 		.long	.LASF1013
 30985 dd69 58810000 		.long	0x8158
 30986 dd6d A201     		.uleb128 0xa2
 30987 dd6f 00000000 		.long	.LASF1553
 30988 dd73 0C       		.byte	0xc
 30989 dd74 8506     		.value	0x685
 30990 dd76 C68C0000 		.long	0x8cc6
 30991 dd7a A201     		.uleb128 0xa2
 30992 dd7c 00000000 		.long	.LASF1579
 30993 dd80 0C       		.byte	0xc
 30994 dd81 8606     		.value	0x686
 30995 dd83 C68C0000 		.long	0x8cc6
 30996 dd87 A201     		.uleb128 0xa2
 30997 dd89 00000000 		.long	.LASF1554
 30998 dd8d 0C       		.byte	0xc
 30999 dd8e 8706     		.value	0x687
 31000 dd90 C68C0000 		.long	0x8cc6
 31001 dd94 A201     		.uleb128 0xa2
GAS LISTING /tmp/ccmMnd7l.s 			page 846


 31002 dd96 00000000 		.long	.LASF1560
 31003 dd9a 0C       		.byte	0xc
 31004 dd9b 8706     		.value	0x687
 31005 dd9d 58810000 		.long	0x8158
 31006 dda1 9B01     		.uleb128 0x9b
 31007 dda3 A801     		.uleb128 0xa8
 31008 dda5 5F5F6900 		.string	"__i"
 31009 dda9 0C       		.byte	0xc
 31010 ddaa 8A06     		.value	0x68a
 31011 ddac C68C0000 		.long	0x8cc6
 31012 ddb0 00       		.byte	0
 31013 ddb1 00       		.byte	0
 31014 ddb2 9D01     		.uleb128 0x9d
 31015 ddb4 827D0000 		.long	0x7d82
 31016 ddb8 01       		.byte	0x1
 31017 ddb9 F7DD0000 		.long	0xddf7
 31018 ddbd 35       		.uleb128 0x35
 31019 ddbe 00000000 		.long	.LASF1012
 31020 ddc2 C68C0000 		.long	0x8cc6
 31021 ddc6 35       		.uleb128 0x35
 31022 ddc7 00000000 		.long	.LASF1013
 31023 ddcb 58810000 		.long	0x8158
 31024 ddcf A201     		.uleb128 0xa2
 31025 ddd1 00000000 		.long	.LASF1553
 31026 ddd5 10       		.byte	0x10
 31027 ddd6 8601     		.value	0x186
 31028 ddd8 C68C0000 		.long	0x8cc6
 31029 dddc A201     		.uleb128 0xa2
 31030 ddde 00000000 		.long	.LASF1554
 31031 dde2 10       		.byte	0x10
 31032 dde3 8601     		.value	0x186
 31033 dde5 C68C0000 		.long	0x8cc6
 31034 dde9 A201     		.uleb128 0xa2
 31035 ddeb 00000000 		.long	.LASF1560
 31036 ddef 10       		.byte	0x10
 31037 ddf0 8701     		.value	0x187
 31038 ddf2 58810000 		.long	0x8158
 31039 ddf6 00       		.byte	0
 31040 ddf7 9D01     		.uleb128 0x9d
 31041 ddf9 B07D0000 		.long	0x7db0
 31042 ddfd 03       		.byte	0x3
 31043 ddfe 49DE0000 		.long	0xde49
 31044 de02 35       		.uleb128 0x35
 31045 de03 00000000 		.long	.LASF1012
 31046 de07 C68C0000 		.long	0x8cc6
 31047 de0b 35       		.uleb128 0x35
 31048 de0c 00000000 		.long	.LASF1013
 31049 de10 58810000 		.long	0x8158
 31050 de14 A201     		.uleb128 0xa2
 31051 de16 00000000 		.long	.LASF1553
 31052 de1a 0C       		.byte	0xc
 31053 de1b 8707     		.value	0x787
 31054 de1d C68C0000 		.long	0x8cc6
 31055 de21 A201     		.uleb128 0xa2
 31056 de23 00000000 		.long	.LASF1579
 31057 de27 0C       		.byte	0xc
 31058 de28 8807     		.value	0x788
GAS LISTING /tmp/ccmMnd7l.s 			page 847


 31059 de2a C68C0000 		.long	0x8cc6
 31060 de2e A201     		.uleb128 0xa2
 31061 de30 00000000 		.long	.LASF1554
 31062 de34 0C       		.byte	0xc
 31063 de35 8907     		.value	0x789
 31064 de37 C68C0000 		.long	0x8cc6
 31065 de3b A201     		.uleb128 0xa2
 31066 de3d 00000000 		.long	.LASF1560
 31067 de41 0C       		.byte	0xc
 31068 de42 8A07     		.value	0x78a
 31069 de44 58810000 		.long	0x8158
 31070 de48 00       		.byte	0
 31071 de49 9D01     		.uleb128 0x9d
 31072 de4b E37D0000 		.long	0x7de3
 31073 de4f 01       		.byte	0x1
 31074 de50 B4DE0000 		.long	0xdeb4
 31075 de54 35       		.uleb128 0x35
 31076 de55 00000000 		.long	.LASF1012
 31077 de59 C68C0000 		.long	0x8cc6
 31078 de5d 35       		.uleb128 0x35
 31079 de5e 00000000 		.long	.LASF425
 31080 de62 34810000 		.long	0x8134
 31081 de66 35       		.uleb128 0x35
 31082 de67 00000000 		.long	.LASF1013
 31083 de6b 58810000 		.long	0x8158
 31084 de6f A201     		.uleb128 0xa2
 31085 de71 00000000 		.long	.LASF1553
 31086 de75 0C       		.byte	0xc
 31087 de76 9307     		.value	0x793
 31088 de78 C68C0000 		.long	0x8cc6
 31089 de7c A201     		.uleb128 0xa2
 31090 de7e 00000000 		.long	.LASF1554
 31091 de82 0C       		.byte	0xc
 31092 de83 9407     		.value	0x794
 31093 de85 C68C0000 		.long	0x8cc6
 31094 de89 A201     		.uleb128 0xa2
 31095 de8b 00000000 		.long	.LASF1580
 31096 de8f 0C       		.byte	0xc
 31097 de90 9507     		.value	0x795
 31098 de92 34810000 		.long	0x8134
 31099 de96 A201     		.uleb128 0xa2
 31100 de98 00000000 		.long	.LASF1560
 31101 de9c 0C       		.byte	0xc
 31102 de9d 9507     		.value	0x795
 31103 de9f 58810000 		.long	0x8158
 31104 dea3 9B01     		.uleb128 0x9b
 31105 dea5 A301     		.uleb128 0xa3
 31106 dea7 00000000 		.long	.LASF1581
 31107 deab 0C       		.byte	0xc
 31108 deac 9F07     		.value	0x79f
 31109 deae C68C0000 		.long	0x8cc6
 31110 deb2 00       		.byte	0
 31111 deb3 00       		.byte	0
 31112 deb4 9D01     		.uleb128 0x9d
 31113 deb6 1F7E0000 		.long	0x7e1f
 31114 deba 03       		.byte	0x3
 31115 debb CDDE0000 		.long	0xdecd
GAS LISTING /tmp/ccmMnd7l.s 			page 848


 31116 debf A101     		.uleb128 0xa1
 31117 dec1 5F5F6E00 		.string	"__n"
 31118 dec5 14       		.byte	0x14
 31119 dec6 F603     		.value	0x3f6
 31120 dec8 34810000 		.long	0x8134
 31121 decc 00       		.byte	0
 31122 decd 9D01     		.uleb128 0x9d
 31123 decf 357E0000 		.long	0x7e35
 31124 ded3 03       		.byte	0x3
 31125 ded4 12DF0000 		.long	0xdf12
 31126 ded8 35       		.uleb128 0x35
 31127 ded9 00000000 		.long	.LASF1012
 31128 dedd C68C0000 		.long	0x8cc6
 31129 dee1 35       		.uleb128 0x35
 31130 dee2 00000000 		.long	.LASF1013
 31131 dee6 58810000 		.long	0x8158
 31132 deea A201     		.uleb128 0xa2
 31133 deec 00000000 		.long	.LASF1553
 31134 def0 0C       		.byte	0xc
 31135 def1 AA07     		.value	0x7aa
 31136 def3 C68C0000 		.long	0x8cc6
 31137 def7 A201     		.uleb128 0xa2
 31138 def9 00000000 		.long	.LASF1554
 31139 defd 0C       		.byte	0xc
 31140 defe AA07     		.value	0x7aa
 31141 df00 C68C0000 		.long	0x8cc6
 31142 df04 A201     		.uleb128 0xa2
 31143 df06 00000000 		.long	.LASF1560
 31144 df0a 0C       		.byte	0xc
 31145 df0b AB07     		.value	0x7ab
 31146 df0d 58810000 		.long	0x8158
 31147 df11 00       		.byte	0
 31148 df12 AB01     		.uleb128 0xab
 31149 df14 4E820000 		.long	0x824e
 31150 df18 03       		.byte	0x3
 31151 df19 9D01     		.uleb128 0x9d
 31152 df1b 637E0000 		.long	0x7e63
 31153 df1f 03       		.byte	0x3
 31154 df20 5BDF0000 		.long	0xdf5b
 31155 df24 35       		.uleb128 0x35
 31156 df25 00000000 		.long	.LASF1057
 31157 df29 C68C0000 		.long	0x8cc6
 31158 df2d 18       		.uleb128 0x18
 31159 df2e 5F547000 		.string	"_Tp"
 31160 df32 29000000 		.long	0x29
 31161 df36 9E01     		.uleb128 0x9e
 31162 df38 00000000 		.long	.LASF1553
 31163 df3c 13       		.byte	0x13
 31164 df3d 78       		.byte	0x78
 31165 df3e C68C0000 		.long	0x8cc6
 31166 df42 9E01     		.uleb128 0x9e
 31167 df44 00000000 		.long	.LASF1554
 31168 df48 13       		.byte	0x13
 31169 df49 78       		.byte	0x78
 31170 df4a C68C0000 		.long	0x8cc6
 31171 df4e 9E01     		.uleb128 0x9e
 31172 df50 00000000 		.long	.LASF1582
GAS LISTING /tmp/ccmMnd7l.s 			page 849


 31173 df54 13       		.byte	0x13
 31174 df55 78       		.byte	0x78
 31175 df56 29000000 		.long	0x29
 31176 df5a 00       		.byte	0
 31177 df5b 9D01     		.uleb128 0x9d
 31178 df5d 947E0000 		.long	0x7e94
 31179 df61 03       		.byte	0x3
 31180 df62 8ADF0000 		.long	0xdf8a
 31181 df66 35       		.uleb128 0x35
 31182 df67 00000000 		.long	.LASF1059
 31183 df6b C68C0000 		.long	0x8cc6
 31184 df6f A201     		.uleb128 0xa2
 31185 df71 00000000 		.long	.LASF1553
 31186 df75 0C       		.byte	0xc
 31187 df76 4412     		.value	0x1244
 31188 df78 C68C0000 		.long	0x8cc6
 31189 df7c A201     		.uleb128 0xa2
 31190 df7e 00000000 		.long	.LASF1554
 31191 df82 0C       		.byte	0xc
 31192 df83 4412     		.value	0x1244
 31193 df85 C68C0000 		.long	0x8cc6
 31194 df89 00       		.byte	0
 31195 df8a 7E       		.uleb128 0x7e
 31196 df8b 08       		.byte	0x8
 31197 df8c 90DF0000 		.long	0xdf90
 31198 df90 9201     		.uleb128 0x92
 31199 df92 1FAC0000 		.long	0xac1f
 31200 df96 A0DF0000 		.long	0xdfa0
 31201 df9a 09       		.uleb128 0x9
 31202 df9b 1FAC0000 		.long	0xac1f
 31203 df9f 00       		.byte	0
 31204 dfa0 9801     		.uleb128 0x98
 31205 dfa2 15290000 		.long	0x2915
 31206 dfa6 03       		.byte	0x3
 31207 dfa7 AFDF0000 		.long	0xdfaf
 31208 dfab C6DF0000 		.long	0xdfc6
 31209 dfaf 9901     		.uleb128 0x99
 31210 dfb1 00000000 		.long	.LASF1535
 31211 dfb5 B5B60000 		.long	0xb6b5
 31212 dfb9 9E01     		.uleb128 0x9e
 31213 dfbb 00000000 		.long	.LASF1545
 31214 dfbf 08       		.byte	0x8
 31215 dfc0 7F       		.byte	0x7f
 31216 dfc1 8ADF0000 		.long	0xdf8a
 31217 dfc5 00       		.byte	0
 31218 dfc6 9801     		.uleb128 0x98
 31219 dfc8 FA380000 		.long	0x38fa
 31220 dfcc 03       		.byte	0x3
 31221 dfcd D5DF0000 		.long	0xdfd5
 31222 dfd1 EADF0000 		.long	0xdfea
 31223 dfd5 9901     		.uleb128 0x99
 31224 dfd7 00000000 		.long	.LASF1535
 31225 dfdb 8EB70000 		.long	0xb78e
 31226 dfdf 9901     		.uleb128 0x99
 31227 dfe1 00000000 		.long	.LASF1549
 31228 dfe5 019A0000 		.long	0x9a01
 31229 dfe9 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 850


 31230 dfea 9801     		.uleb128 0x98
 31231 dfec 725C0000 		.long	0x5c72
 31232 dff0 03       		.byte	0x3
 31233 dff1 F9DF0000 		.long	0xdff9
 31234 dff5 10E00000 		.long	0xe010
 31235 dff9 9901     		.uleb128 0x99
 31236 dffb 00000000 		.long	.LASF1535
 31237 dfff 97C40000 		.long	0xc497
 31238 e003 A001     		.uleb128 0xa0
 31239 e005 5F5F7000 		.string	"__p"
 31240 e009 17       		.byte	0x17
 31241 e00a A9       		.byte	0xa9
 31242 e00b 445C0000 		.long	0x5c44
 31243 e00f 00       		.byte	0
 31244 e010 9801     		.uleb128 0x98
 31245 e012 14660000 		.long	0x6614
 31246 e016 03       		.byte	0x3
 31247 e017 1FE00000 		.long	0xe01f
 31248 e01b 36E00000 		.long	0xe036
 31249 e01f 9901     		.uleb128 0x99
 31250 e021 00000000 		.long	.LASF1535
 31251 e025 9EC50000 		.long	0xc59e
 31252 e029 A001     		.uleb128 0xa0
 31253 e02b 5F5F7000 		.string	"__p"
 31254 e02f 17       		.byte	0x17
 31255 e030 A9       		.byte	0xa9
 31256 e031 E6650000 		.long	0x65e6
 31257 e035 00       		.byte	0
 31258 e036 9801     		.uleb128 0x98
 31259 e038 A35D0000 		.long	0x5da3
 31260 e03c 03       		.byte	0x3
 31261 e03d 45E00000 		.long	0xe045
 31262 e041 50E00000 		.long	0xe050
 31263 e045 9901     		.uleb128 0x99
 31264 e047 00000000 		.long	.LASF1535
 31265 e04b 50E00000 		.long	0xe050
 31266 e04f 00       		.byte	0
 31267 e050 11       		.uleb128 0x11
 31268 e051 08B20000 		.long	0xb208
 31269 e055 9801     		.uleb128 0x98
 31270 e057 64AF0000 		.long	0xaf64
 31271 e05b 03       		.byte	0x3
 31272 e05c 64E00000 		.long	0xe064
 31273 e060 6FE00000 		.long	0xe06f
 31274 e064 9901     		.uleb128 0x99
 31275 e066 00000000 		.long	.LASF1535
 31276 e06a 6FE00000 		.long	0xe06f
 31277 e06e 00       		.byte	0
 31278 e06f 11       		.uleb128 0x11
 31279 e070 9EAF0000 		.long	0xaf9e
 31280 e074 9801     		.uleb128 0x98
 31281 e076 26670000 		.long	0x6726
 31282 e07a 03       		.byte	0x3
 31283 e07b 83E00000 		.long	0xe083
 31284 e07f 8EE00000 		.long	0xe08e
 31285 e083 9901     		.uleb128 0x99
 31286 e085 00000000 		.long	.LASF1535
GAS LISTING /tmp/ccmMnd7l.s 			page 851


 31287 e089 3BBE0000 		.long	0xbe3b
 31288 e08d 00       		.byte	0
 31289 e08e 9801     		.uleb128 0x98
 31290 e090 A5660000 		.long	0x66a5
 31291 e094 03       		.byte	0x3
 31292 e095 9DE00000 		.long	0xe09d
 31293 e099 C1E00000 		.long	0xe0c1
 31294 e09d 9901     		.uleb128 0x99
 31295 e09f 00000000 		.long	.LASF1535
 31296 e0a3 9EC50000 		.long	0xc59e
 31297 e0a7 9901     		.uleb128 0x99
 31298 e0a9 00000000 		.long	.LASF1549
 31299 e0ad 019A0000 		.long	0x9a01
 31300 e0b1 9B01     		.uleb128 0x9b
 31301 e0b3 9C01     		.uleb128 0x9c
 31302 e0b5 00000000 		.long	.LASF1583
 31303 e0b9 17       		.byte	0x17
 31304 e0ba EA       		.byte	0xea
 31305 e0bb C1E00000 		.long	0xe0c1
 31306 e0bf 00       		.byte	0
 31307 e0c0 00       		.byte	0
 31308 e0c1 11       		.uleb128 0x11
 31309 e0c2 74B20000 		.long	0xb274
 31310 e0c6 9801     		.uleb128 0x98
 31311 e0c8 035D0000 		.long	0x5d03
 31312 e0cc 03       		.byte	0x3
 31313 e0cd D5E00000 		.long	0xe0d5
 31314 e0d1 F9E00000 		.long	0xe0f9
 31315 e0d5 9901     		.uleb128 0x99
 31316 e0d7 00000000 		.long	.LASF1535
 31317 e0db 97C40000 		.long	0xc497
 31318 e0df 9901     		.uleb128 0x99
 31319 e0e1 00000000 		.long	.LASF1549
 31320 e0e5 019A0000 		.long	0x9a01
 31321 e0e9 9B01     		.uleb128 0x9b
 31322 e0eb 9C01     		.uleb128 0x9c
 31323 e0ed 00000000 		.long	.LASF1583
 31324 e0f1 17       		.byte	0x17
 31325 e0f2 EA       		.byte	0xea
 31326 e0f3 F9E00000 		.long	0xe0f9
 31327 e0f7 00       		.byte	0
 31328 e0f8 00       		.byte	0
 31329 e0f9 11       		.uleb128 0x11
 31330 e0fa 98B10000 		.long	0xb198
 31331 e0fe 9801     		.uleb128 0x98
 31332 e100 C2720000 		.long	0x72c2
 31333 e104 03       		.byte	0x3
 31334 e105 0DE10000 		.long	0xe10d
 31335 e109 25E10000 		.long	0xe125
 31336 e10d 9901     		.uleb128 0x99
 31337 e10f 00000000 		.long	.LASF1535
 31338 e113 7EB30000 		.long	0xb37e
 31339 e117 A101     		.uleb128 0xa1
 31340 e119 5F5F6300 		.string	"__c"
 31341 e11d 0D       		.byte	0xd
 31342 e11e BB01     		.value	0x1bb
 31343 e120 E4990000 		.long	0x99e4
GAS LISTING /tmp/ccmMnd7l.s 			page 852


 31344 e124 00       		.byte	0
 31345 e125 9801     		.uleb128 0x98
 31346 e127 2DAF0000 		.long	0xaf2d
 31347 e12b 02       		.byte	0x2
 31348 e12c 34E10000 		.long	0xe134
 31349 e130 4BE10000 		.long	0xe14b
 31350 e134 9901     		.uleb128 0x99
 31351 e136 00000000 		.long	.LASF1535
 31352 e13a 4BE10000 		.long	0xe14b
 31353 e13e 9E01     		.uleb128 0x9e
 31354 e140 00000000 		.long	.LASF1584
 31355 e144 02       		.byte	0x2
 31356 e145 37       		.byte	0x37
 31357 e146 D8800000 		.long	0x80d8
 31358 e14a 00       		.byte	0
 31359 e14b 11       		.uleb128 0x11
 31360 e14c 98AF0000 		.long	0xaf98
 31361 e150 AC01     		.uleb128 0xac
 31362 e152 00000000 		.long	.LASF1671
 31363 e156 01       		.byte	0x1
 31364 e157 74E10000 		.long	0xe174
 31365 e15b 9E01     		.uleb128 0x9e
 31366 e15d 00000000 		.long	.LASF1585
 31367 e161 16       		.byte	0x16
 31368 e162 51       		.byte	0x51
 31369 e163 D8800000 		.long	0x80d8
 31370 e167 9E01     		.uleb128 0x9e
 31371 e169 00000000 		.long	.LASF1586
 31372 e16d 16       		.byte	0x16
 31373 e16e 51       		.byte	0x51
 31374 e16f D8800000 		.long	0x80d8
 31375 e173 00       		.byte	0
 31376 e174 9D01     		.uleb128 0x9d
 31377 e176 B47E0000 		.long	0x7eb4
 31378 e17a 03       		.byte	0x3
 31379 e17b C9E10000 		.long	0xe1c9
 31380 e17f 35       		.uleb128 0x35
 31381 e180 00000000 		.long	.LASF1012
 31382 e184 C68C0000 		.long	0x8cc6
 31383 e188 35       		.uleb128 0x35
 31384 e189 00000000 		.long	.LASF1013
 31385 e18d 58810000 		.long	0x8158
 31386 e191 A201     		.uleb128 0xa2
 31387 e193 00000000 		.long	.LASF1553
 31388 e197 0C       		.byte	0xc
 31389 e198 7C07     		.value	0x77c
 31390 e19a C68C0000 		.long	0x8cc6
 31391 e19e A201     		.uleb128 0xa2
 31392 e1a0 00000000 		.long	.LASF1554
 31393 e1a4 0C       		.byte	0xc
 31394 e1a5 7D07     		.value	0x77d
 31395 e1a7 C68C0000 		.long	0x8cc6
 31396 e1ab A201     		.uleb128 0xa2
 31397 e1ad 00000000 		.long	.LASF1560
 31398 e1b1 0C       		.byte	0xc
 31399 e1b2 7D07     		.value	0x77d
 31400 e1b4 58810000 		.long	0x8158
GAS LISTING /tmp/ccmMnd7l.s 			page 853


 31401 e1b8 9B01     		.uleb128 0x9b
 31402 e1ba A301     		.uleb128 0xa3
 31403 e1bc 00000000 		.long	.LASF1587
 31404 e1c0 0C       		.byte	0xc
 31405 e1c1 7F07     		.value	0x77f
 31406 e1c3 C68C0000 		.long	0x8cc6
 31407 e1c7 00       		.byte	0
 31408 e1c8 00       		.byte	0
 31409 e1c9 9D01     		.uleb128 0x9d
 31410 e1cb E67E0000 		.long	0x7ee6
 31411 e1cf 01       		.byte	0x1
 31412 e1d0 23E20000 		.long	0xe223
 31413 e1d4 35       		.uleb128 0x35
 31414 e1d5 00000000 		.long	.LASF743
 31415 e1d9 C68C0000 		.long	0x8cc6
 31416 e1dd 35       		.uleb128 0x35
 31417 e1de 00000000 		.long	.LASF1013
 31418 e1e2 58810000 		.long	0x8158
 31419 e1e6 9E01     		.uleb128 0x9e
 31420 e1e8 00000000 		.long	.LASF1540
 31421 e1ec 0C       		.byte	0xc
 31422 e1ed 4E       		.byte	0x4e
 31423 e1ee C68C0000 		.long	0x8cc6
 31424 e1f2 A001     		.uleb128 0xa0
 31425 e1f4 5F5F6100 		.string	"__a"
 31426 e1f8 0C       		.byte	0xc
 31427 e1f9 4E       		.byte	0x4e
 31428 e1fa C68C0000 		.long	0x8cc6
 31429 e1fe A001     		.uleb128 0xa0
 31430 e200 5F5F6200 		.string	"__b"
 31431 e204 0C       		.byte	0xc
 31432 e205 4E       		.byte	0x4e
 31433 e206 C68C0000 		.long	0x8cc6
 31434 e20a A001     		.uleb128 0xa0
 31435 e20c 5F5F6300 		.string	"__c"
 31436 e210 0C       		.byte	0xc
 31437 e211 4F       		.byte	0x4f
 31438 e212 C68C0000 		.long	0x8cc6
 31439 e216 9E01     		.uleb128 0x9e
 31440 e218 00000000 		.long	.LASF1560
 31441 e21c 0C       		.byte	0xc
 31442 e21d 4F       		.byte	0x4f
 31443 e21e 58810000 		.long	0x8158
 31444 e222 00       		.byte	0
 31445 e223 A701     		.uleb128 0xa7
 31446 e225 112E0000 		.long	0x2e11
 31447 e229 03       		.byte	0x3
 31448 e22a 8D01     		.value	0x18d
 31449 e22c 01       		.byte	0x1
 31450 e22d 35E20000 		.long	0xe235
 31451 e231 AEE20000 		.long	0xe2ae
 31452 e235 9901     		.uleb128 0x99
 31453 e237 00000000 		.long	.LASF1535
 31454 e23b 51C90000 		.long	0xc951
 31455 e23f 9B01     		.uleb128 0x9b
 31456 e241 A301     		.uleb128 0xa3
 31457 e243 00000000 		.long	.LASF1588
GAS LISTING /tmp/ccmMnd7l.s 			page 854


 31458 e247 03       		.byte	0x3
 31459 e248 9101     		.value	0x191
 31460 e24a FE800000 		.long	0x80fe
 31461 e24e A301     		.uleb128 0xa3
 31462 e250 00000000 		.long	.LASF1589
 31463 e254 03       		.byte	0x3
 31464 e255 9201     		.value	0x192
 31465 e257 FE800000 		.long	0x80fe
 31466 e25b A801     		.uleb128 0xa8
 31467 e25d 5F5F7900 		.string	"__y"
 31468 e261 03       		.byte	0x3
 31469 e262 A401     		.value	0x1a4
 31470 e264 03810000 		.long	0x8103
 31471 e268 AD01     		.uleb128 0xad
 31472 e26a 8CE20000 		.long	0xe28c
 31473 e26e A801     		.uleb128 0xa8
 31474 e270 5F5F6B00 		.string	"__k"
 31475 e274 03       		.byte	0x3
 31476 e275 9401     		.value	0x194
 31477 e277 85060000 		.long	0x685
 31478 e27b 9B01     		.uleb128 0x9b
 31479 e27d A801     		.uleb128 0xa8
 31480 e27f 5F5F7900 		.string	"__y"
 31481 e283 03       		.byte	0x3
 31482 e284 9601     		.value	0x196
 31483 e286 03810000 		.long	0x8103
 31484 e28a 00       		.byte	0
 31485 e28b 00       		.byte	0
 31486 e28c 9B01     		.uleb128 0x9b
 31487 e28e A801     		.uleb128 0xa8
 31488 e290 5F5F6B00 		.string	"__k"
 31489 e294 03       		.byte	0x3
 31490 e295 9C01     		.value	0x19c
 31491 e297 85060000 		.long	0x685
 31492 e29b 9B01     		.uleb128 0x9b
 31493 e29d A801     		.uleb128 0xa8
 31494 e29f 5F5F7900 		.string	"__y"
 31495 e2a3 03       		.byte	0x3
 31496 e2a4 9E01     		.value	0x19e
 31497 e2a6 03810000 		.long	0x8103
 31498 e2aa 00       		.byte	0
 31499 e2ab 00       		.byte	0
 31500 e2ac 00       		.byte	0
 31501 e2ad 00       		.byte	0
 31502 e2ae 9801     		.uleb128 0x98
 31503 e2b0 2C550000 		.long	0x552c
 31504 e2b4 01       		.byte	0x1
 31505 e2b5 C6E20000 		.long	0xe2c6
 31506 e2b9 9BE30000 		.long	0xe39b
 31507 e2bd 35       		.uleb128 0x35
 31508 e2be 00000000 		.long	.LASF766
 31509 e2c2 812C0000 		.long	0x2c81
 31510 e2c6 9901     		.uleb128 0x99
 31511 e2c8 00000000 		.long	.LASF1535
 31512 e2cc B3D20000 		.long	0xd2b3
 31513 e2d0 A201     		.uleb128 0xa2
 31514 e2d2 00000000 		.long	.LASF1566
GAS LISTING /tmp/ccmMnd7l.s 			page 855


 31515 e2d6 03       		.byte	0x3
 31516 e2d7 6F03     		.value	0x36f
 31517 e2d9 9BE30000 		.long	0xe39b
 31518 e2dd A201     		.uleb128 0xa2
 31519 e2df 00000000 		.long	.LASF1590
 31520 e2e3 03       		.byte	0x3
 31521 e2e4 7003     		.value	0x370
 31522 e2e6 A0E30000 		.long	0xe3a0
 31523 e2ea AD01     		.uleb128 0xad
 31524 e2ec 91E30000 		.long	0xe391
 31525 e2f0 5C       		.uleb128 0x5c
 31526 e2f1 00000000 		.long	.LASF1591
 31527 e2f5 03       		.byte	0x3
 31528 e2f6 7603     		.value	0x376
 31529 e2f8 63710000 		.long	0x7163
 31530 e2fc A301     		.uleb128 0xa3
 31531 e2fe 00000000 		.long	.LASF1592
 31532 e302 03       		.byte	0x3
 31533 e303 7803     		.value	0x378
 31534 e305 09E30000 		.long	0xe309
 31535 e309 11       		.uleb128 0x11
 31536 e30a F0E20000 		.long	0xe2f0
 31537 e30e A301     		.uleb128 0xa3
 31538 e310 00000000 		.long	.LASF1593
 31539 e314 03       		.byte	0x3
 31540 e315 7903     		.value	0x379
 31541 e317 09E30000 		.long	0xe309
 31542 e31b A301     		.uleb128 0xa3
 31543 e31d 00000000 		.long	.LASF1594
 31544 e321 03       		.byte	0x3
 31545 e322 7A03     		.value	0x37a
 31546 e324 09E30000 		.long	0xe309
 31547 e328 A301     		.uleb128 0xa3
 31548 e32a 00000000 		.long	.LASF1595
 31549 e32e 03       		.byte	0x3
 31550 e32f 7B03     		.value	0x37b
 31551 e331 09E30000 		.long	0xe309
 31552 e335 A301     		.uleb128 0xa3
 31553 e337 00000000 		.long	.LASF1596
 31554 e33b 03       		.byte	0x3
 31555 e33c 7E03     		.value	0x37e
 31556 e33e F0E20000 		.long	0xe2f0
 31557 e342 AD01     		.uleb128 0xad
 31558 e344 70E30000 		.long	0xe370
 31559 e348 A301     		.uleb128 0xa3
 31560 e34a 00000000 		.long	.LASF1597
 31561 e34e 03       		.byte	0x3
 31562 e34f 8303     		.value	0x383
 31563 e351 09E30000 		.long	0xe309
 31564 e355 A301     		.uleb128 0xa3
 31565 e357 00000000 		.long	.LASF1598
 31566 e35b 03       		.byte	0x3
 31567 e35c 8403     		.value	0x384
 31568 e35e 09E30000 		.long	0xe309
 31569 e362 A301     		.uleb128 0xa3
 31570 e364 00000000 		.long	.LASF1599
 31571 e368 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 856


 31572 e369 8503     		.value	0x385
 31573 e36b 09E30000 		.long	0xe309
 31574 e36f 00       		.byte	0
 31575 e370 9B01     		.uleb128 0x9b
 31576 e372 A301     		.uleb128 0xa3
 31577 e374 00000000 		.long	.LASF1562
 31578 e378 03       		.byte	0x3
 31579 e379 9C03     		.value	0x39c
 31580 e37b F0E20000 		.long	0xe2f0
 31581 e37f 9B01     		.uleb128 0x9b
 31582 e381 A301     		.uleb128 0xa3
 31583 e383 00000000 		.long	.LASF1600
 31584 e387 03       		.byte	0x3
 31585 e388 9F03     		.value	0x39f
 31586 e38a 09E30000 		.long	0xe309
 31587 e38e 00       		.byte	0
 31588 e38f 00       		.byte	0
 31589 e390 00       		.byte	0
 31590 e391 35       		.uleb128 0x35
 31591 e392 00000000 		.long	.LASF766
 31592 e396 812C0000 		.long	0x2c81
 31593 e39a 00       		.byte	0
 31594 e39b 11       		.uleb128 0x11
 31595 e39c D5B00000 		.long	0xb0d5
 31596 e3a0 11       		.uleb128 0x11
 31597 e3a1 87B00000 		.long	0xb087
 31598 e3a5 9801     		.uleb128 0x98
 31599 e3a7 13380000 		.long	0x3813
 31600 e3ab 02       		.byte	0x2
 31601 e3ac B4E30000 		.long	0xe3b4
 31602 e3b0 D9E30000 		.long	0xe3d9
 31603 e3b4 9901     		.uleb128 0x99
 31604 e3b6 00000000 		.long	.LASF1535
 31605 e3ba 8EB70000 		.long	0xb78e
 31606 e3be A101     		.uleb128 0xa1
 31607 e3c0 5F5F6E00 		.string	"__n"
 31608 e3c4 06       		.byte	0x6
 31609 e3c5 1501     		.value	0x115
 31610 e3c7 C4370000 		.long	0x37c4
 31611 e3cb A101     		.uleb128 0xa1
 31612 e3cd 5F5F6100 		.string	"__a"
 31613 e3d1 06       		.byte	0x6
 31614 e3d2 1501     		.value	0x115
 31615 e3d4 D9E30000 		.long	0xe3d9
 31616 e3d8 00       		.byte	0
 31617 e3d9 11       		.uleb128 0x11
 31618 e3da 98AD0000 		.long	0xad98
 31619 e3de 9801     		.uleb128 0x98
 31620 e3e0 F7360000 		.long	0x36f7
 31621 e3e4 03       		.byte	0x3
 31622 e3e5 EDE30000 		.long	0xe3ed
 31623 e3e9 04E40000 		.long	0xe404
 31624 e3ed 9901     		.uleb128 0x99
 31625 e3ef 00000000 		.long	.LASF1535
 31626 e3f3 41CB0000 		.long	0xcb41
 31627 e3f7 A001     		.uleb128 0xa0
 31628 e3f9 5F5F6E00 		.string	"__n"
GAS LISTING /tmp/ccmMnd7l.s 			page 857


 31629 e3fd 06       		.byte	0x6
 31630 e3fe B7       		.byte	0xb7
 31631 e3ff 85060000 		.long	0x685
 31632 e403 00       		.byte	0
 31633 e404 9801     		.uleb128 0x98
 31634 e406 47AF0000 		.long	0xaf47
 31635 e40a 03       		.byte	0x3
 31636 e40b 13E40000 		.long	0xe413
 31637 e40f 2DE40000 		.long	0xe42d
 31638 e413 9901     		.uleb128 0x99
 31639 e415 00000000 		.long	.LASF1535
 31640 e419 4BE10000 		.long	0xe14b
 31641 e41d 9B01     		.uleb128 0x9b
 31642 e41f 9C01     		.uleb128 0x9c
 31643 e421 00000000 		.long	.LASF1601
 31644 e425 02       		.byte	0x2
 31645 e426 3A       		.byte	0x3a
 31646 e427 E0800000 		.long	0x80e0
 31647 e42b 00       		.byte	0
 31648 e42c 00       		.byte	0
 31649 e42d 9801     		.uleb128 0x98
 31650 e42f 81AF0000 		.long	0xaf81
 31651 e433 02       		.byte	0x2
 31652 e434 3CE40000 		.long	0xe43c
 31653 e438 6CE40000 		.long	0xe46c
 31654 e43c 9901     		.uleb128 0x99
 31655 e43e 00000000 		.long	.LASF1535
 31656 e442 4BE10000 		.long	0xe14b
 31657 e446 9901     		.uleb128 0x99
 31658 e448 00000000 		.long	.LASF1549
 31659 e44c 019A0000 		.long	0x9a01
 31660 e450 9B01     		.uleb128 0x9b
 31661 e452 9F01     		.uleb128 0x9f
 31662 e454 61766700 		.string	"avg"
 31663 e458 02       		.byte	0x2
 31664 e459 42       		.byte	0x42
 31665 e45a 29000000 		.long	0x29
 31666 e45e 9F01     		.uleb128 0x9f
 31667 e460 6D656400 		.string	"med"
 31668 e464 02       		.byte	0x2
 31669 e465 46       		.byte	0x46
 31670 e466 29000000 		.long	0x29
 31671 e46a 00       		.byte	0
 31672 e46b 00       		.byte	0
 31673 e46c 9D01     		.uleb128 0x9d
 31674 e46e 1D7F0000 		.long	0x7f1d
 31675 e472 01       		.byte	0x1
 31676 e473 D1E40000 		.long	0xe4d1
 31677 e477 35       		.uleb128 0x35
 31678 e478 00000000 		.long	.LASF1012
 31679 e47c C68C0000 		.long	0x8cc6
 31680 e480 35       		.uleb128 0x35
 31681 e481 00000000 		.long	.LASF1013
 31682 e485 58810000 		.long	0x8158
 31683 e489 A201     		.uleb128 0xa2
 31684 e48b 00000000 		.long	.LASF1553
 31685 e48f 0C       		.byte	0xc
GAS LISTING /tmp/ccmMnd7l.s 			page 858


 31686 e490 2F07     		.value	0x72f
 31687 e492 C68C0000 		.long	0x8cc6
 31688 e496 A201     		.uleb128 0xa2
 31689 e498 00000000 		.long	.LASF1554
 31690 e49c 0C       		.byte	0xc
 31691 e49d 3007     		.value	0x730
 31692 e49f C68C0000 		.long	0x8cc6
 31693 e4a3 A201     		.uleb128 0xa2
 31694 e4a5 00000000 		.long	.LASF1560
 31695 e4a9 0C       		.byte	0xc
 31696 e4aa 3007     		.value	0x730
 31697 e4ac 58810000 		.long	0x8158
 31698 e4b0 9B01     		.uleb128 0x9b
 31699 e4b2 A801     		.uleb128 0xa8
 31700 e4b4 5F5F6900 		.string	"__i"
 31701 e4b8 0C       		.byte	0xc
 31702 e4b9 3407     		.value	0x734
 31703 e4bb C68C0000 		.long	0x8cc6
 31704 e4bf 9B01     		.uleb128 0x9b
 31705 e4c1 A301     		.uleb128 0xa3
 31706 e4c3 00000000 		.long	.LASF1538
 31707 e4c7 0C       		.byte	0xc
 31708 e4c8 3907     		.value	0x739
 31709 e4ca A2700000 		.long	0x70a2
 31710 e4ce 00       		.byte	0
 31711 e4cf 00       		.byte	0
 31712 e4d0 00       		.byte	0
 31713 e4d1 9D01     		.uleb128 0x9d
 31714 e4d3 51720000 		.long	0x7251
 31715 e4d7 03       		.byte	0x3
 31716 e4d8 1DE50000 		.long	0xe51d
 31717 e4dc 18       		.uleb128 0x18
 31718 e4dd 5F547000 		.string	"_Tp"
 31719 e4e1 29000000 		.long	0x29
 31720 e4e5 A201     		.uleb128 0xa2
 31721 e4e7 00000000 		.long	.LASF1553
 31722 e4eb 14       		.byte	0x14
 31723 e4ec 3902     		.value	0x239
 31724 e4ee 07AD0000 		.long	0xad07
 31725 e4f2 A201     		.uleb128 0xa2
 31726 e4f4 00000000 		.long	.LASF1554
 31727 e4f8 14       		.byte	0x14
 31728 e4f9 3902     		.value	0x239
 31729 e4fb 07AD0000 		.long	0xad07
 31730 e4ff A201     		.uleb128 0xa2
 31731 e501 00000000 		.long	.LASF1540
 31732 e505 14       		.byte	0x14
 31733 e506 3902     		.value	0x239
 31734 e508 01AD0000 		.long	0xad01
 31735 e50c 9B01     		.uleb128 0x9b
 31736 e50e A301     		.uleb128 0xa3
 31737 e510 00000000 		.long	.LASF1602
 31738 e514 14       		.byte	0x14
 31739 e515 4002     		.value	0x240
 31740 e517 4B7F0000 		.long	0x7f4b
 31741 e51b 00       		.byte	0
 31742 e51c 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 859


 31743 e51d 9D01     		.uleb128 0x9d
 31744 e51f 507F0000 		.long	0x7f50
 31745 e523 03       		.byte	0x3
 31746 e524 36E50000 		.long	0xe536
 31747 e528 A201     		.uleb128 0xa2
 31748 e52a 00000000 		.long	.LASF1603
 31749 e52e 15       		.byte	0x15
 31750 e52f BE03     		.value	0x3be
 31751 e531 36E50000 		.long	0xe536
 31752 e535 00       		.byte	0
 31753 e536 11       		.uleb128 0x11
 31754 e537 1FAC0000 		.long	0xac1f
 31755 e53b 9D01     		.uleb128 0x9d
 31756 e53d 667F0000 		.long	0x7f66
 31757 e541 03       		.byte	0x3
 31758 e542 66E50000 		.long	0xe566
 31759 e546 35       		.uleb128 0x35
 31760 e547 00000000 		.long	.LASF301
 31761 e54b E4990000 		.long	0x99e4
 31762 e54f 35       		.uleb128 0x35
 31763 e550 00000000 		.long	.LASF302
 31764 e554 BD040000 		.long	0x4bd
 31765 e558 A201     		.uleb128 0xa2
 31766 e55a 00000000 		.long	.LASF1552
 31767 e55e 08       		.byte	0x8
 31768 e55f 3402     		.value	0x234
 31769 e561 66E50000 		.long	0xe566
 31770 e565 00       		.byte	0
 31771 e566 11       		.uleb128 0x11
 31772 e567 AAAC0000 		.long	0xacaa
 31773 e56b 9801     		.uleb128 0x98
 31774 e56d 2A2A0000 		.long	0x2a2a
 31775 e571 03       		.byte	0x3
 31776 e572 7AE50000 		.long	0xe57a
 31777 e576 92E50000 		.long	0xe592
 31778 e57a 9901     		.uleb128 0x99
 31779 e57c 00000000 		.long	.LASF1535
 31780 e580 7EB60000 		.long	0xb67e
 31781 e584 A101     		.uleb128 0xa1
 31782 e586 5F5F6300 		.string	"__c"
 31783 e58a 01       		.byte	0x1
 31784 e58b 3304     		.value	0x433
 31785 e58d E4990000 		.long	0x99e4
 31786 e591 00       		.byte	0
 31787 e592 9801     		.uleb128 0x98
 31788 e594 85480000 		.long	0x4885
 31789 e598 02       		.byte	0x2
 31790 e599 A1E50000 		.long	0xe5a1
 31791 e59d C6E50000 		.long	0xe5c6
 31792 e5a1 9901     		.uleb128 0x99
 31793 e5a3 00000000 		.long	.LASF1535
 31794 e5a7 66BD0000 		.long	0xbd66
 31795 e5ab A101     		.uleb128 0xa1
 31796 e5ad 5F5F6E00 		.string	"__n"
 31797 e5b1 06       		.byte	0x6
 31798 e5b2 1501     		.value	0x115
 31799 e5b4 36480000 		.long	0x4836
GAS LISTING /tmp/ccmMnd7l.s 			page 860


 31800 e5b8 A101     		.uleb128 0xa1
 31801 e5ba 5F5F6100 		.string	"__a"
 31802 e5be 06       		.byte	0x6
 31803 e5bf 1501     		.value	0x115
 31804 e5c1 C6E50000 		.long	0xe5c6
 31805 e5c5 00       		.byte	0
 31806 e5c6 11       		.uleb128 0x11
 31807 e5c7 67AE0000 		.long	0xae67
 31808 e5cb 9801     		.uleb128 0x98
 31809 e5cd 69470000 		.long	0x4769
 31810 e5d1 03       		.byte	0x3
 31811 e5d2 DAE50000 		.long	0xe5da
 31812 e5d6 F1E50000 		.long	0xe5f1
 31813 e5da 9901     		.uleb128 0x99
 31814 e5dc 00000000 		.long	.LASF1535
 31815 e5e0 EDC90000 		.long	0xc9ed
 31816 e5e4 A001     		.uleb128 0xa0
 31817 e5e6 5F5F6E00 		.string	"__n"
 31818 e5ea 06       		.byte	0x6
 31819 e5eb B7       		.byte	0xb7
 31820 e5ec 85060000 		.long	0x685
 31821 e5f0 00       		.byte	0
 31822 e5f1 9801     		.uleb128 0x98
 31823 e5f3 DEAE0000 		.long	0xaede
 31824 e5f7 02       		.byte	0x2
 31825 e5f8 00E60000 		.long	0xe600
 31826 e5fc 23E60000 		.long	0xe623
 31827 e600 9901     		.uleb128 0x99
 31828 e602 00000000 		.long	.LASF1535
 31829 e606 78DA0000 		.long	0xda78
 31830 e60a 9901     		.uleb128 0x99
 31831 e60c 00000000 		.long	.LASF1549
 31832 e610 019A0000 		.long	0x9a01
 31833 e614 9B01     		.uleb128 0x9b
 31834 e616 9F01     		.uleb128 0x9f
 31835 e618 743100   		.string	"t1"
 31836 e61b 02       		.byte	0x2
 31837 e61c 30       		.byte	0x30
 31838 e61d 29000000 		.long	0x29
 31839 e621 00       		.byte	0
 31840 e622 00       		.byte	0
 31841 e623 AE01     		.uleb128 0xae
 31842 e625 6BE50000 		.long	0xe56b
 31843 e629 00000000 		.long	.LASF1608
 31844 e62d 00000000 		.quad	.LFB1390
 31844      00000000 
 31845 e635 03000000 		.quad	.LFE1390-.LFB1390
 31845      00000000 
 31846 e63d 01       		.uleb128 0x1
 31847 e63e 9C       		.byte	0x9c
 31848 e63f 47E60000 		.long	0xe647
 31849 e643 58E60000 		.long	0xe658
 31850 e647 AF01     		.uleb128 0xaf
 31851 e649 7AE50000 		.long	0xe57a
 31852 e64d 01       		.uleb128 0x1
 31853 e64e 55       		.byte	0x55
 31854 e64f AF01     		.uleb128 0xaf
GAS LISTING /tmp/ccmMnd7l.s 			page 861


 31855 e651 84E50000 		.long	0xe584
 31856 e655 01       		.uleb128 0x1
 31857 e656 54       		.byte	0x54
 31858 e657 00       		.byte	0
 31859 e658 B001     		.uleb128 0xb0
 31860 e65a 00000000 		.long	.LASF1604
 31861 e65e 02       		.byte	0x2
 31862 e65f 22       		.byte	0x22
 31863 e660 00000000 		.long	.LASF1606
 31864 e664 29000000 		.long	0x29
 31865 e668 00000000 		.quad	.LFB6033
 31865      00000000 
 31866 e670 05000000 		.quad	.LFE6033-.LFB6033
 31866      00000000 
 31867 e678 01       		.uleb128 0x1
 31868 e679 9C       		.byte	0x9c
 31869 e67a 8DE60000 		.long	0xe68d
 31870 e67e B101     		.uleb128 0xb1
 31871 e680 00000000 		.quad	.LVL1
 31871      00000000 
 31872 e688 D34F0100 		.long	0x14fd3
 31873 e68c 00       		.byte	0
 31874 e68d B201     		.uleb128 0xb2
 31875 e68f F22D0000 		.long	0x2df2
 31876 e693 03       		.byte	0x3
 31877 e694 C501     		.value	0x1c5
 31878 e696 00000000 		.quad	.LFB6548
 31878      00000000 
 31879 e69e 4D010000 		.quad	.LFE6548-.LFB6548
 31879      00000000 
 31880 e6a6 01       		.uleb128 0x1
 31881 e6a7 9C       		.byte	0x9c
 31882 e6a8 B0E60000 		.long	0xe6b0
 31883 e6ac 8AE70000 		.long	0xe78a
 31884 e6b0 B301     		.uleb128 0xb3
 31885 e6b2 00000000 		.long	.LASF1535
 31886 e6b6 51C90000 		.long	0xc951
 31887 e6ba 01       		.uleb128 0x1
 31888 e6bb 55       		.byte	0x55
 31889 e6bc B401     		.uleb128 0xb4
 31890 e6be 00000000 		.long	.Ldebug_ranges0+0
 31891 e6c2 B501     		.uleb128 0xb5
 31892 e6c4 5F5F7A00 		.string	"__z"
 31893 e6c8 03       		.byte	0x3
 31894 e6c9 CE01     		.value	0x1ce
 31895 e6cb C52C0000 		.long	0x2cc5
 31896 e6cf 00000000 		.long	.LLST0
 31897 e6d3 B601     		.uleb128 0xb6
 31898 e6d5 23E20000 		.long	0xe223
 31899 e6d9 00000000 		.quad	.LBB3171
 31899      00000000 
 31900 e6e1 DD000000 		.quad	.LBE3171-.LBB3171
 31900      00000000 
 31901 e6e9 03       		.byte	0x3
 31902 e6ea CB01     		.value	0x1cb
 31903 e6ec B701     		.uleb128 0xb7
 31904 e6ee 35E20000 		.long	0xe235
GAS LISTING /tmp/ccmMnd7l.s 			page 862


 31905 e6f2 B801     		.uleb128 0xb8
 31906 e6f4 00000000 		.quad	.LBB3172
 31906      00000000 
 31907 e6fc DD000000 		.quad	.LBE3172-.LBB3172
 31907      00000000 
 31908 e704 B901     		.uleb128 0xb9
 31909 e706 41E20000 		.long	0xe241
 31910 e70a B901     		.uleb128 0xb9
 31911 e70c 4EE20000 		.long	0xe24e
 31912 e710 BA01     		.uleb128 0xba
 31913 e712 5BE20000 		.long	0xe25b
 31914 e716 00000000 		.long	.LLST1
 31915 e71a BB01     		.uleb128 0xbb
 31916 e71c 00000000 		.quad	.LBB3173
 31916      00000000 
 31917 e724 58000000 		.quad	.LBE3173-.LBB3173
 31917      00000000 
 31918 e72c 52E70000 		.long	0xe752
 31919 e730 B901     		.uleb128 0xb9
 31920 e732 6EE20000 		.long	0xe26e
 31921 e736 B801     		.uleb128 0xb8
 31922 e738 00000000 		.quad	.LBB3174
 31922      00000000 
 31923 e740 36000000 		.quad	.LBE3174-.LBB3174
 31923      00000000 
 31924 e748 BC01     		.uleb128 0xbc
 31925 e74a 7DE20000 		.long	0xe27d
 31926 e74e 01       		.uleb128 0x1
 31927 e74f 50       		.byte	0x50
 31928 e750 00       		.byte	0
 31929 e751 00       		.byte	0
 31930 e752 B801     		.uleb128 0xb8
 31931 e754 00000000 		.quad	.LBB3175
 31931      00000000 
 31932 e75c 3B000000 		.quad	.LBE3175-.LBB3175
 31932      00000000 
 31933 e764 B901     		.uleb128 0xb9
 31934 e766 8EE20000 		.long	0xe28e
 31935 e76a B801     		.uleb128 0xb8
 31936 e76c 00000000 		.quad	.LBB3176
 31936      00000000 
 31937 e774 36000000 		.quad	.LBE3176-.LBB3176
 31937      00000000 
 31938 e77c BC01     		.uleb128 0xbc
 31939 e77e 9DE20000 		.long	0xe29d
 31940 e782 01       		.uleb128 0x1
 31941 e783 50       		.byte	0x50
 31942 e784 00       		.byte	0
 31943 e785 00       		.byte	0
 31944 e786 00       		.byte	0
 31945 e787 00       		.byte	0
 31946 e788 00       		.byte	0
 31947 e789 00       		.byte	0
 31948 e78a AE01     		.uleb128 0xae
 31949 e78c AEE20000 		.long	0xe2ae
 31950 e790 00000000 		.long	.LASF1609
 31951 e794 00000000 		.quad	.LFB6521
GAS LISTING /tmp/ccmMnd7l.s 			page 863


 31951      00000000 
 31952 e79c 31040000 		.quad	.LFE6521-.LFB6521
 31952      00000000 
 31953 e7a4 01       		.uleb128 0x1
 31954 e7a5 9C       		.byte	0x9c
 31955 e7a6 AEE70000 		.long	0xe7ae
 31956 e7aa 54F00000 		.long	0xf054
 31957 e7ae BD01     		.uleb128 0xbd
 31958 e7b0 C6E20000 		.long	0xe2c6
 31959 e7b4 00000000 		.long	.LLST2
 31960 e7b8 BD01     		.uleb128 0xbd
 31961 e7ba D0E20000 		.long	0xe2d0
 31962 e7be 00000000 		.long	.LLST3
 31963 e7c2 BD01     		.uleb128 0xbd
 31964 e7c4 DDE20000 		.long	0xe2dd
 31965 e7c8 00000000 		.long	.LLST4
 31966 e7cc B401     		.uleb128 0xb4
 31967 e7ce 00000000 		.long	.Ldebug_ranges0+0x30
 31968 e7d2 BE01     		.uleb128 0xbe
 31969 e7d4 FCE20000 		.long	0xe2fc
 31970 e7d8 00       		.byte	0
 31971 e7d9 BF01     		.uleb128 0xbf
 31972 e7db 0EE30000 		.long	0xe30e
 31973 e7df FFFFFFFF 		.long	0xffffffff
 31974 e7e3 BF01     		.uleb128 0xbf
 31975 e7e5 1BE30000 		.long	0xe31b
 31976 e7e9 FFFFFFFF 		.long	0xffffffff
 31977 e7ed BA01     		.uleb128 0xba
 31978 e7ef 28E30000 		.long	0xe328
 31979 e7f3 00000000 		.long	.LLST5
 31980 e7f7 BA01     		.uleb128 0xba
 31981 e7f9 35E30000 		.long	0xe335
 31982 e7fd 00000000 		.long	.LLST6
 31983 e801 BB01     		.uleb128 0xbb
 31984 e803 00000000 		.quad	.LBB3180
 31984      00000000 
 31985 e80b 2A000000 		.quad	.LBE3180-.LBB3180
 31985      00000000 
 31986 e813 4CE80000 		.long	0xe84c
 31987 e817 BA01     		.uleb128 0xba
 31988 e819 48E30000 		.long	0xe348
 31989 e81d 00000000 		.long	.LLST7
 31990 e821 BA01     		.uleb128 0xba
 31991 e823 55E30000 		.long	0xe355
 31992 e827 00000000 		.long	.LLST8
 31993 e82b BA01     		.uleb128 0xba
 31994 e82d 62E30000 		.long	0xe362
 31995 e831 00000000 		.long	.LLST9
 31996 e835 C001     		.uleb128 0xc0
 31997 e837 00000000 		.quad	.LVL23
 31997      00000000 
 31998 e83f 8DE60000 		.long	0xe68d
 31999 e843 C101     		.uleb128 0xc1
 32000 e845 01       		.uleb128 0x1
 32001 e846 55       		.byte	0x55
 32002 e847 02       		.uleb128 0x2
 32003 e848 73       		.byte	0x73
GAS LISTING /tmp/ccmMnd7l.s 			page 864


 32004 e849 00       		.sleb128 0
 32005 e84a 00       		.byte	0
 32006 e84b 00       		.byte	0
 32007 e84c BB01     		.uleb128 0xbb
 32008 e84e 00000000 		.quad	.LBB3182
 32008      00000000 
 32009 e856 54030000 		.quad	.LBE3182-.LBB3182
 32009      00000000 
 32010 e85e 3CF00000 		.long	0xf03c
 32011 e862 BA01     		.uleb128 0xba
 32012 e864 72E30000 		.long	0xe372
 32013 e868 00000000 		.long	.LLST10
 32014 e86c B401     		.uleb128 0xb4
 32015 e86e 00000000 		.long	.Ldebug_ranges0+0x70
 32016 e872 BA01     		.uleb128 0xba
 32017 e874 81E30000 		.long	0xe381
 32018 e878 00000000 		.long	.LLST11
 32019 e87c C201     		.uleb128 0xc2
 32020 e87e AEE20000 		.long	0xe2ae
 32021 e882 00000000 		.quad	.LBB3184
 32021      00000000 
 32022 e88a 00000000 		.long	.Ldebug_ranges0+0xa0
 32023 e88e 03       		.byte	0x3
 32024 e88f A103     		.value	0x3a1
 32025 e891 24F00000 		.long	0xf024
 32026 e895 B701     		.uleb128 0xb7
 32027 e897 DDE20000 		.long	0xe2dd
 32028 e89b BD01     		.uleb128 0xbd
 32029 e89d D0E20000 		.long	0xe2d0
 32030 e8a1 00000000 		.long	.LLST13
 32031 e8a5 BD01     		.uleb128 0xbd
 32032 e8a7 C6E20000 		.long	0xe2c6
 32033 e8ab 00000000 		.long	.LLST14
 32034 e8af B401     		.uleb128 0xb4
 32035 e8b1 00000000 		.long	.Ldebug_ranges0+0xa0
 32036 e8b5 BA01     		.uleb128 0xba
 32037 e8b7 FCE20000 		.long	0xe2fc
 32038 e8bb 00000000 		.long	.LLST15
 32039 e8bf BA01     		.uleb128 0xba
 32040 e8c1 0EE30000 		.long	0xe30e
 32041 e8c5 00000000 		.long	.LLST16
 32042 e8c9 BA01     		.uleb128 0xba
 32043 e8cb 1BE30000 		.long	0xe31b
 32044 e8cf 00000000 		.long	.LLST16
 32045 e8d3 BA01     		.uleb128 0xba
 32046 e8d5 28E30000 		.long	0xe328
 32047 e8d9 00000000 		.long	.LLST18
 32048 e8dd BA01     		.uleb128 0xba
 32049 e8df 35E30000 		.long	0xe335
 32050 e8e3 00000000 		.long	.LLST19
 32051 e8e7 C301     		.uleb128 0xc3
 32052 e8e9 00000000 		.long	.Ldebug_ranges0+0xd0
 32053 e8ed 26E90000 		.long	0xe926
 32054 e8f1 BA01     		.uleb128 0xba
 32055 e8f3 48E30000 		.long	0xe348
 32056 e8f7 00000000 		.long	.LLST20
 32057 e8fb BA01     		.uleb128 0xba
GAS LISTING /tmp/ccmMnd7l.s 			page 865


 32058 e8fd 55E30000 		.long	0xe355
 32059 e901 00000000 		.long	.LLST21
 32060 e905 BA01     		.uleb128 0xba
 32061 e907 62E30000 		.long	0xe362
 32062 e90b 00000000 		.long	.LLST22
 32063 e90f C001     		.uleb128 0xc0
 32064 e911 00000000 		.quad	.LVL33
 32064      00000000 
 32065 e919 8DE60000 		.long	0xe68d
 32066 e91d C101     		.uleb128 0xc1
 32067 e91f 01       		.uleb128 0x1
 32068 e920 55       		.byte	0x55
 32069 e921 02       		.uleb128 0x2
 32070 e922 73       		.byte	0x73
 32071 e923 00       		.sleb128 0
 32072 e924 00       		.byte	0
 32073 e925 00       		.byte	0
 32074 e926 B401     		.uleb128 0xb4
 32075 e928 00000000 		.long	.Ldebug_ranges0+0x100
 32076 e92c BA01     		.uleb128 0xba
 32077 e92e 72E30000 		.long	0xe372
 32078 e932 00000000 		.long	.LLST23
 32079 e936 B401     		.uleb128 0xb4
 32080 e938 00000000 		.long	.Ldebug_ranges0+0x130
 32081 e93c BA01     		.uleb128 0xba
 32082 e93e 81E30000 		.long	0xe381
 32083 e942 00000000 		.long	.LLST24
 32084 e946 C201     		.uleb128 0xc2
 32085 e948 AEE20000 		.long	0xe2ae
 32086 e94c 00000000 		.quad	.LBB3191
 32086      00000000 
 32087 e954 00000000 		.long	.Ldebug_ranges0+0x170
 32088 e958 03       		.byte	0x3
 32089 e959 A103     		.value	0x3a1
 32090 e95b 0AF00000 		.long	0xf00a
 32091 e95f B701     		.uleb128 0xb7
 32092 e961 DDE20000 		.long	0xe2dd
 32093 e965 BD01     		.uleb128 0xbd
 32094 e967 D0E20000 		.long	0xe2d0
 32095 e96b 00000000 		.long	.LLST26
 32096 e96f BD01     		.uleb128 0xbd
 32097 e971 C6E20000 		.long	0xe2c6
 32098 e975 00000000 		.long	.LLST27
 32099 e979 B401     		.uleb128 0xb4
 32100 e97b 00000000 		.long	.Ldebug_ranges0+0x170
 32101 e97f BA01     		.uleb128 0xba
 32102 e981 FCE20000 		.long	0xe2fc
 32103 e985 00000000 		.long	.LLST28
 32104 e989 BA01     		.uleb128 0xba
 32105 e98b 0EE30000 		.long	0xe30e
 32106 e98f 00000000 		.long	.LLST29
 32107 e993 BA01     		.uleb128 0xba
 32108 e995 1BE30000 		.long	0xe31b
 32109 e999 00000000 		.long	.LLST29
 32110 e99d BA01     		.uleb128 0xba
 32111 e99f 28E30000 		.long	0xe328
 32112 e9a3 00000000 		.long	.LLST31
GAS LISTING /tmp/ccmMnd7l.s 			page 866


 32113 e9a7 BA01     		.uleb128 0xba
 32114 e9a9 35E30000 		.long	0xe335
 32115 e9ad 00000000 		.long	.LLST32
 32116 e9b1 C301     		.uleb128 0xc3
 32117 e9b3 00000000 		.long	.Ldebug_ranges0+0x1b0
 32118 e9b7 C1EF0000 		.long	0xefc1
 32119 e9bb BA01     		.uleb128 0xba
 32120 e9bd 72E30000 		.long	0xe372
 32121 e9c1 00000000 		.long	.LLST33
 32122 e9c5 B401     		.uleb128 0xb4
 32123 e9c7 00000000 		.long	.Ldebug_ranges0+0x1f0
 32124 e9cb BA01     		.uleb128 0xba
 32125 e9cd 81E30000 		.long	0xe381
 32126 e9d1 00000000 		.long	.LLST34
 32127 e9d5 C201     		.uleb128 0xc2
 32128 e9d7 AEE20000 		.long	0xe2ae
 32129 e9db 00000000 		.quad	.LBB3196
 32129      00000000 
 32130 e9e3 00000000 		.long	.Ldebug_ranges0+0x240
 32131 e9e7 03       		.byte	0x3
 32132 e9e8 A103     		.value	0x3a1
 32133 e9ea A9EF0000 		.long	0xefa9
 32134 e9ee B701     		.uleb128 0xb7
 32135 e9f0 DDE20000 		.long	0xe2dd
 32136 e9f4 BD01     		.uleb128 0xbd
 32137 e9f6 D0E20000 		.long	0xe2d0
 32138 e9fa 00000000 		.long	.LLST36
 32139 e9fe BD01     		.uleb128 0xbd
 32140 ea00 C6E20000 		.long	0xe2c6
 32141 ea04 00000000 		.long	.LLST37
 32142 ea08 B401     		.uleb128 0xb4
 32143 ea0a 00000000 		.long	.Ldebug_ranges0+0x240
 32144 ea0e BA01     		.uleb128 0xba
 32145 ea10 FCE20000 		.long	0xe2fc
 32146 ea14 00000000 		.long	.LLST38
 32147 ea18 BA01     		.uleb128 0xba
 32148 ea1a 0EE30000 		.long	0xe30e
 32149 ea1e 00000000 		.long	.LLST39
 32150 ea22 BA01     		.uleb128 0xba
 32151 ea24 1BE30000 		.long	0xe31b
 32152 ea28 00000000 		.long	.LLST39
 32153 ea2c BA01     		.uleb128 0xba
 32154 ea2e 28E30000 		.long	0xe328
 32155 ea32 00000000 		.long	.LLST41
 32156 ea36 BA01     		.uleb128 0xba
 32157 ea38 35E30000 		.long	0xe335
 32158 ea3c 00000000 		.long	.LLST42
 32159 ea40 C301     		.uleb128 0xc3
 32160 ea42 00000000 		.long	.Ldebug_ranges0+0x290
 32161 ea46 6CEF0000 		.long	0xef6c
 32162 ea4a BA01     		.uleb128 0xba
 32163 ea4c 72E30000 		.long	0xe372
 32164 ea50 00000000 		.long	.LLST43
 32165 ea54 B401     		.uleb128 0xb4
 32166 ea56 00000000 		.long	.Ldebug_ranges0+0x2d0
 32167 ea5a BA01     		.uleb128 0xba
 32168 ea5c 81E30000 		.long	0xe381
GAS LISTING /tmp/ccmMnd7l.s 			page 867


 32169 ea60 00000000 		.long	.LLST44
 32170 ea64 C201     		.uleb128 0xc2
 32171 ea66 AEE20000 		.long	0xe2ae
 32172 ea6a 00000000 		.quad	.LBB3201
 32172      00000000 
 32173 ea72 00000000 		.long	.Ldebug_ranges0+0x320
 32174 ea76 03       		.byte	0x3
 32175 ea77 A103     		.value	0x3a1
 32176 ea79 54EF0000 		.long	0xef54
 32177 ea7d B701     		.uleb128 0xb7
 32178 ea7f DDE20000 		.long	0xe2dd
 32179 ea83 BD01     		.uleb128 0xbd
 32180 ea85 D0E20000 		.long	0xe2d0
 32181 ea89 00000000 		.long	.LLST46
 32182 ea8d BD01     		.uleb128 0xbd
 32183 ea8f C6E20000 		.long	0xe2c6
 32184 ea93 00000000 		.long	.LLST47
 32185 ea97 B401     		.uleb128 0xb4
 32186 ea99 00000000 		.long	.Ldebug_ranges0+0x320
 32187 ea9d BA01     		.uleb128 0xba
 32188 ea9f FCE20000 		.long	0xe2fc
 32189 eaa3 00000000 		.long	.LLST48
 32190 eaa7 BA01     		.uleb128 0xba
 32191 eaa9 0EE30000 		.long	0xe30e
 32192 eaad 00000000 		.long	.LLST49
 32193 eab1 BA01     		.uleb128 0xba
 32194 eab3 1BE30000 		.long	0xe31b
 32195 eab7 00000000 		.long	.LLST49
 32196 eabb BA01     		.uleb128 0xba
 32197 eabd 28E30000 		.long	0xe328
 32198 eac1 00000000 		.long	.LLST51
 32199 eac5 BA01     		.uleb128 0xba
 32200 eac7 35E30000 		.long	0xe335
 32201 eacb 00000000 		.long	.LLST52
 32202 eacf C301     		.uleb128 0xc3
 32203 ead1 00000000 		.long	.Ldebug_ranges0+0x370
 32204 ead5 17EF0000 		.long	0xef17
 32205 ead9 BA01     		.uleb128 0xba
 32206 eadb 72E30000 		.long	0xe372
 32207 eadf 00000000 		.long	.LLST53
 32208 eae3 B401     		.uleb128 0xb4
 32209 eae5 00000000 		.long	.Ldebug_ranges0+0x3b0
 32210 eae9 BA01     		.uleb128 0xba
 32211 eaeb 81E30000 		.long	0xe381
 32212 eaef 00000000 		.long	.LLST54
 32213 eaf3 C201     		.uleb128 0xc2
 32214 eaf5 AEE20000 		.long	0xe2ae
 32215 eaf9 00000000 		.quad	.LBB3206
 32215      00000000 
 32216 eb01 00000000 		.long	.Ldebug_ranges0+0x400
 32217 eb05 03       		.byte	0x3
 32218 eb06 A103     		.value	0x3a1
 32219 eb08 FFEE0000 		.long	0xeeff
 32220 eb0c B701     		.uleb128 0xb7
 32221 eb0e DDE20000 		.long	0xe2dd
 32222 eb12 BD01     		.uleb128 0xbd
 32223 eb14 D0E20000 		.long	0xe2d0
GAS LISTING /tmp/ccmMnd7l.s 			page 868


 32224 eb18 00000000 		.long	.LLST56
 32225 eb1c BD01     		.uleb128 0xbd
 32226 eb1e C6E20000 		.long	0xe2c6
 32227 eb22 00000000 		.long	.LLST57
 32228 eb26 B401     		.uleb128 0xb4
 32229 eb28 00000000 		.long	.Ldebug_ranges0+0x400
 32230 eb2c BA01     		.uleb128 0xba
 32231 eb2e FCE20000 		.long	0xe2fc
 32232 eb32 00000000 		.long	.LLST58
 32233 eb36 BA01     		.uleb128 0xba
 32234 eb38 0EE30000 		.long	0xe30e
 32235 eb3c 00000000 		.long	.LLST59
 32236 eb40 BA01     		.uleb128 0xba
 32237 eb42 1BE30000 		.long	0xe31b
 32238 eb46 00000000 		.long	.LLST59
 32239 eb4a BA01     		.uleb128 0xba
 32240 eb4c 28E30000 		.long	0xe328
 32241 eb50 00000000 		.long	.LLST61
 32242 eb54 BA01     		.uleb128 0xba
 32243 eb56 35E30000 		.long	0xe335
 32244 eb5a 00000000 		.long	.LLST62
 32245 eb5e C301     		.uleb128 0xc3
 32246 eb60 00000000 		.long	.Ldebug_ranges0+0x450
 32247 eb64 C2EE0000 		.long	0xeec2
 32248 eb68 BA01     		.uleb128 0xba
 32249 eb6a 72E30000 		.long	0xe372
 32250 eb6e 00000000 		.long	.LLST63
 32251 eb72 B401     		.uleb128 0xb4
 32252 eb74 00000000 		.long	.Ldebug_ranges0+0x490
 32253 eb78 BA01     		.uleb128 0xba
 32254 eb7a 81E30000 		.long	0xe381
 32255 eb7e 00000000 		.long	.LLST64
 32256 eb82 C201     		.uleb128 0xc2
 32257 eb84 AEE20000 		.long	0xe2ae
 32258 eb88 00000000 		.quad	.LBB3211
 32258      00000000 
 32259 eb90 00000000 		.long	.Ldebug_ranges0+0x4e0
 32260 eb94 03       		.byte	0x3
 32261 eb95 A103     		.value	0x3a1
 32262 eb97 AAEE0000 		.long	0xeeaa
 32263 eb9b B701     		.uleb128 0xb7
 32264 eb9d DDE20000 		.long	0xe2dd
 32265 eba1 BD01     		.uleb128 0xbd
 32266 eba3 D0E20000 		.long	0xe2d0
 32267 eba7 00000000 		.long	.LLST66
 32268 ebab BD01     		.uleb128 0xbd
 32269 ebad C6E20000 		.long	0xe2c6
 32270 ebb1 00000000 		.long	.LLST67
 32271 ebb5 B401     		.uleb128 0xb4
 32272 ebb7 00000000 		.long	.Ldebug_ranges0+0x4e0
 32273 ebbb BA01     		.uleb128 0xba
 32274 ebbd FCE20000 		.long	0xe2fc
 32275 ebc1 00000000 		.long	.LLST68
 32276 ebc5 BA01     		.uleb128 0xba
 32277 ebc7 0EE30000 		.long	0xe30e
 32278 ebcb 00000000 		.long	.LLST69
 32279 ebcf BA01     		.uleb128 0xba
GAS LISTING /tmp/ccmMnd7l.s 			page 869


 32280 ebd1 1BE30000 		.long	0xe31b
 32281 ebd5 00000000 		.long	.LLST69
 32282 ebd9 BA01     		.uleb128 0xba
 32283 ebdb 28E30000 		.long	0xe328
 32284 ebdf 00000000 		.long	.LLST71
 32285 ebe3 BA01     		.uleb128 0xba
 32286 ebe5 35E30000 		.long	0xe335
 32287 ebe9 00000000 		.long	.LLST72
 32288 ebed C301     		.uleb128 0xc3
 32289 ebef 00000000 		.long	.Ldebug_ranges0+0x530
 32290 ebf3 6DEE0000 		.long	0xee6d
 32291 ebf7 BA01     		.uleb128 0xba
 32292 ebf9 72E30000 		.long	0xe372
 32293 ebfd 00000000 		.long	.LLST73
 32294 ec01 B401     		.uleb128 0xb4
 32295 ec03 00000000 		.long	.Ldebug_ranges0+0x560
 32296 ec07 BA01     		.uleb128 0xba
 32297 ec09 81E30000 		.long	0xe381
 32298 ec0d 00000000 		.long	.LLST74
 32299 ec11 C201     		.uleb128 0xc2
 32300 ec13 AEE20000 		.long	0xe2ae
 32301 ec17 00000000 		.quad	.LBB3216
 32301      00000000 
 32302 ec1f 00000000 		.long	.Ldebug_ranges0+0x5a0
 32303 ec23 03       		.byte	0x3
 32304 ec24 A103     		.value	0x3a1
 32305 ec26 55EE0000 		.long	0xee55
 32306 ec2a B701     		.uleb128 0xb7
 32307 ec2c DDE20000 		.long	0xe2dd
 32308 ec30 BD01     		.uleb128 0xbd
 32309 ec32 D0E20000 		.long	0xe2d0
 32310 ec36 00000000 		.long	.LLST76
 32311 ec3a BD01     		.uleb128 0xbd
 32312 ec3c C6E20000 		.long	0xe2c6
 32313 ec40 00000000 		.long	.LLST77
 32314 ec44 B401     		.uleb128 0xb4
 32315 ec46 00000000 		.long	.Ldebug_ranges0+0x5a0
 32316 ec4a BA01     		.uleb128 0xba
 32317 ec4c FCE20000 		.long	0xe2fc
 32318 ec50 00000000 		.long	.LLST78
 32319 ec54 BA01     		.uleb128 0xba
 32320 ec56 0EE30000 		.long	0xe30e
 32321 ec5a 00000000 		.long	.LLST79
 32322 ec5e BA01     		.uleb128 0xba
 32323 ec60 1BE30000 		.long	0xe31b
 32324 ec64 00000000 		.long	.LLST79
 32325 ec68 BA01     		.uleb128 0xba
 32326 ec6a 28E30000 		.long	0xe328
 32327 ec6e 00000000 		.long	.LLST81
 32328 ec72 BA01     		.uleb128 0xba
 32329 ec74 35E30000 		.long	0xe335
 32330 ec78 00000000 		.long	.LLST82
 32331 ec7c C301     		.uleb128 0xc3
 32332 ec7e 00000000 		.long	.Ldebug_ranges0+0x5e0
 32333 ec82 18EE0000 		.long	0xee18
 32334 ec86 BA01     		.uleb128 0xba
 32335 ec88 72E30000 		.long	0xe372
GAS LISTING /tmp/ccmMnd7l.s 			page 870


 32336 ec8c 00000000 		.long	.LLST83
 32337 ec90 B401     		.uleb128 0xb4
 32338 ec92 00000000 		.long	.Ldebug_ranges0+0x610
 32339 ec96 BA01     		.uleb128 0xba
 32340 ec98 81E30000 		.long	0xe381
 32341 ec9c 00000000 		.long	.LLST84
 32342 eca0 C201     		.uleb128 0xc2
 32343 eca2 AEE20000 		.long	0xe2ae
 32344 eca6 00000000 		.quad	.LBB3221
 32344      00000000 
 32345 ecae 00000000 		.long	.Ldebug_ranges0+0x650
 32346 ecb2 03       		.byte	0x3
 32347 ecb3 A103     		.value	0x3a1
 32348 ecb5 00EE0000 		.long	0xee00
 32349 ecb9 B701     		.uleb128 0xb7
 32350 ecbb DDE20000 		.long	0xe2dd
 32351 ecbf BD01     		.uleb128 0xbd
 32352 ecc1 D0E20000 		.long	0xe2d0
 32353 ecc5 00000000 		.long	.LLST86
 32354 ecc9 BD01     		.uleb128 0xbd
 32355 eccb C6E20000 		.long	0xe2c6
 32356 eccf 00000000 		.long	.LLST87
 32357 ecd3 B401     		.uleb128 0xb4
 32358 ecd5 00000000 		.long	.Ldebug_ranges0+0x650
 32359 ecd9 BA01     		.uleb128 0xba
 32360 ecdb FCE20000 		.long	0xe2fc
 32361 ecdf 00000000 		.long	.LLST88
 32362 ece3 BA01     		.uleb128 0xba
 32363 ece5 0EE30000 		.long	0xe30e
 32364 ece9 00000000 		.long	.LLST89
 32365 eced BA01     		.uleb128 0xba
 32366 ecef 1BE30000 		.long	0xe31b
 32367 ecf3 00000000 		.long	.LLST89
 32368 ecf7 BA01     		.uleb128 0xba
 32369 ecf9 28E30000 		.long	0xe328
 32370 ecfd 00000000 		.long	.LLST91
 32371 ed01 BA01     		.uleb128 0xba
 32372 ed03 35E30000 		.long	0xe335
 32373 ed07 00000000 		.long	.LLST92
 32374 ed0b C301     		.uleb128 0xc3
 32375 ed0d 00000000 		.long	.Ldebug_ranges0+0x690
 32376 ed11 4AED0000 		.long	0xed4a
 32377 ed15 BA01     		.uleb128 0xba
 32378 ed17 48E30000 		.long	0xe348
 32379 ed1b 00000000 		.long	.LLST93
 32380 ed1f BA01     		.uleb128 0xba
 32381 ed21 55E30000 		.long	0xe355
 32382 ed25 00000000 		.long	.LLST94
 32383 ed29 BA01     		.uleb128 0xba
 32384 ed2b 62E30000 		.long	0xe362
 32385 ed2f 00000000 		.long	.LLST95
 32386 ed33 C001     		.uleb128 0xc0
 32387 ed35 00000000 		.quad	.LVL110
 32387      00000000 
 32388 ed3d 8DE60000 		.long	0xe68d
 32389 ed41 C101     		.uleb128 0xc1
 32390 ed43 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 871


 32391 ed44 55       		.byte	0x55
 32392 ed45 02       		.uleb128 0x2
 32393 ed46 73       		.byte	0x73
 32394 ed47 00       		.sleb128 0
 32395 ed48 00       		.byte	0
 32396 ed49 00       		.byte	0
 32397 ed4a B801     		.uleb128 0xb8
 32398 ed4c 00000000 		.quad	.LBB3226
 32398      00000000 
 32399 ed54 3C000000 		.quad	.LBE3226-.LBB3226
 32399      00000000 
 32400 ed5c BA01     		.uleb128 0xba
 32401 ed5e 72E30000 		.long	0xe372
 32402 ed62 00000000 		.long	.LLST96
 32403 ed66 B801     		.uleb128 0xb8
 32404 ed68 00000000 		.quad	.LBB3227
 32404      00000000 
 32405 ed70 30000000 		.quad	.LBE3227-.LBB3227
 32405      00000000 
 32406 ed78 BA01     		.uleb128 0xba
 32407 ed7a 81E30000 		.long	0xe381
 32408 ed7e 00000000 		.long	.LLST97
 32409 ed82 C401     		.uleb128 0xc4
 32410 ed84 5EC10000 		.long	0xc15e
 32411 ed88 00000000 		.quad	.LBB3228
 32411      00000000 
 32412 ed90 13000000 		.quad	.LBE3228-.LBB3228
 32412      00000000 
 32413 ed98 03       		.byte	0x3
 32414 ed99 A103     		.value	0x3a1
 32415 ed9b BEED0000 		.long	0xedbe
 32416 ed9f BD01     		.uleb128 0xbd
 32417 eda1 84C10000 		.long	0xc184
 32418 eda5 00000000 		.long	.LLST98
 32419 eda9 BD01     		.uleb128 0xbd
 32420 edab 77C10000 		.long	0xc177
 32421 edaf 00000000 		.long	.LLST99
 32422 edb3 BD01     		.uleb128 0xbd
 32423 edb5 6DC10000 		.long	0xc16d
 32424 edb9 00000000 		.long	.LLST100
 32425 edbd 00       		.byte	0
 32426 edbe C501     		.uleb128 0xc5
 32427 edc0 00000000 		.quad	.LVL117
 32427      00000000 
 32428 edc8 AEE20000 		.long	0xe2ae
 32429 edcc E6ED0000 		.long	0xede6
 32430 edd0 C101     		.uleb128 0xc1
 32431 edd2 01       		.uleb128 0x1
 32432 edd3 55       		.byte	0x55
 32433 edd4 02       		.uleb128 0x2
 32434 edd5 7E       		.byte	0x7e
 32435 edd6 00       		.sleb128 0
 32436 edd7 C101     		.uleb128 0xc1
 32437 edd9 01       		.uleb128 0x1
 32438 edda 54       		.byte	0x54
 32439 eddb 02       		.uleb128 0x2
 32440 eddc 73       		.byte	0x73
GAS LISTING /tmp/ccmMnd7l.s 			page 872


 32441 eddd 00       		.sleb128 0
 32442 edde C101     		.uleb128 0xc1
 32443 ede0 01       		.uleb128 0x1
 32444 ede1 51       		.byte	0x51
 32445 ede2 02       		.uleb128 0x2
 32446 ede3 7F       		.byte	0x7f
 32447 ede4 00       		.sleb128 0
 32448 ede5 00       		.byte	0
 32449 ede6 C001     		.uleb128 0xc0
 32450 ede8 00000000 		.quad	.LVL119
 32450      00000000 
 32451 edf0 8DE60000 		.long	0xe68d
 32452 edf4 C101     		.uleb128 0xc1
 32453 edf6 01       		.uleb128 0x1
 32454 edf7 55       		.byte	0x55
 32455 edf8 02       		.uleb128 0x2
 32456 edf9 73       		.byte	0x73
 32457 edfa 00       		.sleb128 0
 32458 edfb 00       		.byte	0
 32459 edfc 00       		.byte	0
 32460 edfd 00       		.byte	0
 32461 edfe 00       		.byte	0
 32462 edff 00       		.byte	0
 32463 ee00 C001     		.uleb128 0xc0
 32464 ee02 00000000 		.quad	.LVL114
 32464      00000000 
 32465 ee0a 8DE60000 		.long	0xe68d
 32466 ee0e C101     		.uleb128 0xc1
 32467 ee10 01       		.uleb128 0x1
 32468 ee11 55       		.byte	0x55
 32469 ee12 02       		.uleb128 0x2
 32470 ee13 73       		.byte	0x73
 32471 ee14 00       		.sleb128 0
 32472 ee15 00       		.byte	0
 32473 ee16 00       		.byte	0
 32474 ee17 00       		.byte	0
 32475 ee18 B401     		.uleb128 0xb4
 32476 ee1a 00000000 		.long	.Ldebug_ranges0+0x6c0
 32477 ee1e BA01     		.uleb128 0xba
 32478 ee20 48E30000 		.long	0xe348
 32479 ee24 00000000 		.long	.LLST101
 32480 ee28 BA01     		.uleb128 0xba
 32481 ee2a 55E30000 		.long	0xe355
 32482 ee2e 00000000 		.long	.LLST102
 32483 ee32 BA01     		.uleb128 0xba
 32484 ee34 62E30000 		.long	0xe362
 32485 ee38 00000000 		.long	.LLST103
 32486 ee3c C001     		.uleb128 0xc0
 32487 ee3e 00000000 		.quad	.LVL99
 32487      00000000 
 32488 ee46 8DE60000 		.long	0xe68d
 32489 ee4a C101     		.uleb128 0xc1
 32490 ee4c 01       		.uleb128 0x1
 32491 ee4d 55       		.byte	0x55
 32492 ee4e 02       		.uleb128 0x2
 32493 ee4f 73       		.byte	0x73
 32494 ee50 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 873


 32495 ee51 00       		.byte	0
 32496 ee52 00       		.byte	0
 32497 ee53 00       		.byte	0
 32498 ee54 00       		.byte	0
 32499 ee55 C001     		.uleb128 0xc0
 32500 ee57 00000000 		.quad	.LVL103
 32500      00000000 
 32501 ee5f 8DE60000 		.long	0xe68d
 32502 ee63 C101     		.uleb128 0xc1
 32503 ee65 01       		.uleb128 0x1
 32504 ee66 55       		.byte	0x55
 32505 ee67 02       		.uleb128 0x2
 32506 ee68 73       		.byte	0x73
 32507 ee69 00       		.sleb128 0
 32508 ee6a 00       		.byte	0
 32509 ee6b 00       		.byte	0
 32510 ee6c 00       		.byte	0
 32511 ee6d B401     		.uleb128 0xb4
 32512 ee6f 00000000 		.long	.Ldebug_ranges0+0x6f0
 32513 ee73 BA01     		.uleb128 0xba
 32514 ee75 48E30000 		.long	0xe348
 32515 ee79 00000000 		.long	.LLST104
 32516 ee7d BA01     		.uleb128 0xba
 32517 ee7f 55E30000 		.long	0xe355
 32518 ee83 00000000 		.long	.LLST105
 32519 ee87 BA01     		.uleb128 0xba
 32520 ee89 62E30000 		.long	0xe362
 32521 ee8d 00000000 		.long	.LLST106
 32522 ee91 C001     		.uleb128 0xc0
 32523 ee93 00000000 		.quad	.LVL92
 32523      00000000 
 32524 ee9b 8DE60000 		.long	0xe68d
 32525 ee9f C101     		.uleb128 0xc1
 32526 eea1 01       		.uleb128 0x1
 32527 eea2 55       		.byte	0x55
 32528 eea3 02       		.uleb128 0x2
 32529 eea4 73       		.byte	0x73
 32530 eea5 00       		.sleb128 0
 32531 eea6 00       		.byte	0
 32532 eea7 00       		.byte	0
 32533 eea8 00       		.byte	0
 32534 eea9 00       		.byte	0
 32535 eeaa C001     		.uleb128 0xc0
 32536 eeac 00000000 		.quad	.LVL87
 32536      00000000 
 32537 eeb4 8DE60000 		.long	0xe68d
 32538 eeb8 C101     		.uleb128 0xc1
 32539 eeba 01       		.uleb128 0x1
 32540 eebb 55       		.byte	0x55
 32541 eebc 02       		.uleb128 0x2
 32542 eebd 73       		.byte	0x73
 32543 eebe 00       		.sleb128 0
 32544 eebf 00       		.byte	0
 32545 eec0 00       		.byte	0
 32546 eec1 00       		.byte	0
 32547 eec2 B401     		.uleb128 0xb4
 32548 eec4 00000000 		.long	.Ldebug_ranges0+0x730
GAS LISTING /tmp/ccmMnd7l.s 			page 874


 32549 eec8 BA01     		.uleb128 0xba
 32550 eeca 48E30000 		.long	0xe348
 32551 eece 00000000 		.long	.LLST107
 32552 eed2 BA01     		.uleb128 0xba
 32553 eed4 55E30000 		.long	0xe355
 32554 eed8 00000000 		.long	.LLST108
 32555 eedc BA01     		.uleb128 0xba
 32556 eede 62E30000 		.long	0xe362
 32557 eee2 00000000 		.long	.LLST109
 32558 eee6 C001     		.uleb128 0xc0
 32559 eee8 00000000 		.quad	.LVL82
 32559      00000000 
 32560 eef0 8DE60000 		.long	0xe68d
 32561 eef4 C101     		.uleb128 0xc1
 32562 eef6 01       		.uleb128 0x1
 32563 eef7 55       		.byte	0x55
 32564 eef8 02       		.uleb128 0x2
 32565 eef9 73       		.byte	0x73
 32566 eefa 00       		.sleb128 0
 32567 eefb 00       		.byte	0
 32568 eefc 00       		.byte	0
 32569 eefd 00       		.byte	0
 32570 eefe 00       		.byte	0
 32571 eeff C001     		.uleb128 0xc0
 32572 ef01 00000000 		.quad	.LVL76
 32572      00000000 
 32573 ef09 8DE60000 		.long	0xe68d
 32574 ef0d C101     		.uleb128 0xc1
 32575 ef0f 01       		.uleb128 0x1
 32576 ef10 55       		.byte	0x55
 32577 ef11 02       		.uleb128 0x2
 32578 ef12 73       		.byte	0x73
 32579 ef13 00       		.sleb128 0
 32580 ef14 00       		.byte	0
 32581 ef15 00       		.byte	0
 32582 ef16 00       		.byte	0
 32583 ef17 B401     		.uleb128 0xb4
 32584 ef19 00000000 		.long	.Ldebug_ranges0+0x760
 32585 ef1d BA01     		.uleb128 0xba
 32586 ef1f 48E30000 		.long	0xe348
 32587 ef23 00000000 		.long	.LLST110
 32588 ef27 BA01     		.uleb128 0xba
 32589 ef29 55E30000 		.long	0xe355
 32590 ef2d 00000000 		.long	.LLST111
 32591 ef31 BA01     		.uleb128 0xba
 32592 ef33 62E30000 		.long	0xe362
 32593 ef37 00000000 		.long	.LLST112
 32594 ef3b C001     		.uleb128 0xc0
 32595 ef3d 00000000 		.quad	.LVL71
 32595      00000000 
 32596 ef45 8DE60000 		.long	0xe68d
 32597 ef49 C101     		.uleb128 0xc1
 32598 ef4b 01       		.uleb128 0x1
 32599 ef4c 55       		.byte	0x55
 32600 ef4d 02       		.uleb128 0x2
 32601 ef4e 73       		.byte	0x73
 32602 ef4f 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 875


 32603 ef50 00       		.byte	0
 32604 ef51 00       		.byte	0
 32605 ef52 00       		.byte	0
 32606 ef53 00       		.byte	0
 32607 ef54 C001     		.uleb128 0xc0
 32608 ef56 00000000 		.quad	.LVL65
 32608      00000000 
 32609 ef5e 8DE60000 		.long	0xe68d
 32610 ef62 C101     		.uleb128 0xc1
 32611 ef64 01       		.uleb128 0x1
 32612 ef65 55       		.byte	0x55
 32613 ef66 02       		.uleb128 0x2
 32614 ef67 73       		.byte	0x73
 32615 ef68 00       		.sleb128 0
 32616 ef69 00       		.byte	0
 32617 ef6a 00       		.byte	0
 32618 ef6b 00       		.byte	0
 32619 ef6c B401     		.uleb128 0xb4
 32620 ef6e 00000000 		.long	.Ldebug_ranges0+0x790
 32621 ef72 BA01     		.uleb128 0xba
 32622 ef74 48E30000 		.long	0xe348
 32623 ef78 00000000 		.long	.LLST113
 32624 ef7c BA01     		.uleb128 0xba
 32625 ef7e 55E30000 		.long	0xe355
 32626 ef82 00000000 		.long	.LLST114
 32627 ef86 BA01     		.uleb128 0xba
 32628 ef88 62E30000 		.long	0xe362
 32629 ef8c 00000000 		.long	.LLST115
 32630 ef90 C001     		.uleb128 0xc0
 32631 ef92 00000000 		.quad	.LVL60
 32631      00000000 
 32632 ef9a 8DE60000 		.long	0xe68d
 32633 ef9e C101     		.uleb128 0xc1
 32634 efa0 01       		.uleb128 0x1
 32635 efa1 55       		.byte	0x55
 32636 efa2 02       		.uleb128 0x2
 32637 efa3 73       		.byte	0x73
 32638 efa4 00       		.sleb128 0
 32639 efa5 00       		.byte	0
 32640 efa6 00       		.byte	0
 32641 efa7 00       		.byte	0
 32642 efa8 00       		.byte	0
 32643 efa9 C001     		.uleb128 0xc0
 32644 efab 00000000 		.quad	.LVL54
 32644      00000000 
 32645 efb3 8DE60000 		.long	0xe68d
 32646 efb7 C101     		.uleb128 0xc1
 32647 efb9 01       		.uleb128 0x1
 32648 efba 55       		.byte	0x55
 32649 efbb 02       		.uleb128 0x2
 32650 efbc 73       		.byte	0x73
 32651 efbd 00       		.sleb128 0
 32652 efbe 00       		.byte	0
 32653 efbf 00       		.byte	0
 32654 efc0 00       		.byte	0
 32655 efc1 B801     		.uleb128 0xb8
 32656 efc3 00000000 		.quad	.LBB3314
GAS LISTING /tmp/ccmMnd7l.s 			page 876


 32656      00000000 
 32657 efcb 2C000000 		.quad	.LBE3314-.LBB3314
 32657      00000000 
 32658 efd3 BA01     		.uleb128 0xba
 32659 efd5 48E30000 		.long	0xe348
 32660 efd9 00000000 		.long	.LLST116
 32661 efdd BA01     		.uleb128 0xba
 32662 efdf 55E30000 		.long	0xe355
 32663 efe3 00000000 		.long	.LLST117
 32664 efe7 BA01     		.uleb128 0xba
 32665 efe9 62E30000 		.long	0xe362
 32666 efed 00000000 		.long	.LLST118
 32667 eff1 C001     		.uleb128 0xc0
 32668 eff3 00000000 		.quad	.LVL44
 32668      00000000 
 32669 effb 8DE60000 		.long	0xe68d
 32670 efff C101     		.uleb128 0xc1
 32671 f001 01       		.uleb128 0x1
 32672 f002 55       		.byte	0x55
 32673 f003 02       		.uleb128 0x2
 32674 f004 73       		.byte	0x73
 32675 f005 00       		.sleb128 0
 32676 f006 00       		.byte	0
 32677 f007 00       		.byte	0
 32678 f008 00       		.byte	0
 32679 f009 00       		.byte	0
 32680 f00a C001     		.uleb128 0xc0
 32681 f00c 00000000 		.quad	.LVL48
 32681      00000000 
 32682 f014 8DE60000 		.long	0xe68d
 32683 f018 C101     		.uleb128 0xc1
 32684 f01a 01       		.uleb128 0x1
 32685 f01b 55       		.byte	0x55
 32686 f01c 02       		.uleb128 0x2
 32687 f01d 73       		.byte	0x73
 32688 f01e 00       		.sleb128 0
 32689 f01f 00       		.byte	0
 32690 f020 00       		.byte	0
 32691 f021 00       		.byte	0
 32692 f022 00       		.byte	0
 32693 f023 00       		.byte	0
 32694 f024 C001     		.uleb128 0xc0
 32695 f026 00000000 		.quad	.LVL37
 32695      00000000 
 32696 f02e 8DE60000 		.long	0xe68d
 32697 f032 C101     		.uleb128 0xc1
 32698 f034 01       		.uleb128 0x1
 32699 f035 55       		.byte	0x55
 32700 f036 02       		.uleb128 0x2
 32701 f037 73       		.byte	0x73
 32702 f038 00       		.sleb128 0
 32703 f039 00       		.byte	0
 32704 f03a 00       		.byte	0
 32705 f03b 00       		.byte	0
 32706 f03c C001     		.uleb128 0xc0
 32707 f03e 00000000 		.quad	.LVL123
 32707      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 877


 32708 f046 8DE60000 		.long	0xe68d
 32709 f04a C101     		.uleb128 0xc1
 32710 f04c 01       		.uleb128 0x1
 32711 f04d 55       		.byte	0x55
 32712 f04e 02       		.uleb128 0x2
 32713 f04f 73       		.byte	0x73
 32714 f050 00       		.sleb128 0
 32715 f051 00       		.byte	0
 32716 f052 00       		.byte	0
 32717 f053 00       		.byte	0
 32718 f054 B001     		.uleb128 0xb0
 32719 f056 00000000 		.long	.LASF1610
 32720 f05a 05       		.byte	0x5
 32721 f05b 31       		.byte	0x31
 32722 f05c 00000000 		.long	.LASF1611
 32723 f060 A0470000 		.long	0x47a0
 32724 f064 00000000 		.quad	.LFB6050
 32724      00000000 
 32725 f06c 8D030000 		.quad	.LFE6050-.LFB6050
 32725      00000000 
 32726 f074 01       		.uleb128 0x1
 32727 f075 9C       		.byte	0x9c
 32728 f076 F1FF0000 		.long	0xfff1
 32729 f07a C601     		.uleb128 0xc6
 32730 f07c 00000000 		.long	.LASF1612
 32731 f080 05       		.byte	0x5
 32732 f081 31       		.byte	0x31
 32733 f082 73990000 		.long	0x9973
 32734 f086 00000000 		.long	.LLST119
 32735 f08a C601     		.uleb128 0xc6
 32736 f08c 00000000 		.long	.LASF1613
 32737 f090 05       		.byte	0x5
 32738 f091 31       		.byte	0x31
 32739 f092 18810000 		.long	0x8118
 32740 f096 00000000 		.long	.LLST120
 32741 f09a C301     		.uleb128 0xc3
 32742 f09c 00000000 		.long	.Ldebug_ranges0+0x7c0
 32743 f0a0 BAFF0000 		.long	0xffba
 32744 f0a4 C701     		.uleb128 0xc7
 32745 f0a6 00000000 		.long	.LASF1614
 32746 f0aa 05       		.byte	0x5
 32747 f0ab 33       		.byte	0x33
 32748 f0ac A0470000 		.long	0x47a0
 32749 f0b0 00000000 		.long	.LLST121
 32750 f0b4 C801     		.uleb128 0xc8
 32751 f0b6 726400   		.string	"rd"
 32752 f0b9 05       		.byte	0x5
 32753 f0ba 35       		.byte	0x35
 32754 f0bb C82E0000 		.long	0x2ec8
 32755 f0bf 04       		.uleb128 0x4
 32756 f0c0 91       		.byte	0x91
 32757 f0c1 908A7F   		.sleb128 -15088
 32758 f0c4 C901     		.uleb128 0xc9
 32759 f0c6 00000000 		.long	.LASF1615
 32760 f0ca 05       		.byte	0x5
 32761 f0cb 36       		.byte	0x36
 32762 f0cc 7C300000 		.long	0x307c
GAS LISTING /tmp/ccmMnd7l.s 			page 878


 32763 f0d0 04       		.uleb128 0x4
 32764 f0d1 91       		.byte	0x91
 32765 f0d2 A0B17F   		.sleb128 -10080
 32766 f0d5 C701     		.uleb128 0xc7
 32767 f0d7 00000000 		.long	.LASF1616
 32768 f0db 05       		.byte	0x5
 32769 f0dc 37       		.byte	0x37
 32770 f0dd 49530000 		.long	0x5349
 32771 f0e1 00000000 		.long	.LLST122
 32772 f0e5 CA01     		.uleb128 0xca
 32773 f0e7 92E50000 		.long	0xe592
 32774 f0eb 00000000 		.quad	.LBB3336
 32774      00000000 
 32775 f0f3 00000000 		.long	.Ldebug_ranges0+0x800
 32776 f0f7 05       		.byte	0x5
 32777 f0f8 33       		.byte	0x33
 32778 f0f9 79F20000 		.long	0xf279
 32779 f0fd B701     		.uleb128 0xb7
 32780 f0ff B8E50000 		.long	0xe5b8
 32781 f103 BD01     		.uleb128 0xbd
 32782 f105 ABE50000 		.long	0xe5ab
 32783 f109 00000000 		.long	.LLST123
 32784 f10d BD01     		.uleb128 0xbd
 32785 f10f A1E50000 		.long	0xe5a1
 32786 f113 00000000 		.long	.LLST124
 32787 f117 C201     		.uleb128 0xc2
 32788 f119 F1D80000 		.long	0xd8f1
 32789 f11d 00000000 		.quad	.LBB3337
 32789      00000000 
 32790 f125 00000000 		.long	.Ldebug_ranges0+0x860
 32791 f129 06       		.byte	0x6
 32792 f12a 1601     		.value	0x116
 32793 f12c 4AF20000 		.long	0xf24a
 32794 f130 B701     		.uleb128 0xb7
 32795 f132 16D90000 		.long	0xd916
 32796 f136 BD01     		.uleb128 0xbd
 32797 f138 0AD90000 		.long	0xd90a
 32798 f13c 00000000 		.long	.LLST123
 32799 f140 BD01     		.uleb128 0xbd
 32800 f142 00D90000 		.long	0xd900
 32801 f146 00000000 		.long	.LLST124
 32802 f14a CA01     		.uleb128 0xca
 32803 f14c CBE50000 		.long	0xe5cb
 32804 f150 00000000 		.quad	.LBB3338
 32804      00000000 
 32805 f158 00000000 		.long	.Ldebug_ranges0+0x8b0
 32806 f15c 06       		.byte	0x6
 32807 f15d 88       		.byte	0x88
 32808 f15e 20F20000 		.long	0xf220
 32809 f162 BD01     		.uleb128 0xbd
 32810 f164 E4E50000 		.long	0xe5e4
 32811 f168 00000000 		.long	.LLST127
 32812 f16c BD01     		.uleb128 0xbd
 32813 f16e DAE50000 		.long	0xe5da
 32814 f172 00000000 		.long	.LLST128
 32815 f176 CB01     		.uleb128 0xcb
 32816 f178 33D10000 		.long	0xd133
GAS LISTING /tmp/ccmMnd7l.s 			page 879


 32817 f17c 00000000 		.quad	.LBB3340
 32817      00000000 
 32818 f184 00000000 		.long	.Ldebug_ranges0+0x910
 32819 f188 06       		.byte	0x6
 32820 f189 B9       		.byte	0xb9
 32821 f18a B701     		.uleb128 0xb7
 32822 f18c 42D10000 		.long	0xd142
 32823 f190 BD01     		.uleb128 0xbd
 32824 f192 4CD10000 		.long	0xd14c
 32825 f196 00000000 		.long	.LLST127
 32826 f19a B401     		.uleb128 0xb4
 32827 f19c 00000000 		.long	.Ldebug_ranges0+0x910
 32828 f1a0 CB01     		.uleb128 0xcb
 32829 f1a2 08D10000 		.long	0xd108
 32830 f1a6 00000000 		.quad	.LBB3342
 32830      00000000 
 32831 f1ae 00000000 		.long	.Ldebug_ranges0+0x940
 32832 f1b2 06       		.byte	0x6
 32833 f1b3 AA       		.byte	0xaa
 32834 f1b4 B701     		.uleb128 0xb7
 32835 f1b6 13D10000 		.long	0xd113
 32836 f1ba BD01     		.uleb128 0xbd
 32837 f1bc 20D10000 		.long	0xd120
 32838 f1c0 00000000 		.long	.LLST130
 32839 f1c4 CC01     		.uleb128 0xcc
 32840 f1c6 DDD00000 		.long	0xd0dd
 32841 f1ca 00000000 		.quad	.LBB3343
 32841      00000000 
 32842 f1d2 00000000 		.long	.Ldebug_ranges0+0x940
 32843 f1d6 2F       		.byte	0x2f
 32844 f1d7 6501     		.value	0x165
 32845 f1d9 B701     		.uleb128 0xb7
 32846 f1db ECD00000 		.long	0xd0ec
 32847 f1df BD01     		.uleb128 0xbd
 32848 f1e1 02D10000 		.long	0xd102
 32849 f1e5 00000000 		.long	.LLST131
 32850 f1e9 BD01     		.uleb128 0xbd
 32851 f1eb F6D00000 		.long	0xd0f6
 32852 f1ef 00000000 		.long	.LLST130
 32853 f1f3 C501     		.uleb128 0xc5
 32854 f1f5 00000000 		.quad	.LVL184
 32854      00000000 
 32855 f1fd DF4F0100 		.long	0x14fdf
 32856 f201 0DF20000 		.long	0xf20d
 32857 f205 C101     		.uleb128 0xc1
 32858 f207 01       		.uleb128 0x1
 32859 f208 55       		.byte	0x55
 32860 f209 02       		.uleb128 0x2
 32861 f20a 76       		.byte	0x76
 32862 f20b 00       		.sleb128 0
 32863 f20c 00       		.byte	0
 32864 f20d CD01     		.uleb128 0xcd
 32865 f20f 00000000 		.quad	.LVL201
 32865      00000000 
 32866 f217 5A800000 		.long	0x805a
 32867 f21b 00       		.byte	0
 32868 f21c 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 880


 32869 f21d 00       		.byte	0
 32870 f21e 00       		.byte	0
 32871 f21f 00       		.byte	0
 32872 f220 CE01     		.uleb128 0xce
 32873 f222 5BD10000 		.long	0xd15b
 32874 f226 00000000 		.quad	.LBB3361
 32874      00000000 
 32875 f22e 17000000 		.quad	.LBE3361-.LBB3361
 32875      00000000 
 32876 f236 06       		.byte	0x6
 32877 f237 87       		.byte	0x87
 32878 f238 B701     		.uleb128 0xb7
 32879 f23a 74D10000 		.long	0xd174
 32880 f23e BD01     		.uleb128 0xbd
 32881 f240 6AD10000 		.long	0xd16a
 32882 f244 00000000 		.long	.LLST124
 32883 f248 00       		.byte	0
 32884 f249 00       		.byte	0
 32885 f24a B601     		.uleb128 0xb6
 32886 f24c 28D90000 		.long	0xd928
 32887 f250 00000000 		.quad	.LBB3367
 32887      00000000 
 32888 f258 05000000 		.quad	.LBE3367-.LBB3367
 32888      00000000 
 32889 f260 06       		.byte	0x6
 32890 f261 1701     		.value	0x117
 32891 f263 BD01     		.uleb128 0xbd
 32892 f265 41D90000 		.long	0xd941
 32893 f269 00000000 		.long	.LLST134
 32894 f26d BD01     		.uleb128 0xbd
 32895 f26f 37D90000 		.long	0xd937
 32896 f273 00000000 		.long	.LLST135
 32897 f277 00       		.byte	0
 32898 f278 00       		.byte	0
 32899 f279 CF01     		.uleb128 0xcf
 32900 f27b 69D90000 		.long	0xd969
 32901 f27f 00000000 		.quad	.LBB3373
 32901      00000000 
 32902 f287 10000000 		.quad	.LBE3373-.LBB3373
 32902      00000000 
 32903 f28f 05       		.byte	0x5
 32904 f290 35       		.byte	0x35
 32905 f291 C7F20000 		.long	0xf2c7
 32906 f295 BD01     		.uleb128 0xbd
 32907 f297 82D90000 		.long	0xd982
 32908 f29b 00000000 		.long	.LLST136
 32909 f29f BD01     		.uleb128 0xbd
 32910 f2a1 78D90000 		.long	0xd978
 32911 f2a5 00000000 		.long	.LLST137
 32912 f2a9 C001     		.uleb128 0xc0
 32913 f2ab 00000000 		.quad	.LVL132
 32913      00000000 
 32914 f2b3 EB2F0000 		.long	0x2feb
 32915 f2b7 C101     		.uleb128 0xc1
 32916 f2b9 01       		.uleb128 0x1
 32917 f2ba 55       		.byte	0x55
 32918 f2bb 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 881


 32919 f2bc 7F       		.byte	0x7f
 32920 f2bd 00       		.sleb128 0
 32921 f2be C101     		.uleb128 0xc1
 32922 f2c0 01       		.uleb128 0x1
 32923 f2c1 54       		.byte	0x54
 32924 f2c2 02       		.uleb128 0x2
 32925 f2c3 76       		.byte	0x76
 32926 f2c4 00       		.sleb128 0
 32927 f2c5 00       		.byte	0
 32928 f2c6 00       		.byte	0
 32929 f2c7 C301     		.uleb128 0xc3
 32930 f2c9 00000000 		.long	.Ldebug_ranges0+0x970
 32931 f2cd 37F40000 		.long	0xf437
 32932 f2d1 BD01     		.uleb128 0xbd
 32933 f2d3 A9D90000 		.long	0xd9a9
 32934 f2d7 00000000 		.long	.LLST138
 32935 f2db C401     		.uleb128 0xc4
 32936 f2dd 0CC60000 		.long	0xc60c
 32937 f2e1 00000000 		.quad	.LBB3377
 32937      00000000 
 32938 f2e9 0C000000 		.quad	.LBE3377-.LBB3377
 32938      00000000 
 32939 f2f1 07       		.byte	0x7
 32940 f2f2 2302     		.value	0x223
 32941 f2f4 27F30000 		.long	0xf327
 32942 f2f8 BD01     		.uleb128 0xbd
 32943 f2fa 1BC60000 		.long	0xc61b
 32944 f2fe 00000000 		.long	.LLST138
 32945 f302 B601     		.uleb128 0xb6
 32946 f304 3FB30000 		.long	0xb33f
 32947 f308 00000000 		.quad	.LBB3379
 32947      00000000 
 32948 f310 08000000 		.quad	.LBE3379-.LBB3379
 32948      00000000 
 32949 f318 07       		.byte	0x7
 32950 f319 2D01     		.value	0x12d
 32951 f31b BD01     		.uleb128 0xbd
 32952 f31d 4EB30000 		.long	0xb34e
 32953 f321 00000000 		.long	.LLST138
 32954 f325 00       		.byte	0
 32955 f326 00       		.byte	0
 32956 f327 CC01     		.uleb128 0xcc
 32957 f329 50B40000 		.long	0xb450
 32958 f32d 00000000 		.quad	.LBB3381
 32958      00000000 
 32959 f335 00000000 		.long	.Ldebug_ranges0+0x9a0
 32960 f339 07       		.byte	0x7
 32961 f33a 2302     		.value	0x223
 32962 f33c BD01     		.uleb128 0xbd
 32963 f33e 69B40000 		.long	0xb469
 32964 f342 00000000 		.long	.LLST141
 32965 f346 BD01     		.uleb128 0xbd
 32966 f348 5FB40000 		.long	0xb45f
 32967 f34c 00000000 		.long	.LLST142
 32968 f350 B801     		.uleb128 0xb8
 32969 f352 00000000 		.quad	.LBB3383
 32969      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 882


 32970 f35a 4A000000 		.quad	.LBE3383-.LBB3383
 32970      00000000 
 32971 f362 BD01     		.uleb128 0xbd
 32972 f364 69B40000 		.long	0xb469
 32973 f368 00000000 		.long	.LLST143
 32974 f36c BD01     		.uleb128 0xbd
 32975 f36e 5FB40000 		.long	0xb45f
 32976 f372 00000000 		.long	.LLST144
 32977 f376 CA01     		.uleb128 0xca
 32978 f378 2CB40000 		.long	0xb42c
 32979 f37c 00000000 		.quad	.LBB3385
 32979      00000000 
 32980 f384 00000000 		.long	.Ldebug_ranges0+0x9d0
 32981 f388 07       		.byte	0x7
 32982 f389 F6       		.byte	0xf6
 32983 f38a 1EF40000 		.long	0xf41e
 32984 f38e BD01     		.uleb128 0xbd
 32985 f390 43B40000 		.long	0xb443
 32986 f394 00000000 		.long	.LLST145
 32987 f398 BD01     		.uleb128 0xbd
 32988 f39a 37B40000 		.long	0xb437
 32989 f39e 00000000 		.long	.LLST146
 32990 f3a2 CF01     		.uleb128 0xcf
 32991 f3a4 B4B30000 		.long	0xb3b4
 32992 f3a8 00000000 		.quad	.LBB3387
 32992      00000000 
 32993 f3b0 0C000000 		.quad	.LBE3387-.LBB3387
 32993      00000000 
 32994 f3b8 0F       		.byte	0xf
 32995 f3b9 52       		.byte	0x52
 32996 f3ba D3F30000 		.long	0xf3d3
 32997 f3be BD01     		.uleb128 0xbd
 32998 f3c0 CBB30000 		.long	0xb3cb
 32999 f3c4 00000000 		.long	.LLST147
 33000 f3c8 BD01     		.uleb128 0xbd
 33001 f3ca BFB30000 		.long	0xb3bf
 33002 f3ce 00000000 		.long	.LLST148
 33003 f3d2 00       		.byte	0
 33004 f3d3 CE01     		.uleb128 0xce
 33005 f3d5 DEB30000 		.long	0xb3de
 33006 f3d9 00000000 		.quad	.LBB3389
 33006      00000000 
 33007 f3e1 09000000 		.quad	.LBE3389-.LBB3389
 33007      00000000 
 33008 f3e9 0F       		.byte	0xf
 33009 f3ea 54       		.byte	0x54
 33010 f3eb BD01     		.uleb128 0xbd
 33011 f3ed F5B30000 		.long	0xb3f5
 33012 f3f1 00000000 		.long	.LLST149
 33013 f3f5 BD01     		.uleb128 0xbd
 33014 f3f7 E9B30000 		.long	0xb3e9
 33015 f3fb 00000000 		.long	.LLST150
 33016 f3ff B801     		.uleb128 0xb8
 33017 f401 00000000 		.quad	.LBB3390
 33017      00000000 
 33018 f409 09000000 		.quad	.LBE3390-.LBB3390
 33018      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 883


 33019 f411 BA01     		.uleb128 0xba
 33020 f413 03B40000 		.long	0xb403
 33021 f417 00000000 		.long	.LLST151
 33022 f41b 00       		.byte	0
 33023 f41c 00       		.byte	0
 33024 f41d 00       		.byte	0
 33025 f41e C001     		.uleb128 0xc0
 33026 f420 00000000 		.quad	.LVL194
 33026      00000000 
 33027 f428 0B0C0000 		.long	0xc0b
 33028 f42c C101     		.uleb128 0xc1
 33029 f42e 01       		.uleb128 0x1
 33030 f42f 54       		.byte	0x54
 33031 f430 02       		.uleb128 0x2
 33032 f431 73       		.byte	0x73
 33033 f432 00       		.sleb128 0
 33034 f433 00       		.byte	0
 33035 f434 00       		.byte	0
 33036 f435 00       		.byte	0
 33037 f436 00       		.byte	0
 33038 f437 CF01     		.uleb128 0xcf
 33039 f439 C3D90000 		.long	0xd9c3
 33040 f43d 00000000 		.quad	.LBB3396
 33040      00000000 
 33041 f445 08000000 		.quad	.LBE3396-.LBB3396
 33041      00000000 
 33042 f44d 05       		.byte	0x5
 33043 f44e 36       		.byte	0x36
 33044 f44f 74F40000 		.long	0xf474
 33045 f453 BD01     		.uleb128 0xbd
 33046 f455 D2D90000 		.long	0xd9d2
 33047 f459 00000000 		.long	.LLST152
 33048 f45d C001     		.uleb128 0xc0
 33049 f45f 00000000 		.quad	.LVL135
 33049      00000000 
 33050 f467 43300000 		.long	0x3043
 33051 f46b C101     		.uleb128 0xc1
 33052 f46d 01       		.uleb128 0x1
 33053 f46e 55       		.byte	0x55
 33054 f46f 02       		.uleb128 0x2
 33055 f470 7F       		.byte	0x7f
 33056 f471 00       		.sleb128 0
 33057 f472 00       		.byte	0
 33058 f473 00       		.byte	0
 33059 f474 CF01     		.uleb128 0xcf
 33060 f476 DDD90000 		.long	0xd9dd
 33061 f47a 00000000 		.quad	.LBB3398
 33061      00000000 
 33062 f482 68000000 		.quad	.LBE3398-.LBB3398
 33062      00000000 
 33063 f48a 05       		.byte	0x5
 33064 f48b 36       		.byte	0x36
 33065 f48c 0DF60000 		.long	0xf60d
 33066 f490 BD01     		.uleb128 0xbd
 33067 f492 F6D90000 		.long	0xd9f6
 33068 f496 00000000 		.long	.LLST153
 33069 f49a BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 884


 33070 f49c ECD90000 		.long	0xd9ec
 33071 f4a0 00000000 		.long	.LLST154
 33072 f4a4 B601     		.uleb128 0xb6
 33073 f4a6 07C90000 		.long	0xc907
 33074 f4aa 00000000 		.quad	.LBB3399
 33074      00000000 
 33075 f4b2 68000000 		.quad	.LBE3399-.LBB3399
 33075      00000000 
 33076 f4ba 04       		.byte	0x4
 33077 f4bb F701     		.value	0x1f7
 33078 f4bd BD01     		.uleb128 0xbd
 33079 f4bf 23C90000 		.long	0xc923
 33080 f4c3 00000000 		.long	.LLST153
 33081 f4c7 BD01     		.uleb128 0xbd
 33082 f4c9 19C90000 		.long	0xc919
 33083 f4cd 00000000 		.long	.LLST154
 33084 f4d1 C201     		.uleb128 0xc2
 33085 f4d3 81C80000 		.long	0xc881
 33086 f4d7 00000000 		.quad	.LBB3401
 33086      00000000 
 33087 f4df 00000000 		.long	.Ldebug_ranges0+0xa00
 33088 f4e3 03       		.byte	0x3
 33089 f4e4 4C01     		.value	0x14c
 33090 f4e6 25F50000 		.long	0xf525
 33091 f4ea BD01     		.uleb128 0xbd
 33092 f4ec BAC80000 		.long	0xc8ba
 33093 f4f0 00000000 		.long	.LLST153
 33094 f4f4 CB01     		.uleb128 0xcb
 33095 f4f6 33C80000 		.long	0xc833
 33096 f4fa 00000000 		.quad	.LBB3402
 33096      00000000 
 33097 f502 00000000 		.long	.Ldebug_ranges0+0xa00
 33098 f506 04       		.byte	0x4
 33099 f507 96       		.byte	0x96
 33100 f508 BD01     		.uleb128 0xbd
 33101 f50a 3EC80000 		.long	0xc83e
 33102 f50e 00000000 		.long	.LLST153
 33103 f512 B401     		.uleb128 0xb4
 33104 f514 00000000 		.long	.Ldebug_ranges0+0xa00
 33105 f518 BA01     		.uleb128 0xba
 33106 f51a 4CC80000 		.long	0xc84c
 33107 f51e 00000000 		.long	.LLST153
 33108 f522 00       		.byte	0
 33109 f523 00       		.byte	0
 33110 f524 00       		.byte	0
 33111 f525 B401     		.uleb128 0xb4
 33112 f527 00000000 		.long	.Ldebug_ranges0+0xa30
 33113 f52b BA01     		.uleb128 0xba
 33114 f52d 32C90000 		.long	0xc932
 33115 f531 00000000 		.long	.LLST160
 33116 f535 B801     		.uleb128 0xb8
 33117 f537 00000000 		.quad	.LBB3407
 33117      00000000 
 33118 f53f 42000000 		.quad	.LBE3407-.LBB3407
 33118      00000000 
 33119 f547 BA01     		.uleb128 0xba
 33120 f549 41C90000 		.long	0xc941
GAS LISTING /tmp/ccmMnd7l.s 			page 885


 33121 f54d 00000000 		.long	.LLST161
 33122 f551 C201     		.uleb128 0xc2
 33123 f553 C7C80000 		.long	0xc8c7
 33124 f557 00000000 		.quad	.LBB3408
 33124      00000000 
 33125 f55f 00000000 		.long	.Ldebug_ranges0+0xa60
 33126 f563 03       		.byte	0x3
 33127 f564 5301     		.value	0x153
 33128 f566 A5F50000 		.long	0xf5a5
 33129 f56a BD01     		.uleb128 0xbd
 33130 f56c FAC80000 		.long	0xc8fa
 33131 f570 00000000 		.long	.LLST162
 33132 f574 CB01     		.uleb128 0xcb
 33133 f576 5AC80000 		.long	0xc85a
 33134 f57a 00000000 		.quad	.LBB3409
 33134      00000000 
 33135 f582 00000000 		.long	.Ldebug_ranges0+0xa60
 33136 f586 04       		.byte	0x4
 33137 f587 96       		.byte	0x96
 33138 f588 BD01     		.uleb128 0xbd
 33139 f58a 65C80000 		.long	0xc865
 33140 f58e 00000000 		.long	.LLST162
 33141 f592 B401     		.uleb128 0xb4
 33142 f594 00000000 		.long	.Ldebug_ranges0+0xa60
 33143 f598 BA01     		.uleb128 0xba
 33144 f59a 73C80000 		.long	0xc873
 33145 f59e 00000000 		.long	.LLST164
 33146 f5a2 00       		.byte	0
 33147 f5a3 00       		.byte	0
 33148 f5a4 00       		.byte	0
 33149 f5a5 B601     		.uleb128 0xb6
 33150 f5a7 81C80000 		.long	0xc881
 33151 f5ab 00000000 		.quad	.LBB3420
 33151      00000000 
 33152 f5b3 02000000 		.quad	.LBE3420-.LBB3420
 33152      00000000 
 33153 f5bb 03       		.byte	0x3
 33154 f5bc 5501     		.value	0x155
 33155 f5be BD01     		.uleb128 0xbd
 33156 f5c0 BAC80000 		.long	0xc8ba
 33157 f5c4 00000000 		.long	.LLST165
 33158 f5c8 CE01     		.uleb128 0xce
 33159 f5ca 33C80000 		.long	0xc833
 33160 f5ce 00000000 		.quad	.LBB3421
 33160      00000000 
 33161 f5d6 02000000 		.quad	.LBE3421-.LBB3421
 33161      00000000 
 33162 f5de 04       		.byte	0x4
 33163 f5df 96       		.byte	0x96
 33164 f5e0 BD01     		.uleb128 0xbd
 33165 f5e2 3EC80000 		.long	0xc83e
 33166 f5e6 00000000 		.long	.LLST165
 33167 f5ea B801     		.uleb128 0xb8
 33168 f5ec 00000000 		.quad	.LBB3422
 33168      00000000 
 33169 f5f4 02000000 		.quad	.LBE3422-.LBB3422
 33169      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 886


 33170 f5fc BA01     		.uleb128 0xba
 33171 f5fe 4CC80000 		.long	0xc84c
 33172 f602 00000000 		.long	.LLST167
 33173 f606 00       		.byte	0
 33174 f607 00       		.byte	0
 33175 f608 00       		.byte	0
 33176 f609 00       		.byte	0
 33177 f60a 00       		.byte	0
 33178 f60b 00       		.byte	0
 33179 f60c 00       		.byte	0
 33180 f60d CF01     		.uleb128 0xcf
 33181 f60f 58B50000 		.long	0xb558
 33182 f613 00000000 		.quad	.LBB3425
 33182      00000000 
 33183 f61b 18000000 		.quad	.LBE3425-.LBB3425
 33183      00000000 
 33184 f623 05       		.byte	0x5
 33185 f624 39       		.byte	0x39
 33186 f625 5DF60000 		.long	0xf65d
 33187 f629 B701     		.uleb128 0xb7
 33188 f62b 6CB50000 		.long	0xb56c
 33189 f62f BD01     		.uleb128 0xbd
 33190 f631 79B50000 		.long	0xb579
 33191 f635 00000000 		.long	.LLST168
 33192 f639 C001     		.uleb128 0xc0
 33193 f63b 00000000 		.quad	.LVL146
 33193      00000000 
 33194 f643 65800000 		.long	0x8065
 33195 f647 C101     		.uleb128 0xc1
 33196 f649 01       		.uleb128 0x1
 33197 f64a 54       		.byte	0x54
 33198 f64b 09       		.uleb128 0x9
 33199 f64c 03       		.byte	0x3
 33200 f64d 00000000 		.quad	.LC5
 33200      00000000 
 33201 f655 C101     		.uleb128 0xc1
 33202 f657 01       		.uleb128 0x1
 33203 f658 51       		.byte	0x51
 33204 f659 01       		.uleb128 0x1
 33205 f65a 3B       		.byte	0x3b
 33206 f65b 00       		.byte	0
 33207 f65c 00       		.byte	0
 33208 f65d CA01     		.uleb128 0xca
 33209 f65f 38DA0000 		.long	0xda38
 33210 f663 00000000 		.quad	.LBB3427
 33210      00000000 
 33211 f66b 00000000 		.long	.Ldebug_ranges0+0xab0
 33212 f66f 05       		.byte	0x5
 33213 f670 39       		.byte	0x39
 33214 f671 9CF60000 		.long	0xf69c
 33215 f675 BD01     		.uleb128 0xbd
 33216 f677 51DA0000 		.long	0xda51
 33217 f67b 00000000 		.long	.LLST169
 33218 f67f B701     		.uleb128 0xb7
 33219 f681 47DA0000 		.long	0xda47
 33220 f685 C001     		.uleb128 0xc0
 33221 f687 00000000 		.quad	.LVL147
GAS LISTING /tmp/ccmMnd7l.s 			page 887


 33221      00000000 
 33222 f68f 4A290000 		.long	0x294a
 33223 f693 C101     		.uleb128 0xc1
 33224 f695 01       		.uleb128 0x1
 33225 f696 54       		.byte	0x54
 33226 f697 02       		.uleb128 0x2
 33227 f698 7E       		.byte	0x7e
 33228 f699 00       		.sleb128 0
 33229 f69a 00       		.byte	0
 33230 f69b 00       		.byte	0
 33231 f69c CA01     		.uleb128 0xca
 33232 f69e 58B50000 		.long	0xb558
 33233 f6a2 00000000 		.quad	.LBB3430
 33233      00000000 
 33234 f6aa 00000000 		.long	.Ldebug_ranges0+0xae0
 33235 f6ae 05       		.byte	0x5
 33236 f6af 39       		.byte	0x39
 33237 f6b0 F3F60000 		.long	0xf6f3
 33238 f6b4 BD01     		.uleb128 0xbd
 33239 f6b6 79B50000 		.long	0xb579
 33240 f6ba 00000000 		.long	.LLST170
 33241 f6be BD01     		.uleb128 0xbd
 33242 f6c0 6CB50000 		.long	0xb56c
 33243 f6c4 00000000 		.long	.LLST171
 33244 f6c8 C001     		.uleb128 0xc0
 33245 f6ca 00000000 		.quad	.LVL149
 33245      00000000 
 33246 f6d2 65800000 		.long	0x8065
 33247 f6d6 C101     		.uleb128 0xc1
 33248 f6d8 01       		.uleb128 0x1
 33249 f6d9 55       		.byte	0x55
 33250 f6da 02       		.uleb128 0x2
 33251 f6db 7E       		.byte	0x7e
 33252 f6dc 00       		.sleb128 0
 33253 f6dd C101     		.uleb128 0xc1
 33254 f6df 01       		.uleb128 0x1
 33255 f6e0 54       		.byte	0x54
 33256 f6e1 09       		.uleb128 0x9
 33257 f6e2 03       		.byte	0x3
 33258 f6e3 00000000 		.quad	.LC6
 33258      00000000 
 33259 f6eb C101     		.uleb128 0xc1
 33260 f6ed 01       		.uleb128 0x1
 33261 f6ee 51       		.byte	0x51
 33262 f6ef 01       		.uleb128 0x1
 33263 f6f0 42       		.byte	0x42
 33264 f6f1 00       		.byte	0
 33265 f6f2 00       		.byte	0
 33266 f6f3 CF01     		.uleb128 0xcf
 33267 f6f5 D0B60000 		.long	0xb6d0
 33268 f6f9 00000000 		.quad	.LBB3435
 33268      00000000 
 33269 f701 08000000 		.quad	.LBE3435-.LBB3435
 33269      00000000 
 33270 f709 05       		.byte	0x5
 33271 f70a 39       		.byte	0x39
 33272 f70b 55F70000 		.long	0xf755
GAS LISTING /tmp/ccmMnd7l.s 			page 888


 33273 f70f B701     		.uleb128 0xb7
 33274 f711 E9B60000 		.long	0xb6e9
 33275 f715 B701     		.uleb128 0xb7
 33276 f717 DFB60000 		.long	0xb6df
 33277 f71b CE01     		.uleb128 0xce
 33278 f71d 79C60000 		.long	0xc679
 33279 f721 00000000 		.quad	.LBB3436
 33279      00000000 
 33280 f729 08000000 		.quad	.LBE3436-.LBB3436
 33280      00000000 
 33281 f731 08       		.byte	0x8
 33282 f732 71       		.byte	0x71
 33283 f733 BD01     		.uleb128 0xbd
 33284 f735 96C60000 		.long	0xc696
 33285 f739 00000000 		.long	.LLST172
 33286 f73d C001     		.uleb128 0xc0
 33287 f73f 00000000 		.quad	.LVL150
 33287      00000000 
 33288 f747 76290000 		.long	0x2976
 33289 f74b C101     		.uleb128 0xc1
 33290 f74d 01       		.uleb128 0x1
 33291 f74e 55       		.byte	0x55
 33292 f74f 02       		.uleb128 0x2
 33293 f750 7E       		.byte	0x7e
 33294 f751 00       		.sleb128 0
 33295 f752 00       		.byte	0
 33296 f753 00       		.byte	0
 33297 f754 00       		.byte	0
 33298 f755 C301     		.uleb128 0xc3
 33299 f757 00000000 		.long	.Ldebug_ranges0+0xb10
 33300 f75b A2FC0000 		.long	0xfca2
 33301 f75f 9F01     		.uleb128 0x9f
 33302 f761 7400     		.string	"t"
 33303 f763 05       		.byte	0x5
 33304 f764 3A       		.byte	0x3a
 33305 f765 B0AE0000 		.long	0xaeb0
 33306 f769 CA01     		.uleb128 0xca
 33307 f76b 5EDA0000 		.long	0xda5e
 33308 f76f 00000000 		.quad	.LBB3439
 33308      00000000 
 33309 f777 00000000 		.long	.Ldebug_ranges0+0xb50
 33310 f77b 05       		.byte	0x5
 33311 f77c 3A       		.byte	0x3a
 33312 f77d 9AF70000 		.long	0xf79a
 33313 f781 BD01     		.uleb128 0xbd
 33314 f783 6DDA0000 		.long	0xda6d
 33315 f787 00000000 		.long	.LLST173
 33316 f78b CD01     		.uleb128 0xcd
 33317 f78d 00000000 		.quad	.LVL151
 33317      00000000 
 33318 f795 58E60000 		.long	0xe658
 33319 f799 00       		.byte	0
 33320 f79a CA01     		.uleb128 0xca
 33321 f79c 7DDA0000 		.long	0xda7d
 33322 f7a0 00000000 		.quad	.LBB3442
 33322      00000000 
 33323 f7a8 00000000 		.long	.Ldebug_ranges0+0xb80
GAS LISTING /tmp/ccmMnd7l.s 			page 889


 33324 f7ac 05       		.byte	0x5
 33325 f7ad 3B       		.byte	0x3b
 33326 f7ae 80F80000 		.long	0xf880
 33327 f7b2 BD01     		.uleb128 0xbd
 33328 f7b4 B6DA0000 		.long	0xdab6
 33329 f7b8 00000000 		.long	.LLST174
 33330 f7bc BD01     		.uleb128 0xbd
 33331 f7be A0DA0000 		.long	0xdaa0
 33332 f7c2 00000000 		.long	.LLST175
 33333 f7c6 B401     		.uleb128 0xb4
 33334 f7c8 00000000 		.long	.Ldebug_ranges0+0xb80
 33335 f7cc CC01     		.uleb128 0xcc
 33336 f7ce 45C30000 		.long	0xc345
 33337 f7d2 00000000 		.quad	.LBB3444
 33337      00000000 
 33338 f7da 00000000 		.long	.Ldebug_ranges0+0xb80
 33339 f7de 09       		.byte	0x9
 33340 f7df 5D06     		.value	0x65d
 33341 f7e1 BD01     		.uleb128 0xbd
 33342 f7e3 7FC30000 		.long	0xc37f
 33343 f7e7 00000000 		.long	.LLST174
 33344 f7eb BD01     		.uleb128 0xbd
 33345 f7ed 6DC30000 		.long	0xc36d
 33346 f7f1 00000000 		.long	.LLST175
 33347 f7f5 BD01     		.uleb128 0xbd
 33348 f7f7 63C30000 		.long	0xc363
 33349 f7fb 00000000 		.long	.LLST178
 33350 f7ff CC01     		.uleb128 0xcc
 33351 f801 B7C20000 		.long	0xc2b7
 33352 f805 00000000 		.quad	.LBB3446
 33352      00000000 
 33353 f80d 00000000 		.long	.Ldebug_ranges0+0xbc0
 33354 f811 09       		.byte	0x9
 33355 f812 1305     		.value	0x513
 33356 f814 BD01     		.uleb128 0xbd
 33357 f816 E4C20000 		.long	0xc2e4
 33358 f81a 00000000 		.long	.LLST174
 33359 f81e BD01     		.uleb128 0xbd
 33360 f820 D5C20000 		.long	0xc2d5
 33361 f824 00000000 		.long	.LLST180
 33362 f828 CC01     		.uleb128 0xcc
 33363 f82a 4CC20000 		.long	0xc24c
 33364 f82e 00000000 		.quad	.LBB3447
 33364      00000000 
 33365 f836 00000000 		.long	.Ldebug_ranges0+0xbc0
 33366 f83a 0A       		.byte	0xa
 33367 f83b 9501     		.value	0x195
 33368 f83d BD01     		.uleb128 0xbd
 33369 f83f 73C20000 		.long	0xc273
 33370 f843 00000000 		.long	.LLST174
 33371 f847 BD01     		.uleb128 0xbd
 33372 f849 69C20000 		.long	0xc269
 33373 f84d 00000000 		.long	.LLST180
 33374 f851 CC01     		.uleb128 0xcc
 33375 f853 13C20000 		.long	0xc213
 33376 f857 00000000 		.quad	.LBB3448
 33376      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 890


 33377 f85f 00000000 		.long	.Ldebug_ranges0+0xbc0
 33378 f863 0A       		.byte	0xa
 33379 f864 0601     		.value	0x106
 33380 f866 BD01     		.uleb128 0xbd
 33381 f868 35C20000 		.long	0xc235
 33382 f86c 00000000 		.long	.LLST174
 33383 f870 BD01     		.uleb128 0xbd
 33384 f872 2BC20000 		.long	0xc22b
 33385 f876 00000000 		.long	.LLST180
 33386 f87a 00       		.byte	0
 33387 f87b 00       		.byte	0
 33388 f87c 00       		.byte	0
 33389 f87d 00       		.byte	0
 33390 f87e 00       		.byte	0
 33391 f87f 00       		.byte	0
 33392 f880 CF01     		.uleb128 0xcf
 33393 f882 E3DA0000 		.long	0xdae3
 33394 f886 00000000 		.quad	.LBB3464
 33394      00000000 
 33395 f88e 04000000 		.quad	.LBE3464-.LBB3464
 33395      00000000 
 33396 f896 05       		.byte	0x5
 33397 f897 3B       		.byte	0x3b
 33398 f898 D1F80000 		.long	0xf8d1
 33399 f89c BD01     		.uleb128 0xbd
 33400 f89e F2DA0000 		.long	0xdaf2
 33401 f8a2 00000000 		.long	.LLST185
 33402 f8a6 B601     		.uleb128 0xb6
 33403 f8a8 97C10000 		.long	0xc197
 33404 f8ac 00000000 		.quad	.LBB3465
 33404      00000000 
 33405 f8b4 04000000 		.quad	.LBE3465-.LBB3465
 33405      00000000 
 33406 f8bc 06       		.byte	0x6
 33407 f8bd 2402     		.value	0x224
 33408 f8bf BD01     		.uleb128 0xbd
 33409 f8c1 B0C10000 		.long	0xc1b0
 33410 f8c5 00000000 		.long	.LLST185
 33411 f8c9 B701     		.uleb128 0xb7
 33412 f8cb A6C10000 		.long	0xc1a6
 33413 f8cf 00       		.byte	0
 33414 f8d0 00       		.byte	0
 33415 f8d1 CF01     		.uleb128 0xcf
 33416 f8d3 C9DA0000 		.long	0xdac9
 33417 f8d7 00000000 		.quad	.LBB3467
 33417      00000000 
 33418 f8df 05000000 		.quad	.LBE3467-.LBB3467
 33418      00000000 
 33419 f8e7 05       		.byte	0x5
 33420 f8e8 3B       		.byte	0x3b
 33421 f8e9 22F90000 		.long	0xf922
 33422 f8ed BD01     		.uleb128 0xbd
 33423 f8ef D8DA0000 		.long	0xdad8
 33424 f8f3 00000000 		.long	.LLST185
 33425 f8f7 B601     		.uleb128 0xb6
 33426 f8f9 97C10000 		.long	0xc197
 33427 f8fd 00000000 		.quad	.LBB3468
GAS LISTING /tmp/ccmMnd7l.s 			page 891


 33427      00000000 
 33428 f905 05000000 		.quad	.LBE3468-.LBB3468
 33428      00000000 
 33429 f90d 06       		.byte	0x6
 33430 f90e 3602     		.value	0x236
 33431 f910 BD01     		.uleb128 0xbd
 33432 f912 B0C10000 		.long	0xc1b0
 33433 f916 00000000 		.long	.LLST188
 33434 f91a B701     		.uleb128 0xb7
 33435 f91c A6C10000 		.long	0xc1a6
 33436 f920 00       		.byte	0
 33437 f921 00       		.byte	0
 33438 f922 CF01     		.uleb128 0xcf
 33439 f924 FDDA0000 		.long	0xdafd
 33440 f928 00000000 		.quad	.LBB3473
 33440      00000000 
 33441 f930 27000000 		.quad	.LBE3473-.LBB3473
 33441      00000000 
 33442 f938 05       		.byte	0x5
 33443 f939 3B       		.byte	0x3b
 33444 f93a F7F90000 		.long	0xf9f7
 33445 f93e BD01     		.uleb128 0xbd
 33446 f940 34DB0000 		.long	0xdb34
 33447 f944 00000000 		.long	.LLST189
 33448 f948 BD01     		.uleb128 0xbd
 33449 f94a 27DB0000 		.long	0xdb27
 33450 f94e 00000000 		.long	.LLST190
 33451 f952 BD01     		.uleb128 0xbd
 33452 f954 1ADB0000 		.long	0xdb1a
 33453 f958 00000000 		.long	.LLST191
 33454 f95c CC01     		.uleb128 0xcc
 33455 f95e 46D30000 		.long	0xd346
 33456 f962 00000000 		.quad	.LBB3475
 33456      00000000 
 33457 f96a 00000000 		.long	.Ldebug_ranges0+0xc00
 33458 f96e 0C       		.byte	0xc
 33459 f96f C710     		.value	0x10c7
 33460 f971 BD01     		.uleb128 0xbd
 33461 f973 63D30000 		.long	0xd363
 33462 f977 00000000 		.long	.LLST192
 33463 f97b CC01     		.uleb128 0xcc
 33464 f97d DAD20000 		.long	0xd2da
 33465 f981 00000000 		.quad	.LBB3476
 33465      00000000 
 33466 f989 00000000 		.long	.Ldebug_ranges0+0xc00
 33467 f98d 09       		.byte	0x9
 33468 f98e 2B05     		.value	0x52b
 33469 f990 B701     		.uleb128 0xb7
 33470 f992 21D30000 		.long	0xd321
 33471 f996 B701     		.uleb128 0xb7
 33472 f998 14D30000 		.long	0xd314
 33473 f99c BD01     		.uleb128 0xbd
 33474 f99e 0AD30000 		.long	0xd30a
 33475 f9a2 00000000 		.long	.LLST192
 33476 f9a6 CC01     		.uleb128 0xcc
 33477 f9a8 83D20000 		.long	0xd283
 33478 f9ac 00000000 		.quad	.LBB3478
GAS LISTING /tmp/ccmMnd7l.s 			page 892


 33478      00000000 
 33479 f9b4 00000000 		.long	.Ldebug_ranges0+0xc30
 33480 f9b8 09       		.byte	0x9
 33481 f9b9 F004     		.value	0x4f0
 33482 f9bb BD01     		.uleb128 0xbd
 33483 f9bd A5D20000 		.long	0xd2a5
 33484 f9c1 00000000 		.long	.LLST194
 33485 f9c5 BD01     		.uleb128 0xbd
 33486 f9c7 9BD20000 		.long	0xd29b
 33487 f9cb 00000000 		.long	.LLST192
 33488 f9cf C001     		.uleb128 0xc0
 33489 f9d1 00000000 		.quad	.LVL158
 33489      00000000 
 33490 f9d9 AEE20000 		.long	0xe2ae
 33491 f9dd C101     		.uleb128 0xc1
 33492 f9df 01       		.uleb128 0x1
 33493 f9e0 55       		.byte	0x55
 33494 f9e1 02       		.uleb128 0x2
 33495 f9e2 76       		.byte	0x76
 33496 f9e3 00       		.sleb128 0
 33497 f9e4 C101     		.uleb128 0xc1
 33498 f9e6 01       		.uleb128 0x1
 33499 f9e7 54       		.byte	0x54
 33500 f9e8 02       		.uleb128 0x2
 33501 f9e9 7E       		.byte	0x7e
 33502 f9ea 00       		.sleb128 0
 33503 f9eb C101     		.uleb128 0xc1
 33504 f9ed 01       		.uleb128 0x1
 33505 f9ee 51       		.byte	0x51
 33506 f9ef 02       		.uleb128 0x2
 33507 f9f0 76       		.byte	0x76
 33508 f9f1 00       		.sleb128 0
 33509 f9f2 00       		.byte	0
 33510 f9f3 00       		.byte	0
 33511 f9f4 00       		.byte	0
 33512 f9f5 00       		.byte	0
 33513 f9f6 00       		.byte	0
 33514 f9f7 CB01     		.uleb128 0xcb
 33515 f9f9 F1E50000 		.long	0xe5f1
 33516 f9fd 00000000 		.quad	.LBB3485
 33516      00000000 
 33517 fa05 00000000 		.long	.Ldebug_ranges0+0xc60
 33518 fa09 05       		.byte	0x5
 33519 fa0a 3B       		.byte	0x3b
 33520 fa0b BD01     		.uleb128 0xbd
 33521 fa0d 00E60000 		.long	0xe600
 33522 fa11 00000000 		.long	.LLST196
 33523 fa15 B401     		.uleb128 0xb4
 33524 fa17 00000000 		.long	.Ldebug_ranges0+0xc60
 33525 fa1b BA01     		.uleb128 0xba
 33526 fa1d 16E60000 		.long	0xe616
 33527 fa21 00000000 		.long	.LLST197
 33528 fa25 CA01     		.uleb128 0xca
 33529 fa27 58B50000 		.long	0xb558
 33530 fa2b 00000000 		.quad	.LBB3487
 33530      00000000 
 33531 fa33 00000000 		.long	.Ldebug_ranges0+0xca0
GAS LISTING /tmp/ccmMnd7l.s 			page 893


 33532 fa37 02       		.byte	0x2
 33533 fa38 31       		.byte	0x31
 33534 fa39 71FA0000 		.long	0xfa71
 33535 fa3d B701     		.uleb128 0xb7
 33536 fa3f 6CB50000 		.long	0xb56c
 33537 fa43 BD01     		.uleb128 0xbd
 33538 fa45 79B50000 		.long	0xb579
 33539 fa49 00000000 		.long	.LLST198
 33540 fa4d C001     		.uleb128 0xc0
 33541 fa4f 00000000 		.quad	.LVL164
 33541      00000000 
 33542 fa57 65800000 		.long	0x8065
 33543 fa5b C101     		.uleb128 0xc1
 33544 fa5d 01       		.uleb128 0x1
 33545 fa5e 54       		.byte	0x54
 33546 fa5f 09       		.uleb128 0x9
 33547 fa60 03       		.byte	0x3
 33548 fa61 00000000 		.quad	.LC7
 33548      00000000 
 33549 fa69 C101     		.uleb128 0xc1
 33550 fa6b 01       		.uleb128 0x1
 33551 fa6c 51       		.byte	0x51
 33552 fa6d 01       		.uleb128 0x1
 33553 fa6e 38       		.byte	0x38
 33554 fa6f 00       		.byte	0
 33555 fa70 00       		.byte	0
 33556 fa71 CA01     		.uleb128 0xca
 33557 fa73 8FB60000 		.long	0xb68f
 33558 fa77 00000000 		.quad	.LBB3491
 33558      00000000 
 33559 fa7f 00000000 		.long	.Ldebug_ranges0+0xcd0
 33560 fa83 02       		.byte	0x2
 33561 fa84 31       		.byte	0x31
 33562 fa85 C7FA0000 		.long	0xfac7
 33563 fa89 BD01     		.uleb128 0xbd
 33564 fa8b A8B60000 		.long	0xb6a8
 33565 fa8f 00000000 		.long	.LLST199
 33566 fa93 B701     		.uleb128 0xb7
 33567 fa95 9EB60000 		.long	0xb69e
 33568 fa99 C001     		.uleb128 0xc0
 33569 fa9b 00000000 		.quad	.LVL166
 33569      00000000 
 33570 faa3 94290000 		.long	0x2994
 33571 faa7 C101     		.uleb128 0xc1
 33572 faa9 01       		.uleb128 0x1
 33573 faaa 61       		.byte	0x61
 33574 faab 19       		.uleb128 0x19
 33575 faac 91       		.byte	0x91
 33576 faad F8897F   		.sleb128 -15112
 33577 fab0 F6       		.byte	0xf6
 33578 fab1 08       		.byte	0x8
 33579 fab2 29       		.uleb128 0x29
 33580 fab3 77       		.byte	0x77
 33581 fab4 00       		.sleb128 0
 33582 fab5 F6       		.byte	0xf6
 33583 fab6 08       		.byte	0x8
 33584 fab7 29       		.uleb128 0x29
GAS LISTING /tmp/ccmMnd7l.s 			page 894


 33585 fab8 1C       		.byte	0x1c
 33586 fab9 F4       		.byte	0xf4
 33587 faba 29       		.uleb128 0x29
 33588 fabb 08       		.byte	0x8
 33589 fabc 00000000 		.long	0
 33590 fac0 00408F40 		.long	0x408f4000
 33591 fac4 1E       		.byte	0x1e
 33592 fac5 00       		.byte	0
 33593 fac6 00       		.byte	0
 33594 fac7 CA01     		.uleb128 0xca
 33595 fac9 58B50000 		.long	0xb558
 33596 facd 00000000 		.quad	.LBB3496
 33596      00000000 
 33597 fad5 00000000 		.long	.Ldebug_ranges0+0xd10
 33598 fad9 02       		.byte	0x2
 33599 fada 31       		.byte	0x31
 33600 fadb 1EFB0000 		.long	0xfb1e
 33601 fadf BD01     		.uleb128 0xbd
 33602 fae1 79B50000 		.long	0xb579
 33603 fae5 00000000 		.long	.LLST200
 33604 fae9 BD01     		.uleb128 0xbd
 33605 faeb 6CB50000 		.long	0xb56c
 33606 faef 00000000 		.long	.LLST201
 33607 faf3 C001     		.uleb128 0xc0
 33608 faf5 00000000 		.quad	.LVL168
 33608      00000000 
 33609 fafd 65800000 		.long	0x8065
 33610 fb01 C101     		.uleb128 0xc1
 33611 fb03 01       		.uleb128 0x1
 33612 fb04 55       		.byte	0x55
 33613 fb05 02       		.uleb128 0x2
 33614 fb06 73       		.byte	0x73
 33615 fb07 00       		.sleb128 0
 33616 fb08 C101     		.uleb128 0xc1
 33617 fb0a 01       		.uleb128 0x1
 33618 fb0b 54       		.byte	0x54
 33619 fb0c 09       		.uleb128 0x9
 33620 fb0d 03       		.byte	0x3
 33621 fb0e 00000000 		.quad	.LC9
 33621      00000000 
 33622 fb16 C101     		.uleb128 0xc1
 33623 fb18 01       		.uleb128 0x1
 33624 fb19 51       		.byte	0x51
 33625 fb1a 01       		.uleb128 0x1
 33626 fb1b 32       		.byte	0x32
 33627 fb1c 00       		.byte	0
 33628 fb1d 00       		.byte	0
 33629 fb1e CA01     		.uleb128 0xca
 33630 fb20 D0B60000 		.long	0xb6d0
 33631 fb24 00000000 		.quad	.LBB3501
 33631      00000000 
 33632 fb2c 00000000 		.long	.Ldebug_ranges0+0xd40
 33633 fb30 02       		.byte	0x2
 33634 fb31 31       		.byte	0x31
 33635 fb32 91FC0000 		.long	0xfc91
 33636 fb36 B701     		.uleb128 0xb7
 33637 fb38 E9B60000 		.long	0xb6e9
GAS LISTING /tmp/ccmMnd7l.s 			page 895


 33638 fb3c B701     		.uleb128 0xb7
 33639 fb3e DFB60000 		.long	0xb6df
 33640 fb42 CB01     		.uleb128 0xcb
 33641 fb44 3BE50000 		.long	0xe53b
 33642 fb48 00000000 		.quad	.LBB3502
 33642      00000000 
 33643 fb50 00000000 		.long	.Ldebug_ranges0+0xd40
 33644 fb54 08       		.byte	0x8
 33645 fb55 71       		.byte	0x71
 33646 fb56 BD01     		.uleb128 0xbd
 33647 fb58 58E50000 		.long	0xe558
 33648 fb5c 00000000 		.long	.LLST202
 33649 fb60 C201     		.uleb128 0xc2
 33650 fb62 FEE00000 		.long	0xe0fe
 33651 fb66 00000000 		.quad	.LBB3504
 33651      00000000 
 33652 fb6e 00000000 		.long	.Ldebug_ranges0+0xd80
 33653 fb72 08       		.byte	0x8
 33654 fb73 3502     		.value	0x235
 33655 fb75 43FC0000 		.long	0xfc43
 33656 fb79 BD01     		.uleb128 0xbd
 33657 fb7b 17E10000 		.long	0xe117
 33658 fb7f 00000000 		.long	.LLST203
 33659 fb83 BD01     		.uleb128 0xbd
 33660 fb85 0DE10000 		.long	0xe10d
 33661 fb89 00000000 		.long	.LLST204
 33662 fb8d C201     		.uleb128 0xc2
 33663 fb8f 58C60000 		.long	0xc658
 33664 fb93 00000000 		.quad	.LBB3506
 33664      00000000 
 33665 fb9b 00000000 		.long	.Ldebug_ranges0+0xdc0
 33666 fb9f 0D       		.byte	0xd
 33667 fba0 BC01     		.value	0x1bc
 33668 fba2 BFFB0000 		.long	0xfbbf
 33669 fba6 BD01     		.uleb128 0xbd
 33670 fba8 6CC60000 		.long	0xc66c
 33671 fbac 00000000 		.long	.LLST205
 33672 fbb0 CD01     		.uleb128 0xcd
 33673 fbb2 00000000 		.quad	.LVL208
 33673      00000000 
 33674 fbba A5800000 		.long	0x80a5
 33675 fbbe 00       		.byte	0
 33676 fbbf CC01     		.uleb128 0xcc
 33677 fbc1 57B60000 		.long	0xb657
 33678 fbc5 00000000 		.quad	.LBB3509
 33678      00000000 
 33679 fbcd 00000000 		.long	.Ldebug_ranges0+0xdf0
 33680 fbd1 0D       		.byte	0xd
 33681 fbd2 BC01     		.value	0x1bc
 33682 fbd4 BD01     		.uleb128 0xbd
 33683 fbd6 70B60000 		.long	0xb670
 33684 fbda 00000000 		.long	.LLST206
 33685 fbde BD01     		.uleb128 0xbd
 33686 fbe0 66B60000 		.long	0xb666
 33687 fbe4 00000000 		.long	.LLST207
 33688 fbe8 B801     		.uleb128 0xb8
 33689 fbea 00000000 		.quad	.LBB3511
GAS LISTING /tmp/ccmMnd7l.s 			page 896


 33689      00000000 
 33690 fbf2 2F000000 		.quad	.LBE3511-.LBB3511
 33690      00000000 
 33691 fbfa BD01     		.uleb128 0xbd
 33692 fbfc 70B60000 		.long	0xb670
 33693 fc00 00000000 		.long	.LLST208
 33694 fc04 BD01     		.uleb128 0xbd
 33695 fc06 66B60000 		.long	0xb666
 33696 fc0a 00000000 		.long	.LLST209
 33697 fc0e C501     		.uleb128 0xc5
 33698 fc10 00000000 		.quad	.LVL188
 33698      00000000 
 33699 fc18 652A0000 		.long	0x2a65
 33700 fc1c 28FC0000 		.long	0xfc28
 33701 fc20 C101     		.uleb128 0xc1
 33702 fc22 01       		.uleb128 0x1
 33703 fc23 55       		.byte	0x55
 33704 fc24 02       		.uleb128 0x2
 33705 fc25 76       		.byte	0x76
 33706 fc26 00       		.sleb128 0
 33707 fc27 00       		.byte	0
 33708 fc28 D001     		.uleb128 0xd0
 33709 fc2a 00000000 		.quad	.LVL189
 33709      00000000 
 33710 fc32 C101     		.uleb128 0xc1
 33711 fc34 01       		.uleb128 0x1
 33712 fc35 55       		.byte	0x55
 33713 fc36 02       		.uleb128 0x2
 33714 fc37 76       		.byte	0x76
 33715 fc38 00       		.sleb128 0
 33716 fc39 C101     		.uleb128 0xc1
 33717 fc3b 01       		.uleb128 0x1
 33718 fc3c 54       		.byte	0x54
 33719 fc3d 01       		.uleb128 0x1
 33720 fc3e 3A       		.byte	0x3a
 33721 fc3f 00       		.byte	0
 33722 fc40 00       		.byte	0
 33723 fc41 00       		.byte	0
 33724 fc42 00       		.byte	0
 33725 fc43 C401     		.uleb128 0xc4
 33726 fc45 79C60000 		.long	0xc679
 33727 fc49 00000000 		.quad	.LBB3518
 33727      00000000 
 33728 fc51 08000000 		.quad	.LBE3518-.LBB3518
 33728      00000000 
 33729 fc59 08       		.byte	0x8
 33730 fc5a 3502     		.value	0x235
 33731 fc5c 79FC0000 		.long	0xfc79
 33732 fc60 BD01     		.uleb128 0xbd
 33733 fc62 96C60000 		.long	0xc696
 33734 fc66 00000000 		.long	.LLST210
 33735 fc6a CD01     		.uleb128 0xcd
 33736 fc6c 00000000 		.quad	.LVL173
 33736      00000000 
 33737 fc74 76290000 		.long	0x2976
 33738 fc78 00       		.byte	0
 33739 fc79 C001     		.uleb128 0xc0
GAS LISTING /tmp/ccmMnd7l.s 			page 897


 33740 fc7b 00000000 		.quad	.LVL172
 33740      00000000 
 33741 fc83 C0290000 		.long	0x29c0
 33742 fc87 C101     		.uleb128 0xc1
 33743 fc89 01       		.uleb128 0x1
 33744 fc8a 55       		.byte	0x55
 33745 fc8b 02       		.uleb128 0x2
 33746 fc8c 73       		.byte	0x73
 33747 fc8d 00       		.sleb128 0
 33748 fc8e 00       		.byte	0
 33749 fc8f 00       		.byte	0
 33750 fc90 00       		.byte	0
 33751 fc91 CD01     		.uleb128 0xcd
 33752 fc93 00000000 		.quad	.LVL162
 33752      00000000 
 33753 fc9b 58E60000 		.long	0xe658
 33754 fc9f 00       		.byte	0
 33755 fca0 00       		.byte	0
 33756 fca1 00       		.byte	0
 33757 fca2 CF01     		.uleb128 0xcf
 33758 fca4 42DB0000 		.long	0xdb42
 33759 fca8 00000000 		.quad	.LBB3532
 33759      00000000 
 33760 fcb0 08000000 		.quad	.LBE3532-.LBB3532
 33760      00000000 
 33761 fcb8 05       		.byte	0x5
 33762 fcb9 35       		.byte	0x35
 33763 fcba DFFC0000 		.long	0xfcdf
 33764 fcbe BD01     		.uleb128 0xbd
 33765 fcc0 51DB0000 		.long	0xdb51
 33766 fcc4 00000000 		.long	.LLST211
 33767 fcc8 C001     		.uleb128 0xc0
 33768 fcca 00000000 		.quad	.LVL174
 33768      00000000 
 33769 fcd2 29300000 		.long	0x3029
 33770 fcd6 C101     		.uleb128 0xc1
 33771 fcd8 01       		.uleb128 0x1
 33772 fcd9 55       		.byte	0x55
 33773 fcda 02       		.uleb128 0x2
 33774 fcdb 7F       		.byte	0x7f
 33775 fcdc 00       		.sleb128 0
 33776 fcdd 00       		.byte	0
 33777 fcde 00       		.byte	0
 33778 fcdf CF01     		.uleb128 0xcf
 33779 fce1 42DB0000 		.long	0xdb42
 33780 fce5 00000000 		.quad	.LBB3538
 33780      00000000 
 33781 fced 08000000 		.quad	.LBE3538-.LBB3538
 33781      00000000 
 33782 fcf5 05       		.byte	0x5
 33783 fcf6 35       		.byte	0x35
 33784 fcf7 1CFD0000 		.long	0xfd1c
 33785 fcfb BD01     		.uleb128 0xbd
 33786 fcfd 51DB0000 		.long	0xdb51
 33787 fd01 00000000 		.long	.LLST212
 33788 fd05 C001     		.uleb128 0xc0
 33789 fd07 00000000 		.quad	.LVL203
GAS LISTING /tmp/ccmMnd7l.s 			page 898


 33789      00000000 
 33790 fd0f 29300000 		.long	0x3029
 33791 fd13 C101     		.uleb128 0xc1
 33792 fd15 01       		.uleb128 0x1
 33793 fd16 55       		.byte	0x55
 33794 fd17 02       		.uleb128 0x2
 33795 fd18 7F       		.byte	0x7f
 33796 fd19 00       		.sleb128 0
 33797 fd1a 00       		.byte	0
 33798 fd1b 00       		.byte	0
 33799 fd1c BB01     		.uleb128 0xbb
 33800 fd1e 00000000 		.quad	.LBB3540
 33800      00000000 
 33801 fd26 16000000 		.quad	.LBE3540-.LBB3540
 33801      00000000 
 33802 fd2e 1CFE0000 		.long	0xfe1c
 33803 fd32 BD01     		.uleb128 0xbd
 33804 fd34 75DB0000 		.long	0xdb75
 33805 fd38 00000000 		.long	.LLST213
 33806 fd3c B601     		.uleb128 0xb6
 33807 fd3e 37CA0000 		.long	0xca37
 33808 fd42 00000000 		.quad	.LBB3541
 33808      00000000 
 33809 fd4a 16000000 		.quad	.LBE3541-.LBB3541
 33809      00000000 
 33810 fd52 06       		.byte	0x6
 33811 fd53 A901     		.value	0x1a9
 33812 fd55 BD01     		.uleb128 0xbd
 33813 fd57 46CA0000 		.long	0xca46
 33814 fd5b 00000000 		.long	.LLST213
 33815 fd5f CE01     		.uleb128 0xce
 33816 fd61 B9C90000 		.long	0xc9b9
 33817 fd65 00000000 		.quad	.LBB3543
 33817      00000000 
 33818 fd6d 12000000 		.quad	.LBE3543-.LBB3543
 33818      00000000 
 33819 fd75 06       		.byte	0x6
 33820 fd76 A0       		.byte	0xa0
 33821 fd77 B701     		.uleb128 0xb7
 33822 fd79 C8C90000 		.long	0xc9c8
 33823 fd7d BD01     		.uleb128 0xbd
 33824 fd7f DEC90000 		.long	0xc9de
 33825 fd83 00000000 		.long	.LLST215
 33826 fd87 BD01     		.uleb128 0xbd
 33827 fd89 D2C90000 		.long	0xc9d2
 33828 fd8d 00000000 		.long	.LLST216
 33829 fd91 B801     		.uleb128 0xb8
 33830 fd93 00000000 		.quad	.LBB3544
 33830      00000000 
 33831 fd9b 12000000 		.quad	.LBE3544-.LBB3544
 33831      00000000 
 33832 fda3 CE01     		.uleb128 0xce
 33833 fda5 81C90000 		.long	0xc981
 33834 fda9 00000000 		.quad	.LBB3545
 33834      00000000 
 33835 fdb1 0D000000 		.quad	.LBE3545-.LBB3545
 33835      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 899


 33836 fdb9 06       		.byte	0x6
 33837 fdba B2       		.byte	0xb2
 33838 fdbb B701     		.uleb128 0xb7
 33839 fdbd 8CC90000 		.long	0xc98c
 33840 fdc1 BD01     		.uleb128 0xbd
 33841 fdc3 A6C90000 		.long	0xc9a6
 33842 fdc7 00000000 		.long	.LLST217
 33843 fdcb BD01     		.uleb128 0xbd
 33844 fdcd 99C90000 		.long	0xc999
 33845 fdd1 00000000 		.long	.LLST218
 33846 fdd5 B601     		.uleb128 0xb6
 33847 fdd7 56C90000 		.long	0xc956
 33848 fddb 00000000 		.quad	.LBB3546
 33848      00000000 
 33849 fde3 0D000000 		.quad	.LBE3546-.LBB3546
 33849      00000000 
 33850 fdeb 2F       		.byte	0x2f
 33851 fdec 7F01     		.value	0x17f
 33852 fdee B701     		.uleb128 0xb7
 33853 fdf0 65C90000 		.long	0xc965
 33854 fdf4 BD01     		.uleb128 0xbd
 33855 fdf6 7BC90000 		.long	0xc97b
 33856 fdfa 00000000 		.long	.LLST217
 33857 fdfe BD01     		.uleb128 0xbd
 33858 fe00 6FC90000 		.long	0xc96f
 33859 fe04 00000000 		.long	.LLST218
 33860 fe08 CD01     		.uleb128 0xcd
 33861 fe0a 00000000 		.quad	.LVL206
 33861      00000000 
 33862 fe12 F84F0100 		.long	0x14ff8
 33863 fe16 00       		.byte	0
 33864 fe17 00       		.byte	0
 33865 fe18 00       		.byte	0
 33866 fe19 00       		.byte	0
 33867 fe1a 00       		.byte	0
 33868 fe1b 00       		.byte	0
 33869 fe1c BB01     		.uleb128 0xbb
 33870 fe1e 00000000 		.quad	.LBB3549
 33870      00000000 
 33871 fe26 4A000000 		.quad	.LBE3549-.LBB3549
 33871      00000000 
 33872 fe2e 90FF0000 		.long	0xff90
 33873 fe32 AF01     		.uleb128 0xaf
 33874 fe34 A9D90000 		.long	0xd9a9
 33875 fe38 01       		.uleb128 0x1
 33876 fe39 56       		.byte	0x56
 33877 fe3a C401     		.uleb128 0xc4
 33878 fe3c 0CC60000 		.long	0xc60c
 33879 fe40 00000000 		.quad	.LBB3551
 33879      00000000 
 33880 fe48 0C000000 		.quad	.LBE3551-.LBB3551
 33880      00000000 
 33881 fe50 07       		.byte	0x7
 33882 fe51 2302     		.value	0x223
 33883 fe53 82FE0000 		.long	0xfe82
 33884 fe57 AF01     		.uleb128 0xaf
 33885 fe59 1BC60000 		.long	0xc61b
GAS LISTING /tmp/ccmMnd7l.s 			page 900


 33886 fe5d 01       		.uleb128 0x1
 33887 fe5e 56       		.byte	0x56
 33888 fe5f B601     		.uleb128 0xb6
 33889 fe61 3FB30000 		.long	0xb33f
 33890 fe65 00000000 		.quad	.LBB3553
 33890      00000000 
 33891 fe6d 08000000 		.quad	.LBE3553-.LBB3553
 33891      00000000 
 33892 fe75 07       		.byte	0x7
 33893 fe76 2D01     		.value	0x12d
 33894 fe78 AF01     		.uleb128 0xaf
 33895 fe7a 4EB30000 		.long	0xb34e
 33896 fe7e 01       		.uleb128 0x1
 33897 fe7f 56       		.byte	0x56
 33898 fe80 00       		.byte	0
 33899 fe81 00       		.byte	0
 33900 fe82 B601     		.uleb128 0xb6
 33901 fe84 50B40000 		.long	0xb450
 33902 fe88 00000000 		.quad	.LBB3555
 33902      00000000 
 33903 fe90 3E000000 		.quad	.LBE3555-.LBB3555
 33903      00000000 
 33904 fe98 07       		.byte	0x7
 33905 fe99 2302     		.value	0x223
 33906 fe9b BD01     		.uleb128 0xbd
 33907 fe9d 69B40000 		.long	0xb469
 33908 fea1 00000000 		.long	.LLST221
 33909 fea5 BD01     		.uleb128 0xbd
 33910 fea7 5FB40000 		.long	0xb45f
 33911 feab 00000000 		.long	.LLST222
 33912 feaf B801     		.uleb128 0xb8
 33913 feb1 00000000 		.quad	.LBB3557
 33913      00000000 
 33914 feb9 35000000 		.quad	.LBE3557-.LBB3557
 33914      00000000 
 33915 fec1 BD01     		.uleb128 0xbd
 33916 fec3 69B40000 		.long	0xb469
 33917 fec7 00000000 		.long	.LLST223
 33918 fecb BD01     		.uleb128 0xbd
 33919 fecd 5FB40000 		.long	0xb45f
 33920 fed1 00000000 		.long	.LLST224
 33921 fed5 CA01     		.uleb128 0xca
 33922 fed7 2CB40000 		.long	0xb42c
 33923 fedb 00000000 		.quad	.LBB3559
 33923      00000000 
 33924 fee3 00000000 		.long	.Ldebug_ranges0+0xe20
 33925 fee7 07       		.byte	0x7
 33926 fee8 F6       		.byte	0xf6
 33927 fee9 75FF0000 		.long	0xff75
 33928 feed D101     		.uleb128 0xd1
 33929 feef 43B40000 		.long	0xb443
 33930 fef3 7F       		.sleb128 -1
 33931 fef4 BD01     		.uleb128 0xbd
 33932 fef6 37B40000 		.long	0xb437
 33933 fefa 00000000 		.long	.LLST225
 33934 fefe CF01     		.uleb128 0xcf
 33935 ff00 B4B30000 		.long	0xb3b4
GAS LISTING /tmp/ccmMnd7l.s 			page 901


 33936 ff04 00000000 		.quad	.LBB3561
 33936      00000000 
 33937 ff0c 09000000 		.quad	.LBE3561-.LBB3561
 33937      00000000 
 33938 ff14 0F       		.byte	0xf
 33939 ff15 52       		.byte	0x52
 33940 ff16 2FFF0000 		.long	0xff2f
 33941 ff1a BD01     		.uleb128 0xbd
 33942 ff1c CBB30000 		.long	0xb3cb
 33943 ff20 00000000 		.long	.LLST226
 33944 ff24 BD01     		.uleb128 0xbd
 33945 ff26 BFB30000 		.long	0xb3bf
 33946 ff2a 00000000 		.long	.LLST227
 33947 ff2e 00       		.byte	0
 33948 ff2f CE01     		.uleb128 0xce
 33949 ff31 DEB30000 		.long	0xb3de
 33950 ff35 00000000 		.quad	.LBB3563
 33950      00000000 
 33951 ff3d 0B000000 		.quad	.LBE3563-.LBB3563
 33951      00000000 
 33952 ff45 0F       		.byte	0xf
 33953 ff46 54       		.byte	0x54
 33954 ff47 D101     		.uleb128 0xd1
 33955 ff49 F5B30000 		.long	0xb3f5
 33956 ff4d 7F       		.sleb128 -1
 33957 ff4e BD01     		.uleb128 0xbd
 33958 ff50 E9B30000 		.long	0xb3e9
 33959 ff54 00000000 		.long	.LLST228
 33960 ff58 B801     		.uleb128 0xb8
 33961 ff5a 00000000 		.quad	.LBB3564
 33961      00000000 
 33962 ff62 0B000000 		.quad	.LBE3564-.LBB3564
 33962      00000000 
 33963 ff6a BC01     		.uleb128 0xbc
 33964 ff6c 03B40000 		.long	0xb403
 33965 ff70 01       		.uleb128 0x1
 33966 ff71 50       		.byte	0x50
 33967 ff72 00       		.byte	0
 33968 ff73 00       		.byte	0
 33969 ff74 00       		.byte	0
 33970 ff75 C001     		.uleb128 0xc0
 33971 ff77 00000000 		.quad	.LVL215
 33971      00000000 
 33972 ff7f 0B0C0000 		.long	0xc0b
 33973 ff83 C101     		.uleb128 0xc1
 33974 ff85 01       		.uleb128 0x1
 33975 ff86 54       		.byte	0x54
 33976 ff87 04       		.uleb128 0x4
 33977 ff88 91       		.byte	0x91
 33978 ff89 A0B17F   		.sleb128 -10080
 33979 ff8c 00       		.byte	0
 33980 ff8d 00       		.byte	0
 33981 ff8e 00       		.byte	0
 33982 ff8f 00       		.byte	0
 33983 ff90 D001     		.uleb128 0xd0
 33984 ff92 00000000 		.quad	.LVL130
 33984      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 902


 33985 ff9a C101     		.uleb128 0xc1
 33986 ff9c 01       		.uleb128 0x1
 33987 ff9d 55       		.byte	0x55
 33988 ff9e 02       		.uleb128 0x2
 33989 ff9f 76       		.byte	0x76
 33990 ffa0 00       		.sleb128 0
 33991 ffa1 C101     		.uleb128 0xc1
 33992 ffa3 01       		.uleb128 0x1
 33993 ffa4 54       		.byte	0x54
 33994 ffa5 09       		.uleb128 0x9
 33995 ffa6 03       		.byte	0x3
 33996 ffa7 00000000 		.quad	.LC4
 33996      00000000 
 33997 ffaf C101     		.uleb128 0xc1
 33998 ffb1 01       		.uleb128 0x1
 33999 ffb2 51       		.byte	0x51
 34000 ffb3 04       		.uleb128 0x4
 34001 ffb4 91       		.byte	0x91
 34002 ffb5 8F8A7F   		.sleb128 -15089
 34003 ffb8 00       		.byte	0
 34004 ffb9 00       		.byte	0
 34005 ffba C501     		.uleb128 0xc5
 34006 ffbc 00000000 		.quad	.LVL186
 34006      00000000 
 34007 ffc4 0D500100 		.long	0x1500d
 34008 ffc8 DAFF0000 		.long	0xffda
 34009 ffcc C101     		.uleb128 0xc1
 34010 ffce 01       		.uleb128 0x1
 34011 ffcf 54       		.byte	0x54
 34012 ffd0 01       		.uleb128 0x1
 34013 ffd1 30       		.byte	0x30
 34014 ffd2 C101     		.uleb128 0xc1
 34015 ffd4 01       		.uleb128 0x1
 34016 ffd5 51       		.byte	0x51
 34017 ffd6 02       		.uleb128 0x2
 34018 ffd7 76       		.byte	0x76
 34019 ffd8 00       		.sleb128 0
 34020 ffd9 00       		.byte	0
 34021 ffda C001     		.uleb128 0xc0
 34022 ffdc 00000000 		.quad	.LVL207
 34022      00000000 
 34023 ffe4 2B500100 		.long	0x1502b
 34024 ffe8 C101     		.uleb128 0xc1
 34025 ffea 01       		.uleb128 0x1
 34026 ffeb 55       		.byte	0x55
 34027 ffec 02       		.uleb128 0x2
 34028 ffed 73       		.byte	0x73
 34029 ffee 00       		.sleb128 0
 34030 ffef 00       		.byte	0
 34031 fff0 00       		.byte	0
 34032 fff1 D201     		.uleb128 0xd2
 34033 fff3 8E7F0000 		.long	0x7f8e
 34034 fff7 00000000 		.quad	.LFB6560
 34034      00000000 
 34035 ffff 08010000 		.quad	.LFE6560-.LFB6560
 34035      00000000 
 34036 10007 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 903


 34037 10008 9C       		.byte	0x9c
 34038 10009 18020100 		.long	0x10218
 34039 1000d 35       		.uleb128 0x35
 34040 1000e 00000000 		.long	.LASF1012
 34041 10012 C68C0000 		.long	0x8cc6
 34042 10016 35       		.uleb128 0x35
 34043 10017 00000000 		.long	.LASF1047
 34044 1001b 34810000 		.long	0x8134
 34045 1001f 18       		.uleb128 0x18
 34046 10020 5F547000 		.string	"_Tp"
 34047 10024 29000000 		.long	0x29
 34048 10028 35       		.uleb128 0x35
 34049 10029 00000000 		.long	.LASF1013
 34050 1002d 58810000 		.long	0x8158
 34051 10031 D301     		.uleb128 0xd3
 34052 10033 00000000 		.long	.LASF1553
 34053 10037 10       		.byte	0x10
 34054 10038 CF       		.byte	0xcf
 34055 10039 C68C0000 		.long	0x8cc6
 34056 1003d 01       		.uleb128 0x1
 34057 1003e 55       		.byte	0x55
 34058 1003f C601     		.uleb128 0xc6
 34059 10041 00000000 		.long	.LASF1573
 34060 10045 10       		.byte	0x10
 34061 10046 CF       		.byte	0xcf
 34062 10047 34810000 		.long	0x8134
 34063 1004b 00000000 		.long	.LLST229
 34064 1004f C601     		.uleb128 0xc6
 34065 10051 00000000 		.long	.LASF1578
 34066 10055 10       		.byte	0x10
 34067 10056 D0       		.byte	0xd0
 34068 10057 34810000 		.long	0x8134
 34069 1005b 00000000 		.long	.LLST230
 34070 1005f D301     		.uleb128 0xd3
 34071 10061 00000000 		.long	.LASF1309
 34072 10065 10       		.byte	0x10
 34073 10066 D0       		.byte	0xd0
 34074 10067 29000000 		.long	0x29
 34075 1006b 01       		.uleb128 0x1
 34076 1006c 61       		.byte	0x61
 34077 1006d D301     		.uleb128 0xd3
 34078 1006f 00000000 		.long	.LASF1560
 34079 10073 10       		.byte	0x10
 34080 10074 D0       		.byte	0xd0
 34081 10075 58810000 		.long	0x8158
 34082 10079 02       		.uleb128 0x2
 34083 1007a 91       		.byte	0x91
 34084 1007b 00       		.sleb128 0
 34085 1007c B801     		.uleb128 0xb8
 34086 1007e 00000000 		.quad	.LBB3571
 34086      00000000 
 34087 10086 08010000 		.quad	.LBE3571-.LBB3571
 34087      00000000 
 34088 1008e C701     		.uleb128 0xc7
 34089 10090 00000000 		.long	.LASF1574
 34090 10094 10       		.byte	0x10
 34091 10095 D2       		.byte	0xd2
GAS LISTING /tmp/ccmMnd7l.s 			page 904


 34092 10096 B5AC0000 		.long	0xacb5
 34093 1009a 00000000 		.long	.LLST231
 34094 1009e C701     		.uleb128 0xc7
 34095 100a0 00000000 		.long	.LASF1617
 34096 100a4 10       		.byte	0x10
 34097 100a5 D3       		.byte	0xd3
 34098 100a6 34810000 		.long	0x8134
 34099 100aa 00000000 		.long	.LLST232
 34100 100ae CF01     		.uleb128 0xcf
 34101 100b0 58D00000 		.long	0xd058
 34102 100b4 00000000 		.quad	.LBB3572
 34102      00000000 
 34103 100bc 07000000 		.quad	.LBE3572-.LBB3572
 34103      00000000 
 34104 100c4 10       		.byte	0x10
 34105 100c5 D8       		.byte	0xd8
 34106 100c6 D7000100 		.long	0x100d7
 34107 100ca B701     		.uleb128 0xb7
 34108 100cc 71D00000 		.long	0xd071
 34109 100d0 B701     		.uleb128 0xb7
 34110 100d2 67D00000 		.long	0xd067
 34111 100d6 00       		.byte	0
 34112 100d7 CA01     		.uleb128 0xca
 34113 100d9 B5CB0000 		.long	0xcbb5
 34114 100dd 00000000 		.quad	.LBB3574
 34114      00000000 
 34115 100e5 00000000 		.long	.Ldebug_ranges0+0xe60
 34116 100e9 10       		.byte	0x10
 34117 100ea D7       		.byte	0xd7
 34118 100eb 02010100 		.long	0x10102
 34119 100ef B701     		.uleb128 0xb7
 34120 100f1 D6CB0000 		.long	0xcbd6
 34121 100f5 B701     		.uleb128 0xb7
 34122 100f7 ECCB0000 		.long	0xcbec
 34123 100fb B701     		.uleb128 0xb7
 34124 100fd E0CB0000 		.long	0xcbe0
 34125 10101 00       		.byte	0
 34126 10102 CF01     		.uleb128 0xcf
 34127 10104 58D00000 		.long	0xd058
 34128 10108 00000000 		.quad	.LBB3577
 34128      00000000 
 34129 10110 04000000 		.quad	.LBE3577-.LBB3577
 34129      00000000 
 34130 10118 10       		.byte	0x10
 34131 10119 D8       		.byte	0xd8
 34132 1011a 2B010100 		.long	0x1012b
 34133 1011e B701     		.uleb128 0xb7
 34134 10120 71D00000 		.long	0xd071
 34135 10124 B701     		.uleb128 0xb7
 34136 10126 67D00000 		.long	0xd067
 34137 1012a 00       		.byte	0
 34138 1012b CF01     		.uleb128 0xcf
 34139 1012d DEDB0000 		.long	0xdbde
 34140 10131 00000000 		.quad	.LBB3580
 34140      00000000 
 34141 10139 67000000 		.quad	.LBE3580-.LBB3580
 34141      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 905


 34142 10141 10       		.byte	0x10
 34143 10142 E4       		.byte	0xe4
 34144 10143 E9010100 		.long	0x101e9
 34145 10147 BD01     		.uleb128 0xbd
 34146 10149 31DC0000 		.long	0xdc31
 34147 1014d 00000000 		.long	.LLST233
 34148 10151 BD01     		.uleb128 0xbd
 34149 10153 25DC0000 		.long	0xdc25
 34150 10157 00000000 		.long	.LLST234
 34151 1015b BD01     		.uleb128 0xbd
 34152 1015d 19DC0000 		.long	0xdc19
 34153 10161 00000000 		.long	.LLST235
 34154 10165 BD01     		.uleb128 0xbd
 34155 10167 0DDC0000 		.long	0xdc0d
 34156 1016b 00000000 		.long	.LLST236
 34157 1016f B801     		.uleb128 0xb8
 34158 10171 00000000 		.quad	.LBB3581
 34158      00000000 
 34159 10179 67000000 		.quad	.LBE3581-.LBB3581
 34159      00000000 
 34160 10181 BA01     		.uleb128 0xba
 34161 10183 4BDC0000 		.long	0xdc4b
 34162 10187 00000000 		.long	.LLST237
 34163 1018b CA01     		.uleb128 0xca
 34164 1018d 90DB0000 		.long	0xdb90
 34165 10191 00000000 		.quad	.LBB3582
 34165      00000000 
 34166 10199 00000000 		.long	.Ldebug_ranges0+0xe90
 34167 1019d 10       		.byte	0x10
 34168 1019e 81       		.byte	0x81
 34169 1019f BA010100 		.long	0x101ba
 34170 101a3 B701     		.uleb128 0xb7
 34171 101a5 B1DB0000 		.long	0xdbb1
 34172 101a9 BD01     		.uleb128 0xbd
 34173 101ab C7DB0000 		.long	0xdbc7
 34174 101af 00000000 		.long	.LLST238
 34175 101b3 B701     		.uleb128 0xb7
 34176 101b5 BBDB0000 		.long	0xdbbb
 34177 101b9 00       		.byte	0
 34178 101ba CE01     		.uleb128 0xce
 34179 101bc 58D00000 		.long	0xd058
 34180 101c0 00000000 		.quad	.LBB3585
 34180      00000000 
 34181 101c8 04000000 		.quad	.LBE3585-.LBB3585
 34181      00000000 
 34182 101d0 10       		.byte	0x10
 34183 101d1 83       		.byte	0x83
 34184 101d2 BD01     		.uleb128 0xbd
 34185 101d4 71D00000 		.long	0xd071
 34186 101d8 00000000 		.long	.LLST239
 34187 101dc BD01     		.uleb128 0xbd
 34188 101de 67D00000 		.long	0xd067
 34189 101e2 00000000 		.long	.LLST240
 34190 101e6 00       		.byte	0
 34191 101e7 00       		.byte	0
 34192 101e8 00       		.byte	0
 34193 101e9 CE01     		.uleb128 0xce
GAS LISTING /tmp/ccmMnd7l.s 			page 906


 34194 101eb 58D00000 		.long	0xd058
 34195 101ef 00000000 		.quad	.LBB3588
 34195      00000000 
 34196 101f7 04000000 		.quad	.LBE3588-.LBB3588
 34196      00000000 
 34197 101ff 10       		.byte	0x10
 34198 10200 E0       		.byte	0xe0
 34199 10201 BD01     		.uleb128 0xbd
 34200 10203 71D00000 		.long	0xd071
 34201 10207 00000000 		.long	.LLST241
 34202 1020b BD01     		.uleb128 0xbd
 34203 1020d 67D00000 		.long	0xd067
 34204 10211 00000000 		.long	.LLST242
 34205 10215 00       		.byte	0
 34206 10216 00       		.byte	0
 34207 10217 00       		.byte	0
 34208 10218 D401     		.uleb128 0xd4
 34209 1021a 49DE0000 		.long	0xde49
 34210 1021e 00000000 		.quad	.LFB6650
 34210      00000000 
 34211 10226 1F020000 		.quad	.LFE6650-.LFB6650
 34211      00000000 
 34212 1022e 01       		.uleb128 0x1
 34213 1022f 9C       		.byte	0x9c
 34214 10230 C2070100 		.long	0x107c2
 34215 10234 AF01     		.uleb128 0xaf
 34216 10236 6FDE0000 		.long	0xde6f
 34217 1023a 01       		.uleb128 0x1
 34218 1023b 5C       		.byte	0x5c
 34219 1023c AF01     		.uleb128 0xaf
 34220 1023e 7CDE0000 		.long	0xde7c
 34221 10242 01       		.uleb128 0x1
 34222 10243 53       		.byte	0x53
 34223 10244 AF01     		.uleb128 0xaf
 34224 10246 89DE0000 		.long	0xde89
 34225 1024a 01       		.uleb128 0x1
 34226 1024b 5D       		.byte	0x5d
 34227 1024c C201     		.uleb128 0xc2
 34228 1024e 16D00000 		.long	0xd016
 34229 10252 00000000 		.quad	.LBB3591
 34229      00000000 
 34230 1025a 00000000 		.long	.Ldebug_ranges0+0xec0
 34231 1025e 0C       		.byte	0xc
 34232 1025f 9707     		.value	0x797
 34233 10261 72020100 		.long	0x10272
 34234 10265 B701     		.uleb128 0xb7
 34235 10267 40D00000 		.long	0xd040
 34236 1026b B701     		.uleb128 0xb7
 34237 1026d 33D00000 		.long	0xd033
 34238 10271 00       		.byte	0
 34239 10272 B401     		.uleb128 0xb4
 34240 10274 00000000 		.long	.Ldebug_ranges0+0xf00
 34241 10278 B901     		.uleb128 0xb9
 34242 1027a A5DE0000 		.long	0xdea5
 34243 1027e C201     		.uleb128 0xc2
 34244 10280 74E10000 		.long	0xe174
 34245 10284 00000000 		.quad	.LBB3597
GAS LISTING /tmp/ccmMnd7l.s 			page 907


 34245      00000000 
 34246 1028c 00000000 		.long	.Ldebug_ranges0+0xf30
 34247 10290 0C       		.byte	0xc
 34248 10291 A007     		.value	0x7a0
 34249 10293 2E060100 		.long	0x1062e
 34250 10297 B701     		.uleb128 0xb7
 34251 10299 ABE10000 		.long	0xe1ab
 34252 1029d B701     		.uleb128 0xb7
 34253 1029f 9EE10000 		.long	0xe19e
 34254 102a3 B701     		.uleb128 0xb7
 34255 102a5 91E10000 		.long	0xe191
 34256 102a9 B401     		.uleb128 0xb4
 34257 102ab 00000000 		.long	.Ldebug_ranges0+0xf30
 34258 102af B901     		.uleb128 0xb9
 34259 102b1 BAE10000 		.long	0xe1ba
 34260 102b5 C201     		.uleb128 0xc2
 34261 102b7 16D00000 		.long	0xd016
 34262 102bb 00000000 		.quad	.LBB3599
 34262      00000000 
 34263 102c3 00000000 		.long	.Ldebug_ranges0+0xf80
 34264 102c7 0C       		.byte	0xc
 34265 102c8 7F07     		.value	0x77f
 34266 102ca DB020100 		.long	0x102db
 34267 102ce B701     		.uleb128 0xb7
 34268 102d0 40D00000 		.long	0xd040
 34269 102d4 B701     		.uleb128 0xb7
 34270 102d6 33D00000 		.long	0xd033
 34271 102da 00       		.byte	0
 34272 102db C201     		.uleb128 0xc2
 34273 102dd C9E10000 		.long	0xe1c9
 34274 102e1 00000000 		.quad	.LBB3602
 34274      00000000 
 34275 102e9 00000000 		.long	.Ldebug_ranges0+0xfb0
 34276 102ed 0C       		.byte	0xc
 34277 102ee 8007     		.value	0x780
 34278 102f0 9E040100 		.long	0x1049e
 34279 102f4 B701     		.uleb128 0xb7
 34280 102f6 16E20000 		.long	0xe216
 34281 102fa B701     		.uleb128 0xb7
 34282 102fc 0AE20000 		.long	0xe20a
 34283 10300 B701     		.uleb128 0xb7
 34284 10302 FEE10000 		.long	0xe1fe
 34285 10306 B701     		.uleb128 0xb7
 34286 10308 F2E10000 		.long	0xe1f2
 34287 1030c B701     		.uleb128 0xb7
 34288 1030e E6E10000 		.long	0xe1e6
 34289 10312 CA01     		.uleb128 0xca
 34290 10314 B5CB0000 		.long	0xcbb5
 34291 10318 00000000 		.quad	.LBB3604
 34291      00000000 
 34292 10320 00000000 		.long	.Ldebug_ranges0+0x1000
 34293 10324 0C       		.byte	0xc
 34294 10325 51       		.byte	0x51
 34295 10326 3D030100 		.long	0x1033d
 34296 1032a B701     		.uleb128 0xb7
 34297 1032c D6CB0000 		.long	0xcbd6
 34298 10330 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 908


 34299 10332 ECCB0000 		.long	0xcbec
 34300 10336 B701     		.uleb128 0xb7
 34301 10338 E0CB0000 		.long	0xcbe0
 34302 1033c 00       		.byte	0
 34303 1033d CF01     		.uleb128 0xcf
 34304 1033f B5CB0000 		.long	0xcbb5
 34305 10343 00000000 		.quad	.LBB3607
 34305      00000000 
 34306 1034b 05000000 		.quad	.LBE3607-.LBB3607
 34306      00000000 
 34307 10353 0C       		.byte	0xc
 34308 10354 53       		.byte	0x53
 34309 10355 6C030100 		.long	0x1036c
 34310 10359 B701     		.uleb128 0xb7
 34311 1035b D6CB0000 		.long	0xcbd6
 34312 1035f B701     		.uleb128 0xb7
 34313 10361 ECCB0000 		.long	0xcbec
 34314 10365 B701     		.uleb128 0xb7
 34315 10367 E0CB0000 		.long	0xcbe0
 34316 1036b 00       		.byte	0
 34317 1036c CF01     		.uleb128 0xcf
 34318 1036e 4CCF0000 		.long	0xcf4c
 34319 10372 00000000 		.quad	.LBB3610
 34319      00000000 
 34320 1037a 1E000000 		.quad	.LBE3610-.LBB3610
 34320      00000000 
 34321 10382 0C       		.byte	0xc
 34322 10383 5D       		.byte	0x5d
 34323 10384 D3030100 		.long	0x103d3
 34324 10388 B701     		.uleb128 0xb7
 34325 1038a 75CF0000 		.long	0xcf75
 34326 1038e B701     		.uleb128 0xb7
 34327 10390 69CF0000 		.long	0xcf69
 34328 10394 CE01     		.uleb128 0xce
 34329 10396 06CF0000 		.long	0xcf06
 34330 1039a 00000000 		.quad	.LBB3611
 34330      00000000 
 34331 103a2 1E000000 		.quad	.LBE3611-.LBB3611
 34331      00000000 
 34332 103aa 14       		.byte	0x14
 34333 103ab 94       		.byte	0x94
 34334 103ac B701     		.uleb128 0xb7
 34335 103ae 26CF0000 		.long	0xcf26
 34336 103b2 B701     		.uleb128 0xb7
 34337 103b4 1ACF0000 		.long	0xcf1a
 34338 103b8 B801     		.uleb128 0xb8
 34339 103ba 00000000 		.quad	.LBB3612
 34339      00000000 
 34340 103c2 1E000000 		.quad	.LBE3612-.LBB3612
 34340      00000000 
 34341 103ca B901     		.uleb128 0xb9
 34342 103cc 34CF0000 		.long	0xcf34
 34343 103d0 00       		.byte	0
 34344 103d1 00       		.byte	0
 34345 103d2 00       		.byte	0
 34346 103d3 CF01     		.uleb128 0xcf
 34347 103d5 4CCF0000 		.long	0xcf4c
GAS LISTING /tmp/ccmMnd7l.s 			page 909


 34348 103d9 00000000 		.quad	.LBB3613
 34348      00000000 
 34349 103e1 27000000 		.quad	.LBE3613-.LBB3613
 34349      00000000 
 34350 103e9 0C       		.byte	0xc
 34351 103ea 54       		.byte	0x54
 34352 103eb 3A040100 		.long	0x1043a
 34353 103ef B701     		.uleb128 0xb7
 34354 103f1 75CF0000 		.long	0xcf75
 34355 103f5 B701     		.uleb128 0xb7
 34356 103f7 69CF0000 		.long	0xcf69
 34357 103fb CE01     		.uleb128 0xce
 34358 103fd 06CF0000 		.long	0xcf06
 34359 10401 00000000 		.quad	.LBB3614
 34359      00000000 
 34360 10409 27000000 		.quad	.LBE3614-.LBB3614
 34360      00000000 
 34361 10411 14       		.byte	0x14
 34362 10412 94       		.byte	0x94
 34363 10413 B701     		.uleb128 0xb7
 34364 10415 26CF0000 		.long	0xcf26
 34365 10419 B701     		.uleb128 0xb7
 34366 1041b 1ACF0000 		.long	0xcf1a
 34367 1041f B801     		.uleb128 0xb8
 34368 10421 00000000 		.quad	.LBB3615
 34368      00000000 
 34369 10429 27000000 		.quad	.LBE3615-.LBB3615
 34369      00000000 
 34370 10431 B901     		.uleb128 0xb9
 34371 10433 34CF0000 		.long	0xcf34
 34372 10437 00       		.byte	0
 34373 10438 00       		.byte	0
 34374 10439 00       		.byte	0
 34375 1043a CE01     		.uleb128 0xce
 34376 1043c 4CCF0000 		.long	0xcf4c
 34377 10440 00000000 		.quad	.LBB3616
 34377      00000000 
 34378 10448 1D000000 		.quad	.LBE3616-.LBB3616
 34378      00000000 
 34379 10450 0C       		.byte	0xc
 34380 10451 5B       		.byte	0x5b
 34381 10452 B701     		.uleb128 0xb7
 34382 10454 75CF0000 		.long	0xcf75
 34383 10458 B701     		.uleb128 0xb7
 34384 1045a 69CF0000 		.long	0xcf69
 34385 1045e CE01     		.uleb128 0xce
 34386 10460 06CF0000 		.long	0xcf06
 34387 10464 00000000 		.quad	.LBB3617
 34387      00000000 
 34388 1046c 1D000000 		.quad	.LBE3617-.LBB3617
 34388      00000000 
 34389 10474 14       		.byte	0x14
 34390 10475 94       		.byte	0x94
 34391 10476 B701     		.uleb128 0xb7
 34392 10478 26CF0000 		.long	0xcf26
 34393 1047c B701     		.uleb128 0xb7
 34394 1047e 1ACF0000 		.long	0xcf1a
GAS LISTING /tmp/ccmMnd7l.s 			page 910


 34395 10482 B801     		.uleb128 0xb8
 34396 10484 00000000 		.quad	.LBB3618
 34396      00000000 
 34397 1048c 1D000000 		.quad	.LBE3618-.LBB3618
 34397      00000000 
 34398 10494 B901     		.uleb128 0xb9
 34399 10496 34CF0000 		.long	0xcf34
 34400 1049a 00       		.byte	0
 34401 1049b 00       		.byte	0
 34402 1049c 00       		.byte	0
 34403 1049d 00       		.byte	0
 34404 1049e C401     		.uleb128 0xc4
 34405 104a0 58D00000 		.long	0xd058
 34406 104a4 00000000 		.quad	.LBB3624
 34406      00000000 
 34407 104ac 04000000 		.quad	.LBE3624-.LBB3624
 34407      00000000 
 34408 104b4 0C       		.byte	0xc
 34409 104b5 7F07     		.value	0x77f
 34410 104b7 C8040100 		.long	0x104c8
 34411 104bb B701     		.uleb128 0xb7
 34412 104bd 71D00000 		.long	0xd071
 34413 104c1 B701     		.uleb128 0xb7
 34414 104c3 67D00000 		.long	0xd067
 34415 104c7 00       		.byte	0
 34416 104c8 CC01     		.uleb128 0xcc
 34417 104ca C4CF0000 		.long	0xcfc4
 34418 104ce 00000000 		.quad	.LBB3627
 34418      00000000 
 34419 104d6 00000000 		.long	.Ldebug_ranges0+0x1030
 34420 104da 0C       		.byte	0xc
 34421 104db 8207     		.value	0x782
 34422 104dd B701     		.uleb128 0xb7
 34423 104df FBCF0000 		.long	0xcffb
 34424 104e3 B701     		.uleb128 0xb7
 34425 104e5 EECF0000 		.long	0xcfee
 34426 104e9 B701     		.uleb128 0xb7
 34427 104eb E1CF0000 		.long	0xcfe1
 34428 104ef C401     		.uleb128 0xc4
 34429 104f1 52C00000 		.long	0xc052
 34430 104f5 00000000 		.quad	.LBB3629
 34430      00000000 
 34431 104fd 07000000 		.quad	.LBE3629-.LBB3629
 34431      00000000 
 34432 10505 0C       		.byte	0xc
 34433 10506 6E07     		.value	0x76e
 34434 10508 13050100 		.long	0x10513
 34435 1050c B701     		.uleb128 0xb7
 34436 1050e 61C00000 		.long	0xc061
 34437 10512 00       		.byte	0
 34438 10513 C401     		.uleb128 0xc4
 34439 10515 B5CB0000 		.long	0xcbb5
 34440 10519 00000000 		.quad	.LBB3631
 34440      00000000 
 34441 10521 05000000 		.quad	.LBE3631-.LBB3631
 34441      00000000 
 34442 10529 0C       		.byte	0xc
GAS LISTING /tmp/ccmMnd7l.s 			page 911


 34443 1052a 6D07     		.value	0x76d
 34444 1052c 43050100 		.long	0x10543
 34445 10530 B701     		.uleb128 0xb7
 34446 10532 D6CB0000 		.long	0xcbd6
 34447 10536 B701     		.uleb128 0xb7
 34448 10538 ECCB0000 		.long	0xcbec
 34449 1053c B701     		.uleb128 0xb7
 34450 1053e E0CB0000 		.long	0xcbe0
 34451 10542 00       		.byte	0
 34452 10543 C201     		.uleb128 0xc2
 34453 10545 CECC0000 		.long	0xccce
 34454 10549 00000000 		.quad	.LBB3633
 34454      00000000 
 34455 10551 00000000 		.long	.Ldebug_ranges0+0x1060
 34456 10555 0C       		.byte	0xc
 34457 10556 6F07     		.value	0x76f
 34458 10558 63050100 		.long	0x10563
 34459 1055c B701     		.uleb128 0xb7
 34460 1055e DDCC0000 		.long	0xccdd
 34461 10562 00       		.byte	0
 34462 10563 C401     		.uleb128 0xc4
 34463 10565 CECC0000 		.long	0xccce
 34464 10569 00000000 		.quad	.LBB3637
 34464      00000000 
 34465 10571 07000000 		.quad	.LBE3637-.LBB3637
 34465      00000000 
 34466 10579 0C       		.byte	0xc
 34467 1057a 7107     		.value	0x771
 34468 1057c 87050100 		.long	0x10587
 34469 10580 B701     		.uleb128 0xb7
 34470 10582 DDCC0000 		.long	0xccdd
 34471 10586 00       		.byte	0
 34472 10587 C401     		.uleb128 0xc4
 34473 10589 B5CB0000 		.long	0xcbb5
 34474 1058d 00000000 		.quad	.LBB3639
 34474      00000000 
 34475 10595 05000000 		.quad	.LBE3639-.LBB3639
 34475      00000000 
 34476 1059d 0C       		.byte	0xc
 34477 1059e 7007     		.value	0x770
 34478 105a0 B7050100 		.long	0x105b7
 34479 105a4 B701     		.uleb128 0xb7
 34480 105a6 D6CB0000 		.long	0xcbd6
 34481 105aa B701     		.uleb128 0xb7
 34482 105ac ECCB0000 		.long	0xcbec
 34483 105b0 B701     		.uleb128 0xb7
 34484 105b2 E0CB0000 		.long	0xcbe0
 34485 105b6 00       		.byte	0
 34486 105b7 C201     		.uleb128 0xc2
 34487 105b9 4CCF0000 		.long	0xcf4c
 34488 105bd 00000000 		.quad	.LBB3641
 34488      00000000 
 34489 105c5 00000000 		.long	.Ldebug_ranges0+0x10a0
 34490 105c9 0C       		.byte	0xc
 34491 105ca 7407     		.value	0x774
 34492 105cc 0B060100 		.long	0x1060b
 34493 105d0 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 912


 34494 105d2 75CF0000 		.long	0xcf75
 34495 105d6 B701     		.uleb128 0xb7
 34496 105d8 69CF0000 		.long	0xcf69
 34497 105dc CB01     		.uleb128 0xcb
 34498 105de 06CF0000 		.long	0xcf06
 34499 105e2 00000000 		.quad	.LBB3642
 34499      00000000 
 34500 105ea 00000000 		.long	.Ldebug_ranges0+0x10a0
 34501 105ee 14       		.byte	0x14
 34502 105ef 94       		.byte	0x94
 34503 105f0 B701     		.uleb128 0xb7
 34504 105f2 26CF0000 		.long	0xcf26
 34505 105f6 B701     		.uleb128 0xb7
 34506 105f8 1ACF0000 		.long	0xcf1a
 34507 105fc B401     		.uleb128 0xb4
 34508 105fe 00000000 		.long	.Ldebug_ranges0+0x10a0
 34509 10602 B901     		.uleb128 0xb9
 34510 10604 34CF0000 		.long	0xcf34
 34511 10608 00       		.byte	0
 34512 10609 00       		.byte	0
 34513 1060a 00       		.byte	0
 34514 1060b B601     		.uleb128 0xb6
 34515 1060d 52C00000 		.long	0xc052
 34516 10611 00000000 		.quad	.LBB3646
 34516      00000000 
 34517 10619 04000000 		.quad	.LBE3646-.LBB3646
 34517      00000000 
 34518 10621 0C       		.byte	0xc
 34519 10622 7507     		.value	0x775
 34520 10624 B701     		.uleb128 0xb7
 34521 10626 61C00000 		.long	0xc061
 34522 1062a 00       		.byte	0
 34523 1062b 00       		.byte	0
 34524 1062c 00       		.byte	0
 34525 1062d 00       		.byte	0
 34526 1062e B601     		.uleb128 0xb6
 34527 10630 F7DD0000 		.long	0xddf7
 34528 10634 00000000 		.quad	.LBB3660
 34528      00000000 
 34529 1063c 6C000000 		.quad	.LBE3660-.LBB3660
 34529      00000000 
 34530 10644 0C       		.byte	0xc
 34531 10645 9B07     		.value	0x79b
 34532 10647 B701     		.uleb128 0xb7
 34533 10649 2EDE0000 		.long	0xde2e
 34534 1064d B701     		.uleb128 0xb7
 34535 1064f 21DE0000 		.long	0xde21
 34536 10653 B701     		.uleb128 0xb7
 34537 10655 14DE0000 		.long	0xde14
 34538 10659 C401     		.uleb128 0xc4
 34539 1065b 50DD0000 		.long	0xdd50
 34540 1065f 00000000 		.quad	.LBB3661
 34540      00000000 
 34541 10667 35000000 		.quad	.LBE3661-.LBB3661
 34541      00000000 
 34542 1066f 0C       		.byte	0xc
 34543 10670 8C07     		.value	0x78c
GAS LISTING /tmp/ccmMnd7l.s 			page 913


 34544 10672 0F070100 		.long	0x1070f
 34545 10676 B701     		.uleb128 0xb7
 34546 10678 87DD0000 		.long	0xdd87
 34547 1067c B701     		.uleb128 0xb7
 34548 1067e 7ADD0000 		.long	0xdd7a
 34549 10682 B701     		.uleb128 0xb7
 34550 10684 6DDD0000 		.long	0xdd6d
 34551 10688 B601     		.uleb128 0xb6
 34552 1068a 59DC0000 		.long	0xdc59
 34553 1068e 00000000 		.quad	.LBB3662
 34553      00000000 
 34554 10696 35000000 		.quad	.LBE3662-.LBB3662
 34554      00000000 
 34555 1069e 0C       		.byte	0xc
 34556 1069f 8906     		.value	0x689
 34557 106a1 B701     		.uleb128 0xb7
 34558 106a3 83DC0000 		.long	0xdc83
 34559 106a7 B701     		.uleb128 0xb7
 34560 106a9 76DC0000 		.long	0xdc76
 34561 106ad B801     		.uleb128 0xb8
 34562 106af 00000000 		.quad	.LBB3663
 34562      00000000 
 34563 106b7 35000000 		.quad	.LBE3663-.LBB3663
 34563      00000000 
 34564 106bf B901     		.uleb128 0xb9
 34565 106c1 B7DC0000 		.long	0xdcb7
 34566 106c5 BC01     		.uleb128 0xbc
 34567 106c7 C9DC0000 		.long	0xdcc9
 34568 106cb 01       		.uleb128 0x1
 34569 106cc 5D       		.byte	0x5d
 34570 106cd C201     		.uleb128 0xc2
 34571 106cf 16D00000 		.long	0xd016
 34572 106d3 00000000 		.quad	.LBB3664
 34572      00000000 
 34573 106db 00000000 		.long	.Ldebug_ranges0+0x10d0
 34574 106df 10       		.byte	0x10
 34575 106e0 4801     		.value	0x148
 34576 106e2 F3060100 		.long	0x106f3
 34577 106e6 B701     		.uleb128 0xb7
 34578 106e8 40D00000 		.long	0xd040
 34579 106ec B701     		.uleb128 0xb7
 34580 106ee 33D00000 		.long	0xd033
 34581 106f2 00       		.byte	0
 34582 106f3 B801     		.uleb128 0xb8
 34583 106f5 00000000 		.quad	.LBB3668
 34583      00000000 
 34584 106fd 25000000 		.quad	.LBE3668-.LBB3668
 34584      00000000 
 34585 10705 B901     		.uleb128 0xb9
 34586 10707 D8DC0000 		.long	0xdcd8
 34587 1070b 00       		.byte	0
 34588 1070c 00       		.byte	0
 34589 1070d 00       		.byte	0
 34590 1070e 00       		.byte	0
 34591 1070f B601     		.uleb128 0xb6
 34592 10711 B2DD0000 		.long	0xddb2
 34593 10715 00000000 		.quad	.LBB3669
GAS LISTING /tmp/ccmMnd7l.s 			page 914


 34593      00000000 
 34594 1071d 37000000 		.quad	.LBE3669-.LBB3669
 34594      00000000 
 34595 10725 0C       		.byte	0xc
 34596 10726 8D07     		.value	0x78d
 34597 10728 B701     		.uleb128 0xb7
 34598 1072a DCDD0000 		.long	0xdddc
 34599 1072e B701     		.uleb128 0xb7
 34600 10730 CFDD0000 		.long	0xddcf
 34601 10734 C401     		.uleb128 0xc4
 34602 10736 CECC0000 		.long	0xccce
 34603 1073a 00000000 		.quad	.LBB3671
 34603      00000000 
 34604 10742 04000000 		.quad	.LBE3671-.LBB3671
 34604      00000000 
 34605 1074a 10       		.byte	0x10
 34606 1074b 8B01     		.value	0x18b
 34607 1074d 58070100 		.long	0x10758
 34608 10751 B701     		.uleb128 0xb7
 34609 10753 DDCC0000 		.long	0xccdd
 34610 10757 00       		.byte	0
 34611 10758 B601     		.uleb128 0xb6
 34612 1075a E8DC0000 		.long	0xdce8
 34613 1075e 00000000 		.quad	.LBB3673
 34613      00000000 
 34614 10766 2B000000 		.quad	.LBE3673-.LBB3673
 34614      00000000 
 34615 1076e 10       		.byte	0x10
 34616 1076f 8C01     		.value	0x18c
 34617 10771 B701     		.uleb128 0xb7
 34618 10773 1DDD0000 		.long	0xdd1d
 34619 10777 B701     		.uleb128 0xb7
 34620 10779 11DD0000 		.long	0xdd11
 34621 1077d B701     		.uleb128 0xb7
 34622 1077f 05DD0000 		.long	0xdd05
 34623 10783 B801     		.uleb128 0xb8
 34624 10785 00000000 		.quad	.LBB3674
 34624      00000000 
 34625 1078d 2B000000 		.quad	.LBE3674-.LBB3674
 34625      00000000 
 34626 10795 B901     		.uleb128 0xb9
 34627 10797 42DD0000 		.long	0xdd42
 34628 1079b CB01     		.uleb128 0xcb
 34629 1079d 16D00000 		.long	0xd016
 34630 107a1 00000000 		.quad	.LBB3675
 34630      00000000 
 34631 107a9 00000000 		.long	.Ldebug_ranges0+0x1100
 34632 107ad 10       		.byte	0x10
 34633 107ae F7       		.byte	0xf7
 34634 107af B701     		.uleb128 0xb7
 34635 107b1 40D00000 		.long	0xd040
 34636 107b5 B701     		.uleb128 0xb7
 34637 107b7 33D00000 		.long	0xd033
 34638 107bb 00       		.byte	0
 34639 107bc 00       		.byte	0
 34640 107bd 00       		.byte	0
 34641 107be 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 915


 34642 107bf 00       		.byte	0
 34643 107c0 00       		.byte	0
 34644 107c1 00       		.byte	0
 34645 107c2 AE01     		.uleb128 0xae
 34646 107c4 2DE40000 		.long	0xe42d
 34647 107c8 00000000 		.long	.LASF1618
 34648 107cc 00000000 		.quad	.LFB6046
 34648      00000000 
 34649 107d4 40040000 		.quad	.LFE6046-.LFB6046
 34649      00000000 
 34650 107dc 01       		.uleb128 0x1
 34651 107dd 9C       		.byte	0x9c
 34652 107de E6070100 		.long	0x107e6
 34653 107e2 D1160100 		.long	0x116d1
 34654 107e6 BD01     		.uleb128 0xbd
 34655 107e8 3CE40000 		.long	0xe43c
 34656 107ec 00000000 		.long	.LLST243
 34657 107f0 C301     		.uleb128 0xc3
 34658 107f2 00000000 		.long	.Ldebug_ranges0+0x1150
 34659 107f6 E6150100 		.long	0x115e6
 34660 107fa BA01     		.uleb128 0xba
 34661 107fc 52E40000 		.long	0xe452
 34662 10800 00000000 		.long	.LLST244
 34663 10804 BA01     		.uleb128 0xba
 34664 10806 5EE40000 		.long	0xe45e
 34665 1080a 00000000 		.long	.LLST245
 34666 1080e CF01     		.uleb128 0xcf
 34667 10810 35BF0000 		.long	0xbf35
 34668 10814 00000000 		.quad	.LBB3688
 34668      00000000 
 34669 1081c 04000000 		.quad	.LBE3688-.LBB3688
 34669      00000000 
 34670 10824 02       		.byte	0x2
 34671 10825 42       		.byte	0x42
 34672 10826 5F080100 		.long	0x1085f
 34673 1082a BD01     		.uleb128 0xbd
 34674 1082c 44BF0000 		.long	0xbf44
 34675 10830 00000000 		.long	.LLST246
 34676 10834 B601     		.uleb128 0xb6
 34677 10836 40BE0000 		.long	0xbe40
 34678 1083a 00000000 		.quad	.LBB3689
 34678      00000000 
 34679 10842 04000000 		.quad	.LBE3689-.LBB3689
 34679      00000000 
 34680 1084a 06       		.byte	0x6
 34681 1084b 3602     		.value	0x236
 34682 1084d BD01     		.uleb128 0xbd
 34683 1084f 59BE0000 		.long	0xbe59
 34684 10853 00000000 		.long	.LLST247
 34685 10857 B701     		.uleb128 0xb7
 34686 10859 4FBE0000 		.long	0xbe4f
 34687 1085d 00       		.byte	0
 34688 1085e 00       		.byte	0
 34689 1085f CF01     		.uleb128 0xcf
 34690 10861 A7D50000 		.long	0xd5a7
 34691 10865 00000000 		.quad	.LBB3691
 34691      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 916


 34692 1086d 04000000 		.quad	.LBE3691-.LBB3691
 34692      00000000 
 34693 10875 02       		.byte	0x2
 34694 10876 42       		.byte	0x42
 34695 10877 B0080100 		.long	0x108b0
 34696 1087b BD01     		.uleb128 0xbd
 34697 1087d B6D50000 		.long	0xd5b6
 34698 10881 00000000 		.long	.LLST248
 34699 10885 B601     		.uleb128 0xb6
 34700 10887 40BE0000 		.long	0xbe40
 34701 1088b 00000000 		.quad	.LBB3692
 34701      00000000 
 34702 10893 04000000 		.quad	.LBE3692-.LBB3692
 34702      00000000 
 34703 1089b 06       		.byte	0x6
 34704 1089c 2402     		.value	0x224
 34705 1089e BD01     		.uleb128 0xbd
 34706 108a0 59BE0000 		.long	0xbe59
 34707 108a4 00000000 		.long	.LLST249
 34708 108a8 B701     		.uleb128 0xb7
 34709 108aa 4FBE0000 		.long	0xbe4f
 34710 108ae 00       		.byte	0
 34711 108af 00       		.byte	0
 34712 108b0 CF01     		.uleb128 0xcf
 34713 108b2 19DF0000 		.long	0xdf19
 34714 108b6 00000000 		.quad	.LBB3694
 34714      00000000 
 34715 108be 24000000 		.quad	.LBE3694-.LBB3694
 34715      00000000 
 34716 108c6 02       		.byte	0x2
 34717 108c7 42       		.byte	0x42
 34718 108c8 EB080100 		.long	0x108eb
 34719 108cc BD01     		.uleb128 0xbd
 34720 108ce 4EDF0000 		.long	0xdf4e
 34721 108d2 00000000 		.long	.LLST250
 34722 108d6 BD01     		.uleb128 0xbd
 34723 108d8 42DF0000 		.long	0xdf42
 34724 108dc 00000000 		.long	.LLST251
 34725 108e0 BD01     		.uleb128 0xbd
 34726 108e2 36DF0000 		.long	0xdf36
 34727 108e6 00000000 		.long	.LLST252
 34728 108ea 00       		.byte	0
 34729 108eb CF01     		.uleb128 0xcf
 34730 108ed 48B70000 		.long	0xb748
 34731 108f1 00000000 		.quad	.LBB3696
 34731      00000000 
 34732 108f9 0D000000 		.quad	.LBE3696-.LBB3696
 34732      00000000 
 34733 10901 02       		.byte	0x2
 34734 10902 42       		.byte	0x42
 34735 10903 1C090100 		.long	0x1091c
 34736 10907 BD01     		.uleb128 0xbd
 34737 10909 57B70000 		.long	0xb757
 34738 1090d 00000000 		.long	.LLST253
 34739 10911 BD01     		.uleb128 0xbd
 34740 10913 57B70000 		.long	0xb757
 34741 10917 00000000 		.long	.LLST253
GAS LISTING /tmp/ccmMnd7l.s 			page 917


 34742 1091b 00       		.byte	0
 34743 1091c CA01     		.uleb128 0xca
 34744 1091e 5BDF0000 		.long	0xdf5b
 34745 10922 00000000 		.quad	.LBB3698
 34745      00000000 
 34746 1092a 00000000 		.long	.Ldebug_ranges0+0x1190
 34747 1092e 02       		.byte	0x2
 34748 1092f 45       		.byte	0x45
 34749 10930 DA0F0100 		.long	0x10fda
 34750 10934 BD01     		.uleb128 0xbd
 34751 10936 7CDF0000 		.long	0xdf7c
 34752 1093a 00000000 		.long	.LLST255
 34753 1093e BD01     		.uleb128 0xbd
 34754 10940 6FDF0000 		.long	0xdf6f
 34755 10944 00000000 		.long	.LLST256
 34756 10948 CC01     		.uleb128 0xcc
 34757 1094a CDDE0000 		.long	0xdecd
 34758 1094e 00000000 		.quad	.LBB3699
 34758      00000000 
 34759 10956 00000000 		.long	.Ldebug_ranges0+0x1190
 34760 1095a 0C       		.byte	0xc
 34761 1095b 4D12     		.value	0x124d
 34762 1095d BD01     		.uleb128 0xbd
 34763 1095f F7DE0000 		.long	0xdef7
 34764 10963 00000000 		.long	.LLST255
 34765 10967 BD01     		.uleb128 0xbd
 34766 10969 EADE0000 		.long	0xdeea
 34767 1096d 00000000 		.long	.LLST256
 34768 10971 C201     		.uleb128 0xc2
 34769 10973 B4DE0000 		.long	0xdeb4
 34770 10977 00000000 		.quad	.LBB3701
 34770      00000000 
 34771 1097f 00000000 		.long	.Ldebug_ranges0+0x11e0
 34772 10983 0C       		.byte	0xc
 34773 10984 B007     		.value	0x7b0
 34774 10986 95090100 		.long	0x10995
 34775 1098a BD01     		.uleb128 0xbd
 34776 1098c BFDE0000 		.long	0xdebf
 34777 10990 00000000 		.long	.LLST259
 34778 10994 00       		.byte	0
 34779 10995 C201     		.uleb128 0xc2
 34780 10997 52D70000 		.long	0xd752
 34781 1099b 00000000 		.quad	.LBB3705
 34781      00000000 
 34782 109a3 00000000 		.long	.Ldebug_ranges0+0x1210
 34783 109a7 0C       		.byte	0xc
 34784 109a8 B207     		.value	0x7b2
 34785 109aa 7C0F0100 		.long	0x10f7c
 34786 109ae B701     		.uleb128 0xb7
 34787 109b0 7CD70000 		.long	0xd77c
 34788 109b4 BD01     		.uleb128 0xbd
 34789 109b6 6FD70000 		.long	0xd76f
 34790 109ba 00000000 		.long	.LLST260
 34791 109be C201     		.uleb128 0xc2
 34792 109c0 6CE40000 		.long	0xe46c
 34793 109c4 00000000 		.quad	.LBB3707
 34793      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 918


 34794 109cc 00000000 		.long	.Ldebug_ranges0+0x1250
 34795 109d0 0C       		.byte	0xc
 34796 109d1 5C07     		.value	0x75c
 34797 109d3 3E0C0100 		.long	0x10c3e
 34798 109d7 B701     		.uleb128 0xb7
 34799 109d9 A3E40000 		.long	0xe4a3
 34800 109dd BD01     		.uleb128 0xbd
 34801 109df 96E40000 		.long	0xe496
 34802 109e3 00000000 		.long	.LLST261
 34803 109e7 BD01     		.uleb128 0xbd
 34804 109e9 89E40000 		.long	0xe489
 34805 109ed 00000000 		.long	.LLST262
 34806 109f1 B401     		.uleb128 0xb4
 34807 109f3 00000000 		.long	.Ldebug_ranges0+0x1250
 34808 109f7 BA01     		.uleb128 0xba
 34809 109f9 B2E40000 		.long	0xe4b2
 34810 109fd 00000000 		.long	.LLST263
 34811 10a01 C401     		.uleb128 0xc4
 34812 10a03 58D00000 		.long	0xd058
 34813 10a07 00000000 		.quad	.LBB3709
 34813      00000000 
 34814 10a0f 07000000 		.quad	.LBE3709-.LBB3709
 34814      00000000 
 34815 10a17 0C       		.byte	0xc
 34816 10a18 3407     		.value	0x734
 34817 10a1a 330A0100 		.long	0x10a33
 34818 10a1e BD01     		.uleb128 0xbd
 34819 10a20 71D00000 		.long	0xd071
 34820 10a24 00000000 		.long	.LLST264
 34821 10a28 BD01     		.uleb128 0xbd
 34822 10a2a 67D00000 		.long	0xd067
 34823 10a2e 00000000 		.long	.LLST265
 34824 10a32 00       		.byte	0
 34825 10a33 C401     		.uleb128 0xc4
 34826 10a35 B5CB0000 		.long	0xcbb5
 34827 10a39 00000000 		.quad	.LBB3712
 34827      00000000 
 34828 10a41 05000000 		.quad	.LBE3712-.LBB3712
 34828      00000000 
 34829 10a49 0C       		.byte	0xc
 34830 10a4a 3607     		.value	0x736
 34831 10a4c 670A0100 		.long	0x10a67
 34832 10a50 BD01     		.uleb128 0xbd
 34833 10a52 D6CB0000 		.long	0xcbd6
 34834 10a56 00000000 		.long	.LLST266
 34835 10a5a B701     		.uleb128 0xb7
 34836 10a5c ECCB0000 		.long	0xcbec
 34837 10a60 B701     		.uleb128 0xb7
 34838 10a62 E0CB0000 		.long	0xcbe0
 34839 10a66 00       		.byte	0
 34840 10a67 C201     		.uleb128 0xc2
 34841 10a69 E8CC0000 		.long	0xcce8
 34842 10a6d 00000000 		.quad	.LBB3714
 34842      00000000 
 34843 10a75 00000000 		.long	.Ldebug_ranges0+0x1290
 34844 10a79 0C       		.byte	0xc
 34845 10a7a 3E07     		.value	0x73e
GAS LISTING /tmp/ccmMnd7l.s 			page 919


 34846 10a7c F60A0100 		.long	0x10af6
 34847 10a80 BD01     		.uleb128 0xbd
 34848 10a82 05CD0000 		.long	0xcd05
 34849 10a86 00000000 		.long	.LLST267
 34850 10a8a B401     		.uleb128 0xb4
 34851 10a8c 00000000 		.long	.Ldebug_ranges0+0x1290
 34852 10a90 BA01     		.uleb128 0xba
 34853 10a92 21CD0000 		.long	0xcd21
 34854 10a96 00000000 		.long	.LLST268
 34855 10a9a B901     		.uleb128 0xb9
 34856 10a9c 2ECD0000 		.long	0xcd2e
 34857 10aa0 C201     		.uleb128 0xc2
 34858 10aa2 53CC0000 		.long	0xcc53
 34859 10aa6 00000000 		.quad	.LBB3716
 34859      00000000 
 34860 10aae 00000000 		.long	.Ldebug_ranges0+0x12c0
 34861 10ab2 0C       		.byte	0xc
 34862 10ab3 2307     		.value	0x723
 34863 10ab5 D00A0100 		.long	0x10ad0
 34864 10ab9 B701     		.uleb128 0xb7
 34865 10abb 74CC0000 		.long	0xcc74
 34866 10abf BD01     		.uleb128 0xbd
 34867 10ac1 7ECC0000 		.long	0xcc7e
 34868 10ac5 00000000 		.long	.LLST269
 34869 10ac9 B701     		.uleb128 0xb7
 34870 10acb 8ACC0000 		.long	0xcc8a
 34871 10acf 00       		.byte	0
 34872 10ad0 B601     		.uleb128 0xb6
 34873 10ad2 CECC0000 		.long	0xccce
 34874 10ad6 00000000 		.quad	.LBB3719
 34874      00000000 
 34875 10ade 04000000 		.quad	.LBE3719-.LBB3719
 34875      00000000 
 34876 10ae6 0C       		.byte	0xc
 34877 10ae7 2707     		.value	0x727
 34878 10ae9 BD01     		.uleb128 0xbd
 34879 10aeb DDCC0000 		.long	0xccdd
 34880 10aef 00000000 		.long	.LLST270
 34881 10af3 00       		.byte	0
 34882 10af4 00       		.byte	0
 34883 10af5 00       		.byte	0
 34884 10af6 B801     		.uleb128 0xb8
 34885 10af8 00000000 		.quad	.LBB3723
 34885      00000000 
 34886 10b00 3B000000 		.quad	.LBE3723-.LBB3723
 34886      00000000 
 34887 10b08 BA01     		.uleb128 0xba
 34888 10b0a C1E40000 		.long	0xe4c1
 34889 10b0e 00000000 		.long	.LLST271
 34890 10b12 B601     		.uleb128 0xb6
 34891 10b14 0DD70000 		.long	0xd70d
 34892 10b18 00000000 		.quad	.LBB3724
 34892      00000000 
 34893 10b20 31000000 		.quad	.LBE3724-.LBB3724
 34893      00000000 
 34894 10b28 0C       		.byte	0xc
 34895 10b29 3A07     		.value	0x73a
GAS LISTING /tmp/ccmMnd7l.s 			page 920


 34896 10b2b B701     		.uleb128 0xb7
 34897 10b2d 44D70000 		.long	0xd744
 34898 10b31 B701     		.uleb128 0xb7
 34899 10b33 37D70000 		.long	0xd737
 34900 10b37 B701     		.uleb128 0xb7
 34901 10b39 2AD70000 		.long	0xd72a
 34902 10b3d B601     		.uleb128 0xb6
 34903 10b3f 7CD60000 		.long	0xd67c
 34904 10b43 00000000 		.quad	.LBB3725
 34904      00000000 
 34905 10b4b 31000000 		.quad	.LBE3725-.LBB3725
 34905      00000000 
 34906 10b53 14       		.byte	0x14
 34907 10b54 A602     		.value	0x2a6
 34908 10b56 B701     		.uleb128 0xb7
 34909 10b58 BDD60000 		.long	0xd6bd
 34910 10b5c B701     		.uleb128 0xb7
 34911 10b5e B0D60000 		.long	0xd6b0
 34912 10b62 B701     		.uleb128 0xb7
 34913 10b64 A3D60000 		.long	0xd6a3
 34914 10b68 B601     		.uleb128 0xb6
 34915 10b6a FBD50000 		.long	0xd5fb
 34916 10b6e 00000000 		.quad	.LBB3726
 34916      00000000 
 34917 10b76 31000000 		.quad	.LBE3726-.LBB3726
 34917      00000000 
 34918 10b7e 14       		.byte	0x14
 34919 10b7f 5F02     		.value	0x25f
 34920 10b81 BD01     		.uleb128 0xbd
 34921 10b83 3CD60000 		.long	0xd63c
 34922 10b87 00000000 		.long	.LLST272
 34923 10b8b BD01     		.uleb128 0xbd
 34924 10b8d 2FD60000 		.long	0xd62f
 34925 10b91 00000000 		.long	.LLST273
 34926 10b95 BD01     		.uleb128 0xbd
 34927 10b97 22D60000 		.long	0xd622
 34928 10b9b 00000000 		.long	.LLST274
 34929 10b9f B801     		.uleb128 0xb8
 34930 10ba1 00000000 		.quad	.LBB3727
 34930      00000000 
 34931 10ba9 31000000 		.quad	.LBE3727-.LBB3727
 34931      00000000 
 34932 10bb1 BA01     		.uleb128 0xba
 34933 10bb3 4BD60000 		.long	0xd64b
 34934 10bb7 00000000 		.long	.LLST275
 34935 10bbb B601     		.uleb128 0xb6
 34936 10bbd D1E40000 		.long	0xe4d1
 34937 10bc1 00000000 		.quad	.LBB3728
 34937      00000000 
 34938 10bc9 31000000 		.quad	.LBE3728-.LBB3728
 34938      00000000 
 34939 10bd1 14       		.byte	0x14
 34940 10bd2 5602     		.value	0x256
 34941 10bd4 BD01     		.uleb128 0xbd
 34942 10bd6 FFE40000 		.long	0xe4ff
 34943 10bda 00000000 		.long	.LLST272
 34944 10bde BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 921


 34945 10be0 F2E40000 		.long	0xe4f2
 34946 10be4 00000000 		.long	.LLST273
 34947 10be8 BD01     		.uleb128 0xbd
 34948 10bea E5E40000 		.long	0xe4e5
 34949 10bee 00000000 		.long	.LLST274
 34950 10bf2 B801     		.uleb128 0xb8
 34951 10bf4 00000000 		.quad	.LBB3729
 34951      00000000 
 34952 10bfc 31000000 		.quad	.LBE3729-.LBB3729
 34952      00000000 
 34953 10c04 BA01     		.uleb128 0xba
 34954 10c06 0EE50000 		.long	0xe50e
 34955 10c0a 00000000 		.long	.LLST279
 34956 10c0e C001     		.uleb128 0xc0
 34957 10c10 00000000 		.quad	.LVL334
 34957      00000000 
 34958 10c18 3F500100 		.long	0x1503f
 34959 10c1c C101     		.uleb128 0xc1
 34960 10c1e 01       		.uleb128 0x1
 34961 10c1f 55       		.byte	0x55
 34962 10c20 02       		.uleb128 0x2
 34963 10c21 7E       		.byte	0x7e
 34964 10c22 08       		.sleb128 8
 34965 10c23 C101     		.uleb128 0xc1
 34966 10c25 01       		.uleb128 0x1
 34967 10c26 54       		.byte	0x54
 34968 10c27 02       		.uleb128 0x2
 34969 10c28 7E       		.byte	0x7e
 34970 10c29 00       		.sleb128 0
 34971 10c2a C101     		.uleb128 0xc1
 34972 10c2c 01       		.uleb128 0x1
 34973 10c2d 51       		.byte	0x51
 34974 10c2e 05       		.uleb128 0x5
 34975 10c2f 7F       		.byte	0x7f
 34976 10c30 00       		.sleb128 0
 34977 10c31 7E       		.byte	0x7e
 34978 10c32 00       		.sleb128 0
 34979 10c33 1C       		.byte	0x1c
 34980 10c34 00       		.byte	0
 34981 10c35 00       		.byte	0
 34982 10c36 00       		.byte	0
 34983 10c37 00       		.byte	0
 34984 10c38 00       		.byte	0
 34985 10c39 00       		.byte	0
 34986 10c3a 00       		.byte	0
 34987 10c3b 00       		.byte	0
 34988 10c3c 00       		.byte	0
 34989 10c3d 00       		.byte	0
 34990 10c3e C201     		.uleb128 0xc2
 34991 10c40 3DCD0000 		.long	0xcd3d
 34992 10c44 00000000 		.quad	.LBB3735
 34992      00000000 
 34993 10c4c 00000000 		.long	.Ldebug_ranges0+0x12f0
 34994 10c50 0C       		.byte	0xc
 34995 10c51 5D07     		.value	0x75d
 34996 10c53 FC0C0100 		.long	0x10cfc
 34997 10c57 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 922


 34998 10c59 67CD0000 		.long	0xcd67
 34999 10c5d B701     		.uleb128 0xb7
 35000 10c5f 5ACD0000 		.long	0xcd5a
 35001 10c63 B401     		.uleb128 0xb4
 35002 10c65 00000000 		.long	.Ldebug_ranges0+0x12f0
 35003 10c69 B901     		.uleb128 0xb9
 35004 10c6b 83CD0000 		.long	0xcd83
 35005 10c6f CC01     		.uleb128 0xcc
 35006 10c71 E8CC0000 		.long	0xcce8
 35007 10c75 00000000 		.quad	.LBB3737
 35007      00000000 
 35008 10c7d 00000000 		.long	.Ldebug_ranges0+0x1320
 35009 10c81 0C       		.byte	0xc
 35010 10c82 4A07     		.value	0x74a
 35011 10c84 BD01     		.uleb128 0xbd
 35012 10c86 05CD0000 		.long	0xcd05
 35013 10c8a 00000000 		.long	.LLST280
 35014 10c8e B401     		.uleb128 0xb4
 35015 10c90 00000000 		.long	.Ldebug_ranges0+0x1320
 35016 10c94 BA01     		.uleb128 0xba
 35017 10c96 21CD0000 		.long	0xcd21
 35018 10c9a 00000000 		.long	.LLST281
 35019 10c9e B901     		.uleb128 0xb9
 35020 10ca0 2ECD0000 		.long	0xcd2e
 35021 10ca4 C201     		.uleb128 0xc2
 35022 10ca6 53CC0000 		.long	0xcc53
 35023 10caa 00000000 		.quad	.LBB3739
 35023      00000000 
 35024 10cb2 00000000 		.long	.Ldebug_ranges0+0x1360
 35025 10cb6 0C       		.byte	0xc
 35026 10cb7 2307     		.value	0x723
 35027 10cb9 D40C0100 		.long	0x10cd4
 35028 10cbd B701     		.uleb128 0xb7
 35029 10cbf 74CC0000 		.long	0xcc74
 35030 10cc3 BD01     		.uleb128 0xbd
 35031 10cc5 7ECC0000 		.long	0xcc7e
 35032 10cc9 00000000 		.long	.LLST282
 35033 10ccd B701     		.uleb128 0xb7
 35034 10ccf 8ACC0000 		.long	0xcc8a
 35035 10cd3 00       		.byte	0
 35036 10cd4 B601     		.uleb128 0xb6
 35037 10cd6 CECC0000 		.long	0xccce
 35038 10cda 00000000 		.quad	.LBB3742
 35038      00000000 
 35039 10ce2 04000000 		.quad	.LBE3742-.LBB3742
 35039      00000000 
 35040 10cea 0C       		.byte	0xc
 35041 10ceb 2707     		.value	0x727
 35042 10ced BD01     		.uleb128 0xbd
 35043 10cef DDCC0000 		.long	0xccdd
 35044 10cf3 00000000 		.long	.LLST283
 35045 10cf7 00       		.byte	0
 35046 10cf8 00       		.byte	0
 35047 10cf9 00       		.byte	0
 35048 10cfa 00       		.byte	0
 35049 10cfb 00       		.byte	0
 35050 10cfc CC01     		.uleb128 0xcc
GAS LISTING /tmp/ccmMnd7l.s 			page 923


 35051 10cfe 6CE40000 		.long	0xe46c
 35052 10d02 00000000 		.quad	.LBB3750
 35052      00000000 
 35053 10d0a 00000000 		.long	.Ldebug_ranges0+0x1390
 35054 10d0e 0C       		.byte	0xc
 35055 10d0f 6107     		.value	0x761
 35056 10d11 B701     		.uleb128 0xb7
 35057 10d13 A3E40000 		.long	0xe4a3
 35058 10d17 BD01     		.uleb128 0xbd
 35059 10d19 96E40000 		.long	0xe496
 35060 10d1d 00000000 		.long	.LLST284
 35061 10d21 BD01     		.uleb128 0xbd
 35062 10d23 89E40000 		.long	0xe489
 35063 10d27 00000000 		.long	.LLST285
 35064 10d2b B401     		.uleb128 0xb4
 35065 10d2d 00000000 		.long	.Ldebug_ranges0+0x1390
 35066 10d31 BA01     		.uleb128 0xba
 35067 10d33 B2E40000 		.long	0xe4b2
 35068 10d37 00000000 		.long	.LLST286
 35069 10d3b C401     		.uleb128 0xc4
 35070 10d3d 58D00000 		.long	0xd058
 35071 10d41 00000000 		.quad	.LBB3752
 35071      00000000 
 35072 10d49 09000000 		.quad	.LBE3752-.LBB3752
 35072      00000000 
 35073 10d51 0C       		.byte	0xc
 35074 10d52 3407     		.value	0x734
 35075 10d54 6D0D0100 		.long	0x10d6d
 35076 10d58 BD01     		.uleb128 0xbd
 35077 10d5a 71D00000 		.long	0xd071
 35078 10d5e 00000000 		.long	.LLST287
 35079 10d62 BD01     		.uleb128 0xbd
 35080 10d64 67D00000 		.long	0xd067
 35081 10d68 00000000 		.long	.LLST288
 35082 10d6c 00       		.byte	0
 35083 10d6d C401     		.uleb128 0xc4
 35084 10d6f B5CB0000 		.long	0xcbb5
 35085 10d73 00000000 		.quad	.LBB3755
 35085      00000000 
 35086 10d7b 06000000 		.quad	.LBE3755-.LBB3755
 35086      00000000 
 35087 10d83 0C       		.byte	0xc
 35088 10d84 3607     		.value	0x736
 35089 10d86 A10D0100 		.long	0x10da1
 35090 10d8a BD01     		.uleb128 0xbd
 35091 10d8c D6CB0000 		.long	0xcbd6
 35092 10d90 00000000 		.long	.LLST289
 35093 10d94 B701     		.uleb128 0xb7
 35094 10d96 ECCB0000 		.long	0xcbec
 35095 10d9a B701     		.uleb128 0xb7
 35096 10d9c E0CB0000 		.long	0xcbe0
 35097 10da0 00       		.byte	0
 35098 10da1 C201     		.uleb128 0xc2
 35099 10da3 E8CC0000 		.long	0xcce8
 35100 10da7 00000000 		.quad	.LBB3757
 35100      00000000 
 35101 10daf 00000000 		.long	.Ldebug_ranges0+0x13c0
GAS LISTING /tmp/ccmMnd7l.s 			page 924


 35102 10db3 0C       		.byte	0xc
 35103 10db4 3E07     		.value	0x73e
 35104 10db6 300E0100 		.long	0x10e30
 35105 10dba BD01     		.uleb128 0xbd
 35106 10dbc 05CD0000 		.long	0xcd05
 35107 10dc0 00000000 		.long	.LLST290
 35108 10dc4 B401     		.uleb128 0xb4
 35109 10dc6 00000000 		.long	.Ldebug_ranges0+0x13c0
 35110 10dca BA01     		.uleb128 0xba
 35111 10dcc 21CD0000 		.long	0xcd21
 35112 10dd0 00000000 		.long	.LLST291
 35113 10dd4 B901     		.uleb128 0xb9
 35114 10dd6 2ECD0000 		.long	0xcd2e
 35115 10dda C201     		.uleb128 0xc2
 35116 10ddc 53CC0000 		.long	0xcc53
 35117 10de0 00000000 		.quad	.LBB3759
 35117      00000000 
 35118 10de8 00000000 		.long	.Ldebug_ranges0+0x13f0
 35119 10dec 0C       		.byte	0xc
 35120 10ded 2307     		.value	0x723
 35121 10def 0A0E0100 		.long	0x10e0a
 35122 10df3 B701     		.uleb128 0xb7
 35123 10df5 74CC0000 		.long	0xcc74
 35124 10df9 BD01     		.uleb128 0xbd
 35125 10dfb 7ECC0000 		.long	0xcc7e
 35126 10dff 00000000 		.long	.LLST292
 35127 10e03 B701     		.uleb128 0xb7
 35128 10e05 8ACC0000 		.long	0xcc8a
 35129 10e09 00       		.byte	0
 35130 10e0a B601     		.uleb128 0xb6
 35131 10e0c CECC0000 		.long	0xccce
 35132 10e10 00000000 		.quad	.LBB3762
 35132      00000000 
 35133 10e18 04000000 		.quad	.LBE3762-.LBB3762
 35133      00000000 
 35134 10e20 0C       		.byte	0xc
 35135 10e21 2707     		.value	0x727
 35136 10e23 BD01     		.uleb128 0xbd
 35137 10e25 DDCC0000 		.long	0xccdd
 35138 10e29 00000000 		.long	.LLST293
 35139 10e2d 00       		.byte	0
 35140 10e2e 00       		.byte	0
 35141 10e2f 00       		.byte	0
 35142 10e30 B801     		.uleb128 0xb8
 35143 10e32 00000000 		.quad	.LBB3766
 35143      00000000 
 35144 10e3a 40000000 		.quad	.LBE3766-.LBB3766
 35144      00000000 
 35145 10e42 BA01     		.uleb128 0xba
 35146 10e44 C1E40000 		.long	0xe4c1
 35147 10e48 00000000 		.long	.LLST294
 35148 10e4c B601     		.uleb128 0xb6
 35149 10e4e 0DD70000 		.long	0xd70d
 35150 10e52 00000000 		.quad	.LBB3767
 35150      00000000 
 35151 10e5a 2F000000 		.quad	.LBE3767-.LBB3767
 35151      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 925


 35152 10e62 0C       		.byte	0xc
 35153 10e63 3A07     		.value	0x73a
 35154 10e65 B701     		.uleb128 0xb7
 35155 10e67 44D70000 		.long	0xd744
 35156 10e6b B701     		.uleb128 0xb7
 35157 10e6d 37D70000 		.long	0xd737
 35158 10e71 B701     		.uleb128 0xb7
 35159 10e73 2AD70000 		.long	0xd72a
 35160 10e77 B601     		.uleb128 0xb6
 35161 10e79 7CD60000 		.long	0xd67c
 35162 10e7d 00000000 		.quad	.LBB3768
 35162      00000000 
 35163 10e85 2F000000 		.quad	.LBE3768-.LBB3768
 35163      00000000 
 35164 10e8d 14       		.byte	0x14
 35165 10e8e A602     		.value	0x2a6
 35166 10e90 B701     		.uleb128 0xb7
 35167 10e92 BDD60000 		.long	0xd6bd
 35168 10e96 B701     		.uleb128 0xb7
 35169 10e98 B0D60000 		.long	0xd6b0
 35170 10e9c B701     		.uleb128 0xb7
 35171 10e9e A3D60000 		.long	0xd6a3
 35172 10ea2 B601     		.uleb128 0xb6
 35173 10ea4 FBD50000 		.long	0xd5fb
 35174 10ea8 00000000 		.quad	.LBB3769
 35174      00000000 
 35175 10eb0 2F000000 		.quad	.LBE3769-.LBB3769
 35175      00000000 
 35176 10eb8 14       		.byte	0x14
 35177 10eb9 5F02     		.value	0x25f
 35178 10ebb BD01     		.uleb128 0xbd
 35179 10ebd 3CD60000 		.long	0xd63c
 35180 10ec1 00000000 		.long	.LLST295
 35181 10ec5 BD01     		.uleb128 0xbd
 35182 10ec7 2FD60000 		.long	0xd62f
 35183 10ecb 00000000 		.long	.LLST296
 35184 10ecf BD01     		.uleb128 0xbd
 35185 10ed1 22D60000 		.long	0xd622
 35186 10ed5 00000000 		.long	.LLST297
 35187 10ed9 B801     		.uleb128 0xb8
 35188 10edb 00000000 		.quad	.LBB3770
 35188      00000000 
 35189 10ee3 2F000000 		.quad	.LBE3770-.LBB3770
 35189      00000000 
 35190 10eeb BA01     		.uleb128 0xba
 35191 10eed 4BD60000 		.long	0xd64b
 35192 10ef1 00000000 		.long	.LLST298
 35193 10ef5 B601     		.uleb128 0xb6
 35194 10ef7 D1E40000 		.long	0xe4d1
 35195 10efb 00000000 		.quad	.LBB3771
 35195      00000000 
 35196 10f03 2F000000 		.quad	.LBE3771-.LBB3771
 35196      00000000 
 35197 10f0b 14       		.byte	0x14
 35198 10f0c 5602     		.value	0x256
 35199 10f0e BD01     		.uleb128 0xbd
 35200 10f10 FFE40000 		.long	0xe4ff
GAS LISTING /tmp/ccmMnd7l.s 			page 926


 35201 10f14 00000000 		.long	.LLST295
 35202 10f18 BD01     		.uleb128 0xbd
 35203 10f1a F2E40000 		.long	0xe4f2
 35204 10f1e 00000000 		.long	.LLST296
 35205 10f22 BD01     		.uleb128 0xbd
 35206 10f24 E5E40000 		.long	0xe4e5
 35207 10f28 00000000 		.long	.LLST297
 35208 10f2c B801     		.uleb128 0xb8
 35209 10f2e 00000000 		.quad	.LBB3772
 35209      00000000 
 35210 10f36 2F000000 		.quad	.LBE3772-.LBB3772
 35210      00000000 
 35211 10f3e BA01     		.uleb128 0xba
 35212 10f40 0EE50000 		.long	0xe50e
 35213 10f44 00000000 		.long	.LLST302
 35214 10f48 C001     		.uleb128 0xc0
 35215 10f4a 00000000 		.quad	.LVL330
 35215      00000000 
 35216 10f52 3F500100 		.long	0x1503f
 35217 10f56 C101     		.uleb128 0xc1
 35218 10f58 01       		.uleb128 0x1
 35219 10f59 55       		.byte	0x55
 35220 10f5a 05       		.uleb128 0x5
 35221 10f5b 7E       		.byte	0x7e
 35222 10f5c 00       		.sleb128 0
 35223 10f5d 76       		.byte	0x76
 35224 10f5e 00       		.sleb128 0
 35225 10f5f 22       		.byte	0x22
 35226 10f60 C101     		.uleb128 0xc1
 35227 10f62 01       		.uleb128 0x1
 35228 10f63 54       		.byte	0x54
 35229 10f64 02       		.uleb128 0x2
 35230 10f65 7E       		.byte	0x7e
 35231 10f66 00       		.sleb128 0
 35232 10f67 C101     		.uleb128 0xc1
 35233 10f69 01       		.uleb128 0x1
 35234 10f6a 51       		.byte	0x51
 35235 10f6b 05       		.uleb128 0x5
 35236 10f6c 7D       		.byte	0x7d
 35237 10f6d 00       		.sleb128 0
 35238 10f6e 7E       		.byte	0x7e
 35239 10f6f 00       		.sleb128 0
 35240 10f70 1C       		.byte	0x1c
 35241 10f71 00       		.byte	0
 35242 10f72 00       		.byte	0
 35243 10f73 00       		.byte	0
 35244 10f74 00       		.byte	0
 35245 10f75 00       		.byte	0
 35246 10f76 00       		.byte	0
 35247 10f77 00       		.byte	0
 35248 10f78 00       		.byte	0
 35249 10f79 00       		.byte	0
 35250 10f7a 00       		.byte	0
 35251 10f7b 00       		.byte	0
 35252 10f7c C001     		.uleb128 0xc0
 35253 10f7e 00000000 		.quad	.LVL254
 35253      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 927


 35254 10f86 18020100 		.long	0x10218
 35255 10f8a C101     		.uleb128 0xc1
 35256 10f8c 01       		.uleb128 0x1
 35257 10f8d 55       		.byte	0x55
 35258 10f8e 02       		.uleb128 0x2
 35259 10f8f 7E       		.byte	0x7e
 35260 10f90 00       		.sleb128 0
 35261 10f91 C101     		.uleb128 0xc1
 35262 10f93 01       		.uleb128 0x1
 35263 10f94 54       		.byte	0x54
 35264 10f95 02       		.uleb128 0x2
 35265 10f96 7C       		.byte	0x7c
 35266 10f97 00       		.sleb128 0
 35267 10f98 C101     		.uleb128 0xc1
 35268 10f9a 01       		.uleb128 0x1
 35269 10f9b 51       		.byte	0x51
 35270 10f9c 3A       		.uleb128 0x3a
 35271 10f9d 08       		.byte	0x8
 35272 10f9e 3F       		.byte	0x3f
 35273 10f9f 08       		.byte	0x8
 35274 10fa0 3F       		.byte	0x3f
 35275 10fa1 76       		.byte	0x76
 35276 10fa2 00       		.sleb128 0
 35277 10fa3 33       		.byte	0x33
 35278 10fa4 26       		.byte	0x26
 35279 10fa5 12       		.byte	0x12
 35280 10fa6 28       		.byte	0x28
 35281 10fa7 0600     		.value	0x6
 35282 10fa9 13       		.byte	0x13
 35283 10faa 08       		.byte	0x8
 35284 10fab 40       		.byte	0x40
 35285 10fac 2F       		.byte	0x2f
 35286 10fad 1A00     		.value	0x1a
 35287 10faf 30       		.byte	0x30
 35288 10fb0 16       		.byte	0x16
 35289 10fb1 12       		.byte	0x12
 35290 10fb2 0E       		.byte	0xe
 35291 10fb3 00000000 		.quad	0x8000000000000000
 35291      00000080 
 35292 10fbb 1A       		.byte	0x1a
 35293 10fbc 28       		.byte	0x28
 35294 10fbd 0900     		.value	0x9
 35295 10fbf 31       		.byte	0x31
 35296 10fc0 24       		.byte	0x24
 35297 10fc1 16       		.byte	0x16
 35298 10fc2 23       		.byte	0x23
 35299 10fc3 01       		.uleb128 0x1
 35300 10fc4 16       		.byte	0x16
 35301 10fc5 2F       		.byte	0x2f
 35302 10fc6 E9FF     		.value	0xffe9
 35303 10fc8 13       		.byte	0x13
 35304 10fc9 96       		.byte	0x96
 35305 10fca 1C       		.byte	0x1c
 35306 10fcb 08       		.byte	0x8
 35307 10fcc 3F       		.byte	0x3f
 35308 10fcd 27       		.byte	0x27
 35309 10fce 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 928


 35310 10fcf 20       		.byte	0x20
 35311 10fd0 24       		.byte	0x24
 35312 10fd1 08       		.byte	0x8
 35313 10fd2 20       		.byte	0x20
 35314 10fd3 26       		.byte	0x26
 35315 10fd4 1C       		.byte	0x1c
 35316 10fd5 31       		.byte	0x31
 35317 10fd6 24       		.byte	0x24
 35318 10fd7 00       		.byte	0
 35319 10fd8 00       		.byte	0
 35320 10fd9 00       		.byte	0
 35321 10fda CA01     		.uleb128 0xca
 35322 10fdc 58B50000 		.long	0xb558
 35323 10fe0 00000000 		.quad	.LBB3792
 35323      00000000 
 35324 10fe8 00000000 		.long	.Ldebug_ranges0+0x1420
 35325 10fec 02       		.byte	0x2
 35326 10fed 47       		.byte	0x47
 35327 10fee 2D100100 		.long	0x1102d
 35328 10ff2 B701     		.uleb128 0xb7
 35329 10ff4 6CB50000 		.long	0xb56c
 35330 10ff8 BD01     		.uleb128 0xbd
 35331 10ffa 79B50000 		.long	0xb579
 35332 10ffe 00000000 		.long	.LLST303
 35333 11002 C001     		.uleb128 0xc0
 35334 11004 00000000 		.quad	.LVL283
 35334      00000000 
 35335 1100c 65800000 		.long	0x8065
 35336 11010 C101     		.uleb128 0xc1
 35337 11012 01       		.uleb128 0x1
 35338 11013 55       		.byte	0x55
 35339 11014 02       		.uleb128 0x2
 35340 11015 76       		.byte	0x76
 35341 11016 00       		.sleb128 0
 35342 11017 C101     		.uleb128 0xc1
 35343 11019 01       		.uleb128 0x1
 35344 1101a 54       		.byte	0x54
 35345 1101b 09       		.uleb128 0x9
 35346 1101c 03       		.byte	0x3
 35347 1101d 00000000 		.quad	.LC14
 35347      00000000 
 35348 11025 C101     		.uleb128 0xc1
 35349 11027 01       		.uleb128 0x1
 35350 11028 51       		.byte	0x51
 35351 11029 01       		.uleb128 0x1
 35352 1102a 44       		.byte	0x44
 35353 1102b 00       		.byte	0
 35354 1102c 00       		.byte	0
 35355 1102d CA01     		.uleb128 0xca
 35356 1102f A0DF0000 		.long	0xdfa0
 35357 11033 00000000 		.quad	.LBB3800
 35357      00000000 
 35358 1103b 00000000 		.long	.Ldebug_ranges0+0x1470
 35359 1103f 02       		.byte	0x2
 35360 11040 47       		.byte	0x47
 35361 11041 84110100 		.long	0x11184
 35362 11045 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 929


 35363 11047 B9DF0000 		.long	0xdfb9
 35364 1104b B701     		.uleb128 0xb7
 35365 1104d AFDF0000 		.long	0xdfaf
 35366 11051 CE01     		.uleb128 0xce
 35367 11053 1DE50000 		.long	0xe51d
 35368 11057 00000000 		.quad	.LBB3802
 35368      00000000 
 35369 1105f 0E000000 		.quad	.LBE3802-.LBB3802
 35369      00000000 
 35370 11067 08       		.byte	0x8
 35371 11068 84       		.byte	0x84
 35372 11069 BD01     		.uleb128 0xbd
 35373 1106b 28E50000 		.long	0xe528
 35374 1106f 00000000 		.long	.LLST304
 35375 11073 B601     		.uleb128 0xb6
 35376 11075 08B60000 		.long	0xb608
 35377 11079 00000000 		.quad	.LBB3803
 35377      00000000 
 35378 11081 0E000000 		.quad	.LBE3803-.LBB3803
 35378      00000000 
 35379 11089 15       		.byte	0x15
 35380 1108a C003     		.value	0x3c0
 35381 1108c BD01     		.uleb128 0xbd
 35382 1108e 2EB60000 		.long	0xb62e
 35383 11092 00000000 		.long	.LLST305
 35384 11096 BD01     		.uleb128 0xbd
 35385 11098 21B60000 		.long	0xb621
 35386 1109c 00000000 		.long	.LLST306
 35387 110a0 BD01     		.uleb128 0xbd
 35388 110a2 17B60000 		.long	0xb617
 35389 110a6 00000000 		.long	.LLST304
 35390 110aa B801     		.uleb128 0xb8
 35391 110ac 00000000 		.quad	.LBB3804
 35391      00000000 
 35392 110b4 0E000000 		.quad	.LBE3804-.LBB3804
 35392      00000000 
 35393 110bc BA01     		.uleb128 0xba
 35394 110be 3DB60000 		.long	0xb63d
 35395 110c2 00000000 		.long	.LLST308
 35396 110c6 C401     		.uleb128 0xc4
 35397 110c8 B0B50000 		.long	0xb5b0
 35398 110cc 00000000 		.quad	.LBB3805
 35398      00000000 
 35399 110d4 08000000 		.quad	.LBE3805-.LBB3805
 35399      00000000 
 35400 110dc 15       		.byte	0x15
 35401 110dd 5602     		.value	0x256
 35402 110df 25110100 		.long	0x11125
 35403 110e3 BD01     		.uleb128 0xbd
 35404 110e5 C7B50000 		.long	0xb5c7
 35405 110e9 00000000 		.long	.LLST309
 35406 110ed BD01     		.uleb128 0xbd
 35407 110ef BBB50000 		.long	0xb5bb
 35408 110f3 00000000 		.long	.LLST310
 35409 110f7 CE01     		.uleb128 0xce
 35410 110f9 C6B40000 		.long	0xb4c6
 35411 110fd 00000000 		.quad	.LBB3806
GAS LISTING /tmp/ccmMnd7l.s 			page 930


 35411      00000000 
 35412 11105 08000000 		.quad	.LBE3806-.LBB3806
 35412      00000000 
 35413 1110d 15       		.byte	0x15
 35414 1110e 60       		.byte	0x60
 35415 1110f BD01     		.uleb128 0xbd
 35416 11111 DDB40000 		.long	0xb4dd
 35417 11115 00000000 		.long	.LLST309
 35418 11119 BD01     		.uleb128 0xbd
 35419 1111b D1B40000 		.long	0xb4d1
 35420 1111f 00000000 		.long	.LLST308
 35421 11123 00       		.byte	0
 35422 11124 00       		.byte	0
 35423 11125 B601     		.uleb128 0xb6
 35424 11127 D9B50000 		.long	0xb5d9
 35425 1112b 00000000 		.quad	.LBB3808
 35425      00000000 
 35426 11133 06000000 		.quad	.LBE3808-.LBB3808
 35426      00000000 
 35427 1113b 15       		.byte	0x15
 35428 1113c 5702     		.value	0x257
 35429 1113e BD01     		.uleb128 0xbd
 35430 11140 F0B50000 		.long	0xb5f0
 35431 11144 00000000 		.long	.LLST306
 35432 11148 BD01     		.uleb128 0xbd
 35433 1114a E4B50000 		.long	0xb5e4
 35434 1114e 00000000 		.long	.LLST310
 35435 11152 CE01     		.uleb128 0xce
 35436 11154 A2B40000 		.long	0xb4a2
 35437 11158 00000000 		.quad	.LBB3810
 35437      00000000 
 35438 11160 06000000 		.quad	.LBE3810-.LBB3810
 35438      00000000 
 35439 11168 15       		.byte	0x15
 35440 11169 5C       		.byte	0x5c
 35441 1116a BD01     		.uleb128 0xbd
 35442 1116c B9B40000 		.long	0xb4b9
 35443 11170 00000000 		.long	.LLST306
 35444 11174 BD01     		.uleb128 0xbd
 35445 11176 ADB40000 		.long	0xb4ad
 35446 1117a 00000000 		.long	.LLST316
 35447 1117e 00       		.byte	0
 35448 1117f 00       		.byte	0
 35449 11180 00       		.byte	0
 35450 11181 00       		.byte	0
 35451 11182 00       		.byte	0
 35452 11183 00       		.byte	0
 35453 11184 CA01     		.uleb128 0xca
 35454 11186 8FB60000 		.long	0xb68f
 35455 1118a 00000000 		.quad	.LBB3814
 35455      00000000 
 35456 11192 00000000 		.long	.Ldebug_ranges0+0x14b0
 35457 11196 02       		.byte	0x2
 35458 11197 47       		.byte	0x47
 35459 11198 DA110100 		.long	0x111da
 35460 1119c BD01     		.uleb128 0xbd
 35461 1119e A8B60000 		.long	0xb6a8
GAS LISTING /tmp/ccmMnd7l.s 			page 931


 35462 111a2 00000000 		.long	.LLST317
 35463 111a6 B701     		.uleb128 0xb7
 35464 111a8 9EB60000 		.long	0xb69e
 35465 111ac C001     		.uleb128 0xc0
 35466 111ae 00000000 		.quad	.LVL288
 35466      00000000 
 35467 111b6 94290000 		.long	0x2994
 35468 111ba C101     		.uleb128 0xc1
 35469 111bc 01       		.uleb128 0x1
 35470 111bd 55       		.byte	0x55
 35471 111be 02       		.uleb128 0x2
 35472 111bf 76       		.byte	0x76
 35473 111c0 00       		.sleb128 0
 35474 111c1 C101     		.uleb128 0xc1
 35475 111c3 01       		.uleb128 0x1
 35476 111c4 61       		.byte	0x61
 35477 111c5 12       		.uleb128 0x12
 35478 111c6 91       		.byte	0x91
 35479 111c7 B87F     		.sleb128 -72
 35480 111c9 F6       		.byte	0xf6
 35481 111ca 08       		.byte	0x8
 35482 111cb 29       		.uleb128 0x29
 35483 111cc F4       		.byte	0xf4
 35484 111cd 29       		.uleb128 0x29
 35485 111ce 08       		.byte	0x8
 35486 111cf 00000000 		.long	0
 35487 111d3 00408F40 		.long	0x408f4000
 35488 111d7 1E       		.byte	0x1e
 35489 111d8 00       		.byte	0
 35490 111d9 00       		.byte	0
 35491 111da CA01     		.uleb128 0xca
 35492 111dc 58B50000 		.long	0xb558
 35493 111e0 00000000 		.quad	.LBB3821
 35493      00000000 
 35494 111e8 00000000 		.long	.Ldebug_ranges0+0x14f0
 35495 111ec 02       		.byte	0x2
 35496 111ed 47       		.byte	0x47
 35497 111ee 31120100 		.long	0x11231
 35498 111f2 BD01     		.uleb128 0xbd
 35499 111f4 79B50000 		.long	0xb579
 35500 111f8 00000000 		.long	.LLST318
 35501 111fc BD01     		.uleb128 0xbd
 35502 111fe 6CB50000 		.long	0xb56c
 35503 11202 00000000 		.long	.LLST319
 35504 11206 C001     		.uleb128 0xc0
 35505 11208 00000000 		.quad	.LVL290
 35505      00000000 
 35506 11210 65800000 		.long	0x8065
 35507 11214 C101     		.uleb128 0xc1
 35508 11216 01       		.uleb128 0x1
 35509 11217 55       		.byte	0x55
 35510 11218 02       		.uleb128 0x2
 35511 11219 76       		.byte	0x76
 35512 1121a 00       		.sleb128 0
 35513 1121b C101     		.uleb128 0xc1
 35514 1121d 01       		.uleb128 0x1
 35515 1121e 54       		.byte	0x54
GAS LISTING /tmp/ccmMnd7l.s 			page 932


 35516 1121f 09       		.uleb128 0x9
 35517 11220 03       		.byte	0x3
 35518 11221 00000000 		.quad	.LC15
 35518      00000000 
 35519 11229 C101     		.uleb128 0xc1
 35520 1122b 01       		.uleb128 0x1
 35521 1122c 51       		.byte	0x51
 35522 1122d 01       		.uleb128 0x1
 35523 1122e 3B       		.byte	0x3b
 35524 1122f 00       		.byte	0
 35525 11230 00       		.byte	0
 35526 11231 CA01     		.uleb128 0xca
 35527 11233 8FB60000 		.long	0xb68f
 35528 11237 00000000 		.quad	.LBB3826
 35528      00000000 
 35529 1123f 00000000 		.long	.Ldebug_ranges0+0x1520
 35530 11243 02       		.byte	0x2
 35531 11244 47       		.byte	0x47
 35532 11245 86120100 		.long	0x11286
 35533 11249 BD01     		.uleb128 0xbd
 35534 1124b A8B60000 		.long	0xb6a8
 35535 1124f 00000000 		.long	.LLST320
 35536 11253 B701     		.uleb128 0xb7
 35537 11255 9EB60000 		.long	0xb69e
 35538 11259 C001     		.uleb128 0xc0
 35539 1125b 00000000 		.quad	.LVL293
 35539      00000000 
 35540 11263 94290000 		.long	0x2994
 35541 11267 C101     		.uleb128 0xc1
 35542 11269 01       		.uleb128 0x1
 35543 1126a 55       		.byte	0x55
 35544 1126b 02       		.uleb128 0x2
 35545 1126c 76       		.byte	0x76
 35546 1126d 00       		.sleb128 0
 35547 1126e C101     		.uleb128 0xc1
 35548 11270 01       		.uleb128 0x1
 35549 11271 61       		.byte	0x61
 35550 11272 11       		.uleb128 0x11
 35551 11273 77       		.byte	0x77
 35552 11274 00       		.sleb128 0
 35553 11275 F6       		.byte	0xf6
 35554 11276 08       		.byte	0x8
 35555 11277 29       		.uleb128 0x29
 35556 11278 F4       		.byte	0xf4
 35557 11279 29       		.uleb128 0x29
 35558 1127a 08       		.byte	0x8
 35559 1127b 00000000 		.long	0
 35560 1127f 00408F40 		.long	0x408f4000
 35561 11283 1E       		.byte	0x1e
 35562 11284 00       		.byte	0
 35563 11285 00       		.byte	0
 35564 11286 CA01     		.uleb128 0xca
 35565 11288 58B50000 		.long	0xb558
 35566 1128c 00000000 		.quad	.LBB3831
 35566      00000000 
 35567 11294 00000000 		.long	.Ldebug_ranges0+0x1560
 35568 11298 02       		.byte	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 933


 35569 11299 47       		.byte	0x47
 35570 1129a DD120100 		.long	0x112dd
 35571 1129e BD01     		.uleb128 0xbd
 35572 112a0 79B50000 		.long	0xb579
 35573 112a4 00000000 		.long	.LLST321
 35574 112a8 BD01     		.uleb128 0xbd
 35575 112aa 6CB50000 		.long	0xb56c
 35576 112ae 00000000 		.long	.LLST322
 35577 112b2 C001     		.uleb128 0xc0
 35578 112b4 00000000 		.quad	.LVL295
 35578      00000000 
 35579 112bc 65800000 		.long	0x8065
 35580 112c0 C101     		.uleb128 0xc1
 35581 112c2 01       		.uleb128 0x1
 35582 112c3 55       		.byte	0x55
 35583 112c4 02       		.uleb128 0x2
 35584 112c5 76       		.byte	0x76
 35585 112c6 00       		.sleb128 0
 35586 112c7 C101     		.uleb128 0xc1
 35587 112c9 01       		.uleb128 0x1
 35588 112ca 54       		.byte	0x54
 35589 112cb 09       		.uleb128 0x9
 35590 112cc 03       		.byte	0x3
 35591 112cd 00000000 		.quad	.LC16
 35591      00000000 
 35592 112d5 C101     		.uleb128 0xc1
 35593 112d7 01       		.uleb128 0x1
 35594 112d8 51       		.byte	0x51
 35595 112d9 01       		.uleb128 0x1
 35596 112da 31       		.byte	0x31
 35597 112db 00       		.byte	0
 35598 112dc 00       		.byte	0
 35599 112dd CA01     		.uleb128 0xca
 35600 112df D0B60000 		.long	0xb6d0
 35601 112e3 00000000 		.quad	.LBB3836
 35601      00000000 
 35602 112eb 00000000 		.long	.Ldebug_ranges0+0x1590
 35603 112ef 02       		.byte	0x2
 35604 112f0 47       		.byte	0x47
 35605 112f1 50140100 		.long	0x11450
 35606 112f5 B701     		.uleb128 0xb7
 35607 112f7 E9B60000 		.long	0xb6e9
 35608 112fb B701     		.uleb128 0xb7
 35609 112fd DFB60000 		.long	0xb6df
 35610 11301 CB01     		.uleb128 0xcb
 35611 11303 3BE50000 		.long	0xe53b
 35612 11307 00000000 		.quad	.LBB3837
 35612      00000000 
 35613 1130f 00000000 		.long	.Ldebug_ranges0+0x1590
 35614 11313 08       		.byte	0x8
 35615 11314 71       		.byte	0x71
 35616 11315 BD01     		.uleb128 0xbd
 35617 11317 58E50000 		.long	0xe558
 35618 1131b 00000000 		.long	.LLST323
 35619 1131f C201     		.uleb128 0xc2
 35620 11321 FEE00000 		.long	0xe0fe
 35621 11325 00000000 		.quad	.LBB3839
GAS LISTING /tmp/ccmMnd7l.s 			page 934


 35621      00000000 
 35622 1132d 00000000 		.long	.Ldebug_ranges0+0x15d0
 35623 11331 08       		.byte	0x8
 35624 11332 3502     		.value	0x235
 35625 11334 02140100 		.long	0x11402
 35626 11338 BD01     		.uleb128 0xbd
 35627 1133a 17E10000 		.long	0xe117
 35628 1133e 00000000 		.long	.LLST324
 35629 11342 BD01     		.uleb128 0xbd
 35630 11344 0DE10000 		.long	0xe10d
 35631 11348 00000000 		.long	.LLST325
 35632 1134c C201     		.uleb128 0xc2
 35633 1134e 58C60000 		.long	0xc658
 35634 11352 00000000 		.quad	.LBB3841
 35634      00000000 
 35635 1135a 00000000 		.long	.Ldebug_ranges0+0x1610
 35636 1135e 0D       		.byte	0xd
 35637 1135f BC01     		.value	0x1bc
 35638 11361 7E130100 		.long	0x1137e
 35639 11365 BD01     		.uleb128 0xbd
 35640 11367 6CC60000 		.long	0xc66c
 35641 1136b 00000000 		.long	.LLST326
 35642 1136f CD01     		.uleb128 0xcd
 35643 11371 00000000 		.quad	.LVL356
 35643      00000000 
 35644 11379 A5800000 		.long	0x80a5
 35645 1137d 00       		.byte	0
 35646 1137e CC01     		.uleb128 0xcc
 35647 11380 57B60000 		.long	0xb657
 35648 11384 00000000 		.quad	.LBB3844
 35648      00000000 
 35649 1138c 00000000 		.long	.Ldebug_ranges0+0x1640
 35650 11390 0D       		.byte	0xd
 35651 11391 BC01     		.value	0x1bc
 35652 11393 BD01     		.uleb128 0xbd
 35653 11395 70B60000 		.long	0xb670
 35654 11399 00000000 		.long	.LLST327
 35655 1139d BD01     		.uleb128 0xbd
 35656 1139f 66B60000 		.long	0xb666
 35657 113a3 00000000 		.long	.LLST328
 35658 113a7 B801     		.uleb128 0xb8
 35659 113a9 00000000 		.quad	.LBB3846
 35659      00000000 
 35660 113b1 2F000000 		.quad	.LBE3846-.LBB3846
 35660      00000000 
 35661 113b9 BD01     		.uleb128 0xbd
 35662 113bb 70B60000 		.long	0xb670
 35663 113bf 00000000 		.long	.LLST329
 35664 113c3 BD01     		.uleb128 0xbd
 35665 113c5 66B60000 		.long	0xb666
 35666 113c9 00000000 		.long	.LLST330
 35667 113cd C501     		.uleb128 0xc5
 35668 113cf 00000000 		.quad	.LVL337
 35668      00000000 
 35669 113d7 652A0000 		.long	0x2a65
 35670 113db E7130100 		.long	0x113e7
 35671 113df C101     		.uleb128 0xc1
GAS LISTING /tmp/ccmMnd7l.s 			page 935


 35672 113e1 01       		.uleb128 0x1
 35673 113e2 55       		.byte	0x55
 35674 113e3 02       		.uleb128 0x2
 35675 113e4 7C       		.byte	0x7c
 35676 113e5 00       		.sleb128 0
 35677 113e6 00       		.byte	0
 35678 113e7 D001     		.uleb128 0xd0
 35679 113e9 00000000 		.quad	.LVL338
 35679      00000000 
 35680 113f1 C101     		.uleb128 0xc1
 35681 113f3 01       		.uleb128 0x1
 35682 113f4 55       		.byte	0x55
 35683 113f5 02       		.uleb128 0x2
 35684 113f6 7C       		.byte	0x7c
 35685 113f7 00       		.sleb128 0
 35686 113f8 C101     		.uleb128 0xc1
 35687 113fa 01       		.uleb128 0x1
 35688 113fb 54       		.byte	0x54
 35689 113fc 01       		.uleb128 0x1
 35690 113fd 3A       		.byte	0x3a
 35691 113fe 00       		.byte	0
 35692 113ff 00       		.byte	0
 35693 11400 00       		.byte	0
 35694 11401 00       		.byte	0
 35695 11402 C401     		.uleb128 0xc4
 35696 11404 79C60000 		.long	0xc679
 35697 11408 00000000 		.quad	.LBB3853
 35697      00000000 
 35698 11410 08000000 		.quad	.LBE3853-.LBB3853
 35698      00000000 
 35699 11418 08       		.byte	0x8
 35700 11419 3502     		.value	0x235
 35701 1141b 38140100 		.long	0x11438
 35702 1141f BD01     		.uleb128 0xbd
 35703 11421 96C60000 		.long	0xc696
 35704 11425 00000000 		.long	.LLST331
 35705 11429 CD01     		.uleb128 0xcd
 35706 1142b 00000000 		.quad	.LVL300
 35706      00000000 
 35707 11433 76290000 		.long	0x2976
 35708 11437 00       		.byte	0
 35709 11438 C001     		.uleb128 0xc0
 35710 1143a 00000000 		.quad	.LVL299
 35710      00000000 
 35711 11442 C0290000 		.long	0x29c0
 35712 11446 C101     		.uleb128 0xc1
 35713 11448 01       		.uleb128 0x1
 35714 11449 55       		.byte	0x55
 35715 1144a 02       		.uleb128 0x2
 35716 1144b 76       		.byte	0x76
 35717 1144c 00       		.sleb128 0
 35718 1144d 00       		.byte	0
 35719 1144e 00       		.byte	0
 35720 1144f 00       		.byte	0
 35721 11450 CF01     		.uleb128 0xcf
 35722 11452 58B50000 		.long	0xb558
 35723 11456 00000000 		.quad	.LBB3861
GAS LISTING /tmp/ccmMnd7l.s 			page 936


 35723      00000000 
 35724 1145e 1B000000 		.quad	.LBE3861-.LBB3861
 35724      00000000 
 35725 11466 02       		.byte	0x2
 35726 11467 48       		.byte	0x48
 35727 11468 A7140100 		.long	0x114a7
 35728 1146c B701     		.uleb128 0xb7
 35729 1146e 6CB50000 		.long	0xb56c
 35730 11472 BD01     		.uleb128 0xbd
 35731 11474 79B50000 		.long	0xb579
 35732 11478 00000000 		.long	.LLST332
 35733 1147c C001     		.uleb128 0xc0
 35734 1147e 00000000 		.quad	.LVL302
 35734      00000000 
 35735 11486 65800000 		.long	0x8065
 35736 1148a C101     		.uleb128 0xc1
 35737 1148c 01       		.uleb128 0x1
 35738 1148d 55       		.byte	0x55
 35739 1148e 02       		.uleb128 0x2
 35740 1148f 76       		.byte	0x76
 35741 11490 00       		.sleb128 0
 35742 11491 C101     		.uleb128 0xc1
 35743 11493 01       		.uleb128 0x1
 35744 11494 54       		.byte	0x54
 35745 11495 09       		.uleb128 0x9
 35746 11496 03       		.byte	0x3
 35747 11497 00000000 		.quad	.LC17
 35747      00000000 
 35748 1149f C101     		.uleb128 0xc1
 35749 114a1 01       		.uleb128 0x1
 35750 114a2 51       		.byte	0x51
 35751 114a3 01       		.uleb128 0x1
 35752 114a4 38       		.byte	0x38
 35753 114a5 00       		.byte	0
 35754 114a6 00       		.byte	0
 35755 114a7 CA01     		.uleb128 0xca
 35756 114a9 8FB60000 		.long	0xb68f
 35757 114ad 00000000 		.quad	.LBB3863
 35757      00000000 
 35758 114b5 00000000 		.long	.Ldebug_ranges0+0x1670
 35759 114b9 02       		.byte	0x2
 35760 114ba 48       		.byte	0x48
 35761 114bb F1140100 		.long	0x114f1
 35762 114bf BD01     		.uleb128 0xbd
 35763 114c1 A8B60000 		.long	0xb6a8
 35764 114c5 00000000 		.long	.LLST333
 35765 114c9 B701     		.uleb128 0xb7
 35766 114cb 9EB60000 		.long	0xb69e
 35767 114cf C001     		.uleb128 0xc0
 35768 114d1 00000000 		.quad	.LVL303
 35768      00000000 
 35769 114d9 94290000 		.long	0x2994
 35770 114dd C101     		.uleb128 0xc1
 35771 114df 01       		.uleb128 0x1
 35772 114e0 55       		.byte	0x55
 35773 114e1 02       		.uleb128 0x2
 35774 114e2 76       		.byte	0x76
GAS LISTING /tmp/ccmMnd7l.s 			page 937


 35775 114e3 00       		.sleb128 0
 35776 114e4 C101     		.uleb128 0xc1
 35777 114e6 01       		.uleb128 0x1
 35778 114e7 61       		.byte	0x61
 35779 114e8 06       		.uleb128 0x6
 35780 114e9 91       		.byte	0x91
 35781 114ea B87F     		.sleb128 -72
 35782 114ec F6       		.byte	0xf6
 35783 114ed 08       		.byte	0x8
 35784 114ee 29       		.uleb128 0x29
 35785 114ef 00       		.byte	0
 35786 114f0 00       		.byte	0
 35787 114f1 CA01     		.uleb128 0xca
 35788 114f3 58B50000 		.long	0xb558
 35789 114f7 00000000 		.quad	.LBB3866
 35789      00000000 
 35790 114ff 00000000 		.long	.Ldebug_ranges0+0x16a0
 35791 11503 02       		.byte	0x2
 35792 11504 48       		.byte	0x48
 35793 11505 48150100 		.long	0x11548
 35794 11509 BD01     		.uleb128 0xbd
 35795 1150b 79B50000 		.long	0xb579
 35796 1150f 00000000 		.long	.LLST334
 35797 11513 BD01     		.uleb128 0xbd
 35798 11515 6CB50000 		.long	0xb56c
 35799 11519 00000000 		.long	.LLST335
 35800 1151d C001     		.uleb128 0xc0
 35801 1151f 00000000 		.quad	.LVL305
 35801      00000000 
 35802 11527 65800000 		.long	0x8065
 35803 1152b C101     		.uleb128 0xc1
 35804 1152d 01       		.uleb128 0x1
 35805 1152e 55       		.byte	0x55
 35806 1152f 02       		.uleb128 0x2
 35807 11530 76       		.byte	0x76
 35808 11531 00       		.sleb128 0
 35809 11532 C101     		.uleb128 0xc1
 35810 11534 01       		.uleb128 0x1
 35811 11535 54       		.byte	0x54
 35812 11536 09       		.uleb128 0x9
 35813 11537 03       		.byte	0x3
 35814 11538 00000000 		.quad	.LC18
 35814      00000000 
 35815 11540 C101     		.uleb128 0xc1
 35816 11542 01       		.uleb128 0x1
 35817 11543 51       		.byte	0x51
 35818 11544 01       		.uleb128 0x1
 35819 11545 3A       		.byte	0x3a
 35820 11546 00       		.byte	0
 35821 11547 00       		.byte	0
 35822 11548 CF01     		.uleb128 0xcf
 35823 1154a 8FB60000 		.long	0xb68f
 35824 1154e 00000000 		.quad	.LBB3871
 35824      00000000 
 35825 11556 0D000000 		.quad	.LBE3871-.LBB3871
 35825      00000000 
 35826 1155e 02       		.byte	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 938


 35827 1155f 48       		.byte	0x48
 35828 11560 95150100 		.long	0x11595
 35829 11564 BD01     		.uleb128 0xbd
 35830 11566 A8B60000 		.long	0xb6a8
 35831 1156a 00000000 		.long	.LLST336
 35832 1156e B701     		.uleb128 0xb7
 35833 11570 9EB60000 		.long	0xb69e
 35834 11574 C001     		.uleb128 0xc0
 35835 11576 00000000 		.quad	.LVL306
 35835      00000000 
 35836 1157e 94290000 		.long	0x2994
 35837 11582 C101     		.uleb128 0xc1
 35838 11584 01       		.uleb128 0x1
 35839 11585 55       		.byte	0x55
 35840 11586 02       		.uleb128 0x2
 35841 11587 76       		.byte	0x76
 35842 11588 00       		.sleb128 0
 35843 11589 C101     		.uleb128 0xc1
 35844 1158b 01       		.uleb128 0x1
 35845 1158c 61       		.byte	0x61
 35846 1158d 05       		.uleb128 0x5
 35847 1158e 77       		.byte	0x77
 35848 1158f 00       		.sleb128 0
 35849 11590 F6       		.byte	0xf6
 35850 11591 08       		.byte	0x8
 35851 11592 29       		.uleb128 0x29
 35852 11593 00       		.byte	0
 35853 11594 00       		.byte	0
 35854 11595 CE01     		.uleb128 0xce
 35855 11597 58B50000 		.long	0xb558
 35856 1159b 00000000 		.quad	.LBB3873
 35856      00000000 
 35857 115a3 14000000 		.quad	.LBE3873-.LBB3873
 35857      00000000 
 35858 115ab 02       		.byte	0x2
 35859 115ac 48       		.byte	0x48
 35860 115ad BD01     		.uleb128 0xbd
 35861 115af 79B50000 		.long	0xb579
 35862 115b3 00000000 		.long	.LLST337
 35863 115b7 BD01     		.uleb128 0xbd
 35864 115b9 6CB50000 		.long	0xb56c
 35865 115bd 00000000 		.long	.LLST338
 35866 115c1 C001     		.uleb128 0xc0
 35867 115c3 00000000 		.quad	.LVL307
 35867      00000000 
 35868 115cb 65800000 		.long	0x8065
 35869 115cf C101     		.uleb128 0xc1
 35870 115d1 01       		.uleb128 0x1
 35871 115d2 54       		.byte	0x54
 35872 115d3 09       		.uleb128 0x9
 35873 115d4 03       		.byte	0x3
 35874 115d5 00000000 		.quad	.LC19
 35874      00000000 
 35875 115dd C101     		.uleb128 0xc1
 35876 115df 01       		.uleb128 0x1
 35877 115e0 51       		.byte	0x51
 35878 115e1 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 939


 35879 115e2 31       		.byte	0x31
 35880 115e3 00       		.byte	0
 35881 115e4 00       		.byte	0
 35882 115e5 00       		.byte	0
 35883 115e6 CB01     		.uleb128 0xcb
 35884 115e8 C6DF0000 		.long	0xdfc6
 35885 115ec 00000000 		.quad	.LBB3879
 35885      00000000 
 35886 115f4 00000000 		.long	.Ldebug_ranges0+0x16d0
 35887 115f8 02       		.byte	0x2
 35888 115f9 41       		.byte	0x41
 35889 115fa BD01     		.uleb128 0xbd
 35890 115fc D5DF0000 		.long	0xdfd5
 35891 11600 00000000 		.long	.LLST339
 35892 11604 CC01     		.uleb128 0xcc
 35893 11606 8BCB0000 		.long	0xcb8b
 35894 1160a 00000000 		.quad	.LBB3880
 35894      00000000 
 35895 11612 00000000 		.long	.Ldebug_ranges0+0x16d0
 35896 11616 06       		.byte	0x6
 35897 11617 A901     		.value	0x1a9
 35898 11619 BD01     		.uleb128 0xbd
 35899 1161b 9ACB0000 		.long	0xcb9a
 35900 1161f 00000000 		.long	.LLST339
 35901 11623 CB01     		.uleb128 0xcb
 35902 11625 0DCB0000 		.long	0xcb0d
 35903 11629 00000000 		.quad	.LBB3882
 35903      00000000 
 35904 11631 00000000 		.long	.Ldebug_ranges0+0x1700
 35905 11635 06       		.byte	0x6
 35906 11636 A0       		.byte	0xa0
 35907 11637 B701     		.uleb128 0xb7
 35908 11639 1CCB0000 		.long	0xcb1c
 35909 1163d BD01     		.uleb128 0xbd
 35910 1163f 32CB0000 		.long	0xcb32
 35911 11643 00000000 		.long	.LLST341
 35912 11647 BD01     		.uleb128 0xbd
 35913 11649 26CB0000 		.long	0xcb26
 35914 1164d 00000000 		.long	.LLST342
 35915 11651 B401     		.uleb128 0xb4
 35916 11653 00000000 		.long	.Ldebug_ranges0+0x1700
 35917 11657 CE01     		.uleb128 0xce
 35918 11659 D5CA0000 		.long	0xcad5
 35919 1165d 00000000 		.quad	.LBB3884
 35919      00000000 
 35920 11665 0A000000 		.quad	.LBE3884-.LBB3884
 35920      00000000 
 35921 1166d 06       		.byte	0x6
 35922 1166e B2       		.byte	0xb2
 35923 1166f B701     		.uleb128 0xb7
 35924 11671 E0CA0000 		.long	0xcae0
 35925 11675 BD01     		.uleb128 0xbd
 35926 11677 FACA0000 		.long	0xcafa
 35927 1167b 00000000 		.long	.LLST343
 35928 1167f BD01     		.uleb128 0xbd
 35929 11681 EDCA0000 		.long	0xcaed
 35930 11685 00000000 		.long	.LLST344
GAS LISTING /tmp/ccmMnd7l.s 			page 940


 35931 11689 B601     		.uleb128 0xb6
 35932 1168b AACA0000 		.long	0xcaaa
 35933 1168f 00000000 		.quad	.LBB3885
 35933      00000000 
 35934 11697 0A000000 		.quad	.LBE3885-.LBB3885
 35934      00000000 
 35935 1169f 2F       		.byte	0x2f
 35936 116a0 7F01     		.value	0x17f
 35937 116a2 B701     		.uleb128 0xb7
 35938 116a4 B9CA0000 		.long	0xcab9
 35939 116a8 BD01     		.uleb128 0xbd
 35940 116aa CFCA0000 		.long	0xcacf
 35941 116ae 00000000 		.long	.LLST343
 35942 116b2 BD01     		.uleb128 0xbd
 35943 116b4 C3CA0000 		.long	0xcac3
 35944 116b8 00000000 		.long	.LLST344
 35945 116bc B101     		.uleb128 0xb1
 35946 116be 00000000 		.quad	.LVL314
 35946      00000000 
 35947 116c6 F84F0100 		.long	0x14ff8
 35948 116ca 00       		.byte	0
 35949 116cb 00       		.byte	0
 35950 116cc 00       		.byte	0
 35951 116cd 00       		.byte	0
 35952 116ce 00       		.byte	0
 35953 116cf 00       		.byte	0
 35954 116d0 00       		.byte	0
 35955 116d1 D501     		.uleb128 0xd5
 35956 116d3 00000000 		.long	.LASF1619
 35957 116d7 16       		.byte	0x16
 35958 116d8 24       		.byte	0x24
 35959 116d9 D8800000 		.long	0x80d8
 35960 116dd 00000000 		.quad	.LFB6051
 35960      00000000 
 35961 116e5 500F0000 		.quad	.LFE6051-.LFB6051
 35961      00000000 
 35962 116ed 01       		.uleb128 0x1
 35963 116ee 9C       		.byte	0x9c
 35964 116ef 184E0100 		.long	0x14e18
 35965 116f3 C301     		.uleb128 0xc3
 35966 116f5 00000000 		.long	.Ldebug_ranges0+0x1730
 35967 116f9 014E0100 		.long	0x14e01
 35968 116fd D601     		.uleb128 0xd6
 35969 116ff 72657400 		.string	"ret"
 35970 11703 16       		.byte	0x16
 35971 11704 28       		.byte	0x28
 35972 11705 D8800000 		.long	0x80d8
 35973 11709 00000000 		.long	.LLST347
 35974 1170d C901     		.uleb128 0xc9
 35975 1170f 00000000 		.long	.LASF1614
 35976 11713 16       		.byte	0x16
 35977 11714 29       		.byte	0x29
 35978 11715 A0470000 		.long	0x47a0
 35979 11719 03       		.uleb128 0x3
 35980 1171a 91       		.byte	0x91
 35981 1171b C07E     		.sleb128 -192
 35982 1171d CF01     		.uleb128 0xcf
GAS LISTING /tmp/ccmMnd7l.s 			page 941


 35983 1171f 58B50000 		.long	0xb558
 35984 11723 00000000 		.quad	.LBB3895
 35984      00000000 
 35985 1172b 1B000000 		.quad	.LBE3895-.LBB3895
 35985      00000000 
 35986 11733 16       		.byte	0x16
 35987 11734 2B       		.byte	0x2b
 35988 11735 7B170100 		.long	0x1177b
 35989 11739 B701     		.uleb128 0xb7
 35990 1173b 6CB50000 		.long	0xb56c
 35991 1173f AF01     		.uleb128 0xaf
 35992 11741 79B50000 		.long	0xb579
 35993 11745 0A       		.uleb128 0xa
 35994 11746 03       		.byte	0x3
 35995 11747 00000000 		.quad	.LC21
 35995      00000000 
 35996 1174f 9F       		.byte	0x9f
 35997 11750 C001     		.uleb128 0xc0
 35998 11752 00000000 		.quad	.LVL359
 35998      00000000 
 35999 1175a 65800000 		.long	0x8065
 36000 1175e C101     		.uleb128 0xc1
 36001 11760 01       		.uleb128 0x1
 36002 11761 55       		.byte	0x55
 36003 11762 02       		.uleb128 0x2
 36004 11763 7D       		.byte	0x7d
 36005 11764 00       		.sleb128 0
 36006 11765 C101     		.uleb128 0xc1
 36007 11767 01       		.uleb128 0x1
 36008 11768 54       		.byte	0x54
 36009 11769 09       		.uleb128 0x9
 36010 1176a 03       		.byte	0x3
 36011 1176b 00000000 		.quad	.LC21
 36011      00000000 
 36012 11773 C101     		.uleb128 0xc1
 36013 11775 01       		.uleb128 0x1
 36014 11776 51       		.byte	0x51
 36015 11777 01       		.uleb128 0x1
 36016 11778 31       		.byte	0x31
 36017 11779 00       		.byte	0
 36018 1177a 00       		.byte	0
 36019 1177b CF01     		.uleb128 0xcf
 36020 1177d D0B60000 		.long	0xb6d0
 36021 11781 00000000 		.quad	.LBB3897
 36021      00000000 
 36022 11789 21000000 		.quad	.LBE3897-.LBB3897
 36022      00000000 
 36023 11791 16       		.byte	0x16
 36024 11792 2B       		.byte	0x2b
 36025 11793 BA170100 		.long	0x117ba
 36026 11797 B701     		.uleb128 0xb7
 36027 11799 E9B60000 		.long	0xb6e9
 36028 1179d B701     		.uleb128 0xb7
 36029 1179f DFB60000 		.long	0xb6df
 36030 117a3 C001     		.uleb128 0xc0
 36031 117a5 00000000 		.quad	.LVL360
 36031      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 942


 36032 117ad 3BE50000 		.long	0xe53b
 36033 117b1 C101     		.uleb128 0xc1
 36034 117b3 01       		.uleb128 0x1
 36035 117b4 55       		.byte	0x55
 36036 117b5 02       		.uleb128 0x2
 36037 117b6 7D       		.byte	0x7d
 36038 117b7 00       		.sleb128 0
 36039 117b8 00       		.byte	0
 36040 117b9 00       		.byte	0
 36041 117ba C301     		.uleb128 0xc3
 36042 117bc 00000000 		.long	.Ldebug_ranges0+0x1780
 36043 117c0 74310100 		.long	0x13174
 36044 117c4 C701     		.uleb128 0xc7
 36045 117c6 00000000 		.long	.LASF1620
 36046 117ca 16       		.byte	0x16
 36047 117cb 2C       		.byte	0x2c
 36048 117cc 73990000 		.long	0x9973
 36049 117d0 00000000 		.long	.LLST348
 36050 117d4 B401     		.uleb128 0xb4
 36051 117d6 00000000 		.long	.Ldebug_ranges0+0x17b0
 36052 117da C701     		.uleb128 0xc7
 36053 117dc 00000000 		.long	.LASF1621
 36054 117e0 16       		.byte	0x16
 36055 117e1 2D       		.byte	0x2d
 36056 117e2 085C0000 		.long	0x5c08
 36057 117e6 00000000 		.long	.LLST349
 36058 117ea C301     		.uleb128 0xc3
 36059 117ec 00000000 		.long	.Ldebug_ranges0+0x17e0
 36060 117f0 5B300100 		.long	0x1305b
 36061 117f4 C701     		.uleb128 0xc7
 36062 117f6 00000000 		.long	.LASF1612
 36063 117fa 16       		.byte	0x16
 36064 117fb 2E       		.byte	0x2e
 36065 117fc 73990000 		.long	0x9973
 36066 11800 00000000 		.long	.LLST350
 36067 11804 B401     		.uleb128 0xb4
 36068 11806 00000000 		.long	.Ldebug_ranges0+0x1820
 36069 1180a D601     		.uleb128 0xd6
 36070 1180c 686D00   		.string	"hm"
 36071 1180f 16       		.byte	0x16
 36072 11810 2F       		.byte	0x2f
 36073 11811 AA650000 		.long	0x65aa
 36074 11815 00000000 		.long	.LLST351
 36075 11819 CA01     		.uleb128 0xca
 36076 1181b 58B50000 		.long	0xb558
 36077 1181f 00000000 		.quad	.LBB3903
 36077      00000000 
 36078 11827 00000000 		.long	.Ldebug_ranges0+0x1880
 36079 1182b 16       		.byte	0x16
 36080 1182c 30       		.byte	0x30
 36081 1182d 6C180100 		.long	0x1186c
 36082 11831 B701     		.uleb128 0xb7
 36083 11833 6CB50000 		.long	0xb56c
 36084 11837 BD01     		.uleb128 0xbd
 36085 11839 79B50000 		.long	0xb579
 36086 1183d 00000000 		.long	.LLST352
 36087 11841 C001     		.uleb128 0xc0
GAS LISTING /tmp/ccmMnd7l.s 			page 943


 36088 11843 00000000 		.quad	.LVL366
 36088      00000000 
 36089 1184b 65800000 		.long	0x8065
 36090 1184f C101     		.uleb128 0xc1
 36091 11851 01       		.uleb128 0x1
 36092 11852 55       		.byte	0x55
 36093 11853 02       		.uleb128 0x2
 36094 11854 7D       		.byte	0x7d
 36095 11855 00       		.sleb128 0
 36096 11856 C101     		.uleb128 0xc1
 36097 11858 01       		.uleb128 0x1
 36098 11859 54       		.byte	0x54
 36099 1185a 09       		.uleb128 0x9
 36100 1185b 03       		.byte	0x3
 36101 1185c 00000000 		.quad	.LC22
 36101      00000000 
 36102 11864 C101     		.uleb128 0xc1
 36103 11866 01       		.uleb128 0x1
 36104 11867 51       		.byte	0x51
 36105 11868 01       		.uleb128 0x1
 36106 11869 3C       		.byte	0x3c
 36107 1186a 00       		.byte	0
 36108 1186b 00       		.byte	0
 36109 1186c CA01     		.uleb128 0xca
 36110 1186e 38DA0000 		.long	0xda38
 36111 11872 00000000 		.quad	.LBB3907
 36111      00000000 
 36112 1187a 00000000 		.long	.Ldebug_ranges0+0x18b0
 36113 1187e 16       		.byte	0x16
 36114 1187f 30       		.byte	0x30
 36115 11880 B2180100 		.long	0x118b2
 36116 11884 BD01     		.uleb128 0xbd
 36117 11886 51DA0000 		.long	0xda51
 36118 1188a 00000000 		.long	.LLST353
 36119 1188e B701     		.uleb128 0xb7
 36120 11890 47DA0000 		.long	0xda47
 36121 11894 C001     		.uleb128 0xc0
 36122 11896 00000000 		.quad	.LVL367
 36122      00000000 
 36123 1189e 4A290000 		.long	0x294a
 36124 118a2 C101     		.uleb128 0xc1
 36125 118a4 01       		.uleb128 0x1
 36126 118a5 55       		.byte	0x55
 36127 118a6 02       		.uleb128 0x2
 36128 118a7 7D       		.byte	0x7d
 36129 118a8 00       		.sleb128 0
 36130 118a9 C101     		.uleb128 0xc1
 36131 118ab 01       		.uleb128 0x1
 36132 118ac 54       		.byte	0x54
 36133 118ad 02       		.uleb128 0x2
 36134 118ae 7C       		.byte	0x7c
 36135 118af 00       		.sleb128 0
 36136 118b0 00       		.byte	0
 36137 118b1 00       		.byte	0
 36138 118b2 CA01     		.uleb128 0xca
 36139 118b4 58B50000 		.long	0xb558
 36140 118b8 00000000 		.quad	.LBB3910
GAS LISTING /tmp/ccmMnd7l.s 			page 944


 36140      00000000 
 36141 118c0 00000000 		.long	.Ldebug_ranges0+0x18e0
 36142 118c4 16       		.byte	0x16
 36143 118c5 30       		.byte	0x30
 36144 118c6 09190100 		.long	0x11909
 36145 118ca BD01     		.uleb128 0xbd
 36146 118cc 79B50000 		.long	0xb579
 36147 118d0 00000000 		.long	.LLST354
 36148 118d4 BD01     		.uleb128 0xbd
 36149 118d6 6CB50000 		.long	0xb56c
 36150 118da 00000000 		.long	.LLST355
 36151 118de C001     		.uleb128 0xc0
 36152 118e0 00000000 		.quad	.LVL369
 36152      00000000 
 36153 118e8 65800000 		.long	0x8065
 36154 118ec C101     		.uleb128 0xc1
 36155 118ee 01       		.uleb128 0x1
 36156 118ef 55       		.byte	0x55
 36157 118f0 02       		.uleb128 0x2
 36158 118f1 73       		.byte	0x73
 36159 118f2 00       		.sleb128 0
 36160 118f3 C101     		.uleb128 0xc1
 36161 118f5 01       		.uleb128 0x1
 36162 118f6 54       		.byte	0x54
 36163 118f7 09       		.uleb128 0x9
 36164 118f8 03       		.byte	0x3
 36165 118f9 00000000 		.quad	.LC23
 36165      00000000 
 36166 11901 C101     		.uleb128 0xc1
 36167 11903 01       		.uleb128 0x1
 36168 11904 51       		.byte	0x51
 36169 11905 01       		.uleb128 0x1
 36170 11906 3A       		.byte	0x3a
 36171 11907 00       		.byte	0
 36172 11908 00       		.byte	0
 36173 11909 CF01     		.uleb128 0xcf
 36174 1190b 38DA0000 		.long	0xda38
 36175 1190f 00000000 		.quad	.LBB3915
 36175      00000000 
 36176 11917 10000000 		.quad	.LBE3915-.LBB3915
 36176      00000000 
 36177 1191f 16       		.byte	0x16
 36178 11920 30       		.byte	0x30
 36179 11921 55190100 		.long	0x11955
 36180 11925 BD01     		.uleb128 0xbd
 36181 11927 51DA0000 		.long	0xda51
 36182 1192b 00000000 		.long	.LLST356
 36183 1192f B701     		.uleb128 0xb7
 36184 11931 47DA0000 		.long	0xda47
 36185 11935 C001     		.uleb128 0xc0
 36186 11937 00000000 		.quad	.LVL370
 36186      00000000 
 36187 1193f 4A290000 		.long	0x294a
 36188 11943 C101     		.uleb128 0xc1
 36189 11945 01       		.uleb128 0x1
 36190 11946 55       		.byte	0x55
 36191 11947 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 945


 36192 11948 73       		.byte	0x73
 36193 11949 00       		.sleb128 0
 36194 1194a C101     		.uleb128 0xc1
 36195 1194c 01       		.uleb128 0x1
 36196 1194d 54       		.byte	0x54
 36197 1194e 04       		.uleb128 0x4
 36198 1194f 91       		.byte	0x91
 36199 11950 887E     		.sleb128 -248
 36200 11952 06       		.byte	0x6
 36201 11953 00       		.byte	0
 36202 11954 00       		.byte	0
 36203 11955 CF01     		.uleb128 0xcf
 36204 11957 58B50000 		.long	0xb558
 36205 1195b 00000000 		.quad	.LBB3917
 36205      00000000 
 36206 11963 14000000 		.quad	.LBE3917-.LBB3917
 36206      00000000 
 36207 1196b 16       		.byte	0x16
 36208 1196c 30       		.byte	0x30
 36209 1196d A9190100 		.long	0x119a9
 36210 11971 BD01     		.uleb128 0xbd
 36211 11973 79B50000 		.long	0xb579
 36212 11977 00000000 		.long	.LLST357
 36213 1197b BD01     		.uleb128 0xbd
 36214 1197d 6CB50000 		.long	0xb56c
 36215 11981 00000000 		.long	.LLST358
 36216 11985 C001     		.uleb128 0xc0
 36217 11987 00000000 		.quad	.LVL371
 36217      00000000 
 36218 1198f 65800000 		.long	0x8065
 36219 11993 C101     		.uleb128 0xc1
 36220 11995 01       		.uleb128 0x1
 36221 11996 54       		.byte	0x54
 36222 11997 09       		.uleb128 0x9
 36223 11998 03       		.byte	0x3
 36224 11999 00000000 		.quad	.LC24
 36224      00000000 
 36225 119a1 C101     		.uleb128 0xc1
 36226 119a3 01       		.uleb128 0x1
 36227 119a4 51       		.byte	0x51
 36228 119a5 01       		.uleb128 0x1
 36229 119a6 45       		.byte	0x45
 36230 119a7 00       		.byte	0
 36231 119a8 00       		.byte	0
 36232 119a9 CF01     		.uleb128 0xcf
 36233 119ab 58B50000 		.long	0xb558
 36234 119af 00000000 		.quad	.LBB3919
 36234      00000000 
 36235 119b7 18000000 		.quad	.LBE3919-.LBB3919
 36235      00000000 
 36236 119bf 16       		.byte	0x16
 36237 119c0 31       		.byte	0x31
 36238 119c1 F9190100 		.long	0x119f9
 36239 119c5 B701     		.uleb128 0xb7
 36240 119c7 6CB50000 		.long	0xb56c
 36241 119cb BD01     		.uleb128 0xbd
 36242 119cd 79B50000 		.long	0xb579
GAS LISTING /tmp/ccmMnd7l.s 			page 946


 36243 119d1 00000000 		.long	.LLST359
 36244 119d5 C001     		.uleb128 0xc0
 36245 119d7 00000000 		.quad	.LVL372
 36245      00000000 
 36246 119df 65800000 		.long	0x8065
 36247 119e3 C101     		.uleb128 0xc1
 36248 119e5 01       		.uleb128 0x1
 36249 119e6 54       		.byte	0x54
 36250 119e7 09       		.uleb128 0x9
 36251 119e8 03       		.byte	0x3
 36252 119e9 00000000 		.quad	.LC25
 36252      00000000 
 36253 119f1 C101     		.uleb128 0xc1
 36254 119f3 01       		.uleb128 0x1
 36255 119f4 51       		.byte	0x51
 36256 119f5 01       		.uleb128 0x1
 36257 119f6 37       		.byte	0x37
 36258 119f7 00       		.byte	0
 36259 119f8 00       		.byte	0
 36260 119f9 CA01     		.uleb128 0xca
 36261 119fb 38DA0000 		.long	0xda38
 36262 119ff 00000000 		.quad	.LBB3921
 36262      00000000 
 36263 11a07 00000000 		.long	.Ldebug_ranges0+0x1910
 36264 11a0b 16       		.byte	0x16
 36265 11a0c 31       		.byte	0x31
 36266 11a0d 381A0100 		.long	0x11a38
 36267 11a11 BD01     		.uleb128 0xbd
 36268 11a13 51DA0000 		.long	0xda51
 36269 11a17 00000000 		.long	.LLST360
 36270 11a1b B701     		.uleb128 0xb7
 36271 11a1d 47DA0000 		.long	0xda47
 36272 11a21 C001     		.uleb128 0xc0
 36273 11a23 00000000 		.quad	.LVL373
 36273      00000000 
 36274 11a2b 4A290000 		.long	0x294a
 36275 11a2f C101     		.uleb128 0xc1
 36276 11a31 01       		.uleb128 0x1
 36277 11a32 54       		.byte	0x54
 36278 11a33 02       		.uleb128 0x2
 36279 11a34 7C       		.byte	0x7c
 36280 11a35 00       		.sleb128 0
 36281 11a36 00       		.byte	0
 36282 11a37 00       		.byte	0
 36283 11a38 CA01     		.uleb128 0xca
 36284 11a3a 58B50000 		.long	0xb558
 36285 11a3e 00000000 		.quad	.LBB3924
 36285      00000000 
 36286 11a46 00000000 		.long	.Ldebug_ranges0+0x1940
 36287 11a4a 16       		.byte	0x16
 36288 11a4b 31       		.byte	0x31
 36289 11a4c 8F1A0100 		.long	0x11a8f
 36290 11a50 BD01     		.uleb128 0xbd
 36291 11a52 79B50000 		.long	0xb579
 36292 11a56 00000000 		.long	.LLST361
 36293 11a5a BD01     		.uleb128 0xbd
 36294 11a5c 6CB50000 		.long	0xb56c
GAS LISTING /tmp/ccmMnd7l.s 			page 947


 36295 11a60 00000000 		.long	.LLST362
 36296 11a64 C001     		.uleb128 0xc0
 36297 11a66 00000000 		.quad	.LVL375
 36297      00000000 
 36298 11a6e 65800000 		.long	0x8065
 36299 11a72 C101     		.uleb128 0xc1
 36300 11a74 01       		.uleb128 0x1
 36301 11a75 55       		.byte	0x55
 36302 11a76 02       		.uleb128 0x2
 36303 11a77 73       		.byte	0x73
 36304 11a78 00       		.sleb128 0
 36305 11a79 C101     		.uleb128 0xc1
 36306 11a7b 01       		.uleb128 0x1
 36307 11a7c 54       		.byte	0x54
 36308 11a7d 09       		.uleb128 0x9
 36309 11a7e 03       		.byte	0x3
 36310 11a7f 00000000 		.quad	.LC26
 36310      00000000 
 36311 11a87 C101     		.uleb128 0xc1
 36312 11a89 01       		.uleb128 0x1
 36313 11a8a 51       		.byte	0x51
 36314 11a8b 01       		.uleb128 0x1
 36315 11a8c 40       		.byte	0x40
 36316 11a8d 00       		.byte	0
 36317 11a8e 00       		.byte	0
 36318 11a8f CA01     		.uleb128 0xca
 36319 11a91 38DA0000 		.long	0xda38
 36320 11a95 00000000 		.quad	.LBB3929
 36320      00000000 
 36321 11a9d 00000000 		.long	.Ldebug_ranges0+0x1970
 36322 11aa1 16       		.byte	0x16
 36323 11aa2 31       		.byte	0x31
 36324 11aa3 D71A0100 		.long	0x11ad7
 36325 11aa7 BD01     		.uleb128 0xbd
 36326 11aa9 51DA0000 		.long	0xda51
 36327 11aad 00000000 		.long	.LLST363
 36328 11ab1 B701     		.uleb128 0xb7
 36329 11ab3 47DA0000 		.long	0xda47
 36330 11ab7 C001     		.uleb128 0xc0
 36331 11ab9 00000000 		.quad	.LVL376
 36331      00000000 
 36332 11ac1 4A290000 		.long	0x294a
 36333 11ac5 C101     		.uleb128 0xc1
 36334 11ac7 01       		.uleb128 0x1
 36335 11ac8 55       		.byte	0x55
 36336 11ac9 02       		.uleb128 0x2
 36337 11aca 73       		.byte	0x73
 36338 11acb 00       		.sleb128 0
 36339 11acc C101     		.uleb128 0xc1
 36340 11ace 01       		.uleb128 0x1
 36341 11acf 54       		.byte	0x54
 36342 11ad0 04       		.uleb128 0x4
 36343 11ad1 91       		.byte	0x91
 36344 11ad2 887E     		.sleb128 -248
 36345 11ad4 06       		.byte	0x6
 36346 11ad5 00       		.byte	0
 36347 11ad6 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 948


 36348 11ad7 CA01     		.uleb128 0xca
 36349 11ad9 58B50000 		.long	0xb558
 36350 11add 00000000 		.quad	.LBB3932
 36350      00000000 
 36351 11ae5 00000000 		.long	.Ldebug_ranges0+0x19a0
 36352 11ae9 16       		.byte	0x16
 36353 11aea 31       		.byte	0x31
 36354 11aeb 2E1B0100 		.long	0x11b2e
 36355 11aef BD01     		.uleb128 0xbd
 36356 11af1 79B50000 		.long	0xb579
 36357 11af5 00000000 		.long	.LLST364
 36358 11af9 BD01     		.uleb128 0xbd
 36359 11afb 6CB50000 		.long	0xb56c
 36360 11aff 00000000 		.long	.LLST365
 36361 11b03 C001     		.uleb128 0xc0
 36362 11b05 00000000 		.quad	.LVL378
 36362      00000000 
 36363 11b0d 65800000 		.long	0x8065
 36364 11b11 C101     		.uleb128 0xc1
 36365 11b13 01       		.uleb128 0x1
 36366 11b14 55       		.byte	0x55
 36367 11b15 02       		.uleb128 0x2
 36368 11b16 73       		.byte	0x73
 36369 11b17 00       		.sleb128 0
 36370 11b18 C101     		.uleb128 0xc1
 36371 11b1a 01       		.uleb128 0x1
 36372 11b1b 54       		.byte	0x54
 36373 11b1c 09       		.uleb128 0x9
 36374 11b1d 03       		.byte	0x3
 36375 11b1e 00000000 		.quad	.LC27
 36375      00000000 
 36376 11b26 C101     		.uleb128 0xc1
 36377 11b28 01       		.uleb128 0x1
 36378 11b29 51       		.byte	0x51
 36379 11b2a 01       		.uleb128 0x1
 36380 11b2b 46       		.byte	0x46
 36381 11b2c 00       		.byte	0
 36382 11b2d 00       		.byte	0
 36383 11b2e CF01     		.uleb128 0xcf
 36384 11b30 D0B60000 		.long	0xb6d0
 36385 11b34 00000000 		.quad	.LBB3937
 36385      00000000 
 36386 11b3c 08000000 		.quad	.LBE3937-.LBB3937
 36386      00000000 
 36387 11b44 16       		.byte	0x16
 36388 11b45 31       		.byte	0x31
 36389 11b46 901B0100 		.long	0x11b90
 36390 11b4a B701     		.uleb128 0xb7
 36391 11b4c E9B60000 		.long	0xb6e9
 36392 11b50 B701     		.uleb128 0xb7
 36393 11b52 DFB60000 		.long	0xb6df
 36394 11b56 CE01     		.uleb128 0xce
 36395 11b58 79C60000 		.long	0xc679
 36396 11b5c 00000000 		.quad	.LBB3938
 36396      00000000 
 36397 11b64 08000000 		.quad	.LBE3938-.LBB3938
 36397      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 949


 36398 11b6c 08       		.byte	0x8
 36399 11b6d 71       		.byte	0x71
 36400 11b6e BD01     		.uleb128 0xbd
 36401 11b70 96C60000 		.long	0xc696
 36402 11b74 00000000 		.long	.LLST366
 36403 11b78 C001     		.uleb128 0xc0
 36404 11b7a 00000000 		.quad	.LVL379
 36404      00000000 
 36405 11b82 76290000 		.long	0x2976
 36406 11b86 C101     		.uleb128 0xc1
 36407 11b88 01       		.uleb128 0x1
 36408 11b89 55       		.byte	0x55
 36409 11b8a 02       		.uleb128 0x2
 36410 11b8b 73       		.byte	0x73
 36411 11b8c 00       		.sleb128 0
 36412 11b8d 00       		.byte	0
 36413 11b8e 00       		.byte	0
 36414 11b8f 00       		.byte	0
 36415 11b90 C301     		.uleb128 0xc3
 36416 11b92 00000000 		.long	.Ldebug_ranges0+0x19d0
 36417 11b96 8E2D0100 		.long	0x12d8e
 36418 11b9a C801     		.uleb128 0xc8
 36419 11b9c 7400     		.string	"t"
 36420 11b9e 16       		.byte	0x16
 36421 11b9f 32       		.byte	0x32
 36422 11ba0 FBAE0000 		.long	0xaefb
 36423 11ba4 03       		.uleb128 0x3
 36424 11ba5 91       		.byte	0x91
 36425 11ba6 E07E     		.sleb128 -160
 36426 11ba8 CF01     		.uleb128 0xcf
 36427 11baa 25E10000 		.long	0xe125
 36428 11bae 00000000 		.quad	.LBB3941
 36428      00000000 
 36429 11bb6 81000000 		.quad	.LBE3941-.LBB3941
 36429      00000000 
 36430 11bbe 16       		.byte	0x16
 36431 11bbf 32       		.byte	0x32
 36432 11bc0 5F1E0100 		.long	0x11e5f
 36433 11bc4 BD01     		.uleb128 0xbd
 36434 11bc6 3EE10000 		.long	0xe13e
 36435 11bca 00000000 		.long	.LLST367
 36436 11bce BD01     		.uleb128 0xbd
 36437 11bd0 34E10000 		.long	0xe134
 36438 11bd4 00000000 		.long	.LLST368
 36439 11bd8 CA01     		.uleb128 0xca
 36440 11bda A5E30000 		.long	0xe3a5
 36441 11bde 00000000 		.quad	.LBB3943
 36441      00000000 
 36442 11be6 00000000 		.long	.Ldebug_ranges0+0x1a30
 36443 11bea 02       		.byte	0x2
 36444 11beb 37       		.byte	0x37
 36445 11bec 501E0100 		.long	0x11e50
 36446 11bf0 B701     		.uleb128 0xb7
 36447 11bf2 CBE30000 		.long	0xe3cb
 36448 11bf6 BD01     		.uleb128 0xbd
 36449 11bf8 BEE30000 		.long	0xe3be
 36450 11bfc 00000000 		.long	.LLST370
GAS LISTING /tmp/ccmMnd7l.s 			page 950


 36451 11c00 BD01     		.uleb128 0xbd
 36452 11c02 B4E30000 		.long	0xe3b4
 36453 11c06 00000000 		.long	.LLST371
 36454 11c0a C201     		.uleb128 0xc2
 36455 11c0c 2FD50000 		.long	0xd52f
 36456 11c10 00000000 		.quad	.LBB3944
 36456      00000000 
 36457 11c18 00000000 		.long	.Ldebug_ranges0+0x1a60
 36458 11c1c 06       		.byte	0x6
 36459 11c1d 1601     		.value	0x116
 36460 11c1f 2B1D0100 		.long	0x11d2b
 36461 11c23 B701     		.uleb128 0xb7
 36462 11c25 54D50000 		.long	0xd554
 36463 11c29 BD01     		.uleb128 0xbd
 36464 11c2b 48D50000 		.long	0xd548
 36465 11c2f 00000000 		.long	.LLST370
 36466 11c33 BD01     		.uleb128 0xbd
 36467 11c35 3ED50000 		.long	0xd53e
 36468 11c39 00000000 		.long	.LLST371
 36469 11c3d CA01     		.uleb128 0xca
 36470 11c3f DEE30000 		.long	0xe3de
 36471 11c43 00000000 		.quad	.LBB3945
 36471      00000000 
 36472 11c4b 00000000 		.long	.Ldebug_ranges0+0x1aa0
 36473 11c4f 06       		.byte	0x6
 36474 11c50 88       		.byte	0x88
 36475 11c51 011D0100 		.long	0x11d01
 36476 11c55 BD01     		.uleb128 0xbd
 36477 11c57 F7E30000 		.long	0xe3f7
 36478 11c5b 00000000 		.long	.LLST375
 36479 11c5f BD01     		.uleb128 0xbd
 36480 11c61 EDE30000 		.long	0xe3ed
 36481 11c65 00000000 		.long	.LLST376
 36482 11c69 CB01     		.uleb128 0xcb
 36483 11c6b 40CE0000 		.long	0xce40
 36484 11c6f 00000000 		.quad	.LBB3947
 36484      00000000 
 36485 11c77 00000000 		.long	.Ldebug_ranges0+0x1ae0
 36486 11c7b 06       		.byte	0x6
 36487 11c7c B9       		.byte	0xb9
 36488 11c7d B701     		.uleb128 0xb7
 36489 11c7f 4FCE0000 		.long	0xce4f
 36490 11c83 BD01     		.uleb128 0xbd
 36491 11c85 59CE0000 		.long	0xce59
 36492 11c89 00000000 		.long	.LLST375
 36493 11c8d B401     		.uleb128 0xb4
 36494 11c8f 00000000 		.long	.Ldebug_ranges0+0x1ae0
 36495 11c93 CB01     		.uleb128 0xcb
 36496 11c95 15CE0000 		.long	0xce15
 36497 11c99 00000000 		.quad	.LBB3949
 36497      00000000 
 36498 11ca1 00000000 		.long	.Ldebug_ranges0+0x1ae0
 36499 11ca5 06       		.byte	0x6
 36500 11ca6 AA       		.byte	0xaa
 36501 11ca7 B701     		.uleb128 0xb7
 36502 11ca9 20CE0000 		.long	0xce20
 36503 11cad BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 951


 36504 11caf 2DCE0000 		.long	0xce2d
 36505 11cb3 00000000 		.long	.LLST375
 36506 11cb7 CC01     		.uleb128 0xcc
 36507 11cb9 EACD0000 		.long	0xcdea
 36508 11cbd 00000000 		.quad	.LBB3950
 36508      00000000 
 36509 11cc5 00000000 		.long	.Ldebug_ranges0+0x1ae0
 36510 11cc9 2F       		.byte	0x2f
 36511 11cca 6501     		.value	0x165
 36512 11ccc B701     		.uleb128 0xb7
 36513 11cce F9CD0000 		.long	0xcdf9
 36514 11cd2 BD01     		.uleb128 0xbd
 36515 11cd4 0FCE0000 		.long	0xce0f
 36516 11cd8 00000000 		.long	.LLST379
 36517 11cdc BD01     		.uleb128 0xbd
 36518 11cde 03CE0000 		.long	0xce03
 36519 11ce2 00000000 		.long	.LLST375
 36520 11ce6 C001     		.uleb128 0xc0
 36521 11ce8 00000000 		.quad	.LVL383
 36521      00000000 
 36522 11cf0 DF4F0100 		.long	0x14fdf
 36523 11cf4 C101     		.uleb128 0xc1
 36524 11cf6 01       		.uleb128 0x1
 36525 11cf7 55       		.byte	0x55
 36526 11cf8 02       		.uleb128 0x2
 36527 11cf9 08       		.byte	0x8
 36528 11cfa 28       		.byte	0x28
 36529 11cfb 00       		.byte	0
 36530 11cfc 00       		.byte	0
 36531 11cfd 00       		.byte	0
 36532 11cfe 00       		.byte	0
 36533 11cff 00       		.byte	0
 36534 11d00 00       		.byte	0
 36535 11d01 CE01     		.uleb128 0xce
 36536 11d03 68CE0000 		.long	0xce68
 36537 11d07 00000000 		.quad	.LBB3959
 36537      00000000 
 36538 11d0f 21000000 		.quad	.LBE3959-.LBB3959
 36538      00000000 
 36539 11d17 06       		.byte	0x6
 36540 11d18 87       		.byte	0x87
 36541 11d19 B701     		.uleb128 0xb7
 36542 11d1b 81CE0000 		.long	0xce81
 36543 11d1f BD01     		.uleb128 0xbd
 36544 11d21 77CE0000 		.long	0xce77
 36545 11d25 00000000 		.long	.LLST382
 36546 11d29 00       		.byte	0
 36547 11d2a 00       		.byte	0
 36548 11d2b CC01     		.uleb128 0xcc
 36549 11d2d 66D50000 		.long	0xd566
 36550 11d31 00000000 		.quad	.LBB3964
 36550      00000000 
 36551 11d39 00000000 		.long	.Ldebug_ranges0+0x1b10
 36552 11d3d 06       		.byte	0x6
 36553 11d3e 1701     		.value	0x117
 36554 11d40 BD01     		.uleb128 0xbd
 36555 11d42 7FD50000 		.long	0xd57f
GAS LISTING /tmp/ccmMnd7l.s 			page 952


 36556 11d46 00000000 		.long	.LLST383
 36557 11d4a BD01     		.uleb128 0xbd
 36558 11d4c 75D50000 		.long	0xd575
 36559 11d50 00000000 		.long	.LLST384
 36560 11d54 CC01     		.uleb128 0xcc
 36561 11d56 E4D40000 		.long	0xd4e4
 36562 11d5a 00000000 		.quad	.LBB3966
 36562      00000000 
 36563 11d62 00000000 		.long	.Ldebug_ranges0+0x1b40
 36564 11d66 06       		.byte	0x6
 36565 11d67 1E05     		.value	0x51e
 36566 11d69 B701     		.uleb128 0xb7
 36567 11d6b 24D50000 		.long	0xd524
 36568 11d6f BD01     		.uleb128 0xbd
 36569 11d71 17D50000 		.long	0xd517
 36570 11d75 00000000 		.long	.LLST383
 36571 11d79 BD01     		.uleb128 0xbd
 36572 11d7b 0AD50000 		.long	0xd50a
 36573 11d7f 00000000 		.long	.LLST386
 36574 11d83 CC01     		.uleb128 0xcc
 36575 11d85 9CD40000 		.long	0xd49c
 36576 11d89 00000000 		.quad	.LBB3967
 36576      00000000 
 36577 11d91 00000000 		.long	.Ldebug_ranges0+0x1b40
 36578 11d95 2D       		.byte	0x2d
 36579 11d96 7702     		.value	0x277
 36580 11d98 B701     		.uleb128 0xb7
 36581 11d9a C6D40000 		.long	0xd4c6
 36582 11d9e B701     		.uleb128 0xb7
 36583 11da0 B9D40000 		.long	0xd4b9
 36584 11da4 B401     		.uleb128 0xb4
 36585 11da6 00000000 		.long	.Ldebug_ranges0+0x1b40
 36586 11daa B901     		.uleb128 0xb9
 36587 11dac D5D40000 		.long	0xd4d5
 36588 11db0 CC01     		.uleb128 0xcc
 36589 11db2 62D40000 		.long	0xd462
 36590 11db6 00000000 		.quad	.LBB3969
 36590      00000000 
 36591 11dbe 00000000 		.long	.Ldebug_ranges0+0x1b40
 36592 11dc2 2D       		.byte	0x2d
 36593 11dc3 3802     		.value	0x238
 36594 11dc5 B701     		.uleb128 0xb7
 36595 11dc7 8CD40000 		.long	0xd48c
 36596 11dcb B701     		.uleb128 0xb7
 36597 11dcd 7FD40000 		.long	0xd47f
 36598 11dd1 B401     		.uleb128 0xb4
 36599 11dd3 00000000 		.long	.Ldebug_ranges0+0x1b40
 36600 11dd7 CC01     		.uleb128 0xcc
 36601 11dd9 0FD40000 		.long	0xd40f
 36602 11ddd 00000000 		.quad	.LBB3971
 36602      00000000 
 36603 11de5 00000000 		.long	.Ldebug_ranges0+0x1b40
 36604 11de9 2D       		.byte	0x2d
 36605 11dea 1702     		.value	0x217
 36606 11dec B701     		.uleb128 0xb7
 36607 11dee 4FD40000 		.long	0xd44f
 36608 11df2 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 953


 36609 11df4 42D40000 		.long	0xd442
 36610 11df8 B701     		.uleb128 0xb7
 36611 11dfa 35D40000 		.long	0xd435
 36612 11dfe CC01     		.uleb128 0xcc
 36613 11e00 93CE0000 		.long	0xce93
 36614 11e04 00000000 		.quad	.LBB3972
 36614      00000000 
 36615 11e0c 00000000 		.long	.Ldebug_ranges0+0x1b40
 36616 11e10 14       		.byte	0x14
 36617 11e11 1D03     		.value	0x31d
 36618 11e13 B701     		.uleb128 0xb7
 36619 11e15 D3CE0000 		.long	0xced3
 36620 11e19 B701     		.uleb128 0xb7
 36621 11e1b C6CE0000 		.long	0xcec6
 36622 11e1f BD01     		.uleb128 0xbd
 36623 11e21 B9CE0000 		.long	0xceb9
 36624 11e25 00000000 		.long	.LLST387
 36625 11e29 B401     		.uleb128 0xb4
 36626 11e2b 00000000 		.long	.Ldebug_ranges0+0x1b40
 36627 11e2f B901     		.uleb128 0xb9
 36628 11e31 E2CE0000 		.long	0xcee2
 36629 11e35 B401     		.uleb128 0xb4
 36630 11e37 00000000 		.long	.Ldebug_ranges0+0x1b40
 36631 11e3b BA01     		.uleb128 0xba
 36632 11e3d F1CE0000 		.long	0xcef1
 36633 11e41 00000000 		.long	.LLST388
 36634 11e45 00       		.byte	0
 36635 11e46 00       		.byte	0
 36636 11e47 00       		.byte	0
 36637 11e48 00       		.byte	0
 36638 11e49 00       		.byte	0
 36639 11e4a 00       		.byte	0
 36640 11e4b 00       		.byte	0
 36641 11e4c 00       		.byte	0
 36642 11e4d 00       		.byte	0
 36643 11e4e 00       		.byte	0
 36644 11e4f 00       		.byte	0
 36645 11e50 CD01     		.uleb128 0xcd
 36646 11e52 00000000 		.quad	.LVL380
 36646      00000000 
 36647 11e5a 58E60000 		.long	0xe658
 36648 11e5e 00       		.byte	0
 36649 11e5f BB01     		.uleb128 0xbb
 36650 11e61 00000000 		.quad	.LBB3988
 36650      00000000 
 36651 11e69 1E000000 		.quad	.LBE3988-.LBB3988
 36651      00000000 
 36652 11e71 A11E0100 		.long	0x11ea1
 36653 11e75 D601     		.uleb128 0xd6
 36654 11e77 6900     		.string	"i"
 36655 11e79 16       		.byte	0x16
 36656 11e7a 33       		.byte	0x33
 36657 11e7b 73990000 		.long	0x9973
 36658 11e7f 00000000 		.long	.LLST389
 36659 11e83 C001     		.uleb128 0xc0
 36660 11e85 00000000 		.quad	.LVL393
 36660      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 954


 36661 11e8d 61500100 		.long	0x15061
 36662 11e91 C101     		.uleb128 0xc1
 36663 11e93 01       		.uleb128 0x1
 36664 11e94 55       		.byte	0x55
 36665 11e95 02       		.uleb128 0x2
 36666 11e96 7F       		.byte	0x7f
 36667 11e97 00       		.sleb128 0
 36668 11e98 C101     		.uleb128 0xc1
 36669 11e9a 01       		.uleb128 0x1
 36670 11e9b 52       		.byte	0x52
 36671 11e9c 02       		.uleb128 0x2
 36672 11e9d 7E       		.byte	0x7e
 36673 11e9e 00       		.sleb128 0
 36674 11e9f 00       		.byte	0
 36675 11ea0 00       		.byte	0
 36676 11ea1 CA01     		.uleb128 0xca
 36677 11ea3 04E40000 		.long	0xe404
 36678 11ea7 00000000 		.quad	.LBB3989
 36678      00000000 
 36679 11eaf 00000000 		.long	.Ldebug_ranges0+0x1b70
 36680 11eb3 16       		.byte	0x16
 36681 11eb4 32       		.byte	0x32
 36682 11eb5 1E1F0100 		.long	0x11f1e
 36683 11eb9 BD01     		.uleb128 0xbd
 36684 11ebb 13E40000 		.long	0xe413
 36685 11ebf 00000000 		.long	.LLST390
 36686 11ec3 B401     		.uleb128 0xb4
 36687 11ec5 00000000 		.long	.Ldebug_ranges0+0x1b70
 36688 11ec9 B901     		.uleb128 0xb9
 36689 11ecb 1FE40000 		.long	0xe41f
 36690 11ecf CF01     		.uleb128 0xcf
 36691 11ed1 71BE0000 		.long	0xbe71
 36692 11ed5 00000000 		.quad	.LBB3991
 36692      00000000 
 36693 11edd 14000000 		.quad	.LBE3991-.LBB3991
 36693      00000000 
 36694 11ee5 02       		.byte	0x2
 36695 11ee6 39       		.byte	0x39
 36696 11ee7 001F0100 		.long	0x11f00
 36697 11eeb BD01     		.uleb128 0xbd
 36698 11eed 8ABE0000 		.long	0xbe8a
 36699 11ef1 00000000 		.long	.LLST391
 36700 11ef5 BD01     		.uleb128 0xbd
 36701 11ef7 80BE0000 		.long	0xbe80
 36702 11efb 00000000 		.long	.LLST392
 36703 11eff 00       		.byte	0
 36704 11f00 CD01     		.uleb128 0xcd
 36705 11f02 00000000 		.quad	.LVL397
 36705      00000000 
 36706 11f0a 58E60000 		.long	0xe658
 36707 11f0e CD01     		.uleb128 0xcd
 36708 11f10 00000000 		.quad	.LVL399
 36708      00000000 
 36709 11f18 58E60000 		.long	0xe658
 36710 11f1c 00       		.byte	0
 36711 11f1d 00       		.byte	0
 36712 11f1e CA01     		.uleb128 0xca
GAS LISTING /tmp/ccmMnd7l.s 			page 955


 36713 11f20 2DE40000 		.long	0xe42d
 36714 11f24 00000000 		.quad	.LBB3995
 36714      00000000 
 36715 11f2c 00000000 		.long	.Ldebug_ranges0+0x1ba0
 36716 11f30 16       		.byte	0x16
 36717 11f31 36       		.byte	0x36
 36718 11f32 7A2D0100 		.long	0x12d7a
 36719 11f36 BD01     		.uleb128 0xbd
 36720 11f38 3CE40000 		.long	0xe43c
 36721 11f3c 00000000 		.long	.LLST393
 36722 11f40 C301     		.uleb128 0xc3
 36723 11f42 00000000 		.long	.Ldebug_ranges0+0x1be0
 36724 11f46 772C0100 		.long	0x12c77
 36725 11f4a BA01     		.uleb128 0xba
 36726 11f4c 52E40000 		.long	0xe452
 36727 11f50 00000000 		.long	.LLST394
 36728 11f54 BA01     		.uleb128 0xba
 36729 11f56 5EE40000 		.long	0xe45e
 36730 11f5a 00000000 		.long	.LLST395
 36731 11f5e CA01     		.uleb128 0xca
 36732 11f60 19DF0000 		.long	0xdf19
 36733 11f64 00000000 		.quad	.LBB3998
 36733      00000000 
 36734 11f6c 00000000 		.long	.Ldebug_ranges0+0x1c20
 36735 11f70 02       		.byte	0x2
 36736 11f71 42       		.byte	0x42
 36737 11f72 911F0100 		.long	0x11f91
 36738 11f76 BD01     		.uleb128 0xbd
 36739 11f78 4EDF0000 		.long	0xdf4e
 36740 11f7c 00000000 		.long	.LLST396
 36741 11f80 B701     		.uleb128 0xb7
 36742 11f82 42DF0000 		.long	0xdf42
 36743 11f86 BD01     		.uleb128 0xbd
 36744 11f88 36DF0000 		.long	0xdf36
 36745 11f8c 00000000 		.long	.LLST397
 36746 11f90 00       		.byte	0
 36747 11f91 CA01     		.uleb128 0xca
 36748 11f93 5BDF0000 		.long	0xdf5b
 36749 11f97 00000000 		.quad	.LBB4001
 36749      00000000 
 36750 11f9f 00000000 		.long	.Ldebug_ranges0+0x1c50
 36751 11fa3 02       		.byte	0x2
 36752 11fa4 45       		.byte	0x45
 36753 11fa5 4A260100 		.long	0x1264a
 36754 11fa9 BD01     		.uleb128 0xbd
 36755 11fab 7CDF0000 		.long	0xdf7c
 36756 11faf 00000000 		.long	.LLST398
 36757 11fb3 BD01     		.uleb128 0xbd
 36758 11fb5 6FDF0000 		.long	0xdf6f
 36759 11fb9 00000000 		.long	.LLST399
 36760 11fbd CC01     		.uleb128 0xcc
 36761 11fbf CDDE0000 		.long	0xdecd
 36762 11fc3 00000000 		.quad	.LBB4002
 36762      00000000 
 36763 11fcb 00000000 		.long	.Ldebug_ranges0+0x1c50
 36764 11fcf 0C       		.byte	0xc
 36765 11fd0 4D12     		.value	0x124d
GAS LISTING /tmp/ccmMnd7l.s 			page 956


 36766 11fd2 BD01     		.uleb128 0xbd
 36767 11fd4 F7DE0000 		.long	0xdef7
 36768 11fd8 00000000 		.long	.LLST398
 36769 11fdc BD01     		.uleb128 0xbd
 36770 11fde EADE0000 		.long	0xdeea
 36771 11fe2 00000000 		.long	.LLST399
 36772 11fe6 C201     		.uleb128 0xc2
 36773 11fe8 B4DE0000 		.long	0xdeb4
 36774 11fec 00000000 		.quad	.LBB4004
 36774      00000000 
 36775 11ff4 00000000 		.long	.Ldebug_ranges0+0x1cb0
 36776 11ff8 0C       		.byte	0xc
 36777 11ff9 B007     		.value	0x7b0
 36778 11ffb 06200100 		.long	0x12006
 36779 11fff B701     		.uleb128 0xb7
 36780 12001 BFDE0000 		.long	0xdebf
 36781 12005 00       		.byte	0
 36782 12006 C201     		.uleb128 0xc2
 36783 12008 52D70000 		.long	0xd752
 36784 1200c 00000000 		.quad	.LBB4008
 36784      00000000 
 36785 12014 00000000 		.long	.Ldebug_ranges0+0x1ce0
 36786 12018 0C       		.byte	0xc
 36787 12019 B207     		.value	0x7b2
 36788 1201b EA250100 		.long	0x125ea
 36789 1201f B701     		.uleb128 0xb7
 36790 12021 7CD70000 		.long	0xd77c
 36791 12025 BD01     		.uleb128 0xbd
 36792 12027 6FD70000 		.long	0xd76f
 36793 1202b 00000000 		.long	.LLST402
 36794 1202f C201     		.uleb128 0xc2
 36795 12031 6CE40000 		.long	0xe46c
 36796 12035 00000000 		.quad	.LBB4010
 36796      00000000 
 36797 1203d 00000000 		.long	.Ldebug_ranges0+0x1d30
 36798 12041 0C       		.byte	0xc
 36799 12042 5C07     		.value	0x75c
 36800 12044 B1220100 		.long	0x122b1
 36801 12048 B701     		.uleb128 0xb7
 36802 1204a A3E40000 		.long	0xe4a3
 36803 1204e BD01     		.uleb128 0xbd
 36804 12050 96E40000 		.long	0xe496
 36805 12054 00000000 		.long	.LLST403
 36806 12058 BD01     		.uleb128 0xbd
 36807 1205a 89E40000 		.long	0xe489
 36808 1205e 00000000 		.long	.LLST404
 36809 12062 B401     		.uleb128 0xb4
 36810 12064 00000000 		.long	.Ldebug_ranges0+0x1d30
 36811 12068 BA01     		.uleb128 0xba
 36812 1206a B2E40000 		.long	0xe4b2
 36813 1206e 00000000 		.long	.LLST405
 36814 12072 C401     		.uleb128 0xc4
 36815 12074 58D00000 		.long	0xd058
 36816 12078 00000000 		.quad	.LBB4012
 36816      00000000 
 36817 12080 07000000 		.quad	.LBE4012-.LBB4012
 36817      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 957


 36818 12088 0C       		.byte	0xc
 36819 12089 3407     		.value	0x734
 36820 1208b A4200100 		.long	0x120a4
 36821 1208f BD01     		.uleb128 0xbd
 36822 12091 71D00000 		.long	0xd071
 36823 12095 00000000 		.long	.LLST406
 36824 12099 BD01     		.uleb128 0xbd
 36825 1209b 67D00000 		.long	0xd067
 36826 1209f 00000000 		.long	.LLST407
 36827 120a3 00       		.byte	0
 36828 120a4 C401     		.uleb128 0xc4
 36829 120a6 B5CB0000 		.long	0xcbb5
 36830 120aa 00000000 		.quad	.LBB4015
 36830      00000000 
 36831 120b2 05000000 		.quad	.LBE4015-.LBB4015
 36831      00000000 
 36832 120ba 0C       		.byte	0xc
 36833 120bb 3607     		.value	0x736
 36834 120bd D8200100 		.long	0x120d8
 36835 120c1 BD01     		.uleb128 0xbd
 36836 120c3 D6CB0000 		.long	0xcbd6
 36837 120c7 00000000 		.long	.LLST408
 36838 120cb B701     		.uleb128 0xb7
 36839 120cd ECCB0000 		.long	0xcbec
 36840 120d1 B701     		.uleb128 0xb7
 36841 120d3 E0CB0000 		.long	0xcbe0
 36842 120d7 00       		.byte	0
 36843 120d8 C201     		.uleb128 0xc2
 36844 120da E8CC0000 		.long	0xcce8
 36845 120de 00000000 		.quad	.LBB4017
 36845      00000000 
 36846 120e6 00000000 		.long	.Ldebug_ranges0+0x1d70
 36847 120ea 0C       		.byte	0xc
 36848 120eb 3E07     		.value	0x73e
 36849 120ed 67210100 		.long	0x12167
 36850 120f1 BD01     		.uleb128 0xbd
 36851 120f3 05CD0000 		.long	0xcd05
 36852 120f7 00000000 		.long	.LLST409
 36853 120fb B401     		.uleb128 0xb4
 36854 120fd 00000000 		.long	.Ldebug_ranges0+0x1d70
 36855 12101 BA01     		.uleb128 0xba
 36856 12103 21CD0000 		.long	0xcd21
 36857 12107 00000000 		.long	.LLST410
 36858 1210b B901     		.uleb128 0xb9
 36859 1210d 2ECD0000 		.long	0xcd2e
 36860 12111 C201     		.uleb128 0xc2
 36861 12113 53CC0000 		.long	0xcc53
 36862 12117 00000000 		.quad	.LBB4019
 36862      00000000 
 36863 1211f 00000000 		.long	.Ldebug_ranges0+0x1da0
 36864 12123 0C       		.byte	0xc
 36865 12124 2307     		.value	0x723
 36866 12126 41210100 		.long	0x12141
 36867 1212a B701     		.uleb128 0xb7
 36868 1212c 74CC0000 		.long	0xcc74
 36869 12130 BD01     		.uleb128 0xbd
 36870 12132 7ECC0000 		.long	0xcc7e
GAS LISTING /tmp/ccmMnd7l.s 			page 958


 36871 12136 00000000 		.long	.LLST411
 36872 1213a B701     		.uleb128 0xb7
 36873 1213c 8ACC0000 		.long	0xcc8a
 36874 12140 00       		.byte	0
 36875 12141 B601     		.uleb128 0xb6
 36876 12143 CECC0000 		.long	0xccce
 36877 12147 00000000 		.quad	.LBB4022
 36877      00000000 
 36878 1214f 04000000 		.quad	.LBE4022-.LBB4022
 36878      00000000 
 36879 12157 0C       		.byte	0xc
 36880 12158 2707     		.value	0x727
 36881 1215a BD01     		.uleb128 0xbd
 36882 1215c DDCC0000 		.long	0xccdd
 36883 12160 00000000 		.long	.LLST412
 36884 12164 00       		.byte	0
 36885 12165 00       		.byte	0
 36886 12166 00       		.byte	0
 36887 12167 B801     		.uleb128 0xb8
 36888 12169 00000000 		.quad	.LBB4026
 36888      00000000 
 36889 12171 58000000 		.quad	.LBE4026-.LBB4026
 36889      00000000 
 36890 12179 BA01     		.uleb128 0xba
 36891 1217b C1E40000 		.long	0xe4c1
 36892 1217f 00000000 		.long	.LLST413
 36893 12183 B601     		.uleb128 0xb6
 36894 12185 0DD70000 		.long	0xd70d
 36895 12189 00000000 		.quad	.LBB4027
 36895      00000000 
 36896 12191 4F000000 		.quad	.LBE4027-.LBB4027
 36896      00000000 
 36897 12199 0C       		.byte	0xc
 36898 1219a 3A07     		.value	0x73a
 36899 1219c B701     		.uleb128 0xb7
 36900 1219e 44D70000 		.long	0xd744
 36901 121a2 B701     		.uleb128 0xb7
 36902 121a4 37D70000 		.long	0xd737
 36903 121a8 B701     		.uleb128 0xb7
 36904 121aa 2AD70000 		.long	0xd72a
 36905 121ae B601     		.uleb128 0xb6
 36906 121b0 7CD60000 		.long	0xd67c
 36907 121b4 00000000 		.quad	.LBB4028
 36907      00000000 
 36908 121bc 4F000000 		.quad	.LBE4028-.LBB4028
 36908      00000000 
 36909 121c4 14       		.byte	0x14
 36910 121c5 A602     		.value	0x2a6
 36911 121c7 B701     		.uleb128 0xb7
 36912 121c9 BDD60000 		.long	0xd6bd
 36913 121cd B701     		.uleb128 0xb7
 36914 121cf B0D60000 		.long	0xd6b0
 36915 121d3 B701     		.uleb128 0xb7
 36916 121d5 A3D60000 		.long	0xd6a3
 36917 121d9 B601     		.uleb128 0xb6
 36918 121db FBD50000 		.long	0xd5fb
 36919 121df 00000000 		.quad	.LBB4029
GAS LISTING /tmp/ccmMnd7l.s 			page 959


 36919      00000000 
 36920 121e7 4F000000 		.quad	.LBE4029-.LBB4029
 36920      00000000 
 36921 121ef 14       		.byte	0x14
 36922 121f0 5F02     		.value	0x25f
 36923 121f2 BD01     		.uleb128 0xbd
 36924 121f4 3CD60000 		.long	0xd63c
 36925 121f8 00000000 		.long	.LLST414
 36926 121fc BD01     		.uleb128 0xbd
 36927 121fe 2FD60000 		.long	0xd62f
 36928 12202 00000000 		.long	.LLST415
 36929 12206 BD01     		.uleb128 0xbd
 36930 12208 22D60000 		.long	0xd622
 36931 1220c 00000000 		.long	.LLST416
 36932 12210 B801     		.uleb128 0xb8
 36933 12212 00000000 		.quad	.LBB4030
 36933      00000000 
 36934 1221a 4F000000 		.quad	.LBE4030-.LBB4030
 36934      00000000 
 36935 12222 BA01     		.uleb128 0xba
 36936 12224 4BD60000 		.long	0xd64b
 36937 12228 00000000 		.long	.LLST417
 36938 1222c B601     		.uleb128 0xb6
 36939 1222e D1E40000 		.long	0xe4d1
 36940 12232 00000000 		.quad	.LBB4031
 36940      00000000 
 36941 1223a 4F000000 		.quad	.LBE4031-.LBB4031
 36941      00000000 
 36942 12242 14       		.byte	0x14
 36943 12243 5602     		.value	0x256
 36944 12245 BD01     		.uleb128 0xbd
 36945 12247 FFE40000 		.long	0xe4ff
 36946 1224b 00000000 		.long	.LLST414
 36947 1224f BD01     		.uleb128 0xbd
 36948 12251 F2E40000 		.long	0xe4f2
 36949 12255 00000000 		.long	.LLST415
 36950 12259 BD01     		.uleb128 0xbd
 36951 1225b E5E40000 		.long	0xe4e5
 36952 1225f 00000000 		.long	.LLST416
 36953 12263 B801     		.uleb128 0xb8
 36954 12265 00000000 		.quad	.LBB4032
 36954      00000000 
 36955 1226d 4F000000 		.quad	.LBE4032-.LBB4032
 36955      00000000 
 36956 12275 BA01     		.uleb128 0xba
 36957 12277 0EE50000 		.long	0xe50e
 36958 1227b 00000000 		.long	.LLST421
 36959 1227f C001     		.uleb128 0xc0
 36960 12281 00000000 		.quad	.LVL599
 36960      00000000 
 36961 12289 3F500100 		.long	0x1503f
 36962 1228d C101     		.uleb128 0xc1
 36963 1228f 01       		.uleb128 0x1
 36964 12290 55       		.byte	0x55
 36965 12291 02       		.uleb128 0x2
 36966 12292 73       		.byte	0x73
 36967 12293 08       		.sleb128 8
GAS LISTING /tmp/ccmMnd7l.s 			page 960


 36968 12294 C101     		.uleb128 0xc1
 36969 12296 01       		.uleb128 0x1
 36970 12297 54       		.byte	0x54
 36971 12298 02       		.uleb128 0x2
 36972 12299 73       		.byte	0x73
 36973 1229a 00       		.sleb128 0
 36974 1229b C101     		.uleb128 0xc1
 36975 1229d 01       		.uleb128 0x1
 36976 1229e 51       		.byte	0x51
 36977 1229f 07       		.uleb128 0x7
 36978 122a0 91       		.byte	0x91
 36979 122a1 987E     		.sleb128 -232
 36980 122a3 06       		.byte	0x6
 36981 122a4 73       		.byte	0x73
 36982 122a5 00       		.sleb128 0
 36983 122a6 1C       		.byte	0x1c
 36984 122a7 00       		.byte	0
 36985 122a8 00       		.byte	0
 36986 122a9 00       		.byte	0
 36987 122aa 00       		.byte	0
 36988 122ab 00       		.byte	0
 36989 122ac 00       		.byte	0
 36990 122ad 00       		.byte	0
 36991 122ae 00       		.byte	0
 36992 122af 00       		.byte	0
 36993 122b0 00       		.byte	0
 36994 122b1 C201     		.uleb128 0xc2
 36995 122b3 3DCD0000 		.long	0xcd3d
 36996 122b7 00000000 		.quad	.LBB4038
 36996      00000000 
 36997 122bf 00000000 		.long	.Ldebug_ranges0+0x1dd0
 36998 122c3 0C       		.byte	0xc
 36999 122c4 5D07     		.value	0x75d
 37000 122c6 6F230100 		.long	0x1236f
 37001 122ca B701     		.uleb128 0xb7
 37002 122cc 67CD0000 		.long	0xcd67
 37003 122d0 B701     		.uleb128 0xb7
 37004 122d2 5ACD0000 		.long	0xcd5a
 37005 122d6 B401     		.uleb128 0xb4
 37006 122d8 00000000 		.long	.Ldebug_ranges0+0x1dd0
 37007 122dc B901     		.uleb128 0xb9
 37008 122de 83CD0000 		.long	0xcd83
 37009 122e2 CC01     		.uleb128 0xcc
 37010 122e4 E8CC0000 		.long	0xcce8
 37011 122e8 00000000 		.quad	.LBB4040
 37011      00000000 
 37012 122f0 00000000 		.long	.Ldebug_ranges0+0x1e00
 37013 122f4 0C       		.byte	0xc
 37014 122f5 4A07     		.value	0x74a
 37015 122f7 BD01     		.uleb128 0xbd
 37016 122f9 05CD0000 		.long	0xcd05
 37017 122fd 00000000 		.long	.LLST422
 37018 12301 B401     		.uleb128 0xb4
 37019 12303 00000000 		.long	.Ldebug_ranges0+0x1e00
 37020 12307 BA01     		.uleb128 0xba
 37021 12309 21CD0000 		.long	0xcd21
 37022 1230d 00000000 		.long	.LLST423
GAS LISTING /tmp/ccmMnd7l.s 			page 961


 37023 12311 B901     		.uleb128 0xb9
 37024 12313 2ECD0000 		.long	0xcd2e
 37025 12317 C201     		.uleb128 0xc2
 37026 12319 53CC0000 		.long	0xcc53
 37027 1231d 00000000 		.quad	.LBB4042
 37027      00000000 
 37028 12325 00000000 		.long	.Ldebug_ranges0+0x1e40
 37029 12329 0C       		.byte	0xc
 37030 1232a 2307     		.value	0x723
 37031 1232c 47230100 		.long	0x12347
 37032 12330 B701     		.uleb128 0xb7
 37033 12332 74CC0000 		.long	0xcc74
 37034 12336 BD01     		.uleb128 0xbd
 37035 12338 7ECC0000 		.long	0xcc7e
 37036 1233c 00000000 		.long	.LLST424
 37037 12340 B701     		.uleb128 0xb7
 37038 12342 8ACC0000 		.long	0xcc8a
 37039 12346 00       		.byte	0
 37040 12347 B601     		.uleb128 0xb6
 37041 12349 CECC0000 		.long	0xccce
 37042 1234d 00000000 		.quad	.LBB4045
 37042      00000000 
 37043 12355 04000000 		.quad	.LBE4045-.LBB4045
 37043      00000000 
 37044 1235d 0C       		.byte	0xc
 37045 1235e 2707     		.value	0x727
 37046 12360 BD01     		.uleb128 0xbd
 37047 12362 DDCC0000 		.long	0xccdd
 37048 12366 00000000 		.long	.LLST425
 37049 1236a 00       		.byte	0
 37050 1236b 00       		.byte	0
 37051 1236c 00       		.byte	0
 37052 1236d 00       		.byte	0
 37053 1236e 00       		.byte	0
 37054 1236f CC01     		.uleb128 0xcc
 37055 12371 6CE40000 		.long	0xe46c
 37056 12375 00000000 		.quad	.LBB4055
 37056      00000000 
 37057 1237d 00000000 		.long	.Ldebug_ranges0+0x1e70
 37058 12381 0C       		.byte	0xc
 37059 12382 6107     		.value	0x761
 37060 12384 B701     		.uleb128 0xb7
 37061 12386 A3E40000 		.long	0xe4a3
 37062 1238a BD01     		.uleb128 0xbd
 37063 1238c 96E40000 		.long	0xe496
 37064 12390 00000000 		.long	.LLST426
 37065 12394 BD01     		.uleb128 0xbd
 37066 12396 89E40000 		.long	0xe489
 37067 1239a 00000000 		.long	.LLST427
 37068 1239e B401     		.uleb128 0xb4
 37069 123a0 00000000 		.long	.Ldebug_ranges0+0x1e70
 37070 123a4 BA01     		.uleb128 0xba
 37071 123a6 B2E40000 		.long	0xe4b2
 37072 123aa 00000000 		.long	.LLST428
 37073 123ae C401     		.uleb128 0xc4
 37074 123b0 58D00000 		.long	0xd058
 37075 123b4 00000000 		.quad	.LBB4057
GAS LISTING /tmp/ccmMnd7l.s 			page 962


 37075      00000000 
 37076 123bc 04000000 		.quad	.LBE4057-.LBB4057
 37076      00000000 
 37077 123c4 0C       		.byte	0xc
 37078 123c5 3407     		.value	0x734
 37079 123c7 E0230100 		.long	0x123e0
 37080 123cb BD01     		.uleb128 0xbd
 37081 123cd 71D00000 		.long	0xd071
 37082 123d1 00000000 		.long	.LLST429
 37083 123d5 BD01     		.uleb128 0xbd
 37084 123d7 67D00000 		.long	0xd067
 37085 123db 00000000 		.long	.LLST430
 37086 123df 00       		.byte	0
 37087 123e0 C201     		.uleb128 0xc2
 37088 123e2 B5CB0000 		.long	0xcbb5
 37089 123e6 00000000 		.quad	.LBB4060
 37089      00000000 
 37090 123ee 00000000 		.long	.Ldebug_ranges0+0x1ea0
 37091 123f2 0C       		.byte	0xc
 37092 123f3 3607     		.value	0x736
 37093 123f5 10240100 		.long	0x12410
 37094 123f9 BD01     		.uleb128 0xbd
 37095 123fb D6CB0000 		.long	0xcbd6
 37096 123ff 00000000 		.long	.LLST431
 37097 12403 B701     		.uleb128 0xb7
 37098 12405 ECCB0000 		.long	0xcbec
 37099 12409 B701     		.uleb128 0xb7
 37100 1240b E0CB0000 		.long	0xcbe0
 37101 1240f 00       		.byte	0
 37102 12410 C201     		.uleb128 0xc2
 37103 12412 E8CC0000 		.long	0xcce8
 37104 12416 00000000 		.quad	.LBB4063
 37104      00000000 
 37105 1241e 00000000 		.long	.Ldebug_ranges0+0x1ed0
 37106 12422 0C       		.byte	0xc
 37107 12423 3E07     		.value	0x73e
 37108 12425 9F240100 		.long	0x1249f
 37109 12429 BD01     		.uleb128 0xbd
 37110 1242b 05CD0000 		.long	0xcd05
 37111 1242f 00000000 		.long	.LLST432
 37112 12433 B401     		.uleb128 0xb4
 37113 12435 00000000 		.long	.Ldebug_ranges0+0x1ed0
 37114 12439 BA01     		.uleb128 0xba
 37115 1243b 21CD0000 		.long	0xcd21
 37116 1243f 00000000 		.long	.LLST433
 37117 12443 B901     		.uleb128 0xb9
 37118 12445 2ECD0000 		.long	0xcd2e
 37119 12449 C201     		.uleb128 0xc2
 37120 1244b 53CC0000 		.long	0xcc53
 37121 1244f 00000000 		.quad	.LBB4065
 37121      00000000 
 37122 12457 00000000 		.long	.Ldebug_ranges0+0x1f00
 37123 1245b 0C       		.byte	0xc
 37124 1245c 2307     		.value	0x723
 37125 1245e 79240100 		.long	0x12479
 37126 12462 B701     		.uleb128 0xb7
 37127 12464 74CC0000 		.long	0xcc74
GAS LISTING /tmp/ccmMnd7l.s 			page 963


 37128 12468 BD01     		.uleb128 0xbd
 37129 1246a 7ECC0000 		.long	0xcc7e
 37130 1246e 00000000 		.long	.LLST434
 37131 12472 B701     		.uleb128 0xb7
 37132 12474 8ACC0000 		.long	0xcc8a
 37133 12478 00       		.byte	0
 37134 12479 B601     		.uleb128 0xb6
 37135 1247b CECC0000 		.long	0xccce
 37136 1247f 00000000 		.quad	.LBB4068
 37136      00000000 
 37137 12487 04000000 		.quad	.LBE4068-.LBB4068
 37137      00000000 
 37138 1248f 0C       		.byte	0xc
 37139 12490 2707     		.value	0x727
 37140 12492 BD01     		.uleb128 0xbd
 37141 12494 DDCC0000 		.long	0xccdd
 37142 12498 00000000 		.long	.LLST435
 37143 1249c 00       		.byte	0
 37144 1249d 00       		.byte	0
 37145 1249e 00       		.byte	0
 37146 1249f B801     		.uleb128 0xb8
 37147 124a1 00000000 		.quad	.LBB4073
 37147      00000000 
 37148 124a9 41000000 		.quad	.LBE4073-.LBB4073
 37148      00000000 
 37149 124b1 BA01     		.uleb128 0xba
 37150 124b3 C1E40000 		.long	0xe4c1
 37151 124b7 00000000 		.long	.LLST436
 37152 124bb B601     		.uleb128 0xb6
 37153 124bd 0DD70000 		.long	0xd70d
 37154 124c1 00000000 		.quad	.LBB4074
 37154      00000000 
 37155 124c9 3B000000 		.quad	.LBE4074-.LBB4074
 37155      00000000 
 37156 124d1 0C       		.byte	0xc
 37157 124d2 3A07     		.value	0x73a
 37158 124d4 B701     		.uleb128 0xb7
 37159 124d6 44D70000 		.long	0xd744
 37160 124da B701     		.uleb128 0xb7
 37161 124dc 37D70000 		.long	0xd737
 37162 124e0 B701     		.uleb128 0xb7
 37163 124e2 2AD70000 		.long	0xd72a
 37164 124e6 B601     		.uleb128 0xb6
 37165 124e8 7CD60000 		.long	0xd67c
 37166 124ec 00000000 		.quad	.LBB4075
 37166      00000000 
 37167 124f4 3B000000 		.quad	.LBE4075-.LBB4075
 37167      00000000 
 37168 124fc 14       		.byte	0x14
 37169 124fd A602     		.value	0x2a6
 37170 124ff B701     		.uleb128 0xb7
 37171 12501 BDD60000 		.long	0xd6bd
 37172 12505 B701     		.uleb128 0xb7
 37173 12507 B0D60000 		.long	0xd6b0
 37174 1250b B701     		.uleb128 0xb7
 37175 1250d A3D60000 		.long	0xd6a3
 37176 12511 B601     		.uleb128 0xb6
GAS LISTING /tmp/ccmMnd7l.s 			page 964


 37177 12513 FBD50000 		.long	0xd5fb
 37178 12517 00000000 		.quad	.LBB4076
 37178      00000000 
 37179 1251f 3B000000 		.quad	.LBE4076-.LBB4076
 37179      00000000 
 37180 12527 14       		.byte	0x14
 37181 12528 5F02     		.value	0x25f
 37182 1252a BD01     		.uleb128 0xbd
 37183 1252c 3CD60000 		.long	0xd63c
 37184 12530 00000000 		.long	.LLST437
 37185 12534 BD01     		.uleb128 0xbd
 37186 12536 2FD60000 		.long	0xd62f
 37187 1253a 00000000 		.long	.LLST438
 37188 1253e BD01     		.uleb128 0xbd
 37189 12540 22D60000 		.long	0xd622
 37190 12544 00000000 		.long	.LLST439
 37191 12548 B801     		.uleb128 0xb8
 37192 1254a 00000000 		.quad	.LBB4077
 37192      00000000 
 37193 12552 3B000000 		.quad	.LBE4077-.LBB4077
 37193      00000000 
 37194 1255a BA01     		.uleb128 0xba
 37195 1255c 4BD60000 		.long	0xd64b
 37196 12560 00000000 		.long	.LLST440
 37197 12564 B601     		.uleb128 0xb6
 37198 12566 D1E40000 		.long	0xe4d1
 37199 1256a 00000000 		.quad	.LBB4078
 37199      00000000 
 37200 12572 3B000000 		.quad	.LBE4078-.LBB4078
 37200      00000000 
 37201 1257a 14       		.byte	0x14
 37202 1257b 5602     		.value	0x256
 37203 1257d BD01     		.uleb128 0xbd
 37204 1257f FFE40000 		.long	0xe4ff
 37205 12583 00000000 		.long	.LLST437
 37206 12587 BD01     		.uleb128 0xbd
 37207 12589 F2E40000 		.long	0xe4f2
 37208 1258d 00000000 		.long	.LLST438
 37209 12591 BD01     		.uleb128 0xbd
 37210 12593 E5E40000 		.long	0xe4e5
 37211 12597 00000000 		.long	.LLST439
 37212 1259b B801     		.uleb128 0xb8
 37213 1259d 00000000 		.quad	.LBB4079
 37213      00000000 
 37214 125a5 3B000000 		.quad	.LBE4079-.LBB4079
 37214      00000000 
 37215 125ad BA01     		.uleb128 0xba
 37216 125af 0EE50000 		.long	0xe50e
 37217 125b3 00000000 		.long	.LLST444
 37218 125b7 C001     		.uleb128 0xc0
 37219 125b9 00000000 		.quad	.LVL624
 37219      00000000 
 37220 125c1 3F500100 		.long	0x1503f
 37221 125c5 C101     		.uleb128 0xc1
 37222 125c7 01       		.uleb128 0x1
 37223 125c8 55       		.byte	0x55
 37224 125c9 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 965


 37225 125ca 73       		.byte	0x73
 37226 125cb 08       		.sleb128 8
 37227 125cc C101     		.uleb128 0xc1
 37228 125ce 01       		.uleb128 0x1
 37229 125cf 54       		.byte	0x54
 37230 125d0 02       		.uleb128 0x2
 37231 125d1 73       		.byte	0x73
 37232 125d2 00       		.sleb128 0
 37233 125d3 C101     		.uleb128 0xc1
 37234 125d5 01       		.uleb128 0x1
 37235 125d6 51       		.byte	0x51
 37236 125d7 07       		.uleb128 0x7
 37237 125d8 91       		.byte	0x91
 37238 125d9 987E     		.sleb128 -232
 37239 125db 06       		.byte	0x6
 37240 125dc 73       		.byte	0x73
 37241 125dd 00       		.sleb128 0
 37242 125de 1C       		.byte	0x1c
 37243 125df 00       		.byte	0
 37244 125e0 00       		.byte	0
 37245 125e1 00       		.byte	0
 37246 125e2 00       		.byte	0
 37247 125e3 00       		.byte	0
 37248 125e4 00       		.byte	0
 37249 125e5 00       		.byte	0
 37250 125e6 00       		.byte	0
 37251 125e7 00       		.byte	0
 37252 125e8 00       		.byte	0
 37253 125e9 00       		.byte	0
 37254 125ea C001     		.uleb128 0xc0
 37255 125ec 00000000 		.quad	.LVL409
 37255      00000000 
 37256 125f4 18020100 		.long	0x10218
 37257 125f8 C101     		.uleb128 0xc1
 37258 125fa 01       		.uleb128 0x1
 37259 125fb 55       		.byte	0x55
 37260 125fc 02       		.uleb128 0x2
 37261 125fd 73       		.byte	0x73
 37262 125fe 00       		.sleb128 0
 37263 125ff C101     		.uleb128 0xc1
 37264 12601 01       		.uleb128 0x1
 37265 12602 54       		.byte	0x54
 37266 12603 02       		.uleb128 0x2
 37267 12604 76       		.byte	0x76
 37268 12605 00       		.sleb128 0
 37269 12606 C101     		.uleb128 0xc1
 37270 12608 01       		.uleb128 0x1
 37271 12609 51       		.byte	0x51
 37272 1260a 3C       		.uleb128 0x3c
 37273 1260b 08       		.byte	0x8
 37274 1260c 3F       		.byte	0x3f
 37275 1260d 08       		.byte	0x8
 37276 1260e 3F       		.byte	0x3f
 37277 1260f 91       		.byte	0x91
 37278 12610 987E     		.sleb128 -232
 37279 12612 06       		.byte	0x6
 37280 12613 33       		.byte	0x33
GAS LISTING /tmp/ccmMnd7l.s 			page 966


 37281 12614 26       		.byte	0x26
 37282 12615 12       		.byte	0x12
 37283 12616 28       		.byte	0x28
 37284 12617 0600     		.value	0x6
 37285 12619 13       		.byte	0x13
 37286 1261a 08       		.byte	0x8
 37287 1261b 40       		.byte	0x40
 37288 1261c 2F       		.byte	0x2f
 37289 1261d 1A00     		.value	0x1a
 37290 1261f 30       		.byte	0x30
 37291 12620 16       		.byte	0x16
 37292 12621 12       		.byte	0x12
 37293 12622 0E       		.byte	0xe
 37294 12623 00000000 		.quad	0x8000000000000000
 37294      00000080 
 37295 1262b 1A       		.byte	0x1a
 37296 1262c 28       		.byte	0x28
 37297 1262d 0900     		.value	0x9
 37298 1262f 31       		.byte	0x31
 37299 12630 24       		.byte	0x24
 37300 12631 16       		.byte	0x16
 37301 12632 23       		.byte	0x23
 37302 12633 01       		.uleb128 0x1
 37303 12634 16       		.byte	0x16
 37304 12635 2F       		.byte	0x2f
 37305 12636 E9FF     		.value	0xffe9
 37306 12638 13       		.byte	0x13
 37307 12639 96       		.byte	0x96
 37308 1263a 1C       		.byte	0x1c
 37309 1263b 08       		.byte	0x8
 37310 1263c 3F       		.byte	0x3f
 37311 1263d 27       		.byte	0x27
 37312 1263e 08       		.byte	0x8
 37313 1263f 20       		.byte	0x20
 37314 12640 24       		.byte	0x24
 37315 12641 08       		.byte	0x8
 37316 12642 20       		.byte	0x20
 37317 12643 26       		.byte	0x26
 37318 12644 1C       		.byte	0x1c
 37319 12645 31       		.byte	0x31
 37320 12646 24       		.byte	0x24
 37321 12647 00       		.byte	0
 37322 12648 00       		.byte	0
 37323 12649 00       		.byte	0
 37324 1264a CA01     		.uleb128 0xca
 37325 1264c 48B70000 		.long	0xb748
 37326 12650 00000000 		.quad	.LBB4101
 37326      00000000 
 37327 12658 00000000 		.long	.Ldebug_ranges0+0x1f30
 37328 1265c 02       		.byte	0x2
 37329 1265d 46       		.byte	0x46
 37330 1265e 77260100 		.long	0x12677
 37331 12662 BD01     		.uleb128 0xbd
 37332 12664 57B70000 		.long	0xb757
 37333 12668 00000000 		.long	.LLST445
 37334 1266c BD01     		.uleb128 0xbd
 37335 1266e 57B70000 		.long	0xb757
GAS LISTING /tmp/ccmMnd7l.s 			page 967


 37336 12672 00000000 		.long	.LLST445
 37337 12676 00       		.byte	0
 37338 12677 CA01     		.uleb128 0xca
 37339 12679 58B50000 		.long	0xb558
 37340 1267d 00000000 		.quad	.LBB4104
 37340      00000000 
 37341 12685 00000000 		.long	.Ldebug_ranges0+0x1f60
 37342 12689 02       		.byte	0x2
 37343 1268a 47       		.byte	0x47
 37344 1268b C3260100 		.long	0x126c3
 37345 1268f B701     		.uleb128 0xb7
 37346 12691 6CB50000 		.long	0xb56c
 37347 12695 BD01     		.uleb128 0xbd
 37348 12697 79B50000 		.long	0xb579
 37349 1269b 00000000 		.long	.LLST447
 37350 1269f C001     		.uleb128 0xc0
 37351 126a1 00000000 		.quad	.LVL437
 37351      00000000 
 37352 126a9 65800000 		.long	0x8065
 37353 126ad C101     		.uleb128 0xc1
 37354 126af 01       		.uleb128 0x1
 37355 126b0 54       		.byte	0x54
 37356 126b1 09       		.uleb128 0x9
 37357 126b2 03       		.byte	0x3
 37358 126b3 00000000 		.quad	.LC14
 37358      00000000 
 37359 126bb C101     		.uleb128 0xc1
 37360 126bd 01       		.uleb128 0x1
 37361 126be 51       		.byte	0x51
 37362 126bf 01       		.uleb128 0x1
 37363 126c0 44       		.byte	0x44
 37364 126c1 00       		.byte	0
 37365 126c2 00       		.byte	0
 37366 126c3 CA01     		.uleb128 0xca
 37367 126c5 A0DF0000 		.long	0xdfa0
 37368 126c9 00000000 		.quad	.LBB4111
 37368      00000000 
 37369 126d1 00000000 		.long	.Ldebug_ranges0+0x1fa0
 37370 126d5 02       		.byte	0x2
 37371 126d6 47       		.byte	0x47
 37372 126d7 1A280100 		.long	0x1281a
 37373 126db B701     		.uleb128 0xb7
 37374 126dd B9DF0000 		.long	0xdfb9
 37375 126e1 B701     		.uleb128 0xb7
 37376 126e3 AFDF0000 		.long	0xdfaf
 37377 126e7 CE01     		.uleb128 0xce
 37378 126e9 1DE50000 		.long	0xe51d
 37379 126ed 00000000 		.quad	.LBB4113
 37379      00000000 
 37380 126f5 0E000000 		.quad	.LBE4113-.LBB4113
 37380      00000000 
 37381 126fd 08       		.byte	0x8
 37382 126fe 84       		.byte	0x84
 37383 126ff BD01     		.uleb128 0xbd
 37384 12701 28E50000 		.long	0xe528
 37385 12705 00000000 		.long	.LLST448
 37386 12709 B601     		.uleb128 0xb6
GAS LISTING /tmp/ccmMnd7l.s 			page 968


 37387 1270b 08B60000 		.long	0xb608
 37388 1270f 00000000 		.quad	.LBB4114
 37388      00000000 
 37389 12717 0E000000 		.quad	.LBE4114-.LBB4114
 37389      00000000 
 37390 1271f 15       		.byte	0x15
 37391 12720 C003     		.value	0x3c0
 37392 12722 BD01     		.uleb128 0xbd
 37393 12724 2EB60000 		.long	0xb62e
 37394 12728 00000000 		.long	.LLST449
 37395 1272c BD01     		.uleb128 0xbd
 37396 1272e 21B60000 		.long	0xb621
 37397 12732 00000000 		.long	.LLST450
 37398 12736 BD01     		.uleb128 0xbd
 37399 12738 17B60000 		.long	0xb617
 37400 1273c 00000000 		.long	.LLST448
 37401 12740 B801     		.uleb128 0xb8
 37402 12742 00000000 		.quad	.LBB4115
 37402      00000000 
 37403 1274a 0E000000 		.quad	.LBE4115-.LBB4115
 37403      00000000 
 37404 12752 BA01     		.uleb128 0xba
 37405 12754 3DB60000 		.long	0xb63d
 37406 12758 00000000 		.long	.LLST452
 37407 1275c C401     		.uleb128 0xc4
 37408 1275e B0B50000 		.long	0xb5b0
 37409 12762 00000000 		.quad	.LBB4116
 37409      00000000 
 37410 1276a 08000000 		.quad	.LBE4116-.LBB4116
 37410      00000000 
 37411 12772 15       		.byte	0x15
 37412 12773 5602     		.value	0x256
 37413 12775 BB270100 		.long	0x127bb
 37414 12779 BD01     		.uleb128 0xbd
 37415 1277b C7B50000 		.long	0xb5c7
 37416 1277f 00000000 		.long	.LLST453
 37417 12783 BD01     		.uleb128 0xbd
 37418 12785 BBB50000 		.long	0xb5bb
 37419 12789 00000000 		.long	.LLST454
 37420 1278d CE01     		.uleb128 0xce
 37421 1278f C6B40000 		.long	0xb4c6
 37422 12793 00000000 		.quad	.LBB4117
 37422      00000000 
 37423 1279b 08000000 		.quad	.LBE4117-.LBB4117
 37423      00000000 
 37424 127a3 15       		.byte	0x15
 37425 127a4 60       		.byte	0x60
 37426 127a5 BD01     		.uleb128 0xbd
 37427 127a7 DDB40000 		.long	0xb4dd
 37428 127ab 00000000 		.long	.LLST453
 37429 127af BD01     		.uleb128 0xbd
 37430 127b1 D1B40000 		.long	0xb4d1
 37431 127b5 00000000 		.long	.LLST452
 37432 127b9 00       		.byte	0
 37433 127ba 00       		.byte	0
 37434 127bb B601     		.uleb128 0xb6
 37435 127bd D9B50000 		.long	0xb5d9
GAS LISTING /tmp/ccmMnd7l.s 			page 969


 37436 127c1 00000000 		.quad	.LBB4119
 37436      00000000 
 37437 127c9 06000000 		.quad	.LBE4119-.LBB4119
 37437      00000000 
 37438 127d1 15       		.byte	0x15
 37439 127d2 5702     		.value	0x257
 37440 127d4 BD01     		.uleb128 0xbd
 37441 127d6 F0B50000 		.long	0xb5f0
 37442 127da 00000000 		.long	.LLST450
 37443 127de BD01     		.uleb128 0xbd
 37444 127e0 E4B50000 		.long	0xb5e4
 37445 127e4 00000000 		.long	.LLST454
 37446 127e8 CE01     		.uleb128 0xce
 37447 127ea A2B40000 		.long	0xb4a2
 37448 127ee 00000000 		.quad	.LBB4121
 37448      00000000 
 37449 127f6 06000000 		.quad	.LBE4121-.LBB4121
 37449      00000000 
 37450 127fe 15       		.byte	0x15
 37451 127ff 5C       		.byte	0x5c
 37452 12800 BD01     		.uleb128 0xbd
 37453 12802 B9B40000 		.long	0xb4b9
 37454 12806 00000000 		.long	.LLST450
 37455 1280a BD01     		.uleb128 0xbd
 37456 1280c ADB40000 		.long	0xb4ad
 37457 12810 00000000 		.long	.LLST460
 37458 12814 00       		.byte	0
 37459 12815 00       		.byte	0
 37460 12816 00       		.byte	0
 37461 12817 00       		.byte	0
 37462 12818 00       		.byte	0
 37463 12819 00       		.byte	0
 37464 1281a CA01     		.uleb128 0xca
 37465 1281c 8FB60000 		.long	0xb68f
 37466 12820 00000000 		.quad	.LBB4125
 37466      00000000 
 37467 12828 00000000 		.long	.Ldebug_ranges0+0x1fe0
 37468 1282c 02       		.byte	0x2
 37469 1282d 47       		.byte	0x47
 37470 1282e 69280100 		.long	0x12869
 37471 12832 BD01     		.uleb128 0xbd
 37472 12834 A8B60000 		.long	0xb6a8
 37473 12838 00000000 		.long	.LLST461
 37474 1283c B701     		.uleb128 0xb7
 37475 1283e 9EB60000 		.long	0xb69e
 37476 12842 C001     		.uleb128 0xc0
 37477 12844 00000000 		.quad	.LVL442
 37477      00000000 
 37478 1284c 94290000 		.long	0x2994
 37479 12850 C101     		.uleb128 0xc1
 37480 12852 01       		.uleb128 0x1
 37481 12853 61       		.byte	0x61
 37482 12854 12       		.uleb128 0x12
 37483 12855 91       		.byte	0x91
 37484 12856 987E     		.sleb128 -232
 37485 12858 F6       		.byte	0xf6
 37486 12859 08       		.byte	0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 970


 37487 1285a 29       		.uleb128 0x29
 37488 1285b F4       		.byte	0xf4
 37489 1285c 29       		.uleb128 0x29
 37490 1285d 08       		.byte	0x8
 37491 1285e 00000000 		.long	0
 37492 12862 00408F40 		.long	0x408f4000
 37493 12866 1E       		.byte	0x1e
 37494 12867 00       		.byte	0
 37495 12868 00       		.byte	0
 37496 12869 CA01     		.uleb128 0xca
 37497 1286b 58B50000 		.long	0xb558
 37498 1286f 00000000 		.quad	.LBB4132
 37498      00000000 
 37499 12877 00000000 		.long	.Ldebug_ranges0+0x2020
 37500 1287b 02       		.byte	0x2
 37501 1287c 47       		.byte	0x47
 37502 1287d C0280100 		.long	0x128c0
 37503 12881 BD01     		.uleb128 0xbd
 37504 12883 79B50000 		.long	0xb579
 37505 12887 00000000 		.long	.LLST462
 37506 1288b BD01     		.uleb128 0xbd
 37507 1288d 6CB50000 		.long	0xb56c
 37508 12891 00000000 		.long	.LLST463
 37509 12895 C001     		.uleb128 0xc0
 37510 12897 00000000 		.quad	.LVL444
 37510      00000000 
 37511 1289f 65800000 		.long	0x8065
 37512 128a3 C101     		.uleb128 0xc1
 37513 128a5 01       		.uleb128 0x1
 37514 128a6 55       		.byte	0x55
 37515 128a7 02       		.uleb128 0x2
 37516 128a8 73       		.byte	0x73
 37517 128a9 00       		.sleb128 0
 37518 128aa C101     		.uleb128 0xc1
 37519 128ac 01       		.uleb128 0x1
 37520 128ad 54       		.byte	0x54
 37521 128ae 09       		.uleb128 0x9
 37522 128af 03       		.byte	0x3
 37523 128b0 00000000 		.quad	.LC15
 37523      00000000 
 37524 128b8 C101     		.uleb128 0xc1
 37525 128ba 01       		.uleb128 0x1
 37526 128bb 51       		.byte	0x51
 37527 128bc 01       		.uleb128 0x1
 37528 128bd 3B       		.byte	0x3b
 37529 128be 00       		.byte	0
 37530 128bf 00       		.byte	0
 37531 128c0 CA01     		.uleb128 0xca
 37532 128c2 8FB60000 		.long	0xb68f
 37533 128c6 00000000 		.quad	.LBB4137
 37533      00000000 
 37534 128ce 00000000 		.long	.Ldebug_ranges0+0x2050
 37535 128d2 02       		.byte	0x2
 37536 128d3 47       		.byte	0x47
 37537 128d4 16290100 		.long	0x12916
 37538 128d8 BD01     		.uleb128 0xbd
 37539 128da A8B60000 		.long	0xb6a8
GAS LISTING /tmp/ccmMnd7l.s 			page 971


 37540 128de 00000000 		.long	.LLST464
 37541 128e2 B701     		.uleb128 0xb7
 37542 128e4 9EB60000 		.long	0xb69e
 37543 128e8 C001     		.uleb128 0xc0
 37544 128ea 00000000 		.quad	.LVL447
 37544      00000000 
 37545 128f2 94290000 		.long	0x2994
 37546 128f6 C101     		.uleb128 0xc1
 37547 128f8 01       		.uleb128 0x1
 37548 128f9 55       		.byte	0x55
 37549 128fa 02       		.uleb128 0x2
 37550 128fb 73       		.byte	0x73
 37551 128fc 00       		.sleb128 0
 37552 128fd C101     		.uleb128 0xc1
 37553 128ff 01       		.uleb128 0x1
 37554 12900 61       		.byte	0x61
 37555 12901 12       		.uleb128 0x12
 37556 12902 91       		.byte	0x91
 37557 12903 F87D     		.sleb128 -264
 37558 12905 F6       		.byte	0xf6
 37559 12906 08       		.byte	0x8
 37560 12907 29       		.uleb128 0x29
 37561 12908 F4       		.byte	0xf4
 37562 12909 29       		.uleb128 0x29
 37563 1290a 08       		.byte	0x8
 37564 1290b 00000000 		.long	0
 37565 1290f 00408F40 		.long	0x408f4000
 37566 12913 1E       		.byte	0x1e
 37567 12914 00       		.byte	0
 37568 12915 00       		.byte	0
 37569 12916 CA01     		.uleb128 0xca
 37570 12918 58B50000 		.long	0xb558
 37571 1291c 00000000 		.quad	.LBB4142
 37571      00000000 
 37572 12924 00000000 		.long	.Ldebug_ranges0+0x2090
 37573 12928 02       		.byte	0x2
 37574 12929 47       		.byte	0x47
 37575 1292a 6D290100 		.long	0x1296d
 37576 1292e BD01     		.uleb128 0xbd
 37577 12930 79B50000 		.long	0xb579
 37578 12934 00000000 		.long	.LLST465
 37579 12938 BD01     		.uleb128 0xbd
 37580 1293a 6CB50000 		.long	0xb56c
 37581 1293e 00000000 		.long	.LLST466
 37582 12942 C001     		.uleb128 0xc0
 37583 12944 00000000 		.quad	.LVL449
 37583      00000000 
 37584 1294c 65800000 		.long	0x8065
 37585 12950 C101     		.uleb128 0xc1
 37586 12952 01       		.uleb128 0x1
 37587 12953 55       		.byte	0x55
 37588 12954 02       		.uleb128 0x2
 37589 12955 73       		.byte	0x73
 37590 12956 00       		.sleb128 0
 37591 12957 C101     		.uleb128 0xc1
 37592 12959 01       		.uleb128 0x1
 37593 1295a 54       		.byte	0x54
GAS LISTING /tmp/ccmMnd7l.s 			page 972


 37594 1295b 09       		.uleb128 0x9
 37595 1295c 03       		.byte	0x3
 37596 1295d 00000000 		.quad	.LC16
 37596      00000000 
 37597 12965 C101     		.uleb128 0xc1
 37598 12967 01       		.uleb128 0x1
 37599 12968 51       		.byte	0x51
 37600 12969 01       		.uleb128 0x1
 37601 1296a 31       		.byte	0x31
 37602 1296b 00       		.byte	0
 37603 1296c 00       		.byte	0
 37604 1296d CA01     		.uleb128 0xca
 37605 1296f D0B60000 		.long	0xb6d0
 37606 12973 00000000 		.quad	.LBB4147
 37606      00000000 
 37607 1297b 00000000 		.long	.Ldebug_ranges0+0x20c0
 37608 1297f 02       		.byte	0x2
 37609 12980 47       		.byte	0x47
 37610 12981 E02A0100 		.long	0x12ae0
 37611 12985 B701     		.uleb128 0xb7
 37612 12987 E9B60000 		.long	0xb6e9
 37613 1298b B701     		.uleb128 0xb7
 37614 1298d DFB60000 		.long	0xb6df
 37615 12991 CB01     		.uleb128 0xcb
 37616 12993 3BE50000 		.long	0xe53b
 37617 12997 00000000 		.quad	.LBB4148
 37617      00000000 
 37618 1299f 00000000 		.long	.Ldebug_ranges0+0x20c0
 37619 129a3 08       		.byte	0x8
 37620 129a4 71       		.byte	0x71
 37621 129a5 BD01     		.uleb128 0xbd
 37622 129a7 58E50000 		.long	0xe558
 37623 129ab 00000000 		.long	.LLST467
 37624 129af C201     		.uleb128 0xc2
 37625 129b1 FEE00000 		.long	0xe0fe
 37626 129b5 00000000 		.quad	.LBB4150
 37626      00000000 
 37627 129bd 00000000 		.long	.Ldebug_ranges0+0x2100
 37628 129c1 08       		.byte	0x8
 37629 129c2 3502     		.value	0x235
 37630 129c4 922A0100 		.long	0x12a92
 37631 129c8 BD01     		.uleb128 0xbd
 37632 129ca 17E10000 		.long	0xe117
 37633 129ce 00000000 		.long	.LLST468
 37634 129d2 BD01     		.uleb128 0xbd
 37635 129d4 0DE10000 		.long	0xe10d
 37636 129d8 00000000 		.long	.LLST469
 37637 129dc C201     		.uleb128 0xc2
 37638 129de 58C60000 		.long	0xc658
 37639 129e2 00000000 		.quad	.LBB4152
 37639      00000000 
 37640 129ea 00000000 		.long	.Ldebug_ranges0+0x2140
 37641 129ee 0D       		.byte	0xd
 37642 129ef BC01     		.value	0x1bc
 37643 129f1 0E2A0100 		.long	0x12a0e
 37644 129f5 BD01     		.uleb128 0xbd
 37645 129f7 6CC60000 		.long	0xc66c
GAS LISTING /tmp/ccmMnd7l.s 			page 973


 37646 129fb 00000000 		.long	.LLST470
 37647 129ff CD01     		.uleb128 0xcd
 37648 12a01 00000000 		.quad	.LVL638
 37648      00000000 
 37649 12a09 A5800000 		.long	0x80a5
 37650 12a0d 00       		.byte	0
 37651 12a0e CC01     		.uleb128 0xcc
 37652 12a10 57B60000 		.long	0xb657
 37653 12a14 00000000 		.quad	.LBB4155
 37653      00000000 
 37654 12a1c 00000000 		.long	.Ldebug_ranges0+0x2170
 37655 12a20 0D       		.byte	0xd
 37656 12a21 BC01     		.value	0x1bc
 37657 12a23 BD01     		.uleb128 0xbd
 37658 12a25 70B60000 		.long	0xb670
 37659 12a29 00000000 		.long	.LLST471
 37660 12a2d BD01     		.uleb128 0xbd
 37661 12a2f 66B60000 		.long	0xb666
 37662 12a33 00000000 		.long	.LLST472
 37663 12a37 B801     		.uleb128 0xb8
 37664 12a39 00000000 		.quad	.LBB4157
 37664      00000000 
 37665 12a41 2F000000 		.quad	.LBE4157-.LBB4157
 37665      00000000 
 37666 12a49 BD01     		.uleb128 0xbd
 37667 12a4b 70B60000 		.long	0xb670
 37668 12a4f 00000000 		.long	.LLST473
 37669 12a53 BD01     		.uleb128 0xbd
 37670 12a55 66B60000 		.long	0xb666
 37671 12a59 00000000 		.long	.LLST474
 37672 12a5d C501     		.uleb128 0xc5
 37673 12a5f 00000000 		.quad	.LVL602
 37673      00000000 
 37674 12a67 652A0000 		.long	0x2a65
 37675 12a6b 772A0100 		.long	0x12a77
 37676 12a6f C101     		.uleb128 0xc1
 37677 12a71 01       		.uleb128 0x1
 37678 12a72 55       		.byte	0x55
 37679 12a73 02       		.uleb128 0x2
 37680 12a74 76       		.byte	0x76
 37681 12a75 00       		.sleb128 0
 37682 12a76 00       		.byte	0
 37683 12a77 D001     		.uleb128 0xd0
 37684 12a79 00000000 		.quad	.LVL603
 37684      00000000 
 37685 12a81 C101     		.uleb128 0xc1
 37686 12a83 01       		.uleb128 0x1
 37687 12a84 55       		.byte	0x55
 37688 12a85 02       		.uleb128 0x2
 37689 12a86 76       		.byte	0x76
 37690 12a87 00       		.sleb128 0
 37691 12a88 C101     		.uleb128 0xc1
 37692 12a8a 01       		.uleb128 0x1
 37693 12a8b 54       		.byte	0x54
 37694 12a8c 01       		.uleb128 0x1
 37695 12a8d 3A       		.byte	0x3a
 37696 12a8e 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 974


 37697 12a8f 00       		.byte	0
 37698 12a90 00       		.byte	0
 37699 12a91 00       		.byte	0
 37700 12a92 C401     		.uleb128 0xc4
 37701 12a94 79C60000 		.long	0xc679
 37702 12a98 00000000 		.quad	.LBB4164
 37702      00000000 
 37703 12aa0 08000000 		.quad	.LBE4164-.LBB4164
 37703      00000000 
 37704 12aa8 08       		.byte	0x8
 37705 12aa9 3502     		.value	0x235
 37706 12aab C82A0100 		.long	0x12ac8
 37707 12aaf BD01     		.uleb128 0xbd
 37708 12ab1 96C60000 		.long	0xc696
 37709 12ab5 00000000 		.long	.LLST475
 37710 12ab9 CD01     		.uleb128 0xcd
 37711 12abb 00000000 		.quad	.LVL454
 37711      00000000 
 37712 12ac3 76290000 		.long	0x2976
 37713 12ac7 00       		.byte	0
 37714 12ac8 C001     		.uleb128 0xc0
 37715 12aca 00000000 		.quad	.LVL453
 37715      00000000 
 37716 12ad2 C0290000 		.long	0x29c0
 37717 12ad6 C101     		.uleb128 0xc1
 37718 12ad8 01       		.uleb128 0x1
 37719 12ad9 55       		.byte	0x55
 37720 12ada 02       		.uleb128 0x2
 37721 12adb 73       		.byte	0x73
 37722 12adc 00       		.sleb128 0
 37723 12add 00       		.byte	0
 37724 12ade 00       		.byte	0
 37725 12adf 00       		.byte	0
 37726 12ae0 CF01     		.uleb128 0xcf
 37727 12ae2 58B50000 		.long	0xb558
 37728 12ae6 00000000 		.quad	.LBB4172
 37728      00000000 
 37729 12aee 14000000 		.quad	.LBE4172-.LBB4172
 37729      00000000 
 37730 12af6 02       		.byte	0x2
 37731 12af7 48       		.byte	0x48
 37732 12af8 372B0100 		.long	0x12b37
 37733 12afc B701     		.uleb128 0xb7
 37734 12afe 6CB50000 		.long	0xb56c
 37735 12b02 BD01     		.uleb128 0xbd
 37736 12b04 79B50000 		.long	0xb579
 37737 12b08 00000000 		.long	.LLST476
 37738 12b0c C001     		.uleb128 0xc0
 37739 12b0e 00000000 		.quad	.LVL455
 37739      00000000 
 37740 12b16 65800000 		.long	0x8065
 37741 12b1a C101     		.uleb128 0xc1
 37742 12b1c 01       		.uleb128 0x1
 37743 12b1d 55       		.byte	0x55
 37744 12b1e 02       		.uleb128 0x2
 37745 12b1f 7D       		.byte	0x7d
 37746 12b20 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 975


 37747 12b21 C101     		.uleb128 0xc1
 37748 12b23 01       		.uleb128 0x1
 37749 12b24 54       		.byte	0x54
 37750 12b25 09       		.uleb128 0x9
 37751 12b26 03       		.byte	0x3
 37752 12b27 00000000 		.quad	.LC17
 37752      00000000 
 37753 12b2f C101     		.uleb128 0xc1
 37754 12b31 01       		.uleb128 0x1
 37755 12b32 51       		.byte	0x51
 37756 12b33 01       		.uleb128 0x1
 37757 12b34 38       		.byte	0x38
 37758 12b35 00       		.byte	0
 37759 12b36 00       		.byte	0
 37760 12b37 CA01     		.uleb128 0xca
 37761 12b39 8FB60000 		.long	0xb68f
 37762 12b3d 00000000 		.quad	.LBB4174
 37762      00000000 
 37763 12b45 00000000 		.long	.Ldebug_ranges0+0x21a0
 37764 12b49 02       		.byte	0x2
 37765 12b4a 48       		.byte	0x48
 37766 12b4b 812B0100 		.long	0x12b81
 37767 12b4f BD01     		.uleb128 0xbd
 37768 12b51 A8B60000 		.long	0xb6a8
 37769 12b55 00000000 		.long	.LLST477
 37770 12b59 B701     		.uleb128 0xb7
 37771 12b5b 9EB60000 		.long	0xb69e
 37772 12b5f C001     		.uleb128 0xc0
 37773 12b61 00000000 		.quad	.LVL456
 37773      00000000 
 37774 12b69 94290000 		.long	0x2994
 37775 12b6d C101     		.uleb128 0xc1
 37776 12b6f 01       		.uleb128 0x1
 37777 12b70 55       		.byte	0x55
 37778 12b71 02       		.uleb128 0x2
 37779 12b72 7D       		.byte	0x7d
 37780 12b73 00       		.sleb128 0
 37781 12b74 C101     		.uleb128 0xc1
 37782 12b76 01       		.uleb128 0x1
 37783 12b77 61       		.byte	0x61
 37784 12b78 06       		.uleb128 0x6
 37785 12b79 91       		.byte	0x91
 37786 12b7a 987E     		.sleb128 -232
 37787 12b7c F6       		.byte	0xf6
 37788 12b7d 08       		.byte	0x8
 37789 12b7e 29       		.uleb128 0x29
 37790 12b7f 00       		.byte	0
 37791 12b80 00       		.byte	0
 37792 12b81 CA01     		.uleb128 0xca
 37793 12b83 58B50000 		.long	0xb558
 37794 12b87 00000000 		.quad	.LBB4177
 37794      00000000 
 37795 12b8f 00000000 		.long	.Ldebug_ranges0+0x21d0
 37796 12b93 02       		.byte	0x2
 37797 12b94 48       		.byte	0x48
 37798 12b95 D82B0100 		.long	0x12bd8
 37799 12b99 BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 976


 37800 12b9b 79B50000 		.long	0xb579
 37801 12b9f 00000000 		.long	.LLST478
 37802 12ba3 BD01     		.uleb128 0xbd
 37803 12ba5 6CB50000 		.long	0xb56c
 37804 12ba9 00000000 		.long	.LLST479
 37805 12bad C001     		.uleb128 0xc0
 37806 12baf 00000000 		.quad	.LVL458
 37806      00000000 
 37807 12bb7 65800000 		.long	0x8065
 37808 12bbb C101     		.uleb128 0xc1
 37809 12bbd 01       		.uleb128 0x1
 37810 12bbe 55       		.byte	0x55
 37811 12bbf 02       		.uleb128 0x2
 37812 12bc0 73       		.byte	0x73
 37813 12bc1 00       		.sleb128 0
 37814 12bc2 C101     		.uleb128 0xc1
 37815 12bc4 01       		.uleb128 0x1
 37816 12bc5 54       		.byte	0x54
 37817 12bc6 09       		.uleb128 0x9
 37818 12bc7 03       		.byte	0x3
 37819 12bc8 00000000 		.quad	.LC18
 37819      00000000 
 37820 12bd0 C101     		.uleb128 0xc1
 37821 12bd2 01       		.uleb128 0x1
 37822 12bd3 51       		.byte	0x51
 37823 12bd4 01       		.uleb128 0x1
 37824 12bd5 3A       		.byte	0x3a
 37825 12bd6 00       		.byte	0
 37826 12bd7 00       		.byte	0
 37827 12bd8 CF01     		.uleb128 0xcf
 37828 12bda 8FB60000 		.long	0xb68f
 37829 12bde 00000000 		.quad	.LBB4182
 37829      00000000 
 37830 12be6 0E000000 		.quad	.LBE4182-.LBB4182
 37830      00000000 
 37831 12bee 02       		.byte	0x2
 37832 12bef 48       		.byte	0x48
 37833 12bf0 262C0100 		.long	0x12c26
 37834 12bf4 BD01     		.uleb128 0xbd
 37835 12bf6 A8B60000 		.long	0xb6a8
 37836 12bfa 00000000 		.long	.LLST480
 37837 12bfe B701     		.uleb128 0xb7
 37838 12c00 9EB60000 		.long	0xb69e
 37839 12c04 C001     		.uleb128 0xc0
 37840 12c06 00000000 		.quad	.LVL459
 37840      00000000 
 37841 12c0e 94290000 		.long	0x2994
 37842 12c12 C101     		.uleb128 0xc1
 37843 12c14 01       		.uleb128 0x1
 37844 12c15 55       		.byte	0x55
 37845 12c16 02       		.uleb128 0x2
 37846 12c17 73       		.byte	0x73
 37847 12c18 00       		.sleb128 0
 37848 12c19 C101     		.uleb128 0xc1
 37849 12c1b 01       		.uleb128 0x1
 37850 12c1c 61       		.byte	0x61
 37851 12c1d 06       		.uleb128 0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 977


 37852 12c1e 91       		.byte	0x91
 37853 12c1f F87D     		.sleb128 -264
 37854 12c21 F6       		.byte	0xf6
 37855 12c22 08       		.byte	0x8
 37856 12c23 29       		.uleb128 0x29
 37857 12c24 00       		.byte	0
 37858 12c25 00       		.byte	0
 37859 12c26 CE01     		.uleb128 0xce
 37860 12c28 58B50000 		.long	0xb558
 37861 12c2c 00000000 		.quad	.LBB4184
 37861      00000000 
 37862 12c34 14000000 		.quad	.LBE4184-.LBB4184
 37862      00000000 
 37863 12c3c 02       		.byte	0x2
 37864 12c3d 48       		.byte	0x48
 37865 12c3e BD01     		.uleb128 0xbd
 37866 12c40 79B50000 		.long	0xb579
 37867 12c44 00000000 		.long	.LLST481
 37868 12c48 BD01     		.uleb128 0xbd
 37869 12c4a 6CB50000 		.long	0xb56c
 37870 12c4e 00000000 		.long	.LLST482
 37871 12c52 C001     		.uleb128 0xc0
 37872 12c54 00000000 		.quad	.LVL460
 37872      00000000 
 37873 12c5c 65800000 		.long	0x8065
 37874 12c60 C101     		.uleb128 0xc1
 37875 12c62 01       		.uleb128 0x1
 37876 12c63 54       		.byte	0x54
 37877 12c64 09       		.uleb128 0x9
 37878 12c65 03       		.byte	0x3
 37879 12c66 00000000 		.quad	.LC19
 37879      00000000 
 37880 12c6e C101     		.uleb128 0xc1
 37881 12c70 01       		.uleb128 0x1
 37882 12c71 51       		.byte	0x51
 37883 12c72 01       		.uleb128 0x1
 37884 12c73 31       		.byte	0x31
 37885 12c74 00       		.byte	0
 37886 12c75 00       		.byte	0
 37887 12c76 00       		.byte	0
 37888 12c77 CE01     		.uleb128 0xce
 37889 12c79 C6DF0000 		.long	0xdfc6
 37890 12c7d 00000000 		.quad	.LBB4192
 37890      00000000 
 37891 12c85 0F000000 		.quad	.LBE4192-.LBB4192
 37891      00000000 
 37892 12c8d 02       		.byte	0x2
 37893 12c8e 41       		.byte	0x41
 37894 12c8f BD01     		.uleb128 0xbd
 37895 12c91 D5DF0000 		.long	0xdfd5
 37896 12c95 00000000 		.long	.LLST483
 37897 12c99 B601     		.uleb128 0xb6
 37898 12c9b 8BCB0000 		.long	0xcb8b
 37899 12c9f 00000000 		.quad	.LBB4193
 37899      00000000 
 37900 12ca7 0F000000 		.quad	.LBE4193-.LBB4193
 37900      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 978


 37901 12caf 06       		.byte	0x6
 37902 12cb0 A901     		.value	0x1a9
 37903 12cb2 BD01     		.uleb128 0xbd
 37904 12cb4 9ACB0000 		.long	0xcb9a
 37905 12cb8 00000000 		.long	.LLST483
 37906 12cbc CE01     		.uleb128 0xce
 37907 12cbe 0DCB0000 		.long	0xcb0d
 37908 12cc2 00000000 		.quad	.LBB4195
 37908      00000000 
 37909 12cca 0A000000 		.quad	.LBE4195-.LBB4195
 37909      00000000 
 37910 12cd2 06       		.byte	0x6
 37911 12cd3 A0       		.byte	0xa0
 37912 12cd4 B701     		.uleb128 0xb7
 37913 12cd6 1CCB0000 		.long	0xcb1c
 37914 12cda BD01     		.uleb128 0xbd
 37915 12cdc 32CB0000 		.long	0xcb32
 37916 12ce0 00000000 		.long	.LLST485
 37917 12ce4 BD01     		.uleb128 0xbd
 37918 12ce6 26CB0000 		.long	0xcb26
 37919 12cea 00000000 		.long	.LLST486
 37920 12cee B801     		.uleb128 0xb8
 37921 12cf0 00000000 		.quad	.LBB4196
 37921      00000000 
 37922 12cf8 0A000000 		.quad	.LBE4196-.LBB4196
 37922      00000000 
 37923 12d00 CE01     		.uleb128 0xce
 37924 12d02 D5CA0000 		.long	0xcad5
 37925 12d06 00000000 		.quad	.LBB4197
 37925      00000000 
 37926 12d0e 05000000 		.quad	.LBE4197-.LBB4197
 37926      00000000 
 37927 12d16 06       		.byte	0x6
 37928 12d17 B2       		.byte	0xb2
 37929 12d18 B701     		.uleb128 0xb7
 37930 12d1a E0CA0000 		.long	0xcae0
 37931 12d1e BD01     		.uleb128 0xbd
 37932 12d20 FACA0000 		.long	0xcafa
 37933 12d24 00000000 		.long	.LLST487
 37934 12d28 BD01     		.uleb128 0xbd
 37935 12d2a EDCA0000 		.long	0xcaed
 37936 12d2e 00000000 		.long	.LLST488
 37937 12d32 B601     		.uleb128 0xb6
 37938 12d34 AACA0000 		.long	0xcaaa
 37939 12d38 00000000 		.quad	.LBB4198
 37939      00000000 
 37940 12d40 05000000 		.quad	.LBE4198-.LBB4198
 37940      00000000 
 37941 12d48 2F       		.byte	0x2f
 37942 12d49 7F01     		.value	0x17f
 37943 12d4b B701     		.uleb128 0xb7
 37944 12d4d B9CA0000 		.long	0xcab9
 37945 12d51 BD01     		.uleb128 0xbd
 37946 12d53 CFCA0000 		.long	0xcacf
 37947 12d57 00000000 		.long	.LLST487
 37948 12d5b BD01     		.uleb128 0xbd
 37949 12d5d C3CA0000 		.long	0xcac3
GAS LISTING /tmp/ccmMnd7l.s 			page 979


 37950 12d61 00000000 		.long	.LLST488
 37951 12d65 CD01     		.uleb128 0xcd
 37952 12d67 00000000 		.quad	.LVL463
 37952      00000000 
 37953 12d6f F84F0100 		.long	0x14ff8
 37954 12d73 00       		.byte	0
 37955 12d74 00       		.byte	0
 37956 12d75 00       		.byte	0
 37957 12d76 00       		.byte	0
 37958 12d77 00       		.byte	0
 37959 12d78 00       		.byte	0
 37960 12d79 00       		.byte	0
 37961 12d7a D001     		.uleb128 0xd0
 37962 12d7c 00000000 		.quad	.LVL641
 37962      00000000 
 37963 12d84 C101     		.uleb128 0xc1
 37964 12d86 01       		.uleb128 0x1
 37965 12d87 55       		.byte	0x55
 37966 12d88 03       		.uleb128 0x3
 37967 12d89 91       		.byte	0x91
 37968 12d8a E07E     		.sleb128 -160
 37969 12d8c 00       		.byte	0
 37970 12d8d 00       		.byte	0
 37971 12d8e CF01     		.uleb128 0xcf
 37972 12d90 58B50000 		.long	0xb558
 37973 12d94 00000000 		.quad	.LBB4207
 37973      00000000 
 37974 12d9c 14000000 		.quad	.LBE4207-.LBB4207
 37974      00000000 
 37975 12da4 16       		.byte	0x16
 37976 12da5 37       		.byte	0x37
 37977 12da6 E52D0100 		.long	0x12de5
 37978 12daa B701     		.uleb128 0xb7
 37979 12dac 6CB50000 		.long	0xb56c
 37980 12db0 BD01     		.uleb128 0xbd
 37981 12db2 79B50000 		.long	0xb579
 37982 12db6 00000000 		.long	.LLST491
 37983 12dba C001     		.uleb128 0xc0
 37984 12dbc 00000000 		.quad	.LVL464
 37984      00000000 
 37985 12dc4 65800000 		.long	0x8065
 37986 12dc8 C101     		.uleb128 0xc1
 37987 12dca 01       		.uleb128 0x1
 37988 12dcb 55       		.byte	0x55
 37989 12dcc 02       		.uleb128 0x2
 37990 12dcd 7D       		.byte	0x7d
 37991 12dce 00       		.sleb128 0
 37992 12dcf C101     		.uleb128 0xc1
 37993 12dd1 01       		.uleb128 0x1
 37994 12dd2 54       		.byte	0x54
 37995 12dd3 09       		.uleb128 0x9
 37996 12dd4 03       		.byte	0x3
 37997 12dd5 00000000 		.quad	.LC28
 37997      00000000 
 37998 12ddd C101     		.uleb128 0xc1
 37999 12ddf 01       		.uleb128 0x1
 38000 12de0 51       		.byte	0x51
GAS LISTING /tmp/ccmMnd7l.s 			page 980


 38001 12de1 01       		.uleb128 0x1
 38002 12de2 31       		.byte	0x31
 38003 12de3 00       		.byte	0
 38004 12de4 00       		.byte	0
 38005 12de5 CA01     		.uleb128 0xca
 38006 12de7 D0B60000 		.long	0xb6d0
 38007 12deb 00000000 		.quad	.LBB4209
 38007      00000000 
 38008 12df3 00000000 		.long	.Ldebug_ranges0+0x2200
 38009 12df7 16       		.byte	0x16
 38010 12df8 37       		.byte	0x37
 38011 12df9 502F0100 		.long	0x12f50
 38012 12dfd B701     		.uleb128 0xb7
 38013 12dff E9B60000 		.long	0xb6e9
 38014 12e03 B701     		.uleb128 0xb7
 38015 12e05 DFB60000 		.long	0xb6df
 38016 12e09 CB01     		.uleb128 0xcb
 38017 12e0b 3BE50000 		.long	0xe53b
 38018 12e0f 00000000 		.quad	.LBB4210
 38018      00000000 
 38019 12e17 00000000 		.long	.Ldebug_ranges0+0x2200
 38020 12e1b 08       		.byte	0x8
 38021 12e1c 71       		.byte	0x71
 38022 12e1d B701     		.uleb128 0xb7
 38023 12e1f 58E50000 		.long	0xe558
 38024 12e23 C201     		.uleb128 0xc2
 38025 12e25 FEE00000 		.long	0xe0fe
 38026 12e29 00000000 		.quad	.LBB4212
 38026      00000000 
 38027 12e31 00000000 		.long	.Ldebug_ranges0+0x2240
 38028 12e35 08       		.byte	0x8
 38029 12e36 3502     		.value	0x235
 38030 12e38 022F0100 		.long	0x12f02
 38031 12e3c BD01     		.uleb128 0xbd
 38032 12e3e 17E10000 		.long	0xe117
 38033 12e42 00000000 		.long	.LLST492
 38034 12e46 B701     		.uleb128 0xb7
 38035 12e48 0DE10000 		.long	0xe10d
 38036 12e4c C201     		.uleb128 0xc2
 38037 12e4e 58C60000 		.long	0xc658
 38038 12e52 00000000 		.quad	.LBB4214
 38038      00000000 
 38039 12e5a 00000000 		.long	.Ldebug_ranges0+0x2280
 38040 12e5e 0D       		.byte	0xd
 38041 12e5f BC01     		.value	0x1bc
 38042 12e61 7E2E0100 		.long	0x12e7e
 38043 12e65 BD01     		.uleb128 0xbd
 38044 12e67 6CC60000 		.long	0xc66c
 38045 12e6b 00000000 		.long	.LLST493
 38046 12e6f CD01     		.uleb128 0xcd
 38047 12e71 00000000 		.quad	.LVL639
 38047      00000000 
 38048 12e79 A5800000 		.long	0x80a5
 38049 12e7d 00       		.byte	0
 38050 12e7e CC01     		.uleb128 0xcc
 38051 12e80 57B60000 		.long	0xb657
 38052 12e84 00000000 		.quad	.LBB4217
GAS LISTING /tmp/ccmMnd7l.s 			page 981


 38052      00000000 
 38053 12e8c 00000000 		.long	.Ldebug_ranges0+0x22b0
 38054 12e90 0D       		.byte	0xd
 38055 12e91 BC01     		.value	0x1bc
 38056 12e93 BD01     		.uleb128 0xbd
 38057 12e95 70B60000 		.long	0xb670
 38058 12e99 00000000 		.long	.LLST494
 38059 12e9d BD01     		.uleb128 0xbd
 38060 12e9f 66B60000 		.long	0xb666
 38061 12ea3 00000000 		.long	.LLST495
 38062 12ea7 B801     		.uleb128 0xb8
 38063 12ea9 00000000 		.quad	.LBB4219
 38063      00000000 
 38064 12eb1 2E000000 		.quad	.LBE4219-.LBB4219
 38064      00000000 
 38065 12eb9 BD01     		.uleb128 0xbd
 38066 12ebb 70B60000 		.long	0xb670
 38067 12ebf 00000000 		.long	.LLST496
 38068 12ec3 BD01     		.uleb128 0xbd
 38069 12ec5 66B60000 		.long	0xb666
 38070 12ec9 00000000 		.long	.LLST497
 38071 12ecd C501     		.uleb128 0xc5
 38072 12ecf 00000000 		.quad	.LVL627
 38072      00000000 
 38073 12ed7 652A0000 		.long	0x2a65
 38074 12edb E72E0100 		.long	0x12ee7
 38075 12edf C101     		.uleb128 0xc1
 38076 12ee1 01       		.uleb128 0x1
 38077 12ee2 55       		.byte	0x55
 38078 12ee3 02       		.uleb128 0x2
 38079 12ee4 73       		.byte	0x73
 38080 12ee5 00       		.sleb128 0
 38081 12ee6 00       		.byte	0
 38082 12ee7 D001     		.uleb128 0xd0
 38083 12ee9 00000000 		.quad	.LVL628
 38083      00000000 
 38084 12ef1 C101     		.uleb128 0xc1
 38085 12ef3 01       		.uleb128 0x1
 38086 12ef4 55       		.byte	0x55
 38087 12ef5 02       		.uleb128 0x2
 38088 12ef6 73       		.byte	0x73
 38089 12ef7 00       		.sleb128 0
 38090 12ef8 C101     		.uleb128 0xc1
 38091 12efa 01       		.uleb128 0x1
 38092 12efb 54       		.byte	0x54
 38093 12efc 01       		.uleb128 0x1
 38094 12efd 3A       		.byte	0x3a
 38095 12efe 00       		.byte	0
 38096 12eff 00       		.byte	0
 38097 12f00 00       		.byte	0
 38098 12f01 00       		.byte	0
 38099 12f02 C401     		.uleb128 0xc4
 38100 12f04 79C60000 		.long	0xc679
 38101 12f08 00000000 		.quad	.LBB4226
 38101      00000000 
 38102 12f10 08000000 		.quad	.LBE4226-.LBB4226
 38102      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 982


 38103 12f18 08       		.byte	0x8
 38104 12f19 3502     		.value	0x235
 38105 12f1b 382F0100 		.long	0x12f38
 38106 12f1f BD01     		.uleb128 0xbd
 38107 12f21 96C60000 		.long	0xc696
 38108 12f25 00000000 		.long	.LLST498
 38109 12f29 CD01     		.uleb128 0xcd
 38110 12f2b 00000000 		.quad	.LVL469
 38110      00000000 
 38111 12f33 76290000 		.long	0x2976
 38112 12f37 00       		.byte	0
 38113 12f38 C001     		.uleb128 0xc0
 38114 12f3a 00000000 		.quad	.LVL468
 38114      00000000 
 38115 12f42 C0290000 		.long	0x29c0
 38116 12f46 C101     		.uleb128 0xc1
 38117 12f48 01       		.uleb128 0x1
 38118 12f49 55       		.byte	0x55
 38119 12f4a 02       		.uleb128 0x2
 38120 12f4b 7D       		.byte	0x7d
 38121 12f4c 00       		.sleb128 0
 38122 12f4d 00       		.byte	0
 38123 12f4e 00       		.byte	0
 38124 12f4f 00       		.byte	0
 38125 12f50 CA01     		.uleb128 0xca
 38126 12f52 8EE00000 		.long	0xe08e
 38127 12f56 00000000 		.quad	.LBB4234
 38127      00000000 
 38128 12f5e 00000000 		.long	.Ldebug_ranges0+0x22e0
 38129 12f62 16       		.byte	0x16
 38130 12f63 3A       		.byte	0x3a
 38131 12f64 BB2F0100 		.long	0x12fbb
 38132 12f68 BD01     		.uleb128 0xbd
 38133 12f6a 9DE00000 		.long	0xe09d
 38134 12f6e 00000000 		.long	.LLST499
 38135 12f72 B401     		.uleb128 0xb4
 38136 12f74 00000000 		.long	.Ldebug_ranges0+0x22e0
 38137 12f78 B901     		.uleb128 0xb9
 38138 12f7a B3E00000 		.long	0xe0b3
 38139 12f7e CB01     		.uleb128 0xcb
 38140 12f80 F6B60000 		.long	0xb6f6
 38141 12f84 00000000 		.quad	.LBB4236
 38141      00000000 
 38142 12f8c 00000000 		.long	.Ldebug_ranges0+0x22e0
 38143 12f90 17       		.byte	0x17
 38144 12f91 EC       		.byte	0xec
 38145 12f92 B701     		.uleb128 0xb7
 38146 12f94 05B70000 		.long	0xb705
 38147 12f98 BD01     		.uleb128 0xbd
 38148 12f9a 0FB70000 		.long	0xb70f
 38149 12f9e 00000000 		.long	.LLST500
 38150 12fa2 C001     		.uleb128 0xc0
 38151 12fa4 00000000 		.quad	.LVL472
 38151      00000000 
 38152 12fac 8C500100 		.long	0x1508c
 38153 12fb0 C101     		.uleb128 0xc1
 38154 12fb2 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 983


 38155 12fb3 55       		.byte	0x55
 38156 12fb4 02       		.uleb128 0x2
 38157 12fb5 7F       		.byte	0x7f
 38158 12fb6 00       		.sleb128 0
 38159 12fb7 00       		.byte	0
 38160 12fb8 00       		.byte	0
 38161 12fb9 00       		.byte	0
 38162 12fba 00       		.byte	0
 38163 12fbb CF01     		.uleb128 0xcf
 38164 12fbd 8EE00000 		.long	0xe08e
 38165 12fc1 00000000 		.quad	.LBB4247
 38165      00000000 
 38166 12fc9 0D000000 		.quad	.LBE4247-.LBB4247
 38166      00000000 
 38167 12fd1 16       		.byte	0x16
 38168 12fd2 3A       		.byte	0x3a
 38169 12fd3 3A300100 		.long	0x1303a
 38170 12fd7 BD01     		.uleb128 0xbd
 38171 12fd9 9DE00000 		.long	0xe09d
 38172 12fdd 00000000 		.long	.LLST501
 38173 12fe1 B801     		.uleb128 0xb8
 38174 12fe3 00000000 		.quad	.LBB4248
 38174      00000000 
 38175 12feb 0D000000 		.quad	.LBE4248-.LBB4248
 38175      00000000 
 38176 12ff3 B901     		.uleb128 0xb9
 38177 12ff5 B3E00000 		.long	0xe0b3
 38178 12ff9 CE01     		.uleb128 0xce
 38179 12ffb F6B60000 		.long	0xb6f6
 38180 12fff 00000000 		.quad	.LBB4249
 38180      00000000 
 38181 13007 08000000 		.quad	.LBE4249-.LBB4249
 38181      00000000 
 38182 1300f 17       		.byte	0x17
 38183 13010 EC       		.byte	0xec
 38184 13011 B701     		.uleb128 0xb7
 38185 13013 05B70000 		.long	0xb705
 38186 13017 BD01     		.uleb128 0xbd
 38187 13019 0FB70000 		.long	0xb70f
 38188 1301d 00000000 		.long	.LLST502
 38189 13021 C001     		.uleb128 0xc0
 38190 13023 00000000 		.quad	.LVL643
 38190      00000000 
 38191 1302b 8C500100 		.long	0x1508c
 38192 1302f C101     		.uleb128 0xc1
 38193 13031 01       		.uleb128 0x1
 38194 13032 55       		.byte	0x55
 38195 13033 02       		.uleb128 0x2
 38196 13034 7F       		.byte	0x7f
 38197 13035 00       		.sleb128 0
 38198 13036 00       		.byte	0
 38199 13037 00       		.byte	0
 38200 13038 00       		.byte	0
 38201 13039 00       		.byte	0
 38202 1303a C001     		.uleb128 0xc0
 38203 1303c 00000000 		.quad	.LVL364
 38203      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 984


 38204 13044 9D500100 		.long	0x1509d
 38205 13048 C101     		.uleb128 0xc1
 38206 1304a 01       		.uleb128 0x1
 38207 1304b 55       		.byte	0x55
 38208 1304c 03       		.uleb128 0x3
 38209 1304d 0A       		.byte	0xa
 38210 1304e 003C     		.value	0x3c00
 38211 13050 C101     		.uleb128 0xc1
 38212 13052 01       		.uleb128 0x1
 38213 13053 54       		.byte	0x54
 38214 13054 03       		.uleb128 0x3
 38215 13055 0A       		.byte	0xa
 38216 13056 003C     		.value	0x3c00
 38217 13058 00       		.byte	0
 38218 13059 00       		.byte	0
 38219 1305a 00       		.byte	0
 38220 1305b CF01     		.uleb128 0xcf
 38221 1305d C6E00000 		.long	0xe0c6
 38222 13061 00000000 		.quad	.LBB4256
 38222      00000000 
 38223 13069 0D000000 		.quad	.LBE4256-.LBB4256
 38223      00000000 
 38224 13071 16       		.byte	0x16
 38225 13072 3B       		.byte	0x3b
 38226 13073 DA300100 		.long	0x130da
 38227 13077 BD01     		.uleb128 0xbd
 38228 13079 D5E00000 		.long	0xe0d5
 38229 1307d 00000000 		.long	.LLST503
 38230 13081 B801     		.uleb128 0xb8
 38231 13083 00000000 		.quad	.LBB4257
 38231      00000000 
 38232 1308b 0D000000 		.quad	.LBE4257-.LBB4257
 38232      00000000 
 38233 13093 B901     		.uleb128 0xb9
 38234 13095 EBE00000 		.long	0xe0eb
 38235 13099 CE01     		.uleb128 0xce
 38236 1309b 1FB70000 		.long	0xb71f
 38237 1309f 00000000 		.quad	.LBB4258
 38237      00000000 
 38238 130a7 08000000 		.quad	.LBE4258-.LBB4258
 38238      00000000 
 38239 130af 17       		.byte	0x17
 38240 130b0 EC       		.byte	0xec
 38241 130b1 B701     		.uleb128 0xb7
 38242 130b3 2EB70000 		.long	0xb72e
 38243 130b7 BD01     		.uleb128 0xbd
 38244 130b9 38B70000 		.long	0xb738
 38245 130bd 00000000 		.long	.LLST504
 38246 130c1 C001     		.uleb128 0xc0
 38247 130c3 00000000 		.quad	.LVL475
 38247      00000000 
 38248 130cb B7500100 		.long	0x150b7
 38249 130cf C101     		.uleb128 0xc1
 38250 130d1 01       		.uleb128 0x1
 38251 130d2 55       		.byte	0x55
 38252 130d3 02       		.uleb128 0x2
 38253 130d4 7E       		.byte	0x7e
GAS LISTING /tmp/ccmMnd7l.s 			page 985


 38254 130d5 00       		.sleb128 0
 38255 130d6 00       		.byte	0
 38256 130d7 00       		.byte	0
 38257 130d8 00       		.byte	0
 38258 130d9 00       		.byte	0
 38259 130da CF01     		.uleb128 0xcf
 38260 130dc C6E00000 		.long	0xe0c6
 38261 130e0 00000000 		.quad	.LBB4261
 38261      00000000 
 38262 130e8 0D000000 		.quad	.LBE4261-.LBB4261
 38262      00000000 
 38263 130f0 16       		.byte	0x16
 38264 130f1 3B       		.byte	0x3b
 38265 130f2 59310100 		.long	0x13159
 38266 130f6 BD01     		.uleb128 0xbd
 38267 130f8 D5E00000 		.long	0xe0d5
 38268 130fc 00000000 		.long	.LLST505
 38269 13100 B801     		.uleb128 0xb8
 38270 13102 00000000 		.quad	.LBB4262
 38270      00000000 
 38271 1310a 0D000000 		.quad	.LBE4262-.LBB4262
 38271      00000000 
 38272 13112 B901     		.uleb128 0xb9
 38273 13114 EBE00000 		.long	0xe0eb
 38274 13118 CE01     		.uleb128 0xce
 38275 1311a 1FB70000 		.long	0xb71f
 38276 1311e 00000000 		.quad	.LBB4263
 38276      00000000 
 38277 13126 08000000 		.quad	.LBE4263-.LBB4263
 38277      00000000 
 38278 1312e 17       		.byte	0x17
 38279 1312f EC       		.byte	0xec
 38280 13130 B701     		.uleb128 0xb7
 38281 13132 2EB70000 		.long	0xb72e
 38282 13136 BD01     		.uleb128 0xbd
 38283 13138 38B70000 		.long	0xb738
 38284 1313c 00000000 		.long	.LLST506
 38285 13140 C001     		.uleb128 0xc0
 38286 13142 00000000 		.quad	.LVL645
 38286      00000000 
 38287 1314a B7500100 		.long	0x150b7
 38288 1314e C101     		.uleb128 0xc1
 38289 13150 01       		.uleb128 0x1
 38290 13151 55       		.byte	0x55
 38291 13152 02       		.uleb128 0x2
 38292 13153 7E       		.byte	0x7e
 38293 13154 00       		.sleb128 0
 38294 13155 00       		.byte	0
 38295 13156 00       		.byte	0
 38296 13157 00       		.byte	0
 38297 13158 00       		.byte	0
 38298 13159 C001     		.uleb128 0xc0
 38299 1315b 00000000 		.quad	.LVL362
 38299      00000000 
 38300 13163 C8500100 		.long	0x150c8
 38301 13167 C101     		.uleb128 0xc1
 38302 13169 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 986


 38303 1316a 55       		.byte	0x55
 38304 1316b 05       		.uleb128 0x5
 38305 1316c 91       		.byte	0x91
 38306 1316d 887E     		.sleb128 -248
 38307 1316f 94       		.byte	0x94
 38308 13170 04       		.byte	0x4
 38309 13171 00       		.byte	0
 38310 13172 00       		.byte	0
 38311 13173 00       		.byte	0
 38312 13174 C301     		.uleb128 0xc3
 38313 13176 00000000 		.long	.Ldebug_ranges0+0x2310
 38314 1317a 304B0100 		.long	0x14b30
 38315 1317e C701     		.uleb128 0xc7
 38316 13180 00000000 		.long	.LASF1620
 38317 13184 16       		.byte	0x16
 38318 13185 3D       		.byte	0x3d
 38319 13186 73990000 		.long	0x9973
 38320 1318a 00000000 		.long	.LLST507
 38321 1318e B401     		.uleb128 0xb4
 38322 13190 00000000 		.long	.Ldebug_ranges0+0x2340
 38323 13194 C701     		.uleb128 0xc7
 38324 13196 00000000 		.long	.LASF1621
 38325 1319a 16       		.byte	0x16
 38326 1319b 3E       		.byte	0x3e
 38327 1319c 085C0000 		.long	0x5c08
 38328 131a0 00000000 		.long	.LLST508
 38329 131a4 C301     		.uleb128 0xc3
 38330 131a6 00000000 		.long	.Ldebug_ranges0+0x2370
 38331 131aa 174A0100 		.long	0x14a17
 38332 131ae C701     		.uleb128 0xc7
 38333 131b0 00000000 		.long	.LASF1612
 38334 131b4 16       		.byte	0x16
 38335 131b5 3F       		.byte	0x3f
 38336 131b6 73990000 		.long	0x9973
 38337 131ba 00000000 		.long	.LLST509
 38338 131be B401     		.uleb128 0xb4
 38339 131c0 00000000 		.long	.Ldebug_ranges0+0x23b0
 38340 131c4 D601     		.uleb128 0xd6
 38341 131c6 686D00   		.string	"hm"
 38342 131c9 16       		.byte	0x16
 38343 131ca 40       		.byte	0x40
 38344 131cb AA650000 		.long	0x65aa
 38345 131cf 00000000 		.long	.LLST510
 38346 131d3 CA01     		.uleb128 0xca
 38347 131d5 58B50000 		.long	0xb558
 38348 131d9 00000000 		.quad	.LBB4270
 38348      00000000 
 38349 131e1 00000000 		.long	.Ldebug_ranges0+0x2410
 38350 131e5 16       		.byte	0x16
 38351 131e6 41       		.byte	0x41
 38352 131e7 26320100 		.long	0x13226
 38353 131eb B701     		.uleb128 0xb7
 38354 131ed 6CB50000 		.long	0xb56c
 38355 131f1 BD01     		.uleb128 0xbd
 38356 131f3 79B50000 		.long	0xb579
 38357 131f7 00000000 		.long	.LLST511
 38358 131fb C001     		.uleb128 0xc0
GAS LISTING /tmp/ccmMnd7l.s 			page 987


 38359 131fd 00000000 		.quad	.LVL482
 38359      00000000 
 38360 13205 65800000 		.long	0x8065
 38361 13209 C101     		.uleb128 0xc1
 38362 1320b 01       		.uleb128 0x1
 38363 1320c 55       		.byte	0x55
 38364 1320d 02       		.uleb128 0x2
 38365 1320e 7D       		.byte	0x7d
 38366 1320f 00       		.sleb128 0
 38367 13210 C101     		.uleb128 0xc1
 38368 13212 01       		.uleb128 0x1
 38369 13213 54       		.byte	0x54
 38370 13214 09       		.uleb128 0x9
 38371 13215 03       		.byte	0x3
 38372 13216 00000000 		.quad	.LC22
 38372      00000000 
 38373 1321e C101     		.uleb128 0xc1
 38374 13220 01       		.uleb128 0x1
 38375 13221 51       		.byte	0x51
 38376 13222 01       		.uleb128 0x1
 38377 13223 3C       		.byte	0x3c
 38378 13224 00       		.byte	0
 38379 13225 00       		.byte	0
 38380 13226 CA01     		.uleb128 0xca
 38381 13228 38DA0000 		.long	0xda38
 38382 1322c 00000000 		.quad	.LBB4274
 38382      00000000 
 38383 13234 00000000 		.long	.Ldebug_ranges0+0x2440
 38384 13238 16       		.byte	0x16
 38385 13239 41       		.byte	0x41
 38386 1323a 6C320100 		.long	0x1326c
 38387 1323e BD01     		.uleb128 0xbd
 38388 13240 51DA0000 		.long	0xda51
 38389 13244 00000000 		.long	.LLST512
 38390 13248 B701     		.uleb128 0xb7
 38391 1324a 47DA0000 		.long	0xda47
 38392 1324e C001     		.uleb128 0xc0
 38393 13250 00000000 		.quad	.LVL483
 38393      00000000 
 38394 13258 4A290000 		.long	0x294a
 38395 1325c C101     		.uleb128 0xc1
 38396 1325e 01       		.uleb128 0x1
 38397 1325f 55       		.byte	0x55
 38398 13260 02       		.uleb128 0x2
 38399 13261 7D       		.byte	0x7d
 38400 13262 00       		.sleb128 0
 38401 13263 C101     		.uleb128 0xc1
 38402 13265 01       		.uleb128 0x1
 38403 13266 54       		.byte	0x54
 38404 13267 02       		.uleb128 0x2
 38405 13268 7C       		.byte	0x7c
 38406 13269 00       		.sleb128 0
 38407 1326a 00       		.byte	0
 38408 1326b 00       		.byte	0
 38409 1326c CA01     		.uleb128 0xca
 38410 1326e 58B50000 		.long	0xb558
 38411 13272 00000000 		.quad	.LBB4277
GAS LISTING /tmp/ccmMnd7l.s 			page 988


 38411      00000000 
 38412 1327a 00000000 		.long	.Ldebug_ranges0+0x2470
 38413 1327e 16       		.byte	0x16
 38414 1327f 41       		.byte	0x41
 38415 13280 C3320100 		.long	0x132c3
 38416 13284 BD01     		.uleb128 0xbd
 38417 13286 79B50000 		.long	0xb579
 38418 1328a 00000000 		.long	.LLST513
 38419 1328e BD01     		.uleb128 0xbd
 38420 13290 6CB50000 		.long	0xb56c
 38421 13294 00000000 		.long	.LLST514
 38422 13298 C001     		.uleb128 0xc0
 38423 1329a 00000000 		.quad	.LVL485
 38423      00000000 
 38424 132a2 65800000 		.long	0x8065
 38425 132a6 C101     		.uleb128 0xc1
 38426 132a8 01       		.uleb128 0x1
 38427 132a9 55       		.byte	0x55
 38428 132aa 02       		.uleb128 0x2
 38429 132ab 73       		.byte	0x73
 38430 132ac 00       		.sleb128 0
 38431 132ad C101     		.uleb128 0xc1
 38432 132af 01       		.uleb128 0x1
 38433 132b0 54       		.byte	0x54
 38434 132b1 09       		.uleb128 0x9
 38435 132b2 03       		.byte	0x3
 38436 132b3 00000000 		.quad	.LC23
 38436      00000000 
 38437 132bb C101     		.uleb128 0xc1
 38438 132bd 01       		.uleb128 0x1
 38439 132be 51       		.byte	0x51
 38440 132bf 01       		.uleb128 0x1
 38441 132c0 3A       		.byte	0x3a
 38442 132c1 00       		.byte	0
 38443 132c2 00       		.byte	0
 38444 132c3 CF01     		.uleb128 0xcf
 38445 132c5 38DA0000 		.long	0xda38
 38446 132c9 00000000 		.quad	.LBB4282
 38446      00000000 
 38447 132d1 10000000 		.quad	.LBE4282-.LBB4282
 38447      00000000 
 38448 132d9 16       		.byte	0x16
 38449 132da 41       		.byte	0x41
 38450 132db 0F330100 		.long	0x1330f
 38451 132df BD01     		.uleb128 0xbd
 38452 132e1 51DA0000 		.long	0xda51
 38453 132e5 00000000 		.long	.LLST515
 38454 132e9 B701     		.uleb128 0xb7
 38455 132eb 47DA0000 		.long	0xda47
 38456 132ef C001     		.uleb128 0xc0
 38457 132f1 00000000 		.quad	.LVL486
 38457      00000000 
 38458 132f9 4A290000 		.long	0x294a
 38459 132fd C101     		.uleb128 0xc1
 38460 132ff 01       		.uleb128 0x1
 38461 13300 55       		.byte	0x55
 38462 13301 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 989


 38463 13302 73       		.byte	0x73
 38464 13303 00       		.sleb128 0
 38465 13304 C101     		.uleb128 0xc1
 38466 13306 01       		.uleb128 0x1
 38467 13307 54       		.byte	0x54
 38468 13308 04       		.uleb128 0x4
 38469 13309 91       		.byte	0x91
 38470 1330a F87D     		.sleb128 -264
 38471 1330c 06       		.byte	0x6
 38472 1330d 00       		.byte	0
 38473 1330e 00       		.byte	0
 38474 1330f CF01     		.uleb128 0xcf
 38475 13311 58B50000 		.long	0xb558
 38476 13315 00000000 		.quad	.LBB4284
 38476      00000000 
 38477 1331d 14000000 		.quad	.LBE4284-.LBB4284
 38477      00000000 
 38478 13325 16       		.byte	0x16
 38479 13326 41       		.byte	0x41
 38480 13327 63330100 		.long	0x13363
 38481 1332b BD01     		.uleb128 0xbd
 38482 1332d 79B50000 		.long	0xb579
 38483 13331 00000000 		.long	.LLST516
 38484 13335 BD01     		.uleb128 0xbd
 38485 13337 6CB50000 		.long	0xb56c
 38486 1333b 00000000 		.long	.LLST517
 38487 1333f C001     		.uleb128 0xc0
 38488 13341 00000000 		.quad	.LVL487
 38488      00000000 
 38489 13349 65800000 		.long	0x8065
 38490 1334d C101     		.uleb128 0xc1
 38491 1334f 01       		.uleb128 0x1
 38492 13350 54       		.byte	0x54
 38493 13351 09       		.uleb128 0x9
 38494 13352 03       		.byte	0x3
 38495 13353 00000000 		.quad	.LC30
 38495      00000000 
 38496 1335b C101     		.uleb128 0xc1
 38497 1335d 01       		.uleb128 0x1
 38498 1335e 51       		.byte	0x51
 38499 1335f 01       		.uleb128 0x1
 38500 13360 44       		.byte	0x44
 38501 13361 00       		.byte	0
 38502 13362 00       		.byte	0
 38503 13363 CF01     		.uleb128 0xcf
 38504 13365 58B50000 		.long	0xb558
 38505 13369 00000000 		.quad	.LBB4286
 38505      00000000 
 38506 13371 18000000 		.quad	.LBE4286-.LBB4286
 38506      00000000 
 38507 13379 16       		.byte	0x16
 38508 1337a 42       		.byte	0x42
 38509 1337b B3330100 		.long	0x133b3
 38510 1337f B701     		.uleb128 0xb7
 38511 13381 6CB50000 		.long	0xb56c
 38512 13385 BD01     		.uleb128 0xbd
 38513 13387 79B50000 		.long	0xb579
GAS LISTING /tmp/ccmMnd7l.s 			page 990


 38514 1338b 00000000 		.long	.LLST518
 38515 1338f C001     		.uleb128 0xc0
 38516 13391 00000000 		.quad	.LVL488
 38516      00000000 
 38517 13399 65800000 		.long	0x8065
 38518 1339d C101     		.uleb128 0xc1
 38519 1339f 01       		.uleb128 0x1
 38520 133a0 54       		.byte	0x54
 38521 133a1 09       		.uleb128 0x9
 38522 133a2 03       		.byte	0x3
 38523 133a3 00000000 		.quad	.LC25
 38523      00000000 
 38524 133ab C101     		.uleb128 0xc1
 38525 133ad 01       		.uleb128 0x1
 38526 133ae 51       		.byte	0x51
 38527 133af 01       		.uleb128 0x1
 38528 133b0 37       		.byte	0x37
 38529 133b1 00       		.byte	0
 38530 133b2 00       		.byte	0
 38531 133b3 CA01     		.uleb128 0xca
 38532 133b5 38DA0000 		.long	0xda38
 38533 133b9 00000000 		.quad	.LBB4288
 38533      00000000 
 38534 133c1 00000000 		.long	.Ldebug_ranges0+0x24a0
 38535 133c5 16       		.byte	0x16
 38536 133c6 42       		.byte	0x42
 38537 133c7 F2330100 		.long	0x133f2
 38538 133cb BD01     		.uleb128 0xbd
 38539 133cd 51DA0000 		.long	0xda51
 38540 133d1 00000000 		.long	.LLST519
 38541 133d5 B701     		.uleb128 0xb7
 38542 133d7 47DA0000 		.long	0xda47
 38543 133db C001     		.uleb128 0xc0
 38544 133dd 00000000 		.quad	.LVL489
 38544      00000000 
 38545 133e5 4A290000 		.long	0x294a
 38546 133e9 C101     		.uleb128 0xc1
 38547 133eb 01       		.uleb128 0x1
 38548 133ec 54       		.byte	0x54
 38549 133ed 02       		.uleb128 0x2
 38550 133ee 7C       		.byte	0x7c
 38551 133ef 00       		.sleb128 0
 38552 133f0 00       		.byte	0
 38553 133f1 00       		.byte	0
 38554 133f2 CA01     		.uleb128 0xca
 38555 133f4 58B50000 		.long	0xb558
 38556 133f8 00000000 		.quad	.LBB4291
 38556      00000000 
 38557 13400 00000000 		.long	.Ldebug_ranges0+0x24d0
 38558 13404 16       		.byte	0x16
 38559 13405 42       		.byte	0x42
 38560 13406 49340100 		.long	0x13449
 38561 1340a BD01     		.uleb128 0xbd
 38562 1340c 79B50000 		.long	0xb579
 38563 13410 00000000 		.long	.LLST520
 38564 13414 BD01     		.uleb128 0xbd
 38565 13416 6CB50000 		.long	0xb56c
GAS LISTING /tmp/ccmMnd7l.s 			page 991


 38566 1341a 00000000 		.long	.LLST521
 38567 1341e C001     		.uleb128 0xc0
 38568 13420 00000000 		.quad	.LVL491
 38568      00000000 
 38569 13428 65800000 		.long	0x8065
 38570 1342c C101     		.uleb128 0xc1
 38571 1342e 01       		.uleb128 0x1
 38572 1342f 55       		.byte	0x55
 38573 13430 02       		.uleb128 0x2
 38574 13431 73       		.byte	0x73
 38575 13432 00       		.sleb128 0
 38576 13433 C101     		.uleb128 0xc1
 38577 13435 01       		.uleb128 0x1
 38578 13436 54       		.byte	0x54
 38579 13437 09       		.uleb128 0x9
 38580 13438 03       		.byte	0x3
 38581 13439 00000000 		.quad	.LC26
 38581      00000000 
 38582 13441 C101     		.uleb128 0xc1
 38583 13443 01       		.uleb128 0x1
 38584 13444 51       		.byte	0x51
 38585 13445 01       		.uleb128 0x1
 38586 13446 40       		.byte	0x40
 38587 13447 00       		.byte	0
 38588 13448 00       		.byte	0
 38589 13449 CA01     		.uleb128 0xca
 38590 1344b 38DA0000 		.long	0xda38
 38591 1344f 00000000 		.quad	.LBB4296
 38591      00000000 
 38592 13457 00000000 		.long	.Ldebug_ranges0+0x2500
 38593 1345b 16       		.byte	0x16
 38594 1345c 42       		.byte	0x42
 38595 1345d 91340100 		.long	0x13491
 38596 13461 BD01     		.uleb128 0xbd
 38597 13463 51DA0000 		.long	0xda51
 38598 13467 00000000 		.long	.LLST522
 38599 1346b B701     		.uleb128 0xb7
 38600 1346d 47DA0000 		.long	0xda47
 38601 13471 C001     		.uleb128 0xc0
 38602 13473 00000000 		.quad	.LVL492
 38602      00000000 
 38603 1347b 4A290000 		.long	0x294a
 38604 1347f C101     		.uleb128 0xc1
 38605 13481 01       		.uleb128 0x1
 38606 13482 55       		.byte	0x55
 38607 13483 02       		.uleb128 0x2
 38608 13484 73       		.byte	0x73
 38609 13485 00       		.sleb128 0
 38610 13486 C101     		.uleb128 0xc1
 38611 13488 01       		.uleb128 0x1
 38612 13489 54       		.byte	0x54
 38613 1348a 04       		.uleb128 0x4
 38614 1348b 91       		.byte	0x91
 38615 1348c F87D     		.sleb128 -264
 38616 1348e 06       		.byte	0x6
 38617 1348f 00       		.byte	0
 38618 13490 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 992


 38619 13491 CA01     		.uleb128 0xca
 38620 13493 58B50000 		.long	0xb558
 38621 13497 00000000 		.quad	.LBB4299
 38621      00000000 
 38622 1349f 00000000 		.long	.Ldebug_ranges0+0x2530
 38623 134a3 16       		.byte	0x16
 38624 134a4 42       		.byte	0x42
 38625 134a5 E8340100 		.long	0x134e8
 38626 134a9 BD01     		.uleb128 0xbd
 38627 134ab 79B50000 		.long	0xb579
 38628 134af 00000000 		.long	.LLST523
 38629 134b3 BD01     		.uleb128 0xbd
 38630 134b5 6CB50000 		.long	0xb56c
 38631 134b9 00000000 		.long	.LLST524
 38632 134bd C001     		.uleb128 0xc0
 38633 134bf 00000000 		.quad	.LVL494
 38633      00000000 
 38634 134c7 65800000 		.long	0x8065
 38635 134cb C101     		.uleb128 0xc1
 38636 134cd 01       		.uleb128 0x1
 38637 134ce 55       		.byte	0x55
 38638 134cf 02       		.uleb128 0x2
 38639 134d0 73       		.byte	0x73
 38640 134d1 00       		.sleb128 0
 38641 134d2 C101     		.uleb128 0xc1
 38642 134d4 01       		.uleb128 0x1
 38643 134d5 54       		.byte	0x54
 38644 134d6 09       		.uleb128 0x9
 38645 134d7 03       		.byte	0x3
 38646 134d8 00000000 		.quad	.LC27
 38646      00000000 
 38647 134e0 C101     		.uleb128 0xc1
 38648 134e2 01       		.uleb128 0x1
 38649 134e3 51       		.byte	0x51
 38650 134e4 01       		.uleb128 0x1
 38651 134e5 46       		.byte	0x46
 38652 134e6 00       		.byte	0
 38653 134e7 00       		.byte	0
 38654 134e8 CF01     		.uleb128 0xcf
 38655 134ea D0B60000 		.long	0xb6d0
 38656 134ee 00000000 		.quad	.LBB4304
 38656      00000000 
 38657 134f6 08000000 		.quad	.LBE4304-.LBB4304
 38657      00000000 
 38658 134fe 16       		.byte	0x16
 38659 134ff 42       		.byte	0x42
 38660 13500 4A350100 		.long	0x1354a
 38661 13504 B701     		.uleb128 0xb7
 38662 13506 E9B60000 		.long	0xb6e9
 38663 1350a B701     		.uleb128 0xb7
 38664 1350c DFB60000 		.long	0xb6df
 38665 13510 CE01     		.uleb128 0xce
 38666 13512 79C60000 		.long	0xc679
 38667 13516 00000000 		.quad	.LBB4305
 38667      00000000 
 38668 1351e 08000000 		.quad	.LBE4305-.LBB4305
 38668      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 993


 38669 13526 08       		.byte	0x8
 38670 13527 71       		.byte	0x71
 38671 13528 BD01     		.uleb128 0xbd
 38672 1352a 96C60000 		.long	0xc696
 38673 1352e 00000000 		.long	.LLST525
 38674 13532 C001     		.uleb128 0xc0
 38675 13534 00000000 		.quad	.LVL495
 38675      00000000 
 38676 1353c 76290000 		.long	0x2976
 38677 13540 C101     		.uleb128 0xc1
 38678 13542 01       		.uleb128 0x1
 38679 13543 55       		.byte	0x55
 38680 13544 02       		.uleb128 0x2
 38681 13545 73       		.byte	0x73
 38682 13546 00       		.sleb128 0
 38683 13547 00       		.byte	0
 38684 13548 00       		.byte	0
 38685 13549 00       		.byte	0
 38686 1354a C301     		.uleb128 0xc3
 38687 1354c 00000000 		.long	.Ldebug_ranges0+0x2560
 38688 13550 4A470100 		.long	0x1474a
 38689 13554 C801     		.uleb128 0xc8
 38690 13556 7400     		.string	"t"
 38691 13558 16       		.byte	0x16
 38692 13559 43       		.byte	0x43
 38693 1355a FBAE0000 		.long	0xaefb
 38694 1355e 03       		.uleb128 0x3
 38695 1355f 91       		.byte	0x91
 38696 13560 907F     		.sleb128 -112
 38697 13562 CF01     		.uleb128 0xcf
 38698 13564 25E10000 		.long	0xe125
 38699 13568 00000000 		.quad	.LBB4308
 38699      00000000 
 38700 13570 8B000000 		.quad	.LBE4308-.LBB4308
 38700      00000000 
 38701 13578 16       		.byte	0x16
 38702 13579 43       		.byte	0x43
 38703 1357a 19380100 		.long	0x13819
 38704 1357e BD01     		.uleb128 0xbd
 38705 13580 3EE10000 		.long	0xe13e
 38706 13584 00000000 		.long	.LLST526
 38707 13588 BD01     		.uleb128 0xbd
 38708 1358a 34E10000 		.long	0xe134
 38709 1358e 00000000 		.long	.LLST527
 38710 13592 CA01     		.uleb128 0xca
 38711 13594 A5E30000 		.long	0xe3a5
 38712 13598 00000000 		.quad	.LBB4310
 38712      00000000 
 38713 135a0 00000000 		.long	.Ldebug_ranges0+0x25c0
 38714 135a4 02       		.byte	0x2
 38715 135a5 37       		.byte	0x37
 38716 135a6 0A380100 		.long	0x1380a
 38717 135aa B701     		.uleb128 0xb7
 38718 135ac CBE30000 		.long	0xe3cb
 38719 135b0 BD01     		.uleb128 0xbd
 38720 135b2 BEE30000 		.long	0xe3be
 38721 135b6 00000000 		.long	.LLST529
GAS LISTING /tmp/ccmMnd7l.s 			page 994


 38722 135ba BD01     		.uleb128 0xbd
 38723 135bc B4E30000 		.long	0xe3b4
 38724 135c0 00000000 		.long	.LLST530
 38725 135c4 C201     		.uleb128 0xc2
 38726 135c6 2FD50000 		.long	0xd52f
 38727 135ca 00000000 		.quad	.LBB4311
 38727      00000000 
 38728 135d2 00000000 		.long	.Ldebug_ranges0+0x25f0
 38729 135d6 06       		.byte	0x6
 38730 135d7 1601     		.value	0x116
 38731 135d9 E5360100 		.long	0x136e5
 38732 135dd B701     		.uleb128 0xb7
 38733 135df 54D50000 		.long	0xd554
 38734 135e3 BD01     		.uleb128 0xbd
 38735 135e5 48D50000 		.long	0xd548
 38736 135e9 00000000 		.long	.LLST529
 38737 135ed BD01     		.uleb128 0xbd
 38738 135ef 3ED50000 		.long	0xd53e
 38739 135f3 00000000 		.long	.LLST530
 38740 135f7 CA01     		.uleb128 0xca
 38741 135f9 DEE30000 		.long	0xe3de
 38742 135fd 00000000 		.quad	.LBB4312
 38742      00000000 
 38743 13605 00000000 		.long	.Ldebug_ranges0+0x2630
 38744 13609 06       		.byte	0x6
 38745 1360a 88       		.byte	0x88
 38746 1360b BB360100 		.long	0x136bb
 38747 1360f BD01     		.uleb128 0xbd
 38748 13611 F7E30000 		.long	0xe3f7
 38749 13615 00000000 		.long	.LLST534
 38750 13619 BD01     		.uleb128 0xbd
 38751 1361b EDE30000 		.long	0xe3ed
 38752 1361f 00000000 		.long	.LLST535
 38753 13623 CB01     		.uleb128 0xcb
 38754 13625 40CE0000 		.long	0xce40
 38755 13629 00000000 		.quad	.LBB4314
 38755      00000000 
 38756 13631 00000000 		.long	.Ldebug_ranges0+0x2670
 38757 13635 06       		.byte	0x6
 38758 13636 B9       		.byte	0xb9
 38759 13637 B701     		.uleb128 0xb7
 38760 13639 4FCE0000 		.long	0xce4f
 38761 1363d BD01     		.uleb128 0xbd
 38762 1363f 59CE0000 		.long	0xce59
 38763 13643 00000000 		.long	.LLST534
 38764 13647 B401     		.uleb128 0xb4
 38765 13649 00000000 		.long	.Ldebug_ranges0+0x2670
 38766 1364d CB01     		.uleb128 0xcb
 38767 1364f 15CE0000 		.long	0xce15
 38768 13653 00000000 		.quad	.LBB4316
 38768      00000000 
 38769 1365b 00000000 		.long	.Ldebug_ranges0+0x2670
 38770 1365f 06       		.byte	0x6
 38771 13660 AA       		.byte	0xaa
 38772 13661 B701     		.uleb128 0xb7
 38773 13663 20CE0000 		.long	0xce20
 38774 13667 BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 995


 38775 13669 2DCE0000 		.long	0xce2d
 38776 1366d 00000000 		.long	.LLST534
 38777 13671 CC01     		.uleb128 0xcc
 38778 13673 EACD0000 		.long	0xcdea
 38779 13677 00000000 		.quad	.LBB4317
 38779      00000000 
 38780 1367f 00000000 		.long	.Ldebug_ranges0+0x2670
 38781 13683 2F       		.byte	0x2f
 38782 13684 6501     		.value	0x165
 38783 13686 B701     		.uleb128 0xb7
 38784 13688 F9CD0000 		.long	0xcdf9
 38785 1368c BD01     		.uleb128 0xbd
 38786 1368e 0FCE0000 		.long	0xce0f
 38787 13692 00000000 		.long	.LLST538
 38788 13696 BD01     		.uleb128 0xbd
 38789 13698 03CE0000 		.long	0xce03
 38790 1369c 00000000 		.long	.LLST534
 38791 136a0 C001     		.uleb128 0xc0
 38792 136a2 00000000 		.quad	.LVL499
 38792      00000000 
 38793 136aa DF4F0100 		.long	0x14fdf
 38794 136ae C101     		.uleb128 0xc1
 38795 136b0 01       		.uleb128 0x1
 38796 136b1 55       		.byte	0x55
 38797 136b2 02       		.uleb128 0x2
 38798 136b3 08       		.byte	0x8
 38799 136b4 28       		.byte	0x28
 38800 136b5 00       		.byte	0
 38801 136b6 00       		.byte	0
 38802 136b7 00       		.byte	0
 38803 136b8 00       		.byte	0
 38804 136b9 00       		.byte	0
 38805 136ba 00       		.byte	0
 38806 136bb CE01     		.uleb128 0xce
 38807 136bd 68CE0000 		.long	0xce68
 38808 136c1 00000000 		.quad	.LBB4326
 38808      00000000 
 38809 136c9 24000000 		.quad	.LBE4326-.LBB4326
 38809      00000000 
 38810 136d1 06       		.byte	0x6
 38811 136d2 87       		.byte	0x87
 38812 136d3 B701     		.uleb128 0xb7
 38813 136d5 81CE0000 		.long	0xce81
 38814 136d9 BD01     		.uleb128 0xbd
 38815 136db 77CE0000 		.long	0xce77
 38816 136df 00000000 		.long	.LLST530
 38817 136e3 00       		.byte	0
 38818 136e4 00       		.byte	0
 38819 136e5 CC01     		.uleb128 0xcc
 38820 136e7 66D50000 		.long	0xd566
 38821 136eb 00000000 		.quad	.LBB4331
 38821      00000000 
 38822 136f3 00000000 		.long	.Ldebug_ranges0+0x26a0
 38823 136f7 06       		.byte	0x6
 38824 136f8 1701     		.value	0x117
 38825 136fa BD01     		.uleb128 0xbd
 38826 136fc 7FD50000 		.long	0xd57f
GAS LISTING /tmp/ccmMnd7l.s 			page 996


 38827 13700 00000000 		.long	.LLST542
 38828 13704 BD01     		.uleb128 0xbd
 38829 13706 75D50000 		.long	0xd575
 38830 1370a 00000000 		.long	.LLST543
 38831 1370e CC01     		.uleb128 0xcc
 38832 13710 E4D40000 		.long	0xd4e4
 38833 13714 00000000 		.quad	.LBB4333
 38833      00000000 
 38834 1371c 00000000 		.long	.Ldebug_ranges0+0x26d0
 38835 13720 06       		.byte	0x6
 38836 13721 1E05     		.value	0x51e
 38837 13723 B701     		.uleb128 0xb7
 38838 13725 24D50000 		.long	0xd524
 38839 13729 BD01     		.uleb128 0xbd
 38840 1372b 17D50000 		.long	0xd517
 38841 1372f 00000000 		.long	.LLST542
 38842 13733 BD01     		.uleb128 0xbd
 38843 13735 0AD50000 		.long	0xd50a
 38844 13739 00000000 		.long	.LLST545
 38845 1373d CC01     		.uleb128 0xcc
 38846 1373f 9CD40000 		.long	0xd49c
 38847 13743 00000000 		.quad	.LBB4334
 38847      00000000 
 38848 1374b 00000000 		.long	.Ldebug_ranges0+0x26d0
 38849 1374f 2D       		.byte	0x2d
 38850 13750 7702     		.value	0x277
 38851 13752 B701     		.uleb128 0xb7
 38852 13754 C6D40000 		.long	0xd4c6
 38853 13758 B701     		.uleb128 0xb7
 38854 1375a B9D40000 		.long	0xd4b9
 38855 1375e B401     		.uleb128 0xb4
 38856 13760 00000000 		.long	.Ldebug_ranges0+0x26d0
 38857 13764 B901     		.uleb128 0xb9
 38858 13766 D5D40000 		.long	0xd4d5
 38859 1376a CC01     		.uleb128 0xcc
 38860 1376c 62D40000 		.long	0xd462
 38861 13770 00000000 		.quad	.LBB4336
 38861      00000000 
 38862 13778 00000000 		.long	.Ldebug_ranges0+0x26d0
 38863 1377c 2D       		.byte	0x2d
 38864 1377d 3802     		.value	0x238
 38865 1377f B701     		.uleb128 0xb7
 38866 13781 8CD40000 		.long	0xd48c
 38867 13785 B701     		.uleb128 0xb7
 38868 13787 7FD40000 		.long	0xd47f
 38869 1378b B401     		.uleb128 0xb4
 38870 1378d 00000000 		.long	.Ldebug_ranges0+0x26d0
 38871 13791 CC01     		.uleb128 0xcc
 38872 13793 0FD40000 		.long	0xd40f
 38873 13797 00000000 		.quad	.LBB4338
 38873      00000000 
 38874 1379f 00000000 		.long	.Ldebug_ranges0+0x26d0
 38875 137a3 2D       		.byte	0x2d
 38876 137a4 1702     		.value	0x217
 38877 137a6 B701     		.uleb128 0xb7
 38878 137a8 4FD40000 		.long	0xd44f
 38879 137ac B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 997


 38880 137ae 42D40000 		.long	0xd442
 38881 137b2 B701     		.uleb128 0xb7
 38882 137b4 35D40000 		.long	0xd435
 38883 137b8 CC01     		.uleb128 0xcc
 38884 137ba 93CE0000 		.long	0xce93
 38885 137be 00000000 		.quad	.LBB4339
 38885      00000000 
 38886 137c6 00000000 		.long	.Ldebug_ranges0+0x26d0
 38887 137ca 14       		.byte	0x14
 38888 137cb 1D03     		.value	0x31d
 38889 137cd B701     		.uleb128 0xb7
 38890 137cf D3CE0000 		.long	0xced3
 38891 137d3 B701     		.uleb128 0xb7
 38892 137d5 C6CE0000 		.long	0xcec6
 38893 137d9 BD01     		.uleb128 0xbd
 38894 137db B9CE0000 		.long	0xceb9
 38895 137df 00000000 		.long	.LLST546
 38896 137e3 B401     		.uleb128 0xb4
 38897 137e5 00000000 		.long	.Ldebug_ranges0+0x26d0
 38898 137e9 B901     		.uleb128 0xb9
 38899 137eb E2CE0000 		.long	0xcee2
 38900 137ef B401     		.uleb128 0xb4
 38901 137f1 00000000 		.long	.Ldebug_ranges0+0x26d0
 38902 137f5 BA01     		.uleb128 0xba
 38903 137f7 F1CE0000 		.long	0xcef1
 38904 137fb 00000000 		.long	.LLST547
 38905 137ff 00       		.byte	0
 38906 13800 00       		.byte	0
 38907 13801 00       		.byte	0
 38908 13802 00       		.byte	0
 38909 13803 00       		.byte	0
 38910 13804 00       		.byte	0
 38911 13805 00       		.byte	0
 38912 13806 00       		.byte	0
 38913 13807 00       		.byte	0
 38914 13808 00       		.byte	0
 38915 13809 00       		.byte	0
 38916 1380a CD01     		.uleb128 0xcd
 38917 1380c 00000000 		.quad	.LVL496
 38917      00000000 
 38918 13814 58E60000 		.long	0xe658
 38919 13818 00       		.byte	0
 38920 13819 BB01     		.uleb128 0xbb
 38921 1381b 00000000 		.quad	.LBB4355
 38921      00000000 
 38922 13823 26000000 		.quad	.LBE4355-.LBB4355
 38922      00000000 
 38923 1382b 67380100 		.long	0x13867
 38924 1382f D601     		.uleb128 0xd6
 38925 13831 6900     		.string	"i"
 38926 13833 16       		.byte	0x16
 38927 13834 44       		.byte	0x44
 38928 13835 73990000 		.long	0x9973
 38929 13839 00000000 		.long	.LLST548
 38930 1383d C001     		.uleb128 0xc0
 38931 1383f 00000000 		.quad	.LVL509
 38931      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 998


 38932 13847 DD500100 		.long	0x150dd
 38933 1384b C101     		.uleb128 0xc1
 38934 1384d 01       		.uleb128 0x1
 38935 1384e 55       		.byte	0x55
 38936 1384f 02       		.uleb128 0x2
 38937 13850 7F       		.byte	0x7f
 38938 13851 00       		.sleb128 0
 38939 13852 C101     		.uleb128 0xc1
 38940 13854 01       		.uleb128 0x1
 38941 13855 61       		.byte	0x61
 38942 13856 07       		.uleb128 0x7
 38943 13857 F4       		.byte	0xf4
 38944 13858 30       		.uleb128 0x30
 38945 13859 04       		.byte	0x4
 38946 1385a 0000803F 		.long	0x3f800000
 38947 1385e C101     		.uleb128 0xc1
 38948 13860 01       		.uleb128 0x1
 38949 13861 52       		.byte	0x52
 38950 13862 02       		.uleb128 0x2
 38951 13863 7E       		.byte	0x7e
 38952 13864 00       		.sleb128 0
 38953 13865 00       		.byte	0
 38954 13866 00       		.byte	0
 38955 13867 CA01     		.uleb128 0xca
 38956 13869 04E40000 		.long	0xe404
 38957 1386d 00000000 		.quad	.LBB4356
 38957      00000000 
 38958 13875 00000000 		.long	.Ldebug_ranges0+0x2700
 38959 13879 16       		.byte	0x16
 38960 1387a 43       		.byte	0x43
 38961 1387b E4380100 		.long	0x138e4
 38962 1387f BD01     		.uleb128 0xbd
 38963 13881 13E40000 		.long	0xe413
 38964 13885 00000000 		.long	.LLST549
 38965 13889 B401     		.uleb128 0xb4
 38966 1388b 00000000 		.long	.Ldebug_ranges0+0x2700
 38967 1388f B901     		.uleb128 0xb9
 38968 13891 1FE40000 		.long	0xe41f
 38969 13895 CF01     		.uleb128 0xcf
 38970 13897 71BE0000 		.long	0xbe71
 38971 1389b 00000000 		.quad	.LBB4358
 38971      00000000 
 38972 138a3 14000000 		.quad	.LBE4358-.LBB4358
 38972      00000000 
 38973 138ab 02       		.byte	0x2
 38974 138ac 39       		.byte	0x39
 38975 138ad C6380100 		.long	0x138c6
 38976 138b1 BD01     		.uleb128 0xbd
 38977 138b3 8ABE0000 		.long	0xbe8a
 38978 138b7 00000000 		.long	.LLST550
 38979 138bb BD01     		.uleb128 0xbd
 38980 138bd 80BE0000 		.long	0xbe80
 38981 138c1 00000000 		.long	.LLST551
 38982 138c5 00       		.byte	0
 38983 138c6 CD01     		.uleb128 0xcd
 38984 138c8 00000000 		.quad	.LVL513
 38984      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 999


 38985 138d0 58E60000 		.long	0xe658
 38986 138d4 CD01     		.uleb128 0xcd
 38987 138d6 00000000 		.quad	.LVL515
 38987      00000000 
 38988 138de 58E60000 		.long	0xe658
 38989 138e2 00       		.byte	0
 38990 138e3 00       		.byte	0
 38991 138e4 CA01     		.uleb128 0xca
 38992 138e6 2DE40000 		.long	0xe42d
 38993 138ea 00000000 		.quad	.LBB4362
 38993      00000000 
 38994 138f2 00000000 		.long	.Ldebug_ranges0+0x2730
 38995 138f6 16       		.byte	0x16
 38996 138f7 47       		.byte	0x47
 38997 138f8 36470100 		.long	0x14736
 38998 138fc BD01     		.uleb128 0xbd
 38999 138fe 3CE40000 		.long	0xe43c
 39000 13902 00000000 		.long	.LLST552
 39001 13906 C301     		.uleb128 0xc3
 39002 13908 00000000 		.long	.Ldebug_ranges0+0x2770
 39003 1390c 33460100 		.long	0x14633
 39004 13910 BA01     		.uleb128 0xba
 39005 13912 52E40000 		.long	0xe452
 39006 13916 00000000 		.long	.LLST553
 39007 1391a BA01     		.uleb128 0xba
 39008 1391c 5EE40000 		.long	0xe45e
 39009 13920 00000000 		.long	.LLST554
 39010 13924 CF01     		.uleb128 0xcf
 39011 13926 19DF0000 		.long	0xdf19
 39012 1392a 00000000 		.quad	.LBB4365
 39012      00000000 
 39013 13932 1D000000 		.quad	.LBE4365-.LBB4365
 39013      00000000 
 39014 1393a 02       		.byte	0x2
 39015 1393b 42       		.byte	0x42
 39016 1393c 5B390100 		.long	0x1395b
 39017 13940 BD01     		.uleb128 0xbd
 39018 13942 4EDF0000 		.long	0xdf4e
 39019 13946 00000000 		.long	.LLST555
 39020 1394a B701     		.uleb128 0xb7
 39021 1394c 42DF0000 		.long	0xdf42
 39022 13950 BD01     		.uleb128 0xbd
 39023 13952 36DF0000 		.long	0xdf36
 39024 13956 00000000 		.long	.LLST556
 39025 1395a 00       		.byte	0
 39026 1395b CA01     		.uleb128 0xca
 39027 1395d 5BDF0000 		.long	0xdf5b
 39028 13961 00000000 		.quad	.LBB4367
 39028      00000000 
 39029 13969 00000000 		.long	.Ldebug_ranges0+0x27b0
 39030 1396d 02       		.byte	0x2
 39031 1396e 45       		.byte	0x45
 39032 1396f 10400100 		.long	0x14010
 39033 13973 BD01     		.uleb128 0xbd
 39034 13975 7CDF0000 		.long	0xdf7c
 39035 13979 00000000 		.long	.LLST557
 39036 1397d BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccmMnd7l.s 			page 1000


 39037 1397f 6FDF0000 		.long	0xdf6f
 39038 13983 00000000 		.long	.LLST558
 39039 13987 CC01     		.uleb128 0xcc
 39040 13989 CDDE0000 		.long	0xdecd
 39041 1398d 00000000 		.quad	.LBB4368
 39041      00000000 
 39042 13995 00000000 		.long	.Ldebug_ranges0+0x27b0
 39043 13999 0C       		.byte	0xc
 39044 1399a 4D12     		.value	0x124d
 39045 1399c BD01     		.uleb128 0xbd
 39046 1399e F7DE0000 		.long	0xdef7
 39047 139a2 00000000 		.long	.LLST557
 39048 139a6 BD01     		.uleb128 0xbd
 39049 139a8 EADE0000 		.long	0xdeea
 39050 139ac 00000000 		.long	.LLST558
 39051 139b0 C201     		.uleb128 0xc2
 39052 139b2 B4DE0000 		.long	0xdeb4
 39053 139b6 00000000 		.quad	.LBB4370
 39053      00000000 
 39054 139be 00000000 		.long	.Ldebug_ranges0+0x2820
 39055 139c2 0C       		.byte	0xc
 39056 139c3 B007     		.value	0x7b0
 39057 139c5 D0390100 		.long	0x139d0
 39058 139c9 B701     		.uleb128 0xb7
 39059 139cb BFDE0000 		.long	0xdebf
 39060 139cf 00       		.byte	0
 39061 139d0 C201     		.uleb128 0xc2
 39062 139d2 52D70000 		.long	0xd752
 39063 139d6 00000000 		.quad	.LBB4376
 39063      00000000 
 39064 139de 00000000 		.long	.Ldebug_ranges0+0x2860
 39065 139e2 0C       		.byte	0xc
 39066 139e3 B207     		.value	0x7b2
 39067 139e5 B03F0100 		.long	0x13fb0
 39068 139e9 B701     		.uleb128 0xb7
 39069 139eb 7CD70000 		.long	0xd77c
 39070 139ef BD01     		.uleb128 0xbd
 39071 139f1 6FD70000 		.long	0xd76f
 39072 139f5 00000000 		.long	.LLST561
 39073 139f9 C201     		.uleb128 0xc2
 39074 139fb 6CE40000 		.long	0xe46c
 39075 139ff 00000000 		.quad	.LBB4378
 39075      00000000 
 39076 13a07 00000000 		.long	.Ldebug_ranges0+0x28c0
 39077 13a0b 0C       		.byte	0xc
 39078 13a0c 5C07     		.value	0x75c
 39079 13a0e 793C0100 		.long	0x13c79
 39080 13a12 B701     		.uleb128 0xb7
 39081 13a14 A3E40000 		.long	0xe4a3
 39082 13a18 BD01     		.uleb128 0xbd
 39083 13a1a 96E40000 		.long	0xe496
 39084 13a1e 00000000 		.long	.LLST562
 39085 13a22 BD01     		.uleb128 0xbd
 39086 13a24 89E40000 		.long	0xe489
 39087 13a28 00000000 		.long	.LLST563
 39088 13a2c B401     		.uleb128 0xb4
 39089 13a2e 00000000 		.long	.Ldebug_ranges0+0x28c0
GAS LISTING /tmp/ccmMnd7l.s 			page 1001


 39090 13a32 BA01     		.uleb128 0xba
 39091 13a34 B2E40000 		.long	0xe4b2
 39092 13a38 00000000 		.long	.LLST564
 39093 13a3c C401     		.uleb128 0xc4
 39094 13a3e 58D00000 		.long	0xd058
 39095 13a42 00000000 		.quad	.LBB4380
 39095      00000000 
 39096 13a4a 07000000 		.quad	.LBE4380-.LBB4380
 39096      00000000 
 39097 13a52 0C       		.byte	0xc
 39098 13a53 3407     		.value	0x734
 39099 13a55 6E3A0100 		.long	0x13a6e
 39100 13a59 BD01     		.uleb128 0xbd
 39101 13a5b 71D00000 		.long	0xd071
 39102 13a5f 00000000 		.long	.LLST565
 39103 13a63 BD01     		.uleb128 0xbd
 39104 13a65 67D00000 		.long	0xd067
 39105 13a69 00000000 		.long	.LLST566
 39106 13a6d 00       		.byte	0
 39107 13a6e C401     		.uleb128 0xc4
 39108 13a70 B5CB0000 		.long	0xcbb5
 39109 13a74 00000000 		.quad	.LBB4383
 39109      00000000 
 39110 13a7c 04000000 		.quad	.LBE4383-.LBB4383
 39110      00000000 
 39111 13a84 0C       		.byte	0xc
 39112 13a85 3607     		.value	0x736
 39113 13a87 A23A0100 		.long	0x13aa2
 39114 13a8b BD01     		.uleb128 0xbd
 39115 13a8d D6CB0000 		.long	0xcbd6
 39116 13a91 00000000 		.long	.LLST567
 39117 13a95 B701     		.uleb128 0xb7
 39118 13a97 ECCB0000 		.long	0xcbec
 39119 13a9b B701     		.uleb128 0xb7
 39120 13a9d E0CB0000 		.long	0xcbe0
 39121 13aa1 00       		.byte	0
 39122 13aa2 C201     		.uleb128 0xc2
 39123 13aa4 E8CC0000 		.long	0xcce8
 39124 13aa8 00000000 		.quad	.LBB4385
 39124      00000000 
 39125 13ab0 00000000 		.long	.Ldebug_ranges0+0x2900
 39126 13ab4 0C       		.byte	0xc
 39127 13ab5 3E07     		.value	0x73e
 39128 13ab7 313B0100 		.long	0x13b31
 39129 13abb BD01     		.uleb128 0xbd
 39130 13abd 05CD0000 		.long	0xcd05
 39131 13ac1 00000000 		.long	.LLST568
 39132 13ac5 B401     		.uleb128 0xb4
 39133 13ac7 00000000 		.long	.Ldebug_ranges0+0x2900
 39134 13acb BA01     		.uleb128 0xba
 39135 13acd 21CD0000 		.long	0xcd21
 39136 13ad1 00000000 		.long	.LLST569
 39137 13ad5 B901     		.uleb128 0xb9
 39138 13ad7 2ECD0000 		.long	0xcd2e
 39139 13adb C201     		.uleb128 0xc2
 39140 13add 53CC0000 		.long	0xcc53
 39141 13ae1 00000000 		.quad	.LBB4387
GAS LISTING /tmp/ccmMnd7l.s 			page 1002


 39141      00000000 
 39142 13ae9 00000000 		.long	.Ldebug_ranges0+0x2930
 39143 13aed 0C       		.byte	0xc
 39144 13aee 2307     		.value	0x723
 39145 13af0 0B3B0100 		.long	0x13b0b
 39146 13af4 B701     		.uleb128 0xb7
 39147 13af6 74CC0000 		.long	0xcc74
 39148 13afa BD01     		.uleb128 0xbd
 39149 13afc 7ECC0000 		.long	0xcc7e
 39150 13b00 00000000 		.long	.LLST570
 39151 13b04 B701     		.uleb128 0xb7
 39152 13b06 8ACC0000 		.long	0xcc8a
 39153 13b0a 00       		.byte	0
 39154 13b0b B601     		.uleb128 0xb6
 39155 13b0d CECC0000 		.long	0xccce
 39156 13b11 00000000 		.quad	.LBB4390
 39156      00000000 
 39157 13b19 04000000 		.quad	.LBE4390-.LBB4390
 39157      00000000 
 39158 13b21 0C       		.byte	0xc
 39159 13b22 2707     		.value	0x727
 39160 13b24 BD01     		.uleb128 0xbd
 39161 13b26 DDCC0000 		.long	0xccdd
 39162 13b2a 00000000 		.long	.LLST571
 39163 13b2e 00       		.byte	0
 39164 13b2f 00       		.byte	0
 39165 13b30 00       		.byte	0
 39166 13b31 B801     		.uleb128 0xb8
 39167 13b33 00000000 		.quad	.LBB4394
 39167      00000000 
 39168 13b3b 58000000 		.quad	.LBE4394-.LBB4394
 39168      00000000 
 39169 13b43 BA01     		.uleb128 0xba
 39170 13b45 C1E40000 		.long	0xe4c1
 39171 13b49 00000000 		.long	.LLST572
 39172 13b4d B601     		.uleb128 0xb6
 39173 13b4f 0DD70000 		.long	0xd70d
 39174 13b53 00000000 		.quad	.LBB4395
 39174      00000000 
 39175 13b5b 4F000000 		.quad	.LBE4395-.LBB4395
 39175      00000000 
 39176 13b63 0C       		.byte	0xc
 39177 13b64 3A07     		.value	0x73a
 39178 13b66 B701     		.uleb128 0xb7
 39179 13b68 44D70000 		.long	0xd744
 39180 13b6c B701     		.uleb128 0xb7
 39181 13b6e 37D70000 		.long	0xd737
 39182 13b72 B701     		.uleb128 0xb7
 39183 13b74 2AD70000 		.long	0xd72a
 39184 13b78 B601     		.uleb128 0xb6
 39185 13b7a 7CD60000 		.long	0xd67c
 39186 13b7e 00000000 		.quad	.LBB4396
 39186      00000000 
 39187 13b86 4F000000 		.quad	.LBE4396-.LBB4396
 39187      00000000 
 39188 13b8e 14       		.byte	0x14
 39189 13b8f A602     		.value	0x2a6
GAS LISTING /tmp/ccmMnd7l.s 			page 1003


 39190 13b91 B701     		.uleb128 0xb7
 39191 13b93 BDD60000 		.long	0xd6bd
 39192 13b97 B701     		.uleb128 0xb7
 39193 13b99 B0D60000 		.long	0xd6b0
 39194 13b9d B701     		.uleb128 0xb7
 39195 13b9f A3D60000 		.long	0xd6a3
 39196 13ba3 B601     		.uleb128 0xb6
 39197 13ba5 FBD50000 		.long	0xd5fb
 39198 13ba9 00000000 		.quad	.LBB4397
 39198      00000000 
 39199 13bb1 4F000000 		.quad	.LBE4397-.LBB4397
 39199      00000000 
 39200 13bb9 14       		.byte	0x14
 39201 13bba 5F02     		.value	0x25f
 39202 13bbc BD01     		.uleb128 0xbd
 39203 13bbe 3CD60000 		.long	0xd63c
 39204 13bc2 00000000 		.long	.LLST573
 39205 13bc6 BD01     		.uleb128 0xbd
 39206 13bc8 2FD60000 		.long	0xd62f
 39207 13bcc 00000000 		.long	.LLST574
 39208 13bd0 B701     		.uleb128 0xb7
 39209 13bd2 22D60000 		.long	0xd622
 39210 13bd6 B801     		.uleb128 0xb8
 39211 13bd8 00000000 		.quad	.LBB4398
 39211      00000000 
 39212 13be0 4F000000 		.quad	.LBE4398-.LBB4398
 39212      00000000 
 39213 13be8 BA01     		.uleb128 0xba
 39214 13bea 4BD60000 		.long	0xd64b
 39215 13bee 00000000 		.long	.LLST575
 39216 13bf2 B601     		.uleb128 0xb6
 39217 13bf4 D1E40000 		.long	0xe4d1
 39218 13bf8 00000000 		.quad	.LBB4399
 39218      00000000 
 39219 13c00 4F000000 		.quad	.LBE4399-.LBB4399
 39219      00000000 
 39220 13c08 14       		.byte	0x14
 39221 13c09 5602     		.value	0x256
 39222 13c0b BD01     		.uleb128 0xbd
 39223 13c0d FFE40000 		.long	0xe4ff
 39224 13c11 00000000 		.long	.LLST573
 39225 13c15 BD01     		.uleb128 0xbd
 39226 13c17 F2E40000 		.long	0xe4f2
 39227 13c1b 00000000 		.long	.LLST574
 39228 13c1f B701     		.uleb128 0xb7
 39229 13c21 E5E40000 		.long	0xe4e5
 39230 13c25 B801     		.uleb128 0xb8
 39231 13c27 00000000 		.quad	.LBB4400
 39231      00000000 
 39232 13c2f 4F000000 		.quad	.LBE4400-.LBB4400
 39232      00000000 
 39233 13c37 BA01     		.uleb128 0xba
 39234 13c39 0EE50000 		.long	0xe50e
 39235 13c3d 00000000 		.long	.LLST578
 39236 13c41 C001     		.uleb128 0xc0
 39237 13c43 00000000 		.quad	.LVL654
 39237      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1004


 39238 13c4b 3F500100 		.long	0x1503f
 39239 13c4f C101     		.uleb128 0xc1
 39240 13c51 01       		.uleb128 0x1
 39241 13c52 55       		.byte	0x55
 39242 13c53 06       		.uleb128 0x6
 39243 13c54 91       		.byte	0x91
 39244 13c55 987E     		.sleb128 -232
 39245 13c57 06       		.byte	0x6
 39246 13c58 23       		.byte	0x23
 39247 13c59 08       		.uleb128 0x8
 39248 13c5a C101     		.uleb128 0xc1
 39249 13c5c 01       		.uleb128 0x1
 39250 13c5d 54       		.byte	0x54
 39251 13c5e 04       		.uleb128 0x4
 39252 13c5f 91       		.byte	0x91
 39253 13c60 987E     		.sleb128 -232
 39254 13c62 06       		.byte	0x6
 39255 13c63 C101     		.uleb128 0xc1
 39256 13c65 01       		.uleb128 0x1
 39257 13c66 51       		.byte	0x51
 39258 13c67 07       		.uleb128 0x7
 39259 13c68 73       		.byte	0x73
 39260 13c69 00       		.sleb128 0
 39261 13c6a 91       		.byte	0x91
 39262 13c6b 987E     		.sleb128 -232
 39263 13c6d 06       		.byte	0x6
 39264 13c6e 1C       		.byte	0x1c
 39265 13c6f 00       		.byte	0
 39266 13c70 00       		.byte	0
 39267 13c71 00       		.byte	0
 39268 13c72 00       		.byte	0
 39269 13c73 00       		.byte	0
 39270 13c74 00       		.byte	0
 39271 13c75 00       		.byte	0
 39272 13c76 00       		.byte	0
 39273 13c77 00       		.byte	0
 39274 13c78 00       		.byte	0
 39275 13c79 C201     		.uleb128 0xc2
 39276 13c7b 3DCD0000 		.long	0xcd3d
 39277 13c7f 00000000 		.quad	.LBB4406
 39277      00000000 
 39278 13c87 00000000 		.long	.Ldebug_ranges0+0x2960
 39279 13c8b 0C       		.byte	0xc
 39280 13c8c 5D07     		.value	0x75d
 39281 13c8e 373D0100 		.long	0x13d37
 39282 13c92 B701     		.uleb128 0xb7
 39283 13c94 67CD0000 		.long	0xcd67
 39284 13c98 B701     		.uleb128 0xb7
 39285 13c9a 5ACD0000 		.long	0xcd5a
 39286 13c9e B401     		.uleb128 0xb4
 39287 13ca0 00000000 		.long	.Ldebug_ranges0+0x2960
 39288 13ca4 B901     		.uleb128 0xb9
 39289 13ca6 83CD0000 		.long	0xcd83
 39290 13caa CC01     		.uleb128 0xcc
 39291 13cac E8CC0000 		.long	0xcce8
 39292 13cb0 00000000 		.quad	.LBB4408
 39292      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1005


 39293 13cb8 00000000 		.long	.Ldebug_ranges0+0x2990
 39294 13cbc 0C       		.byte	0xc
 39295 13cbd 4A07     		.value	0x74a
 39296 13cbf BD01     		.uleb128 0xbd
 39297 13cc1 05CD0000 		.long	0xcd05
 39298 13cc5 00000000 		.long	.LLST579
 39299 13cc9 B401     		.uleb128 0xb4
 39300 13ccb 00000000 		.long	.Ldebug_ranges0+0x2990
 39301 13ccf BA01     		.uleb128 0xba
 39302 13cd1 21CD0000 		.long	0xcd21
 39303 13cd5 00000000 		.long	.LLST580
 39304 13cd9 B901     		.uleb128 0xb9
 39305 13cdb 2ECD0000 		.long	0xcd2e
 39306 13cdf C201     		.uleb128 0xc2
 39307 13ce1 53CC0000 		.long	0xcc53
 39308 13ce5 00000000 		.quad	.LBB4410
 39308      00000000 
 39309 13ced 00000000 		.long	.Ldebug_ranges0+0x29d0
 39310 13cf1 0C       		.byte	0xc
 39311 13cf2 2307     		.value	0x723
 39312 13cf4 0F3D0100 		.long	0x13d0f
 39313 13cf8 B701     		.uleb128 0xb7
 39314 13cfa 74CC0000 		.long	0xcc74
 39315 13cfe BD01     		.uleb128 0xbd
 39316 13d00 7ECC0000 		.long	0xcc7e
 39317 13d04 00000000 		.long	.LLST581
 39318 13d08 B701     		.uleb128 0xb7
 39319 13d0a 8ACC0000 		.long	0xcc8a
 39320 13d0e 00       		.byte	0
 39321 13d0f B601     		.uleb128 0xb6
 39322 13d11 CECC0000 		.long	0xccce
 39323 13d15 00000000 		.quad	.LBB4413
 39323      00000000 
 39324 13d1d 04000000 		.quad	.LBE4413-.LBB4413
 39324      00000000 
 39325 13d25 0C       		.byte	0xc
 39326 13d26 2707     		.value	0x727
 39327 13d28 BD01     		.uleb128 0xbd
 39328 13d2a DDCC0000 		.long	0xccdd
 39329 13d2e 00000000 		.long	.LLST582
 39330 13d32 00       		.byte	0
 39331 13d33 00       		.byte	0
 39332 13d34 00       		.byte	0
 39333 13d35 00       		.byte	0
 39334 13d36 00       		.byte	0
 39335 13d37 CC01     		.uleb128 0xcc
 39336 13d39 6CE40000 		.long	0xe46c
 39337 13d3d 00000000 		.quad	.LBB4423
 39337      00000000 
 39338 13d45 00000000 		.long	.Ldebug_ranges0+0x2a00
 39339 13d49 0C       		.byte	0xc
 39340 13d4a 6107     		.value	0x761
 39341 13d4c B701     		.uleb128 0xb7
 39342 13d4e A3E40000 		.long	0xe4a3
 39343 13d52 BD01     		.uleb128 0xbd
 39344 13d54 96E40000 		.long	0xe496
 39345 13d58 00000000 		.long	.LLST583
GAS LISTING /tmp/ccmMnd7l.s 			page 1006


 39346 13d5c BD01     		.uleb128 0xbd
 39347 13d5e 89E40000 		.long	0xe489
 39348 13d62 00000000 		.long	.LLST584
 39349 13d66 B401     		.uleb128 0xb4
 39350 13d68 00000000 		.long	.Ldebug_ranges0+0x2a00
 39351 13d6c BA01     		.uleb128 0xba
 39352 13d6e B2E40000 		.long	0xe4b2
 39353 13d72 00000000 		.long	.LLST585
 39354 13d76 C401     		.uleb128 0xc4
 39355 13d78 58D00000 		.long	0xd058
 39356 13d7c 00000000 		.quad	.LBB4425
 39356      00000000 
 39357 13d84 04000000 		.quad	.LBE4425-.LBB4425
 39357      00000000 
 39358 13d8c 0C       		.byte	0xc
 39359 13d8d 3407     		.value	0x734
 39360 13d8f A83D0100 		.long	0x13da8
 39361 13d93 BD01     		.uleb128 0xbd
 39362 13d95 71D00000 		.long	0xd071
 39363 13d99 00000000 		.long	.LLST586
 39364 13d9d BD01     		.uleb128 0xbd
 39365 13d9f 67D00000 		.long	0xd067
 39366 13da3 00000000 		.long	.LLST587
 39367 13da7 00       		.byte	0
 39368 13da8 C201     		.uleb128 0xc2
 39369 13daa B5CB0000 		.long	0xcbb5
 39370 13dae 00000000 		.quad	.LBB4428
 39370      00000000 
 39371 13db6 00000000 		.long	.Ldebug_ranges0+0x2a30
 39372 13dba 0C       		.byte	0xc
 39373 13dbb 3607     		.value	0x736
 39374 13dbd D83D0100 		.long	0x13dd8
 39375 13dc1 BD01     		.uleb128 0xbd
 39376 13dc3 D6CB0000 		.long	0xcbd6
 39377 13dc7 00000000 		.long	.LLST588
 39378 13dcb B701     		.uleb128 0xb7
 39379 13dcd ECCB0000 		.long	0xcbec
 39380 13dd1 B701     		.uleb128 0xb7
 39381 13dd3 E0CB0000 		.long	0xcbe0
 39382 13dd7 00       		.byte	0
 39383 13dd8 C201     		.uleb128 0xc2
 39384 13dda E8CC0000 		.long	0xcce8
 39385 13dde 00000000 		.quad	.LBB4431
 39385      00000000 
 39386 13de6 00000000 		.long	.Ldebug_ranges0+0x2a60
 39387 13dea 0C       		.byte	0xc
 39388 13deb 3E07     		.value	0x73e
 39389 13ded 673E0100 		.long	0x13e67
 39390 13df1 BD01     		.uleb128 0xbd
 39391 13df3 05CD0000 		.long	0xcd05
 39392 13df7 00000000 		.long	.LLST589
 39393 13dfb B401     		.uleb128 0xb4
 39394 13dfd 00000000 		.long	.Ldebug_ranges0+0x2a60
 39395 13e01 BA01     		.uleb128 0xba
 39396 13e03 21CD0000 		.long	0xcd21
 39397 13e07 00000000 		.long	.LLST590
 39398 13e0b B901     		.uleb128 0xb9
GAS LISTING /tmp/ccmMnd7l.s 			page 1007


 39399 13e0d 2ECD0000 		.long	0xcd2e
 39400 13e11 C201     		.uleb128 0xc2
 39401 13e13 53CC0000 		.long	0xcc53
 39402 13e17 00000000 		.quad	.LBB4433
 39402      00000000 
 39403 13e1f 00000000 		.long	.Ldebug_ranges0+0x2a90
 39404 13e23 0C       		.byte	0xc
 39405 13e24 2307     		.value	0x723
 39406 13e26 413E0100 		.long	0x13e41
 39407 13e2a B701     		.uleb128 0xb7
 39408 13e2c 74CC0000 		.long	0xcc74
 39409 13e30 BD01     		.uleb128 0xbd
 39410 13e32 7ECC0000 		.long	0xcc7e
 39411 13e36 00000000 		.long	.LLST591
 39412 13e3a B701     		.uleb128 0xb7
 39413 13e3c 8ACC0000 		.long	0xcc8a
 39414 13e40 00       		.byte	0
 39415 13e41 B601     		.uleb128 0xb6
 39416 13e43 CECC0000 		.long	0xccce
 39417 13e47 00000000 		.quad	.LBB4436
 39417      00000000 
 39418 13e4f 04000000 		.quad	.LBE4436-.LBB4436
 39418      00000000 
 39419 13e57 0C       		.byte	0xc
 39420 13e58 2707     		.value	0x727
 39421 13e5a BD01     		.uleb128 0xbd
 39422 13e5c DDCC0000 		.long	0xccdd
 39423 13e60 00000000 		.long	.LLST592
 39424 13e64 00       		.byte	0
 39425 13e65 00       		.byte	0
 39426 13e66 00       		.byte	0
 39427 13e67 B801     		.uleb128 0xb8
 39428 13e69 00000000 		.quad	.LBB4441
 39428      00000000 
 39429 13e71 41000000 		.quad	.LBE4441-.LBB4441
 39429      00000000 
 39430 13e79 BA01     		.uleb128 0xba
 39431 13e7b C1E40000 		.long	0xe4c1
 39432 13e7f 00000000 		.long	.LLST593
 39433 13e83 B601     		.uleb128 0xb6
 39434 13e85 0DD70000 		.long	0xd70d
 39435 13e89 00000000 		.quad	.LBB4442
 39435      00000000 
 39436 13e91 3B000000 		.quad	.LBE4442-.LBB4442
 39436      00000000 
 39437 13e99 0C       		.byte	0xc
 39438 13e9a 3A07     		.value	0x73a
 39439 13e9c B701     		.uleb128 0xb7
 39440 13e9e 44D70000 		.long	0xd744
 39441 13ea2 B701     		.uleb128 0xb7
 39442 13ea4 37D70000 		.long	0xd737
 39443 13ea8 B701     		.uleb128 0xb7
 39444 13eaa 2AD70000 		.long	0xd72a
 39445 13eae B601     		.uleb128 0xb6
 39446 13eb0 7CD60000 		.long	0xd67c
 39447 13eb4 00000000 		.quad	.LBB4443
 39447      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1008


 39448 13ebc 3B000000 		.quad	.LBE4443-.LBB4443
 39448      00000000 
 39449 13ec4 14       		.byte	0x14
 39450 13ec5 A602     		.value	0x2a6
 39451 13ec7 B701     		.uleb128 0xb7
 39452 13ec9 BDD60000 		.long	0xd6bd
 39453 13ecd B701     		.uleb128 0xb7
 39454 13ecf B0D60000 		.long	0xd6b0
 39455 13ed3 B701     		.uleb128 0xb7
 39456 13ed5 A3D60000 		.long	0xd6a3
 39457 13ed9 B601     		.uleb128 0xb6
 39458 13edb FBD50000 		.long	0xd5fb
 39459 13edf 00000000 		.quad	.LBB4444
 39459      00000000 
 39460 13ee7 3B000000 		.quad	.LBE4444-.LBB4444
 39460      00000000 
 39461 13eef 14       		.byte	0x14
 39462 13ef0 5F02     		.value	0x25f
 39463 13ef2 BD01     		.uleb128 0xbd
 39464 13ef4 3CD60000 		.long	0xd63c
 39465 13ef8 00000000 		.long	.LLST594
 39466 13efc BD01     		.uleb128 0xbd
 39467 13efe 2FD60000 		.long	0xd62f
 39468 13f02 00000000 		.long	.LLST595
 39469 13f06 B701     		.uleb128 0xb7
 39470 13f08 22D60000 		.long	0xd622
 39471 13f0c B801     		.uleb128 0xb8
 39472 13f0e 00000000 		.quad	.LBB4445
 39472      00000000 
 39473 13f16 3B000000 		.quad	.LBE4445-.LBB4445
 39473      00000000 
 39474 13f1e BA01     		.uleb128 0xba
 39475 13f20 4BD60000 		.long	0xd64b
 39476 13f24 00000000 		.long	.LLST596
 39477 13f28 B601     		.uleb128 0xb6
 39478 13f2a D1E40000 		.long	0xe4d1
 39479 13f2e 00000000 		.quad	.LBB4446
 39479      00000000 
 39480 13f36 3B000000 		.quad	.LBE4446-.LBB4446
 39480      00000000 
 39481 13f3e 14       		.byte	0x14
 39482 13f3f 5602     		.value	0x256
 39483 13f41 BD01     		.uleb128 0xbd
 39484 13f43 FFE40000 		.long	0xe4ff
 39485 13f47 00000000 		.long	.LLST594
 39486 13f4b BD01     		.uleb128 0xbd
 39487 13f4d F2E40000 		.long	0xe4f2
 39488 13f51 00000000 		.long	.LLST595
 39489 13f55 B701     		.uleb128 0xb7
 39490 13f57 E5E40000 		.long	0xe4e5
 39491 13f5b B801     		.uleb128 0xb8
 39492 13f5d 00000000 		.quad	.LBB4447
 39492      00000000 
 39493 13f65 3B000000 		.quad	.LBE4447-.LBB4447
 39493      00000000 
 39494 13f6d BA01     		.uleb128 0xba
 39495 13f6f 0EE50000 		.long	0xe50e
GAS LISTING /tmp/ccmMnd7l.s 			page 1009


 39496 13f73 00000000 		.long	.LLST599
 39497 13f77 C001     		.uleb128 0xc0
 39498 13f79 00000000 		.quad	.LVL679
 39498      00000000 
 39499 13f81 3F500100 		.long	0x1503f
 39500 13f85 C101     		.uleb128 0xc1
 39501 13f87 01       		.uleb128 0x1
 39502 13f88 55       		.byte	0x55
 39503 13f89 06       		.uleb128 0x6
 39504 13f8a 91       		.byte	0x91
 39505 13f8b 987E     		.sleb128 -232
 39506 13f8d 06       		.byte	0x6
 39507 13f8e 23       		.byte	0x23
 39508 13f8f 08       		.uleb128 0x8
 39509 13f90 C101     		.uleb128 0xc1
 39510 13f92 01       		.uleb128 0x1
 39511 13f93 54       		.byte	0x54
 39512 13f94 04       		.uleb128 0x4
 39513 13f95 91       		.byte	0x91
 39514 13f96 987E     		.sleb128 -232
 39515 13f98 06       		.byte	0x6
 39516 13f99 C101     		.uleb128 0xc1
 39517 13f9b 01       		.uleb128 0x1
 39518 13f9c 51       		.byte	0x51
 39519 13f9d 07       		.uleb128 0x7
 39520 13f9e 73       		.byte	0x73
 39521 13f9f 00       		.sleb128 0
 39522 13fa0 91       		.byte	0x91
 39523 13fa1 987E     		.sleb128 -232
 39524 13fa3 06       		.byte	0x6
 39525 13fa4 1C       		.byte	0x1c
 39526 13fa5 00       		.byte	0
 39527 13fa6 00       		.byte	0
 39528 13fa7 00       		.byte	0
 39529 13fa8 00       		.byte	0
 39530 13fa9 00       		.byte	0
 39531 13faa 00       		.byte	0
 39532 13fab 00       		.byte	0
 39533 13fac 00       		.byte	0
 39534 13fad 00       		.byte	0
 39535 13fae 00       		.byte	0
 39536 13faf 00       		.byte	0
 39537 13fb0 C001     		.uleb128 0xc0
 39538 13fb2 00000000 		.quad	.LVL524
 39538      00000000 
 39539 13fba 18020100 		.long	0x10218
 39540 13fbe C101     		.uleb128 0xc1
 39541 13fc0 01       		.uleb128 0x1
 39542 13fc1 55       		.byte	0x55
 39543 13fc2 04       		.uleb128 0x4
 39544 13fc3 91       		.byte	0x91
 39545 13fc4 987E     		.sleb128 -232
 39546 13fc6 06       		.byte	0x6
 39547 13fc7 C101     		.uleb128 0xc1
 39548 13fc9 01       		.uleb128 0x1
 39549 13fca 54       		.byte	0x54
 39550 13fcb 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1010


 39551 13fcc 76       		.byte	0x76
 39552 13fcd 00       		.sleb128 0
 39553 13fce C101     		.uleb128 0xc1
 39554 13fd0 01       		.uleb128 0x1
 39555 13fd1 51       		.byte	0x51
 39556 13fd2 3A       		.uleb128 0x3a
 39557 13fd3 08       		.byte	0x8
 39558 13fd4 3F       		.byte	0x3f
 39559 13fd5 08       		.byte	0x8
 39560 13fd6 3F       		.byte	0x3f
 39561 13fd7 73       		.byte	0x73
 39562 13fd8 00       		.sleb128 0
 39563 13fd9 33       		.byte	0x33
 39564 13fda 26       		.byte	0x26
 39565 13fdb 12       		.byte	0x12
 39566 13fdc 28       		.byte	0x28
 39567 13fdd 0600     		.value	0x6
 39568 13fdf 13       		.byte	0x13
 39569 13fe0 08       		.byte	0x8
 39570 13fe1 40       		.byte	0x40
 39571 13fe2 2F       		.byte	0x2f
 39572 13fe3 1A00     		.value	0x1a
 39573 13fe5 30       		.byte	0x30
 39574 13fe6 16       		.byte	0x16
 39575 13fe7 12       		.byte	0x12
 39576 13fe8 0E       		.byte	0xe
 39577 13fe9 00000000 		.quad	0x8000000000000000
 39577      00000080 
 39578 13ff1 1A       		.byte	0x1a
 39579 13ff2 28       		.byte	0x28
 39580 13ff3 0900     		.value	0x9
 39581 13ff5 31       		.byte	0x31
 39582 13ff6 24       		.byte	0x24
 39583 13ff7 16       		.byte	0x16
 39584 13ff8 23       		.byte	0x23
 39585 13ff9 01       		.uleb128 0x1
 39586 13ffa 16       		.byte	0x16
 39587 13ffb 2F       		.byte	0x2f
 39588 13ffc E9FF     		.value	0xffe9
 39589 13ffe 13       		.byte	0x13
 39590 13fff 96       		.byte	0x96
 39591 14000 1C       		.byte	0x1c
 39592 14001 08       		.byte	0x8
 39593 14002 3F       		.byte	0x3f
 39594 14003 27       		.byte	0x27
 39595 14004 08       		.byte	0x8
 39596 14005 20       		.byte	0x20
 39597 14006 24       		.byte	0x24
 39598 14007 08       		.byte	0x8
 39599 14008 20       		.byte	0x20
 39600 14009 26       		.byte	0x26
 39601 1400a 1C       		.byte	0x1c
 39602 1400b 31       		.byte	0x31
 39603 1400c 24       		.byte	0x24
 39604 1400d 00       		.byte	0
 39605 1400e 00       		.byte	0
 39606 1400f 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1011


 39607 14010 CA01     		.uleb128 0xca
 39608 14012 48B70000 		.long	0xb748
 39609 14016 00000000 		.quad	.LBB4473
 39609      00000000 
 39610 1401e 00000000 		.long	.Ldebug_ranges0+0x2ac0
 39611 14022 02       		.byte	0x2
 39612 14023 46       		.byte	0x46
 39613 14024 3D400100 		.long	0x1403d
 39614 14028 BD01     		.uleb128 0xbd
 39615 1402a 57B70000 		.long	0xb757
 39616 1402e 00000000 		.long	.LLST600
 39617 14032 BD01     		.uleb128 0xbd
 39618 14034 57B70000 		.long	0xb757
 39619 14038 00000000 		.long	.LLST600
 39620 1403c 00       		.byte	0
 39621 1403d CA01     		.uleb128 0xca
 39622 1403f 58B50000 		.long	0xb558
 39623 14043 00000000 		.quad	.LBB4477
 39623      00000000 
 39624 1404b 00000000 		.long	.Ldebug_ranges0+0x2b00
 39625 1404f 02       		.byte	0x2
 39626 14050 47       		.byte	0x47
 39627 14051 89400100 		.long	0x14089
 39628 14055 B701     		.uleb128 0xb7
 39629 14057 6CB50000 		.long	0xb56c
 39630 1405b BD01     		.uleb128 0xbd
 39631 1405d 79B50000 		.long	0xb579
 39632 14061 00000000 		.long	.LLST602
 39633 14065 C001     		.uleb128 0xc0
 39634 14067 00000000 		.quad	.LVL553
 39634      00000000 
 39635 1406f 65800000 		.long	0x8065
 39636 14073 C101     		.uleb128 0xc1
 39637 14075 01       		.uleb128 0x1
 39638 14076 54       		.byte	0x54
 39639 14077 09       		.uleb128 0x9
 39640 14078 03       		.byte	0x3
 39641 14079 00000000 		.quad	.LC14
 39641      00000000 
 39642 14081 C101     		.uleb128 0xc1
 39643 14083 01       		.uleb128 0x1
 39644 14084 51       		.byte	0x51
 39645 14085 01       		.uleb128 0x1
 39646 14086 44       		.byte	0x44
 39647 14087 00       		.byte	0
 39648 14088 00       		.byte	0
 39649 14089 CA01     		.uleb128 0xca
 39650 1408b A0DF0000 		.long	0xdfa0
 39651 1408f 00000000 		.quad	.LBB4487
 39651      00000000 
 39652 14097 00000000 		.long	.Ldebug_ranges0+0x2b50
 39653 1409b 02       		.byte	0x2
 39654 1409c 47       		.byte	0x47
 39655 1409d E0410100 		.long	0x141e0
 39656 140a1 B701     		.uleb128 0xb7
 39657 140a3 B9DF0000 		.long	0xdfb9
 39658 140a7 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 1012


 39659 140a9 AFDF0000 		.long	0xdfaf
 39660 140ad CE01     		.uleb128 0xce
 39661 140af 1DE50000 		.long	0xe51d
 39662 140b3 00000000 		.quad	.LBB4489
 39662      00000000 
 39663 140bb 0E000000 		.quad	.LBE4489-.LBB4489
 39663      00000000 
 39664 140c3 08       		.byte	0x8
 39665 140c4 84       		.byte	0x84
 39666 140c5 BD01     		.uleb128 0xbd
 39667 140c7 28E50000 		.long	0xe528
 39668 140cb 00000000 		.long	.LLST603
 39669 140cf B601     		.uleb128 0xb6
 39670 140d1 08B60000 		.long	0xb608
 39671 140d5 00000000 		.quad	.LBB4490
 39671      00000000 
 39672 140dd 0E000000 		.quad	.LBE4490-.LBB4490
 39672      00000000 
 39673 140e5 15       		.byte	0x15
 39674 140e6 C003     		.value	0x3c0
 39675 140e8 BD01     		.uleb128 0xbd
 39676 140ea 2EB60000 		.long	0xb62e
 39677 140ee 00000000 		.long	.LLST604
 39678 140f2 BD01     		.uleb128 0xbd
 39679 140f4 21B60000 		.long	0xb621
 39680 140f8 00000000 		.long	.LLST605
 39681 140fc BD01     		.uleb128 0xbd
 39682 140fe 17B60000 		.long	0xb617
 39683 14102 00000000 		.long	.LLST603
 39684 14106 B801     		.uleb128 0xb8
 39685 14108 00000000 		.quad	.LBB4491
 39685      00000000 
 39686 14110 0E000000 		.quad	.LBE4491-.LBB4491
 39686      00000000 
 39687 14118 BA01     		.uleb128 0xba
 39688 1411a 3DB60000 		.long	0xb63d
 39689 1411e 00000000 		.long	.LLST607
 39690 14122 C401     		.uleb128 0xc4
 39691 14124 B0B50000 		.long	0xb5b0
 39692 14128 00000000 		.quad	.LBB4492
 39692      00000000 
 39693 14130 08000000 		.quad	.LBE4492-.LBB4492
 39693      00000000 
 39694 14138 15       		.byte	0x15
 39695 14139 5602     		.value	0x256
 39696 1413b 81410100 		.long	0x14181
 39697 1413f BD01     		.uleb128 0xbd
 39698 14141 C7B50000 		.long	0xb5c7
 39699 14145 00000000 		.long	.LLST608
 39700 14149 BD01     		.uleb128 0xbd
 39701 1414b BBB50000 		.long	0xb5bb
 39702 1414f 00000000 		.long	.LLST609
 39703 14153 CE01     		.uleb128 0xce
 39704 14155 C6B40000 		.long	0xb4c6
 39705 14159 00000000 		.quad	.LBB4493
 39705      00000000 
 39706 14161 08000000 		.quad	.LBE4493-.LBB4493
GAS LISTING /tmp/ccmMnd7l.s 			page 1013


 39706      00000000 
 39707 14169 15       		.byte	0x15
 39708 1416a 60       		.byte	0x60
 39709 1416b BD01     		.uleb128 0xbd
 39710 1416d DDB40000 		.long	0xb4dd
 39711 14171 00000000 		.long	.LLST608
 39712 14175 BD01     		.uleb128 0xbd
 39713 14177 D1B40000 		.long	0xb4d1
 39714 1417b 00000000 		.long	.LLST607
 39715 1417f 00       		.byte	0
 39716 14180 00       		.byte	0
 39717 14181 B601     		.uleb128 0xb6
 39718 14183 D9B50000 		.long	0xb5d9
 39719 14187 00000000 		.quad	.LBB4495
 39719      00000000 
 39720 1418f 06000000 		.quad	.LBE4495-.LBB4495
 39720      00000000 
 39721 14197 15       		.byte	0x15
 39722 14198 5702     		.value	0x257
 39723 1419a BD01     		.uleb128 0xbd
 39724 1419c F0B50000 		.long	0xb5f0
 39725 141a0 00000000 		.long	.LLST605
 39726 141a4 BD01     		.uleb128 0xbd
 39727 141a6 E4B50000 		.long	0xb5e4
 39728 141aa 00000000 		.long	.LLST609
 39729 141ae CE01     		.uleb128 0xce
 39730 141b0 A2B40000 		.long	0xb4a2
 39731 141b4 00000000 		.quad	.LBB4497
 39731      00000000 
 39732 141bc 06000000 		.quad	.LBE4497-.LBB4497
 39732      00000000 
 39733 141c4 15       		.byte	0x15
 39734 141c5 5C       		.byte	0x5c
 39735 141c6 BD01     		.uleb128 0xbd
 39736 141c8 B9B40000 		.long	0xb4b9
 39737 141cc 00000000 		.long	.LLST605
 39738 141d0 BD01     		.uleb128 0xbd
 39739 141d2 ADB40000 		.long	0xb4ad
 39740 141d6 00000000 		.long	.LLST615
 39741 141da 00       		.byte	0
 39742 141db 00       		.byte	0
 39743 141dc 00       		.byte	0
 39744 141dd 00       		.byte	0
 39745 141de 00       		.byte	0
 39746 141df 00       		.byte	0
 39747 141e0 CA01     		.uleb128 0xca
 39748 141e2 8FB60000 		.long	0xb68f
 39749 141e6 00000000 		.quad	.LBB4501
 39749      00000000 
 39750 141ee 00000000 		.long	.Ldebug_ranges0+0x2b90
 39751 141f2 02       		.byte	0x2
 39752 141f3 47       		.byte	0x47
 39753 141f4 2F420100 		.long	0x1422f
 39754 141f8 BD01     		.uleb128 0xbd
 39755 141fa A8B60000 		.long	0xb6a8
 39756 141fe 00000000 		.long	.LLST616
 39757 14202 B701     		.uleb128 0xb7
GAS LISTING /tmp/ccmMnd7l.s 			page 1014


 39758 14204 9EB60000 		.long	0xb69e
 39759 14208 C001     		.uleb128 0xc0
 39760 1420a 00000000 		.quad	.LVL558
 39760      00000000 
 39761 14212 94290000 		.long	0x2994
 39762 14216 C101     		.uleb128 0xc1
 39763 14218 01       		.uleb128 0x1
 39764 14219 61       		.byte	0x61
 39765 1421a 12       		.uleb128 0x12
 39766 1421b 91       		.byte	0x91
 39767 1421c 987E     		.sleb128 -232
 39768 1421e F6       		.byte	0xf6
 39769 1421f 08       		.byte	0x8
 39770 14220 29       		.uleb128 0x29
 39771 14221 F4       		.byte	0xf4
 39772 14222 29       		.uleb128 0x29
 39773 14223 08       		.byte	0x8
 39774 14224 00000000 		.long	0
 39775 14228 00408F40 		.long	0x408f4000
 39776 1422c 1E       		.byte	0x1e
 39777 1422d 00       		.byte	0
 39778 1422e 00       		.byte	0
 39779 1422f CA01     		.uleb128 0xca
 39780 14231 58B50000 		.long	0xb558
 39781 14235 00000000 		.quad	.LBB4508
 39781      00000000 
 39782 1423d 00000000 		.long	.Ldebug_ranges0+0x2bd0
 39783 14241 02       		.byte	0x2
 39784 14242 47       		.byte	0x47
 39785 14243 86420100 		.long	0x14286
 39786 14247 BD01     		.uleb128 0xbd
 39787 14249 79B50000 		.long	0xb579
 39788 1424d 00000000 		.long	.LLST617
 39789 14251 BD01     		.uleb128 0xbd
 39790 14253 6CB50000 		.long	0xb56c
 39791 14257 00000000 		.long	.LLST618
 39792 1425b C001     		.uleb128 0xc0
 39793 1425d 00000000 		.quad	.LVL560
 39793      00000000 
 39794 14265 65800000 		.long	0x8065
 39795 14269 C101     		.uleb128 0xc1
 39796 1426b 01       		.uleb128 0x1
 39797 1426c 55       		.byte	0x55
 39798 1426d 02       		.uleb128 0x2
 39799 1426e 73       		.byte	0x73
 39800 1426f 00       		.sleb128 0
 39801 14270 C101     		.uleb128 0xc1
 39802 14272 01       		.uleb128 0x1
 39803 14273 54       		.byte	0x54
 39804 14274 09       		.uleb128 0x9
 39805 14275 03       		.byte	0x3
 39806 14276 00000000 		.quad	.LC15
 39806      00000000 
 39807 1427e C101     		.uleb128 0xc1
 39808 14280 01       		.uleb128 0x1
 39809 14281 51       		.byte	0x51
 39810 14282 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1015


 39811 14283 3B       		.byte	0x3b
 39812 14284 00       		.byte	0
 39813 14285 00       		.byte	0
 39814 14286 CA01     		.uleb128 0xca
 39815 14288 8FB60000 		.long	0xb68f
 39816 1428c 00000000 		.quad	.LBB4513
 39816      00000000 
 39817 14294 00000000 		.long	.Ldebug_ranges0+0x2c00
 39818 14298 02       		.byte	0x2
 39819 14299 47       		.byte	0x47
 39820 1429a DC420100 		.long	0x142dc
 39821 1429e BD01     		.uleb128 0xbd
 39822 142a0 A8B60000 		.long	0xb6a8
 39823 142a4 00000000 		.long	.LLST619
 39824 142a8 B701     		.uleb128 0xb7
 39825 142aa 9EB60000 		.long	0xb69e
 39826 142ae C001     		.uleb128 0xc0
 39827 142b0 00000000 		.quad	.LVL563
 39827      00000000 
 39828 142b8 94290000 		.long	0x2994
 39829 142bc C101     		.uleb128 0xc1
 39830 142be 01       		.uleb128 0x1
 39831 142bf 55       		.byte	0x55
 39832 142c0 02       		.uleb128 0x2
 39833 142c1 73       		.byte	0x73
 39834 142c2 00       		.sleb128 0
 39835 142c3 C101     		.uleb128 0xc1
 39836 142c5 01       		.uleb128 0x1
 39837 142c6 61       		.byte	0x61
 39838 142c7 12       		.uleb128 0x12
 39839 142c8 91       		.byte	0x91
 39840 142c9 887E     		.sleb128 -248
 39841 142cb F6       		.byte	0xf6
 39842 142cc 08       		.byte	0x8
 39843 142cd 29       		.uleb128 0x29
 39844 142ce F4       		.byte	0xf4
 39845 142cf 29       		.uleb128 0x29
 39846 142d0 08       		.byte	0x8
 39847 142d1 00000000 		.long	0
 39848 142d5 00408F40 		.long	0x408f4000
 39849 142d9 1E       		.byte	0x1e
 39850 142da 00       		.byte	0
 39851 142db 00       		.byte	0
 39852 142dc CA01     		.uleb128 0xca
 39853 142de 58B50000 		.long	0xb558
 39854 142e2 00000000 		.quad	.LBB4518
 39854      00000000 
 39855 142ea 00000000 		.long	.Ldebug_ranges0+0x2c40
 39856 142ee 02       		.byte	0x2
 39857 142ef 47       		.byte	0x47
 39858 142f0 33430100 		.long	0x14333
 39859 142f4 BD01     		.uleb128 0xbd
 39860 142f6 79B50000 		.long	0xb579
 39861 142fa 00000000 		.long	.LLST620
 39862 142fe BD01     		.uleb128 0xbd
 39863 14300 6CB50000 		.long	0xb56c
 39864 14304 00000000 		.long	.LLST621
GAS LISTING /tmp/ccmMnd7l.s 			page 1016


 39865 14308 C001     		.uleb128 0xc0
 39866 1430a 00000000 		.quad	.LVL565
 39866      00000000 
 39867 14312 65800000 		.long	0x8065
 39868 14316 C101     		.uleb128 0xc1
 39869 14318 01       		.uleb128 0x1
 39870 14319 55       		.byte	0x55
 39871 1431a 02       		.uleb128 0x2
 39872 1431b 73       		.byte	0x73
 39873 1431c 00       		.sleb128 0
 39874 1431d C101     		.uleb128 0xc1
 39875 1431f 01       		.uleb128 0x1
 39876 14320 54       		.byte	0x54
 39877 14321 09       		.uleb128 0x9
 39878 14322 03       		.byte	0x3
 39879 14323 00000000 		.quad	.LC16
 39879      00000000 
 39880 1432b C101     		.uleb128 0xc1
 39881 1432d 01       		.uleb128 0x1
 39882 1432e 51       		.byte	0x51
 39883 1432f 01       		.uleb128 0x1
 39884 14330 31       		.byte	0x31
 39885 14331 00       		.byte	0
 39886 14332 00       		.byte	0
 39887 14333 CA01     		.uleb128 0xca
 39888 14335 D0B60000 		.long	0xb6d0
 39889 14339 00000000 		.quad	.LBB4523
 39889      00000000 
 39890 14341 00000000 		.long	.Ldebug_ranges0+0x2c70
 39891 14345 02       		.byte	0x2
 39892 14346 47       		.byte	0x47
 39893 14347 9C440100 		.long	0x1449c
 39894 1434b B701     		.uleb128 0xb7
 39895 1434d E9B60000 		.long	0xb6e9
 39896 14351 B701     		.uleb128 0xb7
 39897 14353 DFB60000 		.long	0xb6df
 39898 14357 CB01     		.uleb128 0xcb
 39899 14359 3BE50000 		.long	0xe53b
 39900 1435d 00000000 		.quad	.LBB4524
 39900      00000000 
 39901 14365 00000000 		.long	.Ldebug_ranges0+0x2c70
 39902 14369 08       		.byte	0x8
 39903 1436a 71       		.byte	0x71
 39904 1436b BD01     		.uleb128 0xbd
 39905 1436d 58E50000 		.long	0xe558
 39906 14371 00000000 		.long	.LLST622
 39907 14375 C201     		.uleb128 0xc2
 39908 14377 FEE00000 		.long	0xe0fe
 39909 1437b 00000000 		.quad	.LBB4526
 39909      00000000 
 39910 14383 00000000 		.long	.Ldebug_ranges0+0x2ca0
 39911 14387 08       		.byte	0x8
 39912 14388 3502     		.value	0x235
 39913 1438a 4E440100 		.long	0x1444e
 39914 1438e BD01     		.uleb128 0xbd
 39915 14390 17E10000 		.long	0xe117
 39916 14394 00000000 		.long	.LLST623
GAS LISTING /tmp/ccmMnd7l.s 			page 1017


 39917 14398 BD01     		.uleb128 0xbd
 39918 1439a 0DE10000 		.long	0xe10d
 39919 1439e 00000000 		.long	.LLST624
 39920 143a2 C401     		.uleb128 0xc4
 39921 143a4 58C60000 		.long	0xc658
 39922 143a8 00000000 		.quad	.LBB4528
 39922      00000000 
 39923 143b0 09000000 		.quad	.LBE4528-.LBB4528
 39923      00000000 
 39924 143b8 0D       		.byte	0xd
 39925 143b9 BC01     		.value	0x1bc
 39926 143bb CA430100 		.long	0x143ca
 39927 143bf BD01     		.uleb128 0xbd
 39928 143c1 6CC60000 		.long	0xc66c
 39929 143c5 00000000 		.long	.LLST625
 39930 143c9 00       		.byte	0
 39931 143ca CC01     		.uleb128 0xcc
 39932 143cc 57B60000 		.long	0xb657
 39933 143d0 00000000 		.quad	.LBB4530
 39933      00000000 
 39934 143d8 00000000 		.long	.Ldebug_ranges0+0x2cd0
 39935 143dc 0D       		.byte	0xd
 39936 143dd BC01     		.value	0x1bc
 39937 143df BD01     		.uleb128 0xbd
 39938 143e1 70B60000 		.long	0xb670
 39939 143e5 00000000 		.long	.LLST626
 39940 143e9 BD01     		.uleb128 0xbd
 39941 143eb 66B60000 		.long	0xb666
 39942 143ef 00000000 		.long	.LLST627
 39943 143f3 B801     		.uleb128 0xb8
 39944 143f5 00000000 		.quad	.LBB4532
 39944      00000000 
 39945 143fd 38000000 		.quad	.LBE4532-.LBB4532
 39945      00000000 
 39946 14405 BD01     		.uleb128 0xbd
 39947 14407 70B60000 		.long	0xb670
 39948 1440b 00000000 		.long	.LLST628
 39949 1440f BD01     		.uleb128 0xbd
 39950 14411 66B60000 		.long	0xb666
 39951 14415 00000000 		.long	.LLST629
 39952 14419 C501     		.uleb128 0xc5
 39953 1441b 00000000 		.quad	.LVL657
 39953      00000000 
 39954 14423 652A0000 		.long	0x2a65
 39955 14427 33440100 		.long	0x14433
 39956 1442b C101     		.uleb128 0xc1
 39957 1442d 01       		.uleb128 0x1
 39958 1442e 55       		.byte	0x55
 39959 1442f 02       		.uleb128 0x2
 39960 14430 76       		.byte	0x76
 39961 14431 00       		.sleb128 0
 39962 14432 00       		.byte	0
 39963 14433 D001     		.uleb128 0xd0
 39964 14435 00000000 		.quad	.LVL658
 39964      00000000 
 39965 1443d C101     		.uleb128 0xc1
 39966 1443f 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1018


 39967 14440 55       		.byte	0x55
 39968 14441 02       		.uleb128 0x2
 39969 14442 76       		.byte	0x76
 39970 14443 00       		.sleb128 0
 39971 14444 C101     		.uleb128 0xc1
 39972 14446 01       		.uleb128 0x1
 39973 14447 54       		.byte	0x54
 39974 14448 01       		.uleb128 0x1
 39975 14449 3A       		.byte	0x3a
 39976 1444a 00       		.byte	0
 39977 1444b 00       		.byte	0
 39978 1444c 00       		.byte	0
 39979 1444d 00       		.byte	0
 39980 1444e C401     		.uleb128 0xc4
 39981 14450 79C60000 		.long	0xc679
 39982 14454 00000000 		.quad	.LBB4537
 39982      00000000 
 39983 1445c 08000000 		.quad	.LBE4537-.LBB4537
 39983      00000000 
 39984 14464 08       		.byte	0x8
 39985 14465 3502     		.value	0x235
 39986 14467 84440100 		.long	0x14484
 39987 1446b BD01     		.uleb128 0xbd
 39988 1446d 96C60000 		.long	0xc696
 39989 14471 00000000 		.long	.LLST630
 39990 14475 CD01     		.uleb128 0xcd
 39991 14477 00000000 		.quad	.LVL570
 39991      00000000 
 39992 1447f 76290000 		.long	0x2976
 39993 14483 00       		.byte	0
 39994 14484 C001     		.uleb128 0xc0
 39995 14486 00000000 		.quad	.LVL569
 39995      00000000 
 39996 1448e C0290000 		.long	0x29c0
 39997 14492 C101     		.uleb128 0xc1
 39998 14494 01       		.uleb128 0x1
 39999 14495 55       		.byte	0x55
 40000 14496 02       		.uleb128 0x2
 40001 14497 73       		.byte	0x73
 40002 14498 00       		.sleb128 0
 40003 14499 00       		.byte	0
 40004 1449a 00       		.byte	0
 40005 1449b 00       		.byte	0
 40006 1449c CF01     		.uleb128 0xcf
 40007 1449e 58B50000 		.long	0xb558
 40008 144a2 00000000 		.quad	.LBB4542
 40008      00000000 
 40009 144aa 14000000 		.quad	.LBE4542-.LBB4542
 40009      00000000 
 40010 144b2 02       		.byte	0x2
 40011 144b3 48       		.byte	0x48
 40012 144b4 F3440100 		.long	0x144f3
 40013 144b8 B701     		.uleb128 0xb7
 40014 144ba 6CB50000 		.long	0xb56c
 40015 144be BD01     		.uleb128 0xbd
 40016 144c0 79B50000 		.long	0xb579
 40017 144c4 00000000 		.long	.LLST631
GAS LISTING /tmp/ccmMnd7l.s 			page 1019


 40018 144c8 C001     		.uleb128 0xc0
 40019 144ca 00000000 		.quad	.LVL571
 40019      00000000 
 40020 144d2 65800000 		.long	0x8065
 40021 144d6 C101     		.uleb128 0xc1
 40022 144d8 01       		.uleb128 0x1
 40023 144d9 55       		.byte	0x55
 40024 144da 02       		.uleb128 0x2
 40025 144db 7D       		.byte	0x7d
 40026 144dc 00       		.sleb128 0
 40027 144dd C101     		.uleb128 0xc1
 40028 144df 01       		.uleb128 0x1
 40029 144e0 54       		.byte	0x54
 40030 144e1 09       		.uleb128 0x9
 40031 144e2 03       		.byte	0x3
 40032 144e3 00000000 		.quad	.LC17
 40032      00000000 
 40033 144eb C101     		.uleb128 0xc1
 40034 144ed 01       		.uleb128 0x1
 40035 144ee 51       		.byte	0x51
 40036 144ef 01       		.uleb128 0x1
 40037 144f0 38       		.byte	0x38
 40038 144f1 00       		.byte	0
 40039 144f2 00       		.byte	0
 40040 144f3 CA01     		.uleb128 0xca
 40041 144f5 8FB60000 		.long	0xb68f
 40042 144f9 00000000 		.quad	.LBB4544
 40042      00000000 
 40043 14501 00000000 		.long	.Ldebug_ranges0+0x2d00
 40044 14505 02       		.byte	0x2
 40045 14506 48       		.byte	0x48
 40046 14507 3D450100 		.long	0x1453d
 40047 1450b BD01     		.uleb128 0xbd
 40048 1450d A8B60000 		.long	0xb6a8
 40049 14511 00000000 		.long	.LLST632
 40050 14515 B701     		.uleb128 0xb7
 40051 14517 9EB60000 		.long	0xb69e
 40052 1451b C001     		.uleb128 0xc0
 40053 1451d 00000000 		.quad	.LVL572
 40053      00000000 
 40054 14525 94290000 		.long	0x2994
 40055 14529 C101     		.uleb128 0xc1
 40056 1452b 01       		.uleb128 0x1
 40057 1452c 55       		.byte	0x55
 40058 1452d 02       		.uleb128 0x2
 40059 1452e 7D       		.byte	0x7d
 40060 1452f 00       		.sleb128 0
 40061 14530 C101     		.uleb128 0xc1
 40062 14532 01       		.uleb128 0x1
 40063 14533 61       		.byte	0x61
 40064 14534 06       		.uleb128 0x6
 40065 14535 91       		.byte	0x91
 40066 14536 987E     		.sleb128 -232
 40067 14538 F6       		.byte	0xf6
 40068 14539 08       		.byte	0x8
 40069 1453a 29       		.uleb128 0x29
 40070 1453b 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1020


 40071 1453c 00       		.byte	0
 40072 1453d CA01     		.uleb128 0xca
 40073 1453f 58B50000 		.long	0xb558
 40074 14543 00000000 		.quad	.LBB4547
 40074      00000000 
 40075 1454b 00000000 		.long	.Ldebug_ranges0+0x2d30
 40076 1454f 02       		.byte	0x2
 40077 14550 48       		.byte	0x48
 40078 14551 94450100 		.long	0x14594
 40079 14555 BD01     		.uleb128 0xbd
 40080 14557 79B50000 		.long	0xb579
 40081 1455b 00000000 		.long	.LLST633
 40082 1455f BD01     		.uleb128 0xbd
 40083 14561 6CB50000 		.long	0xb56c
 40084 14565 00000000 		.long	.LLST634
 40085 14569 C001     		.uleb128 0xc0
 40086 1456b 00000000 		.quad	.LVL574
 40086      00000000 
 40087 14573 65800000 		.long	0x8065
 40088 14577 C101     		.uleb128 0xc1
 40089 14579 01       		.uleb128 0x1
 40090 1457a 55       		.byte	0x55
 40091 1457b 02       		.uleb128 0x2
 40092 1457c 73       		.byte	0x73
 40093 1457d 00       		.sleb128 0
 40094 1457e C101     		.uleb128 0xc1
 40095 14580 01       		.uleb128 0x1
 40096 14581 54       		.byte	0x54
 40097 14582 09       		.uleb128 0x9
 40098 14583 03       		.byte	0x3
 40099 14584 00000000 		.quad	.LC18
 40099      00000000 
 40100 1458c C101     		.uleb128 0xc1
 40101 1458e 01       		.uleb128 0x1
 40102 1458f 51       		.byte	0x51
 40103 14590 01       		.uleb128 0x1
 40104 14591 3A       		.byte	0x3a
 40105 14592 00       		.byte	0
 40106 14593 00       		.byte	0
 40107 14594 CF01     		.uleb128 0xcf
 40108 14596 8FB60000 		.long	0xb68f
 40109 1459a 00000000 		.quad	.LBB4552
 40109      00000000 
 40110 145a2 0E000000 		.quad	.LBE4552-.LBB4552
 40110      00000000 
 40111 145aa 02       		.byte	0x2
 40112 145ab 48       		.byte	0x48
 40113 145ac E2450100 		.long	0x145e2
 40114 145b0 BD01     		.uleb128 0xbd
 40115 145b2 A8B60000 		.long	0xb6a8
 40116 145b6 00000000 		.long	.LLST635
 40117 145ba B701     		.uleb128 0xb7
 40118 145bc 9EB60000 		.long	0xb69e
 40119 145c0 C001     		.uleb128 0xc0
 40120 145c2 00000000 		.quad	.LVL575
 40120      00000000 
 40121 145ca 94290000 		.long	0x2994
GAS LISTING /tmp/ccmMnd7l.s 			page 1021


 40122 145ce C101     		.uleb128 0xc1
 40123 145d0 01       		.uleb128 0x1
 40124 145d1 55       		.byte	0x55
 40125 145d2 02       		.uleb128 0x2
 40126 145d3 73       		.byte	0x73
 40127 145d4 00       		.sleb128 0
 40128 145d5 C101     		.uleb128 0xc1
 40129 145d7 01       		.uleb128 0x1
 40130 145d8 61       		.byte	0x61
 40131 145d9 06       		.uleb128 0x6
 40132 145da 91       		.byte	0x91
 40133 145db 887E     		.sleb128 -248
 40134 145dd F6       		.byte	0xf6
 40135 145de 08       		.byte	0x8
 40136 145df 29       		.uleb128 0x29
 40137 145e0 00       		.byte	0
 40138 145e1 00       		.byte	0
 40139 145e2 CE01     		.uleb128 0xce
 40140 145e4 58B50000 		.long	0xb558
 40141 145e8 00000000 		.quad	.LBB4554
 40141      00000000 
 40142 145f0 14000000 		.quad	.LBE4554-.LBB4554
 40142      00000000 
 40143 145f8 02       		.byte	0x2
 40144 145f9 48       		.byte	0x48
 40145 145fa BD01     		.uleb128 0xbd
 40146 145fc 79B50000 		.long	0xb579
 40147 14600 00000000 		.long	.LLST636
 40148 14604 BD01     		.uleb128 0xbd
 40149 14606 6CB50000 		.long	0xb56c
 40150 1460a 00000000 		.long	.LLST637
 40151 1460e C001     		.uleb128 0xc0
 40152 14610 00000000 		.quad	.LVL576
 40152      00000000 
 40153 14618 65800000 		.long	0x8065
 40154 1461c C101     		.uleb128 0xc1
 40155 1461e 01       		.uleb128 0x1
 40156 1461f 54       		.byte	0x54
 40157 14620 09       		.uleb128 0x9
 40158 14621 03       		.byte	0x3
 40159 14622 00000000 		.quad	.LC19
 40159      00000000 
 40160 1462a C101     		.uleb128 0xc1
 40161 1462c 01       		.uleb128 0x1
 40162 1462d 51       		.byte	0x51
 40163 1462e 01       		.uleb128 0x1
 40164 1462f 31       		.byte	0x31
 40165 14630 00       		.byte	0
 40166 14631 00       		.byte	0
 40167 14632 00       		.byte	0
 40168 14633 CE01     		.uleb128 0xce
 40169 14635 C6DF0000 		.long	0xdfc6
 40170 14639 00000000 		.quad	.LBB4561
 40170      00000000 
 40171 14641 12000000 		.quad	.LBE4561-.LBB4561
 40171      00000000 
 40172 14649 02       		.byte	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1022


 40173 1464a 41       		.byte	0x41
 40174 1464b BD01     		.uleb128 0xbd
 40175 1464d D5DF0000 		.long	0xdfd5
 40176 14651 00000000 		.long	.LLST638
 40177 14655 B601     		.uleb128 0xb6
 40178 14657 8BCB0000 		.long	0xcb8b
 40179 1465b 00000000 		.quad	.LBB4562
 40179      00000000 
 40180 14663 12000000 		.quad	.LBE4562-.LBB4562
 40180      00000000 
 40181 1466b 06       		.byte	0x6
 40182 1466c A901     		.value	0x1a9
 40183 1466e BD01     		.uleb128 0xbd
 40184 14670 9ACB0000 		.long	0xcb9a
 40185 14674 00000000 		.long	.LLST638
 40186 14678 CE01     		.uleb128 0xce
 40187 1467a 0DCB0000 		.long	0xcb0d
 40188 1467e 00000000 		.quad	.LBB4564
 40188      00000000 
 40189 14686 0A000000 		.quad	.LBE4564-.LBB4564
 40189      00000000 
 40190 1468e 06       		.byte	0x6
 40191 1468f A0       		.byte	0xa0
 40192 14690 B701     		.uleb128 0xb7
 40193 14692 1CCB0000 		.long	0xcb1c
 40194 14696 BD01     		.uleb128 0xbd
 40195 14698 32CB0000 		.long	0xcb32
 40196 1469c 00000000 		.long	.LLST640
 40197 146a0 BD01     		.uleb128 0xbd
 40198 146a2 26CB0000 		.long	0xcb26
 40199 146a6 00000000 		.long	.LLST641
 40200 146aa B801     		.uleb128 0xb8
 40201 146ac 00000000 		.quad	.LBB4565
 40201      00000000 
 40202 146b4 0A000000 		.quad	.LBE4565-.LBB4565
 40202      00000000 
 40203 146bc CE01     		.uleb128 0xce
 40204 146be D5CA0000 		.long	0xcad5
 40205 146c2 00000000 		.quad	.LBB4566
 40205      00000000 
 40206 146ca 05000000 		.quad	.LBE4566-.LBB4566
 40206      00000000 
 40207 146d2 06       		.byte	0x6
 40208 146d3 B2       		.byte	0xb2
 40209 146d4 B701     		.uleb128 0xb7
 40210 146d6 E0CA0000 		.long	0xcae0
 40211 146da BD01     		.uleb128 0xbd
 40212 146dc FACA0000 		.long	0xcafa
 40213 146e0 00000000 		.long	.LLST642
 40214 146e4 BD01     		.uleb128 0xbd
 40215 146e6 EDCA0000 		.long	0xcaed
 40216 146ea 00000000 		.long	.LLST643
 40217 146ee B601     		.uleb128 0xb6
 40218 146f0 AACA0000 		.long	0xcaaa
 40219 146f4 00000000 		.quad	.LBB4567
 40219      00000000 
 40220 146fc 05000000 		.quad	.LBE4567-.LBB4567
GAS LISTING /tmp/ccmMnd7l.s 			page 1023


 40220      00000000 
 40221 14704 2F       		.byte	0x2f
 40222 14705 7F01     		.value	0x17f
 40223 14707 B701     		.uleb128 0xb7
 40224 14709 B9CA0000 		.long	0xcab9
 40225 1470d BD01     		.uleb128 0xbd
 40226 1470f CFCA0000 		.long	0xcacf
 40227 14713 00000000 		.long	.LLST642
 40228 14717 BD01     		.uleb128 0xbd
 40229 14719 C3CA0000 		.long	0xcac3
 40230 1471d 00000000 		.long	.LLST643
 40231 14721 CD01     		.uleb128 0xcd
 40232 14723 00000000 		.quad	.LVL579
 40232      00000000 
 40233 1472b F84F0100 		.long	0x14ff8
 40234 1472f 00       		.byte	0
 40235 14730 00       		.byte	0
 40236 14731 00       		.byte	0
 40237 14732 00       		.byte	0
 40238 14733 00       		.byte	0
 40239 14734 00       		.byte	0
 40240 14735 00       		.byte	0
 40241 14736 D001     		.uleb128 0xd0
 40242 14738 00000000 		.quad	.LVL701
 40242      00000000 
 40243 14740 C101     		.uleb128 0xc1
 40244 14742 01       		.uleb128 0x1
 40245 14743 55       		.byte	0x55
 40246 14744 03       		.uleb128 0x3
 40247 14745 91       		.byte	0x91
 40248 14746 907F     		.sleb128 -112
 40249 14748 00       		.byte	0
 40250 14749 00       		.byte	0
 40251 1474a CA01     		.uleb128 0xca
 40252 1474c 8EE00000 		.long	0xe08e
 40253 14750 00000000 		.quad	.LBB4576
 40253      00000000 
 40254 14758 00000000 		.long	.Ldebug_ranges0+0x2d60
 40255 1475c 16       		.byte	0x16
 40256 1475d 4C       		.byte	0x4c
 40257 1475e B5470100 		.long	0x147b5
 40258 14762 BD01     		.uleb128 0xbd
 40259 14764 9DE00000 		.long	0xe09d
 40260 14768 00000000 		.long	.LLST646
 40261 1476c B401     		.uleb128 0xb4
 40262 1476e 00000000 		.long	.Ldebug_ranges0+0x2d60
 40263 14772 B901     		.uleb128 0xb9
 40264 14774 B3E00000 		.long	0xe0b3
 40265 14778 CB01     		.uleb128 0xcb
 40266 1477a F6B60000 		.long	0xb6f6
 40267 1477e 00000000 		.quad	.LBB4578
 40267      00000000 
 40268 14786 00000000 		.long	.Ldebug_ranges0+0x2d60
 40269 1478a 17       		.byte	0x17
 40270 1478b EC       		.byte	0xec
 40271 1478c B701     		.uleb128 0xb7
 40272 1478e 05B70000 		.long	0xb705
GAS LISTING /tmp/ccmMnd7l.s 			page 1024


 40273 14792 BD01     		.uleb128 0xbd
 40274 14794 0FB70000 		.long	0xb70f
 40275 14798 00000000 		.long	.LLST647
 40276 1479c C001     		.uleb128 0xc0
 40277 1479e 00000000 		.quad	.LVL583
 40277      00000000 
 40278 147a6 8C500100 		.long	0x1508c
 40279 147aa C101     		.uleb128 0xc1
 40280 147ac 01       		.uleb128 0x1
 40281 147ad 55       		.byte	0x55
 40282 147ae 02       		.uleb128 0x2
 40283 147af 7F       		.byte	0x7f
 40284 147b0 00       		.sleb128 0
 40285 147b1 00       		.byte	0
 40286 147b2 00       		.byte	0
 40287 147b3 00       		.byte	0
 40288 147b4 00       		.byte	0
 40289 147b5 CF01     		.uleb128 0xcf
 40290 147b7 58B50000 		.long	0xb558
 40291 147bb 00000000 		.quad	.LBB4585
 40291      00000000 
 40292 147c3 14000000 		.quad	.LBE4585-.LBB4585
 40292      00000000 
 40293 147cb 16       		.byte	0x16
 40294 147cc 49       		.byte	0x49
 40295 147cd 0C480100 		.long	0x1480c
 40296 147d1 B701     		.uleb128 0xb7
 40297 147d3 6CB50000 		.long	0xb56c
 40298 147d7 BD01     		.uleb128 0xbd
 40299 147d9 79B50000 		.long	0xb579
 40300 147dd 00000000 		.long	.LLST648
 40301 147e1 C001     		.uleb128 0xc0
 40302 147e3 00000000 		.quad	.LVL682
 40302      00000000 
 40303 147eb 65800000 		.long	0x8065
 40304 147ef C101     		.uleb128 0xc1
 40305 147f1 01       		.uleb128 0x1
 40306 147f2 55       		.byte	0x55
 40307 147f3 02       		.uleb128 0x2
 40308 147f4 7D       		.byte	0x7d
 40309 147f5 00       		.sleb128 0
 40310 147f6 C101     		.uleb128 0xc1
 40311 147f8 01       		.uleb128 0x1
 40312 147f9 54       		.byte	0x54
 40313 147fa 09       		.uleb128 0x9
 40314 147fb 03       		.byte	0x3
 40315 147fc 00000000 		.quad	.LC28
 40315      00000000 
 40316 14804 C101     		.uleb128 0xc1
 40317 14806 01       		.uleb128 0x1
 40318 14807 51       		.byte	0x51
 40319 14808 01       		.uleb128 0x1
 40320 14809 31       		.byte	0x31
 40321 1480a 00       		.byte	0
 40322 1480b 00       		.byte	0
 40323 1480c CA01     		.uleb128 0xca
 40324 1480e D0B60000 		.long	0xb6d0
GAS LISTING /tmp/ccmMnd7l.s 			page 1025


 40325 14812 00000000 		.quad	.LBB4587
 40325      00000000 
 40326 1481a 00000000 		.long	.Ldebug_ranges0+0x2d90
 40327 1481e 16       		.byte	0x16
 40328 1481f 49       		.byte	0x49
 40329 14820 77490100 		.long	0x14977
 40330 14824 B701     		.uleb128 0xb7
 40331 14826 E9B60000 		.long	0xb6e9
 40332 1482a B701     		.uleb128 0xb7
 40333 1482c DFB60000 		.long	0xb6df
 40334 14830 CB01     		.uleb128 0xcb
 40335 14832 3BE50000 		.long	0xe53b
 40336 14836 00000000 		.quad	.LBB4588
 40336      00000000 
 40337 1483e 00000000 		.long	.Ldebug_ranges0+0x2d90
 40338 14842 08       		.byte	0x8
 40339 14843 71       		.byte	0x71
 40340 14844 B701     		.uleb128 0xb7
 40341 14846 58E50000 		.long	0xe558
 40342 1484a C201     		.uleb128 0xc2
 40343 1484c FEE00000 		.long	0xe0fe
 40344 14850 00000000 		.quad	.LBB4590
 40344      00000000 
 40345 14858 00000000 		.long	.Ldebug_ranges0+0x2dc0
 40346 1485c 08       		.byte	0x8
 40347 1485d 3502     		.value	0x235
 40348 1485f 29490100 		.long	0x14929
 40349 14863 BD01     		.uleb128 0xbd
 40350 14865 17E10000 		.long	0xe117
 40351 14869 00000000 		.long	.LLST649
 40352 1486d B701     		.uleb128 0xb7
 40353 1486f 0DE10000 		.long	0xe10d
 40354 14873 C201     		.uleb128 0xc2
 40355 14875 58C60000 		.long	0xc658
 40356 14879 00000000 		.quad	.LBB4592
 40356      00000000 
 40357 14881 00000000 		.long	.Ldebug_ranges0+0x2df0
 40358 14885 0D       		.byte	0xd
 40359 14886 BC01     		.value	0x1bc
 40360 14888 A5480100 		.long	0x148a5
 40361 1488c BD01     		.uleb128 0xbd
 40362 1488e 6CC60000 		.long	0xc66c
 40363 14892 00000000 		.long	.LLST650
 40364 14896 CD01     		.uleb128 0xcd
 40365 14898 00000000 		.quad	.LVL699
 40365      00000000 
 40366 148a0 A5800000 		.long	0x80a5
 40367 148a4 00       		.byte	0
 40368 148a5 CC01     		.uleb128 0xcc
 40369 148a7 57B60000 		.long	0xb657
 40370 148ab 00000000 		.quad	.LBB4595
 40370      00000000 
 40371 148b3 00000000 		.long	.Ldebug_ranges0+0x2e20
 40372 148b7 0D       		.byte	0xd
 40373 148b8 BC01     		.value	0x1bc
 40374 148ba BD01     		.uleb128 0xbd
 40375 148bc 70B60000 		.long	0xb670
GAS LISTING /tmp/ccmMnd7l.s 			page 1026


 40376 148c0 00000000 		.long	.LLST651
 40377 148c4 BD01     		.uleb128 0xbd
 40378 148c6 66B60000 		.long	0xb666
 40379 148ca 00000000 		.long	.LLST652
 40380 148ce B801     		.uleb128 0xb8
 40381 148d0 00000000 		.quad	.LBB4597
 40381      00000000 
 40382 148d8 2A000000 		.quad	.LBE4597-.LBB4597
 40382      00000000 
 40383 148e0 BD01     		.uleb128 0xbd
 40384 148e2 70B60000 		.long	0xb670
 40385 148e6 00000000 		.long	.LLST653
 40386 148ea BD01     		.uleb128 0xbd
 40387 148ec 66B60000 		.long	0xb666
 40388 148f0 00000000 		.long	.LLST654
 40389 148f4 C501     		.uleb128 0xc5
 40390 148f6 00000000 		.quad	.LVL696
 40390      00000000 
 40391 148fe 652A0000 		.long	0x2a65
 40392 14902 0E490100 		.long	0x1490e
 40393 14906 C101     		.uleb128 0xc1
 40394 14908 01       		.uleb128 0x1
 40395 14909 55       		.byte	0x55
 40396 1490a 02       		.uleb128 0x2
 40397 1490b 73       		.byte	0x73
 40398 1490c 00       		.sleb128 0
 40399 1490d 00       		.byte	0
 40400 1490e D001     		.uleb128 0xd0
 40401 14910 00000000 		.quad	.LVL697
 40401      00000000 
 40402 14918 C101     		.uleb128 0xc1
 40403 1491a 01       		.uleb128 0x1
 40404 1491b 55       		.byte	0x55
 40405 1491c 02       		.uleb128 0x2
 40406 1491d 73       		.byte	0x73
 40407 1491e 00       		.sleb128 0
 40408 1491f C101     		.uleb128 0xc1
 40409 14921 01       		.uleb128 0x1
 40410 14922 54       		.byte	0x54
 40411 14923 01       		.uleb128 0x1
 40412 14924 3A       		.byte	0x3a
 40413 14925 00       		.byte	0
 40414 14926 00       		.byte	0
 40415 14927 00       		.byte	0
 40416 14928 00       		.byte	0
 40417 14929 C401     		.uleb128 0xc4
 40418 1492b 79C60000 		.long	0xc679
 40419 1492f 00000000 		.quad	.LBB4603
 40419      00000000 
 40420 14937 0D000000 		.quad	.LBE4603-.LBB4603
 40420      00000000 
 40421 1493f 08       		.byte	0x8
 40422 14940 3502     		.value	0x235
 40423 14942 5F490100 		.long	0x1495f
 40424 14946 BD01     		.uleb128 0xbd
 40425 14948 96C60000 		.long	0xc696
 40426 1494c 00000000 		.long	.LLST655
GAS LISTING /tmp/ccmMnd7l.s 			page 1027


 40427 14950 CD01     		.uleb128 0xcd
 40428 14952 00000000 		.quad	.LVL687
 40428      00000000 
 40429 1495a 76290000 		.long	0x2976
 40430 1495e 00       		.byte	0
 40431 1495f C001     		.uleb128 0xc0
 40432 14961 00000000 		.quad	.LVL686
 40432      00000000 
 40433 14969 C0290000 		.long	0x29c0
 40434 1496d C101     		.uleb128 0xc1
 40435 1496f 01       		.uleb128 0x1
 40436 14970 55       		.byte	0x55
 40437 14971 02       		.uleb128 0x2
 40438 14972 7D       		.byte	0x7d
 40439 14973 00       		.sleb128 0
 40440 14974 00       		.byte	0
 40441 14975 00       		.byte	0
 40442 14976 00       		.byte	0
 40443 14977 CF01     		.uleb128 0xcf
 40444 14979 8EE00000 		.long	0xe08e
 40445 1497d 00000000 		.quad	.LBB4611
 40445      00000000 
 40446 14985 0D000000 		.quad	.LBE4611-.LBB4611
 40446      00000000 
 40447 1498d 16       		.byte	0x16
 40448 1498e 4C       		.byte	0x4c
 40449 1498f F6490100 		.long	0x149f6
 40450 14993 BD01     		.uleb128 0xbd
 40451 14995 9DE00000 		.long	0xe09d
 40452 14999 00000000 		.long	.LLST656
 40453 1499d B801     		.uleb128 0xb8
 40454 1499f 00000000 		.quad	.LBB4612
 40454      00000000 
 40455 149a7 0D000000 		.quad	.LBE4612-.LBB4612
 40455      00000000 
 40456 149af B901     		.uleb128 0xb9
 40457 149b1 B3E00000 		.long	0xe0b3
 40458 149b5 CE01     		.uleb128 0xce
 40459 149b7 F6B60000 		.long	0xb6f6
 40460 149bb 00000000 		.quad	.LBB4613
 40460      00000000 
 40461 149c3 08000000 		.quad	.LBE4613-.LBB4613
 40461      00000000 
 40462 149cb 17       		.byte	0x17
 40463 149cc EC       		.byte	0xec
 40464 149cd B701     		.uleb128 0xb7
 40465 149cf 05B70000 		.long	0xb705
 40466 149d3 BD01     		.uleb128 0xbd
 40467 149d5 0FB70000 		.long	0xb70f
 40468 149d9 00000000 		.long	.LLST657
 40469 149dd C001     		.uleb128 0xc0
 40470 149df 00000000 		.quad	.LVL703
 40470      00000000 
 40471 149e7 8C500100 		.long	0x1508c
 40472 149eb C101     		.uleb128 0xc1
 40473 149ed 01       		.uleb128 0x1
 40474 149ee 55       		.byte	0x55
GAS LISTING /tmp/ccmMnd7l.s 			page 1028


 40475 149ef 02       		.uleb128 0x2
 40476 149f0 7F       		.byte	0x7f
 40477 149f1 00       		.sleb128 0
 40478 149f2 00       		.byte	0
 40479 149f3 00       		.byte	0
 40480 149f4 00       		.byte	0
 40481 149f5 00       		.byte	0
 40482 149f6 C001     		.uleb128 0xc0
 40483 149f8 00000000 		.quad	.LVL480
 40483      00000000 
 40484 14a00 9D500100 		.long	0x1509d
 40485 14a04 C101     		.uleb128 0xc1
 40486 14a06 01       		.uleb128 0x1
 40487 14a07 55       		.byte	0x55
 40488 14a08 03       		.uleb128 0x3
 40489 14a09 0A       		.byte	0xa
 40490 14a0a 003C     		.value	0x3c00
 40491 14a0c C101     		.uleb128 0xc1
 40492 14a0e 01       		.uleb128 0x1
 40493 14a0f 54       		.byte	0x54
 40494 14a10 03       		.uleb128 0x3
 40495 14a11 0A       		.byte	0xa
 40496 14a12 003C     		.value	0x3c00
 40497 14a14 00       		.byte	0
 40498 14a15 00       		.byte	0
 40499 14a16 00       		.byte	0
 40500 14a17 CF01     		.uleb128 0xcf
 40501 14a19 C6E00000 		.long	0xe0c6
 40502 14a1d 00000000 		.quad	.LBB4620
 40502      00000000 
 40503 14a25 0D000000 		.quad	.LBE4620-.LBB4620
 40503      00000000 
 40504 14a2d 16       		.byte	0x16
 40505 14a2e 4D       		.byte	0x4d
 40506 14a2f 964A0100 		.long	0x14a96
 40507 14a33 BD01     		.uleb128 0xbd
 40508 14a35 D5E00000 		.long	0xe0d5
 40509 14a39 00000000 		.long	.LLST658
 40510 14a3d B801     		.uleb128 0xb8
 40511 14a3f 00000000 		.quad	.LBB4621
 40511      00000000 
 40512 14a47 0D000000 		.quad	.LBE4621-.LBB4621
 40512      00000000 
 40513 14a4f B901     		.uleb128 0xb9
 40514 14a51 EBE00000 		.long	0xe0eb
 40515 14a55 CE01     		.uleb128 0xce
 40516 14a57 1FB70000 		.long	0xb71f
 40517 14a5b 00000000 		.quad	.LBB4622
 40517      00000000 
 40518 14a63 08000000 		.quad	.LBE4622-.LBB4622
 40518      00000000 
 40519 14a6b 17       		.byte	0x17
 40520 14a6c EC       		.byte	0xec
 40521 14a6d B701     		.uleb128 0xb7
 40522 14a6f 2EB70000 		.long	0xb72e
 40523 14a73 BD01     		.uleb128 0xbd
 40524 14a75 38B70000 		.long	0xb738
GAS LISTING /tmp/ccmMnd7l.s 			page 1029


 40525 14a79 00000000 		.long	.LLST659
 40526 14a7d C001     		.uleb128 0xc0
 40527 14a7f 00000000 		.quad	.LVL586
 40527      00000000 
 40528 14a87 B7500100 		.long	0x150b7
 40529 14a8b C101     		.uleb128 0xc1
 40530 14a8d 01       		.uleb128 0x1
 40531 14a8e 55       		.byte	0x55
 40532 14a8f 02       		.uleb128 0x2
 40533 14a90 7E       		.byte	0x7e
 40534 14a91 00       		.sleb128 0
 40535 14a92 00       		.byte	0
 40536 14a93 00       		.byte	0
 40537 14a94 00       		.byte	0
 40538 14a95 00       		.byte	0
 40539 14a96 CF01     		.uleb128 0xcf
 40540 14a98 C6E00000 		.long	0xe0c6
 40541 14a9c 00000000 		.quad	.LBB4625
 40541      00000000 
 40542 14aa4 20000000 		.quad	.LBE4625-.LBB4625
 40542      00000000 
 40543 14aac 16       		.byte	0x16
 40544 14aad 4D       		.byte	0x4d
 40545 14aae 154B0100 		.long	0x14b15
 40546 14ab2 BD01     		.uleb128 0xbd
 40547 14ab4 D5E00000 		.long	0xe0d5
 40548 14ab8 00000000 		.long	.LLST660
 40549 14abc B801     		.uleb128 0xb8
 40550 14abe 00000000 		.quad	.LBB4626
 40550      00000000 
 40551 14ac6 20000000 		.quad	.LBE4626-.LBB4626
 40551      00000000 
 40552 14ace B901     		.uleb128 0xb9
 40553 14ad0 EBE00000 		.long	0xe0eb
 40554 14ad4 CE01     		.uleb128 0xce
 40555 14ad6 1FB70000 		.long	0xb71f
 40556 14ada 00000000 		.quad	.LBB4627
 40556      00000000 
 40557 14ae2 17000000 		.quad	.LBE4627-.LBB4627
 40557      00000000 
 40558 14aea 17       		.byte	0x17
 40559 14aeb EC       		.byte	0xec
 40560 14aec B701     		.uleb128 0xb7
 40561 14aee 2EB70000 		.long	0xb72e
 40562 14af2 BD01     		.uleb128 0xbd
 40563 14af4 38B70000 		.long	0xb738
 40564 14af8 00000000 		.long	.LLST661
 40565 14afc C001     		.uleb128 0xc0
 40566 14afe 00000000 		.quad	.LVL705
 40566      00000000 
 40567 14b06 B7500100 		.long	0x150b7
 40568 14b0a C101     		.uleb128 0xc1
 40569 14b0c 01       		.uleb128 0x1
 40570 14b0d 55       		.byte	0x55
 40571 14b0e 02       		.uleb128 0x2
 40572 14b0f 7E       		.byte	0x7e
 40573 14b10 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1030


 40574 14b11 00       		.byte	0
 40575 14b12 00       		.byte	0
 40576 14b13 00       		.byte	0
 40577 14b14 00       		.byte	0
 40578 14b15 C001     		.uleb128 0xc0
 40579 14b17 00000000 		.quad	.LVL478
 40579      00000000 
 40580 14b1f C8500100 		.long	0x150c8
 40581 14b23 C101     		.uleb128 0xc1
 40582 14b25 01       		.uleb128 0x1
 40583 14b26 55       		.byte	0x55
 40584 14b27 05       		.uleb128 0x5
 40585 14b28 91       		.byte	0x91
 40586 14b29 F87D     		.sleb128 -264
 40587 14b2b 94       		.byte	0x94
 40588 14b2c 04       		.byte	0x4
 40589 14b2d 00       		.byte	0
 40590 14b2e 00       		.byte	0
 40591 14b2f 00       		.byte	0
 40592 14b30 CF01     		.uleb128 0xcf
 40593 14b32 D0B60000 		.long	0xb6d0
 40594 14b36 00000000 		.quad	.LBB4630
 40594      00000000 
 40595 14b3e 08000000 		.quad	.LBE4630-.LBB4630
 40595      00000000 
 40596 14b46 16       		.byte	0x16
 40597 14b47 4E       		.byte	0x4e
 40598 14b48 6F4B0100 		.long	0x14b6f
 40599 14b4c B701     		.uleb128 0xb7
 40600 14b4e E9B60000 		.long	0xb6e9
 40601 14b52 B701     		.uleb128 0xb7
 40602 14b54 DFB60000 		.long	0xb6df
 40603 14b58 C001     		.uleb128 0xc0
 40604 14b5a 00000000 		.quad	.LVL589
 40604      00000000 
 40605 14b62 3BE50000 		.long	0xe53b
 40606 14b66 C101     		.uleb128 0xc1
 40607 14b68 01       		.uleb128 0x1
 40608 14b69 55       		.byte	0x55
 40609 14b6a 02       		.uleb128 0x2
 40610 14b6b 7D       		.byte	0x7d
 40611 14b6c 00       		.sleb128 0
 40612 14b6d 00       		.byte	0
 40613 14b6e 00       		.byte	0
 40614 14b6f CF01     		.uleb128 0xcf
 40615 14b71 D0B60000 		.long	0xb6d0
 40616 14b75 00000000 		.quad	.LBB4632
 40616      00000000 
 40617 14b7d 08000000 		.quad	.LBE4632-.LBB4632
 40617      00000000 
 40618 14b85 16       		.byte	0x16
 40619 14b86 4E       		.byte	0x4e
 40620 14b87 AA4B0100 		.long	0x14baa
 40621 14b8b B701     		.uleb128 0xb7
 40622 14b8d E9B60000 		.long	0xb6e9
 40623 14b91 BD01     		.uleb128 0xbd
 40624 14b93 DFB60000 		.long	0xb6df
GAS LISTING /tmp/ccmMnd7l.s 			page 1031


 40625 14b97 00000000 		.long	.LLST662
 40626 14b9b CD01     		.uleb128 0xcd
 40627 14b9d 00000000 		.quad	.LVL591
 40627      00000000 
 40628 14ba5 3BE50000 		.long	0xe53b
 40629 14ba9 00       		.byte	0
 40630 14baa CF01     		.uleb128 0xcf
 40631 14bac 66DB0000 		.long	0xdb66
 40632 14bb0 00000000 		.quad	.LBB4634
 40632      00000000 
 40633 14bb8 0F000000 		.quad	.LBE4634-.LBB4634
 40633      00000000 
 40634 14bc0 16       		.byte	0x16
 40635 14bc1 50       		.byte	0x50
 40636 14bc2 B04C0100 		.long	0x14cb0
 40637 14bc6 BD01     		.uleb128 0xbd
 40638 14bc8 75DB0000 		.long	0xdb75
 40639 14bcc 00000000 		.long	.LLST663
 40640 14bd0 B601     		.uleb128 0xb6
 40641 14bd2 37CA0000 		.long	0xca37
 40642 14bd6 00000000 		.quad	.LBB4636
 40642      00000000 
 40643 14bde 0F000000 		.quad	.LBE4636-.LBB4636
 40643      00000000 
 40644 14be6 06       		.byte	0x6
 40645 14be7 A901     		.value	0x1a9
 40646 14be9 BD01     		.uleb128 0xbd
 40647 14beb 46CA0000 		.long	0xca46
 40648 14bef 00000000 		.long	.LLST663
 40649 14bf3 CE01     		.uleb128 0xce
 40650 14bf5 B9C90000 		.long	0xc9b9
 40651 14bf9 00000000 		.quad	.LBB4638
 40651      00000000 
 40652 14c01 0A000000 		.quad	.LBE4638-.LBB4638
 40652      00000000 
 40653 14c09 06       		.byte	0x6
 40654 14c0a A0       		.byte	0xa0
 40655 14c0b B701     		.uleb128 0xb7
 40656 14c0d C8C90000 		.long	0xc9c8
 40657 14c11 BD01     		.uleb128 0xbd
 40658 14c13 DEC90000 		.long	0xc9de
 40659 14c17 00000000 		.long	.LLST665
 40660 14c1b BD01     		.uleb128 0xbd
 40661 14c1d D2C90000 		.long	0xc9d2
 40662 14c21 00000000 		.long	.LLST666
 40663 14c25 B801     		.uleb128 0xb8
 40664 14c27 00000000 		.quad	.LBB4639
 40664      00000000 
 40665 14c2f 0A000000 		.quad	.LBE4639-.LBB4639
 40665      00000000 
 40666 14c37 CE01     		.uleb128 0xce
 40667 14c39 81C90000 		.long	0xc981
 40668 14c3d 00000000 		.quad	.LBB4640
 40668      00000000 
 40669 14c45 05000000 		.quad	.LBE4640-.LBB4640
 40669      00000000 
 40670 14c4d 06       		.byte	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1032


 40671 14c4e B2       		.byte	0xb2
 40672 14c4f B701     		.uleb128 0xb7
 40673 14c51 8CC90000 		.long	0xc98c
 40674 14c55 BD01     		.uleb128 0xbd
 40675 14c57 A6C90000 		.long	0xc9a6
 40676 14c5b 00000000 		.long	.LLST667
 40677 14c5f BD01     		.uleb128 0xbd
 40678 14c61 99C90000 		.long	0xc999
 40679 14c65 00000000 		.long	.LLST668
 40680 14c69 B601     		.uleb128 0xb6
 40681 14c6b 56C90000 		.long	0xc956
 40682 14c6f 00000000 		.quad	.LBB4641
 40682      00000000 
 40683 14c77 05000000 		.quad	.LBE4641-.LBB4641
 40683      00000000 
 40684 14c7f 2F       		.byte	0x2f
 40685 14c80 7F01     		.value	0x17f
 40686 14c82 B701     		.uleb128 0xb7
 40687 14c84 65C90000 		.long	0xc965
 40688 14c88 BD01     		.uleb128 0xbd
 40689 14c8a 7BC90000 		.long	0xc97b
 40690 14c8e 00000000 		.long	.LLST667
 40691 14c92 BD01     		.uleb128 0xbd
 40692 14c94 6FC90000 		.long	0xc96f
 40693 14c98 00000000 		.long	.LLST668
 40694 14c9c CD01     		.uleb128 0xcd
 40695 14c9e 00000000 		.quad	.LVL594
 40695      00000000 
 40696 14ca6 F84F0100 		.long	0x14ff8
 40697 14caa 00       		.byte	0
 40698 14cab 00       		.byte	0
 40699 14cac 00       		.byte	0
 40700 14cad 00       		.byte	0
 40701 14cae 00       		.byte	0
 40702 14caf 00       		.byte	0
 40703 14cb0 CF01     		.uleb128 0xcf
 40704 14cb2 66DB0000 		.long	0xdb66
 40705 14cb6 00000000 		.quad	.LBB4644
 40705      00000000 
 40706 14cbe 26000000 		.quad	.LBE4644-.LBB4644
 40706      00000000 
 40707 14cc6 16       		.byte	0x16
 40708 14cc7 50       		.byte	0x50
 40709 14cc8 B64D0100 		.long	0x14db6
 40710 14ccc BD01     		.uleb128 0xbd
 40711 14cce 75DB0000 		.long	0xdb75
 40712 14cd2 00000000 		.long	.LLST671
 40713 14cd6 B601     		.uleb128 0xb6
 40714 14cd8 37CA0000 		.long	0xca37
 40715 14cdc 00000000 		.quad	.LBB4646
 40715      00000000 
 40716 14ce4 26000000 		.quad	.LBE4646-.LBB4646
 40716      00000000 
 40717 14cec 06       		.byte	0x6
 40718 14ced A901     		.value	0x1a9
 40719 14cef BD01     		.uleb128 0xbd
 40720 14cf1 46CA0000 		.long	0xca46
GAS LISTING /tmp/ccmMnd7l.s 			page 1033


 40721 14cf5 00000000 		.long	.LLST671
 40722 14cf9 CE01     		.uleb128 0xce
 40723 14cfb B9C90000 		.long	0xc9b9
 40724 14cff 00000000 		.quad	.LBB4648
 40724      00000000 
 40725 14d07 21000000 		.quad	.LBE4648-.LBB4648
 40725      00000000 
 40726 14d0f 06       		.byte	0x6
 40727 14d10 A0       		.byte	0xa0
 40728 14d11 B701     		.uleb128 0xb7
 40729 14d13 C8C90000 		.long	0xc9c8
 40730 14d17 BD01     		.uleb128 0xbd
 40731 14d19 DEC90000 		.long	0xc9de
 40732 14d1d 00000000 		.long	.LLST673
 40733 14d21 BD01     		.uleb128 0xbd
 40734 14d23 D2C90000 		.long	0xc9d2
 40735 14d27 00000000 		.long	.LLST674
 40736 14d2b B801     		.uleb128 0xb8
 40737 14d2d 00000000 		.quad	.LBB4649
 40737      00000000 
 40738 14d35 21000000 		.quad	.LBE4649-.LBB4649
 40738      00000000 
 40739 14d3d CE01     		.uleb128 0xce
 40740 14d3f 81C90000 		.long	0xc981
 40741 14d43 00000000 		.quad	.LBB4650
 40741      00000000 
 40742 14d4b 1C000000 		.quad	.LBE4650-.LBB4650
 40742      00000000 
 40743 14d53 06       		.byte	0x6
 40744 14d54 B2       		.byte	0xb2
 40745 14d55 B701     		.uleb128 0xb7
 40746 14d57 8CC90000 		.long	0xc98c
 40747 14d5b BD01     		.uleb128 0xbd
 40748 14d5d A6C90000 		.long	0xc9a6
 40749 14d61 00000000 		.long	.LLST675
 40750 14d65 BD01     		.uleb128 0xbd
 40751 14d67 99C90000 		.long	0xc999
 40752 14d6b 00000000 		.long	.LLST676
 40753 14d6f B601     		.uleb128 0xb6
 40754 14d71 56C90000 		.long	0xc956
 40755 14d75 00000000 		.quad	.LBB4651
 40755      00000000 
 40756 14d7d 1C000000 		.quad	.LBE4651-.LBB4651
 40756      00000000 
 40757 14d85 2F       		.byte	0x2f
 40758 14d86 7F01     		.value	0x17f
 40759 14d88 B701     		.uleb128 0xb7
 40760 14d8a 65C90000 		.long	0xc965
 40761 14d8e BD01     		.uleb128 0xbd
 40762 14d90 7BC90000 		.long	0xc97b
 40763 14d94 00000000 		.long	.LLST675
 40764 14d98 BD01     		.uleb128 0xbd
 40765 14d9a 6FC90000 		.long	0xc96f
 40766 14d9e 00000000 		.long	.LLST676
 40767 14da2 CD01     		.uleb128 0xcd
 40768 14da4 00000000 		.quad	.LVL648
 40768      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1034


 40769 14dac F84F0100 		.long	0x14ff8
 40770 14db0 00       		.byte	0
 40771 14db1 00       		.byte	0
 40772 14db2 00       		.byte	0
 40773 14db3 00       		.byte	0
 40774 14db4 00       		.byte	0
 40775 14db5 00       		.byte	0
 40776 14db6 C501     		.uleb128 0xc5
 40777 14db8 00000000 		.quad	.LVL358
 40777      00000000 
 40778 14dc0 54F00000 		.long	0xf054
 40779 14dc4 E34D0100 		.long	0x14de3
 40780 14dc8 C101     		.uleb128 0xc1
 40781 14dca 01       		.uleb128 0x1
 40782 14dcb 55       		.byte	0x55
 40783 14dcc 03       		.uleb128 0x3
 40784 14dcd 91       		.byte	0x91
 40785 14dce C07E     		.sleb128 -192
 40786 14dd0 C101     		.uleb128 0xc1
 40787 14dd2 01       		.uleb128 0x1
 40788 14dd3 54       		.byte	0x54
 40789 14dd4 05       		.uleb128 0x5
 40790 14dd5 0C       		.byte	0xc
 40791 14dd6 40420F00 		.long	0xf4240
 40792 14dda C101     		.uleb128 0xc1
 40793 14ddc 01       		.uleb128 0x1
 40794 14ddd 51       		.byte	0x51
 40795 14dde 03       		.uleb128 0x3
 40796 14ddf 0A       		.byte	0xa
 40797 14de0 003C     		.value	0x3c00
 40798 14de2 00       		.byte	0
 40799 14de3 C001     		.uleb128 0xc0
 40800 14de5 00000000 		.quad	.LVL590
 40800      00000000 
 40801 14ded 58B50000 		.long	0xb558
 40802 14df1 C101     		.uleb128 0xc1
 40803 14df3 01       		.uleb128 0x1
 40804 14df4 54       		.byte	0x54
 40805 14df5 09       		.uleb128 0x9
 40806 14df6 03       		.byte	0x3
 40807 14df7 00000000 		.quad	.LC32
 40807      00000000 
 40808 14dff 00       		.byte	0
 40809 14e00 00       		.byte	0
 40810 14e01 C001     		.uleb128 0xc0
 40811 14e03 00000000 		.quad	.LVL649
 40811      00000000 
 40812 14e0b 2B500100 		.long	0x1502b
 40813 14e0f C101     		.uleb128 0xc1
 40814 14e11 01       		.uleb128 0x1
 40815 14e12 55       		.byte	0x55
 40816 14e13 02       		.uleb128 0x2
 40817 14e14 73       		.byte	0x73
 40818 14e15 00       		.sleb128 0
 40819 14e16 00       		.byte	0
 40820 14e17 00       		.byte	0
 40821 14e18 D701     		.uleb128 0xd7
GAS LISTING /tmp/ccmMnd7l.s 			page 1035


 40822 14e1a 00000000 		.long	.LASF1672
 40823 14e1e 00000000 		.quad	.LFB6592
 40823      00000000 
 40824 14e26 2E000000 		.quad	.LFE6592-.LFB6592
 40824      00000000 
 40825 14e2e 01       		.uleb128 0x1
 40826 14e2f 9C       		.byte	0x9c
 40827 14e30 974E0100 		.long	0x14e97
 40828 14e34 CB01     		.uleb128 0xcb
 40829 14e36 50E10000 		.long	0xe150
 40830 14e3a 00000000 		.quad	.LBB4657
 40830      00000000 
 40831 14e42 00000000 		.long	.Ldebug_ranges0+0x2e50
 40832 14e46 16       		.byte	0x16
 40833 14e47 51       		.byte	0x51
 40834 14e48 D801     		.uleb128 0xd8
 40835 14e4a 5BE10000 		.long	0xe15b
 40836 14e4e 01       		.byte	0x1
 40837 14e4f D901     		.uleb128 0xd9
 40838 14e51 67E10000 		.long	0xe167
 40839 14e55 FFFF     		.value	0xffff
 40840 14e57 DA01     		.uleb128 0xda
 40841 14e59 00000000 		.quad	.LVL709
 40841      00000000 
 40842 14e61 744E0100 		.long	0x14e74
 40843 14e65 C101     		.uleb128 0xc1
 40844 14e67 01       		.uleb128 0x1
 40845 14e68 55       		.byte	0x55
 40846 14e69 09       		.uleb128 0x9
 40847 14e6a 03       		.byte	0x3
 40848 14e6b 00000000 		.quad	_ZStL8__ioinit
 40848      00000000 
 40849 14e73 00       		.byte	0
 40850 14e74 DB01     		.uleb128 0xdb
 40851 14e76 00000000 		.quad	.LVL710
 40851      00000000 
 40852 14e7e 02510100 		.long	0x15102
 40853 14e82 C101     		.uleb128 0xc1
 40854 14e84 01       		.uleb128 0x1
 40855 14e85 54       		.byte	0x54
 40856 14e86 09       		.uleb128 0x9
 40857 14e87 03       		.byte	0x3
 40858 14e88 00000000 		.quad	_ZStL8__ioinit
 40858      00000000 
 40859 14e90 DC01     		.uleb128 0xdc
 40860 14e92 01       		.uleb128 0x1
 40861 14e93 51       		.byte	0x51
 40862 14e94 00       		.byte	0
 40863 14e95 00       		.byte	0
 40864 14e96 00       		.byte	0
 40865 14e97 DD01     		.uleb128 0xdd
 40866 14e99 00000000 		.long	.LASF1622
 40867 14e9d 3E       		.byte	0x3e
 40868 14e9e A5       		.byte	0xa5
 40869 14e9f E7A80000 		.long	0xa8e7
 40870 14ea3 DD01     		.uleb128 0xdd
 40871 14ea5 00000000 		.long	.LASF1623
GAS LISTING /tmp/ccmMnd7l.s 			page 1036


 40872 14ea9 3E       		.byte	0x3e
 40873 14eaa A6       		.byte	0xa6
 40874 14eab E7A80000 		.long	0xa8e7
 40875 14eaf DE01     		.uleb128 0xde
 40876 14eb1 00000000 		.long	.LASF1624
 40877 14eb5 16       		.byte	0x16
 40878 14eb6 1E       		.byte	0x1e
 40879 14eb7 BC4E0100 		.long	0x14ebc
 40880 14ebb 01       		.byte	0x1
 40881 14ebc 11       		.uleb128 0x11
 40882 14ebd 73990000 		.long	0x9973
 40883 14ec1 DF01     		.uleb128 0xdf
 40884 14ec3 00000000 		.long	.LASF1625
 40885 14ec7 16       		.byte	0x16
 40886 14ec8 1F       		.byte	0x1f
 40887 14ec9 BC4E0100 		.long	0x14ebc
 40888 14ecd 40420F00 		.long	0xf4240
 40889 14ed1 DE01     		.uleb128 0xde
 40890 14ed3 00000000 		.long	.LASF1626
 40891 14ed7 16       		.byte	0x16
 40892 14ed8 20       		.byte	0x20
 40893 14ed9 BC4E0100 		.long	0x14ebc
 40894 14edd 01       		.byte	0x1
 40895 14ede E001     		.uleb128 0xe0
 40896 14ee0 00000000 		.long	.LASF1627
 40897 14ee4 16       		.byte	0x16
 40898 14ee5 21       		.byte	0x21
 40899 14ee6 BC4E0100 		.long	0x14ebc
 40900 14eea 0002     		.value	0x200
 40901 14eec E001     		.uleb128 0xe0
 40902 14eee 00000000 		.long	.LASF1628
 40903 14ef2 16       		.byte	0x16
 40904 14ef3 22       		.byte	0x22
 40905 14ef4 BC4E0100 		.long	0x14ebc
 40906 14ef8 003C     		.value	0x3c00
 40907 14efa E101     		.uleb128 0xe1
 40908 14efc 00000000 		.long	.LASF1629
 40909 14f00 B1800000 		.long	0x80b1
 40910 14f04 E201     		.uleb128 0xe2
 40911 14f06 BC950000 		.long	0x95bc
 40912 14f0a 02       		.byte	0x2
 40913 14f0b E301     		.uleb128 0xe3
 40914 14f0d EF7F0000 		.long	0x7fef
 40915 14f11 E301     		.uleb128 0xe3
 40916 14f13 01800000 		.long	0x8001
 40917 14f17 E301     		.uleb128 0xe3
 40918 14f19 13800000 		.long	0x8013
 40919 14f1d E401     		.uleb128 0xe4
 40920 14f1f 4F800000 		.long	0x804f
 40921 14f23 09       		.uleb128 0x9
 40922 14f24 03       		.byte	0x3
 40923 14f25 00000000 		.quad	_ZStL8__ioinit
 40923      00000000 
 40924 14f2d E501     		.uleb128 0xe5
 40925 14f2f 24020000 		.long	0x224
 40926 14f33 00000000 		.long	.LASF1630
 40927 14f37 E501     		.uleb128 0xe5
GAS LISTING /tmp/ccmMnd7l.s 			page 1037


 40928 14f39 7C020000 		.long	0x27c
 40929 14f3d 00000000 		.long	.LASF1631
 40930 14f41 E501     		.uleb128 0xe5
 40931 14f43 DF830000 		.long	0x83df
 40932 14f47 00000000 		.long	.LASF1632
 40933 14f4b E501     		.uleb128 0xe5
 40934 14f4d EA830000 		.long	0x83ea
 40935 14f51 00000000 		.long	.LASF1633
 40936 14f55 E501     		.uleb128 0xe5
 40937 14f57 CF880000 		.long	0x88cf
 40938 14f5b 00000000 		.long	.LASF1634
 40939 14f5f E501     		.uleb128 0xe5
 40940 14f61 11890000 		.long	0x8911
 40941 14f65 00000000 		.long	.LASF1635
 40942 14f69 E501     		.uleb128 0xe5
 40943 14f6b 53890000 		.long	0x8953
 40944 14f6f 00000000 		.long	.LASF1636
 40945 14f73 E501     		.uleb128 0xe5
 40946 14f75 70240000 		.long	0x2470
 40947 14f79 00000000 		.long	.LASF1637
 40948 14f7d E501     		.uleb128 0xe5
 40949 14f7f 95890000 		.long	0x8995
 40950 14f83 00000000 		.long	.LASF1638
 40951 14f87 E501     		.uleb128 0xe5
 40952 14f89 C1890000 		.long	0x89c1
 40953 14f8d 00000000 		.long	.LASF1639
 40954 14f91 E501     		.uleb128 0xe5
 40955 14f93 F8890000 		.long	0x89f8
 40956 14f97 00000000 		.long	.LASF1640
 40957 14f9b E501     		.uleb128 0xe5
 40958 14f9d 038A0000 		.long	0x8a03
 40959 14fa1 00000000 		.long	.LASF1641
 40960 14fa5 E501     		.uleb128 0xe5
 40961 14fa7 3A8A0000 		.long	0x8a3a
 40962 14fab 00000000 		.long	.LASF1642
 40963 14faf E501     		.uleb128 0xe5
 40964 14fb1 458A0000 		.long	0x8a45
 40965 14fb5 00000000 		.long	.LASF1643
 40966 14fb9 E501     		.uleb128 0xe5
 40967 14fbb 9C2C0000 		.long	0x2c9c
 40968 14fbf 00000000 		.long	.LASF1644
 40969 14fc3 9201     		.uleb128 0x92
 40970 14fc5 49530000 		.long	0x5349
 40971 14fc9 D34F0100 		.long	0x14fd3
 40972 14fcd 09       		.uleb128 0x9
 40973 14fce 812C0000 		.long	0x2c81
 40974 14fd2 00       		.byte	0
 40975 14fd3 8401     		.uleb128 0x84
 40976 14fd5 00000000 		.long	.LASF1645
 40977 14fd9 4F       		.byte	0x4f
 40978 14fda 61       		.byte	0x61
 40979 14fdb 29000000 		.long	0x29
 40980 14fdf 4E       		.uleb128 0x4e
 40981 14fe0 00000000 		.long	.LASF1646
 40982 14fe4 1C       		.byte	0x1c
 40983 14fe5 80       		.byte	0x80
 40984 14fe6 00000000 		.long	.LASF1647
GAS LISTING /tmp/ccmMnd7l.s 			page 1038


 40985 14fea B1800000 		.long	0x80b1
 40986 14fee F84F0100 		.long	0x14ff8
 40987 14ff2 09       		.uleb128 0x9
 40988 14ff3 85060000 		.long	0x685
 40989 14ff7 00       		.byte	0
 40990 14ff8 1C       		.uleb128 0x1c
 40991 14ff9 00000000 		.long	.LASF1648
 40992 14ffd 1C       		.byte	0x1c
 40993 14ffe 84       		.byte	0x84
 40994 14fff 00000000 		.long	.LASF1649
 40995 15003 0D500100 		.long	0x1500d
 40996 15007 09       		.uleb128 0x9
 40997 15008 B1800000 		.long	0x80b1
 40998 1500c 00       		.byte	0
 40999 1500d E601     		.uleb128 0xe6
 41000 1500f 00000000 		.long	.LASF1650
 41001 15013 B1800000 		.long	0x80b1
 41002 15017 2B500100 		.long	0x1502b
 41003 1501b 09       		.uleb128 0x9
 41004 1501c B1800000 		.long	0x80b1
 41005 15020 09       		.uleb128 0x9
 41006 15021 D8800000 		.long	0x80d8
 41007 15025 09       		.uleb128 0x9
 41008 15026 2F990000 		.long	0x992f
 41009 1502a 00       		.byte	0
 41010 1502b E701     		.uleb128 0xe7
 41011 1502d 00000000 		.long	.LASF1651
 41012 15031 00000000 		.long	.LASF1673
 41013 15035 3F500100 		.long	0x1503f
 41014 15039 09       		.uleb128 0x9
 41015 1503a B1800000 		.long	0x80b1
 41016 1503e 00       		.byte	0
 41017 1503f E801     		.uleb128 0xe8
 41018 15041 00000000 		.long	.LASF1652
 41019 15045 00000000 		.long	.LASF1674
 41020 15049 B1800000 		.long	0x80b1
 41021 1504d 61500100 		.long	0x15061
 41022 15051 09       		.uleb128 0x9
 41023 15052 B1800000 		.long	0x80b1
 41024 15056 09       		.uleb128 0x9
 41025 15057 01A30000 		.long	0xa301
 41026 1505b 09       		.uleb128 0x9
 41027 1505c 03810000 		.long	0x8103
 41028 15060 00       		.byte	0
 41029 15061 4A       		.uleb128 0x4a
 41030 15062 00000000 		.long	.LASF1653
 41031 15066 4D       		.byte	0x4d
 41032 15067 51       		.byte	0x51
 41033 15068 81500100 		.long	0x15081
 41034 1506c 09       		.uleb128 0x9
 41035 1506d 57B00000 		.long	0xb057
 41036 15071 09       		.uleb128 0x9
 41037 15072 18810000 		.long	0x8118
 41038 15076 09       		.uleb128 0x9
 41039 15077 18810000 		.long	0x8118
 41040 1507b 09       		.uleb128 0x9
 41041 1507c 81500100 		.long	0x15081
GAS LISTING /tmp/ccmMnd7l.s 			page 1039


 41042 15080 00       		.byte	0
 41043 15081 7E       		.uleb128 0x7e
 41044 15082 08       		.byte	0x8
 41045 15083 87500100 		.long	0x15087
 41046 15087 11       		.uleb128 0x11
 41047 15088 46B00000 		.long	0xb046
 41048 1508c 4A       		.uleb128 0x4a
 41049 1508d 00000000 		.long	.LASF1654
 41050 15091 4D       		.byte	0x4d
 41051 15092 47       		.byte	0x47
 41052 15093 9D500100 		.long	0x1509d
 41053 15097 09       		.uleb128 0x9
 41054 15098 57B00000 		.long	0xb057
 41055 1509c 00       		.byte	0
 41056 1509d 52       		.uleb128 0x52
 41057 1509e 00000000 		.long	.LASF1655
 41058 150a2 4D       		.byte	0x4d
 41059 150a3 45       		.byte	0x45
 41060 150a4 57B00000 		.long	0xb057
 41061 150a8 B7500100 		.long	0x150b7
 41062 150ac 09       		.uleb128 0x9
 41063 150ad 18810000 		.long	0x8118
 41064 150b1 09       		.uleb128 0x9
 41065 150b2 18810000 		.long	0x8118
 41066 150b6 00       		.byte	0
 41067 150b7 4A       		.uleb128 0x4a
 41068 150b8 00000000 		.long	.LASF1656
 41069 150bc 4D       		.byte	0x4d
 41070 150bd A3       		.byte	0xa3
 41071 150be C8500100 		.long	0x150c8
 41072 150c2 09       		.uleb128 0x9
 41073 150c3 63B00000 		.long	0xb063
 41074 150c7 00       		.byte	0
 41075 150c8 52       		.uleb128 0x52
 41076 150c9 00000000 		.long	.LASF1657
 41077 150cd 4D       		.byte	0x4d
 41078 150ce 93       		.byte	0x93
 41079 150cf 63B00000 		.long	0xb063
 41080 150d3 DD500100 		.long	0x150dd
 41081 150d7 09       		.uleb128 0x9
 41082 150d8 18810000 		.long	0x8118
 41083 150dc 00       		.byte	0
 41084 150dd 4A       		.uleb128 0x4a
 41085 150de 00000000 		.long	.LASF1658
 41086 150e2 4D       		.byte	0x4d
 41087 150e3 56       		.byte	0x56
 41088 150e4 02510100 		.long	0x15102
 41089 150e8 09       		.uleb128 0x9
 41090 150e9 57B00000 		.long	0xb057
 41091 150ed 09       		.uleb128 0x9
 41092 150ee 18810000 		.long	0x8118
 41093 150f2 09       		.uleb128 0x9
 41094 150f3 18810000 		.long	0x8118
 41095 150f7 09       		.uleb128 0x9
 41096 150f8 30000000 		.long	0x30
 41097 150fc 09       		.uleb128 0x9
 41098 150fd 81500100 		.long	0x15081
GAS LISTING /tmp/ccmMnd7l.s 			page 1040


 41099 15101 00       		.byte	0
 41100 15102 E901     		.uleb128 0xe9
 41101 15104 00000000 		.long	.LASF1659
 41102 15108 D8800000 		.long	0x80d8
 41103 1510c 09       		.uleb128 0x9
 41104 1510d B9A40000 		.long	0xa4b9
 41105 15111 09       		.uleb128 0x9
 41106 15112 B1800000 		.long	0x80b1
 41107 15116 09       		.uleb128 0x9
 41108 15117 B1800000 		.long	0x80b1
 41109 1511b 00       		.byte	0
 41110 1511c 00       		.byte	0
 41111              		.section	.debug_abbrev,"",@progbits
 41112              	.Ldebug_abbrev0:
 41113 0000 01       		.uleb128 0x1
 41114 0001 11       		.uleb128 0x11
 41115 0002 01       		.byte	0x1
 41116 0003 25       		.uleb128 0x25
 41117 0004 0E       		.uleb128 0xe
 41118 0005 13       		.uleb128 0x13
 41119 0006 0B       		.uleb128 0xb
 41120 0007 03       		.uleb128 0x3
 41121 0008 0E       		.uleb128 0xe
 41122 0009 1B       		.uleb128 0x1b
 41123 000a 0E       		.uleb128 0xe
 41124 000b 55       		.uleb128 0x55
 41125 000c 17       		.uleb128 0x17
 41126 000d 11       		.uleb128 0x11
 41127 000e 01       		.uleb128 0x1
 41128 000f 10       		.uleb128 0x10
 41129 0010 17       		.uleb128 0x17
 41130 0011 00       		.byte	0
 41131 0012 00       		.byte	0
 41132 0013 02       		.uleb128 0x2
 41133 0014 24       		.uleb128 0x24
 41134 0015 00       		.byte	0
 41135 0016 0B       		.uleb128 0xb
 41136 0017 0B       		.uleb128 0xb
 41137 0018 3E       		.uleb128 0x3e
 41138 0019 0B       		.uleb128 0xb
 41139 001a 03       		.uleb128 0x3
 41140 001b 0E       		.uleb128 0xe
 41141 001c 00       		.byte	0
 41142 001d 00       		.byte	0
 41143 001e 03       		.uleb128 0x3
 41144 001f 39       		.uleb128 0x39
 41145 0020 01       		.byte	0x1
 41146 0021 03       		.uleb128 0x3
 41147 0022 08       		.uleb128 0x8
 41148 0023 3A       		.uleb128 0x3a
 41149 0024 0B       		.uleb128 0xb
 41150 0025 3B       		.uleb128 0x3b
 41151 0026 0B       		.uleb128 0xb
 41152 0027 01       		.uleb128 0x1
 41153 0028 13       		.uleb128 0x13
 41154 0029 00       		.byte	0
 41155 002a 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1041


 41156 002b 04       		.uleb128 0x4
 41157 002c 39       		.uleb128 0x39
 41158 002d 01       		.byte	0x1
 41159 002e 03       		.uleb128 0x3
 41160 002f 0E       		.uleb128 0xe
 41161 0030 3A       		.uleb128 0x3a
 41162 0031 0B       		.uleb128 0xb
 41163 0032 3B       		.uleb128 0x3b
 41164 0033 0B       		.uleb128 0xb
 41165 0034 01       		.uleb128 0x1
 41166 0035 13       		.uleb128 0x13
 41167 0036 00       		.byte	0
 41168 0037 00       		.byte	0
 41169 0038 05       		.uleb128 0x5
 41170 0039 02       		.uleb128 0x2
 41171 003a 01       		.byte	0x1
 41172 003b 03       		.uleb128 0x3
 41173 003c 0E       		.uleb128 0xe
 41174 003d 0B       		.uleb128 0xb
 41175 003e 0B       		.uleb128 0xb
 41176 003f 3A       		.uleb128 0x3a
 41177 0040 0B       		.uleb128 0xb
 41178 0041 3B       		.uleb128 0x3b
 41179 0042 0B       		.uleb128 0xb
 41180 0043 01       		.uleb128 0x1
 41181 0044 13       		.uleb128 0x13
 41182 0045 00       		.byte	0
 41183 0046 00       		.byte	0
 41184 0047 06       		.uleb128 0x6
 41185 0048 0D       		.uleb128 0xd
 41186 0049 00       		.byte	0
 41187 004a 03       		.uleb128 0x3
 41188 004b 0E       		.uleb128 0xe
 41189 004c 3A       		.uleb128 0x3a
 41190 004d 0B       		.uleb128 0xb
 41191 004e 3B       		.uleb128 0x3b
 41192 004f 0B       		.uleb128 0xb
 41193 0050 49       		.uleb128 0x49
 41194 0051 13       		.uleb128 0x13
 41195 0052 38       		.uleb128 0x38
 41196 0053 0B       		.uleb128 0xb
 41197 0054 00       		.byte	0
 41198 0055 00       		.byte	0
 41199 0056 07       		.uleb128 0x7
 41200 0057 2E       		.uleb128 0x2e
 41201 0058 01       		.byte	0x1
 41202 0059 3F       		.uleb128 0x3f
 41203 005a 19       		.uleb128 0x19
 41204 005b 03       		.uleb128 0x3
 41205 005c 0E       		.uleb128 0xe
 41206 005d 3A       		.uleb128 0x3a
 41207 005e 0B       		.uleb128 0xb
 41208 005f 3B       		.uleb128 0x3b
 41209 0060 0B       		.uleb128 0xb
 41210 0061 3C       		.uleb128 0x3c
 41211 0062 19       		.uleb128 0x19
 41212 0063 63       		.uleb128 0x63
GAS LISTING /tmp/ccmMnd7l.s 			page 1042


 41213 0064 19       		.uleb128 0x19
 41214 0065 64       		.uleb128 0x64
 41215 0066 13       		.uleb128 0x13
 41216 0067 01       		.uleb128 0x1
 41217 0068 13       		.uleb128 0x13
 41218 0069 00       		.byte	0
 41219 006a 00       		.byte	0
 41220 006b 08       		.uleb128 0x8
 41221 006c 05       		.uleb128 0x5
 41222 006d 00       		.byte	0
 41223 006e 49       		.uleb128 0x49
 41224 006f 13       		.uleb128 0x13
 41225 0070 34       		.uleb128 0x34
 41226 0071 19       		.uleb128 0x19
 41227 0072 00       		.byte	0
 41228 0073 00       		.byte	0
 41229 0074 09       		.uleb128 0x9
 41230 0075 05       		.uleb128 0x5
 41231 0076 00       		.byte	0
 41232 0077 49       		.uleb128 0x49
 41233 0078 13       		.uleb128 0x13
 41234 0079 00       		.byte	0
 41235 007a 00       		.byte	0
 41236 007b 0A       		.uleb128 0xa
 41237 007c 2E       		.uleb128 0x2e
 41238 007d 01       		.byte	0x1
 41239 007e 3F       		.uleb128 0x3f
 41240 007f 19       		.uleb128 0x19
 41241 0080 03       		.uleb128 0x3
 41242 0081 0E       		.uleb128 0xe
 41243 0082 3A       		.uleb128 0x3a
 41244 0083 0B       		.uleb128 0xb
 41245 0084 3B       		.uleb128 0x3b
 41246 0085 0B       		.uleb128 0xb
 41247 0086 6E       		.uleb128 0x6e
 41248 0087 0E       		.uleb128 0xe
 41249 0088 3C       		.uleb128 0x3c
 41250 0089 19       		.uleb128 0x19
 41251 008a 64       		.uleb128 0x64
 41252 008b 13       		.uleb128 0x13
 41253 008c 01       		.uleb128 0x1
 41254 008d 13       		.uleb128 0x13
 41255 008e 00       		.byte	0
 41256 008f 00       		.byte	0
 41257 0090 0B       		.uleb128 0xb
 41258 0091 2E       		.uleb128 0x2e
 41259 0092 01       		.byte	0x1
 41260 0093 3F       		.uleb128 0x3f
 41261 0094 19       		.uleb128 0x19
 41262 0095 03       		.uleb128 0x3
 41263 0096 0E       		.uleb128 0xe
 41264 0097 3A       		.uleb128 0x3a
 41265 0098 0B       		.uleb128 0xb
 41266 0099 3B       		.uleb128 0x3b
 41267 009a 0B       		.uleb128 0xb
 41268 009b 6E       		.uleb128 0x6e
 41269 009c 0E       		.uleb128 0xe
GAS LISTING /tmp/ccmMnd7l.s 			page 1043


 41270 009d 49       		.uleb128 0x49
 41271 009e 13       		.uleb128 0x13
 41272 009f 3C       		.uleb128 0x3c
 41273 00a0 19       		.uleb128 0x19
 41274 00a1 64       		.uleb128 0x64
 41275 00a2 13       		.uleb128 0x13
 41276 00a3 01       		.uleb128 0x1
 41277 00a4 13       		.uleb128 0x13
 41278 00a5 00       		.byte	0
 41279 00a6 00       		.byte	0
 41280 00a7 0C       		.uleb128 0xc
 41281 00a8 2E       		.uleb128 0x2e
 41282 00a9 01       		.byte	0x1
 41283 00aa 3F       		.uleb128 0x3f
 41284 00ab 19       		.uleb128 0x19
 41285 00ac 03       		.uleb128 0x3
 41286 00ad 0E       		.uleb128 0xe
 41287 00ae 3A       		.uleb128 0x3a
 41288 00af 0B       		.uleb128 0xb
 41289 00b0 3B       		.uleb128 0x3b
 41290 00b1 0B       		.uleb128 0xb
 41291 00b2 32       		.uleb128 0x32
 41292 00b3 0B       		.uleb128 0xb
 41293 00b4 3C       		.uleb128 0x3c
 41294 00b5 19       		.uleb128 0x19
 41295 00b6 64       		.uleb128 0x64
 41296 00b7 13       		.uleb128 0x13
 41297 00b8 01       		.uleb128 0x1
 41298 00b9 13       		.uleb128 0x13
 41299 00ba 00       		.byte	0
 41300 00bb 00       		.byte	0
 41301 00bc 0D       		.uleb128 0xd
 41302 00bd 2E       		.uleb128 0x2e
 41303 00be 01       		.byte	0x1
 41304 00bf 3F       		.uleb128 0x3f
 41305 00c0 19       		.uleb128 0x19
 41306 00c1 03       		.uleb128 0x3
 41307 00c2 0E       		.uleb128 0xe
 41308 00c3 3A       		.uleb128 0x3a
 41309 00c4 0B       		.uleb128 0xb
 41310 00c5 3B       		.uleb128 0x3b
 41311 00c6 0B       		.uleb128 0xb
 41312 00c7 6E       		.uleb128 0x6e
 41313 00c8 0E       		.uleb128 0xe
 41314 00c9 49       		.uleb128 0x49
 41315 00ca 13       		.uleb128 0x13
 41316 00cb 32       		.uleb128 0x32
 41317 00cc 0B       		.uleb128 0xb
 41318 00cd 3C       		.uleb128 0x3c
 41319 00ce 19       		.uleb128 0x19
 41320 00cf 64       		.uleb128 0x64
 41321 00d0 13       		.uleb128 0x13
 41322 00d1 01       		.uleb128 0x1
 41323 00d2 13       		.uleb128 0x13
 41324 00d3 00       		.byte	0
 41325 00d4 00       		.byte	0
 41326 00d5 0E       		.uleb128 0xe
GAS LISTING /tmp/ccmMnd7l.s 			page 1044


 41327 00d6 2E       		.uleb128 0x2e
 41328 00d7 01       		.byte	0x1
 41329 00d8 3F       		.uleb128 0x3f
 41330 00d9 19       		.uleb128 0x19
 41331 00da 03       		.uleb128 0x3
 41332 00db 0E       		.uleb128 0xe
 41333 00dc 3A       		.uleb128 0x3a
 41334 00dd 0B       		.uleb128 0xb
 41335 00de 3B       		.uleb128 0x3b
 41336 00df 0B       		.uleb128 0xb
 41337 00e0 6E       		.uleb128 0x6e
 41338 00e1 0E       		.uleb128 0xe
 41339 00e2 32       		.uleb128 0x32
 41340 00e3 0B       		.uleb128 0xb
 41341 00e4 3C       		.uleb128 0x3c
 41342 00e5 19       		.uleb128 0x19
 41343 00e6 64       		.uleb128 0x64
 41344 00e7 13       		.uleb128 0x13
 41345 00e8 01       		.uleb128 0x1
 41346 00e9 13       		.uleb128 0x13
 41347 00ea 00       		.byte	0
 41348 00eb 00       		.byte	0
 41349 00ec 0F       		.uleb128 0xf
 41350 00ed 2E       		.uleb128 0x2e
 41351 00ee 01       		.byte	0x1
 41352 00ef 3F       		.uleb128 0x3f
 41353 00f0 19       		.uleb128 0x19
 41354 00f1 03       		.uleb128 0x3
 41355 00f2 0E       		.uleb128 0xe
 41356 00f3 3A       		.uleb128 0x3a
 41357 00f4 0B       		.uleb128 0xb
 41358 00f5 3B       		.uleb128 0x3b
 41359 00f6 0B       		.uleb128 0xb
 41360 00f7 6E       		.uleb128 0x6e
 41361 00f8 0E       		.uleb128 0xe
 41362 00f9 49       		.uleb128 0x49
 41363 00fa 13       		.uleb128 0x13
 41364 00fb 32       		.uleb128 0x32
 41365 00fc 0B       		.uleb128 0xb
 41366 00fd 3C       		.uleb128 0x3c
 41367 00fe 19       		.uleb128 0x19
 41368 00ff 63       		.uleb128 0x63
 41369 0100 19       		.uleb128 0x19
 41370 0101 64       		.uleb128 0x64
 41371 0102 13       		.uleb128 0x13
 41372 0103 01       		.uleb128 0x1
 41373 0104 13       		.uleb128 0x13
 41374 0105 00       		.byte	0
 41375 0106 00       		.byte	0
 41376 0107 10       		.uleb128 0x10
 41377 0108 2E       		.uleb128 0x2e
 41378 0109 01       		.byte	0x1
 41379 010a 3F       		.uleb128 0x3f
 41380 010b 19       		.uleb128 0x19
 41381 010c 03       		.uleb128 0x3
 41382 010d 0E       		.uleb128 0xe
 41383 010e 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccmMnd7l.s 			page 1045


 41384 010f 0B       		.uleb128 0xb
 41385 0110 3B       		.uleb128 0x3b
 41386 0111 0B       		.uleb128 0xb
 41387 0112 6E       		.uleb128 0x6e
 41388 0113 0E       		.uleb128 0xe
 41389 0114 49       		.uleb128 0x49
 41390 0115 13       		.uleb128 0x13
 41391 0116 32       		.uleb128 0x32
 41392 0117 0B       		.uleb128 0xb
 41393 0118 3C       		.uleb128 0x3c
 41394 0119 19       		.uleb128 0x19
 41395 011a 64       		.uleb128 0x64
 41396 011b 13       		.uleb128 0x13
 41397 011c 00       		.byte	0
 41398 011d 00       		.byte	0
 41399 011e 11       		.uleb128 0x11
 41400 011f 26       		.uleb128 0x26
 41401 0120 00       		.byte	0
 41402 0121 49       		.uleb128 0x49
 41403 0122 13       		.uleb128 0x13
 41404 0123 00       		.byte	0
 41405 0124 00       		.byte	0
 41406 0125 12       		.uleb128 0x12
 41407 0126 08       		.uleb128 0x8
 41408 0127 00       		.byte	0
 41409 0128 3A       		.uleb128 0x3a
 41410 0129 0B       		.uleb128 0xb
 41411 012a 3B       		.uleb128 0x3b
 41412 012b 0B       		.uleb128 0xb
 41413 012c 18       		.uleb128 0x18
 41414 012d 13       		.uleb128 0x13
 41415 012e 00       		.byte	0
 41416 012f 00       		.byte	0
 41417 0130 13       		.uleb128 0x13
 41418 0131 16       		.uleb128 0x16
 41419 0132 00       		.byte	0
 41420 0133 03       		.uleb128 0x3
 41421 0134 0E       		.uleb128 0xe
 41422 0135 3A       		.uleb128 0x3a
 41423 0136 0B       		.uleb128 0xb
 41424 0137 3B       		.uleb128 0x3b
 41425 0138 0B       		.uleb128 0xb
 41426 0139 49       		.uleb128 0x49
 41427 013a 13       		.uleb128 0x13
 41428 013b 00       		.byte	0
 41429 013c 00       		.byte	0
 41430 013d 14       		.uleb128 0x14
 41431 013e 02       		.uleb128 0x2
 41432 013f 00       		.byte	0
 41433 0140 03       		.uleb128 0x3
 41434 0141 0E       		.uleb128 0xe
 41435 0142 3C       		.uleb128 0x3c
 41436 0143 19       		.uleb128 0x19
 41437 0144 00       		.byte	0
 41438 0145 00       		.byte	0
 41439 0146 15       		.uleb128 0x15
 41440 0147 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1046


 41441 0148 00       		.byte	0
 41442 0149 03       		.uleb128 0x3
 41443 014a 0E       		.uleb128 0xe
 41444 014b 0B       		.uleb128 0xb
 41445 014c 0B       		.uleb128 0xb
 41446 014d 3A       		.uleb128 0x3a
 41447 014e 0B       		.uleb128 0xb
 41448 014f 3B       		.uleb128 0x3b
 41449 0150 0B       		.uleb128 0xb
 41450 0151 00       		.byte	0
 41451 0152 00       		.byte	0
 41452 0153 16       		.uleb128 0x16
 41453 0154 13       		.uleb128 0x13
 41454 0155 01       		.byte	0x1
 41455 0156 03       		.uleb128 0x3
 41456 0157 0E       		.uleb128 0xe
 41457 0158 0B       		.uleb128 0xb
 41458 0159 0B       		.uleb128 0xb
 41459 015a 3A       		.uleb128 0x3a
 41460 015b 0B       		.uleb128 0xb
 41461 015c 3B       		.uleb128 0x3b
 41462 015d 0B       		.uleb128 0xb
 41463 015e 01       		.uleb128 0x1
 41464 015f 13       		.uleb128 0x13
 41465 0160 00       		.byte	0
 41466 0161 00       		.byte	0
 41467 0162 17       		.uleb128 0x17
 41468 0163 0D       		.uleb128 0xd
 41469 0164 00       		.byte	0
 41470 0165 03       		.uleb128 0x3
 41471 0166 0E       		.uleb128 0xe
 41472 0167 3A       		.uleb128 0x3a
 41473 0168 0B       		.uleb128 0xb
 41474 0169 3B       		.uleb128 0x3b
 41475 016a 0B       		.uleb128 0xb
 41476 016b 49       		.uleb128 0x49
 41477 016c 13       		.uleb128 0x13
 41478 016d 3F       		.uleb128 0x3f
 41479 016e 19       		.uleb128 0x19
 41480 016f 3C       		.uleb128 0x3c
 41481 0170 19       		.uleb128 0x19
 41482 0171 00       		.byte	0
 41483 0172 00       		.byte	0
 41484 0173 18       		.uleb128 0x18
 41485 0174 2F       		.uleb128 0x2f
 41486 0175 00       		.byte	0
 41487 0176 03       		.uleb128 0x3
 41488 0177 08       		.uleb128 0x8
 41489 0178 49       		.uleb128 0x49
 41490 0179 13       		.uleb128 0x13
 41491 017a 00       		.byte	0
 41492 017b 00       		.byte	0
 41493 017c 19       		.uleb128 0x19
 41494 017d 30       		.uleb128 0x30
 41495 017e 00       		.byte	0
 41496 017f 03       		.uleb128 0x3
 41497 0180 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 1047


 41498 0181 49       		.uleb128 0x49
 41499 0182 13       		.uleb128 0x13
 41500 0183 1C       		.uleb128 0x1c
 41501 0184 0B       		.uleb128 0xb
 41502 0185 00       		.byte	0
 41503 0186 00       		.byte	0
 41504 0187 1A       		.uleb128 0x1a
 41505 0188 39       		.uleb128 0x39
 41506 0189 00       		.byte	0
 41507 018a 03       		.uleb128 0x3
 41508 018b 0E       		.uleb128 0xe
 41509 018c 3A       		.uleb128 0x3a
 41510 018d 0B       		.uleb128 0xb
 41511 018e 3B       		.uleb128 0x3b
 41512 018f 0B       		.uleb128 0xb
 41513 0190 00       		.byte	0
 41514 0191 00       		.byte	0
 41515 0192 1B       		.uleb128 0x1b
 41516 0193 08       		.uleb128 0x8
 41517 0194 00       		.byte	0
 41518 0195 3A       		.uleb128 0x3a
 41519 0196 0B       		.uleb128 0xb
 41520 0197 3B       		.uleb128 0x3b
 41521 0198 05       		.uleb128 0x5
 41522 0199 18       		.uleb128 0x18
 41523 019a 13       		.uleb128 0x13
 41524 019b 00       		.byte	0
 41525 019c 00       		.byte	0
 41526 019d 1C       		.uleb128 0x1c
 41527 019e 2E       		.uleb128 0x2e
 41528 019f 01       		.byte	0x1
 41529 01a0 3F       		.uleb128 0x3f
 41530 01a1 19       		.uleb128 0x19
 41531 01a2 03       		.uleb128 0x3
 41532 01a3 0E       		.uleb128 0xe
 41533 01a4 3A       		.uleb128 0x3a
 41534 01a5 0B       		.uleb128 0xb
 41535 01a6 3B       		.uleb128 0x3b
 41536 01a7 0B       		.uleb128 0xb
 41537 01a8 6E       		.uleb128 0x6e
 41538 01a9 0E       		.uleb128 0xe
 41539 01aa 3C       		.uleb128 0x3c
 41540 01ab 19       		.uleb128 0x19
 41541 01ac 01       		.uleb128 0x1
 41542 01ad 13       		.uleb128 0x13
 41543 01ae 00       		.byte	0
 41544 01af 00       		.byte	0
 41545 01b0 1D       		.uleb128 0x1d
 41546 01b1 2E       		.uleb128 0x2e
 41547 01b2 01       		.byte	0x1
 41548 01b3 3F       		.uleb128 0x3f
 41549 01b4 19       		.uleb128 0x19
 41550 01b5 03       		.uleb128 0x3
 41551 01b6 08       		.uleb128 0x8
 41552 01b7 3A       		.uleb128 0x3a
 41553 01b8 0B       		.uleb128 0xb
 41554 01b9 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccmMnd7l.s 			page 1048


 41555 01ba 0B       		.uleb128 0xb
 41556 01bb 6E       		.uleb128 0x6e
 41557 01bc 0E       		.uleb128 0xe
 41558 01bd 49       		.uleb128 0x49
 41559 01be 13       		.uleb128 0x13
 41560 01bf 3C       		.uleb128 0x3c
 41561 01c0 19       		.uleb128 0x19
 41562 01c1 01       		.uleb128 0x1
 41563 01c2 13       		.uleb128 0x13
 41564 01c3 00       		.byte	0
 41565 01c4 00       		.byte	0
 41566 01c5 1E       		.uleb128 0x1e
 41567 01c6 2E       		.uleb128 0x2e
 41568 01c7 01       		.byte	0x1
 41569 01c8 3F       		.uleb128 0x3f
 41570 01c9 19       		.uleb128 0x19
 41571 01ca 03       		.uleb128 0x3
 41572 01cb 0E       		.uleb128 0xe
 41573 01cc 3A       		.uleb128 0x3a
 41574 01cd 0B       		.uleb128 0xb
 41575 01ce 3B       		.uleb128 0x3b
 41576 01cf 05       		.uleb128 0x5
 41577 01d0 6E       		.uleb128 0x6e
 41578 01d1 0E       		.uleb128 0xe
 41579 01d2 49       		.uleb128 0x49
 41580 01d3 13       		.uleb128 0x13
 41581 01d4 3C       		.uleb128 0x3c
 41582 01d5 19       		.uleb128 0x19
 41583 01d6 01       		.uleb128 0x1
 41584 01d7 13       		.uleb128 0x13
 41585 01d8 00       		.byte	0
 41586 01d9 00       		.byte	0
 41587 01da 1F       		.uleb128 0x1f
 41588 01db 2E       		.uleb128 0x2e
 41589 01dc 00       		.byte	0
 41590 01dd 3F       		.uleb128 0x3f
 41591 01de 19       		.uleb128 0x19
 41592 01df 03       		.uleb128 0x3
 41593 01e0 08       		.uleb128 0x8
 41594 01e1 3A       		.uleb128 0x3a
 41595 01e2 0B       		.uleb128 0xb
 41596 01e3 3B       		.uleb128 0x3b
 41597 01e4 05       		.uleb128 0x5
 41598 01e5 6E       		.uleb128 0x6e
 41599 01e6 0E       		.uleb128 0xe
 41600 01e7 49       		.uleb128 0x49
 41601 01e8 13       		.uleb128 0x13
 41602 01e9 3C       		.uleb128 0x3c
 41603 01ea 19       		.uleb128 0x19
 41604 01eb 00       		.byte	0
 41605 01ec 00       		.byte	0
 41606 01ed 20       		.uleb128 0x20
 41607 01ee 2E       		.uleb128 0x2e
 41608 01ef 01       		.byte	0x1
 41609 01f0 3F       		.uleb128 0x3f
 41610 01f1 19       		.uleb128 0x19
 41611 01f2 03       		.uleb128 0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1049


 41612 01f3 0E       		.uleb128 0xe
 41613 01f4 3A       		.uleb128 0x3a
 41614 01f5 0B       		.uleb128 0xb
 41615 01f6 3B       		.uleb128 0x3b
 41616 01f7 05       		.uleb128 0x5
 41617 01f8 6E       		.uleb128 0x6e
 41618 01f9 0E       		.uleb128 0xe
 41619 01fa 49       		.uleb128 0x49
 41620 01fb 13       		.uleb128 0x13
 41621 01fc 3C       		.uleb128 0x3c
 41622 01fd 19       		.uleb128 0x19
 41623 01fe 00       		.byte	0
 41624 01ff 00       		.byte	0
 41625 0200 21       		.uleb128 0x21
 41626 0201 1C       		.uleb128 0x1c
 41627 0202 00       		.byte	0
 41628 0203 49       		.uleb128 0x49
 41629 0204 13       		.uleb128 0x13
 41630 0205 38       		.uleb128 0x38
 41631 0206 0B       		.uleb128 0xb
 41632 0207 32       		.uleb128 0x32
 41633 0208 0B       		.uleb128 0xb
 41634 0209 00       		.byte	0
 41635 020a 00       		.byte	0
 41636 020b 22       		.uleb128 0x22
 41637 020c 16       		.uleb128 0x16
 41638 020d 00       		.byte	0
 41639 020e 03       		.uleb128 0x3
 41640 020f 0E       		.uleb128 0xe
 41641 0210 3A       		.uleb128 0x3a
 41642 0211 0B       		.uleb128 0xb
 41643 0212 3B       		.uleb128 0x3b
 41644 0213 0B       		.uleb128 0xb
 41645 0214 49       		.uleb128 0x49
 41646 0215 13       		.uleb128 0x13
 41647 0216 32       		.uleb128 0x32
 41648 0217 0B       		.uleb128 0xb
 41649 0218 00       		.byte	0
 41650 0219 00       		.byte	0
 41651 021a 23       		.uleb128 0x23
 41652 021b 2E       		.uleb128 0x2e
 41653 021c 01       		.byte	0x1
 41654 021d 3F       		.uleb128 0x3f
 41655 021e 19       		.uleb128 0x19
 41656 021f 03       		.uleb128 0x3
 41657 0220 0E       		.uleb128 0xe
 41658 0221 3A       		.uleb128 0x3a
 41659 0222 0B       		.uleb128 0xb
 41660 0223 3B       		.uleb128 0x3b
 41661 0224 0B       		.uleb128 0xb
 41662 0225 32       		.uleb128 0x32
 41663 0226 0B       		.uleb128 0xb
 41664 0227 3C       		.uleb128 0x3c
 41665 0228 19       		.uleb128 0x19
 41666 0229 64       		.uleb128 0x64
 41667 022a 13       		.uleb128 0x13
 41668 022b 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1050


 41669 022c 00       		.byte	0
 41670 022d 24       		.uleb128 0x24
 41671 022e 13       		.uleb128 0x13
 41672 022f 01       		.byte	0x1
 41673 0230 03       		.uleb128 0x3
 41674 0231 0E       		.uleb128 0xe
 41675 0232 0B       		.uleb128 0xb
 41676 0233 0B       		.uleb128 0xb
 41677 0234 3A       		.uleb128 0x3a
 41678 0235 0B       		.uleb128 0xb
 41679 0236 3B       		.uleb128 0x3b
 41680 0237 05       		.uleb128 0x5
 41681 0238 01       		.uleb128 0x1
 41682 0239 13       		.uleb128 0x13
 41683 023a 00       		.byte	0
 41684 023b 00       		.byte	0
 41685 023c 25       		.uleb128 0x25
 41686 023d 1C       		.uleb128 0x1c
 41687 023e 00       		.byte	0
 41688 023f 49       		.uleb128 0x49
 41689 0240 13       		.uleb128 0x13
 41690 0241 38       		.uleb128 0x38
 41691 0242 0B       		.uleb128 0xb
 41692 0243 00       		.byte	0
 41693 0244 00       		.byte	0
 41694 0245 26       		.uleb128 0x26
 41695 0246 0D       		.uleb128 0xd
 41696 0247 00       		.byte	0
 41697 0248 03       		.uleb128 0x3
 41698 0249 0E       		.uleb128 0xe
 41699 024a 3A       		.uleb128 0x3a
 41700 024b 0B       		.uleb128 0xb
 41701 024c 3B       		.uleb128 0x3b
 41702 024d 05       		.uleb128 0x5
 41703 024e 49       		.uleb128 0x49
 41704 024f 13       		.uleb128 0x13
 41705 0250 38       		.uleb128 0x38
 41706 0251 0B       		.uleb128 0xb
 41707 0252 00       		.byte	0
 41708 0253 00       		.byte	0
 41709 0254 27       		.uleb128 0x27
 41710 0255 2E       		.uleb128 0x2e
 41711 0256 01       		.byte	0x1
 41712 0257 3F       		.uleb128 0x3f
 41713 0258 19       		.uleb128 0x19
 41714 0259 03       		.uleb128 0x3
 41715 025a 0E       		.uleb128 0xe
 41716 025b 3A       		.uleb128 0x3a
 41717 025c 0B       		.uleb128 0xb
 41718 025d 3B       		.uleb128 0x3b
 41719 025e 05       		.uleb128 0x5
 41720 025f 3C       		.uleb128 0x3c
 41721 0260 19       		.uleb128 0x19
 41722 0261 64       		.uleb128 0x64
 41723 0262 13       		.uleb128 0x13
 41724 0263 01       		.uleb128 0x1
 41725 0264 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1051


 41726 0265 00       		.byte	0
 41727 0266 00       		.byte	0
 41728 0267 28       		.uleb128 0x28
 41729 0268 2E       		.uleb128 0x2e
 41730 0269 01       		.byte	0x1
 41731 026a 3F       		.uleb128 0x3f
 41732 026b 19       		.uleb128 0x19
 41733 026c 03       		.uleb128 0x3
 41734 026d 0E       		.uleb128 0xe
 41735 026e 34       		.uleb128 0x34
 41736 026f 19       		.uleb128 0x19
 41737 0270 3C       		.uleb128 0x3c
 41738 0271 19       		.uleb128 0x19
 41739 0272 64       		.uleb128 0x64
 41740 0273 13       		.uleb128 0x13
 41741 0274 00       		.byte	0
 41742 0275 00       		.byte	0
 41743 0276 29       		.uleb128 0x29
 41744 0277 0D       		.uleb128 0xd
 41745 0278 00       		.byte	0
 41746 0279 03       		.uleb128 0x3
 41747 027a 0E       		.uleb128 0xe
 41748 027b 3A       		.uleb128 0x3a
 41749 027c 0B       		.uleb128 0xb
 41750 027d 3B       		.uleb128 0x3b
 41751 027e 05       		.uleb128 0x5
 41752 027f 49       		.uleb128 0x49
 41753 0280 13       		.uleb128 0x13
 41754 0281 3F       		.uleb128 0x3f
 41755 0282 19       		.uleb128 0x19
 41756 0283 32       		.uleb128 0x32
 41757 0284 0B       		.uleb128 0xb
 41758 0285 3C       		.uleb128 0x3c
 41759 0286 19       		.uleb128 0x19
 41760 0287 00       		.byte	0
 41761 0288 00       		.byte	0
 41762 0289 2A       		.uleb128 0x2a
 41763 028a 2E       		.uleb128 0x2e
 41764 028b 00       		.byte	0
 41765 028c 3F       		.uleb128 0x3f
 41766 028d 19       		.uleb128 0x19
 41767 028e 03       		.uleb128 0x3
 41768 028f 0E       		.uleb128 0xe
 41769 0290 3A       		.uleb128 0x3a
 41770 0291 0B       		.uleb128 0xb
 41771 0292 3B       		.uleb128 0x3b
 41772 0293 0B       		.uleb128 0xb
 41773 0294 6E       		.uleb128 0x6e
 41774 0295 0E       		.uleb128 0xe
 41775 0296 49       		.uleb128 0x49
 41776 0297 13       		.uleb128 0x13
 41777 0298 3C       		.uleb128 0x3c
 41778 0299 19       		.uleb128 0x19
 41779 029a 00       		.byte	0
 41780 029b 00       		.byte	0
 41781 029c 2B       		.uleb128 0x2b
 41782 029d 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccmMnd7l.s 			page 1052


 41783 029e 01       		.byte	0x1
 41784 029f 3F       		.uleb128 0x3f
 41785 02a0 19       		.uleb128 0x19
 41786 02a1 03       		.uleb128 0x3
 41787 02a2 0E       		.uleb128 0xe
 41788 02a3 3A       		.uleb128 0x3a
 41789 02a4 0B       		.uleb128 0xb
 41790 02a5 3B       		.uleb128 0x3b
 41791 02a6 05       		.uleb128 0x5
 41792 02a7 6E       		.uleb128 0x6e
 41793 02a8 0E       		.uleb128 0xe
 41794 02a9 3C       		.uleb128 0x3c
 41795 02aa 19       		.uleb128 0x19
 41796 02ab 64       		.uleb128 0x64
 41797 02ac 13       		.uleb128 0x13
 41798 02ad 01       		.uleb128 0x1
 41799 02ae 13       		.uleb128 0x13
 41800 02af 00       		.byte	0
 41801 02b0 00       		.byte	0
 41802 02b1 2C       		.uleb128 0x2c
 41803 02b2 2E       		.uleb128 0x2e
 41804 02b3 01       		.byte	0x1
 41805 02b4 3F       		.uleb128 0x3f
 41806 02b5 19       		.uleb128 0x19
 41807 02b6 03       		.uleb128 0x3
 41808 02b7 0E       		.uleb128 0xe
 41809 02b8 3A       		.uleb128 0x3a
 41810 02b9 0B       		.uleb128 0xb
 41811 02ba 3B       		.uleb128 0x3b
 41812 02bb 05       		.uleb128 0x5
 41813 02bc 6E       		.uleb128 0x6e
 41814 02bd 0E       		.uleb128 0xe
 41815 02be 49       		.uleb128 0x49
 41816 02bf 13       		.uleb128 0x13
 41817 02c0 3C       		.uleb128 0x3c
 41818 02c1 19       		.uleb128 0x19
 41819 02c2 64       		.uleb128 0x64
 41820 02c3 13       		.uleb128 0x13
 41821 02c4 01       		.uleb128 0x1
 41822 02c5 13       		.uleb128 0x13
 41823 02c6 00       		.byte	0
 41824 02c7 00       		.byte	0
 41825 02c8 2D       		.uleb128 0x2d
 41826 02c9 2E       		.uleb128 0x2e
 41827 02ca 01       		.byte	0x1
 41828 02cb 3F       		.uleb128 0x3f
 41829 02cc 19       		.uleb128 0x19
 41830 02cd 03       		.uleb128 0x3
 41831 02ce 0E       		.uleb128 0xe
 41832 02cf 3A       		.uleb128 0x3a
 41833 02d0 0B       		.uleb128 0xb
 41834 02d1 3B       		.uleb128 0x3b
 41835 02d2 05       		.uleb128 0x5
 41836 02d3 6E       		.uleb128 0x6e
 41837 02d4 0E       		.uleb128 0xe
 41838 02d5 49       		.uleb128 0x49
 41839 02d6 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1053


 41840 02d7 3C       		.uleb128 0x3c
 41841 02d8 19       		.uleb128 0x19
 41842 02d9 64       		.uleb128 0x64
 41843 02da 13       		.uleb128 0x13
 41844 02db 00       		.byte	0
 41845 02dc 00       		.byte	0
 41846 02dd 2E       		.uleb128 0x2e
 41847 02de 2E       		.uleb128 0x2e
 41848 02df 01       		.byte	0x1
 41849 02e0 3F       		.uleb128 0x3f
 41850 02e1 19       		.uleb128 0x19
 41851 02e2 03       		.uleb128 0x3
 41852 02e3 0E       		.uleb128 0xe
 41853 02e4 3A       		.uleb128 0x3a
 41854 02e5 0B       		.uleb128 0xb
 41855 02e6 3B       		.uleb128 0x3b
 41856 02e7 05       		.uleb128 0x5
 41857 02e8 6E       		.uleb128 0x6e
 41858 02e9 0E       		.uleb128 0xe
 41859 02ea 3C       		.uleb128 0x3c
 41860 02eb 19       		.uleb128 0x19
 41861 02ec 01       		.uleb128 0x1
 41862 02ed 13       		.uleb128 0x13
 41863 02ee 00       		.byte	0
 41864 02ef 00       		.byte	0
 41865 02f0 2F       		.uleb128 0x2f
 41866 02f1 2E       		.uleb128 0x2e
 41867 02f2 00       		.byte	0
 41868 02f3 3F       		.uleb128 0x3f
 41869 02f4 19       		.uleb128 0x19
 41870 02f5 03       		.uleb128 0x3
 41871 02f6 0E       		.uleb128 0xe
 41872 02f7 3A       		.uleb128 0x3a
 41873 02f8 0B       		.uleb128 0xb
 41874 02f9 3B       		.uleb128 0x3b
 41875 02fa 05       		.uleb128 0x5
 41876 02fb 6E       		.uleb128 0x6e
 41877 02fc 0E       		.uleb128 0xe
 41878 02fd 49       		.uleb128 0x49
 41879 02fe 13       		.uleb128 0x13
 41880 02ff 3C       		.uleb128 0x3c
 41881 0300 19       		.uleb128 0x19
 41882 0301 00       		.byte	0
 41883 0302 00       		.byte	0
 41884 0303 30       		.uleb128 0x30
 41885 0304 2E       		.uleb128 0x2e
 41886 0305 01       		.byte	0x1
 41887 0306 3F       		.uleb128 0x3f
 41888 0307 19       		.uleb128 0x19
 41889 0308 03       		.uleb128 0x3
 41890 0309 0E       		.uleb128 0xe
 41891 030a 3A       		.uleb128 0x3a
 41892 030b 0B       		.uleb128 0xb
 41893 030c 3B       		.uleb128 0x3b
 41894 030d 05       		.uleb128 0x5
 41895 030e 32       		.uleb128 0x32
 41896 030f 0B       		.uleb128 0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 1054


 41897 0310 3C       		.uleb128 0x3c
 41898 0311 19       		.uleb128 0x19
 41899 0312 64       		.uleb128 0x64
 41900 0313 13       		.uleb128 0x13
 41901 0314 01       		.uleb128 0x1
 41902 0315 13       		.uleb128 0x13
 41903 0316 00       		.byte	0
 41904 0317 00       		.byte	0
 41905 0318 31       		.uleb128 0x31
 41906 0319 2E       		.uleb128 0x2e
 41907 031a 01       		.byte	0x1
 41908 031b 3F       		.uleb128 0x3f
 41909 031c 19       		.uleb128 0x19
 41910 031d 03       		.uleb128 0x3
 41911 031e 0E       		.uleb128 0xe
 41912 031f 3A       		.uleb128 0x3a
 41913 0320 0B       		.uleb128 0xb
 41914 0321 3B       		.uleb128 0x3b
 41915 0322 05       		.uleb128 0x5
 41916 0323 32       		.uleb128 0x32
 41917 0324 0B       		.uleb128 0xb
 41918 0325 3C       		.uleb128 0x3c
 41919 0326 19       		.uleb128 0x19
 41920 0327 63       		.uleb128 0x63
 41921 0328 19       		.uleb128 0x19
 41922 0329 64       		.uleb128 0x64
 41923 032a 13       		.uleb128 0x13
 41924 032b 01       		.uleb128 0x1
 41925 032c 13       		.uleb128 0x13
 41926 032d 00       		.byte	0
 41927 032e 00       		.byte	0
 41928 032f 32       		.uleb128 0x32
 41929 0330 2E       		.uleb128 0x2e
 41930 0331 01       		.byte	0x1
 41931 0332 3F       		.uleb128 0x3f
 41932 0333 19       		.uleb128 0x19
 41933 0334 03       		.uleb128 0x3
 41934 0335 0E       		.uleb128 0xe
 41935 0336 3A       		.uleb128 0x3a
 41936 0337 0B       		.uleb128 0xb
 41937 0338 3B       		.uleb128 0x3b
 41938 0339 05       		.uleb128 0x5
 41939 033a 6E       		.uleb128 0x6e
 41940 033b 0E       		.uleb128 0xe
 41941 033c 49       		.uleb128 0x49
 41942 033d 13       		.uleb128 0x13
 41943 033e 32       		.uleb128 0x32
 41944 033f 0B       		.uleb128 0xb
 41945 0340 3C       		.uleb128 0x3c
 41946 0341 19       		.uleb128 0x19
 41947 0342 64       		.uleb128 0x64
 41948 0343 13       		.uleb128 0x13
 41949 0344 01       		.uleb128 0x1
 41950 0345 13       		.uleb128 0x13
 41951 0346 00       		.byte	0
 41952 0347 00       		.byte	0
 41953 0348 33       		.uleb128 0x33
GAS LISTING /tmp/ccmMnd7l.s 			page 1055


 41954 0349 2E       		.uleb128 0x2e
 41955 034a 01       		.byte	0x1
 41956 034b 3F       		.uleb128 0x3f
 41957 034c 19       		.uleb128 0x19
 41958 034d 03       		.uleb128 0x3
 41959 034e 08       		.uleb128 0x8
 41960 034f 3A       		.uleb128 0x3a
 41961 0350 0B       		.uleb128 0xb
 41962 0351 3B       		.uleb128 0x3b
 41963 0352 05       		.uleb128 0x5
 41964 0353 6E       		.uleb128 0x6e
 41965 0354 0E       		.uleb128 0xe
 41966 0355 49       		.uleb128 0x49
 41967 0356 13       		.uleb128 0x13
 41968 0357 32       		.uleb128 0x32
 41969 0358 0B       		.uleb128 0xb
 41970 0359 3C       		.uleb128 0x3c
 41971 035a 19       		.uleb128 0x19
 41972 035b 64       		.uleb128 0x64
 41973 035c 13       		.uleb128 0x13
 41974 035d 01       		.uleb128 0x1
 41975 035e 13       		.uleb128 0x13
 41976 035f 00       		.byte	0
 41977 0360 00       		.byte	0
 41978 0361 34       		.uleb128 0x34
 41979 0362 2E       		.uleb128 0x2e
 41980 0363 01       		.byte	0x1
 41981 0364 3F       		.uleb128 0x3f
 41982 0365 19       		.uleb128 0x19
 41983 0366 03       		.uleb128 0x3
 41984 0367 0E       		.uleb128 0xe
 41985 0368 3A       		.uleb128 0x3a
 41986 0369 0B       		.uleb128 0xb
 41987 036a 3B       		.uleb128 0x3b
 41988 036b 05       		.uleb128 0x5
 41989 036c 6E       		.uleb128 0x6e
 41990 036d 0E       		.uleb128 0xe
 41991 036e 32       		.uleb128 0x32
 41992 036f 0B       		.uleb128 0xb
 41993 0370 3C       		.uleb128 0x3c
 41994 0371 19       		.uleb128 0x19
 41995 0372 64       		.uleb128 0x64
 41996 0373 13       		.uleb128 0x13
 41997 0374 01       		.uleb128 0x1
 41998 0375 13       		.uleb128 0x13
 41999 0376 00       		.byte	0
 42000 0377 00       		.byte	0
 42001 0378 35       		.uleb128 0x35
 42002 0379 2F       		.uleb128 0x2f
 42003 037a 00       		.byte	0
 42004 037b 03       		.uleb128 0x3
 42005 037c 0E       		.uleb128 0xe
 42006 037d 49       		.uleb128 0x49
 42007 037e 13       		.uleb128 0x13
 42008 037f 00       		.byte	0
 42009 0380 00       		.byte	0
 42010 0381 36       		.uleb128 0x36
GAS LISTING /tmp/ccmMnd7l.s 			page 1056


 42011 0382 2F       		.uleb128 0x2f
 42012 0383 00       		.byte	0
 42013 0384 03       		.uleb128 0x3
 42014 0385 0E       		.uleb128 0xe
 42015 0386 49       		.uleb128 0x49
 42016 0387 13       		.uleb128 0x13
 42017 0388 1E       		.uleb128 0x1e
 42018 0389 19       		.uleb128 0x19
 42019 038a 00       		.byte	0
 42020 038b 00       		.byte	0
 42021 038c 37       		.uleb128 0x37
 42022 038d 2E       		.uleb128 0x2e
 42023 038e 01       		.byte	0x1
 42024 038f 3F       		.uleb128 0x3f
 42025 0390 19       		.uleb128 0x19
 42026 0391 03       		.uleb128 0x3
 42027 0392 0E       		.uleb128 0xe
 42028 0393 3A       		.uleb128 0x3a
 42029 0394 0B       		.uleb128 0xb
 42030 0395 3B       		.uleb128 0x3b
 42031 0396 0B       		.uleb128 0xb
 42032 0397 3C       		.uleb128 0x3c
 42033 0398 19       		.uleb128 0x19
 42034 0399 64       		.uleb128 0x64
 42035 039a 13       		.uleb128 0x13
 42036 039b 01       		.uleb128 0x1
 42037 039c 13       		.uleb128 0x13
 42038 039d 00       		.byte	0
 42039 039e 00       		.byte	0
 42040 039f 38       		.uleb128 0x38
 42041 03a0 2E       		.uleb128 0x2e
 42042 03a1 01       		.byte	0x1
 42043 03a2 3F       		.uleb128 0x3f
 42044 03a3 19       		.uleb128 0x19
 42045 03a4 03       		.uleb128 0x3
 42046 03a5 08       		.uleb128 0x8
 42047 03a6 3A       		.uleb128 0x3a
 42048 03a7 0B       		.uleb128 0xb
 42049 03a8 3B       		.uleb128 0x3b
 42050 03a9 0B       		.uleb128 0xb
 42051 03aa 6E       		.uleb128 0x6e
 42052 03ab 0E       		.uleb128 0xe
 42053 03ac 49       		.uleb128 0x49
 42054 03ad 13       		.uleb128 0x13
 42055 03ae 32       		.uleb128 0x32
 42056 03af 0B       		.uleb128 0xb
 42057 03b0 3C       		.uleb128 0x3c
 42058 03b1 19       		.uleb128 0x19
 42059 03b2 64       		.uleb128 0x64
 42060 03b3 13       		.uleb128 0x13
 42061 03b4 01       		.uleb128 0x1
 42062 03b5 13       		.uleb128 0x13
 42063 03b6 00       		.byte	0
 42064 03b7 00       		.byte	0
 42065 03b8 39       		.uleb128 0x39
 42066 03b9 2E       		.uleb128 0x2e
 42067 03ba 01       		.byte	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1057


 42068 03bb 3F       		.uleb128 0x3f
 42069 03bc 19       		.uleb128 0x19
 42070 03bd 03       		.uleb128 0x3
 42071 03be 0E       		.uleb128 0xe
 42072 03bf 3A       		.uleb128 0x3a
 42073 03c0 0B       		.uleb128 0xb
 42074 03c1 3B       		.uleb128 0x3b
 42075 03c2 0B       		.uleb128 0xb
 42076 03c3 3C       		.uleb128 0x3c
 42077 03c4 19       		.uleb128 0x19
 42078 03c5 64       		.uleb128 0x64
 42079 03c6 13       		.uleb128 0x13
 42080 03c7 00       		.byte	0
 42081 03c8 00       		.byte	0
 42082 03c9 3A       		.uleb128 0x3a
 42083 03ca 18       		.uleb128 0x18
 42084 03cb 00       		.byte	0
 42085 03cc 00       		.byte	0
 42086 03cd 00       		.byte	0
 42087 03ce 3B       		.uleb128 0x3b
 42088 03cf 02       		.uleb128 0x2
 42089 03d0 01       		.byte	0x1
 42090 03d1 03       		.uleb128 0x3
 42091 03d2 0E       		.uleb128 0xe
 42092 03d3 0B       		.uleb128 0xb
 42093 03d4 0B       		.uleb128 0xb
 42094 03d5 3A       		.uleb128 0x3a
 42095 03d6 0B       		.uleb128 0xb
 42096 03d7 3B       		.uleb128 0x3b
 42097 03d8 05       		.uleb128 0x5
 42098 03d9 01       		.uleb128 0x1
 42099 03da 13       		.uleb128 0x13
 42100 03db 00       		.byte	0
 42101 03dc 00       		.byte	0
 42102 03dd 3C       		.uleb128 0x3c
 42103 03de 2E       		.uleb128 0x2e
 42104 03df 01       		.byte	0x1
 42105 03e0 3F       		.uleb128 0x3f
 42106 03e1 19       		.uleb128 0x19
 42107 03e2 03       		.uleb128 0x3
 42108 03e3 0E       		.uleb128 0xe
 42109 03e4 3A       		.uleb128 0x3a
 42110 03e5 0B       		.uleb128 0xb
 42111 03e6 3B       		.uleb128 0x3b
 42112 03e7 05       		.uleb128 0x5
 42113 03e8 6E       		.uleb128 0x6e
 42114 03e9 0E       		.uleb128 0xe
 42115 03ea 32       		.uleb128 0x32
 42116 03eb 0B       		.uleb128 0xb
 42117 03ec 3C       		.uleb128 0x3c
 42118 03ed 19       		.uleb128 0x19
 42119 03ee 64       		.uleb128 0x64
 42120 03ef 13       		.uleb128 0x13
 42121 03f0 00       		.byte	0
 42122 03f1 00       		.byte	0
 42123 03f2 3D       		.uleb128 0x3d
 42124 03f3 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1058


 42125 03f4 00       		.byte	0
 42126 03f5 03       		.uleb128 0x3
 42127 03f6 0E       		.uleb128 0xe
 42128 03f7 0B       		.uleb128 0xb
 42129 03f8 0B       		.uleb128 0xb
 42130 03f9 3A       		.uleb128 0x3a
 42131 03fa 0B       		.uleb128 0xb
 42132 03fb 3B       		.uleb128 0x3b
 42133 03fc 05       		.uleb128 0x5
 42134 03fd 00       		.byte	0
 42135 03fe 00       		.byte	0
 42136 03ff 3E       		.uleb128 0x3e
 42137 0400 04       		.uleb128 0x4
 42138 0401 01       		.byte	0x1
 42139 0402 03       		.uleb128 0x3
 42140 0403 0E       		.uleb128 0xe
 42141 0404 0B       		.uleb128 0xb
 42142 0405 0B       		.uleb128 0xb
 42143 0406 3A       		.uleb128 0x3a
 42144 0407 0B       		.uleb128 0xb
 42145 0408 3B       		.uleb128 0x3b
 42146 0409 0B       		.uleb128 0xb
 42147 040a 01       		.uleb128 0x1
 42148 040b 13       		.uleb128 0x13
 42149 040c 00       		.byte	0
 42150 040d 00       		.byte	0
 42151 040e 3F       		.uleb128 0x3f
 42152 040f 28       		.uleb128 0x28
 42153 0410 00       		.byte	0
 42154 0411 03       		.uleb128 0x3
 42155 0412 0E       		.uleb128 0xe
 42156 0413 1C       		.uleb128 0x1c
 42157 0414 0D       		.uleb128 0xd
 42158 0415 00       		.byte	0
 42159 0416 00       		.byte	0
 42160 0417 40       		.uleb128 0x40
 42161 0418 02       		.uleb128 0x2
 42162 0419 01       		.byte	0x1
 42163 041a 03       		.uleb128 0x3
 42164 041b 0E       		.uleb128 0xe
 42165 041c 3C       		.uleb128 0x3c
 42166 041d 19       		.uleb128 0x19
 42167 041e 01       		.uleb128 0x1
 42168 041f 13       		.uleb128 0x13
 42169 0420 00       		.byte	0
 42170 0421 00       		.byte	0
 42171 0422 41       		.uleb128 0x41
 42172 0423 02       		.uleb128 0x2
 42173 0424 01       		.byte	0x1
 42174 0425 03       		.uleb128 0x3
 42175 0426 0E       		.uleb128 0xe
 42176 0427 0B       		.uleb128 0xb
 42177 0428 0B       		.uleb128 0xb
 42178 0429 3A       		.uleb128 0x3a
 42179 042a 0B       		.uleb128 0xb
 42180 042b 3B       		.uleb128 0x3b
 42181 042c 05       		.uleb128 0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1059


 42182 042d 32       		.uleb128 0x32
 42183 042e 0B       		.uleb128 0xb
 42184 042f 01       		.uleb128 0x1
 42185 0430 13       		.uleb128 0x13
 42186 0431 00       		.byte	0
 42187 0432 00       		.byte	0
 42188 0433 42       		.uleb128 0x42
 42189 0434 0D       		.uleb128 0xd
 42190 0435 00       		.byte	0
 42191 0436 03       		.uleb128 0x3
 42192 0437 0E       		.uleb128 0xe
 42193 0438 3A       		.uleb128 0x3a
 42194 0439 0B       		.uleb128 0xb
 42195 043a 3B       		.uleb128 0x3b
 42196 043b 05       		.uleb128 0x5
 42197 043c 49       		.uleb128 0x49
 42198 043d 13       		.uleb128 0x13
 42199 043e 3F       		.uleb128 0x3f
 42200 043f 19       		.uleb128 0x19
 42201 0440 3C       		.uleb128 0x3c
 42202 0441 19       		.uleb128 0x19
 42203 0442 00       		.byte	0
 42204 0443 00       		.byte	0
 42205 0444 43       		.uleb128 0x43
 42206 0445 2E       		.uleb128 0x2e
 42207 0446 01       		.byte	0x1
 42208 0447 3F       		.uleb128 0x3f
 42209 0448 19       		.uleb128 0x19
 42210 0449 03       		.uleb128 0x3
 42211 044a 0E       		.uleb128 0xe
 42212 044b 3A       		.uleb128 0x3a
 42213 044c 0B       		.uleb128 0xb
 42214 044d 3B       		.uleb128 0x3b
 42215 044e 05       		.uleb128 0x5
 42216 044f 32       		.uleb128 0x32
 42217 0450 0B       		.uleb128 0xb
 42218 0451 3C       		.uleb128 0x3c
 42219 0452 19       		.uleb128 0x19
 42220 0453 64       		.uleb128 0x64
 42221 0454 13       		.uleb128 0x13
 42222 0455 00       		.byte	0
 42223 0456 00       		.byte	0
 42224 0457 44       		.uleb128 0x44
 42225 0458 16       		.uleb128 0x16
 42226 0459 00       		.byte	0
 42227 045a 03       		.uleb128 0x3
 42228 045b 0E       		.uleb128 0xe
 42229 045c 3A       		.uleb128 0x3a
 42230 045d 0B       		.uleb128 0xb
 42231 045e 3B       		.uleb128 0x3b
 42232 045f 05       		.uleb128 0x5
 42233 0460 49       		.uleb128 0x49
 42234 0461 13       		.uleb128 0x13
 42235 0462 32       		.uleb128 0x32
 42236 0463 0B       		.uleb128 0xb
 42237 0464 00       		.byte	0
 42238 0465 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1060


 42239 0466 45       		.uleb128 0x45
 42240 0467 0D       		.uleb128 0xd
 42241 0468 00       		.byte	0
 42242 0469 03       		.uleb128 0x3
 42243 046a 0E       		.uleb128 0xe
 42244 046b 3A       		.uleb128 0x3a
 42245 046c 0B       		.uleb128 0xb
 42246 046d 3B       		.uleb128 0x3b
 42247 046e 05       		.uleb128 0x5
 42248 046f 49       		.uleb128 0x49
 42249 0470 13       		.uleb128 0x13
 42250 0471 3F       		.uleb128 0x3f
 42251 0472 19       		.uleb128 0x19
 42252 0473 32       		.uleb128 0x32
 42253 0474 0B       		.uleb128 0xb
 42254 0475 3C       		.uleb128 0x3c
 42255 0476 19       		.uleb128 0x19
 42256 0477 1C       		.uleb128 0x1c
 42257 0478 0B       		.uleb128 0xb
 42258 0479 00       		.byte	0
 42259 047a 00       		.byte	0
 42260 047b 46       		.uleb128 0x46
 42261 047c 0D       		.uleb128 0xd
 42262 047d 00       		.byte	0
 42263 047e 03       		.uleb128 0x3
 42264 047f 08       		.uleb128 0x8
 42265 0480 3A       		.uleb128 0x3a
 42266 0481 0B       		.uleb128 0xb
 42267 0482 3B       		.uleb128 0x3b
 42268 0483 05       		.uleb128 0x5
 42269 0484 49       		.uleb128 0x49
 42270 0485 13       		.uleb128 0x13
 42271 0486 3F       		.uleb128 0x3f
 42272 0487 19       		.uleb128 0x19
 42273 0488 32       		.uleb128 0x32
 42274 0489 0B       		.uleb128 0xb
 42275 048a 3C       		.uleb128 0x3c
 42276 048b 19       		.uleb128 0x19
 42277 048c 1C       		.uleb128 0x1c
 42278 048d 0B       		.uleb128 0xb
 42279 048e 00       		.byte	0
 42280 048f 00       		.byte	0
 42281 0490 47       		.uleb128 0x47
 42282 0491 0D       		.uleb128 0xd
 42283 0492 00       		.byte	0
 42284 0493 03       		.uleb128 0x3
 42285 0494 0E       		.uleb128 0xe
 42286 0495 3A       		.uleb128 0x3a
 42287 0496 0B       		.uleb128 0xb
 42288 0497 3B       		.uleb128 0x3b
 42289 0498 05       		.uleb128 0x5
 42290 0499 49       		.uleb128 0x49
 42291 049a 13       		.uleb128 0x13
 42292 049b 3F       		.uleb128 0x3f
 42293 049c 19       		.uleb128 0x19
 42294 049d 32       		.uleb128 0x32
 42295 049e 0B       		.uleb128 0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 1061


 42296 049f 3C       		.uleb128 0x3c
 42297 04a0 19       		.uleb128 0x19
 42298 04a1 1C       		.uleb128 0x1c
 42299 04a2 05       		.uleb128 0x5
 42300 04a3 00       		.byte	0
 42301 04a4 00       		.byte	0
 42302 04a5 48       		.uleb128 0x48
 42303 04a6 2E       		.uleb128 0x2e
 42304 04a7 01       		.byte	0x1
 42305 04a8 3F       		.uleb128 0x3f
 42306 04a9 19       		.uleb128 0x19
 42307 04aa 03       		.uleb128 0x3
 42308 04ab 0E       		.uleb128 0xe
 42309 04ac 3A       		.uleb128 0x3a
 42310 04ad 0B       		.uleb128 0xb
 42311 04ae 3B       		.uleb128 0x3b
 42312 04af 05       		.uleb128 0x5
 42313 04b0 6E       		.uleb128 0x6e
 42314 04b1 0E       		.uleb128 0xe
 42315 04b2 49       		.uleb128 0x49
 42316 04b3 13       		.uleb128 0x13
 42317 04b4 4C       		.uleb128 0x4c
 42318 04b5 0B       		.uleb128 0xb
 42319 04b6 4D       		.uleb128 0x4d
 42320 04b7 18       		.uleb128 0x18
 42321 04b8 1D       		.uleb128 0x1d
 42322 04b9 13       		.uleb128 0x13
 42323 04ba 32       		.uleb128 0x32
 42324 04bb 0B       		.uleb128 0xb
 42325 04bc 3C       		.uleb128 0x3c
 42326 04bd 19       		.uleb128 0x19
 42327 04be 64       		.uleb128 0x64
 42328 04bf 13       		.uleb128 0x13
 42329 04c0 01       		.uleb128 0x1
 42330 04c1 13       		.uleb128 0x13
 42331 04c2 00       		.byte	0
 42332 04c3 00       		.byte	0
 42333 04c4 49       		.uleb128 0x49
 42334 04c5 2E       		.uleb128 0x2e
 42335 04c6 01       		.byte	0x1
 42336 04c7 3F       		.uleb128 0x3f
 42337 04c8 19       		.uleb128 0x19
 42338 04c9 03       		.uleb128 0x3
 42339 04ca 0E       		.uleb128 0xe
 42340 04cb 3A       		.uleb128 0x3a
 42341 04cc 0B       		.uleb128 0xb
 42342 04cd 3B       		.uleb128 0x3b
 42343 04ce 05       		.uleb128 0x5
 42344 04cf 6E       		.uleb128 0x6e
 42345 04d0 0E       		.uleb128 0xe
 42346 04d1 3C       		.uleb128 0x3c
 42347 04d2 19       		.uleb128 0x19
 42348 04d3 64       		.uleb128 0x64
 42349 04d4 13       		.uleb128 0x13
 42350 04d5 00       		.byte	0
 42351 04d6 00       		.byte	0
 42352 04d7 4A       		.uleb128 0x4a
GAS LISTING /tmp/ccmMnd7l.s 			page 1062


 42353 04d8 2E       		.uleb128 0x2e
 42354 04d9 01       		.byte	0x1
 42355 04da 3F       		.uleb128 0x3f
 42356 04db 19       		.uleb128 0x19
 42357 04dc 03       		.uleb128 0x3
 42358 04dd 0E       		.uleb128 0xe
 42359 04de 3A       		.uleb128 0x3a
 42360 04df 0B       		.uleb128 0xb
 42361 04e0 3B       		.uleb128 0x3b
 42362 04e1 0B       		.uleb128 0xb
 42363 04e2 3C       		.uleb128 0x3c
 42364 04e3 19       		.uleb128 0x19
 42365 04e4 01       		.uleb128 0x1
 42366 04e5 13       		.uleb128 0x13
 42367 04e6 00       		.byte	0
 42368 04e7 00       		.byte	0
 42369 04e8 4B       		.uleb128 0x4b
 42370 04e9 2E       		.uleb128 0x2e
 42371 04ea 01       		.byte	0x1
 42372 04eb 3F       		.uleb128 0x3f
 42373 04ec 19       		.uleb128 0x19
 42374 04ed 03       		.uleb128 0x3
 42375 04ee 0E       		.uleb128 0xe
 42376 04ef 3A       		.uleb128 0x3a
 42377 04f0 0B       		.uleb128 0xb
 42378 04f1 3B       		.uleb128 0x3b
 42379 04f2 0B       		.uleb128 0xb
 42380 04f3 3C       		.uleb128 0x3c
 42381 04f4 19       		.uleb128 0x19
 42382 04f5 00       		.byte	0
 42383 04f6 00       		.byte	0
 42384 04f7 4C       		.uleb128 0x4c
 42385 04f8 2E       		.uleb128 0x2e
 42386 04f9 01       		.byte	0x1
 42387 04fa 3F       		.uleb128 0x3f
 42388 04fb 19       		.uleb128 0x19
 42389 04fc 03       		.uleb128 0x3
 42390 04fd 0E       		.uleb128 0xe
 42391 04fe 3A       		.uleb128 0x3a
 42392 04ff 0B       		.uleb128 0xb
 42393 0500 3B       		.uleb128 0x3b
 42394 0501 05       		.uleb128 0x5
 42395 0502 3C       		.uleb128 0x3c
 42396 0503 19       		.uleb128 0x19
 42397 0504 01       		.uleb128 0x1
 42398 0505 13       		.uleb128 0x13
 42399 0506 00       		.byte	0
 42400 0507 00       		.byte	0
 42401 0508 4D       		.uleb128 0x4d
 42402 0509 2E       		.uleb128 0x2e
 42403 050a 01       		.byte	0x1
 42404 050b 3F       		.uleb128 0x3f
 42405 050c 19       		.uleb128 0x19
 42406 050d 03       		.uleb128 0x3
 42407 050e 0E       		.uleb128 0xe
 42408 050f 3A       		.uleb128 0x3a
 42409 0510 0B       		.uleb128 0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 1063


 42410 0511 3B       		.uleb128 0x3b
 42411 0512 05       		.uleb128 0x5
 42412 0513 3C       		.uleb128 0x3c
 42413 0514 19       		.uleb128 0x19
 42414 0515 00       		.byte	0
 42415 0516 00       		.byte	0
 42416 0517 4E       		.uleb128 0x4e
 42417 0518 2E       		.uleb128 0x2e
 42418 0519 01       		.byte	0x1
 42419 051a 3F       		.uleb128 0x3f
 42420 051b 19       		.uleb128 0x19
 42421 051c 03       		.uleb128 0x3
 42422 051d 0E       		.uleb128 0xe
 42423 051e 3A       		.uleb128 0x3a
 42424 051f 0B       		.uleb128 0xb
 42425 0520 3B       		.uleb128 0x3b
 42426 0521 0B       		.uleb128 0xb
 42427 0522 6E       		.uleb128 0x6e
 42428 0523 0E       		.uleb128 0xe
 42429 0524 49       		.uleb128 0x49
 42430 0525 13       		.uleb128 0x13
 42431 0526 3C       		.uleb128 0x3c
 42432 0527 19       		.uleb128 0x19
 42433 0528 01       		.uleb128 0x1
 42434 0529 13       		.uleb128 0x13
 42435 052a 00       		.byte	0
 42436 052b 00       		.byte	0
 42437 052c 4F       		.uleb128 0x4f
 42438 052d 30       		.uleb128 0x30
 42439 052e 00       		.byte	0
 42440 052f 03       		.uleb128 0x3
 42441 0530 08       		.uleb128 0x8
 42442 0531 49       		.uleb128 0x49
 42443 0532 13       		.uleb128 0x13
 42444 0533 1C       		.uleb128 0x1c
 42445 0534 07       		.uleb128 0x7
 42446 0535 00       		.byte	0
 42447 0536 00       		.byte	0
 42448 0537 50       		.uleb128 0x50
 42449 0538 30       		.uleb128 0x30
 42450 0539 00       		.byte	0
 42451 053a 03       		.uleb128 0x3
 42452 053b 0E       		.uleb128 0xe
 42453 053c 49       		.uleb128 0x49
 42454 053d 13       		.uleb128 0x13
 42455 053e 1C       		.uleb128 0x1c
 42456 053f 0B       		.uleb128 0xb
 42457 0540 00       		.byte	0
 42458 0541 00       		.byte	0
 42459 0542 51       		.uleb128 0x51
 42460 0543 30       		.uleb128 0x30
 42461 0544 00       		.byte	0
 42462 0545 03       		.uleb128 0x3
 42463 0546 08       		.uleb128 0x8
 42464 0547 49       		.uleb128 0x49
 42465 0548 13       		.uleb128 0x13
 42466 0549 1C       		.uleb128 0x1c
GAS LISTING /tmp/ccmMnd7l.s 			page 1064


 42467 054a 05       		.uleb128 0x5
 42468 054b 00       		.byte	0
 42469 054c 00       		.byte	0
 42470 054d 52       		.uleb128 0x52
 42471 054e 2E       		.uleb128 0x2e
 42472 054f 01       		.byte	0x1
 42473 0550 3F       		.uleb128 0x3f
 42474 0551 19       		.uleb128 0x19
 42475 0552 03       		.uleb128 0x3
 42476 0553 0E       		.uleb128 0xe
 42477 0554 3A       		.uleb128 0x3a
 42478 0555 0B       		.uleb128 0xb
 42479 0556 3B       		.uleb128 0x3b
 42480 0557 0B       		.uleb128 0xb
 42481 0558 49       		.uleb128 0x49
 42482 0559 13       		.uleb128 0x13
 42483 055a 3C       		.uleb128 0x3c
 42484 055b 19       		.uleb128 0x19
 42485 055c 01       		.uleb128 0x1
 42486 055d 13       		.uleb128 0x13
 42487 055e 00       		.byte	0
 42488 055f 00       		.byte	0
 42489 0560 53       		.uleb128 0x53
 42490 0561 2E       		.uleb128 0x2e
 42491 0562 01       		.byte	0x1
 42492 0563 3F       		.uleb128 0x3f
 42493 0564 19       		.uleb128 0x19
 42494 0565 03       		.uleb128 0x3
 42495 0566 0E       		.uleb128 0xe
 42496 0567 3A       		.uleb128 0x3a
 42497 0568 0B       		.uleb128 0xb
 42498 0569 3B       		.uleb128 0x3b
 42499 056a 0B       		.uleb128 0xb
 42500 056b 49       		.uleb128 0x49
 42501 056c 13       		.uleb128 0x13
 42502 056d 3C       		.uleb128 0x3c
 42503 056e 19       		.uleb128 0x19
 42504 056f 00       		.byte	0
 42505 0570 00       		.byte	0
 42506 0571 54       		.uleb128 0x54
 42507 0572 02       		.uleb128 0x2
 42508 0573 01       		.byte	0x1
 42509 0574 03       		.uleb128 0x3
 42510 0575 0E       		.uleb128 0xe
 42511 0576 0B       		.uleb128 0xb
 42512 0577 05       		.uleb128 0x5
 42513 0578 3A       		.uleb128 0x3a
 42514 0579 0B       		.uleb128 0xb
 42515 057a 3B       		.uleb128 0x3b
 42516 057b 05       		.uleb128 0x5
 42517 057c 01       		.uleb128 0x1
 42518 057d 13       		.uleb128 0x13
 42519 057e 00       		.byte	0
 42520 057f 00       		.byte	0
 42521 0580 55       		.uleb128 0x55
 42522 0581 0D       		.uleb128 0xd
 42523 0582 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1065


 42524 0583 03       		.uleb128 0x3
 42525 0584 0E       		.uleb128 0xe
 42526 0585 3A       		.uleb128 0x3a
 42527 0586 0B       		.uleb128 0xb
 42528 0587 3B       		.uleb128 0x3b
 42529 0588 05       		.uleb128 0x5
 42530 0589 49       		.uleb128 0x49
 42531 058a 13       		.uleb128 0x13
 42532 058b 38       		.uleb128 0x38
 42533 058c 05       		.uleb128 0x5
 42534 058d 00       		.byte	0
 42535 058e 00       		.byte	0
 42536 058f 56       		.uleb128 0x56
 42537 0590 2E       		.uleb128 0x2e
 42538 0591 00       		.byte	0
 42539 0592 3F       		.uleb128 0x3f
 42540 0593 19       		.uleb128 0x19
 42541 0594 03       		.uleb128 0x3
 42542 0595 08       		.uleb128 0x8
 42543 0596 3A       		.uleb128 0x3a
 42544 0597 0B       		.uleb128 0xb
 42545 0598 3B       		.uleb128 0x3b
 42546 0599 05       		.uleb128 0x5
 42547 059a 6E       		.uleb128 0x6e
 42548 059b 0E       		.uleb128 0xe
 42549 059c 49       		.uleb128 0x49
 42550 059d 13       		.uleb128 0x13
 42551 059e 32       		.uleb128 0x32
 42552 059f 0B       		.uleb128 0xb
 42553 05a0 3C       		.uleb128 0x3c
 42554 05a1 19       		.uleb128 0x19
 42555 05a2 00       		.byte	0
 42556 05a3 00       		.byte	0
 42557 05a4 57       		.uleb128 0x57
 42558 05a5 30       		.uleb128 0x30
 42559 05a6 00       		.byte	0
 42560 05a7 03       		.uleb128 0x3
 42561 05a8 08       		.uleb128 0x8
 42562 05a9 49       		.uleb128 0x49
 42563 05aa 13       		.uleb128 0x13
 42564 05ab 1C       		.uleb128 0x1c
 42565 05ac 06       		.uleb128 0x6
 42566 05ad 00       		.byte	0
 42567 05ae 00       		.byte	0
 42568 05af 58       		.uleb128 0x58
 42569 05b0 17       		.uleb128 0x17
 42570 05b1 01       		.byte	0x1
 42571 05b2 0B       		.uleb128 0xb
 42572 05b3 05       		.uleb128 0x5
 42573 05b4 3A       		.uleb128 0x3a
 42574 05b5 0B       		.uleb128 0xb
 42575 05b6 3B       		.uleb128 0x3b
 42576 05b7 05       		.uleb128 0x5
 42577 05b8 01       		.uleb128 0x1
 42578 05b9 13       		.uleb128 0x13
 42579 05ba 00       		.byte	0
 42580 05bb 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1066


 42581 05bc 59       		.uleb128 0x59
 42582 05bd 0D       		.uleb128 0xd
 42583 05be 00       		.byte	0
 42584 05bf 03       		.uleb128 0x3
 42585 05c0 0E       		.uleb128 0xe
 42586 05c1 3A       		.uleb128 0x3a
 42587 05c2 0B       		.uleb128 0xb
 42588 05c3 3B       		.uleb128 0x3b
 42589 05c4 05       		.uleb128 0x5
 42590 05c5 49       		.uleb128 0x49
 42591 05c6 13       		.uleb128 0x13
 42592 05c7 00       		.byte	0
 42593 05c8 00       		.byte	0
 42594 05c9 5A       		.uleb128 0x5a
 42595 05ca 2E       		.uleb128 0x2e
 42596 05cb 01       		.byte	0x1
 42597 05cc 3F       		.uleb128 0x3f
 42598 05cd 19       		.uleb128 0x19
 42599 05ce 34       		.uleb128 0x34
 42600 05cf 19       		.uleb128 0x19
 42601 05d0 3C       		.uleb128 0x3c
 42602 05d1 19       		.uleb128 0x19
 42603 05d2 64       		.uleb128 0x64
 42604 05d3 13       		.uleb128 0x13
 42605 05d4 00       		.byte	0
 42606 05d5 00       		.byte	0
 42607 05d6 5B       		.uleb128 0x5b
 42608 05d7 0D       		.uleb128 0xd
 42609 05d8 00       		.byte	0
 42610 05d9 49       		.uleb128 0x49
 42611 05da 13       		.uleb128 0x13
 42612 05db 38       		.uleb128 0x38
 42613 05dc 0B       		.uleb128 0xb
 42614 05dd 00       		.byte	0
 42615 05de 00       		.byte	0
 42616 05df 5C       		.uleb128 0x5c
 42617 05e0 16       		.uleb128 0x16
 42618 05e1 00       		.byte	0
 42619 05e2 03       		.uleb128 0x3
 42620 05e3 0E       		.uleb128 0xe
 42621 05e4 3A       		.uleb128 0x3a
 42622 05e5 0B       		.uleb128 0xb
 42623 05e6 3B       		.uleb128 0x3b
 42624 05e7 05       		.uleb128 0x5
 42625 05e8 49       		.uleb128 0x49
 42626 05e9 13       		.uleb128 0x13
 42627 05ea 00       		.byte	0
 42628 05eb 00       		.byte	0
 42629 05ec 5D       		.uleb128 0x5d
 42630 05ed 13       		.uleb128 0x13
 42631 05ee 01       		.byte	0x1
 42632 05ef 03       		.uleb128 0x3
 42633 05f0 0E       		.uleb128 0xe
 42634 05f1 0B       		.uleb128 0xb
 42635 05f2 0B       		.uleb128 0xb
 42636 05f3 3A       		.uleb128 0x3a
 42637 05f4 0B       		.uleb128 0xb
GAS LISTING /tmp/ccmMnd7l.s 			page 1067


 42638 05f5 3B       		.uleb128 0x3b
 42639 05f6 0B       		.uleb128 0xb
 42640 05f7 32       		.uleb128 0x32
 42641 05f8 0B       		.uleb128 0xb
 42642 05f9 00       		.byte	0
 42643 05fa 00       		.byte	0
 42644 05fb 5E       		.uleb128 0x5e
 42645 05fc 2E       		.uleb128 0x2e
 42646 05fd 01       		.byte	0x1
 42647 05fe 3F       		.uleb128 0x3f
 42648 05ff 19       		.uleb128 0x19
 42649 0600 03       		.uleb128 0x3
 42650 0601 0E       		.uleb128 0xe
 42651 0602 3A       		.uleb128 0x3a
 42652 0603 0B       		.uleb128 0xb
 42653 0604 3B       		.uleb128 0x3b
 42654 0605 0B       		.uleb128 0xb
 42655 0606 6E       		.uleb128 0x6e
 42656 0607 0E       		.uleb128 0xe
 42657 0608 49       		.uleb128 0x49
 42658 0609 13       		.uleb128 0x13
 42659 060a 32       		.uleb128 0x32
 42660 060b 0B       		.uleb128 0xb
 42661 060c 3C       		.uleb128 0x3c
 42662 060d 19       		.uleb128 0x19
 42663 060e 01       		.uleb128 0x1
 42664 060f 13       		.uleb128 0x13
 42665 0610 00       		.byte	0
 42666 0611 00       		.byte	0
 42667 0612 5F       		.uleb128 0x5f
 42668 0613 04       		.uleb128 0x4
 42669 0614 01       		.byte	0x1
 42670 0615 0B       		.uleb128 0xb
 42671 0616 0B       		.uleb128 0xb
 42672 0617 3A       		.uleb128 0x3a
 42673 0618 0B       		.uleb128 0xb
 42674 0619 3B       		.uleb128 0x3b
 42675 061a 05       		.uleb128 0x5
 42676 061b 01       		.uleb128 0x1
 42677 061c 13       		.uleb128 0x13
 42678 061d 00       		.byte	0
 42679 061e 00       		.byte	0
 42680 061f 60       		.uleb128 0x60
 42681 0620 2E       		.uleb128 0x2e
 42682 0621 01       		.byte	0x1
 42683 0622 3F       		.uleb128 0x3f
 42684 0623 19       		.uleb128 0x19
 42685 0624 03       		.uleb128 0x3
 42686 0625 0E       		.uleb128 0xe
 42687 0626 3A       		.uleb128 0x3a
 42688 0627 0B       		.uleb128 0xb
 42689 0628 3B       		.uleb128 0x3b
 42690 0629 0B       		.uleb128 0xb
 42691 062a 6E       		.uleb128 0x6e
 42692 062b 0E       		.uleb128 0xe
 42693 062c 3C       		.uleb128 0x3c
 42694 062d 19       		.uleb128 0x19
GAS LISTING /tmp/ccmMnd7l.s 			page 1068


 42695 062e 64       		.uleb128 0x64
 42696 062f 13       		.uleb128 0x13
 42697 0630 00       		.byte	0
 42698 0631 00       		.byte	0
 42699 0632 61       		.uleb128 0x61
 42700 0633 13       		.uleb128 0x13
 42701 0634 01       		.byte	0x1
 42702 0635 03       		.uleb128 0x3
 42703 0636 0E       		.uleb128 0xe
 42704 0637 0B       		.uleb128 0xb
 42705 0638 0B       		.uleb128 0xb
 42706 0639 3A       		.uleb128 0x3a
 42707 063a 0B       		.uleb128 0xb
 42708 063b 3B       		.uleb128 0x3b
 42709 063c 05       		.uleb128 0x5
 42710 063d 32       		.uleb128 0x32
 42711 063e 0B       		.uleb128 0xb
 42712 063f 01       		.uleb128 0x1
 42713 0640 13       		.uleb128 0x13
 42714 0641 00       		.byte	0
 42715 0642 00       		.byte	0
 42716 0643 62       		.uleb128 0x62
 42717 0644 0D       		.uleb128 0xd
 42718 0645 00       		.byte	0
 42719 0646 03       		.uleb128 0x3
 42720 0647 0E       		.uleb128 0xe
 42721 0648 3A       		.uleb128 0x3a
 42722 0649 0B       		.uleb128 0xb
 42723 064a 3B       		.uleb128 0x3b
 42724 064b 05       		.uleb128 0x5
 42725 064c 49       		.uleb128 0x49
 42726 064d 13       		.uleb128 0x13
 42727 064e 38       		.uleb128 0x38
 42728 064f 0B       		.uleb128 0xb
 42729 0650 32       		.uleb128 0x32
 42730 0651 0B       		.uleb128 0xb
 42731 0652 00       		.byte	0
 42732 0653 00       		.byte	0
 42733 0654 63       		.uleb128 0x63
 42734 0655 2E       		.uleb128 0x2e
 42735 0656 01       		.byte	0x1
 42736 0657 3F       		.uleb128 0x3f
 42737 0658 19       		.uleb128 0x19
 42738 0659 03       		.uleb128 0x3
 42739 065a 0E       		.uleb128 0xe
 42740 065b 3A       		.uleb128 0x3a
 42741 065c 0B       		.uleb128 0xb
 42742 065d 3B       		.uleb128 0x3b
 42743 065e 05       		.uleb128 0x5
 42744 065f 3C       		.uleb128 0x3c
 42745 0660 19       		.uleb128 0x19
 42746 0661 63       		.uleb128 0x63
 42747 0662 19       		.uleb128 0x19
 42748 0663 64       		.uleb128 0x64
 42749 0664 13       		.uleb128 0x13
 42750 0665 01       		.uleb128 0x1
 42751 0666 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1069


 42752 0667 00       		.byte	0
 42753 0668 00       		.byte	0
 42754 0669 64       		.uleb128 0x64
 42755 066a 2E       		.uleb128 0x2e
 42756 066b 01       		.byte	0x1
 42757 066c 3F       		.uleb128 0x3f
 42758 066d 19       		.uleb128 0x19
 42759 066e 03       		.uleb128 0x3
 42760 066f 08       		.uleb128 0x8
 42761 0670 3A       		.uleb128 0x3a
 42762 0671 0B       		.uleb128 0xb
 42763 0672 3B       		.uleb128 0x3b
 42764 0673 05       		.uleb128 0x5
 42765 0674 6E       		.uleb128 0x6e
 42766 0675 0E       		.uleb128 0xe
 42767 0676 49       		.uleb128 0x49
 42768 0677 13       		.uleb128 0x13
 42769 0678 3C       		.uleb128 0x3c
 42770 0679 19       		.uleb128 0x19
 42771 067a 64       		.uleb128 0x64
 42772 067b 13       		.uleb128 0x13
 42773 067c 01       		.uleb128 0x1
 42774 067d 13       		.uleb128 0x13
 42775 067e 00       		.byte	0
 42776 067f 00       		.byte	0
 42777 0680 65       		.uleb128 0x65
 42778 0681 2E       		.uleb128 0x2e
 42779 0682 01       		.byte	0x1
 42780 0683 3F       		.uleb128 0x3f
 42781 0684 19       		.uleb128 0x19
 42782 0685 03       		.uleb128 0x3
 42783 0686 08       		.uleb128 0x8
 42784 0687 3A       		.uleb128 0x3a
 42785 0688 0B       		.uleb128 0xb
 42786 0689 3B       		.uleb128 0x3b
 42787 068a 05       		.uleb128 0x5
 42788 068b 6E       		.uleb128 0x6e
 42789 068c 0E       		.uleb128 0xe
 42790 068d 49       		.uleb128 0x49
 42791 068e 13       		.uleb128 0x13
 42792 068f 3C       		.uleb128 0x3c
 42793 0690 19       		.uleb128 0x19
 42794 0691 64       		.uleb128 0x64
 42795 0692 13       		.uleb128 0x13
 42796 0693 00       		.byte	0
 42797 0694 00       		.byte	0
 42798 0695 66       		.uleb128 0x66
 42799 0696 2E       		.uleb128 0x2e
 42800 0697 01       		.byte	0x1
 42801 0698 3F       		.uleb128 0x3f
 42802 0699 19       		.uleb128 0x19
 42803 069a 03       		.uleb128 0x3
 42804 069b 0E       		.uleb128 0xe
 42805 069c 3A       		.uleb128 0x3a
 42806 069d 0B       		.uleb128 0xb
 42807 069e 3B       		.uleb128 0x3b
 42808 069f 05       		.uleb128 0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1070


 42809 06a0 49       		.uleb128 0x49
 42810 06a1 13       		.uleb128 0x13
 42811 06a2 32       		.uleb128 0x32
 42812 06a3 0B       		.uleb128 0xb
 42813 06a4 3C       		.uleb128 0x3c
 42814 06a5 19       		.uleb128 0x19
 42815 06a6 64       		.uleb128 0x64
 42816 06a7 13       		.uleb128 0x13
 42817 06a8 01       		.uleb128 0x1
 42818 06a9 13       		.uleb128 0x13
 42819 06aa 00       		.byte	0
 42820 06ab 00       		.byte	0
 42821 06ac 67       		.uleb128 0x67
 42822 06ad 878201   		.uleb128 0x4107
 42823 06b0 01       		.byte	0x1
 42824 06b1 03       		.uleb128 0x3
 42825 06b2 0E       		.uleb128 0xe
 42826 06b3 00       		.byte	0
 42827 06b4 00       		.byte	0
 42828 06b5 68       		.uleb128 0x68
 42829 06b6 2F       		.uleb128 0x2f
 42830 06b7 00       		.byte	0
 42831 06b8 49       		.uleb128 0x49
 42832 06b9 13       		.uleb128 0x13
 42833 06ba 00       		.byte	0
 42834 06bb 00       		.byte	0
 42835 06bc 69       		.uleb128 0x69
 42836 06bd 13       		.uleb128 0x13
 42837 06be 01       		.byte	0x1
 42838 06bf 03       		.uleb128 0x3
 42839 06c0 0E       		.uleb128 0xe
 42840 06c1 0B       		.uleb128 0xb
 42841 06c2 05       		.uleb128 0x5
 42842 06c3 3A       		.uleb128 0x3a
 42843 06c4 0B       		.uleb128 0xb
 42844 06c5 3B       		.uleb128 0x3b
 42845 06c6 05       		.uleb128 0x5
 42846 06c7 01       		.uleb128 0x1
 42847 06c8 13       		.uleb128 0x13
 42848 06c9 00       		.byte	0
 42849 06ca 00       		.byte	0
 42850 06cb 6A       		.uleb128 0x6a
 42851 06cc 878201   		.uleb128 0x4107
 42852 06cf 01       		.byte	0x1
 42853 06d0 03       		.uleb128 0x3
 42854 06d1 0E       		.uleb128 0xe
 42855 06d2 01       		.uleb128 0x1
 42856 06d3 13       		.uleb128 0x13
 42857 06d4 00       		.byte	0
 42858 06d5 00       		.byte	0
 42859 06d6 6B       		.uleb128 0x6b
 42860 06d7 878201   		.uleb128 0x4107
 42861 06da 00       		.byte	0
 42862 06db 03       		.uleb128 0x3
 42863 06dc 0E       		.uleb128 0xe
 42864 06dd 00       		.byte	0
 42865 06de 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1071


 42866 06df 6C       		.uleb128 0x6c
 42867 06e0 878201   		.uleb128 0x4107
 42868 06e3 01       		.byte	0x1
 42869 06e4 03       		.uleb128 0x3
 42870 06e5 0E       		.uleb128 0xe
 42871 06e6 3A       		.uleb128 0x3a
 42872 06e7 0B       		.uleb128 0xb
 42873 06e8 3B       		.uleb128 0x3b
 42874 06e9 05       		.uleb128 0x5
 42875 06ea 01       		.uleb128 0x1
 42876 06eb 13       		.uleb128 0x13
 42877 06ec 00       		.byte	0
 42878 06ed 00       		.byte	0
 42879 06ee 6D       		.uleb128 0x6d
 42880 06ef 30       		.uleb128 0x30
 42881 06f0 00       		.byte	0
 42882 06f1 49       		.uleb128 0x49
 42883 06f2 13       		.uleb128 0x13
 42884 06f3 1C       		.uleb128 0x1c
 42885 06f4 0B       		.uleb128 0xb
 42886 06f5 00       		.byte	0
 42887 06f6 00       		.byte	0
 42888 06f7 6E       		.uleb128 0x6e
 42889 06f8 2E       		.uleb128 0x2e
 42890 06f9 01       		.byte	0x1
 42891 06fa 3F       		.uleb128 0x3f
 42892 06fb 19       		.uleb128 0x19
 42893 06fc 03       		.uleb128 0x3
 42894 06fd 0E       		.uleb128 0xe
 42895 06fe 3A       		.uleb128 0x3a
 42896 06ff 0B       		.uleb128 0xb
 42897 0700 3B       		.uleb128 0x3b
 42898 0701 05       		.uleb128 0x5
 42899 0702 49       		.uleb128 0x49
 42900 0703 13       		.uleb128 0x13
 42901 0704 3C       		.uleb128 0x3c
 42902 0705 19       		.uleb128 0x19
 42903 0706 64       		.uleb128 0x64
 42904 0707 13       		.uleb128 0x13
 42905 0708 01       		.uleb128 0x1
 42906 0709 13       		.uleb128 0x13
 42907 070a 00       		.byte	0
 42908 070b 00       		.byte	0
 42909 070c 6F       		.uleb128 0x6f
 42910 070d 2E       		.uleb128 0x2e
 42911 070e 01       		.byte	0x1
 42912 070f 3F       		.uleb128 0x3f
 42913 0710 19       		.uleb128 0x19
 42914 0711 03       		.uleb128 0x3
 42915 0712 0E       		.uleb128 0xe
 42916 0713 34       		.uleb128 0x34
 42917 0714 19       		.uleb128 0x19
 42918 0715 3C       		.uleb128 0x3c
 42919 0716 19       		.uleb128 0x19
 42920 0717 64       		.uleb128 0x64
 42921 0718 13       		.uleb128 0x13
 42922 0719 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1072


 42923 071a 13       		.uleb128 0x13
 42924 071b 00       		.byte	0
 42925 071c 00       		.byte	0
 42926 071d 70       		.uleb128 0x70
 42927 071e 878201   		.uleb128 0x4107
 42928 0721 00       		.byte	0
 42929 0722 00       		.byte	0
 42930 0723 00       		.byte	0
 42931 0724 71       		.uleb128 0x71
 42932 0725 13       		.uleb128 0x13
 42933 0726 01       		.byte	0x1
 42934 0727 03       		.uleb128 0x3
 42935 0728 0E       		.uleb128 0xe
 42936 0729 0B       		.uleb128 0xb
 42937 072a 05       		.uleb128 0x5
 42938 072b 3A       		.uleb128 0x3a
 42939 072c 0B       		.uleb128 0xb
 42940 072d 3B       		.uleb128 0x3b
 42941 072e 0B       		.uleb128 0xb
 42942 072f 01       		.uleb128 0x1
 42943 0730 13       		.uleb128 0x13
 42944 0731 00       		.byte	0
 42945 0732 00       		.byte	0
 42946 0733 72       		.uleb128 0x72
 42947 0734 2E       		.uleb128 0x2e
 42948 0735 01       		.byte	0x1
 42949 0736 3F       		.uleb128 0x3f
 42950 0737 19       		.uleb128 0x19
 42951 0738 03       		.uleb128 0x3
 42952 0739 0E       		.uleb128 0xe
 42953 073a 3A       		.uleb128 0x3a
 42954 073b 0B       		.uleb128 0xb
 42955 073c 3B       		.uleb128 0x3b
 42956 073d 0B       		.uleb128 0xb
 42957 073e 32       		.uleb128 0x32
 42958 073f 0B       		.uleb128 0xb
 42959 0740 3C       		.uleb128 0x3c
 42960 0741 19       		.uleb128 0x19
 42961 0742 63       		.uleb128 0x63
 42962 0743 19       		.uleb128 0x19
 42963 0744 64       		.uleb128 0x64
 42964 0745 13       		.uleb128 0x13
 42965 0746 01       		.uleb128 0x1
 42966 0747 13       		.uleb128 0x13
 42967 0748 00       		.byte	0
 42968 0749 00       		.byte	0
 42969 074a 73       		.uleb128 0x73
 42970 074b 2E       		.uleb128 0x2e
 42971 074c 01       		.byte	0x1
 42972 074d 3F       		.uleb128 0x3f
 42973 074e 19       		.uleb128 0x19
 42974 074f 03       		.uleb128 0x3
 42975 0750 0E       		.uleb128 0xe
 42976 0751 3A       		.uleb128 0x3a
 42977 0752 0B       		.uleb128 0xb
 42978 0753 3B       		.uleb128 0x3b
 42979 0754 05       		.uleb128 0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1073


 42980 0755 6E       		.uleb128 0x6e
 42981 0756 0E       		.uleb128 0xe
 42982 0757 49       		.uleb128 0x49
 42983 0758 13       		.uleb128 0x13
 42984 0759 32       		.uleb128 0x32
 42985 075a 0B       		.uleb128 0xb
 42986 075b 3C       		.uleb128 0x3c
 42987 075c 19       		.uleb128 0x19
 42988 075d 63       		.uleb128 0x63
 42989 075e 19       		.uleb128 0x19
 42990 075f 64       		.uleb128 0x64
 42991 0760 13       		.uleb128 0x13
 42992 0761 01       		.uleb128 0x1
 42993 0762 13       		.uleb128 0x13
 42994 0763 00       		.byte	0
 42995 0764 00       		.byte	0
 42996 0765 74       		.uleb128 0x74
 42997 0766 2F       		.uleb128 0x2f
 42998 0767 00       		.byte	0
 42999 0768 03       		.uleb128 0x3
 43000 0769 08       		.uleb128 0x8
 43001 076a 49       		.uleb128 0x49
 43002 076b 13       		.uleb128 0x13
 43003 076c 1E       		.uleb128 0x1e
 43004 076d 19       		.uleb128 0x19
 43005 076e 00       		.byte	0
 43006 076f 00       		.byte	0
 43007 0770 75       		.uleb128 0x75
 43008 0771 2E       		.uleb128 0x2e
 43009 0772 01       		.byte	0x1
 43010 0773 3F       		.uleb128 0x3f
 43011 0774 19       		.uleb128 0x19
 43012 0775 03       		.uleb128 0x3
 43013 0776 0E       		.uleb128 0xe
 43014 0777 3A       		.uleb128 0x3a
 43015 0778 0B       		.uleb128 0xb
 43016 0779 3B       		.uleb128 0x3b
 43017 077a 05       		.uleb128 0x5
 43018 077b 49       		.uleb128 0x49
 43019 077c 13       		.uleb128 0x13
 43020 077d 3C       		.uleb128 0x3c
 43021 077e 19       		.uleb128 0x19
 43022 077f 00       		.byte	0
 43023 0780 00       		.byte	0
 43024 0781 76       		.uleb128 0x76
 43025 0782 2E       		.uleb128 0x2e
 43026 0783 01       		.byte	0x1
 43027 0784 3F       		.uleb128 0x3f
 43028 0785 19       		.uleb128 0x19
 43029 0786 03       		.uleb128 0x3
 43030 0787 0E       		.uleb128 0xe
 43031 0788 3A       		.uleb128 0x3a
 43032 0789 0B       		.uleb128 0xb
 43033 078a 3B       		.uleb128 0x3b
 43034 078b 05       		.uleb128 0x5
 43035 078c 49       		.uleb128 0x49
 43036 078d 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1074


 43037 078e 3C       		.uleb128 0x3c
 43038 078f 19       		.uleb128 0x19
 43039 0790 01       		.uleb128 0x1
 43040 0791 13       		.uleb128 0x13
 43041 0792 00       		.byte	0
 43042 0793 00       		.byte	0
 43043 0794 77       		.uleb128 0x77
 43044 0795 35       		.uleb128 0x35
 43045 0796 00       		.byte	0
 43046 0797 49       		.uleb128 0x49
 43047 0798 13       		.uleb128 0x13
 43048 0799 00       		.byte	0
 43049 079a 00       		.byte	0
 43050 079b 78       		.uleb128 0x78
 43051 079c 34       		.uleb128 0x34
 43052 079d 00       		.byte	0
 43053 079e 03       		.uleb128 0x3
 43054 079f 0E       		.uleb128 0xe
 43055 07a0 3A       		.uleb128 0x3a
 43056 07a1 0B       		.uleb128 0xb
 43057 07a2 3B       		.uleb128 0x3b
 43058 07a3 0B       		.uleb128 0xb
 43059 07a4 6E       		.uleb128 0x6e
 43060 07a5 0E       		.uleb128 0xe
 43061 07a6 49       		.uleb128 0x49
 43062 07a7 13       		.uleb128 0x13
 43063 07a8 3F       		.uleb128 0x3f
 43064 07a9 19       		.uleb128 0x19
 43065 07aa 3C       		.uleb128 0x3c
 43066 07ab 19       		.uleb128 0x19
 43067 07ac 00       		.byte	0
 43068 07ad 00       		.byte	0
 43069 07ae 79       		.uleb128 0x79
 43070 07af 34       		.uleb128 0x34
 43071 07b0 00       		.byte	0
 43072 07b1 03       		.uleb128 0x3
 43073 07b2 0E       		.uleb128 0xe
 43074 07b3 3A       		.uleb128 0x3a
 43075 07b4 0B       		.uleb128 0xb
 43076 07b5 3B       		.uleb128 0x3b
 43077 07b6 0B       		.uleb128 0xb
 43078 07b7 49       		.uleb128 0x49
 43079 07b8 13       		.uleb128 0x13
 43080 07b9 3C       		.uleb128 0x3c
 43081 07ba 19       		.uleb128 0x19
 43082 07bb 1C       		.uleb128 0x1c
 43083 07bc 0A       		.uleb128 0xa
 43084 07bd 00       		.byte	0
 43085 07be 00       		.byte	0
 43086 07bf 7A       		.uleb128 0x7a
 43087 07c0 34       		.uleb128 0x34
 43088 07c1 00       		.byte	0
 43089 07c2 03       		.uleb128 0x3
 43090 07c3 0E       		.uleb128 0xe
 43091 07c4 3A       		.uleb128 0x3a
 43092 07c5 0B       		.uleb128 0xb
 43093 07c6 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccmMnd7l.s 			page 1075


 43094 07c7 05       		.uleb128 0x5
 43095 07c8 49       		.uleb128 0x49
 43096 07c9 13       		.uleb128 0x13
 43097 07ca 3C       		.uleb128 0x3c
 43098 07cb 19       		.uleb128 0x19
 43099 07cc 1C       		.uleb128 0x1c
 43100 07cd 0A       		.uleb128 0xa
 43101 07ce 00       		.byte	0
 43102 07cf 00       		.byte	0
 43103 07d0 7B       		.uleb128 0x7b
 43104 07d1 34       		.uleb128 0x34
 43105 07d2 00       		.byte	0
 43106 07d3 03       		.uleb128 0x3
 43107 07d4 0E       		.uleb128 0xe
 43108 07d5 3A       		.uleb128 0x3a
 43109 07d6 0B       		.uleb128 0xb
 43110 07d7 3B       		.uleb128 0x3b
 43111 07d8 0B       		.uleb128 0xb
 43112 07d9 49       		.uleb128 0x49
 43113 07da 13       		.uleb128 0x13
 43114 07db 3C       		.uleb128 0x3c
 43115 07dc 19       		.uleb128 0x19
 43116 07dd 00       		.byte	0
 43117 07de 00       		.byte	0
 43118 07df 7C       		.uleb128 0x7c
 43119 07e0 2E       		.uleb128 0x2e
 43120 07e1 00       		.byte	0
 43121 07e2 3F       		.uleb128 0x3f
 43122 07e3 19       		.uleb128 0x19
 43123 07e4 03       		.uleb128 0x3
 43124 07e5 0E       		.uleb128 0xe
 43125 07e6 3A       		.uleb128 0x3a
 43126 07e7 0B       		.uleb128 0xb
 43127 07e8 3B       		.uleb128 0x3b
 43128 07e9 0B       		.uleb128 0xb
 43129 07ea 6E       		.uleb128 0x6e
 43130 07eb 0E       		.uleb128 0xe
 43131 07ec 3C       		.uleb128 0x3c
 43132 07ed 19       		.uleb128 0x19
 43133 07ee 00       		.byte	0
 43134 07ef 00       		.byte	0
 43135 07f0 7D       		.uleb128 0x7d
 43136 07f1 0F       		.uleb128 0xf
 43137 07f2 00       		.byte	0
 43138 07f3 0B       		.uleb128 0xb
 43139 07f4 0B       		.uleb128 0xb
 43140 07f5 00       		.byte	0
 43141 07f6 00       		.byte	0
 43142 07f7 7E       		.uleb128 0x7e
 43143 07f8 0F       		.uleb128 0xf
 43144 07f9 00       		.byte	0
 43145 07fa 0B       		.uleb128 0xb
 43146 07fb 0B       		.uleb128 0xb
 43147 07fc 49       		.uleb128 0x49
 43148 07fd 13       		.uleb128 0x13
 43149 07fe 00       		.byte	0
 43150 07ff 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1076


 43151 0800 7F       		.uleb128 0x7f
 43152 0801 10       		.uleb128 0x10
 43153 0802 00       		.byte	0
 43154 0803 0B       		.uleb128 0xb
 43155 0804 0B       		.uleb128 0xb
 43156 0805 49       		.uleb128 0x49
 43157 0806 13       		.uleb128 0x13
 43158 0807 00       		.byte	0
 43159 0808 00       		.byte	0
 43160 0809 8001     		.uleb128 0x80
 43161 080b 3B       		.uleb128 0x3b
 43162 080c 00       		.byte	0
 43163 080d 03       		.uleb128 0x3
 43164 080e 0E       		.uleb128 0xe
 43165 080f 00       		.byte	0
 43166 0810 00       		.byte	0
 43167 0811 8101     		.uleb128 0x81
 43168 0813 42       		.uleb128 0x42
 43169 0814 00       		.byte	0
 43170 0815 0B       		.uleb128 0xb
 43171 0816 0B       		.uleb128 0xb
 43172 0817 49       		.uleb128 0x49
 43173 0818 13       		.uleb128 0x13
 43174 0819 00       		.byte	0
 43175 081a 00       		.byte	0
 43176 081b 8201     		.uleb128 0x82
 43177 081d 24       		.uleb128 0x24
 43178 081e 00       		.byte	0
 43179 081f 0B       		.uleb128 0xb
 43180 0820 0B       		.uleb128 0xb
 43181 0821 3E       		.uleb128 0x3e
 43182 0822 0B       		.uleb128 0xb
 43183 0823 03       		.uleb128 0x3
 43184 0824 08       		.uleb128 0x8
 43185 0825 00       		.byte	0
 43186 0826 00       		.byte	0
 43187 0827 8301     		.uleb128 0x83
 43188 0829 2E       		.uleb128 0x2e
 43189 082a 01       		.byte	0x1
 43190 082b 3F       		.uleb128 0x3f
 43191 082c 19       		.uleb128 0x19
 43192 082d 03       		.uleb128 0x3
 43193 082e 0E       		.uleb128 0xe
 43194 082f 3A       		.uleb128 0x3a
 43195 0830 0B       		.uleb128 0xb
 43196 0831 3B       		.uleb128 0x3b
 43197 0832 0B       		.uleb128 0xb
 43198 0833 49       		.uleb128 0x49
 43199 0834 13       		.uleb128 0x13
 43200 0835 3C       		.uleb128 0x3c
 43201 0836 19       		.uleb128 0x19
 43202 0837 64       		.uleb128 0x64
 43203 0838 13       		.uleb128 0x13
 43204 0839 00       		.byte	0
 43205 083a 00       		.byte	0
 43206 083b 8401     		.uleb128 0x84
 43207 083d 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccmMnd7l.s 			page 1077


 43208 083e 00       		.byte	0
 43209 083f 3F       		.uleb128 0x3f
 43210 0840 19       		.uleb128 0x19
 43211 0841 03       		.uleb128 0x3
 43212 0842 0E       		.uleb128 0xe
 43213 0843 3A       		.uleb128 0x3a
 43214 0844 0B       		.uleb128 0xb
 43215 0845 3B       		.uleb128 0x3b
 43216 0846 0B       		.uleb128 0xb
 43217 0847 49       		.uleb128 0x49
 43218 0848 13       		.uleb128 0x13
 43219 0849 3C       		.uleb128 0x3c
 43220 084a 19       		.uleb128 0x19
 43221 084b 00       		.byte	0
 43222 084c 00       		.byte	0
 43223 084d 8501     		.uleb128 0x85
 43224 084f 34       		.uleb128 0x34
 43225 0850 00       		.byte	0
 43226 0851 03       		.uleb128 0x3
 43227 0852 0E       		.uleb128 0xe
 43228 0853 3A       		.uleb128 0x3a
 43229 0854 0B       		.uleb128 0xb
 43230 0855 3B       		.uleb128 0x3b
 43231 0856 0B       		.uleb128 0xb
 43232 0857 49       		.uleb128 0x49
 43233 0858 13       		.uleb128 0x13
 43234 0859 3C       		.uleb128 0x3c
 43235 085a 19       		.uleb128 0x19
 43236 085b 1C       		.uleb128 0x1c
 43237 085c 0B       		.uleb128 0xb
 43238 085d 00       		.byte	0
 43239 085e 00       		.byte	0
 43240 085f 8601     		.uleb128 0x86
 43241 0861 2E       		.uleb128 0x2e
 43242 0862 01       		.byte	0x1
 43243 0863 03       		.uleb128 0x3
 43244 0864 0E       		.uleb128 0xe
 43245 0865 3A       		.uleb128 0x3a
 43246 0866 0B       		.uleb128 0xb
 43247 0867 3B       		.uleb128 0x3b
 43248 0868 0B       		.uleb128 0xb
 43249 0869 49       		.uleb128 0x49
 43250 086a 13       		.uleb128 0x13
 43251 086b 3C       		.uleb128 0x3c
 43252 086c 19       		.uleb128 0x19
 43253 086d 01       		.uleb128 0x1
 43254 086e 13       		.uleb128 0x13
 43255 086f 00       		.byte	0
 43256 0870 00       		.byte	0
 43257 0871 8701     		.uleb128 0x87
 43258 0873 3A       		.uleb128 0x3a
 43259 0874 00       		.byte	0
 43260 0875 3A       		.uleb128 0x3a
 43261 0876 0B       		.uleb128 0xb
 43262 0877 3B       		.uleb128 0x3b
 43263 0878 0B       		.uleb128 0xb
 43264 0879 18       		.uleb128 0x18
GAS LISTING /tmp/ccmMnd7l.s 			page 1078


 43265 087a 13       		.uleb128 0x13
 43266 087b 00       		.byte	0
 43267 087c 00       		.byte	0
 43268 087d 8801     		.uleb128 0x88
 43269 087f 13       		.uleb128 0x13
 43270 0880 01       		.byte	0x1
 43271 0881 0B       		.uleb128 0xb
 43272 0882 0B       		.uleb128 0xb
 43273 0883 3A       		.uleb128 0x3a
 43274 0884 0B       		.uleb128 0xb
 43275 0885 3B       		.uleb128 0x3b
 43276 0886 0B       		.uleb128 0xb
 43277 0887 6E       		.uleb128 0x6e
 43278 0888 0E       		.uleb128 0xe
 43279 0889 01       		.uleb128 0x1
 43280 088a 13       		.uleb128 0x13
 43281 088b 00       		.byte	0
 43282 088c 00       		.byte	0
 43283 088d 8901     		.uleb128 0x89
 43284 088f 17       		.uleb128 0x17
 43285 0890 01       		.byte	0x1
 43286 0891 0B       		.uleb128 0xb
 43287 0892 0B       		.uleb128 0xb
 43288 0893 3A       		.uleb128 0x3a
 43289 0894 0B       		.uleb128 0xb
 43290 0895 3B       		.uleb128 0x3b
 43291 0896 0B       		.uleb128 0xb
 43292 0897 01       		.uleb128 0x1
 43293 0898 13       		.uleb128 0x13
 43294 0899 00       		.byte	0
 43295 089a 00       		.byte	0
 43296 089b 8A01     		.uleb128 0x8a
 43297 089d 0D       		.uleb128 0xd
 43298 089e 00       		.byte	0
 43299 089f 03       		.uleb128 0x3
 43300 08a0 0E       		.uleb128 0xe
 43301 08a1 3A       		.uleb128 0x3a
 43302 08a2 0B       		.uleb128 0xb
 43303 08a3 3B       		.uleb128 0x3b
 43304 08a4 0B       		.uleb128 0xb
 43305 08a5 49       		.uleb128 0x49
 43306 08a6 13       		.uleb128 0x13
 43307 08a7 00       		.byte	0
 43308 08a8 00       		.byte	0
 43309 08a9 8B01     		.uleb128 0x8b
 43310 08ab 01       		.uleb128 0x1
 43311 08ac 01       		.byte	0x1
 43312 08ad 49       		.uleb128 0x49
 43313 08ae 13       		.uleb128 0x13
 43314 08af 01       		.uleb128 0x1
 43315 08b0 13       		.uleb128 0x13
 43316 08b1 00       		.byte	0
 43317 08b2 00       		.byte	0
 43318 08b3 8C01     		.uleb128 0x8c
 43319 08b5 21       		.uleb128 0x21
 43320 08b6 00       		.byte	0
 43321 08b7 49       		.uleb128 0x49
GAS LISTING /tmp/ccmMnd7l.s 			page 1079


 43322 08b8 13       		.uleb128 0x13
 43323 08b9 2F       		.uleb128 0x2f
 43324 08ba 0B       		.uleb128 0xb
 43325 08bb 00       		.byte	0
 43326 08bc 00       		.byte	0
 43327 08bd 8D01     		.uleb128 0x8d
 43328 08bf 2E       		.uleb128 0x2e
 43329 08c0 00       		.byte	0
 43330 08c1 3F       		.uleb128 0x3f
 43331 08c2 19       		.uleb128 0x19
 43332 08c3 03       		.uleb128 0x3
 43333 08c4 0E       		.uleb128 0xe
 43334 08c5 3A       		.uleb128 0x3a
 43335 08c6 0B       		.uleb128 0xb
 43336 08c7 3B       		.uleb128 0x3b
 43337 08c8 05       		.uleb128 0x5
 43338 08c9 49       		.uleb128 0x49
 43339 08ca 13       		.uleb128 0x13
 43340 08cb 3C       		.uleb128 0x3c
 43341 08cc 19       		.uleb128 0x19
 43342 08cd 00       		.byte	0
 43343 08ce 00       		.byte	0
 43344 08cf 8E01     		.uleb128 0x8e
 43345 08d1 13       		.uleb128 0x13
 43346 08d2 01       		.byte	0x1
 43347 08d3 03       		.uleb128 0x3
 43348 08d4 08       		.uleb128 0x8
 43349 08d5 0B       		.uleb128 0xb
 43350 08d6 0B       		.uleb128 0xb
 43351 08d7 3A       		.uleb128 0x3a
 43352 08d8 0B       		.uleb128 0xb
 43353 08d9 3B       		.uleb128 0x3b
 43354 08da 0B       		.uleb128 0xb
 43355 08db 01       		.uleb128 0x1
 43356 08dc 13       		.uleb128 0x13
 43357 08dd 00       		.byte	0
 43358 08de 00       		.byte	0
 43359 08df 8F01     		.uleb128 0x8f
 43360 08e1 26       		.uleb128 0x26
 43361 08e2 00       		.byte	0
 43362 08e3 00       		.byte	0
 43363 08e4 00       		.byte	0
 43364 08e5 9001     		.uleb128 0x90
 43365 08e7 15       		.uleb128 0x15
 43366 08e8 01       		.byte	0x1
 43367 08e9 01       		.uleb128 0x1
 43368 08ea 13       		.uleb128 0x13
 43369 08eb 00       		.byte	0
 43370 08ec 00       		.byte	0
 43371 08ed 9101     		.uleb128 0x91
 43372 08ef 0D       		.uleb128 0xd
 43373 08f0 00       		.byte	0
 43374 08f1 03       		.uleb128 0x3
 43375 08f2 08       		.uleb128 0x8
 43376 08f3 3A       		.uleb128 0x3a
 43377 08f4 0B       		.uleb128 0xb
 43378 08f5 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccmMnd7l.s 			page 1080


 43379 08f6 0B       		.uleb128 0xb
 43380 08f7 49       		.uleb128 0x49
 43381 08f8 13       		.uleb128 0x13
 43382 08f9 38       		.uleb128 0x38
 43383 08fa 0B       		.uleb128 0xb
 43384 08fb 00       		.byte	0
 43385 08fc 00       		.byte	0
 43386 08fd 9201     		.uleb128 0x92
 43387 08ff 15       		.uleb128 0x15
 43388 0900 01       		.byte	0x1
 43389 0901 49       		.uleb128 0x49
 43390 0902 13       		.uleb128 0x13
 43391 0903 01       		.uleb128 0x1
 43392 0904 13       		.uleb128 0x13
 43393 0905 00       		.byte	0
 43394 0906 00       		.byte	0
 43395 0907 9301     		.uleb128 0x93
 43396 0909 15       		.uleb128 0x15
 43397 090a 00       		.byte	0
 43398 090b 00       		.byte	0
 43399 090c 00       		.byte	0
 43400 090d 9401     		.uleb128 0x94
 43401 090f 2E       		.uleb128 0x2e
 43402 0910 01       		.byte	0x1
 43403 0911 3F       		.uleb128 0x3f
 43404 0912 19       		.uleb128 0x19
 43405 0913 03       		.uleb128 0x3
 43406 0914 08       		.uleb128 0x8
 43407 0915 3A       		.uleb128 0x3a
 43408 0916 0B       		.uleb128 0xb
 43409 0917 3B       		.uleb128 0x3b
 43410 0918 05       		.uleb128 0x5
 43411 0919 49       		.uleb128 0x49
 43412 091a 13       		.uleb128 0x13
 43413 091b 3C       		.uleb128 0x3c
 43414 091c 19       		.uleb128 0x19
 43415 091d 01       		.uleb128 0x1
 43416 091e 13       		.uleb128 0x13
 43417 091f 00       		.byte	0
 43418 0920 00       		.byte	0
 43419 0921 9501     		.uleb128 0x95
 43420 0923 16       		.uleb128 0x16
 43421 0924 00       		.byte	0
 43422 0925 03       		.uleb128 0x3
 43423 0926 0E       		.uleb128 0xe
 43424 0927 3A       		.uleb128 0x3a
 43425 0928 0B       		.uleb128 0xb
 43426 0929 3B       		.uleb128 0x3b
 43427 092a 0B       		.uleb128 0xb
 43428 092b 00       		.byte	0
 43429 092c 00       		.byte	0
 43430 092d 9601     		.uleb128 0x96
 43431 092f 21       		.uleb128 0x21
 43432 0930 00       		.byte	0
 43433 0931 00       		.byte	0
 43434 0932 00       		.byte	0
 43435 0933 9701     		.uleb128 0x97
GAS LISTING /tmp/ccmMnd7l.s 			page 1081


 43436 0935 21       		.uleb128 0x21
 43437 0936 00       		.byte	0
 43438 0937 49       		.uleb128 0x49
 43439 0938 13       		.uleb128 0x13
 43440 0939 2F       		.uleb128 0x2f
 43441 093a 05       		.uleb128 0x5
 43442 093b 00       		.byte	0
 43443 093c 00       		.byte	0
 43444 093d 9801     		.uleb128 0x98
 43445 093f 2E       		.uleb128 0x2e
 43446 0940 01       		.byte	0x1
 43447 0941 47       		.uleb128 0x47
 43448 0942 13       		.uleb128 0x13
 43449 0943 20       		.uleb128 0x20
 43450 0944 0B       		.uleb128 0xb
 43451 0945 64       		.uleb128 0x64
 43452 0946 13       		.uleb128 0x13
 43453 0947 01       		.uleb128 0x1
 43454 0948 13       		.uleb128 0x13
 43455 0949 00       		.byte	0
 43456 094a 00       		.byte	0
 43457 094b 9901     		.uleb128 0x99
 43458 094d 05       		.uleb128 0x5
 43459 094e 00       		.byte	0
 43460 094f 03       		.uleb128 0x3
 43461 0950 0E       		.uleb128 0xe
 43462 0951 49       		.uleb128 0x49
 43463 0952 13       		.uleb128 0x13
 43464 0953 34       		.uleb128 0x34
 43465 0954 19       		.uleb128 0x19
 43466 0955 00       		.byte	0
 43467 0956 00       		.byte	0
 43468 0957 9A01     		.uleb128 0x9a
 43469 0959 2E       		.uleb128 0x2e
 43470 095a 01       		.byte	0x1
 43471 095b 03       		.uleb128 0x3
 43472 095c 0E       		.uleb128 0xe
 43473 095d 3A       		.uleb128 0x3a
 43474 095e 0B       		.uleb128 0xb
 43475 095f 3B       		.uleb128 0x3b
 43476 0960 0B       		.uleb128 0xb
 43477 0961 49       		.uleb128 0x49
 43478 0962 13       		.uleb128 0x13
 43479 0963 20       		.uleb128 0x20
 43480 0964 0B       		.uleb128 0xb
 43481 0965 01       		.uleb128 0x1
 43482 0966 13       		.uleb128 0x13
 43483 0967 00       		.byte	0
 43484 0968 00       		.byte	0
 43485 0969 9B01     		.uleb128 0x9b
 43486 096b 0B       		.uleb128 0xb
 43487 096c 01       		.byte	0x1
 43488 096d 00       		.byte	0
 43489 096e 00       		.byte	0
 43490 096f 9C01     		.uleb128 0x9c
 43491 0971 34       		.uleb128 0x34
 43492 0972 00       		.byte	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1082


 43493 0973 03       		.uleb128 0x3
 43494 0974 0E       		.uleb128 0xe
 43495 0975 3A       		.uleb128 0x3a
 43496 0976 0B       		.uleb128 0xb
 43497 0977 3B       		.uleb128 0x3b
 43498 0978 0B       		.uleb128 0xb
 43499 0979 49       		.uleb128 0x49
 43500 097a 13       		.uleb128 0x13
 43501 097b 00       		.byte	0
 43502 097c 00       		.byte	0
 43503 097d 9D01     		.uleb128 0x9d
 43504 097f 2E       		.uleb128 0x2e
 43505 0980 01       		.byte	0x1
 43506 0981 47       		.uleb128 0x47
 43507 0982 13       		.uleb128 0x13
 43508 0983 20       		.uleb128 0x20
 43509 0984 0B       		.uleb128 0xb
 43510 0985 01       		.uleb128 0x1
 43511 0986 13       		.uleb128 0x13
 43512 0987 00       		.byte	0
 43513 0988 00       		.byte	0
 43514 0989 9E01     		.uleb128 0x9e
 43515 098b 05       		.uleb128 0x5
 43516 098c 00       		.byte	0
 43517 098d 03       		.uleb128 0x3
 43518 098e 0E       		.uleb128 0xe
 43519 098f 3A       		.uleb128 0x3a
 43520 0990 0B       		.uleb128 0xb
 43521 0991 3B       		.uleb128 0x3b
 43522 0992 0B       		.uleb128 0xb
 43523 0993 49       		.uleb128 0x49
 43524 0994 13       		.uleb128 0x13
 43525 0995 00       		.byte	0
 43526 0996 00       		.byte	0
 43527 0997 9F01     		.uleb128 0x9f
 43528 0999 34       		.uleb128 0x34
 43529 099a 00       		.byte	0
 43530 099b 03       		.uleb128 0x3
 43531 099c 08       		.uleb128 0x8
 43532 099d 3A       		.uleb128 0x3a
 43533 099e 0B       		.uleb128 0xb
 43534 099f 3B       		.uleb128 0x3b
 43535 09a0 0B       		.uleb128 0xb
 43536 09a1 49       		.uleb128 0x49
 43537 09a2 13       		.uleb128 0x13
 43538 09a3 00       		.byte	0
 43539 09a4 00       		.byte	0
 43540 09a5 A001     		.uleb128 0xa0
 43541 09a7 05       		.uleb128 0x5
 43542 09a8 00       		.byte	0
 43543 09a9 03       		.uleb128 0x3
 43544 09aa 08       		.uleb128 0x8
 43545 09ab 3A       		.uleb128 0x3a
 43546 09ac 0B       		.uleb128 0xb
 43547 09ad 3B       		.uleb128 0x3b
 43548 09ae 0B       		.uleb128 0xb
 43549 09af 49       		.uleb128 0x49
GAS LISTING /tmp/ccmMnd7l.s 			page 1083


 43550 09b0 13       		.uleb128 0x13
 43551 09b1 00       		.byte	0
 43552 09b2 00       		.byte	0
 43553 09b3 A101     		.uleb128 0xa1
 43554 09b5 05       		.uleb128 0x5
 43555 09b6 00       		.byte	0
 43556 09b7 03       		.uleb128 0x3
 43557 09b8 08       		.uleb128 0x8
 43558 09b9 3A       		.uleb128 0x3a
 43559 09ba 0B       		.uleb128 0xb
 43560 09bb 3B       		.uleb128 0x3b
 43561 09bc 05       		.uleb128 0x5
 43562 09bd 49       		.uleb128 0x49
 43563 09be 13       		.uleb128 0x13
 43564 09bf 00       		.byte	0
 43565 09c0 00       		.byte	0
 43566 09c1 A201     		.uleb128 0xa2
 43567 09c3 05       		.uleb128 0x5
 43568 09c4 00       		.byte	0
 43569 09c5 03       		.uleb128 0x3
 43570 09c6 0E       		.uleb128 0xe
 43571 09c7 3A       		.uleb128 0x3a
 43572 09c8 0B       		.uleb128 0xb
 43573 09c9 3B       		.uleb128 0x3b
 43574 09ca 05       		.uleb128 0x5
 43575 09cb 49       		.uleb128 0x49
 43576 09cc 13       		.uleb128 0x13
 43577 09cd 00       		.byte	0
 43578 09ce 00       		.byte	0
 43579 09cf A301     		.uleb128 0xa3
 43580 09d1 34       		.uleb128 0x34
 43581 09d2 00       		.byte	0
 43582 09d3 03       		.uleb128 0x3
 43583 09d4 0E       		.uleb128 0xe
 43584 09d5 3A       		.uleb128 0x3a
 43585 09d6 0B       		.uleb128 0xb
 43586 09d7 3B       		.uleb128 0x3b
 43587 09d8 05       		.uleb128 0x5
 43588 09d9 49       		.uleb128 0x49
 43589 09da 13       		.uleb128 0x13
 43590 09db 00       		.byte	0
 43591 09dc 00       		.byte	0
 43592 09dd A401     		.uleb128 0xa4
 43593 09df 2E       		.uleb128 0x2e
 43594 09e0 01       		.byte	0x1
 43595 09e1 47       		.uleb128 0x47
 43596 09e2 13       		.uleb128 0x13
 43597 09e3 3A       		.uleb128 0x3a
 43598 09e4 0B       		.uleb128 0xb
 43599 09e5 3B       		.uleb128 0x3b
 43600 09e6 0B       		.uleb128 0xb
 43601 09e7 20       		.uleb128 0x20
 43602 09e8 0B       		.uleb128 0xb
 43603 09e9 64       		.uleb128 0x64
 43604 09ea 13       		.uleb128 0x13
 43605 09eb 01       		.uleb128 0x1
 43606 09ec 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1084


 43607 09ed 00       		.byte	0
 43608 09ee 00       		.byte	0
 43609 09ef A501     		.uleb128 0xa5
 43610 09f1 888201   		.uleb128 0x4108
 43611 09f4 00       		.byte	0
 43612 09f5 3A       		.uleb128 0x3a
 43613 09f6 0B       		.uleb128 0xb
 43614 09f7 3B       		.uleb128 0x3b
 43615 09f8 05       		.uleb128 0x5
 43616 09f9 00       		.byte	0
 43617 09fa 00       		.byte	0
 43618 09fb A601     		.uleb128 0xa6
 43619 09fd 888201   		.uleb128 0x4108
 43620 0a00 01       		.byte	0x1
 43621 0a01 3A       		.uleb128 0x3a
 43622 0a02 0B       		.uleb128 0xb
 43623 0a03 3B       		.uleb128 0x3b
 43624 0a04 05       		.uleb128 0x5
 43625 0a05 00       		.byte	0
 43626 0a06 00       		.byte	0
 43627 0a07 A701     		.uleb128 0xa7
 43628 0a09 2E       		.uleb128 0x2e
 43629 0a0a 01       		.byte	0x1
 43630 0a0b 47       		.uleb128 0x47
 43631 0a0c 13       		.uleb128 0x13
 43632 0a0d 3A       		.uleb128 0x3a
 43633 0a0e 0B       		.uleb128 0xb
 43634 0a0f 3B       		.uleb128 0x3b
 43635 0a10 05       		.uleb128 0x5
 43636 0a11 20       		.uleb128 0x20
 43637 0a12 0B       		.uleb128 0xb
 43638 0a13 64       		.uleb128 0x64
 43639 0a14 13       		.uleb128 0x13
 43640 0a15 01       		.uleb128 0x1
 43641 0a16 13       		.uleb128 0x13
 43642 0a17 00       		.byte	0
 43643 0a18 00       		.byte	0
 43644 0a19 A801     		.uleb128 0xa8
 43645 0a1b 34       		.uleb128 0x34
 43646 0a1c 00       		.byte	0
 43647 0a1d 03       		.uleb128 0x3
 43648 0a1e 08       		.uleb128 0x8
 43649 0a1f 3A       		.uleb128 0x3a
 43650 0a20 0B       		.uleb128 0xb
 43651 0a21 3B       		.uleb128 0x3b
 43652 0a22 05       		.uleb128 0x5
 43653 0a23 49       		.uleb128 0x49
 43654 0a24 13       		.uleb128 0x13
 43655 0a25 00       		.byte	0
 43656 0a26 00       		.byte	0
 43657 0a27 A901     		.uleb128 0xa9
 43658 0a29 0B       		.uleb128 0xb
 43659 0a2a 00       		.byte	0
 43660 0a2b 00       		.byte	0
 43661 0a2c 00       		.byte	0
 43662 0a2d AA01     		.uleb128 0xaa
 43663 0a2f 888201   		.uleb128 0x4108
GAS LISTING /tmp/ccmMnd7l.s 			page 1085


 43664 0a32 01       		.byte	0x1
 43665 0a33 3A       		.uleb128 0x3a
 43666 0a34 0B       		.uleb128 0xb
 43667 0a35 3B       		.uleb128 0x3b
 43668 0a36 05       		.uleb128 0x5
 43669 0a37 01       		.uleb128 0x1
 43670 0a38 13       		.uleb128 0x13
 43671 0a39 00       		.byte	0
 43672 0a3a 00       		.byte	0
 43673 0a3b AB01     		.uleb128 0xab
 43674 0a3d 2E       		.uleb128 0x2e
 43675 0a3e 00       		.byte	0
 43676 0a3f 47       		.uleb128 0x47
 43677 0a40 13       		.uleb128 0x13
 43678 0a41 20       		.uleb128 0x20
 43679 0a42 0B       		.uleb128 0xb
 43680 0a43 00       		.byte	0
 43681 0a44 00       		.byte	0
 43682 0a45 AC01     		.uleb128 0xac
 43683 0a47 2E       		.uleb128 0x2e
 43684 0a48 01       		.byte	0x1
 43685 0a49 03       		.uleb128 0x3
 43686 0a4a 0E       		.uleb128 0xe
 43687 0a4b 34       		.uleb128 0x34
 43688 0a4c 19       		.uleb128 0x19
 43689 0a4d 20       		.uleb128 0x20
 43690 0a4e 0B       		.uleb128 0xb
 43691 0a4f 01       		.uleb128 0x1
 43692 0a50 13       		.uleb128 0x13
 43693 0a51 00       		.byte	0
 43694 0a52 00       		.byte	0
 43695 0a53 AD01     		.uleb128 0xad
 43696 0a55 0B       		.uleb128 0xb
 43697 0a56 01       		.byte	0x1
 43698 0a57 01       		.uleb128 0x1
 43699 0a58 13       		.uleb128 0x13
 43700 0a59 00       		.byte	0
 43701 0a5a 00       		.byte	0
 43702 0a5b AE01     		.uleb128 0xae
 43703 0a5d 2E       		.uleb128 0x2e
 43704 0a5e 01       		.byte	0x1
 43705 0a5f 31       		.uleb128 0x31
 43706 0a60 13       		.uleb128 0x13
 43707 0a61 6E       		.uleb128 0x6e
 43708 0a62 0E       		.uleb128 0xe
 43709 0a63 11       		.uleb128 0x11
 43710 0a64 01       		.uleb128 0x1
 43711 0a65 12       		.uleb128 0x12
 43712 0a66 07       		.uleb128 0x7
 43713 0a67 40       		.uleb128 0x40
 43714 0a68 18       		.uleb128 0x18
 43715 0a69 64       		.uleb128 0x64
 43716 0a6a 13       		.uleb128 0x13
 43717 0a6b 9742     		.uleb128 0x2117
 43718 0a6d 19       		.uleb128 0x19
 43719 0a6e 01       		.uleb128 0x1
 43720 0a6f 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1086


 43721 0a70 00       		.byte	0
 43722 0a71 00       		.byte	0
 43723 0a72 AF01     		.uleb128 0xaf
 43724 0a74 05       		.uleb128 0x5
 43725 0a75 00       		.byte	0
 43726 0a76 31       		.uleb128 0x31
 43727 0a77 13       		.uleb128 0x13
 43728 0a78 02       		.uleb128 0x2
 43729 0a79 18       		.uleb128 0x18
 43730 0a7a 00       		.byte	0
 43731 0a7b 00       		.byte	0
 43732 0a7c B001     		.uleb128 0xb0
 43733 0a7e 2E       		.uleb128 0x2e
 43734 0a7f 01       		.byte	0x1
 43735 0a80 3F       		.uleb128 0x3f
 43736 0a81 19       		.uleb128 0x19
 43737 0a82 03       		.uleb128 0x3
 43738 0a83 0E       		.uleb128 0xe
 43739 0a84 3A       		.uleb128 0x3a
 43740 0a85 0B       		.uleb128 0xb
 43741 0a86 3B       		.uleb128 0x3b
 43742 0a87 0B       		.uleb128 0xb
 43743 0a88 6E       		.uleb128 0x6e
 43744 0a89 0E       		.uleb128 0xe
 43745 0a8a 49       		.uleb128 0x49
 43746 0a8b 13       		.uleb128 0x13
 43747 0a8c 11       		.uleb128 0x11
 43748 0a8d 01       		.uleb128 0x1
 43749 0a8e 12       		.uleb128 0x12
 43750 0a8f 07       		.uleb128 0x7
 43751 0a90 40       		.uleb128 0x40
 43752 0a91 18       		.uleb128 0x18
 43753 0a92 9742     		.uleb128 0x2117
 43754 0a94 19       		.uleb128 0x19
 43755 0a95 01       		.uleb128 0x1
 43756 0a96 13       		.uleb128 0x13
 43757 0a97 00       		.byte	0
 43758 0a98 00       		.byte	0
 43759 0a99 B101     		.uleb128 0xb1
 43760 0a9b 898201   		.uleb128 0x4109
 43761 0a9e 00       		.byte	0
 43762 0a9f 11       		.uleb128 0x11
 43763 0aa0 01       		.uleb128 0x1
 43764 0aa1 9542     		.uleb128 0x2115
 43765 0aa3 19       		.uleb128 0x19
 43766 0aa4 31       		.uleb128 0x31
 43767 0aa5 13       		.uleb128 0x13
 43768 0aa6 00       		.byte	0
 43769 0aa7 00       		.byte	0
 43770 0aa8 B201     		.uleb128 0xb2
 43771 0aaa 2E       		.uleb128 0x2e
 43772 0aab 01       		.byte	0x1
 43773 0aac 47       		.uleb128 0x47
 43774 0aad 13       		.uleb128 0x13
 43775 0aae 3A       		.uleb128 0x3a
 43776 0aaf 0B       		.uleb128 0xb
 43777 0ab0 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccmMnd7l.s 			page 1087


 43778 0ab1 05       		.uleb128 0x5
 43779 0ab2 11       		.uleb128 0x11
 43780 0ab3 01       		.uleb128 0x1
 43781 0ab4 12       		.uleb128 0x12
 43782 0ab5 07       		.uleb128 0x7
 43783 0ab6 40       		.uleb128 0x40
 43784 0ab7 18       		.uleb128 0x18
 43785 0ab8 64       		.uleb128 0x64
 43786 0ab9 13       		.uleb128 0x13
 43787 0aba 9742     		.uleb128 0x2117
 43788 0abc 19       		.uleb128 0x19
 43789 0abd 01       		.uleb128 0x1
 43790 0abe 13       		.uleb128 0x13
 43791 0abf 00       		.byte	0
 43792 0ac0 00       		.byte	0
 43793 0ac1 B301     		.uleb128 0xb3
 43794 0ac3 05       		.uleb128 0x5
 43795 0ac4 00       		.byte	0
 43796 0ac5 03       		.uleb128 0x3
 43797 0ac6 0E       		.uleb128 0xe
 43798 0ac7 49       		.uleb128 0x49
 43799 0ac8 13       		.uleb128 0x13
 43800 0ac9 34       		.uleb128 0x34
 43801 0aca 19       		.uleb128 0x19
 43802 0acb 02       		.uleb128 0x2
 43803 0acc 18       		.uleb128 0x18
 43804 0acd 00       		.byte	0
 43805 0ace 00       		.byte	0
 43806 0acf B401     		.uleb128 0xb4
 43807 0ad1 0B       		.uleb128 0xb
 43808 0ad2 01       		.byte	0x1
 43809 0ad3 55       		.uleb128 0x55
 43810 0ad4 17       		.uleb128 0x17
 43811 0ad5 00       		.byte	0
 43812 0ad6 00       		.byte	0
 43813 0ad7 B501     		.uleb128 0xb5
 43814 0ad9 34       		.uleb128 0x34
 43815 0ada 00       		.byte	0
 43816 0adb 03       		.uleb128 0x3
 43817 0adc 08       		.uleb128 0x8
 43818 0add 3A       		.uleb128 0x3a
 43819 0ade 0B       		.uleb128 0xb
 43820 0adf 3B       		.uleb128 0x3b
 43821 0ae0 05       		.uleb128 0x5
 43822 0ae1 49       		.uleb128 0x49
 43823 0ae2 13       		.uleb128 0x13
 43824 0ae3 02       		.uleb128 0x2
 43825 0ae4 17       		.uleb128 0x17
 43826 0ae5 00       		.byte	0
 43827 0ae6 00       		.byte	0
 43828 0ae7 B601     		.uleb128 0xb6
 43829 0ae9 1D       		.uleb128 0x1d
 43830 0aea 01       		.byte	0x1
 43831 0aeb 31       		.uleb128 0x31
 43832 0aec 13       		.uleb128 0x13
 43833 0aed 11       		.uleb128 0x11
 43834 0aee 01       		.uleb128 0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1088


 43835 0aef 12       		.uleb128 0x12
 43836 0af0 07       		.uleb128 0x7
 43837 0af1 58       		.uleb128 0x58
 43838 0af2 0B       		.uleb128 0xb
 43839 0af3 59       		.uleb128 0x59
 43840 0af4 05       		.uleb128 0x5
 43841 0af5 00       		.byte	0
 43842 0af6 00       		.byte	0
 43843 0af7 B701     		.uleb128 0xb7
 43844 0af9 05       		.uleb128 0x5
 43845 0afa 00       		.byte	0
 43846 0afb 31       		.uleb128 0x31
 43847 0afc 13       		.uleb128 0x13
 43848 0afd 00       		.byte	0
 43849 0afe 00       		.byte	0
 43850 0aff B801     		.uleb128 0xb8
 43851 0b01 0B       		.uleb128 0xb
 43852 0b02 01       		.byte	0x1
 43853 0b03 11       		.uleb128 0x11
 43854 0b04 01       		.uleb128 0x1
 43855 0b05 12       		.uleb128 0x12
 43856 0b06 07       		.uleb128 0x7
 43857 0b07 00       		.byte	0
 43858 0b08 00       		.byte	0
 43859 0b09 B901     		.uleb128 0xb9
 43860 0b0b 34       		.uleb128 0x34
 43861 0b0c 00       		.byte	0
 43862 0b0d 31       		.uleb128 0x31
 43863 0b0e 13       		.uleb128 0x13
 43864 0b0f 00       		.byte	0
 43865 0b10 00       		.byte	0
 43866 0b11 BA01     		.uleb128 0xba
 43867 0b13 34       		.uleb128 0x34
 43868 0b14 00       		.byte	0
 43869 0b15 31       		.uleb128 0x31
 43870 0b16 13       		.uleb128 0x13
 43871 0b17 02       		.uleb128 0x2
 43872 0b18 17       		.uleb128 0x17
 43873 0b19 00       		.byte	0
 43874 0b1a 00       		.byte	0
 43875 0b1b BB01     		.uleb128 0xbb
 43876 0b1d 0B       		.uleb128 0xb
 43877 0b1e 01       		.byte	0x1
 43878 0b1f 11       		.uleb128 0x11
 43879 0b20 01       		.uleb128 0x1
 43880 0b21 12       		.uleb128 0x12
 43881 0b22 07       		.uleb128 0x7
 43882 0b23 01       		.uleb128 0x1
 43883 0b24 13       		.uleb128 0x13
 43884 0b25 00       		.byte	0
 43885 0b26 00       		.byte	0
 43886 0b27 BC01     		.uleb128 0xbc
 43887 0b29 34       		.uleb128 0x34
 43888 0b2a 00       		.byte	0
 43889 0b2b 31       		.uleb128 0x31
 43890 0b2c 13       		.uleb128 0x13
 43891 0b2d 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1089


 43892 0b2e 18       		.uleb128 0x18
 43893 0b2f 00       		.byte	0
 43894 0b30 00       		.byte	0
 43895 0b31 BD01     		.uleb128 0xbd
 43896 0b33 05       		.uleb128 0x5
 43897 0b34 00       		.byte	0
 43898 0b35 31       		.uleb128 0x31
 43899 0b36 13       		.uleb128 0x13
 43900 0b37 02       		.uleb128 0x2
 43901 0b38 17       		.uleb128 0x17
 43902 0b39 00       		.byte	0
 43903 0b3a 00       		.byte	0
 43904 0b3b BE01     		.uleb128 0xbe
 43905 0b3d 34       		.uleb128 0x34
 43906 0b3e 00       		.byte	0
 43907 0b3f 31       		.uleb128 0x31
 43908 0b40 13       		.uleb128 0x13
 43909 0b41 1C       		.uleb128 0x1c
 43910 0b42 0B       		.uleb128 0xb
 43911 0b43 00       		.byte	0
 43912 0b44 00       		.byte	0
 43913 0b45 BF01     		.uleb128 0xbf
 43914 0b47 34       		.uleb128 0x34
 43915 0b48 00       		.byte	0
 43916 0b49 31       		.uleb128 0x31
 43917 0b4a 13       		.uleb128 0x13
 43918 0b4b 1C       		.uleb128 0x1c
 43919 0b4c 06       		.uleb128 0x6
 43920 0b4d 00       		.byte	0
 43921 0b4e 00       		.byte	0
 43922 0b4f C001     		.uleb128 0xc0
 43923 0b51 898201   		.uleb128 0x4109
 43924 0b54 01       		.byte	0x1
 43925 0b55 11       		.uleb128 0x11
 43926 0b56 01       		.uleb128 0x1
 43927 0b57 31       		.uleb128 0x31
 43928 0b58 13       		.uleb128 0x13
 43929 0b59 00       		.byte	0
 43930 0b5a 00       		.byte	0
 43931 0b5b C101     		.uleb128 0xc1
 43932 0b5d 8A8201   		.uleb128 0x410a
 43933 0b60 00       		.byte	0
 43934 0b61 02       		.uleb128 0x2
 43935 0b62 18       		.uleb128 0x18
 43936 0b63 9142     		.uleb128 0x2111
 43937 0b65 18       		.uleb128 0x18
 43938 0b66 00       		.byte	0
 43939 0b67 00       		.byte	0
 43940 0b68 C201     		.uleb128 0xc2
 43941 0b6a 1D       		.uleb128 0x1d
 43942 0b6b 01       		.byte	0x1
 43943 0b6c 31       		.uleb128 0x31
 43944 0b6d 13       		.uleb128 0x13
 43945 0b6e 52       		.uleb128 0x52
 43946 0b6f 01       		.uleb128 0x1
 43947 0b70 55       		.uleb128 0x55
 43948 0b71 17       		.uleb128 0x17
GAS LISTING /tmp/ccmMnd7l.s 			page 1090


 43949 0b72 58       		.uleb128 0x58
 43950 0b73 0B       		.uleb128 0xb
 43951 0b74 59       		.uleb128 0x59
 43952 0b75 05       		.uleb128 0x5
 43953 0b76 01       		.uleb128 0x1
 43954 0b77 13       		.uleb128 0x13
 43955 0b78 00       		.byte	0
 43956 0b79 00       		.byte	0
 43957 0b7a C301     		.uleb128 0xc3
 43958 0b7c 0B       		.uleb128 0xb
 43959 0b7d 01       		.byte	0x1
 43960 0b7e 55       		.uleb128 0x55
 43961 0b7f 17       		.uleb128 0x17
 43962 0b80 01       		.uleb128 0x1
 43963 0b81 13       		.uleb128 0x13
 43964 0b82 00       		.byte	0
 43965 0b83 00       		.byte	0
 43966 0b84 C401     		.uleb128 0xc4
 43967 0b86 1D       		.uleb128 0x1d
 43968 0b87 01       		.byte	0x1
 43969 0b88 31       		.uleb128 0x31
 43970 0b89 13       		.uleb128 0x13
 43971 0b8a 11       		.uleb128 0x11
 43972 0b8b 01       		.uleb128 0x1
 43973 0b8c 12       		.uleb128 0x12
 43974 0b8d 07       		.uleb128 0x7
 43975 0b8e 58       		.uleb128 0x58
 43976 0b8f 0B       		.uleb128 0xb
 43977 0b90 59       		.uleb128 0x59
 43978 0b91 05       		.uleb128 0x5
 43979 0b92 01       		.uleb128 0x1
 43980 0b93 13       		.uleb128 0x13
 43981 0b94 00       		.byte	0
 43982 0b95 00       		.byte	0
 43983 0b96 C501     		.uleb128 0xc5
 43984 0b98 898201   		.uleb128 0x4109
 43985 0b9b 01       		.byte	0x1
 43986 0b9c 11       		.uleb128 0x11
 43987 0b9d 01       		.uleb128 0x1
 43988 0b9e 31       		.uleb128 0x31
 43989 0b9f 13       		.uleb128 0x13
 43990 0ba0 01       		.uleb128 0x1
 43991 0ba1 13       		.uleb128 0x13
 43992 0ba2 00       		.byte	0
 43993 0ba3 00       		.byte	0
 43994 0ba4 C601     		.uleb128 0xc6
 43995 0ba6 05       		.uleb128 0x5
 43996 0ba7 00       		.byte	0
 43997 0ba8 03       		.uleb128 0x3
 43998 0ba9 0E       		.uleb128 0xe
 43999 0baa 3A       		.uleb128 0x3a
 44000 0bab 0B       		.uleb128 0xb
 44001 0bac 3B       		.uleb128 0x3b
 44002 0bad 0B       		.uleb128 0xb
 44003 0bae 49       		.uleb128 0x49
 44004 0baf 13       		.uleb128 0x13
 44005 0bb0 02       		.uleb128 0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1091


 44006 0bb1 17       		.uleb128 0x17
 44007 0bb2 00       		.byte	0
 44008 0bb3 00       		.byte	0
 44009 0bb4 C701     		.uleb128 0xc7
 44010 0bb6 34       		.uleb128 0x34
 44011 0bb7 00       		.byte	0
 44012 0bb8 03       		.uleb128 0x3
 44013 0bb9 0E       		.uleb128 0xe
 44014 0bba 3A       		.uleb128 0x3a
 44015 0bbb 0B       		.uleb128 0xb
 44016 0bbc 3B       		.uleb128 0x3b
 44017 0bbd 0B       		.uleb128 0xb
 44018 0bbe 49       		.uleb128 0x49
 44019 0bbf 13       		.uleb128 0x13
 44020 0bc0 02       		.uleb128 0x2
 44021 0bc1 17       		.uleb128 0x17
 44022 0bc2 00       		.byte	0
 44023 0bc3 00       		.byte	0
 44024 0bc4 C801     		.uleb128 0xc8
 44025 0bc6 34       		.uleb128 0x34
 44026 0bc7 00       		.byte	0
 44027 0bc8 03       		.uleb128 0x3
 44028 0bc9 08       		.uleb128 0x8
 44029 0bca 3A       		.uleb128 0x3a
 44030 0bcb 0B       		.uleb128 0xb
 44031 0bcc 3B       		.uleb128 0x3b
 44032 0bcd 0B       		.uleb128 0xb
 44033 0bce 49       		.uleb128 0x49
 44034 0bcf 13       		.uleb128 0x13
 44035 0bd0 02       		.uleb128 0x2
 44036 0bd1 18       		.uleb128 0x18
 44037 0bd2 00       		.byte	0
 44038 0bd3 00       		.byte	0
 44039 0bd4 C901     		.uleb128 0xc9
 44040 0bd6 34       		.uleb128 0x34
 44041 0bd7 00       		.byte	0
 44042 0bd8 03       		.uleb128 0x3
 44043 0bd9 0E       		.uleb128 0xe
 44044 0bda 3A       		.uleb128 0x3a
 44045 0bdb 0B       		.uleb128 0xb
 44046 0bdc 3B       		.uleb128 0x3b
 44047 0bdd 0B       		.uleb128 0xb
 44048 0bde 49       		.uleb128 0x49
 44049 0bdf 13       		.uleb128 0x13
 44050 0be0 02       		.uleb128 0x2
 44051 0be1 18       		.uleb128 0x18
 44052 0be2 00       		.byte	0
 44053 0be3 00       		.byte	0
 44054 0be4 CA01     		.uleb128 0xca
 44055 0be6 1D       		.uleb128 0x1d
 44056 0be7 01       		.byte	0x1
 44057 0be8 31       		.uleb128 0x31
 44058 0be9 13       		.uleb128 0x13
 44059 0bea 52       		.uleb128 0x52
 44060 0beb 01       		.uleb128 0x1
 44061 0bec 55       		.uleb128 0x55
 44062 0bed 17       		.uleb128 0x17
GAS LISTING /tmp/ccmMnd7l.s 			page 1092


 44063 0bee 58       		.uleb128 0x58
 44064 0bef 0B       		.uleb128 0xb
 44065 0bf0 59       		.uleb128 0x59
 44066 0bf1 0B       		.uleb128 0xb
 44067 0bf2 01       		.uleb128 0x1
 44068 0bf3 13       		.uleb128 0x13
 44069 0bf4 00       		.byte	0
 44070 0bf5 00       		.byte	0
 44071 0bf6 CB01     		.uleb128 0xcb
 44072 0bf8 1D       		.uleb128 0x1d
 44073 0bf9 01       		.byte	0x1
 44074 0bfa 31       		.uleb128 0x31
 44075 0bfb 13       		.uleb128 0x13
 44076 0bfc 52       		.uleb128 0x52
 44077 0bfd 01       		.uleb128 0x1
 44078 0bfe 55       		.uleb128 0x55
 44079 0bff 17       		.uleb128 0x17
 44080 0c00 58       		.uleb128 0x58
 44081 0c01 0B       		.uleb128 0xb
 44082 0c02 59       		.uleb128 0x59
 44083 0c03 0B       		.uleb128 0xb
 44084 0c04 00       		.byte	0
 44085 0c05 00       		.byte	0
 44086 0c06 CC01     		.uleb128 0xcc
 44087 0c08 1D       		.uleb128 0x1d
 44088 0c09 01       		.byte	0x1
 44089 0c0a 31       		.uleb128 0x31
 44090 0c0b 13       		.uleb128 0x13
 44091 0c0c 52       		.uleb128 0x52
 44092 0c0d 01       		.uleb128 0x1
 44093 0c0e 55       		.uleb128 0x55
 44094 0c0f 17       		.uleb128 0x17
 44095 0c10 58       		.uleb128 0x58
 44096 0c11 0B       		.uleb128 0xb
 44097 0c12 59       		.uleb128 0x59
 44098 0c13 05       		.uleb128 0x5
 44099 0c14 00       		.byte	0
 44100 0c15 00       		.byte	0
 44101 0c16 CD01     		.uleb128 0xcd
 44102 0c18 898201   		.uleb128 0x4109
 44103 0c1b 00       		.byte	0
 44104 0c1c 11       		.uleb128 0x11
 44105 0c1d 01       		.uleb128 0x1
 44106 0c1e 31       		.uleb128 0x31
 44107 0c1f 13       		.uleb128 0x13
 44108 0c20 00       		.byte	0
 44109 0c21 00       		.byte	0
 44110 0c22 CE01     		.uleb128 0xce
 44111 0c24 1D       		.uleb128 0x1d
 44112 0c25 01       		.byte	0x1
 44113 0c26 31       		.uleb128 0x31
 44114 0c27 13       		.uleb128 0x13
 44115 0c28 11       		.uleb128 0x11
 44116 0c29 01       		.uleb128 0x1
 44117 0c2a 12       		.uleb128 0x12
 44118 0c2b 07       		.uleb128 0x7
 44119 0c2c 58       		.uleb128 0x58
GAS LISTING /tmp/ccmMnd7l.s 			page 1093


 44120 0c2d 0B       		.uleb128 0xb
 44121 0c2e 59       		.uleb128 0x59
 44122 0c2f 0B       		.uleb128 0xb
 44123 0c30 00       		.byte	0
 44124 0c31 00       		.byte	0
 44125 0c32 CF01     		.uleb128 0xcf
 44126 0c34 1D       		.uleb128 0x1d
 44127 0c35 01       		.byte	0x1
 44128 0c36 31       		.uleb128 0x31
 44129 0c37 13       		.uleb128 0x13
 44130 0c38 11       		.uleb128 0x11
 44131 0c39 01       		.uleb128 0x1
 44132 0c3a 12       		.uleb128 0x12
 44133 0c3b 07       		.uleb128 0x7
 44134 0c3c 58       		.uleb128 0x58
 44135 0c3d 0B       		.uleb128 0xb
 44136 0c3e 59       		.uleb128 0x59
 44137 0c3f 0B       		.uleb128 0xb
 44138 0c40 01       		.uleb128 0x1
 44139 0c41 13       		.uleb128 0x13
 44140 0c42 00       		.byte	0
 44141 0c43 00       		.byte	0
 44142 0c44 D001     		.uleb128 0xd0
 44143 0c46 898201   		.uleb128 0x4109
 44144 0c49 01       		.byte	0x1
 44145 0c4a 11       		.uleb128 0x11
 44146 0c4b 01       		.uleb128 0x1
 44147 0c4c 00       		.byte	0
 44148 0c4d 00       		.byte	0
 44149 0c4e D101     		.uleb128 0xd1
 44150 0c50 05       		.uleb128 0x5
 44151 0c51 00       		.byte	0
 44152 0c52 31       		.uleb128 0x31
 44153 0c53 13       		.uleb128 0x13
 44154 0c54 1C       		.uleb128 0x1c
 44155 0c55 0D       		.uleb128 0xd
 44156 0c56 00       		.byte	0
 44157 0c57 00       		.byte	0
 44158 0c58 D201     		.uleb128 0xd2
 44159 0c5a 2E       		.uleb128 0x2e
 44160 0c5b 01       		.byte	0x1
 44161 0c5c 47       		.uleb128 0x47
 44162 0c5d 13       		.uleb128 0x13
 44163 0c5e 11       		.uleb128 0x11
 44164 0c5f 01       		.uleb128 0x1
 44165 0c60 12       		.uleb128 0x12
 44166 0c61 07       		.uleb128 0x7
 44167 0c62 40       		.uleb128 0x40
 44168 0c63 18       		.uleb128 0x18
 44169 0c64 9742     		.uleb128 0x2117
 44170 0c66 19       		.uleb128 0x19
 44171 0c67 01       		.uleb128 0x1
 44172 0c68 13       		.uleb128 0x13
 44173 0c69 00       		.byte	0
 44174 0c6a 00       		.byte	0
 44175 0c6b D301     		.uleb128 0xd3
 44176 0c6d 05       		.uleb128 0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1094


 44177 0c6e 00       		.byte	0
 44178 0c6f 03       		.uleb128 0x3
 44179 0c70 0E       		.uleb128 0xe
 44180 0c71 3A       		.uleb128 0x3a
 44181 0c72 0B       		.uleb128 0xb
 44182 0c73 3B       		.uleb128 0x3b
 44183 0c74 0B       		.uleb128 0xb
 44184 0c75 49       		.uleb128 0x49
 44185 0c76 13       		.uleb128 0x13
 44186 0c77 02       		.uleb128 0x2
 44187 0c78 18       		.uleb128 0x18
 44188 0c79 00       		.byte	0
 44189 0c7a 00       		.byte	0
 44190 0c7b D401     		.uleb128 0xd4
 44191 0c7d 2E       		.uleb128 0x2e
 44192 0c7e 01       		.byte	0x1
 44193 0c7f 31       		.uleb128 0x31
 44194 0c80 13       		.uleb128 0x13
 44195 0c81 11       		.uleb128 0x11
 44196 0c82 01       		.uleb128 0x1
 44197 0c83 12       		.uleb128 0x12
 44198 0c84 07       		.uleb128 0x7
 44199 0c85 40       		.uleb128 0x40
 44200 0c86 18       		.uleb128 0x18
 44201 0c87 9642     		.uleb128 0x2116
 44202 0c89 19       		.uleb128 0x19
 44203 0c8a 01       		.uleb128 0x1
 44204 0c8b 13       		.uleb128 0x13
 44205 0c8c 00       		.byte	0
 44206 0c8d 00       		.byte	0
 44207 0c8e D501     		.uleb128 0xd5
 44208 0c90 2E       		.uleb128 0x2e
 44209 0c91 01       		.byte	0x1
 44210 0c92 3F       		.uleb128 0x3f
 44211 0c93 19       		.uleb128 0x19
 44212 0c94 03       		.uleb128 0x3
 44213 0c95 0E       		.uleb128 0xe
 44214 0c96 3A       		.uleb128 0x3a
 44215 0c97 0B       		.uleb128 0xb
 44216 0c98 3B       		.uleb128 0x3b
 44217 0c99 0B       		.uleb128 0xb
 44218 0c9a 49       		.uleb128 0x49
 44219 0c9b 13       		.uleb128 0x13
 44220 0c9c 11       		.uleb128 0x11
 44221 0c9d 01       		.uleb128 0x1
 44222 0c9e 12       		.uleb128 0x12
 44223 0c9f 07       		.uleb128 0x7
 44224 0ca0 40       		.uleb128 0x40
 44225 0ca1 18       		.uleb128 0x18
 44226 0ca2 9742     		.uleb128 0x2117
 44227 0ca4 19       		.uleb128 0x19
 44228 0ca5 01       		.uleb128 0x1
 44229 0ca6 13       		.uleb128 0x13
 44230 0ca7 00       		.byte	0
 44231 0ca8 00       		.byte	0
 44232 0ca9 D601     		.uleb128 0xd6
 44233 0cab 34       		.uleb128 0x34
GAS LISTING /tmp/ccmMnd7l.s 			page 1095


 44234 0cac 00       		.byte	0
 44235 0cad 03       		.uleb128 0x3
 44236 0cae 08       		.uleb128 0x8
 44237 0caf 3A       		.uleb128 0x3a
 44238 0cb0 0B       		.uleb128 0xb
 44239 0cb1 3B       		.uleb128 0x3b
 44240 0cb2 0B       		.uleb128 0xb
 44241 0cb3 49       		.uleb128 0x49
 44242 0cb4 13       		.uleb128 0x13
 44243 0cb5 02       		.uleb128 0x2
 44244 0cb6 17       		.uleb128 0x17
 44245 0cb7 00       		.byte	0
 44246 0cb8 00       		.byte	0
 44247 0cb9 D701     		.uleb128 0xd7
 44248 0cbb 2E       		.uleb128 0x2e
 44249 0cbc 01       		.byte	0x1
 44250 0cbd 03       		.uleb128 0x3
 44251 0cbe 0E       		.uleb128 0xe
 44252 0cbf 34       		.uleb128 0x34
 44253 0cc0 19       		.uleb128 0x19
 44254 0cc1 11       		.uleb128 0x11
 44255 0cc2 01       		.uleb128 0x1
 44256 0cc3 12       		.uleb128 0x12
 44257 0cc4 07       		.uleb128 0x7
 44258 0cc5 40       		.uleb128 0x40
 44259 0cc6 18       		.uleb128 0x18
 44260 0cc7 9742     		.uleb128 0x2117
 44261 0cc9 19       		.uleb128 0x19
 44262 0cca 01       		.uleb128 0x1
 44263 0ccb 13       		.uleb128 0x13
 44264 0ccc 00       		.byte	0
 44265 0ccd 00       		.byte	0
 44266 0cce D801     		.uleb128 0xd8
 44267 0cd0 05       		.uleb128 0x5
 44268 0cd1 00       		.byte	0
 44269 0cd2 31       		.uleb128 0x31
 44270 0cd3 13       		.uleb128 0x13
 44271 0cd4 1C       		.uleb128 0x1c
 44272 0cd5 0B       		.uleb128 0xb
 44273 0cd6 00       		.byte	0
 44274 0cd7 00       		.byte	0
 44275 0cd8 D901     		.uleb128 0xd9
 44276 0cda 05       		.uleb128 0x5
 44277 0cdb 00       		.byte	0
 44278 0cdc 31       		.uleb128 0x31
 44279 0cdd 13       		.uleb128 0x13
 44280 0cde 1C       		.uleb128 0x1c
 44281 0cdf 05       		.uleb128 0x5
 44282 0ce0 00       		.byte	0
 44283 0ce1 00       		.byte	0
 44284 0ce2 DA01     		.uleb128 0xda
 44285 0ce4 898201   		.uleb128 0x4109
 44286 0ce7 01       		.byte	0x1
 44287 0ce8 11       		.uleb128 0x11
 44288 0ce9 01       		.uleb128 0x1
 44289 0cea 01       		.uleb128 0x1
 44290 0ceb 13       		.uleb128 0x13
GAS LISTING /tmp/ccmMnd7l.s 			page 1096


 44291 0cec 00       		.byte	0
 44292 0ced 00       		.byte	0
 44293 0cee DB01     		.uleb128 0xdb
 44294 0cf0 898201   		.uleb128 0x4109
 44295 0cf3 01       		.byte	0x1
 44296 0cf4 11       		.uleb128 0x11
 44297 0cf5 01       		.uleb128 0x1
 44298 0cf6 9542     		.uleb128 0x2115
 44299 0cf8 19       		.uleb128 0x19
 44300 0cf9 31       		.uleb128 0x31
 44301 0cfa 13       		.uleb128 0x13
 44302 0cfb 00       		.byte	0
 44303 0cfc 00       		.byte	0
 44304 0cfd DC01     		.uleb128 0xdc
 44305 0cff 8A8201   		.uleb128 0x410a
 44306 0d02 00       		.byte	0
 44307 0d03 02       		.uleb128 0x2
 44308 0d04 18       		.uleb128 0x18
 44309 0d05 00       		.byte	0
 44310 0d06 00       		.byte	0
 44311 0d07 DD01     		.uleb128 0xdd
 44312 0d09 34       		.uleb128 0x34
 44313 0d0a 00       		.byte	0
 44314 0d0b 03       		.uleb128 0x3
 44315 0d0c 0E       		.uleb128 0xe
 44316 0d0d 3A       		.uleb128 0x3a
 44317 0d0e 0B       		.uleb128 0xb
 44318 0d0f 3B       		.uleb128 0x3b
 44319 0d10 0B       		.uleb128 0xb
 44320 0d11 49       		.uleb128 0x49
 44321 0d12 13       		.uleb128 0x13
 44322 0d13 3F       		.uleb128 0x3f
 44323 0d14 19       		.uleb128 0x19
 44324 0d15 3C       		.uleb128 0x3c
 44325 0d16 19       		.uleb128 0x19
 44326 0d17 00       		.byte	0
 44327 0d18 00       		.byte	0
 44328 0d19 DE01     		.uleb128 0xde
 44329 0d1b 34       		.uleb128 0x34
 44330 0d1c 00       		.byte	0
 44331 0d1d 03       		.uleb128 0x3
 44332 0d1e 0E       		.uleb128 0xe
 44333 0d1f 3A       		.uleb128 0x3a
 44334 0d20 0B       		.uleb128 0xb
 44335 0d21 3B       		.uleb128 0x3b
 44336 0d22 0B       		.uleb128 0xb
 44337 0d23 49       		.uleb128 0x49
 44338 0d24 13       		.uleb128 0x13
 44339 0d25 1C       		.uleb128 0x1c
 44340 0d26 0B       		.uleb128 0xb
 44341 0d27 00       		.byte	0
 44342 0d28 00       		.byte	0
 44343 0d29 DF01     		.uleb128 0xdf
 44344 0d2b 34       		.uleb128 0x34
 44345 0d2c 00       		.byte	0
 44346 0d2d 03       		.uleb128 0x3
 44347 0d2e 0E       		.uleb128 0xe
GAS LISTING /tmp/ccmMnd7l.s 			page 1097


 44348 0d2f 3A       		.uleb128 0x3a
 44349 0d30 0B       		.uleb128 0xb
 44350 0d31 3B       		.uleb128 0x3b
 44351 0d32 0B       		.uleb128 0xb
 44352 0d33 49       		.uleb128 0x49
 44353 0d34 13       		.uleb128 0x13
 44354 0d35 1C       		.uleb128 0x1c
 44355 0d36 06       		.uleb128 0x6
 44356 0d37 00       		.byte	0
 44357 0d38 00       		.byte	0
 44358 0d39 E001     		.uleb128 0xe0
 44359 0d3b 34       		.uleb128 0x34
 44360 0d3c 00       		.byte	0
 44361 0d3d 03       		.uleb128 0x3
 44362 0d3e 0E       		.uleb128 0xe
 44363 0d3f 3A       		.uleb128 0x3a
 44364 0d40 0B       		.uleb128 0xb
 44365 0d41 3B       		.uleb128 0x3b
 44366 0d42 0B       		.uleb128 0xb
 44367 0d43 49       		.uleb128 0x49
 44368 0d44 13       		.uleb128 0x13
 44369 0d45 1C       		.uleb128 0x1c
 44370 0d46 05       		.uleb128 0x5
 44371 0d47 00       		.byte	0
 44372 0d48 00       		.byte	0
 44373 0d49 E101     		.uleb128 0xe1
 44374 0d4b 34       		.uleb128 0x34
 44375 0d4c 00       		.byte	0
 44376 0d4d 03       		.uleb128 0x3
 44377 0d4e 0E       		.uleb128 0xe
 44378 0d4f 49       		.uleb128 0x49
 44379 0d50 13       		.uleb128 0x13
 44380 0d51 3F       		.uleb128 0x3f
 44381 0d52 19       		.uleb128 0x19
 44382 0d53 34       		.uleb128 0x34
 44383 0d54 19       		.uleb128 0x19
 44384 0d55 3C       		.uleb128 0x3c
 44385 0d56 19       		.uleb128 0x19
 44386 0d57 00       		.byte	0
 44387 0d58 00       		.byte	0
 44388 0d59 E201     		.uleb128 0xe2
 44389 0d5b 34       		.uleb128 0x34
 44390 0d5c 00       		.byte	0
 44391 0d5d 47       		.uleb128 0x47
 44392 0d5e 13       		.uleb128 0x13
 44393 0d5f 1C       		.uleb128 0x1c
 44394 0d60 0B       		.uleb128 0xb
 44395 0d61 00       		.byte	0
 44396 0d62 00       		.byte	0
 44397 0d63 E301     		.uleb128 0xe3
 44398 0d65 34       		.uleb128 0x34
 44399 0d66 00       		.byte	0
 44400 0d67 47       		.uleb128 0x47
 44401 0d68 13       		.uleb128 0x13
 44402 0d69 00       		.byte	0
 44403 0d6a 00       		.byte	0
 44404 0d6b E401     		.uleb128 0xe4
GAS LISTING /tmp/ccmMnd7l.s 			page 1098


 44405 0d6d 34       		.uleb128 0x34
 44406 0d6e 00       		.byte	0
 44407 0d6f 47       		.uleb128 0x47
 44408 0d70 13       		.uleb128 0x13
 44409 0d71 02       		.uleb128 0x2
 44410 0d72 18       		.uleb128 0x18
 44411 0d73 00       		.byte	0
 44412 0d74 00       		.byte	0
 44413 0d75 E501     		.uleb128 0xe5
 44414 0d77 34       		.uleb128 0x34
 44415 0d78 00       		.byte	0
 44416 0d79 47       		.uleb128 0x47
 44417 0d7a 13       		.uleb128 0x13
 44418 0d7b 6E       		.uleb128 0x6e
 44419 0d7c 0E       		.uleb128 0xe
 44420 0d7d 00       		.byte	0
 44421 0d7e 00       		.byte	0
 44422 0d7f E601     		.uleb128 0xe6
 44423 0d81 2E       		.uleb128 0x2e
 44424 0d82 01       		.byte	0x1
 44425 0d83 3F       		.uleb128 0x3f
 44426 0d84 19       		.uleb128 0x19
 44427 0d85 03       		.uleb128 0x3
 44428 0d86 0E       		.uleb128 0xe
 44429 0d87 49       		.uleb128 0x49
 44430 0d88 13       		.uleb128 0x13
 44431 0d89 34       		.uleb128 0x34
 44432 0d8a 19       		.uleb128 0x19
 44433 0d8b 3C       		.uleb128 0x3c
 44434 0d8c 19       		.uleb128 0x19
 44435 0d8d 01       		.uleb128 0x1
 44436 0d8e 13       		.uleb128 0x13
 44437 0d8f 00       		.byte	0
 44438 0d90 00       		.byte	0
 44439 0d91 E701     		.uleb128 0xe7
 44440 0d93 2E       		.uleb128 0x2e
 44441 0d94 01       		.byte	0x1
 44442 0d95 3F       		.uleb128 0x3f
 44443 0d96 19       		.uleb128 0x19
 44444 0d97 03       		.uleb128 0x3
 44445 0d98 0E       		.uleb128 0xe
 44446 0d99 6E       		.uleb128 0x6e
 44447 0d9a 0E       		.uleb128 0xe
 44448 0d9b 34       		.uleb128 0x34
 44449 0d9c 19       		.uleb128 0x19
 44450 0d9d 3C       		.uleb128 0x3c
 44451 0d9e 19       		.uleb128 0x19
 44452 0d9f 01       		.uleb128 0x1
 44453 0da0 13       		.uleb128 0x13
 44454 0da1 00       		.byte	0
 44455 0da2 00       		.byte	0
 44456 0da3 E801     		.uleb128 0xe8
 44457 0da5 2E       		.uleb128 0x2e
 44458 0da6 01       		.byte	0x1
 44459 0da7 3F       		.uleb128 0x3f
 44460 0da8 19       		.uleb128 0x19
 44461 0da9 03       		.uleb128 0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1099


 44462 0daa 0E       		.uleb128 0xe
 44463 0dab 6E       		.uleb128 0x6e
 44464 0dac 0E       		.uleb128 0xe
 44465 0dad 49       		.uleb128 0x49
 44466 0dae 13       		.uleb128 0x13
 44467 0daf 34       		.uleb128 0x34
 44468 0db0 19       		.uleb128 0x19
 44469 0db1 3C       		.uleb128 0x3c
 44470 0db2 19       		.uleb128 0x19
 44471 0db3 01       		.uleb128 0x1
 44472 0db4 13       		.uleb128 0x13
 44473 0db5 00       		.byte	0
 44474 0db6 00       		.byte	0
 44475 0db7 E901     		.uleb128 0xe9
 44476 0db9 2E       		.uleb128 0x2e
 44477 0dba 01       		.byte	0x1
 44478 0dbb 3F       		.uleb128 0x3f
 44479 0dbc 19       		.uleb128 0x19
 44480 0dbd 03       		.uleb128 0x3
 44481 0dbe 0E       		.uleb128 0xe
 44482 0dbf 49       		.uleb128 0x49
 44483 0dc0 13       		.uleb128 0x13
 44484 0dc1 34       		.uleb128 0x34
 44485 0dc2 19       		.uleb128 0x19
 44486 0dc3 3C       		.uleb128 0x3c
 44487 0dc4 19       		.uleb128 0x19
 44488 0dc5 00       		.byte	0
 44489 0dc6 00       		.byte	0
 44490 0dc7 00       		.byte	0
 44491              		.section	.debug_loc,"",@progbits
 44492              	.Ldebug_loc0:
 44493              	.LLST0:
 44494 0000 00000000 		.quad	.LVL3
 44494      00000000 
 44495 0008 00000000 		.quad	.LVL5
 44495      00000000 
 44496 0010 0100     		.value	0x1
 44497 0012 50       		.byte	0x50
 44498 0013 00000000 		.quad	.LVL5
 44498      00000000 
 44499 001b 00000000 		.quad	.LVL6
 44499      00000000 
 44500 0023 0100     		.value	0x1
 44501 0025 51       		.byte	0x51
 44502 0026 00000000 		.quad	.LVL6
 44502      00000000 
 44503 002e 00000000 		.quad	.LVL7
 44503      00000000 
 44504 0036 0100     		.value	0x1
 44505 0038 50       		.byte	0x50
 44506 0039 00000000 		.quad	.LVL7
 44506      00000000 
 44507 0041 00000000 		.quad	.LVL8
 44507      00000000 
 44508 0049 0600     		.value	0x6
 44509 004b 71       		.byte	0x71
 44510 004c 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1100


 44511 004d 70       		.byte	0x70
 44512 004e 00       		.sleb128 0
 44513 004f 27       		.byte	0x27
 44514 0050 9F       		.byte	0x9f
 44515 0051 00000000 		.quad	.LVL8
 44515      00000000 
 44516 0059 00000000 		.quad	.LVL9
 44516      00000000 
 44517 0061 0100     		.value	0x1
 44518 0063 50       		.byte	0x50
 44519 0064 00000000 		.quad	0
 44519      00000000 
 44520 006c 00000000 		.quad	0
 44520      00000000 
 44521              	.LLST1:
 44522 0074 00000000 		.quad	.LVL12
 44522      00000000 
 44523 007c 00000000 		.quad	.LVL13
 44523      00000000 
 44524 0084 0100     		.value	0x1
 44525 0086 51       		.byte	0x51
 44526 0087 00000000 		.quad	.LVL13
 44526      00000000 
 44527 008f 00000000 		.quad	.LVL14
 44527      00000000 
 44528 0097 1300     		.value	0x13
 44529 0099 75       		.byte	0x75
 44530 009a F826     		.sleb128 4984
 44531 009c 06       		.byte	0x6
 44532 009d 40       		.byte	0x40
 44533 009e 4B       		.byte	0x4b
 44534 009f 24       		.byte	0x24
 44535 00a0 1F       		.byte	0x1f
 44536 00a1 1A       		.byte	0x1a
 44537 00a2 70       		.byte	0x70
 44538 00a3 00       		.sleb128 0
 44539 00a4 0C       		.byte	0xc
 44540 00a5 FFFFFF7F 		.long	0x7fffffff
 44541 00a9 1A       		.byte	0x1a
 44542 00aa 21       		.byte	0x21
 44543 00ab 9F       		.byte	0x9f
 44544 00ac 00000000 		.quad	0
 44544      00000000 
 44545 00b4 00000000 		.quad	0
 44545      00000000 
 44546              	.LLST2:
 44547 00bc 00000000 		.quad	.LVL15
 44547      00000000 
 44548 00c4 00000000 		.quad	.LVL22
 44548      00000000 
 44549 00cc 0100     		.value	0x1
 44550 00ce 55       		.byte	0x55
 44551 00cf 00000000 		.quad	.LVL22
 44551      00000000 
 44552 00d7 00000000 		.quad	.LVL27
 44552      00000000 
 44553 00df 0400     		.value	0x4
GAS LISTING /tmp/ccmMnd7l.s 			page 1101


 44554 00e1 F3       		.byte	0xf3
 44555 00e2 01       		.uleb128 0x1
 44556 00e3 55       		.byte	0x55
 44557 00e4 9F       		.byte	0x9f
 44558 00e5 00000000 		.quad	.LVL27
 44558      00000000 
 44559 00ed 00000000 		.quad	.LVL28
 44559      00000000 
 44560 00f5 0100     		.value	0x1
 44561 00f7 55       		.byte	0x55
 44562 00f8 00000000 		.quad	.LVL28
 44562      00000000 
 44563 0100 00000000 		.quad	.LVL121
 44563      00000000 
 44564 0108 0100     		.value	0x1
 44565 010a 5E       		.byte	0x5e
 44566 010b 00000000 		.quad	.LVL121
 44566      00000000 
 44567 0113 00000000 		.quad	.LVL122
 44567      00000000 
 44568 011b 0100     		.value	0x1
 44569 011d 55       		.byte	0x55
 44570 011e 00000000 		.quad	.LVL122
 44570      00000000 
 44571 0126 00000000 		.quad	.LFE6521
 44571      00000000 
 44572 012e 0400     		.value	0x4
 44573 0130 F3       		.byte	0xf3
 44574 0131 01       		.uleb128 0x1
 44575 0132 55       		.byte	0x55
 44576 0133 9F       		.byte	0x9f
 44577 0134 00000000 		.quad	0
 44577      00000000 
 44578 013c 00000000 		.quad	0
 44578      00000000 
 44579              	.LLST3:
 44580 0144 00000000 		.quad	.LVL15
 44580      00000000 
 44581 014c 00000000 		.quad	.LVL22
 44581      00000000 
 44582 0154 0100     		.value	0x1
 44583 0156 54       		.byte	0x54
 44584 0157 00000000 		.quad	.LVL22
 44584      00000000 
 44585 015f 00000000 		.quad	.LVL26
 44585      00000000 
 44586 0167 0100     		.value	0x1
 44587 0169 53       		.byte	0x53
 44588 016a 00000000 		.quad	.LVL26
 44588      00000000 
 44589 0172 00000000 		.quad	.LVL27
 44589      00000000 
 44590 017a 0400     		.value	0x4
 44591 017c F3       		.byte	0xf3
 44592 017d 01       		.uleb128 0x1
 44593 017e 54       		.byte	0x54
 44594 017f 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1102


 44595 0180 00000000 		.quad	.LVL27
 44595      00000000 
 44596 0188 00000000 		.quad	.LFE6521
 44596      00000000 
 44597 0190 0100     		.value	0x1
 44598 0192 53       		.byte	0x53
 44599 0193 00000000 		.quad	0
 44599      00000000 
 44600 019b 00000000 		.quad	0
 44600      00000000 
 44601              	.LLST4:
 44602 01a3 00000000 		.quad	.LVL15
 44602      00000000 
 44603 01ab 00000000 		.quad	.LVL16
 44603      00000000 
 44604 01b3 0100     		.value	0x1
 44605 01b5 51       		.byte	0x51
 44606 01b6 00000000 		.quad	.LVL16
 44606      00000000 
 44607 01be 00000000 		.quad	.LFE6521
 44607      00000000 
 44608 01c6 0300     		.value	0x3
 44609 01c8 91       		.byte	0x91
 44610 01c9 A07F     		.sleb128 -96
 44611 01cb 00000000 		.quad	0
 44611      00000000 
 44612 01d3 00000000 		.quad	0
 44612      00000000 
 44613              	.LLST5:
 44614 01db 00000000 		.quad	.LVL17
 44614      00000000 
 44615 01e3 00000000 		.quad	.LVL18
 44615      00000000 
 44616 01eb 0100     		.value	0x1
 44617 01ed 51       		.byte	0x51
 44618 01ee 00000000 		.quad	.LVL18
 44618      00000000 
 44619 01f6 00000000 		.quad	.LVL19
 44619      00000000 
 44620 01fe 0100     		.value	0x1
 44621 0200 52       		.byte	0x52
 44622 0201 00000000 		.quad	.LVL19
 44622      00000000 
 44623 0209 00000000 		.quad	.LVL27
 44623      00000000 
 44624 0211 0300     		.value	0x3
 44625 0213 91       		.byte	0x91
 44626 0214 F87E     		.sleb128 -136
 44627 0216 00000000 		.quad	.LVL27
 44627      00000000 
 44628 021e 00000000 		.quad	.LVL29
 44628      00000000 
 44629 0226 0100     		.value	0x1
 44630 0228 51       		.byte	0x51
 44631 0229 00000000 		.quad	.LVL29
 44631      00000000 
 44632 0231 00000000 		.quad	.LVL121
GAS LISTING /tmp/ccmMnd7l.s 			page 1103


 44632      00000000 
 44633 0239 0300     		.value	0x3
 44634 023b 91       		.byte	0x91
 44635 023c F87E     		.sleb128 -136
 44636 023e 00000000 		.quad	.LVL121
 44636      00000000 
 44637 0246 00000000 		.quad	.LVL123-1
 44637      00000000 
 44638 024e 0100     		.value	0x1
 44639 0250 51       		.byte	0x51
 44640 0251 00000000 		.quad	.LVL123-1
 44640      00000000 
 44641 0259 00000000 		.quad	.LFE6521
 44641      00000000 
 44642 0261 0300     		.value	0x3
 44643 0263 91       		.byte	0x91
 44644 0264 F87E     		.sleb128 -136
 44645 0266 00000000 		.quad	0
 44645      00000000 
 44646 026e 00000000 		.quad	0
 44646      00000000 
 44647              	.LLST6:
 44648 0276 00000000 		.quad	.LVL23
 44648      00000000 
 44649 027e 00000000 		.quad	.LVL25
 44649      00000000 
 44650 0286 0100     		.value	0x1
 44651 0288 50       		.byte	0x50
 44652 0289 00000000 		.quad	.LVL37
 44652      00000000 
 44653 0291 00000000 		.quad	.LVL38
 44653      00000000 
 44654 0299 0600     		.value	0x6
 44655 029b 76       		.byte	0x76
 44656 029c 00       		.sleb128 0
 44657 029d 70       		.byte	0x70
 44658 029e 00       		.sleb128 0
 44659 029f 22       		.byte	0x22
 44660 02a0 9F       		.byte	0x9f
 44661 02a1 00000000 		.quad	.LVL38
 44661      00000000 
 44662 02a9 00000000 		.quad	.LVL39
 44662      00000000 
 44663 02b1 0100     		.value	0x1
 44664 02b3 50       		.byte	0x50
 44665 02b4 00000000 		.quad	.LVL123
 44665      00000000 
 44666 02bc 00000000 		.quad	.LFE6521
 44666      00000000 
 44667 02c4 0100     		.value	0x1
 44668 02c6 50       		.byte	0x50
 44669 02c7 00000000 		.quad	0
 44669      00000000 
 44670 02cf 00000000 		.quad	0
 44670      00000000 
 44671              	.LLST7:
 44672 02d7 00000000 		.quad	.LVL19
GAS LISTING /tmp/ccmMnd7l.s 			page 1104


 44672      00000000 
 44673 02df 00000000 		.quad	.LVL20
 44673      00000000 
 44674 02e7 0100     		.value	0x1
 44675 02e9 52       		.byte	0x52
 44676 02ea 00000000 		.quad	.LVL20
 44676      00000000 
 44677 02f2 00000000 		.quad	.LVL24
 44677      00000000 
 44678 02fa 0700     		.value	0x7
 44679 02fc 91       		.byte	0x91
 44680 02fd F87E     		.sleb128 -136
 44681 02ff 06       		.byte	0x6
 44682 0300 23       		.byte	0x23
 44683 0301 01       		.uleb128 0x1
 44684 0302 9F       		.byte	0x9f
 44685 0303 00000000 		.quad	0
 44685      00000000 
 44686 030b 00000000 		.quad	0
 44686      00000000 
 44687              	.LLST8:
 44688 0313 00000000 		.quad	.LVL21
 44688      00000000 
 44689 031b 00000000 		.quad	.LVL22
 44689      00000000 
 44690 0323 0100     		.value	0x1
 44691 0325 50       		.byte	0x50
 44692 0326 00000000 		.quad	.LVL22
 44692      00000000 
 44693 032e 00000000 		.quad	.LVL24
 44693      00000000 
 44694 0336 0100     		.value	0x1
 44695 0338 5C       		.byte	0x5c
 44696 0339 00000000 		.quad	0
 44696      00000000 
 44697 0341 00000000 		.quad	0
 44697      00000000 
 44698              	.LLST9:
 44699 0349 00000000 		.quad	.LVL22
 44699      00000000 
 44700 0351 00000000 		.quad	.LVL24
 44700      00000000 
 44701 0359 0100     		.value	0x1
 44702 035b 5D       		.byte	0x5d
 44703 035c 00000000 		.quad	0
 44703      00000000 
 44704 0364 00000000 		.quad	0
 44704      00000000 
 44705              	.LLST10:
 44706 036c 00000000 		.quad	.LVL36
 44706      00000000 
 44707 0374 00000000 		.quad	.LVL37-1
 44707      00000000 
 44708 037c 0100     		.value	0x1
 44709 037e 50       		.byte	0x50
 44710 037f 00000000 		.quad	.LVL37-1
 44710      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1105


 44711 0387 00000000 		.quad	.LVL39
 44711      00000000 
 44712 038f 0100     		.value	0x1
 44713 0391 56       		.byte	0x56
 44714 0392 00000000 		.quad	0
 44714      00000000 
 44715 039a 00000000 		.quad	0
 44715      00000000 
 44716              	.LLST11:
 44717 03a2 00000000 		.quad	.LVL29
 44717      00000000 
 44718 03aa 00000000 		.quad	.LVL121
 44718      00000000 
 44719 03b2 0400     		.value	0x4
 44720 03b4 40       		.byte	0x40
 44721 03b5 4C       		.byte	0x4c
 44722 03b6 24       		.byte	0x24
 44723 03b7 9F       		.byte	0x9f
 44724 03b8 00000000 		.quad	0
 44724      00000000 
 44725 03c0 00000000 		.quad	0
 44725      00000000 
 44726              	.LLST13:
 44727 03c8 00000000 		.quad	.LVL29
 44727      00000000 
 44728 03d0 00000000 		.quad	.LVL121
 44728      00000000 
 44729 03d8 0100     		.value	0x1
 44730 03da 53       		.byte	0x53
 44731 03db 00000000 		.quad	0
 44731      00000000 
 44732 03e3 00000000 		.quad	0
 44732      00000000 
 44733              	.LLST14:
 44734 03eb 00000000 		.quad	.LVL29
 44734      00000000 
 44735 03f3 00000000 		.quad	.LVL121
 44735      00000000 
 44736 03fb 0100     		.value	0x1
 44737 03fd 5E       		.byte	0x5e
 44738 03fe 00000000 		.quad	0
 44738      00000000 
 44739 0406 00000000 		.quad	0
 44739      00000000 
 44740              	.LLST15:
 44741 040e 00000000 		.quad	.LVL29
 44741      00000000 
 44742 0416 00000000 		.quad	.LVL121
 44742      00000000 
 44743 041e 0200     		.value	0x2
 44744 0420 30       		.byte	0x30
 44745 0421 9F       		.byte	0x9f
 44746 0422 00000000 		.quad	0
 44746      00000000 
 44747 042a 00000000 		.quad	0
 44747      00000000 
 44748              	.LLST16:
GAS LISTING /tmp/ccmMnd7l.s 			page 1106


 44749 0432 00000000 		.quad	.LVL29
 44749      00000000 
 44750 043a 00000000 		.quad	.LVL121
 44750      00000000 
 44751 0442 0600     		.value	0x6
 44752 0444 0C       		.byte	0xc
 44753 0445 FFFFFFFF 		.long	0xffffffff
 44754 0449 9F       		.byte	0x9f
 44755 044a 00000000 		.quad	0
 44755      00000000 
 44756 0452 00000000 		.quad	0
 44756      00000000 
 44757              	.LLST18:
 44758 045a 00000000 		.quad	.LVL29
 44758      00000000 
 44759 0462 00000000 		.quad	.LVL121
 44759      00000000 
 44760 046a 0300     		.value	0x3
 44761 046c 91       		.byte	0x91
 44762 046d 987F     		.sleb128 -104
 44763 046f 00000000 		.quad	0
 44763      00000000 
 44764 0477 00000000 		.quad	0
 44764      00000000 
 44765              	.LLST19:
 44766 047f 00000000 		.quad	.LVL33
 44766      00000000 
 44767 0487 00000000 		.quad	.LVL35
 44767      00000000 
 44768 048f 0100     		.value	0x1
 44769 0491 50       		.byte	0x50
 44770 0492 00000000 		.quad	.LVL48
 44770      00000000 
 44771 049a 00000000 		.quad	.LVL49
 44771      00000000 
 44772 04a2 0600     		.value	0x6
 44773 04a4 76       		.byte	0x76
 44774 04a5 00       		.sleb128 0
 44775 04a6 70       		.byte	0x70
 44776 04a7 00       		.sleb128 0
 44777 04a8 22       		.byte	0x22
 44778 04a9 9F       		.byte	0x9f
 44779 04aa 00000000 		.quad	.LVL49
 44779      00000000 
 44780 04b2 00000000 		.quad	.LVL50
 44780      00000000 
 44781 04ba 0100     		.value	0x1
 44782 04bc 50       		.byte	0x50
 44783 04bd 00000000 		.quad	0
 44783      00000000 
 44784 04c5 00000000 		.quad	0
 44784      00000000 
 44785              	.LLST20:
 44786 04cd 00000000 		.quad	.LVL30
 44786      00000000 
 44787 04d5 00000000 		.quad	.LVL34
 44787      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1107


 44788 04dd 0300     		.value	0x3
 44789 04df 91       		.byte	0x91
 44790 04e0 A87F     		.sleb128 -88
 44791 04e2 00000000 		.quad	0
 44791      00000000 
 44792 04ea 00000000 		.quad	0
 44792      00000000 
 44793              	.LLST21:
 44794 04f2 00000000 		.quad	.LVL31
 44794      00000000 
 44795 04fa 00000000 		.quad	.LVL32
 44795      00000000 
 44796 0502 0100     		.value	0x1
 44797 0504 50       		.byte	0x50
 44798 0505 00000000 		.quad	.LVL32
 44798      00000000 
 44799 050d 00000000 		.quad	.LVL34
 44799      00000000 
 44800 0515 0100     		.value	0x1
 44801 0517 5C       		.byte	0x5c
 44802 0518 00000000 		.quad	0
 44802      00000000 
 44803 0520 00000000 		.quad	0
 44803      00000000 
 44804              	.LLST22:
 44805 0528 00000000 		.quad	.LVL32
 44805      00000000 
 44806 0530 00000000 		.quad	.LVL34
 44806      00000000 
 44807 0538 0100     		.value	0x1
 44808 053a 56       		.byte	0x56
 44809 053b 00000000 		.quad	0
 44809      00000000 
 44810 0543 00000000 		.quad	0
 44810      00000000 
 44811              	.LLST23:
 44812 054b 00000000 		.quad	.LVL47
 44812      00000000 
 44813 0553 00000000 		.quad	.LVL48-1
 44813      00000000 
 44814 055b 0100     		.value	0x1
 44815 055d 50       		.byte	0x50
 44816 055e 00000000 		.quad	.LVL48-1
 44816      00000000 
 44817 0566 00000000 		.quad	.LVL50
 44817      00000000 
 44818 056e 0100     		.value	0x1
 44819 0570 56       		.byte	0x56
 44820 0571 00000000 		.quad	0
 44820      00000000 
 44821 0579 00000000 		.quad	0
 44821      00000000 
 44822              	.LLST24:
 44823 0581 00000000 		.quad	.LVL40
 44823      00000000 
 44824 0589 00000000 		.quad	.LVL121
 44824      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1108


 44825 0591 0400     		.value	0x4
 44826 0593 40       		.byte	0x40
 44827 0594 4C       		.byte	0x4c
 44828 0595 24       		.byte	0x24
 44829 0596 9F       		.byte	0x9f
 44830 0597 00000000 		.quad	0
 44830      00000000 
 44831 059f 00000000 		.quad	0
 44831      00000000 
 44832              	.LLST26:
 44833 05a7 00000000 		.quad	.LVL40
 44833      00000000 
 44834 05af 00000000 		.quad	.LVL121
 44834      00000000 
 44835 05b7 0100     		.value	0x1
 44836 05b9 53       		.byte	0x53
 44837 05ba 00000000 		.quad	0
 44837      00000000 
 44838 05c2 00000000 		.quad	0
 44838      00000000 
 44839              	.LLST27:
 44840 05ca 00000000 		.quad	.LVL40
 44840      00000000 
 44841 05d2 00000000 		.quad	.LVL121
 44841      00000000 
 44842 05da 0100     		.value	0x1
 44843 05dc 5E       		.byte	0x5e
 44844 05dd 00000000 		.quad	0
 44844      00000000 
 44845 05e5 00000000 		.quad	0
 44845      00000000 
 44846              	.LLST28:
 44847 05ed 00000000 		.quad	.LVL40
 44847      00000000 
 44848 05f5 00000000 		.quad	.LVL121
 44848      00000000 
 44849 05fd 0200     		.value	0x2
 44850 05ff 30       		.byte	0x30
 44851 0600 9F       		.byte	0x9f
 44852 0601 00000000 		.quad	0
 44852      00000000 
 44853 0609 00000000 		.quad	0
 44853      00000000 
 44854              	.LLST29:
 44855 0611 00000000 		.quad	.LVL40
 44855      00000000 
 44856 0619 00000000 		.quad	.LVL121
 44856      00000000 
 44857 0621 0600     		.value	0x6
 44858 0623 0C       		.byte	0xc
 44859 0624 FFFFFFFF 		.long	0xffffffff
 44860 0628 9F       		.byte	0x9f
 44861 0629 00000000 		.quad	0
 44861      00000000 
 44862 0631 00000000 		.quad	0
 44862      00000000 
 44863              	.LLST31:
GAS LISTING /tmp/ccmMnd7l.s 			page 1109


 44864 0639 00000000 		.quad	.LVL40
 44864      00000000 
 44865 0641 00000000 		.quad	.LVL121
 44865      00000000 
 44866 0649 0300     		.value	0x3
 44867 064b 91       		.byte	0x91
 44868 064c 887F     		.sleb128 -120
 44869 064e 00000000 		.quad	0
 44869      00000000 
 44870 0656 00000000 		.quad	0
 44870      00000000 
 44871              	.LLST32:
 44872 065e 00000000 		.quad	.LVL44
 44872      00000000 
 44873 0666 00000000 		.quad	.LVL46
 44873      00000000 
 44874 066e 0100     		.value	0x1
 44875 0670 50       		.byte	0x50
 44876 0671 00000000 		.quad	.LVL54
 44876      00000000 
 44877 0679 00000000 		.quad	.LVL55
 44877      00000000 
 44878 0681 0600     		.value	0x6
 44879 0683 76       		.byte	0x76
 44880 0684 00       		.sleb128 0
 44881 0685 70       		.byte	0x70
 44882 0686 00       		.sleb128 0
 44883 0687 22       		.byte	0x22
 44884 0688 9F       		.byte	0x9f
 44885 0689 00000000 		.quad	.LVL55
 44885      00000000 
 44886 0691 00000000 		.quad	.LVL56
 44886      00000000 
 44887 0699 0100     		.value	0x1
 44888 069b 50       		.byte	0x50
 44889 069c 00000000 		.quad	0
 44889      00000000 
 44890 06a4 00000000 		.quad	0
 44890      00000000 
 44891              	.LLST33:
 44892 06ac 00000000 		.quad	.LVL53
 44892      00000000 
 44893 06b4 00000000 		.quad	.LVL54-1
 44893      00000000 
 44894 06bc 0100     		.value	0x1
 44895 06be 50       		.byte	0x50
 44896 06bf 00000000 		.quad	.LVL54-1
 44896      00000000 
 44897 06c7 00000000 		.quad	.LVL56
 44897      00000000 
 44898 06cf 0100     		.value	0x1
 44899 06d1 56       		.byte	0x56
 44900 06d2 00000000 		.quad	0
 44900      00000000 
 44901 06da 00000000 		.quad	0
 44901      00000000 
 44902              	.LLST34:
GAS LISTING /tmp/ccmMnd7l.s 			page 1110


 44903 06e2 00000000 		.quad	.LVL50
 44903      00000000 
 44904 06ea 00000000 		.quad	.LVL121
 44904      00000000 
 44905 06f2 0400     		.value	0x4
 44906 06f4 40       		.byte	0x40
 44907 06f5 4C       		.byte	0x4c
 44908 06f6 24       		.byte	0x24
 44909 06f7 9F       		.byte	0x9f
 44910 06f8 00000000 		.quad	0
 44910      00000000 
 44911 0700 00000000 		.quad	0
 44911      00000000 
 44912              	.LLST36:
 44913 0708 00000000 		.quad	.LVL50
 44913      00000000 
 44914 0710 00000000 		.quad	.LVL121
 44914      00000000 
 44915 0718 0100     		.value	0x1
 44916 071a 53       		.byte	0x53
 44917 071b 00000000 		.quad	0
 44917      00000000 
 44918 0723 00000000 		.quad	0
 44918      00000000 
 44919              	.LLST37:
 44920 072b 00000000 		.quad	.LVL50
 44920      00000000 
 44921 0733 00000000 		.quad	.LVL121
 44921      00000000 
 44922 073b 0100     		.value	0x1
 44923 073d 5E       		.byte	0x5e
 44924 073e 00000000 		.quad	0
 44924      00000000 
 44925 0746 00000000 		.quad	0
 44925      00000000 
 44926              	.LLST38:
 44927 074e 00000000 		.quad	.LVL50
 44927      00000000 
 44928 0756 00000000 		.quad	.LVL121
 44928      00000000 
 44929 075e 0200     		.value	0x2
 44930 0760 30       		.byte	0x30
 44931 0761 9F       		.byte	0x9f
 44932 0762 00000000 		.quad	0
 44932      00000000 
 44933 076a 00000000 		.quad	0
 44933      00000000 
 44934              	.LLST39:
 44935 0772 00000000 		.quad	.LVL50
 44935      00000000 
 44936 077a 00000000 		.quad	.LVL121
 44936      00000000 
 44937 0782 0600     		.value	0x6
 44938 0784 0C       		.byte	0xc
 44939 0785 FFFFFFFF 		.long	0xffffffff
 44940 0789 9F       		.byte	0x9f
 44941 078a 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1111


 44941      00000000 
 44942 0792 00000000 		.quad	0
 44942      00000000 
 44943              	.LLST41:
 44944 079a 00000000 		.quad	.LVL50
 44944      00000000 
 44945 07a2 00000000 		.quad	.LVL121
 44945      00000000 
 44946 07aa 0300     		.value	0x3
 44947 07ac 91       		.byte	0x91
 44948 07ad 807F     		.sleb128 -128
 44949 07af 00000000 		.quad	0
 44949      00000000 
 44950 07b7 00000000 		.quad	0
 44950      00000000 
 44951              	.LLST42:
 44952 07bf 00000000 		.quad	.LVL50
 44952      00000000 
 44953 07c7 00000000 		.quad	.LVL52
 44953      00000000 
 44954 07cf 0100     		.value	0x1
 44955 07d1 50       		.byte	0x50
 44956 07d2 00000000 		.quad	.LVL60
 44956      00000000 
 44957 07da 00000000 		.quad	.LVL61
 44957      00000000 
 44958 07e2 0100     		.value	0x1
 44959 07e4 50       		.byte	0x50
 44960 07e5 00000000 		.quad	.LVL65
 44960      00000000 
 44961 07ed 00000000 		.quad	.LVL66
 44961      00000000 
 44962 07f5 0600     		.value	0x6
 44963 07f7 76       		.byte	0x76
 44964 07f8 00       		.sleb128 0
 44965 07f9 70       		.byte	0x70
 44966 07fa 00       		.sleb128 0
 44967 07fb 22       		.byte	0x22
 44968 07fc 9F       		.byte	0x9f
 44969 07fd 00000000 		.quad	.LVL66
 44969      00000000 
 44970 0805 00000000 		.quad	.LVL67
 44970      00000000 
 44971 080d 0100     		.value	0x1
 44972 080f 50       		.byte	0x50
 44973 0810 00000000 		.quad	0
 44973      00000000 
 44974 0818 00000000 		.quad	0
 44974      00000000 
 44975              	.LLST43:
 44976 0820 00000000 		.quad	.LVL64
 44976      00000000 
 44977 0828 00000000 		.quad	.LVL65-1
 44977      00000000 
 44978 0830 0100     		.value	0x1
 44979 0832 50       		.byte	0x50
 44980 0833 00000000 		.quad	.LVL65-1
GAS LISTING /tmp/ccmMnd7l.s 			page 1112


 44980      00000000 
 44981 083b 00000000 		.quad	.LVL67
 44981      00000000 
 44982 0843 0100     		.value	0x1
 44983 0845 56       		.byte	0x56
 44984 0846 00000000 		.quad	0
 44984      00000000 
 44985 084e 00000000 		.quad	0
 44985      00000000 
 44986              	.LLST44:
 44987 0856 00000000 		.quad	.LVL61
 44987      00000000 
 44988 085e 00000000 		.quad	.LVL121
 44988      00000000 
 44989 0866 0400     		.value	0x4
 44990 0868 40       		.byte	0x40
 44991 0869 4C       		.byte	0x4c
 44992 086a 24       		.byte	0x24
 44993 086b 9F       		.byte	0x9f
 44994 086c 00000000 		.quad	0
 44994      00000000 
 44995 0874 00000000 		.quad	0
 44995      00000000 
 44996              	.LLST46:
 44997 087c 00000000 		.quad	.LVL61
 44997      00000000 
 44998 0884 00000000 		.quad	.LVL121
 44998      00000000 
 44999 088c 0100     		.value	0x1
 45000 088e 53       		.byte	0x53
 45001 088f 00000000 		.quad	0
 45001      00000000 
 45002 0897 00000000 		.quad	0
 45002      00000000 
 45003              	.LLST47:
 45004 089f 00000000 		.quad	.LVL61
 45004      00000000 
 45005 08a7 00000000 		.quad	.LVL121
 45005      00000000 
 45006 08af 0100     		.value	0x1
 45007 08b1 5E       		.byte	0x5e
 45008 08b2 00000000 		.quad	0
 45008      00000000 
 45009 08ba 00000000 		.quad	0
 45009      00000000 
 45010              	.LLST48:
 45011 08c2 00000000 		.quad	.LVL61
 45011      00000000 
 45012 08ca 00000000 		.quad	.LVL121
 45012      00000000 
 45013 08d2 0200     		.value	0x2
 45014 08d4 30       		.byte	0x30
 45015 08d5 9F       		.byte	0x9f
 45016 08d6 00000000 		.quad	0
 45016      00000000 
 45017 08de 00000000 		.quad	0
 45017      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1113


 45018              	.LLST49:
 45019 08e6 00000000 		.quad	.LVL61
 45019      00000000 
 45020 08ee 00000000 		.quad	.LVL121
 45020      00000000 
 45021 08f6 0600     		.value	0x6
 45022 08f8 0C       		.byte	0xc
 45023 08f9 FFFFFFFF 		.long	0xffffffff
 45024 08fd 9F       		.byte	0x9f
 45025 08fe 00000000 		.quad	0
 45025      00000000 
 45026 0906 00000000 		.quad	0
 45026      00000000 
 45027              	.LLST51:
 45028 090e 00000000 		.quad	.LVL61
 45028      00000000 
 45029 0916 00000000 		.quad	.LVL121
 45029      00000000 
 45030 091e 0300     		.value	0x3
 45031 0920 91       		.byte	0x91
 45032 0921 907F     		.sleb128 -112
 45033 0923 00000000 		.quad	0
 45033      00000000 
 45034 092b 00000000 		.quad	0
 45034      00000000 
 45035              	.LLST52:
 45036 0933 00000000 		.quad	.LVL61
 45036      00000000 
 45037 093b 00000000 		.quad	.LVL63
 45037      00000000 
 45038 0943 0100     		.value	0x1
 45039 0945 50       		.byte	0x50
 45040 0946 00000000 		.quad	.LVL71
 45040      00000000 
 45041 094e 00000000 		.quad	.LVL72
 45041      00000000 
 45042 0956 0100     		.value	0x1
 45043 0958 50       		.byte	0x50
 45044 0959 00000000 		.quad	.LVL76
 45044      00000000 
 45045 0961 00000000 		.quad	.LVL77
 45045      00000000 
 45046 0969 0600     		.value	0x6
 45047 096b 76       		.byte	0x76
 45048 096c 00       		.sleb128 0
 45049 096d 70       		.byte	0x70
 45050 096e 00       		.sleb128 0
 45051 096f 22       		.byte	0x22
 45052 0970 9F       		.byte	0x9f
 45053 0971 00000000 		.quad	.LVL77
 45053      00000000 
 45054 0979 00000000 		.quad	.LVL78
 45054      00000000 
 45055 0981 0100     		.value	0x1
 45056 0983 50       		.byte	0x50
 45057 0984 00000000 		.quad	0
 45057      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1114


 45058 098c 00000000 		.quad	0
 45058      00000000 
 45059              	.LLST53:
 45060 0994 00000000 		.quad	.LVL75
 45060      00000000 
 45061 099c 00000000 		.quad	.LVL76-1
 45061      00000000 
 45062 09a4 0100     		.value	0x1
 45063 09a6 50       		.byte	0x50
 45064 09a7 00000000 		.quad	.LVL76-1
 45064      00000000 
 45065 09af 00000000 		.quad	.LVL78
 45065      00000000 
 45066 09b7 0100     		.value	0x1
 45067 09b9 56       		.byte	0x56
 45068 09ba 00000000 		.quad	0
 45068      00000000 
 45069 09c2 00000000 		.quad	0
 45069      00000000 
 45070              	.LLST54:
 45071 09ca 00000000 		.quad	.LVL72
 45071      00000000 
 45072 09d2 00000000 		.quad	.LVL121
 45072      00000000 
 45073 09da 0400     		.value	0x4
 45074 09dc 40       		.byte	0x40
 45075 09dd 4C       		.byte	0x4c
 45076 09de 24       		.byte	0x24
 45077 09df 9F       		.byte	0x9f
 45078 09e0 00000000 		.quad	0
 45078      00000000 
 45079 09e8 00000000 		.quad	0
 45079      00000000 
 45080              	.LLST56:
 45081 09f0 00000000 		.quad	.LVL72
 45081      00000000 
 45082 09f8 00000000 		.quad	.LVL121
 45082      00000000 
 45083 0a00 0100     		.value	0x1
 45084 0a02 53       		.byte	0x53
 45085 0a03 00000000 		.quad	0
 45085      00000000 
 45086 0a0b 00000000 		.quad	0
 45086      00000000 
 45087              	.LLST57:
 45088 0a13 00000000 		.quad	.LVL72
 45088      00000000 
 45089 0a1b 00000000 		.quad	.LVL121
 45089      00000000 
 45090 0a23 0100     		.value	0x1
 45091 0a25 5E       		.byte	0x5e
 45092 0a26 00000000 		.quad	0
 45092      00000000 
 45093 0a2e 00000000 		.quad	0
 45093      00000000 
 45094              	.LLST58:
 45095 0a36 00000000 		.quad	.LVL72
GAS LISTING /tmp/ccmMnd7l.s 			page 1115


 45095      00000000 
 45096 0a3e 00000000 		.quad	.LVL121
 45096      00000000 
 45097 0a46 0200     		.value	0x2
 45098 0a48 30       		.byte	0x30
 45099 0a49 9F       		.byte	0x9f
 45100 0a4a 00000000 		.quad	0
 45100      00000000 
 45101 0a52 00000000 		.quad	0
 45101      00000000 
 45102              	.LLST59:
 45103 0a5a 00000000 		.quad	.LVL72
 45103      00000000 
 45104 0a62 00000000 		.quad	.LVL121
 45104      00000000 
 45105 0a6a 0600     		.value	0x6
 45106 0a6c 0C       		.byte	0xc
 45107 0a6d FFFFFFFF 		.long	0xffffffff
 45108 0a71 9F       		.byte	0x9f
 45109 0a72 00000000 		.quad	0
 45109      00000000 
 45110 0a7a 00000000 		.quad	0
 45110      00000000 
 45111              	.LLST61:
 45112 0a82 00000000 		.quad	.LVL72
 45112      00000000 
 45113 0a8a 00000000 		.quad	.LVL121
 45113      00000000 
 45114 0a92 0300     		.value	0x3
 45115 0a94 91       		.byte	0x91
 45116 0a95 E07E     		.sleb128 -160
 45117 0a97 00000000 		.quad	0
 45117      00000000 
 45118 0a9f 00000000 		.quad	0
 45118      00000000 
 45119              	.LLST62:
 45120 0aa7 00000000 		.quad	.LVL72
 45120      00000000 
 45121 0aaf 00000000 		.quad	.LVL74
 45121      00000000 
 45122 0ab7 0100     		.value	0x1
 45123 0ab9 50       		.byte	0x50
 45124 0aba 00000000 		.quad	.LVL82
 45124      00000000 
 45125 0ac2 00000000 		.quad	.LVL83
 45125      00000000 
 45126 0aca 0100     		.value	0x1
 45127 0acc 50       		.byte	0x50
 45128 0acd 00000000 		.quad	.LVL87
 45128      00000000 
 45129 0ad5 00000000 		.quad	.LVL88
 45129      00000000 
 45130 0add 0600     		.value	0x6
 45131 0adf 76       		.byte	0x76
 45132 0ae0 00       		.sleb128 0
 45133 0ae1 70       		.byte	0x70
 45134 0ae2 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1116


 45135 0ae3 22       		.byte	0x22
 45136 0ae4 9F       		.byte	0x9f
 45137 0ae5 00000000 		.quad	.LVL88
 45137      00000000 
 45138 0aed 00000000 		.quad	.LVL89
 45138      00000000 
 45139 0af5 0100     		.value	0x1
 45140 0af7 50       		.byte	0x50
 45141 0af8 00000000 		.quad	0
 45141      00000000 
 45142 0b00 00000000 		.quad	0
 45142      00000000 
 45143              	.LLST63:
 45144 0b08 00000000 		.quad	.LVL86
 45144      00000000 
 45145 0b10 00000000 		.quad	.LVL87-1
 45145      00000000 
 45146 0b18 0100     		.value	0x1
 45147 0b1a 50       		.byte	0x50
 45148 0b1b 00000000 		.quad	.LVL87-1
 45148      00000000 
 45149 0b23 00000000 		.quad	.LVL89
 45149      00000000 
 45150 0b2b 0100     		.value	0x1
 45151 0b2d 56       		.byte	0x56
 45152 0b2e 00000000 		.quad	0
 45152      00000000 
 45153 0b36 00000000 		.quad	0
 45153      00000000 
 45154              	.LLST64:
 45155 0b3e 00000000 		.quad	.LVL83
 45155      00000000 
 45156 0b46 00000000 		.quad	.LVL121
 45156      00000000 
 45157 0b4e 0400     		.value	0x4
 45158 0b50 40       		.byte	0x40
 45159 0b51 4C       		.byte	0x4c
 45160 0b52 24       		.byte	0x24
 45161 0b53 9F       		.byte	0x9f
 45162 0b54 00000000 		.quad	0
 45162      00000000 
 45163 0b5c 00000000 		.quad	0
 45163      00000000 
 45164              	.LLST66:
 45165 0b64 00000000 		.quad	.LVL83
 45165      00000000 
 45166 0b6c 00000000 		.quad	.LVL121
 45166      00000000 
 45167 0b74 0100     		.value	0x1
 45168 0b76 53       		.byte	0x53
 45169 0b77 00000000 		.quad	0
 45169      00000000 
 45170 0b7f 00000000 		.quad	0
 45170      00000000 
 45171              	.LLST67:
 45172 0b87 00000000 		.quad	.LVL83
 45172      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1117


 45173 0b8f 00000000 		.quad	.LVL121
 45173      00000000 
 45174 0b97 0100     		.value	0x1
 45175 0b99 5E       		.byte	0x5e
 45176 0b9a 00000000 		.quad	0
 45176      00000000 
 45177 0ba2 00000000 		.quad	0
 45177      00000000 
 45178              	.LLST68:
 45179 0baa 00000000 		.quad	.LVL83
 45179      00000000 
 45180 0bb2 00000000 		.quad	.LVL121
 45180      00000000 
 45181 0bba 0200     		.value	0x2
 45182 0bbc 30       		.byte	0x30
 45183 0bbd 9F       		.byte	0x9f
 45184 0bbe 00000000 		.quad	0
 45184      00000000 
 45185 0bc6 00000000 		.quad	0
 45185      00000000 
 45186              	.LLST69:
 45187 0bce 00000000 		.quad	.LVL83
 45187      00000000 
 45188 0bd6 00000000 		.quad	.LVL121
 45188      00000000 
 45189 0bde 0600     		.value	0x6
 45190 0be0 0C       		.byte	0xc
 45191 0be1 FFFFFFFF 		.long	0xffffffff
 45192 0be5 9F       		.byte	0x9f
 45193 0be6 00000000 		.quad	0
 45193      00000000 
 45194 0bee 00000000 		.quad	0
 45194      00000000 
 45195              	.LLST71:
 45196 0bf6 00000000 		.quad	.LVL83
 45196      00000000 
 45197 0bfe 00000000 		.quad	.LVL121
 45197      00000000 
 45198 0c06 0300     		.value	0x3
 45199 0c08 91       		.byte	0x91
 45200 0c09 D07E     		.sleb128 -176
 45201 0c0b 00000000 		.quad	0
 45201      00000000 
 45202 0c13 00000000 		.quad	0
 45202      00000000 
 45203              	.LLST72:
 45204 0c1b 00000000 		.quad	.LVL83
 45204      00000000 
 45205 0c23 00000000 		.quad	.LVL85
 45205      00000000 
 45206 0c2b 0100     		.value	0x1
 45207 0c2d 50       		.byte	0x50
 45208 0c2e 00000000 		.quad	.LVL92
 45208      00000000 
 45209 0c36 00000000 		.quad	.LVL93
 45209      00000000 
 45210 0c3e 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1118


 45211 0c40 50       		.byte	0x50
 45212 0c41 00000000 		.quad	.LVL103
 45212      00000000 
 45213 0c49 00000000 		.quad	.LVL104
 45213      00000000 
 45214 0c51 0600     		.value	0x6
 45215 0c53 76       		.byte	0x76
 45216 0c54 00       		.sleb128 0
 45217 0c55 70       		.byte	0x70
 45218 0c56 00       		.sleb128 0
 45219 0c57 22       		.byte	0x22
 45220 0c58 9F       		.byte	0x9f
 45221 0c59 00000000 		.quad	.LVL104
 45221      00000000 
 45222 0c61 00000000 		.quad	.LVL105
 45222      00000000 
 45223 0c69 0100     		.value	0x1
 45224 0c6b 50       		.byte	0x50
 45225 0c6c 00000000 		.quad	0
 45225      00000000 
 45226 0c74 00000000 		.quad	0
 45226      00000000 
 45227              	.LLST73:
 45228 0c7c 00000000 		.quad	.LVL102
 45228      00000000 
 45229 0c84 00000000 		.quad	.LVL103-1
 45229      00000000 
 45230 0c8c 0100     		.value	0x1
 45231 0c8e 50       		.byte	0x50
 45232 0c8f 00000000 		.quad	.LVL103-1
 45232      00000000 
 45233 0c97 00000000 		.quad	.LVL105
 45233      00000000 
 45234 0c9f 0100     		.value	0x1
 45235 0ca1 56       		.byte	0x56
 45236 0ca2 00000000 		.quad	0
 45236      00000000 
 45237 0caa 00000000 		.quad	0
 45237      00000000 
 45238              	.LLST74:
 45239 0cb2 00000000 		.quad	.LVL94
 45239      00000000 
 45240 0cba 00000000 		.quad	.LVL121
 45240      00000000 
 45241 0cc2 0400     		.value	0x4
 45242 0cc4 40       		.byte	0x40
 45243 0cc5 4C       		.byte	0x4c
 45244 0cc6 24       		.byte	0x24
 45245 0cc7 9F       		.byte	0x9f
 45246 0cc8 00000000 		.quad	0
 45246      00000000 
 45247 0cd0 00000000 		.quad	0
 45247      00000000 
 45248              	.LLST76:
 45249 0cd8 00000000 		.quad	.LVL94
 45249      00000000 
 45250 0ce0 00000000 		.quad	.LVL121
GAS LISTING /tmp/ccmMnd7l.s 			page 1119


 45250      00000000 
 45251 0ce8 0100     		.value	0x1
 45252 0cea 53       		.byte	0x53
 45253 0ceb 00000000 		.quad	0
 45253      00000000 
 45254 0cf3 00000000 		.quad	0
 45254      00000000 
 45255              	.LLST77:
 45256 0cfb 00000000 		.quad	.LVL94
 45256      00000000 
 45257 0d03 00000000 		.quad	.LVL121
 45257      00000000 
 45258 0d0b 0100     		.value	0x1
 45259 0d0d 5E       		.byte	0x5e
 45260 0d0e 00000000 		.quad	0
 45260      00000000 
 45261 0d16 00000000 		.quad	0
 45261      00000000 
 45262              	.LLST78:
 45263 0d1e 00000000 		.quad	.LVL94
 45263      00000000 
 45264 0d26 00000000 		.quad	.LVL121
 45264      00000000 
 45265 0d2e 0200     		.value	0x2
 45266 0d30 30       		.byte	0x30
 45267 0d31 9F       		.byte	0x9f
 45268 0d32 00000000 		.quad	0
 45268      00000000 
 45269 0d3a 00000000 		.quad	0
 45269      00000000 
 45270              	.LLST79:
 45271 0d42 00000000 		.quad	.LVL94
 45271      00000000 
 45272 0d4a 00000000 		.quad	.LVL121
 45272      00000000 
 45273 0d52 0600     		.value	0x6
 45274 0d54 0C       		.byte	0xc
 45275 0d55 FFFFFFFF 		.long	0xffffffff
 45276 0d59 9F       		.byte	0x9f
 45277 0d5a 00000000 		.quad	0
 45277      00000000 
 45278 0d62 00000000 		.quad	0
 45278      00000000 
 45279              	.LLST81:
 45280 0d6a 00000000 		.quad	.LVL94
 45280      00000000 
 45281 0d72 00000000 		.quad	.LVL121
 45281      00000000 
 45282 0d7a 0300     		.value	0x3
 45283 0d7c 91       		.byte	0x91
 45284 0d7d C07E     		.sleb128 -192
 45285 0d7f 00000000 		.quad	0
 45285      00000000 
 45286 0d87 00000000 		.quad	0
 45286      00000000 
 45287              	.LLST82:
 45288 0d8f 00000000 		.quad	.LVL99
GAS LISTING /tmp/ccmMnd7l.s 			page 1120


 45288      00000000 
 45289 0d97 00000000 		.quad	.LVL101
 45289      00000000 
 45290 0d9f 0100     		.value	0x1
 45291 0da1 50       		.byte	0x50
 45292 0da2 00000000 		.quad	.LVL114
 45292      00000000 
 45293 0daa 00000000 		.quad	.LVL115
 45293      00000000 
 45294 0db2 0600     		.value	0x6
 45295 0db4 76       		.byte	0x76
 45296 0db5 00       		.sleb128 0
 45297 0db6 70       		.byte	0x70
 45298 0db7 00       		.sleb128 0
 45299 0db8 22       		.byte	0x22
 45300 0db9 9F       		.byte	0x9f
 45301 0dba 00000000 		.quad	.LVL115
 45301      00000000 
 45302 0dc2 00000000 		.quad	.LVL116
 45302      00000000 
 45303 0dca 0100     		.value	0x1
 45304 0dcc 50       		.byte	0x50
 45305 0dcd 00000000 		.quad	0
 45305      00000000 
 45306 0dd5 00000000 		.quad	0
 45306      00000000 
 45307              	.LLST83:
 45308 0ddd 00000000 		.quad	.LVL113
 45308      00000000 
 45309 0de5 00000000 		.quad	.LVL114-1
 45309      00000000 
 45310 0ded 0100     		.value	0x1
 45311 0def 50       		.byte	0x50
 45312 0df0 00000000 		.quad	.LVL114-1
 45312      00000000 
 45313 0df8 00000000 		.quad	.LVL116
 45313      00000000 
 45314 0e00 0100     		.value	0x1
 45315 0e02 56       		.byte	0x56
 45316 0e03 00000000 		.quad	0
 45316      00000000 
 45317 0e0b 00000000 		.quad	0
 45317      00000000 
 45318              	.LLST84:
 45319 0e13 00000000 		.quad	.LVL105
 45319      00000000 
 45320 0e1b 00000000 		.quad	.LVL121
 45320      00000000 
 45321 0e23 0400     		.value	0x4
 45322 0e25 40       		.byte	0x40
 45323 0e26 4C       		.byte	0x4c
 45324 0e27 24       		.byte	0x24
 45325 0e28 9F       		.byte	0x9f
 45326 0e29 00000000 		.quad	0
 45326      00000000 
 45327 0e31 00000000 		.quad	0
 45327      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1121


 45328              	.LLST86:
 45329 0e39 00000000 		.quad	.LVL105
 45329      00000000 
 45330 0e41 00000000 		.quad	.LVL121
 45330      00000000 
 45331 0e49 0100     		.value	0x1
 45332 0e4b 53       		.byte	0x53
 45333 0e4c 00000000 		.quad	0
 45333      00000000 
 45334 0e54 00000000 		.quad	0
 45334      00000000 
 45335              	.LLST87:
 45336 0e5c 00000000 		.quad	.LVL105
 45336      00000000 
 45337 0e64 00000000 		.quad	.LVL121
 45337      00000000 
 45338 0e6c 0100     		.value	0x1
 45339 0e6e 5E       		.byte	0x5e
 45340 0e6f 00000000 		.quad	0
 45340      00000000 
 45341 0e77 00000000 		.quad	0
 45341      00000000 
 45342              	.LLST88:
 45343 0e7f 00000000 		.quad	.LVL105
 45343      00000000 
 45344 0e87 00000000 		.quad	.LVL121
 45344      00000000 
 45345 0e8f 0200     		.value	0x2
 45346 0e91 30       		.byte	0x30
 45347 0e92 9F       		.byte	0x9f
 45348 0e93 00000000 		.quad	0
 45348      00000000 
 45349 0e9b 00000000 		.quad	0
 45349      00000000 
 45350              	.LLST89:
 45351 0ea3 00000000 		.quad	.LVL105
 45351      00000000 
 45352 0eab 00000000 		.quad	.LVL121
 45352      00000000 
 45353 0eb3 0600     		.value	0x6
 45354 0eb5 0C       		.byte	0xc
 45355 0eb6 FFFFFFFF 		.long	0xffffffff
 45356 0eba 9F       		.byte	0x9f
 45357 0ebb 00000000 		.quad	0
 45357      00000000 
 45358 0ec3 00000000 		.quad	0
 45358      00000000 
 45359              	.LLST91:
 45360 0ecb 00000000 		.quad	.LVL105
 45360      00000000 
 45361 0ed3 00000000 		.quad	.LVL121
 45361      00000000 
 45362 0edb 0100     		.value	0x1
 45363 0edd 5C       		.byte	0x5c
 45364 0ede 00000000 		.quad	0
 45364      00000000 
 45365 0ee6 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1122


 45365      00000000 
 45366              	.LLST92:
 45367 0eee 00000000 		.quad	.LVL110
 45367      00000000 
 45368 0ef6 00000000 		.quad	.LVL112
 45368      00000000 
 45369 0efe 0100     		.value	0x1
 45370 0f00 50       		.byte	0x50
 45371 0f01 00000000 		.quad	.LVL119
 45371      00000000 
 45372 0f09 00000000 		.quad	.LVL120
 45372      00000000 
 45373 0f11 0600     		.value	0x6
 45374 0f13 76       		.byte	0x76
 45375 0f14 00       		.sleb128 0
 45376 0f15 70       		.byte	0x70
 45377 0f16 00       		.sleb128 0
 45378 0f17 22       		.byte	0x22
 45379 0f18 9F       		.byte	0x9f
 45380 0f19 00000000 		.quad	.LVL120
 45380      00000000 
 45381 0f21 00000000 		.quad	.LVL121
 45381      00000000 
 45382 0f29 0100     		.value	0x1
 45383 0f2b 50       		.byte	0x50
 45384 0f2c 00000000 		.quad	0
 45384      00000000 
 45385 0f34 00000000 		.quad	0
 45385      00000000 
 45386              	.LLST93:
 45387 0f3c 00000000 		.quad	.LVL106
 45387      00000000 
 45388 0f44 00000000 		.quad	.LVL111
 45388      00000000 
 45389 0f4c 0300     		.value	0x3
 45390 0f4e 91       		.byte	0x91
 45391 0f4f C87E     		.sleb128 -184
 45392 0f51 00000000 		.quad	0
 45392      00000000 
 45393 0f59 00000000 		.quad	0
 45393      00000000 
 45394              	.LLST94:
 45395 0f61 00000000 		.quad	.LVL107
 45395      00000000 
 45396 0f69 00000000 		.quad	.LVL108
 45396      00000000 
 45397 0f71 0100     		.value	0x1
 45398 0f73 50       		.byte	0x50
 45399 0f74 00000000 		.quad	.LVL108
 45399      00000000 
 45400 0f7c 00000000 		.quad	.LVL111
 45400      00000000 
 45401 0f84 0300     		.value	0x3
 45402 0f86 91       		.byte	0x91
 45403 0f87 B87E     		.sleb128 -200
 45404 0f89 00000000 		.quad	0
 45404      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1123


 45405 0f91 00000000 		.quad	0
 45405      00000000 
 45406              	.LLST95:
 45407 0f99 00000000 		.quad	.LVL109
 45407      00000000 
 45408 0fa1 00000000 		.quad	.LVL111
 45408      00000000 
 45409 0fa9 0100     		.value	0x1
 45410 0fab 56       		.byte	0x56
 45411 0fac 00000000 		.quad	0
 45411      00000000 
 45412 0fb4 00000000 		.quad	0
 45412      00000000 
 45413              	.LLST96:
 45414 0fbc 00000000 		.quad	.LVL118
 45414      00000000 
 45415 0fc4 00000000 		.quad	.LVL121
 45415      00000000 
 45416 0fcc 0100     		.value	0x1
 45417 0fce 56       		.byte	0x56
 45418 0fcf 00000000 		.quad	0
 45418      00000000 
 45419 0fd7 00000000 		.quad	0
 45419      00000000 
 45420              	.LLST97:
 45421 0fdf 00000000 		.quad	.LVL116
 45421      00000000 
 45422 0fe7 00000000 		.quad	.LVL121
 45422      00000000 
 45423 0fef 0400     		.value	0x4
 45424 0ff1 40       		.byte	0x40
 45425 0ff2 4C       		.byte	0x4c
 45426 0ff3 24       		.byte	0x24
 45427 0ff4 9F       		.byte	0x9f
 45428 0ff5 00000000 		.quad	0
 45428      00000000 
 45429 0ffd 00000000 		.quad	0
 45429      00000000 
 45430              	.LLST98:
 45431 1005 00000000 		.quad	.LVL116
 45431      00000000 
 45432 100d 00000000 		.quad	.LVL121
 45432      00000000 
 45433 1015 0100     		.value	0x1
 45434 1017 5D       		.byte	0x5d
 45435 1018 00000000 		.quad	0
 45435      00000000 
 45436 1020 00000000 		.quad	0
 45436      00000000 
 45437              	.LLST99:
 45438 1028 00000000 		.quad	.LVL116
 45438      00000000 
 45439 1030 00000000 		.quad	.LVL121
 45439      00000000 
 45440 1038 0200     		.value	0x2
 45441 103a 30       		.byte	0x30
 45442 103b 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1124


 45443 103c 00000000 		.quad	0
 45443      00000000 
 45444 1044 00000000 		.quad	0
 45444      00000000 
 45445              	.LLST100:
 45446 104c 00000000 		.quad	.LVL116
 45446      00000000 
 45447 1054 00000000 		.quad	.LVL121
 45447      00000000 
 45448 105c 0100     		.value	0x1
 45449 105e 5F       		.byte	0x5f
 45450 105f 00000000 		.quad	0
 45450      00000000 
 45451 1067 00000000 		.quad	0
 45451      00000000 
 45452              	.LLST101:
 45453 106f 00000000 		.quad	.LVL95
 45453      00000000 
 45454 1077 00000000 		.quad	.LVL100
 45454      00000000 
 45455 107f 0300     		.value	0x3
 45456 1081 91       		.byte	0x91
 45457 1082 D87E     		.sleb128 -168
 45458 1084 00000000 		.quad	0
 45458      00000000 
 45459 108c 00000000 		.quad	0
 45459      00000000 
 45460              	.LLST102:
 45461 1094 00000000 		.quad	.LVL96
 45461      00000000 
 45462 109c 00000000 		.quad	.LVL97
 45462      00000000 
 45463 10a4 0100     		.value	0x1
 45464 10a6 50       		.byte	0x50
 45465 10a7 00000000 		.quad	.LVL97
 45465      00000000 
 45466 10af 00000000 		.quad	.LVL100
 45466      00000000 
 45467 10b7 0300     		.value	0x3
 45468 10b9 91       		.byte	0x91
 45469 10ba B87E     		.sleb128 -200
 45470 10bc 00000000 		.quad	0
 45470      00000000 
 45471 10c4 00000000 		.quad	0
 45471      00000000 
 45472              	.LLST103:
 45473 10cc 00000000 		.quad	.LVL98
 45473      00000000 
 45474 10d4 00000000 		.quad	.LVL100
 45474      00000000 
 45475 10dc 0100     		.value	0x1
 45476 10de 56       		.byte	0x56
 45477 10df 00000000 		.quad	0
 45477      00000000 
 45478 10e7 00000000 		.quad	0
 45478      00000000 
 45479              	.LLST104:
GAS LISTING /tmp/ccmMnd7l.s 			page 1125


 45480 10ef 00000000 		.quad	.LVL83
 45480      00000000 
 45481 10f7 00000000 		.quad	.LVL84
 45481      00000000 
 45482 10ff 0300     		.value	0x3
 45483 1101 91       		.byte	0x91
 45484 1102 F07E     		.sleb128 -144
 45485 1104 00000000 		.quad	.LVL90
 45485      00000000 
 45486 110c 00000000 		.quad	.LVL93
 45486      00000000 
 45487 1114 0300     		.value	0x3
 45488 1116 91       		.byte	0x91
 45489 1117 F07E     		.sleb128 -144
 45490 1119 00000000 		.quad	0
 45490      00000000 
 45491 1121 00000000 		.quad	0
 45491      00000000 
 45492              	.LLST105:
 45493 1129 00000000 		.quad	.LVL83
 45493      00000000 
 45494 1131 00000000 		.quad	.LVL84
 45494      00000000 
 45495 1139 0100     		.value	0x1
 45496 113b 56       		.byte	0x56
 45497 113c 00000000 		.quad	.LVL91
 45497      00000000 
 45498 1144 00000000 		.quad	.LVL93
 45498      00000000 
 45499 114c 0100     		.value	0x1
 45500 114e 56       		.byte	0x56
 45501 114f 00000000 		.quad	0
 45501      00000000 
 45502 1157 00000000 		.quad	0
 45502      00000000 
 45503              	.LLST106:
 45504 115f 00000000 		.quad	.LVL83
 45504      00000000 
 45505 1167 00000000 		.quad	.LVL84
 45505      00000000 
 45506 116f 0100     		.value	0x1
 45507 1171 5C       		.byte	0x5c
 45508 1172 00000000 		.quad	.LVL91
 45508      00000000 
 45509 117a 00000000 		.quad	.LVL93
 45509      00000000 
 45510 1182 0100     		.value	0x1
 45511 1184 5C       		.byte	0x5c
 45512 1185 00000000 		.quad	0
 45512      00000000 
 45513 118d 00000000 		.quad	0
 45513      00000000 
 45514              	.LLST107:
 45515 1195 00000000 		.quad	.LVL72
 45515      00000000 
 45516 119d 00000000 		.quad	.LVL73
 45516      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1126


 45517 11a5 0700     		.value	0x7
 45518 11a7 91       		.byte	0x91
 45519 11a8 E07E     		.sleb128 -160
 45520 11aa 06       		.byte	0x6
 45521 11ab 23       		.byte	0x23
 45522 11ac 01       		.uleb128 0x1
 45523 11ad 9F       		.byte	0x9f
 45524 11ae 00000000 		.quad	.LVL79
 45524      00000000 
 45525 11b6 00000000 		.quad	.LVL80
 45525      00000000 
 45526 11be 0100     		.value	0x1
 45527 11c0 56       		.byte	0x56
 45528 11c1 00000000 		.quad	.LVL80
 45528      00000000 
 45529 11c9 00000000 		.quad	.LVL83
 45529      00000000 
 45530 11d1 0700     		.value	0x7
 45531 11d3 91       		.byte	0x91
 45532 11d4 E07E     		.sleb128 -160
 45533 11d6 06       		.byte	0x6
 45534 11d7 23       		.byte	0x23
 45535 11d8 01       		.uleb128 0x1
 45536 11d9 9F       		.byte	0x9f
 45537 11da 00000000 		.quad	0
 45537      00000000 
 45538 11e2 00000000 		.quad	0
 45538      00000000 
 45539              	.LLST108:
 45540 11ea 00000000 		.quad	.LVL72
 45540      00000000 
 45541 11f2 00000000 		.quad	.LVL73
 45541      00000000 
 45542 11fa 0100     		.value	0x1
 45543 11fc 5C       		.byte	0x5c
 45544 11fd 00000000 		.quad	.LVL81
 45544      00000000 
 45545 1205 00000000 		.quad	.LVL83
 45545      00000000 
 45546 120d 0100     		.value	0x1
 45547 120f 5C       		.byte	0x5c
 45548 1210 00000000 		.quad	0
 45548      00000000 
 45549 1218 00000000 		.quad	0
 45549      00000000 
 45550              	.LLST109:
 45551 1220 00000000 		.quad	.LVL72
 45551      00000000 
 45552 1228 00000000 		.quad	.LVL73
 45552      00000000 
 45553 1230 0100     		.value	0x1
 45554 1232 56       		.byte	0x56
 45555 1233 00000000 		.quad	.LVL81
 45555      00000000 
 45556 123b 00000000 		.quad	.LVL83
 45556      00000000 
 45557 1243 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1127


 45558 1245 56       		.byte	0x56
 45559 1246 00000000 		.quad	0
 45559      00000000 
 45560 124e 00000000 		.quad	0
 45560      00000000 
 45561              	.LLST110:
 45562 1256 00000000 		.quad	.LVL61
 45562      00000000 
 45563 125e 00000000 		.quad	.LVL62
 45563      00000000 
 45564 1266 0700     		.value	0x7
 45565 1268 91       		.byte	0x91
 45566 1269 907F     		.sleb128 -112
 45567 126b 06       		.byte	0x6
 45568 126c 23       		.byte	0x23
 45569 126d 01       		.uleb128 0x1
 45570 126e 9F       		.byte	0x9f
 45571 126f 00000000 		.quad	.LVL68
 45571      00000000 
 45572 1277 00000000 		.quad	.LVL69
 45572      00000000 
 45573 127f 0100     		.value	0x1
 45574 1281 56       		.byte	0x56
 45575 1282 00000000 		.quad	.LVL69
 45575      00000000 
 45576 128a 00000000 		.quad	.LVL72
 45576      00000000 
 45577 1292 0700     		.value	0x7
 45578 1294 91       		.byte	0x91
 45579 1295 907F     		.sleb128 -112
 45580 1297 06       		.byte	0x6
 45581 1298 23       		.byte	0x23
 45582 1299 01       		.uleb128 0x1
 45583 129a 9F       		.byte	0x9f
 45584 129b 00000000 		.quad	0
 45584      00000000 
 45585 12a3 00000000 		.quad	0
 45585      00000000 
 45586              	.LLST111:
 45587 12ab 00000000 		.quad	.LVL61
 45587      00000000 
 45588 12b3 00000000 		.quad	.LVL62
 45588      00000000 
 45589 12bb 0100     		.value	0x1
 45590 12bd 5C       		.byte	0x5c
 45591 12be 00000000 		.quad	.LVL70
 45591      00000000 
 45592 12c6 00000000 		.quad	.LVL72
 45592      00000000 
 45593 12ce 0100     		.value	0x1
 45594 12d0 5C       		.byte	0x5c
 45595 12d1 00000000 		.quad	0
 45595      00000000 
 45596 12d9 00000000 		.quad	0
 45596      00000000 
 45597              	.LLST112:
 45598 12e1 00000000 		.quad	.LVL61
GAS LISTING /tmp/ccmMnd7l.s 			page 1128


 45598      00000000 
 45599 12e9 00000000 		.quad	.LVL62
 45599      00000000 
 45600 12f1 0100     		.value	0x1
 45601 12f3 56       		.byte	0x56
 45602 12f4 00000000 		.quad	.LVL70
 45602      00000000 
 45603 12fc 00000000 		.quad	.LVL72
 45603      00000000 
 45604 1304 0100     		.value	0x1
 45605 1306 56       		.byte	0x56
 45606 1307 00000000 		.quad	0
 45606      00000000 
 45607 130f 00000000 		.quad	0
 45607      00000000 
 45608              	.LLST113:
 45609 1317 00000000 		.quad	.LVL50
 45609      00000000 
 45610 131f 00000000 		.quad	.LVL51
 45610      00000000 
 45611 1327 0700     		.value	0x7
 45612 1329 91       		.byte	0x91
 45613 132a 807F     		.sleb128 -128
 45614 132c 06       		.byte	0x6
 45615 132d 23       		.byte	0x23
 45616 132e 01       		.uleb128 0x1
 45617 132f 9F       		.byte	0x9f
 45618 1330 00000000 		.quad	.LVL57
 45618      00000000 
 45619 1338 00000000 		.quad	.LVL58
 45619      00000000 
 45620 1340 0100     		.value	0x1
 45621 1342 56       		.byte	0x56
 45622 1343 00000000 		.quad	.LVL58
 45622      00000000 
 45623 134b 00000000 		.quad	.LVL61
 45623      00000000 
 45624 1353 0700     		.value	0x7
 45625 1355 91       		.byte	0x91
 45626 1356 807F     		.sleb128 -128
 45627 1358 06       		.byte	0x6
 45628 1359 23       		.byte	0x23
 45629 135a 01       		.uleb128 0x1
 45630 135b 9F       		.byte	0x9f
 45631 135c 00000000 		.quad	0
 45631      00000000 
 45632 1364 00000000 		.quad	0
 45632      00000000 
 45633              	.LLST114:
 45634 136c 00000000 		.quad	.LVL50
 45634      00000000 
 45635 1374 00000000 		.quad	.LVL51
 45635      00000000 
 45636 137c 0100     		.value	0x1
 45637 137e 5C       		.byte	0x5c
 45638 137f 00000000 		.quad	.LVL59
 45638      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1129


 45639 1387 00000000 		.quad	.LVL61
 45639      00000000 
 45640 138f 0100     		.value	0x1
 45641 1391 5C       		.byte	0x5c
 45642 1392 00000000 		.quad	0
 45642      00000000 
 45643 139a 00000000 		.quad	0
 45643      00000000 
 45644              	.LLST115:
 45645 13a2 00000000 		.quad	.LVL50
 45645      00000000 
 45646 13aa 00000000 		.quad	.LVL51
 45646      00000000 
 45647 13b2 0100     		.value	0x1
 45648 13b4 56       		.byte	0x56
 45649 13b5 00000000 		.quad	.LVL59
 45649      00000000 
 45650 13bd 00000000 		.quad	.LVL61
 45650      00000000 
 45651 13c5 0100     		.value	0x1
 45652 13c7 56       		.byte	0x56
 45653 13c8 00000000 		.quad	0
 45653      00000000 
 45654 13d0 00000000 		.quad	0
 45654      00000000 
 45655              	.LLST116:
 45656 13d8 00000000 		.quad	.LVL41
 45656      00000000 
 45657 13e0 00000000 		.quad	.LVL42
 45657      00000000 
 45658 13e8 0100     		.value	0x1
 45659 13ea 56       		.byte	0x56
 45660 13eb 00000000 		.quad	.LVL42
 45660      00000000 
 45661 13f3 00000000 		.quad	.LVL45
 45661      00000000 
 45662 13fb 0700     		.value	0x7
 45663 13fd 91       		.byte	0x91
 45664 13fe 887F     		.sleb128 -120
 45665 1400 06       		.byte	0x6
 45666 1401 23       		.byte	0x23
 45667 1402 01       		.uleb128 0x1
 45668 1403 9F       		.byte	0x9f
 45669 1404 00000000 		.quad	0
 45669      00000000 
 45670 140c 00000000 		.quad	0
 45670      00000000 
 45671              	.LLST117:
 45672 1414 00000000 		.quad	.LVL43
 45672      00000000 
 45673 141c 00000000 		.quad	.LVL45
 45673      00000000 
 45674 1424 0100     		.value	0x1
 45675 1426 5C       		.byte	0x5c
 45676 1427 00000000 		.quad	0
 45676      00000000 
 45677 142f 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1130


 45677      00000000 
 45678              	.LLST118:
 45679 1437 00000000 		.quad	.LVL43
 45679      00000000 
 45680 143f 00000000 		.quad	.LVL45
 45680      00000000 
 45681 1447 0100     		.value	0x1
 45682 1449 56       		.byte	0x56
 45683 144a 00000000 		.quad	0
 45683      00000000 
 45684 1452 00000000 		.quad	0
 45684      00000000 
 45685              	.LLST119:
 45686 145a 00000000 		.quad	.LVL124
 45686      00000000 
 45687 1462 00000000 		.quad	.LVL128
 45687      00000000 
 45688 146a 0100     		.value	0x1
 45689 146c 54       		.byte	0x54
 45690 146d 00000000 		.quad	.LVL128
 45690      00000000 
 45691 1475 00000000 		.quad	.LVL148
 45691      00000000 
 45692 147d 0100     		.value	0x1
 45693 147f 5E       		.byte	0x5e
 45694 1480 00000000 		.quad	.LVL148
 45694      00000000 
 45695 1488 00000000 		.quad	.LVL181
 45695      00000000 
 45696 1490 0400     		.value	0x4
 45697 1492 F3       		.byte	0xf3
 45698 1493 01       		.uleb128 0x1
 45699 1494 54       		.byte	0x54
 45700 1495 9F       		.byte	0x9f
 45701 1496 00000000 		.quad	.LVL181
 45701      00000000 
 45702 149e 00000000 		.quad	.LVL184-1
 45702      00000000 
 45703 14a6 0100     		.value	0x1
 45704 14a8 54       		.byte	0x54
 45705 14a9 00000000 		.quad	.LVL184-1
 45705      00000000 
 45706 14b1 00000000 		.quad	.LVL187
 45706      00000000 
 45707 14b9 0100     		.value	0x1
 45708 14bb 5E       		.byte	0x5e
 45709 14bc 00000000 		.quad	.LVL187
 45709      00000000 
 45710 14c4 00000000 		.quad	.LVL190
 45710      00000000 
 45711 14cc 0400     		.value	0x4
 45712 14ce F3       		.byte	0xf3
 45713 14cf 01       		.uleb128 0x1
 45714 14d0 54       		.byte	0x54
 45715 14d1 9F       		.byte	0x9f
 45716 14d2 00000000 		.quad	.LVL190
 45716      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1131


 45717 14da 00000000 		.quad	.LVL198
 45717      00000000 
 45718 14e2 0100     		.value	0x1
 45719 14e4 5E       		.byte	0x5e
 45720 14e5 00000000 		.quad	.LVL198
 45720      00000000 
 45721 14ed 00000000 		.quad	.LVL199
 45721      00000000 
 45722 14f5 0400     		.value	0x4
 45723 14f7 F3       		.byte	0xf3
 45724 14f8 01       		.uleb128 0x1
 45725 14f9 54       		.byte	0x54
 45726 14fa 9F       		.byte	0x9f
 45727 14fb 00000000 		.quad	.LVL199
 45727      00000000 
 45728 1503 00000000 		.quad	.LVL200
 45728      00000000 
 45729 150b 0100     		.value	0x1
 45730 150d 5E       		.byte	0x5e
 45731 150e 00000000 		.quad	.LVL200
 45731      00000000 
 45732 1516 00000000 		.quad	.LVL201-1
 45732      00000000 
 45733 151e 0100     		.value	0x1
 45734 1520 54       		.byte	0x54
 45735 1521 00000000 		.quad	.LVL201-1
 45735      00000000 
 45736 1529 00000000 		.quad	.LVL202
 45736      00000000 
 45737 1531 0100     		.value	0x1
 45738 1533 5E       		.byte	0x5e
 45739 1534 00000000 		.quad	.LVL202
 45739      00000000 
 45740 153c 00000000 		.quad	.LVL208
 45740      00000000 
 45741 1544 0400     		.value	0x4
 45742 1546 F3       		.byte	0xf3
 45743 1547 01       		.uleb128 0x1
 45744 1548 54       		.byte	0x54
 45745 1549 9F       		.byte	0x9f
 45746 154a 00000000 		.quad	.LVL208
 45746      00000000 
 45747 1552 00000000 		.quad	.LFE6050
 45747      00000000 
 45748 155a 0100     		.value	0x1
 45749 155c 5E       		.byte	0x5e
 45750 155d 00000000 		.quad	0
 45750      00000000 
 45751 1565 00000000 		.quad	0
 45751      00000000 
 45752              	.LLST120:
 45753 156d 00000000 		.quad	.LVL124
 45753      00000000 
 45754 1575 00000000 		.quad	.LVL128
 45754      00000000 
 45755 157d 0100     		.value	0x1
 45756 157f 51       		.byte	0x51
GAS LISTING /tmp/ccmMnd7l.s 			page 1132


 45757 1580 00000000 		.quad	.LVL128
 45757      00000000 
 45758 1588 00000000 		.quad	.LVL152
 45758      00000000 
 45759 1590 0100     		.value	0x1
 45760 1592 5D       		.byte	0x5d
 45761 1593 00000000 		.quad	.LVL152
 45761      00000000 
 45762 159b 00000000 		.quad	.LVL157
 45762      00000000 
 45763 15a3 0300     		.value	0x3
 45764 15a5 91       		.byte	0x91
 45765 15a6 B458     		.sleb128 -5068
 45766 15a8 00000000 		.quad	.LVL157
 45766      00000000 
 45767 15b0 00000000 		.quad	.LVL181
 45767      00000000 
 45768 15b8 0400     		.value	0x4
 45769 15ba F3       		.byte	0xf3
 45770 15bb 01       		.uleb128 0x1
 45771 15bc 51       		.byte	0x51
 45772 15bd 9F       		.byte	0x9f
 45773 15be 00000000 		.quad	.LVL181
 45773      00000000 
 45774 15c6 00000000 		.quad	.LVL182
 45774      00000000 
 45775 15ce 0100     		.value	0x1
 45776 15d0 51       		.byte	0x51
 45777 15d1 00000000 		.quad	.LVL182
 45777      00000000 
 45778 15d9 00000000 		.quad	.LVL187
 45778      00000000 
 45779 15e1 0100     		.value	0x1
 45780 15e3 5D       		.byte	0x5d
 45781 15e4 00000000 		.quad	.LVL187
 45781      00000000 
 45782 15ec 00000000 		.quad	.LVL190
 45782      00000000 
 45783 15f4 0400     		.value	0x4
 45784 15f6 F3       		.byte	0xf3
 45785 15f7 01       		.uleb128 0x1
 45786 15f8 51       		.byte	0x51
 45787 15f9 9F       		.byte	0x9f
 45788 15fa 00000000 		.quad	.LVL190
 45788      00000000 
 45789 1602 00000000 		.quad	.LVL207
 45789      00000000 
 45790 160a 0100     		.value	0x1
 45791 160c 5D       		.byte	0x5d
 45792 160d 00000000 		.quad	.LVL207
 45792      00000000 
 45793 1615 00000000 		.quad	.LVL208
 45793      00000000 
 45794 161d 0400     		.value	0x4
 45795 161f F3       		.byte	0xf3
 45796 1620 01       		.uleb128 0x1
 45797 1621 51       		.byte	0x51
GAS LISTING /tmp/ccmMnd7l.s 			page 1133


 45798 1622 9F       		.byte	0x9f
 45799 1623 00000000 		.quad	.LVL208
 45799      00000000 
 45800 162b 00000000 		.quad	.LFE6050
 45800      00000000 
 45801 1633 0100     		.value	0x1
 45802 1635 5D       		.byte	0x5d
 45803 1636 00000000 		.quad	0
 45803      00000000 
 45804 163e 00000000 		.quad	0
 45804      00000000 
 45805              	.LLST121:
 45806 1646 00000000 		.quad	.LVL124
 45806      00000000 
 45807 164e 00000000 		.quad	.LVL128
 45807      00000000 
 45808 1656 0200     		.value	0x2
 45809 1658 75       		.byte	0x75
 45810 1659 00       		.sleb128 0
 45811 165a 00000000 		.quad	.LVL128
 45811      00000000 
 45812 1662 00000000 		.quad	.LVL178
 45812      00000000 
 45813 166a 0200     		.value	0x2
 45814 166c 7C       		.byte	0x7c
 45815 166d 00       		.sleb128 0
 45816 166e 00000000 		.quad	.LVL178
 45816      00000000 
 45817 1676 00000000 		.quad	.LVL181
 45817      00000000 
 45818 167e 0200     		.value	0x2
 45819 1680 70       		.byte	0x70
 45820 1681 00       		.sleb128 0
 45821 1682 00000000 		.quad	.LVL181
 45821      00000000 
 45822 168a 00000000 		.quad	.LVL183
 45822      00000000 
 45823 1692 0200     		.value	0x2
 45824 1694 75       		.byte	0x75
 45825 1695 00       		.sleb128 0
 45826 1696 00000000 		.quad	.LVL183
 45826      00000000 
 45827 169e 00000000 		.quad	.LVL200
 45827      00000000 
 45828 16a6 0200     		.value	0x2
 45829 16a8 7C       		.byte	0x7c
 45830 16a9 00       		.sleb128 0
 45831 16aa 00000000 		.quad	.LVL200
 45831      00000000 
 45832 16b2 00000000 		.quad	.LVL201-1
 45832      00000000 
 45833 16ba 0200     		.value	0x2
 45834 16bc 75       		.byte	0x75
 45835 16bd 00       		.sleb128 0
 45836 16be 00000000 		.quad	.LVL201-1
 45836      00000000 
 45837 16c6 00000000 		.quad	.LFE6050
GAS LISTING /tmp/ccmMnd7l.s 			page 1134


 45837      00000000 
 45838 16ce 0200     		.value	0x2
 45839 16d0 7C       		.byte	0x7c
 45840 16d1 00       		.sleb128 0
 45841 16d2 00000000 		.quad	0
 45841      00000000 
 45842 16da 00000000 		.quad	0
 45842      00000000 
 45843              	.LLST122:
 45844 16e2 00000000 		.quad	.LVL144
 45844      00000000 
 45845 16ea 00000000 		.quad	.LVL152
 45845      00000000 
 45846 16f2 0700     		.value	0x7
 45847 16f4 30       		.byte	0x30
 45848 16f5 9F       		.byte	0x9f
 45849 16f6 93       		.byte	0x93
 45850 16f7 04       		.uleb128 0x4
 45851 16f8 5D       		.byte	0x5d
 45852 16f9 93       		.byte	0x93
 45853 16fa 04       		.uleb128 0x4
 45854 16fb 00000000 		.quad	.LVL152
 45854      00000000 
 45855 1703 00000000 		.quad	.LVL157
 45855      00000000 
 45856 170b 0900     		.value	0x9
 45857 170d 30       		.byte	0x30
 45858 170e 9F       		.byte	0x9f
 45859 170f 93       		.byte	0x93
 45860 1710 04       		.uleb128 0x4
 45861 1711 91       		.byte	0x91
 45862 1712 B458     		.sleb128 -5068
 45863 1714 93       		.byte	0x93
 45864 1715 04       		.uleb128 0x4
 45865 1716 00000000 		.quad	.LVL157
 45865      00000000 
 45866 171e 00000000 		.quad	.LVL181
 45866      00000000 
 45867 1726 0A00     		.value	0xa
 45868 1728 30       		.byte	0x30
 45869 1729 9F       		.byte	0x9f
 45870 172a 93       		.byte	0x93
 45871 172b 04       		.uleb128 0x4
 45872 172c F3       		.byte	0xf3
 45873 172d 01       		.uleb128 0x1
 45874 172e 51       		.byte	0x51
 45875 172f 9F       		.byte	0x9f
 45876 1730 93       		.byte	0x93
 45877 1731 04       		.uleb128 0x4
 45878 1732 00000000 		.quad	.LVL187
 45878      00000000 
 45879 173a 00000000 		.quad	.LVL190
 45879      00000000 
 45880 1742 0A00     		.value	0xa
 45881 1744 30       		.byte	0x30
 45882 1745 9F       		.byte	0x9f
 45883 1746 93       		.byte	0x93
GAS LISTING /tmp/ccmMnd7l.s 			page 1135


 45884 1747 04       		.uleb128 0x4
 45885 1748 F3       		.byte	0xf3
 45886 1749 01       		.uleb128 0x1
 45887 174a 51       		.byte	0x51
 45888 174b 9F       		.byte	0x9f
 45889 174c 93       		.byte	0x93
 45890 174d 04       		.uleb128 0x4
 45891 174e 00000000 		.quad	.LVL207
 45891      00000000 
 45892 1756 00000000 		.quad	.LVL208
 45892      00000000 
 45893 175e 0A00     		.value	0xa
 45894 1760 30       		.byte	0x30
 45895 1761 9F       		.byte	0x9f
 45896 1762 93       		.byte	0x93
 45897 1763 04       		.uleb128 0x4
 45898 1764 F3       		.byte	0xf3
 45899 1765 01       		.uleb128 0x1
 45900 1766 51       		.byte	0x51
 45901 1767 9F       		.byte	0x9f
 45902 1768 93       		.byte	0x93
 45903 1769 04       		.uleb128 0x4
 45904 176a 00000000 		.quad	0
 45904      00000000 
 45905 1772 00000000 		.quad	0
 45905      00000000 
 45906              	.LLST123:
 45907 177a 00000000 		.quad	.LVL124
 45907      00000000 
 45908 1782 00000000 		.quad	.LVL125
 45908      00000000 
 45909 178a 0500     		.value	0x5
 45910 178c 74       		.byte	0x74
 45911 178d 00       		.sleb128 0
 45912 178e 31       		.byte	0x31
 45913 178f 24       		.byte	0x24
 45914 1790 9F       		.byte	0x9f
 45915 1791 00000000 		.quad	.LVL125
 45915      00000000 
 45916 1799 00000000 		.quad	.LVL128
 45916      00000000 
 45917 17a1 0100     		.value	0x1
 45918 17a3 50       		.byte	0x50
 45919 17a4 00000000 		.quad	.LVL128
 45919      00000000 
 45920 17ac 00000000 		.quad	.LVL148
 45920      00000000 
 45921 17b4 0500     		.value	0x5
 45922 17b6 7E       		.byte	0x7e
 45923 17b7 00       		.sleb128 0
 45924 17b8 31       		.byte	0x31
 45925 17b9 24       		.byte	0x24
 45926 17ba 9F       		.byte	0x9f
 45927 17bb 00000000 		.quad	.LVL148
 45927      00000000 
 45928 17c3 00000000 		.quad	.LVL181
 45928      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1136


 45929 17cb 0600     		.value	0x6
 45930 17cd F3       		.byte	0xf3
 45931 17ce 01       		.uleb128 0x1
 45932 17cf 54       		.byte	0x54
 45933 17d0 31       		.byte	0x31
 45934 17d1 24       		.byte	0x24
 45935 17d2 9F       		.byte	0x9f
 45936 17d3 00000000 		.quad	.LVL181
 45936      00000000 
 45937 17db 00000000 		.quad	.LVL184-1
 45937      00000000 
 45938 17e3 0100     		.value	0x1
 45939 17e5 50       		.byte	0x50
 45940 17e6 00000000 		.quad	.LVL184-1
 45940      00000000 
 45941 17ee 00000000 		.quad	.LVL187
 45941      00000000 
 45942 17f6 0500     		.value	0x5
 45943 17f8 7E       		.byte	0x7e
 45944 17f9 00       		.sleb128 0
 45945 17fa 31       		.byte	0x31
 45946 17fb 24       		.byte	0x24
 45947 17fc 9F       		.byte	0x9f
 45948 17fd 00000000 		.quad	.LVL187
 45948      00000000 
 45949 1805 00000000 		.quad	.LVL190
 45949      00000000 
 45950 180d 0600     		.value	0x6
 45951 180f F3       		.byte	0xf3
 45952 1810 01       		.uleb128 0x1
 45953 1811 54       		.byte	0x54
 45954 1812 31       		.byte	0x31
 45955 1813 24       		.byte	0x24
 45956 1814 9F       		.byte	0x9f
 45957 1815 00000000 		.quad	.LVL190
 45957      00000000 
 45958 181d 00000000 		.quad	.LVL198
 45958      00000000 
 45959 1825 0500     		.value	0x5
 45960 1827 7E       		.byte	0x7e
 45961 1828 00       		.sleb128 0
 45962 1829 31       		.byte	0x31
 45963 182a 24       		.byte	0x24
 45964 182b 9F       		.byte	0x9f
 45965 182c 00000000 		.quad	.LVL198
 45965      00000000 
 45966 1834 00000000 		.quad	.LVL199
 45966      00000000 
 45967 183c 0600     		.value	0x6
 45968 183e F3       		.byte	0xf3
 45969 183f 01       		.uleb128 0x1
 45970 1840 54       		.byte	0x54
 45971 1841 31       		.byte	0x31
 45972 1842 24       		.byte	0x24
 45973 1843 9F       		.byte	0x9f
 45974 1844 00000000 		.quad	.LVL199
 45974      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1137


 45975 184c 00000000 		.quad	.LVL200
 45975      00000000 
 45976 1854 0500     		.value	0x5
 45977 1856 7E       		.byte	0x7e
 45978 1857 00       		.sleb128 0
 45979 1858 31       		.byte	0x31
 45980 1859 24       		.byte	0x24
 45981 185a 9F       		.byte	0x9f
 45982 185b 00000000 		.quad	.LVL200
 45982      00000000 
 45983 1863 00000000 		.quad	.LVL201-1
 45983      00000000 
 45984 186b 0100     		.value	0x1
 45985 186d 50       		.byte	0x50
 45986 186e 00000000 		.quad	.LVL201-1
 45986      00000000 
 45987 1876 00000000 		.quad	.LVL202
 45987      00000000 
 45988 187e 0500     		.value	0x5
 45989 1880 7E       		.byte	0x7e
 45990 1881 00       		.sleb128 0
 45991 1882 31       		.byte	0x31
 45992 1883 24       		.byte	0x24
 45993 1884 9F       		.byte	0x9f
 45994 1885 00000000 		.quad	.LVL202
 45994      00000000 
 45995 188d 00000000 		.quad	.LVL208
 45995      00000000 
 45996 1895 0600     		.value	0x6
 45997 1897 F3       		.byte	0xf3
 45998 1898 01       		.uleb128 0x1
 45999 1899 54       		.byte	0x54
 46000 189a 31       		.byte	0x31
 46001 189b 24       		.byte	0x24
 46002 189c 9F       		.byte	0x9f
 46003 189d 00000000 		.quad	.LVL208
 46003      00000000 
 46004 18a5 00000000 		.quad	.LFE6050
 46004      00000000 
 46005 18ad 0500     		.value	0x5
 46006 18af 7E       		.byte	0x7e
 46007 18b0 00       		.sleb128 0
 46008 18b1 31       		.byte	0x31
 46009 18b2 24       		.byte	0x24
 46010 18b3 9F       		.byte	0x9f
 46011 18b4 00000000 		.quad	0
 46011      00000000 
 46012 18bc 00000000 		.quad	0
 46012      00000000 
 46013              	.LLST124:
 46014 18c4 00000000 		.quad	.LVL124
 46014      00000000 
 46015 18cc 00000000 		.quad	.LVL128
 46015      00000000 
 46016 18d4 0100     		.value	0x1
 46017 18d6 55       		.byte	0x55
 46018 18d7 00000000 		.quad	.LVL128
GAS LISTING /tmp/ccmMnd7l.s 			page 1138


 46018      00000000 
 46019 18df 00000000 		.quad	.LVL178
 46019      00000000 
 46020 18e7 0100     		.value	0x1
 46021 18e9 5C       		.byte	0x5c
 46022 18ea 00000000 		.quad	.LVL178
 46022      00000000 
 46023 18f2 00000000 		.quad	.LVL181
 46023      00000000 
 46024 18fa 0100     		.value	0x1
 46025 18fc 50       		.byte	0x50
 46026 18fd 00000000 		.quad	.LVL181
 46026      00000000 
 46027 1905 00000000 		.quad	.LVL183
 46027      00000000 
 46028 190d 0100     		.value	0x1
 46029 190f 55       		.byte	0x55
 46030 1910 00000000 		.quad	.LVL183
 46030      00000000 
 46031 1918 00000000 		.quad	.LVL200
 46031      00000000 
 46032 1920 0100     		.value	0x1
 46033 1922 5C       		.byte	0x5c
 46034 1923 00000000 		.quad	.LVL200
 46034      00000000 
 46035 192b 00000000 		.quad	.LVL201-1
 46035      00000000 
 46036 1933 0100     		.value	0x1
 46037 1935 55       		.byte	0x55
 46038 1936 00000000 		.quad	.LVL201-1
 46038      00000000 
 46039 193e 00000000 		.quad	.LFE6050
 46039      00000000 
 46040 1946 0100     		.value	0x1
 46041 1948 5C       		.byte	0x5c
 46042 1949 00000000 		.quad	0
 46042      00000000 
 46043 1951 00000000 		.quad	0
 46043      00000000 
 46044              	.LLST127:
 46045 1959 00000000 		.quad	.LVL126
 46045      00000000 
 46046 1961 00000000 		.quad	.LVL128
 46046      00000000 
 46047 1969 0100     		.value	0x1
 46048 196b 50       		.byte	0x50
 46049 196c 00000000 		.quad	.LVL128
 46049      00000000 
 46050 1974 00000000 		.quad	.LVL148
 46050      00000000 
 46051 197c 0500     		.value	0x5
 46052 197e 7E       		.byte	0x7e
 46053 197f 00       		.sleb128 0
 46054 1980 31       		.byte	0x31
 46055 1981 24       		.byte	0x24
 46056 1982 9F       		.byte	0x9f
 46057 1983 00000000 		.quad	.LVL148
GAS LISTING /tmp/ccmMnd7l.s 			page 1139


 46057      00000000 
 46058 198b 00000000 		.quad	.LVL181
 46058      00000000 
 46059 1993 0600     		.value	0x6
 46060 1995 F3       		.byte	0xf3
 46061 1996 01       		.uleb128 0x1
 46062 1997 54       		.byte	0x54
 46063 1998 31       		.byte	0x31
 46064 1999 24       		.byte	0x24
 46065 199a 9F       		.byte	0x9f
 46066 199b 00000000 		.quad	.LVL181
 46066      00000000 
 46067 19a3 00000000 		.quad	.LVL184-1
 46067      00000000 
 46068 19ab 0100     		.value	0x1
 46069 19ad 50       		.byte	0x50
 46070 19ae 00000000 		.quad	.LVL184-1
 46070      00000000 
 46071 19b6 00000000 		.quad	.LVL187
 46071      00000000 
 46072 19be 0500     		.value	0x5
 46073 19c0 7E       		.byte	0x7e
 46074 19c1 00       		.sleb128 0
 46075 19c2 31       		.byte	0x31
 46076 19c3 24       		.byte	0x24
 46077 19c4 9F       		.byte	0x9f
 46078 19c5 00000000 		.quad	.LVL187
 46078      00000000 
 46079 19cd 00000000 		.quad	.LVL190
 46079      00000000 
 46080 19d5 0600     		.value	0x6
 46081 19d7 F3       		.byte	0xf3
 46082 19d8 01       		.uleb128 0x1
 46083 19d9 54       		.byte	0x54
 46084 19da 31       		.byte	0x31
 46085 19db 24       		.byte	0x24
 46086 19dc 9F       		.byte	0x9f
 46087 19dd 00000000 		.quad	.LVL190
 46087      00000000 
 46088 19e5 00000000 		.quad	.LVL198
 46088      00000000 
 46089 19ed 0500     		.value	0x5
 46090 19ef 7E       		.byte	0x7e
 46091 19f0 00       		.sleb128 0
 46092 19f1 31       		.byte	0x31
 46093 19f2 24       		.byte	0x24
 46094 19f3 9F       		.byte	0x9f
 46095 19f4 00000000 		.quad	.LVL198
 46095      00000000 
 46096 19fc 00000000 		.quad	.LVL199
 46096      00000000 
 46097 1a04 0600     		.value	0x6
 46098 1a06 F3       		.byte	0xf3
 46099 1a07 01       		.uleb128 0x1
 46100 1a08 54       		.byte	0x54
 46101 1a09 31       		.byte	0x31
 46102 1a0a 24       		.byte	0x24
GAS LISTING /tmp/ccmMnd7l.s 			page 1140


 46103 1a0b 9F       		.byte	0x9f
 46104 1a0c 00000000 		.quad	.LVL199
 46104      00000000 
 46105 1a14 00000000 		.quad	.LVL200
 46105      00000000 
 46106 1a1c 0500     		.value	0x5
 46107 1a1e 7E       		.byte	0x7e
 46108 1a1f 00       		.sleb128 0
 46109 1a20 31       		.byte	0x31
 46110 1a21 24       		.byte	0x24
 46111 1a22 9F       		.byte	0x9f
 46112 1a23 00000000 		.quad	.LVL200
 46112      00000000 
 46113 1a2b 00000000 		.quad	.LVL201-1
 46113      00000000 
 46114 1a33 0100     		.value	0x1
 46115 1a35 50       		.byte	0x50
 46116 1a36 00000000 		.quad	.LVL201-1
 46116      00000000 
 46117 1a3e 00000000 		.quad	.LVL202
 46117      00000000 
 46118 1a46 0500     		.value	0x5
 46119 1a48 7E       		.byte	0x7e
 46120 1a49 00       		.sleb128 0
 46121 1a4a 31       		.byte	0x31
 46122 1a4b 24       		.byte	0x24
 46123 1a4c 9F       		.byte	0x9f
 46124 1a4d 00000000 		.quad	.LVL202
 46124      00000000 
 46125 1a55 00000000 		.quad	.LVL208
 46125      00000000 
 46126 1a5d 0600     		.value	0x6
 46127 1a5f F3       		.byte	0xf3
 46128 1a60 01       		.uleb128 0x1
 46129 1a61 54       		.byte	0x54
 46130 1a62 31       		.byte	0x31
 46131 1a63 24       		.byte	0x24
 46132 1a64 9F       		.byte	0x9f
 46133 1a65 00000000 		.quad	.LVL208
 46133      00000000 
 46134 1a6d 00000000 		.quad	.LFE6050
 46134      00000000 
 46135 1a75 0500     		.value	0x5
 46136 1a77 7E       		.byte	0x7e
 46137 1a78 00       		.sleb128 0
 46138 1a79 31       		.byte	0x31
 46139 1a7a 24       		.byte	0x24
 46140 1a7b 9F       		.byte	0x9f
 46141 1a7c 00000000 		.quad	0
 46141      00000000 
 46142 1a84 00000000 		.quad	0
 46142      00000000 
 46143              	.LLST128:
 46144 1a8c 00000000 		.quad	.LVL126
 46144      00000000 
 46145 1a94 00000000 		.quad	.LVL128
 46145      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1141


 46146 1a9c 0100     		.value	0x1
 46147 1a9e 55       		.byte	0x55
 46148 1a9f 00000000 		.quad	.LVL128
 46148      00000000 
 46149 1aa7 00000000 		.quad	.LVL178
 46149      00000000 
 46150 1aaf 0100     		.value	0x1
 46151 1ab1 5C       		.byte	0x5c
 46152 1ab2 00000000 		.quad	.LVL178
 46152      00000000 
 46153 1aba 00000000 		.quad	.LVL181
 46153      00000000 
 46154 1ac2 0100     		.value	0x1
 46155 1ac4 50       		.byte	0x50
 46156 1ac5 00000000 		.quad	.LVL181
 46156      00000000 
 46157 1acd 00000000 		.quad	.LVL183
 46157      00000000 
 46158 1ad5 0100     		.value	0x1
 46159 1ad7 55       		.byte	0x55
 46160 1ad8 00000000 		.quad	.LVL183
 46160      00000000 
 46161 1ae0 00000000 		.quad	.LVL200
 46161      00000000 
 46162 1ae8 0100     		.value	0x1
 46163 1aea 5C       		.byte	0x5c
 46164 1aeb 00000000 		.quad	.LVL200
 46164      00000000 
 46165 1af3 00000000 		.quad	.LVL201-1
 46165      00000000 
 46166 1afb 0100     		.value	0x1
 46167 1afd 55       		.byte	0x55
 46168 1afe 00000000 		.quad	.LVL201-1
 46168      00000000 
 46169 1b06 00000000 		.quad	.LFE6050
 46169      00000000 
 46170 1b0e 0100     		.value	0x1
 46171 1b10 5C       		.byte	0x5c
 46172 1b11 00000000 		.quad	0
 46172      00000000 
 46173 1b19 00000000 		.quad	0
 46173      00000000 
 46174              	.LLST130:
 46175 1b21 00000000 		.quad	.LVL181
 46175      00000000 
 46176 1b29 00000000 		.quad	.LVL184-1
 46176      00000000 
 46177 1b31 0100     		.value	0x1
 46178 1b33 50       		.byte	0x50
 46179 1b34 00000000 		.quad	.LVL184-1
 46179      00000000 
 46180 1b3c 00000000 		.quad	.LVL187
 46180      00000000 
 46181 1b44 0500     		.value	0x5
 46182 1b46 7E       		.byte	0x7e
 46183 1b47 00       		.sleb128 0
 46184 1b48 31       		.byte	0x31
GAS LISTING /tmp/ccmMnd7l.s 			page 1142


 46185 1b49 24       		.byte	0x24
 46186 1b4a 9F       		.byte	0x9f
 46187 1b4b 00000000 		.quad	.LVL200
 46187      00000000 
 46188 1b53 00000000 		.quad	.LVL201-1
 46188      00000000 
 46189 1b5b 0100     		.value	0x1
 46190 1b5d 50       		.byte	0x50
 46191 1b5e 00000000 		.quad	.LVL201-1
 46191      00000000 
 46192 1b66 00000000 		.quad	.LVL201
 46192      00000000 
 46193 1b6e 0500     		.value	0x5
 46194 1b70 7E       		.byte	0x7e
 46195 1b71 00       		.sleb128 0
 46196 1b72 31       		.byte	0x31
 46197 1b73 24       		.byte	0x24
 46198 1b74 9F       		.byte	0x9f
 46199 1b75 00000000 		.quad	0
 46199      00000000 
 46200 1b7d 00000000 		.quad	0
 46200      00000000 
 46201              	.LLST131:
 46202 1b85 00000000 		.quad	.LVL181
 46202      00000000 
 46203 1b8d 00000000 		.quad	.LVL187
 46203      00000000 
 46204 1b95 0200     		.value	0x2
 46205 1b97 30       		.byte	0x30
 46206 1b98 9F       		.byte	0x9f
 46207 1b99 00000000 		.quad	.LVL200
 46207      00000000 
 46208 1ba1 00000000 		.quad	.LVL201
 46208      00000000 
 46209 1ba9 0200     		.value	0x2
 46210 1bab 30       		.byte	0x30
 46211 1bac 9F       		.byte	0x9f
 46212 1bad 00000000 		.quad	0
 46212      00000000 
 46213 1bb5 00000000 		.quad	0
 46213      00000000 
 46214              	.LLST134:
 46215 1bbd 00000000 		.quad	.LVL127
 46215      00000000 
 46216 1bc5 00000000 		.quad	.LVL128
 46216      00000000 
 46217 1bcd 0200     		.value	0x2
 46218 1bcf 30       		.byte	0x30
 46219 1bd0 9F       		.byte	0x9f
 46220 1bd1 00000000 		.quad	.LVL185
 46220      00000000 
 46221 1bd9 00000000 		.quad	.LVL187
 46221      00000000 
 46222 1be1 0500     		.value	0x5
 46223 1be3 7E       		.byte	0x7e
 46224 1be4 00       		.sleb128 0
 46225 1be5 31       		.byte	0x31
GAS LISTING /tmp/ccmMnd7l.s 			page 1143


 46226 1be6 24       		.byte	0x24
 46227 1be7 9F       		.byte	0x9f
 46228 1be8 00000000 		.quad	0
 46228      00000000 
 46229 1bf0 00000000 		.quad	0
 46229      00000000 
 46230              	.LLST135:
 46231 1bf8 00000000 		.quad	.LVL127
 46231      00000000 
 46232 1c00 00000000 		.quad	.LVL128
 46232      00000000 
 46233 1c08 0100     		.value	0x1
 46234 1c0a 55       		.byte	0x55
 46235 1c0b 00000000 		.quad	.LVL128
 46235      00000000 
 46236 1c13 00000000 		.quad	.LVL178
 46236      00000000 
 46237 1c1b 0100     		.value	0x1
 46238 1c1d 5C       		.byte	0x5c
 46239 1c1e 00000000 		.quad	.LVL178
 46239      00000000 
 46240 1c26 00000000 		.quad	.LVL181
 46240      00000000 
 46241 1c2e 0100     		.value	0x1
 46242 1c30 50       		.byte	0x50
 46243 1c31 00000000 		.quad	.LVL185
 46243      00000000 
 46244 1c39 00000000 		.quad	.LVL200
 46244      00000000 
 46245 1c41 0100     		.value	0x1
 46246 1c43 5C       		.byte	0x5c
 46247 1c44 00000000 		.quad	.LVL201
 46247      00000000 
 46248 1c4c 00000000 		.quad	.LFE6050
 46248      00000000 
 46249 1c54 0100     		.value	0x1
 46250 1c56 5C       		.byte	0x5c
 46251 1c57 00000000 		.quad	0
 46251      00000000 
 46252 1c5f 00000000 		.quad	0
 46252      00000000 
 46253              	.LLST136:
 46254 1c67 00000000 		.quad	.LVL130
 46254      00000000 
 46255 1c6f 00000000 		.quad	.LVL169
 46255      00000000 
 46256 1c77 0100     		.value	0x1
 46257 1c79 56       		.byte	0x56
 46258 1c7a 00000000 		.quad	.LVL169
 46258      00000000 
 46259 1c82 00000000 		.quad	.LVL179
 46259      00000000 
 46260 1c8a 0300     		.value	0x3
 46261 1c8c 7E       		.byte	0x7e
 46262 1c8d 78       		.sleb128 -8
 46263 1c8e 9F       		.byte	0x9f
 46264 1c8f 00000000 		.quad	.LVL179
GAS LISTING /tmp/ccmMnd7l.s 			page 1144


 46264      00000000 
 46265 1c97 00000000 		.quad	.LVL181
 46265      00000000 
 46266 1c9f 0400     		.value	0x4
 46267 1ca1 91       		.byte	0x91
 46268 1ca2 B058     		.sleb128 -5072
 46269 1ca4 9F       		.byte	0x9f
 46270 1ca5 00000000 		.quad	.LVL187
 46270      00000000 
 46271 1cad 00000000 		.quad	.LVL190
 46271      00000000 
 46272 1cb5 0300     		.value	0x3
 46273 1cb7 7E       		.byte	0x7e
 46274 1cb8 78       		.sleb128 -8
 46275 1cb9 9F       		.byte	0x9f
 46276 1cba 00000000 		.quad	.LVL190
 46276      00000000 
 46277 1cc2 00000000 		.quad	.LVL200
 46277      00000000 
 46278 1cca 0100     		.value	0x1
 46279 1ccc 56       		.byte	0x56
 46280 1ccd 00000000 		.quad	.LVL202
 46280      00000000 
 46281 1cd5 00000000 		.quad	.LVL203
 46281      00000000 
 46282 1cdd 0100     		.value	0x1
 46283 1cdf 56       		.byte	0x56
 46284 1ce0 00000000 		.quad	.LVL207
 46284      00000000 
 46285 1ce8 00000000 		.quad	.LVL208
 46285      00000000 
 46286 1cf0 0300     		.value	0x3
 46287 1cf2 7E       		.byte	0x7e
 46288 1cf3 78       		.sleb128 -8
 46289 1cf4 9F       		.byte	0x9f
 46290 1cf5 00000000 		.quad	.LVL208
 46290      00000000 
 46291 1cfd 00000000 		.quad	.LFE6050
 46291      00000000 
 46292 1d05 0100     		.value	0x1
 46293 1d07 56       		.byte	0x56
 46294 1d08 00000000 		.quad	0
 46294      00000000 
 46295 1d10 00000000 		.quad	0
 46295      00000000 
 46296              	.LLST137:
 46297 1d18 00000000 		.quad	.LVL130
 46297      00000000 
 46298 1d20 00000000 		.quad	.LVL131
 46298      00000000 
 46299 1d28 0500     		.value	0x5
 46300 1d2a 91       		.byte	0x91
 46301 1d2b 908A7F   		.sleb128 -15088
 46302 1d2e 9F       		.byte	0x9f
 46303 1d2f 00000000 		.quad	.LVL131
 46303      00000000 
 46304 1d37 00000000 		.quad	.LVL180
GAS LISTING /tmp/ccmMnd7l.s 			page 1145


 46304      00000000 
 46305 1d3f 0100     		.value	0x1
 46306 1d41 5F       		.byte	0x5f
 46307 1d42 00000000 		.quad	.LVL180
 46307      00000000 
 46308 1d4a 00000000 		.quad	.LVL181
 46308      00000000 
 46309 1d52 0500     		.value	0x5
 46310 1d54 91       		.byte	0x91
 46311 1d55 908A7F   		.sleb128 -15088
 46312 1d58 9F       		.byte	0x9f
 46313 1d59 00000000 		.quad	.LVL187
 46313      00000000 
 46314 1d61 00000000 		.quad	.LVL200
 46314      00000000 
 46315 1d69 0100     		.value	0x1
 46316 1d6b 5F       		.byte	0x5f
 46317 1d6c 00000000 		.quad	.LVL202
 46317      00000000 
 46318 1d74 00000000 		.quad	.LVL203
 46318      00000000 
 46319 1d7c 0100     		.value	0x1
 46320 1d7e 5F       		.byte	0x5f
 46321 1d7f 00000000 		.quad	.LVL207
 46321      00000000 
 46322 1d87 00000000 		.quad	.LFE6050
 46322      00000000 
 46323 1d8f 0100     		.value	0x1
 46324 1d91 5F       		.byte	0x5f
 46325 1d92 00000000 		.quad	0
 46325      00000000 
 46326 1d9a 00000000 		.quad	0
 46326      00000000 
 46327              	.LLST138:
 46328 1da2 00000000 		.quad	.LVL132
 46328      00000000 
 46329 1daa 00000000 		.quad	.LVL169
 46329      00000000 
 46330 1db2 0100     		.value	0x1
 46331 1db4 56       		.byte	0x56
 46332 1db5 00000000 		.quad	.LVL169
 46332      00000000 
 46333 1dbd 00000000 		.quad	.LVL179
 46333      00000000 
 46334 1dc5 0300     		.value	0x3
 46335 1dc7 7E       		.byte	0x7e
 46336 1dc8 78       		.sleb128 -8
 46337 1dc9 9F       		.byte	0x9f
 46338 1dca 00000000 		.quad	.LVL179
 46338      00000000 
 46339 1dd2 00000000 		.quad	.LVL181
 46339      00000000 
 46340 1dda 0400     		.value	0x4
 46341 1ddc 91       		.byte	0x91
 46342 1ddd B058     		.sleb128 -5072
 46343 1ddf 9F       		.byte	0x9f
 46344 1de0 00000000 		.quad	.LVL187
GAS LISTING /tmp/ccmMnd7l.s 			page 1146


 46344      00000000 
 46345 1de8 00000000 		.quad	.LVL190
 46345      00000000 
 46346 1df0 0300     		.value	0x3
 46347 1df2 7E       		.byte	0x7e
 46348 1df3 78       		.sleb128 -8
 46349 1df4 9F       		.byte	0x9f
 46350 1df5 00000000 		.quad	.LVL190
 46350      00000000 
 46351 1dfd 00000000 		.quad	.LVL199
 46351      00000000 
 46352 1e05 0100     		.value	0x1
 46353 1e07 56       		.byte	0x56
 46354 1e08 00000000 		.quad	.LVL202
 46354      00000000 
 46355 1e10 00000000 		.quad	.LVL203
 46355      00000000 
 46356 1e18 0100     		.value	0x1
 46357 1e1a 56       		.byte	0x56
 46358 1e1b 00000000 		.quad	.LVL207
 46358      00000000 
 46359 1e23 00000000 		.quad	.LVL208
 46359      00000000 
 46360 1e2b 0300     		.value	0x3
 46361 1e2d 7E       		.byte	0x7e
 46362 1e2e 78       		.sleb128 -8
 46363 1e2f 9F       		.byte	0x9f
 46364 1e30 00000000 		.quad	0
 46364      00000000 
 46365 1e38 00000000 		.quad	0
 46365      00000000 
 46366              	.LLST141:
 46367 1e40 00000000 		.quad	.LVL133
 46367      00000000 
 46368 1e48 00000000 		.quad	.LVL138
 46368      00000000 
 46369 1e50 0500     		.value	0x5
 46370 1e52 91       		.byte	0x91
 46371 1e53 A0B17F   		.sleb128 -10080
 46372 1e56 9F       		.byte	0x9f
 46373 1e57 00000000 		.quad	.LVL138
 46373      00000000 
 46374 1e5f 00000000 		.quad	.LVL153
 46374      00000000 
 46375 1e67 0100     		.value	0x1
 46376 1e69 53       		.byte	0x53
 46377 1e6a 00000000 		.quad	.LVL153
 46377      00000000 
 46378 1e72 00000000 		.quad	.LVL155
 46378      00000000 
 46379 1e7a 0100     		.value	0x1
 46380 1e7c 54       		.byte	0x54
 46381 1e7d 00000000 		.quad	.LVL155
 46381      00000000 
 46382 1e85 00000000 		.quad	.LVL181
 46382      00000000 
 46383 1e8d 0500     		.value	0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1147


 46384 1e8f 91       		.byte	0x91
 46385 1e90 A0B17F   		.sleb128 -10080
 46386 1e93 9F       		.byte	0x9f
 46387 1e94 00000000 		.quad	.LVL187
 46387      00000000 
 46388 1e9c 00000000 		.quad	.LVL193
 46388      00000000 
 46389 1ea4 0500     		.value	0x5
 46390 1ea6 91       		.byte	0x91
 46391 1ea7 A0B17F   		.sleb128 -10080
 46392 1eaa 9F       		.byte	0x9f
 46393 1eab 00000000 		.quad	.LVL193
 46393      00000000 
 46394 1eb3 00000000 		.quad	.LVL195
 46394      00000000 
 46395 1ebb 0100     		.value	0x1
 46396 1ebd 53       		.byte	0x53
 46397 1ebe 00000000 		.quad	.LVL195
 46397      00000000 
 46398 1ec6 00000000 		.quad	.LVL199
 46398      00000000 
 46399 1ece 0500     		.value	0x5
 46400 1ed0 91       		.byte	0x91
 46401 1ed1 A0B17F   		.sleb128 -10080
 46402 1ed4 9F       		.byte	0x9f
 46403 1ed5 00000000 		.quad	.LVL202
 46403      00000000 
 46404 1edd 00000000 		.quad	.LVL203
 46404      00000000 
 46405 1ee5 0500     		.value	0x5
 46406 1ee7 91       		.byte	0x91
 46407 1ee8 A0B17F   		.sleb128 -10080
 46408 1eeb 9F       		.byte	0x9f
 46409 1eec 00000000 		.quad	.LVL207
 46409      00000000 
 46410 1ef4 00000000 		.quad	.LVL208
 46410      00000000 
 46411 1efc 0500     		.value	0x5
 46412 1efe 91       		.byte	0x91
 46413 1eff A0B17F   		.sleb128 -10080
 46414 1f02 9F       		.byte	0x9f
 46415 1f03 00000000 		.quad	0
 46415      00000000 
 46416 1f0b 00000000 		.quad	0
 46416      00000000 
 46417              	.LLST142:
 46418 1f13 00000000 		.quad	.LVL133
 46418      00000000 
 46419 1f1b 00000000 		.quad	.LVL134
 46419      00000000 
 46420 1f23 0100     		.value	0x1
 46421 1f25 55       		.byte	0x55
 46422 1f26 00000000 		.quad	.LVL190
 46422      00000000 
 46423 1f2e 00000000 		.quad	.LVL194-1
 46423      00000000 
 46424 1f36 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1148


 46425 1f38 55       		.byte	0x55
 46426 1f39 00000000 		.quad	.LVL195
 46426      00000000 
 46427 1f41 00000000 		.quad	.LVL198
 46427      00000000 
 46428 1f49 0100     		.value	0x1
 46429 1f4b 55       		.byte	0x55
 46430 1f4c 00000000 		.quad	0
 46430      00000000 
 46431 1f54 00000000 		.quad	0
 46431      00000000 
 46432              	.LLST143:
 46433 1f5c 00000000 		.quad	.LVL190
 46433      00000000 
 46434 1f64 00000000 		.quad	.LVL193
 46434      00000000 
 46435 1f6c 0500     		.value	0x5
 46436 1f6e 91       		.byte	0x91
 46437 1f6f A0B17F   		.sleb128 -10080
 46438 1f72 9F       		.byte	0x9f
 46439 1f73 00000000 		.quad	.LVL193
 46439      00000000 
 46440 1f7b 00000000 		.quad	.LVL195
 46440      00000000 
 46441 1f83 0100     		.value	0x1
 46442 1f85 53       		.byte	0x53
 46443 1f86 00000000 		.quad	.LVL195
 46443      00000000 
 46444 1f8e 00000000 		.quad	.LVL198
 46444      00000000 
 46445 1f96 0500     		.value	0x5
 46446 1f98 91       		.byte	0x91
 46447 1f99 A0B17F   		.sleb128 -10080
 46448 1f9c 9F       		.byte	0x9f
 46449 1f9d 00000000 		.quad	0
 46449      00000000 
 46450 1fa5 00000000 		.quad	0
 46450      00000000 
 46451              	.LLST144:
 46452 1fad 00000000 		.quad	.LVL190
 46452      00000000 
 46453 1fb5 00000000 		.quad	.LVL194-1
 46453      00000000 
 46454 1fbd 0100     		.value	0x1
 46455 1fbf 55       		.byte	0x55
 46456 1fc0 00000000 		.quad	.LVL195
 46456      00000000 
 46457 1fc8 00000000 		.quad	.LVL198
 46457      00000000 
 46458 1fd0 0100     		.value	0x1
 46459 1fd2 55       		.byte	0x55
 46460 1fd3 00000000 		.quad	0
 46460      00000000 
 46461 1fdb 00000000 		.quad	0
 46461      00000000 
 46462              	.LLST145:
 46463 1fe3 00000000 		.quad	.LVL190
GAS LISTING /tmp/ccmMnd7l.s 			page 1149


 46463      00000000 
 46464 1feb 00000000 		.quad	.LVL198
 46464      00000000 
 46465 1ff3 0300     		.value	0x3
 46466 1ff5 09       		.byte	0x9
 46467 1ff6 FF       		.byte	0xff
 46468 1ff7 9F       		.byte	0x9f
 46469 1ff8 00000000 		.quad	0
 46469      00000000 
 46470 2000 00000000 		.quad	0
 46470      00000000 
 46471              	.LLST146:
 46472 2008 00000000 		.quad	.LVL190
 46472      00000000 
 46473 2010 00000000 		.quad	.LVL192
 46473      00000000 
 46474 2018 0300     		.value	0x3
 46475 201a 70       		.byte	0x70
 46476 201b 78       		.sleb128 -8
 46477 201c 9F       		.byte	0x9f
 46478 201d 00000000 		.quad	.LVL192
 46478      00000000 
 46479 2025 00000000 		.quad	.LVL194-1
 46479      00000000 
 46480 202d 0600     		.value	0x6
 46481 202f 76       		.byte	0x76
 46482 2030 00       		.sleb128 0
 46483 2031 06       		.byte	0x6
 46484 2032 38       		.byte	0x38
 46485 2033 1C       		.byte	0x1c
 46486 2034 9F       		.byte	0x9f
 46487 2035 00000000 		.quad	.LVL195
 46487      00000000 
 46488 203d 00000000 		.quad	.LVL197
 46488      00000000 
 46489 2045 0300     		.value	0x3
 46490 2047 70       		.byte	0x70
 46491 2048 78       		.sleb128 -8
 46492 2049 9F       		.byte	0x9f
 46493 204a 00000000 		.quad	.LVL197
 46493      00000000 
 46494 2052 00000000 		.quad	.LVL198
 46494      00000000 
 46495 205a 0600     		.value	0x6
 46496 205c 76       		.byte	0x76
 46497 205d 00       		.sleb128 0
 46498 205e 06       		.byte	0x6
 46499 205f 38       		.byte	0x38
 46500 2060 1C       		.byte	0x1c
 46501 2061 9F       		.byte	0x9f
 46502 2062 00000000 		.quad	0
 46502      00000000 
 46503 206a 00000000 		.quad	0
 46503      00000000 
 46504              	.LLST147:
 46505 2072 00000000 		.quad	.LVL191
 46505      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1150


 46506 207a 00000000 		.quad	.LVL192
 46506      00000000 
 46507 2082 0300     		.value	0x3
 46508 2084 09       		.byte	0x9
 46509 2085 FF       		.byte	0xff
 46510 2086 9F       		.byte	0x9f
 46511 2087 00000000 		.quad	0
 46511      00000000 
 46512 208f 00000000 		.quad	0
 46512      00000000 
 46513              	.LLST148:
 46514 2097 00000000 		.quad	.LVL191
 46514      00000000 
 46515 209f 00000000 		.quad	.LVL192
 46515      00000000 
 46516 20a7 0300     		.value	0x3
 46517 20a9 70       		.byte	0x70
 46518 20aa 78       		.sleb128 -8
 46519 20ab 9F       		.byte	0x9f
 46520 20ac 00000000 		.quad	0
 46520      00000000 
 46521 20b4 00000000 		.quad	0
 46521      00000000 
 46522              	.LLST149:
 46523 20bc 00000000 		.quad	.LVL195
 46523      00000000 
 46524 20c4 00000000 		.quad	.LVL198
 46524      00000000 
 46525 20cc 0300     		.value	0x3
 46526 20ce 09       		.byte	0x9
 46527 20cf FF       		.byte	0xff
 46528 20d0 9F       		.byte	0x9f
 46529 20d1 00000000 		.quad	0
 46529      00000000 
 46530 20d9 00000000 		.quad	0
 46530      00000000 
 46531              	.LLST150:
 46532 20e1 00000000 		.quad	.LVL195
 46532      00000000 
 46533 20e9 00000000 		.quad	.LVL197
 46533      00000000 
 46534 20f1 0300     		.value	0x3
 46535 20f3 70       		.byte	0x70
 46536 20f4 78       		.sleb128 -8
 46537 20f5 9F       		.byte	0x9f
 46538 20f6 00000000 		.quad	.LVL197
 46538      00000000 
 46539 20fe 00000000 		.quad	.LVL198
 46539      00000000 
 46540 2106 0600     		.value	0x6
 46541 2108 76       		.byte	0x76
 46542 2109 00       		.sleb128 0
 46543 210a 06       		.byte	0x6
 46544 210b 38       		.byte	0x38
 46545 210c 1C       		.byte	0x1c
 46546 210d 9F       		.byte	0x9f
 46547 210e 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1151


 46547      00000000 
 46548 2116 00000000 		.quad	0
 46548      00000000 
 46549              	.LLST151:
 46550 211e 00000000 		.quad	.LVL196
 46550      00000000 
 46551 2126 00000000 		.quad	.LVL198
 46551      00000000 
 46552 212e 0100     		.value	0x1
 46553 2130 51       		.byte	0x51
 46554 2131 00000000 		.quad	0
 46554      00000000 
 46555 2139 00000000 		.quad	0
 46555      00000000 
 46556              	.LLST152:
 46557 2141 00000000 		.quad	.LVL134
 46557      00000000 
 46558 2149 00000000 		.quad	.LVL180
 46558      00000000 
 46559 2151 0100     		.value	0x1
 46560 2153 5F       		.byte	0x5f
 46561 2154 00000000 		.quad	.LVL180
 46561      00000000 
 46562 215c 00000000 		.quad	.LVL181
 46562      00000000 
 46563 2164 0500     		.value	0x5
 46564 2166 91       		.byte	0x91
 46565 2167 908A7F   		.sleb128 -15088
 46566 216a 9F       		.byte	0x9f
 46567 216b 00000000 		.quad	.LVL187
 46567      00000000 
 46568 2173 00000000 		.quad	.LVL190
 46568      00000000 
 46569 217b 0100     		.value	0x1
 46570 217d 5F       		.byte	0x5f
 46571 217e 00000000 		.quad	.LVL198
 46571      00000000 
 46572 2186 00000000 		.quad	.LVL199
 46572      00000000 
 46573 218e 0100     		.value	0x1
 46574 2190 5F       		.byte	0x5f
 46575 2191 00000000 		.quad	.LVL202
 46575      00000000 
 46576 2199 00000000 		.quad	.LVL203
 46576      00000000 
 46577 21a1 0100     		.value	0x1
 46578 21a3 5F       		.byte	0x5f
 46579 21a4 00000000 		.quad	.LVL207
 46579      00000000 
 46580 21ac 00000000 		.quad	.LVL208
 46580      00000000 
 46581 21b4 0100     		.value	0x1
 46582 21b6 5F       		.byte	0x5f
 46583 21b7 00000000 		.quad	0
 46583      00000000 
 46584 21bf 00000000 		.quad	0
 46584      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1152


 46585              	.LLST153:
 46586 21c7 00000000 		.quad	.LVL135
 46586      00000000 
 46587 21cf 00000000 		.quad	.LVL136
 46587      00000000 
 46588 21d7 0900     		.value	0x9
 46589 21d9 70       		.byte	0x70
 46590 21da 00       		.sleb128 0
 46591 21db 0C       		.byte	0xc
 46592 21dc FFFFFFFF 		.long	0xffffffff
 46593 21e0 1A       		.byte	0x1a
 46594 21e1 9F       		.byte	0x9f
 46595 21e2 00000000 		.quad	.LVL136
 46595      00000000 
 46596 21ea 00000000 		.quad	.LVL138
 46596      00000000 
 46597 21f2 0100     		.value	0x1
 46598 21f4 53       		.byte	0x53
 46599 21f5 00000000 		.quad	.LVL138
 46599      00000000 
 46600 21fd 00000000 		.quad	.LVL139
 46600      00000000 
 46601 2205 0100     		.value	0x1
 46602 2207 50       		.byte	0x50
 46603 2208 00000000 		.quad	0
 46603      00000000 
 46604 2210 00000000 		.quad	0
 46604      00000000 
 46605              	.LLST154:
 46606 2218 00000000 		.quad	.LVL135
 46606      00000000 
 46607 2220 00000000 		.quad	.LVL138
 46607      00000000 
 46608 2228 0500     		.value	0x5
 46609 222a 91       		.byte	0x91
 46610 222b A0B17F   		.sleb128 -10080
 46611 222e 9F       		.byte	0x9f
 46612 222f 00000000 		.quad	.LVL138
 46612      00000000 
 46613 2237 00000000 		.quad	.LVL153
 46613      00000000 
 46614 223f 0100     		.value	0x1
 46615 2241 53       		.byte	0x53
 46616 2242 00000000 		.quad	.LVL153
 46616      00000000 
 46617 224a 00000000 		.quad	.LVL155
 46617      00000000 
 46618 2252 0100     		.value	0x1
 46619 2254 54       		.byte	0x54
 46620 2255 00000000 		.quad	.LVL155
 46620      00000000 
 46621 225d 00000000 		.quad	.LVL181
 46621      00000000 
 46622 2265 0500     		.value	0x5
 46623 2267 91       		.byte	0x91
 46624 2268 A0B17F   		.sleb128 -10080
 46625 226b 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1153


 46626 226c 00000000 		.quad	.LVL187
 46626      00000000 
 46627 2274 00000000 		.quad	.LVL190
 46627      00000000 
 46628 227c 0500     		.value	0x5
 46629 227e 91       		.byte	0x91
 46630 227f A0B17F   		.sleb128 -10080
 46631 2282 9F       		.byte	0x9f
 46632 2283 00000000 		.quad	.LVL207
 46632      00000000 
 46633 228b 00000000 		.quad	.LVL208
 46633      00000000 
 46634 2293 0500     		.value	0x5
 46635 2295 91       		.byte	0x91
 46636 2296 A0B17F   		.sleb128 -10080
 46637 2299 9F       		.byte	0x9f
 46638 229a 00000000 		.quad	0
 46638      00000000 
 46639 22a2 00000000 		.quad	0
 46639      00000000 
 46640              	.LLST160:
 46641 22aa 00000000 		.quad	.LVL137
 46641      00000000 
 46642 22b2 00000000 		.quad	.LVL139
 46642      00000000 
 46643 22ba 0200     		.value	0x2
 46644 22bc 31       		.byte	0x31
 46645 22bd 9F       		.byte	0x9f
 46646 22be 00000000 		.quad	.LVL139
 46646      00000000 
 46647 22c6 00000000 		.quad	.LVL145
 46647      00000000 
 46648 22ce 0100     		.value	0x1
 46649 22d0 54       		.byte	0x54
 46650 22d1 00000000 		.quad	0
 46650      00000000 
 46651 22d9 00000000 		.quad	0
 46651      00000000 
 46652              	.LLST161:
 46653 22e1 00000000 		.quad	.LVL139
 46653      00000000 
 46654 22e9 00000000 		.quad	.LVL141
 46654      00000000 
 46655 22f1 0100     		.value	0x1
 46656 22f3 50       		.byte	0x50
 46657 22f4 00000000 		.quad	.LVL141
 46657      00000000 
 46658 22fc 00000000 		.quad	.LVL143
 46658      00000000 
 46659 2304 0A00     		.value	0xa
 46660 2306 74       		.byte	0x74
 46661 2307 00       		.sleb128 0
 46662 2308 0A       		.byte	0xa
 46663 2309 7002     		.value	0x270
 46664 230b 1D       		.byte	0x1d
 46665 230c 72       		.byte	0x72
 46666 230d 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1154


 46667 230e 22       		.byte	0x22
 46668 230f 9F       		.byte	0x9f
 46669 2310 00000000 		.quad	.LVL143
 46669      00000000 
 46670 2318 00000000 		.quad	.LVL145
 46670      00000000 
 46671 2320 0A00     		.value	0xa
 46672 2322 74       		.byte	0x74
 46673 2323 7F       		.sleb128 -1
 46674 2324 0A       		.byte	0xa
 46675 2325 7002     		.value	0x270
 46676 2327 1D       		.byte	0x1d
 46677 2328 72       		.byte	0x72
 46678 2329 00       		.sleb128 0
 46679 232a 22       		.byte	0x22
 46680 232b 9F       		.byte	0x9f
 46681 232c 00000000 		.quad	0
 46681      00000000 
 46682 2334 00000000 		.quad	0
 46682      00000000 
 46683              	.LLST162:
 46684 233c 00000000 		.quad	.LVL141
 46684      00000000 
 46685 2344 00000000 		.quad	.LVL143
 46685      00000000 
 46686 234c 0100     		.value	0x1
 46687 234e 54       		.byte	0x54
 46688 234f 00000000 		.quad	.LVL143
 46688      00000000 
 46689 2357 00000000 		.quad	.LVL145
 46689      00000000 
 46690 235f 0300     		.value	0x3
 46691 2361 74       		.byte	0x74
 46692 2362 7F       		.sleb128 -1
 46693 2363 9F       		.byte	0x9f
 46694 2364 00000000 		.quad	0
 46694      00000000 
 46695 236c 00000000 		.quad	0
 46695      00000000 
 46696              	.LLST164:
 46697 2374 00000000 		.quad	.LVL141
 46697      00000000 
 46698 237c 00000000 		.quad	.LVL143
 46698      00000000 
 46699 2384 0700     		.value	0x7
 46700 2386 74       		.byte	0x74
 46701 2387 00       		.sleb128 0
 46702 2388 0A       		.byte	0xa
 46703 2389 7002     		.value	0x270
 46704 238b 1D       		.byte	0x1d
 46705 238c 9F       		.byte	0x9f
 46706 238d 00000000 		.quad	.LVL143
 46706      00000000 
 46707 2395 00000000 		.quad	.LVL145
 46707      00000000 
 46708 239d 0700     		.value	0x7
 46709 239f 74       		.byte	0x74
GAS LISTING /tmp/ccmMnd7l.s 			page 1155


 46710 23a0 7F       		.sleb128 -1
 46711 23a1 0A       		.byte	0xa
 46712 23a2 7002     		.value	0x270
 46713 23a4 1D       		.byte	0x1d
 46714 23a5 9F       		.byte	0x9f
 46715 23a6 00000000 		.quad	0
 46715      00000000 
 46716 23ae 00000000 		.quad	0
 46716      00000000 
 46717              	.LLST165:
 46718 23b6 00000000 		.quad	.LVL141
 46718      00000000 
 46719 23be 00000000 		.quad	.LVL143
 46719      00000000 
 46720 23c6 0A00     		.value	0xa
 46721 23c8 74       		.byte	0x74
 46722 23c9 00       		.sleb128 0
 46723 23ca 0A       		.byte	0xa
 46724 23cb 7002     		.value	0x270
 46725 23cd 1D       		.byte	0x1d
 46726 23ce 72       		.byte	0x72
 46727 23cf 00       		.sleb128 0
 46728 23d0 22       		.byte	0x22
 46729 23d1 9F       		.byte	0x9f
 46730 23d2 00000000 		.quad	.LVL143
 46730      00000000 
 46731 23da 00000000 		.quad	.LVL145
 46731      00000000 
 46732 23e2 0A00     		.value	0xa
 46733 23e4 74       		.byte	0x74
 46734 23e5 7F       		.sleb128 -1
 46735 23e6 0A       		.byte	0xa
 46736 23e7 7002     		.value	0x270
 46737 23e9 1D       		.byte	0x1d
 46738 23ea 72       		.byte	0x72
 46739 23eb 00       		.sleb128 0
 46740 23ec 22       		.byte	0x22
 46741 23ed 9F       		.byte	0x9f
 46742 23ee 00000000 		.quad	0
 46742      00000000 
 46743 23f6 00000000 		.quad	0
 46743      00000000 
 46744              	.LLST167:
 46745 23fe 00000000 		.quad	.LVL141
 46745      00000000 
 46746 2406 00000000 		.quad	.LVL142
 46746      00000000 
 46747 240e 0A00     		.value	0xa
 46748 2410 74       		.byte	0x74
 46749 2411 00       		.sleb128 0
 46750 2412 0A       		.byte	0xa
 46751 2413 7002     		.value	0x270
 46752 2415 1D       		.byte	0x1d
 46753 2416 72       		.byte	0x72
 46754 2417 00       		.sleb128 0
 46755 2418 22       		.byte	0x22
 46756 2419 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1156


 46757 241a 00000000 		.quad	.LVL142
 46757      00000000 
 46758 2422 00000000 		.quad	.LVL146-1
 46758      00000000 
 46759 242a 0100     		.value	0x1
 46760 242c 50       		.byte	0x50
 46761 242d 00000000 		.quad	0
 46761      00000000 
 46762 2435 00000000 		.quad	0
 46762      00000000 
 46763              	.LLST168:
 46764 243d 00000000 		.quad	.LVL144
 46764      00000000 
 46765 2445 00000000 		.quad	.LVL181
 46765      00000000 
 46766 244d 0A00     		.value	0xa
 46767 244f 03       		.byte	0x3
 46768 2450 00000000 		.quad	.LC5
 46768      00000000 
 46769 2458 9F       		.byte	0x9f
 46770 2459 00000000 		.quad	.LVL187
 46770      00000000 
 46771 2461 00000000 		.quad	.LVL190
 46771      00000000 
 46772 2469 0A00     		.value	0xa
 46773 246b 03       		.byte	0x3
 46774 246c 00000000 		.quad	.LC5
 46774      00000000 
 46775 2474 9F       		.byte	0x9f
 46776 2475 00000000 		.quad	.LVL207
 46776      00000000 
 46777 247d 00000000 		.quad	.LVL208
 46777      00000000 
 46778 2485 0A00     		.value	0xa
 46779 2487 03       		.byte	0x3
 46780 2488 00000000 		.quad	.LC5
 46780      00000000 
 46781 2490 9F       		.byte	0x9f
 46782 2491 00000000 		.quad	0
 46782      00000000 
 46783 2499 00000000 		.quad	0
 46783      00000000 
 46784              	.LLST169:
 46785 24a1 00000000 		.quad	.LVL146
 46785      00000000 
 46786 24a9 00000000 		.quad	.LVL148
 46786      00000000 
 46787 24b1 0100     		.value	0x1
 46788 24b3 5E       		.byte	0x5e
 46789 24b4 00000000 		.quad	.LVL148
 46789      00000000 
 46790 24bc 00000000 		.quad	.LVL181
 46790      00000000 
 46791 24c4 0400     		.value	0x4
 46792 24c6 F3       		.byte	0xf3
 46793 24c7 01       		.uleb128 0x1
 46794 24c8 54       		.byte	0x54
GAS LISTING /tmp/ccmMnd7l.s 			page 1157


 46795 24c9 9F       		.byte	0x9f
 46796 24ca 00000000 		.quad	.LVL187
 46796      00000000 
 46797 24d2 00000000 		.quad	.LVL190
 46797      00000000 
 46798 24da 0400     		.value	0x4
 46799 24dc F3       		.byte	0xf3
 46800 24dd 01       		.uleb128 0x1
 46801 24de 54       		.byte	0x54
 46802 24df 9F       		.byte	0x9f
 46803 24e0 00000000 		.quad	.LVL207
 46803      00000000 
 46804 24e8 00000000 		.quad	.LVL208
 46804      00000000 
 46805 24f0 0400     		.value	0x4
 46806 24f2 F3       		.byte	0xf3
 46807 24f3 01       		.uleb128 0x1
 46808 24f4 54       		.byte	0x54
 46809 24f5 9F       		.byte	0x9f
 46810 24f6 00000000 		.quad	0
 46810      00000000 
 46811 24fe 00000000 		.quad	0
 46811      00000000 
 46812              	.LLST170:
 46813 2506 00000000 		.quad	.LVL148
 46813      00000000 
 46814 250e 00000000 		.quad	.LVL181
 46814      00000000 
 46815 2516 0A00     		.value	0xa
 46816 2518 03       		.byte	0x3
 46817 2519 00000000 		.quad	.LC6
 46817      00000000 
 46818 2521 9F       		.byte	0x9f
 46819 2522 00000000 		.quad	.LVL187
 46819      00000000 
 46820 252a 00000000 		.quad	.LVL190
 46820      00000000 
 46821 2532 0A00     		.value	0xa
 46822 2534 03       		.byte	0x3
 46823 2535 00000000 		.quad	.LC6
 46823      00000000 
 46824 253d 9F       		.byte	0x9f
 46825 253e 00000000 		.quad	.LVL207
 46825      00000000 
 46826 2546 00000000 		.quad	.LVL208
 46826      00000000 
 46827 254e 0A00     		.value	0xa
 46828 2550 03       		.byte	0x3
 46829 2551 00000000 		.quad	.LC6
 46829      00000000 
 46830 2559 9F       		.byte	0x9f
 46831 255a 00000000 		.quad	0
 46831      00000000 
 46832 2562 00000000 		.quad	0
 46832      00000000 
 46833              	.LLST171:
 46834 256a 00000000 		.quad	.LVL148
GAS LISTING /tmp/ccmMnd7l.s 			page 1158


 46834      00000000 
 46835 2572 00000000 		.quad	.LVL149-1
 46835      00000000 
 46836 257a 0100     		.value	0x1
 46837 257c 50       		.byte	0x50
 46838 257d 00000000 		.quad	.LVL149-1
 46838      00000000 
 46839 2585 00000000 		.quad	.LVL156
 46839      00000000 
 46840 258d 0100     		.value	0x1
 46841 258f 5E       		.byte	0x5e
 46842 2590 00000000 		.quad	0
 46842      00000000 
 46843 2598 00000000 		.quad	0
 46843      00000000 
 46844              	.LLST172:
 46845 25a0 00000000 		.quad	.LVL149
 46845      00000000 
 46846 25a8 00000000 		.quad	.LVL156
 46846      00000000 
 46847 25b0 0100     		.value	0x1
 46848 25b2 5E       		.byte	0x5e
 46849 25b3 00000000 		.quad	0
 46849      00000000 
 46850 25bb 00000000 		.quad	0
 46850      00000000 
 46851              	.LLST173:
 46852 25c3 00000000 		.quad	.LVL150
 46852      00000000 
 46853 25cb 00000000 		.quad	.LVL181
 46853      00000000 
 46854 25d3 0600     		.value	0x6
 46855 25d5 F2       		.byte	0xf2
 46856 25d6 00000000 		.long	.Ldebug_info0+63327
 46857 25da 00       		.sleb128 0
 46858 25db 00000000 		.quad	.LVL187
 46858      00000000 
 46859 25e3 00000000 		.quad	.LVL190
 46859      00000000 
 46860 25eb 0600     		.value	0x6
 46861 25ed F2       		.byte	0xf2
 46862 25ee 00000000 		.long	.Ldebug_info0+63327
 46863 25f2 00       		.sleb128 0
 46864 25f3 00000000 		.quad	.LVL207
 46864      00000000 
 46865 25fb 00000000 		.quad	.LVL208
 46865      00000000 
 46866 2603 0600     		.value	0x6
 46867 2605 F2       		.byte	0xf2
 46868 2606 00000000 		.long	.Ldebug_info0+63327
 46869 260a 00       		.sleb128 0
 46870 260b 00000000 		.quad	0
 46870      00000000 
 46871 2613 00000000 		.quad	0
 46871      00000000 
 46872              	.LLST174:
 46873 261b 00000000 		.quad	.LVL154
GAS LISTING /tmp/ccmMnd7l.s 			page 1159


 46873      00000000 
 46874 2623 00000000 		.quad	.LVL155
 46874      00000000 
 46875 262b 0100     		.value	0x1
 46876 262d 54       		.byte	0x54
 46877 262e 00000000 		.quad	.LVL155
 46877      00000000 
 46878 2636 00000000 		.quad	.LVL181
 46878      00000000 
 46879 263e 0500     		.value	0x5
 46880 2640 91       		.byte	0x91
 46881 2641 A0B17F   		.sleb128 -10080
 46882 2644 9F       		.byte	0x9f
 46883 2645 00000000 		.quad	.LVL187
 46883      00000000 
 46884 264d 00000000 		.quad	.LVL190
 46884      00000000 
 46885 2655 0500     		.value	0x5
 46886 2657 91       		.byte	0x91
 46887 2658 A0B17F   		.sleb128 -10080
 46888 265b 9F       		.byte	0x9f
 46889 265c 00000000 		.quad	.LVL207
 46889      00000000 
 46890 2664 00000000 		.quad	.LVL208
 46890      00000000 
 46891 266c 0500     		.value	0x5
 46892 266e 91       		.byte	0x91
 46893 266f A0B17F   		.sleb128 -10080
 46894 2672 9F       		.byte	0x9f
 46895 2673 00000000 		.quad	0
 46895      00000000 
 46896 267b 00000000 		.quad	0
 46896      00000000 
 46897              	.LLST175:
 46898 2683 00000000 		.quad	.LVL154
 46898      00000000 
 46899 268b 00000000 		.quad	.LVL181
 46899      00000000 
 46900 2693 0600     		.value	0x6
 46901 2695 F2       		.byte	0xf2
 46902 2696 00000000 		.long	.Ldebug_info0+61653
 46903 269a 00       		.sleb128 0
 46904 269b 00000000 		.quad	.LVL187
 46904      00000000 
 46905 26a3 00000000 		.quad	.LVL190
 46905      00000000 
 46906 26ab 0600     		.value	0x6
 46907 26ad F2       		.byte	0xf2
 46908 26ae 00000000 		.long	.Ldebug_info0+61653
 46909 26b2 00       		.sleb128 0
 46910 26b3 00000000 		.quad	.LVL207
 46910      00000000 
 46911 26bb 00000000 		.quad	.LVL208
 46911      00000000 
 46912 26c3 0600     		.value	0x6
 46913 26c5 F2       		.byte	0xf2
 46914 26c6 00000000 		.long	.Ldebug_info0+61653
GAS LISTING /tmp/ccmMnd7l.s 			page 1160


 46915 26ca 00       		.sleb128 0
 46916 26cb 00000000 		.quad	0
 46916      00000000 
 46917 26d3 00000000 		.quad	0
 46917      00000000 
 46918              	.LLST178:
 46919 26db 00000000 		.quad	.LVL154
 46919      00000000 
 46920 26e3 00000000 		.quad	.LVL169
 46920      00000000 
 46921 26eb 0100     		.value	0x1
 46922 26ed 56       		.byte	0x56
 46923 26ee 00000000 		.quad	.LVL169
 46923      00000000 
 46924 26f6 00000000 		.quad	.LVL179
 46924      00000000 
 46925 26fe 0300     		.value	0x3
 46926 2700 7E       		.byte	0x7e
 46927 2701 78       		.sleb128 -8
 46928 2702 9F       		.byte	0x9f
 46929 2703 00000000 		.quad	.LVL179
 46929      00000000 
 46930 270b 00000000 		.quad	.LVL181
 46930      00000000 
 46931 2713 0400     		.value	0x4
 46932 2715 91       		.byte	0x91
 46933 2716 B058     		.sleb128 -5072
 46934 2718 9F       		.byte	0x9f
 46935 2719 00000000 		.quad	.LVL187
 46935      00000000 
 46936 2721 00000000 		.quad	.LVL190
 46936      00000000 
 46937 2729 0300     		.value	0x3
 46938 272b 7E       		.byte	0x7e
 46939 272c 78       		.sleb128 -8
 46940 272d 9F       		.byte	0x9f
 46941 272e 00000000 		.quad	.LVL207
 46941      00000000 
 46942 2736 00000000 		.quad	.LVL208
 46942      00000000 
 46943 273e 0300     		.value	0x3
 46944 2740 7E       		.byte	0x7e
 46945 2741 78       		.sleb128 -8
 46946 2742 9F       		.byte	0x9f
 46947 2743 00000000 		.quad	0
 46947      00000000 
 46948 274b 00000000 		.quad	0
 46948      00000000 
 46949              	.LLST180:
 46950 2753 00000000 		.quad	.LVL154
 46950      00000000 
 46951 275b 00000000 		.quad	.LVL155
 46951      00000000 
 46952 2763 0100     		.value	0x1
 46953 2765 55       		.byte	0x55
 46954 2766 00000000 		.quad	.LVL155
 46954      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1161


 46955 276e 00000000 		.quad	.LVL181
 46955      00000000 
 46956 2776 0400     		.value	0x4
 46957 2778 91       		.byte	0x91
 46958 2779 B858     		.sleb128 -5064
 46959 277b 9F       		.byte	0x9f
 46960 277c 00000000 		.quad	.LVL187
 46960      00000000 
 46961 2784 00000000 		.quad	.LVL190
 46961      00000000 
 46962 278c 0400     		.value	0x4
 46963 278e 91       		.byte	0x91
 46964 278f B858     		.sleb128 -5064
 46965 2791 9F       		.byte	0x9f
 46966 2792 00000000 		.quad	.LVL207
 46966      00000000 
 46967 279a 00000000 		.quad	.LVL208
 46967      00000000 
 46968 27a2 0400     		.value	0x4
 46969 27a4 91       		.byte	0x91
 46970 27a5 B858     		.sleb128 -5064
 46971 27a7 9F       		.byte	0x9f
 46972 27a8 00000000 		.quad	0
 46972      00000000 
 46973 27b0 00000000 		.quad	0
 46973      00000000 
 46974              	.LLST185:
 46975 27b8 00000000 		.quad	.LVL155
 46975      00000000 
 46976 27c0 00000000 		.quad	.LVL178
 46976      00000000 
 46977 27c8 0100     		.value	0x1
 46978 27ca 5C       		.byte	0x5c
 46979 27cb 00000000 		.quad	.LVL178
 46979      00000000 
 46980 27d3 00000000 		.quad	.LVL181
 46980      00000000 
 46981 27db 0100     		.value	0x1
 46982 27dd 50       		.byte	0x50
 46983 27de 00000000 		.quad	.LVL187
 46983      00000000 
 46984 27e6 00000000 		.quad	.LVL190
 46984      00000000 
 46985 27ee 0100     		.value	0x1
 46986 27f0 5C       		.byte	0x5c
 46987 27f1 00000000 		.quad	.LVL207
 46987      00000000 
 46988 27f9 00000000 		.quad	.LVL208
 46988      00000000 
 46989 2801 0100     		.value	0x1
 46990 2803 5C       		.byte	0x5c
 46991 2804 00000000 		.quad	0
 46991      00000000 
 46992 280c 00000000 		.quad	0
 46992      00000000 
 46993              	.LLST188:
 46994 2814 00000000 		.quad	.LVL155
GAS LISTING /tmp/ccmMnd7l.s 			page 1162


 46994      00000000 
 46995 281c 00000000 		.quad	.LVL178
 46995      00000000 
 46996 2824 0300     		.value	0x3
 46997 2826 7C       		.byte	0x7c
 46998 2827 08       		.sleb128 8
 46999 2828 9F       		.byte	0x9f
 47000 2829 00000000 		.quad	.LVL178
 47000      00000000 
 47001 2831 00000000 		.quad	.LVL181
 47001      00000000 
 47002 2839 0300     		.value	0x3
 47003 283b 70       		.byte	0x70
 47004 283c 08       		.sleb128 8
 47005 283d 9F       		.byte	0x9f
 47006 283e 00000000 		.quad	.LVL187
 47006      00000000 
 47007 2846 00000000 		.quad	.LVL190
 47007      00000000 
 47008 284e 0300     		.value	0x3
 47009 2850 7C       		.byte	0x7c
 47010 2851 08       		.sleb128 8
 47011 2852 9F       		.byte	0x9f
 47012 2853 00000000 		.quad	.LVL207
 47012      00000000 
 47013 285b 00000000 		.quad	.LVL208
 47013      00000000 
 47014 2863 0300     		.value	0x3
 47015 2865 7C       		.byte	0x7c
 47016 2866 08       		.sleb128 8
 47017 2867 9F       		.byte	0x9f
 47018 2868 00000000 		.quad	0
 47018      00000000 
 47019 2870 00000000 		.quad	0
 47019      00000000 
 47020              	.LLST189:
 47021 2878 00000000 		.quad	.LVL155
 47021      00000000 
 47022 2880 00000000 		.quad	.LVL169
 47022      00000000 
 47023 2888 0100     		.value	0x1
 47024 288a 56       		.byte	0x56
 47025 288b 00000000 		.quad	.LVL169
 47025      00000000 
 47026 2893 00000000 		.quad	.LVL179
 47026      00000000 
 47027 289b 0300     		.value	0x3
 47028 289d 7E       		.byte	0x7e
 47029 289e 78       		.sleb128 -8
 47030 289f 9F       		.byte	0x9f
 47031 28a0 00000000 		.quad	.LVL179
 47031      00000000 
 47032 28a8 00000000 		.quad	.LVL181
 47032      00000000 
 47033 28b0 0400     		.value	0x4
 47034 28b2 91       		.byte	0x91
 47035 28b3 B058     		.sleb128 -5072
GAS LISTING /tmp/ccmMnd7l.s 			page 1163


 47036 28b5 9F       		.byte	0x9f
 47037 28b6 00000000 		.quad	.LVL187
 47037      00000000 
 47038 28be 00000000 		.quad	.LVL190
 47038      00000000 
 47039 28c6 0300     		.value	0x3
 47040 28c8 7E       		.byte	0x7e
 47041 28c9 78       		.sleb128 -8
 47042 28ca 9F       		.byte	0x9f
 47043 28cb 00000000 		.quad	.LVL207
 47043      00000000 
 47044 28d3 00000000 		.quad	.LVL208
 47044      00000000 
 47045 28db 0300     		.value	0x3
 47046 28dd 7E       		.byte	0x7e
 47047 28de 78       		.sleb128 -8
 47048 28df 9F       		.byte	0x9f
 47049 28e0 00000000 		.quad	0
 47049      00000000 
 47050 28e8 00000000 		.quad	0
 47050      00000000 
 47051              	.LLST190:
 47052 28f0 00000000 		.quad	.LVL155
 47052      00000000 
 47053 28f8 00000000 		.quad	.LVL167
 47053      00000000 
 47054 2900 0300     		.value	0x3
 47055 2902 53       		.byte	0x53
 47056 2903 93       		.byte	0x93
 47057 2904 08       		.uleb128 0x8
 47058 2905 00000000 		.quad	0
 47058      00000000 
 47059 290d 00000000 		.quad	0
 47059      00000000 
 47060              	.LLST191:
 47061 2915 00000000 		.quad	.LVL155
 47061      00000000 
 47062 291d 00000000 		.quad	.LVL157
 47062      00000000 
 47063 2925 0300     		.value	0x3
 47064 2927 5D       		.byte	0x5d
 47065 2928 93       		.byte	0x93
 47066 2929 08       		.uleb128 0x8
 47067 292a 00000000 		.quad	.LVL157
 47067      00000000 
 47068 2932 00000000 		.quad	.LVL159
 47068      00000000 
 47069 293a 0300     		.value	0x3
 47070 293c 5D       		.byte	0x5d
 47071 293d 93       		.byte	0x93
 47072 293e 08       		.uleb128 0x8
 47073 293f 00000000 		.quad	.LVL159
 47073      00000000 
 47074 2947 00000000 		.quad	.LVL160
 47074      00000000 
 47075 294f 0500     		.value	0x5
 47076 2951 7D       		.byte	0x7d
GAS LISTING /tmp/ccmMnd7l.s 			page 1164


 47077 2952 7C       		.sleb128 -4
 47078 2953 9F       		.byte	0x9f
 47079 2954 93       		.byte	0x93
 47080 2955 08       		.uleb128 0x8
 47081 2956 00000000 		.quad	0
 47081      00000000 
 47082 295e 00000000 		.quad	0
 47082      00000000 
 47083              	.LLST192:
 47084 2966 00000000 		.quad	.LVL157
 47084      00000000 
 47085 296e 00000000 		.quad	.LVL161
 47085      00000000 
 47086 2976 0100     		.value	0x1
 47087 2978 56       		.byte	0x56
 47088 2979 00000000 		.quad	0
 47088      00000000 
 47089 2981 00000000 		.quad	0
 47089      00000000 
 47090              	.LLST194:
 47091 2989 00000000 		.quad	.LVL157
 47091      00000000 
 47092 2991 00000000 		.quad	.LVL161
 47092      00000000 
 47093 2999 0400     		.value	0x4
 47094 299b 91       		.byte	0x91
 47095 299c B858     		.sleb128 -5064
 47096 299e 9F       		.byte	0x9f
 47097 299f 00000000 		.quad	0
 47097      00000000 
 47098 29a7 00000000 		.quad	0
 47098      00000000 
 47099              	.LLST196:
 47100 29af 00000000 		.quad	.LVL161
 47100      00000000 
 47101 29b7 00000000 		.quad	.LVL181
 47101      00000000 
 47102 29bf 0600     		.value	0x6
 47103 29c1 F2       		.byte	0xf2
 47104 29c2 00000000 		.long	.Ldebug_info0+63327
 47105 29c6 00       		.sleb128 0
 47106 29c7 00000000 		.quad	.LVL187
 47106      00000000 
 47107 29cf 00000000 		.quad	.LVL190
 47107      00000000 
 47108 29d7 0600     		.value	0x6
 47109 29d9 F2       		.byte	0xf2
 47110 29da 00000000 		.long	.Ldebug_info0+63327
 47111 29de 00       		.sleb128 0
 47112 29df 00000000 		.quad	.LVL207
 47112      00000000 
 47113 29e7 00000000 		.quad	.LVL208
 47113      00000000 
 47114 29ef 0600     		.value	0x6
 47115 29f1 F2       		.byte	0xf2
 47116 29f2 00000000 		.long	.Ldebug_info0+63327
 47117 29f6 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1165


 47118 29f7 00000000 		.quad	0
 47118      00000000 
 47119 29ff 00000000 		.quad	0
 47119      00000000 
 47120              	.LLST197:
 47121 2a07 00000000 		.quad	.LVL163
 47121      00000000 
 47122 2a0f 00000000 		.quad	.LVL164-1
 47122      00000000 
 47123 2a17 0100     		.value	0x1
 47124 2a19 61       		.byte	0x61
 47125 2a1a 00000000 		.quad	.LVL164-1
 47125      00000000 
 47126 2a22 00000000 		.quad	.LVL181
 47126      00000000 
 47127 2a2a 0400     		.value	0x4
 47128 2a2c 91       		.byte	0x91
 47129 2a2d F8897F   		.sleb128 -15112
 47130 2a30 00000000 		.quad	.LVL187
 47130      00000000 
 47131 2a38 00000000 		.quad	.LVL190
 47131      00000000 
 47132 2a40 0400     		.value	0x4
 47133 2a42 91       		.byte	0x91
 47134 2a43 F8897F   		.sleb128 -15112
 47135 2a46 00000000 		.quad	.LVL207
 47135      00000000 
 47136 2a4e 00000000 		.quad	.LVL208
 47136      00000000 
 47137 2a56 0400     		.value	0x4
 47138 2a58 91       		.byte	0x91
 47139 2a59 F8897F   		.sleb128 -15112
 47140 2a5c 00000000 		.quad	0
 47140      00000000 
 47141 2a64 00000000 		.quad	0
 47141      00000000 
 47142              	.LLST198:
 47143 2a6c 00000000 		.quad	.LVL163
 47143      00000000 
 47144 2a74 00000000 		.quad	.LVL181
 47144      00000000 
 47145 2a7c 0A00     		.value	0xa
 47146 2a7e 03       		.byte	0x3
 47147 2a7f 00000000 		.quad	.LC7
 47147      00000000 
 47148 2a87 9F       		.byte	0x9f
 47149 2a88 00000000 		.quad	.LVL187
 47149      00000000 
 47150 2a90 00000000 		.quad	.LVL190
 47150      00000000 
 47151 2a98 0A00     		.value	0xa
 47152 2a9a 03       		.byte	0x3
 47153 2a9b 00000000 		.quad	.LC7
 47153      00000000 
 47154 2aa3 9F       		.byte	0x9f
 47155 2aa4 00000000 		.quad	.LVL207
 47155      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1166


 47156 2aac 00000000 		.quad	.LVL208
 47156      00000000 
 47157 2ab4 0A00     		.value	0xa
 47158 2ab6 03       		.byte	0x3
 47159 2ab7 00000000 		.quad	.LC7
 47159      00000000 
 47160 2abf 9F       		.byte	0x9f
 47161 2ac0 00000000 		.quad	0
 47161      00000000 
 47162 2ac8 00000000 		.quad	0
 47162      00000000 
 47163              	.LLST199:
 47164 2ad0 00000000 		.quad	.LVL164
 47164      00000000 
 47165 2ad8 00000000 		.quad	.LVL165
 47165      00000000 
 47166 2ae0 1A00     		.value	0x1a
 47167 2ae2 91       		.byte	0x91
 47168 2ae3 F8897F   		.sleb128 -15112
 47169 2ae6 F6       		.byte	0xf6
 47170 2ae7 08       		.byte	0x8
 47171 2ae8 29       		.uleb128 0x29
 47172 2ae9 77       		.byte	0x77
 47173 2aea 00       		.sleb128 0
 47174 2aeb F6       		.byte	0xf6
 47175 2aec 08       		.byte	0x8
 47176 2aed 29       		.uleb128 0x29
 47177 2aee 1C       		.byte	0x1c
 47178 2aef F4       		.byte	0xf4
 47179 2af0 29       		.uleb128 0x29
 47180 2af1 08       		.byte	0x8
 47181 2af2 00000000 		.long	0
 47182 2af6 00408F40 		.long	0x408f4000
 47183 2afa 1E       		.byte	0x1e
 47184 2afb 9F       		.byte	0x9f
 47185 2afc 00000000 		.quad	.LVL165
 47185      00000000 
 47186 2b04 00000000 		.quad	.LVL166-1
 47186      00000000 
 47187 2b0c 0100     		.value	0x1
 47188 2b0e 61       		.byte	0x61
 47189 2b0f 00000000 		.quad	.LVL166-1
 47189      00000000 
 47190 2b17 00000000 		.quad	.LVL175
 47190      00000000 
 47191 2b1f 1A00     		.value	0x1a
 47192 2b21 91       		.byte	0x91
 47193 2b22 F8897F   		.sleb128 -15112
 47194 2b25 F6       		.byte	0xf6
 47195 2b26 08       		.byte	0x8
 47196 2b27 29       		.uleb128 0x29
 47197 2b28 77       		.byte	0x77
 47198 2b29 00       		.sleb128 0
 47199 2b2a F6       		.byte	0xf6
 47200 2b2b 08       		.byte	0x8
 47201 2b2c 29       		.uleb128 0x29
 47202 2b2d 1C       		.byte	0x1c
GAS LISTING /tmp/ccmMnd7l.s 			page 1167


 47203 2b2e F4       		.byte	0xf4
 47204 2b2f 29       		.uleb128 0x29
 47205 2b30 08       		.byte	0x8
 47206 2b31 00000000 		.long	0
 47207 2b35 00408F40 		.long	0x408f4000
 47208 2b39 1E       		.byte	0x1e
 47209 2b3a 9F       		.byte	0x9f
 47210 2b3b 00000000 		.quad	.LVL175
 47210      00000000 
 47211 2b43 00000000 		.quad	.LVL181
 47211      00000000 
 47212 2b4b 1C00     		.value	0x1c
 47213 2b4d 91       		.byte	0x91
 47214 2b4e F8897F   		.sleb128 -15112
 47215 2b51 F6       		.byte	0xf6
 47216 2b52 08       		.byte	0x8
 47217 2b53 29       		.uleb128 0x29
 47218 2b54 91       		.byte	0x91
 47219 2b55 F0897F   		.sleb128 -15120
 47220 2b58 F6       		.byte	0xf6
 47221 2b59 08       		.byte	0x8
 47222 2b5a 29       		.uleb128 0x29
 47223 2b5b 1C       		.byte	0x1c
 47224 2b5c F4       		.byte	0xf4
 47225 2b5d 29       		.uleb128 0x29
 47226 2b5e 08       		.byte	0x8
 47227 2b5f 00000000 		.long	0
 47228 2b63 00408F40 		.long	0x408f4000
 47229 2b67 1E       		.byte	0x1e
 47230 2b68 9F       		.byte	0x9f
 47231 2b69 00000000 		.quad	.LVL187
 47231      00000000 
 47232 2b71 00000000 		.quad	.LVL190
 47232      00000000 
 47233 2b79 1A00     		.value	0x1a
 47234 2b7b 91       		.byte	0x91
 47235 2b7c F8897F   		.sleb128 -15112
 47236 2b7f F6       		.byte	0xf6
 47237 2b80 08       		.byte	0x8
 47238 2b81 29       		.uleb128 0x29
 47239 2b82 77       		.byte	0x77
 47240 2b83 00       		.sleb128 0
 47241 2b84 F6       		.byte	0xf6
 47242 2b85 08       		.byte	0x8
 47243 2b86 29       		.uleb128 0x29
 47244 2b87 1C       		.byte	0x1c
 47245 2b88 F4       		.byte	0xf4
 47246 2b89 29       		.uleb128 0x29
 47247 2b8a 08       		.byte	0x8
 47248 2b8b 00000000 		.long	0
 47249 2b8f 00408F40 		.long	0x408f4000
 47250 2b93 1E       		.byte	0x1e
 47251 2b94 9F       		.byte	0x9f
 47252 2b95 00000000 		.quad	.LVL207
 47252      00000000 
 47253 2b9d 00000000 		.quad	.LVL208
 47253      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1168


 47254 2ba5 1A00     		.value	0x1a
 47255 2ba7 91       		.byte	0x91
 47256 2ba8 F8897F   		.sleb128 -15112
 47257 2bab F6       		.byte	0xf6
 47258 2bac 08       		.byte	0x8
 47259 2bad 29       		.uleb128 0x29
 47260 2bae 77       		.byte	0x77
 47261 2baf 00       		.sleb128 0
 47262 2bb0 F6       		.byte	0xf6
 47263 2bb1 08       		.byte	0x8
 47264 2bb2 29       		.uleb128 0x29
 47265 2bb3 1C       		.byte	0x1c
 47266 2bb4 F4       		.byte	0xf4
 47267 2bb5 29       		.uleb128 0x29
 47268 2bb6 08       		.byte	0x8
 47269 2bb7 00000000 		.long	0
 47270 2bbb 00408F40 		.long	0x408f4000
 47271 2bbf 1E       		.byte	0x1e
 47272 2bc0 9F       		.byte	0x9f
 47273 2bc1 00000000 		.quad	0
 47273      00000000 
 47274 2bc9 00000000 		.quad	0
 47274      00000000 
 47275              	.LLST200:
 47276 2bd1 00000000 		.quad	.LVL167
 47276      00000000 
 47277 2bd9 00000000 		.quad	.LVL181
 47277      00000000 
 47278 2be1 0A00     		.value	0xa
 47279 2be3 03       		.byte	0x3
 47280 2be4 00000000 		.quad	.LC9
 47280      00000000 
 47281 2bec 9F       		.byte	0x9f
 47282 2bed 00000000 		.quad	.LVL187
 47282      00000000 
 47283 2bf5 00000000 		.quad	.LVL190
 47283      00000000 
 47284 2bfd 0A00     		.value	0xa
 47285 2bff 03       		.byte	0x3
 47286 2c00 00000000 		.quad	.LC9
 47286      00000000 
 47287 2c08 9F       		.byte	0x9f
 47288 2c09 00000000 		.quad	.LVL207
 47288      00000000 
 47289 2c11 00000000 		.quad	.LVL208
 47289      00000000 
 47290 2c19 0A00     		.value	0xa
 47291 2c1b 03       		.byte	0x3
 47292 2c1c 00000000 		.quad	.LC9
 47292      00000000 
 47293 2c24 9F       		.byte	0x9f
 47294 2c25 00000000 		.quad	0
 47294      00000000 
 47295 2c2d 00000000 		.quad	0
 47295      00000000 
 47296              	.LLST201:
 47297 2c35 00000000 		.quad	.LVL167
GAS LISTING /tmp/ccmMnd7l.s 			page 1169


 47297      00000000 
 47298 2c3d 00000000 		.quad	.LVL168-1
 47298      00000000 
 47299 2c45 0100     		.value	0x1
 47300 2c47 50       		.byte	0x50
 47301 2c48 00000000 		.quad	.LVL168-1
 47301      00000000 
 47302 2c50 00000000 		.quad	.LVL176
 47302      00000000 
 47303 2c58 0100     		.value	0x1
 47304 2c5a 53       		.byte	0x53
 47305 2c5b 00000000 		.quad	.LVL187
 47305      00000000 
 47306 2c63 00000000 		.quad	.LVL190
 47306      00000000 
 47307 2c6b 0100     		.value	0x1
 47308 2c6d 53       		.byte	0x53
 47309 2c6e 00000000 		.quad	.LVL207
 47309      00000000 
 47310 2c76 00000000 		.quad	.LVL208
 47310      00000000 
 47311 2c7e 0100     		.value	0x1
 47312 2c80 53       		.byte	0x53
 47313 2c81 00000000 		.quad	0
 47313      00000000 
 47314 2c89 00000000 		.quad	0
 47314      00000000 
 47315              	.LLST202:
 47316 2c91 00000000 		.quad	.LVL168
 47316      00000000 
 47317 2c99 00000000 		.quad	.LVL176
 47317      00000000 
 47318 2ca1 0100     		.value	0x1
 47319 2ca3 53       		.byte	0x53
 47320 2ca4 00000000 		.quad	.LVL187
 47320      00000000 
 47321 2cac 00000000 		.quad	.LVL190
 47321      00000000 
 47322 2cb4 0100     		.value	0x1
 47323 2cb6 53       		.byte	0x53
 47324 2cb7 00000000 		.quad	.LVL207
 47324      00000000 
 47325 2cbf 00000000 		.quad	.LVL208
 47325      00000000 
 47326 2cc7 0100     		.value	0x1
 47327 2cc9 53       		.byte	0x53
 47328 2cca 00000000 		.quad	0
 47328      00000000 
 47329 2cd2 00000000 		.quad	0
 47329      00000000 
 47330              	.LLST203:
 47331 2cda 00000000 		.quad	.LVL168
 47331      00000000 
 47332 2ce2 00000000 		.quad	.LVL181
 47332      00000000 
 47333 2cea 0200     		.value	0x2
 47334 2cec 3A       		.byte	0x3a
GAS LISTING /tmp/ccmMnd7l.s 			page 1170


 47335 2ced 9F       		.byte	0x9f
 47336 2cee 00000000 		.quad	.LVL187
 47336      00000000 
 47337 2cf6 00000000 		.quad	.LVL190
 47337      00000000 
 47338 2cfe 0200     		.value	0x2
 47339 2d00 3A       		.byte	0x3a
 47340 2d01 9F       		.byte	0x9f
 47341 2d02 00000000 		.quad	.LVL207
 47341      00000000 
 47342 2d0a 00000000 		.quad	.LVL208
 47342      00000000 
 47343 2d12 0200     		.value	0x2
 47344 2d14 3A       		.byte	0x3a
 47345 2d15 9F       		.byte	0x9f
 47346 2d16 00000000 		.quad	0
 47346      00000000 
 47347 2d1e 00000000 		.quad	0
 47347      00000000 
 47348              	.LLST204:
 47349 2d26 00000000 		.quad	.LVL168
 47349      00000000 
 47350 2d2e 00000000 		.quad	.LVL171
 47350      00000000 
 47351 2d36 0A00     		.value	0xa
 47352 2d38 73       		.byte	0x73
 47353 2d39 00       		.sleb128 0
 47354 2d3a 73       		.byte	0x73
 47355 2d3b 00       		.sleb128 0
 47356 2d3c 06       		.byte	0x6
 47357 2d3d 48       		.byte	0x48
 47358 2d3e 1C       		.byte	0x1c
 47359 2d3f 06       		.byte	0x6
 47360 2d40 22       		.byte	0x22
 47361 2d41 9F       		.byte	0x9f
 47362 2d42 00000000 		.quad	.LVL187
 47362      00000000 
 47363 2d4a 00000000 		.quad	.LVL188-1
 47363      00000000 
 47364 2d52 0600     		.value	0x6
 47365 2d54 73       		.byte	0x73
 47366 2d55 00       		.sleb128 0
 47367 2d56 70       		.byte	0x70
 47368 2d57 00       		.sleb128 0
 47369 2d58 22       		.byte	0x22
 47370 2d59 9F       		.byte	0x9f
 47371 2d5a 00000000 		.quad	.LVL207
 47371      00000000 
 47372 2d62 00000000 		.quad	.LVL208-1
 47372      00000000 
 47373 2d6a 0600     		.value	0x6
 47374 2d6c 73       		.byte	0x73
 47375 2d6d 00       		.sleb128 0
 47376 2d6e 70       		.byte	0x70
 47377 2d6f 00       		.sleb128 0
 47378 2d70 22       		.byte	0x22
 47379 2d71 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1171


 47380 2d72 00000000 		.quad	0
 47380      00000000 
 47381 2d7a 00000000 		.quad	0
 47381      00000000 
 47382              	.LLST205:
 47383 2d82 00000000 		.quad	.LVL169
 47383      00000000 
 47384 2d8a 00000000 		.quad	.LVL177
 47384      00000000 
 47385 2d92 0100     		.value	0x1
 47386 2d94 56       		.byte	0x56
 47387 2d95 00000000 		.quad	.LVL187
 47387      00000000 
 47388 2d9d 00000000 		.quad	.LVL190
 47388      00000000 
 47389 2da5 0100     		.value	0x1
 47390 2da7 56       		.byte	0x56
 47391 2da8 00000000 		.quad	.LVL207
 47391      00000000 
 47392 2db0 00000000 		.quad	.LVL208
 47392      00000000 
 47393 2db8 0100     		.value	0x1
 47394 2dba 56       		.byte	0x56
 47395 2dbb 00000000 		.quad	0
 47395      00000000 
 47396 2dc3 00000000 		.quad	0
 47396      00000000 
 47397              	.LLST206:
 47398 2dcb 00000000 		.quad	.LVL170
 47398      00000000 
 47399 2dd3 00000000 		.quad	.LVL181
 47399      00000000 
 47400 2ddb 0200     		.value	0x2
 47401 2ddd 3A       		.byte	0x3a
 47402 2dde 9F       		.byte	0x9f
 47403 2ddf 00000000 		.quad	.LVL187
 47403      00000000 
 47404 2de7 00000000 		.quad	.LVL190
 47404      00000000 
 47405 2def 0200     		.value	0x2
 47406 2df1 3A       		.byte	0x3a
 47407 2df2 9F       		.byte	0x9f
 47408 2df3 00000000 		.quad	0
 47408      00000000 
 47409 2dfb 00000000 		.quad	0
 47409      00000000 
 47410              	.LLST207:
 47411 2e03 00000000 		.quad	.LVL170
 47411      00000000 
 47412 2e0b 00000000 		.quad	.LVL177
 47412      00000000 
 47413 2e13 0100     		.value	0x1
 47414 2e15 56       		.byte	0x56
 47415 2e16 00000000 		.quad	.LVL187
 47415      00000000 
 47416 2e1e 00000000 		.quad	.LVL190
 47416      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1172


 47417 2e26 0100     		.value	0x1
 47418 2e28 56       		.byte	0x56
 47419 2e29 00000000 		.quad	0
 47419      00000000 
 47420 2e31 00000000 		.quad	0
 47420      00000000 
 47421              	.LLST208:
 47422 2e39 00000000 		.quad	.LVL187
 47422      00000000 
 47423 2e41 00000000 		.quad	.LVL190
 47423      00000000 
 47424 2e49 0200     		.value	0x2
 47425 2e4b 3A       		.byte	0x3a
 47426 2e4c 9F       		.byte	0x9f
 47427 2e4d 00000000 		.quad	0
 47427      00000000 
 47428 2e55 00000000 		.quad	0
 47428      00000000 
 47429              	.LLST209:
 47430 2e5d 00000000 		.quad	.LVL187
 47430      00000000 
 47431 2e65 00000000 		.quad	.LVL190
 47431      00000000 
 47432 2e6d 0100     		.value	0x1
 47433 2e6f 56       		.byte	0x56
 47434 2e70 00000000 		.quad	0
 47434      00000000 
 47435 2e78 00000000 		.quad	0
 47435      00000000 
 47436              	.LLST210:
 47437 2e80 00000000 		.quad	.LVL172
 47437      00000000 
 47438 2e88 00000000 		.quad	.LVL173-1
 47438      00000000 
 47439 2e90 0100     		.value	0x1
 47440 2e92 50       		.byte	0x50
 47441 2e93 00000000 		.quad	0
 47441      00000000 
 47442 2e9b 00000000 		.quad	0
 47442      00000000 
 47443              	.LLST211:
 47444 2ea3 00000000 		.quad	.LVL173
 47444      00000000 
 47445 2eab 00000000 		.quad	.LVL180
 47445      00000000 
 47446 2eb3 0100     		.value	0x1
 47447 2eb5 5F       		.byte	0x5f
 47448 2eb6 00000000 		.quad	.LVL180
 47448      00000000 
 47449 2ebe 00000000 		.quad	.LVL181
 47449      00000000 
 47450 2ec6 0500     		.value	0x5
 47451 2ec8 91       		.byte	0x91
 47452 2ec9 908A7F   		.sleb128 -15088
 47453 2ecc 9F       		.byte	0x9f
 47454 2ecd 00000000 		.quad	0
 47454      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1173


 47455 2ed5 00000000 		.quad	0
 47455      00000000 
 47456              	.LLST212:
 47457 2edd 00000000 		.quad	.LVL202
 47457      00000000 
 47458 2ee5 00000000 		.quad	.LVL203
 47458      00000000 
 47459 2eed 0100     		.value	0x1
 47460 2eef 5F       		.byte	0x5f
 47461 2ef0 00000000 		.quad	0
 47461      00000000 
 47462 2ef8 00000000 		.quad	0
 47462      00000000 
 47463              	.LLST213:
 47464 2f00 00000000 		.quad	.LVL203
 47464      00000000 
 47465 2f08 00000000 		.quad	.LVL207
 47465      00000000 
 47466 2f10 0100     		.value	0x1
 47467 2f12 5C       		.byte	0x5c
 47468 2f13 00000000 		.quad	0
 47468      00000000 
 47469 2f1b 00000000 		.quad	0
 47469      00000000 
 47470              	.LLST215:
 47471 2f23 00000000 		.quad	.LVL204
 47471      00000000 
 47472 2f2b 00000000 		.quad	.LVL206-1
 47472      00000000 
 47473 2f33 0A00     		.value	0xa
 47474 2f35 7C       		.byte	0x7c
 47475 2f36 10       		.sleb128 16
 47476 2f37 06       		.byte	0x6
 47477 2f38 7C       		.byte	0x7c
 47478 2f39 00       		.sleb128 0
 47479 2f3a 06       		.byte	0x6
 47480 2f3b 1C       		.byte	0x1c
 47481 2f3c 34       		.byte	0x34
 47482 2f3d 1B       		.byte	0x1b
 47483 2f3e 9F       		.byte	0x9f
 47484 2f3f 00000000 		.quad	0
 47484      00000000 
 47485 2f47 00000000 		.quad	0
 47485      00000000 
 47486              	.LLST216:
 47487 2f4f 00000000 		.quad	.LVL204
 47487      00000000 
 47488 2f57 00000000 		.quad	.LVL206-1
 47488      00000000 
 47489 2f5f 0200     		.value	0x2
 47490 2f61 7C       		.byte	0x7c
 47491 2f62 00       		.sleb128 0
 47492 2f63 00000000 		.quad	0
 47492      00000000 
 47493 2f6b 00000000 		.quad	0
 47493      00000000 
 47494              	.LLST217:
GAS LISTING /tmp/ccmMnd7l.s 			page 1174


 47495 2f73 00000000 		.quad	.LVL205
 47495      00000000 
 47496 2f7b 00000000 		.quad	.LVL206-1
 47496      00000000 
 47497 2f83 0A00     		.value	0xa
 47498 2f85 7C       		.byte	0x7c
 47499 2f86 10       		.sleb128 16
 47500 2f87 06       		.byte	0x6
 47501 2f88 7C       		.byte	0x7c
 47502 2f89 00       		.sleb128 0
 47503 2f8a 06       		.byte	0x6
 47504 2f8b 1C       		.byte	0x1c
 47505 2f8c 34       		.byte	0x34
 47506 2f8d 1B       		.byte	0x1b
 47507 2f8e 9F       		.byte	0x9f
 47508 2f8f 00000000 		.quad	0
 47508      00000000 
 47509 2f97 00000000 		.quad	0
 47509      00000000 
 47510              	.LLST218:
 47511 2f9f 00000000 		.quad	.LVL205
 47511      00000000 
 47512 2fa7 00000000 		.quad	.LVL206-1
 47512      00000000 
 47513 2faf 0200     		.value	0x2
 47514 2fb1 7C       		.byte	0x7c
 47515 2fb2 00       		.sleb128 0
 47516 2fb3 00000000 		.quad	0
 47516      00000000 
 47517 2fbb 00000000 		.quad	0
 47517      00000000 
 47518              	.LLST221:
 47519 2fc3 00000000 		.quad	.LVL209
 47519      00000000 
 47520 2fcb 00000000 		.quad	.LVL214
 47520      00000000 
 47521 2fd3 0500     		.value	0x5
 47522 2fd5 91       		.byte	0x91
 47523 2fd6 A0B17F   		.sleb128 -10080
 47524 2fd9 9F       		.byte	0x9f
 47525 2fda 00000000 		.quad	.LVL214
 47525      00000000 
 47526 2fe2 00000000 		.quad	.LVL215-1
 47526      00000000 
 47527 2fea 0100     		.value	0x1
 47528 2fec 54       		.byte	0x54
 47529 2fed 00000000 		.quad	.LVL215-1
 47529      00000000 
 47530 2ff5 00000000 		.quad	.LFE6050
 47530      00000000 
 47531 2ffd 0500     		.value	0x5
 47532 2fff 91       		.byte	0x91
 47533 3000 A0B17F   		.sleb128 -10080
 47534 3003 9F       		.byte	0x9f
 47535 3004 00000000 		.quad	0
 47535      00000000 
 47536 300c 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1175


 47536      00000000 
 47537              	.LLST222:
 47538 3014 00000000 		.quad	.LVL209
 47538      00000000 
 47539 301c 00000000 		.quad	.LVL215-1
 47539      00000000 
 47540 3024 0100     		.value	0x1
 47541 3026 55       		.byte	0x55
 47542 3027 00000000 		.quad	.LVL216
 47542      00000000 
 47543 302f 00000000 		.quad	.LFE6050
 47543      00000000 
 47544 3037 0100     		.value	0x1
 47545 3039 55       		.byte	0x55
 47546 303a 00000000 		.quad	0
 47546      00000000 
 47547 3042 00000000 		.quad	0
 47547      00000000 
 47548              	.LLST223:
 47549 304a 00000000 		.quad	.LVL210
 47549      00000000 
 47550 3052 00000000 		.quad	.LVL214
 47550      00000000 
 47551 305a 0500     		.value	0x5
 47552 305c 91       		.byte	0x91
 47553 305d A0B17F   		.sleb128 -10080
 47554 3060 9F       		.byte	0x9f
 47555 3061 00000000 		.quad	.LVL214
 47555      00000000 
 47556 3069 00000000 		.quad	.LVL215-1
 47556      00000000 
 47557 3071 0100     		.value	0x1
 47558 3073 54       		.byte	0x54
 47559 3074 00000000 		.quad	.LVL215-1
 47559      00000000 
 47560 307c 00000000 		.quad	.LFE6050
 47560      00000000 
 47561 3084 0500     		.value	0x5
 47562 3086 91       		.byte	0x91
 47563 3087 A0B17F   		.sleb128 -10080
 47564 308a 9F       		.byte	0x9f
 47565 308b 00000000 		.quad	0
 47565      00000000 
 47566 3093 00000000 		.quad	0
 47566      00000000 
 47567              	.LLST224:
 47568 309b 00000000 		.quad	.LVL210
 47568      00000000 
 47569 30a3 00000000 		.quad	.LVL215-1
 47569      00000000 
 47570 30ab 0100     		.value	0x1
 47571 30ad 55       		.byte	0x55
 47572 30ae 00000000 		.quad	.LVL216
 47572      00000000 
 47573 30b6 00000000 		.quad	.LFE6050
 47573      00000000 
 47574 30be 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1176


 47575 30c0 55       		.byte	0x55
 47576 30c1 00000000 		.quad	0
 47576      00000000 
 47577 30c9 00000000 		.quad	0
 47577      00000000 
 47578              	.LLST225:
 47579 30d1 00000000 		.quad	.LVL211
 47579      00000000 
 47580 30d9 00000000 		.quad	.LVL213
 47580      00000000 
 47581 30e1 0100     		.value	0x1
 47582 30e3 52       		.byte	0x52
 47583 30e4 00000000 		.quad	.LVL213
 47583      00000000 
 47584 30ec 00000000 		.quad	.LVL215-1
 47584      00000000 
 47585 30f4 0300     		.value	0x3
 47586 30f6 75       		.byte	0x75
 47587 30f7 10       		.sleb128 16
 47588 30f8 9F       		.byte	0x9f
 47589 30f9 00000000 		.quad	.LVL216
 47589      00000000 
 47590 3101 00000000 		.quad	.LVL218
 47590      00000000 
 47591 3109 0100     		.value	0x1
 47592 310b 52       		.byte	0x52
 47593 310c 00000000 		.quad	.LVL218
 47593      00000000 
 47594 3114 00000000 		.quad	.LFE6050
 47594      00000000 
 47595 311c 0300     		.value	0x3
 47596 311e 75       		.byte	0x75
 47597 311f 10       		.sleb128 16
 47598 3120 9F       		.byte	0x9f
 47599 3121 00000000 		.quad	0
 47599      00000000 
 47600 3129 00000000 		.quad	0
 47600      00000000 
 47601              	.LLST226:
 47602 3131 00000000 		.quad	.LVL212
 47602      00000000 
 47603 3139 00000000 		.quad	.LVL213
 47603      00000000 
 47604 3141 0300     		.value	0x3
 47605 3143 09       		.byte	0x9
 47606 3144 FF       		.byte	0xff
 47607 3145 9F       		.byte	0x9f
 47608 3146 00000000 		.quad	0
 47608      00000000 
 47609 314e 00000000 		.quad	0
 47609      00000000 
 47610              	.LLST227:
 47611 3156 00000000 		.quad	.LVL212
 47611      00000000 
 47612 315e 00000000 		.quad	.LVL213
 47612      00000000 
 47613 3166 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1177


 47614 3168 52       		.byte	0x52
 47615 3169 00000000 		.quad	0
 47615      00000000 
 47616 3171 00000000 		.quad	0
 47616      00000000 
 47617              	.LLST228:
 47618 3179 00000000 		.quad	.LVL216
 47618      00000000 
 47619 3181 00000000 		.quad	.LVL218
 47619      00000000 
 47620 3189 0100     		.value	0x1
 47621 318b 52       		.byte	0x52
 47622 318c 00000000 		.quad	.LVL218
 47622      00000000 
 47623 3194 00000000 		.quad	.LFE6050
 47623      00000000 
 47624 319c 0300     		.value	0x3
 47625 319e 75       		.byte	0x75
 47626 319f 10       		.sleb128 16
 47627 31a0 9F       		.byte	0x9f
 47628 31a1 00000000 		.quad	0
 47628      00000000 
 47629 31a9 00000000 		.quad	0
 47629      00000000 
 47630              	.LLST229:
 47631 31b1 00000000 		.quad	.LVL219
 47631      00000000 
 47632 31b9 00000000 		.quad	.LVL220
 47632      00000000 
 47633 31c1 0100     		.value	0x1
 47634 31c3 54       		.byte	0x54
 47635 31c4 00000000 		.quad	.LVL222
 47635      00000000 
 47636 31cc 00000000 		.quad	.LVL224
 47636      00000000 
 47637 31d4 0100     		.value	0x1
 47638 31d6 52       		.byte	0x52
 47639 31d7 00000000 		.quad	.LVL230
 47639      00000000 
 47640 31df 00000000 		.quad	.LVL231
 47640      00000000 
 47641 31e7 0100     		.value	0x1
 47642 31e9 52       		.byte	0x52
 47643 31ea 00000000 		.quad	.LVL235
 47643      00000000 
 47644 31f2 00000000 		.quad	.LVL237
 47644      00000000 
 47645 31fa 0100     		.value	0x1
 47646 31fc 58       		.byte	0x58
 47647 31fd 00000000 		.quad	.LVL240
 47647      00000000 
 47648 3205 00000000 		.quad	.LVL241
 47648      00000000 
 47649 320d 0100     		.value	0x1
 47650 320f 52       		.byte	0x52
 47651 3210 00000000 		.quad	.LVL241
 47651      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1178


 47652 3218 00000000 		.quad	.LVL242
 47652      00000000 
 47653 3220 0100     		.value	0x1
 47654 3222 54       		.byte	0x54
 47655 3223 00000000 		.quad	.LVL242
 47655      00000000 
 47656 322b 00000000 		.quad	.LFE6560
 47656      00000000 
 47657 3233 0100     		.value	0x1
 47658 3235 52       		.byte	0x52
 47659 3236 00000000 		.quad	0
 47659      00000000 
 47660 323e 00000000 		.quad	0
 47660      00000000 
 47661              	.LLST230:
 47662 3246 00000000 		.quad	.LVL219
 47662      00000000 
 47663 324e 00000000 		.quad	.LVL225
 47663      00000000 
 47664 3256 0100     		.value	0x1
 47665 3258 51       		.byte	0x51
 47666 3259 00000000 		.quad	.LVL225
 47666      00000000 
 47667 3261 00000000 		.quad	.LVL226
 47667      00000000 
 47668 3269 0300     		.value	0x3
 47669 326b 71       		.byte	0x71
 47670 326c 02       		.sleb128 2
 47671 326d 9F       		.byte	0x9f
 47672 326e 00000000 		.quad	.LVL226
 47672      00000000 
 47673 3276 00000000 		.quad	.LVL241
 47673      00000000 
 47674 327e 0400     		.value	0x4
 47675 3280 F3       		.byte	0xf3
 47676 3281 01       		.uleb128 0x1
 47677 3282 51       		.byte	0x51
 47678 3283 9F       		.byte	0x9f
 47679 3284 00000000 		.quad	.LVL241
 47679      00000000 
 47680 328c 00000000 		.quad	.LFE6560
 47680      00000000 
 47681 3294 0100     		.value	0x1
 47682 3296 51       		.byte	0x51
 47683 3297 00000000 		.quad	0
 47683      00000000 
 47684 329f 00000000 		.quad	0
 47684      00000000 
 47685              	.LLST231:
 47686 32a7 00000000 		.quad	.LVL219
 47686      00000000 
 47687 32af 00000000 		.quad	.LVL242
 47687      00000000 
 47688 32b7 0100     		.value	0x1
 47689 32b9 54       		.byte	0x54
 47690 32ba 00000000 		.quad	.LVL242
 47690      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1179


 47691 32c2 00000000 		.quad	.LFE6560
 47691      00000000 
 47692 32ca 0100     		.value	0x1
 47693 32cc 52       		.byte	0x52
 47694 32cd 00000000 		.quad	0
 47694      00000000 
 47695 32d5 00000000 		.quad	0
 47695      00000000 
 47696              	.LLST232:
 47697 32dd 00000000 		.quad	.LVL219
 47697      00000000 
 47698 32e5 00000000 		.quad	.LVL220
 47698      00000000 
 47699 32ed 0100     		.value	0x1
 47700 32ef 54       		.byte	0x54
 47701 32f0 00000000 		.quad	.LVL221
 47701      00000000 
 47702 32f8 00000000 		.quad	.LVL224
 47702      00000000 
 47703 3300 0100     		.value	0x1
 47704 3302 52       		.byte	0x52
 47705 3303 00000000 		.quad	.LVL237
 47705      00000000 
 47706 330b 00000000 		.quad	.LVL238
 47706      00000000 
 47707 3313 0700     		.value	0x7
 47708 3315 72       		.byte	0x72
 47709 3316 00       		.sleb128 0
 47710 3317 31       		.byte	0x31
 47711 3318 24       		.byte	0x24
 47712 3319 23       		.byte	0x23
 47713 331a 02       		.uleb128 0x2
 47714 331b 9F       		.byte	0x9f
 47715 331c 00000000 		.quad	.LVL241
 47715      00000000 
 47716 3324 00000000 		.quad	.LVL242
 47716      00000000 
 47717 332c 0100     		.value	0x1
 47718 332e 54       		.byte	0x54
 47719 332f 00000000 		.quad	.LVL242
 47719      00000000 
 47720 3337 00000000 		.quad	.LFE6560
 47720      00000000 
 47721 333f 0100     		.value	0x1
 47722 3341 52       		.byte	0x52
 47723 3342 00000000 		.quad	0
 47723      00000000 
 47724 334a 00000000 		.quad	0
 47724      00000000 
 47725              	.LLST233:
 47726 3352 00000000 		.quad	.LVL227
 47726      00000000 
 47727 335a 00000000 		.quad	.LVL229
 47727      00000000 
 47728 3362 0100     		.value	0x1
 47729 3364 61       		.byte	0x61
 47730 3365 00000000 		.quad	.LVL230
GAS LISTING /tmp/ccmMnd7l.s 			page 1180


 47730      00000000 
 47731 336d 00000000 		.quad	.LVL237
 47731      00000000 
 47732 3375 0100     		.value	0x1
 47733 3377 61       		.byte	0x61
 47734 3378 00000000 		.quad	0
 47734      00000000 
 47735 3380 00000000 		.quad	0
 47735      00000000 
 47736              	.LLST234:
 47737 3388 00000000 		.quad	.LVL227
 47737      00000000 
 47738 3390 00000000 		.quad	.LVL229
 47738      00000000 
 47739 3398 0100     		.value	0x1
 47740 339a 54       		.byte	0x54
 47741 339b 00000000 		.quad	.LVL230
 47741      00000000 
 47742 33a3 00000000 		.quad	.LVL237
 47742      00000000 
 47743 33ab 0100     		.value	0x1
 47744 33ad 54       		.byte	0x54
 47745 33ae 00000000 		.quad	0
 47745      00000000 
 47746 33b6 00000000 		.quad	0
 47746      00000000 
 47747              	.LLST235:
 47748 33be 00000000 		.quad	.LVL230
 47748      00000000 
 47749 33c6 00000000 		.quad	.LVL231
 47749      00000000 
 47750 33ce 0100     		.value	0x1
 47751 33d0 52       		.byte	0x52
 47752 33d1 00000000 		.quad	.LVL232
 47752      00000000 
 47753 33d9 00000000 		.quad	.LVL237
 47753      00000000 
 47754 33e1 0100     		.value	0x1
 47755 33e3 58       		.byte	0x58
 47756 33e4 00000000 		.quad	0
 47756      00000000 
 47757 33ec 00000000 		.quad	0
 47757      00000000 
 47758              	.LLST236:
 47759 33f4 00000000 		.quad	.LVL227
 47759      00000000 
 47760 33fc 00000000 		.quad	.LVL229
 47760      00000000 
 47761 3404 0300     		.value	0x3
 47762 3406 55       		.byte	0x55
 47763 3407 93       		.byte	0x93
 47764 3408 08       		.uleb128 0x8
 47765 3409 00000000 		.quad	.LVL230
 47765      00000000 
 47766 3411 00000000 		.quad	.LVL237
 47766      00000000 
 47767 3419 0300     		.value	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1181


 47768 341b 55       		.byte	0x55
 47769 341c 93       		.byte	0x93
 47770 341d 08       		.uleb128 0x8
 47771 341e 00000000 		.quad	0
 47771      00000000 
 47772 3426 00000000 		.quad	0
 47772      00000000 
 47773              	.LLST237:
 47774 342e 00000000 		.quad	.LVL230
 47774      00000000 
 47775 3436 00000000 		.quad	.LVL231
 47775      00000000 
 47776 343e 0100     		.value	0x1
 47777 3440 51       		.byte	0x51
 47778 3441 00000000 		.quad	.LVL231
 47778      00000000 
 47779 3449 00000000 		.quad	.LVL233
 47779      00000000 
 47780 3451 0100     		.value	0x1
 47781 3453 58       		.byte	0x58
 47782 3454 00000000 		.quad	.LVL233
 47782      00000000 
 47783 345c 00000000 		.quad	.LVL237
 47783      00000000 
 47784 3464 0100     		.value	0x1
 47785 3466 51       		.byte	0x51
 47786 3467 00000000 		.quad	0
 47786      00000000 
 47787 346f 00000000 		.quad	0
 47787      00000000 
 47788              	.LLST238:
 47789 3477 00000000 		.quad	.LVL228
 47789      00000000 
 47790 347f 00000000 		.quad	.LVL229
 47790      00000000 
 47791 3487 0600     		.value	0x6
 47792 3489 F2       		.byte	0xf2
 47793 348a 00000000 		.long	.Ldebug_info0+65863
 47794 348e 00       		.sleb128 0
 47795 348f 00000000 		.quad	.LVL230
 47795      00000000 
 47796 3497 00000000 		.quad	.LVL237
 47796      00000000 
 47797 349f 0600     		.value	0x6
 47798 34a1 F2       		.byte	0xf2
 47799 34a2 00000000 		.long	.Ldebug_info0+65863
 47800 34a6 00       		.sleb128 0
 47801 34a7 00000000 		.quad	0
 47801      00000000 
 47802 34af 00000000 		.quad	0
 47802      00000000 
 47803              	.LLST239:
 47804 34b7 00000000 		.quad	.LVL230
 47804      00000000 
 47805 34bf 00000000 		.quad	.LVL231
 47805      00000000 
 47806 34c7 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1182


 47807 34c9 52       		.byte	0x52
 47808 34ca 00000000 		.quad	.LVL231
 47808      00000000 
 47809 34d2 00000000 		.quad	.LVL237
 47809      00000000 
 47810 34da 0100     		.value	0x1
 47811 34dc 58       		.byte	0x58
 47812 34dd 00000000 		.quad	0
 47812      00000000 
 47813 34e5 00000000 		.quad	0
 47813      00000000 
 47814              	.LLST240:
 47815 34ed 00000000 		.quad	.LVL230
 47815      00000000 
 47816 34f5 00000000 		.quad	.LVL237
 47816      00000000 
 47817 34fd 0600     		.value	0x6
 47818 34ff F2       		.byte	0xf2
 47819 3500 00000000 		.long	.Ldebug_info0+65893
 47820 3504 00       		.sleb128 0
 47821 3505 00000000 		.quad	0
 47821      00000000 
 47822 350d 00000000 		.quad	0
 47822      00000000 
 47823              	.LLST241:
 47824 3515 00000000 		.quad	.LVL238
 47824      00000000 
 47825 351d 00000000 		.quad	.LVL241
 47825      00000000 
 47826 3525 0100     		.value	0x1
 47827 3527 52       		.byte	0x52
 47828 3528 00000000 		.quad	0
 47828      00000000 
 47829 3530 00000000 		.quad	0
 47829      00000000 
 47830              	.LLST242:
 47831 3538 00000000 		.quad	.LVL238
 47831      00000000 
 47832 3540 00000000 		.quad	.LVL241
 47832      00000000 
 47833 3548 0600     		.value	0x6
 47834 354a F2       		.byte	0xf2
 47835 354b 00000000 		.long	.Ldebug_info0+65585
 47836 354f 00       		.sleb128 0
 47837 3550 00000000 		.quad	0
 47837      00000000 
 47838 3558 00000000 		.quad	0
 47838      00000000 
 47839              	.LLST243:
 47840 3560 00000000 		.quad	.LVL243
 47840      00000000 
 47841 3568 00000000 		.quad	.LVL252
 47841      00000000 
 47842 3570 0100     		.value	0x1
 47843 3572 55       		.byte	0x55
 47844 3573 00000000 		.quad	.LVL252
 47844      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1183


 47845 357b 00000000 		.quad	.LVL311
 47845      00000000 
 47846 3583 0100     		.value	0x1
 47847 3585 53       		.byte	0x53
 47848 3586 00000000 		.quad	.LVL311
 47848      00000000 
 47849 358e 00000000 		.quad	.LVL314
 47849      00000000 
 47850 3596 0400     		.value	0x4
 47851 3598 F3       		.byte	0xf3
 47852 3599 01       		.uleb128 0x1
 47853 359a 55       		.byte	0x55
 47854 359b 9F       		.byte	0x9f
 47855 359c 00000000 		.quad	.LVL314
 47855      00000000 
 47856 35a4 00000000 		.quad	.LVL349
 47856      00000000 
 47857 35ac 0100     		.value	0x1
 47858 35ae 53       		.byte	0x53
 47859 35af 00000000 		.quad	.LVL349
 47859      00000000 
 47860 35b7 00000000 		.quad	.LVL352
 47860      00000000 
 47861 35bf 0400     		.value	0x4
 47862 35c1 F3       		.byte	0xf3
 47863 35c2 01       		.uleb128 0x1
 47864 35c3 55       		.byte	0x55
 47865 35c4 9F       		.byte	0x9f
 47866 35c5 00000000 		.quad	.LVL352
 47866      00000000 
 47867 35cd 00000000 		.quad	.LFE6046
 47867      00000000 
 47868 35d5 0100     		.value	0x1
 47869 35d7 53       		.byte	0x53
 47870 35d8 00000000 		.quad	0
 47870      00000000 
 47871 35e0 00000000 		.quad	0
 47871      00000000 
 47872              	.LLST244:
 47873 35e8 00000000 		.quad	.LVL253
 47873      00000000 
 47874 35f0 00000000 		.quad	.LVL254-1
 47874      00000000 
 47875 35f8 0100     		.value	0x1
 47876 35fa 61       		.byte	0x61
 47877 35fb 00000000 		.quad	.LVL254-1
 47877      00000000 
 47878 3603 00000000 		.quad	.LVL310
 47878      00000000 
 47879 360b 0200     		.value	0x2
 47880 360d 77       		.byte	0x77
 47881 360e 00       		.sleb128 0
 47882 360f 00000000 		.quad	.LVL310
 47882      00000000 
 47883 3617 00000000 		.quad	.LVL314
 47883      00000000 
 47884 361f 0300     		.value	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1184


 47885 3621 91       		.byte	0x91
 47886 3622 B07F     		.sleb128 -80
 47887 3624 00000000 		.quad	.LVL314
 47887      00000000 
 47888 362c 00000000 		.quad	.LVL348
 47888      00000000 
 47889 3634 0200     		.value	0x2
 47890 3636 77       		.byte	0x77
 47891 3637 00       		.sleb128 0
 47892 3638 00000000 		.quad	.LVL348
 47892      00000000 
 47893 3640 00000000 		.quad	.LVL352
 47893      00000000 
 47894 3648 0300     		.value	0x3
 47895 364a 91       		.byte	0x91
 47896 364b B07F     		.sleb128 -80
 47897 364d 00000000 		.quad	.LVL354
 47897      00000000 
 47898 3655 00000000 		.quad	.LVL355
 47898      00000000 
 47899 365d 0100     		.value	0x1
 47900 365f 65       		.byte	0x65
 47901 3660 00000000 		.quad	.LVL355
 47901      00000000 
 47902 3668 00000000 		.quad	.LFE6046
 47902      00000000 
 47903 3670 0200     		.value	0x2
 47904 3672 77       		.byte	0x77
 47905 3673 00       		.sleb128 0
 47906 3674 00000000 		.quad	0
 47906      00000000 
 47907 367c 00000000 		.quad	0
 47907      00000000 
 47908              	.LLST245:
 47909 3684 00000000 		.quad	.LVL280
 47909      00000000 
 47910 368c 00000000 		.quad	.LVL282
 47910      00000000 
 47911 3694 0300     		.value	0x3
 47912 3696 91       		.byte	0x91
 47913 3697 B87F     		.sleb128 -72
 47914 3699 00000000 		.quad	0
 47914      00000000 
 47915 36a1 00000000 		.quad	0
 47915      00000000 
 47916              	.LLST246:
 47917 36a9 00000000 		.quad	.LVL243
 47917      00000000 
 47918 36b1 00000000 		.quad	.LVL252
 47918      00000000 
 47919 36b9 0300     		.value	0x3
 47920 36bb 75       		.byte	0x75
 47921 36bc 08       		.sleb128 8
 47922 36bd 9F       		.byte	0x9f
 47923 36be 00000000 		.quad	.LVL252
 47923      00000000 
 47924 36c6 00000000 		.quad	.LVL311
GAS LISTING /tmp/ccmMnd7l.s 			page 1185


 47924      00000000 
 47925 36ce 0300     		.value	0x3
 47926 36d0 73       		.byte	0x73
 47927 36d1 08       		.sleb128 8
 47928 36d2 9F       		.byte	0x9f
 47929 36d3 00000000 		.quad	.LVL311
 47929      00000000 
 47930 36db 00000000 		.quad	.LVL314
 47930      00000000 
 47931 36e3 0600     		.value	0x6
 47932 36e5 F3       		.byte	0xf3
 47933 36e6 01       		.uleb128 0x1
 47934 36e7 55       		.byte	0x55
 47935 36e8 23       		.byte	0x23
 47936 36e9 08       		.uleb128 0x8
 47937 36ea 9F       		.byte	0x9f
 47938 36eb 00000000 		.quad	.LVL314
 47938      00000000 
 47939 36f3 00000000 		.quad	.LVL349
 47939      00000000 
 47940 36fb 0300     		.value	0x3
 47941 36fd 73       		.byte	0x73
 47942 36fe 08       		.sleb128 8
 47943 36ff 9F       		.byte	0x9f
 47944 3700 00000000 		.quad	.LVL349
 47944      00000000 
 47945 3708 00000000 		.quad	.LVL352
 47945      00000000 
 47946 3710 0600     		.value	0x6
 47947 3712 F3       		.byte	0xf3
 47948 3713 01       		.uleb128 0x1
 47949 3714 55       		.byte	0x55
 47950 3715 23       		.byte	0x23
 47951 3716 08       		.uleb128 0x8
 47952 3717 9F       		.byte	0x9f
 47953 3718 00000000 		.quad	.LVL352
 47953      00000000 
 47954 3720 00000000 		.quad	.LFE6046
 47954      00000000 
 47955 3728 0300     		.value	0x3
 47956 372a 73       		.byte	0x73
 47957 372b 08       		.sleb128 8
 47958 372c 9F       		.byte	0x9f
 47959 372d 00000000 		.quad	0
 47959      00000000 
 47960 3735 00000000 		.quad	0
 47960      00000000 
 47961              	.LLST247:
 47962 373d 00000000 		.quad	.LVL243
 47962      00000000 
 47963 3745 00000000 		.quad	.LVL252
 47963      00000000 
 47964 374d 0300     		.value	0x3
 47965 374f 75       		.byte	0x75
 47966 3750 10       		.sleb128 16
 47967 3751 9F       		.byte	0x9f
 47968 3752 00000000 		.quad	.LVL252
GAS LISTING /tmp/ccmMnd7l.s 			page 1186


 47968      00000000 
 47969 375a 00000000 		.quad	.LVL280
 47969      00000000 
 47970 3762 0300     		.value	0x3
 47971 3764 73       		.byte	0x73
 47972 3765 10       		.sleb128 16
 47973 3766 9F       		.byte	0x9f
 47974 3767 00000000 		.quad	.LVL314
 47974      00000000 
 47975 376f 00000000 		.quad	.LVL336
 47975      00000000 
 47976 3777 0300     		.value	0x3
 47977 3779 73       		.byte	0x73
 47978 377a 10       		.sleb128 16
 47979 377b 9F       		.byte	0x9f
 47980 377c 00000000 		.quad	.LVL339
 47980      00000000 
 47981 3784 00000000 		.quad	.LVL347
 47981      00000000 
 47982 378c 0300     		.value	0x3
 47983 378e 73       		.byte	0x73
 47984 378f 10       		.sleb128 16
 47985 3790 9F       		.byte	0x9f
 47986 3791 00000000 		.quad	.LVL352
 47986      00000000 
 47987 3799 00000000 		.quad	.LVL355
 47987      00000000 
 47988 37a1 0300     		.value	0x3
 47989 37a3 73       		.byte	0x73
 47990 37a4 10       		.sleb128 16
 47991 37a5 9F       		.byte	0x9f
 47992 37a6 00000000 		.quad	0
 47992      00000000 
 47993 37ae 00000000 		.quad	0
 47993      00000000 
 47994              	.LLST248:
 47995 37b6 00000000 		.quad	.LVL244
 47995      00000000 
 47996 37be 00000000 		.quad	.LVL252
 47996      00000000 
 47997 37c6 0300     		.value	0x3
 47998 37c8 75       		.byte	0x75
 47999 37c9 08       		.sleb128 8
 48000 37ca 9F       		.byte	0x9f
 48001 37cb 00000000 		.quad	.LVL252
 48001      00000000 
 48002 37d3 00000000 		.quad	.LVL311
 48002      00000000 
 48003 37db 0300     		.value	0x3
 48004 37dd 73       		.byte	0x73
 48005 37de 08       		.sleb128 8
 48006 37df 9F       		.byte	0x9f
 48007 37e0 00000000 		.quad	.LVL311
 48007      00000000 
 48008 37e8 00000000 		.quad	.LVL314
 48008      00000000 
 48009 37f0 0600     		.value	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1187


 48010 37f2 F3       		.byte	0xf3
 48011 37f3 01       		.uleb128 0x1
 48012 37f4 55       		.byte	0x55
 48013 37f5 23       		.byte	0x23
 48014 37f6 08       		.uleb128 0x8
 48015 37f7 9F       		.byte	0x9f
 48016 37f8 00000000 		.quad	.LVL314
 48016      00000000 
 48017 3800 00000000 		.quad	.LVL349
 48017      00000000 
 48018 3808 0300     		.value	0x3
 48019 380a 73       		.byte	0x73
 48020 380b 08       		.sleb128 8
 48021 380c 9F       		.byte	0x9f
 48022 380d 00000000 		.quad	.LVL349
 48022      00000000 
 48023 3815 00000000 		.quad	.LVL352
 48023      00000000 
 48024 381d 0600     		.value	0x6
 48025 381f F3       		.byte	0xf3
 48026 3820 01       		.uleb128 0x1
 48027 3821 55       		.byte	0x55
 48028 3822 23       		.byte	0x23
 48029 3823 08       		.uleb128 0x8
 48030 3824 9F       		.byte	0x9f
 48031 3825 00000000 		.quad	.LVL352
 48031      00000000 
 48032 382d 00000000 		.quad	.LFE6046
 48032      00000000 
 48033 3835 0300     		.value	0x3
 48034 3837 73       		.byte	0x73
 48035 3838 08       		.sleb128 8
 48036 3839 9F       		.byte	0x9f
 48037 383a 00000000 		.quad	0
 48037      00000000 
 48038 3842 00000000 		.quad	0
 48038      00000000 
 48039              	.LLST249:
 48040 384a 00000000 		.quad	.LVL244
 48040      00000000 
 48041 3852 00000000 		.quad	.LVL252
 48041      00000000 
 48042 385a 0300     		.value	0x3
 48043 385c 75       		.byte	0x75
 48044 385d 08       		.sleb128 8
 48045 385e 9F       		.byte	0x9f
 48046 385f 00000000 		.quad	.LVL252
 48046      00000000 
 48047 3867 00000000 		.quad	.LVL280
 48047      00000000 
 48048 386f 0300     		.value	0x3
 48049 3871 73       		.byte	0x73
 48050 3872 08       		.sleb128 8
 48051 3873 9F       		.byte	0x9f
 48052 3874 00000000 		.quad	.LVL314
 48052      00000000 
 48053 387c 00000000 		.quad	.LVL336
GAS LISTING /tmp/ccmMnd7l.s 			page 1188


 48053      00000000 
 48054 3884 0300     		.value	0x3
 48055 3886 73       		.byte	0x73
 48056 3887 08       		.sleb128 8
 48057 3888 9F       		.byte	0x9f
 48058 3889 00000000 		.quad	.LVL339
 48058      00000000 
 48059 3891 00000000 		.quad	.LVL347
 48059      00000000 
 48060 3899 0300     		.value	0x3
 48061 389b 73       		.byte	0x73
 48062 389c 08       		.sleb128 8
 48063 389d 9F       		.byte	0x9f
 48064 389e 00000000 		.quad	.LVL352
 48064      00000000 
 48065 38a6 00000000 		.quad	.LVL355
 48065      00000000 
 48066 38ae 0300     		.value	0x3
 48067 38b0 73       		.byte	0x73
 48068 38b1 08       		.sleb128 8
 48069 38b2 9F       		.byte	0x9f
 48070 38b3 00000000 		.quad	0
 48070      00000000 
 48071 38bb 00000000 		.quad	0
 48071      00000000 
 48072              	.LLST250:
 48073 38c3 00000000 		.quad	.LVL245
 48073      00000000 
 48074 38cb 00000000 		.quad	.LVL246
 48074      00000000 
 48075 38d3 0A00     		.value	0xa
 48076 38d5 9E       		.byte	0x9e
 48077 38d6 08       		.uleb128 0x8
 48078 38d7 00000000 		.long	0
 48079 38db 00000000 		.long	0
 48080 38df 00000000 		.quad	.LVL246
 48080      00000000 
 48081 38e7 00000000 		.quad	.LVL251
 48081      00000000 
 48082 38ef 0100     		.value	0x1
 48083 38f1 61       		.byte	0x61
 48084 38f2 00000000 		.quad	.LVL352
 48084      00000000 
 48085 38fa 00000000 		.quad	.LVL353
 48085      00000000 
 48086 3902 0100     		.value	0x1
 48087 3904 61       		.byte	0x61
 48088 3905 00000000 		.quad	.LVL353
 48088      00000000 
 48089 390d 00000000 		.quad	.LVL355
 48089      00000000 
 48090 3915 0A00     		.value	0xa
 48091 3917 9E       		.byte	0x9e
 48092 3918 08       		.uleb128 0x8
 48093 3919 00000000 		.long	0
 48094 391d 00000000 		.long	0
 48095 3921 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1189


 48095      00000000 
 48096 3929 00000000 		.quad	0
 48096      00000000 
 48097              	.LLST251:
 48098 3931 00000000 		.quad	.LVL245
 48098      00000000 
 48099 3939 00000000 		.quad	.LVL296
 48099      00000000 
 48100 3941 0300     		.value	0x3
 48101 3943 5C       		.byte	0x5c
 48102 3944 93       		.byte	0x93
 48103 3945 08       		.uleb128 0x8
 48104 3946 00000000 		.quad	.LVL314
 48104      00000000 
 48105 394e 00000000 		.quad	.LVL336
 48105      00000000 
 48106 3956 0300     		.value	0x3
 48107 3958 5C       		.byte	0x5c
 48108 3959 93       		.byte	0x93
 48109 395a 08       		.uleb128 0x8
 48110 395b 00000000 		.quad	.LVL339
 48110      00000000 
 48111 3963 00000000 		.quad	.LVL347
 48111      00000000 
 48112 396b 0300     		.value	0x3
 48113 396d 5C       		.byte	0x5c
 48114 396e 93       		.byte	0x93
 48115 396f 08       		.uleb128 0x8
 48116 3970 00000000 		.quad	.LVL352
 48116      00000000 
 48117 3978 00000000 		.quad	.LVL355
 48117      00000000 
 48118 3980 0300     		.value	0x3
 48119 3982 5C       		.byte	0x5c
 48120 3983 93       		.byte	0x93
 48121 3984 08       		.uleb128 0x8
 48122 3985 00000000 		.quad	0
 48122      00000000 
 48123 398d 00000000 		.quad	0
 48123      00000000 
 48124              	.LLST252:
 48125 3995 00000000 		.quad	.LVL245
 48125      00000000 
 48126 399d 00000000 		.quad	.LVL246
 48126      00000000 
 48127 39a5 0300     		.value	0x3
 48128 39a7 5E       		.byte	0x5e
 48129 39a8 93       		.byte	0x93
 48130 39a9 08       		.uleb128 0x8
 48131 39aa 00000000 		.quad	.LVL246
 48131      00000000 
 48132 39b2 00000000 		.quad	.LVL247
 48132      00000000 
 48133 39ba 0300     		.value	0x3
 48134 39bc 50       		.byte	0x50
 48135 39bd 93       		.byte	0x93
 48136 39be 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 1190


 48137 39bf 00000000 		.quad	.LVL247
 48137      00000000 
 48138 39c7 00000000 		.quad	.LVL248
 48138      00000000 
 48139 39cf 0500     		.value	0x5
 48140 39d1 70       		.byte	0x70
 48141 39d2 08       		.sleb128 8
 48142 39d3 9F       		.byte	0x9f
 48143 39d4 93       		.byte	0x93
 48144 39d5 08       		.uleb128 0x8
 48145 39d6 00000000 		.quad	.LVL248
 48145      00000000 
 48146 39de 00000000 		.quad	.LVL250
 48146      00000000 
 48147 39e6 0300     		.value	0x3
 48148 39e8 50       		.byte	0x50
 48149 39e9 93       		.byte	0x93
 48150 39ea 08       		.uleb128 0x8
 48151 39eb 00000000 		.quad	.LVL278
 48151      00000000 
 48152 39f3 00000000 		.quad	.LVL279
 48152      00000000 
 48153 39fb 0300     		.value	0x3
 48154 39fd 5E       		.byte	0x5e
 48155 39fe 93       		.byte	0x93
 48156 39ff 08       		.uleb128 0x8
 48157 3a00 00000000 		.quad	.LVL314
 48157      00000000 
 48158 3a08 00000000 		.quad	.LVL336
 48158      00000000 
 48159 3a10 0300     		.value	0x3
 48160 3a12 5E       		.byte	0x5e
 48161 3a13 93       		.byte	0x93
 48162 3a14 08       		.uleb128 0x8
 48163 3a15 00000000 		.quad	.LVL343
 48163      00000000 
 48164 3a1d 00000000 		.quad	.LVL347
 48164      00000000 
 48165 3a25 0300     		.value	0x3
 48166 3a27 5E       		.byte	0x5e
 48167 3a28 93       		.byte	0x93
 48168 3a29 08       		.uleb128 0x8
 48169 3a2a 00000000 		.quad	.LVL352
 48169      00000000 
 48170 3a32 00000000 		.quad	.LVL355
 48170      00000000 
 48171 3a3a 0300     		.value	0x3
 48172 3a3c 5E       		.byte	0x5e
 48173 3a3d 93       		.byte	0x93
 48174 3a3e 08       		.uleb128 0x8
 48175 3a3f 00000000 		.quad	0
 48175      00000000 
 48176 3a47 00000000 		.quad	0
 48176      00000000 
 48177              	.LLST253:
 48178 3a4f 00000000 		.quad	.LVL249
 48178      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1191


 48179 3a57 00000000 		.quad	.LVL252
 48179      00000000 
 48180 3a5f 0300     		.value	0x3
 48181 3a61 75       		.byte	0x75
 48182 3a62 08       		.sleb128 8
 48183 3a63 9F       		.byte	0x9f
 48184 3a64 00000000 		.quad	.LVL252
 48184      00000000 
 48185 3a6c 00000000 		.quad	.LVL311
 48185      00000000 
 48186 3a74 0300     		.value	0x3
 48187 3a76 73       		.byte	0x73
 48188 3a77 08       		.sleb128 8
 48189 3a78 9F       		.byte	0x9f
 48190 3a79 00000000 		.quad	.LVL311
 48190      00000000 
 48191 3a81 00000000 		.quad	.LVL314
 48191      00000000 
 48192 3a89 0600     		.value	0x6
 48193 3a8b F3       		.byte	0xf3
 48194 3a8c 01       		.uleb128 0x1
 48195 3a8d 55       		.byte	0x55
 48196 3a8e 23       		.byte	0x23
 48197 3a8f 08       		.uleb128 0x8
 48198 3a90 9F       		.byte	0x9f
 48199 3a91 00000000 		.quad	.LVL314
 48199      00000000 
 48200 3a99 00000000 		.quad	.LVL349
 48200      00000000 
 48201 3aa1 0300     		.value	0x3
 48202 3aa3 73       		.byte	0x73
 48203 3aa4 08       		.sleb128 8
 48204 3aa5 9F       		.byte	0x9f
 48205 3aa6 00000000 		.quad	.LVL349
 48205      00000000 
 48206 3aae 00000000 		.quad	.LVL352
 48206      00000000 
 48207 3ab6 0600     		.value	0x6
 48208 3ab8 F3       		.byte	0xf3
 48209 3ab9 01       		.uleb128 0x1
 48210 3aba 55       		.byte	0x55
 48211 3abb 23       		.byte	0x23
 48212 3abc 08       		.uleb128 0x8
 48213 3abd 9F       		.byte	0x9f
 48214 3abe 00000000 		.quad	.LVL352
 48214      00000000 
 48215 3ac6 00000000 		.quad	.LFE6046
 48215      00000000 
 48216 3ace 0300     		.value	0x3
 48217 3ad0 73       		.byte	0x73
 48218 3ad1 08       		.sleb128 8
 48219 3ad2 9F       		.byte	0x9f
 48220 3ad3 00000000 		.quad	0
 48220      00000000 
 48221 3adb 00000000 		.quad	0
 48221      00000000 
 48222              	.LLST255:
GAS LISTING /tmp/ccmMnd7l.s 			page 1192


 48223 3ae3 00000000 		.quad	.LVL253
 48223      00000000 
 48224 3aeb 00000000 		.quad	.LVL254-1
 48224      00000000 
 48225 3af3 0300     		.value	0x3
 48226 3af5 54       		.byte	0x54
 48227 3af6 93       		.byte	0x93
 48228 3af7 08       		.uleb128 0x8
 48229 3af8 00000000 		.quad	.LVL254-1
 48229      00000000 
 48230 3b00 00000000 		.quad	.LVL280
 48230      00000000 
 48231 3b08 0300     		.value	0x3
 48232 3b0a 5C       		.byte	0x5c
 48233 3b0b 93       		.byte	0x93
 48234 3b0c 08       		.uleb128 0x8
 48235 3b0d 00000000 		.quad	.LVL314
 48235      00000000 
 48236 3b15 00000000 		.quad	.LVL336
 48236      00000000 
 48237 3b1d 0300     		.value	0x3
 48238 3b1f 5C       		.byte	0x5c
 48239 3b20 93       		.byte	0x93
 48240 3b21 08       		.uleb128 0x8
 48241 3b22 00000000 		.quad	.LVL339
 48241      00000000 
 48242 3b2a 00000000 		.quad	.LVL347
 48242      00000000 
 48243 3b32 0300     		.value	0x3
 48244 3b34 5C       		.byte	0x5c
 48245 3b35 93       		.byte	0x93
 48246 3b36 08       		.uleb128 0x8
 48247 3b37 00000000 		.quad	.LVL354
 48247      00000000 
 48248 3b3f 00000000 		.quad	.LVL355
 48248      00000000 
 48249 3b47 0300     		.value	0x3
 48250 3b49 5E       		.byte	0x5e
 48251 3b4a 93       		.byte	0x93
 48252 3b4b 08       		.uleb128 0x8
 48253 3b4c 00000000 		.quad	0
 48253      00000000 
 48254 3b54 00000000 		.quad	0
 48254      00000000 
 48255              	.LLST256:
 48256 3b5c 00000000 		.quad	.LVL253
 48256      00000000 
 48257 3b64 00000000 		.quad	.LVL279
 48257      00000000 
 48258 3b6c 0300     		.value	0x3
 48259 3b6e 5E       		.byte	0x5e
 48260 3b6f 93       		.byte	0x93
 48261 3b70 08       		.uleb128 0x8
 48262 3b71 00000000 		.quad	.LVL314
 48262      00000000 
 48263 3b79 00000000 		.quad	.LVL336
 48263      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1193


 48264 3b81 0300     		.value	0x3
 48265 3b83 5E       		.byte	0x5e
 48266 3b84 93       		.byte	0x93
 48267 3b85 08       		.uleb128 0x8
 48268 3b86 00000000 		.quad	.LVL339
 48268      00000000 
 48269 3b8e 00000000 		.quad	.LVL347
 48269      00000000 
 48270 3b96 0300     		.value	0x3
 48271 3b98 5E       		.byte	0x5e
 48272 3b99 93       		.byte	0x93
 48273 3b9a 08       		.uleb128 0x8
 48274 3b9b 00000000 		.quad	.LVL354
 48274      00000000 
 48275 3ba3 00000000 		.quad	.LVL355
 48275      00000000 
 48276 3bab 0300     		.value	0x3
 48277 3bad 5E       		.byte	0x5e
 48278 3bae 93       		.byte	0x93
 48279 3baf 08       		.uleb128 0x8
 48280 3bb0 00000000 		.quad	0
 48280      00000000 
 48281 3bb8 00000000 		.quad	0
 48281      00000000 
 48282              	.LLST259:
 48283 3bc0 00000000 		.quad	.LVL253
 48283      00000000 
 48284 3bc8 00000000 		.quad	.LVL256
 48284      00000000 
 48285 3bd0 0500     		.value	0x5
 48286 3bd2 76       		.byte	0x76
 48287 3bd3 00       		.sleb128 0
 48288 3bd4 38       		.byte	0x38
 48289 3bd5 1B       		.byte	0x1b
 48290 3bd6 9F       		.byte	0x9f
 48291 3bd7 00000000 		.quad	.LVL256
 48291      00000000 
 48292 3bdf 00000000 		.quad	.LVL279
 48292      00000000 
 48293 3be7 0800     		.value	0x8
 48294 3be9 7C       		.byte	0x7c
 48295 3bea 00       		.sleb128 0
 48296 3beb 7E       		.byte	0x7e
 48297 3bec 00       		.sleb128 0
 48298 3bed 1C       		.byte	0x1c
 48299 3bee 38       		.byte	0x38
 48300 3bef 1B       		.byte	0x1b
 48301 3bf0 9F       		.byte	0x9f
 48302 3bf1 00000000 		.quad	.LVL314
 48302      00000000 
 48303 3bf9 00000000 		.quad	.LVL316
 48303      00000000 
 48304 3c01 0500     		.value	0x5
 48305 3c03 76       		.byte	0x76
 48306 3c04 00       		.sleb128 0
 48307 3c05 38       		.byte	0x38
 48308 3c06 1B       		.byte	0x1b
GAS LISTING /tmp/ccmMnd7l.s 			page 1194


 48309 3c07 9F       		.byte	0x9f
 48310 3c08 00000000 		.quad	.LVL316
 48310      00000000 
 48311 3c10 00000000 		.quad	.LVL336
 48311      00000000 
 48312 3c18 0800     		.value	0x8
 48313 3c1a 7C       		.byte	0x7c
 48314 3c1b 00       		.sleb128 0
 48315 3c1c 7E       		.byte	0x7e
 48316 3c1d 00       		.sleb128 0
 48317 3c1e 1C       		.byte	0x1c
 48318 3c1f 38       		.byte	0x38
 48319 3c20 1B       		.byte	0x1b
 48320 3c21 9F       		.byte	0x9f
 48321 3c22 00000000 		.quad	.LVL339
 48321      00000000 
 48322 3c2a 00000000 		.quad	.LVL347
 48322      00000000 
 48323 3c32 0800     		.value	0x8
 48324 3c34 7C       		.byte	0x7c
 48325 3c35 00       		.sleb128 0
 48326 3c36 7E       		.byte	0x7e
 48327 3c37 00       		.sleb128 0
 48328 3c38 1C       		.byte	0x1c
 48329 3c39 38       		.byte	0x38
 48330 3c3a 1B       		.byte	0x1b
 48331 3c3b 9F       		.byte	0x9f
 48332 3c3c 00000000 		.quad	0
 48332      00000000 
 48333 3c44 00000000 		.quad	0
 48333      00000000 
 48334              	.LLST260:
 48335 3c4c 00000000 		.quad	.LVL254
 48335      00000000 
 48336 3c54 00000000 		.quad	.LVL279
 48336      00000000 
 48337 3c5c 0300     		.value	0x3
 48338 3c5e 5E       		.byte	0x5e
 48339 3c5f 93       		.byte	0x93
 48340 3c60 08       		.uleb128 0x8
 48341 3c61 00000000 		.quad	.LVL314
 48341      00000000 
 48342 3c69 00000000 		.quad	.LVL336
 48342      00000000 
 48343 3c71 0300     		.value	0x3
 48344 3c73 5E       		.byte	0x5e
 48345 3c74 93       		.byte	0x93
 48346 3c75 08       		.uleb128 0x8
 48347 3c76 00000000 		.quad	.LVL339
 48347      00000000 
 48348 3c7e 00000000 		.quad	.LVL347
 48348      00000000 
 48349 3c86 0300     		.value	0x3
 48350 3c88 5E       		.byte	0x5e
 48351 3c89 93       		.byte	0x93
 48352 3c8a 08       		.uleb128 0x8
 48353 3c8b 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1195


 48353      00000000 
 48354 3c93 00000000 		.quad	0
 48354      00000000 
 48355              	.LLST261:
 48356 3c9b 00000000 		.quad	.LVL255
 48356      00000000 
 48357 3ca3 00000000 		.quad	.LVL278
 48357      00000000 
 48358 3cab 0600     		.value	0x6
 48359 3cad 7E       		.byte	0x7e
 48360 3cae 8001     		.sleb128 128
 48361 3cb0 9F       		.byte	0x9f
 48362 3cb1 93       		.byte	0x93
 48363 3cb2 08       		.uleb128 0x8
 48364 3cb3 00000000 		.quad	.LVL332
 48364      00000000 
 48365 3cbb 00000000 		.quad	.LVL336
 48365      00000000 
 48366 3cc3 0600     		.value	0x6
 48367 3cc5 7E       		.byte	0x7e
 48368 3cc6 8001     		.sleb128 128
 48369 3cc8 9F       		.byte	0x9f
 48370 3cc9 93       		.byte	0x93
 48371 3cca 08       		.uleb128 0x8
 48372 3ccb 00000000 		.quad	.LVL339
 48372      00000000 
 48373 3cd3 00000000 		.quad	.LVL343
 48373      00000000 
 48374 3cdb 0600     		.value	0x6
 48375 3cdd 7E       		.byte	0x7e
 48376 3cde 8001     		.sleb128 128
 48377 3ce0 9F       		.byte	0x9f
 48378 3ce1 93       		.byte	0x93
 48379 3ce2 08       		.uleb128 0x8
 48380 3ce3 00000000 		.quad	.LVL345
 48380      00000000 
 48381 3ceb 00000000 		.quad	.LVL347
 48381      00000000 
 48382 3cf3 0600     		.value	0x6
 48383 3cf5 7E       		.byte	0x7e
 48384 3cf6 8001     		.sleb128 128
 48385 3cf8 9F       		.byte	0x9f
 48386 3cf9 93       		.byte	0x93
 48387 3cfa 08       		.uleb128 0x8
 48388 3cfb 00000000 		.quad	0
 48388      00000000 
 48389 3d03 00000000 		.quad	0
 48389      00000000 
 48390              	.LLST262:
 48391 3d0b 00000000 		.quad	.LVL255
 48391      00000000 
 48392 3d13 00000000 		.quad	.LVL278
 48392      00000000 
 48393 3d1b 0300     		.value	0x3
 48394 3d1d 5E       		.byte	0x5e
 48395 3d1e 93       		.byte	0x93
 48396 3d1f 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 1196


 48397 3d20 00000000 		.quad	.LVL332
 48397      00000000 
 48398 3d28 00000000 		.quad	.LVL336
 48398      00000000 
 48399 3d30 0300     		.value	0x3
 48400 3d32 5E       		.byte	0x5e
 48401 3d33 93       		.byte	0x93
 48402 3d34 08       		.uleb128 0x8
 48403 3d35 00000000 		.quad	.LVL339
 48403      00000000 
 48404 3d3d 00000000 		.quad	.LVL343
 48404      00000000 
 48405 3d45 0300     		.value	0x3
 48406 3d47 5E       		.byte	0x5e
 48407 3d48 93       		.byte	0x93
 48408 3d49 08       		.uleb128 0x8
 48409 3d4a 00000000 		.quad	.LVL345
 48409      00000000 
 48410 3d52 00000000 		.quad	.LVL347
 48410      00000000 
 48411 3d5a 0300     		.value	0x3
 48412 3d5c 5E       		.byte	0x5e
 48413 3d5d 93       		.byte	0x93
 48414 3d5e 08       		.uleb128 0x8
 48415 3d5f 00000000 		.quad	0
 48415      00000000 
 48416 3d67 00000000 		.quad	0
 48416      00000000 
 48417              	.LLST263:
 48418 3d6f 00000000 		.quad	.LVL255
 48418      00000000 
 48419 3d77 00000000 		.quad	.LVL256
 48419      00000000 
 48420 3d7f 0500     		.value	0x5
 48421 3d81 7E       		.byte	0x7e
 48422 3d82 08       		.sleb128 8
 48423 3d83 9F       		.byte	0x9f
 48424 3d84 93       		.byte	0x93
 48425 3d85 08       		.uleb128 0x8
 48426 3d86 00000000 		.quad	.LVL256
 48426      00000000 
 48427 3d8e 00000000 		.quad	.LVL265
 48427      00000000 
 48428 3d96 0300     		.value	0x3
 48429 3d98 5F       		.byte	0x5f
 48430 3d99 93       		.byte	0x93
 48431 3d9a 08       		.uleb128 0x8
 48432 3d9b 00000000 		.quad	.LVL265
 48432      00000000 
 48433 3da3 00000000 		.quad	.LVL266
 48433      00000000 
 48434 3dab 0500     		.value	0x5
 48435 3dad 7F       		.byte	0x7f
 48436 3dae 08       		.sleb128 8
 48437 3daf 9F       		.byte	0x9f
 48438 3db0 93       		.byte	0x93
 48439 3db1 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 1197


 48440 3db2 00000000 		.quad	.LVL266
 48440      00000000 
 48441 3dba 00000000 		.quad	.LVL278
 48441      00000000 
 48442 3dc2 0300     		.value	0x3
 48443 3dc4 5F       		.byte	0x5f
 48444 3dc5 93       		.byte	0x93
 48445 3dc6 08       		.uleb128 0x8
 48446 3dc7 00000000 		.quad	.LVL332
 48446      00000000 
 48447 3dcf 00000000 		.quad	.LVL336
 48447      00000000 
 48448 3dd7 0300     		.value	0x3
 48449 3dd9 5F       		.byte	0x5f
 48450 3dda 93       		.byte	0x93
 48451 3ddb 08       		.uleb128 0x8
 48452 3ddc 00000000 		.quad	.LVL339
 48452      00000000 
 48453 3de4 00000000 		.quad	.LVL343
 48453      00000000 
 48454 3dec 0300     		.value	0x3
 48455 3dee 5F       		.byte	0x5f
 48456 3def 93       		.byte	0x93
 48457 3df0 08       		.uleb128 0x8
 48458 3df1 00000000 		.quad	.LVL345
 48458      00000000 
 48459 3df9 00000000 		.quad	.LVL347
 48459      00000000 
 48460 3e01 0300     		.value	0x3
 48461 3e03 5F       		.byte	0x5f
 48462 3e04 93       		.byte	0x93
 48463 3e05 08       		.uleb128 0x8
 48464 3e06 00000000 		.quad	0
 48464      00000000 
 48465 3e0e 00000000 		.quad	0
 48465      00000000 
 48466              	.LLST264:
 48467 3e16 00000000 		.quad	.LVL255
 48467      00000000 
 48468 3e1e 00000000 		.quad	.LVL278
 48468      00000000 
 48469 3e26 0200     		.value	0x2
 48470 3e28 31       		.byte	0x31
 48471 3e29 9F       		.byte	0x9f
 48472 3e2a 00000000 		.quad	.LVL332
 48472      00000000 
 48473 3e32 00000000 		.quad	.LVL336
 48473      00000000 
 48474 3e3a 0200     		.value	0x2
 48475 3e3c 31       		.byte	0x31
 48476 3e3d 9F       		.byte	0x9f
 48477 3e3e 00000000 		.quad	.LVL339
 48477      00000000 
 48478 3e46 00000000 		.quad	.LVL343
 48478      00000000 
 48479 3e4e 0200     		.value	0x2
 48480 3e50 31       		.byte	0x31
GAS LISTING /tmp/ccmMnd7l.s 			page 1198


 48481 3e51 9F       		.byte	0x9f
 48482 3e52 00000000 		.quad	.LVL345
 48482      00000000 
 48483 3e5a 00000000 		.quad	.LVL347
 48483      00000000 
 48484 3e62 0200     		.value	0x2
 48485 3e64 31       		.byte	0x31
 48486 3e65 9F       		.byte	0x9f
 48487 3e66 00000000 		.quad	0
 48487      00000000 
 48488 3e6e 00000000 		.quad	0
 48488      00000000 
 48489              	.LLST265:
 48490 3e76 00000000 		.quad	.LVL255
 48490      00000000 
 48491 3e7e 00000000 		.quad	.LVL278
 48491      00000000 
 48492 3e86 0600     		.value	0x6
 48493 3e88 F2       		.byte	0xf2
 48494 3e89 00000000 		.long	.Ldebug_info0+68071
 48495 3e8d 00       		.sleb128 0
 48496 3e8e 00000000 		.quad	.LVL332
 48496      00000000 
 48497 3e96 00000000 		.quad	.LVL336
 48497      00000000 
 48498 3e9e 0600     		.value	0x6
 48499 3ea0 F2       		.byte	0xf2
 48500 3ea1 00000000 		.long	.Ldebug_info0+68071
 48501 3ea5 00       		.sleb128 0
 48502 3ea6 00000000 		.quad	.LVL339
 48502      00000000 
 48503 3eae 00000000 		.quad	.LVL343
 48503      00000000 
 48504 3eb6 0600     		.value	0x6
 48505 3eb8 F2       		.byte	0xf2
 48506 3eb9 00000000 		.long	.Ldebug_info0+68071
 48507 3ebd 00       		.sleb128 0
 48508 3ebe 00000000 		.quad	.LVL345
 48508      00000000 
 48509 3ec6 00000000 		.quad	.LVL347
 48509      00000000 
 48510 3ece 0600     		.value	0x6
 48511 3ed0 F2       		.byte	0xf2
 48512 3ed1 00000000 		.long	.Ldebug_info0+68071
 48513 3ed5 00       		.sleb128 0
 48514 3ed6 00000000 		.quad	0
 48514      00000000 
 48515 3ede 00000000 		.quad	0
 48515      00000000 
 48516              	.LLST266:
 48517 3ee6 00000000 		.quad	.LVL256
 48517      00000000 
 48518 3eee 00000000 		.quad	.LVL278
 48518      00000000 
 48519 3ef6 0600     		.value	0x6
 48520 3ef8 F2       		.byte	0xf2
 48521 3ef9 00000000 		.long	.Ldebug_info0+68055
GAS LISTING /tmp/ccmMnd7l.s 			page 1199


 48522 3efd 00       		.sleb128 0
 48523 3efe 00000000 		.quad	.LVL332
 48523      00000000 
 48524 3f06 00000000 		.quad	.LVL336
 48524      00000000 
 48525 3f0e 0600     		.value	0x6
 48526 3f10 F2       		.byte	0xf2
 48527 3f11 00000000 		.long	.Ldebug_info0+68055
 48528 3f15 00       		.sleb128 0
 48529 3f16 00000000 		.quad	.LVL339
 48529      00000000 
 48530 3f1e 00000000 		.quad	.LVL343
 48530      00000000 
 48531 3f26 0600     		.value	0x6
 48532 3f28 F2       		.byte	0xf2
 48533 3f29 00000000 		.long	.Ldebug_info0+68055
 48534 3f2d 00       		.sleb128 0
 48535 3f2e 00000000 		.quad	.LVL345
 48535      00000000 
 48536 3f36 00000000 		.quad	.LVL347
 48536      00000000 
 48537 3f3e 0600     		.value	0x6
 48538 3f40 F2       		.byte	0xf2
 48539 3f41 00000000 		.long	.Ldebug_info0+68055
 48540 3f45 00       		.sleb128 0
 48541 3f46 00000000 		.quad	0
 48541      00000000 
 48542 3f4e 00000000 		.quad	0
 48542      00000000 
 48543              	.LLST267:
 48544 3f56 00000000 		.quad	.LVL258
 48544      00000000 
 48545 3f5e 00000000 		.quad	.LVL260
 48545      00000000 
 48546 3f66 0300     		.value	0x3
 48547 3f68 5F       		.byte	0x5f
 48548 3f69 93       		.byte	0x93
 48549 3f6a 08       		.uleb128 0x8
 48550 3f6b 00000000 		.quad	.LVL260
 48550      00000000 
 48551 3f73 00000000 		.quad	.LVL261
 48551      00000000 
 48552 3f7b 0300     		.value	0x3
 48553 3f7d 50       		.byte	0x50
 48554 3f7e 93       		.byte	0x93
 48555 3f7f 08       		.uleb128 0x8
 48556 3f80 00000000 		.quad	.LVL261
 48556      00000000 
 48557 3f88 00000000 		.quad	.LVL262
 48557      00000000 
 48558 3f90 0500     		.value	0x5
 48559 3f92 70       		.byte	0x70
 48560 3f93 08       		.sleb128 8
 48561 3f94 9F       		.byte	0x9f
 48562 3f95 93       		.byte	0x93
 48563 3f96 08       		.uleb128 0x8
 48564 3f97 00000000 		.quad	.LVL262
GAS LISTING /tmp/ccmMnd7l.s 			page 1200


 48564      00000000 
 48565 3f9f 00000000 		.quad	.LVL264
 48565      00000000 
 48566 3fa7 0300     		.value	0x3
 48567 3fa9 50       		.byte	0x50
 48568 3faa 93       		.byte	0x93
 48569 3fab 08       		.uleb128 0x8
 48570 3fac 00000000 		.quad	.LVL345
 48570      00000000 
 48571 3fb4 00000000 		.quad	.LVL347
 48571      00000000 
 48572 3fbc 0300     		.value	0x3
 48573 3fbe 5F       		.byte	0x5f
 48574 3fbf 93       		.byte	0x93
 48575 3fc0 08       		.uleb128 0x8
 48576 3fc1 00000000 		.quad	0
 48576      00000000 
 48577 3fc9 00000000 		.quad	0
 48577      00000000 
 48578              	.LLST268:
 48579 3fd1 00000000 		.quad	.LVL258
 48579      00000000 
 48580 3fd9 00000000 		.quad	.LVL265
 48580      00000000 
 48581 3fe1 0100     		.value	0x1
 48582 3fe3 62       		.byte	0x62
 48583 3fe4 00000000 		.quad	.LVL345
 48583      00000000 
 48584 3fec 00000000 		.quad	.LVL347
 48584      00000000 
 48585 3ff4 0100     		.value	0x1
 48586 3ff6 62       		.byte	0x62
 48587 3ff7 00000000 		.quad	0
 48587      00000000 
 48588 3fff 00000000 		.quad	0
 48588      00000000 
 48589              	.LLST269:
 48590 4007 00000000 		.quad	.LVL259
 48590      00000000 
 48591 400f 00000000 		.quad	.LVL265
 48591      00000000 
 48592 4017 0600     		.value	0x6
 48593 4019 F2       		.byte	0xf2
 48594 401a 00000000 		.long	.Ldebug_info0+68240
 48595 401e 00       		.sleb128 0
 48596 401f 00000000 		.quad	.LVL345
 48596      00000000 
 48597 4027 00000000 		.quad	.LVL347
 48597      00000000 
 48598 402f 0600     		.value	0x6
 48599 4031 F2       		.byte	0xf2
 48600 4032 00000000 		.long	.Ldebug_info0+68240
 48601 4036 00       		.sleb128 0
 48602 4037 00000000 		.quad	0
 48602      00000000 
 48603 403f 00000000 		.quad	0
 48603      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1201


 48604              	.LLST270:
 48605 4047 00000000 		.quad	.LVL260
 48605      00000000 
 48606 404f 00000000 		.quad	.LVL261
 48606      00000000 
 48607 4057 0600     		.value	0x6
 48608 4059 F2       		.byte	0xf2
 48609 405a 00000000 		.long	.Ldebug_info0+68250
 48610 405e 00       		.sleb128 0
 48611 405f 00000000 		.quad	.LVL262
 48611      00000000 
 48612 4067 00000000 		.quad	.LVL264
 48612      00000000 
 48613 406f 0600     		.value	0x6
 48614 4071 F2       		.byte	0xf2
 48615 4072 00000000 		.long	.Ldebug_info0+68250
 48616 4076 00       		.sleb128 0
 48617 4077 00000000 		.quad	0
 48617      00000000 
 48618 407f 00000000 		.quad	0
 48618      00000000 
 48619              	.LLST271:
 48620 4087 00000000 		.quad	.LVL332
 48620      00000000 
 48621 408f 00000000 		.quad	.LVL334-1
 48621      00000000 
 48622 4097 0100     		.value	0x1
 48623 4099 62       		.byte	0x62
 48624 409a 00000000 		.quad	.LVL334-1
 48624      00000000 
 48625 40a2 00000000 		.quad	.LVL335
 48625      00000000 
 48626 40aa 0300     		.value	0x3
 48627 40ac 91       		.byte	0x91
 48628 40ad B87F     		.sleb128 -72
 48629 40af 00000000 		.quad	0
 48629      00000000 
 48630 40b7 00000000 		.quad	0
 48630      00000000 
 48631              	.LLST272:
 48632 40bf 00000000 		.quad	.LVL332
 48632      00000000 
 48633 40c7 00000000 		.quad	.LVL336
 48633      00000000 
 48634 40cf 0300     		.value	0x3
 48635 40d1 7F       		.byte	0x7f
 48636 40d2 08       		.sleb128 8
 48637 40d3 9F       		.byte	0x9f
 48638 40d4 00000000 		.quad	0
 48638      00000000 
 48639 40dc 00000000 		.quad	0
 48639      00000000 
 48640              	.LLST273:
 48641 40e4 00000000 		.quad	.LVL332
 48641      00000000 
 48642 40ec 00000000 		.quad	.LVL336
 48642      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1202


 48643 40f4 0100     		.value	0x1
 48644 40f6 5F       		.byte	0x5f
 48645 40f7 00000000 		.quad	0
 48645      00000000 
 48646 40ff 00000000 		.quad	0
 48646      00000000 
 48647              	.LLST274:
 48648 4107 00000000 		.quad	.LVL332
 48648      00000000 
 48649 410f 00000000 		.quad	.LVL336
 48649      00000000 
 48650 4117 0100     		.value	0x1
 48651 4119 5E       		.byte	0x5e
 48652 411a 00000000 		.quad	0
 48652      00000000 
 48653 4122 00000000 		.quad	0
 48653      00000000 
 48654              	.LLST275:
 48655 412a 00000000 		.quad	.LVL332
 48655      00000000 
 48656 4132 00000000 		.quad	.LVL336
 48656      00000000 
 48657 413a 0200     		.value	0x2
 48658 413c 31       		.byte	0x31
 48659 413d 9F       		.byte	0x9f
 48660 413e 00000000 		.quad	0
 48660      00000000 
 48661 4146 00000000 		.quad	0
 48661      00000000 
 48662              	.LLST279:
 48663 414e 00000000 		.quad	.LVL333
 48663      00000000 
 48664 4156 00000000 		.quad	.LVL334-1
 48664      00000000 
 48665 415e 0500     		.value	0x5
 48666 4160 71       		.byte	0x71
 48667 4161 00       		.sleb128 0
 48668 4162 38       		.byte	0x38
 48669 4163 1B       		.byte	0x1b
 48670 4164 9F       		.byte	0x9f
 48671 4165 00000000 		.quad	.LVL334-1
 48671      00000000 
 48672 416d 00000000 		.quad	.LVL336
 48672      00000000 
 48673 4175 0800     		.value	0x8
 48674 4177 7F       		.byte	0x7f
 48675 4178 00       		.sleb128 0
 48676 4179 7E       		.byte	0x7e
 48677 417a 00       		.sleb128 0
 48678 417b 1C       		.byte	0x1c
 48679 417c 38       		.byte	0x38
 48680 417d 1B       		.byte	0x1b
 48681 417e 9F       		.byte	0x9f
 48682 417f 00000000 		.quad	0
 48682      00000000 
 48683 4187 00000000 		.quad	0
 48683      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1203


 48684              	.LLST280:
 48685 418f 00000000 		.quad	.LVL268
 48685      00000000 
 48686 4197 00000000 		.quad	.LVL271
 48686      00000000 
 48687 419f 0300     		.value	0x3
 48688 41a1 56       		.byte	0x56
 48689 41a2 93       		.byte	0x93
 48690 41a3 08       		.uleb128 0x8
 48691 41a4 00000000 		.quad	.LVL271
 48691      00000000 
 48692 41ac 00000000 		.quad	.LVL272
 48692      00000000 
 48693 41b4 0300     		.value	0x3
 48694 41b6 50       		.byte	0x50
 48695 41b7 93       		.byte	0x93
 48696 41b8 08       		.uleb128 0x8
 48697 41b9 00000000 		.quad	.LVL272
 48697      00000000 
 48698 41c1 00000000 		.quad	.LVL273
 48698      00000000 
 48699 41c9 0500     		.value	0x5
 48700 41cb 70       		.byte	0x70
 48701 41cc 08       		.sleb128 8
 48702 41cd 9F       		.byte	0x9f
 48703 41ce 93       		.byte	0x93
 48704 41cf 08       		.uleb128 0x8
 48705 41d0 00000000 		.quad	.LVL273
 48705      00000000 
 48706 41d8 00000000 		.quad	.LVL278
 48706      00000000 
 48707 41e0 0300     		.value	0x3
 48708 41e2 50       		.byte	0x50
 48709 41e3 93       		.byte	0x93
 48710 41e4 08       		.uleb128 0x8
 48711 41e5 00000000 		.quad	.LVL339
 48711      00000000 
 48712 41ed 00000000 		.quad	.LVL341
 48712      00000000 
 48713 41f5 0300     		.value	0x3
 48714 41f7 56       		.byte	0x56
 48715 41f8 93       		.byte	0x93
 48716 41f9 08       		.uleb128 0x8
 48717 41fa 00000000 		.quad	.LVL341
 48717      00000000 
 48718 4202 00000000 		.quad	.LVL343
 48718      00000000 
 48719 420a 0300     		.value	0x3
 48720 420c 50       		.byte	0x50
 48721 420d 93       		.byte	0x93
 48722 420e 08       		.uleb128 0x8
 48723 420f 00000000 		.quad	0
 48723      00000000 
 48724 4217 00000000 		.quad	0
 48724      00000000 
 48725              	.LLST281:
 48726 421f 00000000 		.quad	.LVL269
GAS LISTING /tmp/ccmMnd7l.s 			page 1204


 48726      00000000 
 48727 4227 00000000 		.quad	.LVL278
 48727      00000000 
 48728 422f 0100     		.value	0x1
 48729 4231 62       		.byte	0x62
 48730 4232 00000000 		.quad	.LVL339
 48730      00000000 
 48731 423a 00000000 		.quad	.LVL343
 48731      00000000 
 48732 4242 0100     		.value	0x1
 48733 4244 62       		.byte	0x62
 48734 4245 00000000 		.quad	0
 48734      00000000 
 48735 424d 00000000 		.quad	0
 48735      00000000 
 48736              	.LLST282:
 48737 4255 00000000 		.quad	.LVL270
 48737      00000000 
 48738 425d 00000000 		.quad	.LVL278
 48738      00000000 
 48739 4265 0600     		.value	0x6
 48740 4267 F2       		.byte	0xf2
 48741 4268 00000000 		.long	.Ldebug_info0+68756
 48742 426c 00       		.sleb128 0
 48743 426d 00000000 		.quad	.LVL339
 48743      00000000 
 48744 4275 00000000 		.quad	.LVL343
 48744      00000000 
 48745 427d 0600     		.value	0x6
 48746 427f F2       		.byte	0xf2
 48747 4280 00000000 		.long	.Ldebug_info0+68756
 48748 4284 00       		.sleb128 0
 48749 4285 00000000 		.quad	0
 48749      00000000 
 48750 428d 00000000 		.quad	0
 48750      00000000 
 48751              	.LLST283:
 48752 4295 00000000 		.quad	.LVL271
 48752      00000000 
 48753 429d 00000000 		.quad	.LVL272
 48753      00000000 
 48754 42a5 0600     		.value	0x6
 48755 42a7 F2       		.byte	0xf2
 48756 42a8 00000000 		.long	.Ldebug_info0+68766
 48757 42ac 00       		.sleb128 0
 48758 42ad 00000000 		.quad	.LVL273
 48758      00000000 
 48759 42b5 00000000 		.quad	.LVL278
 48759      00000000 
 48760 42bd 0600     		.value	0x6
 48761 42bf F2       		.byte	0xf2
 48762 42c0 00000000 		.long	.Ldebug_info0+68766
 48763 42c4 00       		.sleb128 0
 48764 42c5 00000000 		.quad	0
 48764      00000000 
 48765 42cd 00000000 		.quad	0
 48765      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1205


 48766              	.LLST284:
 48767 42d5 00000000 		.quad	.LVL314
 48767      00000000 
 48768 42dd 00000000 		.quad	.LVL332
 48768      00000000 
 48769 42e5 0300     		.value	0x3
 48770 42e7 5C       		.byte	0x5c
 48771 42e8 93       		.byte	0x93
 48772 42e9 08       		.uleb128 0x8
 48773 42ea 00000000 		.quad	.LVL343
 48773      00000000 
 48774 42f2 00000000 		.quad	.LVL345
 48774      00000000 
 48775 42fa 0300     		.value	0x3
 48776 42fc 5C       		.byte	0x5c
 48777 42fd 93       		.byte	0x93
 48778 42fe 08       		.uleb128 0x8
 48779 42ff 00000000 		.quad	0
 48779      00000000 
 48780 4307 00000000 		.quad	0
 48780      00000000 
 48781              	.LLST285:
 48782 430f 00000000 		.quad	.LVL314
 48782      00000000 
 48783 4317 00000000 		.quad	.LVL332
 48783      00000000 
 48784 431f 0300     		.value	0x3
 48785 4321 5E       		.byte	0x5e
 48786 4322 93       		.byte	0x93
 48787 4323 08       		.uleb128 0x8
 48788 4324 00000000 		.quad	.LVL343
 48788      00000000 
 48789 432c 00000000 		.quad	.LVL345
 48789      00000000 
 48790 4334 0300     		.value	0x3
 48791 4336 5E       		.byte	0x5e
 48792 4337 93       		.byte	0x93
 48793 4338 08       		.uleb128 0x8
 48794 4339 00000000 		.quad	0
 48794      00000000 
 48795 4341 00000000 		.quad	0
 48795      00000000 
 48796              	.LLST286:
 48797 4349 00000000 		.quad	.LVL315
 48797      00000000 
 48798 4351 00000000 		.quad	.LVL317
 48798      00000000 
 48799 4359 0300     		.value	0x3
 48800 435b 5D       		.byte	0x5d
 48801 435c 93       		.byte	0x93
 48802 435d 08       		.uleb128 0x8
 48803 435e 00000000 		.quad	.LVL317
 48803      00000000 
 48804 4366 00000000 		.quad	.LVL326
 48804      00000000 
 48805 436e 0300     		.value	0x3
 48806 4370 5D       		.byte	0x5d
GAS LISTING /tmp/ccmMnd7l.s 			page 1206


 48807 4371 93       		.byte	0x93
 48808 4372 08       		.uleb128 0x8
 48809 4373 00000000 		.quad	.LVL326
 48809      00000000 
 48810 437b 00000000 		.quad	.LVL327
 48810      00000000 
 48811 4383 0500     		.value	0x5
 48812 4385 7D       		.byte	0x7d
 48813 4386 08       		.sleb128 8
 48814 4387 9F       		.byte	0x9f
 48815 4388 93       		.byte	0x93
 48816 4389 08       		.uleb128 0x8
 48817 438a 00000000 		.quad	.LVL327
 48817      00000000 
 48818 4392 00000000 		.quad	.LVL332
 48818      00000000 
 48819 439a 0300     		.value	0x3
 48820 439c 5D       		.byte	0x5d
 48821 439d 93       		.byte	0x93
 48822 439e 08       		.uleb128 0x8
 48823 439f 00000000 		.quad	.LVL343
 48823      00000000 
 48824 43a7 00000000 		.quad	.LVL345
 48824      00000000 
 48825 43af 0300     		.value	0x3
 48826 43b1 5D       		.byte	0x5d
 48827 43b2 93       		.byte	0x93
 48828 43b3 08       		.uleb128 0x8
 48829 43b4 00000000 		.quad	0
 48829      00000000 
 48830 43bc 00000000 		.quad	0
 48830      00000000 
 48831              	.LLST287:
 48832 43c4 00000000 		.quad	.LVL314
 48832      00000000 
 48833 43cc 00000000 		.quad	.LVL332
 48833      00000000 
 48834 43d4 0200     		.value	0x2
 48835 43d6 31       		.byte	0x31
 48836 43d7 9F       		.byte	0x9f
 48837 43d8 00000000 		.quad	.LVL343
 48837      00000000 
 48838 43e0 00000000 		.quad	.LVL345
 48838      00000000 
 48839 43e8 0200     		.value	0x2
 48840 43ea 31       		.byte	0x31
 48841 43eb 9F       		.byte	0x9f
 48842 43ec 00000000 		.quad	0
 48842      00000000 
 48843 43f4 00000000 		.quad	0
 48843      00000000 
 48844              	.LLST288:
 48845 43fc 00000000 		.quad	.LVL314
 48845      00000000 
 48846 4404 00000000 		.quad	.LVL332
 48846      00000000 
 48847 440c 0600     		.value	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1207


 48848 440e F2       		.byte	0xf2
 48849 440f 00000000 		.long	.Ldebug_info0+68897
 48850 4413 00       		.sleb128 0
 48851 4414 00000000 		.quad	.LVL343
 48851      00000000 
 48852 441c 00000000 		.quad	.LVL345
 48852      00000000 
 48853 4424 0600     		.value	0x6
 48854 4426 F2       		.byte	0xf2
 48855 4427 00000000 		.long	.Ldebug_info0+68897
 48856 442b 00       		.sleb128 0
 48857 442c 00000000 		.quad	0
 48857      00000000 
 48858 4434 00000000 		.quad	0
 48858      00000000 
 48859              	.LLST289:
 48860 443c 00000000 		.quad	.LVL317
 48860      00000000 
 48861 4444 00000000 		.quad	.LVL332
 48861      00000000 
 48862 444c 0600     		.value	0x6
 48863 444e F2       		.byte	0xf2
 48864 444f 00000000 		.long	.Ldebug_info0+68881
 48865 4453 00       		.sleb128 0
 48866 4454 00000000 		.quad	.LVL343
 48866      00000000 
 48867 445c 00000000 		.quad	.LVL345
 48867      00000000 
 48868 4464 0600     		.value	0x6
 48869 4466 F2       		.byte	0xf2
 48870 4467 00000000 		.long	.Ldebug_info0+68881
 48871 446b 00       		.sleb128 0
 48872 446c 00000000 		.quad	0
 48872      00000000 
 48873 4474 00000000 		.quad	0
 48873      00000000 
 48874              	.LLST290:
 48875 447c 00000000 		.quad	.LVL319
 48875      00000000 
 48876 4484 00000000 		.quad	.LVL321
 48876      00000000 
 48877 448c 0300     		.value	0x3
 48878 448e 5D       		.byte	0x5d
 48879 448f 93       		.byte	0x93
 48880 4490 08       		.uleb128 0x8
 48881 4491 00000000 		.quad	.LVL321
 48881      00000000 
 48882 4499 00000000 		.quad	.LVL322
 48882      00000000 
 48883 44a1 0300     		.value	0x3
 48884 44a3 50       		.byte	0x50
 48885 44a4 93       		.byte	0x93
 48886 44a5 08       		.uleb128 0x8
 48887 44a6 00000000 		.quad	.LVL322
 48887      00000000 
 48888 44ae 00000000 		.quad	.LVL323
 48888      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1208


 48889 44b6 0500     		.value	0x5
 48890 44b8 70       		.byte	0x70
 48891 44b9 08       		.sleb128 8
 48892 44ba 9F       		.byte	0x9f
 48893 44bb 93       		.byte	0x93
 48894 44bc 08       		.uleb128 0x8
 48895 44bd 00000000 		.quad	.LVL323
 48895      00000000 
 48896 44c5 00000000 		.quad	.LVL325
 48896      00000000 
 48897 44cd 0300     		.value	0x3
 48898 44cf 50       		.byte	0x50
 48899 44d0 93       		.byte	0x93
 48900 44d1 08       		.uleb128 0x8
 48901 44d2 00000000 		.quad	.LVL343
 48901      00000000 
 48902 44da 00000000 		.quad	.LVL345
 48902      00000000 
 48903 44e2 0300     		.value	0x3
 48904 44e4 5D       		.byte	0x5d
 48905 44e5 93       		.byte	0x93
 48906 44e6 08       		.uleb128 0x8
 48907 44e7 00000000 		.quad	0
 48907      00000000 
 48908 44ef 00000000 		.quad	0
 48908      00000000 
 48909              	.LLST291:
 48910 44f7 00000000 		.quad	.LVL319
 48910      00000000 
 48911 44ff 00000000 		.quad	.LVL326
 48911      00000000 
 48912 4507 0100     		.value	0x1
 48913 4509 62       		.byte	0x62
 48914 450a 00000000 		.quad	.LVL343
 48914      00000000 
 48915 4512 00000000 		.quad	.LVL345
 48915      00000000 
 48916 451a 0100     		.value	0x1
 48917 451c 62       		.byte	0x62
 48918 451d 00000000 		.quad	0
 48918      00000000 
 48919 4525 00000000 		.quad	0
 48919      00000000 
 48920              	.LLST292:
 48921 452d 00000000 		.quad	.LVL320
 48921      00000000 
 48922 4535 00000000 		.quad	.LVL326
 48922      00000000 
 48923 453d 0600     		.value	0x6
 48924 453f F2       		.byte	0xf2
 48925 4540 00000000 		.long	.Ldebug_info0+69066
 48926 4544 00       		.sleb128 0
 48927 4545 00000000 		.quad	.LVL343
 48927      00000000 
 48928 454d 00000000 		.quad	.LVL345
 48928      00000000 
 48929 4555 0600     		.value	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1209


 48930 4557 F2       		.byte	0xf2
 48931 4558 00000000 		.long	.Ldebug_info0+69066
 48932 455c 00       		.sleb128 0
 48933 455d 00000000 		.quad	0
 48933      00000000 
 48934 4565 00000000 		.quad	0
 48934      00000000 
 48935              	.LLST293:
 48936 456d 00000000 		.quad	.LVL321
 48936      00000000 
 48937 4575 00000000 		.quad	.LVL322
 48937      00000000 
 48938 457d 0600     		.value	0x6
 48939 457f F2       		.byte	0xf2
 48940 4580 00000000 		.long	.Ldebug_info0+69076
 48941 4584 00       		.sleb128 0
 48942 4585 00000000 		.quad	.LVL323
 48942      00000000 
 48943 458d 00000000 		.quad	.LVL325
 48943      00000000 
 48944 4595 0600     		.value	0x6
 48945 4597 F2       		.byte	0xf2
 48946 4598 00000000 		.long	.Ldebug_info0+69076
 48947 459c 00       		.sleb128 0
 48948 459d 00000000 		.quad	0
 48948      00000000 
 48949 45a5 00000000 		.quad	0
 48949      00000000 
 48950              	.LLST294:
 48951 45ad 00000000 		.quad	.LVL328
 48951      00000000 
 48952 45b5 00000000 		.quad	.LVL330-1
 48952      00000000 
 48953 45bd 0100     		.value	0x1
 48954 45bf 62       		.byte	0x62
 48955 45c0 00000000 		.quad	.LVL330-1
 48955      00000000 
 48956 45c8 00000000 		.quad	.LVL331
 48956      00000000 
 48957 45d0 0300     		.value	0x3
 48958 45d2 91       		.byte	0x91
 48959 45d3 B87F     		.sleb128 -72
 48960 45d5 00000000 		.quad	0
 48960      00000000 
 48961 45dd 00000000 		.quad	0
 48961      00000000 
 48962              	.LLST295:
 48963 45e5 00000000 		.quad	.LVL328
 48963      00000000 
 48964 45ed 00000000 		.quad	.LVL332
 48964      00000000 
 48965 45f5 0300     		.value	0x3
 48966 45f7 7D       		.byte	0x7d
 48967 45f8 08       		.sleb128 8
 48968 45f9 9F       		.byte	0x9f
 48969 45fa 00000000 		.quad	0
 48969      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1210


 48970 4602 00000000 		.quad	0
 48970      00000000 
 48971              	.LLST296:
 48972 460a 00000000 		.quad	.LVL328
 48972      00000000 
 48973 4612 00000000 		.quad	.LVL332
 48973      00000000 
 48974 461a 0100     		.value	0x1
 48975 461c 5D       		.byte	0x5d
 48976 461d 00000000 		.quad	0
 48976      00000000 
 48977 4625 00000000 		.quad	0
 48977      00000000 
 48978              	.LLST297:
 48979 462d 00000000 		.quad	.LVL328
 48979      00000000 
 48980 4635 00000000 		.quad	.LVL332
 48980      00000000 
 48981 463d 0100     		.value	0x1
 48982 463f 5E       		.byte	0x5e
 48983 4640 00000000 		.quad	0
 48983      00000000 
 48984 4648 00000000 		.quad	0
 48984      00000000 
 48985              	.LLST298:
 48986 4650 00000000 		.quad	.LVL328
 48986      00000000 
 48987 4658 00000000 		.quad	.LVL332
 48987      00000000 
 48988 4660 0200     		.value	0x2
 48989 4662 31       		.byte	0x31
 48990 4663 9F       		.byte	0x9f
 48991 4664 00000000 		.quad	0
 48991      00000000 
 48992 466c 00000000 		.quad	0
 48992      00000000 
 48993              	.LLST302:
 48994 4674 00000000 		.quad	.LVL329
 48994      00000000 
 48995 467c 00000000 		.quad	.LVL330-1
 48995      00000000 
 48996 4684 0500     		.value	0x5
 48997 4686 71       		.byte	0x71
 48998 4687 00       		.sleb128 0
 48999 4688 38       		.byte	0x38
 49000 4689 1B       		.byte	0x1b
 49001 468a 9F       		.byte	0x9f
 49002 468b 00000000 		.quad	.LVL330-1
 49002      00000000 
 49003 4693 00000000 		.quad	.LVL332
 49003      00000000 
 49004 469b 0800     		.value	0x8
 49005 469d 7D       		.byte	0x7d
 49006 469e 00       		.sleb128 0
 49007 469f 7E       		.byte	0x7e
 49008 46a0 00       		.sleb128 0
 49009 46a1 1C       		.byte	0x1c
GAS LISTING /tmp/ccmMnd7l.s 			page 1211


 49010 46a2 38       		.byte	0x38
 49011 46a3 1B       		.byte	0x1b
 49012 46a4 9F       		.byte	0x9f
 49013 46a5 00000000 		.quad	0
 49013      00000000 
 49014 46ad 00000000 		.quad	0
 49014      00000000 
 49015              	.LLST303:
 49016 46b5 00000000 		.quad	.LVL280
 49016      00000000 
 49017 46bd 00000000 		.quad	.LVL314
 49017      00000000 
 49018 46c5 0A00     		.value	0xa
 49019 46c7 03       		.byte	0x3
 49020 46c8 00000000 		.quad	.LC14
 49020      00000000 
 49021 46d0 9F       		.byte	0x9f
 49022 46d1 00000000 		.quad	.LVL336
 49022      00000000 
 49023 46d9 00000000 		.quad	.LVL339
 49023      00000000 
 49024 46e1 0A00     		.value	0xa
 49025 46e3 03       		.byte	0x3
 49026 46e4 00000000 		.quad	.LC14
 49026      00000000 
 49027 46ec 9F       		.byte	0x9f
 49028 46ed 00000000 		.quad	.LVL347
 49028      00000000 
 49029 46f5 00000000 		.quad	.LVL352
 49029      00000000 
 49030 46fd 0A00     		.value	0xa
 49031 46ff 03       		.byte	0x3
 49032 4700 00000000 		.quad	.LC14
 49032      00000000 
 49033 4708 9F       		.byte	0x9f
 49034 4709 00000000 		.quad	.LVL355
 49034      00000000 
 49035 4711 00000000 		.quad	.LFE6046
 49035      00000000 
 49036 4719 0A00     		.value	0xa
 49037 471b 03       		.byte	0x3
 49038 471c 00000000 		.quad	.LC14
 49038      00000000 
 49039 4724 9F       		.byte	0x9f
 49040 4725 00000000 		.quad	0
 49040      00000000 
 49041 472d 00000000 		.quad	0
 49041      00000000 
 49042              	.LLST304:
 49043 4735 00000000 		.quad	.LVL284
 49043      00000000 
 49044 473d 00000000 		.quad	.LVL288-1
 49044      00000000 
 49045 4745 0100     		.value	0x1
 49046 4747 51       		.byte	0x51
 49047 4748 00000000 		.quad	0
 49047      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1212


 49048 4750 00000000 		.quad	0
 49048      00000000 
 49049              	.LLST305:
 49050 4758 00000000 		.quad	.LVL284
 49050      00000000 
 49051 4760 00000000 		.quad	.LVL314
 49051      00000000 
 49052 4768 0400     		.value	0x4
 49053 476a 0A       		.byte	0xa
 49054 476b 0401     		.value	0x104
 49055 476d 9F       		.byte	0x9f
 49056 476e 00000000 		.quad	.LVL336
 49056      00000000 
 49057 4776 00000000 		.quad	.LVL339
 49057      00000000 
 49058 477e 0400     		.value	0x4
 49059 4780 0A       		.byte	0xa
 49060 4781 0401     		.value	0x104
 49061 4783 9F       		.byte	0x9f
 49062 4784 00000000 		.quad	.LVL347
 49062      00000000 
 49063 478c 00000000 		.quad	.LVL352
 49063      00000000 
 49064 4794 0400     		.value	0x4
 49065 4796 0A       		.byte	0xa
 49066 4797 0401     		.value	0x104
 49067 4799 9F       		.byte	0x9f
 49068 479a 00000000 		.quad	.LVL355
 49068      00000000 
 49069 47a2 00000000 		.quad	.LFE6046
 49069      00000000 
 49070 47aa 0400     		.value	0x4
 49071 47ac 0A       		.byte	0xa
 49072 47ad 0401     		.value	0x104
 49073 47af 9F       		.byte	0x9f
 49074 47b0 00000000 		.quad	0
 49074      00000000 
 49075 47b8 00000000 		.quad	0
 49075      00000000 
 49076              	.LLST306:
 49077 47c0 00000000 		.quad	.LVL284
 49077      00000000 
 49078 47c8 00000000 		.quad	.LVL314
 49078      00000000 
 49079 47d0 0200     		.value	0x2
 49080 47d2 34       		.byte	0x34
 49081 47d3 9F       		.byte	0x9f
 49082 47d4 00000000 		.quad	.LVL336
 49082      00000000 
 49083 47dc 00000000 		.quad	.LVL339
 49083      00000000 
 49084 47e4 0200     		.value	0x2
 49085 47e6 34       		.byte	0x34
 49086 47e7 9F       		.byte	0x9f
 49087 47e8 00000000 		.quad	.LVL347
 49087      00000000 
 49088 47f0 00000000 		.quad	.LVL352
GAS LISTING /tmp/ccmMnd7l.s 			page 1213


 49088      00000000 
 49089 47f8 0200     		.value	0x2
 49090 47fa 34       		.byte	0x34
 49091 47fb 9F       		.byte	0x9f
 49092 47fc 00000000 		.quad	.LVL355
 49092      00000000 
 49093 4804 00000000 		.quad	.LFE6046
 49093      00000000 
 49094 480c 0200     		.value	0x2
 49095 480e 34       		.byte	0x34
 49096 480f 9F       		.byte	0x9f
 49097 4810 00000000 		.quad	0
 49097      00000000 
 49098 4818 00000000 		.quad	0
 49098      00000000 
 49099              	.LLST308:
 49100 4820 00000000 		.quad	.LVL284
 49100      00000000 
 49101 4828 00000000 		.quad	.LVL287
 49101      00000000 
 49102 4830 0200     		.value	0x2
 49103 4832 71       		.byte	0x71
 49104 4833 18       		.sleb128 24
 49105 4834 00000000 		.quad	0
 49105      00000000 
 49106 483c 00000000 		.quad	0
 49106      00000000 
 49107              	.LLST309:
 49108 4844 00000000 		.quad	.LVL284
 49108      00000000 
 49109 484c 00000000 		.quad	.LVL314
 49109      00000000 
 49110 4854 0400     		.value	0x4
 49111 4856 0B       		.byte	0xb
 49112 4857 FBFE     		.value	0xfefb
 49113 4859 9F       		.byte	0x9f
 49114 485a 00000000 		.quad	.LVL336
 49114      00000000 
 49115 4862 00000000 		.quad	.LVL339
 49115      00000000 
 49116 486a 0400     		.value	0x4
 49117 486c 0B       		.byte	0xb
 49118 486d FBFE     		.value	0xfefb
 49119 486f 9F       		.byte	0x9f
 49120 4870 00000000 		.quad	.LVL347
 49120      00000000 
 49121 4878 00000000 		.quad	.LVL352
 49121      00000000 
 49122 4880 0400     		.value	0x4
 49123 4882 0B       		.byte	0xb
 49124 4883 FBFE     		.value	0xfefb
 49125 4885 9F       		.byte	0x9f
 49126 4886 00000000 		.quad	.LVL355
 49126      00000000 
 49127 488e 00000000 		.quad	.LFE6046
 49127      00000000 
 49128 4896 0400     		.value	0x4
GAS LISTING /tmp/ccmMnd7l.s 			page 1214


 49129 4898 0B       		.byte	0xb
 49130 4899 FBFE     		.value	0xfefb
 49131 489b 9F       		.byte	0x9f
 49132 489c 00000000 		.quad	0
 49132      00000000 
 49133 48a4 00000000 		.quad	0
 49133      00000000 
 49134              	.LLST310:
 49135 48ac 00000000 		.quad	.LVL284
 49135      00000000 
 49136 48b4 00000000 		.quad	.LVL288-1
 49136      00000000 
 49137 48bc 0300     		.value	0x3
 49138 48be 71       		.byte	0x71
 49139 48bf 18       		.sleb128 24
 49140 48c0 9F       		.byte	0x9f
 49141 48c1 00000000 		.quad	0
 49141      00000000 
 49142 48c9 00000000 		.quad	0
 49142      00000000 
 49143              	.LLST316:
 49144 48d1 00000000 		.quad	.LVL284
 49144      00000000 
 49145 48d9 00000000 		.quad	.LVL285
 49145      00000000 
 49146 48e1 0900     		.value	0x9
 49147 48e3 71       		.byte	0x71
 49148 48e4 18       		.sleb128 24
 49149 48e5 94       		.byte	0x94
 49150 48e6 04       		.byte	0x4
 49151 48e7 0B       		.byte	0xb
 49152 48e8 FBFE     		.value	0xfefb
 49153 48ea 1A       		.byte	0x1a
 49154 48eb 9F       		.byte	0x9f
 49155 48ec 00000000 		.quad	.LVL285
 49155      00000000 
 49156 48f4 00000000 		.quad	.LVL286
 49156      00000000 
 49157 48fc 0100     		.value	0x1
 49158 48fe 50       		.byte	0x50
 49159 48ff 00000000 		.quad	.LVL286
 49159      00000000 
 49160 4907 00000000 		.quad	.LVL287
 49160      00000000 
 49161 490f 0900     		.value	0x9
 49162 4911 71       		.byte	0x71
 49163 4912 18       		.sleb128 24
 49164 4913 94       		.byte	0x94
 49165 4914 04       		.byte	0x4
 49166 4915 0B       		.byte	0xb
 49167 4916 FBFE     		.value	0xfefb
 49168 4918 1A       		.byte	0x1a
 49169 4919 9F       		.byte	0x9f
 49170 491a 00000000 		.quad	0
 49170      00000000 
 49171 4922 00000000 		.quad	0
 49171      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1215


 49172              	.LLST317:
 49173 492a 00000000 		.quad	.LVL287
 49173      00000000 
 49174 4932 00000000 		.quad	.LVL288-1
 49174      00000000 
 49175 493a 0100     		.value	0x1
 49176 493c 61       		.byte	0x61
 49177 493d 00000000 		.quad	.LVL288-1
 49177      00000000 
 49178 4945 00000000 		.quad	.LVL291
 49178      00000000 
 49179 494d 1300     		.value	0x13
 49180 494f 91       		.byte	0x91
 49181 4950 B87F     		.sleb128 -72
 49182 4952 F6       		.byte	0xf6
 49183 4953 08       		.byte	0x8
 49184 4954 29       		.uleb128 0x29
 49185 4955 F4       		.byte	0xf4
 49186 4956 29       		.uleb128 0x29
 49187 4957 08       		.byte	0x8
 49188 4958 00000000 		.long	0
 49189 495c 00408F40 		.long	0x408f4000
 49190 4960 1E       		.byte	0x1e
 49191 4961 9F       		.byte	0x9f
 49192 4962 00000000 		.quad	.LVL291
 49192      00000000 
 49193 496a 00000000 		.quad	.LVL292
 49193      00000000 
 49194 4972 0B00     		.value	0xb
 49195 4974 F5       		.byte	0xf5
 49196 4975 11       		.uleb128 0x11
 49197 4976 29       		.uleb128 0x29
 49198 4977 91       		.byte	0x91
 49199 4978 B87F     		.sleb128 -72
 49200 497a F6       		.byte	0xf6
 49201 497b 08       		.byte	0x8
 49202 497c 29       		.uleb128 0x29
 49203 497d 1E       		.byte	0x1e
 49204 497e 9F       		.byte	0x9f
 49205 497f 00000000 		.quad	.LVL292
 49205      00000000 
 49206 4987 00000000 		.quad	.LVL314
 49206      00000000 
 49207 498f 1300     		.value	0x13
 49208 4991 91       		.byte	0x91
 49209 4992 B87F     		.sleb128 -72
 49210 4994 F6       		.byte	0xf6
 49211 4995 08       		.byte	0x8
 49212 4996 29       		.uleb128 0x29
 49213 4997 F4       		.byte	0xf4
 49214 4998 29       		.uleb128 0x29
 49215 4999 08       		.byte	0x8
 49216 499a 00000000 		.long	0
 49217 499e 00408F40 		.long	0x408f4000
 49218 49a2 1E       		.byte	0x1e
 49219 49a3 9F       		.byte	0x9f
 49220 49a4 00000000 		.quad	.LVL336
GAS LISTING /tmp/ccmMnd7l.s 			page 1216


 49220      00000000 
 49221 49ac 00000000 		.quad	.LVL339
 49221      00000000 
 49222 49b4 1300     		.value	0x13
 49223 49b6 91       		.byte	0x91
 49224 49b7 B87F     		.sleb128 -72
 49225 49b9 F6       		.byte	0xf6
 49226 49ba 08       		.byte	0x8
 49227 49bb 29       		.uleb128 0x29
 49228 49bc F4       		.byte	0xf4
 49229 49bd 29       		.uleb128 0x29
 49230 49be 08       		.byte	0x8
 49231 49bf 00000000 		.long	0
 49232 49c3 00408F40 		.long	0x408f4000
 49233 49c7 1E       		.byte	0x1e
 49234 49c8 9F       		.byte	0x9f
 49235 49c9 00000000 		.quad	.LVL347
 49235      00000000 
 49236 49d1 00000000 		.quad	.LVL352
 49236      00000000 
 49237 49d9 1300     		.value	0x13
 49238 49db 91       		.byte	0x91
 49239 49dc B87F     		.sleb128 -72
 49240 49de F6       		.byte	0xf6
 49241 49df 08       		.byte	0x8
 49242 49e0 29       		.uleb128 0x29
 49243 49e1 F4       		.byte	0xf4
 49244 49e2 29       		.uleb128 0x29
 49245 49e3 08       		.byte	0x8
 49246 49e4 00000000 		.long	0
 49247 49e8 00408F40 		.long	0x408f4000
 49248 49ec 1E       		.byte	0x1e
 49249 49ed 9F       		.byte	0x9f
 49250 49ee 00000000 		.quad	.LVL355
 49250      00000000 
 49251 49f6 00000000 		.quad	.LFE6046
 49251      00000000 
 49252 49fe 1300     		.value	0x13
 49253 4a00 91       		.byte	0x91
 49254 4a01 B87F     		.sleb128 -72
 49255 4a03 F6       		.byte	0xf6
 49256 4a04 08       		.byte	0x8
 49257 4a05 29       		.uleb128 0x29
 49258 4a06 F4       		.byte	0xf4
 49259 4a07 29       		.uleb128 0x29
 49260 4a08 08       		.byte	0x8
 49261 4a09 00000000 		.long	0
 49262 4a0d 00408F40 		.long	0x408f4000
 49263 4a11 1E       		.byte	0x1e
 49264 4a12 9F       		.byte	0x9f
 49265 4a13 00000000 		.quad	0
 49265      00000000 
 49266 4a1b 00000000 		.quad	0
 49266      00000000 
 49267              	.LLST318:
 49268 4a23 00000000 		.quad	.LVL289
 49268      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1217


 49269 4a2b 00000000 		.quad	.LVL314
 49269      00000000 
 49270 4a33 0A00     		.value	0xa
 49271 4a35 03       		.byte	0x3
 49272 4a36 00000000 		.quad	.LC15
 49272      00000000 
 49273 4a3e 9F       		.byte	0x9f
 49274 4a3f 00000000 		.quad	.LVL336
 49274      00000000 
 49275 4a47 00000000 		.quad	.LVL339
 49275      00000000 
 49276 4a4f 0A00     		.value	0xa
 49277 4a51 03       		.byte	0x3
 49278 4a52 00000000 		.quad	.LC15
 49278      00000000 
 49279 4a5a 9F       		.byte	0x9f
 49280 4a5b 00000000 		.quad	.LVL347
 49280      00000000 
 49281 4a63 00000000 		.quad	.LVL352
 49281      00000000 
 49282 4a6b 0A00     		.value	0xa
 49283 4a6d 03       		.byte	0x3
 49284 4a6e 00000000 		.quad	.LC15
 49284      00000000 
 49285 4a76 9F       		.byte	0x9f
 49286 4a77 00000000 		.quad	.LVL355
 49286      00000000 
 49287 4a7f 00000000 		.quad	.LFE6046
 49287      00000000 
 49288 4a87 0A00     		.value	0xa
 49289 4a89 03       		.byte	0x3
 49290 4a8a 00000000 		.quad	.LC15
 49290      00000000 
 49291 4a92 9F       		.byte	0x9f
 49292 4a93 00000000 		.quad	0
 49292      00000000 
 49293 4a9b 00000000 		.quad	0
 49293      00000000 
 49294              	.LLST319:
 49295 4aa3 00000000 		.quad	.LVL289
 49295      00000000 
 49296 4aab 00000000 		.quad	.LVL290-1
 49296      00000000 
 49297 4ab3 0100     		.value	0x1
 49298 4ab5 50       		.byte	0x50
 49299 4ab6 00000000 		.quad	.LVL290-1
 49299      00000000 
 49300 4abe 00000000 		.quad	.LVL294
 49300      00000000 
 49301 4ac6 0100     		.value	0x1
 49302 4ac8 56       		.byte	0x56
 49303 4ac9 00000000 		.quad	0
 49303      00000000 
 49304 4ad1 00000000 		.quad	0
 49304      00000000 
 49305              	.LLST320:
 49306 4ad9 00000000 		.quad	.LVL290
GAS LISTING /tmp/ccmMnd7l.s 			page 1218


 49306      00000000 
 49307 4ae1 00000000 		.quad	.LVL292
 49307      00000000 
 49308 4ae9 1200     		.value	0x12
 49309 4aeb 77       		.byte	0x77
 49310 4aec 00       		.sleb128 0
 49311 4aed F6       		.byte	0xf6
 49312 4aee 08       		.byte	0x8
 49313 4aef 29       		.uleb128 0x29
 49314 4af0 F4       		.byte	0xf4
 49315 4af1 29       		.uleb128 0x29
 49316 4af2 08       		.byte	0x8
 49317 4af3 00000000 		.long	0
 49318 4af7 00408F40 		.long	0x408f4000
 49319 4afb 1E       		.byte	0x1e
 49320 4afc 9F       		.byte	0x9f
 49321 4afd 00000000 		.quad	.LVL292
 49321      00000000 
 49322 4b05 00000000 		.quad	.LVL293-1
 49322      00000000 
 49323 4b0d 0100     		.value	0x1
 49324 4b0f 61       		.byte	0x61
 49325 4b10 00000000 		.quad	.LVL293-1
 49325      00000000 
 49326 4b18 00000000 		.quad	.LVL310
 49326      00000000 
 49327 4b20 1200     		.value	0x12
 49328 4b22 77       		.byte	0x77
 49329 4b23 00       		.sleb128 0
 49330 4b24 F6       		.byte	0xf6
 49331 4b25 08       		.byte	0x8
 49332 4b26 29       		.uleb128 0x29
 49333 4b27 F4       		.byte	0xf4
 49334 4b28 29       		.uleb128 0x29
 49335 4b29 08       		.byte	0x8
 49336 4b2a 00000000 		.long	0
 49337 4b2e 00408F40 		.long	0x408f4000
 49338 4b32 1E       		.byte	0x1e
 49339 4b33 9F       		.byte	0x9f
 49340 4b34 00000000 		.quad	.LVL310
 49340      00000000 
 49341 4b3c 00000000 		.quad	.LVL314
 49341      00000000 
 49342 4b44 1300     		.value	0x13
 49343 4b46 91       		.byte	0x91
 49344 4b47 B07F     		.sleb128 -80
 49345 4b49 F6       		.byte	0xf6
 49346 4b4a 08       		.byte	0x8
 49347 4b4b 29       		.uleb128 0x29
 49348 4b4c F4       		.byte	0xf4
 49349 4b4d 29       		.uleb128 0x29
 49350 4b4e 08       		.byte	0x8
 49351 4b4f 00000000 		.long	0
 49352 4b53 00408F40 		.long	0x408f4000
 49353 4b57 1E       		.byte	0x1e
 49354 4b58 9F       		.byte	0x9f
 49355 4b59 00000000 		.quad	.LVL336
GAS LISTING /tmp/ccmMnd7l.s 			page 1219


 49355      00000000 
 49356 4b61 00000000 		.quad	.LVL339
 49356      00000000 
 49357 4b69 1200     		.value	0x12
 49358 4b6b 77       		.byte	0x77
 49359 4b6c 00       		.sleb128 0
 49360 4b6d F6       		.byte	0xf6
 49361 4b6e 08       		.byte	0x8
 49362 4b6f 29       		.uleb128 0x29
 49363 4b70 F4       		.byte	0xf4
 49364 4b71 29       		.uleb128 0x29
 49365 4b72 08       		.byte	0x8
 49366 4b73 00000000 		.long	0
 49367 4b77 00408F40 		.long	0x408f4000
 49368 4b7b 1E       		.byte	0x1e
 49369 4b7c 9F       		.byte	0x9f
 49370 4b7d 00000000 		.quad	.LVL347
 49370      00000000 
 49371 4b85 00000000 		.quad	.LVL348
 49371      00000000 
 49372 4b8d 1200     		.value	0x12
 49373 4b8f 77       		.byte	0x77
 49374 4b90 00       		.sleb128 0
 49375 4b91 F6       		.byte	0xf6
 49376 4b92 08       		.byte	0x8
 49377 4b93 29       		.uleb128 0x29
 49378 4b94 F4       		.byte	0xf4
 49379 4b95 29       		.uleb128 0x29
 49380 4b96 08       		.byte	0x8
 49381 4b97 00000000 		.long	0
 49382 4b9b 00408F40 		.long	0x408f4000
 49383 4b9f 1E       		.byte	0x1e
 49384 4ba0 9F       		.byte	0x9f
 49385 4ba1 00000000 		.quad	.LVL348
 49385      00000000 
 49386 4ba9 00000000 		.quad	.LVL352
 49386      00000000 
 49387 4bb1 1300     		.value	0x13
 49388 4bb3 91       		.byte	0x91
 49389 4bb4 B07F     		.sleb128 -80
 49390 4bb6 F6       		.byte	0xf6
 49391 4bb7 08       		.byte	0x8
 49392 4bb8 29       		.uleb128 0x29
 49393 4bb9 F4       		.byte	0xf4
 49394 4bba 29       		.uleb128 0x29
 49395 4bbb 08       		.byte	0x8
 49396 4bbc 00000000 		.long	0
 49397 4bc0 00408F40 		.long	0x408f4000
 49398 4bc4 1E       		.byte	0x1e
 49399 4bc5 9F       		.byte	0x9f
 49400 4bc6 00000000 		.quad	.LVL355
 49400      00000000 
 49401 4bce 00000000 		.quad	.LFE6046
 49401      00000000 
 49402 4bd6 1200     		.value	0x12
 49403 4bd8 77       		.byte	0x77
 49404 4bd9 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1220


 49405 4bda F6       		.byte	0xf6
 49406 4bdb 08       		.byte	0x8
 49407 4bdc 29       		.uleb128 0x29
 49408 4bdd F4       		.byte	0xf4
 49409 4bde 29       		.uleb128 0x29
 49410 4bdf 08       		.byte	0x8
 49411 4be0 00000000 		.long	0
 49412 4be4 00408F40 		.long	0x408f4000
 49413 4be8 1E       		.byte	0x1e
 49414 4be9 9F       		.byte	0x9f
 49415 4bea 00000000 		.quad	0
 49415      00000000 
 49416 4bf2 00000000 		.quad	0
 49416      00000000 
 49417              	.LLST321:
 49418 4bfa 00000000 		.quad	.LVL294
 49418      00000000 
 49419 4c02 00000000 		.quad	.LVL314
 49419      00000000 
 49420 4c0a 0A00     		.value	0xa
 49421 4c0c 03       		.byte	0x3
 49422 4c0d 00000000 		.quad	.LC16
 49422      00000000 
 49423 4c15 9F       		.byte	0x9f
 49424 4c16 00000000 		.quad	.LVL336
 49424      00000000 
 49425 4c1e 00000000 		.quad	.LVL339
 49425      00000000 
 49426 4c26 0A00     		.value	0xa
 49427 4c28 03       		.byte	0x3
 49428 4c29 00000000 		.quad	.LC16
 49428      00000000 
 49429 4c31 9F       		.byte	0x9f
 49430 4c32 00000000 		.quad	.LVL347
 49430      00000000 
 49431 4c3a 00000000 		.quad	.LVL352
 49431      00000000 
 49432 4c42 0A00     		.value	0xa
 49433 4c44 03       		.byte	0x3
 49434 4c45 00000000 		.quad	.LC16
 49434      00000000 
 49435 4c4d 9F       		.byte	0x9f
 49436 4c4e 00000000 		.quad	.LVL355
 49436      00000000 
 49437 4c56 00000000 		.quad	.LFE6046
 49437      00000000 
 49438 4c5e 0A00     		.value	0xa
 49439 4c60 03       		.byte	0x3
 49440 4c61 00000000 		.quad	.LC16
 49440      00000000 
 49441 4c69 9F       		.byte	0x9f
 49442 4c6a 00000000 		.quad	0
 49442      00000000 
 49443 4c72 00000000 		.quad	0
 49443      00000000 
 49444              	.LLST322:
 49445 4c7a 00000000 		.quad	.LVL294
GAS LISTING /tmp/ccmMnd7l.s 			page 1221


 49445      00000000 
 49446 4c82 00000000 		.quad	.LVL295-1
 49446      00000000 
 49447 4c8a 0100     		.value	0x1
 49448 4c8c 50       		.byte	0x50
 49449 4c8d 00000000 		.quad	.LVL295-1
 49449      00000000 
 49450 4c95 00000000 		.quad	.LVL301
 49450      00000000 
 49451 4c9d 0100     		.value	0x1
 49452 4c9f 56       		.byte	0x56
 49453 4ca0 00000000 		.quad	.LVL336
 49453      00000000 
 49454 4ca8 00000000 		.quad	.LVL339
 49454      00000000 
 49455 4cb0 0100     		.value	0x1
 49456 4cb2 56       		.byte	0x56
 49457 4cb3 00000000 		.quad	.LVL355
 49457      00000000 
 49458 4cbb 00000000 		.quad	.LFE6046
 49458      00000000 
 49459 4cc3 0100     		.value	0x1
 49460 4cc5 56       		.byte	0x56
 49461 4cc6 00000000 		.quad	0
 49461      00000000 
 49462 4cce 00000000 		.quad	0
 49462      00000000 
 49463              	.LLST323:
 49464 4cd6 00000000 		.quad	.LVL295
 49464      00000000 
 49465 4cde 00000000 		.quad	.LVL301
 49465      00000000 
 49466 4ce6 0100     		.value	0x1
 49467 4ce8 56       		.byte	0x56
 49468 4ce9 00000000 		.quad	.LVL336
 49468      00000000 
 49469 4cf1 00000000 		.quad	.LVL339
 49469      00000000 
 49470 4cf9 0100     		.value	0x1
 49471 4cfb 56       		.byte	0x56
 49472 4cfc 00000000 		.quad	.LVL355
 49472      00000000 
 49473 4d04 00000000 		.quad	.LFE6046
 49473      00000000 
 49474 4d0c 0100     		.value	0x1
 49475 4d0e 56       		.byte	0x56
 49476 4d0f 00000000 		.quad	0
 49476      00000000 
 49477 4d17 00000000 		.quad	0
 49477      00000000 
 49478              	.LLST324:
 49479 4d1f 00000000 		.quad	.LVL295
 49479      00000000 
 49480 4d27 00000000 		.quad	.LVL314
 49480      00000000 
 49481 4d2f 0200     		.value	0x2
 49482 4d31 3A       		.byte	0x3a
GAS LISTING /tmp/ccmMnd7l.s 			page 1222


 49483 4d32 9F       		.byte	0x9f
 49484 4d33 00000000 		.quad	.LVL336
 49484      00000000 
 49485 4d3b 00000000 		.quad	.LVL339
 49485      00000000 
 49486 4d43 0200     		.value	0x2
 49487 4d45 3A       		.byte	0x3a
 49488 4d46 9F       		.byte	0x9f
 49489 4d47 00000000 		.quad	.LVL347
 49489      00000000 
 49490 4d4f 00000000 		.quad	.LVL352
 49490      00000000 
 49491 4d57 0200     		.value	0x2
 49492 4d59 3A       		.byte	0x3a
 49493 4d5a 9F       		.byte	0x9f
 49494 4d5b 00000000 		.quad	.LVL355
 49494      00000000 
 49495 4d63 00000000 		.quad	.LFE6046
 49495      00000000 
 49496 4d6b 0200     		.value	0x2
 49497 4d6d 3A       		.byte	0x3a
 49498 4d6e 9F       		.byte	0x9f
 49499 4d6f 00000000 		.quad	0
 49499      00000000 
 49500 4d77 00000000 		.quad	0
 49500      00000000 
 49501              	.LLST325:
 49502 4d7f 00000000 		.quad	.LVL295
 49502      00000000 
 49503 4d87 00000000 		.quad	.LVL298
 49503      00000000 
 49504 4d8f 0A00     		.value	0xa
 49505 4d91 76       		.byte	0x76
 49506 4d92 00       		.sleb128 0
 49507 4d93 76       		.byte	0x76
 49508 4d94 00       		.sleb128 0
 49509 4d95 06       		.byte	0x6
 49510 4d96 48       		.byte	0x48
 49511 4d97 1C       		.byte	0x1c
 49512 4d98 06       		.byte	0x6
 49513 4d99 22       		.byte	0x22
 49514 4d9a 9F       		.byte	0x9f
 49515 4d9b 00000000 		.quad	.LVL336
 49515      00000000 
 49516 4da3 00000000 		.quad	.LVL337-1
 49516      00000000 
 49517 4dab 0600     		.value	0x6
 49518 4dad 76       		.byte	0x76
 49519 4dae 00       		.sleb128 0
 49520 4daf 70       		.byte	0x70
 49521 4db0 00       		.sleb128 0
 49522 4db1 22       		.byte	0x22
 49523 4db2 9F       		.byte	0x9f
 49524 4db3 00000000 		.quad	.LVL355
 49524      00000000 
 49525 4dbb 00000000 		.quad	.LVL356-1
 49525      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1223


 49526 4dc3 0600     		.value	0x6
 49527 4dc5 76       		.byte	0x76
 49528 4dc6 00       		.sleb128 0
 49529 4dc7 70       		.byte	0x70
 49530 4dc8 00       		.sleb128 0
 49531 4dc9 22       		.byte	0x22
 49532 4dca 9F       		.byte	0x9f
 49533 4dcb 00000000 		.quad	0
 49533      00000000 
 49534 4dd3 00000000 		.quad	0
 49534      00000000 
 49535              	.LLST326:
 49536 4ddb 00000000 		.quad	.LVL296
 49536      00000000 
 49537 4de3 00000000 		.quad	.LVL313
 49537      00000000 
 49538 4deb 0100     		.value	0x1
 49539 4ded 5C       		.byte	0x5c
 49540 4dee 00000000 		.quad	.LVL336
 49540      00000000 
 49541 4df6 00000000 		.quad	.LVL339
 49541      00000000 
 49542 4dfe 0100     		.value	0x1
 49543 4e00 5C       		.byte	0x5c
 49544 4e01 00000000 		.quad	.LVL347
 49544      00000000 
 49545 4e09 00000000 		.quad	.LVL351
 49545      00000000 
 49546 4e11 0100     		.value	0x1
 49547 4e13 5C       		.byte	0x5c
 49548 4e14 00000000 		.quad	.LVL355
 49548      00000000 
 49549 4e1c 00000000 		.quad	.LFE6046
 49549      00000000 
 49550 4e24 0100     		.value	0x1
 49551 4e26 5C       		.byte	0x5c
 49552 4e27 00000000 		.quad	0
 49552      00000000 
 49553 4e2f 00000000 		.quad	0
 49553      00000000 
 49554              	.LLST327:
 49555 4e37 00000000 		.quad	.LVL297
 49555      00000000 
 49556 4e3f 00000000 		.quad	.LVL314
 49556      00000000 
 49557 4e47 0200     		.value	0x2
 49558 4e49 3A       		.byte	0x3a
 49559 4e4a 9F       		.byte	0x9f
 49560 4e4b 00000000 		.quad	.LVL336
 49560      00000000 
 49561 4e53 00000000 		.quad	.LVL339
 49561      00000000 
 49562 4e5b 0200     		.value	0x2
 49563 4e5d 3A       		.byte	0x3a
 49564 4e5e 9F       		.byte	0x9f
 49565 4e5f 00000000 		.quad	.LVL347
 49565      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1224


 49566 4e67 00000000 		.quad	.LVL352
 49566      00000000 
 49567 4e6f 0200     		.value	0x2
 49568 4e71 3A       		.byte	0x3a
 49569 4e72 9F       		.byte	0x9f
 49570 4e73 00000000 		.quad	0
 49570      00000000 
 49571 4e7b 00000000 		.quad	0
 49571      00000000 
 49572              	.LLST328:
 49573 4e83 00000000 		.quad	.LVL297
 49573      00000000 
 49574 4e8b 00000000 		.quad	.LVL313
 49574      00000000 
 49575 4e93 0100     		.value	0x1
 49576 4e95 5C       		.byte	0x5c
 49577 4e96 00000000 		.quad	.LVL336
 49577      00000000 
 49578 4e9e 00000000 		.quad	.LVL339
 49578      00000000 
 49579 4ea6 0100     		.value	0x1
 49580 4ea8 5C       		.byte	0x5c
 49581 4ea9 00000000 		.quad	.LVL347
 49581      00000000 
 49582 4eb1 00000000 		.quad	.LVL351
 49582      00000000 
 49583 4eb9 0100     		.value	0x1
 49584 4ebb 5C       		.byte	0x5c
 49585 4ebc 00000000 		.quad	0
 49585      00000000 
 49586 4ec4 00000000 		.quad	0
 49586      00000000 
 49587              	.LLST329:
 49588 4ecc 00000000 		.quad	.LVL336
 49588      00000000 
 49589 4ed4 00000000 		.quad	.LVL339
 49589      00000000 
 49590 4edc 0200     		.value	0x2
 49591 4ede 3A       		.byte	0x3a
 49592 4edf 9F       		.byte	0x9f
 49593 4ee0 00000000 		.quad	0
 49593      00000000 
 49594 4ee8 00000000 		.quad	0
 49594      00000000 
 49595              	.LLST330:
 49596 4ef0 00000000 		.quad	.LVL336
 49596      00000000 
 49597 4ef8 00000000 		.quad	.LVL339
 49597      00000000 
 49598 4f00 0100     		.value	0x1
 49599 4f02 5C       		.byte	0x5c
 49600 4f03 00000000 		.quad	0
 49600      00000000 
 49601 4f0b 00000000 		.quad	0
 49601      00000000 
 49602              	.LLST331:
 49603 4f13 00000000 		.quad	.LVL299
GAS LISTING /tmp/ccmMnd7l.s 			page 1225


 49603      00000000 
 49604 4f1b 00000000 		.quad	.LVL300-1
 49604      00000000 
 49605 4f23 0100     		.value	0x1
 49606 4f25 50       		.byte	0x50
 49607 4f26 00000000 		.quad	0
 49607      00000000 
 49608 4f2e 00000000 		.quad	0
 49608      00000000 
 49609              	.LLST332:
 49610 4f36 00000000 		.quad	.LVL300
 49610      00000000 
 49611 4f3e 00000000 		.quad	.LVL314
 49611      00000000 
 49612 4f46 0A00     		.value	0xa
 49613 4f48 03       		.byte	0x3
 49614 4f49 00000000 		.quad	.LC17
 49614      00000000 
 49615 4f51 9F       		.byte	0x9f
 49616 4f52 00000000 		.quad	.LVL347
 49616      00000000 
 49617 4f5a 00000000 		.quad	.LVL352
 49617      00000000 
 49618 4f62 0A00     		.value	0xa
 49619 4f64 03       		.byte	0x3
 49620 4f65 00000000 		.quad	.LC17
 49620      00000000 
 49621 4f6d 9F       		.byte	0x9f
 49622 4f6e 00000000 		.quad	0
 49622      00000000 
 49623 4f76 00000000 		.quad	0
 49623      00000000 
 49624              	.LLST333:
 49625 4f7e 00000000 		.quad	.LVL302
 49625      00000000 
 49626 4f86 00000000 		.quad	.LVL314
 49626      00000000 
 49627 4f8e 0300     		.value	0x3
 49628 4f90 91       		.byte	0x91
 49629 4f91 B87F     		.sleb128 -72
 49630 4f93 00000000 		.quad	.LVL347
 49630      00000000 
 49631 4f9b 00000000 		.quad	.LVL352
 49631      00000000 
 49632 4fa3 0300     		.value	0x3
 49633 4fa5 91       		.byte	0x91
 49634 4fa6 B87F     		.sleb128 -72
 49635 4fa8 00000000 		.quad	0
 49635      00000000 
 49636 4fb0 00000000 		.quad	0
 49636      00000000 
 49637              	.LLST334:
 49638 4fb8 00000000 		.quad	.LVL304
 49638      00000000 
 49639 4fc0 00000000 		.quad	.LVL314
 49639      00000000 
 49640 4fc8 0A00     		.value	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 1226


 49641 4fca 03       		.byte	0x3
 49642 4fcb 00000000 		.quad	.LC18
 49642      00000000 
 49643 4fd3 9F       		.byte	0x9f
 49644 4fd4 00000000 		.quad	.LVL347
 49644      00000000 
 49645 4fdc 00000000 		.quad	.LVL352
 49645      00000000 
 49646 4fe4 0A00     		.value	0xa
 49647 4fe6 03       		.byte	0x3
 49648 4fe7 00000000 		.quad	.LC18
 49648      00000000 
 49649 4fef 9F       		.byte	0x9f
 49650 4ff0 00000000 		.quad	0
 49650      00000000 
 49651 4ff8 00000000 		.quad	0
 49651      00000000 
 49652              	.LLST335:
 49653 5000 00000000 		.quad	.LVL304
 49653      00000000 
 49654 5008 00000000 		.quad	.LVL305-1
 49654      00000000 
 49655 5010 0100     		.value	0x1
 49656 5012 50       		.byte	0x50
 49657 5013 00000000 		.quad	.LVL305-1
 49657      00000000 
 49658 501b 00000000 		.quad	.LVL312
 49658      00000000 
 49659 5023 0100     		.value	0x1
 49660 5025 56       		.byte	0x56
 49661 5026 00000000 		.quad	.LVL347
 49661      00000000 
 49662 502e 00000000 		.quad	.LVL350
 49662      00000000 
 49663 5036 0100     		.value	0x1
 49664 5038 56       		.byte	0x56
 49665 5039 00000000 		.quad	0
 49665      00000000 
 49666 5041 00000000 		.quad	0
 49666      00000000 
 49667              	.LLST336:
 49668 5049 00000000 		.quad	.LVL305
 49668      00000000 
 49669 5051 00000000 		.quad	.LVL310
 49669      00000000 
 49670 5059 0200     		.value	0x2
 49671 505b 77       		.byte	0x77
 49672 505c 00       		.sleb128 0
 49673 505d 00000000 		.quad	.LVL310
 49673      00000000 
 49674 5065 00000000 		.quad	.LVL314
 49674      00000000 
 49675 506d 0300     		.value	0x3
 49676 506f 91       		.byte	0x91
 49677 5070 B07F     		.sleb128 -80
 49678 5072 00000000 		.quad	.LVL347
 49678      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1227


 49679 507a 00000000 		.quad	.LVL348
 49679      00000000 
 49680 5082 0200     		.value	0x2
 49681 5084 77       		.byte	0x77
 49682 5085 00       		.sleb128 0
 49683 5086 00000000 		.quad	.LVL348
 49683      00000000 
 49684 508e 00000000 		.quad	.LVL352
 49684      00000000 
 49685 5096 0300     		.value	0x3
 49686 5098 91       		.byte	0x91
 49687 5099 B07F     		.sleb128 -80
 49688 509b 00000000 		.quad	0
 49688      00000000 
 49689 50a3 00000000 		.quad	0
 49689      00000000 
 49690              	.LLST337:
 49691 50ab 00000000 		.quad	.LVL306
 49691      00000000 
 49692 50b3 00000000 		.quad	.LVL314
 49692      00000000 
 49693 50bb 0A00     		.value	0xa
 49694 50bd 03       		.byte	0x3
 49695 50be 00000000 		.quad	.LC19
 49695      00000000 
 49696 50c6 9F       		.byte	0x9f
 49697 50c7 00000000 		.quad	.LVL347
 49697      00000000 
 49698 50cf 00000000 		.quad	.LVL352
 49698      00000000 
 49699 50d7 0A00     		.value	0xa
 49700 50d9 03       		.byte	0x3
 49701 50da 00000000 		.quad	.LC19
 49701      00000000 
 49702 50e2 9F       		.byte	0x9f
 49703 50e3 00000000 		.quad	0
 49703      00000000 
 49704 50eb 00000000 		.quad	0
 49704      00000000 
 49705              	.LLST338:
 49706 50f3 00000000 		.quad	.LVL306
 49706      00000000 
 49707 50fb 00000000 		.quad	.LVL307-1
 49707      00000000 
 49708 5103 0100     		.value	0x1
 49709 5105 50       		.byte	0x50
 49710 5106 00000000 		.quad	0
 49710      00000000 
 49711 510e 00000000 		.quad	0
 49711      00000000 
 49712              	.LLST339:
 49713 5116 00000000 		.quad	.LVL307
 49713      00000000 
 49714 511e 00000000 		.quad	.LVL311
 49714      00000000 
 49715 5126 0300     		.value	0x3
 49716 5128 73       		.byte	0x73
GAS LISTING /tmp/ccmMnd7l.s 			page 1228


 49717 5129 08       		.sleb128 8
 49718 512a 9F       		.byte	0x9f
 49719 512b 00000000 		.quad	.LVL311
 49719      00000000 
 49720 5133 00000000 		.quad	.LVL314
 49720      00000000 
 49721 513b 0600     		.value	0x6
 49722 513d F3       		.byte	0xf3
 49723 513e 01       		.uleb128 0x1
 49724 513f 55       		.byte	0x55
 49725 5140 23       		.byte	0x23
 49726 5141 08       		.uleb128 0x8
 49727 5142 9F       		.byte	0x9f
 49728 5143 00000000 		.quad	.LVL347
 49728      00000000 
 49729 514b 00000000 		.quad	.LVL349
 49729      00000000 
 49730 5153 0300     		.value	0x3
 49731 5155 73       		.byte	0x73
 49732 5156 08       		.sleb128 8
 49733 5157 9F       		.byte	0x9f
 49734 5158 00000000 		.quad	.LVL349
 49734      00000000 
 49735 5160 00000000 		.quad	.LVL352
 49735      00000000 
 49736 5168 0600     		.value	0x6
 49737 516a F3       		.byte	0xf3
 49738 516b 01       		.uleb128 0x1
 49739 516c 55       		.byte	0x55
 49740 516d 23       		.byte	0x23
 49741 516e 08       		.uleb128 0x8
 49742 516f 9F       		.byte	0x9f
 49743 5170 00000000 		.quad	0
 49743      00000000 
 49744 5178 00000000 		.quad	0
 49744      00000000 
 49745              	.LLST341:
 49746 5180 00000000 		.quad	.LVL308
 49746      00000000 
 49747 5188 00000000 		.quad	.LVL311
 49747      00000000 
 49748 5190 0A00     		.value	0xa
 49749 5192 73       		.byte	0x73
 49750 5193 18       		.sleb128 24
 49751 5194 06       		.byte	0x6
 49752 5195 73       		.byte	0x73
 49753 5196 08       		.sleb128 8
 49754 5197 06       		.byte	0x6
 49755 5198 1C       		.byte	0x1c
 49756 5199 38       		.byte	0x38
 49757 519a 1B       		.byte	0x1b
 49758 519b 9F       		.byte	0x9f
 49759 519c 00000000 		.quad	.LVL311
 49759      00000000 
 49760 51a4 00000000 		.quad	.LVL314-1
 49760      00000000 
 49761 51ac 1000     		.value	0x10
GAS LISTING /tmp/ccmMnd7l.s 			page 1229


 49762 51ae F3       		.byte	0xf3
 49763 51af 01       		.uleb128 0x1
 49764 51b0 55       		.byte	0x55
 49765 51b1 23       		.byte	0x23
 49766 51b2 18       		.uleb128 0x18
 49767 51b3 06       		.byte	0x6
 49768 51b4 F3       		.byte	0xf3
 49769 51b5 01       		.uleb128 0x1
 49770 51b6 55       		.byte	0x55
 49771 51b7 23       		.byte	0x23
 49772 51b8 08       		.uleb128 0x8
 49773 51b9 06       		.byte	0x6
 49774 51ba 1C       		.byte	0x1c
 49775 51bb 38       		.byte	0x38
 49776 51bc 1B       		.byte	0x1b
 49777 51bd 9F       		.byte	0x9f
 49778 51be 00000000 		.quad	.LVL347
 49778      00000000 
 49779 51c6 00000000 		.quad	.LVL349
 49779      00000000 
 49780 51ce 0A00     		.value	0xa
 49781 51d0 73       		.byte	0x73
 49782 51d1 18       		.sleb128 24
 49783 51d2 06       		.byte	0x6
 49784 51d3 73       		.byte	0x73
 49785 51d4 08       		.sleb128 8
 49786 51d5 06       		.byte	0x6
 49787 51d6 1C       		.byte	0x1c
 49788 51d7 38       		.byte	0x38
 49789 51d8 1B       		.byte	0x1b
 49790 51d9 9F       		.byte	0x9f
 49791 51da 00000000 		.quad	.LVL349
 49791      00000000 
 49792 51e2 00000000 		.quad	.LVL352
 49792      00000000 
 49793 51ea 1000     		.value	0x10
 49794 51ec F3       		.byte	0xf3
 49795 51ed 01       		.uleb128 0x1
 49796 51ee 55       		.byte	0x55
 49797 51ef 23       		.byte	0x23
 49798 51f0 18       		.uleb128 0x18
 49799 51f1 06       		.byte	0x6
 49800 51f2 F3       		.byte	0xf3
 49801 51f3 01       		.uleb128 0x1
 49802 51f4 55       		.byte	0x55
 49803 51f5 23       		.byte	0x23
 49804 51f6 08       		.uleb128 0x8
 49805 51f7 06       		.byte	0x6
 49806 51f8 1C       		.byte	0x1c
 49807 51f9 38       		.byte	0x38
 49808 51fa 1B       		.byte	0x1b
 49809 51fb 9F       		.byte	0x9f
 49810 51fc 00000000 		.quad	0
 49810      00000000 
 49811 5204 00000000 		.quad	0
 49811      00000000 
 49812              	.LLST342:
GAS LISTING /tmp/ccmMnd7l.s 			page 1230


 49813 520c 00000000 		.quad	.LVL308
 49813      00000000 
 49814 5214 00000000 		.quad	.LVL314-1
 49814      00000000 
 49815 521c 0100     		.value	0x1
 49816 521e 55       		.byte	0x55
 49817 521f 00000000 		.quad	.LVL347
 49817      00000000 
 49818 5227 00000000 		.quad	.LVL352
 49818      00000000 
 49819 522f 0100     		.value	0x1
 49820 5231 55       		.byte	0x55
 49821 5232 00000000 		.quad	0
 49821      00000000 
 49822 523a 00000000 		.quad	0
 49822      00000000 
 49823              	.LLST343:
 49824 5242 00000000 		.quad	.LVL309
 49824      00000000 
 49825 524a 00000000 		.quad	.LVL311
 49825      00000000 
 49826 5252 0A00     		.value	0xa
 49827 5254 73       		.byte	0x73
 49828 5255 18       		.sleb128 24
 49829 5256 06       		.byte	0x6
 49830 5257 73       		.byte	0x73
 49831 5258 08       		.sleb128 8
 49832 5259 06       		.byte	0x6
 49833 525a 1C       		.byte	0x1c
 49834 525b 38       		.byte	0x38
 49835 525c 1B       		.byte	0x1b
 49836 525d 9F       		.byte	0x9f
 49837 525e 00000000 		.quad	.LVL311
 49837      00000000 
 49838 5266 00000000 		.quad	.LVL314-1
 49838      00000000 
 49839 526e 1000     		.value	0x10
 49840 5270 F3       		.byte	0xf3
 49841 5271 01       		.uleb128 0x1
 49842 5272 55       		.byte	0x55
 49843 5273 23       		.byte	0x23
 49844 5274 18       		.uleb128 0x18
 49845 5275 06       		.byte	0x6
 49846 5276 F3       		.byte	0xf3
 49847 5277 01       		.uleb128 0x1
 49848 5278 55       		.byte	0x55
 49849 5279 23       		.byte	0x23
 49850 527a 08       		.uleb128 0x8
 49851 527b 06       		.byte	0x6
 49852 527c 1C       		.byte	0x1c
 49853 527d 38       		.byte	0x38
 49854 527e 1B       		.byte	0x1b
 49855 527f 9F       		.byte	0x9f
 49856 5280 00000000 		.quad	0
 49856      00000000 
 49857 5288 00000000 		.quad	0
 49857      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1231


 49858              	.LLST344:
 49859 5290 00000000 		.quad	.LVL309
 49859      00000000 
 49860 5298 00000000 		.quad	.LVL314-1
 49860      00000000 
 49861 52a0 0100     		.value	0x1
 49862 52a2 55       		.byte	0x55
 49863 52a3 00000000 		.quad	0
 49863      00000000 
 49864 52ab 00000000 		.quad	0
 49864      00000000 
 49865              	.LLST347:
 49866 52b3 00000000 		.quad	.LVL357
 49866      00000000 
 49867 52bb 00000000 		.quad	.LVL361
 49867      00000000 
 49868 52c3 0200     		.value	0x2
 49869 52c5 30       		.byte	0x30
 49870 52c6 9F       		.byte	0x9f
 49871 52c7 00000000 		.quad	.LVL361
 49871      00000000 
 49872 52cf 00000000 		.quad	.LVL471
 49872      00000000 
 49873 52d7 0300     		.value	0x3
 49874 52d9 91       		.byte	0x91
 49875 52da 847E     		.sleb128 -252
 49876 52dc 00000000 		.quad	.LVL472
 49876      00000000 
 49877 52e4 00000000 		.quad	.LVL582
 49877      00000000 
 49878 52ec 0300     		.value	0x3
 49879 52ee 91       		.byte	0x91
 49880 52ef 847E     		.sleb128 -252
 49881 52f1 00000000 		.quad	.LVL583
 49881      00000000 
 49882 52f9 00000000 		.quad	.LVL645
 49882      00000000 
 49883 5301 0300     		.value	0x3
 49884 5303 91       		.byte	0x91
 49885 5304 847E     		.sleb128 -252
 49886 5306 00000000 		.quad	.LVL649
 49886      00000000 
 49887 530e 00000000 		.quad	.LVL650
 49887      00000000 
 49888 5316 0300     		.value	0x3
 49889 5318 91       		.byte	0x91
 49890 5319 847E     		.sleb128 -252
 49891 531b 00000000 		.quad	.LVL651
 49891      00000000 
 49892 5323 00000000 		.quad	.LFE6051
 49892      00000000 
 49893 532b 0300     		.value	0x3
 49894 532d 91       		.byte	0x91
 49895 532e 847E     		.sleb128 -252
 49896 5330 00000000 		.quad	0
 49896      00000000 
 49897 5338 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1232


 49897      00000000 
 49898              	.LLST348:
 49899 5340 00000000 		.quad	.LVL361
 49899      00000000 
 49900 5348 00000000 		.quad	.LVL476
 49900      00000000 
 49901 5350 0300     		.value	0x3
 49902 5352 91       		.byte	0x91
 49903 5353 887E     		.sleb128 -248
 49904 5355 00000000 		.quad	.LVL597
 49904      00000000 
 49905 535d 00000000 		.quad	.LVL637
 49905      00000000 
 49906 5365 0300     		.value	0x3
 49907 5367 91       		.byte	0x91
 49908 5368 887E     		.sleb128 -248
 49909 536a 00000000 		.quad	.LVL638
 49909      00000000 
 49910 5372 00000000 		.quad	.LVL645
 49910      00000000 
 49911 537a 0300     		.value	0x3
 49912 537c 91       		.byte	0x91
 49913 537d 887E     		.sleb128 -248
 49914 537f 00000000 		.quad	.LVL649
 49914      00000000 
 49915 5387 00000000 		.quad	.LVL650
 49915      00000000 
 49916 538f 0300     		.value	0x3
 49917 5391 91       		.byte	0x91
 49918 5392 887E     		.sleb128 -248
 49919 5394 00000000 		.quad	.LVL651
 49919      00000000 
 49920 539c 00000000 		.quad	.LVL652
 49920      00000000 
 49921 53a4 0300     		.value	0x3
 49922 53a6 91       		.byte	0x91
 49923 53a7 887E     		.sleb128 -248
 49924 53a9 00000000 		.quad	0
 49924      00000000 
 49925 53b1 00000000 		.quad	0
 49925      00000000 
 49926              	.LLST349:
 49927 53b9 00000000 		.quad	.LVL475
 49927      00000000 
 49928 53c1 00000000 		.quad	.LVL597
 49928      00000000 
 49929 53c9 0400     		.value	0x4
 49930 53cb 30       		.byte	0x30
 49931 53cc 9F       		.byte	0x9f
 49932 53cd 93       		.byte	0x93
 49933 53ce 08       		.uleb128 0x8
 49934 53cf 00000000 		.quad	.LVL652
 49934      00000000 
 49935 53d7 00000000 		.quad	.LFE6051
 49935      00000000 
 49936 53df 0400     		.value	0x4
 49937 53e1 30       		.byte	0x30
GAS LISTING /tmp/ccmMnd7l.s 			page 1233


 49938 53e2 9F       		.byte	0x9f
 49939 53e3 93       		.byte	0x93
 49940 53e4 08       		.uleb128 0x8
 49941 53e5 00000000 		.quad	0
 49941      00000000 
 49942 53ed 00000000 		.quad	0
 49942      00000000 
 49943              	.LLST350:
 49944 53f5 00000000 		.quad	.LVL363
 49944      00000000 
 49945 53fd 00000000 		.quad	.LVL470
 49945      00000000 
 49946 5405 0100     		.value	0x1
 49947 5407 5C       		.byte	0x5c
 49948 5408 00000000 		.quad	.LVL597
 49948      00000000 
 49949 5410 00000000 		.quad	.LVL637
 49949      00000000 
 49950 5418 0100     		.value	0x1
 49951 541a 5C       		.byte	0x5c
 49952 541b 00000000 		.quad	.LVL638
 49952      00000000 
 49953 5423 00000000 		.quad	.LVL645
 49953      00000000 
 49954 542b 0100     		.value	0x1
 49955 542d 5C       		.byte	0x5c
 49956 542e 00000000 		.quad	.LVL649
 49956      00000000 
 49957 5436 00000000 		.quad	.LVL650
 49957      00000000 
 49958 543e 0100     		.value	0x1
 49959 5440 5C       		.byte	0x5c
 49960 5441 00000000 		.quad	.LVL651
 49960      00000000 
 49961 5449 00000000 		.quad	.LVL652
 49961      00000000 
 49962 5451 0100     		.value	0x1
 49963 5453 5C       		.byte	0x5c
 49964 5454 00000000 		.quad	0
 49964      00000000 
 49965 545c 00000000 		.quad	0
 49965      00000000 
 49966              	.LLST351:
 49967 5464 00000000 		.quad	.LVL365
 49967      00000000 
 49968 546c 00000000 		.quad	.LVL366-1
 49968      00000000 
 49969 5474 0300     		.value	0x3
 49970 5476 50       		.byte	0x50
 49971 5477 93       		.byte	0x93
 49972 5478 08       		.uleb128 0x8
 49973 5479 00000000 		.quad	.LVL366-1
 49973      00000000 
 49974 5481 00000000 		.quad	.LVL472
 49974      00000000 
 49975 5489 0300     		.value	0x3
 49976 548b 5F       		.byte	0x5f
GAS LISTING /tmp/ccmMnd7l.s 			page 1234


 49977 548c 93       		.byte	0x93
 49978 548d 08       		.uleb128 0x8
 49979 548e 00000000 		.quad	.LVL472
 49979      00000000 
 49980 5496 00000000 		.quad	.LVL597
 49980      00000000 
 49981 549e 0400     		.value	0x4
 49982 54a0 30       		.byte	0x30
 49983 54a1 9F       		.byte	0x9f
 49984 54a2 93       		.byte	0x93
 49985 54a3 08       		.uleb128 0x8
 49986 54a4 00000000 		.quad	.LVL597
 49986      00000000 
 49987 54ac 00000000 		.quad	.LVL637
 49987      00000000 
 49988 54b4 0300     		.value	0x3
 49989 54b6 5F       		.byte	0x5f
 49990 54b7 93       		.byte	0x93
 49991 54b8 08       		.uleb128 0x8
 49992 54b9 00000000 		.quad	.LVL638
 49992      00000000 
 49993 54c1 00000000 		.quad	.LVL643
 49993      00000000 
 49994 54c9 0300     		.value	0x3
 49995 54cb 5F       		.byte	0x5f
 49996 54cc 93       		.byte	0x93
 49997 54cd 08       		.uleb128 0x8
 49998 54ce 00000000 		.quad	.LVL651
 49998      00000000 
 49999 54d6 00000000 		.quad	.LVL652
 49999      00000000 
 50000 54de 0300     		.value	0x3
 50001 54e0 5F       		.byte	0x5f
 50002 54e1 93       		.byte	0x93
 50003 54e2 08       		.uleb128 0x8
 50004 54e3 00000000 		.quad	.LVL652
 50004      00000000 
 50005 54eb 00000000 		.quad	.LFE6051
 50005      00000000 
 50006 54f3 0400     		.value	0x4
 50007 54f5 30       		.byte	0x30
 50008 54f6 9F       		.byte	0x9f
 50009 54f7 93       		.byte	0x93
 50010 54f8 08       		.uleb128 0x8
 50011 54f9 00000000 		.quad	0
 50011      00000000 
 50012 5501 00000000 		.quad	0
 50012      00000000 
 50013              	.LLST352:
 50014 5509 00000000 		.quad	.LVL365
 50014      00000000 
 50015 5511 00000000 		.quad	.LVL643
 50015      00000000 
 50016 5519 0A00     		.value	0xa
 50017 551b 03       		.byte	0x3
 50018 551c 00000000 		.quad	.LC22
 50018      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1235


 50019 5524 9F       		.byte	0x9f
 50020 5525 00000000 		.quad	.LVL651
 50020      00000000 
 50021 552d 00000000 		.quad	.LFE6051
 50021      00000000 
 50022 5535 0A00     		.value	0xa
 50023 5537 03       		.byte	0x3
 50024 5538 00000000 		.quad	.LC22
 50024      00000000 
 50025 5540 9F       		.byte	0x9f
 50026 5541 00000000 		.quad	0
 50026      00000000 
 50027 5549 00000000 		.quad	0
 50027      00000000 
 50028              	.LLST353:
 50029 5551 00000000 		.quad	.LVL366
 50029      00000000 
 50030 5559 00000000 		.quad	.LVL470
 50030      00000000 
 50031 5561 0100     		.value	0x1
 50032 5563 5C       		.byte	0x5c
 50033 5564 00000000 		.quad	.LVL597
 50033      00000000 
 50034 556c 00000000 		.quad	.LVL637
 50034      00000000 
 50035 5574 0100     		.value	0x1
 50036 5576 5C       		.byte	0x5c
 50037 5577 00000000 		.quad	.LVL638
 50037      00000000 
 50038 557f 00000000 		.quad	.LVL641
 50038      00000000 
 50039 5587 0100     		.value	0x1
 50040 5589 5C       		.byte	0x5c
 50041 558a 00000000 		.quad	0
 50041      00000000 
 50042 5592 00000000 		.quad	0
 50042      00000000 
 50043              	.LLST354:
 50044 559a 00000000 		.quad	.LVL368
 50044      00000000 
 50045 55a2 00000000 		.quad	.LVL641
 50045      00000000 
 50046 55aa 0A00     		.value	0xa
 50047 55ac 03       		.byte	0x3
 50048 55ad 00000000 		.quad	.LC23
 50048      00000000 
 50049 55b5 9F       		.byte	0x9f
 50050 55b6 00000000 		.quad	.LVL652
 50050      00000000 
 50051 55be 00000000 		.quad	.LFE6051
 50051      00000000 
 50052 55c6 0A00     		.value	0xa
 50053 55c8 03       		.byte	0x3
 50054 55c9 00000000 		.quad	.LC23
 50054      00000000 
 50055 55d1 9F       		.byte	0x9f
 50056 55d2 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1236


 50056      00000000 
 50057 55da 00000000 		.quad	0
 50057      00000000 
 50058              	.LLST355:
 50059 55e2 00000000 		.quad	.LVL368
 50059      00000000 
 50060 55ea 00000000 		.quad	.LVL369-1
 50060      00000000 
 50061 55f2 0100     		.value	0x1
 50062 55f4 50       		.byte	0x50
 50063 55f5 00000000 		.quad	.LVL369-1
 50063      00000000 
 50064 55fd 00000000 		.quad	.LVL374
 50064      00000000 
 50065 5605 0100     		.value	0x1
 50066 5607 53       		.byte	0x53
 50067 5608 00000000 		.quad	0
 50067      00000000 
 50068 5610 00000000 		.quad	0
 50068      00000000 
 50069              	.LLST356:
 50070 5618 00000000 		.quad	.LVL369
 50070      00000000 
 50071 5620 00000000 		.quad	.LVL476
 50071      00000000 
 50072 5628 0300     		.value	0x3
 50073 562a 91       		.byte	0x91
 50074 562b 887E     		.sleb128 -248
 50075 562d 00000000 		.quad	.LVL597
 50075      00000000 
 50076 5635 00000000 		.quad	.LVL637
 50076      00000000 
 50077 563d 0300     		.value	0x3
 50078 563f 91       		.byte	0x91
 50079 5640 887E     		.sleb128 -248
 50080 5642 00000000 		.quad	.LVL638
 50080      00000000 
 50081 564a 00000000 		.quad	.LVL641
 50081      00000000 
 50082 5652 0300     		.value	0x3
 50083 5654 91       		.byte	0x91
 50084 5655 887E     		.sleb128 -248
 50085 5657 00000000 		.quad	0
 50085      00000000 
 50086 565f 00000000 		.quad	0
 50086      00000000 
 50087              	.LLST357:
 50088 5667 00000000 		.quad	.LVL370
 50088      00000000 
 50089 566f 00000000 		.quad	.LVL641
 50089      00000000 
 50090 5677 0A00     		.value	0xa
 50091 5679 03       		.byte	0x3
 50092 567a 00000000 		.quad	.LC24
 50092      00000000 
 50093 5682 9F       		.byte	0x9f
 50094 5683 00000000 		.quad	.LVL652
GAS LISTING /tmp/ccmMnd7l.s 			page 1237


 50094      00000000 
 50095 568b 00000000 		.quad	.LFE6051
 50095      00000000 
 50096 5693 0A00     		.value	0xa
 50097 5695 03       		.byte	0x3
 50098 5696 00000000 		.quad	.LC24
 50098      00000000 
 50099 569e 9F       		.byte	0x9f
 50100 569f 00000000 		.quad	0
 50100      00000000 
 50101 56a7 00000000 		.quad	0
 50101      00000000 
 50102              	.LLST358:
 50103 56af 00000000 		.quad	.LVL370
 50103      00000000 
 50104 56b7 00000000 		.quad	.LVL371-1
 50104      00000000 
 50105 56bf 0100     		.value	0x1
 50106 56c1 50       		.byte	0x50
 50107 56c2 00000000 		.quad	0
 50107      00000000 
 50108 56ca 00000000 		.quad	0
 50108      00000000 
 50109              	.LLST359:
 50110 56d2 00000000 		.quad	.LVL371
 50110      00000000 
 50111 56da 00000000 		.quad	.LVL641
 50111      00000000 
 50112 56e2 0A00     		.value	0xa
 50113 56e4 03       		.byte	0x3
 50114 56e5 00000000 		.quad	.LC25
 50114      00000000 
 50115 56ed 9F       		.byte	0x9f
 50116 56ee 00000000 		.quad	.LVL652
 50116      00000000 
 50117 56f6 00000000 		.quad	.LFE6051
 50117      00000000 
 50118 56fe 0A00     		.value	0xa
 50119 5700 03       		.byte	0x3
 50120 5701 00000000 		.quad	.LC25
 50120      00000000 
 50121 5709 9F       		.byte	0x9f
 50122 570a 00000000 		.quad	0
 50122      00000000 
 50123 5712 00000000 		.quad	0
 50123      00000000 
 50124              	.LLST360:
 50125 571a 00000000 		.quad	.LVL372
 50125      00000000 
 50126 5722 00000000 		.quad	.LVL470
 50126      00000000 
 50127 572a 0100     		.value	0x1
 50128 572c 5C       		.byte	0x5c
 50129 572d 00000000 		.quad	.LVL597
 50129      00000000 
 50130 5735 00000000 		.quad	.LVL637
 50130      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1238


 50131 573d 0100     		.value	0x1
 50132 573f 5C       		.byte	0x5c
 50133 5740 00000000 		.quad	.LVL638
 50133      00000000 
 50134 5748 00000000 		.quad	.LVL641
 50134      00000000 
 50135 5750 0100     		.value	0x1
 50136 5752 5C       		.byte	0x5c
 50137 5753 00000000 		.quad	0
 50137      00000000 
 50138 575b 00000000 		.quad	0
 50138      00000000 
 50139              	.LLST361:
 50140 5763 00000000 		.quad	.LVL374
 50140      00000000 
 50141 576b 00000000 		.quad	.LVL641
 50141      00000000 
 50142 5773 0A00     		.value	0xa
 50143 5775 03       		.byte	0x3
 50144 5776 00000000 		.quad	.LC26
 50144      00000000 
 50145 577e 9F       		.byte	0x9f
 50146 577f 00000000 		.quad	.LVL652
 50146      00000000 
 50147 5787 00000000 		.quad	.LFE6051
 50147      00000000 
 50148 578f 0A00     		.value	0xa
 50149 5791 03       		.byte	0x3
 50150 5792 00000000 		.quad	.LC26
 50150      00000000 
 50151 579a 9F       		.byte	0x9f
 50152 579b 00000000 		.quad	0
 50152      00000000 
 50153 57a3 00000000 		.quad	0
 50153      00000000 
 50154              	.LLST362:
 50155 57ab 00000000 		.quad	.LVL374
 50155      00000000 
 50156 57b3 00000000 		.quad	.LVL375-1
 50156      00000000 
 50157 57bb 0100     		.value	0x1
 50158 57bd 50       		.byte	0x50
 50159 57be 00000000 		.quad	.LVL375-1
 50159      00000000 
 50160 57c6 00000000 		.quad	.LVL377
 50160      00000000 
 50161 57ce 0100     		.value	0x1
 50162 57d0 53       		.byte	0x53
 50163 57d1 00000000 		.quad	0
 50163      00000000 
 50164 57d9 00000000 		.quad	0
 50164      00000000 
 50165              	.LLST363:
 50166 57e1 00000000 		.quad	.LVL375
 50166      00000000 
 50167 57e9 00000000 		.quad	.LVL476
 50167      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1239


 50168 57f1 0300     		.value	0x3
 50169 57f3 91       		.byte	0x91
 50170 57f4 887E     		.sleb128 -248
 50171 57f6 00000000 		.quad	.LVL597
 50171      00000000 
 50172 57fe 00000000 		.quad	.LVL637
 50172      00000000 
 50173 5806 0300     		.value	0x3
 50174 5808 91       		.byte	0x91
 50175 5809 887E     		.sleb128 -248
 50176 580b 00000000 		.quad	.LVL638
 50176      00000000 
 50177 5813 00000000 		.quad	.LVL641
 50177      00000000 
 50178 581b 0300     		.value	0x3
 50179 581d 91       		.byte	0x91
 50180 581e 887E     		.sleb128 -248
 50181 5820 00000000 		.quad	0
 50181      00000000 
 50182 5828 00000000 		.quad	0
 50182      00000000 
 50183              	.LLST364:
 50184 5830 00000000 		.quad	.LVL377
 50184      00000000 
 50185 5838 00000000 		.quad	.LVL641
 50185      00000000 
 50186 5840 0A00     		.value	0xa
 50187 5842 03       		.byte	0x3
 50188 5843 00000000 		.quad	.LC27
 50188      00000000 
 50189 584b 9F       		.byte	0x9f
 50190 584c 00000000 		.quad	.LVL652
 50190      00000000 
 50191 5854 00000000 		.quad	.LFE6051
 50191      00000000 
 50192 585c 0A00     		.value	0xa
 50193 585e 03       		.byte	0x3
 50194 585f 00000000 		.quad	.LC27
 50194      00000000 
 50195 5867 9F       		.byte	0x9f
 50196 5868 00000000 		.quad	0
 50196      00000000 
 50197 5870 00000000 		.quad	0
 50197      00000000 
 50198              	.LLST365:
 50199 5878 00000000 		.quad	.LVL377
 50199      00000000 
 50200 5880 00000000 		.quad	.LVL378-1
 50200      00000000 
 50201 5888 0100     		.value	0x1
 50202 588a 50       		.byte	0x50
 50203 588b 00000000 		.quad	.LVL378-1
 50203      00000000 
 50204 5893 00000000 		.quad	.LVL390
 50204      00000000 
 50205 589b 0100     		.value	0x1
 50206 589d 53       		.byte	0x53
GAS LISTING /tmp/ccmMnd7l.s 			page 1240


 50207 589e 00000000 		.quad	0
 50207      00000000 
 50208 58a6 00000000 		.quad	0
 50208      00000000 
 50209              	.LLST366:
 50210 58ae 00000000 		.quad	.LVL378
 50210      00000000 
 50211 58b6 00000000 		.quad	.LVL390
 50211      00000000 
 50212 58be 0100     		.value	0x1
 50213 58c0 53       		.byte	0x53
 50214 58c1 00000000 		.quad	0
 50214      00000000 
 50215 58c9 00000000 		.quad	0
 50215      00000000 
 50216              	.LLST367:
 50217 58d1 00000000 		.quad	.LVL379
 50217      00000000 
 50218 58d9 00000000 		.quad	.LVL641
 50218      00000000 
 50219 58e1 0200     		.value	0x2
 50220 58e3 35       		.byte	0x35
 50221 58e4 9F       		.byte	0x9f
 50222 58e5 00000000 		.quad	.LVL652
 50222      00000000 
 50223 58ed 00000000 		.quad	.LFE6051
 50223      00000000 
 50224 58f5 0200     		.value	0x2
 50225 58f7 35       		.byte	0x35
 50226 58f8 9F       		.byte	0x9f
 50227 58f9 00000000 		.quad	0
 50227      00000000 
 50228 5901 00000000 		.quad	0
 50228      00000000 
 50229              	.LLST368:
 50230 5909 00000000 		.quad	.LVL379
 50230      00000000 
 50231 5911 00000000 		.quad	.LVL640
 50231      00000000 
 50232 5919 0400     		.value	0x4
 50233 591b 91       		.byte	0x91
 50234 591c E07E     		.sleb128 -160
 50235 591e 9F       		.byte	0x9f
 50236 591f 00000000 		.quad	.LVL640
 50236      00000000 
 50237 5927 00000000 		.quad	.LVL641-1
 50237      00000000 
 50238 592f 0100     		.value	0x1
 50239 5931 55       		.byte	0x55
 50240 5932 00000000 		.quad	.LVL641-1
 50240      00000000 
 50241 593a 00000000 		.quad	.LVL641
 50241      00000000 
 50242 5942 0400     		.value	0x4
 50243 5944 91       		.byte	0x91
 50244 5945 E07E     		.sleb128 -160
 50245 5947 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1241


 50246 5948 00000000 		.quad	.LVL652
 50246      00000000 
 50247 5950 00000000 		.quad	.LFE6051
 50247      00000000 
 50248 5958 0400     		.value	0x4
 50249 595a 91       		.byte	0x91
 50250 595b E07E     		.sleb128 -160
 50251 595d 9F       		.byte	0x9f
 50252 595e 00000000 		.quad	0
 50252      00000000 
 50253 5966 00000000 		.quad	0
 50253      00000000 
 50254              	.LLST370:
 50255 596e 00000000 		.quad	.LVL381
 50255      00000000 
 50256 5976 00000000 		.quad	.LVL641
 50256      00000000 
 50257 597e 0200     		.value	0x2
 50258 5980 35       		.byte	0x35
 50259 5981 9F       		.byte	0x9f
 50260 5982 00000000 		.quad	.LVL652
 50260      00000000 
 50261 598a 00000000 		.quad	.LFE6051
 50261      00000000 
 50262 5992 0200     		.value	0x2
 50263 5994 35       		.byte	0x35
 50264 5995 9F       		.byte	0x9f
 50265 5996 00000000 		.quad	0
 50265      00000000 
 50266 599e 00000000 		.quad	0
 50266      00000000 
 50267              	.LLST371:
 50268 59a6 00000000 		.quad	.LVL381
 50268      00000000 
 50269 59ae 00000000 		.quad	.LVL641
 50269      00000000 
 50270 59b6 0400     		.value	0x4
 50271 59b8 91       		.byte	0x91
 50272 59b9 E87E     		.sleb128 -152
 50273 59bb 9F       		.byte	0x9f
 50274 59bc 00000000 		.quad	.LVL652
 50274      00000000 
 50275 59c4 00000000 		.quad	.LFE6051
 50275      00000000 
 50276 59cc 0400     		.value	0x4
 50277 59ce 91       		.byte	0x91
 50278 59cf E87E     		.sleb128 -152
 50279 59d1 9F       		.byte	0x9f
 50280 59d2 00000000 		.quad	0
 50280      00000000 
 50281 59da 00000000 		.quad	0
 50281      00000000 
 50282              	.LLST375:
 50283 59e2 00000000 		.quad	.LVL382
 50283      00000000 
 50284 59ea 00000000 		.quad	.LVL641
 50284      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1242


 50285 59f2 0200     		.value	0x2
 50286 59f4 35       		.byte	0x35
 50287 59f5 9F       		.byte	0x9f
 50288 59f6 00000000 		.quad	.LVL652
 50288      00000000 
 50289 59fe 00000000 		.quad	.LFE6051
 50289      00000000 
 50290 5a06 0200     		.value	0x2
 50291 5a08 35       		.byte	0x35
 50292 5a09 9F       		.byte	0x9f
 50293 5a0a 00000000 		.quad	0
 50293      00000000 
 50294 5a12 00000000 		.quad	0
 50294      00000000 
 50295              	.LLST376:
 50296 5a1a 00000000 		.quad	.LVL382
 50296      00000000 
 50297 5a22 00000000 		.quad	.LVL641
 50297      00000000 
 50298 5a2a 0400     		.value	0x4
 50299 5a2c 91       		.byte	0x91
 50300 5a2d E87E     		.sleb128 -152
 50301 5a2f 9F       		.byte	0x9f
 50302 5a30 00000000 		.quad	.LVL652
 50302      00000000 
 50303 5a38 00000000 		.quad	.LFE6051
 50303      00000000 
 50304 5a40 0400     		.value	0x4
 50305 5a42 91       		.byte	0x91
 50306 5a43 E87E     		.sleb128 -152
 50307 5a45 9F       		.byte	0x9f
 50308 5a46 00000000 		.quad	0
 50308      00000000 
 50309 5a4e 00000000 		.quad	0
 50309      00000000 
 50310              	.LLST379:
 50311 5a56 00000000 		.quad	.LVL382
 50311      00000000 
 50312 5a5e 00000000 		.quad	.LVL641
 50312      00000000 
 50313 5a66 0200     		.value	0x2
 50314 5a68 30       		.byte	0x30
 50315 5a69 9F       		.byte	0x9f
 50316 5a6a 00000000 		.quad	.LVL652
 50316      00000000 
 50317 5a72 00000000 		.quad	.LFE6051
 50317      00000000 
 50318 5a7a 0200     		.value	0x2
 50319 5a7c 30       		.byte	0x30
 50320 5a7d 9F       		.byte	0x9f
 50321 5a7e 00000000 		.quad	0
 50321      00000000 
 50322 5a86 00000000 		.quad	0
 50322      00000000 
 50323              	.LLST382:
 50324 5a8e 00000000 		.quad	.LVL381
 50324      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1243


 50325 5a96 00000000 		.quad	.LVL477
 50325      00000000 
 50326 5a9e 0400     		.value	0x4
 50327 5aa0 91       		.byte	0x91
 50328 5aa1 E87E     		.sleb128 -152
 50329 5aa3 9F       		.byte	0x9f
 50330 5aa4 00000000 		.quad	.LVL497
 50330      00000000 
 50331 5aac 00000000 		.quad	.LVL597
 50331      00000000 
 50332 5ab4 0400     		.value	0x4
 50333 5ab6 91       		.byte	0x91
 50334 5ab7 987F     		.sleb128 -104
 50335 5ab9 9F       		.byte	0x9f
 50336 5aba 00000000 		.quad	.LVL597
 50336      00000000 
 50337 5ac2 00000000 		.quad	.LVL637
 50337      00000000 
 50338 5aca 0400     		.value	0x4
 50339 5acc 91       		.byte	0x91
 50340 5acd E87E     		.sleb128 -152
 50341 5acf 9F       		.byte	0x9f
 50342 5ad0 00000000 		.quad	.LVL638
 50342      00000000 
 50343 5ad8 00000000 		.quad	.LVL641
 50343      00000000 
 50344 5ae0 0400     		.value	0x4
 50345 5ae2 91       		.byte	0x91
 50346 5ae3 E87E     		.sleb128 -152
 50347 5ae5 9F       		.byte	0x9f
 50348 5ae6 00000000 		.quad	.LVL652
 50348      00000000 
 50349 5aee 00000000 		.quad	.LVL701
 50349      00000000 
 50350 5af6 0400     		.value	0x4
 50351 5af8 91       		.byte	0x91
 50352 5af9 987F     		.sleb128 -104
 50353 5afb 9F       		.byte	0x9f
 50354 5afc 00000000 		.quad	0
 50354      00000000 
 50355 5b04 00000000 		.quad	0
 50355      00000000 
 50356              	.LLST383:
 50357 5b0c 00000000 		.quad	.LVL384
 50357      00000000 
 50358 5b14 00000000 		.quad	.LVL641
 50358      00000000 
 50359 5b1c 0200     		.value	0x2
 50360 5b1e 35       		.byte	0x35
 50361 5b1f 9F       		.byte	0x9f
 50362 5b20 00000000 		.quad	.LVL652
 50362      00000000 
 50363 5b28 00000000 		.quad	.LFE6051
 50363      00000000 
 50364 5b30 0200     		.value	0x2
 50365 5b32 35       		.byte	0x35
 50366 5b33 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1244


 50367 5b34 00000000 		.quad	0
 50367      00000000 
 50368 5b3c 00000000 		.quad	0
 50368      00000000 
 50369              	.LLST384:
 50370 5b44 00000000 		.quad	.LVL384
 50370      00000000 
 50371 5b4c 00000000 		.quad	.LVL641
 50371      00000000 
 50372 5b54 0400     		.value	0x4
 50373 5b56 91       		.byte	0x91
 50374 5b57 E87E     		.sleb128 -152
 50375 5b59 9F       		.byte	0x9f
 50376 5b5a 00000000 		.quad	.LVL652
 50376      00000000 
 50377 5b62 00000000 		.quad	.LFE6051
 50377      00000000 
 50378 5b6a 0400     		.value	0x4
 50379 5b6c 91       		.byte	0x91
 50380 5b6d E87E     		.sleb128 -152
 50381 5b6f 9F       		.byte	0x9f
 50382 5b70 00000000 		.quad	0
 50382      00000000 
 50383 5b78 00000000 		.quad	0
 50383      00000000 
 50384              	.LLST386:
 50385 5b80 00000000 		.quad	.LVL384
 50385      00000000 
 50386 5b88 00000000 		.quad	.LVL390
 50386      00000000 
 50387 5b90 0100     		.value	0x1
 50388 5b92 50       		.byte	0x50
 50389 5b93 00000000 		.quad	0
 50389      00000000 
 50390 5b9b 00000000 		.quad	0
 50390      00000000 
 50391              	.LLST387:
 50392 5ba3 00000000 		.quad	.LVL384
 50392      00000000 
 50393 5bab 00000000 		.quad	.LVL385
 50393      00000000 
 50394 5bb3 0100     		.value	0x1
 50395 5bb5 50       		.byte	0x50
 50396 5bb6 00000000 		.quad	.LVL385
 50396      00000000 
 50397 5bbe 00000000 		.quad	.LVL386
 50397      00000000 
 50398 5bc6 0300     		.value	0x3
 50399 5bc8 70       		.byte	0x70
 50400 5bc9 08       		.sleb128 8
 50401 5bca 9F       		.byte	0x9f
 50402 5bcb 00000000 		.quad	.LVL386
 50402      00000000 
 50403 5bd3 00000000 		.quad	.LVL387
 50403      00000000 
 50404 5bdb 0300     		.value	0x3
 50405 5bdd 70       		.byte	0x70
GAS LISTING /tmp/ccmMnd7l.s 			page 1245


 50406 5bde 10       		.sleb128 16
 50407 5bdf 9F       		.byte	0x9f
 50408 5be0 00000000 		.quad	.LVL387
 50408      00000000 
 50409 5be8 00000000 		.quad	.LVL388
 50409      00000000 
 50410 5bf0 0300     		.value	0x3
 50411 5bf2 70       		.byte	0x70
 50412 5bf3 18       		.sleb128 24
 50413 5bf4 9F       		.byte	0x9f
 50414 5bf5 00000000 		.quad	.LVL388
 50414      00000000 
 50415 5bfd 00000000 		.quad	.LVL390
 50415      00000000 
 50416 5c05 0300     		.value	0x3
 50417 5c07 70       		.byte	0x70
 50418 5c08 28       		.sleb128 40
 50419 5c09 9F       		.byte	0x9f
 50420 5c0a 00000000 		.quad	0
 50420      00000000 
 50421 5c12 00000000 		.quad	0
 50421      00000000 
 50422              	.LLST388:
 50423 5c1a 00000000 		.quad	.LVL384
 50423      00000000 
 50424 5c22 00000000 		.quad	.LVL385
 50424      00000000 
 50425 5c2a 0200     		.value	0x2
 50426 5c2c 35       		.byte	0x35
 50427 5c2d 9F       		.byte	0x9f
 50428 5c2e 00000000 		.quad	.LVL385
 50428      00000000 
 50429 5c36 00000000 		.quad	.LVL386
 50429      00000000 
 50430 5c3e 0200     		.value	0x2
 50431 5c40 34       		.byte	0x34
 50432 5c41 9F       		.byte	0x9f
 50433 5c42 00000000 		.quad	.LVL386
 50433      00000000 
 50434 5c4a 00000000 		.quad	.LVL387
 50434      00000000 
 50435 5c52 0200     		.value	0x2
 50436 5c54 33       		.byte	0x33
 50437 5c55 9F       		.byte	0x9f
 50438 5c56 00000000 		.quad	.LVL387
 50438      00000000 
 50439 5c5e 00000000 		.quad	.LVL388
 50439      00000000 
 50440 5c66 0200     		.value	0x2
 50441 5c68 32       		.byte	0x32
 50442 5c69 9F       		.byte	0x9f
 50443 5c6a 00000000 		.quad	.LVL388
 50443      00000000 
 50444 5c72 00000000 		.quad	.LVL641
 50444      00000000 
 50445 5c7a 0200     		.value	0x2
 50446 5c7c 30       		.byte	0x30
GAS LISTING /tmp/ccmMnd7l.s 			page 1246


 50447 5c7d 9F       		.byte	0x9f
 50448 5c7e 00000000 		.quad	.LVL652
 50448      00000000 
 50449 5c86 00000000 		.quad	.LFE6051
 50449      00000000 
 50450 5c8e 0200     		.value	0x2
 50451 5c90 30       		.byte	0x30
 50452 5c91 9F       		.byte	0x9f
 50453 5c92 00000000 		.quad	0
 50453      00000000 
 50454 5c9a 00000000 		.quad	0
 50454      00000000 
 50455              	.LLST389:
 50456 5ca2 00000000 		.quad	.LVL390
 50456      00000000 
 50457 5caa 00000000 		.quad	.LVL391
 50457      00000000 
 50458 5cb2 0200     		.value	0x2
 50459 5cb4 30       		.byte	0x30
 50460 5cb5 9F       		.byte	0x9f
 50461 5cb6 00000000 		.quad	.LVL391
 50461      00000000 
 50462 5cbe 00000000 		.quad	.LVL396
 50462      00000000 
 50463 5cc6 0100     		.value	0x1
 50464 5cc8 53       		.byte	0x53
 50465 5cc9 00000000 		.quad	0
 50465      00000000 
 50466 5cd1 00000000 		.quad	0
 50466      00000000 
 50467              	.LLST390:
 50468 5cd9 00000000 		.quad	.LVL395
 50468      00000000 
 50469 5ce1 00000000 		.quad	.LVL639
 50469      00000000 
 50470 5ce9 0400     		.value	0x4
 50471 5ceb 91       		.byte	0x91
 50472 5cec E07E     		.sleb128 -160
 50473 5cee 9F       		.byte	0x9f
 50474 5cef 00000000 		.quad	.LVL652
 50474      00000000 
 50475 5cf7 00000000 		.quad	.LFE6051
 50475      00000000 
 50476 5cff 0400     		.value	0x4
 50477 5d01 91       		.byte	0x91
 50478 5d02 E07E     		.sleb128 -160
 50479 5d04 9F       		.byte	0x9f
 50480 5d05 00000000 		.quad	0
 50480      00000000 
 50481 5d0d 00000000 		.quad	0
 50481      00000000 
 50482              	.LLST391:
 50483 5d15 00000000 		.quad	.LVL395
 50483      00000000 
 50484 5d1d 00000000 		.quad	.LVL639
 50484      00000000 
 50485 5d25 0200     		.value	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1247


 50486 5d27 30       		.byte	0x30
 50487 5d28 9F       		.byte	0x9f
 50488 5d29 00000000 		.quad	.LVL652
 50488      00000000 
 50489 5d31 00000000 		.quad	.LFE6051
 50489      00000000 
 50490 5d39 0200     		.value	0x2
 50491 5d3b 30       		.byte	0x30
 50492 5d3c 9F       		.byte	0x9f
 50493 5d3d 00000000 		.quad	0
 50493      00000000 
 50494 5d45 00000000 		.quad	0
 50494      00000000 
 50495              	.LLST392:
 50496 5d4d 00000000 		.quad	.LVL395
 50496      00000000 
 50497 5d55 00000000 		.quad	.LVL477
 50497      00000000 
 50498 5d5d 0400     		.value	0x4
 50499 5d5f 91       		.byte	0x91
 50500 5d60 807F     		.sleb128 -128
 50501 5d62 9F       		.byte	0x9f
 50502 5d63 00000000 		.quad	.LVL511
 50502      00000000 
 50503 5d6b 00000000 		.quad	.LVL597
 50503      00000000 
 50504 5d73 0400     		.value	0x4
 50505 5d75 91       		.byte	0x91
 50506 5d76 B07F     		.sleb128 -80
 50507 5d78 9F       		.byte	0x9f
 50508 5d79 00000000 		.quad	.LVL597
 50508      00000000 
 50509 5d81 00000000 		.quad	.LVL637
 50509      00000000 
 50510 5d89 0400     		.value	0x4
 50511 5d8b 91       		.byte	0x91
 50512 5d8c 807F     		.sleb128 -128
 50513 5d8e 9F       		.byte	0x9f
 50514 5d8f 00000000 		.quad	.LVL638
 50514      00000000 
 50515 5d97 00000000 		.quad	.LVL639
 50515      00000000 
 50516 5d9f 0400     		.value	0x4
 50517 5da1 91       		.byte	0x91
 50518 5da2 807F     		.sleb128 -128
 50519 5da4 9F       		.byte	0x9f
 50520 5da5 00000000 		.quad	.LVL652
 50520      00000000 
 50521 5dad 00000000 		.quad	.LVL699
 50521      00000000 
 50522 5db5 0400     		.value	0x4
 50523 5db7 91       		.byte	0x91
 50524 5db8 B07F     		.sleb128 -80
 50525 5dba 9F       		.byte	0x9f
 50526 5dbb 00000000 		.quad	0
 50526      00000000 
 50527 5dc3 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1248


 50527      00000000 
 50528              	.LLST393:
 50529 5dcb 00000000 		.quad	.LVL400
 50529      00000000 
 50530 5dd3 00000000 		.quad	.LVL633
 50530      00000000 
 50531 5ddb 0400     		.value	0x4
 50532 5ddd 91       		.byte	0x91
 50533 5dde E07E     		.sleb128 -160
 50534 5de0 9F       		.byte	0x9f
 50535 5de1 00000000 		.quad	.LVL634
 50535      00000000 
 50536 5de9 00000000 		.quad	.LVL639
 50536      00000000 
 50537 5df1 0400     		.value	0x4
 50538 5df3 91       		.byte	0x91
 50539 5df4 E07E     		.sleb128 -160
 50540 5df6 9F       		.byte	0x9f
 50541 5df7 00000000 		.quad	.LVL652
 50541      00000000 
 50542 5dff 00000000 		.quad	.LFE6051
 50542      00000000 
 50543 5e07 0400     		.value	0x4
 50544 5e09 91       		.byte	0x91
 50545 5e0a E07E     		.sleb128 -160
 50546 5e0c 9F       		.byte	0x9f
 50547 5e0d 00000000 		.quad	0
 50547      00000000 
 50548 5e15 00000000 		.quad	0
 50548      00000000 
 50549              	.LLST394:
 50550 5e1d 00000000 		.quad	.LVL408
 50550      00000000 
 50551 5e25 00000000 		.quad	.LVL409-1
 50551      00000000 
 50552 5e2d 0100     		.value	0x1
 50553 5e2f 61       		.byte	0x61
 50554 5e30 00000000 		.quad	.LVL409-1
 50554      00000000 
 50555 5e38 00000000 		.quad	.LVL633
 50555      00000000 
 50556 5e40 0300     		.value	0x3
 50557 5e42 91       		.byte	0x91
 50558 5e43 F87D     		.sleb128 -264
 50559 5e45 00000000 		.quad	.LVL636
 50559      00000000 
 50560 5e4d 00000000 		.quad	.LVL637
 50560      00000000 
 50561 5e55 0100     		.value	0x1
 50562 5e57 65       		.byte	0x65
 50563 5e58 00000000 		.quad	.LVL637
 50563      00000000 
 50564 5e60 00000000 		.quad	.LVL639
 50564      00000000 
 50565 5e68 0300     		.value	0x3
 50566 5e6a 91       		.byte	0x91
 50567 5e6b F87D     		.sleb128 -264
GAS LISTING /tmp/ccmMnd7l.s 			page 1249


 50568 5e6d 00000000 		.quad	.LVL652
 50568      00000000 
 50569 5e75 00000000 		.quad	.LFE6051
 50569      00000000 
 50570 5e7d 0300     		.value	0x3
 50571 5e7f 91       		.byte	0x91
 50572 5e80 F87D     		.sleb128 -264
 50573 5e82 00000000 		.quad	0
 50573      00000000 
 50574 5e8a 00000000 		.quad	0
 50574      00000000 
 50575              	.LLST395:
 50576 5e92 00000000 		.quad	.LVL435
 50576      00000000 
 50577 5e9a 00000000 		.quad	.LVL436
 50577      00000000 
 50578 5ea2 0300     		.value	0x3
 50579 5ea4 91       		.byte	0x91
 50580 5ea5 987E     		.sleb128 -232
 50581 5ea7 00000000 		.quad	0
 50581      00000000 
 50582 5eaf 00000000 		.quad	0
 50582      00000000 
 50583              	.LLST396:
 50584 5eb7 00000000 		.quad	.LVL400
 50584      00000000 
 50585 5ebf 00000000 		.quad	.LVL402
 50585      00000000 
 50586 5ec7 0A00     		.value	0xa
 50587 5ec9 9E       		.byte	0x9e
 50588 5eca 08       		.uleb128 0x8
 50589 5ecb 00000000 		.long	0
 50590 5ecf 00000000 		.long	0
 50591 5ed3 00000000 		.quad	.LVL402
 50591      00000000 
 50592 5edb 00000000 		.quad	.LVL405
 50592      00000000 
 50593 5ee3 0100     		.value	0x1
 50594 5ee5 61       		.byte	0x61
 50595 5ee6 00000000 		.quad	.LVL634
 50595      00000000 
 50596 5eee 00000000 		.quad	.LVL637
 50596      00000000 
 50597 5ef6 0A00     		.value	0xa
 50598 5ef8 9E       		.byte	0x9e
 50599 5ef9 08       		.uleb128 0x8
 50600 5efa 00000000 		.long	0
 50601 5efe 00000000 		.long	0
 50602 5f02 00000000 		.quad	0
 50602      00000000 
 50603 5f0a 00000000 		.quad	0
 50603      00000000 
 50604              	.LLST397:
 50605 5f12 00000000 		.quad	.LVL400
 50605      00000000 
 50606 5f1a 00000000 		.quad	.LVL402
 50606      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1250


 50607 5f22 0300     		.value	0x3
 50608 5f24 52       		.byte	0x52
 50609 5f25 93       		.byte	0x93
 50610 5f26 08       		.uleb128 0x8
 50611 5f27 00000000 		.quad	.LVL402
 50611      00000000 
 50612 5f2f 00000000 		.quad	.LVL403
 50612      00000000 
 50613 5f37 0300     		.value	0x3
 50614 5f39 50       		.byte	0x50
 50615 5f3a 93       		.byte	0x93
 50616 5f3b 08       		.uleb128 0x8
 50617 5f3c 00000000 		.quad	.LVL403
 50617      00000000 
 50618 5f44 00000000 		.quad	.LVL404
 50618      00000000 
 50619 5f4c 0500     		.value	0x5
 50620 5f4e 70       		.byte	0x70
 50621 5f4f 08       		.sleb128 8
 50622 5f50 9F       		.byte	0x9f
 50623 5f51 93       		.byte	0x93
 50624 5f52 08       		.uleb128 0x8
 50625 5f53 00000000 		.quad	.LVL404
 50625      00000000 
 50626 5f5b 00000000 		.quad	.LVL406
 50626      00000000 
 50627 5f63 0300     		.value	0x3
 50628 5f65 50       		.byte	0x50
 50629 5f66 93       		.byte	0x93
 50630 5f67 08       		.uleb128 0x8
 50631 5f68 00000000 		.quad	.LVL634
 50631      00000000 
 50632 5f70 00000000 		.quad	.LVL635
 50632      00000000 
 50633 5f78 0300     		.value	0x3
 50634 5f7a 52       		.byte	0x52
 50635 5f7b 93       		.byte	0x93
 50636 5f7c 08       		.uleb128 0x8
 50637 5f7d 00000000 		.quad	.LVL635
 50637      00000000 
 50638 5f85 00000000 		.quad	.LVL637
 50638      00000000 
 50639 5f8d 0300     		.value	0x3
 50640 5f8f 56       		.byte	0x56
 50641 5f90 93       		.byte	0x93
 50642 5f91 08       		.uleb128 0x8
 50643 5f92 00000000 		.quad	0
 50643      00000000 
 50644 5f9a 00000000 		.quad	0
 50644      00000000 
 50645              	.LLST398:
 50646 5fa2 00000000 		.quad	.LVL408
 50646      00000000 
 50647 5faa 00000000 		.quad	.LVL409-1
 50647      00000000 
 50648 5fb2 0300     		.value	0x3
 50649 5fb4 54       		.byte	0x54
GAS LISTING /tmp/ccmMnd7l.s 			page 1251


 50650 5fb5 93       		.byte	0x93
 50651 5fb6 08       		.uleb128 0x8
 50652 5fb7 00000000 		.quad	.LVL409-1
 50652      00000000 
 50653 5fbf 00000000 		.quad	.LVL434
 50653      00000000 
 50654 5fc7 0300     		.value	0x3
 50655 5fc9 56       		.byte	0x56
 50656 5fca 93       		.byte	0x93
 50657 5fcb 08       		.uleb128 0x8
 50658 5fcc 00000000 		.quad	.LVL597
 50658      00000000 
 50659 5fd4 00000000 		.quad	.LVL601
 50659      00000000 
 50660 5fdc 0300     		.value	0x3
 50661 5fde 56       		.byte	0x56
 50662 5fdf 93       		.byte	0x93
 50663 5fe0 08       		.uleb128 0x8
 50664 5fe1 00000000 		.quad	.LVL604
 50664      00000000 
 50665 5fe9 00000000 		.quad	.LVL626
 50665      00000000 
 50666 5ff1 0300     		.value	0x3
 50667 5ff3 56       		.byte	0x56
 50668 5ff4 93       		.byte	0x93
 50669 5ff5 08       		.uleb128 0x8
 50670 5ff6 00000000 		.quad	.LVL629
 50670      00000000 
 50671 5ffe 00000000 		.quad	.LVL633
 50671      00000000 
 50672 6006 0300     		.value	0x3
 50673 6008 56       		.byte	0x56
 50674 6009 93       		.byte	0x93
 50675 600a 08       		.uleb128 0x8
 50676 600b 00000000 		.quad	.LVL636
 50676      00000000 
 50677 6013 00000000 		.quad	.LVL637
 50677      00000000 
 50678 601b 0300     		.value	0x3
 50679 601d 56       		.byte	0x56
 50680 601e 93       		.byte	0x93
 50681 601f 08       		.uleb128 0x8
 50682 6020 00000000 		.quad	0
 50682      00000000 
 50683 6028 00000000 		.quad	0
 50683      00000000 
 50684              	.LLST399:
 50685 6030 00000000 		.quad	.LVL408
 50685      00000000 
 50686 6038 00000000 		.quad	.LVL409-1
 50686      00000000 
 50687 6040 0300     		.value	0x3
 50688 6042 52       		.byte	0x52
 50689 6043 93       		.byte	0x93
 50690 6044 08       		.uleb128 0x8
 50691 6045 00000000 		.quad	.LVL409-1
 50691      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1252


 50692 604d 00000000 		.quad	.LVL435
 50692      00000000 
 50693 6055 0300     		.value	0x3
 50694 6057 53       		.byte	0x53
 50695 6058 93       		.byte	0x93
 50696 6059 08       		.uleb128 0x8
 50697 605a 00000000 		.quad	.LVL597
 50697      00000000 
 50698 6062 00000000 		.quad	.LVL601
 50698      00000000 
 50699 606a 0300     		.value	0x3
 50700 606c 53       		.byte	0x53
 50701 606d 93       		.byte	0x93
 50702 606e 08       		.uleb128 0x8
 50703 606f 00000000 		.quad	.LVL604
 50703      00000000 
 50704 6077 00000000 		.quad	.LVL626
 50704      00000000 
 50705 607f 0300     		.value	0x3
 50706 6081 53       		.byte	0x53
 50707 6082 93       		.byte	0x93
 50708 6083 08       		.uleb128 0x8
 50709 6084 00000000 		.quad	.LVL629
 50709      00000000 
 50710 608c 00000000 		.quad	.LVL633
 50710      00000000 
 50711 6094 0300     		.value	0x3
 50712 6096 53       		.byte	0x53
 50713 6097 93       		.byte	0x93
 50714 6098 08       		.uleb128 0x8
 50715 6099 00000000 		.quad	.LVL636
 50715      00000000 
 50716 60a1 00000000 		.quad	.LVL637
 50716      00000000 
 50717 60a9 0300     		.value	0x3
 50718 60ab 56       		.byte	0x56
 50719 60ac 93       		.byte	0x93
 50720 60ad 08       		.uleb128 0x8
 50721 60ae 00000000 		.quad	0
 50721      00000000 
 50722 60b6 00000000 		.quad	0
 50722      00000000 
 50723              	.LLST402:
 50724 60be 00000000 		.quad	.LVL409
 50724      00000000 
 50725 60c6 00000000 		.quad	.LVL435
 50725      00000000 
 50726 60ce 0300     		.value	0x3
 50727 60d0 53       		.byte	0x53
 50728 60d1 93       		.byte	0x93
 50729 60d2 08       		.uleb128 0x8
 50730 60d3 00000000 		.quad	.LVL597
 50730      00000000 
 50731 60db 00000000 		.quad	.LVL601
 50731      00000000 
 50732 60e3 0300     		.value	0x3
 50733 60e5 53       		.byte	0x53
GAS LISTING /tmp/ccmMnd7l.s 			page 1253


 50734 60e6 93       		.byte	0x93
 50735 60e7 08       		.uleb128 0x8
 50736 60e8 00000000 		.quad	.LVL604
 50736      00000000 
 50737 60f0 00000000 		.quad	.LVL626
 50737      00000000 
 50738 60f8 0300     		.value	0x3
 50739 60fa 53       		.byte	0x53
 50740 60fb 93       		.byte	0x93
 50741 60fc 08       		.uleb128 0x8
 50742 60fd 00000000 		.quad	.LVL629
 50742      00000000 
 50743 6105 00000000 		.quad	.LVL633
 50743      00000000 
 50744 610d 0300     		.value	0x3
 50745 610f 53       		.byte	0x53
 50746 6110 93       		.byte	0x93
 50747 6111 08       		.uleb128 0x8
 50748 6112 00000000 		.quad	0
 50748      00000000 
 50749 611a 00000000 		.quad	0
 50749      00000000 
 50750              	.LLST403:
 50751 6122 00000000 		.quad	.LVL410
 50751      00000000 
 50752 612a 00000000 		.quad	.LVL433
 50752      00000000 
 50753 6132 0600     		.value	0x6
 50754 6134 73       		.byte	0x73
 50755 6135 8001     		.sleb128 128
 50756 6137 9F       		.byte	0x9f
 50757 6138 93       		.byte	0x93
 50758 6139 08       		.uleb128 0x8
 50759 613a 00000000 		.quad	.LVL597
 50759      00000000 
 50760 6142 00000000 		.quad	.LVL601
 50760      00000000 
 50761 614a 0600     		.value	0x6
 50762 614c 73       		.byte	0x73
 50763 614d 8001     		.sleb128 128
 50764 614f 9F       		.byte	0x9f
 50765 6150 93       		.byte	0x93
 50766 6151 08       		.uleb128 0x8
 50767 6152 00000000 		.quad	.LVL604
 50767      00000000 
 50768 615a 00000000 		.quad	.LVL608
 50768      00000000 
 50769 6162 0600     		.value	0x6
 50770 6164 73       		.byte	0x73
 50771 6165 8001     		.sleb128 128
 50772 6167 9F       		.byte	0x9f
 50773 6168 93       		.byte	0x93
 50774 6169 08       		.uleb128 0x8
 50775 616a 00000000 		.quad	.LVL631
 50775      00000000 
 50776 6172 00000000 		.quad	.LVL633
 50776      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1254


 50777 617a 0600     		.value	0x6
 50778 617c 73       		.byte	0x73
 50779 617d 8001     		.sleb128 128
 50780 617f 9F       		.byte	0x9f
 50781 6180 93       		.byte	0x93
 50782 6181 08       		.uleb128 0x8
 50783 6182 00000000 		.quad	0
 50783      00000000 
 50784 618a 00000000 		.quad	0
 50784      00000000 
 50785              	.LLST404:
 50786 6192 00000000 		.quad	.LVL410
 50786      00000000 
 50787 619a 00000000 		.quad	.LVL433
 50787      00000000 
 50788 61a2 0300     		.value	0x3
 50789 61a4 53       		.byte	0x53
 50790 61a5 93       		.byte	0x93
 50791 61a6 08       		.uleb128 0x8
 50792 61a7 00000000 		.quad	.LVL597
 50792      00000000 
 50793 61af 00000000 		.quad	.LVL601
 50793      00000000 
 50794 61b7 0300     		.value	0x3
 50795 61b9 53       		.byte	0x53
 50796 61ba 93       		.byte	0x93
 50797 61bb 08       		.uleb128 0x8
 50798 61bc 00000000 		.quad	.LVL604
 50798      00000000 
 50799 61c4 00000000 		.quad	.LVL608
 50799      00000000 
 50800 61cc 0300     		.value	0x3
 50801 61ce 53       		.byte	0x53
 50802 61cf 93       		.byte	0x93
 50803 61d0 08       		.uleb128 0x8
 50804 61d1 00000000 		.quad	.LVL631
 50804      00000000 
 50805 61d9 00000000 		.quad	.LVL633
 50805      00000000 
 50806 61e1 0300     		.value	0x3
 50807 61e3 53       		.byte	0x53
 50808 61e4 93       		.byte	0x93
 50809 61e5 08       		.uleb128 0x8
 50810 61e6 00000000 		.quad	0
 50810      00000000 
 50811 61ee 00000000 		.quad	0
 50811      00000000 
 50812              	.LLST405:
 50813 61f6 00000000 		.quad	.LVL410
 50813      00000000 
 50814 61fe 00000000 		.quad	.LVL411
 50814      00000000 
 50815 6206 0500     		.value	0x5
 50816 6208 73       		.byte	0x73
 50817 6209 08       		.sleb128 8
 50818 620a 9F       		.byte	0x9f
 50819 620b 93       		.byte	0x93
GAS LISTING /tmp/ccmMnd7l.s 			page 1255


 50820 620c 08       		.uleb128 0x8
 50821 620d 00000000 		.quad	.LVL411
 50821      00000000 
 50822 6215 00000000 		.quad	.LVL420
 50822      00000000 
 50823 621d 0300     		.value	0x3
 50824 621f 58       		.byte	0x58
 50825 6220 93       		.byte	0x93
 50826 6221 08       		.uleb128 0x8
 50827 6222 00000000 		.quad	.LVL420
 50827      00000000 
 50828 622a 00000000 		.quad	.LVL421
 50828      00000000 
 50829 6232 0500     		.value	0x5
 50830 6234 78       		.byte	0x78
 50831 6235 08       		.sleb128 8
 50832 6236 9F       		.byte	0x9f
 50833 6237 93       		.byte	0x93
 50834 6238 08       		.uleb128 0x8
 50835 6239 00000000 		.quad	.LVL421
 50835      00000000 
 50836 6241 00000000 		.quad	.LVL433
 50836      00000000 
 50837 6249 0300     		.value	0x3
 50838 624b 58       		.byte	0x58
 50839 624c 93       		.byte	0x93
 50840 624d 08       		.uleb128 0x8
 50841 624e 00000000 		.quad	.LVL597
 50841      00000000 
 50842 6256 00000000 		.quad	.LVL599-1
 50842      00000000 
 50843 625e 0300     		.value	0x3
 50844 6260 58       		.byte	0x58
 50845 6261 93       		.byte	0x93
 50846 6262 08       		.uleb128 0x8
 50847 6263 00000000 		.quad	.LVL599-1
 50847      00000000 
 50848 626b 00000000 		.quad	.LVL600
 50848      00000000 
 50849 6273 0500     		.value	0x5
 50850 6275 91       		.byte	0x91
 50851 6276 987E     		.sleb128 -232
 50852 6278 93       		.byte	0x93
 50853 6279 08       		.uleb128 0x8
 50854 627a 00000000 		.quad	.LVL604
 50854      00000000 
 50855 6282 00000000 		.quad	.LVL608
 50855      00000000 
 50856 628a 0300     		.value	0x3
 50857 628c 58       		.byte	0x58
 50858 628d 93       		.byte	0x93
 50859 628e 08       		.uleb128 0x8
 50860 628f 00000000 		.quad	.LVL631
 50860      00000000 
 50861 6297 00000000 		.quad	.LVL633
 50861      00000000 
 50862 629f 0300     		.value	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1256


 50863 62a1 58       		.byte	0x58
 50864 62a2 93       		.byte	0x93
 50865 62a3 08       		.uleb128 0x8
 50866 62a4 00000000 		.quad	0
 50866      00000000 
 50867 62ac 00000000 		.quad	0
 50867      00000000 
 50868              	.LLST406:
 50869 62b4 00000000 		.quad	.LVL410
 50869      00000000 
 50870 62bc 00000000 		.quad	.LVL433
 50870      00000000 
 50871 62c4 0200     		.value	0x2
 50872 62c6 31       		.byte	0x31
 50873 62c7 9F       		.byte	0x9f
 50874 62c8 00000000 		.quad	.LVL597
 50874      00000000 
 50875 62d0 00000000 		.quad	.LVL601
 50875      00000000 
 50876 62d8 0200     		.value	0x2
 50877 62da 31       		.byte	0x31
 50878 62db 9F       		.byte	0x9f
 50879 62dc 00000000 		.quad	.LVL604
 50879      00000000 
 50880 62e4 00000000 		.quad	.LVL608
 50880      00000000 
 50881 62ec 0200     		.value	0x2
 50882 62ee 31       		.byte	0x31
 50883 62ef 9F       		.byte	0x9f
 50884 62f0 00000000 		.quad	.LVL631
 50884      00000000 
 50885 62f8 00000000 		.quad	.LVL633
 50885      00000000 
 50886 6300 0200     		.value	0x2
 50887 6302 31       		.byte	0x31
 50888 6303 9F       		.byte	0x9f
 50889 6304 00000000 		.quad	0
 50889      00000000 
 50890 630c 00000000 		.quad	0
 50890      00000000 
 50891              	.LLST407:
 50892 6314 00000000 		.quad	.LVL410
 50892      00000000 
 50893 631c 00000000 		.quad	.LVL433
 50893      00000000 
 50894 6324 0600     		.value	0x6
 50895 6326 F2       		.byte	0xf2
 50896 6327 00000000 		.long	.Ldebug_info0+73816
 50897 632b 00       		.sleb128 0
 50898 632c 00000000 		.quad	.LVL597
 50898      00000000 
 50899 6334 00000000 		.quad	.LVL601
 50899      00000000 
 50900 633c 0600     		.value	0x6
 50901 633e F2       		.byte	0xf2
 50902 633f 00000000 		.long	.Ldebug_info0+73816
 50903 6343 00       		.sleb128 0
GAS LISTING /tmp/ccmMnd7l.s 			page 1257


 50904 6344 00000000 		.quad	.LVL604
 50904      00000000 
 50905 634c 00000000 		.quad	.LVL608
 50905      00000000 
 50906 6354 0600     		.value	0x6
 50907 6356 F2       		.byte	0xf2
 50908 6357 00000000 		.long	.Ldebug_info0+73816
 50909 635b 00       		.sleb128 0
 50910 635c 00000000 		.quad	.LVL631
 50910      00000000 
 50911 6364 00000000 		.quad	.LVL633
 50911      00000000 
 50912 636c 0600     		.value	0x6
 50913 636e F2       		.byte	0xf2
 50914 636f 00000000 		.long	.Ldebug_info0+73816
 50915 6373 00       		.sleb128 0
 50916 6374 00000000 		.quad	0
 50916      00000000 
 50917 637c 00000000 		.quad	0
 50917      00000000 
 50918              	.LLST408:
 50919 6384 00000000 		.quad	.LVL411
 50919      00000000 
 50920 638c 00000000 		.quad	.LVL433
 50920      00000000 
 50921 6394 0600     		.value	0x6
 50922 6396 F2       		.byte	0xf2
 50923 6397 00000000 		.long	.Ldebug_info0+73800
 50924 639b 00       		.sleb128 0
 50925 639c 00000000 		.quad	.LVL597
 50925      00000000 
 50926 63a4 00000000 		.quad	.LVL601
 50926      00000000 
 50927 63ac 0600     		.value	0x6
 50928 63ae F2       		.byte	0xf2
 50929 63af 00000000 		.long	.Ldebug_info0+73800
 50930 63b3 00       		.sleb128 0
 50931 63b4 00000000 		.quad	.LVL604
 50931      00000000 
 50932 63bc 00000000 		.quad	.LVL608
 50932      00000000 
 50933 63c4 0600     		.value	0x6
 50934 63c6 F2       		.byte	0xf2
 50935 63c7 00000000 		.long	.Ldebug_info0+73800
 50936 63cb 00       		.sleb128 0
 50937 63cc 00000000 		.quad	.LVL631
 50937      00000000 
 50938 63d4 00000000 		.quad	.LVL633
 50938      00000000 
 50939 63dc 0600     		.value	0x6
 50940 63de F2       		.byte	0xf2
 50941 63df 00000000 		.long	.Ldebug_info0+73800
 50942 63e3 00       		.sleb128 0
 50943 63e4 00000000 		.quad	0
 50943      00000000 
 50944 63ec 00000000 		.quad	0
 50944      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1258


 50945              	.LLST409:
 50946 63f4 00000000 		.quad	.LVL413
 50946      00000000 
 50947 63fc 00000000 		.quad	.LVL415
 50947      00000000 
 50948 6404 0300     		.value	0x3
 50949 6406 58       		.byte	0x58
 50950 6407 93       		.byte	0x93
 50951 6408 08       		.uleb128 0x8
 50952 6409 00000000 		.quad	.LVL415
 50952      00000000 
 50953 6411 00000000 		.quad	.LVL416
 50953      00000000 
 50954 6419 0300     		.value	0x3
 50955 641b 50       		.byte	0x50
 50956 641c 93       		.byte	0x93
 50957 641d 08       		.uleb128 0x8
 50958 641e 00000000 		.quad	.LVL416
 50958      00000000 
 50959 6426 00000000 		.quad	.LVL417
 50959      00000000 
 50960 642e 0500     		.value	0x5
 50961 6430 70       		.byte	0x70
 50962 6431 08       		.sleb128 8
 50963 6432 9F       		.byte	0x9f
 50964 6433 93       		.byte	0x93
 50965 6434 08       		.uleb128 0x8
 50966 6435 00000000 		.quad	.LVL417
 50966      00000000 
 50967 643d 00000000 		.quad	.LVL419
 50967      00000000 
 50968 6445 0300     		.value	0x3
 50969 6447 50       		.byte	0x50
 50970 6448 93       		.byte	0x93
 50971 6449 08       		.uleb128 0x8
 50972 644a 00000000 		.quad	.LVL631
 50972      00000000 
 50973 6452 00000000 		.quad	.LVL633
 50973      00000000 
 50974 645a 0300     		.value	0x3
 50975 645c 58       		.byte	0x58
 50976 645d 93       		.byte	0x93
 50977 645e 08       		.uleb128 0x8
 50978 645f 00000000 		.quad	0
 50978      00000000 
 50979 6467 00000000 		.quad	0
 50979      00000000 
 50980              	.LLST410:
 50981 646f 00000000 		.quad	.LVL413
 50981      00000000 
 50982 6477 00000000 		.quad	.LVL420
 50982      00000000 
 50983 647f 0100     		.value	0x1
 50984 6481 62       		.byte	0x62
 50985 6482 00000000 		.quad	.LVL631
 50985      00000000 
 50986 648a 00000000 		.quad	.LVL633
GAS LISTING /tmp/ccmMnd7l.s 			page 1259


 50986      00000000 
 50987 6492 0100     		.value	0x1
 50988 6494 62       		.byte	0x62
 50989 6495 00000000 		.quad	0
 50989      00000000 
 50990 649d 00000000 		.quad	0
 50990      00000000 
 50991              	.LLST411:
 50992 64a5 00000000 		.quad	.LVL414
 50992      00000000 
 50993 64ad 00000000 		.quad	.LVL420
 50993      00000000 
 50994 64b5 0600     		.value	0x6
 50995 64b7 F2       		.byte	0xf2
 50996 64b8 00000000 		.long	.Ldebug_info0+73985
 50997 64bc 00       		.sleb128 0
 50998 64bd 00000000 		.quad	.LVL631
 50998      00000000 
 50999 64c5 00000000 		.quad	.LVL633
 50999      00000000 
 51000 64cd 0600     		.value	0x6
 51001 64cf F2       		.byte	0xf2
 51002 64d0 00000000 		.long	.Ldebug_info0+73985
 51003 64d4 00       		.sleb128 0
 51004 64d5 00000000 		.quad	0
 51004      00000000 
 51005 64dd 00000000 		.quad	0
 51005      00000000 
 51006              	.LLST412:
 51007 64e5 00000000 		.quad	.LVL415
 51007      00000000 
 51008 64ed 00000000 		.quad	.LVL416
 51008      00000000 
 51009 64f5 0600     		.value	0x6
 51010 64f7 F2       		.byte	0xf2
 51011 64f8 00000000 		.long	.Ldebug_info0+73995
 51012 64fc 00       		.sleb128 0
 51013 64fd 00000000 		.quad	.LVL417
 51013      00000000 
 51014 6505 00000000 		.quad	.LVL419
 51014      00000000 
 51015 650d 0600     		.value	0x6
 51016 650f F2       		.byte	0xf2
 51017 6510 00000000 		.long	.Ldebug_info0+73995
 51018 6514 00       		.sleb128 0
 51019 6515 00000000 		.quad	0
 51019      00000000 
 51020 651d 00000000 		.quad	0
 51020      00000000 
 51021              	.LLST413:
 51022 6525 00000000 		.quad	.LVL597
 51022      00000000 
 51023 652d 00000000 		.quad	.LVL599-1
 51023      00000000 
 51024 6535 0100     		.value	0x1
 51025 6537 62       		.byte	0x62
 51026 6538 00000000 		.quad	.LVL599-1
GAS LISTING /tmp/ccmMnd7l.s 			page 1260


 51026      00000000 
 51027 6540 00000000 		.quad	.LVL600
 51027      00000000 
 51028 6548 0300     		.value	0x3
 51029 654a 91       		.byte	0x91
 51030 654b A87E     		.sleb128 -216
 51031 654d 00000000 		.quad	0
 51031      00000000 
 51032 6555 00000000 		.quad	0
 51032      00000000 
 51033              	.LLST414:
 51034 655d 00000000 		.quad	.LVL597
 51034      00000000 
 51035 6565 00000000 		.quad	.LVL599-1
 51035      00000000 
 51036 656d 0300     		.value	0x3
 51037 656f 78       		.byte	0x78
 51038 6570 08       		.sleb128 8
 51039 6571 9F       		.byte	0x9f
 51040 6572 00000000 		.quad	.LVL599-1
 51040      00000000 
 51041 657a 00000000 		.quad	.LVL600
 51041      00000000 
 51042 6582 0700     		.value	0x7
 51043 6584 91       		.byte	0x91
 51044 6585 987E     		.sleb128 -232
 51045 6587 06       		.byte	0x6
 51046 6588 23       		.byte	0x23
 51047 6589 08       		.uleb128 0x8
 51048 658a 9F       		.byte	0x9f
 51049 658b 00000000 		.quad	0
 51049      00000000 
 51050 6593 00000000 		.quad	0
 51050      00000000 
 51051              	.LLST415:
 51052 659b 00000000 		.quad	.LVL597
 51052      00000000 
 51053 65a3 00000000 		.quad	.LVL599-1
 51053      00000000 
 51054 65ab 0100     		.value	0x1
 51055 65ad 58       		.byte	0x58
 51056 65ae 00000000 		.quad	.LVL599-1
 51056      00000000 
 51057 65b6 00000000 		.quad	.LVL600
 51057      00000000 
 51058 65be 0300     		.value	0x3
 51059 65c0 91       		.byte	0x91
 51060 65c1 987E     		.sleb128 -232
 51061 65c3 00000000 		.quad	0
 51061      00000000 
 51062 65cb 00000000 		.quad	0
 51062      00000000 
 51063              	.LLST416:
 51064 65d3 00000000 		.quad	.LVL597
 51064      00000000 
 51065 65db 00000000 		.quad	.LVL601
 51065      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1261


 51066 65e3 0100     		.value	0x1
 51067 65e5 53       		.byte	0x53
 51068 65e6 00000000 		.quad	0
 51068      00000000 
 51069 65ee 00000000 		.quad	0
 51069      00000000 
 51070              	.LLST417:
 51071 65f6 00000000 		.quad	.LVL597
 51071      00000000 
 51072 65fe 00000000 		.quad	.LVL601
 51072      00000000 
 51073 6606 0200     		.value	0x2
 51074 6608 31       		.byte	0x31
 51075 6609 9F       		.byte	0x9f
 51076 660a 00000000 		.quad	0
 51076      00000000 
 51077 6612 00000000 		.quad	0
 51077      00000000 
 51078              	.LLST421:
 51079 661a 00000000 		.quad	.LVL598
 51079      00000000 
 51080 6622 00000000 		.quad	.LVL599-1
 51080      00000000 
 51081 662a 0500     		.value	0x5
 51082 662c 71       		.byte	0x71
 51083 662d 00       		.sleb128 0
 51084 662e 38       		.byte	0x38
 51085 662f 1B       		.byte	0x1b
 51086 6630 9F       		.byte	0x9f
 51087 6631 00000000 		.quad	.LVL599-1
 51087      00000000 
 51088 6639 00000000 		.quad	.LVL600
 51088      00000000 
 51089 6641 0A00     		.value	0xa
 51090 6643 91       		.byte	0x91
 51091 6644 987E     		.sleb128 -232
 51092 6646 06       		.byte	0x6
 51093 6647 73       		.byte	0x73
 51094 6648 00       		.sleb128 0
 51095 6649 1C       		.byte	0x1c
 51096 664a 38       		.byte	0x38
 51097 664b 1B       		.byte	0x1b
 51098 664c 9F       		.byte	0x9f
 51099 664d 00000000 		.quad	0
 51099      00000000 
 51100 6655 00000000 		.quad	0
 51100      00000000 
 51101              	.LLST422:
 51102 665d 00000000 		.quad	.LVL423
 51102      00000000 
 51103 6665 00000000 		.quad	.LVL426
 51103      00000000 
 51104 666d 0300     		.value	0x3
 51105 666f 52       		.byte	0x52
 51106 6670 93       		.byte	0x93
 51107 6671 08       		.uleb128 0x8
 51108 6672 00000000 		.quad	.LVL426
GAS LISTING /tmp/ccmMnd7l.s 			page 1262


 51108      00000000 
 51109 667a 00000000 		.quad	.LVL427
 51109      00000000 
 51110 6682 0300     		.value	0x3
 51111 6684 50       		.byte	0x50
 51112 6685 93       		.byte	0x93
 51113 6686 08       		.uleb128 0x8
 51114 6687 00000000 		.quad	.LVL427
 51114      00000000 
 51115 668f 00000000 		.quad	.LVL428
 51115      00000000 
 51116 6697 0500     		.value	0x5
 51117 6699 70       		.byte	0x70
 51118 669a 08       		.sleb128 8
 51119 669b 9F       		.byte	0x9f
 51120 669c 93       		.byte	0x93
 51121 669d 08       		.uleb128 0x8
 51122 669e 00000000 		.quad	.LVL428
 51122      00000000 
 51123 66a6 00000000 		.quad	.LVL433
 51123      00000000 
 51124 66ae 0300     		.value	0x3
 51125 66b0 50       		.byte	0x50
 51126 66b1 93       		.byte	0x93
 51127 66b2 08       		.uleb128 0x8
 51128 66b3 00000000 		.quad	.LVL604
 51128      00000000 
 51129 66bb 00000000 		.quad	.LVL606
 51129      00000000 
 51130 66c3 0300     		.value	0x3
 51131 66c5 52       		.byte	0x52
 51132 66c6 93       		.byte	0x93
 51133 66c7 08       		.uleb128 0x8
 51134 66c8 00000000 		.quad	.LVL606
 51134      00000000 
 51135 66d0 00000000 		.quad	.LVL608
 51135      00000000 
 51136 66d8 0300     		.value	0x3
 51137 66da 50       		.byte	0x50
 51138 66db 93       		.byte	0x93
 51139 66dc 08       		.uleb128 0x8
 51140 66dd 00000000 		.quad	0
 51140      00000000 
 51141 66e5 00000000 		.quad	0
 51141      00000000 
 51142              	.LLST423:
 51143 66ed 00000000 		.quad	.LVL424
 51143      00000000 
 51144 66f5 00000000 		.quad	.LVL433
 51144      00000000 
 51145 66fd 0100     		.value	0x1
 51146 66ff 62       		.byte	0x62
 51147 6700 00000000 		.quad	.LVL604
 51147      00000000 
 51148 6708 00000000 		.quad	.LVL608
 51148      00000000 
 51149 6710 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1263


 51150 6712 62       		.byte	0x62
 51151 6713 00000000 		.quad	0
 51151      00000000 
 51152 671b 00000000 		.quad	0
 51152      00000000 
 51153              	.LLST424:
 51154 6723 00000000 		.quad	.LVL425
 51154      00000000 
 51155 672b 00000000 		.quad	.LVL433
 51155      00000000 
 51156 6733 0600     		.value	0x6
 51157 6735 F2       		.byte	0xf2
 51158 6736 00000000 		.long	.Ldebug_info0+74503
 51159 673a 00       		.sleb128 0
 51160 673b 00000000 		.quad	.LVL604
 51160      00000000 
 51161 6743 00000000 		.quad	.LVL608
 51161      00000000 
 51162 674b 0600     		.value	0x6
 51163 674d F2       		.byte	0xf2
 51164 674e 00000000 		.long	.Ldebug_info0+74503
 51165 6752 00       		.sleb128 0
 51166 6753 00000000 		.quad	0
 51166      00000000 
 51167 675b 00000000 		.quad	0
 51167      00000000 
 51168              	.LLST425:
 51169 6763 00000000 		.quad	.LVL426
 51169      00000000 
 51170 676b 00000000 		.quad	.LVL427
 51170      00000000 
 51171 6773 0600     		.value	0x6
 51172 6775 F2       		.byte	0xf2
 51173 6776 00000000 		.long	.Ldebug_info0+74513
 51174 677a 00       		.sleb128 0
 51175 677b 00000000 		.quad	.LVL428
 51175      00000000 
 51176 6783 00000000 		.quad	.LVL433
 51176      00000000 
 51177 678b 0600     		.value	0x6
 51178 678d F2       		.byte	0xf2
 51179 678e 00000000 		.long	.Ldebug_info0+74513
 51180 6792 00       		.sleb128 0
 51181 6793 00000000 		.quad	0
 51181      00000000 
 51182 679b 00000000 		.quad	0
 51182      00000000 
 51183              	.LLST426:
 51184 67a3 00000000 		.quad	.LVL608
 51184      00000000 
 51185 67ab 00000000 		.quad	.LVL626
 51185      00000000 
 51186 67b3 0300     		.value	0x3
 51187 67b5 56       		.byte	0x56
 51188 67b6 93       		.byte	0x93
 51189 67b7 08       		.uleb128 0x8
 51190 67b8 00000000 		.quad	.LVL629
GAS LISTING /tmp/ccmMnd7l.s 			page 1264


 51190      00000000 
 51191 67c0 00000000 		.quad	.LVL631
 51191      00000000 
 51192 67c8 0300     		.value	0x3
 51193 67ca 56       		.byte	0x56
 51194 67cb 93       		.byte	0x93
 51195 67cc 08       		.uleb128 0x8
 51196 67cd 00000000 		.quad	0
 51196      00000000 
 51197 67d5 00000000 		.quad	0
 51197      00000000 
 51198              	.LLST427:
 51199 67dd 00000000 		.quad	.LVL608
 51199      00000000 
 51200 67e5 00000000 		.quad	.LVL626
 51200      00000000 
 51201 67ed 0300     		.value	0x3
 51202 67ef 53       		.byte	0x53
 51203 67f0 93       		.byte	0x93
 51204 67f1 08       		.uleb128 0x8
 51205 67f2 00000000 		.quad	.LVL629
 51205      00000000 
 51206 67fa 00000000 		.quad	.LVL631
 51206      00000000 
 51207 6802 0300     		.value	0x3
 51208 6804 53       		.byte	0x53
 51209 6805 93       		.byte	0x93
 51210 6806 08       		.uleb128 0x8
 51211 6807 00000000 		.quad	0
 51211      00000000 
 51212 680f 00000000 		.quad	0
 51212      00000000 
 51213              	.LLST428:
 51214 6817 00000000 		.quad	.LVL609
 51214      00000000 
 51215 681f 00000000 		.quad	.LVL619
 51215      00000000 
 51216 6827 0300     		.value	0x3
 51217 6829 52       		.byte	0x52
 51218 682a 93       		.byte	0x93
 51219 682b 08       		.uleb128 0x8
 51220 682c 00000000 		.quad	.LVL619
 51220      00000000 
 51221 6834 00000000 		.quad	.LVL620
 51221      00000000 
 51222 683c 0500     		.value	0x5
 51223 683e 72       		.byte	0x72
 51224 683f 08       		.sleb128 8
 51225 6840 9F       		.byte	0x9f
 51226 6841 93       		.byte	0x93
 51227 6842 08       		.uleb128 0x8
 51228 6843 00000000 		.quad	.LVL620
 51228      00000000 
 51229 684b 00000000 		.quad	.LVL624-1
 51229      00000000 
 51230 6853 0300     		.value	0x3
 51231 6855 52       		.byte	0x52
GAS LISTING /tmp/ccmMnd7l.s 			page 1265


 51232 6856 93       		.byte	0x93
 51233 6857 08       		.uleb128 0x8
 51234 6858 00000000 		.quad	.LVL624-1
 51234      00000000 
 51235 6860 00000000 		.quad	.LVL625
 51235      00000000 
 51236 6868 0500     		.value	0x5
 51237 686a 91       		.byte	0x91
 51238 686b 987E     		.sleb128 -232
 51239 686d 93       		.byte	0x93
 51240 686e 08       		.uleb128 0x8
 51241 686f 00000000 		.quad	.LVL629
 51241      00000000 
 51242 6877 00000000 		.quad	.LVL631
 51242      00000000 
 51243 687f 0300     		.value	0x3
 51244 6881 52       		.byte	0x52
 51245 6882 93       		.byte	0x93
 51246 6883 08       		.uleb128 0x8
 51247 6884 00000000 		.quad	0
 51247      00000000 
 51248 688c 00000000 		.quad	0
 51248      00000000 
 51249              	.LLST429:
 51250 6894 00000000 		.quad	.LVL608
 51250      00000000 
 51251 689c 00000000 		.quad	.LVL626
 51251      00000000 
 51252 68a4 0200     		.value	0x2
 51253 68a6 31       		.byte	0x31
 51254 68a7 9F       		.byte	0x9f
 51255 68a8 00000000 		.quad	.LVL629
 51255      00000000 
 51256 68b0 00000000 		.quad	.LVL631
 51256      00000000 
 51257 68b8 0200     		.value	0x2
 51258 68ba 31       		.byte	0x31
 51259 68bb 9F       		.byte	0x9f
 51260 68bc 00000000 		.quad	0
 51260      00000000 
 51261 68c4 00000000 		.quad	0
 51261      00000000 
 51262              	.LLST430:
 51263 68cc 00000000 		.quad	.LVL608
 51263      00000000 
 51264 68d4 00000000 		.quad	.LVL626
 51264      00000000 
 51265 68dc 0600     		.value	0x6
 51266 68de F2       		.byte	0xf2
 51267 68df 00000000 		.long	.Ldebug_info0+74644
 51268 68e3 00       		.sleb128 0
 51269 68e4 00000000 		.quad	.LVL629
 51269      00000000 
 51270 68ec 00000000 		.quad	.LVL631
 51270      00000000 
 51271 68f4 0600     		.value	0x6
 51272 68f6 F2       		.byte	0xf2
GAS LISTING /tmp/ccmMnd7l.s 			page 1266


 51273 68f7 00000000 		.long	.Ldebug_info0+74644
 51274 68fb 00       		.sleb128 0
 51275 68fc 00000000 		.quad	0
 51275      00000000 
 51276 6904 00000000 		.quad	0
 51276      00000000 
 51277              	.LLST431:
 51278 690c 00000000 		.quad	.LVL610
 51278      00000000 
 51279 6914 00000000 		.quad	.LVL626
 51279      00000000 
 51280 691c 0600     		.value	0x6
 51281 691e F2       		.byte	0xf2
 51282 691f 00000000 		.long	.Ldebug_info0+74628
 51283 6923 00       		.sleb128 0
 51284 6924 00000000 		.quad	.LVL629
 51284      00000000 
 51285 692c 00000000 		.quad	.LVL631
 51285      00000000 
 51286 6934 0600     		.value	0x6
 51287 6936 F2       		.byte	0xf2
 51288 6937 00000000 		.long	.Ldebug_info0+74628
 51289 693b 00       		.sleb128 0
 51290 693c 00000000 		.quad	0
 51290      00000000 
 51291 6944 00000000 		.quad	0
 51291      00000000 
 51292              	.LLST432:
 51293 694c 00000000 		.quad	.LVL612
 51293      00000000 
 51294 6954 00000000 		.quad	.LVL614
 51294      00000000 
 51295 695c 0300     		.value	0x3
 51296 695e 52       		.byte	0x52
 51297 695f 93       		.byte	0x93
 51298 6960 08       		.uleb128 0x8
 51299 6961 00000000 		.quad	.LVL614
 51299      00000000 
 51300 6969 00000000 		.quad	.LVL615
 51300      00000000 
 51301 6971 0300     		.value	0x3
 51302 6973 50       		.byte	0x50
 51303 6974 93       		.byte	0x93
 51304 6975 08       		.uleb128 0x8
 51305 6976 00000000 		.quad	.LVL615
 51305      00000000 
 51306 697e 00000000 		.quad	.LVL616
 51306      00000000 
 51307 6986 0500     		.value	0x5
 51308 6988 70       		.byte	0x70
 51309 6989 08       		.sleb128 8
 51310 698a 9F       		.byte	0x9f
 51311 698b 93       		.byte	0x93
 51312 698c 08       		.uleb128 0x8
 51313 698d 00000000 		.quad	.LVL616
 51313      00000000 
 51314 6995 00000000 		.quad	.LVL618
GAS LISTING /tmp/ccmMnd7l.s 			page 1267


 51314      00000000 
 51315 699d 0300     		.value	0x3
 51316 699f 50       		.byte	0x50
 51317 69a0 93       		.byte	0x93
 51318 69a1 08       		.uleb128 0x8
 51319 69a2 00000000 		.quad	.LVL629
 51319      00000000 
 51320 69aa 00000000 		.quad	.LVL631
 51320      00000000 
 51321 69b2 0300     		.value	0x3
 51322 69b4 52       		.byte	0x52
 51323 69b5 93       		.byte	0x93
 51324 69b6 08       		.uleb128 0x8
 51325 69b7 00000000 		.quad	0
 51325      00000000 
 51326 69bf 00000000 		.quad	0
 51326      00000000 
 51327              	.LLST433:
 51328 69c7 00000000 		.quad	.LVL612
 51328      00000000 
 51329 69cf 00000000 		.quad	.LVL619
 51329      00000000 
 51330 69d7 0100     		.value	0x1
 51331 69d9 62       		.byte	0x62
 51332 69da 00000000 		.quad	.LVL629
 51332      00000000 
 51333 69e2 00000000 		.quad	.LVL631
 51333      00000000 
 51334 69ea 0100     		.value	0x1
 51335 69ec 62       		.byte	0x62
 51336 69ed 00000000 		.quad	0
 51336      00000000 
 51337 69f5 00000000 		.quad	0
 51337      00000000 
 51338              	.LLST434:
 51339 69fd 00000000 		.quad	.LVL613
 51339      00000000 
 51340 6a05 00000000 		.quad	.LVL619
 51340      00000000 
 51341 6a0d 0600     		.value	0x6
 51342 6a0f F2       		.byte	0xf2
 51343 6a10 00000000 		.long	.Ldebug_info0+74809
 51344 6a14 00       		.sleb128 0
 51345 6a15 00000000 		.quad	.LVL629
 51345      00000000 
 51346 6a1d 00000000 		.quad	.LVL631
 51346      00000000 
 51347 6a25 0600     		.value	0x6
 51348 6a27 F2       		.byte	0xf2
 51349 6a28 00000000 		.long	.Ldebug_info0+74809
 51350 6a2c 00       		.sleb128 0
 51351 6a2d 00000000 		.quad	0
 51351      00000000 
 51352 6a35 00000000 		.quad	0
 51352      00000000 
 51353              	.LLST435:
 51354 6a3d 00000000 		.quad	.LVL614
GAS LISTING /tmp/ccmMnd7l.s 			page 1268


 51354      00000000 
 51355 6a45 00000000 		.quad	.LVL615
 51355      00000000 
 51356 6a4d 0600     		.value	0x6
 51357 6a4f F2       		.byte	0xf2
 51358 6a50 00000000 		.long	.Ldebug_info0+74819
 51359 6a54 00       		.sleb128 0
 51360 6a55 00000000 		.quad	.LVL616
 51360      00000000 
 51361 6a5d 00000000 		.quad	.LVL618
 51361      00000000 
 51362 6a65 0600     		.value	0x6
 51363 6a67 F2       		.byte	0xf2
 51364 6a68 00000000 		.long	.Ldebug_info0+74819
 51365 6a6c 00       		.sleb128 0
 51366 6a6d 00000000 		.quad	0
 51366      00000000 
 51367 6a75 00000000 		.quad	0
 51367      00000000 
 51368              	.LLST436:
 51369 6a7d 00000000 		.quad	.LVL622
 51369      00000000 
 51370 6a85 00000000 		.quad	.LVL624-1
 51370      00000000 
 51371 6a8d 0100     		.value	0x1
 51372 6a8f 62       		.byte	0x62
 51373 6a90 00000000 		.quad	.LVL624-1
 51373      00000000 
 51374 6a98 00000000 		.quad	.LVL625
 51374      00000000 
 51375 6aa0 0300     		.value	0x3
 51376 6aa2 91       		.byte	0x91
 51377 6aa3 A87E     		.sleb128 -216
 51378 6aa5 00000000 		.quad	0
 51378      00000000 
 51379 6aad 00000000 		.quad	0
 51379      00000000 
 51380              	.LLST437:
 51381 6ab5 00000000 		.quad	.LVL622
 51381      00000000 
 51382 6abd 00000000 		.quad	.LVL624-1
 51382      00000000 
 51383 6ac5 0300     		.value	0x3
 51384 6ac7 72       		.byte	0x72
 51385 6ac8 08       		.sleb128 8
 51386 6ac9 9F       		.byte	0x9f
 51387 6aca 00000000 		.quad	.LVL624-1
 51387      00000000 
 51388 6ad2 00000000 		.quad	.LVL625
 51388      00000000 
 51389 6ada 0700     		.value	0x7
 51390 6adc 91       		.byte	0x91
 51391 6add 987E     		.sleb128 -232
 51392 6adf 06       		.byte	0x6
 51393 6ae0 23       		.byte	0x23
 51394 6ae1 08       		.uleb128 0x8
 51395 6ae2 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1269


 51396 6ae3 00000000 		.quad	0
 51396      00000000 
 51397 6aeb 00000000 		.quad	0
 51397      00000000 
 51398              	.LLST438:
 51399 6af3 00000000 		.quad	.LVL622
 51399      00000000 
 51400 6afb 00000000 		.quad	.LVL624-1
 51400      00000000 
 51401 6b03 0100     		.value	0x1
 51402 6b05 52       		.byte	0x52
 51403 6b06 00000000 		.quad	.LVL624-1
 51403      00000000 
 51404 6b0e 00000000 		.quad	.LVL625
 51404      00000000 
 51405 6b16 0300     		.value	0x3
 51406 6b18 91       		.byte	0x91
 51407 6b19 987E     		.sleb128 -232
 51408 6b1b 00000000 		.quad	0
 51408      00000000 
 51409 6b23 00000000 		.quad	0
 51409      00000000 
 51410              	.LLST439:
 51411 6b2b 00000000 		.quad	.LVL622
 51411      00000000 
 51412 6b33 00000000 		.quad	.LVL626
 51412      00000000 
 51413 6b3b 0100     		.value	0x1
 51414 6b3d 53       		.byte	0x53
 51415 6b3e 00000000 		.quad	0
 51415      00000000 
 51416 6b46 00000000 		.quad	0
 51416      00000000 
 51417              	.LLST440:
 51418 6b4e 00000000 		.quad	.LVL622
 51418      00000000 
 51419 6b56 00000000 		.quad	.LVL626
 51419      00000000 
 51420 6b5e 0200     		.value	0x2
 51421 6b60 31       		.byte	0x31
 51422 6b61 9F       		.byte	0x9f
 51423 6b62 00000000 		.quad	0
 51423      00000000 
 51424 6b6a 00000000 		.quad	0
 51424      00000000 
 51425              	.LLST444:
 51426 6b72 00000000 		.quad	.LVL623
 51426      00000000 
 51427 6b7a 00000000 		.quad	.LVL624-1
 51427      00000000 
 51428 6b82 0500     		.value	0x5
 51429 6b84 71       		.byte	0x71
 51430 6b85 00       		.sleb128 0
 51431 6b86 38       		.byte	0x38
 51432 6b87 1B       		.byte	0x1b
 51433 6b88 9F       		.byte	0x9f
 51434 6b89 00000000 		.quad	.LVL624-1
GAS LISTING /tmp/ccmMnd7l.s 			page 1270


 51434      00000000 
 51435 6b91 00000000 		.quad	.LVL625
 51435      00000000 
 51436 6b99 0A00     		.value	0xa
 51437 6b9b 91       		.byte	0x91
 51438 6b9c 987E     		.sleb128 -232
 51439 6b9e 06       		.byte	0x6
 51440 6b9f 73       		.byte	0x73
 51441 6ba0 00       		.sleb128 0
 51442 6ba1 1C       		.byte	0x1c
 51443 6ba2 38       		.byte	0x38
 51444 6ba3 1B       		.byte	0x1b
 51445 6ba4 9F       		.byte	0x9f
 51446 6ba5 00000000 		.quad	0
 51446      00000000 
 51447 6bad 00000000 		.quad	0
 51447      00000000 
 51448              	.LLST445:
 51449 6bb5 00000000 		.quad	.LVL435
 51449      00000000 
 51450 6bbd 00000000 		.quad	.LVL477
 51450      00000000 
 51451 6bc5 0400     		.value	0x4
 51452 6bc7 91       		.byte	0x91
 51453 6bc8 E87E     		.sleb128 -152
 51454 6bca 9F       		.byte	0x9f
 51455 6bcb 00000000 		.quad	.LVL520
 51455      00000000 
 51456 6bd3 00000000 		.quad	.LVL597
 51456      00000000 
 51457 6bdb 0400     		.value	0x4
 51458 6bdd 91       		.byte	0x91
 51459 6bde 987F     		.sleb128 -104
 51460 6be0 9F       		.byte	0x9f
 51461 6be1 00000000 		.quad	.LVL601
 51461      00000000 
 51462 6be9 00000000 		.quad	.LVL604
 51462      00000000 
 51463 6bf1 0400     		.value	0x4
 51464 6bf3 91       		.byte	0x91
 51465 6bf4 E87E     		.sleb128 -152
 51466 6bf6 9F       		.byte	0x9f
 51467 6bf7 00000000 		.quad	.LVL626
 51467      00000000 
 51468 6bff 00000000 		.quad	.LVL629
 51468      00000000 
 51469 6c07 0400     		.value	0x4
 51470 6c09 91       		.byte	0x91
 51471 6c0a E87E     		.sleb128 -152
 51472 6c0c 9F       		.byte	0x9f
 51473 6c0d 00000000 		.quad	.LVL638
 51473      00000000 
 51474 6c15 00000000 		.quad	.LVL639
 51474      00000000 
 51475 6c1d 0400     		.value	0x4
 51476 6c1f 91       		.byte	0x91
 51477 6c20 E87E     		.sleb128 -152
GAS LISTING /tmp/ccmMnd7l.s 			page 1271


 51478 6c22 9F       		.byte	0x9f
 51479 6c23 00000000 		.quad	.LVL652
 51479      00000000 
 51480 6c2b 00000000 		.quad	.LVL692
 51480      00000000 
 51481 6c33 0400     		.value	0x4
 51482 6c35 91       		.byte	0x91
 51483 6c36 987F     		.sleb128 -104
 51484 6c38 9F       		.byte	0x9f
 51485 6c39 00000000 		.quad	.LVL693
 51485      00000000 
 51486 6c41 00000000 		.quad	.LVL699
 51486      00000000 
 51487 6c49 0400     		.value	0x4
 51488 6c4b 91       		.byte	0x91
 51489 6c4c 987F     		.sleb128 -104
 51490 6c4e 9F       		.byte	0x9f
 51491 6c4f 00000000 		.quad	0
 51491      00000000 
 51492 6c57 00000000 		.quad	0
 51492      00000000 
 51493              	.LLST447:
 51494 6c5f 00000000 		.quad	.LVL435
 51494      00000000 
 51495 6c67 00000000 		.quad	.LVL597
 51495      00000000 
 51496 6c6f 0A00     		.value	0xa
 51497 6c71 03       		.byte	0x3
 51498 6c72 00000000 		.quad	.LC14
 51498      00000000 
 51499 6c7a 9F       		.byte	0x9f
 51500 6c7b 00000000 		.quad	.LVL601
 51500      00000000 
 51501 6c83 00000000 		.quad	.LVL604
 51501      00000000 
 51502 6c8b 0A00     		.value	0xa
 51503 6c8d 03       		.byte	0x3
 51504 6c8e 00000000 		.quad	.LC14
 51504      00000000 
 51505 6c96 9F       		.byte	0x9f
 51506 6c97 00000000 		.quad	.LVL626
 51506      00000000 
 51507 6c9f 00000000 		.quad	.LVL629
 51507      00000000 
 51508 6ca7 0A00     		.value	0xa
 51509 6ca9 03       		.byte	0x3
 51510 6caa 00000000 		.quad	.LC14
 51510      00000000 
 51511 6cb2 9F       		.byte	0x9f
 51512 6cb3 00000000 		.quad	.LVL637
 51512      00000000 
 51513 6cbb 00000000 		.quad	.LVL639
 51513      00000000 
 51514 6cc3 0A00     		.value	0xa
 51515 6cc5 03       		.byte	0x3
 51516 6cc6 00000000 		.quad	.LC14
 51516      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1272


 51517 6cce 9F       		.byte	0x9f
 51518 6ccf 00000000 		.quad	.LVL652
 51518      00000000 
 51519 6cd7 00000000 		.quad	.LFE6051
 51519      00000000 
 51520 6cdf 0A00     		.value	0xa
 51521 6ce1 03       		.byte	0x3
 51522 6ce2 00000000 		.quad	.LC14
 51522      00000000 
 51523 6cea 9F       		.byte	0x9f
 51524 6ceb 00000000 		.quad	0
 51524      00000000 
 51525 6cf3 00000000 		.quad	0
 51525      00000000 
 51526              	.LLST448:
 51527 6cfb 00000000 		.quad	.LVL438
 51527      00000000 
 51528 6d03 00000000 		.quad	.LVL442-1
 51528      00000000 
 51529 6d0b 0100     		.value	0x1
 51530 6d0d 51       		.byte	0x51
 51531 6d0e 00000000 		.quad	0
 51531      00000000 
 51532 6d16 00000000 		.quad	0
 51532      00000000 
 51533              	.LLST449:
 51534 6d1e 00000000 		.quad	.LVL438
 51534      00000000 
 51535 6d26 00000000 		.quad	.LVL597
 51535      00000000 
 51536 6d2e 0400     		.value	0x4
 51537 6d30 0A       		.byte	0xa
 51538 6d31 0401     		.value	0x104
 51539 6d33 9F       		.byte	0x9f
 51540 6d34 00000000 		.quad	.LVL601
 51540      00000000 
 51541 6d3c 00000000 		.quad	.LVL604
 51541      00000000 
 51542 6d44 0400     		.value	0x4
 51543 6d46 0A       		.byte	0xa
 51544 6d47 0401     		.value	0x104
 51545 6d49 9F       		.byte	0x9f
 51546 6d4a 00000000 		.quad	.LVL626
 51546      00000000 
 51547 6d52 00000000 		.quad	.LVL629
 51547      00000000 
 51548 6d5a 0400     		.value	0x4
 51549 6d5c 0A       		.byte	0xa
 51550 6d5d 0401     		.value	0x104
 51551 6d5f 9F       		.byte	0x9f
 51552 6d60 00000000 		.quad	.LVL637
 51552      00000000 
 51553 6d68 00000000 		.quad	.LVL639
 51553      00000000 
 51554 6d70 0400     		.value	0x4
 51555 6d72 0A       		.byte	0xa
 51556 6d73 0401     		.value	0x104
GAS LISTING /tmp/ccmMnd7l.s 			page 1273


 51557 6d75 9F       		.byte	0x9f
 51558 6d76 00000000 		.quad	.LVL652
 51558      00000000 
 51559 6d7e 00000000 		.quad	.LFE6051
 51559      00000000 
 51560 6d86 0400     		.value	0x4
 51561 6d88 0A       		.byte	0xa
 51562 6d89 0401     		.value	0x104
 51563 6d8b 9F       		.byte	0x9f
 51564 6d8c 00000000 		.quad	0
 51564      00000000 
 51565 6d94 00000000 		.quad	0
 51565      00000000 
 51566              	.LLST450:
 51567 6d9c 00000000 		.quad	.LVL438
 51567      00000000 
 51568 6da4 00000000 		.quad	.LVL597
 51568      00000000 
 51569 6dac 0200     		.value	0x2
 51570 6dae 34       		.byte	0x34
 51571 6daf 9F       		.byte	0x9f
 51572 6db0 00000000 		.quad	.LVL601
 51572      00000000 
 51573 6db8 00000000 		.quad	.LVL604
 51573      00000000 
 51574 6dc0 0200     		.value	0x2
 51575 6dc2 34       		.byte	0x34
 51576 6dc3 9F       		.byte	0x9f
 51577 6dc4 00000000 		.quad	.LVL626
 51577      00000000 
 51578 6dcc 00000000 		.quad	.LVL629
 51578      00000000 
 51579 6dd4 0200     		.value	0x2
 51580 6dd6 34       		.byte	0x34
 51581 6dd7 9F       		.byte	0x9f
 51582 6dd8 00000000 		.quad	.LVL637
 51582      00000000 
 51583 6de0 00000000 		.quad	.LVL639
 51583      00000000 
 51584 6de8 0200     		.value	0x2
 51585 6dea 34       		.byte	0x34
 51586 6deb 9F       		.byte	0x9f
 51587 6dec 00000000 		.quad	.LVL652
 51587      00000000 
 51588 6df4 00000000 		.quad	.LFE6051
 51588      00000000 
 51589 6dfc 0200     		.value	0x2
 51590 6dfe 34       		.byte	0x34
 51591 6dff 9F       		.byte	0x9f
 51592 6e00 00000000 		.quad	0
 51592      00000000 
 51593 6e08 00000000 		.quad	0
 51593      00000000 
 51594              	.LLST452:
 51595 6e10 00000000 		.quad	.LVL438
 51595      00000000 
 51596 6e18 00000000 		.quad	.LVL441
GAS LISTING /tmp/ccmMnd7l.s 			page 1274


 51596      00000000 
 51597 6e20 0200     		.value	0x2
 51598 6e22 71       		.byte	0x71
 51599 6e23 18       		.sleb128 24
 51600 6e24 00000000 		.quad	0
 51600      00000000 
 51601 6e2c 00000000 		.quad	0
 51601      00000000 
 51602              	.LLST453:
 51603 6e34 00000000 		.quad	.LVL438
 51603      00000000 
 51604 6e3c 00000000 		.quad	.LVL597
 51604      00000000 
 51605 6e44 0400     		.value	0x4
 51606 6e46 0B       		.byte	0xb
 51607 6e47 FBFE     		.value	0xfefb
 51608 6e49 9F       		.byte	0x9f
 51609 6e4a 00000000 		.quad	.LVL601
 51609      00000000 
 51610 6e52 00000000 		.quad	.LVL604
 51610      00000000 
 51611 6e5a 0400     		.value	0x4
 51612 6e5c 0B       		.byte	0xb
 51613 6e5d FBFE     		.value	0xfefb
 51614 6e5f 9F       		.byte	0x9f
 51615 6e60 00000000 		.quad	.LVL626
 51615      00000000 
 51616 6e68 00000000 		.quad	.LVL629
 51616      00000000 
 51617 6e70 0400     		.value	0x4
 51618 6e72 0B       		.byte	0xb
 51619 6e73 FBFE     		.value	0xfefb
 51620 6e75 9F       		.byte	0x9f
 51621 6e76 00000000 		.quad	.LVL637
 51621      00000000 
 51622 6e7e 00000000 		.quad	.LVL639
 51622      00000000 
 51623 6e86 0400     		.value	0x4
 51624 6e88 0B       		.byte	0xb
 51625 6e89 FBFE     		.value	0xfefb
 51626 6e8b 9F       		.byte	0x9f
 51627 6e8c 00000000 		.quad	.LVL652
 51627      00000000 
 51628 6e94 00000000 		.quad	.LFE6051
 51628      00000000 
 51629 6e9c 0400     		.value	0x4
 51630 6e9e 0B       		.byte	0xb
 51631 6e9f FBFE     		.value	0xfefb
 51632 6ea1 9F       		.byte	0x9f
 51633 6ea2 00000000 		.quad	0
 51633      00000000 
 51634 6eaa 00000000 		.quad	0
 51634      00000000 
 51635              	.LLST454:
 51636 6eb2 00000000 		.quad	.LVL438
 51636      00000000 
 51637 6eba 00000000 		.quad	.LVL442-1
GAS LISTING /tmp/ccmMnd7l.s 			page 1275


 51637      00000000 
 51638 6ec2 0300     		.value	0x3
 51639 6ec4 71       		.byte	0x71
 51640 6ec5 18       		.sleb128 24
 51641 6ec6 9F       		.byte	0x9f
 51642 6ec7 00000000 		.quad	.LVL554
 51642      00000000 
 51643 6ecf 00000000 		.quad	.LVL558-1
 51643      00000000 
 51644 6ed7 0300     		.value	0x3
 51645 6ed9 71       		.byte	0x71
 51646 6eda 18       		.sleb128 24
 51647 6edb 9F       		.byte	0x9f
 51648 6edc 00000000 		.quad	0
 51648      00000000 
 51649 6ee4 00000000 		.quad	0
 51649      00000000 
 51650              	.LLST460:
 51651 6eec 00000000 		.quad	.LVL438
 51651      00000000 
 51652 6ef4 00000000 		.quad	.LVL439
 51652      00000000 
 51653 6efc 0900     		.value	0x9
 51654 6efe 71       		.byte	0x71
 51655 6eff 18       		.sleb128 24
 51656 6f00 94       		.byte	0x94
 51657 6f01 04       		.byte	0x4
 51658 6f02 0B       		.byte	0xb
 51659 6f03 FBFE     		.value	0xfefb
 51660 6f05 1A       		.byte	0x1a
 51661 6f06 9F       		.byte	0x9f
 51662 6f07 00000000 		.quad	.LVL439
 51662      00000000 
 51663 6f0f 00000000 		.quad	.LVL440
 51663      00000000 
 51664 6f17 0100     		.value	0x1
 51665 6f19 50       		.byte	0x50
 51666 6f1a 00000000 		.quad	.LVL440
 51666      00000000 
 51667 6f22 00000000 		.quad	.LVL441
 51667      00000000 
 51668 6f2a 0900     		.value	0x9
 51669 6f2c 71       		.byte	0x71
 51670 6f2d 18       		.sleb128 24
 51671 6f2e 94       		.byte	0x94
 51672 6f2f 04       		.byte	0x4
 51673 6f30 0B       		.byte	0xb
 51674 6f31 FBFE     		.value	0xfefb
 51675 6f33 1A       		.byte	0x1a
 51676 6f34 9F       		.byte	0x9f
 51677 6f35 00000000 		.quad	0
 51677      00000000 
 51678 6f3d 00000000 		.quad	0
 51678      00000000 
 51679              	.LLST461:
 51680 6f45 00000000 		.quad	.LVL441
 51680      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1276


 51681 6f4d 00000000 		.quad	.LVL442-1
 51681      00000000 
 51682 6f55 0100     		.value	0x1
 51683 6f57 61       		.byte	0x61
 51684 6f58 00000000 		.quad	.LVL442-1
 51684      00000000 
 51685 6f60 00000000 		.quad	.LVL445
 51685      00000000 
 51686 6f68 1300     		.value	0x13
 51687 6f6a 91       		.byte	0x91
 51688 6f6b 987E     		.sleb128 -232
 51689 6f6d F6       		.byte	0xf6
 51690 6f6e 08       		.byte	0x8
 51691 6f6f 29       		.uleb128 0x29
 51692 6f70 F4       		.byte	0xf4
 51693 6f71 29       		.uleb128 0x29
 51694 6f72 08       		.byte	0x8
 51695 6f73 00000000 		.long	0
 51696 6f77 00408F40 		.long	0x408f4000
 51697 6f7b 1E       		.byte	0x1e
 51698 6f7c 9F       		.byte	0x9f
 51699 6f7d 00000000 		.quad	.LVL445
 51699      00000000 
 51700 6f85 00000000 		.quad	.LVL446
 51700      00000000 
 51701 6f8d 0B00     		.value	0xb
 51702 6f8f F5       		.byte	0xf5
 51703 6f90 11       		.uleb128 0x11
 51704 6f91 29       		.uleb128 0x29
 51705 6f92 91       		.byte	0x91
 51706 6f93 987E     		.sleb128 -232
 51707 6f95 F6       		.byte	0xf6
 51708 6f96 08       		.byte	0x8
 51709 6f97 29       		.uleb128 0x29
 51710 6f98 1E       		.byte	0x1e
 51711 6f99 9F       		.byte	0x9f
 51712 6f9a 00000000 		.quad	.LVL446
 51712      00000000 
 51713 6fa2 00000000 		.quad	.LVL477
 51713      00000000 
 51714 6faa 1300     		.value	0x13
 51715 6fac 91       		.byte	0x91
 51716 6fad 987E     		.sleb128 -232
 51717 6faf F6       		.byte	0xf6
 51718 6fb0 08       		.byte	0x8
 51719 6fb1 29       		.uleb128 0x29
 51720 6fb2 F4       		.byte	0xf4
 51721 6fb3 29       		.uleb128 0x29
 51722 6fb4 08       		.byte	0x8
 51723 6fb5 00000000 		.long	0
 51724 6fb9 00408F40 		.long	0x408f4000
 51725 6fbd 1E       		.byte	0x1e
 51726 6fbe 9F       		.byte	0x9f
 51727 6fbf 00000000 		.quad	.LVL601
 51727      00000000 
 51728 6fc7 00000000 		.quad	.LVL604
 51728      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1277


 51729 6fcf 1300     		.value	0x13
 51730 6fd1 91       		.byte	0x91
 51731 6fd2 987E     		.sleb128 -232
 51732 6fd4 F6       		.byte	0xf6
 51733 6fd5 08       		.byte	0x8
 51734 6fd6 29       		.uleb128 0x29
 51735 6fd7 F4       		.byte	0xf4
 51736 6fd8 29       		.uleb128 0x29
 51737 6fd9 08       		.byte	0x8
 51738 6fda 00000000 		.long	0
 51739 6fde 00408F40 		.long	0x408f4000
 51740 6fe2 1E       		.byte	0x1e
 51741 6fe3 9F       		.byte	0x9f
 51742 6fe4 00000000 		.quad	.LVL626
 51742      00000000 
 51743 6fec 00000000 		.quad	.LVL629
 51743      00000000 
 51744 6ff4 1300     		.value	0x13
 51745 6ff6 91       		.byte	0x91
 51746 6ff7 987E     		.sleb128 -232
 51747 6ff9 F6       		.byte	0xf6
 51748 6ffa 08       		.byte	0x8
 51749 6ffb 29       		.uleb128 0x29
 51750 6ffc F4       		.byte	0xf4
 51751 6ffd 29       		.uleb128 0x29
 51752 6ffe 08       		.byte	0x8
 51753 6fff 00000000 		.long	0
 51754 7003 00408F40 		.long	0x408f4000
 51755 7007 1E       		.byte	0x1e
 51756 7008 9F       		.byte	0x9f
 51757 7009 00000000 		.quad	.LVL638
 51757      00000000 
 51758 7011 00000000 		.quad	.LVL639
 51758      00000000 
 51759 7019 1300     		.value	0x13
 51760 701b 91       		.byte	0x91
 51761 701c 987E     		.sleb128 -232
 51762 701e F6       		.byte	0xf6
 51763 701f 08       		.byte	0x8
 51764 7020 29       		.uleb128 0x29
 51765 7021 F4       		.byte	0xf4
 51766 7022 29       		.uleb128 0x29
 51767 7023 08       		.byte	0x8
 51768 7024 00000000 		.long	0
 51769 7028 00408F40 		.long	0x408f4000
 51770 702c 1E       		.byte	0x1e
 51771 702d 9F       		.byte	0x9f
 51772 702e 00000000 		.quad	0
 51772      00000000 
 51773 7036 00000000 		.quad	0
 51773      00000000 
 51774              	.LLST462:
 51775 703e 00000000 		.quad	.LVL443
 51775      00000000 
 51776 7046 00000000 		.quad	.LVL597
 51776      00000000 
 51777 704e 0A00     		.value	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 1278


 51778 7050 03       		.byte	0x3
 51779 7051 00000000 		.quad	.LC15
 51779      00000000 
 51780 7059 9F       		.byte	0x9f
 51781 705a 00000000 		.quad	.LVL601
 51781      00000000 
 51782 7062 00000000 		.quad	.LVL604
 51782      00000000 
 51783 706a 0A00     		.value	0xa
 51784 706c 03       		.byte	0x3
 51785 706d 00000000 		.quad	.LC15
 51785      00000000 
 51786 7075 9F       		.byte	0x9f
 51787 7076 00000000 		.quad	.LVL626
 51787      00000000 
 51788 707e 00000000 		.quad	.LVL629
 51788      00000000 
 51789 7086 0A00     		.value	0xa
 51790 7088 03       		.byte	0x3
 51791 7089 00000000 		.quad	.LC15
 51791      00000000 
 51792 7091 9F       		.byte	0x9f
 51793 7092 00000000 		.quad	.LVL637
 51793      00000000 
 51794 709a 00000000 		.quad	.LVL639
 51794      00000000 
 51795 70a2 0A00     		.value	0xa
 51796 70a4 03       		.byte	0x3
 51797 70a5 00000000 		.quad	.LC15
 51797      00000000 
 51798 70ad 9F       		.byte	0x9f
 51799 70ae 00000000 		.quad	.LVL652
 51799      00000000 
 51800 70b6 00000000 		.quad	.LFE6051
 51800      00000000 
 51801 70be 0A00     		.value	0xa
 51802 70c0 03       		.byte	0x3
 51803 70c1 00000000 		.quad	.LC15
 51803      00000000 
 51804 70c9 9F       		.byte	0x9f
 51805 70ca 00000000 		.quad	0
 51805      00000000 
 51806 70d2 00000000 		.quad	0
 51806      00000000 
 51807              	.LLST463:
 51808 70da 00000000 		.quad	.LVL443
 51808      00000000 
 51809 70e2 00000000 		.quad	.LVL444-1
 51809      00000000 
 51810 70ea 0100     		.value	0x1
 51811 70ec 50       		.byte	0x50
 51812 70ed 00000000 		.quad	.LVL444-1
 51812      00000000 
 51813 70f5 00000000 		.quad	.LVL448
 51813      00000000 
 51814 70fd 0100     		.value	0x1
 51815 70ff 53       		.byte	0x53
GAS LISTING /tmp/ccmMnd7l.s 			page 1279


 51816 7100 00000000 		.quad	0
 51816      00000000 
 51817 7108 00000000 		.quad	0
 51817      00000000 
 51818              	.LLST464:
 51819 7110 00000000 		.quad	.LVL444
 51819      00000000 
 51820 7118 00000000 		.quad	.LVL446
 51820      00000000 
 51821 7120 1300     		.value	0x13
 51822 7122 91       		.byte	0x91
 51823 7123 F87D     		.sleb128 -264
 51824 7125 F6       		.byte	0xf6
 51825 7126 08       		.byte	0x8
 51826 7127 29       		.uleb128 0x29
 51827 7128 F4       		.byte	0xf4
 51828 7129 29       		.uleb128 0x29
 51829 712a 08       		.byte	0x8
 51830 712b 00000000 		.long	0
 51831 712f 00408F40 		.long	0x408f4000
 51832 7133 1E       		.byte	0x1e
 51833 7134 9F       		.byte	0x9f
 51834 7135 00000000 		.quad	.LVL446
 51834      00000000 
 51835 713d 00000000 		.quad	.LVL447-1
 51835      00000000 
 51836 7145 0100     		.value	0x1
 51837 7147 61       		.byte	0x61
 51838 7148 00000000 		.quad	.LVL447-1
 51838      00000000 
 51839 7150 00000000 		.quad	.LVL477
 51839      00000000 
 51840 7158 1300     		.value	0x13
 51841 715a 91       		.byte	0x91
 51842 715b F87D     		.sleb128 -264
 51843 715d F6       		.byte	0xf6
 51844 715e 08       		.byte	0x8
 51845 715f 29       		.uleb128 0x29
 51846 7160 F4       		.byte	0xf4
 51847 7161 29       		.uleb128 0x29
 51848 7162 08       		.byte	0x8
 51849 7163 00000000 		.long	0
 51850 7167 00408F40 		.long	0x408f4000
 51851 716b 1E       		.byte	0x1e
 51852 716c 9F       		.byte	0x9f
 51853 716d 00000000 		.quad	.LVL601
 51853      00000000 
 51854 7175 00000000 		.quad	.LVL604
 51854      00000000 
 51855 717d 1300     		.value	0x13
 51856 717f 91       		.byte	0x91
 51857 7180 F87D     		.sleb128 -264
 51858 7182 F6       		.byte	0xf6
 51859 7183 08       		.byte	0x8
 51860 7184 29       		.uleb128 0x29
 51861 7185 F4       		.byte	0xf4
 51862 7186 29       		.uleb128 0x29
GAS LISTING /tmp/ccmMnd7l.s 			page 1280


 51863 7187 08       		.byte	0x8
 51864 7188 00000000 		.long	0
 51865 718c 00408F40 		.long	0x408f4000
 51866 7190 1E       		.byte	0x1e
 51867 7191 9F       		.byte	0x9f
 51868 7192 00000000 		.quad	.LVL626
 51868      00000000 
 51869 719a 00000000 		.quad	.LVL629
 51869      00000000 
 51870 71a2 1300     		.value	0x13
 51871 71a4 91       		.byte	0x91
 51872 71a5 F87D     		.sleb128 -264
 51873 71a7 F6       		.byte	0xf6
 51874 71a8 08       		.byte	0x8
 51875 71a9 29       		.uleb128 0x29
 51876 71aa F4       		.byte	0xf4
 51877 71ab 29       		.uleb128 0x29
 51878 71ac 08       		.byte	0x8
 51879 71ad 00000000 		.long	0
 51880 71b1 00408F40 		.long	0x408f4000
 51881 71b5 1E       		.byte	0x1e
 51882 71b6 9F       		.byte	0x9f
 51883 71b7 00000000 		.quad	.LVL638
 51883      00000000 
 51884 71bf 00000000 		.quad	.LVL639
 51884      00000000 
 51885 71c7 1300     		.value	0x13
 51886 71c9 91       		.byte	0x91
 51887 71ca F87D     		.sleb128 -264
 51888 71cc F6       		.byte	0xf6
 51889 71cd 08       		.byte	0x8
 51890 71ce 29       		.uleb128 0x29
 51891 71cf F4       		.byte	0xf4
 51892 71d0 29       		.uleb128 0x29
 51893 71d1 08       		.byte	0x8
 51894 71d2 00000000 		.long	0
 51895 71d6 00408F40 		.long	0x408f4000
 51896 71da 1E       		.byte	0x1e
 51897 71db 9F       		.byte	0x9f
 51898 71dc 00000000 		.quad	0
 51898      00000000 
 51899 71e4 00000000 		.quad	0
 51899      00000000 
 51900              	.LLST465:
 51901 71ec 00000000 		.quad	.LVL448
 51901      00000000 
 51902 71f4 00000000 		.quad	.LVL597
 51902      00000000 
 51903 71fc 0A00     		.value	0xa
 51904 71fe 03       		.byte	0x3
 51905 71ff 00000000 		.quad	.LC16
 51905      00000000 
 51906 7207 9F       		.byte	0x9f
 51907 7208 00000000 		.quad	.LVL601
 51907      00000000 
 51908 7210 00000000 		.quad	.LVL604
 51908      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1281


 51909 7218 0A00     		.value	0xa
 51910 721a 03       		.byte	0x3
 51911 721b 00000000 		.quad	.LC16
 51911      00000000 
 51912 7223 9F       		.byte	0x9f
 51913 7224 00000000 		.quad	.LVL626
 51913      00000000 
 51914 722c 00000000 		.quad	.LVL629
 51914      00000000 
 51915 7234 0A00     		.value	0xa
 51916 7236 03       		.byte	0x3
 51917 7237 00000000 		.quad	.LC16
 51917      00000000 
 51918 723f 9F       		.byte	0x9f
 51919 7240 00000000 		.quad	.LVL637
 51919      00000000 
 51920 7248 00000000 		.quad	.LVL639
 51920      00000000 
 51921 7250 0A00     		.value	0xa
 51922 7252 03       		.byte	0x3
 51923 7253 00000000 		.quad	.LC16
 51923      00000000 
 51924 725b 9F       		.byte	0x9f
 51925 725c 00000000 		.quad	.LVL652
 51925      00000000 
 51926 7264 00000000 		.quad	.LFE6051
 51926      00000000 
 51927 726c 0A00     		.value	0xa
 51928 726e 03       		.byte	0x3
 51929 726f 00000000 		.quad	.LC16
 51929      00000000 
 51930 7277 9F       		.byte	0x9f
 51931 7278 00000000 		.quad	0
 51931      00000000 
 51932 7280 00000000 		.quad	0
 51932      00000000 
 51933              	.LLST466:
 51934 7288 00000000 		.quad	.LVL448
 51934      00000000 
 51935 7290 00000000 		.quad	.LVL449-1
 51935      00000000 
 51936 7298 0100     		.value	0x1
 51937 729a 50       		.byte	0x50
 51938 729b 00000000 		.quad	.LVL449-1
 51938      00000000 
 51939 72a3 00000000 		.quad	.LVL457
 51939      00000000 
 51940 72ab 0100     		.value	0x1
 51941 72ad 53       		.byte	0x53
 51942 72ae 00000000 		.quad	.LVL601
 51942      00000000 
 51943 72b6 00000000 		.quad	.LVL604
 51943      00000000 
 51944 72be 0100     		.value	0x1
 51945 72c0 53       		.byte	0x53
 51946 72c1 00000000 		.quad	0
 51946      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1282


 51947 72c9 00000000 		.quad	0
 51947      00000000 
 51948              	.LLST467:
 51949 72d1 00000000 		.quad	.LVL449
 51949      00000000 
 51950 72d9 00000000 		.quad	.LVL457
 51950      00000000 
 51951 72e1 0100     		.value	0x1
 51952 72e3 53       		.byte	0x53
 51953 72e4 00000000 		.quad	.LVL601
 51953      00000000 
 51954 72ec 00000000 		.quad	.LVL604
 51954      00000000 
 51955 72f4 0100     		.value	0x1
 51956 72f6 53       		.byte	0x53
 51957 72f7 00000000 		.quad	0
 51957      00000000 
 51958 72ff 00000000 		.quad	0
 51958      00000000 
 51959              	.LLST468:
 51960 7307 00000000 		.quad	.LVL449
 51960      00000000 
 51961 730f 00000000 		.quad	.LVL597
 51961      00000000 
 51962 7317 0200     		.value	0x2
 51963 7319 3A       		.byte	0x3a
 51964 731a 9F       		.byte	0x9f
 51965 731b 00000000 		.quad	.LVL601
 51965      00000000 
 51966 7323 00000000 		.quad	.LVL604
 51966      00000000 
 51967 732b 0200     		.value	0x2
 51968 732d 3A       		.byte	0x3a
 51969 732e 9F       		.byte	0x9f
 51970 732f 00000000 		.quad	.LVL626
 51970      00000000 
 51971 7337 00000000 		.quad	.LVL629
 51971      00000000 
 51972 733f 0200     		.value	0x2
 51973 7341 3A       		.byte	0x3a
 51974 7342 9F       		.byte	0x9f
 51975 7343 00000000 		.quad	.LVL637
 51975      00000000 
 51976 734b 00000000 		.quad	.LVL639
 51976      00000000 
 51977 7353 0200     		.value	0x2
 51978 7355 3A       		.byte	0x3a
 51979 7356 9F       		.byte	0x9f
 51980 7357 00000000 		.quad	.LVL652
 51980      00000000 
 51981 735f 00000000 		.quad	.LFE6051
 51981      00000000 
 51982 7367 0200     		.value	0x2
 51983 7369 3A       		.byte	0x3a
 51984 736a 9F       		.byte	0x9f
 51985 736b 00000000 		.quad	0
 51985      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1283


 51986 7373 00000000 		.quad	0
 51986      00000000 
 51987              	.LLST469:
 51988 737b 00000000 		.quad	.LVL449
 51988      00000000 
 51989 7383 00000000 		.quad	.LVL452
 51989      00000000 
 51990 738b 0A00     		.value	0xa
 51991 738d 73       		.byte	0x73
 51992 738e 00       		.sleb128 0
 51993 738f 73       		.byte	0x73
 51994 7390 00       		.sleb128 0
 51995 7391 06       		.byte	0x6
 51996 7392 48       		.byte	0x48
 51997 7393 1C       		.byte	0x1c
 51998 7394 06       		.byte	0x6
 51999 7395 22       		.byte	0x22
 52000 7396 9F       		.byte	0x9f
 52001 7397 00000000 		.quad	.LVL601
 52001      00000000 
 52002 739f 00000000 		.quad	.LVL602-1
 52002      00000000 
 52003 73a7 0600     		.value	0x6
 52004 73a9 73       		.byte	0x73
 52005 73aa 00       		.sleb128 0
 52006 73ab 70       		.byte	0x70
 52007 73ac 00       		.sleb128 0
 52008 73ad 22       		.byte	0x22
 52009 73ae 9F       		.byte	0x9f
 52010 73af 00000000 		.quad	0
 52010      00000000 
 52011 73b7 00000000 		.quad	0
 52011      00000000 
 52012              	.LLST470:
 52013 73bf 00000000 		.quad	.LVL450
 52013      00000000 
 52014 73c7 00000000 		.quad	.LVL477
 52014      00000000 
 52015 73cf 0100     		.value	0x1
 52016 73d1 56       		.byte	0x56
 52017 73d2 00000000 		.quad	.LVL601
 52017      00000000 
 52018 73da 00000000 		.quad	.LVL604
 52018      00000000 
 52019 73e2 0100     		.value	0x1
 52020 73e4 56       		.byte	0x56
 52021 73e5 00000000 		.quad	.LVL626
 52021      00000000 
 52022 73ed 00000000 		.quad	.LVL629
 52022      00000000 
 52023 73f5 0100     		.value	0x1
 52024 73f7 56       		.byte	0x56
 52025 73f8 00000000 		.quad	.LVL638
 52025      00000000 
 52026 7400 00000000 		.quad	.LVL639
 52026      00000000 
 52027 7408 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1284


 52028 740a 56       		.byte	0x56
 52029 740b 00000000 		.quad	0
 52029      00000000 
 52030 7413 00000000 		.quad	0
 52030      00000000 
 52031              	.LLST471:
 52032 741b 00000000 		.quad	.LVL451
 52032      00000000 
 52033 7423 00000000 		.quad	.LVL597
 52033      00000000 
 52034 742b 0200     		.value	0x2
 52035 742d 3A       		.byte	0x3a
 52036 742e 9F       		.byte	0x9f
 52037 742f 00000000 		.quad	.LVL601
 52037      00000000 
 52038 7437 00000000 		.quad	.LVL604
 52038      00000000 
 52039 743f 0200     		.value	0x2
 52040 7441 3A       		.byte	0x3a
 52041 7442 9F       		.byte	0x9f
 52042 7443 00000000 		.quad	.LVL626
 52042      00000000 
 52043 744b 00000000 		.quad	.LVL629
 52043      00000000 
 52044 7453 0200     		.value	0x2
 52045 7455 3A       		.byte	0x3a
 52046 7456 9F       		.byte	0x9f
 52047 7457 00000000 		.quad	.LVL638
 52047      00000000 
 52048 745f 00000000 		.quad	.LVL639
 52048      00000000 
 52049 7467 0200     		.value	0x2
 52050 7469 3A       		.byte	0x3a
 52051 746a 9F       		.byte	0x9f
 52052 746b 00000000 		.quad	.LVL652
 52052      00000000 
 52053 7473 00000000 		.quad	.LFE6051
 52053      00000000 
 52054 747b 0200     		.value	0x2
 52055 747d 3A       		.byte	0x3a
 52056 747e 9F       		.byte	0x9f
 52057 747f 00000000 		.quad	0
 52057      00000000 
 52058 7487 00000000 		.quad	0
 52058      00000000 
 52059              	.LLST472:
 52060 748f 00000000 		.quad	.LVL451
 52060      00000000 
 52061 7497 00000000 		.quad	.LVL477
 52061      00000000 
 52062 749f 0100     		.value	0x1
 52063 74a1 56       		.byte	0x56
 52064 74a2 00000000 		.quad	.LVL601
 52064      00000000 
 52065 74aa 00000000 		.quad	.LVL604
 52065      00000000 
 52066 74b2 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1285


 52067 74b4 56       		.byte	0x56
 52068 74b5 00000000 		.quad	.LVL626
 52068      00000000 
 52069 74bd 00000000 		.quad	.LVL629
 52069      00000000 
 52070 74c5 0100     		.value	0x1
 52071 74c7 56       		.byte	0x56
 52072 74c8 00000000 		.quad	.LVL638
 52072      00000000 
 52073 74d0 00000000 		.quad	.LVL639
 52073      00000000 
 52074 74d8 0100     		.value	0x1
 52075 74da 56       		.byte	0x56
 52076 74db 00000000 		.quad	0
 52076      00000000 
 52077 74e3 00000000 		.quad	0
 52077      00000000 
 52078              	.LLST473:
 52079 74eb 00000000 		.quad	.LVL601
 52079      00000000 
 52080 74f3 00000000 		.quad	.LVL604
 52080      00000000 
 52081 74fb 0200     		.value	0x2
 52082 74fd 3A       		.byte	0x3a
 52083 74fe 9F       		.byte	0x9f
 52084 74ff 00000000 		.quad	0
 52084      00000000 
 52085 7507 00000000 		.quad	0
 52085      00000000 
 52086              	.LLST474:
 52087 750f 00000000 		.quad	.LVL601
 52087      00000000 
 52088 7517 00000000 		.quad	.LVL604
 52088      00000000 
 52089 751f 0100     		.value	0x1
 52090 7521 56       		.byte	0x56
 52091 7522 00000000 		.quad	0
 52091      00000000 
 52092 752a 00000000 		.quad	0
 52092      00000000 
 52093              	.LLST475:
 52094 7532 00000000 		.quad	.LVL453
 52094      00000000 
 52095 753a 00000000 		.quad	.LVL454-1
 52095      00000000 
 52096 7542 0100     		.value	0x1
 52097 7544 50       		.byte	0x50
 52098 7545 00000000 		.quad	0
 52098      00000000 
 52099 754d 00000000 		.quad	0
 52099      00000000 
 52100              	.LLST476:
 52101 7555 00000000 		.quad	.LVL454
 52101      00000000 
 52102 755d 00000000 		.quad	.LVL597
 52102      00000000 
 52103 7565 0A00     		.value	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 1286


 52104 7567 03       		.byte	0x3
 52105 7568 00000000 		.quad	.LC17
 52105      00000000 
 52106 7570 9F       		.byte	0x9f
 52107 7571 00000000 		.quad	.LVL626
 52107      00000000 
 52108 7579 00000000 		.quad	.LVL629
 52108      00000000 
 52109 7581 0A00     		.value	0xa
 52110 7583 03       		.byte	0x3
 52111 7584 00000000 		.quad	.LC17
 52111      00000000 
 52112 758c 9F       		.byte	0x9f
 52113 758d 00000000 		.quad	.LVL638
 52113      00000000 
 52114 7595 00000000 		.quad	.LVL639
 52114      00000000 
 52115 759d 0A00     		.value	0xa
 52116 759f 03       		.byte	0x3
 52117 75a0 00000000 		.quad	.LC17
 52117      00000000 
 52118 75a8 9F       		.byte	0x9f
 52119 75a9 00000000 		.quad	.LVL652
 52119      00000000 
 52120 75b1 00000000 		.quad	.LFE6051
 52120      00000000 
 52121 75b9 0A00     		.value	0xa
 52122 75bb 03       		.byte	0x3
 52123 75bc 00000000 		.quad	.LC17
 52123      00000000 
 52124 75c4 9F       		.byte	0x9f
 52125 75c5 00000000 		.quad	0
 52125      00000000 
 52126 75cd 00000000 		.quad	0
 52126      00000000 
 52127              	.LLST477:
 52128 75d5 00000000 		.quad	.LVL455
 52128      00000000 
 52129 75dd 00000000 		.quad	.LVL477
 52129      00000000 
 52130 75e5 0300     		.value	0x3
 52131 75e7 91       		.byte	0x91
 52132 75e8 987E     		.sleb128 -232
 52133 75ea 00000000 		.quad	.LVL626
 52133      00000000 
 52134 75f2 00000000 		.quad	.LVL629
 52134      00000000 
 52135 75fa 0300     		.value	0x3
 52136 75fc 91       		.byte	0x91
 52137 75fd 987E     		.sleb128 -232
 52138 75ff 00000000 		.quad	.LVL638
 52138      00000000 
 52139 7607 00000000 		.quad	.LVL639
 52139      00000000 
 52140 760f 0300     		.value	0x3
 52141 7611 91       		.byte	0x91
 52142 7612 987E     		.sleb128 -232
GAS LISTING /tmp/ccmMnd7l.s 			page 1287


 52143 7614 00000000 		.quad	0
 52143      00000000 
 52144 761c 00000000 		.quad	0
 52144      00000000 
 52145              	.LLST478:
 52146 7624 00000000 		.quad	.LVL457
 52146      00000000 
 52147 762c 00000000 		.quad	.LVL597
 52147      00000000 
 52148 7634 0A00     		.value	0xa
 52149 7636 03       		.byte	0x3
 52150 7637 00000000 		.quad	.LC18
 52150      00000000 
 52151 763f 9F       		.byte	0x9f
 52152 7640 00000000 		.quad	.LVL626
 52152      00000000 
 52153 7648 00000000 		.quad	.LVL629
 52153      00000000 
 52154 7650 0A00     		.value	0xa
 52155 7652 03       		.byte	0x3
 52156 7653 00000000 		.quad	.LC18
 52156      00000000 
 52157 765b 9F       		.byte	0x9f
 52158 765c 00000000 		.quad	.LVL638
 52158      00000000 
 52159 7664 00000000 		.quad	.LVL639
 52159      00000000 
 52160 766c 0A00     		.value	0xa
 52161 766e 03       		.byte	0x3
 52162 766f 00000000 		.quad	.LC18
 52162      00000000 
 52163 7677 9F       		.byte	0x9f
 52164 7678 00000000 		.quad	.LVL652
 52164      00000000 
 52165 7680 00000000 		.quad	.LFE6051
 52165      00000000 
 52166 7688 0A00     		.value	0xa
 52167 768a 03       		.byte	0x3
 52168 768b 00000000 		.quad	.LC18
 52168      00000000 
 52169 7693 9F       		.byte	0x9f
 52170 7694 00000000 		.quad	0
 52170      00000000 
 52171 769c 00000000 		.quad	0
 52171      00000000 
 52172              	.LLST479:
 52173 76a4 00000000 		.quad	.LVL457
 52173      00000000 
 52174 76ac 00000000 		.quad	.LVL458-1
 52174      00000000 
 52175 76b4 0100     		.value	0x1
 52176 76b6 50       		.byte	0x50
 52177 76b7 00000000 		.quad	.LVL458-1
 52177      00000000 
 52178 76bf 00000000 		.quad	.LVL465
 52178      00000000 
 52179 76c7 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1288


 52180 76c9 53       		.byte	0x53
 52181 76ca 00000000 		.quad	0
 52181      00000000 
 52182 76d2 00000000 		.quad	0
 52182      00000000 
 52183              	.LLST480:
 52184 76da 00000000 		.quad	.LVL458
 52184      00000000 
 52185 76e2 00000000 		.quad	.LVL477
 52185      00000000 
 52186 76ea 0300     		.value	0x3
 52187 76ec 91       		.byte	0x91
 52188 76ed F87D     		.sleb128 -264
 52189 76ef 00000000 		.quad	.LVL626
 52189      00000000 
 52190 76f7 00000000 		.quad	.LVL629
 52190      00000000 
 52191 76ff 0300     		.value	0x3
 52192 7701 91       		.byte	0x91
 52193 7702 F87D     		.sleb128 -264
 52194 7704 00000000 		.quad	.LVL638
 52194      00000000 
 52195 770c 00000000 		.quad	.LVL639
 52195      00000000 
 52196 7714 0300     		.value	0x3
 52197 7716 91       		.byte	0x91
 52198 7717 F87D     		.sleb128 -264
 52199 7719 00000000 		.quad	0
 52199      00000000 
 52200 7721 00000000 		.quad	0
 52200      00000000 
 52201              	.LLST481:
 52202 7729 00000000 		.quad	.LVL459
 52202      00000000 
 52203 7731 00000000 		.quad	.LVL597
 52203      00000000 
 52204 7739 0A00     		.value	0xa
 52205 773b 03       		.byte	0x3
 52206 773c 00000000 		.quad	.LC19
 52206      00000000 
 52207 7744 9F       		.byte	0x9f
 52208 7745 00000000 		.quad	.LVL626
 52208      00000000 
 52209 774d 00000000 		.quad	.LVL629
 52209      00000000 
 52210 7755 0A00     		.value	0xa
 52211 7757 03       		.byte	0x3
 52212 7758 00000000 		.quad	.LC19
 52212      00000000 
 52213 7760 9F       		.byte	0x9f
 52214 7761 00000000 		.quad	.LVL638
 52214      00000000 
 52215 7769 00000000 		.quad	.LVL639
 52215      00000000 
 52216 7771 0A00     		.value	0xa
 52217 7773 03       		.byte	0x3
 52218 7774 00000000 		.quad	.LC19
GAS LISTING /tmp/ccmMnd7l.s 			page 1289


 52218      00000000 
 52219 777c 9F       		.byte	0x9f
 52220 777d 00000000 		.quad	.LVL652
 52220      00000000 
 52221 7785 00000000 		.quad	.LFE6051
 52221      00000000 
 52222 778d 0A00     		.value	0xa
 52223 778f 03       		.byte	0x3
 52224 7790 00000000 		.quad	.LC19
 52224      00000000 
 52225 7798 9F       		.byte	0x9f
 52226 7799 00000000 		.quad	0
 52226      00000000 
 52227 77a1 00000000 		.quad	0
 52227      00000000 
 52228              	.LLST482:
 52229 77a9 00000000 		.quad	.LVL459
 52229      00000000 
 52230 77b1 00000000 		.quad	.LVL460-1
 52230      00000000 
 52231 77b9 0100     		.value	0x1
 52232 77bb 50       		.byte	0x50
 52233 77bc 00000000 		.quad	0
 52233      00000000 
 52234 77c4 00000000 		.quad	0
 52234      00000000 
 52235              	.LLST483:
 52236 77cc 00000000 		.quad	.LVL460
 52236      00000000 
 52237 77d4 00000000 		.quad	.LVL477
 52237      00000000 
 52238 77dc 0400     		.value	0x4
 52239 77de 91       		.byte	0x91
 52240 77df E87E     		.sleb128 -152
 52241 77e1 9F       		.byte	0x9f
 52242 77e2 00000000 		.quad	.LVL576
 52242      00000000 
 52243 77ea 00000000 		.quad	.LVL597
 52243      00000000 
 52244 77f2 0400     		.value	0x4
 52245 77f4 91       		.byte	0x91
 52246 77f5 987F     		.sleb128 -104
 52247 77f7 9F       		.byte	0x9f
 52248 77f8 00000000 		.quad	.LVL626
 52248      00000000 
 52249 7800 00000000 		.quad	.LVL629
 52249      00000000 
 52250 7808 0400     		.value	0x4
 52251 780a 91       		.byte	0x91
 52252 780b E87E     		.sleb128 -152
 52253 780d 9F       		.byte	0x9f
 52254 780e 00000000 		.quad	.LVL638
 52254      00000000 
 52255 7816 00000000 		.quad	.LVL639
 52255      00000000 
 52256 781e 0400     		.value	0x4
 52257 7820 91       		.byte	0x91
GAS LISTING /tmp/ccmMnd7l.s 			page 1290


 52258 7821 E87E     		.sleb128 -152
 52259 7823 9F       		.byte	0x9f
 52260 7824 00000000 		.quad	.LVL681
 52260      00000000 
 52261 782c 00000000 		.quad	.LVL688
 52261      00000000 
 52262 7834 0400     		.value	0x4
 52263 7836 91       		.byte	0x91
 52264 7837 987F     		.sleb128 -104
 52265 7839 9F       		.byte	0x9f
 52266 783a 00000000 		.quad	.LVL695
 52266      00000000 
 52267 7842 00000000 		.quad	.LVL699
 52267      00000000 
 52268 784a 0400     		.value	0x4
 52269 784c 91       		.byte	0x91
 52270 784d 987F     		.sleb128 -104
 52271 784f 9F       		.byte	0x9f
 52272 7850 00000000 		.quad	0
 52272      00000000 
 52273 7858 00000000 		.quad	0
 52273      00000000 
 52274              	.LLST485:
 52275 7860 00000000 		.quad	.LVL461
 52275      00000000 
 52276 7868 00000000 		.quad	.LVL463-1
 52276      00000000 
 52277 7870 0C00     		.value	0xc
 52278 7872 91       		.byte	0x91
 52279 7873 F87E     		.sleb128 -136
 52280 7875 06       		.byte	0x6
 52281 7876 91       		.byte	0x91
 52282 7877 E87E     		.sleb128 -152
 52283 7879 06       		.byte	0x6
 52284 787a 1C       		.byte	0x1c
 52285 787b 38       		.byte	0x38
 52286 787c 1B       		.byte	0x1b
 52287 787d 9F       		.byte	0x9f
 52288 787e 00000000 		.quad	.LVL576
 52288      00000000 
 52289 7886 00000000 		.quad	.LVL579-1
 52289      00000000 
 52290 788e 0C00     		.value	0xc
 52291 7890 91       		.byte	0x91
 52292 7891 A87F     		.sleb128 -88
 52293 7893 06       		.byte	0x6
 52294 7894 91       		.byte	0x91
 52295 7895 987F     		.sleb128 -104
 52296 7897 06       		.byte	0x6
 52297 7898 1C       		.byte	0x1c
 52298 7899 38       		.byte	0x38
 52299 789a 1B       		.byte	0x1b
 52300 789b 9F       		.byte	0x9f
 52301 789c 00000000 		.quad	0
 52301      00000000 
 52302 78a4 00000000 		.quad	0
 52302      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1291


 52303              	.LLST486:
 52304 78ac 00000000 		.quad	.LVL461
 52304      00000000 
 52305 78b4 00000000 		.quad	.LVL463-1
 52305      00000000 
 52306 78bc 0100     		.value	0x1
 52307 78be 55       		.byte	0x55
 52308 78bf 00000000 		.quad	0
 52308      00000000 
 52309 78c7 00000000 		.quad	0
 52309      00000000 
 52310              	.LLST487:
 52311 78cf 00000000 		.quad	.LVL462
 52311      00000000 
 52312 78d7 00000000 		.quad	.LVL463-1
 52312      00000000 
 52313 78df 0C00     		.value	0xc
 52314 78e1 91       		.byte	0x91
 52315 78e2 F87E     		.sleb128 -136
 52316 78e4 06       		.byte	0x6
 52317 78e5 91       		.byte	0x91
 52318 78e6 E87E     		.sleb128 -152
 52319 78e8 06       		.byte	0x6
 52320 78e9 1C       		.byte	0x1c
 52321 78ea 38       		.byte	0x38
 52322 78eb 1B       		.byte	0x1b
 52323 78ec 9F       		.byte	0x9f
 52324 78ed 00000000 		.quad	0
 52324      00000000 
 52325 78f5 00000000 		.quad	0
 52325      00000000 
 52326              	.LLST488:
 52327 78fd 00000000 		.quad	.LVL462
 52327      00000000 
 52328 7905 00000000 		.quad	.LVL463-1
 52328      00000000 
 52329 790d 0100     		.value	0x1
 52330 790f 55       		.byte	0x55
 52331 7910 00000000 		.quad	0
 52331      00000000 
 52332 7918 00000000 		.quad	0
 52332      00000000 
 52333              	.LLST491:
 52334 7920 00000000 		.quad	.LVL463
 52334      00000000 
 52335 7928 00000000 		.quad	.LVL597
 52335      00000000 
 52336 7930 0A00     		.value	0xa
 52337 7932 03       		.byte	0x3
 52338 7933 00000000 		.quad	.LC28
 52338      00000000 
 52339 793b 9F       		.byte	0x9f
 52340 793c 00000000 		.quad	.LVL626
 52340      00000000 
 52341 7944 00000000 		.quad	.LVL629
 52341      00000000 
 52342 794c 0A00     		.value	0xa
GAS LISTING /tmp/ccmMnd7l.s 			page 1292


 52343 794e 03       		.byte	0x3
 52344 794f 00000000 		.quad	.LC28
 52344      00000000 
 52345 7957 9F       		.byte	0x9f
 52346 7958 00000000 		.quad	.LVL638
 52346      00000000 
 52347 7960 00000000 		.quad	.LVL639
 52347      00000000 
 52348 7968 0A00     		.value	0xa
 52349 796a 03       		.byte	0x3
 52350 796b 00000000 		.quad	.LC28
 52350      00000000 
 52351 7973 9F       		.byte	0x9f
 52352 7974 00000000 		.quad	.LVL652
 52352      00000000 
 52353 797c 00000000 		.quad	.LFE6051
 52353      00000000 
 52354 7984 0A00     		.value	0xa
 52355 7986 03       		.byte	0x3
 52356 7987 00000000 		.quad	.LC28
 52356      00000000 
 52357 798f 9F       		.byte	0x9f
 52358 7990 00000000 		.quad	0
 52358      00000000 
 52359 7998 00000000 		.quad	0
 52359      00000000 
 52360              	.LLST492:
 52361 79a0 00000000 		.quad	.LVL464
 52361      00000000 
 52362 79a8 00000000 		.quad	.LVL597
 52362      00000000 
 52363 79b0 0200     		.value	0x2
 52364 79b2 3A       		.byte	0x3a
 52365 79b3 9F       		.byte	0x9f
 52366 79b4 00000000 		.quad	.LVL626
 52366      00000000 
 52367 79bc 00000000 		.quad	.LVL629
 52367      00000000 
 52368 79c4 0200     		.value	0x2
 52369 79c6 3A       		.byte	0x3a
 52370 79c7 9F       		.byte	0x9f
 52371 79c8 00000000 		.quad	.LVL638
 52371      00000000 
 52372 79d0 00000000 		.quad	.LVL639
 52372      00000000 
 52373 79d8 0200     		.value	0x2
 52374 79da 3A       		.byte	0x3a
 52375 79db 9F       		.byte	0x9f
 52376 79dc 00000000 		.quad	.LVL652
 52376      00000000 
 52377 79e4 00000000 		.quad	.LFE6051
 52377      00000000 
 52378 79ec 0200     		.value	0x2
 52379 79ee 3A       		.byte	0x3a
 52380 79ef 9F       		.byte	0x9f
 52381 79f0 00000000 		.quad	0
 52381      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1293


 52382 79f8 00000000 		.quad	0
 52382      00000000 
 52383              	.LLST493:
 52384 7a00 00000000 		.quad	.LVL465
 52384      00000000 
 52385 7a08 00000000 		.quad	.LVL477
 52385      00000000 
 52386 7a10 0100     		.value	0x1
 52387 7a12 53       		.byte	0x53
 52388 7a13 00000000 		.quad	.LVL626
 52388      00000000 
 52389 7a1b 00000000 		.quad	.LVL629
 52389      00000000 
 52390 7a23 0100     		.value	0x1
 52391 7a25 53       		.byte	0x53
 52392 7a26 00000000 		.quad	.LVL638
 52392      00000000 
 52393 7a2e 00000000 		.quad	.LVL639
 52393      00000000 
 52394 7a36 0100     		.value	0x1
 52395 7a38 53       		.byte	0x53
 52396 7a39 00000000 		.quad	0
 52396      00000000 
 52397 7a41 00000000 		.quad	0
 52397      00000000 
 52398              	.LLST494:
 52399 7a49 00000000 		.quad	.LVL466
 52399      00000000 
 52400 7a51 00000000 		.quad	.LVL597
 52400      00000000 
 52401 7a59 0200     		.value	0x2
 52402 7a5b 3A       		.byte	0x3a
 52403 7a5c 9F       		.byte	0x9f
 52404 7a5d 00000000 		.quad	.LVL626
 52404      00000000 
 52405 7a65 00000000 		.quad	.LVL629
 52405      00000000 
 52406 7a6d 0200     		.value	0x2
 52407 7a6f 3A       		.byte	0x3a
 52408 7a70 9F       		.byte	0x9f
 52409 7a71 00000000 		.quad	.LVL652
 52409      00000000 
 52410 7a79 00000000 		.quad	.LFE6051
 52410      00000000 
 52411 7a81 0200     		.value	0x2
 52412 7a83 3A       		.byte	0x3a
 52413 7a84 9F       		.byte	0x9f
 52414 7a85 00000000 		.quad	0
 52414      00000000 
 52415 7a8d 00000000 		.quad	0
 52415      00000000 
 52416              	.LLST495:
 52417 7a95 00000000 		.quad	.LVL466
 52417      00000000 
 52418 7a9d 00000000 		.quad	.LVL477
 52418      00000000 
 52419 7aa5 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1294


 52420 7aa7 53       		.byte	0x53
 52421 7aa8 00000000 		.quad	.LVL626
 52421      00000000 
 52422 7ab0 00000000 		.quad	.LVL629
 52422      00000000 
 52423 7ab8 0100     		.value	0x1
 52424 7aba 53       		.byte	0x53
 52425 7abb 00000000 		.quad	0
 52425      00000000 
 52426 7ac3 00000000 		.quad	0
 52426      00000000 
 52427              	.LLST496:
 52428 7acb 00000000 		.quad	.LVL626
 52428      00000000 
 52429 7ad3 00000000 		.quad	.LVL629
 52429      00000000 
 52430 7adb 0200     		.value	0x2
 52431 7add 3A       		.byte	0x3a
 52432 7ade 9F       		.byte	0x9f
 52433 7adf 00000000 		.quad	0
 52433      00000000 
 52434 7ae7 00000000 		.quad	0
 52434      00000000 
 52435              	.LLST497:
 52436 7aef 00000000 		.quad	.LVL626
 52436      00000000 
 52437 7af7 00000000 		.quad	.LVL629
 52437      00000000 
 52438 7aff 0100     		.value	0x1
 52439 7b01 53       		.byte	0x53
 52440 7b02 00000000 		.quad	0
 52440      00000000 
 52441 7b0a 00000000 		.quad	0
 52441      00000000 
 52442              	.LLST498:
 52443 7b12 00000000 		.quad	.LVL468
 52443      00000000 
 52444 7b1a 00000000 		.quad	.LVL469-1
 52444      00000000 
 52445 7b22 0100     		.value	0x1
 52446 7b24 50       		.byte	0x50
 52447 7b25 00000000 		.quad	0
 52447      00000000 
 52448 7b2d 00000000 		.quad	0
 52448      00000000 
 52449              	.LLST499:
 52450 7b35 00000000 		.quad	.LVL469
 52450      00000000 
 52451 7b3d 00000000 		.quad	.LVL597
 52451      00000000 
 52452 7b45 0600     		.value	0x6
 52453 7b47 F2       		.byte	0xf2
 52454 7b48 00000000 		.long	.Ldebug_info0+71690
 52455 7b4c 00       		.sleb128 0
 52456 7b4d 00000000 		.quad	.LVL652
 52456      00000000 
 52457 7b55 00000000 		.quad	.LFE6051
GAS LISTING /tmp/ccmMnd7l.s 			page 1295


 52457      00000000 
 52458 7b5d 0600     		.value	0x6
 52459 7b5f F2       		.byte	0xf2
 52460 7b60 00000000 		.long	.Ldebug_info0+71690
 52461 7b64 00       		.sleb128 0
 52462 7b65 00000000 		.quad	0
 52462      00000000 
 52463 7b6d 00000000 		.quad	0
 52463      00000000 
 52464              	.LLST500:
 52465 7b75 00000000 		.quad	.LVL469
 52465      00000000 
 52466 7b7d 00000000 		.quad	.LVL477
 52466      00000000 
 52467 7b85 0100     		.value	0x1
 52468 7b87 5F       		.byte	0x5f
 52469 7b88 00000000 		.quad	0
 52469      00000000 
 52470 7b90 00000000 		.quad	0
 52470      00000000 
 52471              	.LLST501:
 52472 7b98 00000000 		.quad	.LVL641
 52472      00000000 
 52473 7ba0 00000000 		.quad	.LVL643
 52473      00000000 
 52474 7ba8 0600     		.value	0x6
 52475 7baa F2       		.byte	0xf2
 52476 7bab 00000000 		.long	.Ldebug_info0+71690
 52477 7baf 00       		.sleb128 0
 52478 7bb0 00000000 		.quad	0
 52478      00000000 
 52479 7bb8 00000000 		.quad	0
 52479      00000000 
 52480              	.LLST502:
 52481 7bc0 00000000 		.quad	.LVL642
 52481      00000000 
 52482 7bc8 00000000 		.quad	.LVL643
 52482      00000000 
 52483 7bd0 0100     		.value	0x1
 52484 7bd2 5F       		.byte	0x5f
 52485 7bd3 00000000 		.quad	0
 52485      00000000 
 52486 7bdb 00000000 		.quad	0
 52486      00000000 
 52487              	.LLST503:
 52488 7be3 00000000 		.quad	.LVL473
 52488      00000000 
 52489 7beb 00000000 		.quad	.LVL597
 52489      00000000 
 52490 7bf3 0600     		.value	0x6
 52491 7bf5 F2       		.byte	0xf2
 52492 7bf6 00000000 		.long	.Ldebug_info0+71642
 52493 7bfa 00       		.sleb128 0
 52494 7bfb 00000000 		.quad	.LVL652
 52494      00000000 
 52495 7c03 00000000 		.quad	.LFE6051
 52495      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1296


 52496 7c0b 0600     		.value	0x6
 52497 7c0d F2       		.byte	0xf2
 52498 7c0e 00000000 		.long	.Ldebug_info0+71642
 52499 7c12 00       		.sleb128 0
 52500 7c13 00000000 		.quad	0
 52500      00000000 
 52501 7c1b 00000000 		.quad	0
 52501      00000000 
 52502              	.LLST504:
 52503 7c23 00000000 		.quad	.LVL474
 52503      00000000 
 52504 7c2b 00000000 		.quad	.LVL475
 52504      00000000 
 52505 7c33 0100     		.value	0x1
 52506 7c35 5E       		.byte	0x5e
 52507 7c36 00000000 		.quad	0
 52507      00000000 
 52508 7c3e 00000000 		.quad	0
 52508      00000000 
 52509              	.LLST505:
 52510 7c46 00000000 		.quad	.LVL643
 52510      00000000 
 52511 7c4e 00000000 		.quad	.LVL645
 52511      00000000 
 52512 7c56 0600     		.value	0x6
 52513 7c58 F2       		.byte	0xf2
 52514 7c59 00000000 		.long	.Ldebug_info0+71642
 52515 7c5d 00       		.sleb128 0
 52516 7c5e 00000000 		.quad	0
 52516      00000000 
 52517 7c66 00000000 		.quad	0
 52517      00000000 
 52518              	.LLST506:
 52519 7c6e 00000000 		.quad	.LVL644
 52519      00000000 
 52520 7c76 00000000 		.quad	.LVL645
 52520      00000000 
 52521 7c7e 0100     		.value	0x1
 52522 7c80 5E       		.byte	0x5e
 52523 7c81 00000000 		.quad	0
 52523      00000000 
 52524 7c89 00000000 		.quad	0
 52524      00000000 
 52525              	.LLST507:
 52526 7c91 00000000 		.quad	.LVL477
 52526      00000000 
 52527 7c99 00000000 		.quad	.LVL587
 52527      00000000 
 52528 7ca1 0300     		.value	0x3
 52529 7ca3 91       		.byte	0x91
 52530 7ca4 F87D     		.sleb128 -264
 52531 7ca6 00000000 		.quad	.LVL652
 52531      00000000 
 52532 7cae 00000000 		.quad	.LFE6051
 52532      00000000 
 52533 7cb6 0300     		.value	0x3
 52534 7cb8 91       		.byte	0x91
GAS LISTING /tmp/ccmMnd7l.s 			page 1297


 52535 7cb9 F87D     		.sleb128 -264
 52536 7cbb 00000000 		.quad	0
 52536      00000000 
 52537 7cc3 00000000 		.quad	0
 52537      00000000 
 52538              	.LLST508:
 52539 7ccb 00000000 		.quad	.LVL586
 52539      00000000 
 52540 7cd3 00000000 		.quad	.LVL597
 52540      00000000 
 52541 7cdb 0400     		.value	0x4
 52542 7cdd 30       		.byte	0x30
 52543 7cde 9F       		.byte	0x9f
 52544 7cdf 93       		.byte	0x93
 52545 7ce0 08       		.uleb128 0x8
 52546 7ce1 00000000 		.quad	.LVL705
 52546      00000000 
 52547 7ce9 00000000 		.quad	.LVL706
 52547      00000000 
 52548 7cf1 0400     		.value	0x4
 52549 7cf3 30       		.byte	0x30
 52550 7cf4 9F       		.byte	0x9f
 52551 7cf5 93       		.byte	0x93
 52552 7cf6 08       		.uleb128 0x8
 52553 7cf7 00000000 		.quad	0
 52553      00000000 
 52554 7cff 00000000 		.quad	0
 52554      00000000 
 52555              	.LLST509:
 52556 7d07 00000000 		.quad	.LVL479
 52556      00000000 
 52557 7d0f 00000000 		.quad	.LVL581
 52557      00000000 
 52558 7d17 0100     		.value	0x1
 52559 7d19 5C       		.byte	0x5c
 52560 7d1a 00000000 		.quad	.LVL652
 52560      00000000 
 52561 7d22 00000000 		.quad	.LFE6051
 52561      00000000 
 52562 7d2a 0100     		.value	0x1
 52563 7d2c 5C       		.byte	0x5c
 52564 7d2d 00000000 		.quad	0
 52564      00000000 
 52565 7d35 00000000 		.quad	0
 52565      00000000 
 52566              	.LLST510:
 52567 7d3d 00000000 		.quad	.LVL481
 52567      00000000 
 52568 7d45 00000000 		.quad	.LVL482-1
 52568      00000000 
 52569 7d4d 0300     		.value	0x3
 52570 7d4f 50       		.byte	0x50
 52571 7d50 93       		.byte	0x93
 52572 7d51 08       		.uleb128 0x8
 52573 7d52 00000000 		.quad	.LVL482-1
 52573      00000000 
 52574 7d5a 00000000 		.quad	.LVL583
GAS LISTING /tmp/ccmMnd7l.s 			page 1298


 52574      00000000 
 52575 7d62 0300     		.value	0x3
 52576 7d64 5F       		.byte	0x5f
 52577 7d65 93       		.byte	0x93
 52578 7d66 08       		.uleb128 0x8
 52579 7d67 00000000 		.quad	.LVL583
 52579      00000000 
 52580 7d6f 00000000 		.quad	.LVL597
 52580      00000000 
 52581 7d77 0400     		.value	0x4
 52582 7d79 30       		.byte	0x30
 52583 7d7a 9F       		.byte	0x9f
 52584 7d7b 93       		.byte	0x93
 52585 7d7c 08       		.uleb128 0x8
 52586 7d7d 00000000 		.quad	.LVL652
 52586      00000000 
 52587 7d85 00000000 		.quad	.LVL703
 52587      00000000 
 52588 7d8d 0300     		.value	0x3
 52589 7d8f 5F       		.byte	0x5f
 52590 7d90 93       		.byte	0x93
 52591 7d91 08       		.uleb128 0x8
 52592 7d92 00000000 		.quad	.LVL706
 52592      00000000 
 52593 7d9a 00000000 		.quad	.LVL707
 52593      00000000 
 52594 7da2 0300     		.value	0x3
 52595 7da4 5F       		.byte	0x5f
 52596 7da5 93       		.byte	0x93
 52597 7da6 08       		.uleb128 0x8
 52598 7da7 00000000 		.quad	0
 52598      00000000 
 52599 7daf 00000000 		.quad	0
 52599      00000000 
 52600              	.LLST511:
 52601 7db7 00000000 		.quad	.LVL481
 52601      00000000 
 52602 7dbf 00000000 		.quad	.LVL597
 52602      00000000 
 52603 7dc7 0A00     		.value	0xa
 52604 7dc9 03       		.byte	0x3
 52605 7dca 00000000 		.quad	.LC22
 52605      00000000 
 52606 7dd2 9F       		.byte	0x9f
 52607 7dd3 00000000 		.quad	.LVL652
 52607      00000000 
 52608 7ddb 00000000 		.quad	.LVL703
 52608      00000000 
 52609 7de3 0A00     		.value	0xa
 52610 7de5 03       		.byte	0x3
 52611 7de6 00000000 		.quad	.LC22
 52611      00000000 
 52612 7dee 9F       		.byte	0x9f
 52613 7def 00000000 		.quad	.LVL706
 52613      00000000 
 52614 7df7 00000000 		.quad	.LVL707
 52614      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1299


 52615 7dff 0A00     		.value	0xa
 52616 7e01 03       		.byte	0x3
 52617 7e02 00000000 		.quad	.LC22
 52617      00000000 
 52618 7e0a 9F       		.byte	0x9f
 52619 7e0b 00000000 		.quad	0
 52619      00000000 
 52620 7e13 00000000 		.quad	0
 52620      00000000 
 52621              	.LLST512:
 52622 7e1b 00000000 		.quad	.LVL482
 52622      00000000 
 52623 7e23 00000000 		.quad	.LVL581
 52623      00000000 
 52624 7e2b 0100     		.value	0x1
 52625 7e2d 5C       		.byte	0x5c
 52626 7e2e 00000000 		.quad	.LVL652
 52626      00000000 
 52627 7e36 00000000 		.quad	.LVL701
 52627      00000000 
 52628 7e3e 0100     		.value	0x1
 52629 7e40 5C       		.byte	0x5c
 52630 7e41 00000000 		.quad	0
 52630      00000000 
 52631 7e49 00000000 		.quad	0
 52631      00000000 
 52632              	.LLST513:
 52633 7e51 00000000 		.quad	.LVL484
 52633      00000000 
 52634 7e59 00000000 		.quad	.LVL597
 52634      00000000 
 52635 7e61 0A00     		.value	0xa
 52636 7e63 03       		.byte	0x3
 52637 7e64 00000000 		.quad	.LC23
 52637      00000000 
 52638 7e6c 9F       		.byte	0x9f
 52639 7e6d 00000000 		.quad	.LVL652
 52639      00000000 
 52640 7e75 00000000 		.quad	.LVL701
 52640      00000000 
 52641 7e7d 0A00     		.value	0xa
 52642 7e7f 03       		.byte	0x3
 52643 7e80 00000000 		.quad	.LC23
 52643      00000000 
 52644 7e88 9F       		.byte	0x9f
 52645 7e89 00000000 		.quad	0
 52645      00000000 
 52646 7e91 00000000 		.quad	0
 52646      00000000 
 52647              	.LLST514:
 52648 7e99 00000000 		.quad	.LVL484
 52648      00000000 
 52649 7ea1 00000000 		.quad	.LVL485-1
 52649      00000000 
 52650 7ea9 0100     		.value	0x1
 52651 7eab 50       		.byte	0x50
 52652 7eac 00000000 		.quad	.LVL485-1
GAS LISTING /tmp/ccmMnd7l.s 			page 1300


 52652      00000000 
 52653 7eb4 00000000 		.quad	.LVL490
 52653      00000000 
 52654 7ebc 0100     		.value	0x1
 52655 7ebe 53       		.byte	0x53
 52656 7ebf 00000000 		.quad	0
 52656      00000000 
 52657 7ec7 00000000 		.quad	0
 52657      00000000 
 52658              	.LLST515:
 52659 7ecf 00000000 		.quad	.LVL485
 52659      00000000 
 52660 7ed7 00000000 		.quad	.LVL587
 52660      00000000 
 52661 7edf 0300     		.value	0x3
 52662 7ee1 91       		.byte	0x91
 52663 7ee2 F87D     		.sleb128 -264
 52664 7ee4 00000000 		.quad	.LVL652
 52664      00000000 
 52665 7eec 00000000 		.quad	.LVL701
 52665      00000000 
 52666 7ef4 0300     		.value	0x3
 52667 7ef6 91       		.byte	0x91
 52668 7ef7 F87D     		.sleb128 -264
 52669 7ef9 00000000 		.quad	0
 52669      00000000 
 52670 7f01 00000000 		.quad	0
 52670      00000000 
 52671              	.LLST516:
 52672 7f09 00000000 		.quad	.LVL486
 52672      00000000 
 52673 7f11 00000000 		.quad	.LVL597
 52673      00000000 
 52674 7f19 0A00     		.value	0xa
 52675 7f1b 03       		.byte	0x3
 52676 7f1c 00000000 		.quad	.LC30
 52676      00000000 
 52677 7f24 9F       		.byte	0x9f
 52678 7f25 00000000 		.quad	.LVL652
 52678      00000000 
 52679 7f2d 00000000 		.quad	.LVL701
 52679      00000000 
 52680 7f35 0A00     		.value	0xa
 52681 7f37 03       		.byte	0x3
 52682 7f38 00000000 		.quad	.LC30
 52682      00000000 
 52683 7f40 9F       		.byte	0x9f
 52684 7f41 00000000 		.quad	0
 52684      00000000 
 52685 7f49 00000000 		.quad	0
 52685      00000000 
 52686              	.LLST517:
 52687 7f51 00000000 		.quad	.LVL486
 52687      00000000 
 52688 7f59 00000000 		.quad	.LVL487-1
 52688      00000000 
 52689 7f61 0100     		.value	0x1
GAS LISTING /tmp/ccmMnd7l.s 			page 1301


 52690 7f63 50       		.byte	0x50
 52691 7f64 00000000 		.quad	0
 52691      00000000 
 52692 7f6c 00000000 		.quad	0
 52692      00000000 
 52693              	.LLST518:
 52694 7f74 00000000 		.quad	.LVL487
 52694      00000000 
 52695 7f7c 00000000 		.quad	.LVL597
 52695      00000000 
 52696 7f84 0A00     		.value	0xa
 52697 7f86 03       		.byte	0x3
 52698 7f87 00000000 		.quad	.LC25
 52698      00000000 
 52699 7f8f 9F       		.byte	0x9f
 52700 7f90 00000000 		.quad	.LVL652
 52700      00000000 
 52701 7f98 00000000 		.quad	.LVL701
 52701      00000000 
 52702 7fa0 0A00     		.value	0xa
 52703 7fa2 03       		.byte	0x3
 52704 7fa3 00000000 		.quad	.LC25
 52704      00000000 
 52705 7fab 9F       		.byte	0x9f
 52706 7fac 00000000 		.quad	0
 52706      00000000 
 52707 7fb4 00000000 		.quad	0
 52707      00000000 
 52708              	.LLST519:
 52709 7fbc 00000000 		.quad	.LVL488
 52709      00000000 
 52710 7fc4 00000000 		.quad	.LVL581
 52710      00000000 
 52711 7fcc 0100     		.value	0x1
 52712 7fce 5C       		.byte	0x5c
 52713 7fcf 00000000 		.quad	.LVL652
 52713      00000000 
 52714 7fd7 00000000 		.quad	.LVL701
 52714      00000000 
 52715 7fdf 0100     		.value	0x1
 52716 7fe1 5C       		.byte	0x5c
 52717 7fe2 00000000 		.quad	0
 52717      00000000 
 52718 7fea 00000000 		.quad	0
 52718      00000000 
 52719              	.LLST520:
 52720 7ff2 00000000 		.quad	.LVL490
 52720      00000000 
 52721 7ffa 00000000 		.quad	.LVL597
 52721      00000000 
 52722 8002 0A00     		.value	0xa
 52723 8004 03       		.byte	0x3
 52724 8005 00000000 		.quad	.LC26
 52724      00000000 
 52725 800d 9F       		.byte	0x9f
 52726 800e 00000000 		.quad	.LVL652
 52726      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1302


 52727 8016 00000000 		.quad	.LVL701
 52727      00000000 
 52728 801e 0A00     		.value	0xa
 52729 8020 03       		.byte	0x3
 52730 8021 00000000 		.quad	.LC26
 52730      00000000 
 52731 8029 9F       		.byte	0x9f
 52732 802a 00000000 		.quad	0
 52732      00000000 
 52733 8032 00000000 		.quad	0
 52733      00000000 
 52734              	.LLST521:
 52735 803a 00000000 		.quad	.LVL490
 52735      00000000 
 52736 8042 00000000 		.quad	.LVL491-1
 52736      00000000 
 52737 804a 0100     		.value	0x1
 52738 804c 50       		.byte	0x50
 52739 804d 00000000 		.quad	.LVL491-1
 52739      00000000 
 52740 8055 00000000 		.quad	.LVL493
 52740      00000000 
 52741 805d 0100     		.value	0x1
 52742 805f 53       		.byte	0x53
 52743 8060 00000000 		.quad	0
 52743      00000000 
 52744 8068 00000000 		.quad	0
 52744      00000000 
 52745              	.LLST522:
 52746 8070 00000000 		.quad	.LVL491
 52746      00000000 
 52747 8078 00000000 		.quad	.LVL587
 52747      00000000 
 52748 8080 0300     		.value	0x3
 52749 8082 91       		.byte	0x91
 52750 8083 F87D     		.sleb128 -264
 52751 8085 00000000 		.quad	.LVL652
 52751      00000000 
 52752 808d 00000000 		.quad	.LVL701
 52752      00000000 
 52753 8095 0300     		.value	0x3
 52754 8097 91       		.byte	0x91
 52755 8098 F87D     		.sleb128 -264
 52756 809a 00000000 		.quad	0
 52756      00000000 
 52757 80a2 00000000 		.quad	0
 52757      00000000 
 52758              	.LLST523:
 52759 80aa 00000000 		.quad	.LVL493
 52759      00000000 
 52760 80b2 00000000 		.quad	.LVL597
 52760      00000000 
 52761 80ba 0A00     		.value	0xa
 52762 80bc 03       		.byte	0x3
 52763 80bd 00000000 		.quad	.LC27
 52763      00000000 
 52764 80c5 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1303


 52765 80c6 00000000 		.quad	.LVL652
 52765      00000000 
 52766 80ce 00000000 		.quad	.LVL701
 52766      00000000 
 52767 80d6 0A00     		.value	0xa
 52768 80d8 03       		.byte	0x3
 52769 80d9 00000000 		.quad	.LC27
 52769      00000000 
 52770 80e1 9F       		.byte	0x9f
 52771 80e2 00000000 		.quad	0
 52771      00000000 
 52772 80ea 00000000 		.quad	0
 52772      00000000 
 52773              	.LLST524:
 52774 80f2 00000000 		.quad	.LVL493
 52774      00000000 
 52775 80fa 00000000 		.quad	.LVL494-1
 52775      00000000 
 52776 8102 0100     		.value	0x1
 52777 8104 50       		.byte	0x50
 52778 8105 00000000 		.quad	.LVL494-1
 52778      00000000 
 52779 810d 00000000 		.quad	.LVL506
 52779      00000000 
 52780 8115 0100     		.value	0x1
 52781 8117 53       		.byte	0x53
 52782 8118 00000000 		.quad	0
 52782      00000000 
 52783 8120 00000000 		.quad	0
 52783      00000000 
 52784              	.LLST525:
 52785 8128 00000000 		.quad	.LVL494
 52785      00000000 
 52786 8130 00000000 		.quad	.LVL506
 52786      00000000 
 52787 8138 0100     		.value	0x1
 52788 813a 53       		.byte	0x53
 52789 813b 00000000 		.quad	0
 52789      00000000 
 52790 8143 00000000 		.quad	0
 52790      00000000 
 52791              	.LLST526:
 52792 814b 00000000 		.quad	.LVL495
 52792      00000000 
 52793 8153 00000000 		.quad	.LVL597
 52793      00000000 
 52794 815b 0200     		.value	0x2
 52795 815d 35       		.byte	0x35
 52796 815e 9F       		.byte	0x9f
 52797 815f 00000000 		.quad	.LVL652
 52797      00000000 
 52798 8167 00000000 		.quad	.LVL701
 52798      00000000 
 52799 816f 0200     		.value	0x2
 52800 8171 35       		.byte	0x35
 52801 8172 9F       		.byte	0x9f
 52802 8173 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1304


 52802      00000000 
 52803 817b 00000000 		.quad	0
 52803      00000000 
 52804              	.LLST527:
 52805 8183 00000000 		.quad	.LVL495
 52805      00000000 
 52806 818b 00000000 		.quad	.LVL597
 52806      00000000 
 52807 8193 0400     		.value	0x4
 52808 8195 91       		.byte	0x91
 52809 8196 907F     		.sleb128 -112
 52810 8198 9F       		.byte	0x9f
 52811 8199 00000000 		.quad	.LVL652
 52811      00000000 
 52812 81a1 00000000 		.quad	.LVL700
 52812      00000000 
 52813 81a9 0400     		.value	0x4
 52814 81ab 91       		.byte	0x91
 52815 81ac 907F     		.sleb128 -112
 52816 81ae 9F       		.byte	0x9f
 52817 81af 00000000 		.quad	.LVL700
 52817      00000000 
 52818 81b7 00000000 		.quad	.LVL701-1
 52818      00000000 
 52819 81bf 0100     		.value	0x1
 52820 81c1 55       		.byte	0x55
 52821 81c2 00000000 		.quad	.LVL701-1
 52821      00000000 
 52822 81ca 00000000 		.quad	.LVL701
 52822      00000000 
 52823 81d2 0400     		.value	0x4
 52824 81d4 91       		.byte	0x91
 52825 81d5 907F     		.sleb128 -112
 52826 81d7 9F       		.byte	0x9f
 52827 81d8 00000000 		.quad	0
 52827      00000000 
 52828 81e0 00000000 		.quad	0
 52828      00000000 
 52829              	.LLST529:
 52830 81e8 00000000 		.quad	.LVL497
 52830      00000000 
 52831 81f0 00000000 		.quad	.LVL597
 52831      00000000 
 52832 81f8 0200     		.value	0x2
 52833 81fa 35       		.byte	0x35
 52834 81fb 9F       		.byte	0x9f
 52835 81fc 00000000 		.quad	.LVL652
 52835      00000000 
 52836 8204 00000000 		.quad	.LVL701
 52836      00000000 
 52837 820c 0200     		.value	0x2
 52838 820e 35       		.byte	0x35
 52839 820f 9F       		.byte	0x9f
 52840 8210 00000000 		.quad	0
 52840      00000000 
 52841 8218 00000000 		.quad	0
 52841      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1305


 52842              	.LLST530:
 52843 8220 00000000 		.quad	.LVL497
 52843      00000000 
 52844 8228 00000000 		.quad	.LVL597
 52844      00000000 
 52845 8230 0400     		.value	0x4
 52846 8232 91       		.byte	0x91
 52847 8233 987F     		.sleb128 -104
 52848 8235 9F       		.byte	0x9f
 52849 8236 00000000 		.quad	.LVL652
 52849      00000000 
 52850 823e 00000000 		.quad	.LVL701
 52850      00000000 
 52851 8246 0400     		.value	0x4
 52852 8248 91       		.byte	0x91
 52853 8249 987F     		.sleb128 -104
 52854 824b 9F       		.byte	0x9f
 52855 824c 00000000 		.quad	0
 52855      00000000 
 52856 8254 00000000 		.quad	0
 52856      00000000 
 52857              	.LLST534:
 52858 825c 00000000 		.quad	.LVL498
 52858      00000000 
 52859 8264 00000000 		.quad	.LVL597
 52859      00000000 
 52860 826c 0200     		.value	0x2
 52861 826e 35       		.byte	0x35
 52862 826f 9F       		.byte	0x9f
 52863 8270 00000000 		.quad	.LVL652
 52863      00000000 
 52864 8278 00000000 		.quad	.LVL701
 52864      00000000 
 52865 8280 0200     		.value	0x2
 52866 8282 35       		.byte	0x35
 52867 8283 9F       		.byte	0x9f
 52868 8284 00000000 		.quad	0
 52868      00000000 
 52869 828c 00000000 		.quad	0
 52869      00000000 
 52870              	.LLST535:
 52871 8294 00000000 		.quad	.LVL498
 52871      00000000 
 52872 829c 00000000 		.quad	.LVL597
 52872      00000000 
 52873 82a4 0400     		.value	0x4
 52874 82a6 91       		.byte	0x91
 52875 82a7 987F     		.sleb128 -104
 52876 82a9 9F       		.byte	0x9f
 52877 82aa 00000000 		.quad	.LVL652
 52877      00000000 
 52878 82b2 00000000 		.quad	.LVL701
 52878      00000000 
 52879 82ba 0400     		.value	0x4
 52880 82bc 91       		.byte	0x91
 52881 82bd 987F     		.sleb128 -104
 52882 82bf 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1306


 52883 82c0 00000000 		.quad	0
 52883      00000000 
 52884 82c8 00000000 		.quad	0
 52884      00000000 
 52885              	.LLST538:
 52886 82d0 00000000 		.quad	.LVL498
 52886      00000000 
 52887 82d8 00000000 		.quad	.LVL597
 52887      00000000 
 52888 82e0 0200     		.value	0x2
 52889 82e2 30       		.byte	0x30
 52890 82e3 9F       		.byte	0x9f
 52891 82e4 00000000 		.quad	.LVL652
 52891      00000000 
 52892 82ec 00000000 		.quad	.LVL701
 52892      00000000 
 52893 82f4 0200     		.value	0x2
 52894 82f6 30       		.byte	0x30
 52895 82f7 9F       		.byte	0x9f
 52896 82f8 00000000 		.quad	0
 52896      00000000 
 52897 8300 00000000 		.quad	0
 52897      00000000 
 52898              	.LLST542:
 52899 8308 00000000 		.quad	.LVL500
 52899      00000000 
 52900 8310 00000000 		.quad	.LVL597
 52900      00000000 
 52901 8318 0200     		.value	0x2
 52902 831a 35       		.byte	0x35
 52903 831b 9F       		.byte	0x9f
 52904 831c 00000000 		.quad	.LVL652
 52904      00000000 
 52905 8324 00000000 		.quad	.LVL701
 52905      00000000 
 52906 832c 0200     		.value	0x2
 52907 832e 35       		.byte	0x35
 52908 832f 9F       		.byte	0x9f
 52909 8330 00000000 		.quad	0
 52909      00000000 
 52910 8338 00000000 		.quad	0
 52910      00000000 
 52911              	.LLST543:
 52912 8340 00000000 		.quad	.LVL500
 52912      00000000 
 52913 8348 00000000 		.quad	.LVL597
 52913      00000000 
 52914 8350 0400     		.value	0x4
 52915 8352 91       		.byte	0x91
 52916 8353 987F     		.sleb128 -104
 52917 8355 9F       		.byte	0x9f
 52918 8356 00000000 		.quad	.LVL652
 52918      00000000 
 52919 835e 00000000 		.quad	.LVL701
 52919      00000000 
 52920 8366 0400     		.value	0x4
 52921 8368 91       		.byte	0x91
GAS LISTING /tmp/ccmMnd7l.s 			page 1307


 52922 8369 987F     		.sleb128 -104
 52923 836b 9F       		.byte	0x9f
 52924 836c 00000000 		.quad	0
 52924      00000000 
 52925 8374 00000000 		.quad	0
 52925      00000000 
 52926              	.LLST545:
 52927 837c 00000000 		.quad	.LVL500
 52927      00000000 
 52928 8384 00000000 		.quad	.LVL506
 52928      00000000 
 52929 838c 0100     		.value	0x1
 52930 838e 50       		.byte	0x50
 52931 838f 00000000 		.quad	0
 52931      00000000 
 52932 8397 00000000 		.quad	0
 52932      00000000 
 52933              	.LLST546:
 52934 839f 00000000 		.quad	.LVL500
 52934      00000000 
 52935 83a7 00000000 		.quad	.LVL501
 52935      00000000 
 52936 83af 0100     		.value	0x1
 52937 83b1 50       		.byte	0x50
 52938 83b2 00000000 		.quad	.LVL501
 52938      00000000 
 52939 83ba 00000000 		.quad	.LVL502
 52939      00000000 
 52940 83c2 0300     		.value	0x3
 52941 83c4 70       		.byte	0x70
 52942 83c5 08       		.sleb128 8
 52943 83c6 9F       		.byte	0x9f
 52944 83c7 00000000 		.quad	.LVL502
 52944      00000000 
 52945 83cf 00000000 		.quad	.LVL503
 52945      00000000 
 52946 83d7 0300     		.value	0x3
 52947 83d9 70       		.byte	0x70
 52948 83da 10       		.sleb128 16
 52949 83db 9F       		.byte	0x9f
 52950 83dc 00000000 		.quad	.LVL503
 52950      00000000 
 52951 83e4 00000000 		.quad	.LVL504
 52951      00000000 
 52952 83ec 0300     		.value	0x3
 52953 83ee 70       		.byte	0x70
 52954 83ef 18       		.sleb128 24
 52955 83f0 9F       		.byte	0x9f
 52956 83f1 00000000 		.quad	.LVL504
 52956      00000000 
 52957 83f9 00000000 		.quad	.LVL506
 52957      00000000 
 52958 8401 0300     		.value	0x3
 52959 8403 70       		.byte	0x70
 52960 8404 28       		.sleb128 40
 52961 8405 9F       		.byte	0x9f
 52962 8406 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1308


 52962      00000000 
 52963 840e 00000000 		.quad	0
 52963      00000000 
 52964              	.LLST547:
 52965 8416 00000000 		.quad	.LVL500
 52965      00000000 
 52966 841e 00000000 		.quad	.LVL501
 52966      00000000 
 52967 8426 0200     		.value	0x2
 52968 8428 35       		.byte	0x35
 52969 8429 9F       		.byte	0x9f
 52970 842a 00000000 		.quad	.LVL501
 52970      00000000 
 52971 8432 00000000 		.quad	.LVL502
 52971      00000000 
 52972 843a 0200     		.value	0x2
 52973 843c 34       		.byte	0x34
 52974 843d 9F       		.byte	0x9f
 52975 843e 00000000 		.quad	.LVL502
 52975      00000000 
 52976 8446 00000000 		.quad	.LVL503
 52976      00000000 
 52977 844e 0200     		.value	0x2
 52978 8450 33       		.byte	0x33
 52979 8451 9F       		.byte	0x9f
 52980 8452 00000000 		.quad	.LVL503
 52980      00000000 
 52981 845a 00000000 		.quad	.LVL504
 52981      00000000 
 52982 8462 0200     		.value	0x2
 52983 8464 32       		.byte	0x32
 52984 8465 9F       		.byte	0x9f
 52985 8466 00000000 		.quad	.LVL504
 52985      00000000 
 52986 846e 00000000 		.quad	.LVL597
 52986      00000000 
 52987 8476 0200     		.value	0x2
 52988 8478 30       		.byte	0x30
 52989 8479 9F       		.byte	0x9f
 52990 847a 00000000 		.quad	.LVL652
 52990      00000000 
 52991 8482 00000000 		.quad	.LVL701
 52991      00000000 
 52992 848a 0200     		.value	0x2
 52993 848c 30       		.byte	0x30
 52994 848d 9F       		.byte	0x9f
 52995 848e 00000000 		.quad	0
 52995      00000000 
 52996 8496 00000000 		.quad	0
 52996      00000000 
 52997              	.LLST548:
 52998 849e 00000000 		.quad	.LVL506
 52998      00000000 
 52999 84a6 00000000 		.quad	.LVL507
 52999      00000000 
 53000 84ae 0200     		.value	0x2
 53001 84b0 30       		.byte	0x30
GAS LISTING /tmp/ccmMnd7l.s 			page 1309


 53002 84b1 9F       		.byte	0x9f
 53003 84b2 00000000 		.quad	.LVL507
 53003      00000000 
 53004 84ba 00000000 		.quad	.LVL512
 53004      00000000 
 53005 84c2 0100     		.value	0x1
 53006 84c4 53       		.byte	0x53
 53007 84c5 00000000 		.quad	0
 53007      00000000 
 53008 84cd 00000000 		.quad	0
 53008      00000000 
 53009              	.LLST549:
 53010 84d5 00000000 		.quad	.LVL511
 53010      00000000 
 53011 84dd 00000000 		.quad	.LVL597
 53011      00000000 
 53012 84e5 0400     		.value	0x4
 53013 84e7 91       		.byte	0x91
 53014 84e8 907F     		.sleb128 -112
 53015 84ea 9F       		.byte	0x9f
 53016 84eb 00000000 		.quad	.LVL652
 53016      00000000 
 53017 84f3 00000000 		.quad	.LVL699
 53017      00000000 
 53018 84fb 0400     		.value	0x4
 53019 84fd 91       		.byte	0x91
 53020 84fe 907F     		.sleb128 -112
 53021 8500 9F       		.byte	0x9f
 53022 8501 00000000 		.quad	0
 53022      00000000 
 53023 8509 00000000 		.quad	0
 53023      00000000 
 53024              	.LLST550:
 53025 8511 00000000 		.quad	.LVL511
 53025      00000000 
 53026 8519 00000000 		.quad	.LVL597
 53026      00000000 
 53027 8521 0200     		.value	0x2
 53028 8523 30       		.byte	0x30
 53029 8524 9F       		.byte	0x9f
 53030 8525 00000000 		.quad	.LVL652
 53030      00000000 
 53031 852d 00000000 		.quad	.LVL699
 53031      00000000 
 53032 8535 0200     		.value	0x2
 53033 8537 30       		.byte	0x30
 53034 8538 9F       		.byte	0x9f
 53035 8539 00000000 		.quad	0
 53035      00000000 
 53036 8541 00000000 		.quad	0
 53036      00000000 
 53037              	.LLST551:
 53038 8549 00000000 		.quad	.LVL511
 53038      00000000 
 53039 8551 00000000 		.quad	.LVL597
 53039      00000000 
 53040 8559 0400     		.value	0x4
GAS LISTING /tmp/ccmMnd7l.s 			page 1310


 53041 855b 91       		.byte	0x91
 53042 855c B07F     		.sleb128 -80
 53043 855e 9F       		.byte	0x9f
 53044 855f 00000000 		.quad	.LVL652
 53044      00000000 
 53045 8567 00000000 		.quad	.LVL699
 53045      00000000 
 53046 856f 0400     		.value	0x4
 53047 8571 91       		.byte	0x91
 53048 8572 B07F     		.sleb128 -80
 53049 8574 9F       		.byte	0x9f
 53050 8575 00000000 		.quad	0
 53050      00000000 
 53051 857d 00000000 		.quad	0
 53051      00000000 
 53052              	.LLST552:
 53053 8585 00000000 		.quad	.LVL516
 53053      00000000 
 53054 858d 00000000 		.quad	.LVL597
 53054      00000000 
 53055 8595 0400     		.value	0x4
 53056 8597 91       		.byte	0x91
 53057 8598 907F     		.sleb128 -112
 53058 859a 9F       		.byte	0x9f
 53059 859b 00000000 		.quad	.LVL652
 53059      00000000 
 53060 85a3 00000000 		.quad	.LVL692
 53060      00000000 
 53061 85ab 0400     		.value	0x4
 53062 85ad 91       		.byte	0x91
 53063 85ae 907F     		.sleb128 -112
 53064 85b0 9F       		.byte	0x9f
 53065 85b1 00000000 		.quad	.LVL693
 53065      00000000 
 53066 85b9 00000000 		.quad	.LVL699
 53066      00000000 
 53067 85c1 0400     		.value	0x4
 53068 85c3 91       		.byte	0x91
 53069 85c4 907F     		.sleb128 -112
 53070 85c6 9F       		.byte	0x9f
 53071 85c7 00000000 		.quad	0
 53071      00000000 
 53072 85cf 00000000 		.quad	0
 53072      00000000 
 53073              	.LLST553:
 53074 85d7 00000000 		.quad	.LVL523
 53074      00000000 
 53075 85df 00000000 		.quad	.LVL524-1
 53075      00000000 
 53076 85e7 0100     		.value	0x1
 53077 85e9 61       		.byte	0x61
 53078 85ea 00000000 		.quad	.LVL524-1
 53078      00000000 
 53079 85f2 00000000 		.quad	.LVL597
 53079      00000000 
 53080 85fa 0300     		.value	0x3
 53081 85fc 91       		.byte	0x91
GAS LISTING /tmp/ccmMnd7l.s 			page 1311


 53082 85fd 887E     		.sleb128 -248
 53083 85ff 00000000 		.quad	.LVL652
 53083      00000000 
 53084 8607 00000000 		.quad	.LVL690
 53084      00000000 
 53085 860f 0300     		.value	0x3
 53086 8611 91       		.byte	0x91
 53087 8612 887E     		.sleb128 -248
 53088 8614 00000000 		.quad	.LVL691
 53088      00000000 
 53089 861c 00000000 		.quad	.LVL692
 53089      00000000 
 53090 8624 0100     		.value	0x1
 53091 8626 66       		.byte	0x66
 53092 8627 00000000 		.quad	.LVL693
 53092      00000000 
 53093 862f 00000000 		.quad	.LVL699
 53093      00000000 
 53094 8637 0300     		.value	0x3
 53095 8639 91       		.byte	0x91
 53096 863a 887E     		.sleb128 -248
 53097 863c 00000000 		.quad	0
 53097      00000000 
 53098 8644 00000000 		.quad	0
 53098      00000000 
 53099              	.LLST554:
 53100 864c 00000000 		.quad	.LVL550
 53100      00000000 
 53101 8654 00000000 		.quad	.LVL552
 53101      00000000 
 53102 865c 0300     		.value	0x3
 53103 865e 91       		.byte	0x91
 53104 865f 987E     		.sleb128 -232
 53105 8661 00000000 		.quad	0
 53105      00000000 
 53106 8669 00000000 		.quad	0
 53106      00000000 
 53107              	.LLST555:
 53108 8671 00000000 		.quad	.LVL516
 53108      00000000 
 53109 8679 00000000 		.quad	.LVL517
 53109      00000000 
 53110 8681 0A00     		.value	0xa
 53111 8683 9E       		.byte	0x9e
 53112 8684 08       		.uleb128 0x8
 53113 8685 00000000 		.long	0
 53114 8689 00000000 		.long	0
 53115 868d 00000000 		.quad	.LVL517
 53115      00000000 
 53116 8695 00000000 		.quad	.LVL521
 53116      00000000 
 53117 869d 0100     		.value	0x1
 53118 869f 61       		.byte	0x61
 53119 86a0 00000000 		.quad	.LVL690
 53119      00000000 
 53120 86a8 00000000 		.quad	.LVL692
 53120      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1312


 53121 86b0 0A00     		.value	0xa
 53122 86b2 9E       		.byte	0x9e
 53123 86b3 08       		.uleb128 0x8
 53124 86b4 00000000 		.long	0
 53125 86b8 00000000 		.long	0
 53126 86bc 00000000 		.quad	0
 53126      00000000 
 53127 86c4 00000000 		.quad	0
 53127      00000000 
 53128              	.LLST556:
 53129 86cc 00000000 		.quad	.LVL516
 53129      00000000 
 53130 86d4 00000000 		.quad	.LVL517
 53130      00000000 
 53131 86dc 0300     		.value	0x3
 53132 86de 52       		.byte	0x52
 53133 86df 93       		.byte	0x93
 53134 86e0 08       		.uleb128 0x8
 53135 86e1 00000000 		.quad	.LVL517
 53135      00000000 
 53136 86e9 00000000 		.quad	.LVL518
 53136      00000000 
 53137 86f1 0300     		.value	0x3
 53138 86f3 50       		.byte	0x50
 53139 86f4 93       		.byte	0x93
 53140 86f5 08       		.uleb128 0x8
 53141 86f6 00000000 		.quad	.LVL518
 53141      00000000 
 53142 86fe 00000000 		.quad	.LVL519
 53142      00000000 
 53143 8706 0500     		.value	0x5
 53144 8708 70       		.byte	0x70
 53145 8709 08       		.sleb128 8
 53146 870a 9F       		.byte	0x9f
 53147 870b 93       		.byte	0x93
 53148 870c 08       		.uleb128 0x8
 53149 870d 00000000 		.quad	.LVL519
 53149      00000000 
 53150 8715 00000000 		.quad	.LVL522
 53150      00000000 
 53151 871d 0300     		.value	0x3
 53152 871f 50       		.byte	0x50
 53153 8720 93       		.byte	0x93
 53154 8721 08       		.uleb128 0x8
 53155 8722 00000000 		.quad	.LVL690
 53155      00000000 
 53156 872a 00000000 		.quad	.LVL692
 53156      00000000 
 53157 8732 0300     		.value	0x3
 53158 8734 56       		.byte	0x56
 53159 8735 93       		.byte	0x93
 53160 8736 08       		.uleb128 0x8
 53161 8737 00000000 		.quad	0
 53161      00000000 
 53162 873f 00000000 		.quad	0
 53162      00000000 
 53163              	.LLST557:
GAS LISTING /tmp/ccmMnd7l.s 			page 1313


 53164 8747 00000000 		.quad	.LVL523
 53164      00000000 
 53165 874f 00000000 		.quad	.LVL524-1
 53165      00000000 
 53166 8757 0300     		.value	0x3
 53167 8759 54       		.byte	0x54
 53168 875a 93       		.byte	0x93
 53169 875b 08       		.uleb128 0x8
 53170 875c 00000000 		.quad	.LVL524-1
 53170      00000000 
 53171 8764 00000000 		.quad	.LVL549
 53171      00000000 
 53172 876c 0300     		.value	0x3
 53173 876e 56       		.byte	0x56
 53174 876f 93       		.byte	0x93
 53175 8770 08       		.uleb128 0x8
 53176 8771 00000000 		.quad	.LVL652
 53176      00000000 
 53177 8779 00000000 		.quad	.LVL656
 53177      00000000 
 53178 8781 0300     		.value	0x3
 53179 8783 56       		.byte	0x56
 53180 8784 93       		.byte	0x93
 53181 8785 08       		.uleb128 0x8
 53182 8786 00000000 		.quad	.LVL659
 53182      00000000 
 53183 878e 00000000 		.quad	.LVL681
 53183      00000000 
 53184 8796 0300     		.value	0x3
 53185 8798 56       		.byte	0x56
 53186 8799 93       		.byte	0x93
 53187 879a 08       		.uleb128 0x8
 53188 879b 00000000 		.quad	.LVL688
 53188      00000000 
 53189 87a3 00000000 		.quad	.LVL690
 53189      00000000 
 53190 87ab 0300     		.value	0x3
 53191 87ad 56       		.byte	0x56
 53192 87ae 93       		.byte	0x93
 53193 87af 08       		.uleb128 0x8
 53194 87b0 00000000 		.quad	.LVL691
 53194      00000000 
 53195 87b8 00000000 		.quad	.LVL692
 53195      00000000 
 53196 87c0 0300     		.value	0x3
 53197 87c2 56       		.byte	0x56
 53198 87c3 93       		.byte	0x93
 53199 87c4 08       		.uleb128 0x8
 53200 87c5 00000000 		.quad	.LVL693
 53200      00000000 
 53201 87cd 00000000 		.quad	.LVL695
 53201      00000000 
 53202 87d5 0300     		.value	0x3
 53203 87d7 56       		.byte	0x56
 53204 87d8 93       		.byte	0x93
 53205 87d9 08       		.uleb128 0x8
 53206 87da 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1314


 53206      00000000 
 53207 87e2 00000000 		.quad	0
 53207      00000000 
 53208              	.LLST558:
 53209 87ea 00000000 		.quad	.LVL523
 53209      00000000 
 53210 87f2 00000000 		.quad	.LVL524-1
 53210      00000000 
 53211 87fa 0300     		.value	0x3
 53212 87fc 52       		.byte	0x52
 53213 87fd 93       		.byte	0x93
 53214 87fe 08       		.uleb128 0x8
 53215 87ff 00000000 		.quad	.LVL524-1
 53215      00000000 
 53216 8807 00000000 		.quad	.LVL526
 53216      00000000 
 53217 880f 0500     		.value	0x5
 53218 8811 91       		.byte	0x91
 53219 8812 987E     		.sleb128 -232
 53220 8814 93       		.byte	0x93
 53221 8815 08       		.uleb128 0x8
 53222 8816 00000000 		.quad	.LVL663
 53222      00000000 
 53223 881e 00000000 		.quad	.LVL667
 53223      00000000 
 53224 8826 0500     		.value	0x5
 53225 8828 91       		.byte	0x91
 53226 8829 987E     		.sleb128 -232
 53227 882b 93       		.byte	0x93
 53228 882c 08       		.uleb128 0x8
 53229 882d 00000000 		.quad	.LVL691
 53229      00000000 
 53230 8835 00000000 		.quad	.LVL692
 53230      00000000 
 53231 883d 0300     		.value	0x3
 53232 883f 56       		.byte	0x56
 53233 8840 93       		.byte	0x93
 53234 8841 08       		.uleb128 0x8
 53235 8842 00000000 		.quad	0
 53235      00000000 
 53236 884a 00000000 		.quad	0
 53236      00000000 
 53237              	.LLST561:
 53238 8852 00000000 		.quad	.LVL524
 53238      00000000 
 53239 885a 00000000 		.quad	.LVL526
 53239      00000000 
 53240 8862 0500     		.value	0x5
 53241 8864 91       		.byte	0x91
 53242 8865 987E     		.sleb128 -232
 53243 8867 93       		.byte	0x93
 53244 8868 08       		.uleb128 0x8
 53245 8869 00000000 		.quad	.LVL663
 53245      00000000 
 53246 8871 00000000 		.quad	.LVL667
 53246      00000000 
 53247 8879 0500     		.value	0x5
GAS LISTING /tmp/ccmMnd7l.s 			page 1315


 53248 887b 91       		.byte	0x91
 53249 887c 987E     		.sleb128 -232
 53250 887e 93       		.byte	0x93
 53251 887f 08       		.uleb128 0x8
 53252 8880 00000000 		.quad	0
 53252      00000000 
 53253 8888 00000000 		.quad	0
 53253      00000000 
 53254              	.LLST562:
 53255 8890 00000000 		.quad	.LVL525
 53255      00000000 
 53256 8898 00000000 		.quad	.LVL526
 53256      00000000 
 53257 88a0 0A00     		.value	0xa
 53258 88a2 91       		.byte	0x91
 53259 88a3 987E     		.sleb128 -232
 53260 88a5 06       		.byte	0x6
 53261 88a6 23       		.byte	0x23
 53262 88a7 8001     		.uleb128 0x80
 53263 88a9 9F       		.byte	0x9f
 53264 88aa 93       		.byte	0x93
 53265 88ab 08       		.uleb128 0x8
 53266 88ac 00000000 		.quad	0
 53266      00000000 
 53267 88b4 00000000 		.quad	0
 53267      00000000 
 53268              	.LLST563:
 53269 88bc 00000000 		.quad	.LVL525
 53269      00000000 
 53270 88c4 00000000 		.quad	.LVL526
 53270      00000000 
 53271 88cc 0500     		.value	0x5
 53272 88ce 91       		.byte	0x91
 53273 88cf 987E     		.sleb128 -232
 53274 88d1 93       		.byte	0x93
 53275 88d2 08       		.uleb128 0x8
 53276 88d3 00000000 		.quad	0
 53276      00000000 
 53277 88db 00000000 		.quad	0
 53277      00000000 
 53278              	.LLST564:
 53279 88e3 00000000 		.quad	.LVL525
 53279      00000000 
 53280 88eb 00000000 		.quad	.LVL526
 53280      00000000 
 53281 88f3 0900     		.value	0x9
 53282 88f5 91       		.byte	0x91
 53283 88f6 987E     		.sleb128 -232
 53284 88f8 06       		.byte	0x6
 53285 88f9 23       		.byte	0x23
 53286 88fa 08       		.uleb128 0x8
 53287 88fb 9F       		.byte	0x9f
 53288 88fc 93       		.byte	0x93
 53289 88fd 08       		.uleb128 0x8
 53290 88fe 00000000 		.quad	.LVL526
 53290      00000000 
 53291 8906 00000000 		.quad	.LVL535
GAS LISTING /tmp/ccmMnd7l.s 			page 1316


 53291      00000000 
 53292 890e 0300     		.value	0x3
 53293 8910 53       		.byte	0x53
 53294 8911 93       		.byte	0x93
 53295 8912 08       		.uleb128 0x8
 53296 8913 00000000 		.quad	.LVL535
 53296      00000000 
 53297 891b 00000000 		.quad	.LVL536
 53297      00000000 
 53298 8923 0500     		.value	0x5
 53299 8925 73       		.byte	0x73
 53300 8926 08       		.sleb128 8
 53301 8927 9F       		.byte	0x9f
 53302 8928 93       		.byte	0x93
 53303 8929 08       		.uleb128 0x8
 53304 892a 00000000 		.quad	.LVL536
 53304      00000000 
 53305 8932 00000000 		.quad	.LVL548
 53305      00000000 
 53306 893a 0300     		.value	0x3
 53307 893c 53       		.byte	0x53
 53308 893d 93       		.byte	0x93
 53309 893e 08       		.uleb128 0x8
 53310 893f 00000000 		.quad	.LVL652
 53310      00000000 
 53311 8947 00000000 		.quad	.LVL656
 53311      00000000 
 53312 894f 0300     		.value	0x3
 53313 8951 53       		.byte	0x53
 53314 8952 93       		.byte	0x93
 53315 8953 08       		.uleb128 0x8
 53316 8954 00000000 		.quad	.LVL659
 53316      00000000 
 53317 895c 00000000 		.quad	.LVL663
 53317      00000000 
 53318 8964 0300     		.value	0x3
 53319 8966 53       		.byte	0x53
 53320 8967 93       		.byte	0x93
 53321 8968 08       		.uleb128 0x8
 53322 8969 00000000 		.quad	.LVL693
 53322      00000000 
 53323 8971 00000000 		.quad	.LVL695
 53323      00000000 
 53324 8979 0300     		.value	0x3
 53325 897b 53       		.byte	0x53
 53326 897c 93       		.byte	0x93
 53327 897d 08       		.uleb128 0x8
 53328 897e 00000000 		.quad	0
 53328      00000000 
 53329 8986 00000000 		.quad	0
 53329      00000000 
 53330              	.LLST565:
 53331 898e 00000000 		.quad	.LVL525
 53331      00000000 
 53332 8996 00000000 		.quad	.LVL548
 53332      00000000 
 53333 899e 0200     		.value	0x2
GAS LISTING /tmp/ccmMnd7l.s 			page 1317


 53334 89a0 31       		.byte	0x31
 53335 89a1 9F       		.byte	0x9f
 53336 89a2 00000000 		.quad	.LVL652
 53336      00000000 
 53337 89aa 00000000 		.quad	.LVL656
 53337      00000000 
 53338 89b2 0200     		.value	0x2
 53339 89b4 31       		.byte	0x31
 53340 89b5 9F       		.byte	0x9f
 53341 89b6 00000000 		.quad	.LVL659
 53341      00000000 
 53342 89be 00000000 		.quad	.LVL663
 53342      00000000 
 53343 89c6 0200     		.value	0x2
 53344 89c8 31       		.byte	0x31
 53345 89c9 9F       		.byte	0x9f
 53346 89ca 00000000 		.quad	.LVL693
 53346      00000000 
 53347 89d2 00000000 		.quad	.LVL695
 53347      00000000 
 53348 89da 0200     		.value	0x2
 53349 89dc 31       		.byte	0x31
 53350 89dd 9F       		.byte	0x9f
 53351 89de 00000000 		.quad	0
 53351      00000000 
 53352 89e6 00000000 		.quad	0
 53352      00000000 
 53353              	.LLST566:
 53354 89ee 00000000 		.quad	.LVL525
 53354      00000000 
 53355 89f6 00000000 		.quad	.LVL548
 53355      00000000 
 53356 89fe 0600     		.value	0x6
 53357 8a00 F2       		.byte	0xf2
 53358 8a01 00000000 		.long	.Ldebug_info0+80418
 53359 8a05 00       		.sleb128 0
 53360 8a06 00000000 		.quad	.LVL652
 53360      00000000 
 53361 8a0e 00000000 		.quad	.LVL656
 53361      00000000 
 53362 8a16 0600     		.value	0x6
 53363 8a18 F2       		.byte	0xf2
 53364 8a19 00000000 		.long	.Ldebug_info0+80418
 53365 8a1d 00       		.sleb128 0
 53366 8a1e 00000000 		.quad	.LVL659
 53366      00000000 
 53367 8a26 00000000 		.quad	.LVL663
 53367      00000000 
 53368 8a2e 0600     		.value	0x6
 53369 8a30 F2       		.byte	0xf2
 53370 8a31 00000000 		.long	.Ldebug_info0+80418
 53371 8a35 00       		.sleb128 0
 53372 8a36 00000000 		.quad	.LVL693
 53372      00000000 
 53373 8a3e 00000000 		.quad	.LVL695
 53373      00000000 
 53374 8a46 0600     		.value	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1318


 53375 8a48 F2       		.byte	0xf2
 53376 8a49 00000000 		.long	.Ldebug_info0+80418
 53377 8a4d 00       		.sleb128 0
 53378 8a4e 00000000 		.quad	0
 53378      00000000 
 53379 8a56 00000000 		.quad	0
 53379      00000000 
 53380              	.LLST567:
 53381 8a5e 00000000 		.quad	.LVL526
 53381      00000000 
 53382 8a66 00000000 		.quad	.LVL548
 53382      00000000 
 53383 8a6e 0600     		.value	0x6
 53384 8a70 F2       		.byte	0xf2
 53385 8a71 00000000 		.long	.Ldebug_info0+80402
 53386 8a75 00       		.sleb128 0
 53387 8a76 00000000 		.quad	.LVL652
 53387      00000000 
 53388 8a7e 00000000 		.quad	.LVL656
 53388      00000000 
 53389 8a86 0600     		.value	0x6
 53390 8a88 F2       		.byte	0xf2
 53391 8a89 00000000 		.long	.Ldebug_info0+80402
 53392 8a8d 00       		.sleb128 0
 53393 8a8e 00000000 		.quad	.LVL659
 53393      00000000 
 53394 8a96 00000000 		.quad	.LVL663
 53394      00000000 
 53395 8a9e 0600     		.value	0x6
 53396 8aa0 F2       		.byte	0xf2
 53397 8aa1 00000000 		.long	.Ldebug_info0+80402
 53398 8aa5 00       		.sleb128 0
 53399 8aa6 00000000 		.quad	.LVL693
 53399      00000000 
 53400 8aae 00000000 		.quad	.LVL695
 53400      00000000 
 53401 8ab6 0600     		.value	0x6
 53402 8ab8 F2       		.byte	0xf2
 53403 8ab9 00000000 		.long	.Ldebug_info0+80402
 53404 8abd 00       		.sleb128 0
 53405 8abe 00000000 		.quad	0
 53405      00000000 
 53406 8ac6 00000000 		.quad	0
 53406      00000000 
 53407              	.LLST568:
 53408 8ace 00000000 		.quad	.LVL528
 53408      00000000 
 53409 8ad6 00000000 		.quad	.LVL530
 53409      00000000 
 53410 8ade 0300     		.value	0x3
 53411 8ae0 53       		.byte	0x53
 53412 8ae1 93       		.byte	0x93
 53413 8ae2 08       		.uleb128 0x8
 53414 8ae3 00000000 		.quad	.LVL530
 53414      00000000 
 53415 8aeb 00000000 		.quad	.LVL531
 53415      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1319


 53416 8af3 0300     		.value	0x3
 53417 8af5 50       		.byte	0x50
 53418 8af6 93       		.byte	0x93
 53419 8af7 08       		.uleb128 0x8
 53420 8af8 00000000 		.quad	.LVL531
 53420      00000000 
 53421 8b00 00000000 		.quad	.LVL532
 53421      00000000 
 53422 8b08 0500     		.value	0x5
 53423 8b0a 70       		.byte	0x70
 53424 8b0b 08       		.sleb128 8
 53425 8b0c 9F       		.byte	0x9f
 53426 8b0d 93       		.byte	0x93
 53427 8b0e 08       		.uleb128 0x8
 53428 8b0f 00000000 		.quad	.LVL532
 53428      00000000 
 53429 8b17 00000000 		.quad	.LVL534
 53429      00000000 
 53430 8b1f 0300     		.value	0x3
 53431 8b21 50       		.byte	0x50
 53432 8b22 93       		.byte	0x93
 53433 8b23 08       		.uleb128 0x8
 53434 8b24 00000000 		.quad	.LVL693
 53434      00000000 
 53435 8b2c 00000000 		.quad	.LVL695
 53435      00000000 
 53436 8b34 0300     		.value	0x3
 53437 8b36 53       		.byte	0x53
 53438 8b37 93       		.byte	0x93
 53439 8b38 08       		.uleb128 0x8
 53440 8b39 00000000 		.quad	0
 53440      00000000 
 53441 8b41 00000000 		.quad	0
 53441      00000000 
 53442              	.LLST569:
 53443 8b49 00000000 		.quad	.LVL528
 53443      00000000 
 53444 8b51 00000000 		.quad	.LVL535
 53444      00000000 
 53445 8b59 0100     		.value	0x1
 53446 8b5b 62       		.byte	0x62
 53447 8b5c 00000000 		.quad	.LVL693
 53447      00000000 
 53448 8b64 00000000 		.quad	.LVL695
 53448      00000000 
 53449 8b6c 0100     		.value	0x1
 53450 8b6e 62       		.byte	0x62
 53451 8b6f 00000000 		.quad	0
 53451      00000000 
 53452 8b77 00000000 		.quad	0
 53452      00000000 
 53453              	.LLST570:
 53454 8b7f 00000000 		.quad	.LVL529
 53454      00000000 
 53455 8b87 00000000 		.quad	.LVL535
 53455      00000000 
 53456 8b8f 0600     		.value	0x6
GAS LISTING /tmp/ccmMnd7l.s 			page 1320


 53457 8b91 F2       		.byte	0xf2
 53458 8b92 00000000 		.long	.Ldebug_info0+80587
 53459 8b96 00       		.sleb128 0
 53460 8b97 00000000 		.quad	.LVL693
 53460      00000000 
 53461 8b9f 00000000 		.quad	.LVL695
 53461      00000000 
 53462 8ba7 0600     		.value	0x6
 53463 8ba9 F2       		.byte	0xf2
 53464 8baa 00000000 		.long	.Ldebug_info0+80587
 53465 8bae 00       		.sleb128 0
 53466 8baf 00000000 		.quad	0
 53466      00000000 
 53467 8bb7 00000000 		.quad	0
 53467      00000000 
 53468              	.LLST571:
 53469 8bbf 00000000 		.quad	.LVL530
 53469      00000000 
 53470 8bc7 00000000 		.quad	.LVL531
 53470      00000000 
 53471 8bcf 0600     		.value	0x6
 53472 8bd1 F2       		.byte	0xf2
 53473 8bd2 00000000 		.long	.Ldebug_info0+80597
 53474 8bd6 00       		.sleb128 0
 53475 8bd7 00000000 		.quad	.LVL532
 53475      00000000 
 53476 8bdf 00000000 		.quad	.LVL534
 53476      00000000 
 53477 8be7 0600     		.value	0x6
 53478 8be9 F2       		.byte	0xf2
 53479 8bea 00000000 		.long	.Ldebug_info0+80597
 53480 8bee 00       		.sleb128 0
 53481 8bef 00000000 		.quad	0
 53481      00000000 
 53482 8bf7 00000000 		.quad	0
 53482      00000000 
 53483              	.LLST572:
 53484 8bff 00000000 		.quad	.LVL652
 53484      00000000 
 53485 8c07 00000000 		.quad	.LVL654-1
 53485      00000000 
 53486 8c0f 0100     		.value	0x1
 53487 8c11 62       		.byte	0x62
 53488 8c12 00000000 		.quad	.LVL654-1
 53488      00000000 
 53489 8c1a 00000000 		.quad	.LVL655
 53489      00000000 
 53490 8c22 0300     		.value	0x3
 53491 8c24 91       		.byte	0x91
 53492 8c25 A87E     		.sleb128 -216
 53493 8c27 00000000 		.quad	0
 53493      00000000 
 53494 8c2f 00000000 		.quad	0
 53494      00000000 
 53495              	.LLST573:
 53496 8c37 00000000 		.quad	.LVL652
 53496      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1321


 53497 8c3f 00000000 		.quad	.LVL656
 53497      00000000 
 53498 8c47 0300     		.value	0x3
 53499 8c49 73       		.byte	0x73
 53500 8c4a 08       		.sleb128 8
 53501 8c4b 9F       		.byte	0x9f
 53502 8c4c 00000000 		.quad	0
 53502      00000000 
 53503 8c54 00000000 		.quad	0
 53503      00000000 
 53504              	.LLST574:
 53505 8c5c 00000000 		.quad	.LVL652
 53505      00000000 
 53506 8c64 00000000 		.quad	.LVL656
 53506      00000000 
 53507 8c6c 0100     		.value	0x1
 53508 8c6e 53       		.byte	0x53
 53509 8c6f 00000000 		.quad	0
 53509      00000000 
 53510 8c77 00000000 		.quad	0
 53510      00000000 
 53511              	.LLST575:
 53512 8c7f 00000000 		.quad	.LVL652
 53512      00000000 
 53513 8c87 00000000 		.quad	.LVL656
 53513      00000000 
 53514 8c8f 0200     		.value	0x2
 53515 8c91 31       		.byte	0x31
 53516 8c92 9F       		.byte	0x9f
 53517 8c93 00000000 		.quad	0
 53517      00000000 
 53518 8c9b 00000000 		.quad	0
 53518      00000000 
 53519              	.LLST578:
 53520 8ca3 00000000 		.quad	.LVL653
 53520      00000000 
 53521 8cab 00000000 		.quad	.LVL654-1
 53521      00000000 
 53522 8cb3 0500     		.value	0x5
 53523 8cb5 71       		.byte	0x71
 53524 8cb6 00       		.sleb128 0
 53525 8cb7 38       		.byte	0x38
 53526 8cb8 1B       		.byte	0x1b
 53527 8cb9 9F       		.byte	0x9f
 53528 8cba 00000000 		.quad	.LVL654-1
 53528      00000000 
 53529 8cc2 00000000 		.quad	.LVL655
 53529      00000000 
 53530 8cca 0A00     		.value	0xa
 53531 8ccc 73       		.byte	0x73
 53532 8ccd 00       		.sleb128 0
 53533 8cce 91       		.byte	0x91
 53534 8ccf 987E     		.sleb128 -232
 53535 8cd1 06       		.byte	0x6
 53536 8cd2 1C       		.byte	0x1c
 53537 8cd3 38       		.byte	0x38
 53538 8cd4 1B       		.byte	0x1b
GAS LISTING /tmp/ccmMnd7l.s 			page 1322


 53539 8cd5 9F       		.byte	0x9f
 53540 8cd6 00000000 		.quad	0
 53540      00000000 
 53541 8cde 00000000 		.quad	0
 53541      00000000 
 53542              	.LLST579:
 53543 8ce6 00000000 		.quad	.LVL538
 53543      00000000 
 53544 8cee 00000000 		.quad	.LVL541
 53544      00000000 
 53545 8cf6 0300     		.value	0x3
 53546 8cf8 59       		.byte	0x59
 53547 8cf9 93       		.byte	0x93
 53548 8cfa 08       		.uleb128 0x8
 53549 8cfb 00000000 		.quad	.LVL541
 53549      00000000 
 53550 8d03 00000000 		.quad	.LVL542
 53550      00000000 
 53551 8d0b 0300     		.value	0x3
 53552 8d0d 50       		.byte	0x50
 53553 8d0e 93       		.byte	0x93
 53554 8d0f 08       		.uleb128 0x8
 53555 8d10 00000000 		.quad	.LVL542
 53555      00000000 
 53556 8d18 00000000 		.quad	.LVL543
 53556      00000000 
 53557 8d20 0500     		.value	0x5
 53558 8d22 70       		.byte	0x70
 53559 8d23 08       		.sleb128 8
 53560 8d24 9F       		.byte	0x9f
 53561 8d25 93       		.byte	0x93
 53562 8d26 08       		.uleb128 0x8
 53563 8d27 00000000 		.quad	.LVL543
 53563      00000000 
 53564 8d2f 00000000 		.quad	.LVL548
 53564      00000000 
 53565 8d37 0300     		.value	0x3
 53566 8d39 50       		.byte	0x50
 53567 8d3a 93       		.byte	0x93
 53568 8d3b 08       		.uleb128 0x8
 53569 8d3c 00000000 		.quad	.LVL659
 53569      00000000 
 53570 8d44 00000000 		.quad	.LVL661
 53570      00000000 
 53571 8d4c 0300     		.value	0x3
 53572 8d4e 59       		.byte	0x59
 53573 8d4f 93       		.byte	0x93
 53574 8d50 08       		.uleb128 0x8
 53575 8d51 00000000 		.quad	.LVL661
 53575      00000000 
 53576 8d59 00000000 		.quad	.LVL663
 53576      00000000 
 53577 8d61 0300     		.value	0x3
 53578 8d63 50       		.byte	0x50
 53579 8d64 93       		.byte	0x93
 53580 8d65 08       		.uleb128 0x8
 53581 8d66 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1323


 53581      00000000 
 53582 8d6e 00000000 		.quad	0
 53582      00000000 
 53583              	.LLST580:
 53584 8d76 00000000 		.quad	.LVL539
 53584      00000000 
 53585 8d7e 00000000 		.quad	.LVL548
 53585      00000000 
 53586 8d86 0100     		.value	0x1
 53587 8d88 62       		.byte	0x62
 53588 8d89 00000000 		.quad	.LVL659
 53588      00000000 
 53589 8d91 00000000 		.quad	.LVL663
 53589      00000000 
 53590 8d99 0100     		.value	0x1
 53591 8d9b 62       		.byte	0x62
 53592 8d9c 00000000 		.quad	0
 53592      00000000 
 53593 8da4 00000000 		.quad	0
 53593      00000000 
 53594              	.LLST581:
 53595 8dac 00000000 		.quad	.LVL540
 53595      00000000 
 53596 8db4 00000000 		.quad	.LVL548
 53596      00000000 
 53597 8dbc 0600     		.value	0x6
 53598 8dbe F2       		.byte	0xf2
 53599 8dbf 00000000 		.long	.Ldebug_info0+81103
 53600 8dc3 00       		.sleb128 0
 53601 8dc4 00000000 		.quad	.LVL659
 53601      00000000 
 53602 8dcc 00000000 		.quad	.LVL663
 53602      00000000 
 53603 8dd4 0600     		.value	0x6
 53604 8dd6 F2       		.byte	0xf2
 53605 8dd7 00000000 		.long	.Ldebug_info0+81103
 53606 8ddb 00       		.sleb128 0
 53607 8ddc 00000000 		.quad	0
 53607      00000000 
 53608 8de4 00000000 		.quad	0
 53608      00000000 
 53609              	.LLST582:
 53610 8dec 00000000 		.quad	.LVL541
 53610      00000000 
 53611 8df4 00000000 		.quad	.LVL542
 53611      00000000 
 53612 8dfc 0600     		.value	0x6
 53613 8dfe F2       		.byte	0xf2
 53614 8dff 00000000 		.long	.Ldebug_info0+81113
 53615 8e03 00       		.sleb128 0
 53616 8e04 00000000 		.quad	.LVL543
 53616      00000000 
 53617 8e0c 00000000 		.quad	.LVL548
 53617      00000000 
 53618 8e14 0600     		.value	0x6
 53619 8e16 F2       		.byte	0xf2
 53620 8e17 00000000 		.long	.Ldebug_info0+81113
GAS LISTING /tmp/ccmMnd7l.s 			page 1324


 53621 8e1b 00       		.sleb128 0
 53622 8e1c 00000000 		.quad	0
 53622      00000000 
 53623 8e24 00000000 		.quad	0
 53623      00000000 
 53624              	.LLST583:
 53625 8e2c 00000000 		.quad	.LVL663
 53625      00000000 
 53626 8e34 00000000 		.quad	.LVL681
 53626      00000000 
 53627 8e3c 0300     		.value	0x3
 53628 8e3e 56       		.byte	0x56
 53629 8e3f 93       		.byte	0x93
 53630 8e40 08       		.uleb128 0x8
 53631 8e41 00000000 		.quad	.LVL688
 53631      00000000 
 53632 8e49 00000000 		.quad	.LVL690
 53632      00000000 
 53633 8e51 0300     		.value	0x3
 53634 8e53 56       		.byte	0x56
 53635 8e54 93       		.byte	0x93
 53636 8e55 08       		.uleb128 0x8
 53637 8e56 00000000 		.quad	0
 53637      00000000 
 53638 8e5e 00000000 		.quad	0
 53638      00000000 
 53639              	.LLST584:
 53640 8e66 00000000 		.quad	.LVL663
 53640      00000000 
 53641 8e6e 00000000 		.quad	.LVL667
 53641      00000000 
 53642 8e76 0500     		.value	0x5
 53643 8e78 91       		.byte	0x91
 53644 8e79 987E     		.sleb128 -232
 53645 8e7b 93       		.byte	0x93
 53646 8e7c 08       		.uleb128 0x8
 53647 8e7d 00000000 		.quad	0
 53647      00000000 
 53648 8e85 00000000 		.quad	0
 53648      00000000 
 53649              	.LLST585:
 53650 8e8d 00000000 		.quad	.LVL664
 53650      00000000 
 53651 8e95 00000000 		.quad	.LVL667
 53651      00000000 
 53652 8e9d 0300     		.value	0x3
 53653 8e9f 58       		.byte	0x58
 53654 8ea0 93       		.byte	0x93
 53655 8ea1 08       		.uleb128 0x8
 53656 8ea2 00000000 		.quad	.LVL667
 53656      00000000 
 53657 8eaa 00000000 		.quad	.LVL674
 53657      00000000 
 53658 8eb2 0300     		.value	0x3
 53659 8eb4 53       		.byte	0x53
 53660 8eb5 93       		.byte	0x93
 53661 8eb6 08       		.uleb128 0x8
GAS LISTING /tmp/ccmMnd7l.s 			page 1325


 53662 8eb7 00000000 		.quad	.LVL674
 53662      00000000 
 53663 8ebf 00000000 		.quad	.LVL675
 53663      00000000 
 53664 8ec7 0500     		.value	0x5
 53665 8ec9 73       		.byte	0x73
 53666 8eca 08       		.sleb128 8
 53667 8ecb 9F       		.byte	0x9f
 53668 8ecc 93       		.byte	0x93
 53669 8ecd 08       		.uleb128 0x8
 53670 8ece 00000000 		.quad	.LVL675
 53670      00000000 
 53671 8ed6 00000000 		.quad	.LVL681
 53671      00000000 
 53672 8ede 0300     		.value	0x3
 53673 8ee0 53       		.byte	0x53
 53674 8ee1 93       		.byte	0x93
 53675 8ee2 08       		.uleb128 0x8
 53676 8ee3 00000000 		.quad	.LVL688
 53676      00000000 
 53677 8eeb 00000000 		.quad	.LVL690
 53677      00000000 
 53678 8ef3 0300     		.value	0x3
 53679 8ef5 53       		.byte	0x53
 53680 8ef6 93       		.byte	0x93
 53681 8ef7 08       		.uleb128 0x8
 53682 8ef8 00000000 		.quad	0
 53682      00000000 
 53683 8f00 00000000 		.quad	0
 53683      00000000 
 53684              	.LLST586:
 53685 8f08 00000000 		.quad	.LVL663
 53685      00000000 
 53686 8f10 00000000 		.quad	.LVL681
 53686      00000000 
 53687 8f18 0200     		.value	0x2
 53688 8f1a 31       		.byte	0x31
 53689 8f1b 9F       		.byte	0x9f
 53690 8f1c 00000000 		.quad	.LVL688
 53690      00000000 
 53691 8f24 00000000 		.quad	.LVL690
 53691      00000000 
 53692 8f2c 0200     		.value	0x2
 53693 8f2e 31       		.byte	0x31
 53694 8f2f 9F       		.byte	0x9f
 53695 8f30 00000000 		.quad	0
 53695      00000000 
 53696 8f38 00000000 		.quad	0
 53696      00000000 
 53697              	.LLST587:
 53698 8f40 00000000 		.quad	.LVL663
 53698      00000000 
 53699 8f48 00000000 		.quad	.LVL681
 53699      00000000 
 53700 8f50 0600     		.value	0x6
 53701 8f52 F2       		.byte	0xf2
 53702 8f53 00000000 		.long	.Ldebug_info0+81244
GAS LISTING /tmp/ccmMnd7l.s 			page 1326


 53703 8f57 00       		.sleb128 0
 53704 8f58 00000000 		.quad	.LVL688
 53704      00000000 
 53705 8f60 00000000 		.quad	.LVL690
 53705      00000000 
 53706 8f68 0600     		.value	0x6
 53707 8f6a F2       		.byte	0xf2
 53708 8f6b 00000000 		.long	.Ldebug_info0+81244
 53709 8f6f 00       		.sleb128 0
 53710 8f70 00000000 		.quad	0
 53710      00000000 
 53711 8f78 00000000 		.quad	0
 53711      00000000 
 53712              	.LLST588:
 53713 8f80 00000000 		.quad	.LVL665
 53713      00000000 
 53714 8f88 00000000 		.quad	.LVL681
 53714      00000000 
 53715 8f90 0600     		.value	0x6
 53716 8f92 F2       		.byte	0xf2
 53717 8f93 00000000 		.long	.Ldebug_info0+81228
 53718 8f97 00       		.sleb128 0
 53719 8f98 00000000 		.quad	.LVL688
 53719      00000000 
 53720 8fa0 00000000 		.quad	.LVL690
 53720      00000000 
 53721 8fa8 0600     		.value	0x6
 53722 8faa F2       		.byte	0xf2
 53723 8fab 00000000 		.long	.Ldebug_info0+81228
 53724 8faf 00       		.sleb128 0
 53725 8fb0 00000000 		.quad	0
 53725      00000000 
 53726 8fb8 00000000 		.quad	0
 53726      00000000 
 53727              	.LLST589:
 53728 8fc0 00000000 		.quad	.LVL667
 53728      00000000 
 53729 8fc8 00000000 		.quad	.LVL669
 53729      00000000 
 53730 8fd0 0300     		.value	0x3
 53731 8fd2 53       		.byte	0x53
 53732 8fd3 93       		.byte	0x93
 53733 8fd4 08       		.uleb128 0x8
 53734 8fd5 00000000 		.quad	.LVL669
 53734      00000000 
 53735 8fdd 00000000 		.quad	.LVL670
 53735      00000000 
 53736 8fe5 0300     		.value	0x3
 53737 8fe7 50       		.byte	0x50
 53738 8fe8 93       		.byte	0x93
 53739 8fe9 08       		.uleb128 0x8
 53740 8fea 00000000 		.quad	.LVL670
 53740      00000000 
 53741 8ff2 00000000 		.quad	.LVL671
 53741      00000000 
 53742 8ffa 0500     		.value	0x5
 53743 8ffc 70       		.byte	0x70
GAS LISTING /tmp/ccmMnd7l.s 			page 1327


 53744 8ffd 08       		.sleb128 8
 53745 8ffe 9F       		.byte	0x9f
 53746 8fff 93       		.byte	0x93
 53747 9000 08       		.uleb128 0x8
 53748 9001 00000000 		.quad	.LVL671
 53748      00000000 
 53749 9009 00000000 		.quad	.LVL673
 53749      00000000 
 53750 9011 0300     		.value	0x3
 53751 9013 50       		.byte	0x50
 53752 9014 93       		.byte	0x93
 53753 9015 08       		.uleb128 0x8
 53754 9016 00000000 		.quad	.LVL688
 53754      00000000 
 53755 901e 00000000 		.quad	.LVL690
 53755      00000000 
 53756 9026 0300     		.value	0x3
 53757 9028 53       		.byte	0x53
 53758 9029 93       		.byte	0x93
 53759 902a 08       		.uleb128 0x8
 53760 902b 00000000 		.quad	0
 53760      00000000 
 53761 9033 00000000 		.quad	0
 53761      00000000 
 53762              	.LLST590:
 53763 903b 00000000 		.quad	.LVL667
 53763      00000000 
 53764 9043 00000000 		.quad	.LVL674
 53764      00000000 
 53765 904b 0100     		.value	0x1
 53766 904d 62       		.byte	0x62
 53767 904e 00000000 		.quad	.LVL688
 53767      00000000 
 53768 9056 00000000 		.quad	.LVL690
 53768      00000000 
 53769 905e 0100     		.value	0x1
 53770 9060 62       		.byte	0x62
 53771 9061 00000000 		.quad	0
 53771      00000000 
 53772 9069 00000000 		.quad	0
 53772      00000000 
 53773              	.LLST591:
 53774 9071 00000000 		.quad	.LVL668
 53774      00000000 
 53775 9079 00000000 		.quad	.LVL674
 53775      00000000 
 53776 9081 0600     		.value	0x6
 53777 9083 F2       		.byte	0xf2
 53778 9084 00000000 		.long	.Ldebug_info0+81409
 53779 9088 00       		.sleb128 0
 53780 9089 00000000 		.quad	.LVL688
 53780      00000000 
 53781 9091 00000000 		.quad	.LVL690
 53781      00000000 
 53782 9099 0600     		.value	0x6
 53783 909b F2       		.byte	0xf2
 53784 909c 00000000 		.long	.Ldebug_info0+81409
GAS LISTING /tmp/ccmMnd7l.s 			page 1328


 53785 90a0 00       		.sleb128 0
 53786 90a1 00000000 		.quad	0
 53786      00000000 
 53787 90a9 00000000 		.quad	0
 53787      00000000 
 53788              	.LLST592:
 53789 90b1 00000000 		.quad	.LVL669
 53789      00000000 
 53790 90b9 00000000 		.quad	.LVL670
 53790      00000000 
 53791 90c1 0600     		.value	0x6
 53792 90c3 F2       		.byte	0xf2
 53793 90c4 00000000 		.long	.Ldebug_info0+81419
 53794 90c8 00       		.sleb128 0
 53795 90c9 00000000 		.quad	.LVL671
 53795      00000000 
 53796 90d1 00000000 		.quad	.LVL673
 53796      00000000 
 53797 90d9 0600     		.value	0x6
 53798 90db F2       		.byte	0xf2
 53799 90dc 00000000 		.long	.Ldebug_info0+81419
 53800 90e0 00       		.sleb128 0
 53801 90e1 00000000 		.quad	0
 53801      00000000 
 53802 90e9 00000000 		.quad	0
 53802      00000000 
 53803              	.LLST593:
 53804 90f1 00000000 		.quad	.LVL677
 53804      00000000 
 53805 90f9 00000000 		.quad	.LVL679-1
 53805      00000000 
 53806 9101 0100     		.value	0x1
 53807 9103 62       		.byte	0x62
 53808 9104 00000000 		.quad	.LVL679-1
 53808      00000000 
 53809 910c 00000000 		.quad	.LVL680
 53809      00000000 
 53810 9114 0300     		.value	0x3
 53811 9116 91       		.byte	0x91
 53812 9117 A87E     		.sleb128 -216
 53813 9119 00000000 		.quad	0
 53813      00000000 
 53814 9121 00000000 		.quad	0
 53814      00000000 
 53815              	.LLST594:
 53816 9129 00000000 		.quad	.LVL677
 53816      00000000 
 53817 9131 00000000 		.quad	.LVL681
 53817      00000000 
 53818 9139 0300     		.value	0x3
 53819 913b 73       		.byte	0x73
 53820 913c 08       		.sleb128 8
 53821 913d 9F       		.byte	0x9f
 53822 913e 00000000 		.quad	0
 53822      00000000 
 53823 9146 00000000 		.quad	0
 53823      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1329


 53824              	.LLST595:
 53825 914e 00000000 		.quad	.LVL677
 53825      00000000 
 53826 9156 00000000 		.quad	.LVL681
 53826      00000000 
 53827 915e 0100     		.value	0x1
 53828 9160 53       		.byte	0x53
 53829 9161 00000000 		.quad	0
 53829      00000000 
 53830 9169 00000000 		.quad	0
 53830      00000000 
 53831              	.LLST596:
 53832 9171 00000000 		.quad	.LVL677
 53832      00000000 
 53833 9179 00000000 		.quad	.LVL681
 53833      00000000 
 53834 9181 0200     		.value	0x2
 53835 9183 31       		.byte	0x31
 53836 9184 9F       		.byte	0x9f
 53837 9185 00000000 		.quad	0
 53837      00000000 
 53838 918d 00000000 		.quad	0
 53838      00000000 
 53839              	.LLST599:
 53840 9195 00000000 		.quad	.LVL678
 53840      00000000 
 53841 919d 00000000 		.quad	.LVL679-1
 53841      00000000 
 53842 91a5 0500     		.value	0x5
 53843 91a7 71       		.byte	0x71
 53844 91a8 00       		.sleb128 0
 53845 91a9 38       		.byte	0x38
 53846 91aa 1B       		.byte	0x1b
 53847 91ab 9F       		.byte	0x9f
 53848 91ac 00000000 		.quad	.LVL679-1
 53848      00000000 
 53849 91b4 00000000 		.quad	.LVL680
 53849      00000000 
 53850 91bc 0A00     		.value	0xa
 53851 91be 73       		.byte	0x73
 53852 91bf 00       		.sleb128 0
 53853 91c0 91       		.byte	0x91
 53854 91c1 987E     		.sleb128 -232
 53855 91c3 06       		.byte	0x6
 53856 91c4 1C       		.byte	0x1c
 53857 91c5 38       		.byte	0x38
 53858 91c6 1B       		.byte	0x1b
 53859 91c7 9F       		.byte	0x9f
 53860 91c8 00000000 		.quad	0
 53860      00000000 
 53861 91d0 00000000 		.quad	0
 53861      00000000 
 53862              	.LLST600:
 53863 91d8 00000000 		.quad	.LVL550
 53863      00000000 
 53864 91e0 00000000 		.quad	.LVL597
 53864      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1330


 53865 91e8 0400     		.value	0x4
 53866 91ea 91       		.byte	0x91
 53867 91eb 987F     		.sleb128 -104
 53868 91ed 9F       		.byte	0x9f
 53869 91ee 00000000 		.quad	.LVL656
 53869      00000000 
 53870 91f6 00000000 		.quad	.LVL659
 53870      00000000 
 53871 91fe 0400     		.value	0x4
 53872 9200 91       		.byte	0x91
 53873 9201 987F     		.sleb128 -104
 53874 9203 9F       		.byte	0x9f
 53875 9204 00000000 		.quad	.LVL681
 53875      00000000 
 53876 920c 00000000 		.quad	.LVL688
 53876      00000000 
 53877 9214 0400     		.value	0x4
 53878 9216 91       		.byte	0x91
 53879 9217 987F     		.sleb128 -104
 53880 9219 9F       		.byte	0x9f
 53881 921a 00000000 		.quad	.LVL695
 53881      00000000 
 53882 9222 00000000 		.quad	.LVL699
 53882      00000000 
 53883 922a 0400     		.value	0x4
 53884 922c 91       		.byte	0x91
 53885 922d 987F     		.sleb128 -104
 53886 922f 9F       		.byte	0x9f
 53887 9230 00000000 		.quad	0
 53887      00000000 
 53888 9238 00000000 		.quad	0
 53888      00000000 
 53889              	.LLST602:
 53890 9240 00000000 		.quad	.LVL550
 53890      00000000 
 53891 9248 00000000 		.quad	.LVL597
 53891      00000000 
 53892 9250 0A00     		.value	0xa
 53893 9252 03       		.byte	0x3
 53894 9253 00000000 		.quad	.LC14
 53894      00000000 
 53895 925b 9F       		.byte	0x9f
 53896 925c 00000000 		.quad	.LVL656
 53896      00000000 
 53897 9264 00000000 		.quad	.LVL659
 53897      00000000 
 53898 926c 0A00     		.value	0xa
 53899 926e 03       		.byte	0x3
 53900 926f 00000000 		.quad	.LC14
 53900      00000000 
 53901 9277 9F       		.byte	0x9f
 53902 9278 00000000 		.quad	.LVL681
 53902      00000000 
 53903 9280 00000000 		.quad	.LVL688
 53903      00000000 
 53904 9288 0A00     		.value	0xa
 53905 928a 03       		.byte	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1331


 53906 928b 00000000 		.quad	.LC14
 53906      00000000 
 53907 9293 9F       		.byte	0x9f
 53908 9294 00000000 		.quad	.LVL695
 53908      00000000 
 53909 929c 00000000 		.quad	.LVL699
 53909      00000000 
 53910 92a4 0A00     		.value	0xa
 53911 92a6 03       		.byte	0x3
 53912 92a7 00000000 		.quad	.LC14
 53912      00000000 
 53913 92af 9F       		.byte	0x9f
 53914 92b0 00000000 		.quad	0
 53914      00000000 
 53915 92b8 00000000 		.quad	0
 53915      00000000 
 53916              	.LLST603:
 53917 92c0 00000000 		.quad	.LVL554
 53917      00000000 
 53918 92c8 00000000 		.quad	.LVL558-1
 53918      00000000 
 53919 92d0 0100     		.value	0x1
 53920 92d2 51       		.byte	0x51
 53921 92d3 00000000 		.quad	0
 53921      00000000 
 53922 92db 00000000 		.quad	0
 53922      00000000 
 53923              	.LLST604:
 53924 92e3 00000000 		.quad	.LVL554
 53924      00000000 
 53925 92eb 00000000 		.quad	.LVL597
 53925      00000000 
 53926 92f3 0400     		.value	0x4
 53927 92f5 0A       		.byte	0xa
 53928 92f6 0401     		.value	0x104
 53929 92f8 9F       		.byte	0x9f
 53930 92f9 00000000 		.quad	.LVL656
 53930      00000000 
 53931 9301 00000000 		.quad	.LVL659
 53931      00000000 
 53932 9309 0400     		.value	0x4
 53933 930b 0A       		.byte	0xa
 53934 930c 0401     		.value	0x104
 53935 930e 9F       		.byte	0x9f
 53936 930f 00000000 		.quad	.LVL681
 53936      00000000 
 53937 9317 00000000 		.quad	.LVL688
 53937      00000000 
 53938 931f 0400     		.value	0x4
 53939 9321 0A       		.byte	0xa
 53940 9322 0401     		.value	0x104
 53941 9324 9F       		.byte	0x9f
 53942 9325 00000000 		.quad	.LVL695
 53942      00000000 
 53943 932d 00000000 		.quad	.LVL699
 53943      00000000 
 53944 9335 0400     		.value	0x4
GAS LISTING /tmp/ccmMnd7l.s 			page 1332


 53945 9337 0A       		.byte	0xa
 53946 9338 0401     		.value	0x104
 53947 933a 9F       		.byte	0x9f
 53948 933b 00000000 		.quad	0
 53948      00000000 
 53949 9343 00000000 		.quad	0
 53949      00000000 
 53950              	.LLST605:
 53951 934b 00000000 		.quad	.LVL554
 53951      00000000 
 53952 9353 00000000 		.quad	.LVL597
 53952      00000000 
 53953 935b 0200     		.value	0x2
 53954 935d 34       		.byte	0x34
 53955 935e 9F       		.byte	0x9f
 53956 935f 00000000 		.quad	.LVL656
 53956      00000000 
 53957 9367 00000000 		.quad	.LVL659
 53957      00000000 
 53958 936f 0200     		.value	0x2
 53959 9371 34       		.byte	0x34
 53960 9372 9F       		.byte	0x9f
 53961 9373 00000000 		.quad	.LVL681
 53961      00000000 
 53962 937b 00000000 		.quad	.LVL688
 53962      00000000 
 53963 9383 0200     		.value	0x2
 53964 9385 34       		.byte	0x34
 53965 9386 9F       		.byte	0x9f
 53966 9387 00000000 		.quad	.LVL695
 53966      00000000 
 53967 938f 00000000 		.quad	.LVL699
 53967      00000000 
 53968 9397 0200     		.value	0x2
 53969 9399 34       		.byte	0x34
 53970 939a 9F       		.byte	0x9f
 53971 939b 00000000 		.quad	0
 53971      00000000 
 53972 93a3 00000000 		.quad	0
 53972      00000000 
 53973              	.LLST607:
 53974 93ab 00000000 		.quad	.LVL554
 53974      00000000 
 53975 93b3 00000000 		.quad	.LVL557
 53975      00000000 
 53976 93bb 0200     		.value	0x2
 53977 93bd 71       		.byte	0x71
 53978 93be 18       		.sleb128 24
 53979 93bf 00000000 		.quad	0
 53979      00000000 
 53980 93c7 00000000 		.quad	0
 53980      00000000 
 53981              	.LLST608:
 53982 93cf 00000000 		.quad	.LVL554
 53982      00000000 
 53983 93d7 00000000 		.quad	.LVL597
 53983      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1333


 53984 93df 0400     		.value	0x4
 53985 93e1 0B       		.byte	0xb
 53986 93e2 FBFE     		.value	0xfefb
 53987 93e4 9F       		.byte	0x9f
 53988 93e5 00000000 		.quad	.LVL656
 53988      00000000 
 53989 93ed 00000000 		.quad	.LVL659
 53989      00000000 
 53990 93f5 0400     		.value	0x4
 53991 93f7 0B       		.byte	0xb
 53992 93f8 FBFE     		.value	0xfefb
 53993 93fa 9F       		.byte	0x9f
 53994 93fb 00000000 		.quad	.LVL681
 53994      00000000 
 53995 9403 00000000 		.quad	.LVL688
 53995      00000000 
 53996 940b 0400     		.value	0x4
 53997 940d 0B       		.byte	0xb
 53998 940e FBFE     		.value	0xfefb
 53999 9410 9F       		.byte	0x9f
 54000 9411 00000000 		.quad	.LVL695
 54000      00000000 
 54001 9419 00000000 		.quad	.LVL699
 54001      00000000 
 54002 9421 0400     		.value	0x4
 54003 9423 0B       		.byte	0xb
 54004 9424 FBFE     		.value	0xfefb
 54005 9426 9F       		.byte	0x9f
 54006 9427 00000000 		.quad	0
 54006      00000000 
 54007 942f 00000000 		.quad	0
 54007      00000000 
 54008              	.LLST609:
 54009 9437 00000000 		.quad	.LVL554
 54009      00000000 
 54010 943f 00000000 		.quad	.LVL558-1
 54010      00000000 
 54011 9447 0300     		.value	0x3
 54012 9449 71       		.byte	0x71
 54013 944a 18       		.sleb128 24
 54014 944b 9F       		.byte	0x9f
 54015 944c 00000000 		.quad	0
 54015      00000000 
 54016 9454 00000000 		.quad	0
 54016      00000000 
 54017              	.LLST615:
 54018 945c 00000000 		.quad	.LVL554
 54018      00000000 
 54019 9464 00000000 		.quad	.LVL555
 54019      00000000 
 54020 946c 0900     		.value	0x9
 54021 946e 71       		.byte	0x71
 54022 946f 18       		.sleb128 24
 54023 9470 94       		.byte	0x94
 54024 9471 04       		.byte	0x4
 54025 9472 0B       		.byte	0xb
 54026 9473 FBFE     		.value	0xfefb
GAS LISTING /tmp/ccmMnd7l.s 			page 1334


 54027 9475 1A       		.byte	0x1a
 54028 9476 9F       		.byte	0x9f
 54029 9477 00000000 		.quad	.LVL555
 54029      00000000 
 54030 947f 00000000 		.quad	.LVL556
 54030      00000000 
 54031 9487 0100     		.value	0x1
 54032 9489 50       		.byte	0x50
 54033 948a 00000000 		.quad	.LVL556
 54033      00000000 
 54034 9492 00000000 		.quad	.LVL557
 54034      00000000 
 54035 949a 0900     		.value	0x9
 54036 949c 71       		.byte	0x71
 54037 949d 18       		.sleb128 24
 54038 949e 94       		.byte	0x94
 54039 949f 04       		.byte	0x4
 54040 94a0 0B       		.byte	0xb
 54041 94a1 FBFE     		.value	0xfefb
 54042 94a3 1A       		.byte	0x1a
 54043 94a4 9F       		.byte	0x9f
 54044 94a5 00000000 		.quad	0
 54044      00000000 
 54045 94ad 00000000 		.quad	0
 54045      00000000 
 54046              	.LLST616:
 54047 94b5 00000000 		.quad	.LVL557
 54047      00000000 
 54048 94bd 00000000 		.quad	.LVL558-1
 54048      00000000 
 54049 94c5 0100     		.value	0x1
 54050 94c7 61       		.byte	0x61
 54051 94c8 00000000 		.quad	.LVL558-1
 54051      00000000 
 54052 94d0 00000000 		.quad	.LVL561
 54052      00000000 
 54053 94d8 1300     		.value	0x13
 54054 94da 91       		.byte	0x91
 54055 94db 987E     		.sleb128 -232
 54056 94dd F6       		.byte	0xf6
 54057 94de 08       		.byte	0x8
 54058 94df 29       		.uleb128 0x29
 54059 94e0 F4       		.byte	0xf4
 54060 94e1 29       		.uleb128 0x29
 54061 94e2 08       		.byte	0x8
 54062 94e3 00000000 		.long	0
 54063 94e7 00408F40 		.long	0x408f4000
 54064 94eb 1E       		.byte	0x1e
 54065 94ec 9F       		.byte	0x9f
 54066 94ed 00000000 		.quad	.LVL561
 54066      00000000 
 54067 94f5 00000000 		.quad	.LVL562
 54067      00000000 
 54068 94fd 0B00     		.value	0xb
 54069 94ff F5       		.byte	0xf5
 54070 9500 11       		.uleb128 0x11
 54071 9501 29       		.uleb128 0x29
GAS LISTING /tmp/ccmMnd7l.s 			page 1335


 54072 9502 91       		.byte	0x91
 54073 9503 987E     		.sleb128 -232
 54074 9505 F6       		.byte	0xf6
 54075 9506 08       		.byte	0x8
 54076 9507 29       		.uleb128 0x29
 54077 9508 1E       		.byte	0x1e
 54078 9509 9F       		.byte	0x9f
 54079 950a 00000000 		.quad	.LVL562
 54079      00000000 
 54080 9512 00000000 		.quad	.LVL597
 54080      00000000 
 54081 951a 1300     		.value	0x13
 54082 951c 91       		.byte	0x91
 54083 951d 987E     		.sleb128 -232
 54084 951f F6       		.byte	0xf6
 54085 9520 08       		.byte	0x8
 54086 9521 29       		.uleb128 0x29
 54087 9522 F4       		.byte	0xf4
 54088 9523 29       		.uleb128 0x29
 54089 9524 08       		.byte	0x8
 54090 9525 00000000 		.long	0
 54091 9529 00408F40 		.long	0x408f4000
 54092 952d 1E       		.byte	0x1e
 54093 952e 9F       		.byte	0x9f
 54094 952f 00000000 		.quad	.LVL656
 54094      00000000 
 54095 9537 00000000 		.quad	.LVL659
 54095      00000000 
 54096 953f 1300     		.value	0x13
 54097 9541 91       		.byte	0x91
 54098 9542 987E     		.sleb128 -232
 54099 9544 F6       		.byte	0xf6
 54100 9545 08       		.byte	0x8
 54101 9546 29       		.uleb128 0x29
 54102 9547 F4       		.byte	0xf4
 54103 9548 29       		.uleb128 0x29
 54104 9549 08       		.byte	0x8
 54105 954a 00000000 		.long	0
 54106 954e 00408F40 		.long	0x408f4000
 54107 9552 1E       		.byte	0x1e
 54108 9553 9F       		.byte	0x9f
 54109 9554 00000000 		.quad	.LVL681
 54109      00000000 
 54110 955c 00000000 		.quad	.LVL688
 54110      00000000 
 54111 9564 1300     		.value	0x13
 54112 9566 91       		.byte	0x91
 54113 9567 987E     		.sleb128 -232
 54114 9569 F6       		.byte	0xf6
 54115 956a 08       		.byte	0x8
 54116 956b 29       		.uleb128 0x29
 54117 956c F4       		.byte	0xf4
 54118 956d 29       		.uleb128 0x29
 54119 956e 08       		.byte	0x8
 54120 956f 00000000 		.long	0
 54121 9573 00408F40 		.long	0x408f4000
 54122 9577 1E       		.byte	0x1e
GAS LISTING /tmp/ccmMnd7l.s 			page 1336


 54123 9578 9F       		.byte	0x9f
 54124 9579 00000000 		.quad	.LVL695
 54124      00000000 
 54125 9581 00000000 		.quad	.LVL699
 54125      00000000 
 54126 9589 1300     		.value	0x13
 54127 958b 91       		.byte	0x91
 54128 958c 987E     		.sleb128 -232
 54129 958e F6       		.byte	0xf6
 54130 958f 08       		.byte	0x8
 54131 9590 29       		.uleb128 0x29
 54132 9591 F4       		.byte	0xf4
 54133 9592 29       		.uleb128 0x29
 54134 9593 08       		.byte	0x8
 54135 9594 00000000 		.long	0
 54136 9598 00408F40 		.long	0x408f4000
 54137 959c 1E       		.byte	0x1e
 54138 959d 9F       		.byte	0x9f
 54139 959e 00000000 		.quad	0
 54139      00000000 
 54140 95a6 00000000 		.quad	0
 54140      00000000 
 54141              	.LLST617:
 54142 95ae 00000000 		.quad	.LVL559
 54142      00000000 
 54143 95b6 00000000 		.quad	.LVL597
 54143      00000000 
 54144 95be 0A00     		.value	0xa
 54145 95c0 03       		.byte	0x3
 54146 95c1 00000000 		.quad	.LC15
 54146      00000000 
 54147 95c9 9F       		.byte	0x9f
 54148 95ca 00000000 		.quad	.LVL656
 54148      00000000 
 54149 95d2 00000000 		.quad	.LVL659
 54149      00000000 
 54150 95da 0A00     		.value	0xa
 54151 95dc 03       		.byte	0x3
 54152 95dd 00000000 		.quad	.LC15
 54152      00000000 
 54153 95e5 9F       		.byte	0x9f
 54154 95e6 00000000 		.quad	.LVL681
 54154      00000000 
 54155 95ee 00000000 		.quad	.LVL688
 54155      00000000 
 54156 95f6 0A00     		.value	0xa
 54157 95f8 03       		.byte	0x3
 54158 95f9 00000000 		.quad	.LC15
 54158      00000000 
 54159 9601 9F       		.byte	0x9f
 54160 9602 00000000 		.quad	.LVL695
 54160      00000000 
 54161 960a 00000000 		.quad	.LVL699
 54161      00000000 
 54162 9612 0A00     		.value	0xa
 54163 9614 03       		.byte	0x3
 54164 9615 00000000 		.quad	.LC15
GAS LISTING /tmp/ccmMnd7l.s 			page 1337


 54164      00000000 
 54165 961d 9F       		.byte	0x9f
 54166 961e 00000000 		.quad	0
 54166      00000000 
 54167 9626 00000000 		.quad	0
 54167      00000000 
 54168              	.LLST618:
 54169 962e 00000000 		.quad	.LVL559
 54169      00000000 
 54170 9636 00000000 		.quad	.LVL560-1
 54170      00000000 
 54171 963e 0100     		.value	0x1
 54172 9640 50       		.byte	0x50
 54173 9641 00000000 		.quad	.LVL560-1
 54173      00000000 
 54174 9649 00000000 		.quad	.LVL564
 54174      00000000 
 54175 9651 0100     		.value	0x1
 54176 9653 53       		.byte	0x53
 54177 9654 00000000 		.quad	0
 54177      00000000 
 54178 965c 00000000 		.quad	0
 54178      00000000 
 54179              	.LLST619:
 54180 9664 00000000 		.quad	.LVL560
 54180      00000000 
 54181 966c 00000000 		.quad	.LVL562
 54181      00000000 
 54182 9674 1300     		.value	0x13
 54183 9676 91       		.byte	0x91
 54184 9677 887E     		.sleb128 -248
 54185 9679 F6       		.byte	0xf6
 54186 967a 08       		.byte	0x8
 54187 967b 29       		.uleb128 0x29
 54188 967c F4       		.byte	0xf4
 54189 967d 29       		.uleb128 0x29
 54190 967e 08       		.byte	0x8
 54191 967f 00000000 		.long	0
 54192 9683 00408F40 		.long	0x408f4000
 54193 9687 1E       		.byte	0x1e
 54194 9688 9F       		.byte	0x9f
 54195 9689 00000000 		.quad	.LVL562
 54195      00000000 
 54196 9691 00000000 		.quad	.LVL563-1
 54196      00000000 
 54197 9699 0100     		.value	0x1
 54198 969b 61       		.byte	0x61
 54199 969c 00000000 		.quad	.LVL563-1
 54199      00000000 
 54200 96a4 00000000 		.quad	.LVL597
 54200      00000000 
 54201 96ac 1300     		.value	0x13
 54202 96ae 91       		.byte	0x91
 54203 96af 887E     		.sleb128 -248
 54204 96b1 F6       		.byte	0xf6
 54205 96b2 08       		.byte	0x8
 54206 96b3 29       		.uleb128 0x29
GAS LISTING /tmp/ccmMnd7l.s 			page 1338


 54207 96b4 F4       		.byte	0xf4
 54208 96b5 29       		.uleb128 0x29
 54209 96b6 08       		.byte	0x8
 54210 96b7 00000000 		.long	0
 54211 96bb 00408F40 		.long	0x408f4000
 54212 96bf 1E       		.byte	0x1e
 54213 96c0 9F       		.byte	0x9f
 54214 96c1 00000000 		.quad	.LVL656
 54214      00000000 
 54215 96c9 00000000 		.quad	.LVL659
 54215      00000000 
 54216 96d1 1300     		.value	0x13
 54217 96d3 91       		.byte	0x91
 54218 96d4 887E     		.sleb128 -248
 54219 96d6 F6       		.byte	0xf6
 54220 96d7 08       		.byte	0x8
 54221 96d8 29       		.uleb128 0x29
 54222 96d9 F4       		.byte	0xf4
 54223 96da 29       		.uleb128 0x29
 54224 96db 08       		.byte	0x8
 54225 96dc 00000000 		.long	0
 54226 96e0 00408F40 		.long	0x408f4000
 54227 96e4 1E       		.byte	0x1e
 54228 96e5 9F       		.byte	0x9f
 54229 96e6 00000000 		.quad	.LVL681
 54229      00000000 
 54230 96ee 00000000 		.quad	.LVL688
 54230      00000000 
 54231 96f6 1300     		.value	0x13
 54232 96f8 91       		.byte	0x91
 54233 96f9 887E     		.sleb128 -248
 54234 96fb F6       		.byte	0xf6
 54235 96fc 08       		.byte	0x8
 54236 96fd 29       		.uleb128 0x29
 54237 96fe F4       		.byte	0xf4
 54238 96ff 29       		.uleb128 0x29
 54239 9700 08       		.byte	0x8
 54240 9701 00000000 		.long	0
 54241 9705 00408F40 		.long	0x408f4000
 54242 9709 1E       		.byte	0x1e
 54243 970a 9F       		.byte	0x9f
 54244 970b 00000000 		.quad	.LVL695
 54244      00000000 
 54245 9713 00000000 		.quad	.LVL699
 54245      00000000 
 54246 971b 1300     		.value	0x13
 54247 971d 91       		.byte	0x91
 54248 971e 887E     		.sleb128 -248
 54249 9720 F6       		.byte	0xf6
 54250 9721 08       		.byte	0x8
 54251 9722 29       		.uleb128 0x29
 54252 9723 F4       		.byte	0xf4
 54253 9724 29       		.uleb128 0x29
 54254 9725 08       		.byte	0x8
 54255 9726 00000000 		.long	0
 54256 972a 00408F40 		.long	0x408f4000
 54257 972e 1E       		.byte	0x1e
GAS LISTING /tmp/ccmMnd7l.s 			page 1339


 54258 972f 9F       		.byte	0x9f
 54259 9730 00000000 		.quad	0
 54259      00000000 
 54260 9738 00000000 		.quad	0
 54260      00000000 
 54261              	.LLST620:
 54262 9740 00000000 		.quad	.LVL564
 54262      00000000 
 54263 9748 00000000 		.quad	.LVL597
 54263      00000000 
 54264 9750 0A00     		.value	0xa
 54265 9752 03       		.byte	0x3
 54266 9753 00000000 		.quad	.LC16
 54266      00000000 
 54267 975b 9F       		.byte	0x9f
 54268 975c 00000000 		.quad	.LVL656
 54268      00000000 
 54269 9764 00000000 		.quad	.LVL659
 54269      00000000 
 54270 976c 0A00     		.value	0xa
 54271 976e 03       		.byte	0x3
 54272 976f 00000000 		.quad	.LC16
 54272      00000000 
 54273 9777 9F       		.byte	0x9f
 54274 9778 00000000 		.quad	.LVL681
 54274      00000000 
 54275 9780 00000000 		.quad	.LVL688
 54275      00000000 
 54276 9788 0A00     		.value	0xa
 54277 978a 03       		.byte	0x3
 54278 978b 00000000 		.quad	.LC16
 54278      00000000 
 54279 9793 9F       		.byte	0x9f
 54280 9794 00000000 		.quad	.LVL695
 54280      00000000 
 54281 979c 00000000 		.quad	.LVL699
 54281      00000000 
 54282 97a4 0A00     		.value	0xa
 54283 97a6 03       		.byte	0x3
 54284 97a7 00000000 		.quad	.LC16
 54284      00000000 
 54285 97af 9F       		.byte	0x9f
 54286 97b0 00000000 		.quad	0
 54286      00000000 
 54287 97b8 00000000 		.quad	0
 54287      00000000 
 54288              	.LLST621:
 54289 97c0 00000000 		.quad	.LVL564
 54289      00000000 
 54290 97c8 00000000 		.quad	.LVL565-1
 54290      00000000 
 54291 97d0 0100     		.value	0x1
 54292 97d2 50       		.byte	0x50
 54293 97d3 00000000 		.quad	.LVL565-1
 54293      00000000 
 54294 97db 00000000 		.quad	.LVL573
 54294      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1340


 54295 97e3 0100     		.value	0x1
 54296 97e5 53       		.byte	0x53
 54297 97e6 00000000 		.quad	.LVL656
 54297      00000000 
 54298 97ee 00000000 		.quad	.LVL659
 54298      00000000 
 54299 97f6 0100     		.value	0x1
 54300 97f8 53       		.byte	0x53
 54301 97f9 00000000 		.quad	0
 54301      00000000 
 54302 9801 00000000 		.quad	0
 54302      00000000 
 54303              	.LLST622:
 54304 9809 00000000 		.quad	.LVL565
 54304      00000000 
 54305 9811 00000000 		.quad	.LVL573
 54305      00000000 
 54306 9819 0100     		.value	0x1
 54307 981b 53       		.byte	0x53
 54308 981c 00000000 		.quad	.LVL656
 54308      00000000 
 54309 9824 00000000 		.quad	.LVL659
 54309      00000000 
 54310 982c 0100     		.value	0x1
 54311 982e 53       		.byte	0x53
 54312 982f 00000000 		.quad	0
 54312      00000000 
 54313 9837 00000000 		.quad	0
 54313      00000000 
 54314              	.LLST623:
 54315 983f 00000000 		.quad	.LVL565
 54315      00000000 
 54316 9847 00000000 		.quad	.LVL597
 54316      00000000 
 54317 984f 0200     		.value	0x2
 54318 9851 3A       		.byte	0x3a
 54319 9852 9F       		.byte	0x9f
 54320 9853 00000000 		.quad	.LVL656
 54320      00000000 
 54321 985b 00000000 		.quad	.LVL659
 54321      00000000 
 54322 9863 0200     		.value	0x2
 54323 9865 3A       		.byte	0x3a
 54324 9866 9F       		.byte	0x9f
 54325 9867 00000000 		.quad	.LVL681
 54325      00000000 
 54326 986f 00000000 		.quad	.LVL688
 54326      00000000 
 54327 9877 0200     		.value	0x2
 54328 9879 3A       		.byte	0x3a
 54329 987a 9F       		.byte	0x9f
 54330 987b 00000000 		.quad	.LVL695
 54330      00000000 
 54331 9883 00000000 		.quad	.LVL699
 54331      00000000 
 54332 988b 0200     		.value	0x2
 54333 988d 3A       		.byte	0x3a
GAS LISTING /tmp/ccmMnd7l.s 			page 1341


 54334 988e 9F       		.byte	0x9f
 54335 988f 00000000 		.quad	0
 54335      00000000 
 54336 9897 00000000 		.quad	0
 54336      00000000 
 54337              	.LLST624:
 54338 989f 00000000 		.quad	.LVL565
 54338      00000000 
 54339 98a7 00000000 		.quad	.LVL568
 54339      00000000 
 54340 98af 0A00     		.value	0xa
 54341 98b1 73       		.byte	0x73
 54342 98b2 00       		.sleb128 0
 54343 98b3 73       		.byte	0x73
 54344 98b4 00       		.sleb128 0
 54345 98b5 06       		.byte	0x6
 54346 98b6 48       		.byte	0x48
 54347 98b7 1C       		.byte	0x1c
 54348 98b8 06       		.byte	0x6
 54349 98b9 22       		.byte	0x22
 54350 98ba 9F       		.byte	0x9f
 54351 98bb 00000000 		.quad	.LVL656
 54351      00000000 
 54352 98c3 00000000 		.quad	.LVL657-1
 54352      00000000 
 54353 98cb 0600     		.value	0x6
 54354 98cd 73       		.byte	0x73
 54355 98ce 00       		.sleb128 0
 54356 98cf 70       		.byte	0x70
 54357 98d0 00       		.sleb128 0
 54358 98d1 22       		.byte	0x22
 54359 98d2 9F       		.byte	0x9f
 54360 98d3 00000000 		.quad	0
 54360      00000000 
 54361 98db 00000000 		.quad	0
 54361      00000000 
 54362              	.LLST625:
 54363 98e3 00000000 		.quad	.LVL566
 54363      00000000 
 54364 98eb 00000000 		.quad	.LVL595
 54364      00000000 
 54365 98f3 0100     		.value	0x1
 54366 98f5 56       		.byte	0x56
 54367 98f6 00000000 		.quad	.LVL656
 54367      00000000 
 54368 98fe 00000000 		.quad	.LVL659
 54368      00000000 
 54369 9906 0100     		.value	0x1
 54370 9908 56       		.byte	0x56
 54371 9909 00000000 		.quad	.LVL681
 54371      00000000 
 54372 9911 00000000 		.quad	.LVL688
 54372      00000000 
 54373 9919 0100     		.value	0x1
 54374 991b 56       		.byte	0x56
 54375 991c 00000000 		.quad	.LVL695
 54375      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1342


 54376 9924 00000000 		.quad	.LVL699
 54376      00000000 
 54377 992c 0100     		.value	0x1
 54378 992e 56       		.byte	0x56
 54379 992f 00000000 		.quad	0
 54379      00000000 
 54380 9937 00000000 		.quad	0
 54380      00000000 
 54381              	.LLST626:
 54382 993f 00000000 		.quad	.LVL567
 54382      00000000 
 54383 9947 00000000 		.quad	.LVL597
 54383      00000000 
 54384 994f 0200     		.value	0x2
 54385 9951 3A       		.byte	0x3a
 54386 9952 9F       		.byte	0x9f
 54387 9953 00000000 		.quad	.LVL656
 54387      00000000 
 54388 995b 00000000 		.quad	.LVL659
 54388      00000000 
 54389 9963 0200     		.value	0x2
 54390 9965 3A       		.byte	0x3a
 54391 9966 9F       		.byte	0x9f
 54392 9967 00000000 		.quad	.LVL681
 54392      00000000 
 54393 996f 00000000 		.quad	.LVL688
 54393      00000000 
 54394 9977 0200     		.value	0x2
 54395 9979 3A       		.byte	0x3a
 54396 997a 9F       		.byte	0x9f
 54397 997b 00000000 		.quad	.LVL695
 54397      00000000 
 54398 9983 00000000 		.quad	.LVL699
 54398      00000000 
 54399 998b 0200     		.value	0x2
 54400 998d 3A       		.byte	0x3a
 54401 998e 9F       		.byte	0x9f
 54402 998f 00000000 		.quad	0
 54402      00000000 
 54403 9997 00000000 		.quad	0
 54403      00000000 
 54404              	.LLST627:
 54405 999f 00000000 		.quad	.LVL567
 54405      00000000 
 54406 99a7 00000000 		.quad	.LVL595
 54406      00000000 
 54407 99af 0100     		.value	0x1
 54408 99b1 56       		.byte	0x56
 54409 99b2 00000000 		.quad	.LVL656
 54409      00000000 
 54410 99ba 00000000 		.quad	.LVL659
 54410      00000000 
 54411 99c2 0100     		.value	0x1
 54412 99c4 56       		.byte	0x56
 54413 99c5 00000000 		.quad	.LVL681
 54413      00000000 
 54414 99cd 00000000 		.quad	.LVL688
GAS LISTING /tmp/ccmMnd7l.s 			page 1343


 54414      00000000 
 54415 99d5 0100     		.value	0x1
 54416 99d7 56       		.byte	0x56
 54417 99d8 00000000 		.quad	.LVL695
 54417      00000000 
 54418 99e0 00000000 		.quad	.LVL699
 54418      00000000 
 54419 99e8 0100     		.value	0x1
 54420 99ea 56       		.byte	0x56
 54421 99eb 00000000 		.quad	0
 54421      00000000 
 54422 99f3 00000000 		.quad	0
 54422      00000000 
 54423              	.LLST628:
 54424 99fb 00000000 		.quad	.LVL656
 54424      00000000 
 54425 9a03 00000000 		.quad	.LVL659
 54425      00000000 
 54426 9a0b 0200     		.value	0x2
 54427 9a0d 3A       		.byte	0x3a
 54428 9a0e 9F       		.byte	0x9f
 54429 9a0f 00000000 		.quad	0
 54429      00000000 
 54430 9a17 00000000 		.quad	0
 54430      00000000 
 54431              	.LLST629:
 54432 9a1f 00000000 		.quad	.LVL656
 54432      00000000 
 54433 9a27 00000000 		.quad	.LVL659
 54433      00000000 
 54434 9a2f 0100     		.value	0x1
 54435 9a31 56       		.byte	0x56
 54436 9a32 00000000 		.quad	0
 54436      00000000 
 54437 9a3a 00000000 		.quad	0
 54437      00000000 
 54438              	.LLST630:
 54439 9a42 00000000 		.quad	.LVL569
 54439      00000000 
 54440 9a4a 00000000 		.quad	.LVL570-1
 54440      00000000 
 54441 9a52 0100     		.value	0x1
 54442 9a54 50       		.byte	0x50
 54443 9a55 00000000 		.quad	0
 54443      00000000 
 54444 9a5d 00000000 		.quad	0
 54444      00000000 
 54445              	.LLST631:
 54446 9a65 00000000 		.quad	.LVL570
 54446      00000000 
 54447 9a6d 00000000 		.quad	.LVL597
 54447      00000000 
 54448 9a75 0A00     		.value	0xa
 54449 9a77 03       		.byte	0x3
 54450 9a78 00000000 		.quad	.LC17
 54450      00000000 
 54451 9a80 9F       		.byte	0x9f
GAS LISTING /tmp/ccmMnd7l.s 			page 1344


 54452 9a81 00000000 		.quad	.LVL681
 54452      00000000 
 54453 9a89 00000000 		.quad	.LVL688
 54453      00000000 
 54454 9a91 0A00     		.value	0xa
 54455 9a93 03       		.byte	0x3
 54456 9a94 00000000 		.quad	.LC17
 54456      00000000 
 54457 9a9c 9F       		.byte	0x9f
 54458 9a9d 00000000 		.quad	.LVL695
 54458      00000000 
 54459 9aa5 00000000 		.quad	.LVL699
 54459      00000000 
 54460 9aad 0A00     		.value	0xa
 54461 9aaf 03       		.byte	0x3
 54462 9ab0 00000000 		.quad	.LC17
 54462      00000000 
 54463 9ab8 9F       		.byte	0x9f
 54464 9ab9 00000000 		.quad	0
 54464      00000000 
 54465 9ac1 00000000 		.quad	0
 54465      00000000 
 54466              	.LLST632:
 54467 9ac9 00000000 		.quad	.LVL571
 54467      00000000 
 54468 9ad1 00000000 		.quad	.LVL597
 54468      00000000 
 54469 9ad9 0300     		.value	0x3
 54470 9adb 91       		.byte	0x91
 54471 9adc 987E     		.sleb128 -232
 54472 9ade 00000000 		.quad	.LVL681
 54472      00000000 
 54473 9ae6 00000000 		.quad	.LVL688
 54473      00000000 
 54474 9aee 0300     		.value	0x3
 54475 9af0 91       		.byte	0x91
 54476 9af1 987E     		.sleb128 -232
 54477 9af3 00000000 		.quad	.LVL695
 54477      00000000 
 54478 9afb 00000000 		.quad	.LVL699
 54478      00000000 
 54479 9b03 0300     		.value	0x3
 54480 9b05 91       		.byte	0x91
 54481 9b06 987E     		.sleb128 -232
 54482 9b08 00000000 		.quad	0
 54482      00000000 
 54483 9b10 00000000 		.quad	0
 54483      00000000 
 54484              	.LLST633:
 54485 9b18 00000000 		.quad	.LVL573
 54485      00000000 
 54486 9b20 00000000 		.quad	.LVL597
 54486      00000000 
 54487 9b28 0A00     		.value	0xa
 54488 9b2a 03       		.byte	0x3
 54489 9b2b 00000000 		.quad	.LC18
 54489      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1345


 54490 9b33 9F       		.byte	0x9f
 54491 9b34 00000000 		.quad	.LVL681
 54491      00000000 
 54492 9b3c 00000000 		.quad	.LVL688
 54492      00000000 
 54493 9b44 0A00     		.value	0xa
 54494 9b46 03       		.byte	0x3
 54495 9b47 00000000 		.quad	.LC18
 54495      00000000 
 54496 9b4f 9F       		.byte	0x9f
 54497 9b50 00000000 		.quad	.LVL695
 54497      00000000 
 54498 9b58 00000000 		.quad	.LVL699
 54498      00000000 
 54499 9b60 0A00     		.value	0xa
 54500 9b62 03       		.byte	0x3
 54501 9b63 00000000 		.quad	.LC18
 54501      00000000 
 54502 9b6b 9F       		.byte	0x9f
 54503 9b6c 00000000 		.quad	0
 54503      00000000 
 54504 9b74 00000000 		.quad	0
 54504      00000000 
 54505              	.LLST634:
 54506 9b7c 00000000 		.quad	.LVL573
 54506      00000000 
 54507 9b84 00000000 		.quad	.LVL574-1
 54507      00000000 
 54508 9b8c 0100     		.value	0x1
 54509 9b8e 50       		.byte	0x50
 54510 9b8f 00000000 		.quad	.LVL574-1
 54510      00000000 
 54511 9b97 00000000 		.quad	.LVL580
 54511      00000000 
 54512 9b9f 0100     		.value	0x1
 54513 9ba1 53       		.byte	0x53
 54514 9ba2 00000000 		.quad	.LVL681
 54514      00000000 
 54515 9baa 00000000 		.quad	.LVL683
 54515      00000000 
 54516 9bb2 0100     		.value	0x1
 54517 9bb4 53       		.byte	0x53
 54518 9bb5 00000000 		.quad	0
 54518      00000000 
 54519 9bbd 00000000 		.quad	0
 54519      00000000 
 54520              	.LLST635:
 54521 9bc5 00000000 		.quad	.LVL574
 54521      00000000 
 54522 9bcd 00000000 		.quad	.LVL597
 54522      00000000 
 54523 9bd5 0300     		.value	0x3
 54524 9bd7 91       		.byte	0x91
 54525 9bd8 887E     		.sleb128 -248
 54526 9bda 00000000 		.quad	.LVL681
 54526      00000000 
 54527 9be2 00000000 		.quad	.LVL688
GAS LISTING /tmp/ccmMnd7l.s 			page 1346


 54527      00000000 
 54528 9bea 0300     		.value	0x3
 54529 9bec 91       		.byte	0x91
 54530 9bed 887E     		.sleb128 -248
 54531 9bef 00000000 		.quad	.LVL695
 54531      00000000 
 54532 9bf7 00000000 		.quad	.LVL699
 54532      00000000 
 54533 9bff 0300     		.value	0x3
 54534 9c01 91       		.byte	0x91
 54535 9c02 887E     		.sleb128 -248
 54536 9c04 00000000 		.quad	0
 54536      00000000 
 54537 9c0c 00000000 		.quad	0
 54537      00000000 
 54538              	.LLST636:
 54539 9c14 00000000 		.quad	.LVL575
 54539      00000000 
 54540 9c1c 00000000 		.quad	.LVL597
 54540      00000000 
 54541 9c24 0A00     		.value	0xa
 54542 9c26 03       		.byte	0x3
 54543 9c27 00000000 		.quad	.LC19
 54543      00000000 
 54544 9c2f 9F       		.byte	0x9f
 54545 9c30 00000000 		.quad	.LVL681
 54545      00000000 
 54546 9c38 00000000 		.quad	.LVL688
 54546      00000000 
 54547 9c40 0A00     		.value	0xa
 54548 9c42 03       		.byte	0x3
 54549 9c43 00000000 		.quad	.LC19
 54549      00000000 
 54550 9c4b 9F       		.byte	0x9f
 54551 9c4c 00000000 		.quad	.LVL695
 54551      00000000 
 54552 9c54 00000000 		.quad	.LVL699
 54552      00000000 
 54553 9c5c 0A00     		.value	0xa
 54554 9c5e 03       		.byte	0x3
 54555 9c5f 00000000 		.quad	.LC19
 54555      00000000 
 54556 9c67 9F       		.byte	0x9f
 54557 9c68 00000000 		.quad	0
 54557      00000000 
 54558 9c70 00000000 		.quad	0
 54558      00000000 
 54559              	.LLST637:
 54560 9c78 00000000 		.quad	.LVL575
 54560      00000000 
 54561 9c80 00000000 		.quad	.LVL576-1
 54561      00000000 
 54562 9c88 0100     		.value	0x1
 54563 9c8a 50       		.byte	0x50
 54564 9c8b 00000000 		.quad	0
 54564      00000000 
 54565 9c93 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1347


 54565      00000000 
 54566              	.LLST638:
 54567 9c9b 00000000 		.quad	.LVL576
 54567      00000000 
 54568 9ca3 00000000 		.quad	.LVL597
 54568      00000000 
 54569 9cab 0400     		.value	0x4
 54570 9cad 91       		.byte	0x91
 54571 9cae 987F     		.sleb128 -104
 54572 9cb0 9F       		.byte	0x9f
 54573 9cb1 00000000 		.quad	.LVL681
 54573      00000000 
 54574 9cb9 00000000 		.quad	.LVL688
 54574      00000000 
 54575 9cc1 0400     		.value	0x4
 54576 9cc3 91       		.byte	0x91
 54577 9cc4 987F     		.sleb128 -104
 54578 9cc6 9F       		.byte	0x9f
 54579 9cc7 00000000 		.quad	.LVL695
 54579      00000000 
 54580 9ccf 00000000 		.quad	.LVL699
 54580      00000000 
 54581 9cd7 0400     		.value	0x4
 54582 9cd9 91       		.byte	0x91
 54583 9cda 987F     		.sleb128 -104
 54584 9cdc 9F       		.byte	0x9f
 54585 9cdd 00000000 		.quad	0
 54585      00000000 
 54586 9ce5 00000000 		.quad	0
 54586      00000000 
 54587              	.LLST640:
 54588 9ced 00000000 		.quad	.LVL577
 54588      00000000 
 54589 9cf5 00000000 		.quad	.LVL579-1
 54589      00000000 
 54590 9cfd 0C00     		.value	0xc
 54591 9cff 91       		.byte	0x91
 54592 9d00 A87F     		.sleb128 -88
 54593 9d02 06       		.byte	0x6
 54594 9d03 91       		.byte	0x91
 54595 9d04 987F     		.sleb128 -104
 54596 9d06 06       		.byte	0x6
 54597 9d07 1C       		.byte	0x1c
 54598 9d08 38       		.byte	0x38
 54599 9d09 1B       		.byte	0x1b
 54600 9d0a 9F       		.byte	0x9f
 54601 9d0b 00000000 		.quad	0
 54601      00000000 
 54602 9d13 00000000 		.quad	0
 54602      00000000 
 54603              	.LLST641:
 54604 9d1b 00000000 		.quad	.LVL577
 54604      00000000 
 54605 9d23 00000000 		.quad	.LVL579-1
 54605      00000000 
 54606 9d2b 0100     		.value	0x1
 54607 9d2d 55       		.byte	0x55
GAS LISTING /tmp/ccmMnd7l.s 			page 1348


 54608 9d2e 00000000 		.quad	0
 54608      00000000 
 54609 9d36 00000000 		.quad	0
 54609      00000000 
 54610              	.LLST642:
 54611 9d3e 00000000 		.quad	.LVL578
 54611      00000000 
 54612 9d46 00000000 		.quad	.LVL579-1
 54612      00000000 
 54613 9d4e 0C00     		.value	0xc
 54614 9d50 91       		.byte	0x91
 54615 9d51 A87F     		.sleb128 -88
 54616 9d53 06       		.byte	0x6
 54617 9d54 91       		.byte	0x91
 54618 9d55 987F     		.sleb128 -104
 54619 9d57 06       		.byte	0x6
 54620 9d58 1C       		.byte	0x1c
 54621 9d59 38       		.byte	0x38
 54622 9d5a 1B       		.byte	0x1b
 54623 9d5b 9F       		.byte	0x9f
 54624 9d5c 00000000 		.quad	0
 54624      00000000 
 54625 9d64 00000000 		.quad	0
 54625      00000000 
 54626              	.LLST643:
 54627 9d6c 00000000 		.quad	.LVL578
 54627      00000000 
 54628 9d74 00000000 		.quad	.LVL579-1
 54628      00000000 
 54629 9d7c 0100     		.value	0x1
 54630 9d7e 55       		.byte	0x55
 54631 9d7f 00000000 		.quad	0
 54631      00000000 
 54632 9d87 00000000 		.quad	0
 54632      00000000 
 54633              	.LLST646:
 54634 9d8f 00000000 		.quad	.LVL580
 54634      00000000 
 54635 9d97 00000000 		.quad	.LVL597
 54635      00000000 
 54636 9d9f 0600     		.value	0x6
 54637 9da1 F2       		.byte	0xf2
 54638 9da2 00000000 		.long	.Ldebug_info0+78276
 54639 9da6 00       		.sleb128 0
 54640 9da7 00000000 		.quad	0
 54640      00000000 
 54641 9daf 00000000 		.quad	0
 54641      00000000 
 54642              	.LLST647:
 54643 9db7 00000000 		.quad	.LVL580
 54643      00000000 
 54644 9dbf 00000000 		.quad	.LVL596
 54644      00000000 
 54645 9dc7 0100     		.value	0x1
 54646 9dc9 5F       		.byte	0x5f
 54647 9dca 00000000 		.quad	0
 54647      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1349


 54648 9dd2 00000000 		.quad	0
 54648      00000000 
 54649              	.LLST648:
 54650 9dda 00000000 		.quad	.LVL681
 54650      00000000 
 54651 9de2 00000000 		.quad	.LVL688
 54651      00000000 
 54652 9dea 0A00     		.value	0xa
 54653 9dec 03       		.byte	0x3
 54654 9ded 00000000 		.quad	.LC28
 54654      00000000 
 54655 9df5 9F       		.byte	0x9f
 54656 9df6 00000000 		.quad	.LVL695
 54656      00000000 
 54657 9dfe 00000000 		.quad	.LVL699
 54657      00000000 
 54658 9e06 0A00     		.value	0xa
 54659 9e08 03       		.byte	0x3
 54660 9e09 00000000 		.quad	.LC28
 54660      00000000 
 54661 9e11 9F       		.byte	0x9f
 54662 9e12 00000000 		.quad	0
 54662      00000000 
 54663 9e1a 00000000 		.quad	0
 54663      00000000 
 54664              	.LLST649:
 54665 9e22 00000000 		.quad	.LVL682
 54665      00000000 
 54666 9e2a 00000000 		.quad	.LVL688
 54666      00000000 
 54667 9e32 0200     		.value	0x2
 54668 9e34 3A       		.byte	0x3a
 54669 9e35 9F       		.byte	0x9f
 54670 9e36 00000000 		.quad	.LVL695
 54670      00000000 
 54671 9e3e 00000000 		.quad	.LVL699
 54671      00000000 
 54672 9e46 0200     		.value	0x2
 54673 9e48 3A       		.byte	0x3a
 54674 9e49 9F       		.byte	0x9f
 54675 9e4a 00000000 		.quad	0
 54675      00000000 
 54676 9e52 00000000 		.quad	0
 54676      00000000 
 54677              	.LLST650:
 54678 9e5a 00000000 		.quad	.LVL683
 54678      00000000 
 54679 9e62 00000000 		.quad	.LVL688
 54679      00000000 
 54680 9e6a 0100     		.value	0x1
 54681 9e6c 53       		.byte	0x53
 54682 9e6d 00000000 		.quad	.LVL695
 54682      00000000 
 54683 9e75 00000000 		.quad	.LVL699
 54683      00000000 
 54684 9e7d 0100     		.value	0x1
 54685 9e7f 53       		.byte	0x53
GAS LISTING /tmp/ccmMnd7l.s 			page 1350


 54686 9e80 00000000 		.quad	0
 54686      00000000 
 54687 9e88 00000000 		.quad	0
 54687      00000000 
 54688              	.LLST651:
 54689 9e90 00000000 		.quad	.LVL684
 54689      00000000 
 54690 9e98 00000000 		.quad	.LVL688
 54690      00000000 
 54691 9ea0 0200     		.value	0x2
 54692 9ea2 3A       		.byte	0x3a
 54693 9ea3 9F       		.byte	0x9f
 54694 9ea4 00000000 		.quad	.LVL695
 54694      00000000 
 54695 9eac 00000000 		.quad	.LVL698
 54695      00000000 
 54696 9eb4 0200     		.value	0x2
 54697 9eb6 3A       		.byte	0x3a
 54698 9eb7 9F       		.byte	0x9f
 54699 9eb8 00000000 		.quad	0
 54699      00000000 
 54700 9ec0 00000000 		.quad	0
 54700      00000000 
 54701              	.LLST652:
 54702 9ec8 00000000 		.quad	.LVL684
 54702      00000000 
 54703 9ed0 00000000 		.quad	.LVL688
 54703      00000000 
 54704 9ed8 0100     		.value	0x1
 54705 9eda 53       		.byte	0x53
 54706 9edb 00000000 		.quad	.LVL695
 54706      00000000 
 54707 9ee3 00000000 		.quad	.LVL698
 54707      00000000 
 54708 9eeb 0100     		.value	0x1
 54709 9eed 53       		.byte	0x53
 54710 9eee 00000000 		.quad	0
 54710      00000000 
 54711 9ef6 00000000 		.quad	0
 54711      00000000 
 54712              	.LLST653:
 54713 9efe 00000000 		.quad	.LVL695
 54713      00000000 
 54714 9f06 00000000 		.quad	.LVL698
 54714      00000000 
 54715 9f0e 0200     		.value	0x2
 54716 9f10 3A       		.byte	0x3a
 54717 9f11 9F       		.byte	0x9f
 54718 9f12 00000000 		.quad	0
 54718      00000000 
 54719 9f1a 00000000 		.quad	0
 54719      00000000 
 54720              	.LLST654:
 54721 9f22 00000000 		.quad	.LVL695
 54721      00000000 
 54722 9f2a 00000000 		.quad	.LVL698
 54722      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1351


 54723 9f32 0100     		.value	0x1
 54724 9f34 53       		.byte	0x53
 54725 9f35 00000000 		.quad	0
 54725      00000000 
 54726 9f3d 00000000 		.quad	0
 54726      00000000 
 54727              	.LLST655:
 54728 9f45 00000000 		.quad	.LVL686
 54728      00000000 
 54729 9f4d 00000000 		.quad	.LVL687-1
 54729      00000000 
 54730 9f55 0100     		.value	0x1
 54731 9f57 50       		.byte	0x50
 54732 9f58 00000000 		.quad	0
 54732      00000000 
 54733 9f60 00000000 		.quad	0
 54733      00000000 
 54734              	.LLST656:
 54735 9f68 00000000 		.quad	.LVL701
 54735      00000000 
 54736 9f70 00000000 		.quad	.LVL703
 54736      00000000 
 54737 9f78 0600     		.value	0x6
 54738 9f7a F2       		.byte	0xf2
 54739 9f7b 00000000 		.long	.Ldebug_info0+78276
 54740 9f7f 00       		.sleb128 0
 54741 9f80 00000000 		.quad	0
 54741      00000000 
 54742 9f88 00000000 		.quad	0
 54742      00000000 
 54743              	.LLST657:
 54744 9f90 00000000 		.quad	.LVL702
 54744      00000000 
 54745 9f98 00000000 		.quad	.LVL703
 54745      00000000 
 54746 9fa0 0100     		.value	0x1
 54747 9fa2 5F       		.byte	0x5f
 54748 9fa3 00000000 		.quad	0
 54748      00000000 
 54749 9fab 00000000 		.quad	0
 54749      00000000 
 54750              	.LLST658:
 54751 9fb3 00000000 		.quad	.LVL584
 54751      00000000 
 54752 9fbb 00000000 		.quad	.LVL597
 54752      00000000 
 54753 9fc3 0600     		.value	0x6
 54754 9fc5 F2       		.byte	0xf2
 54755 9fc6 00000000 		.long	.Ldebug_info0+78228
 54756 9fca 00       		.sleb128 0
 54757 9fcb 00000000 		.quad	0
 54757      00000000 
 54758 9fd3 00000000 		.quad	0
 54758      00000000 
 54759              	.LLST659:
 54760 9fdb 00000000 		.quad	.LVL585
 54760      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1352


 54761 9fe3 00000000 		.quad	.LVL586
 54761      00000000 
 54762 9feb 0100     		.value	0x1
 54763 9fed 5E       		.byte	0x5e
 54764 9fee 00000000 		.quad	0
 54764      00000000 
 54765 9ff6 00000000 		.quad	0
 54765      00000000 
 54766              	.LLST660:
 54767 9ffe 00000000 		.quad	.LVL703
 54767      00000000 
 54768 a006 00000000 		.quad	.LVL706
 54768      00000000 
 54769 a00e 0600     		.value	0x6
 54770 a010 F2       		.byte	0xf2
 54771 a011 00000000 		.long	.Ldebug_info0+78228
 54772 a015 00       		.sleb128 0
 54773 a016 00000000 		.quad	0
 54773      00000000 
 54774 a01e 00000000 		.quad	0
 54774      00000000 
 54775              	.LLST661:
 54776 a026 00000000 		.quad	.LVL704
 54776      00000000 
 54777 a02e 00000000 		.quad	.LVL706
 54777      00000000 
 54778 a036 0100     		.value	0x1
 54779 a038 5E       		.byte	0x5e
 54780 a039 00000000 		.quad	0
 54780      00000000 
 54781 a041 00000000 		.quad	0
 54781      00000000 
 54782              	.LLST662:
 54783 a049 00000000 		.quad	.LVL590
 54783      00000000 
 54784 a051 00000000 		.quad	.LVL591-1
 54784      00000000 
 54785 a059 0100     		.value	0x1
 54786 a05b 50       		.byte	0x50
 54787 a05c 00000000 		.quad	0
 54787      00000000 
 54788 a064 00000000 		.quad	0
 54788      00000000 
 54789              	.LLST663:
 54790 a06c 00000000 		.quad	.LVL591
 54790      00000000 
 54791 a074 00000000 		.quad	.LVL597
 54791      00000000 
 54792 a07c 0400     		.value	0x4
 54793 a07e 91       		.byte	0x91
 54794 a07f C07E     		.sleb128 -192
 54795 a081 9F       		.byte	0x9f
 54796 a082 00000000 		.quad	0
 54796      00000000 
 54797 a08a 00000000 		.quad	0
 54797      00000000 
 54798              	.LLST665:
GAS LISTING /tmp/ccmMnd7l.s 			page 1353


 54799 a092 00000000 		.quad	.LVL592
 54799      00000000 
 54800 a09a 00000000 		.quad	.LVL594-1
 54800      00000000 
 54801 a0a2 0C00     		.value	0xc
 54802 a0a4 91       		.byte	0x91
 54803 a0a5 D07E     		.sleb128 -176
 54804 a0a7 06       		.byte	0x6
 54805 a0a8 91       		.byte	0x91
 54806 a0a9 C07E     		.sleb128 -192
 54807 a0ab 06       		.byte	0x6
 54808 a0ac 1C       		.byte	0x1c
 54809 a0ad 34       		.byte	0x34
 54810 a0ae 1B       		.byte	0x1b
 54811 a0af 9F       		.byte	0x9f
 54812 a0b0 00000000 		.quad	0
 54812      00000000 
 54813 a0b8 00000000 		.quad	0
 54813      00000000 
 54814              	.LLST666:
 54815 a0c0 00000000 		.quad	.LVL592
 54815      00000000 
 54816 a0c8 00000000 		.quad	.LVL594-1
 54816      00000000 
 54817 a0d0 0300     		.value	0x3
 54818 a0d2 91       		.byte	0x91
 54819 a0d3 C07E     		.sleb128 -192
 54820 a0d5 00000000 		.quad	0
 54820      00000000 
 54821 a0dd 00000000 		.quad	0
 54821      00000000 
 54822              	.LLST667:
 54823 a0e5 00000000 		.quad	.LVL593
 54823      00000000 
 54824 a0ed 00000000 		.quad	.LVL594-1
 54824      00000000 
 54825 a0f5 0C00     		.value	0xc
 54826 a0f7 91       		.byte	0x91
 54827 a0f8 D07E     		.sleb128 -176
 54828 a0fa 06       		.byte	0x6
 54829 a0fb 91       		.byte	0x91
 54830 a0fc C07E     		.sleb128 -192
 54831 a0fe 06       		.byte	0x6
 54832 a0ff 1C       		.byte	0x1c
 54833 a100 34       		.byte	0x34
 54834 a101 1B       		.byte	0x1b
 54835 a102 9F       		.byte	0x9f
 54836 a103 00000000 		.quad	0
 54836      00000000 
 54837 a10b 00000000 		.quad	0
 54837      00000000 
 54838              	.LLST668:
 54839 a113 00000000 		.quad	.LVL593
 54839      00000000 
 54840 a11b 00000000 		.quad	.LVL594-1
 54840      00000000 
 54841 a123 0300     		.value	0x3
GAS LISTING /tmp/ccmMnd7l.s 			page 1354


 54842 a125 91       		.byte	0x91
 54843 a126 C07E     		.sleb128 -192
 54844 a128 00000000 		.quad	0
 54844      00000000 
 54845 a130 00000000 		.quad	0
 54845      00000000 
 54846              	.LLST671:
 54847 a138 00000000 		.quad	.LVL645
 54847      00000000 
 54848 a140 00000000 		.quad	.LVL649
 54848      00000000 
 54849 a148 0400     		.value	0x4
 54850 a14a 91       		.byte	0x91
 54851 a14b C07E     		.sleb128 -192
 54852 a14d 9F       		.byte	0x9f
 54853 a14e 00000000 		.quad	0
 54853      00000000 
 54854 a156 00000000 		.quad	0
 54854      00000000 
 54855              	.LLST673:
 54856 a15e 00000000 		.quad	.LVL646
 54856      00000000 
 54857 a166 00000000 		.quad	.LVL648-1
 54857      00000000 
 54858 a16e 0C00     		.value	0xc
 54859 a170 91       		.byte	0x91
 54860 a171 D07E     		.sleb128 -176
 54861 a173 06       		.byte	0x6
 54862 a174 91       		.byte	0x91
 54863 a175 C07E     		.sleb128 -192
 54864 a177 06       		.byte	0x6
 54865 a178 1C       		.byte	0x1c
 54866 a179 34       		.byte	0x34
 54867 a17a 1B       		.byte	0x1b
 54868 a17b 9F       		.byte	0x9f
 54869 a17c 00000000 		.quad	0
 54869      00000000 
 54870 a184 00000000 		.quad	0
 54870      00000000 
 54871              	.LLST674:
 54872 a18c 00000000 		.quad	.LVL646
 54872      00000000 
 54873 a194 00000000 		.quad	.LVL648-1
 54873      00000000 
 54874 a19c 0300     		.value	0x3
 54875 a19e 91       		.byte	0x91
 54876 a19f C07E     		.sleb128 -192
 54877 a1a1 00000000 		.quad	0
 54877      00000000 
 54878 a1a9 00000000 		.quad	0
 54878      00000000 
 54879              	.LLST675:
 54880 a1b1 00000000 		.quad	.LVL647
 54880      00000000 
 54881 a1b9 00000000 		.quad	.LVL648-1
 54881      00000000 
 54882 a1c1 0C00     		.value	0xc
GAS LISTING /tmp/ccmMnd7l.s 			page 1355


 54883 a1c3 91       		.byte	0x91
 54884 a1c4 D07E     		.sleb128 -176
 54885 a1c6 06       		.byte	0x6
 54886 a1c7 91       		.byte	0x91
 54887 a1c8 C07E     		.sleb128 -192
 54888 a1ca 06       		.byte	0x6
 54889 a1cb 1C       		.byte	0x1c
 54890 a1cc 34       		.byte	0x34
 54891 a1cd 1B       		.byte	0x1b
 54892 a1ce 9F       		.byte	0x9f
 54893 a1cf 00000000 		.quad	0
 54893      00000000 
 54894 a1d7 00000000 		.quad	0
 54894      00000000 
 54895              	.LLST676:
 54896 a1df 00000000 		.quad	.LVL647
 54896      00000000 
 54897 a1e7 00000000 		.quad	.LVL648-1
 54897      00000000 
 54898 a1ef 0300     		.value	0x3
 54899 a1f1 91       		.byte	0x91
 54900 a1f2 C07E     		.sleb128 -192
 54901 a1f4 00000000 		.quad	0
 54901      00000000 
 54902 a1fc 00000000 		.quad	0
 54902      00000000 
 54903              		.section	.debug_aranges,"",@progbits
 54904 0000 AC000000 		.long	0xac
 54905 0004 0200     		.value	0x2
 54906 0006 00000000 		.long	.Ldebug_info0
 54907 000a 08       		.byte	0x8
 54908 000b 00       		.byte	0
 54909 000c 0000     		.value	0
 54910 000e 0000     		.value	0
 54911 0010 00000000 		.quad	.Ltext0
 54911      00000000 
 54912 0018 2F020000 		.quad	.Letext0-.Ltext0
 54912      00000000 
 54913 0020 00000000 		.quad	.LFB1390
 54913      00000000 
 54914 0028 03000000 		.quad	.LFE1390-.LFB1390
 54914      00000000 
 54915 0030 00000000 		.quad	.LFB6548
 54915      00000000 
 54916 0038 4D010000 		.quad	.LFE6548-.LFB6548
 54916      00000000 
 54917 0040 00000000 		.quad	.LFB6521
 54917      00000000 
 54918 0048 31040000 		.quad	.LFE6521-.LFB6521
 54918      00000000 
 54919 0050 00000000 		.quad	.LFB6050
 54919      00000000 
 54920 0058 8D030000 		.quad	.LFE6050-.LFB6050
 54920      00000000 
 54921 0060 00000000 		.quad	.LFB6560
 54921      00000000 
 54922 0068 08010000 		.quad	.LFE6560-.LFB6560
GAS LISTING /tmp/ccmMnd7l.s 			page 1356


 54922      00000000 
 54923 0070 00000000 		.quad	.LFB6046
 54923      00000000 
 54924 0078 40040000 		.quad	.LFE6046-.LFB6046
 54924      00000000 
 54925 0080 00000000 		.quad	.LFB6051
 54925      00000000 
 54926 0088 500F0000 		.quad	.LFE6051-.LFB6051
 54926      00000000 
 54927 0090 00000000 		.quad	.LFB6592
 54927      00000000 
 54928 0098 2E000000 		.quad	.LFE6592-.LFB6592
 54928      00000000 
 54929 00a0 00000000 		.quad	0
 54929      00000000 
 54930 00a8 00000000 		.quad	0
 54930      00000000 
 54931              		.section	.debug_ranges,"",@progbits
 54932              	.Ldebug_ranges0:
 54933 0000 00000000 		.quad	.LBB3170
 54933      00000000 
 54934 0008 00000000 		.quad	.LBE3170
 54934      00000000 
 54935 0010 00000000 		.quad	.LBB3177
 54935      00000000 
 54936 0018 00000000 		.quad	.LBE3177
 54936      00000000 
 54937 0020 00000000 		.quad	0
 54937      00000000 
 54938 0028 00000000 		.quad	0
 54938      00000000 
 54939 0030 00000000 		.quad	.LBB3178
 54939      00000000 
 54940 0038 00000000 		.quad	.LBE3178
 54940      00000000 
 54941 0040 00000000 		.quad	.LBB3333
 54941      00000000 
 54942 0048 00000000 		.quad	.LBE3333
 54942      00000000 
 54943 0050 00000000 		.quad	.LBB3334
 54943      00000000 
 54944 0058 00000000 		.quad	.LBE3334
 54944      00000000 
 54945 0060 00000000 		.quad	0
 54945      00000000 
 54946 0068 00000000 		.quad	0
 54946      00000000 
 54947 0070 00000000 		.quad	.LBB3183
 54947      00000000 
 54948 0078 00000000 		.quad	.LBE3183
 54948      00000000 
 54949 0080 00000000 		.quad	.LBB3330
 54949      00000000 
 54950 0088 00000000 		.quad	.LBE3330
 54950      00000000 
 54951 0090 00000000 		.quad	0
 54951      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1357


 54952 0098 00000000 		.quad	0
 54952      00000000 
 54953 00a0 00000000 		.quad	.LBB3184
 54953      00000000 
 54954 00a8 00000000 		.quad	.LBE3184
 54954      00000000 
 54955 00b0 00000000 		.quad	.LBB3329
 54955      00000000 
 54956 00b8 00000000 		.quad	.LBE3329
 54956      00000000 
 54957 00c0 00000000 		.quad	0
 54957      00000000 
 54958 00c8 00000000 		.quad	0
 54958      00000000 
 54959 00d0 00000000 		.quad	.LBB3187
 54959      00000000 
 54960 00d8 00000000 		.quad	.LBE3187
 54960      00000000 
 54961 00e0 00000000 		.quad	.LBB3325
 54961      00000000 
 54962 00e8 00000000 		.quad	.LBE3325
 54962      00000000 
 54963 00f0 00000000 		.quad	0
 54963      00000000 
 54964 00f8 00000000 		.quad	0
 54964      00000000 
 54965 0100 00000000 		.quad	.LBB3189
 54965      00000000 
 54966 0108 00000000 		.quad	.LBE3189
 54966      00000000 
 54967 0110 00000000 		.quad	.LBB3324
 54967      00000000 
 54968 0118 00000000 		.quad	.LBE3324
 54968      00000000 
 54969 0120 00000000 		.quad	0
 54969      00000000 
 54970 0128 00000000 		.quad	0
 54970      00000000 
 54971 0130 00000000 		.quad	.LBB3190
 54971      00000000 
 54972 0138 00000000 		.quad	.LBE3190
 54972      00000000 
 54973 0140 00000000 		.quad	.LBB3322
 54973      00000000 
 54974 0148 00000000 		.quad	.LBE3322
 54974      00000000 
 54975 0150 00000000 		.quad	.LBB3323
 54975      00000000 
 54976 0158 00000000 		.quad	.LBE3323
 54976      00000000 
 54977 0160 00000000 		.quad	0
 54977      00000000 
 54978 0168 00000000 		.quad	0
 54978      00000000 
 54979 0170 00000000 		.quad	.LBB3191
 54979      00000000 
 54980 0178 00000000 		.quad	.LBE3191
GAS LISTING /tmp/ccmMnd7l.s 			page 1358


 54980      00000000 
 54981 0180 00000000 		.quad	.LBB3320
 54981      00000000 
 54982 0188 00000000 		.quad	.LBE3320
 54982      00000000 
 54983 0190 00000000 		.quad	.LBB3321
 54983      00000000 
 54984 0198 00000000 		.quad	.LBE3321
 54984      00000000 
 54985 01a0 00000000 		.quad	0
 54985      00000000 
 54986 01a8 00000000 		.quad	0
 54986      00000000 
 54987 01b0 00000000 		.quad	.LBB3194
 54987      00000000 
 54988 01b8 00000000 		.quad	.LBE3194
 54988      00000000 
 54989 01c0 00000000 		.quad	.LBB3313
 54989      00000000 
 54990 01c8 00000000 		.quad	.LBE3313
 54990      00000000 
 54991 01d0 00000000 		.quad	.LBB3315
 54991      00000000 
 54992 01d8 00000000 		.quad	.LBE3315
 54992      00000000 
 54993 01e0 00000000 		.quad	0
 54993      00000000 
 54994 01e8 00000000 		.quad	0
 54994      00000000 
 54995 01f0 00000000 		.quad	.LBB3195
 54995      00000000 
 54996 01f8 00000000 		.quad	.LBE3195
 54996      00000000 
 54997 0200 00000000 		.quad	.LBB3310
 54997      00000000 
 54998 0208 00000000 		.quad	.LBE3310
 54998      00000000 
 54999 0210 00000000 		.quad	.LBB3311
 54999      00000000 
 55000 0218 00000000 		.quad	.LBE3311
 55000      00000000 
 55001 0220 00000000 		.quad	.LBB3312
 55001      00000000 
 55002 0228 00000000 		.quad	.LBE3312
 55002      00000000 
 55003 0230 00000000 		.quad	0
 55003      00000000 
 55004 0238 00000000 		.quad	0
 55004      00000000 
 55005 0240 00000000 		.quad	.LBB3196
 55005      00000000 
 55006 0248 00000000 		.quad	.LBE3196
 55006      00000000 
 55007 0250 00000000 		.quad	.LBB3307
 55007      00000000 
 55008 0258 00000000 		.quad	.LBE3307
 55008      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1359


 55009 0260 00000000 		.quad	.LBB3308
 55009      00000000 
 55010 0268 00000000 		.quad	.LBE3308
 55010      00000000 
 55011 0270 00000000 		.quad	.LBB3309
 55011      00000000 
 55012 0278 00000000 		.quad	.LBE3309
 55012      00000000 
 55013 0280 00000000 		.quad	0
 55013      00000000 
 55014 0288 00000000 		.quad	0
 55014      00000000 
 55015 0290 00000000 		.quad	.LBB3199
 55015      00000000 
 55016 0298 00000000 		.quad	.LBE3199
 55016      00000000 
 55017 02a0 00000000 		.quad	.LBB3297
 55017      00000000 
 55018 02a8 00000000 		.quad	.LBE3297
 55018      00000000 
 55019 02b0 00000000 		.quad	.LBB3300
 55019      00000000 
 55020 02b8 00000000 		.quad	.LBE3300
 55020      00000000 
 55021 02c0 00000000 		.quad	0
 55021      00000000 
 55022 02c8 00000000 		.quad	0
 55022      00000000 
 55023 02d0 00000000 		.quad	.LBB3200
 55023      00000000 
 55024 02d8 00000000 		.quad	.LBE3200
 55024      00000000 
 55025 02e0 00000000 		.quad	.LBB3294
 55025      00000000 
 55026 02e8 00000000 		.quad	.LBE3294
 55026      00000000 
 55027 02f0 00000000 		.quad	.LBB3295
 55027      00000000 
 55028 02f8 00000000 		.quad	.LBE3295
 55028      00000000 
 55029 0300 00000000 		.quad	.LBB3296
 55029      00000000 
 55030 0308 00000000 		.quad	.LBE3296
 55030      00000000 
 55031 0310 00000000 		.quad	0
 55031      00000000 
 55032 0318 00000000 		.quad	0
 55032      00000000 
 55033 0320 00000000 		.quad	.LBB3201
 55033      00000000 
 55034 0328 00000000 		.quad	.LBE3201
 55034      00000000 
 55035 0330 00000000 		.quad	.LBB3291
 55035      00000000 
 55036 0338 00000000 		.quad	.LBE3291
 55036      00000000 
 55037 0340 00000000 		.quad	.LBB3292
GAS LISTING /tmp/ccmMnd7l.s 			page 1360


 55037      00000000 
 55038 0348 00000000 		.quad	.LBE3292
 55038      00000000 
 55039 0350 00000000 		.quad	.LBB3293
 55039      00000000 
 55040 0358 00000000 		.quad	.LBE3293
 55040      00000000 
 55041 0360 00000000 		.quad	0
 55041      00000000 
 55042 0368 00000000 		.quad	0
 55042      00000000 
 55043 0370 00000000 		.quad	.LBB3204
 55043      00000000 
 55044 0378 00000000 		.quad	.LBE3204
 55044      00000000 
 55045 0380 00000000 		.quad	.LBB3281
 55045      00000000 
 55046 0388 00000000 		.quad	.LBE3281
 55046      00000000 
 55047 0390 00000000 		.quad	.LBB3284
 55047      00000000 
 55048 0398 00000000 		.quad	.LBE3284
 55048      00000000 
 55049 03a0 00000000 		.quad	0
 55049      00000000 
 55050 03a8 00000000 		.quad	0
 55050      00000000 
 55051 03b0 00000000 		.quad	.LBB3205
 55051      00000000 
 55052 03b8 00000000 		.quad	.LBE3205
 55052      00000000 
 55053 03c0 00000000 		.quad	.LBB3278
 55053      00000000 
 55054 03c8 00000000 		.quad	.LBE3278
 55054      00000000 
 55055 03d0 00000000 		.quad	.LBB3279
 55055      00000000 
 55056 03d8 00000000 		.quad	.LBE3279
 55056      00000000 
 55057 03e0 00000000 		.quad	.LBB3280
 55057      00000000 
 55058 03e8 00000000 		.quad	.LBE3280
 55058      00000000 
 55059 03f0 00000000 		.quad	0
 55059      00000000 
 55060 03f8 00000000 		.quad	0
 55060      00000000 
 55061 0400 00000000 		.quad	.LBB3206
 55061      00000000 
 55062 0408 00000000 		.quad	.LBE3206
 55062      00000000 
 55063 0410 00000000 		.quad	.LBB3275
 55063      00000000 
 55064 0418 00000000 		.quad	.LBE3275
 55064      00000000 
 55065 0420 00000000 		.quad	.LBB3276
 55065      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1361


 55066 0428 00000000 		.quad	.LBE3276
 55066      00000000 
 55067 0430 00000000 		.quad	.LBB3277
 55067      00000000 
 55068 0438 00000000 		.quad	.LBE3277
 55068      00000000 
 55069 0440 00000000 		.quad	0
 55069      00000000 
 55070 0448 00000000 		.quad	0
 55070      00000000 
 55071 0450 00000000 		.quad	.LBB3209
 55071      00000000 
 55072 0458 00000000 		.quad	.LBE3209
 55072      00000000 
 55073 0460 00000000 		.quad	.LBB3265
 55073      00000000 
 55074 0468 00000000 		.quad	.LBE3265
 55074      00000000 
 55075 0470 00000000 		.quad	.LBB3268
 55075      00000000 
 55076 0478 00000000 		.quad	.LBE3268
 55076      00000000 
 55077 0480 00000000 		.quad	0
 55077      00000000 
 55078 0488 00000000 		.quad	0
 55078      00000000 
 55079 0490 00000000 		.quad	.LBB3210
 55079      00000000 
 55080 0498 00000000 		.quad	.LBE3210
 55080      00000000 
 55081 04a0 00000000 		.quad	.LBB3262
 55081      00000000 
 55082 04a8 00000000 		.quad	.LBE3262
 55082      00000000 
 55083 04b0 00000000 		.quad	.LBB3263
 55083      00000000 
 55084 04b8 00000000 		.quad	.LBE3263
 55084      00000000 
 55085 04c0 00000000 		.quad	.LBB3264
 55085      00000000 
 55086 04c8 00000000 		.quad	.LBE3264
 55086      00000000 
 55087 04d0 00000000 		.quad	0
 55087      00000000 
 55088 04d8 00000000 		.quad	0
 55088      00000000 
 55089 04e0 00000000 		.quad	.LBB3211
 55089      00000000 
 55090 04e8 00000000 		.quad	.LBE3211
 55090      00000000 
 55091 04f0 00000000 		.quad	.LBB3259
 55091      00000000 
 55092 04f8 00000000 		.quad	.LBE3259
 55092      00000000 
 55093 0500 00000000 		.quad	.LBB3260
 55093      00000000 
 55094 0508 00000000 		.quad	.LBE3260
GAS LISTING /tmp/ccmMnd7l.s 			page 1362


 55094      00000000 
 55095 0510 00000000 		.quad	.LBB3261
 55095      00000000 
 55096 0518 00000000 		.quad	.LBE3261
 55096      00000000 
 55097 0520 00000000 		.quad	0
 55097      00000000 
 55098 0528 00000000 		.quad	0
 55098      00000000 
 55099 0530 00000000 		.quad	.LBB3214
 55099      00000000 
 55100 0538 00000000 		.quad	.LBE3214
 55100      00000000 
 55101 0540 00000000 		.quad	.LBB3252
 55101      00000000 
 55102 0548 00000000 		.quad	.LBE3252
 55102      00000000 
 55103 0550 00000000 		.quad	0
 55103      00000000 
 55104 0558 00000000 		.quad	0
 55104      00000000 
 55105 0560 00000000 		.quad	.LBB3215
 55105      00000000 
 55106 0568 00000000 		.quad	.LBE3215
 55106      00000000 
 55107 0570 00000000 		.quad	.LBB3247
 55107      00000000 
 55108 0578 00000000 		.quad	.LBE3247
 55108      00000000 
 55109 0580 00000000 		.quad	.LBB3248
 55109      00000000 
 55110 0588 00000000 		.quad	.LBE3248
 55110      00000000 
 55111 0590 00000000 		.quad	0
 55111      00000000 
 55112 0598 00000000 		.quad	0
 55112      00000000 
 55113 05a0 00000000 		.quad	.LBB3216
 55113      00000000 
 55114 05a8 00000000 		.quad	.LBE3216
 55114      00000000 
 55115 05b0 00000000 		.quad	.LBB3245
 55115      00000000 
 55116 05b8 00000000 		.quad	.LBE3245
 55116      00000000 
 55117 05c0 00000000 		.quad	.LBB3246
 55117      00000000 
 55118 05c8 00000000 		.quad	.LBE3246
 55118      00000000 
 55119 05d0 00000000 		.quad	0
 55119      00000000 
 55120 05d8 00000000 		.quad	0
 55120      00000000 
 55121 05e0 00000000 		.quad	.LBB3219
 55121      00000000 
 55122 05e8 00000000 		.quad	.LBE3219
 55122      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1363


 55123 05f0 00000000 		.quad	.LBB3240
 55123      00000000 
 55124 05f8 00000000 		.quad	.LBE3240
 55124      00000000 
 55125 0600 00000000 		.quad	0
 55125      00000000 
 55126 0608 00000000 		.quad	0
 55126      00000000 
 55127 0610 00000000 		.quad	.LBB3220
 55127      00000000 
 55128 0618 00000000 		.quad	.LBE3220
 55128      00000000 
 55129 0620 00000000 		.quad	.LBB3236
 55129      00000000 
 55130 0628 00000000 		.quad	.LBE3236
 55130      00000000 
 55131 0630 00000000 		.quad	.LBB3237
 55131      00000000 
 55132 0638 00000000 		.quad	.LBE3237
 55132      00000000 
 55133 0640 00000000 		.quad	0
 55133      00000000 
 55134 0648 00000000 		.quad	0
 55134      00000000 
 55135 0650 00000000 		.quad	.LBB3221
 55135      00000000 
 55136 0658 00000000 		.quad	.LBE3221
 55136      00000000 
 55137 0660 00000000 		.quad	.LBB3234
 55137      00000000 
 55138 0668 00000000 		.quad	.LBE3234
 55138      00000000 
 55139 0670 00000000 		.quad	.LBB3235
 55139      00000000 
 55140 0678 00000000 		.quad	.LBE3235
 55140      00000000 
 55141 0680 00000000 		.quad	0
 55141      00000000 
 55142 0688 00000000 		.quad	0
 55142      00000000 
 55143 0690 00000000 		.quad	.LBB3224
 55143      00000000 
 55144 0698 00000000 		.quad	.LBE3224
 55144      00000000 
 55145 06a0 00000000 		.quad	.LBB3225
 55145      00000000 
 55146 06a8 00000000 		.quad	.LBE3225
 55146      00000000 
 55147 06b0 00000000 		.quad	0
 55147      00000000 
 55148 06b8 00000000 		.quad	0
 55148      00000000 
 55149 06c0 00000000 		.quad	.LBB3238
 55149      00000000 
 55150 06c8 00000000 		.quad	.LBE3238
 55150      00000000 
 55151 06d0 00000000 		.quad	.LBB3239
GAS LISTING /tmp/ccmMnd7l.s 			page 1364


 55151      00000000 
 55152 06d8 00000000 		.quad	.LBE3239
 55152      00000000 
 55153 06e0 00000000 		.quad	0
 55153      00000000 
 55154 06e8 00000000 		.quad	0
 55154      00000000 
 55155 06f0 00000000 		.quad	.LBB3249
 55155      00000000 
 55156 06f8 00000000 		.quad	.LBE3249
 55156      00000000 
 55157 0700 00000000 		.quad	.LBB3250
 55157      00000000 
 55158 0708 00000000 		.quad	.LBE3250
 55158      00000000 
 55159 0710 00000000 		.quad	.LBB3251
 55159      00000000 
 55160 0718 00000000 		.quad	.LBE3251
 55160      00000000 
 55161 0720 00000000 		.quad	0
 55161      00000000 
 55162 0728 00000000 		.quad	0
 55162      00000000 
 55163 0730 00000000 		.quad	.LBB3266
 55163      00000000 
 55164 0738 00000000 		.quad	.LBE3266
 55164      00000000 
 55165 0740 00000000 		.quad	.LBB3267
 55165      00000000 
 55166 0748 00000000 		.quad	.LBE3267
 55166      00000000 
 55167 0750 00000000 		.quad	0
 55167      00000000 
 55168 0758 00000000 		.quad	0
 55168      00000000 
 55169 0760 00000000 		.quad	.LBB3282
 55169      00000000 
 55170 0768 00000000 		.quad	.LBE3282
 55170      00000000 
 55171 0770 00000000 		.quad	.LBB3283
 55171      00000000 
 55172 0778 00000000 		.quad	.LBE3283
 55172      00000000 
 55173 0780 00000000 		.quad	0
 55173      00000000 
 55174 0788 00000000 		.quad	0
 55174      00000000 
 55175 0790 00000000 		.quad	.LBB3298
 55175      00000000 
 55176 0798 00000000 		.quad	.LBE3298
 55176      00000000 
 55177 07a0 00000000 		.quad	.LBB3299
 55177      00000000 
 55178 07a8 00000000 		.quad	.LBE3299
 55178      00000000 
 55179 07b0 00000000 		.quad	0
 55179      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1365


 55180 07b8 00000000 		.quad	0
 55180      00000000 
 55181 07c0 00000000 		.quad	.LBB3335
 55181      00000000 
 55182 07c8 00000000 		.quad	.LBE3335
 55182      00000000 
 55183 07d0 00000000 		.quad	.LBB3569
 55183      00000000 
 55184 07d8 00000000 		.quad	.LBE3569
 55184      00000000 
 55185 07e0 00000000 		.quad	.LBB3570
 55185      00000000 
 55186 07e8 00000000 		.quad	.LBE3570
 55186      00000000 
 55187 07f0 00000000 		.quad	0
 55187      00000000 
 55188 07f8 00000000 		.quad	0
 55188      00000000 
 55189 0800 00000000 		.quad	.LBB3336
 55189      00000000 
 55190 0808 00000000 		.quad	.LBE3336
 55190      00000000 
 55191 0810 00000000 		.quad	.LBB3371
 55191      00000000 
 55192 0818 00000000 		.quad	.LBE3371
 55192      00000000 
 55193 0820 00000000 		.quad	.LBB3372
 55193      00000000 
 55194 0828 00000000 		.quad	.LBE3372
 55194      00000000 
 55195 0830 00000000 		.quad	.LBB3534
 55195      00000000 
 55196 0838 00000000 		.quad	.LBE3534
 55196      00000000 
 55197 0840 00000000 		.quad	.LBB3537
 55197      00000000 
 55198 0848 00000000 		.quad	.LBE3537
 55198      00000000 
 55199 0850 00000000 		.quad	0
 55199      00000000 
 55200 0858 00000000 		.quad	0
 55200      00000000 
 55201 0860 00000000 		.quad	.LBB3337
 55201      00000000 
 55202 0868 00000000 		.quad	.LBE3337
 55202      00000000 
 55203 0870 00000000 		.quad	.LBB3366
 55203      00000000 
 55204 0878 00000000 		.quad	.LBE3366
 55204      00000000 
 55205 0880 00000000 		.quad	.LBB3369
 55205      00000000 
 55206 0888 00000000 		.quad	.LBE3369
 55206      00000000 
 55207 0890 00000000 		.quad	.LBB3370
 55207      00000000 
 55208 0898 00000000 		.quad	.LBE3370
GAS LISTING /tmp/ccmMnd7l.s 			page 1366


 55208      00000000 
 55209 08a0 00000000 		.quad	0
 55209      00000000 
 55210 08a8 00000000 		.quad	0
 55210      00000000 
 55211 08b0 00000000 		.quad	.LBB3338
 55211      00000000 
 55212 08b8 00000000 		.quad	.LBE3338
 55212      00000000 
 55213 08c0 00000000 		.quad	.LBB3360
 55213      00000000 
 55214 08c8 00000000 		.quad	.LBE3360
 55214      00000000 
 55215 08d0 00000000 		.quad	.LBB3363
 55215      00000000 
 55216 08d8 00000000 		.quad	.LBE3363
 55216      00000000 
 55217 08e0 00000000 		.quad	.LBB3364
 55217      00000000 
 55218 08e8 00000000 		.quad	.LBE3364
 55218      00000000 
 55219 08f0 00000000 		.quad	.LBB3365
 55219      00000000 
 55220 08f8 00000000 		.quad	.LBE3365
 55220      00000000 
 55221 0900 00000000 		.quad	0
 55221      00000000 
 55222 0908 00000000 		.quad	0
 55222      00000000 
 55223 0910 00000000 		.quad	.LBB3340
 55223      00000000 
 55224 0918 00000000 		.quad	.LBE3340
 55224      00000000 
 55225 0920 00000000 		.quad	.LBB3352
 55225      00000000 
 55226 0928 00000000 		.quad	.LBE3352
 55226      00000000 
 55227 0930 00000000 		.quad	.LBB3353
 55227      00000000 
 55228 0938 00000000 		.quad	.LBE3353
 55228      00000000 
 55229 0940 00000000 		.quad	.LBB3354
 55229      00000000 
 55230 0948 00000000 		.quad	.LBE3354
 55230      00000000 
 55231 0950 00000000 		.quad	.LBB3355
 55231      00000000 
 55232 0958 00000000 		.quad	.LBE3355
 55232      00000000 
 55233 0960 00000000 		.quad	0
 55233      00000000 
 55234 0968 00000000 		.quad	0
 55234      00000000 
 55235 0970 00000000 		.quad	.LBB3375
 55235      00000000 
 55236 0978 00000000 		.quad	.LBE3375
 55236      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1367


 55237 0980 00000000 		.quad	.LBB3536
 55237      00000000 
 55238 0988 00000000 		.quad	.LBE3536
 55238      00000000 
 55239 0990 00000000 		.quad	0
 55239      00000000 
 55240 0998 00000000 		.quad	0
 55240      00000000 
 55241 09a0 00000000 		.quad	.LBB3381
 55241      00000000 
 55242 09a8 00000000 		.quad	.LBE3381
 55242      00000000 
 55243 09b0 00000000 		.quad	.LBB3394
 55243      00000000 
 55244 09b8 00000000 		.quad	.LBE3394
 55244      00000000 
 55245 09c0 00000000 		.quad	0
 55245      00000000 
 55246 09c8 00000000 		.quad	0
 55246      00000000 
 55247 09d0 00000000 		.quad	.LBB3385
 55247      00000000 
 55248 09d8 00000000 		.quad	.LBE3385
 55248      00000000 
 55249 09e0 00000000 		.quad	.LBB3392
 55249      00000000 
 55250 09e8 00000000 		.quad	.LBE3392
 55250      00000000 
 55251 09f0 00000000 		.quad	0
 55251      00000000 
 55252 09f8 00000000 		.quad	0
 55252      00000000 
 55253 0a00 00000000 		.quad	.LBB3401
 55253      00000000 
 55254 0a08 00000000 		.quad	.LBE3401
 55254      00000000 
 55255 0a10 00000000 		.quad	.LBB3423
 55255      00000000 
 55256 0a18 00000000 		.quad	.LBE3423
 55256      00000000 
 55257 0a20 00000000 		.quad	0
 55257      00000000 
 55258 0a28 00000000 		.quad	0
 55258      00000000 
 55259 0a30 00000000 		.quad	.LBB3406
 55259      00000000 
 55260 0a38 00000000 		.quad	.LBE3406
 55260      00000000 
 55261 0a40 00000000 		.quad	.LBB3424
 55261      00000000 
 55262 0a48 00000000 		.quad	.LBE3424
 55262      00000000 
 55263 0a50 00000000 		.quad	0
 55263      00000000 
 55264 0a58 00000000 		.quad	0
 55264      00000000 
 55265 0a60 00000000 		.quad	.LBB3408
GAS LISTING /tmp/ccmMnd7l.s 			page 1368


 55265      00000000 
 55266 0a68 00000000 		.quad	.LBE3408
 55266      00000000 
 55267 0a70 00000000 		.quad	.LBB3417
 55267      00000000 
 55268 0a78 00000000 		.quad	.LBE3417
 55268      00000000 
 55269 0a80 00000000 		.quad	.LBB3418
 55269      00000000 
 55270 0a88 00000000 		.quad	.LBE3418
 55270      00000000 
 55271 0a90 00000000 		.quad	.LBB3419
 55271      00000000 
 55272 0a98 00000000 		.quad	.LBE3419
 55272      00000000 
 55273 0aa0 00000000 		.quad	0
 55273      00000000 
 55274 0aa8 00000000 		.quad	0
 55274      00000000 
 55275 0ab0 00000000 		.quad	.LBB3427
 55275      00000000 
 55276 0ab8 00000000 		.quad	.LBE3427
 55276      00000000 
 55277 0ac0 00000000 		.quad	.LBB3433
 55277      00000000 
 55278 0ac8 00000000 		.quad	.LBE3433
 55278      00000000 
 55279 0ad0 00000000 		.quad	0
 55279      00000000 
 55280 0ad8 00000000 		.quad	0
 55280      00000000 
 55281 0ae0 00000000 		.quad	.LBB3430
 55281      00000000 
 55282 0ae8 00000000 		.quad	.LBE3430
 55282      00000000 
 55283 0af0 00000000 		.quad	.LBB3434
 55283      00000000 
 55284 0af8 00000000 		.quad	.LBE3434
 55284      00000000 
 55285 0b00 00000000 		.quad	0
 55285      00000000 
 55286 0b08 00000000 		.quad	0
 55286      00000000 
 55287 0b10 00000000 		.quad	.LBB3438
 55287      00000000 
 55288 0b18 00000000 		.quad	.LBE3438
 55288      00000000 
 55289 0b20 00000000 		.quad	.LBB3535
 55289      00000000 
 55290 0b28 00000000 		.quad	.LBE3535
 55290      00000000 
 55291 0b30 00000000 		.quad	.LBB3548
 55291      00000000 
 55292 0b38 00000000 		.quad	.LBE3548
 55292      00000000 
 55293 0b40 00000000 		.quad	0
 55293      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1369


 55294 0b48 00000000 		.quad	0
 55294      00000000 
 55295 0b50 00000000 		.quad	.LBB3439
 55295      00000000 
 55296 0b58 00000000 		.quad	.LBE3439
 55296      00000000 
 55297 0b60 00000000 		.quad	.LBB3471
 55297      00000000 
 55298 0b68 00000000 		.quad	.LBE3471
 55298      00000000 
 55299 0b70 00000000 		.quad	0
 55299      00000000 
 55300 0b78 00000000 		.quad	0
 55300      00000000 
 55301 0b80 00000000 		.quad	.LBB3442
 55301      00000000 
 55302 0b88 00000000 		.quad	.LBE3442
 55302      00000000 
 55303 0b90 00000000 		.quad	.LBB3470
 55303      00000000 
 55304 0b98 00000000 		.quad	.LBE3470
 55304      00000000 
 55305 0ba0 00000000 		.quad	.LBB3472
 55305      00000000 
 55306 0ba8 00000000 		.quad	.LBE3472
 55306      00000000 
 55307 0bb0 00000000 		.quad	0
 55307      00000000 
 55308 0bb8 00000000 		.quad	0
 55308      00000000 
 55309 0bc0 00000000 		.quad	.LBB3446
 55309      00000000 
 55310 0bc8 00000000 		.quad	.LBE3446
 55310      00000000 
 55311 0bd0 00000000 		.quad	.LBB3456
 55311      00000000 
 55312 0bd8 00000000 		.quad	.LBE3456
 55312      00000000 
 55313 0be0 00000000 		.quad	.LBB3457
 55313      00000000 
 55314 0be8 00000000 		.quad	.LBE3457
 55314      00000000 
 55315 0bf0 00000000 		.quad	0
 55315      00000000 
 55316 0bf8 00000000 		.quad	0
 55316      00000000 
 55317 0c00 00000000 		.quad	.LBB3475
 55317      00000000 
 55318 0c08 00000000 		.quad	.LBE3475
 55318      00000000 
 55319 0c10 00000000 		.quad	.LBB3484
 55319      00000000 
 55320 0c18 00000000 		.quad	.LBE3484
 55320      00000000 
 55321 0c20 00000000 		.quad	0
 55321      00000000 
 55322 0c28 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1370


 55322      00000000 
 55323 0c30 00000000 		.quad	.LBB3478
 55323      00000000 
 55324 0c38 00000000 		.quad	.LBE3478
 55324      00000000 
 55325 0c40 00000000 		.quad	.LBB3481
 55325      00000000 
 55326 0c48 00000000 		.quad	.LBE3481
 55326      00000000 
 55327 0c50 00000000 		.quad	0
 55327      00000000 
 55328 0c58 00000000 		.quad	0
 55328      00000000 
 55329 0c60 00000000 		.quad	.LBB3485
 55329      00000000 
 55330 0c68 00000000 		.quad	.LBE3485
 55330      00000000 
 55331 0c70 00000000 		.quad	.LBB3530
 55331      00000000 
 55332 0c78 00000000 		.quad	.LBE3530
 55332      00000000 
 55333 0c80 00000000 		.quad	.LBB3531
 55333      00000000 
 55334 0c88 00000000 		.quad	.LBE3531
 55334      00000000 
 55335 0c90 00000000 		.quad	0
 55335      00000000 
 55336 0c98 00000000 		.quad	0
 55336      00000000 
 55337 0ca0 00000000 		.quad	.LBB3487
 55337      00000000 
 55338 0ca8 00000000 		.quad	.LBE3487
 55338      00000000 
 55339 0cb0 00000000 		.quad	.LBB3490
 55339      00000000 
 55340 0cb8 00000000 		.quad	.LBE3490
 55340      00000000 
 55341 0cc0 00000000 		.quad	0
 55341      00000000 
 55342 0cc8 00000000 		.quad	0
 55342      00000000 
 55343 0cd0 00000000 		.quad	.LBB3491
 55343      00000000 
 55344 0cd8 00000000 		.quad	.LBE3491
 55344      00000000 
 55345 0ce0 00000000 		.quad	.LBB3495
 55345      00000000 
 55346 0ce8 00000000 		.quad	.LBE3495
 55346      00000000 
 55347 0cf0 00000000 		.quad	.LBB3499
 55347      00000000 
 55348 0cf8 00000000 		.quad	.LBE3499
 55348      00000000 
 55349 0d00 00000000 		.quad	0
 55349      00000000 
 55350 0d08 00000000 		.quad	0
 55350      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1371


 55351 0d10 00000000 		.quad	.LBB3496
 55351      00000000 
 55352 0d18 00000000 		.quad	.LBE3496
 55352      00000000 
 55353 0d20 00000000 		.quad	.LBB3500
 55353      00000000 
 55354 0d28 00000000 		.quad	.LBE3500
 55354      00000000 
 55355 0d30 00000000 		.quad	0
 55355      00000000 
 55356 0d38 00000000 		.quad	0
 55356      00000000 
 55357 0d40 00000000 		.quad	.LBB3501
 55357      00000000 
 55358 0d48 00000000 		.quad	.LBE3501
 55358      00000000 
 55359 0d50 00000000 		.quad	.LBB3526
 55359      00000000 
 55360 0d58 00000000 		.quad	.LBE3526
 55360      00000000 
 55361 0d60 00000000 		.quad	.LBB3527
 55361      00000000 
 55362 0d68 00000000 		.quad	.LBE3527
 55362      00000000 
 55363 0d70 00000000 		.quad	0
 55363      00000000 
 55364 0d78 00000000 		.quad	0
 55364      00000000 
 55365 0d80 00000000 		.quad	.LBB3504
 55365      00000000 
 55366 0d88 00000000 		.quad	.LBE3504
 55366      00000000 
 55367 0d90 00000000 		.quad	.LBB3520
 55367      00000000 
 55368 0d98 00000000 		.quad	.LBE3520
 55368      00000000 
 55369 0da0 00000000 		.quad	.LBB3521
 55369      00000000 
 55370 0da8 00000000 		.quad	.LBE3521
 55370      00000000 
 55371 0db0 00000000 		.quad	0
 55371      00000000 
 55372 0db8 00000000 		.quad	0
 55372      00000000 
 55373 0dc0 00000000 		.quad	.LBB3506
 55373      00000000 
 55374 0dc8 00000000 		.quad	.LBE3506
 55374      00000000 
 55375 0dd0 00000000 		.quad	.LBB3515
 55375      00000000 
 55376 0dd8 00000000 		.quad	.LBE3515
 55376      00000000 
 55377 0de0 00000000 		.quad	0
 55377      00000000 
 55378 0de8 00000000 		.quad	0
 55378      00000000 
 55379 0df0 00000000 		.quad	.LBB3509
GAS LISTING /tmp/ccmMnd7l.s 			page 1372


 55379      00000000 
 55380 0df8 00000000 		.quad	.LBE3509
 55380      00000000 
 55381 0e00 00000000 		.quad	.LBB3514
 55381      00000000 
 55382 0e08 00000000 		.quad	.LBE3514
 55382      00000000 
 55383 0e10 00000000 		.quad	0
 55383      00000000 
 55384 0e18 00000000 		.quad	0
 55384      00000000 
 55385 0e20 00000000 		.quad	.LBB3559
 55385      00000000 
 55386 0e28 00000000 		.quad	.LBE3559
 55386      00000000 
 55387 0e30 00000000 		.quad	.LBB3567
 55387      00000000 
 55388 0e38 00000000 		.quad	.LBE3567
 55388      00000000 
 55389 0e40 00000000 		.quad	.LBB3568
 55389      00000000 
 55390 0e48 00000000 		.quad	.LBE3568
 55390      00000000 
 55391 0e50 00000000 		.quad	0
 55391      00000000 
 55392 0e58 00000000 		.quad	0
 55392      00000000 
 55393 0e60 00000000 		.quad	.LBB3574
 55393      00000000 
 55394 0e68 00000000 		.quad	.LBE3574
 55394      00000000 
 55395 0e70 00000000 		.quad	.LBB3579
 55395      00000000 
 55396 0e78 00000000 		.quad	.LBE3579
 55396      00000000 
 55397 0e80 00000000 		.quad	0
 55397      00000000 
 55398 0e88 00000000 		.quad	0
 55398      00000000 
 55399 0e90 00000000 		.quad	.LBB3582
 55399      00000000 
 55400 0e98 00000000 		.quad	.LBE3582
 55400      00000000 
 55401 0ea0 00000000 		.quad	.LBB3587
 55401      00000000 
 55402 0ea8 00000000 		.quad	.LBE3587
 55402      00000000 
 55403 0eb0 00000000 		.quad	0
 55403      00000000 
 55404 0eb8 00000000 		.quad	0
 55404      00000000 
 55405 0ec0 00000000 		.quad	.LBB3591
 55405      00000000 
 55406 0ec8 00000000 		.quad	.LBE3591
 55406      00000000 
 55407 0ed0 00000000 		.quad	.LBB3595
 55407      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1373


 55408 0ed8 00000000 		.quad	.LBE3595
 55408      00000000 
 55409 0ee0 00000000 		.quad	.LBB3683
 55409      00000000 
 55410 0ee8 00000000 		.quad	.LBE3683
 55410      00000000 
 55411 0ef0 00000000 		.quad	0
 55411      00000000 
 55412 0ef8 00000000 		.quad	0
 55412      00000000 
 55413 0f00 00000000 		.quad	.LBB3596
 55413      00000000 
 55414 0f08 00000000 		.quad	.LBE3596
 55414      00000000 
 55415 0f10 00000000 		.quad	.LBB3684
 55415      00000000 
 55416 0f18 00000000 		.quad	.LBE3684
 55416      00000000 
 55417 0f20 00000000 		.quad	0
 55417      00000000 
 55418 0f28 00000000 		.quad	0
 55418      00000000 
 55419 0f30 00000000 		.quad	.LBB3597
 55419      00000000 
 55420 0f38 00000000 		.quad	.LBE3597
 55420      00000000 
 55421 0f40 00000000 		.quad	.LBB3657
 55421      00000000 
 55422 0f48 00000000 		.quad	.LBE3657
 55422      00000000 
 55423 0f50 00000000 		.quad	.LBB3658
 55423      00000000 
 55424 0f58 00000000 		.quad	.LBE3658
 55424      00000000 
 55425 0f60 00000000 		.quad	.LBB3659
 55425      00000000 
 55426 0f68 00000000 		.quad	.LBE3659
 55426      00000000 
 55427 0f70 00000000 		.quad	0
 55427      00000000 
 55428 0f78 00000000 		.quad	0
 55428      00000000 
 55429 0f80 00000000 		.quad	.LBB3599
 55429      00000000 
 55430 0f88 00000000 		.quad	.LBE3599
 55430      00000000 
 55431 0f90 00000000 		.quad	.LBB3622
 55431      00000000 
 55432 0f98 00000000 		.quad	.LBE3622
 55432      00000000 
 55433 0fa0 00000000 		.quad	0
 55433      00000000 
 55434 0fa8 00000000 		.quad	0
 55434      00000000 
 55435 0fb0 00000000 		.quad	.LBB3602
 55435      00000000 
 55436 0fb8 00000000 		.quad	.LBE3602
GAS LISTING /tmp/ccmMnd7l.s 			page 1374


 55436      00000000 
 55437 0fc0 00000000 		.quad	.LBB3623
 55437      00000000 
 55438 0fc8 00000000 		.quad	.LBE3623
 55438      00000000 
 55439 0fd0 00000000 		.quad	.LBB3626
 55439      00000000 
 55440 0fd8 00000000 		.quad	.LBE3626
 55440      00000000 
 55441 0fe0 00000000 		.quad	.LBB3653
 55441      00000000 
 55442 0fe8 00000000 		.quad	.LBE3653
 55442      00000000 
 55443 0ff0 00000000 		.quad	0
 55443      00000000 
 55444 0ff8 00000000 		.quad	0
 55444      00000000 
 55445 1000 00000000 		.quad	.LBB3604
 55445      00000000 
 55446 1008 00000000 		.quad	.LBE3604
 55446      00000000 
 55447 1010 00000000 		.quad	.LBB3609
 55447      00000000 
 55448 1018 00000000 		.quad	.LBE3609
 55448      00000000 
 55449 1020 00000000 		.quad	0
 55449      00000000 
 55450 1028 00000000 		.quad	0
 55450      00000000 
 55451 1030 00000000 		.quad	.LBB3627
 55451      00000000 
 55452 1038 00000000 		.quad	.LBE3627
 55452      00000000 
 55453 1040 00000000 		.quad	.LBB3652
 55453      00000000 
 55454 1048 00000000 		.quad	.LBE3652
 55454      00000000 
 55455 1050 00000000 		.quad	0
 55455      00000000 
 55456 1058 00000000 		.quad	0
 55456      00000000 
 55457 1060 00000000 		.quad	.LBB3633
 55457      00000000 
 55458 1068 00000000 		.quad	.LBE3633
 55458      00000000 
 55459 1070 00000000 		.quad	.LBB3649
 55459      00000000 
 55460 1078 00000000 		.quad	.LBE3649
 55460      00000000 
 55461 1080 00000000 		.quad	.LBB3650
 55461      00000000 
 55462 1088 00000000 		.quad	.LBE3650
 55462      00000000 
 55463 1090 00000000 		.quad	0
 55463      00000000 
 55464 1098 00000000 		.quad	0
 55464      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1375


 55465 10a0 00000000 		.quad	.LBB3641
 55465      00000000 
 55466 10a8 00000000 		.quad	.LBE3641
 55466      00000000 
 55467 10b0 00000000 		.quad	.LBB3648
 55467      00000000 
 55468 10b8 00000000 		.quad	.LBE3648
 55468      00000000 
 55469 10c0 00000000 		.quad	0
 55469      00000000 
 55470 10c8 00000000 		.quad	0
 55470      00000000 
 55471 10d0 00000000 		.quad	.LBB3664
 55471      00000000 
 55472 10d8 00000000 		.quad	.LBE3664
 55472      00000000 
 55473 10e0 00000000 		.quad	.LBB3667
 55473      00000000 
 55474 10e8 00000000 		.quad	.LBE3667
 55474      00000000 
 55475 10f0 00000000 		.quad	0
 55475      00000000 
 55476 10f8 00000000 		.quad	0
 55476      00000000 
 55477 1100 00000000 		.quad	.LBB3675
 55477      00000000 
 55478 1108 00000000 		.quad	.LBE3675
 55478      00000000 
 55479 1110 00000000 		.quad	.LBB3680
 55479      00000000 
 55480 1118 00000000 		.quad	.LBE3680
 55480      00000000 
 55481 1120 00000000 		.quad	.LBB3681
 55481      00000000 
 55482 1128 00000000 		.quad	.LBE3681
 55482      00000000 
 55483 1130 00000000 		.quad	.LBB3682
 55483      00000000 
 55484 1138 00000000 		.quad	.LBE3682
 55484      00000000 
 55485 1140 00000000 		.quad	0
 55485      00000000 
 55486 1148 00000000 		.quad	0
 55486      00000000 
 55487 1150 00000000 		.quad	.LBB3687
 55487      00000000 
 55488 1158 00000000 		.quad	.LBE3687
 55488      00000000 
 55489 1160 00000000 		.quad	.LBB3892
 55489      00000000 
 55490 1168 00000000 		.quad	.LBE3892
 55490      00000000 
 55491 1170 00000000 		.quad	.LBB3893
 55491      00000000 
 55492 1178 00000000 		.quad	.LBE3893
 55492      00000000 
 55493 1180 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1376


 55493      00000000 
 55494 1188 00000000 		.quad	0
 55494      00000000 
 55495 1190 00000000 		.quad	.LBB3698
 55495      00000000 
 55496 1198 00000000 		.quad	.LBE3698
 55496      00000000 
 55497 11a0 00000000 		.quad	.LBB3791
 55497      00000000 
 55498 11a8 00000000 		.quad	.LBE3791
 55498      00000000 
 55499 11b0 00000000 		.quad	.LBB3875
 55499      00000000 
 55500 11b8 00000000 		.quad	.LBE3875
 55500      00000000 
 55501 11c0 00000000 		.quad	.LBB3877
 55501      00000000 
 55502 11c8 00000000 		.quad	.LBE3877
 55502      00000000 
 55503 11d0 00000000 		.quad	0
 55503      00000000 
 55504 11d8 00000000 		.quad	0
 55504      00000000 
 55505 11e0 00000000 		.quad	.LBB3701
 55505      00000000 
 55506 11e8 00000000 		.quad	.LBE3701
 55506      00000000 
 55507 11f0 00000000 		.quad	.LBB3704
 55507      00000000 
 55508 11f8 00000000 		.quad	.LBE3704
 55508      00000000 
 55509 1200 00000000 		.quad	0
 55509      00000000 
 55510 1208 00000000 		.quad	0
 55510      00000000 
 55511 1210 00000000 		.quad	.LBB3705
 55511      00000000 
 55512 1218 00000000 		.quad	.LBE3705
 55512      00000000 
 55513 1220 00000000 		.quad	.LBB3783
 55513      00000000 
 55514 1228 00000000 		.quad	.LBE3783
 55514      00000000 
 55515 1230 00000000 		.quad	.LBB3784
 55515      00000000 
 55516 1238 00000000 		.quad	.LBE3784
 55516      00000000 
 55517 1240 00000000 		.quad	0
 55517      00000000 
 55518 1248 00000000 		.quad	0
 55518      00000000 
 55519 1250 00000000 		.quad	.LBB3707
 55519      00000000 
 55520 1258 00000000 		.quad	.LBE3707
 55520      00000000 
 55521 1260 00000000 		.quad	.LBB3777
 55521      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1377


 55522 1268 00000000 		.quad	.LBE3777
 55522      00000000 
 55523 1270 00000000 		.quad	.LBB3780
 55523      00000000 
 55524 1278 00000000 		.quad	.LBE3780
 55524      00000000 
 55525 1280 00000000 		.quad	0
 55525      00000000 
 55526 1288 00000000 		.quad	0
 55526      00000000 
 55527 1290 00000000 		.quad	.LBB3714
 55527      00000000 
 55528 1298 00000000 		.quad	.LBE3714
 55528      00000000 
 55529 12a0 00000000 		.quad	.LBB3730
 55529      00000000 
 55530 12a8 00000000 		.quad	.LBE3730
 55530      00000000 
 55531 12b0 00000000 		.quad	0
 55531      00000000 
 55532 12b8 00000000 		.quad	0
 55532      00000000 
 55533 12c0 00000000 		.quad	.LBB3716
 55533      00000000 
 55534 12c8 00000000 		.quad	.LBE3716
 55534      00000000 
 55535 12d0 00000000 		.quad	.LBB3721
 55535      00000000 
 55536 12d8 00000000 		.quad	.LBE3721
 55536      00000000 
 55537 12e0 00000000 		.quad	0
 55537      00000000 
 55538 12e8 00000000 		.quad	0
 55538      00000000 
 55539 12f0 00000000 		.quad	.LBB3735
 55539      00000000 
 55540 12f8 00000000 		.quad	.LBE3735
 55540      00000000 
 55541 1300 00000000 		.quad	.LBB3778
 55541      00000000 
 55542 1308 00000000 		.quad	.LBE3778
 55542      00000000 
 55543 1310 00000000 		.quad	0
 55543      00000000 
 55544 1318 00000000 		.quad	0
 55544      00000000 
 55545 1320 00000000 		.quad	.LBB3737
 55545      00000000 
 55546 1328 00000000 		.quad	.LBE3737
 55546      00000000 
 55547 1330 00000000 		.quad	.LBB3747
 55547      00000000 
 55548 1338 00000000 		.quad	.LBE3747
 55548      00000000 
 55549 1340 00000000 		.quad	.LBB3748
 55549      00000000 
 55550 1348 00000000 		.quad	.LBE3748
GAS LISTING /tmp/ccmMnd7l.s 			page 1378


 55550      00000000 
 55551 1350 00000000 		.quad	0
 55551      00000000 
 55552 1358 00000000 		.quad	0
 55552      00000000 
 55553 1360 00000000 		.quad	.LBB3739
 55553      00000000 
 55554 1368 00000000 		.quad	.LBE3739
 55554      00000000 
 55555 1370 00000000 		.quad	.LBB3744
 55555      00000000 
 55556 1378 00000000 		.quad	.LBE3744
 55556      00000000 
 55557 1380 00000000 		.quad	0
 55557      00000000 
 55558 1388 00000000 		.quad	0
 55558      00000000 
 55559 1390 00000000 		.quad	.LBB3750
 55559      00000000 
 55560 1398 00000000 		.quad	.LBE3750
 55560      00000000 
 55561 13a0 00000000 		.quad	.LBB3779
 55561      00000000 
 55562 13a8 00000000 		.quad	.LBE3779
 55562      00000000 
 55563 13b0 00000000 		.quad	0
 55563      00000000 
 55564 13b8 00000000 		.quad	0
 55564      00000000 
 55565 13c0 00000000 		.quad	.LBB3757
 55565      00000000 
 55566 13c8 00000000 		.quad	.LBE3757
 55566      00000000 
 55567 13d0 00000000 		.quad	.LBB3773
 55567      00000000 
 55568 13d8 00000000 		.quad	.LBE3773
 55568      00000000 
 55569 13e0 00000000 		.quad	0
 55569      00000000 
 55570 13e8 00000000 		.quad	0
 55570      00000000 
 55571 13f0 00000000 		.quad	.LBB3759
 55571      00000000 
 55572 13f8 00000000 		.quad	.LBE3759
 55572      00000000 
 55573 1400 00000000 		.quad	.LBB3764
 55573      00000000 
 55574 1408 00000000 		.quad	.LBE3764
 55574      00000000 
 55575 1410 00000000 		.quad	0
 55575      00000000 
 55576 1418 00000000 		.quad	0
 55576      00000000 
 55577 1420 00000000 		.quad	.LBB3792
 55577      00000000 
 55578 1428 00000000 		.quad	.LBE3792
 55578      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1379


 55579 1430 00000000 		.quad	.LBB3797
 55579      00000000 
 55580 1438 00000000 		.quad	.LBE3797
 55580      00000000 
 55581 1440 00000000 		.quad	.LBB3798
 55581      00000000 
 55582 1448 00000000 		.quad	.LBE3798
 55582      00000000 
 55583 1450 00000000 		.quad	.LBB3799
 55583      00000000 
 55584 1458 00000000 		.quad	.LBE3799
 55584      00000000 
 55585 1460 00000000 		.quad	0
 55585      00000000 
 55586 1468 00000000 		.quad	0
 55586      00000000 
 55587 1470 00000000 		.quad	.LBB3800
 55587      00000000 
 55588 1478 00000000 		.quad	.LBE3800
 55588      00000000 
 55589 1480 00000000 		.quad	.LBB3818
 55589      00000000 
 55590 1488 00000000 		.quad	.LBE3818
 55590      00000000 
 55591 1490 00000000 		.quad	.LBB3819
 55591      00000000 
 55592 1498 00000000 		.quad	.LBE3819
 55592      00000000 
 55593 14a0 00000000 		.quad	0
 55593      00000000 
 55594 14a8 00000000 		.quad	0
 55594      00000000 
 55595 14b0 00000000 		.quad	.LBB3814
 55595      00000000 
 55596 14b8 00000000 		.quad	.LBE3814
 55596      00000000 
 55597 14c0 00000000 		.quad	.LBB3820
 55597      00000000 
 55598 14c8 00000000 		.quad	.LBE3820
 55598      00000000 
 55599 14d0 00000000 		.quad	.LBB3824
 55599      00000000 
 55600 14d8 00000000 		.quad	.LBE3824
 55600      00000000 
 55601 14e0 00000000 		.quad	0
 55601      00000000 
 55602 14e8 00000000 		.quad	0
 55602      00000000 
 55603 14f0 00000000 		.quad	.LBB3821
 55603      00000000 
 55604 14f8 00000000 		.quad	.LBE3821
 55604      00000000 
 55605 1500 00000000 		.quad	.LBB3825
 55605      00000000 
 55606 1508 00000000 		.quad	.LBE3825
 55606      00000000 
 55607 1510 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1380


 55607      00000000 
 55608 1518 00000000 		.quad	0
 55608      00000000 
 55609 1520 00000000 		.quad	.LBB3826
 55609      00000000 
 55610 1528 00000000 		.quad	.LBE3826
 55610      00000000 
 55611 1530 00000000 		.quad	.LBB3830
 55611      00000000 
 55612 1538 00000000 		.quad	.LBE3830
 55612      00000000 
 55613 1540 00000000 		.quad	.LBB3834
 55613      00000000 
 55614 1548 00000000 		.quad	.LBE3834
 55614      00000000 
 55615 1550 00000000 		.quad	0
 55615      00000000 
 55616 1558 00000000 		.quad	0
 55616      00000000 
 55617 1560 00000000 		.quad	.LBB3831
 55617      00000000 
 55618 1568 00000000 		.quad	.LBE3831
 55618      00000000 
 55619 1570 00000000 		.quad	.LBB3835
 55619      00000000 
 55620 1578 00000000 		.quad	.LBE3835
 55620      00000000 
 55621 1580 00000000 		.quad	0
 55621      00000000 
 55622 1588 00000000 		.quad	0
 55622      00000000 
 55623 1590 00000000 		.quad	.LBB3836
 55623      00000000 
 55624 1598 00000000 		.quad	.LBE3836
 55624      00000000 
 55625 15a0 00000000 		.quad	.LBB3876
 55625      00000000 
 55626 15a8 00000000 		.quad	.LBE3876
 55626      00000000 
 55627 15b0 00000000 		.quad	.LBB3878
 55627      00000000 
 55628 15b8 00000000 		.quad	.LBE3878
 55628      00000000 
 55629 15c0 00000000 		.quad	0
 55629      00000000 
 55630 15c8 00000000 		.quad	0
 55630      00000000 
 55631 15d0 00000000 		.quad	.LBB3839
 55631      00000000 
 55632 15d8 00000000 		.quad	.LBE3839
 55632      00000000 
 55633 15e0 00000000 		.quad	.LBB3855
 55633      00000000 
 55634 15e8 00000000 		.quad	.LBE3855
 55634      00000000 
 55635 15f0 00000000 		.quad	.LBB3856
 55635      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1381


 55636 15f8 00000000 		.quad	.LBE3856
 55636      00000000 
 55637 1600 00000000 		.quad	0
 55637      00000000 
 55638 1608 00000000 		.quad	0
 55638      00000000 
 55639 1610 00000000 		.quad	.LBB3841
 55639      00000000 
 55640 1618 00000000 		.quad	.LBE3841
 55640      00000000 
 55641 1620 00000000 		.quad	.LBB3850
 55641      00000000 
 55642 1628 00000000 		.quad	.LBE3850
 55642      00000000 
 55643 1630 00000000 		.quad	0
 55643      00000000 
 55644 1638 00000000 		.quad	0
 55644      00000000 
 55645 1640 00000000 		.quad	.LBB3844
 55645      00000000 
 55646 1648 00000000 		.quad	.LBE3844
 55646      00000000 
 55647 1650 00000000 		.quad	.LBB3849
 55647      00000000 
 55648 1658 00000000 		.quad	.LBE3849
 55648      00000000 
 55649 1660 00000000 		.quad	0
 55649      00000000 
 55650 1668 00000000 		.quad	0
 55650      00000000 
 55651 1670 00000000 		.quad	.LBB3863
 55651      00000000 
 55652 1678 00000000 		.quad	.LBE3863
 55652      00000000 
 55653 1680 00000000 		.quad	.LBB3869
 55653      00000000 
 55654 1688 00000000 		.quad	.LBE3869
 55654      00000000 
 55655 1690 00000000 		.quad	0
 55655      00000000 
 55656 1698 00000000 		.quad	0
 55656      00000000 
 55657 16a0 00000000 		.quad	.LBB3866
 55657      00000000 
 55658 16a8 00000000 		.quad	.LBE3866
 55658      00000000 
 55659 16b0 00000000 		.quad	.LBB3870
 55659      00000000 
 55660 16b8 00000000 		.quad	.LBE3870
 55660      00000000 
 55661 16c0 00000000 		.quad	0
 55661      00000000 
 55662 16c8 00000000 		.quad	0
 55662      00000000 
 55663 16d0 00000000 		.quad	.LBB3879
 55663      00000000 
 55664 16d8 00000000 		.quad	.LBE3879
GAS LISTING /tmp/ccmMnd7l.s 			page 1382


 55664      00000000 
 55665 16e0 00000000 		.quad	.LBB3891
 55665      00000000 
 55666 16e8 00000000 		.quad	.LBE3891
 55666      00000000 
 55667 16f0 00000000 		.quad	0
 55667      00000000 
 55668 16f8 00000000 		.quad	0
 55668      00000000 
 55669 1700 00000000 		.quad	.LBB3882
 55669      00000000 
 55670 1708 00000000 		.quad	.LBE3882
 55670      00000000 
 55671 1710 00000000 		.quad	.LBB3888
 55671      00000000 
 55672 1718 00000000 		.quad	.LBE3888
 55672      00000000 
 55673 1720 00000000 		.quad	0
 55673      00000000 
 55674 1728 00000000 		.quad	0
 55674      00000000 
 55675 1730 00000000 		.quad	.LBB3894
 55675      00000000 
 55676 1738 00000000 		.quad	.LBE3894
 55676      00000000 
 55677 1740 00000000 		.quad	.LBB4654
 55677      00000000 
 55678 1748 00000000 		.quad	.LBE4654
 55678      00000000 
 55679 1750 00000000 		.quad	.LBB4655
 55679      00000000 
 55680 1758 00000000 		.quad	.LBE4655
 55680      00000000 
 55681 1760 00000000 		.quad	.LBB4656
 55681      00000000 
 55682 1768 00000000 		.quad	.LBE4656
 55682      00000000 
 55683 1770 00000000 		.quad	0
 55683      00000000 
 55684 1778 00000000 		.quad	0
 55684      00000000 
 55685 1780 00000000 		.quad	.LBB3899
 55685      00000000 
 55686 1788 00000000 		.quad	.LBE3899
 55686      00000000 
 55687 1790 00000000 		.quad	.LBB4643
 55687      00000000 
 55688 1798 00000000 		.quad	.LBE4643
 55688      00000000 
 55689 17a0 00000000 		.quad	0
 55689      00000000 
 55690 17a8 00000000 		.quad	0
 55690      00000000 
 55691 17b0 00000000 		.quad	.LBB3900
 55691      00000000 
 55692 17b8 00000000 		.quad	.LBE3900
 55692      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1383


 55693 17c0 00000000 		.quad	.LBB4265
 55693      00000000 
 55694 17c8 00000000 		.quad	.LBE4265
 55694      00000000 
 55695 17d0 00000000 		.quad	0
 55695      00000000 
 55696 17d8 00000000 		.quad	0
 55696      00000000 
 55697 17e0 00000000 		.quad	.LBB3901
 55697      00000000 
 55698 17e8 00000000 		.quad	.LBE3901
 55698      00000000 
 55699 17f0 00000000 		.quad	.LBB4255
 55699      00000000 
 55700 17f8 00000000 		.quad	.LBE4255
 55700      00000000 
 55701 1800 00000000 		.quad	.LBB4260
 55701      00000000 
 55702 1808 00000000 		.quad	.LBE4260
 55702      00000000 
 55703 1810 00000000 		.quad	0
 55703      00000000 
 55704 1818 00000000 		.quad	0
 55704      00000000 
 55705 1820 00000000 		.quad	.LBB3902
 55705      00000000 
 55706 1828 00000000 		.quad	.LBE3902
 55706      00000000 
 55707 1830 00000000 		.quad	.LBB4251
 55707      00000000 
 55708 1838 00000000 		.quad	.LBE4251
 55708      00000000 
 55709 1840 00000000 		.quad	.LBB4252
 55709      00000000 
 55710 1848 00000000 		.quad	.LBE4252
 55710      00000000 
 55711 1850 00000000 		.quad	.LBB4253
 55711      00000000 
 55712 1858 00000000 		.quad	.LBE4253
 55712      00000000 
 55713 1860 00000000 		.quad	.LBB4254
 55713      00000000 
 55714 1868 00000000 		.quad	.LBE4254
 55714      00000000 
 55715 1870 00000000 		.quad	0
 55715      00000000 
 55716 1878 00000000 		.quad	0
 55716      00000000 
 55717 1880 00000000 		.quad	.LBB3903
 55717      00000000 
 55718 1888 00000000 		.quad	.LBE3903
 55718      00000000 
 55719 1890 00000000 		.quad	.LBB3906
 55719      00000000 
 55720 1898 00000000 		.quad	.LBE3906
 55720      00000000 
 55721 18a0 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1384


 55721      00000000 
 55722 18a8 00000000 		.quad	0
 55722      00000000 
 55723 18b0 00000000 		.quad	.LBB3907
 55723      00000000 
 55724 18b8 00000000 		.quad	.LBE3907
 55724      00000000 
 55725 18c0 00000000 		.quad	.LBB3913
 55725      00000000 
 55726 18c8 00000000 		.quad	.LBE3913
 55726      00000000 
 55727 18d0 00000000 		.quad	0
 55727      00000000 
 55728 18d8 00000000 		.quad	0
 55728      00000000 
 55729 18e0 00000000 		.quad	.LBB3910
 55729      00000000 
 55730 18e8 00000000 		.quad	.LBE3910
 55730      00000000 
 55731 18f0 00000000 		.quad	.LBB3914
 55731      00000000 
 55732 18f8 00000000 		.quad	.LBE3914
 55732      00000000 
 55733 1900 00000000 		.quad	0
 55733      00000000 
 55734 1908 00000000 		.quad	0
 55734      00000000 
 55735 1910 00000000 		.quad	.LBB3921
 55735      00000000 
 55736 1918 00000000 		.quad	.LBE3921
 55736      00000000 
 55737 1920 00000000 		.quad	.LBB3927
 55737      00000000 
 55738 1928 00000000 		.quad	.LBE3927
 55738      00000000 
 55739 1930 00000000 		.quad	0
 55739      00000000 
 55740 1938 00000000 		.quad	0
 55740      00000000 
 55741 1940 00000000 		.quad	.LBB3924
 55741      00000000 
 55742 1948 00000000 		.quad	.LBE3924
 55742      00000000 
 55743 1950 00000000 		.quad	.LBB3928
 55743      00000000 
 55744 1958 00000000 		.quad	.LBE3928
 55744      00000000 
 55745 1960 00000000 		.quad	0
 55745      00000000 
 55746 1968 00000000 		.quad	0
 55746      00000000 
 55747 1970 00000000 		.quad	.LBB3929
 55747      00000000 
 55748 1978 00000000 		.quad	.LBE3929
 55748      00000000 
 55749 1980 00000000 		.quad	.LBB3935
 55749      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1385


 55750 1988 00000000 		.quad	.LBE3935
 55750      00000000 
 55751 1990 00000000 		.quad	0
 55751      00000000 
 55752 1998 00000000 		.quad	0
 55752      00000000 
 55753 19a0 00000000 		.quad	.LBB3932
 55753      00000000 
 55754 19a8 00000000 		.quad	.LBE3932
 55754      00000000 
 55755 19b0 00000000 		.quad	.LBB3936
 55755      00000000 
 55756 19b8 00000000 		.quad	.LBE3936
 55756      00000000 
 55757 19c0 00000000 		.quad	0
 55757      00000000 
 55758 19c8 00000000 		.quad	0
 55758      00000000 
 55759 19d0 00000000 		.quad	.LBB3940
 55759      00000000 
 55760 19d8 00000000 		.quad	.LBE3940
 55760      00000000 
 55761 19e0 00000000 		.quad	.LBB4206
 55761      00000000 
 55762 19e8 00000000 		.quad	.LBE4206
 55762      00000000 
 55763 19f0 00000000 		.quad	.LBB4242
 55763      00000000 
 55764 19f8 00000000 		.quad	.LBE4242
 55764      00000000 
 55765 1a00 00000000 		.quad	.LBB4244
 55765      00000000 
 55766 1a08 00000000 		.quad	.LBE4244
 55766      00000000 
 55767 1a10 00000000 		.quad	.LBB4246
 55767      00000000 
 55768 1a18 00000000 		.quad	.LBE4246
 55768      00000000 
 55769 1a20 00000000 		.quad	0
 55769      00000000 
 55770 1a28 00000000 		.quad	0
 55770      00000000 
 55771 1a30 00000000 		.quad	.LBB3943
 55771      00000000 
 55772 1a38 00000000 		.quad	.LBE3943
 55772      00000000 
 55773 1a40 00000000 		.quad	.LBB3987
 55773      00000000 
 55774 1a48 00000000 		.quad	.LBE3987
 55774      00000000 
 55775 1a50 00000000 		.quad	0
 55775      00000000 
 55776 1a58 00000000 		.quad	0
 55776      00000000 
 55777 1a60 00000000 		.quad	.LBB3944
 55777      00000000 
 55778 1a68 00000000 		.quad	.LBE3944
GAS LISTING /tmp/ccmMnd7l.s 			page 1386


 55778      00000000 
 55779 1a70 00000000 		.quad	.LBB3963
 55779      00000000 
 55780 1a78 00000000 		.quad	.LBE3963
 55780      00000000 
 55781 1a80 00000000 		.quad	.LBB3985
 55781      00000000 
 55782 1a88 00000000 		.quad	.LBE3985
 55782      00000000 
 55783 1a90 00000000 		.quad	0
 55783      00000000 
 55784 1a98 00000000 		.quad	0
 55784      00000000 
 55785 1aa0 00000000 		.quad	.LBB3945
 55785      00000000 
 55786 1aa8 00000000 		.quad	.LBE3945
 55786      00000000 
 55787 1ab0 00000000 		.quad	.LBB3961
 55787      00000000 
 55788 1ab8 00000000 		.quad	.LBE3961
 55788      00000000 
 55789 1ac0 00000000 		.quad	.LBB3962
 55789      00000000 
 55790 1ac8 00000000 		.quad	.LBE3962
 55790      00000000 
 55791 1ad0 00000000 		.quad	0
 55791      00000000 
 55792 1ad8 00000000 		.quad	0
 55792      00000000 
 55793 1ae0 00000000 		.quad	.LBB3947
 55793      00000000 
 55794 1ae8 00000000 		.quad	.LBE3947
 55794      00000000 
 55795 1af0 00000000 		.quad	.LBB3956
 55795      00000000 
 55796 1af8 00000000 		.quad	.LBE3956
 55796      00000000 
 55797 1b00 00000000 		.quad	0
 55797      00000000 
 55798 1b08 00000000 		.quad	0
 55798      00000000 
 55799 1b10 00000000 		.quad	.LBB3964
 55799      00000000 
 55800 1b18 00000000 		.quad	.LBE3964
 55800      00000000 
 55801 1b20 00000000 		.quad	.LBB3986
 55801      00000000 
 55802 1b28 00000000 		.quad	.LBE3986
 55802      00000000 
 55803 1b30 00000000 		.quad	0
 55803      00000000 
 55804 1b38 00000000 		.quad	0
 55804      00000000 
 55805 1b40 00000000 		.quad	.LBB3966
 55805      00000000 
 55806 1b48 00000000 		.quad	.LBE3966
 55806      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1387


 55807 1b50 00000000 		.quad	.LBB3983
 55807      00000000 
 55808 1b58 00000000 		.quad	.LBE3983
 55808      00000000 
 55809 1b60 00000000 		.quad	0
 55809      00000000 
 55810 1b68 00000000 		.quad	0
 55810      00000000 
 55811 1b70 00000000 		.quad	.LBB3989
 55811      00000000 
 55812 1b78 00000000 		.quad	.LBE3989
 55812      00000000 
 55813 1b80 00000000 		.quad	.LBB3994
 55813      00000000 
 55814 1b88 00000000 		.quad	.LBE3994
 55814      00000000 
 55815 1b90 00000000 		.quad	0
 55815      00000000 
 55816 1b98 00000000 		.quad	0
 55816      00000000 
 55817 1ba0 00000000 		.quad	.LBB3995
 55817      00000000 
 55818 1ba8 00000000 		.quad	.LBE3995
 55818      00000000 
 55819 1bb0 00000000 		.quad	.LBB4204
 55819      00000000 
 55820 1bb8 00000000 		.quad	.LBE4204
 55820      00000000 
 55821 1bc0 00000000 		.quad	.LBB4205
 55821      00000000 
 55822 1bc8 00000000 		.quad	.LBE4205
 55822      00000000 
 55823 1bd0 00000000 		.quad	0
 55823      00000000 
 55824 1bd8 00000000 		.quad	0
 55824      00000000 
 55825 1be0 00000000 		.quad	.LBB3997
 55825      00000000 
 55826 1be8 00000000 		.quad	.LBE3997
 55826      00000000 
 55827 1bf0 00000000 		.quad	.LBB4200
 55827      00000000 
 55828 1bf8 00000000 		.quad	.LBE4200
 55828      00000000 
 55829 1c00 00000000 		.quad	.LBB4201
 55829      00000000 
 55830 1c08 00000000 		.quad	.LBE4201
 55830      00000000 
 55831 1c10 00000000 		.quad	0
 55831      00000000 
 55832 1c18 00000000 		.quad	0
 55832      00000000 
 55833 1c20 00000000 		.quad	.LBB3998
 55833      00000000 
 55834 1c28 00000000 		.quad	.LBE3998
 55834      00000000 
 55835 1c30 00000000 		.quad	.LBB4190
GAS LISTING /tmp/ccmMnd7l.s 			page 1388


 55835      00000000 
 55836 1c38 00000000 		.quad	.LBE4190
 55836      00000000 
 55837 1c40 00000000 		.quad	0
 55837      00000000 
 55838 1c48 00000000 		.quad	0
 55838      00000000 
 55839 1c50 00000000 		.quad	.LBB4001
 55839      00000000 
 55840 1c58 00000000 		.quad	.LBE4001
 55840      00000000 
 55841 1c60 00000000 		.quad	.LBB4100
 55841      00000000 
 55842 1c68 00000000 		.quad	.LBE4100
 55842      00000000 
 55843 1c70 00000000 		.quad	.LBB4186
 55843      00000000 
 55844 1c78 00000000 		.quad	.LBE4186
 55844      00000000 
 55845 1c80 00000000 		.quad	.LBB4188
 55845      00000000 
 55846 1c88 00000000 		.quad	.LBE4188
 55846      00000000 
 55847 1c90 00000000 		.quad	.LBB4189
 55847      00000000 
 55848 1c98 00000000 		.quad	.LBE4189
 55848      00000000 
 55849 1ca0 00000000 		.quad	0
 55849      00000000 
 55850 1ca8 00000000 		.quad	0
 55850      00000000 
 55851 1cb0 00000000 		.quad	.LBB4004
 55851      00000000 
 55852 1cb8 00000000 		.quad	.LBE4004
 55852      00000000 
 55853 1cc0 00000000 		.quad	.LBB4007
 55853      00000000 
 55854 1cc8 00000000 		.quad	.LBE4007
 55854      00000000 
 55855 1cd0 00000000 		.quad	0
 55855      00000000 
 55856 1cd8 00000000 		.quad	0
 55856      00000000 
 55857 1ce0 00000000 		.quad	.LBB4008
 55857      00000000 
 55858 1ce8 00000000 		.quad	.LBE4008
 55858      00000000 
 55859 1cf0 00000000 		.quad	.LBB4089
 55859      00000000 
 55860 1cf8 00000000 		.quad	.LBE4089
 55860      00000000 
 55861 1d00 00000000 		.quad	.LBB4090
 55861      00000000 
 55862 1d08 00000000 		.quad	.LBE4090
 55862      00000000 
 55863 1d10 00000000 		.quad	.LBB4091
 55863      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1389


 55864 1d18 00000000 		.quad	.LBE4091
 55864      00000000 
 55865 1d20 00000000 		.quad	0
 55865      00000000 
 55866 1d28 00000000 		.quad	0
 55866      00000000 
 55867 1d30 00000000 		.quad	.LBB4010
 55867      00000000 
 55868 1d38 00000000 		.quad	.LBE4010
 55868      00000000 
 55869 1d40 00000000 		.quad	.LBB4053
 55869      00000000 
 55870 1d48 00000000 		.quad	.LBE4053
 55870      00000000 
 55871 1d50 00000000 		.quad	.LBB4085
 55871      00000000 
 55872 1d58 00000000 		.quad	.LBE4085
 55872      00000000 
 55873 1d60 00000000 		.quad	0
 55873      00000000 
 55874 1d68 00000000 		.quad	0
 55874      00000000 
 55875 1d70 00000000 		.quad	.LBB4017
 55875      00000000 
 55876 1d78 00000000 		.quad	.LBE4017
 55876      00000000 
 55877 1d80 00000000 		.quad	.LBB4033
 55877      00000000 
 55878 1d88 00000000 		.quad	.LBE4033
 55878      00000000 
 55879 1d90 00000000 		.quad	0
 55879      00000000 
 55880 1d98 00000000 		.quad	0
 55880      00000000 
 55881 1da0 00000000 		.quad	.LBB4019
 55881      00000000 
 55882 1da8 00000000 		.quad	.LBE4019
 55882      00000000 
 55883 1db0 00000000 		.quad	.LBB4024
 55883      00000000 
 55884 1db8 00000000 		.quad	.LBE4024
 55884      00000000 
 55885 1dc0 00000000 		.quad	0
 55885      00000000 
 55886 1dc8 00000000 		.quad	0
 55886      00000000 
 55887 1dd0 00000000 		.quad	.LBB4038
 55887      00000000 
 55888 1dd8 00000000 		.quad	.LBE4038
 55888      00000000 
 55889 1de0 00000000 		.quad	.LBB4054
 55889      00000000 
 55890 1de8 00000000 		.quad	.LBE4054
 55890      00000000 
 55891 1df0 00000000 		.quad	0
 55891      00000000 
 55892 1df8 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1390


 55892      00000000 
 55893 1e00 00000000 		.quad	.LBB4040
 55893      00000000 
 55894 1e08 00000000 		.quad	.LBE4040
 55894      00000000 
 55895 1e10 00000000 		.quad	.LBB4050
 55895      00000000 
 55896 1e18 00000000 		.quad	.LBE4050
 55896      00000000 
 55897 1e20 00000000 		.quad	.LBB4051
 55897      00000000 
 55898 1e28 00000000 		.quad	.LBE4051
 55898      00000000 
 55899 1e30 00000000 		.quad	0
 55899      00000000 
 55900 1e38 00000000 		.quad	0
 55900      00000000 
 55901 1e40 00000000 		.quad	.LBB4042
 55901      00000000 
 55902 1e48 00000000 		.quad	.LBE4042
 55902      00000000 
 55903 1e50 00000000 		.quad	.LBB4047
 55903      00000000 
 55904 1e58 00000000 		.quad	.LBE4047
 55904      00000000 
 55905 1e60 00000000 		.quad	0
 55905      00000000 
 55906 1e68 00000000 		.quad	0
 55906      00000000 
 55907 1e70 00000000 		.quad	.LBB4055
 55907      00000000 
 55908 1e78 00000000 		.quad	.LBE4055
 55908      00000000 
 55909 1e80 00000000 		.quad	.LBB4084
 55909      00000000 
 55910 1e88 00000000 		.quad	.LBE4084
 55910      00000000 
 55911 1e90 00000000 		.quad	0
 55911      00000000 
 55912 1e98 00000000 		.quad	0
 55912      00000000 
 55913 1ea0 00000000 		.quad	.LBB4060
 55913      00000000 
 55914 1ea8 00000000 		.quad	.LBE4060
 55914      00000000 
 55915 1eb0 00000000 		.quad	.LBB4072
 55915      00000000 
 55916 1eb8 00000000 		.quad	.LBE4072
 55916      00000000 
 55917 1ec0 00000000 		.quad	0
 55917      00000000 
 55918 1ec8 00000000 		.quad	0
 55918      00000000 
 55919 1ed0 00000000 		.quad	.LBB4063
 55919      00000000 
 55920 1ed8 00000000 		.quad	.LBE4063
 55920      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1391


 55921 1ee0 00000000 		.quad	.LBB4080
 55921      00000000 
 55922 1ee8 00000000 		.quad	.LBE4080
 55922      00000000 
 55923 1ef0 00000000 		.quad	0
 55923      00000000 
 55924 1ef8 00000000 		.quad	0
 55924      00000000 
 55925 1f00 00000000 		.quad	.LBB4065
 55925      00000000 
 55926 1f08 00000000 		.quad	.LBE4065
 55926      00000000 
 55927 1f10 00000000 		.quad	.LBB4070
 55927      00000000 
 55928 1f18 00000000 		.quad	.LBE4070
 55928      00000000 
 55929 1f20 00000000 		.quad	0
 55929      00000000 
 55930 1f28 00000000 		.quad	0
 55930      00000000 
 55931 1f30 00000000 		.quad	.LBB4101
 55931      00000000 
 55932 1f38 00000000 		.quad	.LBE4101
 55932      00000000 
 55933 1f40 00000000 		.quad	.LBB4108
 55933      00000000 
 55934 1f48 00000000 		.quad	.LBE4108
 55934      00000000 
 55935 1f50 00000000 		.quad	0
 55935      00000000 
 55936 1f58 00000000 		.quad	0
 55936      00000000 
 55937 1f60 00000000 		.quad	.LBB4104
 55937      00000000 
 55938 1f68 00000000 		.quad	.LBE4104
 55938      00000000 
 55939 1f70 00000000 		.quad	.LBB4109
 55939      00000000 
 55940 1f78 00000000 		.quad	.LBE4109
 55940      00000000 
 55941 1f80 00000000 		.quad	.LBB4110
 55941      00000000 
 55942 1f88 00000000 		.quad	.LBE4110
 55942      00000000 
 55943 1f90 00000000 		.quad	0
 55943      00000000 
 55944 1f98 00000000 		.quad	0
 55944      00000000 
 55945 1fa0 00000000 		.quad	.LBB4111
 55945      00000000 
 55946 1fa8 00000000 		.quad	.LBE4111
 55946      00000000 
 55947 1fb0 00000000 		.quad	.LBB4129
 55947      00000000 
 55948 1fb8 00000000 		.quad	.LBE4129
 55948      00000000 
 55949 1fc0 00000000 		.quad	.LBB4130
GAS LISTING /tmp/ccmMnd7l.s 			page 1392


 55949      00000000 
 55950 1fc8 00000000 		.quad	.LBE4130
 55950      00000000 
 55951 1fd0 00000000 		.quad	0
 55951      00000000 
 55952 1fd8 00000000 		.quad	0
 55952      00000000 
 55953 1fe0 00000000 		.quad	.LBB4125
 55953      00000000 
 55954 1fe8 00000000 		.quad	.LBE4125
 55954      00000000 
 55955 1ff0 00000000 		.quad	.LBB4131
 55955      00000000 
 55956 1ff8 00000000 		.quad	.LBE4131
 55956      00000000 
 55957 2000 00000000 		.quad	.LBB4135
 55957      00000000 
 55958 2008 00000000 		.quad	.LBE4135
 55958      00000000 
 55959 2010 00000000 		.quad	0
 55959      00000000 
 55960 2018 00000000 		.quad	0
 55960      00000000 
 55961 2020 00000000 		.quad	.LBB4132
 55961      00000000 
 55962 2028 00000000 		.quad	.LBE4132
 55962      00000000 
 55963 2030 00000000 		.quad	.LBB4136
 55963      00000000 
 55964 2038 00000000 		.quad	.LBE4136
 55964      00000000 
 55965 2040 00000000 		.quad	0
 55965      00000000 
 55966 2048 00000000 		.quad	0
 55966      00000000 
 55967 2050 00000000 		.quad	.LBB4137
 55967      00000000 
 55968 2058 00000000 		.quad	.LBE4137
 55968      00000000 
 55969 2060 00000000 		.quad	.LBB4141
 55969      00000000 
 55970 2068 00000000 		.quad	.LBE4141
 55970      00000000 
 55971 2070 00000000 		.quad	.LBB4145
 55971      00000000 
 55972 2078 00000000 		.quad	.LBE4145
 55972      00000000 
 55973 2080 00000000 		.quad	0
 55973      00000000 
 55974 2088 00000000 		.quad	0
 55974      00000000 
 55975 2090 00000000 		.quad	.LBB4142
 55975      00000000 
 55976 2098 00000000 		.quad	.LBE4142
 55976      00000000 
 55977 20a0 00000000 		.quad	.LBB4146
 55977      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1393


 55978 20a8 00000000 		.quad	.LBE4146
 55978      00000000 
 55979 20b0 00000000 		.quad	0
 55979      00000000 
 55980 20b8 00000000 		.quad	0
 55980      00000000 
 55981 20c0 00000000 		.quad	.LBB4147
 55981      00000000 
 55982 20c8 00000000 		.quad	.LBE4147
 55982      00000000 
 55983 20d0 00000000 		.quad	.LBB4187
 55983      00000000 
 55984 20d8 00000000 		.quad	.LBE4187
 55984      00000000 
 55985 20e0 00000000 		.quad	.LBB4191
 55985      00000000 
 55986 20e8 00000000 		.quad	.LBE4191
 55986      00000000 
 55987 20f0 00000000 		.quad	0
 55987      00000000 
 55988 20f8 00000000 		.quad	0
 55988      00000000 
 55989 2100 00000000 		.quad	.LBB4150
 55989      00000000 
 55990 2108 00000000 		.quad	.LBE4150
 55990      00000000 
 55991 2110 00000000 		.quad	.LBB4166
 55991      00000000 
 55992 2118 00000000 		.quad	.LBE4166
 55992      00000000 
 55993 2120 00000000 		.quad	.LBB4167
 55993      00000000 
 55994 2128 00000000 		.quad	.LBE4167
 55994      00000000 
 55995 2130 00000000 		.quad	0
 55995      00000000 
 55996 2138 00000000 		.quad	0
 55996      00000000 
 55997 2140 00000000 		.quad	.LBB4152
 55997      00000000 
 55998 2148 00000000 		.quad	.LBE4152
 55998      00000000 
 55999 2150 00000000 		.quad	.LBB4161
 55999      00000000 
 56000 2158 00000000 		.quad	.LBE4161
 56000      00000000 
 56001 2160 00000000 		.quad	0
 56001      00000000 
 56002 2168 00000000 		.quad	0
 56002      00000000 
 56003 2170 00000000 		.quad	.LBB4155
 56003      00000000 
 56004 2178 00000000 		.quad	.LBE4155
 56004      00000000 
 56005 2180 00000000 		.quad	.LBB4160
 56005      00000000 
 56006 2188 00000000 		.quad	.LBE4160
GAS LISTING /tmp/ccmMnd7l.s 			page 1394


 56006      00000000 
 56007 2190 00000000 		.quad	0
 56007      00000000 
 56008 2198 00000000 		.quad	0
 56008      00000000 
 56009 21a0 00000000 		.quad	.LBB4174
 56009      00000000 
 56010 21a8 00000000 		.quad	.LBE4174
 56010      00000000 
 56011 21b0 00000000 		.quad	.LBB4180
 56011      00000000 
 56012 21b8 00000000 		.quad	.LBE4180
 56012      00000000 
 56013 21c0 00000000 		.quad	0
 56013      00000000 
 56014 21c8 00000000 		.quad	0
 56014      00000000 
 56015 21d0 00000000 		.quad	.LBB4177
 56015      00000000 
 56016 21d8 00000000 		.quad	.LBE4177
 56016      00000000 
 56017 21e0 00000000 		.quad	.LBB4181
 56017      00000000 
 56018 21e8 00000000 		.quad	.LBE4181
 56018      00000000 
 56019 21f0 00000000 		.quad	0
 56019      00000000 
 56020 21f8 00000000 		.quad	0
 56020      00000000 
 56021 2200 00000000 		.quad	.LBB4209
 56021      00000000 
 56022 2208 00000000 		.quad	.LBE4209
 56022      00000000 
 56023 2210 00000000 		.quad	.LBB4243
 56023      00000000 
 56024 2218 00000000 		.quad	.LBE4243
 56024      00000000 
 56025 2220 00000000 		.quad	.LBB4245
 56025      00000000 
 56026 2228 00000000 		.quad	.LBE4245
 56026      00000000 
 56027 2230 00000000 		.quad	0
 56027      00000000 
 56028 2238 00000000 		.quad	0
 56028      00000000 
 56029 2240 00000000 		.quad	.LBB4212
 56029      00000000 
 56030 2248 00000000 		.quad	.LBE4212
 56030      00000000 
 56031 2250 00000000 		.quad	.LBB4228
 56031      00000000 
 56032 2258 00000000 		.quad	.LBE4228
 56032      00000000 
 56033 2260 00000000 		.quad	.LBB4229
 56033      00000000 
 56034 2268 00000000 		.quad	.LBE4229
 56034      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1395


 56035 2270 00000000 		.quad	0
 56035      00000000 
 56036 2278 00000000 		.quad	0
 56036      00000000 
 56037 2280 00000000 		.quad	.LBB4214
 56037      00000000 
 56038 2288 00000000 		.quad	.LBE4214
 56038      00000000 
 56039 2290 00000000 		.quad	.LBB4223
 56039      00000000 
 56040 2298 00000000 		.quad	.LBE4223
 56040      00000000 
 56041 22a0 00000000 		.quad	0
 56041      00000000 
 56042 22a8 00000000 		.quad	0
 56042      00000000 
 56043 22b0 00000000 		.quad	.LBB4217
 56043      00000000 
 56044 22b8 00000000 		.quad	.LBE4217
 56044      00000000 
 56045 22c0 00000000 		.quad	.LBB4222
 56045      00000000 
 56046 22c8 00000000 		.quad	.LBE4222
 56046      00000000 
 56047 22d0 00000000 		.quad	0
 56047      00000000 
 56048 22d8 00000000 		.quad	0
 56048      00000000 
 56049 22e0 00000000 		.quad	.LBB4234
 56049      00000000 
 56050 22e8 00000000 		.quad	.LBE4234
 56050      00000000 
 56051 22f0 00000000 		.quad	.LBB4241
 56051      00000000 
 56052 22f8 00000000 		.quad	.LBE4241
 56052      00000000 
 56053 2300 00000000 		.quad	0
 56053      00000000 
 56054 2308 00000000 		.quad	0
 56054      00000000 
 56055 2310 00000000 		.quad	.LBB4266
 56055      00000000 
 56056 2318 00000000 		.quad	.LBE4266
 56056      00000000 
 56057 2320 00000000 		.quad	.LBB4653
 56057      00000000 
 56058 2328 00000000 		.quad	.LBE4653
 56058      00000000 
 56059 2330 00000000 		.quad	0
 56059      00000000 
 56060 2338 00000000 		.quad	0
 56060      00000000 
 56061 2340 00000000 		.quad	.LBB4267
 56061      00000000 
 56062 2348 00000000 		.quad	.LBE4267
 56062      00000000 
 56063 2350 00000000 		.quad	.LBB4629
GAS LISTING /tmp/ccmMnd7l.s 			page 1396


 56063      00000000 
 56064 2358 00000000 		.quad	.LBE4629
 56064      00000000 
 56065 2360 00000000 		.quad	0
 56065      00000000 
 56066 2368 00000000 		.quad	0
 56066      00000000 
 56067 2370 00000000 		.quad	.LBB4268
 56067      00000000 
 56068 2378 00000000 		.quad	.LBE4268
 56068      00000000 
 56069 2380 00000000 		.quad	.LBB4619
 56069      00000000 
 56070 2388 00000000 		.quad	.LBE4619
 56070      00000000 
 56071 2390 00000000 		.quad	.LBB4624
 56071      00000000 
 56072 2398 00000000 		.quad	.LBE4624
 56072      00000000 
 56073 23a0 00000000 		.quad	0
 56073      00000000 
 56074 23a8 00000000 		.quad	0
 56074      00000000 
 56075 23b0 00000000 		.quad	.LBB4269
 56075      00000000 
 56076 23b8 00000000 		.quad	.LBE4269
 56076      00000000 
 56077 23c0 00000000 		.quad	.LBB4615
 56077      00000000 
 56078 23c8 00000000 		.quad	.LBE4615
 56078      00000000 
 56079 23d0 00000000 		.quad	.LBB4616
 56079      00000000 
 56080 23d8 00000000 		.quad	.LBE4616
 56080      00000000 
 56081 23e0 00000000 		.quad	.LBB4617
 56081      00000000 
 56082 23e8 00000000 		.quad	.LBE4617
 56082      00000000 
 56083 23f0 00000000 		.quad	.LBB4618
 56083      00000000 
 56084 23f8 00000000 		.quad	.LBE4618
 56084      00000000 
 56085 2400 00000000 		.quad	0
 56085      00000000 
 56086 2408 00000000 		.quad	0
 56086      00000000 
 56087 2410 00000000 		.quad	.LBB4270
 56087      00000000 
 56088 2418 00000000 		.quad	.LBE4270
 56088      00000000 
 56089 2420 00000000 		.quad	.LBB4273
 56089      00000000 
 56090 2428 00000000 		.quad	.LBE4273
 56090      00000000 
 56091 2430 00000000 		.quad	0
 56091      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1397


 56092 2438 00000000 		.quad	0
 56092      00000000 
 56093 2440 00000000 		.quad	.LBB4274
 56093      00000000 
 56094 2448 00000000 		.quad	.LBE4274
 56094      00000000 
 56095 2450 00000000 		.quad	.LBB4280
 56095      00000000 
 56096 2458 00000000 		.quad	.LBE4280
 56096      00000000 
 56097 2460 00000000 		.quad	0
 56097      00000000 
 56098 2468 00000000 		.quad	0
 56098      00000000 
 56099 2470 00000000 		.quad	.LBB4277
 56099      00000000 
 56100 2478 00000000 		.quad	.LBE4277
 56100      00000000 
 56101 2480 00000000 		.quad	.LBB4281
 56101      00000000 
 56102 2488 00000000 		.quad	.LBE4281
 56102      00000000 
 56103 2490 00000000 		.quad	0
 56103      00000000 
 56104 2498 00000000 		.quad	0
 56104      00000000 
 56105 24a0 00000000 		.quad	.LBB4288
 56105      00000000 
 56106 24a8 00000000 		.quad	.LBE4288
 56106      00000000 
 56107 24b0 00000000 		.quad	.LBB4294
 56107      00000000 
 56108 24b8 00000000 		.quad	.LBE4294
 56108      00000000 
 56109 24c0 00000000 		.quad	0
 56109      00000000 
 56110 24c8 00000000 		.quad	0
 56110      00000000 
 56111 24d0 00000000 		.quad	.LBB4291
 56111      00000000 
 56112 24d8 00000000 		.quad	.LBE4291
 56112      00000000 
 56113 24e0 00000000 		.quad	.LBB4295
 56113      00000000 
 56114 24e8 00000000 		.quad	.LBE4295
 56114      00000000 
 56115 24f0 00000000 		.quad	0
 56115      00000000 
 56116 24f8 00000000 		.quad	0
 56116      00000000 
 56117 2500 00000000 		.quad	.LBB4296
 56117      00000000 
 56118 2508 00000000 		.quad	.LBE4296
 56118      00000000 
 56119 2510 00000000 		.quad	.LBB4302
 56119      00000000 
 56120 2518 00000000 		.quad	.LBE4302
GAS LISTING /tmp/ccmMnd7l.s 			page 1398


 56120      00000000 
 56121 2520 00000000 		.quad	0
 56121      00000000 
 56122 2528 00000000 		.quad	0
 56122      00000000 
 56123 2530 00000000 		.quad	.LBB4299
 56123      00000000 
 56124 2538 00000000 		.quad	.LBE4299
 56124      00000000 
 56125 2540 00000000 		.quad	.LBB4303
 56125      00000000 
 56126 2548 00000000 		.quad	.LBE4303
 56126      00000000 
 56127 2550 00000000 		.quad	0
 56127      00000000 
 56128 2558 00000000 		.quad	0
 56128      00000000 
 56129 2560 00000000 		.quad	.LBB4307
 56129      00000000 
 56130 2568 00000000 		.quad	.LBE4307
 56130      00000000 
 56131 2570 00000000 		.quad	.LBB4575
 56131      00000000 
 56132 2578 00000000 		.quad	.LBE4575
 56132      00000000 
 56133 2580 00000000 		.quad	.LBB4584
 56133      00000000 
 56134 2588 00000000 		.quad	.LBE4584
 56134      00000000 
 56135 2590 00000000 		.quad	.LBB4608
 56135      00000000 
 56136 2598 00000000 		.quad	.LBE4608
 56136      00000000 
 56137 25a0 00000000 		.quad	.LBB4610
 56137      00000000 
 56138 25a8 00000000 		.quad	.LBE4610
 56138      00000000 
 56139 25b0 00000000 		.quad	0
 56139      00000000 
 56140 25b8 00000000 		.quad	0
 56140      00000000 
 56141 25c0 00000000 		.quad	.LBB4310
 56141      00000000 
 56142 25c8 00000000 		.quad	.LBE4310
 56142      00000000 
 56143 25d0 00000000 		.quad	.LBB4354
 56143      00000000 
 56144 25d8 00000000 		.quad	.LBE4354
 56144      00000000 
 56145 25e0 00000000 		.quad	0
 56145      00000000 
 56146 25e8 00000000 		.quad	0
 56146      00000000 
 56147 25f0 00000000 		.quad	.LBB4311
 56147      00000000 
 56148 25f8 00000000 		.quad	.LBE4311
 56148      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1399


 56149 2600 00000000 		.quad	.LBB4330
 56149      00000000 
 56150 2608 00000000 		.quad	.LBE4330
 56150      00000000 
 56151 2610 00000000 		.quad	.LBB4352
 56151      00000000 
 56152 2618 00000000 		.quad	.LBE4352
 56152      00000000 
 56153 2620 00000000 		.quad	0
 56153      00000000 
 56154 2628 00000000 		.quad	0
 56154      00000000 
 56155 2630 00000000 		.quad	.LBB4312
 56155      00000000 
 56156 2638 00000000 		.quad	.LBE4312
 56156      00000000 
 56157 2640 00000000 		.quad	.LBB4328
 56157      00000000 
 56158 2648 00000000 		.quad	.LBE4328
 56158      00000000 
 56159 2650 00000000 		.quad	.LBB4329
 56159      00000000 
 56160 2658 00000000 		.quad	.LBE4329
 56160      00000000 
 56161 2660 00000000 		.quad	0
 56161      00000000 
 56162 2668 00000000 		.quad	0
 56162      00000000 
 56163 2670 00000000 		.quad	.LBB4314
 56163      00000000 
 56164 2678 00000000 		.quad	.LBE4314
 56164      00000000 
 56165 2680 00000000 		.quad	.LBB4323
 56165      00000000 
 56166 2688 00000000 		.quad	.LBE4323
 56166      00000000 
 56167 2690 00000000 		.quad	0
 56167      00000000 
 56168 2698 00000000 		.quad	0
 56168      00000000 
 56169 26a0 00000000 		.quad	.LBB4331
 56169      00000000 
 56170 26a8 00000000 		.quad	.LBE4331
 56170      00000000 
 56171 26b0 00000000 		.quad	.LBB4353
 56171      00000000 
 56172 26b8 00000000 		.quad	.LBE4353
 56172      00000000 
 56173 26c0 00000000 		.quad	0
 56173      00000000 
 56174 26c8 00000000 		.quad	0
 56174      00000000 
 56175 26d0 00000000 		.quad	.LBB4333
 56175      00000000 
 56176 26d8 00000000 		.quad	.LBE4333
 56176      00000000 
 56177 26e0 00000000 		.quad	.LBB4350
GAS LISTING /tmp/ccmMnd7l.s 			page 1400


 56177      00000000 
 56178 26e8 00000000 		.quad	.LBE4350
 56178      00000000 
 56179 26f0 00000000 		.quad	0
 56179      00000000 
 56180 26f8 00000000 		.quad	0
 56180      00000000 
 56181 2700 00000000 		.quad	.LBB4356
 56181      00000000 
 56182 2708 00000000 		.quad	.LBE4356
 56182      00000000 
 56183 2710 00000000 		.quad	.LBB4361
 56183      00000000 
 56184 2718 00000000 		.quad	.LBE4361
 56184      00000000 
 56185 2720 00000000 		.quad	0
 56185      00000000 
 56186 2728 00000000 		.quad	0
 56186      00000000 
 56187 2730 00000000 		.quad	.LBB4362
 56187      00000000 
 56188 2738 00000000 		.quad	.LBE4362
 56188      00000000 
 56189 2740 00000000 		.quad	.LBB4573
 56189      00000000 
 56190 2748 00000000 		.quad	.LBE4573
 56190      00000000 
 56191 2750 00000000 		.quad	.LBB4574
 56191      00000000 
 56192 2758 00000000 		.quad	.LBE4574
 56192      00000000 
 56193 2760 00000000 		.quad	0
 56193      00000000 
 56194 2768 00000000 		.quad	0
 56194      00000000 
 56195 2770 00000000 		.quad	.LBB4364
 56195      00000000 
 56196 2778 00000000 		.quad	.LBE4364
 56196      00000000 
 56197 2780 00000000 		.quad	.LBB4569
 56197      00000000 
 56198 2788 00000000 		.quad	.LBE4569
 56198      00000000 
 56199 2790 00000000 		.quad	.LBB4570
 56199      00000000 
 56200 2798 00000000 		.quad	.LBE4570
 56200      00000000 
 56201 27a0 00000000 		.quad	0
 56201      00000000 
 56202 27a8 00000000 		.quad	0
 56202      00000000 
 56203 27b0 00000000 		.quad	.LBB4367
 56203      00000000 
 56204 27b8 00000000 		.quad	.LBE4367
 56204      00000000 
 56205 27c0 00000000 		.quad	.LBB4472
 56205      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1401


 56206 27c8 00000000 		.quad	.LBE4472
 56206      00000000 
 56207 27d0 00000000 		.quad	.LBB4556
 56207      00000000 
 56208 27d8 00000000 		.quad	.LBE4556
 56208      00000000 
 56209 27e0 00000000 		.quad	.LBB4558
 56209      00000000 
 56210 27e8 00000000 		.quad	.LBE4558
 56210      00000000 
 56211 27f0 00000000 		.quad	.LBB4559
 56211      00000000 
 56212 27f8 00000000 		.quad	.LBE4559
 56212      00000000 
 56213 2800 00000000 		.quad	.LBB4560
 56213      00000000 
 56214 2808 00000000 		.quad	.LBE4560
 56214      00000000 
 56215 2810 00000000 		.quad	0
 56215      00000000 
 56216 2818 00000000 		.quad	0
 56216      00000000 
 56217 2820 00000000 		.quad	.LBB4370
 56217      00000000 
 56218 2828 00000000 		.quad	.LBE4370
 56218      00000000 
 56219 2830 00000000 		.quad	.LBB4374
 56219      00000000 
 56220 2838 00000000 		.quad	.LBE4374
 56220      00000000 
 56221 2840 00000000 		.quad	.LBB4375
 56221      00000000 
 56222 2848 00000000 		.quad	.LBE4375
 56222      00000000 
 56223 2850 00000000 		.quad	0
 56223      00000000 
 56224 2858 00000000 		.quad	0
 56224      00000000 
 56225 2860 00000000 		.quad	.LBB4376
 56225      00000000 
 56226 2868 00000000 		.quad	.LBE4376
 56226      00000000 
 56227 2870 00000000 		.quad	.LBB4458
 56227      00000000 
 56228 2878 00000000 		.quad	.LBE4458
 56228      00000000 
 56229 2880 00000000 		.quad	.LBB4459
 56229      00000000 
 56230 2888 00000000 		.quad	.LBE4459
 56230      00000000 
 56231 2890 00000000 		.quad	.LBB4460
 56231      00000000 
 56232 2898 00000000 		.quad	.LBE4460
 56232      00000000 
 56233 28a0 00000000 		.quad	.LBB4461
 56233      00000000 
 56234 28a8 00000000 		.quad	.LBE4461
GAS LISTING /tmp/ccmMnd7l.s 			page 1402


 56234      00000000 
 56235 28b0 00000000 		.quad	0
 56235      00000000 
 56236 28b8 00000000 		.quad	0
 56236      00000000 
 56237 28c0 00000000 		.quad	.LBB4378
 56237      00000000 
 56238 28c8 00000000 		.quad	.LBE4378
 56238      00000000 
 56239 28d0 00000000 		.quad	.LBB4421
 56239      00000000 
 56240 28d8 00000000 		.quad	.LBE4421
 56240      00000000 
 56241 28e0 00000000 		.quad	.LBB4453
 56241      00000000 
 56242 28e8 00000000 		.quad	.LBE4453
 56242      00000000 
 56243 28f0 00000000 		.quad	0
 56243      00000000 
 56244 28f8 00000000 		.quad	0
 56244      00000000 
 56245 2900 00000000 		.quad	.LBB4385
 56245      00000000 
 56246 2908 00000000 		.quad	.LBE4385
 56246      00000000 
 56247 2910 00000000 		.quad	.LBB4401
 56247      00000000 
 56248 2918 00000000 		.quad	.LBE4401
 56248      00000000 
 56249 2920 00000000 		.quad	0
 56249      00000000 
 56250 2928 00000000 		.quad	0
 56250      00000000 
 56251 2930 00000000 		.quad	.LBB4387
 56251      00000000 
 56252 2938 00000000 		.quad	.LBE4387
 56252      00000000 
 56253 2940 00000000 		.quad	.LBB4392
 56253      00000000 
 56254 2948 00000000 		.quad	.LBE4392
 56254      00000000 
 56255 2950 00000000 		.quad	0
 56255      00000000 
 56256 2958 00000000 		.quad	0
 56256      00000000 
 56257 2960 00000000 		.quad	.LBB4406
 56257      00000000 
 56258 2968 00000000 		.quad	.LBE4406
 56258      00000000 
 56259 2970 00000000 		.quad	.LBB4422
 56259      00000000 
 56260 2978 00000000 		.quad	.LBE4422
 56260      00000000 
 56261 2980 00000000 		.quad	0
 56261      00000000 
 56262 2988 00000000 		.quad	0
 56262      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1403


 56263 2990 00000000 		.quad	.LBB4408
 56263      00000000 
 56264 2998 00000000 		.quad	.LBE4408
 56264      00000000 
 56265 29a0 00000000 		.quad	.LBB4418
 56265      00000000 
 56266 29a8 00000000 		.quad	.LBE4418
 56266      00000000 
 56267 29b0 00000000 		.quad	.LBB4419
 56267      00000000 
 56268 29b8 00000000 		.quad	.LBE4419
 56268      00000000 
 56269 29c0 00000000 		.quad	0
 56269      00000000 
 56270 29c8 00000000 		.quad	0
 56270      00000000 
 56271 29d0 00000000 		.quad	.LBB4410
 56271      00000000 
 56272 29d8 00000000 		.quad	.LBE4410
 56272      00000000 
 56273 29e0 00000000 		.quad	.LBB4415
 56273      00000000 
 56274 29e8 00000000 		.quad	.LBE4415
 56274      00000000 
 56275 29f0 00000000 		.quad	0
 56275      00000000 
 56276 29f8 00000000 		.quad	0
 56276      00000000 
 56277 2a00 00000000 		.quad	.LBB4423
 56277      00000000 
 56278 2a08 00000000 		.quad	.LBE4423
 56278      00000000 
 56279 2a10 00000000 		.quad	.LBB4452
 56279      00000000 
 56280 2a18 00000000 		.quad	.LBE4452
 56280      00000000 
 56281 2a20 00000000 		.quad	0
 56281      00000000 
 56282 2a28 00000000 		.quad	0
 56282      00000000 
 56283 2a30 00000000 		.quad	.LBB4428
 56283      00000000 
 56284 2a38 00000000 		.quad	.LBE4428
 56284      00000000 
 56285 2a40 00000000 		.quad	.LBB4440
 56285      00000000 
 56286 2a48 00000000 		.quad	.LBE4440
 56286      00000000 
 56287 2a50 00000000 		.quad	0
 56287      00000000 
 56288 2a58 00000000 		.quad	0
 56288      00000000 
 56289 2a60 00000000 		.quad	.LBB4431
 56289      00000000 
 56290 2a68 00000000 		.quad	.LBE4431
 56290      00000000 
 56291 2a70 00000000 		.quad	.LBB4448
GAS LISTING /tmp/ccmMnd7l.s 			page 1404


 56291      00000000 
 56292 2a78 00000000 		.quad	.LBE4448
 56292      00000000 
 56293 2a80 00000000 		.quad	0
 56293      00000000 
 56294 2a88 00000000 		.quad	0
 56294      00000000 
 56295 2a90 00000000 		.quad	.LBB4433
 56295      00000000 
 56296 2a98 00000000 		.quad	.LBE4433
 56296      00000000 
 56297 2aa0 00000000 		.quad	.LBB4438
 56297      00000000 
 56298 2aa8 00000000 		.quad	.LBE4438
 56298      00000000 
 56299 2ab0 00000000 		.quad	0
 56299      00000000 
 56300 2ab8 00000000 		.quad	0
 56300      00000000 
 56301 2ac0 00000000 		.quad	.LBB4473
 56301      00000000 
 56302 2ac8 00000000 		.quad	.LBE4473
 56302      00000000 
 56303 2ad0 00000000 		.quad	.LBB4482
 56303      00000000 
 56304 2ad8 00000000 		.quad	.LBE4482
 56304      00000000 
 56305 2ae0 00000000 		.quad	.LBB4484
 56305      00000000 
 56306 2ae8 00000000 		.quad	.LBE4484
 56306      00000000 
 56307 2af0 00000000 		.quad	0
 56307      00000000 
 56308 2af8 00000000 		.quad	0
 56308      00000000 
 56309 2b00 00000000 		.quad	.LBB4477
 56309      00000000 
 56310 2b08 00000000 		.quad	.LBE4477
 56310      00000000 
 56311 2b10 00000000 		.quad	.LBB4483
 56311      00000000 
 56312 2b18 00000000 		.quad	.LBE4483
 56312      00000000 
 56313 2b20 00000000 		.quad	.LBB4485
 56313      00000000 
 56314 2b28 00000000 		.quad	.LBE4485
 56314      00000000 
 56315 2b30 00000000 		.quad	.LBB4486
 56315      00000000 
 56316 2b38 00000000 		.quad	.LBE4486
 56316      00000000 
 56317 2b40 00000000 		.quad	0
 56317      00000000 
 56318 2b48 00000000 		.quad	0
 56318      00000000 
 56319 2b50 00000000 		.quad	.LBB4487
 56319      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1405


 56320 2b58 00000000 		.quad	.LBE4487
 56320      00000000 
 56321 2b60 00000000 		.quad	.LBB4505
 56321      00000000 
 56322 2b68 00000000 		.quad	.LBE4505
 56322      00000000 
 56323 2b70 00000000 		.quad	.LBB4506
 56323      00000000 
 56324 2b78 00000000 		.quad	.LBE4506
 56324      00000000 
 56325 2b80 00000000 		.quad	0
 56325      00000000 
 56326 2b88 00000000 		.quad	0
 56326      00000000 
 56327 2b90 00000000 		.quad	.LBB4501
 56327      00000000 
 56328 2b98 00000000 		.quad	.LBE4501
 56328      00000000 
 56329 2ba0 00000000 		.quad	.LBB4507
 56329      00000000 
 56330 2ba8 00000000 		.quad	.LBE4507
 56330      00000000 
 56331 2bb0 00000000 		.quad	.LBB4511
 56331      00000000 
 56332 2bb8 00000000 		.quad	.LBE4511
 56332      00000000 
 56333 2bc0 00000000 		.quad	0
 56333      00000000 
 56334 2bc8 00000000 		.quad	0
 56334      00000000 
 56335 2bd0 00000000 		.quad	.LBB4508
 56335      00000000 
 56336 2bd8 00000000 		.quad	.LBE4508
 56336      00000000 
 56337 2be0 00000000 		.quad	.LBB4512
 56337      00000000 
 56338 2be8 00000000 		.quad	.LBE4512
 56338      00000000 
 56339 2bf0 00000000 		.quad	0
 56339      00000000 
 56340 2bf8 00000000 		.quad	0
 56340      00000000 
 56341 2c00 00000000 		.quad	.LBB4513
 56341      00000000 
 56342 2c08 00000000 		.quad	.LBE4513
 56342      00000000 
 56343 2c10 00000000 		.quad	.LBB4517
 56343      00000000 
 56344 2c18 00000000 		.quad	.LBE4517
 56344      00000000 
 56345 2c20 00000000 		.quad	.LBB4521
 56345      00000000 
 56346 2c28 00000000 		.quad	.LBE4521
 56346      00000000 
 56347 2c30 00000000 		.quad	0
 56347      00000000 
 56348 2c38 00000000 		.quad	0
GAS LISTING /tmp/ccmMnd7l.s 			page 1406


 56348      00000000 
 56349 2c40 00000000 		.quad	.LBB4518
 56349      00000000 
 56350 2c48 00000000 		.quad	.LBE4518
 56350      00000000 
 56351 2c50 00000000 		.quad	.LBB4522
 56351      00000000 
 56352 2c58 00000000 		.quad	.LBE4522
 56352      00000000 
 56353 2c60 00000000 		.quad	0
 56353      00000000 
 56354 2c68 00000000 		.quad	0
 56354      00000000 
 56355 2c70 00000000 		.quad	.LBB4523
 56355      00000000 
 56356 2c78 00000000 		.quad	.LBE4523
 56356      00000000 
 56357 2c80 00000000 		.quad	.LBB4557
 56357      00000000 
 56358 2c88 00000000 		.quad	.LBE4557
 56358      00000000 
 56359 2c90 00000000 		.quad	0
 56359      00000000 
 56360 2c98 00000000 		.quad	0
 56360      00000000 
 56361 2ca0 00000000 		.quad	.LBB4526
 56361      00000000 
 56362 2ca8 00000000 		.quad	.LBE4526
 56362      00000000 
 56363 2cb0 00000000 		.quad	.LBB4539
 56363      00000000 
 56364 2cb8 00000000 		.quad	.LBE4539
 56364      00000000 
 56365 2cc0 00000000 		.quad	0
 56365      00000000 
 56366 2cc8 00000000 		.quad	0
 56366      00000000 
 56367 2cd0 00000000 		.quad	.LBB4530
 56367      00000000 
 56368 2cd8 00000000 		.quad	.LBE4530
 56368      00000000 
 56369 2ce0 00000000 		.quad	.LBB4535
 56369      00000000 
 56370 2ce8 00000000 		.quad	.LBE4535
 56370      00000000 
 56371 2cf0 00000000 		.quad	0
 56371      00000000 
 56372 2cf8 00000000 		.quad	0
 56372      00000000 
 56373 2d00 00000000 		.quad	.LBB4544
 56373      00000000 
 56374 2d08 00000000 		.quad	.LBE4544
 56374      00000000 
 56375 2d10 00000000 		.quad	.LBB4550
 56375      00000000 
 56376 2d18 00000000 		.quad	.LBE4550
 56376      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1407


 56377 2d20 00000000 		.quad	0
 56377      00000000 
 56378 2d28 00000000 		.quad	0
 56378      00000000 
 56379 2d30 00000000 		.quad	.LBB4547
 56379      00000000 
 56380 2d38 00000000 		.quad	.LBE4547
 56380      00000000 
 56381 2d40 00000000 		.quad	.LBB4551
 56381      00000000 
 56382 2d48 00000000 		.quad	.LBE4551
 56382      00000000 
 56383 2d50 00000000 		.quad	0
 56383      00000000 
 56384 2d58 00000000 		.quad	0
 56384      00000000 
 56385 2d60 00000000 		.quad	.LBB4576
 56385      00000000 
 56386 2d68 00000000 		.quad	.LBE4576
 56386      00000000 
 56387 2d70 00000000 		.quad	.LBB4583
 56387      00000000 
 56388 2d78 00000000 		.quad	.LBE4583
 56388      00000000 
 56389 2d80 00000000 		.quad	0
 56389      00000000 
 56390 2d88 00000000 		.quad	0
 56390      00000000 
 56391 2d90 00000000 		.quad	.LBB4587
 56391      00000000 
 56392 2d98 00000000 		.quad	.LBE4587
 56392      00000000 
 56393 2da0 00000000 		.quad	.LBB4609
 56393      00000000 
 56394 2da8 00000000 		.quad	.LBE4609
 56394      00000000 
 56395 2db0 00000000 		.quad	0
 56395      00000000 
 56396 2db8 00000000 		.quad	0
 56396      00000000 
 56397 2dc0 00000000 		.quad	.LBB4590
 56397      00000000 
 56398 2dc8 00000000 		.quad	.LBE4590
 56398      00000000 
 56399 2dd0 00000000 		.quad	.LBB4605
 56399      00000000 
 56400 2dd8 00000000 		.quad	.LBE4605
 56400      00000000 
 56401 2de0 00000000 		.quad	0
 56401      00000000 
 56402 2de8 00000000 		.quad	0
 56402      00000000 
 56403 2df0 00000000 		.quad	.LBB4592
 56403      00000000 
 56404 2df8 00000000 		.quad	.LBE4592
 56404      00000000 
 56405 2e00 00000000 		.quad	.LBB4601
GAS LISTING /tmp/ccmMnd7l.s 			page 1408


 56405      00000000 
 56406 2e08 00000000 		.quad	.LBE4601
 56406      00000000 
 56407 2e10 00000000 		.quad	0
 56407      00000000 
 56408 2e18 00000000 		.quad	0
 56408      00000000 
 56409 2e20 00000000 		.quad	.LBB4595
 56409      00000000 
 56410 2e28 00000000 		.quad	.LBE4595
 56410      00000000 
 56411 2e30 00000000 		.quad	.LBB4600
 56411      00000000 
 56412 2e38 00000000 		.quad	.LBE4600
 56412      00000000 
 56413 2e40 00000000 		.quad	0
 56413      00000000 
 56414 2e48 00000000 		.quad	0
 56414      00000000 
 56415 2e50 00000000 		.quad	.LBB4657
 56415      00000000 
 56416 2e58 00000000 		.quad	.LBE4657
 56416      00000000 
 56417 2e60 00000000 		.quad	.LBB4661
 56417      00000000 
 56418 2e68 00000000 		.quad	.LBE4661
 56418      00000000 
 56419 2e70 00000000 		.quad	.LBB4662
 56419      00000000 
 56420 2e78 00000000 		.quad	.LBE4662
 56420      00000000 
 56421 2e80 00000000 		.quad	0
 56421      00000000 
 56422 2e88 00000000 		.quad	0
 56422      00000000 
 56423 2e90 00000000 		.quad	.Ltext0
 56423      00000000 
 56424 2e98 00000000 		.quad	.Letext0
 56424      00000000 
 56425 2ea0 00000000 		.quad	.LFB1390
 56425      00000000 
 56426 2ea8 00000000 		.quad	.LFE1390
 56426      00000000 
 56427 2eb0 00000000 		.quad	.LFB6548
 56427      00000000 
 56428 2eb8 00000000 		.quad	.LFE6548
 56428      00000000 
 56429 2ec0 00000000 		.quad	.LFB6521
 56429      00000000 
 56430 2ec8 00000000 		.quad	.LFE6521
 56430      00000000 
 56431 2ed0 00000000 		.quad	.LFB6050
 56431      00000000 
 56432 2ed8 00000000 		.quad	.LFE6050
 56432      00000000 
 56433 2ee0 00000000 		.quad	.LFB6560
 56433      00000000 
GAS LISTING /tmp/ccmMnd7l.s 			page 1409


 56434 2ee8 00000000 		.quad	.LFE6560
 56434      00000000 
 56435 2ef0 00000000 		.quad	.LFB6046
 56435      00000000 
 56436 2ef8 00000000 		.quad	.LFE6046
 56436      00000000 
 56437 2f00 00000000 		.quad	.LFB6051
 56437      00000000 
 56438 2f08 00000000 		.quad	.LFE6051
 56438      00000000 
 56439 2f10 00000000 		.quad	.LFB6592
 56439      00000000 
 56440 2f18 00000000 		.quad	.LFE6592
 56440      00000000 
 56441 2f20 00000000 		.quad	0
 56441      00000000 
 56442 2f28 00000000 		.quad	0
 56442      00000000 
 56443              		.section	.debug_line,"",@progbits
 56444              	.Ldebug_line0:
 56445 0000 15140000 		.section	.debug_str,"MS",@progbits,1
 56445      0200E305 
 56445      00000101 
 56445      FB0E0D00 
 56445      01010101 
 56446              	.LASF984:
 56447 0000 6F706572 		.string	"operator~"
 56447      61746F72 
 56447      7E00
 56448              	.LASF505:
 56449 000a 5F5F6D61 		.string	"__match_cv_qualifiers<long int, long unsigned int, false, false>"
 56449      7463685F 
 56449      63765F71 
 56449      75616C69 
 56449      66696572 
 56450              	.LASF428:
 56451 004b 5F4D6F64 		.string	"_Mod<long unsigned int, 4294967296ul, 1ul, 0ul, true, true>"
 56451      3C6C6F6E 
 56451      6720756E 
 56451      7369676E 
 56451      65642069 
 56452              	.LASF1423:
 56453 0087 706F7369 		.string	"positive_sign"
 56453      74697665 
 56453      5F736967 
 56453      6E00
 56454              	.LASF969:
 56455 0095 5F5A4E53 		.string	"_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEELb1EE7_S_baseES6_"
 56455      7431305F 
 56455      49746572 
 56455      5F626173 
 56455      65494E39 
 56456              	.LASF1463:
 56457 00ed 6D627374 		.string	"mbstowcs"
 56457      6F776373 
 56457      00
 56458              	.LASF1578:
GAS LISTING /tmp/ccmMnd7l.s 			page 1410


 56459 00f6 5F5F6C65 		.string	"__len"
 56459      6E00
 56460              	.LASF135:
 56461 00fc 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcPKcS1_"
 56461      7331335F 
 56461      535F636F 
 56461      70795F63 
 56461      68617273 
 56462              	.LASF325:
 56463 011a 5F5A4E4B 		.string	"_ZNKSt17integral_constantIiLi0EEcviEv"
 56463      53743137 
 56463      696E7465 
 56463      6772616C 
 56463      5F636F6E 
 56464              	.LASF1537:
 56465 0140 5F5F6D65 		.string	"__mem"
 56465      6D00
 56466              	.LASF678:
 56467 0146 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSEOS1_"
 56467      74367665 
 56467      63746F72 
 56467      496A5361 
 56467      496A4545 
 56468              	.LASF813:
 56469 0162 5F547570 		.string	"_Tuple_impl<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul
 56469      6C655F69 
 56469      6D706C3C 
 56469      30756C2C 
 56469      20737464 
 56470              	.LASF1566:
 56471 021c 5F5F7572 		.string	"__urng"
 56471      6E6700
 56472              	.LASF500:
 56473 0223 5F507472 		.string	"_Ptr"
 56473      00
 56474              	.LASF552:
 56475 0228 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE12_Vector_impl12_M_swap_dataERS2_"
 56475      7431325F 
 56475      56656374 
 56475      6F725F62 
 56475      61736549 
 56476              	.LASF1224:
 56477 0265 5F5F616C 		.string	"__alloc_traits<std::allocator<unsigned int> >"
 56477      6C6F635F 
 56477      74726169 
 56477      74733C73 
 56477      74643A3A 
 56478              	.LASF1292:
 56479 0293 5F5F7061 		.string	"__pad2"
 56479      643200
 56480              	.LASF1293:
 56481 029a 5F5F7061 		.string	"__pad3"
 56481      643300
 56482              	.LASF1294:
 56483 02a1 5F5F7061 		.string	"__pad4"
 56483      643400
 56484              	.LASF1295:
GAS LISTING /tmp/ccmMnd7l.s 			page 1411


 56485 02a8 5F5F7061 		.string	"__pad5"
 56485      643500
 56486              	.LASF1471:
 56487 02af 73747274 		.string	"strtoul"
 56487      6F756C00 
 56488              	.LASF616:
 56489 02b7 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5eraseEN9__gnu_cxx17__normal_iteratorIPKdS1_EES6_"
 56489      74367665 
 56489      63746F72 
 56489      49645361 
 56489      49644545 
 56490              	.LASF82:
 56491 02fd 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_leakedEv"
 56491      5373345F 
 56491      52657031 
 56491      325F4D5F 
 56491      69735F6C 
 56492              	.LASF204:
 56493 0319 5F5A4E53 		.string	"_ZNSs6appendERKSsmm"
 56493      73366170 
 56493      70656E64 
 56493      45524B53 
 56493      736D6D00 
 56494              	.LASF1084:
 56495 032d 6C6F6E67 		.string	"long unsigned int"
 56495      20756E73 
 56495      69676E65 
 56495      6420696E 
 56495      7400
 56496              	.LASF655:
 56497 033f 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE22_S_void_pointer_helperEz"
 56497      74313661 
 56497      6C6C6F63 
 56497      61746F72 
 56497      5F747261 
 56498              	.LASF427:
 56499 0378 5F5F6465 		.string	"__detail"
 56499      7461696C 
 56499      00
 56500              	.LASF917:
 56501 0381 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEEaSEOS3_"
 56501      7431315F 
 56501      5475706C 
 56501      655F696D 
 56501      706C494C 
 56502              	.LASF444:
 56503 03c1 786F725F 		.string	"xor_mask"
 56503      6D61736B 
 56503      00
 56504              	.LASF188:
 56505 03ca 5F5A4E53 		.string	"_ZNSsixEm"
 56505      73697845 
 56505      6D00
 56506              	.LASF788:
 56507 03d4 5F4D6179 		.string	"_Maybe_get_result_type<true, std::uniform_int_distribution<int> >"
 56507      62655F67 
 56507      65745F72 
GAS LISTING /tmp/ccmMnd7l.s 			page 1412


 56507      6573756C 
 56507      745F7479 
 56508              	.LASF1513:
 56509 0416 746D7066 		.string	"tmpfile"
 56509      696C6500 
 56510              	.LASF1614:
 56511 041e 706F696E 		.string	"points"
 56511      747300
 56512              	.LASF1600:
 56513 0425 5F5F7565 		.string	"__uerngrange"
 56513      726E6772 
 56513      616E6765 
 56513      00
 56514              	.LASF310:
 56515 0432 696E6974 		.string	"initializer_list"
 56515      69616C69 
 56515      7A65725F 
 56515      6C697374 
 56515      00
 56516              	.LASF575:
 56517 0443 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6assignESt16initializer_listIdE"
 56517      74367665 
 56517      63746F72 
 56517      49645361 
 56517      49644545 
 56518              	.LASF1652:
 56519 0477 5F5F6275 		.string	"__builtin_memmove"
 56519      696C7469 
 56519      6E5F6D65 
 56519      6D6D6F76 
 56519      6500
 56520              	.LASF1101:
 56521 0489 5F56616C 		.string	"_Value"
 56521      756500
 56522              	.LASF274:
 56523 0490 5F5A4E4B 		.string	"_ZNKSs13find_first_ofERKSsm"
 56523      53733133 
 56523      66696E64 
 56523      5F666972 
 56523      73745F6F 
 56524              	.LASF176:
 56525 04ac 73687269 		.string	"shrink_to_fit"
 56525      6E6B5F74 
 56525      6F5F6669 
 56525      7400
 56526              	.LASF311:
 56527 04ba 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
 56527      53743136 
 56527      696E6974 
 56527      69616C69 
 56527      7A65725F 
 56528              	.LASF1004:
 56529 04dd 666C7573 		.string	"flush<char, std::char_traits<char> >"
 56529      683C6368 
 56529      61722C20 
 56529      7374643A 
 56529      3A636861 
GAS LISTING /tmp/ccmMnd7l.s 			page 1413


 56530              	.LASF27:
 56531 0502 6E6F7468 		.string	"nothrow_t"
 56531      726F775F 
 56531      7400
 56532              	.LASF442:
 56533 050c 6D61736B 		.string	"mask_bits"
 56533      5F626974 
 56533      7300
 56534              	.LASF852:
 56535 0516 72656C65 		.string	"release"
 56535      61736500 
 56536              	.LASF624:
 56537 051e 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_fill_assignEmRKd"
 56537      74367665 
 56537      63746F72 
 56537      49645361 
 56537      49644545 
 56538              	.LASF180:
 56539 0548 72657365 		.string	"reserve"
 56539      72766500 
 56540              	.LASF912:
 56541 0550 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_headERS3_"
 56541      7431315F 
 56541      5475706C 
 56541      655F696D 
 56541      706C494C 
 56542              	.LASF654:
 56543 0596 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE23_S_const_pointer_helperEz"
 56543      74313661 
 56543      6C6C6F63 
 56543      61746F72 
 56543      5F747261 
 56544              	.LASF125:
 56545 05d0 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 56545      74313163 
 56545      6861725F 
 56545      74726169 
 56545      74734963 
 56546              	.LASF784:
 56547 05f2 5F526573 		.string	"_Result"
 56547      756C7400 
 56548              	.LASF1657:
 56549 05fa 68656174 		.string	"heatmap_stamp_gen"
 56549      6D61705F 
 56549      7374616D 
 56549      705F6765 
 56549      6E00
 56550              	.LASF1193:
 56551 060c 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv"
 56551      395F5F67 
 56551      6E755F63 
 56551      78783137 
 56551      5F5F6E6F 
 56552              	.LASF324:
 56553 0647 6F706572 		.string	"operator std::integral_constant<int, 0>::value_type"
 56553      61746F72 
 56553      20737464 
GAS LISTING /tmp/ccmMnd7l.s 			page 1414


 56553      3A3A696E 
 56553      74656772 
 56554              	.LASF1609:
 56555 067b 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31EL
 56555      74323475 
 56555      6E69666F 
 56555      726D5F69 
 56555      6E745F64 
 56556              	.LASF526:
 56557 0742 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE25_S_difference_type_helperEz"
 56557      74313661 
 56557      6C6C6F63 
 56557      61746F72 
 56557      5F747261 
 56558              	.LASF902:
 56559 077e 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEcvbEv"
 56559      53743130 
 56559      756E6971 
 56559      75655F70 
 56559      74724939 
 56560              	.LASF913:
 56561 07b9 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_headERKS3_"
 56561      7431315F 
 56561      5475706C 
 56561      655F696D 
 56561      706C494C 
 56562              	.LASF1199:
 56563 0800 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEixEl"
 56563      395F5F67 
 56563      6E755F63 
 56563      78783137 
 56563      5F5F6E6F 
 56564              	.LASF595:
 56565 083b 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE7reserveEm"
 56565      74367665 
 56565      63746F72 
 56565      49645361 
 56565      49644545 
 56566              	.LASF164:
 56567 085a 63726265 		.string	"crbegin"
 56567      67696E00 
 56568              	.LASF384:
 56569 0862 75707065 		.string	"uppercase"
 56569      72636173 
 56569      6500
 56570              	.LASF1650:
 56571 086c 6D656D73 		.string	"memset"
 56571      657400
 56572              	.LASF1409:
 56573 0873 75696E74 		.string	"uintptr_t"
 56573      7074725F 
 56573      7400
 56574              	.LASF1125:
 56575 087d 5F5F6E6F 		.string	"__normal_iterator"
 56575      726D616C 
 56575      5F697465 
 56575      7261746F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1415


 56575      7200
 56576              	.LASF224:
 56577 088f 5F5A4E53 		.string	"_ZNSs6insertEmPKc"
 56577      7336696E 
 56577      73657274 
 56577      456D504B 
 56577      6300
 56578              	.LASF186:
 56579 08a1 6F706572 		.string	"operator[]"
 56579      61746F72 
 56579      5B5D00
 56580              	.LASF258:
 56581 08ac 635F7374 		.string	"c_str"
 56581      7200
 56582              	.LASF1415:
 56583 08b2 64656369 		.string	"decimal_point"
 56583      6D616C5F 
 56583      706F696E 
 56583      7400
 56584              	.LASF1254:
 56585 08c0 5F5F6578 		.string	"__exchange_and_add"
 56585      6368616E 
 56585      67655F61 
 56585      6E645F61 
 56585      646400
 56586              	.LASF690:
 56587 08d3 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE6cbeginEv"
 56587      53743676 
 56587      6563746F 
 56587      72496A53 
 56587      61496A45 
 56588              	.LASF249:
 56589 08f2 5F5A4E53 		.string	"_ZNSs14_M_replace_auxEmmmc"
 56589      7331345F 
 56589      4D5F7265 
 56589      706C6163 
 56589      655F6175 
 56590              	.LASF161:
 56591 090d 5F5A4E4B 		.string	"_ZNKSs6cbeginEv"
 56591      53733663 
 56591      62656769 
 56591      6E457600 
 56592              	.LASF288:
 56593 091d 66696E64 		.string	"find_last_not_of"
 56593      5F6C6173 
 56593      745F6E6F 
 56593      745F6F66 
 56593      00
 56594              	.LASF1587:
 56595 092e 5F5F6D69 		.string	"__mid"
 56595      6400
 56596              	.LASF691:
 56597 0934 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4cendEv"
 56597      53743676 
 56597      6563746F 
 56597      72496A53 
 56597      61496A45 
GAS LISTING /tmp/ccmMnd7l.s 			page 1416


 56598              	.LASF573:
 56599 0951 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSESt16initializer_listIdE"
 56599      74367665 
 56599      63746F72 
 56599      49645361 
 56599      49644545 
 56600              	.LASF1118:
 56601 0980 5F5F6D69 		.string	"__min"
 56601      6E00
 56602              	.LASF1553:
 56603 0986 5F5F6669 		.string	"__first"
 56603      72737400 
 56604              	.LASF922:
 56605 098e 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9heatmap_tLb0EE7_M_headERKS2_"
 56605      7431305F 
 56605      48656164 
 56605      5F626173 
 56605      65494C6D 
 56606              	.LASF693:
 56607 09c3 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5crendEv"
 56607      53743676 
 56607      6563746F 
 56607      72496A53 
 56607      61496A45 
 56608              	.LASF801:
 56609 09e1 5F496478 		.string	"_Idx"
 56609      00
 56610              	.LASF143:
 56611 09e6 7E626173 		.string	"~basic_string"
 56611      69635F73 
 56611      7472696E 
 56611      6700
 56612              	.LASF883:
 56613 09f4 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_swapERS4_"
 56613      7431315F 
 56613      5475706C 
 56613      655F696D 
 56613      706C494C 
 56614              	.LASF781:
 56615 0a45 5F42696E 		.string	"_Bind"
 56615      6400
 56616              	.LASF1081:
 56617 0a4b 5F5A5374 		.string	"_ZSt17__throw_bad_allocv"
 56617      31375F5F 
 56617      7468726F 
 56617      775F6261 
 56617      645F616C 
 56618              	.LASF141:
 56619 0a64 5F5A4E53 		.string	"_ZNSs12_M_leak_hardEv"
 56619      7331325F 
 56619      4D5F6C65 
 56619      616B5F68 
 56619      61726445 
 56620              	.LASF336:
 56621 0a7a 5F535F73 		.string	"_S_showpoint"
 56621      686F7770 
 56621      6F696E74 
GAS LISTING /tmp/ccmMnd7l.s 			page 1417


 56621      00
 56622              	.LASF342:
 56623 0a87 5F535F62 		.string	"_S_basefield"
 56623      61736566 
 56623      69656C64 
 56623      00
 56624              	.LASF347:
 56625 0a94 5F535F61 		.string	"_S_app"
 56625      707000
 56626              	.LASF576:
 56627 0a9b 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5beginEv"
 56627      74367665 
 56627      63746F72 
 56627      49645361 
 56627      49644545 
 56628              	.LASF614:
 56629 0ab8 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EEmRS4_"
 56629      74367665 
 56629      63746F72 
 56629      49645361 
 56629      49644545 
 56630              	.LASF1034:
 56631 0b01 5F5F6D69 		.string	"__miter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 56631      7465725F 
 56631      62617365 
 56631      3C5F5F67 
 56631      6E755F63 
 56632              	.LASF903:
 56633 0b4c 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE7releaseEv"
 56633      74313075 
 56633      6E697175 
 56633      655F7074 
 56633      72493968 
 56634              	.LASF1190:
 56635 0b8b 5F535F6E 		.string	"_S_nothrow_swap"
 56635      6F746872 
 56635      6F775F73 
 56635      77617000 
 56636              	.LASF973:
 56637 0b9b 5F5F636F 		.string	"__copy_move_b<double>"
 56637      70795F6D 
 56637      6F76655F 
 56637      623C646F 
 56637      75626C65 
 56638              	.LASF1414:
 56639 0bb1 6C636F6E 		.string	"lconv"
 56639      7600
 56640              	.LASF1674:
 56641 0bb7 6D656D6D 		.string	"memmove"
 56641      6F766500 
 56642              	.LASF1417:
 56643 0bbf 67726F75 		.string	"grouping"
 56643      70696E67 
 56643      00
 56644              	.LASF977:
 56645 0bc8 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 56645      53743962 
GAS LISTING /tmp/ccmMnd7l.s 			page 1418


 56645      61736963 
 56645      5F696F73 
 56645      49635374 
 56646              	.LASF1001:
 56647 0bf8 6765743C 		.string	"get<1ul, heatmap_t*, std::default_delete<heatmap_t> >"
 56647      31756C2C 
 56647      20686561 
 56647      746D6170 
 56647      5F742A2C 
 56648              	.LASF536:
 56649 0c2e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8allocateERS0_m"
 56649      74313661 
 56649      6C6C6F63 
 56649      61746F72 
 56649      5F747261 
 56650              	.LASF493:
 56651 0c5c 5F5F7074 		.string	"__ptrtr_not_void<double, double>"
 56651      7274725F 
 56651      6E6F745F 
 56651      766F6964 
 56651      3C646F75 
 56652              	.LASF147:
 56653 0c7d 5F5A4E53 		.string	"_ZNSsaSEOSs"
 56653      73615345 
 56653      4F537300 
 56654              	.LASF672:
 56655 0c89 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIjSaIjEE13get_allocatorEv"
 56655      53743132 
 56655      5F566563 
 56655      746F725F 
 56655      62617365 
 56656              	.LASF153:
 56657 0cb7 5F5A4E4B 		.string	"_ZNKSs3endEv"
 56657      53733365 
 56657      6E644576 
 56657      00
 56658              	.LASF134:
 56659 0cc4 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcS_S_"
 56659      7331335F 
 56659      535F636F 
 56659      70795F63 
 56659      68617273 
 56660              	.LASF710:
 56661 0ce0 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4backEv"
 56661      53743676 
 56661      6563746F 
 56661      72496A53 
 56661      61496A45 
 56662              	.LASF811:
 56663 0cfd 5F486561 		.string	"_Head"
 56663      6400
 56664              	.LASF94:
 56665 0d03 5F5A4E53 		.string	"_ZNSs4_Rep7_M_grabERKSaIcES2_"
 56665      73345F52 
 56665      6570375F 
 56665      4D5F6772 
 56665      61624552 
GAS LISTING /tmp/ccmMnd7l.s 			page 1419


 56666              	.LASF359:
 56667 0d21 5F535F69 		.string	"_S_ios_iostate_end"
 56667      6F735F69 
 56667      6F737461 
 56667      74655F65 
 56667      6E6400
 56668              	.LASF1204:
 56669 0d34 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv"
 56669      395F5F67 
 56669      6E755F63 
 56669      78783137 
 56669      5F5F6E6F 
 56670              	.LASF265:
 56671 0d72 5F5A4E4B 		.string	"_ZNKSs4findERKSsm"
 56671      53733466 
 56671      696E6445 
 56671      524B5373 
 56671      6D00
 56672              	.LASF1289:
 56673 0d84 5F6C6F63 		.string	"_lock"
 56673      6B00
 56674              	.LASF309:
 56675 0d8a 5F4D5F6C 		.string	"_M_len"
 56675      656E00
 56676              	.LASF942:
 56677 0d91 5F435641 		.string	"_CVArg"
 56677      726700
 56678              	.LASF733:
 56679 0d98 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPjS1_EES5_"
 56679      74367665 
 56679      63746F72 
 56679      496A5361 
 56679      496A4545 
 56680              	.LASF506:
 56681 0de0 5F517561 		.string	"_Qualified"
 56681      6C696669 
 56681      656400
 56682              	.LASF1547:
 56683 0deb 5F5F6131 		.string	"__a1"
 56683      00
 56684              	.LASF1548:
 56685 0df0 5F5F6132 		.string	"__a2"
 56685      00
 56686              	.LASF1611:
 56687 0df5 5F5A3967 		.string	"_Z9genpointsmj"
 56687      656E706F 
 56687      696E7473 
 56687      6D6A00
 56688              	.LASF1076:
 56689 0e04 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 56689      74726561 
 56689      6D5F696E 
 56689      73657274 
 56689      3C636861 
 56690              	.LASF1398:
 56691 0e34 75696E74 		.string	"uint_least32_t"
 56691      5F6C6561 
GAS LISTING /tmp/ccmMnd7l.s 			page 1420


 56691      73743332 
 56691      5F7400
 56692              	.LASF301:
 56693 0e43 5F436861 		.string	"_CharT"
 56693      725400
 56694              	.LASF953:
 56695 0e4a 5F5F6164 		.string	"__add_ref<std::default_delete<heatmap_stamp_t> >"
 56695      645F7265 
 56695      663C7374 
 56695      643A3A64 
 56695      65666175 
 56696              	.LASF1349:
 56697 0e7b 746D5F6D 		.string	"tm_mday"
 56697      64617900 
 56698              	.LASF1137:
 56699 0e83 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplEl"
 56699      395F5F67 
 56699      6E755F63 
 56699      78783137 
 56699      5F5F6E6F 
 56700              	.LASF14:
 56701 0eaf 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 56701      53743135 
 56701      5F5F6578 
 56701      63657074 
 56701      696F6E5F 
 56702              	.LASF1007:
 56703 0edf 5F446573 		.string	"_Destroy<unsigned int*, unsigned int>"
 56703      74726F79 
 56703      3C756E73 
 56703      69676E65 
 56703      6420696E 
 56704              	.LASF1505:
 56705 0f05 67657463 		.string	"getchar"
 56705      68617200 
 56706              	.LASF699:
 56707 0f0d 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE8capacityEv"
 56707      53743676 
 56707      6563746F 
 56707      72496A53 
 56707      61496A45 
 56708              	.LASF547:
 56709 0f2e 5F566563 		.string	"_Vector_impl"
 56709      746F725F 
 56709      696D706C 
 56709      00
 56710              	.LASF1390:
 56711 0f3b 75696E74 		.string	"uint32_t"
 56711      33325F74 
 56711      00
 56712              	.LASF58:
 56713 0f44 72656665 		.string	"reference"
 56713      72656E63 
 56713      6500
 56714              	.LASF749:
 56715 0f4e 64656661 		.string	"default_delete<heatmap_stamp_t>"
 56715      756C745F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1421


 56715      64656C65 
 56715      74653C68 
 56715      6561746D 
 56716              	.LASF477:
 56717 0f6e 5F4D5F69 		.string	"_M_init"
 56717      6E697400 
 56718              	.LASF836:
 56719 0f76 5F5F7475 		.string	"__tuple_type"
 56719      706C655F 
 56719      74797065 
 56719      00
 56720              	.LASF675:
 56721 0f83 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm"
 56721      7431325F 
 56721      56656374 
 56721      6F725F62 
 56721      61736549 
 56722              	.LASF40:
 56723 0fb4 6D6F7665 		.string	"move"
 56723      00
 56724              	.LASF1501:
 56725 0fb9 66736565 		.string	"fseek"
 56725      6B00
 56726              	.LASF1356:
 56727 0fbf 746D5F7A 		.string	"tm_zone"
 56727      6F6E6500 
 56728              	.LASF765:
 56729 0fc7 6F706572 		.string	"operator()<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 56729      61746F72 
 56729      28293C73 
 56729      74643A3A 
 56729      6D657273 
 56730              	.LASF1603:
 56731 107b 5F5F6261 		.string	"__base"
 56731      736500
 56732              	.LASF881:
 56733 1082 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSERKS4_"
 56733      7431315F 
 56733      5475706C 
 56733      655F696D 
 56733      706C494C 
 56734              	.LASF346:
 56735 10ce 5F496F73 		.string	"_Ios_Openmode"
 56735      5F4F7065 
 56735      6E6D6F64 
 56735      6500
 56736              	.LASF1145:
 56737 10dc 5F5F6E6F 		.string	"__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::alloc
 56737      726D616C 
 56737      5F697465 
 56737      7261746F 
 56737      723C6368 
 56738              	.LASF348:
 56739 1144 5F535F61 		.string	"_S_ate"
 56739      746500
 56740              	.LASF159:
 56741 114b 5F5A4E4B 		.string	"_ZNKSs4rendEv"
GAS LISTING /tmp/ccmMnd7l.s 			page 1422


 56741      53733472 
 56741      656E6445 
 56741      7600
 56742              	.LASF1358:
 56743 1159 7763736E 		.string	"wcsncat"
 56743      63617400 
 56744              	.LASF906:
 56745 1161 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSERKS3_"
 56745      74313075 
 56745      6E697175 
 56745      655F7074 
 56745      72493968 
 56746              	.LASF379:
 56747 119e 73686F77 		.string	"showbase"
 56747      62617365 
 56747      00
 56748              	.LASF794:
 56749 11a7 5F576561 		.string	"_Weak_result_type<std::uniform_int_distribution<int> >"
 56749      6B5F7265 
 56749      73756C74 
 56749      5F747970 
 56749      653C7374 
 56750              	.LASF74:
 56751 11de 5F4D5F63 		.string	"_M_capacity"
 56751      61706163 
 56751      69747900 
 56752              	.LASF791:
 56753 11ea 5F46756E 		.string	"_Functor"
 56753      63746F72 
 56753      00
 56754              	.LASF68:
 56755 11f3 69746572 		.string	"iterator"
 56755      61746F72 
 56755      00
 56756              	.LASF343:
 56757 11fc 5F535F66 		.string	"_S_floatfield"
 56757      6C6F6174 
 56757      6669656C 
 56757      6400
 56758              	.LASF1265:
 56759 120a 6C6F6E67 		.string	"long double"
 56759      20646F75 
 56759      626C6500 
 56760              	.LASF431:
 56761 1216 5F5F6269 		.string	"__big_enough"
 56761      675F656E 
 56761      6F756768 
 56761      00
 56762              	.LASF785:
 56763 1223 6F706572 		.string	"operator()<, int>"
 56763      61746F72 
 56763      28293C2C 
 56763      20696E74 
 56763      3E00
 56764              	.LASF643:
 56765 1235 696E6974 		.string	"initializer_list<double>"
 56765      69616C69 
GAS LISTING /tmp/ccmMnd7l.s 			page 1423


 56765      7A65725F 
 56765      6C697374 
 56765      3C646F75 
 56766              	.LASF217:
 56767 124e 5F5A4E53 		.string	"_ZNSs6assignESt16initializer_listIcE"
 56767      73366173 
 56767      7369676E 
 56767      45537431 
 56767      36696E69 
 56768              	.LASF974:
 56769 1273 65786365 		.string	"exception"
 56769      7074696F 
 56769      6E00
 56770              	.LASF341:
 56771 127d 5F535F61 		.string	"_S_adjustfield"
 56771      646A7573 
 56771      74666965 
 56771      6C6400
 56772              	.LASF1382:
 56773 128c 77637374 		.string	"wcstoll"
 56773      6F6C6C00 
 56774              	.LASF1080:
 56775 1294 5F5F7468 		.string	"__throw_bad_cast"
 56775      726F775F 
 56775      6261645F 
 56775      63617374 
 56775      00
 56776              	.LASF1157:
 56777 12a5 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv"
 56777      395F5F67 
 56777      6E755F63 
 56777      78783137 
 56777      5F5F6E6F 
 56778              	.LASF1055:
 56779 12d5 5F5F736F 		.string	"__sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops::_It
 56779      72743C5F 
 56779      5F676E75 
 56779      5F637878 
 56779      3A3A5F5F 
 56780              	.LASF921:
 56781 133c 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9heatmap_tLb0EE7_M_headERS2_"
 56781      7431305F 
 56781      48656164 
 56781      5F626173 
 56781      65494C6D 
 56782              	.LASF1664:
 56783 1370 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 56783      74313163 
 56783      6861725F 
 56783      74726169 
 56783      74734963 
 56784              	.LASF375:
 56785 138c 696E7465 		.string	"internal"
 56785      726E616C 
 56785      00
 56786              	.LASF138:
 56787 1395 5F4D5F6D 		.string	"_M_mutate"
GAS LISTING /tmp/ccmMnd7l.s 			page 1424


 56787      75746174 
 56787      6500
 56788              	.LASF403:
 56789 139f 5F5A4E53 		.string	"_ZNSolsEPFRSt8ios_baseS0_E"
 56789      6F6C7345 
 56789      50465253 
 56789      7438696F 
 56789      735F6261 
 56790              	.LASF1314:
 56791 13ba 66676574 		.string	"fgetwc"
 56791      776300
 56792              	.LASF1522:
 56793 13c1 666C6F61 		.string	"float_t"
 56793      745F7400 
 56794              	.LASF1315:
 56795 13c9 66676574 		.string	"fgetws"
 56795      777300
 56796              	.LASF1396:
 56797 13d0 75696E74 		.string	"uint_least8_t"
 56797      5F6C6561 
 56797      7374385F 
 56797      7400
 56798              	.LASF453:
 56799 13de 64656661 		.string	"default_seed"
 56799      756C745F 
 56799      73656564 
 56799      00
 56800              	.LASF211:
 56801 13eb 5F5A4E53 		.string	"_ZNSs6assignERKSs"
 56801      73366173 
 56801      7369676E 
 56801      45524B53 
 56801      7300
 56802              	.LASF997:
 56803 13fd 666F7277 		.string	"forward<std::uniform_int_distribution<>&>"
 56803      6172643C 
 56803      7374643A 
 56803      3A756E69 
 56803      666F726D 
 56804              	.LASF578:
 56805 1427 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE3endEv"
 56805      74367665 
 56805      63746F72 
 56805      49645361 
 56805      49644545 
 56806              	.LASF460:
 56807 1442 64697363 		.string	"discard"
 56807      61726400 
 56808              	.LASF926:
 56809 144a 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_headERKS4_"
 56809      7431315F 
 56809      5475706C 
 56809      655F696D 
 56809      706C494C 
 56810              	.LASF290:
 56811 1495 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcmm"
 56811      53733136 
GAS LISTING /tmp/ccmMnd7l.s 			page 1425


 56811      66696E64 
 56811      5F6C6173 
 56811      745F6E6F 
 56812              	.LASF485:
 56813 14b4 5F4D5F67 		.string	"_M_getval_pretr1"
 56813      65747661 
 56813      6C5F7072 
 56813      65747231 
 56813      00
 56814              	.LASF990:
 56815 14c5 5F546169 		.string	"_Tail"
 56815      6C00
 56816              	.LASF859:
 56817 14cb 5F486561 		.string	"_Head_base<1ul, std::default_delete<heatmap_stamp_t>, true>"
 56817      645F6261 
 56817      73653C31 
 56817      756C2C20 
 56817      7374643A 
 56818              	.LASF1663:
 56819 1507 5F5F6465 		.string	"__debug"
 56819      62756700 
 56820              	.LASF1103:
 56821 150f 6F706572 		.string	"operator()<double, __gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 56821      61746F72 
 56821      28293C64 
 56821      6F75626C 
 56821      652C205F 
 56822              	.LASF1526:
 56823 1560 52657065 		.string	"RepeatTimer"
 56823      61745469 
 56823      6D657200 
 56824              	.LASF518:
 56825 156c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE17_S_pointer_helperEz"
 56825      74313661 
 56825      6C6C6F63 
 56825      61746F72 
 56825      5F747261 
 56826              	.LASF59:
 56827 15a0 636F6E73 		.string	"const_reference"
 56827      745F7265 
 56827      66657265 
 56827      6E636500 
 56828              	.LASF778:
 56829 15b0 5F42696E 		.string	"_Bind<std::uniform_int_distribution<int>(std::mersenne_twister_engine<long unsigned int, 
 56829      643C7374 
 56829      643A3A75 
 56829      6E69666F 
 56829      726D5F69 
 56830              	.LASF662:
 56831 1682 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8allocateERS0_m"
 56831      74313661 
 56831      6C6C6F63 
 56831      61746F72 
 56831      5F747261 
 56832              	.LASF988:
 56833 16b0 666F7277 		.string	"forward<heatmap_stamp_t*&>"
 56833      6172643C 
GAS LISTING /tmp/ccmMnd7l.s 			page 1426


 56833      68656174 
 56833      6D61705F 
 56833      7374616D 
 56834              	.LASF979:
 56835 16cb 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 56835      74396261 
 56835      7369635F 
 56835      696F7349 
 56835      63537431 
 56836              	.LASF439:
 56837 170a 776F7264 		.string	"word_size"
 56837      5F73697A 
 56837      6500
 56838              	.LASF1647:
 56839 1714 5F5A6E77 		.string	"_Znwm"
 56839      6D00
 56840              	.LASF1025:
 56841 171a 5F5F6E69 		.string	"__niter_base<double*>"
 56841      7465725F 
 56841      62617365 
 56841      3C646F75 
 56841      626C652A 
 56842              	.LASF339:
 56843 1730 5F535F75 		.string	"_S_unitbuf"
 56843      6E697462 
 56843      756600
 56844              	.LASF190:
 56845 173b 5F5A4E53 		.string	"_ZNSs2atEm"
 56845      73326174 
 56845      456D00
 56846              	.LASF1446:
 56847 1746 35646976 		.string	"5div_t"
 56847      5F7400
 56848              	.LASF1083:
 56849 174d 626F6F6C 		.string	"bool"
 56849      00
 56850              	.LASF723:
 56851 1752 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5clearEv"
 56851      74367665 
 56851      63746F72 
 56851      496A5361 
 56851      496A4545 
 56852              	.LASF337:
 56853 176f 5F535F73 		.string	"_S_showpos"
 56853      686F7770 
 56853      6F7300
 56854              	.LASF951:
 56855 177a 5F5F6164 		.string	"__add_c_ref<heatmap_t*>"
 56855      645F635F 
 56855      7265663C 
 56855      68656174 
 56855      6D61705F 
 56856              	.LASF157:
 56857 1792 72656E64 		.string	"rend"
 56857      00
 56858              	.LASF562:
 56859 1797 5F4D5F61 		.string	"_M_allocate"
GAS LISTING /tmp/ccmMnd7l.s 			page 1427


 56859      6C6C6F63 
 56859      61746500 
 56860              	.LASF716:
 56861 17a3 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EERS4_"
 56861      74367665 
 56861      63746F72 
 56861      496A5361 
 56861      496A4545 
 56862              	.LASF1067:
 56863 17eb 616C6C6F 		.string	"allocator_arg"
 56863      6361746F 
 56863      725F6172 
 56863      6700
 56864              	.LASF372:
 56865 17f9 666D7466 		.string	"fmtflags"
 56865      6C616773 
 56865      00
 56866              	.LASF822:
 56867 1802 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 56867      7431315F 
 56867      5475706C 
 56867      655F696D 
 56867      706C494C 
 56868              	.LASF185:
 56869 18b2 5F5A4E4B 		.string	"_ZNKSs5emptyEv"
 56869      53733565 
 56869      6D707479 
 56869      457600
 56870              	.LASF604:
 56871 18c1 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4backEv"
 56871      74367665 
 56871      63746F72 
 56871      49645361 
 56871      49644545 
 56872              	.LASF168:
 56873 18dd 73697A65 		.string	"size"
 56873      00
 56874              	.LASF227:
 56875 18e2 65726173 		.string	"erase"
 56875      6500
 56876              	.LASF397:
 56877 18e8 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 56877      635F6F73 
 56877      74726561 
 56877      6D3C6368 
 56877      61722C20 
 56878              	.LASF1654:
 56879 1915 68656174 		.string	"heatmap_free"
 56879      6D61705F 
 56879      66726565 
 56879      00
 56880              	.LASF741:
 56881 1922 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE3endEv"
 56881      53743136 
 56881      696E6974 
 56881      69616C69 
 56881      7A65725F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1428


 56882              	.LASF950:
 56883 1944 72656D6F 		.string	"remove_reference<heatmap_t*&>"
 56883      76655F72 
 56883      65666572 
 56883      656E6365 
 56883      3C686561 
 56884              	.LASF509:
 56885 1962 5F497345 		.string	"_IsEnum"
 56885      6E756D00 
 56886              	.LASF549:
 56887 196a 5F4D5F66 		.string	"_M_finish"
 56887      696E6973 
 56887      6800
 56888              	.LASF799:
 56889 1974 5F4D5F73 		.string	"_M_swap"
 56889      77617000 
 56890              	.LASF229:
 56891 197c 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE"
 56891      73356572 
 56891      61736545 
 56891      4E395F5F 
 56891      676E755F 
 56892              	.LASF1633:
 56893 19ae 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE"
 56893      5F5F676E 
 56893      755F6378 
 56893      7832345F 
 56893      5F6E756D 
 56894              	.LASF366:
 56895 19e0 5F535F73 		.string	"_S_synced_with_stdio"
 56895      796E6365 
 56895      645F7769 
 56895      74685F73 
 56895      7464696F 
 56896              	.LASF527:
 56897 19f5 5F535F73 		.string	"_S_size_type_helper"
 56897      697A655F 
 56897      74797065 
 56897      5F68656C 
 56897      70657200 
 56898              	.LASF136:
 56899 1a09 5F535F63 		.string	"_S_compare"
 56899      6F6D7061 
 56899      726500
 56900              	.LASF1466:
 56901 1a14 71756963 		.string	"quick_exit"
 56901      6B5F6578 
 56901      697400
 56902              	.LASF486:
 56903 1a1f 5F5A4E53 		.string	"_ZNSt13random_device16_M_getval_pretr1Ev"
 56903      74313372 
 56903      616E646F 
 56903      6D5F6465 
 56903      76696365 
 56904              	.LASF1347:
 56905 1a48 746D5F6D 		.string	"tm_min"
 56905      696E00
GAS LISTING /tmp/ccmMnd7l.s 			page 1429


 56906              	.LASF253:
 56907 1a4f 5F5A4E53 		.string	"_ZNSs18_S_construct_aux_2EmcRKSaIcE"
 56907      7331385F 
 56907      535F636F 
 56907      6E737472 
 56907      7563745F 
 56908              	.LASF669:
 56909 1a73 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE12_Vector_impl12_M_swap_dataERS2_"
 56909      7431325F 
 56909      56656374 
 56909      6F725F62 
 56909      61736549 
 56910              	.LASF1419:
 56911 1ab0 63757272 		.string	"currency_symbol"
 56911      656E6379 
 56911      5F73796D 
 56911      626F6C00 
 56912              	.LASF271:
 56913 1ac0 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcm"
 56913      53733572 
 56913      66696E64 
 56913      45504B63 
 56913      6D00
 56914              	.LASF1319:
 56915 1ad2 66776964 		.string	"fwide"
 56915      6500
 56916              	.LASF1456:
 56917 1ad8 61746F66 		.string	"atof"
 56917      00
 56918              	.LASF1457:
 56919 1add 61746F69 		.string	"atoi"
 56919      00
 56920              	.LASF1458:
 56921 1ae2 61746F6C 		.string	"atol"
 56921      00
 56922              	.LASF679:
 56923 1ae7 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSESt16initializer_listIjE"
 56923      74367665 
 56923      63746F72 
 56923      496A5361 
 56923      496A4545 
 56924              	.LASF1147:
 56925 1b16 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv"
 56925      395F5F67 
 56925      6E755F63 
 56925      78783137 
 56925      5F5F6E6F 
 56926              	.LASF282:
 56927 1b43 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEcm"
 56927      53733132 
 56927      66696E64 
 56927      5F6C6173 
 56927      745F6F66 
 56928              	.LASF793:
 56929 1b5b 5F576561 		.string	"_Weak_result_type_impl"
 56929      6B5F7265 
 56929      73756C74 
GAS LISTING /tmp/ccmMnd7l.s 			page 1430


 56929      5F747970 
 56929      655F696D 
 56930              	.LASF968:
 56931 1b72 5F497465 		.string	"_Iter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<doubl
 56931      725F6261 
 56931      73653C5F 
 56931      5F676E75 
 56931      5F637878 
 56932              	.LASF1329:
 56933 1bd9 70757477 		.string	"putwchar"
 56933      63686172 
 56933      00
 56934              	.LASF1297:
 56935 1be2 5F756E75 		.string	"_unused2"
 56935      73656432 
 56935      00
 56936              	.LASF1559:
 56937 1beb 5F5F6974 		.string	"__it"
 56937      00
 56938              	.LASF181:
 56939 1bf0 5F5A4E53 		.string	"_ZNSs7reserveEm"
 56939      73377265 
 56939      73657276 
 56939      65456D00 
 56940              	.LASF319:
 56941 1c00 7E5F416C 		.string	"~_Alloc_hider"
 56941      6C6F635F 
 56941      68696465 
 56941      7200
 56942              	.LASF516:
 56943 1c0e 5F5F7369 		.string	"__size_type"
 56943      7A655F74 
 56943      79706500 
 56944              	.LASF226:
 56945 1c1a 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc"
 56945      7336696E 
 56945      73657274 
 56945      454E395F 
 56945      5F676E75 
 56946              	.LASF53:
 56947 1c4e 73697A65 		.string	"size_t"
 56947      5F7400
 56948              	.LASF681:
 56949 1c55 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6assignESt16initializer_listIjE"
 56949      74367665 
 56949      63746F72 
 56949      496A5361 
 56949      496A4545 
 56950              	.LASF494:
 56951 1c89 5F5F7479 		.string	"__type"
 56951      706500
 56952              	.LASF832:
 56953 1c90 5F55456C 		.string	"_UElements"
 56953      656D656E 
 56953      747300
 56954              	.LASF331:
 56955 1c9b 5F535F6C 		.string	"_S_left"
GAS LISTING /tmp/ccmMnd7l.s 			page 1431


 56955      65667400 
 56956              	.LASF424:
 56957 1ca3 5F5F756E 		.string	"__uninit_default_n<double*, long unsigned int>"
 56957      696E6974 
 56957      5F646566 
 56957      61756C74 
 56957      5F6E3C64 
 56958              	.LASF406:
 56959 1cd2 5F56616C 		.string	"_ValueT"
 56959      75655400 
 56960              	.LASF851:
 56961 1cda 6F706572 		.string	"operator bool"
 56961      61746F72 
 56961      20626F6F 
 56961      6C00
 56962              	.LASF713:
 56963 1ce8 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE9push_backERKj"
 56963      74367665 
 56963      63746F72 
 56963      496A5361 
 56963      496A4545 
 56964              	.LASF1218:
 56965 1d0b 6E65775F 		.string	"new_allocator<unsigned int>"
 56965      616C6C6F 
 56965      6361746F 
 56965      723C756E 
 56965      7369676E 
 56966              	.LASF1625:
 56967 1d27 4E504F49 		.string	"NPOINTS_MAX"
 56967      4E54535F 
 56967      4D415800 
 56968              	.LASF273:
 56969 1d33 66696E64 		.string	"find_first_of"
 56969      5F666972 
 56969      73745F6F 
 56969      6600
 56970              	.LASF558:
 56971 1d41 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv"
 56971      53743132 
 56971      5F566563 
 56971      746F725F 
 56971      62617365 
 56972              	.LASF744:
 56973 1d75 5F535F74 		.string	"_S_threshold"
 56973      68726573 
 56973      686F6C64 
 56973      00
 56974              	.LASF482:
 56975 1d82 5F5A4E53 		.string	"_ZNSt13random_device7_M_finiEv"
 56975      74313372 
 56975      616E646F 
 56975      6D5F6465 
 56975      76696365 
 56976              	.LASF18:
 56977 1da1 6E756C6C 		.string	"nullptr_t"
 56977      7074725F 
 56977      7400
GAS LISTING /tmp/ccmMnd7l.s 			page 1432


 56978              	.LASF231:
 56979 1dab 706F705F 		.string	"pop_back"
 56979      6261636B 
 56979      00
 56980              	.LASF759:
 56981 1db4 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE1bEv"
 56981      53743234 
 56981      756E6966 
 56981      6F726D5F 
 56981      696E745F 
 56982              	.LASF1009:
 56983 1ddc 5F446573 		.string	"_Destroy<double*, double>"
 56983      74726F79 
 56983      3C646F75 
 56983      626C652A 
 56983      2C20646F 
 56984              	.LASF1331:
 56985 1df6 73777363 		.string	"swscanf"
 56985      616E6600 
 56986              	.LASF1582:
 56987 1dfe 5F5F696E 		.string	"__init"
 56987      697400
 56988              	.LASF160:
 56989 1e05 63626567 		.string	"cbegin"
 56989      696E00
 56990              	.LASF1196:
 56991 1e0c 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEi"
 56991      5F5F676E 
 56991      755F6378 
 56991      7831375F 
 56991      5F6E6F72 
 56992              	.LASF869:
 56993 1e46 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEEaSEOS3_"
 56993      7431315F 
 56993      5475706C 
 56993      655F696D 
 56993      706C494C 
 56994              	.LASF1195:
 56995 1e8d 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv"
 56995      5F5F676E 
 56995      755F6378 
 56995      7831375F 
 56995      5F6E6F72 
 56996              	.LASF158:
 56997 1ec7 5F5A4E53 		.string	"_ZNSs4rendEv"
 56997      73347265 
 56997      6E644576 
 56997      00
 56998              	.LASF687:
 56999 1ed4 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE6rbeginEv"
 56999      53743676 
 56999      6563746F 
 56999      72496A53 
 56999      61496A45 
 57000              	.LASF925:
 57001 1ef3 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_headERS4_"
 57001      7431315F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1433


 57001      5475706C 
 57001      655F696D 
 57001      706C494C 
 57002              	.LASF1535:
 57003 1f3d 74686973 		.string	"this"
 57003      00
 57004              	.LASF412:
 57005 1f42 5F5A4E53 		.string	"_ZNSo3putEc"
 57005      6F337075 
 57005      74456300 
 57006              	.LASF1070:
 57007 1f4e 6E6F7468 		.string	"nothrow"
 57007      726F7700 
 57008              	.LASF156:
 57009 1f56 5F5A4E4B 		.string	"_ZNKSs6rbeginEv"
 57009      53733672 
 57009      62656769 
 57009      6E457600 
 57010              	.LASF1239:
 57011 1f66 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmmEi"
 57011      5F5F676E 
 57011      755F6378 
 57011      7831375F 
 57011      5F6E6F72 
 57012              	.LASF1544:
 57013 1fa0 5F5F6F6C 		.string	"__old"
 57013      6400
 57014              	.LASF1238:
 57015 1fa6 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmmEv"
 57015      5F5F676E 
 57015      755F6378 
 57015      7831375F 
 57015      5F6E6F72 
 57016              	.LASF492:
 57017 1fe0 5F547031 		.string	"_Tp1"
 57017      00
 57018              	.LASF1605:
 57019 1fe5 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 57019      53743135 
 57019      5F5F6578 
 57019      63657074 
 57019      696F6E5F 
 57020              	.LASF155:
 57021 2011 5F5A4E53 		.string	"_ZNSs6rbeginEv"
 57021      73367262 
 57021      6567696E 
 57021      457600
 57022              	.LASF732:
 57023 2020 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPjS1_EE"
 57023      74367665 
 57023      63746F72 
 57023      496A5361 
 57023      496A4545 
 57024              	.LASF1054:
 57025 2065 5F5F6C67 		.string	"__lg"
 57025      00
 57026              	.LASF1515:
GAS LISTING /tmp/ccmMnd7l.s 			page 1434


 57027 206a 756E6765 		.string	"ungetc"
 57027      746300
 57028              	.LASF21:
 57029 2071 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEcvbEv"
 57029      53743137 
 57029      696E7465 
 57029      6772616C 
 57029      5F636F6E 
 57030              	.LASF989:
 57031 2097 5F5F6765 		.string	"__get_helper<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 57031      745F6865 
 57031      6C706572 
 57031      3C30756C 
 57031      2C206865 
 57032              	.LASF473:
 57033 20e2 656E7472 		.string	"entropy"
 57033      6F707900 
 57034              	.LASF1536:
 57035 20ea 5F5F6774 		.string	"__gthread_active_p"
 57035      68726561 
 57035      645F6163 
 57035      74697665 
 57035      5F7000
 57036              	.LASF1271:
 57037 20fd 5F494F5F 		.string	"_IO_read_end"
 57037      72656164 
 57037      5F656E64 
 57037      00
 57038              	.LASF570:
 57039 210a 7E766563 		.string	"~vector"
 57039      746F7200 
 57040              	.LASF771:
 57041 2112 5F5F646F 		.string	"__do_wrap"
 57041      5F777261 
 57041      7000
 57042              	.LASF599:
 57043 211c 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE14_M_range_checkEm"
 57043      53743676 
 57043      6563746F 
 57043      72496453 
 57043      61496445 
 57044              	.LASF890:
 57045 2144 636F6E64 		.string	"conditional<false, std::default_delete<heatmap_stamp_t>, const std::default_delete<heatma
 57045      6974696F 
 57045      6E616C3C 
 57045      66616C73 
 57045      652C2073 
 57046              	.LASF393:
 57047 21aa 62696E61 		.string	"binary"
 57047      727900
 57048              	.LASF867:
 57049 21b1 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_tailERKS3_"
 57049      7431315F 
 57049      5475706C 
 57049      655F696D 
 57049      706C494C 
 57050              	.LASF55:
GAS LISTING /tmp/ccmMnd7l.s 			page 1435


 57051 21ff 74727565 		.string	"true_type"
 57051      5F747970 
 57051      6500
 57052              	.LASF860:
 57053 2209 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI15heatmap_stamp_tELb1EE7_M_headERS3_"
 57053      7431305F 
 57053      48656164 
 57053      5F626173 
 57053      65494C6D 
 57054              	.LASF1332:
 57055 2257 756E6765 		.string	"ungetwc"
 57055      74776300 
 57056              	.LASF1437:
 57057 225f 696E745F 		.string	"int_p_sign_posn"
 57057      705F7369 
 57057      676E5F70 
 57057      6F736E00 
 57058              	.LASF1447:
 57059 226f 71756F74 		.string	"quot"
 57059      00
 57060              	.LASF1658:
 57061 2274 68656174 		.string	"heatmap_add_weighted_point_with_stamp"
 57061      6D61705F 
 57061      6164645F 
 57061      77656967 
 57061      68746564 
 57062              	.LASF1307:
 57063 229a 5F5F7763 		.string	"__wchb"
 57063      686200
 57064              	.LASF952:
 57065 22a1 5F5F6164 		.string	"__add_ref<heatmap_t*>"
 57065      645F7265 
 57065      663C6865 
 57065      61746D61 
 57065      705F742A 
 57066              	.LASF43:
 57067 22b7 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 57067      74313163 
 57067      6861725F 
 57067      74726169 
 57067      74734963 
 57068              	.LASF550:
 57069 22d9 5F4D5F65 		.string	"_M_end_of_storage"
 57069      6E645F6F 
 57069      665F7374 
 57069      6F726167 
 57069      6500
 57070              	.LASF1671:
 57071 22eb 5F5F7374 		.string	"__static_initialization_and_destruction_0"
 57071      61746963 
 57071      5F696E69 
 57071      7469616C 
 57071      697A6174 
 57072              	.LASF281:
 57073 2315 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcm"
 57073      53733132 
 57073      66696E64 
GAS LISTING /tmp/ccmMnd7l.s 			page 1436


 57073      5F6C6173 
 57073      745F6F66 
 57074              	.LASF112:
 57075 232f 5F4D5F69 		.string	"_M_iend"
 57075      656E6400 
 57076              	.LASF1350:
 57077 2337 746D5F6D 		.string	"tm_mon"
 57077      6F6E00
 57078              	.LASF1473:
 57079 233e 77637374 		.string	"wcstombs"
 57079      6F6D6273 
 57079      00
 57080              	.LASF1519:
 57081 2347 746F7763 		.string	"towctrans"
 57081      7472616E 
 57081      7300
 57082              	.LASF533:
 57083 2351 5F535F70 		.string	"_S_propagate_on_container_swap_helper"
 57083      726F7061 
 57083      67617465 
 57083      5F6F6E5F 
 57083      636F6E74 
 57084              	.LASF1530:
 57085 2377 7E526570 		.string	"~RepeatTimer"
 57085      65617454 
 57085      696D6572 
 57085      00
 57086              	.LASF653:
 57087 2384 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE17_S_pointer_helperEz"
 57087      74313661 
 57087      6C6C6F63 
 57087      61746F72 
 57087      5F747261 
 57088              	.LASF1026:
 57089 23b8 66696C6C 		.string	"fill_n<double*, long unsigned int, double>"
 57089      5F6E3C64 
 57089      6F75626C 
 57089      652A2C20 
 57089      6C6F6E67 
 57090              	.LASF169:
 57091 23e3 5F5A4E4B 		.string	"_ZNKSs4sizeEv"
 57091      53733473 
 57091      697A6545 
 57091      7600
 57092              	.LASF531:
 57093 23f1 5F535F70 		.string	"_S_propagate_on_container_move_assignment_helper"
 57093      726F7061 
 57093      67617465 
 57093      5F6F6E5F 
 57093      636F6E74 
 57094              	.LASF362:
 57095 2422 5F535F63 		.string	"_S_cur"
 57095      757200
 57096              	.LASF203:
 57097 2429 5F5A4E53 		.string	"_ZNSs6appendERKSs"
 57097      73366170 
 57097      70656E64 
GAS LISTING /tmp/ccmMnd7l.s 			page 1437


 57097      45524B53 
 57097      7300
 57098              	.LASF266:
 57099 243b 5F5A4E4B 		.string	"_ZNKSs4findEPKcm"
 57099      53733466 
 57099      696E6445 
 57099      504B636D 
 57099      00
 57100              	.LASF1552:
 57101 244c 5F5F6F73 		.string	"__os"
 57101      00
 57102              	.LASF800:
 57103 2451 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EIEE7_M_swapERS0_"
 57103      7431315F 
 57103      5475706C 
 57103      655F696D 
 57103      706C494C 
 57104              	.LASF457:
 57105 2479 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 57105      7432336D 
 57105      65727365 
 57105      6E6E655F 
 57105      74776973 
 57106              	.LASF884:
 57107 250c 5F547570 		.string	"_Tuple_impl<heatmap_stamp_t*&, std::default_delete<heatmap_stamp_t>, void>"
 57107      6C655F69 
 57107      6D706C3C 
 57107      68656174 
 57107      6D61705F 
 57108              	.LASF318:
 57109 2557 5F4D5F61 		.string	"_M_a"
 57109      00
 57110              	.LASF752:
 57111 255c 5F4D5F62 		.string	"_M_b"
 57111      00
 57112              	.LASF779:
 57113 2561 5F4D5F66 		.string	"_M_f"
 57113      00
 57114              	.LASF520:
 57115 2566 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE23_S_const_pointer_helperEz"
 57115      74313661 
 57115      6C6C6F63 
 57115      61746F72 
 57115      5F747261 
 57116              	.LASF308:
 57117 25a0 5F4D5F61 		.string	"_M_array"
 57117      72726179 
 57117      00
 57118              	.LASF65:
 57119 25a9 5F4D5F70 		.string	"_M_p"
 57119      00
 57120              	.LASF837:
 57121 25ae 5F4D5F74 		.string	"_M_t"
 57121      00
 57122              	.LASF454:
 57123 25b3 5F4D5F78 		.string	"_M_x"
 57123      00
GAS LISTING /tmp/ccmMnd7l.s 			page 1438


 57124              	.LASF356:
 57125 25b8 5F535F62 		.string	"_S_badbit"
 57125      61646269 
 57125      7400
 57126              	.LASF1094:
 57127 25c2 5F5F6F70 		.string	"__ops"
 57127      7300
 57128              	.LASF667:
 57129 25c8 5F5F616C 		.string	"__alloctr_rebind<std::allocator<unsigned int>, unsigned int, true>"
 57129      6C6F6374 
 57129      725F7265 
 57129      62696E64 
 57129      3C737464 
 57130              	.LASF1405:
 57131 260b 75696E74 		.string	"uint_fast16_t"
 57131      5F666173 
 57131      7431365F 
 57131      7400
 57132              	.LASF410:
 57133 2619 5F5A4E53 		.string	"_ZNSo9_M_insertIdEERSoT_"
 57133      6F395F4D 
 57133      5F696E73 
 57133      65727449 
 57133      64454552 
 57134              	.LASF1645:
 57135 2632 6F6D705F 		.string	"omp_get_wtime"
 57135      6765745F 
 57135      7774696D 
 57135      6500
 57136              	.LASF1436:
 57137 2640 696E745F 		.string	"int_n_sep_by_space"
 57137      6E5F7365 
 57137      705F6279 
 57137      5F737061 
 57137      636500
 57138              	.LASF797:
 57139 2653 5F547570 		.string	"_Tuple_impl<1ul>"
 57139      6C655F69 
 57139      6D706C3C 
 57139      31756C3E 
 57139      00
 57140              	.LASF543:
 57141 2664 72656269 		.string	"rebind_alloc"
 57141      6E645F61 
 57141      6C6C6F63 
 57141      00
 57142              	.LASF1470:
 57143 2671 73747274 		.string	"strtol"
 57143      6F6C00
 57144              	.LASF1348:
 57145 2678 746D5F68 		.string	"tm_hour"
 57145      6F757200 
 57146              	.LASF1672:
 57147 2680 5F474C4F 		.string	"_GLOBAL__sub_I_weighted_unweighted.cpp"
 57147      42414C5F 
 57147      5F737562 
 57147      5F495F77 
GAS LISTING /tmp/ccmMnd7l.s 			page 1439


 57147      65696768 
 57148              	.LASF468:
 57149 26a7 5F4D5F66 		.string	"_M_file"
 57149      696C6500 
 57150              	.LASF75:
 57151 26af 5F4D5F72 		.string	"_M_refcount"
 57151      6566636F 
 57151      756E7400 
 57152              	.LASF918:
 57153 26bb 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_swapERS3_"
 57153      7431315F 
 57153      5475706C 
 57153      655F696D 
 57153      706C494C 
 57154              	.LASF1641:
 57155 2701 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE"
 57155      5F5F676E 
 57155      755F6378 
 57155      7832345F 
 57155      5F6E756D 
 57156              	.LASF1165:
 57157 2733 5F5F6E75 		.string	"__numeric_traits_integer<char>"
 57157      6D657269 
 57157      635F7472 
 57157      61697473 
 57157      5F696E74 
 57158              	.LASF41:
 57159 2752 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 57159      74313163 
 57159      6861725F 
 57159      74726169 
 57159      74734963 
 57160              	.LASF943:
 57161 2774 5F547570 		.string	"_Tuple"
 57161      6C6500
 57162              	.LASF911:
 57163 277b 5F547570 		.string	"_Tuple_impl<1ul, std::default_delete<heatmap_t> >"
 57163      6C655F69 
 57163      6D706C3C 
 57163      31756C2C 
 57163      20737464 
 57164              	.LASF116:
 57165 27ad 5F4D5F63 		.string	"_M_check"
 57165      6865636B 
 57165      00
 57166              	.LASF1411:
 57167 27b6 75696E74 		.string	"uintmax_t"
 57167      6D61785F 
 57167      7400
 57168              	.LASF411:
 57169 27c0 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 57169      53743136 
 57169      696E6974 
 57169      69616C69 
 57169      7A65725F 
 57170              	.LASF1287:
 57171 27e2 5F767461 		.string	"_vtable_offset"
GAS LISTING /tmp/ccmMnd7l.s 			page 1440


 57171      626C655F 
 57171      6F666673 
 57171      657400
 57172              	.LASF786:
 57173 27f1 5F417267 		.string	"_Args"
 57173      7300
 57174              	.LASF1111:
 57175 27f7 61646472 		.string	"address"
 57175      65737300 
 57176              	.LASF605:
 57177 27ff 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4backEv"
 57177      53743676 
 57177      6563746F 
 57177      72496453 
 57177      61496445 
 57178              	.LASF1529:
 57179 281c 5F5A4E4B 		.string	"_ZNK11RepeatTimercvbEv"
 57179      31315265 
 57179      70656174 
 57179      54696D65 
 57179      72637662 
 57180              	.LASF746:
 57181 2833 64656661 		.string	"default_delete<heatmap_t>"
 57181      756C745F 
 57181      64656C65 
 57181      74653C68 
 57181      6561746D 
 57182              	.LASF955:
 57183 284d 5F5F6164 		.string	"__add_ref<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 25674
 57183      645F7265 
 57183      663C7374 
 57183      643A3A6D 
 57183      65727365 
 57184              	.LASF1056:
 57185 2900 61636375 		.string	"accumulate<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, double>"
 57185      6D756C61 
 57185      74653C5F 
 57185      5F676E75 
 57185      5F637878 
 57186              	.LASF587:
 57187 2950 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5crendEv"
 57187      53743676 
 57187      6563746F 
 57187      72496453 
 57187      61496445 
 57188              	.LASF1573:
 57189 296e 5F5F686F 		.string	"__holeIndex"
 57189      6C65496E 
 57189      64657800 
 57190              	.LASF807:
 57191 297a 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm1
 57191      7431305F 
 57191      48656164 
 57191      5F626173 
 57191      65494C6D 
 57192              	.LASF1624:
 57193 2a2b 4E504F49 		.string	"NPOINTS_MIN"
GAS LISTING /tmp/ccmMnd7l.s 			page 1441


 57193      4E54535F 
 57193      4D494E00 
 57194              	.LASF787:
 57195 2a37 5F536967 		.string	"_Signature"
 57195      6E617475 
 57195      726500
 57196              	.LASF1599:
 57197 2a42 5F5F7061 		.string	"__past"
 57197      737400
 57198              	.LASF828:
 57199 2a49 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 57199      74357475 
 57199      706C6549 
 57199      49537432 
 57199      336D6572 
 57200              	.LASF715:
 57201 2ae9 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8pop_backEv"
 57201      74367665 
 57201      63746F72 
 57201      496A5361 
 57201      496A4545 
 57202              	.LASF698:
 57203 2b09 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE13shrink_to_fitEv"
 57203      74367665 
 57203      63746F72 
 57203      496A5361 
 57203      496A4545 
 57204              	.LASF1251:
 57205 2b2f 5F5F6465 		.string	"__default_lock_policy"
 57205      6661756C 
 57205      745F6C6F 
 57205      636B5F70 
 57205      6F6C6963 
 57206              	.LASF481:
 57207 2b45 5F4D5F66 		.string	"_M_fini"
 57207      696E6900 
 57208              	.LASF1258:
 57209 2b4d 6F706572 		.string	"operator!=<double*, double const*, std::vector<double> >"
 57209      61746F72 
 57209      213D3C64 
 57209      6F75626C 
 57209      652A2C20 
 57210              	.LASF1556:
 57211 2b86 5F5F7364 		.string	"__sd"
 57211      00
 57212              	.LASF688:
 57213 2b8b 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4rendEv"
 57213      74367665 
 57213      63746F72 
 57213      496A5361 
 57213      496A4545 
 57214              	.LASF1117:
 57215 2ba7 5F5F6E75 		.string	"__numeric_traits_integer<int>"
 57215      6D657269 
 57215      635F7472 
 57215      61697473 
 57215      5F696E74 
GAS LISTING /tmp/ccmMnd7l.s 			page 1442


 57216              	.LASF666:
 57217 2bc5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE37select_on_container_copy_constructionERKS0_"
 57217      74313661 
 57217      6C6C6F63 
 57217      61746F72 
 57217      5F747261 
 57218              	.LASF244:
 57219 2c11 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_"
 57219      73377265 
 57219      706C6163 
 57219      65454E39 
 57219      5F5F676E 
 57220              	.LASF81:
 57221 2c4e 5F4D5F69 		.string	"_M_is_leaked"
 57221      735F6C65 
 57221      616B6564 
 57221      00
 57222              	.LASF1464:
 57223 2c5b 6D62746F 		.string	"mbtowc"
 57223      776300
 57224              	.LASF548:
 57225 2c62 5F4D5F73 		.string	"_M_start"
 57225      74617274 
 57225      00
 57226              	.LASF1461:
 57227 2c6b 6C646976 		.string	"ldiv"
 57227      00
 57228              	.LASF1052:
 57229 2c70 5F5F7061 		.string	"__partial_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__
 57229      72746961 
 57229      6C5F736F 
 57229      72743C5F 
 57229      5F676E75 
 57230              	.LASF1005:
 57231 2cdf 5F5F6765 		.string	"__get_helper<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31u
 57231      745F6865 
 57231      6C706572 
 57231      3C30756C 
 57231      2C207374 
 57232              	.LASF363:
 57233 2d9a 5F535F65 		.string	"_S_end"
 57233      6E6400
 57234              	.LASF808:
 57235 2da1 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm1
 57235      7431305F 
 57235      48656164 
 57235      5F626173 
 57235      65494C6D 
 57236              	.LASF19:
 57237 2e53 76616C75 		.string	"value_type"
 57237      655F7479 
 57237      706500
 57238              	.LASF1353:
 57239 2e5e 746D5F79 		.string	"tm_yday"
 57239      64617900 
 57240              	.LASF1167:
 57241 2e66 5F5F6E75 		.string	"__numeric_traits_integer<long int>"
GAS LISTING /tmp/ccmMnd7l.s 			page 1443


 57241      6D657269 
 57241      635F7472 
 57241      61697473 
 57241      5F696E74 
 57242              	.LASF388:
 57243 2e89 62616462 		.string	"badbit"
 57243      697400
 57244              	.LASF622:
 57245 2e90 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE21_M_default_initializeEm"
 57245      74367665 
 57245      63746F72 
 57245      49645361 
 57245      49644545 
 57246              	.LASF377:
 57247 2ebe 72696768 		.string	"right"
 57247      7400
 57248              	.LASF1051:
 57249 2ec4 5F5F736F 		.string	"__sort_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops
 57249      72745F68 
 57249      6561703C 
 57249      5F5F676E 
 57249      755F6378 
 57250              	.LASF1498:
 57251 2f30 666F7065 		.string	"fopen"
 57251      6E00
 57252              	.LASF1241:
 57253 2f36 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEpLEl"
 57253      5F5F676E 
 57253      755F6378 
 57253      7831375F 
 57253      5F6E6F72 
 57254              	.LASF5:
 57255 2f70 5F4D5F72 		.string	"_M_release"
 57255      656C6561 
 57255      736500
 57256              	.LASF1387:
 57257 2f7b 696E7436 		.string	"int64_t"
 57257      345F7400 
 57258              	.LASF320:
 57259 2f83 7475706C 		.string	"tuple<>"
 57259      653C3E00 
 57260              	.LASF114:
 57261 2f8b 5F4D5F6C 		.string	"_M_leak"
 57261      65616B00 
 57262              	.LASF1342:
 57263 2f93 77637363 		.string	"wcscoll"
 57263      6F6C6C00 
 57264              	.LASF1245:
 57265 2f9b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv"
 57265      395F5F67 
 57265      6E755F63 
 57265      78783137 
 57265      5F5F6E6F 
 57266              	.LASF978:
 57267 2fd9 73657473 		.string	"setstate"
 57267      74617465 
 57267      00
GAS LISTING /tmp/ccmMnd7l.s 			page 1444


 57268              	.LASF524:
 57269 2fe2 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE28_S_const_void_pointer_helperEz"
 57269      74313661 
 57269      6C6C6F63 
 57269      61746F72 
 57269      5F747261 
 57270              	.LASF876:
 57271 3021 5F547570 		.string	"_Tuple_impl<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 57271      6C655F69 
 57271      6D706C3C 
 57271      30756C2C 
 57271      20686561 
 57272              	.LASF434:
 57273 306b 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm624ELm1ELm0ELb1ELb1EE6__calcEm"
 57273      74385F5F 
 57273      64657461 
 57273      696C345F 
 57273      4D6F6449 
 57274              	.LASF1280:
 57275 30a1 5F494F5F 		.string	"_IO_save_end"
 57275      73617665 
 57275      5F656E64 
 57275      00
 57276              	.LASF703:
 57277 30ae 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEEixEm"
 57277      53743676 
 57277      6563746F 
 57277      72496A53 
 57277      61496A45 
 57278              	.LASF1541:
 57279 30c8 5F5F6F75 		.string	"__out"
 57279      7400
 57280              	.LASF236:
 57281 30ce 5F5A4E53 		.string	"_ZNSs7replaceEmmPKcm"
 57281      73377265 
 57281      706C6163 
 57281      65456D6D 
 57281      504B636D 
 57282              	.LASF256:
 57283 30e3 5F5A4E4B 		.string	"_ZNKSs4copyEPcmm"
 57283      53733463 
 57283      6F707945 
 57283      50636D6D 
 57283      00
 57284              	.LASF725:
 57285 30f4 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE21_M_default_initializeEm"
 57285      74367665 
 57285      63746F72 
 57285      496A5361 
 57285      496A4545 
 57286              	.LASF1607:
 57287 3122 5F5F696F 		.string	"__ioinit"
 57287      696E6974 
 57287      00
 57288              	.LASF1594:
 57289 312b 5F5F7572 		.string	"__urngrange"
 57289      6E677261 
GAS LISTING /tmp/ccmMnd7l.s 			page 1445


 57289      6E676500 
 57290              	.LASF305:
 57291 3137 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::c
 57291      7273655F 
 57291      69746572 
 57291      61746F72 
 57291      3C5F5F67 
 57292              	.LASF1269:
 57293 31bd 5F666C61 		.string	"_flags"
 57293      677300
 57294              	.LASF1022:
 57295 31c4 5F5F6669 		.string	"__fill_n_a<unsigned int*, long unsigned int, unsigned int>"
 57295      6C6C5F6E 
 57295      5F613C75 
 57295      6E736967 
 57295      6E656420 
 57296              	.LASF1426:
 57297 31ff 66726163 		.string	"frac_digits"
 57297      5F646967 
 57297      69747300 
 57298              	.LASF1362:
 57299 320b 77637373 		.string	"wcsspn"
 57299      706E00
 57300              	.LASF465:
 57301 3212 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 57301      7432336D 
 57301      65727365 
 57301      6E6E655F 
 57301      74776973 
 57302              	.LASF1011:
 57303 32ad 5F5F756E 		.string	"__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __
 57303      67756172 
 57303      6465645F 
 57303      6C696E65 
 57303      61725F69 
 57304              	.LASF642:
 57305 3326 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator
 57305      7273655F 
 57305      69746572 
 57305      61746F72 
 57305      3C5F5F67 
 57306              	.LASF927:
 57307 338e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_tailERS4_"
 57307      7431315F 
 57307      5475706C 
 57307      655F696D 
 57307      706C494C 
 57308              	.LASF0:
 57309 33d8 646F7562 		.string	"double"
 57309      6C6500
 57310              	.LASF501:
 57311 33df 5F5F6376 		.string	"__cv_selector<long unsigned int, false, false>"
 57311      5F73656C 
 57311      6563746F 
 57311      723C6C6F 
 57311      6E672075 
 57312              	.LASF840:
GAS LISTING /tmp/ccmMnd7l.s 			page 1446


 57313 340e 7E756E69 		.string	"~unique_ptr"
 57313      7175655F 
 57313      70747200 
 57314              	.LASF561:
 57315 341a 7E5F5665 		.string	"~_Vector_base"
 57315      63746F72 
 57315      5F626173 
 57315      6500
 57316              	.LASF1521:
 57317 3428 77637479 		.string	"wctype"
 57317      706500
 57318              	.LASF1563:
 57319 342f 5F5F6E69 		.string	"__niter"
 57319      74657200 
 57320              	.LASF464:
 57321 3437 5F4D5F67 		.string	"_M_gen_rand"
 57321      656E5F72 
 57321      616E6400 
 57322              	.LASF934:
 57323 3443 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEEaSERKS4_"
 57323      74357475 
 57323      706C6549 
 57323      49503968 
 57323      6561746D 
 57324              	.LASF392:
 57325 347d 6F70656E 		.string	"openmode"
 57325      6D6F6465 
 57325      00
 57326              	.LASF1279:
 57327 3486 5F494F5F 		.string	"_IO_backup_base"
 57327      6261636B 
 57327      75705F62 
 57327      61736500 
 57328              	.LASF898:
 57329 3496 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE3getEv"
 57329      53743130 
 57329      756E6971 
 57329      75655F70 
 57329      74724939 
 57330              	.LASF848:
 57331 34d2 6765745F 		.string	"get_deleter"
 57331      64656C65 
 57331      74657200 
 57332              	.LASF1455:
 57333 34de 61745F71 		.string	"at_quick_exit"
 57333      7569636B 
 57333      5F657869 
 57333      7400
 57334              	.LASF696:
 57335 34ec 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6resizeEm"
 57335      74367665 
 57335      63746F72 
 57335      496A5361 
 57335      496A4545 
 57336              	.LASF1311:
 57337 350a 5F5F6D62 		.string	"__mbstate_t"
 57337      73746174 
GAS LISTING /tmp/ccmMnd7l.s 			page 1447


 57337      655F7400 
 57338              	.LASF515:
 57339 3516 636F6E73 		.string	"const_void_pointer"
 57339      745F766F 
 57339      69645F70 
 57339      6F696E74 
 57339      657200
 57340              	.LASF603:
 57341 3529 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5frontEv"
 57341      53743676 
 57341      6563746F 
 57341      72496453 
 57341      61496445 
 57342              	.LASF1445:
 57343 3547 31315F5F 		.string	"11__mbstate_t"
 57343      6D627374 
 57343      6174655F 
 57343      7400
 57344              	.LASF243:
 57345 3555 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_"
 57345      73377265 
 57345      706C6163 
 57345      65454E39 
 57345      5F5F676E 
 57346              	.LASF683:
 57347 3592 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5beginEv"
 57347      53743676 
 57347      6563746F 
 57347      72496A53 
 57347      61496A45 
 57348              	.LASF751:
 57349 35b0 756E6966 		.string	"uniform_int_distribution<int>"
 57349      6F726D5F 
 57349      696E745F 
 57349      64697374 
 57349      72696275 
 57350              	.LASF1065:
 57351 35ce 5F5A5374 		.string	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_It
 57351      31335F5F 
 57351      61646A75 
 57351      73745F68 
 57351      65617049 
 57352              	.LASF30:
 57353 3645 63686172 		.string	"char_type"
 57353      5F747970 
 57353      6500
 57354              	.LASF62:
 57355 364f 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 57355      635F7374 
 57355      72696E67 
 57355      3C636861 
 57355      722C2073 
 57356              	.LASF1554:
 57357 3691 5F5F6C61 		.string	"__last"
 57357      737400
 57358              	.LASF433:
 57359 3698 5F4D6F64 		.string	"_Mod<long unsigned int, 624ul, 1ul, 0ul, true, true>"
GAS LISTING /tmp/ccmMnd7l.s 			page 1448


 57359      3C6C6F6E 
 57359      6720756E 
 57359      7369676E 
 57359      65642069 
 57360              	.LASF286:
 57361 36cd 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcm"
 57361      53733137 
 57361      66696E64 
 57361      5F666972 
 57361      73745F6E 
 57362              	.LASF1013:
 57363 36ec 5F436F6D 		.string	"_Compare"
 57363      70617265 
 57363      00
 57364              	.LASF87:
 57365 36f5 5F4D5F73 		.string	"_M_set_sharable"
 57365      65745F73 
 57365      68617261 
 57365      626C6500 
 57366              	.LASF1506:
 57367 3705 67657473 		.string	"gets"
 57367      00
 57368              	.LASF416:
 57369 370a 7461626C 		.string	"table_size"
 57369      655F7369 
 57369      7A6500
 57370              	.LASF965:
 57371 3715 5F5F7375 		.string	"__success_type<long unsigned int>"
 57371      63636573 
 57371      735F7479 
 57371      70653C6C 
 57371      6F6E6720 
 57372              	.LASF1612:
 57373 3737 6E706F69 		.string	"npoints"
 57373      6E747300 
 57374              	.LASF833:
 57375 373f 72656D6F 		.string	"remove_reference<std::default_delete<heatmap_stamp_t> >"
 57375      76655F72 
 57375      65666572 
 57375      656E6365 
 57375      3C737464 
 57376              	.LASF1141:
 57377 3777 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl"
 57377      395F5F67 
 57377      6E755F63 
 57377      78783137 
 57377      5F5F6E6F 
 57378              	.LASF373:
 57379 37a3 626F6F6C 		.string	"boolalpha"
 57379      616C7068 
 57379      6100
 57380              	.LASF1069:
 57381 37ad 6F737472 		.string	"ostream"
 57381      65616D00 
 57382              	.LASF886:
 57383 37b5 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSERKS4_"
 57383      74357475 
GAS LISTING /tmp/ccmMnd7l.s 			page 1449


 57383      706C6549 
 57383      49503135 
 57383      68656174 
 57384              	.LASF780:
 57385 37f6 5F4D5F62 		.string	"_M_bound_args"
 57385      6F756E64 
 57385      5F617267 
 57385      7300
 57386              	.LASF648:
 57387 3804 72656269 		.string	"rebind<unsigned int>"
 57387      6E643C75 
 57387      6E736967 
 57387      6E656420 
 57387      696E743E 
 57388              	.LASF1622:
 57389 3819 73746469 		.string	"stdin"
 57389      6E00
 57390              	.LASF768:
 57391 381f 69746572 		.string	"iterator_traits<unsigned int*>"
 57391      61746F72 
 57391      5F747261 
 57391      6974733C 
 57391      756E7369 
 57392              	.LASF499:
 57393 383e 72656269 		.string	"rebind"
 57393      6E6400
 57394              	.LASF1130:
 57395 3845 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi"
 57395      5F5F676E 
 57395      755F6378 
 57395      7831375F 
 57395      5F6E6F72 
 57396              	.LASF1059:
 57397 3870 5F524149 		.string	"_RAIter"
 57397      74657200 
 57398              	.LASF423:
 57399 3878 5F5F756E 		.string	"__uninitialized_default_n_1<true>"
 57399      696E6974 
 57399      69616C69 
 57399      7A65645F 
 57399      64656661 
 57400              	.LASF142:
 57401 389a 62617369 		.string	"basic_string"
 57401      635F7374 
 57401      72696E67 
 57401      00
 57402              	.LASF1000:
 57403 38a7 5F5F6765 		.string	"__get_helper<1ul, std::default_delete<heatmap_t> >"
 57403      745F6865 
 57403      6C706572 
 57403      3C31756C 
 57403      2C207374 
 57404              	.LASF1021:
 57405 38da 5F5F756E 		.string	"__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_
 57405      67756172 
 57405      6465645F 
 57405      70617274 
GAS LISTING /tmp/ccmMnd7l.s 			page 1450


 57405      6974696F 
 57406              	.LASF632:
 57407 3950 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc"
 57407      53743676 
 57407      6563746F 
 57407      72496453 
 57407      61496445 
 57408              	.LASF209:
 57409 3979 70757368 		.string	"push_back"
 57409      5F626163 
 57409      6B00
 57410              	.LASF1159:
 57411 3983 5F5F6D61 		.string	"__max_digits10"
 57411      785F6469 
 57411      67697473 
 57411      313000
 57412              	.LASF684:
 57413 3992 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE3endEv"
 57413      74367665 
 57413      63746F72 
 57413      496A5361 
 57413      496A4545 
 57414              	.LASF905:
 57415 39ad 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE4swapERS3_"
 57415      74313075 
 57415      6E697175 
 57415      655F7074 
 57415      72493968 
 57416              	.LASF478:
 57417 39ec 5F5A4E53 		.string	"_ZNSt13random_device7_M_initERKSs"
 57417      74313372 
 57417      616E646F 
 57417      6D5F6465 
 57417      76696365 
 57418              	.LASF1379:
 57419 3a0e 77637373 		.string	"wcsstr"
 57419      747200
 57420              	.LASF754:
 57421 3a15 5F4D5F70 		.string	"_M_param"
 57421      6172616D 
 57421      00
 57422              	.LASF1181:
 57423 3a1e 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE27_S_propagate_on_copy_assignEv"
 57423      5F5F676E 
 57423      755F6378 
 57423      7831345F 
 57423      5F616C6C 
 57424              	.LASF569:
 57425 3a62 76656374 		.string	"vector"
 57425      6F7200
 57426              	.LASF1097:
 57427 3a69 5F497465 		.string	"_Iterator1"
 57427      7261746F 
 57427      723100
 57428              	.LASF1098:
 57429 3a74 5F497465 		.string	"_Iterator2"
 57429      7261746F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1451


 57429      723200
 57430              	.LASF1226:
 57431 3a7f 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE10_S_on_swapERS1_S3_"
 57431      5F5F676E 
 57431      755F6378 
 57431      7831345F 
 57431      5F616C6C 
 57432              	.LASF1450:
 57433 3ab8 6C646976 		.string	"ldiv_t"
 57433      5F7400
 57434              	.LASF1312:
 57435 3abf 6D627374 		.string	"mbstate_t"
 57435      6174655F 
 57435      7400
 57436              	.LASF322:
 57437 3ac9 5F537761 		.string	"_Swallow_assign"
 57437      6C6C6F77 
 57437      5F617373 
 57437      69676E00 
 57438              	.LASF1278:
 57439 3ad9 5F494F5F 		.string	"_IO_save_base"
 57439      73617665 
 57439      5F626173 
 57439      6500
 57440              	.LASF438:
 57441 3ae7 6E706F73 		.string	"npos"
 57441      00
 57442              	.LASF385:
 57443 3aec 61646A75 		.string	"adjustfield"
 57443      73746669 
 57443      656C6400 
 57444              	.LASF618:
 57445 3af8 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5clearEv"
 57445      74367665 
 57445      63746F72 
 57445      49645361 
 57445      49644545 
 57446              	.LASF1260:
 57447 3b15 5F497465 		.string	"_IteratorR"
 57447      7261746F 
 57447      725200
 57448              	.LASF730:
 57449 3b20 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc"
 57449      53743676 
 57449      6563746F 
 57449      72496A53 
 57449      61496A45 
 57450              	.LASF1146:
 57451 3b49 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv"
 57451      395F5F67 
 57451      6E755F63 
 57451      78783137 
 57451      5F5F6E6F 
 57452              	.LASF44:
 57453 3b76 61737369 		.string	"assign"
 57453      676E00
 57454              	.LASF1242:
GAS LISTING /tmp/ccmMnd7l.s 			page 1452


 57455 3b7d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEplEl"
 57455      395F5F67 
 57455      6E755F63 
 57455      78783137 
 57455      5F5F6E6F 
 57456              	.LASF1545:
 57457 3bb8 5F5F7066 		.string	"__pf"
 57457      00
 57458              	.LASF640:
 57459 3bbd 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 57459      74367665 
 57459      63746F72 
 57459      49645361 
 57459      49644545 
 57460              	.LASF429:
 57461 3c03 5F5F6361 		.string	"__calc"
 57461      6C6300
 57462              	.LASF634:
 57463 3c0a 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd"
 57463      74367665 
 57463      63746F72 
 57463      49645361 
 57463      49644545 
 57464              	.LASF37:
 57465 3c33 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 57465      74313163 
 57465      6861725F 
 57465      74726169 
 57465      74734963 
 57466              	.LASF328:
 57467 3c54 5F535F66 		.string	"_S_fixed"
 57467      69786564 
 57467      00
 57468              	.LASF396:
 57469 3c5d 696F735F 		.string	"ios_base"
 57469      62617365 
 57469      00
 57470              	.LASF1152:
 57471 3c66 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixEl"
 57471      395F5F67 
 57471      6E755F63 
 57471      78783137 
 57471      5F5F6E6F 
 57472              	.LASF208:
 57473 3c93 5F5A4E53 		.string	"_ZNSs6appendESt16initializer_listIcE"
 57473      73366170 
 57473      70656E64 
 57473      45537431 
 57473      36696E69 
 57474              	.LASF1421:
 57475 3cb8 6D6F6E5F 		.string	"mon_thousands_sep"
 57475      74686F75 
 57475      73616E64 
 57475      735F7365 
 57475      7000
 57476              	.LASF113:
 57477 3cca 5F5A4E4B 		.string	"_ZNKSs7_M_iendEv"
GAS LISTING /tmp/ccmMnd7l.s 			page 1453


 57477      5373375F 
 57477      4D5F6965 
 57477      6E644576 
 57477      00
 57478              	.LASF1275:
 57479 3cdb 5F494F5F 		.string	"_IO_write_end"
 57479      77726974 
 57479      655F656E 
 57479      6400
 57480              	.LASF1166:
 57481 3ce9 5F5F6E75 		.string	"__numeric_traits_integer<short int>"
 57481      6D657269 
 57481      635F7472 
 57481      61697473 
 57481      5F696E74 
 57482              	.LASF77:
 57483 3d0d 5F535F6D 		.string	"_S_max_size"
 57483      61785F73 
 57483      697A6500 
 57484              	.LASF737:
 57485 3d19 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, st
 57485      7273655F 
 57485      69746572 
 57485      61746F72 
 57485      3C5F5F67 
 57486              	.LASF391:
 57487 3d93 676F6F64 		.string	"goodbit"
 57487      62697400 
 57488              	.LASF557:
 57489 3d9b 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv"
 57489      7431325F 
 57489      56656374 
 57489      6F725F62 
 57489      61736549 
 57490              	.LASF496:
 57491 3dce 64696666 		.string	"difference_type"
 57491      6572656E 
 57491      63655F74 
 57491      79706500 
 57492              	.LASF374:
 57493 3dde 66697865 		.string	"fixed"
 57493      6400
 57494              	.LASF986:
 57495 3de4 6F706572 		.string	"operator|="
 57495      61746F72 
 57495      7C3D00
 57496              	.LASF73:
 57497 3def 5F4D5F6C 		.string	"_M_length"
 57497      656E6774 
 57497      6800
 57498              	.LASF583:
 57499 3df9 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4rendEv"
 57499      53743676 
 57499      6563746F 
 57499      72496453 
 57499      61496445 
 57500              	.LASF1214:
GAS LISTING /tmp/ccmMnd7l.s 			page 1454


 57501 3e16 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEplEl"
 57501      395F5F67 
 57501      6E755F63 
 57501      78783137 
 57501      5F5F6E6F 
 57502              	.LASF1339:
 57503 3e52 77637274 		.string	"wcrtomb"
 57503      6F6D6200 
 57504              	.LASF251:
 57505 3e5a 5F5A4E53 		.string	"_ZNSs15_M_replace_safeEmmPKcm"
 57505      7331355F 
 57505      4D5F7265 
 57505      706C6163 
 57505      655F7361 
 57506              	.LASF295:
 57507 3e78 5F5A4E4B 		.string	"_ZNKSs7compareERKSs"
 57507      53733763 
 57507      6F6D7061 
 57507      72654552 
 57507      4B537300 
 57508              	.LASF46:
 57509 3e8c 746F5F63 		.string	"to_char_type"
 57509      6861725F 
 57509      74797065 
 57509      00
 57510              	.LASF664:
 57511 3e99 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm"
 57511      74313661 
 57511      6C6C6F63 
 57511      61746F72 
 57511      5F747261 
 57512              	.LASF812:
 57513 3ecc 5F497345 		.string	"_IsEmptyNotFinal"
 57513      6D707479 
 57513      4E6F7446 
 57513      696E616C 
 57513      00
 57514              	.LASF1024:
 57515 3edd 666F7277 		.string	"forward_as_tuple<>"
 57515      6172645F 
 57515      61735F74 
 57515      75706C65 
 57515      3C3E00
 57516              	.LASF1276:
 57517 3ef0 5F494F5F 		.string	"_IO_buf_base"
 57517      6275665F 
 57517      62617365 
 57517      00
 57518              	.LASF924:
 57519 3efd 5F547570 		.string	"_Tuple_impl<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 57519      6C655F69 
 57519      6D706C3C 
 57519      30756C2C 
 57519      20686561 
 57520              	.LASF80:
 57521 3f3b 5F535F65 		.string	"_S_empty_rep"
 57521      6D707479 
GAS LISTING /tmp/ccmMnd7l.s 			page 1455


 57521      5F726570 
 57521      00
 57522              	.LASF804:
 57523 3f48 5F4D5F68 		.string	"_M_head_impl"
 57523      6561645F 
 57523      696D706C 
 57523      00
 57524              	.LASF1290:
 57525 3f55 5F6F6666 		.string	"_offset"
 57525      73657400 
 57526              	.LASF1502:
 57527 3f5d 66736574 		.string	"fsetpos"
 57527      706F7300 
 57528              	.LASF1158:
 57529 3f65 5F5F6E75 		.string	"__numeric_traits_floating<float>"
 57529      6D657269 
 57529      635F7472 
 57529      61697473 
 57529      5F666C6F 
 57530              	.LASF855:
 57531 3f86 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE4swapERS3_"
 57531      74313075 
 57531      6E697175 
 57531      655F7074 
 57531      72493135 
 57532              	.LASF1661:
 57533 3fcc 62656E63 		.string	"benchs/weighted_unweighted.cpp"
 57533      68732F77 
 57533      65696768 
 57533      7465645F 
 57533      756E7765 
 57534              	.LASF915:
 57535 3feb 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_tailERKS3_"
 57535      7431315F 
 57535      5475706C 
 57535      655F696D 
 57535      706C494C 
 57536              	.LASF1046:
 57537 4032 5F5F7075 		.string	"__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, double
 57537      73685F68 
 57537      6561703C 
 57537      5F5F676E 
 57537      755F6378 
 57538              	.LASF421:
 57539 40af 5F466F72 		.string	"_ForwardIterator"
 57539      77617264 
 57539      49746572 
 57539      61746F72 
 57539      00
 57540              	.LASF1357:
 57541 40c0 7763736C 		.string	"wcslen"
 57541      656E00
 57542              	.LASF1499:
 57543 40c7 66726561 		.string	"fread"
 57543      6400
 57544              	.LASF1077:
 57545 40cd 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
GAS LISTING /tmp/ccmMnd7l.s 			page 1456


 57545      31365F5F 
 57545      6F737472 
 57545      65616D5F 
 57545      696E7365 
 57546              	.LASF67:
 57547 411b 616C6C6F 		.string	"allocator_type"
 57547      6361746F 
 57547      725F7479 
 57547      706500
 57548              	.LASF1500:
 57549 412a 6672656F 		.string	"freopen"
 57549      70656E00 
 57550              	.LASF1604:
 57551 4132 67696D6D 		.string	"gimme_time"
 57551      655F7469 
 57551      6D6500
 57552              	.LASF12:
 57553 413d 5F4D5F67 		.string	"_M_get"
 57553      657400
 57554              	.LASF1391:
 57555 4144 75696E74 		.string	"uint64_t"
 57555      36345F74 
 57555      00
 57556              	.LASF1253:
 57557 414d 5F5F656E 		.string	"__enable_if<true, unsigned int*>"
 57557      61626C65 
 57557      5F69663C 
 57557      74727565 
 57557      2C20756E 
 57558              	.LASF97:
 57559 416e 5F4D5F64 		.string	"_M_dispose"
 57559      6973706F 
 57559      736500
 57560              	.LASF263:
 57561 4179 5F5A4E4B 		.string	"_ZNKSs13get_allocatorEv"
 57561      53733133 
 57561      6765745F 
 57561      616C6C6F 
 57561      6361746F 
 57562              	.LASF542:
 57563 4191 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_"
 57563      74313661 
 57563      6C6C6F63 
 57563      61746F72 
 57563      5F747261 
 57564              	.LASF152:
 57565 41dd 5F5A4E53 		.string	"_ZNSs3endEv"
 57565      7333656E 
 57565      64457600 
 57566              	.LASF931:
 57567 41e9 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_swapERS4_"
 57567      7431315F 
 57567      5475706C 
 57567      655F696D 
 57567      706C494C 
 57568              	.LASF1449:
 57569 4233 366C6469 		.string	"6ldiv_t"
GAS LISTING /tmp/ccmMnd7l.s 			page 1457


 57569      765F7400 
 57570              	.LASF593:
 57571 423b 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE8capacityEv"
 57571      53743676 
 57571      6563746F 
 57571      72496453 
 57571      61496445 
 57572              	.LASF484:
 57573 425c 5F5A4E53 		.string	"_ZNSt13random_device9_M_getvalEv"
 57573      74313372 
 57573      616E646F 
 57573      6D5F6465 
 57573      76696365 
 57574              	.LASF1057:
 57575 427d 5F496E70 		.string	"_InputIterator"
 57575      75744974 
 57575      65726174 
 57575      6F7200
 57576              	.LASF148:
 57577 428c 5F5A4E53 		.string	"_ZNSsaSESt16initializer_listIcE"
 57577      73615345 
 57577      53743136 
 57577      696E6974 
 57577      69616C69 
 57578              	.LASF402:
 57579 42ac 5F5A4E53 		.string	"_ZNSolsEm"
 57579      6F6C7345 
 57579      6D00
 57580              	.LASF1375:
 57581 42b6 77736361 		.string	"wscanf"
 57581      6E6600
 57582              	.LASF178:
 57583 42bd 63617061 		.string	"capacity"
 57583      63697479 
 57583      00
 57584              	.LASF1642:
 57585 42c6 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__minE"
 57585      5F5F676E 
 57585      755F6378 
 57585      7832345F 
 57585      5F6E756D 
 57586              	.LASF872:
 57587 42f8 5F486561 		.string	"_Head_base<0ul, heatmap_stamp_t*, false>"
 57587      645F6261 
 57587      73653C30 
 57587      756C2C20 
 57587      68656174 
 57588              	.LASF584:
 57589 4321 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE6cbeginEv"
 57589      53743676 
 57589      6563746F 
 57589      72496453 
 57589      61496445 
 57590              	.LASF947:
 57591 4340 72656D6F 		.string	"remove_reference<heatmap_stamp_t*&>"
 57591      76655F72 
 57591      65666572 
GAS LISTING /tmp/ccmMnd7l.s 			page 1458


 57591      656E6365 
 57591      3C686561 
 57592              	.LASF269:
 57593 4364 5F5A4E4B 		.string	"_ZNKSs5rfindERKSsm"
 57593      53733572 
 57593      66696E64 
 57593      45524B53 
 57593      736D00
 57594              	.LASF930:
 57595 4377 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEEaSEOS4_"
 57595      7431315F 
 57595      5475706C 
 57595      655F696D 
 57595      706C494C 
 57596              	.LASF1073:
 57597 43bb 5F5A5374 		.string	"_ZSt4cout"
 57597      34636F75 
 57597      7400
 57598              	.LASF1337:
 57599 43c5 76777072 		.string	"vwprintf"
 57599      696E7466 
 57599      00
 57600              	.LASF738:
 57601 43ce 696E6974 		.string	"initializer_list<unsigned int>"
 57601      69616C69 
 57601      7A65725F 
 57601      6C697374 
 57601      3C756E73 
 57602              	.LASF1062:
 57603 43ed 5F5F696E 		.string	"__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::
 57603      73657274 
 57603      696F6E5F 
 57603      736F7274 
 57603      3C5F5F67 
 57604              	.LASF963:
 57605 445e 5F5A4E53 		.string	"_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEELb0EE7_S_baseES6_"
 57605      7431305F 
 57605      49746572 
 57605      5F626173 
 57605      65494E39 
 57606              	.LASF651:
 57607 44b6 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPjE10pointer_toERj"
 57607      74313470 
 57607      6F696E74 
 57607      65725F74 
 57607      72616974 
 57608              	.LASF1646:
 57609 44df 6F706572 		.string	"operator new"
 57609      61746F72 
 57609      206E6577 
 57609      00
 57610              	.LASF110:
 57611 44ec 5F4D5F69 		.string	"_M_ibegin"
 57611      62656769 
 57611      6E00
 57612              	.LASF714:
 57613 44f6 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE9push_backEOj"
GAS LISTING /tmp/ccmMnd7l.s 			page 1459


 57613      74367665 
 57613      63746F72 
 57613      496A5361 
 57613      496A4545 
 57614              	.LASF1485:
 57615 4518 5F494F5F 		.string	"_IO_marker"
 57615      6D61726B 
 57615      657200
 57616              	.LASF89:
 57617 4523 5F4D5F73 		.string	"_M_set_length_and_sharable"
 57617      65745F6C 
 57617      656E6774 
 57617      685F616E 
 57617      645F7368 
 57618              	.LASF964:
 57619 453e 5F486173 		.string	"_HasBase"
 57619      42617365 
 57619      00
 57620              	.LASF1628:
 57621 4547 4D415053 		.string	"MAPSIZE"
 57621      495A4500 
 57622              	.LASF866:
 57623 454f 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_tailERS3_"
 57623      7431315F 
 57623      5475706C 
 57623      655F696D 
 57623      706C494C 
 57624              	.LASF167:
 57625 459c 5F5A4E4B 		.string	"_ZNKSs5crendEv"
 57625      53733563 
 57625      72656E64 
 57625      457600
 57626              	.LASF162:
 57627 45ab 63656E64 		.string	"cend"
 57627      00
 57628              	.LASF556:
 57629 45b0 5F4D5F67 		.string	"_M_get_Tp_allocator"
 57629      65745F54 
 57629      705F616C 
 57629      6C6F6361 
 57629      746F7200 
 57630              	.LASF959:
 57631 45c4 69746572 		.string	"iterator_traits<char const*>"
 57631      61746F72 
 57631      5F747261 
 57631      6974733C 
 57631      63686172 
 57632              	.LASF513:
 57633 45e1 5F5F706F 		.string	"__pointer"
 57633      696E7465 
 57633      7200
 57634              	.LASF916:
 57635 45eb 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEEaSERKS3_"
 57635      7431315F 
 57635      5475706C 
 57635      655F696D 
 57635      706C494C 
GAS LISTING /tmp/ccmMnd7l.s 			page 1460


 57636              	.LASF625:
 57637 462c 5F4D5F66 		.string	"_M_fill_insert"
 57637      696C6C5F 
 57637      696E7365 
 57637      727400
 57638              	.LASF551:
 57639 463b 5F4D5F73 		.string	"_M_swap_data"
 57639      7761705F 
 57639      64617461 
 57639      00
 57640              	.LASF394:
 57641 4648 7472756E 		.string	"trunc"
 57641      6300
 57642              	.LASF352:
 57643 464e 5F535F74 		.string	"_S_trunc"
 57643      72756E63 
 57643      00
 57644              	.LASF70:
 57645 4657 636F6E73 		.string	"const_reverse_iterator"
 57645      745F7265 
 57645      76657273 
 57645      655F6974 
 57645      65726174 
 57646              	.LASF887:
 57647 466e 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSEOS4_"
 57647      74357475 
 57647      706C6549 
 57647      49503135 
 57647      68656174 
 57648              	.LASF1465:
 57649 46ae 71736F72 		.string	"qsort"
 57649      7400
 57650              	.LASF1209:
 57651 46b4 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEi"
 57651      5F5F676E 
 57651      755F6378 
 57651      7831375F 
 57651      5F6E6F72 
 57652              	.LASF1668:
 57653 46ef 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE10param_type1bEv"
 57653      53743234 
 57653      756E6966 
 57653      6F726D5F 
 57653      696E745F 
 57654              	.LASF1643:
 57655 4723 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__maxE"
 57655      5F5F676E 
 57655      755F6378 
 57655      7832345F 
 57655      5F6E756D 
 57656              	.LASF1208:
 57657 4755 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv"
 57657      5F5F676E 
 57657      755F6378 
 57657      7831375F 
 57657      5F6E6F72 
 57658              	.LASF255:
GAS LISTING /tmp/ccmMnd7l.s 			page 1461


 57659 4790 5F5A4E53 		.string	"_ZNSs12_S_constructEmcRKSaIcE"
 57659      7331325F 
 57659      535F636F 
 57659      6E737472 
 57659      75637445 
 57660              	.LASF23:
 57661 47ae 696E7465 		.string	"integral_constant<bool, true>"
 57661      6772616C 
 57661      5F636F6E 
 57661      7374616E 
 57661      743C626F 
 57662              	.LASF1198:
 57663 47cc 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmmEi"
 57663      5F5F676E 
 57663      755F6378 
 57663      7831375F 
 57663      5F6E6F72 
 57664              	.LASF980:
 57665 4806 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc"
 57665      53743962 
 57665      61736963 
 57665      5F696F73 
 57665      49635374 
 57666              	.LASF108:
 57667 4834 5F4D5F72 		.string	"_M_rep"
 57667      657000
 57668              	.LASF761:
 57669 483b 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE5paramEv"
 57669      53743234 
 57669      756E6966 
 57669      6F726D5F 
 57669      696E745F 
 57670              	.LASF735:
 57671 4867 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 57671      74367665 
 57671      63746F72 
 57671      496A5361 
 57671      496A4545 
 57672              	.LASF753:
 57673 48ad 70617261 		.string	"param_type"
 57673      6D5F7479 
 57673      706500
 57674              	.LASF1580:
 57675 48b8 5F5F6465 		.string	"__depth_limit"
 57675      7074685F 
 57675      6C696D69 
 57675      7400
 57676              	.LASF806:
 57677 48c6 5F4D5F68 		.string	"_M_head"
 57677      65616400 
 57678              	.LASF535:
 57679 48ce 616C6C6F 		.string	"allocate"
 57679      63617465 
 57679      00
 57680              	.LASF591:
 57681 48d7 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6resizeEmRKd"
 57681      74367665 
GAS LISTING /tmp/ccmMnd7l.s 			page 1462


 57681      63746F72 
 57681      49645361 
 57681      49644545 
 57682              	.LASF1591:
 57683 48f8 5F5F7563 		.string	"__uctype"
 57683      74797065 
 57683      00
 57684              	.LASF776:
 57685 4901 5F536F63 		.string	"_SocketLike"
 57685      6B65744C 
 57685      696B6500 
 57686              	.LASF1340:
 57687 490d 77637363 		.string	"wcscat"
 57687      617400
 57688              	.LASF1670:
 57689 4914 5F494F5F 		.string	"_IO_lock_t"
 57689      6C6F636B 
 57689      5F7400
 57690              	.LASF474:
 57691 491f 5F5A4E4B 		.string	"_ZNKSt13random_device7entropyEv"
 57691      53743133 
 57691      72616E64 
 57691      6F6D5F64 
 57691      65766963 
 57692              	.LASF463:
 57693 493f 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 57693      7432336D 
 57693      65727365 
 57693      6E6E655F 
 57693      74776973 
 57694              	.LASF538:
 57695 49cf 6465616C 		.string	"deallocate"
 57695      6C6F6361 
 57695      746500
 57696              	.LASF119:
 57697 49da 5F5A4E4B 		.string	"_ZNKSs15_M_check_lengthEmmPKc"
 57697      53733135 
 57697      5F4D5F63 
 57697      6865636B 
 57697      5F6C656E 
 57698              	.LASF1270:
 57699 49f8 5F494F5F 		.string	"_IO_read_ptr"
 57699      72656164 
 57699      5F707472 
 57699      00
 57700              	.LASF425:
 57701 4a05 5F53697A 		.string	"_Size"
 57701      6500
 57702              	.LASF773:
 57703 4a0b 5F5A4E53 		.string	"_ZNSt26_Maybe_wrap_member_pointerISt24uniform_int_distributionIiEE9__do_wrapEOS1_"
 57703      7432365F 
 57703      4D617962 
 57703      655F7772 
 57703      61705F6D 
 57704              	.LASF235:
 57705 4a5d 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSsmm"
 57705      73377265 
GAS LISTING /tmp/ccmMnd7l.s 			page 1463


 57705      706C6163 
 57705      65456D6D 
 57705      524B5373 
 57706              	.LASF891:
 57707 4a74 5F5F6164 		.string	"__add_lvalue_reference_helper<heatmap_stamp_t, true>"
 57707      645F6C76 
 57707      616C7565 
 57707      5F726566 
 57707      6572656E 
 57708              	.LASF1262:
 57709 4aa9 6F706572 		.string	"operator-<double*, std::vector<double> >"
 57709      61746F72 
 57709      2D3C646F 
 57709      75626C65 
 57709      2A2C2073 
 57710              	.LASF1284:
 57711 4ad2 5F666C61 		.string	"_flags2"
 57711      67733200 
 57712              	.LASF124:
 57713 4ada 5F4D5F63 		.string	"_M_copy"
 57713      6F707900 
 57714              	.LASF795:
 57715 4ae2 5F576561 		.string	"_Weak_result_type"
 57715      6B5F7265 
 57715      73756C74 
 57715      5F747970 
 57715      6500
 57716              	.LASF1510:
 57717 4af4 72657769 		.string	"rewind"
 57717      6E6400
 57718              	.LASF858:
 57719 4afb 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm2EIEE7_M_swapERS0_"
 57719      7431315F 
 57719      5475706C 
 57719      655F696D 
 57719      706C494C 
 57720              	.LASF1299:
 57721 4b23 73697A65 		.string	"sizetype"
 57721      74797065 
 57721      00
 57722              	.LASF1106:
 57723 4b2c 5F5F6974 		.string	"__iter_less_iter"
 57723      65725F6C 
 57723      6573735F 
 57723      69746572 
 57723      00
 57724              	.LASF216:
 57725 4b3d 5F5A4E53 		.string	"_ZNSs6assignEmc"
 57725      73366173 
 57725      7369676E 
 57725      456D6300 
 57726              	.LASF627:
 57727 4b4d 5F4D5F64 		.string	"_M_default_append"
 57727      65666175 
 57727      6C745F61 
 57727      7070656E 
 57727      6400
GAS LISTING /tmp/ccmMnd7l.s 			page 1464


 57728              	.LASF1429:
 57729 4b5f 6E5F6373 		.string	"n_cs_precedes"
 57729      5F707265 
 57729      63656465 
 57729      7300
 57730              	.LASF252:
 57731 4b6d 5F535F63 		.string	"_S_construct_aux_2"
 57731      6F6E7374 
 57731      72756374 
 57731      5F617578 
 57731      5F3200
 57732              	.LASF1211:
 57733 4b80 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEi"
 57733      5F5F676E 
 57733      755F6378 
 57733      7831375F 
 57733      5F6E6F72 
 57734              	.LASF16:
 57735 4bbb 5F5F6378 		.string	"__cxa_exception_type"
 57735      615F6578 
 57735      63657074 
 57735      696F6E5F 
 57735      74797065 
 57736              	.LASF613:
 57737 4bd0 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EESt16initializer_listId
 57737      74367665 
 57737      63746F72 
 57737      49645361 
 57737      49644545 
 57738              	.LASF63:
 57739 4c2b 5F416C6C 		.string	"_Alloc_hider"
 57739      6F635F68 
 57739      69646572 
 57739      00
 57740              	.LASF1231:
 57741 4c38 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_nothrow_moveEv"
 57741      5F5F676E 
 57741      755F6378 
 57741      7831345F 
 57741      5F616C6C 
 57742              	.LASF1074:
 57743 4c70 63657272 		.string	"cerr"
 57743      00
 57744              	.LASF1274:
 57745 4c75 5F494F5F 		.string	"_IO_write_ptr"
 57745      77726974 
 57745      655F7074 
 57745      7200
 57746              	.LASF878:
 57747 4c83 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_headERKS4_"
 57747      7431315F 
 57747      5475706C 
 57747      655F696D 
 57747      706C494C 
 57748              	.LASF9:
 57749 4cd5 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 57749      7431355F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1465


 57749      5F657863 
 57749      65707469 
 57749      6F6E5F70 
 57750              	.LASF521:
 57751 4d03 5F535F76 		.string	"_S_void_pointer_helper"
 57751      6F69645F 
 57751      706F696E 
 57751      7465725F 
 57751      68656C70 
 57752              	.LASF764:
 57753 4d1a 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE3maxEv"
 57753      53743234 
 57753      756E6966 
 57753      6F726D5F 
 57753      696E745F 
 57754              	.LASF344:
 57755 4d44 5F535F69 		.string	"_S_ios_fmtflags_end"
 57755      6F735F66 
 57755      6D74666C 
 57755      6167735F 
 57755      656E6400 
 57756              	.LASF389:
 57757 4d58 656F6662 		.string	"eofbit"
 57757      697400
 57758              	.LASF378:
 57759 4d5f 73636965 		.string	"scientific"
 57759      6E746966 
 57759      696300
 57760              	.LASF938:
 57761 4d6a 636F6E64 		.string	"conditional<false, std::default_delete<heatmap_t>, const std::default_delete<heatmap_t>&>
 57761      6974696F 
 57761      6E616C3C 
 57761      66616C73 
 57761      652C2073 
 57762              	.LASF854:
 57763 4dc4 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE5resetEPS0_"
 57763      74313075 
 57763      6E697175 
 57763      655F7074 
 57763      72493135 
 57764              	.LASF554:
 57765 4e0b 5F54705F 		.string	"_Tp_alloc_type"
 57765      616C6C6F 
 57765      635F7479 
 57765      706500
 57766              	.LASF95:
 57767 4e1a 5F535F63 		.string	"_S_create"
 57767      72656174 
 57767      6500
 57768              	.LASF923:
 57769 4e24 5F486561 		.string	"_Head_base<heatmap_t*&, void>"
 57769      645F6261 
 57769      73653C68 
 57769      6561746D 
 57769      61705F74 
 57770              	.LASF652:
 57771 4e42 616C6C6F 		.string	"allocator_traits<std::allocator<unsigned int> >"
GAS LISTING /tmp/ccmMnd7l.s 			page 1466


 57771      6361746F 
 57771      725F7472 
 57771      61697473 
 57771      3C737464 
 57772              	.LASF1346:
 57773 4e72 746D5F73 		.string	"tm_sec"
 57773      656300
 57774              	.LASF525:
 57775 4e79 5F535F64 		.string	"_S_difference_type_helper"
 57775      69666665 
 57775      72656E63 
 57775      655F7479 
 57775      70655F68 
 57776              	.LASF769:
 57777 4e93 72656D6F 		.string	"remove_reference<std::uniform_int_distribution<int>&>"
 57777      76655F72 
 57777      65666572 
 57777      656E6365 
 57777      3C737464 
 57778              	.LASF929:
 57779 4ec9 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEEaSERKS4_"
 57779      7431315F 
 57779      5475706C 
 57779      655F696D 
 57779      706C494C 
 57780              	.LASF380:
 57781 4f0e 73686F77 		.string	"showpoint"
 57781      706F696E 
 57781      7400
 57782              	.LASF1114:
 57783 4f18 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv"
 57783      5F5F676E 
 57783      755F6378 
 57783      7831336E 
 57783      65775F61 
 57784              	.LASF1264:
 57785 4f46 6F706572 		.string	"operator==<double*, std::vector<double> >"
 57785      61746F72 
 57785      3D3D3C64 
 57785      6F75626C 
 57785      652A2C20 
 57786              	.LASF932:
 57787 4f70 5F547570 		.string	"_Tuple_impl<heatmap_t*&, std::default_delete<heatmap_t>, void>"
 57787      6C655F69 
 57787      6D706C3C 
 57787      68656174 
 57787      6D61705F 
 57788              	.LASF1192:
 57789 4faf 5F5F6E6F 		.string	"__normal_iterator<double*, std::vector<double, std::allocator<double> > >"
 57789      726D616C 
 57789      5F697465 
 57789      7261746F 
 57789      723C646F 
 57790              	.LASF706:
 57791 4ff9 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE2atEm"
 57791      53743676 
 57791      6563746F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1467


 57791      72496A53 
 57791      61496A45 
 57792              	.LASF1531:
 57793 5014 39686561 		.string	"9heatmap_t"
 57793      746D6170 
 57793      5F7400
 57794              	.LASF824:
 57795 501f 5F555461 		.string	"_UTail"
 57795      696C00
 57796              	.LASF628:
 57797 5026 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE17_M_default_appendEm"
 57797      74367665 
 57797      63746F72 
 57797      49645361 
 57797      49644545 
 57798              	.LASF193:
 57799 5050 5F5A4E4B 		.string	"_ZNKSs5frontEv"
 57799      53733566 
 57799      726F6E74 
 57799      457600
 57800              	.LASF994:
 57801 505f 6765743C 		.string	"get<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 57801      30756C2C 
 57801      20686561 
 57801      746D6170 
 57801      5F742A2C 
 57802              	.LASF1019:
 57803 5095 5F466F72 		.string	"_ForwardIterator1"
 57803      77617264 
 57803      49746572 
 57803      61746F72 
 57803      3100
 57804              	.LASF1020:
 57805 50a7 5F466F72 		.string	"_ForwardIterator2"
 57805      77617264 
 57805      49746572 
 57805      61746F72 
 57805      3200
 57806              	.LASF172:
 57807 50b9 5F5A4E4B 		.string	"_ZNKSs8max_sizeEv"
 57807      5373386D 
 57807      61785F73 
 57807      697A6545 
 57807      7600
 57808              	.LASF228:
 57809 50cb 5F5A4E53 		.string	"_ZNSs5eraseEmm"
 57809      73356572 
 57809      61736545 
 57809      6D6D00
 57810              	.LASF534:
 57811 50da 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE37_S_propagate_on_container_swap_helperEz"
 57811      74313661 
 57811      6C6C6F63 
 57811      61746F72 
 57811      5F747261 
 57812              	.LASF871:
 57813 5122 5F547570 		.string	"_Tuple_impl<std::default_delete<heatmap_stamp_t>, void>"
GAS LISTING /tmp/ccmMnd7l.s 			page 1468


 57813      6C655F69 
 57813      6D706C3C 
 57813      7374643A 
 57813      3A646566 
 57814              	.LASF731:
 57815 515a 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj"
 57815      74367665 
 57815      63746F72 
 57815      496A5361 
 57815      496A4545 
 57816              	.LASF364:
 57817 5183 5F535F69 		.string	"_S_ios_seekdir_end"
 57817      6F735F73 
 57817      65656B64 
 57817      69725F65 
 57817      6E6400
 57818              	.LASF783:
 57819 5196 5F5F6361 		.string	"__call<int, 0ul>"
 57819      6C6C3C69 
 57819      6E742C20 
 57819      30756C3E 
 57819      00
 57820              	.LASF313:
 57821 51a7 73747269 		.string	"string"
 57821      6E6700
 57822              	.LASF712:
 57823 51ae 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4dataEv"
 57823      53743676 
 57823      6563746F 
 57823      72496A53 
 57823      61496A45 
 57824              	.LASF1636:
 57825 51cb 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E"
 57825      5F5F676E 
 57825      755F6378 
 57825      7832355F 
 57825      5F6E756D 
 57826              	.LASF163:
 57827 520a 5F5A4E4B 		.string	"_ZNKSs4cendEv"
 57827      53733463 
 57827      656E6445 
 57827      7600
 57828              	.LASF1376:
 57829 5218 77637363 		.string	"wcschr"
 57829      687200
 57830              	.LASF1110:
 57831 521f 7E6E6577 		.string	"~new_allocator"
 57831      5F616C6C 
 57831      6F636174 
 57831      6F7200
 57832              	.LASF1408:
 57833 522e 696E7470 		.string	"intptr_t"
 57833      74725F74 
 57833      00
 57834              	.LASF1669:
 57835 5237 6465636C 		.string	"decltype(nullptr)"
 57835      74797065 
GAS LISTING /tmp/ccmMnd7l.s 			page 1469


 57835      286E756C 
 57835      6C707472 
 57835      2900
 57836              	.LASF897:
 57837 5249 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEptEv"
 57837      53743130 
 57837      756E6971 
 57837      75655F70 
 57837      74724939 
 57838              	.LASF588:
 57839 5283 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4sizeEv"
 57839      53743676 
 57839      6563746F 
 57839      72496453 
 57839      61496445 
 57840              	.LASF1399:
 57841 52a0 75696E74 		.string	"uint_least64_t"
 57841      5F6C6561 
 57841      73743634 
 57841      5F7400
 57842              	.LASF802:
 57843 52af 5F456C65 		.string	"_Elements"
 57843      6D656E74 
 57843      7300
 57844              	.LASF1430:
 57845 52b9 6E5F7365 		.string	"n_sep_by_space"
 57845      705F6279 
 57845      5F737061 
 57845      636500
 57846              	.LASF360:
 57847 52c8 5F496F73 		.string	"_Ios_Seekdir"
 57847      5F536565 
 57847      6B646972 
 57847      00
 57848              	.LASF312:
 57849 52d5 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 57849      53743136 
 57849      696E6974 
 57849      69616C69 
 57849      7A65725F 
 57850              	.LASF835:
 57851 52f9 5F506F69 		.string	"_Pointer"
 57851      6E746572 
 57851      00
 57852              	.LASF673:
 57853 5302 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm"
 57853      7431325F 
 57853      56656374 
 57853      6F725F62 
 57853      61736549 
 57854              	.LASF1104:
 57855 532d 5F5F6974 		.string	"__iter_comp_val"
 57855      65725F63 
 57855      6F6D705F 
 57855      76616C00 
 57856              	.LASF1665:
 57857 533d 5F5A4E53 		.string	"_ZNSs12_S_empty_repEv"
GAS LISTING /tmp/ccmMnd7l.s 			page 1470


 57857      7331325F 
 57857      535F656D 
 57857      7074795F 
 57857      72657045 
 57858              	.LASF1416:
 57859 5353 74686F75 		.string	"thousands_sep"
 57859      73616E64 
 57859      735F7365 
 57859      7000
 57860              	.LASF1232:
 57861 5361 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_nothrow_swapEv"
 57861      5F5F676E 
 57861      755F6378 
 57861      7831345F 
 57861      5F616C6C 
 57862              	.LASF831:
 57863 5399 7475706C 		.string	"tuple<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 57863      653C7374 
 57863      643A3A6D 
 57863      65727365 
 57863      6E6E655F 
 57864              	.LASF189:
 57865 544e 5F5A4E4B 		.string	"_ZNKSs2atEm"
 57865      53733261 
 57865      74456D00 
 57866              	.LASF1267:
 57867 545a 46494C45 		.string	"FILE"
 57867      00
 57868              	.LASF1049:
 57869 545f 5F5F706F 		.string	"__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops:
 57869      705F6865 
 57869      61703C5F 
 57869      5F676E75 
 57869      5F637878 
 57870              	.LASF254:
 57871 54ca 5F535F63 		.string	"_S_construct"
 57871      6F6E7374 
 57871      72756374 
 57871      00
 57872              	.LASF1328:
 57873 54d7 70757477 		.string	"putwc"
 57873      6300
 57874              	.LASF206:
 57875 54dd 5F5A4E53 		.string	"_ZNSs6appendEPKc"
 57875      73366170 
 57875      70656E64 
 57875      45504B63 
 57875      00
 57876              	.LASF1108:
 57877 54ee 636F6E73 		.string	"const_pointer"
 57877      745F706F 
 57877      696E7465 
 57877      7200
 57878              	.LASF940:
 57879 54fc 5F4D753C 		.string	"_Mu<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u
 57879      7374643A 
 57879      3A6D6572 
GAS LISTING /tmp/ccmMnd7l.s 			page 1471


 57879      73656E6E 
 57879      655F7477 
 57880              	.LASF1560:
 57881 55b6 5F5F636F 		.string	"__comp"
 57881      6D7000
 57882              	.LASF1228:
 57883 55bd 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE27_S_propagate_on_move_assignEv"
 57883      5F5F676E 
 57883      755F6378 
 57883      7831345F 
 57883      5F616C6C 
 57884              	.LASF192:
 57885 5601 5F5A4E53 		.string	"_ZNSs5frontEv"
 57885      73356672 
 57885      6F6E7445 
 57885      7600
 57886              	.LASF609:
 57887 560f 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE9push_backEOd"
 57887      74367665 
 57887      63746F72 
 57887      49645361 
 57887      49644545 
 57888              	.LASF798:
 57889 5631 5F547570 		.string	"_Tuple_impl"
 57889      6C655F69 
 57889      6D706C00 
 57890              	.LASF338:
 57891 563d 5F535F73 		.string	"_S_skipws"
 57891      6B697077 
 57891      7300
 57892              	.LASF939:
 57893 5647 5F5F6164 		.string	"__add_lvalue_reference_helper<heatmap_t, true>"
 57893      645F6C76 
 57893      616C7565 
 57893      5F726566 
 57893      6572656E 
 57894              	.LASF1200:
 57895 5676 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEpLEl"
 57895      5F5F676E 
 57895      755F6378 
 57895      7831375F 
 57895      5F6E6F72 
 57896              	.LASF245:
 57897 56b0 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_"
 57897      73377265 
 57897      706C6163 
 57897      65454E39 
 57897      5F5F676E 
 57898              	.LASF644:
 57899 56ed 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE4sizeEv"
 57899      53743136 
 57899      696E6974 
 57899      69616C69 
 57899      7A65725F 
 57900              	.LASF472:
 57901 5710 5F5A4E53 		.string	"_ZNSt13random_device3maxEv"
 57901      74313372 
GAS LISTING /tmp/ccmMnd7l.s 			page 1472


 57901      616E646F 
 57901      6D5F6465 
 57901      76696365 
 57902              	.LASF1036:
 57903 572b 6D6F7665 		.string	"move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__n
 57903      5F626163 
 57903      6B776172 
 57903      643C5F5F 
 57903      676E755F 
 57904              	.LASF740:
 57905 57b4 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE5beginEv"
 57905      53743136 
 57905      696E6974 
 57905      69616C69 
 57905      7A65725F 
 57906              	.LASF704:
 57907 57d8 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE14_M_range_checkEm"
 57907      53743676 
 57907      6563746F 
 57907      72496A53 
 57907      61496A45 
 57908              	.LASF4:
 57909 5800 5F4D5F61 		.string	"_M_addref"
 57909      64647265 
 57909      6600
 57910              	.LASF577:
 57911 580a 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5beginEv"
 57911      53743676 
 57911      6563746F 
 57911      72496453 
 57911      61496445 
 57912              	.LASF1243:
 57913 5828 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmIEl"
 57913      5F5F676E 
 57913      755F6378 
 57913      7831375F 
 57913      5F6E6F72 
 57914              	.LASF275:
 57915 5862 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcmm"
 57915      53733133 
 57915      66696E64 
 57915      5F666972 
 57915      73745F6F 
 57916              	.LASF1263:
 57917 587e 6F706572 		.string	"operator!=<unsigned int*, std::vector<unsigned int> >"
 57917      61746F72 
 57917      213D3C75 
 57917      6E736967 
 57917      6E656420 
 57918              	.LASF701:
 57919 58b4 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE7reserveEm"
 57919      74367665 
 57919      63746F72 
 57919      496A5361 
 57919      496A4545 
 57920              	.LASF1632:
 57921 58d3 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE"
GAS LISTING /tmp/ccmMnd7l.s 			page 1473


 57921      5F5F676E 
 57921      755F6378 
 57921      7832345F 
 57921      5F6E756D 
 57922              	.LASF277:
 57923 5905 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEcm"
 57923      53733133 
 57923      66696E64 
 57923      5F666972 
 57923      73745F6F 
 57924              	.LASF1041:
 57925 591e 5F5F756E 		.string	"__uninitialized_default_n_a<unsigned int*, long unsigned int, unsigned int>"
 57925      696E6974 
 57925      69616C69 
 57925      7A65645F 
 57925      64656661 
 57926              	.LASF1546:
 57927 596a 5F5F6865 		.string	"__head"
 57927      616400
 57928              	.LASF1392:
 57929 5971 696E745F 		.string	"int_least8_t"
 57929      6C656173 
 57929      74385F74 
 57929      00
 57930              	.LASF528:
 57931 597e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE19_S_size_type_helperEz"
 57931      74313661 
 57931      6C6C6F63 
 57931      61746F72 
 57931      5F747261 
 57932              	.LASF842:
 57933 59b4 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSEDn"
 57933      74313075 
 57933      6E697175 
 57933      655F7074 
 57933      72493135 
 57934              	.LASF600:
 57935 59f5 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE2atEm"
 57935      74367665 
 57935      63746F72 
 57935      49645361 
 57935      49644545 
 57936              	.LASF1469:
 57937 5a0f 73747274 		.string	"strtod"
 57937      6F6400
 57938              	.LASF1479:
 57939 5a16 73747274 		.string	"strtof"
 57939      6F6600
 57940              	.LASF371:
 57941 5a1d 5F5A4E53 		.string	"_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_"
 57941      7438696F 
 57941      735F6261 
 57941      73653473 
 57941      65746645 
 57942              	.LASF36:
 57943 5a46 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 57943      74313163 
GAS LISTING /tmp/ccmMnd7l.s 			page 1474


 57943      6861725F 
 57943      74726169 
 57943      74734963 
 57944              	.LASF1064:
 57945 5a6c 5F5F6164 		.string	"__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, doub
 57945      6A757374 
 57945      5F686561 
 57945      703C5F5F 
 57945      676E755F 
 57946              	.LASF1577:
 57947 5aec 5F446973 		.string	"_DistanceType"
 57947      74616E63 
 57947      65547970 
 57947      6500
 57948              	.LASF1149:
 57949 5afa 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi"
 57949      5F5F676E 
 57949      755F6378 
 57949      7831375F 
 57949      5F6E6F72 
 57950              	.LASF26:
 57951 5b26 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEcvbEv"
 57951      53743137 
 57951      696E7465 
 57951      6772616C 
 57951      5F636F6E 
 57952              	.LASF1406:
 57953 5b4c 75696E74 		.string	"uint_fast32_t"
 57953      5F666173 
 57953      7433325F 
 57953      7400
 57954              	.LASF1148:
 57955 5b5a 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv"
 57955      5F5F676E 
 57955      755F6378 
 57955      7831375F 
 57955      5F6E6F72 
 57956              	.LASF2:
 57957 5b86 5F5F6578 		.string	"__exception_ptr"
 57957      63657074 
 57957      696F6E5F 
 57957      70747200 
 57958              	.LASF1368:
 57959 5b96 77637378 		.string	"wcsxfrm"
 57959      66726D00 
 57960              	.LASF104:
 57961 5b9e 5F4D5F64 		.string	"_M_data"
 57961      61746100 
 57962              	.LASF993:
 57963 5ba6 5F5F6765 		.string	"__get_helper<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 57963      745F6865 
 57963      6C706572 
 57963      3C30756C 
 57963      2C206865 
 57964              	.LASF207:
 57965 5be5 5F5A4E53 		.string	"_ZNSs6appendEmc"
 57965      73366170 
GAS LISTING /tmp/ccmMnd7l.s 			page 1475


 57965      70656E64 
 57965      456D6300 
 57966              	.LASF803:
 57967 5bf5 5F486561 		.string	"_Head_base<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul,
 57967      645F6261 
 57967      73653C30 
 57967      756C2C20 
 57967      7374643A 
 57968              	.LASF1277:
 57969 5cb4 5F494F5F 		.string	"_IO_buf_end"
 57969      6275665F 
 57969      656E6400 
 57970              	.LASF354:
 57971 5cc0 5F496F73 		.string	"_Ios_Iostate"
 57971      5F496F73 
 57971      74617465 
 57971      00
 57972              	.LASF1086:
 57973 5ccd 73686F72 		.string	"short unsigned int"
 57973      7420756E 
 57973      7369676E 
 57973      65642069 
 57973      6E7400
 57974              	.LASF928:
 57975 5ce0 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_tailERKS4_"
 57975      7431315F 
 57975      5475706C 
 57975      655F696D 
 57975      706C494C 
 57976              	.LASF199:
 57977 5d2b 5F5A4E53 		.string	"_ZNSspLEPKc"
 57977      73704C45 
 57977      504B6300 
 57978              	.LASF1432:
 57979 5d37 6E5F7369 		.string	"n_sign_posn"
 57979      676E5F70 
 57979      6F736E00 
 57980              	.LASF1381:
 57981 5d43 77637374 		.string	"wcstold"
 57981      6F6C6400 
 57982              	.LASF1393:
 57983 5d4b 696E745F 		.string	"int_least16_t"
 57983      6C656173 
 57983      7431365F 
 57983      7400
 57984              	.LASF1439:
 57985 5d59 7365746C 		.string	"setlocale"
 57985      6F63616C 
 57985      6500
 57986              	.LASF972:
 57987 5d63 5F5F636F 		.string	"__copy_move_backward<true, true, std::random_access_iterator_tag>"
 57987      70795F6D 
 57987      6F76655F 
 57987      6261636B 
 57987      77617264 
 57988              	.LASF1014:
 57989 5da5 5F5F756E 		.string	"__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, _
GAS LISTING /tmp/ccmMnd7l.s 			page 1476


 57989      67756172 
 57989      6465645F 
 57989      696E7365 
 57989      7274696F 
 57990              	.LASF287:
 57991 5e20 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEcm"
 57991      53733137 
 57991      66696E64 
 57991      5F666972 
 57991      73745F6E 
 57992              	.LASF649:
 57993 5e3d 5F5F7074 		.string	"__ptrtr_not_void<unsigned int, unsigned int>"
 57993      7274725F 
 57993      6E6F745F 
 57993      766F6964 
 57993      3C756E73 
 57994              	.LASF1225:
 57995 5e6a 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE17_S_select_on_copyERKS1_"
 57995      5F5F676E 
 57995      755F6378 
 57995      7831345F 
 57995      5F616C6C 
 57996              	.LASF596:
 57997 5ea8 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEixEm"
 57997      74367665 
 57997      63746F72 
 57997      49645361 
 57997      49644545 
 57998              	.LASF466:
 57999 5ec1 5F55496E 		.string	"_UIntType"
 57999      74547970 
 57999      6500
 58000              	.LASF581:
 58001 5ecb 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE6rbeginEv"
 58001      53743676 
 58001      6563746F 
 58001      72496453 
 58001      61496445 
 58002              	.LASF1361:
 58003 5eea 77637372 		.string	"wcsrtombs"
 58003      746F6D62 
 58003      7300
 58004              	.LASF846:
 58005 5ef4 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEptEv"
 58005      53743130 
 58005      756E6971 
 58005      75655F70 
 58005      74724931 
 58006              	.LASF1475:
 58007 5f35 6C6C6469 		.string	"lldiv"
 58007      7600
 58008              	.LASF3:
 58009 5f3b 65786365 		.string	"exception_ptr"
 58009      7074696F 
 58009      6E5F7074 
 58009      7200
 58010              	.LASF1481:
GAS LISTING /tmp/ccmMnd7l.s 			page 1477


 58011 5f49 395F475F 		.string	"9_G_fpos_t"
 58011      66706F73 
 58011      5F7400
 58012              	.LASF467:
 58013 5f54 72616E64 		.string	"random_device"
 58013      6F6D5F64 
 58013      65766963 
 58013      6500
 58014              	.LASF382:
 58015 5f62 736B6970 		.string	"skipws"
 58015      777300
 58016              	.LASF452:
 58017 5f69 696E6974 		.string	"initialization_multiplier"
 58017      69616C69 
 58017      7A617469 
 58017      6F6E5F6D 
 58017      756C7469 
 58018              	.LASF267:
 58019 5f83 5F5A4E4B 		.string	"_ZNKSs4findEcm"
 58019      53733466 
 58019      696E6445 
 58019      636D00
 58020              	.LASF1344:
 58021 5f92 77637363 		.string	"wcscspn"
 58021      73706E00 
 58022              	.LASF586:
 58023 5f9a 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE7crbeginEv"
 58023      53743676 
 58023      6563746F 
 58023      72496453 
 58023      61496445 
 58024              	.LASF383:
 58025 5fba 756E6974 		.string	"unitbuf"
 58025      62756600 
 58026              	.LASF1272:
 58027 5fc2 5F494F5F 		.string	"_IO_read_base"
 58027      72656164 
 58027      5F626173 
 58027      6500
 58028              	.LASF1030:
 58029 5fd0 5F5F636F 		.string	"__copy_move_backward_a<true, double*, double*>"
 58029      70795F6D 
 58029      6F76655F 
 58029      6261636B 
 58029      77617264 
 58030              	.LASF459:
 58031 5fff 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 58031      7432336D 
 58031      65727365 
 58031      6E6E655F 
 58031      74776973 
 58032              	.LASF381:
 58033 6091 73686F77 		.string	"showpos"
 58033      706F7300 
 58034              	.LASF565:
 58035 6099 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm"
 58035      7431325F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1478


 58035      56656374 
 58035      6F725F62 
 58035      61736549 
 58036              	.LASF830:
 58037 60c8 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 58037      74357475 
 58037      706C6549 
 58037      49537432 
 58037      336D6572 
 58038              	.LASF1220:
 58039 616a 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE7addressERKj"
 58039      395F5F67 
 58039      6E755F63 
 58039      78783133 
 58039      6E65775F 
 58040              	.LASF469:
 58041 6197 5F4D5F6D 		.string	"_M_mt"
 58041      7400
 58042              	.LASF1247:
 58043 619d 5F4C6F63 		.string	"_Lock_policy"
 58043      6B5F706F 
 58043      6C696379 
 58043      00
 58044              	.LASF611:
 58045 61aa 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EERS4_"
 58045      74367665 
 58045      63746F72 
 58045      49645361 
 58045      49644545 
 58046              	.LASF220:
 58047 61f2 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE"
 58047      7336696E 
 58047      73657274 
 58047      454E395F 
 58047      5F676E75 
 58048              	.LASF1631:
 58049 623c 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb1EE5valueE"
 58049      74313769 
 58049      6E746567 
 58049      72616C5F 
 58049      636F6E73 
 58050              	.LASF745:
 58051 6263 69746572 		.string	"iterator_traits<double const*>"
 58051      61746F72 
 58051      5F747261 
 58051      6974733C 
 58051      646F7562 
 58052              	.LASF1321:
 58053 6282 66777363 		.string	"fwscanf"
 58053      616E6600 
 58054              	.LASF1040:
 58055 628a 5F5F756E 		.string	"__uninitialized_default_n<unsigned int*, long unsigned int>"
 58055      696E6974 
 58055      69616C69 
 58055      7A65645F 
 58055      64656661 
 58056              	.LASF1306:
GAS LISTING /tmp/ccmMnd7l.s 			page 1479


 58057 62c6 5F5F7763 		.string	"__wch"
 58057      6800
 58058              	.LASF1010:
 58059 62cc 6D6F7665 		.string	"move<double&>"
 58059      3C646F75 
 58059      626C6526 
 58059      3E00
 58060              	.LASF949:
 58061 62da 5F5F6164 		.string	"__add_ref<heatmap_stamp_t*>"
 58061      645F7265 
 58061      663C6865 
 58061      61746D61 
 58061      705F7374 
 58062              	.LASF631:
 58063 62f6 5F4D5F63 		.string	"_M_check_len"
 58063      6865636B 
 58063      5F6C656E 
 58063      00
 58064              	.LASF1142:
 58065 6303 62617365 		.string	"base"
 58065      00
 58066              	.LASF829:
 58067 6308 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 58067      74357475 
 58067      706C6549 
 58067      49537432 
 58067      336D6572 
 58068              	.LASF215:
 58069 63a7 5F5A4E53 		.string	"_ZNSs6assignEPKc"
 58069      73366173 
 58069      7369676E 
 58069      45504B63 
 58069      00
 58070              	.LASF1252:
 58071 63b8 5F5F656E 		.string	"__enable_if<true, double*>"
 58071      61626C65 
 58071      5F69663C 
 58071      74727565 
 58071      2C20646F 
 58072              	.LASF1229:
 58073 63d3 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE20_S_propagate_on_swapEv"
 58073      5F5F676E 
 58073      755F6378 
 58073      7831345F 
 58073      5F616C6C 
 58074              	.LASF233:
 58075 6410 7265706C 		.string	"replace"
 58075      61636500 
 58076              	.LASF1431:
 58077 6418 705F7369 		.string	"p_sign_posn"
 58077      676E5F70 
 58077      6F736E00 
 58078              	.LASF936:
 58079 6424 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEE4swapERS4_"
 58079      74357475 
 58079      706C6549 
 58079      49503968 
GAS LISTING /tmp/ccmMnd7l.s 			page 1480


 58079      6561746D 
 58080              	.LASF264:
 58081 6460 5F5A4E4B 		.string	"_ZNKSs4findEPKcmm"
 58081      53733466 
 58081      696E6445 
 58081      504B636D 
 58081      6D00
 58082              	.LASF195:
 58083 6472 5F5A4E53 		.string	"_ZNSs4backEv"
 58083      73346261 
 58083      636B4576 
 58083      00
 58084              	.LASF1298:
 58085 647f 5F5F4649 		.string	"__FILE"
 58085      4C4500
 58086              	.LASF34:
 58087 6486 636F6D70 		.string	"compare"
 58087      61726500 
 58088              	.LASF646:
 58089 648e 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE3endEv"
 58089      53743136 
 58089      696E6974 
 58089      69616C69 
 58089      7A65725F 
 58090              	.LASF610:
 58091 64b0 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8pop_backEv"
 58091      74367665 
 58091      63746F72 
 58091      49645361 
 58091      49644545 
 58092              	.LASF879:
 58093 64d0 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_tailERS4_"
 58093      7431315F 
 58093      5475706C 
 58093      655F696D 
 58093      706C494C 
 58094              	.LASF1343:
 58095 6521 77637363 		.string	"wcscpy"
 58095      707900
 58096              	.LASF1309:
 58097 6528 5F5F7661 		.string	"__value"
 58097      6C756500 
 58098              	.LASF1042:
 58099 6530 62696E64 		.string	"bind<std::uniform_int_distribution<>&, std::mersenne_twister_engine<long unsigned int, 32
 58099      3C737464 
 58099      3A3A756E 
 58099      69666F72 
 58099      6D5F696E 
 58100              	.LASF718:
 58101 6600 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EESt16initializer_listIj
 58101      74367665 
 58101      63746F72 
 58101      496A5361 
 58101      496A4545 
 58102              	.LASF1082:
 58103 665b 5F5A5374 		.string	"_ZSt16__throw_bad_castv"
 58103      31365F5F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1481


 58103      7468726F 
 58103      775F6261 
 58103      645F6361 
 58104              	.LASF1487:
 58105 6673 5F736275 		.string	"_sbuf"
 58105      6600
 58106              	.LASF567:
 58107 6679 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm"
 58107      7431325F 
 58107      56656374 
 58107      6F725F62 
 58107      61736549 
 58108              	.LASF1129:
 58109 66aa 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv"
 58109      5F5F676E 
 58109      755F6378 
 58109      7831375F 
 58109      5F6E6F72 
 58110              	.LASF64:
 58111 66d5 5F4D5F65 		.string	"_M_exception_object"
 58111      78636570 
 58111      74696F6E 
 58111      5F6F626A 
 58111      65637400 
 58112              	.LASF1369:
 58113 66e9 7763746F 		.string	"wctob"
 58113      6200
 58114              	.LASF358:
 58115 66ef 5F535F66 		.string	"_S_failbit"
 58115      61696C62 
 58115      697400
 58116              	.LASF1023:
 58117 66fa 6765743C 		.string	"get<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748
 58117      30756C2C 
 58117      20737464 
 58117      3A3A6D65 
 58117      7273656E 
 58118              	.LASF560:
 58119 67ac 5F566563 		.string	"_Vector_base"
 58119      746F725F 
 58119      62617365 
 58119      00
 58120              	.LASF1649:
 58121 67b9 5F5A646C 		.string	"_ZdlPv"
 58121      507600
 58122              	.LASF606:
 58123 67c0 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4dataEv"
 58123      74367665 
 58123      63746F72 
 58123      49645361 
 58123      49644545 
 58124              	.LASF1651:
 58125 67dc 5F5F6275 		.string	"__builtin_unwind_resume"
 58125      696C7469 
 58125      6E5F756E 
 58125      77696E64 
 58125      5F726573 
GAS LISTING /tmp/ccmMnd7l.s 			page 1482


 58126              	.LASF387:
 58127 67f4 666C6F61 		.string	"floatfield"
 58127      74666965 
 58127      6C6400
 58128              	.LASF958:
 58129 67ff 72656D6F 		.string	"remove_reference<double&>"
 58129      76655F72 
 58129      65666572 
 58129      656E6365 
 58129      3C646F75 
 58130              	.LASF1244:
 58131 6819 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmiEl"
 58131      395F5F67 
 58131      6E755F63 
 58131      78783137 
 58131      5F5F6E6F 
 58132              	.LASF426:
 58133 6854 5F5F756E 		.string	"__uninit_default_n<unsigned int*, long unsigned int>"
 58133      696E6974 
 58133      5F646566 
 58133      61756C74 
 58133      5F6E3C75 
 58134              	.LASF1:
 58135 6889 666C6F61 		.string	"float"
 58135      7400
 58136              	.LASF1233:
 58137 688f 5F5F6E6F 		.string	"__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> >
 58137      726D616C 
 58137      5F697465 
 58137      7261746F 
 58137      723C756E 
 58138              	.LASF1308:
 58139 68eb 5F5F636F 		.string	"__count"
 58139      756E7400 
 58140              	.LASF1085:
 58141 68f3 756E7369 		.string	"unsigned char"
 58141      676E6564 
 58141      20636861 
 58141      7200
 58142              	.LASF853:
 58143 6901 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE7releaseEv"
 58143      74313075 
 58143      6E697175 
 58143      655F7074 
 58143      72493135 
 58144              	.LASF777:
 58145 6947 5F46756E 		.string	"_Func"
 58145      6300
 58146              	.LASF1507:
 58147 694d 70657272 		.string	"perror"
 58147      6F7200
 58148              	.LASF1038:
 58149 6954 5F5F6E69 		.string	"__niter_base<unsigned int*>"
 58149      7465725F 
 58149      62617365 
 58149      3C756E73 
 58149      69676E65 
GAS LISTING /tmp/ccmMnd7l.s 			page 1483


 58150              	.LASF510:
 58151 6970 6D616B65 		.string	"make_unsigned<long int>"
 58151      5F756E73 
 58151      69676E65 
 58151      643C6C6F 
 58151      6E672069 
 58152              	.LASF987:
 58153 6988 666F7277 		.string	"forward<std::default_delete<heatmap_stamp_t> >"
 58153      6172643C 
 58153      7374643A 
 58153      3A646566 
 58153      61756C74 
 58154              	.LASF1377:
 58155 69b7 77637370 		.string	"wcspbrk"
 58155      62726B00 
 58156              	.LASF219:
 58157 69bf 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEmc"
 58157      7336696E 
 58157      73657274 
 58157      454E395F 
 58157      5F676E75 
 58158              	.LASF240:
 58159 69f4 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcm"
 58159      73377265 
 58159      706C6163 
 58159      65454E39 
 58159      5F5F676E 
 58160              	.LASF782:
 58161 6a2f 5F42696E 		.string	"_Bind<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 58161      643C7374 
 58161      643A3A6D 
 58161      65727365 
 58161      6E6E655F 
 58162              	.LASF1569:
 58163 6ade 5F5F6173 		.string	"__assignable"
 58163      7369676E 
 58163      61626C65 
 58163      00
 58164              	.LASF728:
 58165 6aeb 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE17_M_default_appendEm"
 58165      74367665 
 58165      63746F72 
 58165      496A5361 
 58165      496A4545 
 58166              	.LASF1524:
 58167 6b15 54696D65 		.string	"Timer"
 58167      7200
 58168              	.LASF1216:
 58169 6b1b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmiEl"
 58169      395F5F67 
 58169      6E755F63 
 58169      78783137 
 58169      5F5F6E6F 
 58170              	.LASF1637:
 58171 6b57 5F5A4E53 		.string	"_ZNSt17integral_constantIiLi0EE5valueE"
 58171      74313769 
 58171      6E746567 
GAS LISTING /tmp/ccmMnd7l.s 			page 1484


 58171      72616C5F 
 58171      636F6E73 
 58172              	.LASF1434:
 58173 6b7e 696E745F 		.string	"int_p_sep_by_space"
 58173      705F7365 
 58173      705F6279 
 58173      5F737061 
 58173      636500
 58174              	.LASF1640:
 58175 6b91 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE"
 58175      5F5F676E 
 58175      755F6378 
 58175      7832345F 
 58175      5F6E756D 
 58176              	.LASF304:
 58177 6bc3 74797065 		.string	"type_info"
 58177      5F696E66 
 58177      6F00
 58178              	.LASF1504:
 58179 6bcd 67657463 		.string	"getc"
 58179      00
 58180              	.LASF856:
 58181 6bd2 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSERKS3_"
 58181      74313075 
 58181      6E697175 
 58181      655F7074 
 58181      72493135 
 58182              	.LASF1488:
 58183 6c16 5F706F73 		.string	"_pos"
 58183      00
 58184              	.LASF461:
 58185 6c1b 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 58185      7432336D 
 58185      65727365 
 58185      6E6E655F 
 58185      74776973 
 58186              	.LASF1492:
 58187 6cb1 66656F66 		.string	"feof"
 58187      00
 58188              	.LASF1509:
 58189 6cb6 72656E61 		.string	"rename"
 58189      6D6500
 58190              	.LASF361:
 58191 6cbd 5F535F62 		.string	"_S_beg"
 58191      656700
 58192              	.LASF1418:
 58193 6cc4 696E745F 		.string	"int_curr_symbol"
 58193      63757272 
 58193      5F73796D 
 58193      626F6C00 
 58194              	.LASF1326:
 58195 6cd4 6D627369 		.string	"mbsinit"
 58195      6E697400 
 58196              	.LASF1061:
 58197 6cdc 5F5F6D6F 		.string	"__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu
 58197      76655F6D 
 58197      65646961 
GAS LISTING /tmp/ccmMnd7l.s 			page 1485


 58197      6E5F746F 
 58197      5F666972 
 58198              	.LASF455:
 58199 6d53 6D657273 		.string	"mersenne_twister_engine"
 58199      656E6E65 
 58199      5F747769 
 58199      73746572 
 58199      5F656E67 
 58200              	.LASF1330:
 58201 6d6b 73777072 		.string	"swprintf"
 58201      696E7466 
 58201      00
 58202              	.LASF1660:
 58203 6d74 474E5520 		.string	"GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g -O3 -std=c++11 -fopenmp -fPIC"
 58203      432B2B20 
 58203      342E392E 
 58203      32202D6D 
 58203      74756E65 
 58204              	.LASF677:
 58205 6dc0 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSERKS1_"
 58205      74367665 
 58205      63746F72 
 58205      496A5361 
 58205      496A4545 
 58206              	.LASF1520:
 58207 6ddd 77637472 		.string	"wctrans"
 58207      616E7300 
 58208              	.LASF757:
 58209 6de5 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiE5resetEv"
 58209      74323475 
 58209      6E69666F 
 58209      726D5F69 
 58209      6E745F64 
 58210              	.LASF78:
 58211 6e10 5F535F74 		.string	"_S_terminal"
 58211      65726D69 
 58211      6E616C00 
 58212              	.LASF404:
 58213 6e1c 5F4D5F69 		.string	"_M_insert<long unsigned int>"
 58213      6E736572 
 58213      743C6C6F 
 58213      6E672075 
 58213      6E736967 
 58214              	.LASF276:
 58215 6e39 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcm"
 58215      53733133 
 58215      66696E64 
 58215      5F666972 
 58215      73745F6F 
 58216              	.LASF1373:
 58217 6e54 776D656D 		.string	"wmemset"
 58217      73657400 
 58218              	.LASF1345:
 58219 6e5c 77637366 		.string	"wcsftime"
 58219      74696D65 
 58219      00
 58220              	.LASF507:
GAS LISTING /tmp/ccmMnd7l.s 			page 1486


 58221 6e65 5F5F6D61 		.string	"__make_unsigned_selector<long int, true, false>"
 58221      6B655F75 
 58221      6E736967 
 58221      6E65645F 
 58221      73656C65 
 58222              	.LASF284:
 58223 6e95 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofERKSsm"
 58223      53733137 
 58223      66696E64 
 58223      5F666972 
 58223      73745F6E 
 58224              	.LASF1539:
 58225 6eb5 5F5F6774 		.string	"__gthread_active_ptr"
 58225      68726561 
 58225      645F6163 
 58225      74697665 
 58225      5F707472 
 58226              	.LASF386:
 58227 6eca 62617365 		.string	"basefield"
 58227      6669656C 
 58227      6400
 58228              	.LASF69:
 58229 6ed4 636F6E73 		.string	"const_iterator"
 58229      745F6974 
 58229      65726174 
 58229      6F7200
 58230              	.LASF1115:
 58231 6ee3 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm"
 58231      5F5F676E 
 58231      755F6378 
 58231      7831336E 
 58231      65775F61 
 58232              	.LASF101:
 58233 6f13 5F4D5F72 		.string	"_M_refcopy"
 58233      6566636F 
 58233      707900
 58234              	.LASF1045:
 58235 6f1e 5F47656E 		.string	"_Generator"
 58235      65726174 
 58235      6F7200
 58236              	.LASF1066:
 58237 6f29 70696563 		.string	"piecewise_construct"
 58237      65776973 
 58237      655F636F 
 58237      6E737472 
 58237      75637400 
 58238              	.LASF279:
 58239 6f3d 5F5A4E4B 		.string	"_ZNKSs12find_last_ofERKSsm"
 58239      53733132 
 58239      66696E64 
 58239      5F6C6173 
 58239      745F6F66 
 58240              	.LASF88:
 58241 6f58 5F5A4E53 		.string	"_ZNSs4_Rep15_M_set_sharableEv"
 58241      73345F52 
 58241      65703135 
 58241      5F4D5F73 
GAS LISTING /tmp/ccmMnd7l.s 			page 1487


 58241      65745F73 
 58242              	.LASF1570:
 58243 6f76 5F5F7369 		.string	"__simple"
 58243      6D706C65 
 58243      00
 58244              	.LASF608:
 58245 6f7f 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE9push_backERKd"
 58245      74367665 
 58245      63746F72 
 58245      49645361 
 58245      49644545 
 58246              	.LASF1490:
 58247 6fa2 636C6561 		.string	"clearerr"
 58247      72657272 
 58247      00
 58248              	.LASF1367:
 58249 6fab 77637374 		.string	"wcstoul"
 58249      6F756C00 
 58250              	.LASF621:
 58251 6fb3 5F4D5F64 		.string	"_M_default_initialize"
 58251      65666175 
 58251      6C745F69 
 58251      6E697469 
 58251      616C697A 
 58252              	.LASF995:
 58253 6fc9 6765743C 		.string	"get<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 58253      30756C2C 
 58253      20686561 
 58253      746D6170 
 58253      5F737461 
 58254              	.LASF1296:
 58255 700b 5F6D6F64 		.string	"_mode"
 58255      6500
 58256              	.LASF756:
 58257 7011 72657365 		.string	"reset"
 58257      7400
 58258              	.LASF149:
 58259 7017 62656769 		.string	"begin"
 58259      6E00
 58260              	.LASF1188:
 58261 701d 5F535F6E 		.string	"_S_nothrow_move"
 58261      6F746872 
 58261      6F775F6D 
 58261      6F766500 
 58262              	.LASF657:
 58263 702d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE25_S_difference_type_helperEz"
 58263      74313661 
 58263      6C6C6F63 
 58263      61746F72 
 58263      5F747261 
 58264              	.LASF511:
 58265 7069 74797065 		.string	"type"
 58265      00
 58266              	.LASF1341:
 58267 706e 77637363 		.string	"wcscmp"
 58267      6D7000
 58268              	.LASF1336:
GAS LISTING /tmp/ccmMnd7l.s 			page 1488


 58269 7075 76737773 		.string	"vswscanf"
 58269      63616E66 
 58269      00
 58270              	.LASF1442:
 58271 707e 5F5F6F66 		.string	"__off_t"
 58271      665F7400 
 58272              	.LASF122:
 58273 7086 5F4D5F64 		.string	"_M_disjunct"
 58273      69736A75 
 58273      6E637400 
 58274              	.LASF294:
 58275 7092 5F5A4E4B 		.string	"_ZNKSs6substrEmm"
 58275      53733673 
 58275      75627374 
 58275      72456D6D 
 58275      00
 58276              	.LASF767:
 58277 70a3 5F496E74 		.string	"_IntType"
 58277      54797065 
 58277      00
 58278              	.LASF1627:
 58279 70ac 5354414D 		.string	"STAMP_MAX"
 58279      505F4D41 
 58279      5800
 58280              	.LASF1352:
 58281 70b6 746D5F77 		.string	"tm_wday"
 58281      64617900 
 58282              	.LASF1322:
 58283 70be 67657477 		.string	"getwc"
 58283      6300
 58284              	.LASF1532:
 58285 70c4 68656174 		.string	"heatmap_t"
 58285      6D61705F 
 58285      7400
 58286              	.LASF1508:
 58287 70ce 72656D6F 		.string	"remove"
 58287      766500
 58288              	.LASF198:
 58289 70d5 5F5A4E53 		.string	"_ZNSspLERKSs"
 58289      73704C45 
 58289      524B5373 
 58289      00
 58290              	.LASF650:
 58291 70e2 706F696E 		.string	"pointer_traits<unsigned int*>"
 58291      7465725F 
 58291      74726169 
 58291      74733C75 
 58291      6E736967 
 58292              	.LASF202:
 58293 7100 61707065 		.string	"append"
 58293      6E6400
 58294              	.LASF1565:
 58295 7107 5F5F6172 		.string	"__arg"
 58295      6700
 58296              	.LASF145:
 58297 710d 5F5A4E53 		.string	"_ZNSsaSEPKc"
 58297      73615345 
GAS LISTING /tmp/ccmMnd7l.s 			page 1489


 58297      504B6300 
 58298              	.LASF709:
 58299 7119 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4backEv"
 58299      74367665 
 58299      63746F72 
 58299      496A5361 
 58299      496A4545 
 58300              	.LASF349:
 58301 7135 5F535F62 		.string	"_S_bin"
 58301      696E00
 58302              	.LASF1601:
 58303 713c 646F6E65 		.string	"done"
 58303      00
 58304              	.LASF1089:
 58305 7141 7369676E 		.string	"signed char"
 58305      65642063 
 58305      68617200 
 58306              	.LASF368:
 58307 714d 7E496E69 		.string	"~Init"
 58307      7400
 58308              	.LASF639:
 58309 7153 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 58309      74367665 
 58309      63746F72 
 58309      49645361 
 58309      49644545 
 58310              	.LASF234:
 58311 7199 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSs"
 58311      73377265 
 58311      706C6163 
 58311      65456D6D 
 58311      524B5373 
 58312              	.LASF248:
 58313 71ae 5F4D5F72 		.string	"_M_replace_aux"
 58313      65706C61 
 58313      63655F61 
 58313      757800
 58314              	.LASF1335:
 58315 71bd 76737770 		.string	"vswprintf"
 58315      72696E74 
 58315      6600
 58316              	.LASF1168:
 58317 71c7 6E65775F 		.string	"new_allocator<double>"
 58317      616C6C6F 
 58317      6361746F 
 58317      723C646F 
 58317      75626C65 
 58318              	.LASF590:
 58319 71dd 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6resizeEm"
 58319      74367665 
 58319      63746F72 
 58319      49645361 
 58319      49644545 
 58320              	.LASF882:
 58321 71fb 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSEOS4_"
 58321      7431315F 
 58321      5475706C 
GAS LISTING /tmp/ccmMnd7l.s 			page 1490


 58321      655F696D 
 58321      706C494C 
 58322              	.LASF367:
 58323 7246 496E6974 		.string	"Init"
 58323      00
 58324              	.LASF435:
 58325 724b 5F5F6D6F 		.string	"__mod<long unsigned int, 4294967296ul, 1ul, 0ul>"
 58325      643C6C6F 
 58325      6E672075 
 58325      6E736967 
 58325      6E656420 
 58326              	.LASF182:
 58327 727c 636C6561 		.string	"clear"
 58327      7200
 58328              	.LASF1210:
 58329 7282 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv"
 58329      5F5F676E 
 58329      755F6378 
 58329      7831375F 
 58329      5F6E6F72 
 58330              	.LASF300:
 58331 72bd 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKcm"
 58331      53733763 
 58331      6F6D7061 
 58331      7265456D 
 58331      6D504B63 
 58332              	.LASF259:
 58333 72d3 5F5A4E4B 		.string	"_ZNKSs5c_strEv"
 58333      53733563 
 58333      5F737472 
 58333      457600
 58334              	.LASF612:
 58335 72e2 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EEOd"
 58335      74367665 
 58335      63746F72 
 58335      49645361 
 58335      49644545 
 58336              	.LASF1175:
 58337 7328 5F535F73 		.string	"_S_select_on_copy"
 58337      656C6563 
 58337      745F6F6E 
 58337      5F636F70 
 58337      7900
 58338              	.LASF983:
 58339 733a 6F706572 		.string	"operator<< <std::char_traits<char> >"
 58339      61746F72 
 58339      3C3C203C 
 58339      7374643A 
 58339      3A636861 
 58340              	.LASF1438:
 58341 735f 696E745F 		.string	"int_n_sign_posn"
 58341      6E5F7369 
 58341      676E5F70 
 58341      6F736E00 
 58342              	.LASF686:
 58343 736f 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6rbeginEv"
 58343      74367665 
GAS LISTING /tmp/ccmMnd7l.s 			page 1491


 58343      63746F72 
 58343      496A5361 
 58343      496A4545 
 58344              	.LASF1571:
 58345 738d 5F5F746F 		.string	"__token"
 58345      6B656E00 
 58346              	.LASF719:
 58347 7395 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EEmRS4_"
 58347      74367665 
 58347      63746F72 
 58347      496A5361 
 58347      496A4545 
 58348              	.LASF1302:
 58349 73de 66705F6F 		.string	"fp_offset"
 58349      66667365 
 58349      7400
 58350              	.LASF668:
 58351 73e8 5F566563 		.string	"_Vector_base<unsigned int, std::allocator<unsigned int> >"
 58351      746F725F 
 58351      62617365 
 58351      3C756E73 
 58351      69676E65 
 58352              	.LASF630:
 58353 7422 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE16_M_shrink_to_fitEv"
 58353      74367665 
 58353      63746F72 
 58353      49645361 
 58353      49644545 
 58354              	.LASF896:
 58355 744b 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEdeEv"
 58355      53743130 
 58355      756E6971 
 58355      75655F70 
 58355      74724939 
 58356              	.LASF24:
 58357 7485 76616C75 		.string	"value"
 58357      6500
 58358              	.LASF1044:
 58359 748b 5F464974 		.string	"_FIter"
 58359      657200
 58360              	.LASF1486:
 58361 7492 5F6E6578 		.string	"_next"
 58361      7400
 58362              	.LASF72:
 58363 7498 5F526570 		.string	"_Rep_base"
 58363      5F626173 
 58363      6500
 58364              	.LASF1525:
 58365 74a2 7E54696D 		.string	"~Timer"
 58365      657200
 58366              	.LASF1161:
 58367 74a9 5F5F6D61 		.string	"__max_exponent10"
 58367      785F6578 
 58367      706F6E65 
 58367      6E743130 
 58367      00
 58368              	.LASF1476:
GAS LISTING /tmp/ccmMnd7l.s 			page 1492


 58369 74ba 61746F6C 		.string	"atoll"
 58369      6C00
 58370              	.LASF789:
 58371 74c0 5F4D6179 		.string	"_Maybe_get_result_type"
 58371      62655F67 
 58371      65745F72 
 58371      6573756C 
 58371      745F7479 
 58372              	.LASF1618:
 58373 74d7 5F5A4E31 		.string	"_ZN11RepeatTimerD2Ev"
 58373      31526570 
 58373      65617454 
 58373      696D6572 
 58373      44324576 
 58374              	.LASF151:
 58375 74ec 5F5A4E4B 		.string	"_ZNKSs5beginEv"
 58375      53733562 
 58375      6567696E 
 58375      457600
 58376              	.LASF52:
 58377 74fb 6E6F745F 		.string	"not_eof"
 58377      656F6600 
 58378              	.LASF1496:
 58379 7503 66676574 		.string	"fgetpos"
 58379      706F7300 
 58380              	.LASF1597:
 58381 750b 5F5F7565 		.string	"__uerange"
 58381      72616E67 
 58381      6500
 58382              	.LASF895:
 58383 7515 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSEDn"
 58383      74313075 
 58383      6E697175 
 58383      655F7074 
 58383      72493968 
 58384              	.LASF717:
 58385 754f 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EEOj"
 58385      74367665 
 58385      63746F72 
 58385      496A5361 
 58385      496A4545 
 58386              	.LASF335:
 58387 7595 5F535F73 		.string	"_S_showbase"
 58387      686F7762 
 58387      61736500 
 58388              	.LASF232:
 58389 75a1 5F5A4E53 		.string	"_ZNSs8pop_backEv"
 58389      7338706F 
 58389      705F6261 
 58389      636B4576 
 58389      00
 58390              	.LASF340:
 58391 75b2 5F535F75 		.string	"_S_uppercase"
 58391      70706572 
 58391      63617365 
 58391      00
 58392              	.LASF222:
GAS LISTING /tmp/ccmMnd7l.s 			page 1493


 58393 75bf 5F5A4E53 		.string	"_ZNSs6insertEmRKSsmm"
 58393      7336696E 
 58393      73657274 
 58393      456D524B 
 58393      53736D6D 
 58394              	.LASF1359:
 58395 75d4 7763736E 		.string	"wcsncmp"
 58395      636D7000 
 58396              	.LASF1120:
 58397 75dc 5F5F6973 		.string	"__is_signed"
 58397      5F736967 
 58397      6E656400 
 58398              	.LASF314:
 58399 75e8 616C6C6F 		.string	"allocator_arg_t"
 58399      6361746F 
 58399      725F6172 
 58399      675F7400 
 58400              	.LASF490:
 58401 75f8 72656269 		.string	"rebind<double>"
 58401      6E643C64 
 58401      6F75626C 
 58401      653E00
 58402              	.LASF1495:
 58403 7607 66676574 		.string	"fgetc"
 58403      6300
 58404              	.LASF99:
 58405 760d 5F4D5F64 		.string	"_M_destroy"
 58405      65737472 
 58405      6F7900
 58406              	.LASF117:
 58407 7618 5F5A4E4B 		.string	"_ZNKSs8_M_checkEmPKc"
 58407      5373385F 
 58407      4D5F6368 
 58407      65636B45 
 58407      6D504B63 
 58408              	.LASF1410:
 58409 762d 696E746D 		.string	"intmax_t"
 58409      61785F74 
 58409      00
 58410              	.LASF1497:
 58411 7636 66676574 		.string	"fgets"
 58411      7300
 58412              	.LASF1516:
 58413 763c 77637479 		.string	"wctype_t"
 58413      70655F74 
 58413      00
 58414              	.LASF1246:
 58415 7645 5F5F6E6F 		.string	"__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned 
 58415      726D616C 
 58415      5F697465 
 58415      7261746F 
 58415      723C756E 
 58416              	.LASF15:
 58417 76a7 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 58417      7431355F 
 58417      5F657863 
 58417      65707469 
GAS LISTING /tmp/ccmMnd7l.s 			page 1494


 58417      6F6E5F70 
 58418              	.LASF996:
 58419 76d7 666F7277 		.string	"forward<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483
 58419      6172643C 
 58419      7374643A 
 58419      3A6D6572 
 58419      73656E6E 
 58420              	.LASF1568:
 58421 7788 5F5F6172 		.string	"__args"
 58421      677300
 58422              	.LASF1638:
 58423 778f 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE"
 58423      5F5F676E 
 58423      755F6378 
 58423      7832345F 
 58423      5F6E756D 
 58424              	.LASF330:
 58425 77c4 5F535F69 		.string	"_S_internal"
 58425      6E746572 
 58425      6E616C00 
 58426              	.LASF976:
 58427 77d0 72647374 		.string	"rdstate"
 58427      61746500 
 58428              	.LASF1123:
 58429 77d8 5F5F6E6F 		.string	"__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<c
 58429      726D616C 
 58429      5F697465 
 58429      7261746F 
 58429      723C6368 
 58430              	.LASF1584:
 58431 783a 636F756E 		.string	"count"
 58431      7400
 58432              	.LASF555:
 58433 7840 5F4D5F69 		.string	"_M_impl"
 58433      6D706C00 
 58434              	.LASF321:
 58435 7848 5F5A4E53 		.string	"_ZNSt5tupleIIEE4swapERS0_"
 58435      74357475 
 58435      706C6549 
 58435      49454534 
 58435      73776170 
 58436              	.LASF293:
 58437 7862 73756273 		.string	"substr"
 58437      747200
 58438              	.LASF1596:
 58439 7869 5F5F7265 		.string	"__ret"
 58439      7400
 58440              	.LASF201:
 58441 786f 5F5A4E53 		.string	"_ZNSspLESt16initializer_listIcE"
 58441      73704C45 
 58441      53743136 
 58441      696E6974 
 58441      69616C69 
 58442              	.LASF579:
 58443 788f 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE3endEv"
 58443      53743676 
 58443      6563746F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1495


 58443      72496453 
 58443      61496445 
 58444              	.LASF1424:
 58445 78ab 6E656761 		.string	"negative_sign"
 58445      74697665 
 58445      5F736967 
 58445      6E00
 58446              	.LASF1630:
 58447 78b9 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb0EE5valueE"
 58447      74313769 
 58447      6E746567 
 58447      72616C5F 
 58447      636F6E73 
 58448              	.LASF150:
 58449 78e0 5F5A4E53 		.string	"_ZNSs5beginEv"
 58449      73356265 
 58449      67696E45 
 58449      7600
 58450              	.LASF173:
 58451 78ee 72657369 		.string	"resize"
 58451      7A6500
 58452              	.LASF1285:
 58453 78f5 5F6F6C64 		.string	"_old_offset"
 58453      5F6F6666 
 58453      73657400 
 58454              	.LASF1460:
 58455 7901 67657465 		.string	"getenv"
 58455      6E7600
 58456              	.LASF889:
 58457 7908 7475706C 		.string	"tuple<heatmap_stamp_t*&, std::default_delete<heatmap_stamp_t>, void>"
 58457      653C6865 
 58457      61746D61 
 58457      705F7374 
 58457      616D705F 
 58458              	.LASF1327:
 58459 794d 6D627372 		.string	"mbsrtowcs"
 58459      746F7763 
 58459      7300
 58460              	.LASF13:
 58461 7957 73776170 		.string	"swap"
 58461      00
 58462              	.LASF1053:
 58463 795c 5F5F696E 		.string	"__introsort_loop<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, _
 58463      74726F73 
 58463      6F72745F 
 58463      6C6F6F70 
 58463      3C5F5F67 
 58464              	.LASF130:
 58465 79d7 5F5A4E53 		.string	"_ZNSs9_M_assignEPcmc"
 58465      73395F4D 
 58465      5F617373 
 58465      69676E45 
 58465      50636D63 
 58466              	.LASF1484:
 58467 79ec 5F475F66 		.string	"_G_fpos_t"
 58467      706F735F 
 58467      7400
GAS LISTING /tmp/ccmMnd7l.s 			page 1496


 58468              	.LASF574:
 58469 79f6 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6assignEmRKd"
 58469      74367665 
 58469      63746F72 
 58469      49645361 
 58469      49644545 
 58470              	.LASF1360:
 58471 7a17 7763736E 		.string	"wcsncpy"
 58471      63707900 
 58472              	.LASF91:
 58473 7a1f 5F4D5F72 		.string	"_M_refdata"
 58473      65666461 
 58473      746100
 58474              	.LASF563:
 58475 7a2a 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm"
 58475      7431325F 
 58475      56656374 
 58475      6F725F62 
 58475      61736549 
 58476              	.LASF1655:
 58477 7a55 68656174 		.string	"heatmap_new"
 58477      6D61705F 
 58477      6E657700 
 58478              	.LASF985:
 58479 7a61 6F706572 		.string	"operator&="
 58479      61746F72 
 58479      263D00
 58480              	.LASF365:
 58481 7a6c 5F535F72 		.string	"_S_refcount"
 58481      6566636F 
 58481      756E7400 
 58482              	.LASF572:
 58483 7a78 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSEOS1_"
 58483      74367665 
 58483      63746F72 
 58483      49645361 
 58483      49644545 
 58484              	.LASF33:
 58485 7a94 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 58485      74313163 
 58485      6861725F 
 58485      74726169 
 58485      74734963 
 58486              	.LASF127:
 58487 7ab4 5F4D5F6D 		.string	"_M_move"
 58487      6F766500 
 58488              	.LASF28:
 58489 7abc 70696563 		.string	"piecewise_construct_t"
 58489      65776973 
 58489      655F636F 
 58489      6E737472 
 58489      7563745F 
 58490              	.LASF1266:
 58491 7ad2 5F5F676E 		.string	"__gnu_debug"
 58491      755F6465 
 58491      62756700 
 58492              	.LASF327:
GAS LISTING /tmp/ccmMnd7l.s 			page 1497


 58493 7ade 5F535F64 		.string	"_S_dec"
 58493      656300
 58494              	.LASF1174:
 58495 7ae5 5F5F616C 		.string	"__alloc_traits<std::allocator<double> >"
 58495      6C6F635F 
 58495      74726169 
 58495      74733C73 
 58495      74643A3A 
 58496              	.LASF315:
 58497 7b0d 5F5F7573 		.string	"__uses_alloc_base"
 58497      65735F61 
 58497      6C6C6F63 
 58497      5F626173 
 58497      6500
 58498              	.LASF758:
 58499 7b1f 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE1aEv"
 58499      53743234 
 58499      756E6966 
 58499      6F726D5F 
 58499      696E745F 
 58500              	.LASF960:
 58501 7b47 5F497465 		.string	"_Iter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<doubl
 58501      725F6261 
 58501      73653C5F 
 58501      5F676E75 
 58501      5F637878 
 58502              	.LASF129:
 58503 7baf 5F4D5F61 		.string	"_M_assign"
 58503      73736967 
 58503      6E00
 58504              	.LASF1579:
 58505 7bb9 5F5F6D69 		.string	"__middle"
 58505      64646C65 
 58505      00
 58506              	.LASF66:
 58507 7bc2 5F4D5F64 		.string	"_M_dataplus"
 58507      61746170 
 58507      6C757300 
 58508              	.LASF726:
 58509 7bce 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_fill_assignEmRKj"
 58509      74367665 
 58509      63746F72 
 58509      496A5361 
 58509      496A4545 
 58510              	.LASF1412:
 58511 7bf8 63686172 		.string	"char16_t"
 58511      31365F74 
 58511      00
 58512              	.LASF306:
 58513 7c01 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_tr
 58513      7273655F 
 58513      69746572 
 58513      61746F72 
 58513      3C5F5F67 
 58514              	.LASF849:
 58515 7c81 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE11get_deleterEv"
 58515      74313075 
GAS LISTING /tmp/ccmMnd7l.s 			page 1498


 58515      6E697175 
 58515      655F7074 
 58515      72493135 
 58516              	.LASF742:
 58517 7ccc 69746572 		.string	"iterator_traits<double*>"
 58517      61746F72 
 58517      5F747261 
 58517      6974733C 
 58517      646F7562 
 58518              	.LASF462:
 58519 7ce5 6F706572 		.string	"operator()"
 58519      61746F72 
 58519      282900
 58520              	.LASF194:
 58521 7cf0 6261636B 		.string	"back"
 58521      00
 58522              	.LASF1656:
 58523 7cf5 68656174 		.string	"heatmap_stamp_free"
 58523      6D61705F 
 58523      7374616D 
 58523      705F6672 
 58523      656500
 58524              	.LASF1078:
 58525 7d08 73747265 		.string	"streamsize"
 58525      616D7369 
 58525      7A6500
 58526              	.LASF196:
 58527 7d13 5F5A4E4B 		.string	"_ZNKSs4backEv"
 58527      53733462 
 58527      61636B45 
 58527      7600
 58528              	.LASF1189:
 58529 7d21 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_nothrow_moveEv"
 58529      5F5F676E 
 58529      755F6378 
 58529      7831345F 
 58529      5F616C6C 
 58530              	.LASF674:
 58531 7d59 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm"
 58531      7431325F 
 58531      56656374 
 58531      6F725F62 
 58531      61736549 
 58532              	.LASF1542:
 58533 7d88 5F5F666D 		.string	"__fmtfl"
 58533      74666C00 
 58534              	.LASF1134:
 58535 7d90 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixEl"
 58535      395F5F67 
 58535      6E755F63 
 58535      78783137 
 58535      5F5F6E6F 
 58536              	.LASF225:
 58537 7dbc 5F5A4E53 		.string	"_ZNSs6insertEmmc"
 58537      7336696E 
 58537      73657274 
 58537      456D6D63 
GAS LISTING /tmp/ccmMnd7l.s 			page 1499


 58537      00
 58538              	.LASF967:
 58539 7dcd 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_"
 58539      7431305F 
 58539      49746572 
 58539      5F626173 
 58539      65495064 
 58540              	.LASF1662:
 58541 7df3 2F686F6D 		.string	"/home/hshu1/15618/project/15618fp/heatmap"
 58541      652F6873 
 58541      6875312F 
 58541      31353631 
 58541      382F7072 
 58542              	.LASF1648:
 58543 7e1d 6F706572 		.string	"operator delete"
 58543      61746F72 
 58543      2064656C 
 58543      65746500 
 58544              	.LASF1454:
 58545 7e2d 61746578 		.string	"atexit"
 58545      697400
 58546              	.LASF1213:
 58547 7e34 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEpLEl"
 58547      5F5F676E 
 58547      755F6378 
 58547      7831375F 
 58547      5F6E6F72 
 58548              	.LASF489:
 58549 7e6f 706F696E 		.string	"pointer"
 58549      74657200 
 58550              	.LASF585:
 58551 7e77 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4cendEv"
 58551      53743676 
 58551      6563746F 
 58551      72496453 
 58551      61496445 
 58552              	.LASF816:
 58553 7e94 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 58553      7431315F 
 58553      5475706C 
 58553      655F696D 
 58553      706C494C 
 58554              	.LASF1230:
 58555 7f45 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_always_equalEv"
 58555      5F5F676E 
 58555      755F6378 
 58555      7831345F 
 58555      5F616C6C 
 58556              	.LASF1202:
 58557 7f7d 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmIEl"
 58557      5F5F676E 
 58557      755F6378 
 58557      7831375F 
 58557      5F6E6F72 
 58558              	.LASF1257:
 58559 7fb7 6F706572 		.string	"operator!=<double*, std::vector<double> >"
 58559      61746F72 
GAS LISTING /tmp/ccmMnd7l.s 			page 1500


 58559      213D3C64 
 58559      6F75626C 
 58559      652A2C20 
 58560              	.LASF920:
 58561 7fe1 5F486561 		.string	"_Head_base<0ul, heatmap_t*, false>"
 58561      645F6261 
 58561      73653C30 
 58561      756C2C20 
 58561      68656174 
 58562              	.LASF56:
 58563 8004 616C6C6F 		.string	"allocator<char>"
 58563      6361746F 
 58563      723C6368 
 58563      61723E00 
 58564              	.LASF1550:
 58565 8014 5F5F6C68 		.string	"__lhs"
 58565      7300
 58566              	.LASF914:
 58567 801a 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_tailERS3_"
 58567      7431315F 
 58567      5475706C 
 58567      655F696D 
 58567      706C494C 
 58568              	.LASF1201:
 58569 8060 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl"
 58569      395F5F67 
 58569      6E755F63 
 58569      78783137 
 58569      5F5F6E6F 
 58570              	.LASF1031:
 58571 809b 5F49734D 		.string	"_IsMove"
 58571      6F766500 
 58572              	.LASF1617:
 58573 80a3 5F5F7365 		.string	"__secondChild"
 58573      636F6E64 
 58573      4368696C 
 58573      6400
 58574              	.LASF529:
 58575 80b1 5F535F70 		.string	"_S_propagate_on_container_copy_assignment_helper"
 58575      726F7061 
 58575      67617465 
 58575      5F6F6E5F 
 58575      636F6E74 
 58576              	.LASF90:
 58577 80e2 5F5A4E53 		.string	"_ZNSs4_Rep26_M_set_length_and_sharableEm"
 58577      73345F52 
 58577      65703236 
 58577      5F4D5F73 
 58577      65745F6C 
 58578              	.LASF1574:
 58579 810b 5F5F746F 		.string	"__topIndex"
 58579      70496E64 
 58579      657800
 58580              	.LASF1261:
 58581 8116 6F706572 		.string	"operator< <double*, std::vector<double> >"
 58581      61746F72 
 58581      3C203C64 
GAS LISTING /tmp/ccmMnd7l.s 			page 1501


 58581      6F75626C 
 58581      652A2C20 
 58582              	.LASF479:
 58583 8140 5F4D5F69 		.string	"_M_init_pretr1"
 58583      6E69745F 
 58583      70726574 
 58583      723100
 58584              	.LASF626:
 58585 814f 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd"
 58585      74367665 
 58585      63746F72 
 58585      49645361 
 58585      49644545 
 58586              	.LASF61:
 58587 819f 7E616C6C 		.string	"~allocator"
 58587      6F636174 
 58587      6F7200
 58588              	.LASF1127:
 58589 81aa 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv"
 58589      395F5F67 
 58589      6E755F63 
 58589      78783137 
 58589      5F5F6E6F 
 58590              	.LASF1128:
 58591 81d6 6F706572 		.string	"operator++"
 58591      61746F72 
 58591      2B2B00
 58592              	.LASF564:
 58593 81e1 5F4D5F64 		.string	"_M_deallocate"
 58593      65616C6C 
 58593      6F636174 
 58593      6500
 58594              	.LASF635:
 58595 81ef 5F4D5F65 		.string	"_M_erase"
 58595      72617365 
 58595      00
 58596              	.LASF247:
 58597 81f8 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE"
 58597      73377265 
 58597      706C6163 
 58597      65454E39 
 58597      5F5F676E 
 58598              	.LASF413:
 58599 8246 63747970 		.string	"ctype<char>"
 58599      653C6368 
 58599      61723E00 
 58600              	.LASF1583:
 58601 8252 5F5F7074 		.string	"__ptr"
 58601      7200
 58602              	.LASF197:
 58603 8258 6F706572 		.string	"operator+="
 58603      61746F72 
 58603      2B3D00
 58604              	.LASF1483:
 58605 8263 5F5F7374 		.string	"__state"
 58605      61746500 
 58606              	.LASF1151:
GAS LISTING /tmp/ccmMnd7l.s 			page 1502


 58607 826b 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi"
 58607      5F5F676E 
 58607      755F6378 
 58607      7831375F 
 58607      5F6E6F72 
 58608              	.LASF1316:
 58609 8297 77636861 		.string	"wchar_t"
 58609      725F7400 
 58610              	.LASF1428:
 58611 829f 705F7365 		.string	"p_sep_by_space"
 58611      705F6279 
 58611      5F737061 
 58611      636500
 58612              	.LASF1150:
 58613 82ae 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv"
 58613      5F5F676E 
 58613      755F6378 
 58613      7831375F 
 58613      5F6E6F72 
 58614              	.LASF1644:
 58615 82da 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 58615      7432336D 
 58615      65727365 
 58615      6E6E655F 
 58615      74776973 
 58616              	.LASF303:
 58617 8373 5F416C6C 		.string	"_Alloc"
 58617      6F6300
 58618              	.LASF1186:
 58619 837a 5F535F61 		.string	"_S_always_equal"
 58619      6C776179 
 58619      735F6571 
 58619      75616C00 
 58620              	.LASF1334:
 58621 838a 76667773 		.string	"vfwscanf"
 58621      63616E66 
 58621      00
 58622              	.LASF899:
 58623 8393 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE11get_deleterEv"
 58623      74313075 
 58623      6E697175 
 58623      655F7074 
 58623      72493968 
 58624              	.LASF1223:
 58625 83d7 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv"
 58625      395F5F67 
 58625      6E755F63 
 58625      78783133 
 58625      6E65775F 
 58626              	.LASF1540:
 58627 8403 5F5F7265 		.string	"__result"
 58627      73756C74 
 58627      00
 58628              	.LASF537:
 58629 840c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8allocateERS0_mPKv"
 58629      74313661 
 58629      6C6C6F63 
GAS LISTING /tmp/ccmMnd7l.s 			page 1503


 58629      61746F72 
 58629      5F747261 
 58630              	.LASF1163:
 58631 843d 5F5F6E75 		.string	"__numeric_traits_floating<long double>"
 58631      6D657269 
 58631      635F7472 
 58631      61697473 
 58631      5F666C6F 
 58632              	.LASF1383:
 58633 8464 77637374 		.string	"wcstoull"
 58633      6F756C6C 
 58633      00
 58634              	.LASF1533:
 58635 846d 31356865 		.string	"15heatmap_stamp_t"
 58635      61746D61 
 58635      705F7374 
 58635      616D705F 
 58635      7400
 58636              	.LASF1354:
 58637 847f 746D5F69 		.string	"tm_isdst"
 58637      73647374 
 58637      00
 58638              	.LASF102:
 58639 8488 5F4D5F63 		.string	"_M_clone"
 58639      6C6F6E65 
 58639      00
 58640              	.LASF1427:
 58641 8491 705F6373 		.string	"p_cs_precedes"
 58641      5F707265 
 58641      63656465 
 58641      7300
 58642              	.LASF1673:
 58643 849f 5F556E77 		.string	"_Unwind_Resume"
 58643      696E645F 
 58643      52657375 
 58643      6D6500
 58644              	.LASF763:
 58645 84ae 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE3minEv"
 58645      53743234 
 58645      756E6966 
 58645      6F726D5F 
 58645      696E745F 
 58646              	.LASF546:
 58647 84d8 5F566563 		.string	"_Vector_base<double, std::allocator<double> >"
 58647      746F725F 
 58647      62617365 
 58647      3C646F75 
 58647      626C652C 
 58648              	.LASF1567:
 58649 8506 5F496E64 		.string	"_Indexes"
 58649      65786573 
 58649      00
 58650              	.LASF1131:
 58651 850f 6F706572 		.string	"operator--"
 58651      61746F72 
 58651      2D2D00
 58652              	.LASF1058:
GAS LISTING /tmp/ccmMnd7l.s 			page 1504


 58653 851a 736F7274 		.string	"sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 58653      3C5F5F67 
 58653      6E755F63 
 58653      78783A3A 
 58653      5F5F6E6F 
 58654              	.LASF991:
 58655 855d 666F7277 		.string	"forward<std::default_delete<heatmap_t> >"
 58655      6172643C 
 58655      7374643A 
 58655      3A646566 
 58655      61756C74 
 58656              	.LASF1191:
 58657 8586 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_nothrow_swapEv"
 58657      5F5F676E 
 58657      755F6378 
 58657      7831345F 
 58657      5F616C6C 
 58658              	.LASF729:
 58659 85be 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE16_M_shrink_to_fitEv"
 58659      74367665 
 58659      63746F72 
 58659      496A5361 
 58659      496A4545 
 58660              	.LASF1138:
 58661 85e7 6F706572 		.string	"operator-="
 58661      61746F72 
 58661      2D3D00
 58662              	.LASF845:
 58663 85f2 6F706572 		.string	"operator->"
 58663      61746F72 
 58663      2D3E00
 58664              	.LASF659:
 58665 85fd 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE48_S_propagate_on_container_copy_assignment_helperEz"
 58665      74313661 
 58665      6C6C6F63 
 58665      61746F72 
 58665      5F747261 
 58666              	.LASF103:
 58667 8650 5F5A4E53 		.string	"_ZNSs4_Rep8_M_cloneERKSaIcEm"
 58667      73345F52 
 58667      6570385F 
 58667      4D5F636C 
 58667      6F6E6545 
 58668              	.LASF1401:
 58669 866d 696E745F 		.string	"int_fast16_t"
 58669      66617374 
 58669      31365F74 
 58669      00
 58670              	.LASF488:
 58671 867a 616C6C6F 		.string	"allocator<double>"
 58671      6361746F 
 58671      723C646F 
 58671      75626C65 
 58671      3E00
 58672              	.LASF292:
 58673 868c 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEcm"
 58673      53733136 
GAS LISTING /tmp/ccmMnd7l.s 			page 1505


 58673      66696E64 
 58673      5F6C6173 
 58673      745F6E6F 
 58674              	.LASF1363:
 58675 86a8 77637374 		.string	"wcstod"
 58675      6F6400
 58676              	.LASF298:
 58677 86af 5F5A4E4B 		.string	"_ZNKSs7compareEPKc"
 58677      53733763 
 58677      6F6D7061 
 58677      72654550 
 58677      4B6300
 58678              	.LASF1029:
 58679 86c2 5F5F6E69 		.string	"__niter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 58679      7465725F 
 58679      62617365 
 58679      3C5F5F67 
 58679      6E755F63 
 58680              	.LASF1581:
 58681 870d 5F5F6375 		.string	"__cut"
 58681      7400
 58682              	.LASF1365:
 58683 8713 77637374 		.string	"wcstok"
 58683      6F6B00
 58684              	.LASF1621:
 58685 871a 7374616D 		.string	"stamp"
 58685      7000
 58686              	.LASF1090:
 58687 8720 73686F72 		.string	"short int"
 58687      7420696E 
 58687      7400
 58688              	.LASF641:
 58689 872a 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::all
 58689      7273655F 
 58689      69746572 
 58689      61746F72 
 58689      3C5F5F67 
 58690              	.LASF1113:
 58691 8798 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc"
 58691      395F5F67 
 58691      6E755F63 
 58691      78783133 
 58691      6E65775F 
 58692              	.LASF874:
 58693 87c5 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP15heatmap_stamp_tLb0EE7_M_headERKS2_"
 58693      7431305F 
 58693      48656164 
 58693      5F626173 
 58693      65494C6D 
 58694              	.LASF617:
 58695 8801 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4swapERS1_"
 58695      74367665 
 58695      63746F72 
 58695      49645361 
 58695      49644545 
 58696              	.LASF92:
 58697 8820 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refdataEv"
GAS LISTING /tmp/ccmMnd7l.s 			page 1506


 58697      73345F52 
 58697      65703130 
 58697      5F4D5F72 
 58697      65666461 
 58698              	.LASF111:
 58699 8839 5F5A4E4B 		.string	"_ZNKSs9_M_ibeginEv"
 58699      5373395F 
 58699      4D5F6962 
 58699      6567696E 
 58699      457600
 58700              	.LASF405:
 58701 884c 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 58701      6F395F4D 
 58701      5F696E73 
 58701      65727449 
 58701      6D454552 
 58702              	.LASF1006:
 58703 8865 5F446573 		.string	"_Destroy<unsigned int*>"
 58703      74726F79 
 58703      3C756E73 
 58703      69676E65 
 58703      6420696E 
 58704              	.LASF971:
 58705 887d 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPjLb0EE7_S_baseES0_"
 58705      7431305F 
 58705      49746572 
 58705      5F626173 
 58705      6549506A 
 58706              	.LASF1468:
 58707 88a3 7372616E 		.string	"srand"
 58707      6400
 58708              	.LASF85:
 58709 88a9 5F4D5F73 		.string	"_M_set_leaked"
 58709      65745F6C 
 58709      65616B65 
 58709      6400
 58710              	.LASF417:
 58711 88b7 5F4D5F77 		.string	"_M_widen_init"
 58711      6964656E 
 58711      5F696E69 
 58711      7400
 58712              	.LASF1608:
 58713 88c5 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE8do_widenEc"
 58713      53743563 
 58713      74797065 
 58713      49634538 
 58713      646F5F77 
 58714              	.LASF512:
 58715 88e0 616C6C6F 		.string	"allocator_traits<std::allocator<double> >"
 58715      6361746F 
 58715      725F7472 
 58715      61697473 
 58715      3C737464 
 58716              	.LASF1072:
 58717 890a 5F5A5374 		.string	"_ZSt7nothrow"
 58717      376E6F74 
 58717      68726F77 
GAS LISTING /tmp/ccmMnd7l.s 			page 1507


 58717      00
 58718              	.LASF1635:
 58719 8917 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E"
 58719      5F5F676E 
 58719      755F6378 
 58719      7832355F 
 58719      5F6E756D 
 58720              	.LASF814:
 58721 8956 5F496E68 		.string	"_Inherited"
 58721      65726974 
 58721      656400
 58722              	.LASF1440:
 58723 8961 6C6F6361 		.string	"localeconv"
 58723      6C65636F 
 58723      6E7600
 58724              	.LASF571:
 58725 896c 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSERKS1_"
 58725      74367665 
 58725      63746F72 
 58725      49645361 
 58725      49644545 
 58726              	.LASF1235:
 58727 8989 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEptEv"
 58727      395F5F67 
 58727      6E755F63 
 58727      78783137 
 58727      5F5F6E6F 
 58728              	.LASF100:
 58729 89c4 5F5A4E53 		.string	"_ZNSs4_Rep10_M_destroyERKSaIcE"
 58729      73345F52 
 58729      65703130 
 58729      5F4D5F64 
 58729      65737472 
 58730              	.LASF1281:
 58731 89e3 5F6D6172 		.string	"_markers"
 58731      6B657273 
 58731      00
 58732              	.LASF241:
 58733 89ec 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc"
 58733      73377265 
 58733      706C6163 
 58733      65454E39 
 58733      5F5F676E 
 58734              	.LASF601:
 58735 8a26 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE2atEm"
 58735      53743676 
 58735      6563746F 
 58735      72496453 
 58735      61496445 
 58736              	.LASF1283:
 58737 8a41 5F66696C 		.string	"_fileno"
 58737      656E6F00 
 58738              	.LASF839:
 58739 8a49 756E6971 		.string	"unique_ptr"
 58739      75655F70 
 58739      747200
 58740              	.LASF20:
GAS LISTING /tmp/ccmMnd7l.s 			page 1508


 58741 8a54 6F706572 		.string	"operator std::integral_constant<bool, false>::value_type"
 58741      61746F72 
 58741      20737464 
 58741      3A3A696E 
 58741      74656772 
 58742              	.LASF1219:
 58743 8a8d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE7addressERj"
 58743      395F5F67 
 58743      6E755F63 
 58743      78783133 
 58743      6E65775F 
 58744              	.LASF1133:
 58745 8ab9 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi"
 58745      5F5F676E 
 58745      755F6378 
 58745      7831375F 
 58745      5F6E6F72 
 58746              	.LASF1586:
 58747 8ae4 5F5F7072 		.string	"__priority"
 58747      696F7269 
 58747      747900
 58748              	.LASF170:
 58749 8aef 5F5A4E4B 		.string	"_ZNKSs6lengthEv"
 58749      5373366C 
 58749      656E6774 
 58749      68457600 
 58750              	.LASF1590:
 58751 8aff 5F5F7061 		.string	"__param"
 58751      72616D00 
 58752              	.LASF661:
 58753 8b07 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE37_S_propagate_on_container_swap_helperEz"
 58753      74313661 
 58753      6C6C6F63 
 58753      61746F72 
 58753      5F747261 
 58754              	.LASF1623:
 58755 8b4f 7374646F 		.string	"stdout"
 58755      757400
 58756              	.LASF893:
 58757 8b56 756E6971 		.string	"unique_ptr<heatmap_t, std::default_delete<heatmap_t> >"
 58757      75655F70 
 58757      74723C68 
 58757      6561746D 
 58757      61705F74 
 58758              	.LASF1132:
 58759 8b8d 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv"
 58759      5F5F676E 
 58759      755F6378 
 58759      7831375F 
 58759      5F6E6F72 
 58760              	.LASF775:
 58761 8bb8 5F42696E 		.string	"_Bind_helper<false, std::uniform_int_distribution<int>&, std::mersenne_twister_engine<lon
 58761      645F6865 
 58761      6C706572 
 58761      3C66616C 
 58761      73652C20 
 58762              	.LASF1639:
GAS LISTING /tmp/ccmMnd7l.s 			page 1509


 58763 8c9a 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE"
 58763      5F5F676E 
 58763      755F6378 
 58763      7832345F 
 58763      5F6E756D 
 58764              	.LASF1203:
 58765 8ccc 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl"
 58765      395F5F67 
 58765      6E755F63 
 58765      78783137 
 58765      5F5F6E6F 
 58766              	.LASF1248:
 58767 8d07 5F535F73 		.string	"_S_single"
 58767      696E676C 
 58767      6500
 58768              	.LASF1435:
 58769 8d11 696E745F 		.string	"int_n_cs_precedes"
 58769      6E5F6373 
 58769      5F707265 
 58769      63656465 
 58769      7300
 58770              	.LASF1207:
 58771 8d23 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEptEv"
 58771      395F5F67 
 58771      6E755F63 
 58771      78783137 
 58771      5F5F6E6F 
 58772              	.LASF663:
 58773 8d5f 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8allocateERS0_mPKv"
 58773      74313661 
 58773      6C6C6F63 
 58773      61746F72 
 58773      5F747261 
 58774              	.LASF1116:
 58775 8d90 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv"
 58775      395F5F67 
 58775      6E755F63 
 58775      78783133 
 58775      6E65775F 
 58776              	.LASF1012:
 58777 8dbc 5F52616E 		.string	"_RandomAccessIterator"
 58777      646F6D41 
 58777      63636573 
 58777      73497465 
 58777      7261746F 
 58778              	.LASF1212:
 58779 8dd2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEixEl"
 58779      395F5F67 
 58779      6E755F63 
 58779      78783137 
 58779      5F5F6E6F 
 58780              	.LASF38:
 58781 8e0e 66696E64 		.string	"find"
 58781      00
 58782              	.LASF230:
 58783 8e13 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_"
 58783      73356572 
GAS LISTING /tmp/ccmMnd7l.s 			page 1510


 58783      61736545 
 58783      4E395F5F 
 58783      676E755F 
 58784              	.LASF432:
 58785 8e48 5F5F7363 		.string	"__schrage_ok"
 58785      68726167 
 58785      655F6F6B 
 58785      00
 58786              	.LASF297:
 58787 8e55 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSsmm"
 58787      53733763 
 58787      6F6D7061 
 58787      7265456D 
 58787      6D524B53 
 58788              	.LASF1407:
 58789 8e6d 75696E74 		.string	"uint_fast64_t"
 58789      5F666173 
 58789      7436345F 
 58789      7400
 58790              	.LASF1394:
 58791 8e7b 696E745F 		.string	"int_least32_t"
 58791      6C656173 
 58791      7433325F 
 58791      7400
 58792              	.LASF1585:
 58793 8e89 5F5F696E 		.string	"__initialize_p"
 58793      69746961 
 58793      6C697A65 
 58793      5F7000
 58794              	.LASF645:
 58795 8e98 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE5beginEv"
 58795      53743136 
 58795      696E6974 
 58795      69616C69 
 58795      7A65725F 
 58796              	.LASF471:
 58797 8ebc 5F5A4E53 		.string	"_ZNSt13random_device3minEv"
 58797      74313372 
 58797      616E646F 
 58797      6D5F6465 
 58797      76696365 
 58798              	.LASF1197:
 58799 8ed7 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmmEv"
 58799      5F5F676E 
 58799      755F6378 
 58799      7831375F 
 58799      5F6E6F72 
 58800              	.LASF519:
 58801 8f11 5F535F63 		.string	"_S_const_pointer_helper"
 58801      6F6E7374 
 58801      5F706F69 
 58801      6E746572 
 58801      5F68656C 
 58802              	.LASF123:
 58803 8f29 5F5A4E4B 		.string	"_ZNKSs11_M_disjunctEPKc"
 58803      53733131 
 58803      5F4D5F64 
GAS LISTING /tmp/ccmMnd7l.s 			page 1511


 58803      69736A75 
 58803      6E637445 
 58804              	.LASF278:
 58805 8f41 66696E64 		.string	"find_last_of"
 58805      5F6C6173 
 58805      745F6F66 
 58805      00
 58806              	.LASF671:
 58807 8f4e 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv"
 58807      53743132 
 58807      5F566563 
 58807      746F725F 
 58807      62617365 
 58808              	.LASF1527:
 58809 8f82 6E657874 		.string	"next"
 58809      00
 58810              	.LASF1172:
 58811 8f87 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm"
 58811      5F5F676E 
 58811      755F6378 
 58811      7831336E 
 58811      65775F61 
 58812              	.LASF522:
 58813 8fb7 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE22_S_void_pointer_helperEz"
 58813      74313661 
 58813      6C6C6F63 
 58813      61746F72 
 58813      5F747261 
 58814              	.LASF1441:
 58815 8ff0 5F5F696E 		.string	"__int32_t"
 58815      7433325F 
 58815      7400
 58816              	.LASF1372:
 58817 8ffa 776D656D 		.string	"wmemmove"
 58817      6D6F7665 
 58817      00
 58818              	.LASF323:
 58819 9003 696E7465 		.string	"integral_constant<int, 0>"
 58819      6772616C 
 58819      5F636F6E 
 58819      7374616E 
 58819      743C696E 
 58820              	.LASF697:
 58821 901d 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6resizeEmRKj"
 58821      74367665 
 58821      63746F72 
 58821      496A5361 
 58821      496A4545 
 58822              	.LASF747:
 58823 903e 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 58823      74313163 
 58823      6861725F 
 58823      74726169 
 58823      74734963 
 58824              	.LASF1371:
 58825 9061 776D656D 		.string	"wmemcpy"
 58825      63707900 
GAS LISTING /tmp/ccmMnd7l.s 			page 1512


 58826              	.LASF83:
 58827 9069 5F4D5F69 		.string	"_M_is_shared"
 58827      735F7368 
 58827      61726564 
 58827      00
 58828              	.LASF1093:
 58829 9076 5F5F676E 		.string	"__gnu_cxx"
 58829      755F6378 
 58829      7800
 58830              	.LASF1452:
 58831 9080 6C6C6469 		.string	"lldiv_t"
 58831      765F7400 
 58832              	.LASF1177:
 58833 9088 5F535F6F 		.string	"_S_on_swap"
 58833      6E5F7377 
 58833      617000
 58834              	.LASF707:
 58835 9093 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5frontEv"
 58835      74367665 
 58835      63746F72 
 58835      496A5361 
 58835      496A4545 
 58836              	.LASF1153:
 58837 90b0 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLEl"
 58837      5F5F676E 
 58837      755F6378 
 58837      7831375F 
 58837      5F6E6F72 
 58838              	.LASF623:
 58839 90dc 5F4D5F66 		.string	"_M_fill_assign"
 58839      696C6C5F 
 58839      61737369 
 58839      676E00
 58840              	.LASF1549:
 58841 90eb 5F5F696E 		.string	"__in_chrg"
 58841      5F636872 
 58841      6700
 58842              	.LASF766:
 58843 90f5 5F556E69 		.string	"_UniformRandomNumberGenerator"
 58843      666F726D 
 58843      52616E64 
 58843      6F6D4E75 
 58843      6D626572 
 58844              	.LASF508:
 58845 9113 5F497349 		.string	"_IsInt"
 58845      6E7400
 58846              	.LASF904:
 58847 911a 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE5resetEPS0_"
 58847      74313075 
 58847      6E697175 
 58847      655F7074 
 58847      72493968 
 58848              	.LASF422:
 58849 915a 5F5F6465 		.string	"__destroy<double*>"
 58849      7374726F 
 58849      793C646F 
 58849      75626C65 
GAS LISTING /tmp/ccmMnd7l.s 			page 1513


 58849      2A3E00
 58850              	.LASF1598:
 58851 916d 5F5F7363 		.string	"__scaling"
 58851      616C696E 
 58851      6700
 58852              	.LASF1572:
 58853 9177 5F5F6765 		.string	"__gen"
 58853      6E00
 58854              	.LASF689:
 58855 917d 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4rendEv"
 58855      53743676 
 58855      6563746F 
 58855      72496A53 
 58855      61496A45 
 58856              	.LASF919:
 58857 919a 5F547570 		.string	"_Tuple_impl<std::default_delete<heatmap_t>, void>"
 58857      6C655F69 
 58857      6D706C3C 
 58857      7374643A 
 58857      3A646566 
 58858              	.LASF1068:
 58859 91cc 69676E6F 		.string	"ignore"
 58859      726500
 58860              	.LASF1273:
 58861 91d3 5F494F5F 		.string	"_IO_write_base"
 58861      77726974 
 58861      655F6261 
 58861      736500
 58862              	.LASF357:
 58863 91e2 5F535F65 		.string	"_S_eofbit"
 58863      6F666269 
 58863      7400
 58864              	.LASF39:
 58865 91ec 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 58865      74313163 
 58865      6861725F 
 58865      74726169 
 58865      74734963 
 58866              	.LASF844:
 58867 9210 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEdeEv"
 58867      53743130 
 58867      756E6971 
 58867      75655F70 
 58867      74724931 
 58868              	.LASF880:
 58869 9251 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_tailERKS4_"
 58869      7431315F 
 58869      5475706C 
 58869      655F696D 
 58869      706C494C 
 58870              	.LASF1593:
 58871 92a3 5F5F7572 		.string	"__urngmax"
 58871      6E676D61 
 58871      7800
 58872              	.LASF1183:
 58873 92ad 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE27_S_propagate_on_move_assignEv"
 58873      5F5F676E 
GAS LISTING /tmp/ccmMnd7l.s 			page 1514


 58873      755F6378 
 58873      7831345F 
 58873      5F616C6C 
 58874              	.LASF1620:
 58875 92f1 7374616D 		.string	"stampsize"
 58875      7073697A 
 58875      6500
 58876              	.LASF22:
 58877 92fb 696E7465 		.string	"integral_constant<bool, false>"
 58877      6772616C 
 58877      5F636F6E 
 58877      7374616E 
 58877      743C626F 
 58878              	.LASF458:
 58879 931a 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 58879      7432336D 
 58879      65727365 
 58879      6E6E655F 
 58879      74776973 
 58880              	.LASF945:
 58881 93ac 5F497342 		.string	"_IsBindExp"
 58881      696E6445 
 58881      787000
 58882              	.LASF820:
 58883 93b7 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 58883      7431315F 
 58883      5475706C 
 58883      655F696D 
 58883      706C494C 
 58884              	.LASF50:
 58885 9462 65715F69 		.string	"eq_int_type"
 58885      6E745F74 
 58885      79706500 
 58886              	.LASF941:
 58887 946e 6F706572 		.string	"operator()<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 58887      61746F72 
 58887      28293C73 
 58887      74643A3A 
 58887      6D657273 
 58888              	.LASF637:
 58889 9531 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPdS1_EES5_"
 58889      74367665 
 58889      63746F72 
 58889      49645361 
 58889      49644545 
 58890              	.LASF1112:
 58891 9579 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERc"
 58891      395F5F67 
 58891      6E755F63 
 58891      78783133 
 58891      6E65775F 
 58892              	.LASF1385:
 58893 95a5 696E7431 		.string	"int16_t"
 58893      365F7400 
 58894              	.LASF1482:
 58895 95ad 5F5F706F 		.string	"__pos"
 58895      7300
GAS LISTING /tmp/ccmMnd7l.s 			page 1515


 58896              	.LASF400:
 58897 95b3 5F5F6F73 		.string	"__ostream_type"
 58897      74726561 
 58897      6D5F7479 
 58897      706500
 58898              	.LASF514:
 58899 95c2 5F5F636F 		.string	"__const_void_pointer"
 58899      6E73745F 
 58899      766F6964 
 58899      5F706F69 
 58899      6E746572 
 58900              	.LASF395:
 58901 95d7 7365656B 		.string	"seekdir"
 58901      64697200 
 58902              	.LASF762:
 58903 95df 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiE5paramERKNS0_10param_typeE"
 58903      74323475 
 58903      6E69666F 
 58903      726D5F69 
 58903      6E745F64 
 58904              	.LASF1250:
 58905 961c 5F535F61 		.string	"_S_atomic"
 58905      746F6D69 
 58905      6300
 58906              	.LASF401:
 58907 9626 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 58907      6F6C7345 
 58907      50465253 
 58907      6F535F45 
 58907      00
 58908              	.LASF1491:
 58909 9637 66636C6F 		.string	"fclose"
 58909      736500
 58910              	.LASF1008:
 58911 963e 5F446573 		.string	"_Destroy<double*>"
 58911      74726F79 
 58911      3C646F75 
 58911      626C652A 
 58911      3E00
 58912              	.LASF708:
 58913 9650 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5frontEv"
 58913      53743676 
 58913      6563746F 
 58913      72496A53 
 58913      61496A45 
 58914              	.LASF1564:
 58915 966e 5F5F7069 		.string	"__pivot"
 58915      766F7400 
 58916              	.LASF120:
 58917 9676 5F4D5F6C 		.string	"_M_limit"
 58917      696D6974 
 58917      00
 58918              	.LASF210:
 58919 967f 5F5A4E53 		.string	"_ZNSs9push_backEc"
 58919      73397075 
 58919      73685F62 
 58919      61636B45 
GAS LISTING /tmp/ccmMnd7l.s 			page 1516


 58919      6300
 58920              	.LASF864:
 58921 9691 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_headERS3_"
 58921      7431315F 
 58921      5475706C 
 58921      655F696D 
 58921      706C494C 
 58922              	.LASF350:
 58923 96de 5F535F69 		.string	"_S_in"
 58923      6E00
 58924              	.LASF1217:
 58925 96e4 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv"
 58925      395F5F67 
 58925      6E755F63 
 58925      78783137 
 58925      5F5F6E6F 
 58926              	.LASF827:
 58927 9723 7475706C 		.string	"tuple"
 58927      6500
 58928              	.LASF270:
 58929 9729 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcmm"
 58929      53733572 
 58929      66696E64 
 58929      45504B63 
 58929      6D6D00
 58930              	.LASF774:
 58931 973c 72656D6F 		.string	"remove_reference<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul
 58931      76655F72 
 58931      65666572 
 58931      656E6365 
 58931      3C737464 
 58932              	.LASF1634:
 58933 97f6 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E"
 58933      5F5F676E 
 58933      755F6378 
 58933      7832355F 
 58933      5F6E756D 
 58934              	.LASF376:
 58935 9835 6C656674 		.string	"left"
 58935      00
 58936              	.LASF1589:
 58937 983a 5F5F6C6F 		.string	"__lower_mask"
 58937      7765725F 
 58937      6D61736B 
 58937      00
 58938              	.LASF1511:
 58939 9847 73657462 		.string	"setbuf"
 58939      756600
 58940              	.LASF1403:
 58941 984e 696E745F 		.string	"int_fast64_t"
 58941      66617374 
 58941      36345F74 
 58941      00
 58942              	.LASF1555:
 58943 985b 5F5F7265 		.string	"__res"
 58943      7300
 58944              	.LASF1474:
GAS LISTING /tmp/ccmMnd7l.s 			page 1517


 58945 9861 7763746F 		.string	"wctomb"
 58945      6D6200
 58946              	.LASF1324:
 58947 9868 6D62726C 		.string	"mbrlen"
 58947      656E00
 58948              	.LASF1154:
 58949 986f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplEl"
 58949      395F5F67 
 58949      6E755F63 
 58949      78783137 
 58949      5F5F6E6F 
 58950              	.LASF187:
 58951 989c 5F5A4E4B 		.string	"_ZNKSsixEm"
 58951      53736978 
 58951      456D00
 58952              	.LASF935:
 58953 98a7 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEEaSEOS4_"
 58953      74357475 
 58953      706C6549 
 58953      49503968 
 58953      6561746D 
 58954              	.LASF660:
 58955 98e0 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE48_S_propagate_on_container_move_assignment_helperEz"
 58955      74313661 
 58955      6C6C6F63 
 58955      61746F72 
 58955      5F747261 
 58956              	.LASF1180:
 58957 9933 5F5A4E53 		.string	"_ZNSs4_Rep12_S_empty_repEv"
 58957      73345F52 
 58957      65703132 
 58957      5F535F65 
 58957      6D707479 
 58958              	.LASF437:
 58959 994e 6D657273 		.string	"mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 
 58959      656E6E65 
 58959      5F747769 
 58959      73746572 
 58959      5F656E67 
 58960              	.LASF638:
 58961 99f0 5F4D5F6D 		.string	"_M_move_assign"
 58961      6F76655F 
 58961      61737369 
 58961      676E00
 58962              	.LASF502:
 58963 99ff 5F556E71 		.string	"_Unqualified"
 58963      75616C69 
 58963      66696564 
 58963      00
 58964              	.LASF1135:
 58965 9a0c 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLEl"
 58965      5F5F676E 
 58965      755F6378 
 58965      7831375F 
 58965      5F6E6F72 
 58966              	.LASF875:
 58967 9a37 5F486561 		.string	"_Head_base<heatmap_stamp_t*&, void>"
GAS LISTING /tmp/ccmMnd7l.s 			page 1518


 58967      645F6261 
 58967      73653C68 
 58967      6561746D 
 58967      61705F73 
 58968              	.LASF353:
 58969 9a5b 5F535F69 		.string	"_S_ios_openmode_end"
 58969      6F735F6F 
 58969      70656E6D 
 58969      6F64655F 
 58969      656E6400 
 58970              	.LASF1494:
 58971 9a6f 66666C75 		.string	"fflush"
 58971      736800
 58972              	.LASF566:
 58973 9a76 5F4D5F63 		.string	"_M_create_storage"
 58973      72656174 
 58973      655F7374 
 58973      6F726167 
 58973      6500
 58974              	.LASF440:
 58975 9a88 73746174 		.string	"state_size"
 58975      655F7369 
 58975      7A6500
 58976              	.LASF84:
 58977 9a93 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_sharedEv"
 58977      5373345F 
 58977      52657031 
 58977      325F4D5F 
 58977      69735F73 
 58978              	.LASF498:
 58979 9aaf 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPdE10pointer_toERd"
 58979      74313470 
 58979      6F696E74 
 58979      65725F74 
 58979      72616974 
 58980              	.LASF1286:
 58981 9ad8 5F637572 		.string	"_cur_column"
 58981      5F636F6C 
 58981      756D6E00 
 58982              	.LASF695:
 58983 9ae4 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE8max_sizeEv"
 58983      53743676 
 58983      6563746F 
 58983      72496A53 
 58983      61496A45 
 58984              	.LASF819:
 58985 9b05 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 58985      7431315F 
 58985      5475706C 
 58985      655F696D 
 58985      706C494C 
 58986              	.LASF31:
 58987 9bb6 696E745F 		.string	"int_type"
 58987      74797065 
 58987      00
 58988              	.LASF456:
 58989 9bbf 73656564 		.string	"seed"
GAS LISTING /tmp/ccmMnd7l.s 			page 1519


 58989      00
 58990              	.LASF1121:
 58991 9bc4 5F5F6469 		.string	"__digits"
 58991      67697473 
 58991      00
 58992              	.LASF221:
 58993 9bcd 5F5A4E53 		.string	"_ZNSs6insertEmRKSs"
 58993      7336696E 
 58993      73657274 
 58993      456D524B 
 58993      537300
 58994              	.LASF93:
 58995 9be0 5F4D5F67 		.string	"_M_grab"
 58995      72616200 
 58996              	.LASF10:
 58997 9be8 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 58997      7431355F 
 58997      5F657863 
 58997      65707469 
 58997      6F6E5F70 
 58998              	.LASF184:
 58999 9c15 656D7074 		.string	"empty"
 58999      7900
 59000              	.LASF98:
 59001 9c1b 5F5A4E53 		.string	"_ZNSs4_Rep10_M_disposeERKSaIcE"
 59001      73345F52 
 59001      65703130 
 59001      5F4D5F64 
 59001      6973706F 
 59002              	.LASF705:
 59003 9c3a 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE2atEm"
 59003      74367665 
 59003      63746F72 
 59003      496A5361 
 59003      496A4545 
 59004              	.LASF1003:
 59005 9c54 5F466163 		.string	"_Facet"
 59005      657400
 59006              	.LASF351:
 59007 9c5b 5F535F6F 		.string	"_S_out"
 59007      757400
 59008              	.LASF1144:
 59009 9c62 5F436F6E 		.string	"_Container"
 59009      7461696E 
 59009      657200
 59010              	.LASF1205:
 59011 9c6d 5F5F6E6F 		.string	"__normal_iterator<double const*, std::vector<double, std::allocator<double> > >"
 59011      726D616C 
 59011      5F697465 
 59011      7261746F 
 59011      723C646F 
 59012              	.LASF1422:
 59013 9cbd 6D6F6E5F 		.string	"mon_grouping"
 59013      67726F75 
 59013      70696E67 
 59013      00
 59014              	.LASF1595:
GAS LISTING /tmp/ccmMnd7l.s 			page 1520


 59015 9cca 5F5F7572 		.string	"__urange"
 59015      616E6765 
 59015      00
 59016              	.LASF1015:
 59017 9cd3 5F5F6669 		.string	"__fill_n_a<double*, long unsigned int, double>"
 59017      6C6C5F6E 
 59017      5F613C64 
 59017      6F75626C 
 59017      652A2C20 
 59018              	.LASF1109:
 59019 9d02 6E65775F 		.string	"new_allocator"
 59019      616C6C6F 
 59019      6361746F 
 59019      7200
 59020              	.LASF760:
 59021 9d10 70617261 		.string	"param"
 59021      6D00
 59022              	.LASF1380:
 59023 9d16 776D656D 		.string	"wmemchr"
 59023      63687200 
 59024              	.LASF944:
 59025 9d1e 5F417267 		.string	"_Arg"
 59025      00
 59026              	.LASF109:
 59027 9d23 5F5A4E4B 		.string	"_ZNKSs6_M_repEv"
 59027      5373365F 
 59027      4D5F7265 
 59027      70457600 
 59028              	.LASF1462:
 59029 9d33 6D626C65 		.string	"mblen"
 59029      6E00
 59030              	.LASF823:
 59031 9d39 5F547570 		.string	"_Tuple_impl<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256
 59031      6C655F69 
 59031      6D706C3C 
 59031      7374643A 
 59031      3A6D6572 
 59032              	.LASF1256:
 59033 9df4 5F5F6578 		.string	"__exchange_and_add_dispatch"
 59033      6368616E 
 59033      67655F61 
 59033      6E645F61 
 59033      64645F64 
 59034              	.LASF1351:
 59035 9e10 746D5F79 		.string	"tm_year"
 59035      65617200 
 59036              	.LASF1551:
 59037 9e18 5F5F7268 		.string	"__rhs"
 59037      7300
 59038              	.LASF1451:
 59039 9e1e 376C6C64 		.string	"7lldiv_t"
 59039      69765F74 
 59039      00
 59040              	.LASF948:
 59041 9e27 5F5F6164 		.string	"__add_c_ref<heatmap_stamp_t*>"
 59041      645F635F 
 59041      7265663C 
GAS LISTING /tmp/ccmMnd7l.s 			page 1521


 59041      68656174 
 59041      6D61705F 
 59042              	.LASF299:
 59043 9e45 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKc"
 59043      53733763 
 59043      6F6D7061 
 59043      7265456D 
 59043      6D504B63 
 59044              	.LASF863:
 59045 9e5a 5F547570 		.string	"_Tuple_impl<1ul, std::default_delete<heatmap_stamp_t> >"
 59045      6C655F69 
 59045      6D706C3C 
 59045      31756C2C 
 59045      20737464 
 59046              	.LASF1169:
 59047 9e92 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE7addressERd"
 59047      395F5F67 
 59047      6E755F63 
 59047      78783133 
 59047      6E65775F 
 59048              	.LASF165:
 59049 9ebe 5F5A4E4B 		.string	"_ZNKSs7crbeginEv"
 59049      53733763 
 59049      72626567 
 59049      696E4576 
 59049      00
 59050              	.LASF48:
 59051 9ecf 746F5F69 		.string	"to_int_type"
 59051      6E745F74 
 59051      79706500 
 59052              	.LASF1095:
 59053 9edb 5F497465 		.string	"_Iter_less_iter"
 59053      725F6C65 
 59053      73735F69 
 59053      74657200 
 59054              	.LASF398:
 59055 9eeb 6F706572 		.string	"operator<<"
 59055      61746F72 
 59055      3C3C00
 59056              	.LASF658:
 59057 9ef6 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE19_S_size_type_helperEz"
 59057      74313661 
 59057      6C6C6F63 
 59057      61746F72 
 59057      5F747261 
 59058              	.LASF1288:
 59059 9f2c 5F73686F 		.string	"_shortbuf"
 59059      72746275 
 59059      6600
 59060              	.LASF1616:
 59061 9f36 64697374 		.string	"dist"
 59061      00
 59062              	.LASF821:
 59063 9f3b 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 59063      7431315F 
 59063      5475706C 
 59063      655F696D 
GAS LISTING /tmp/ccmMnd7l.s 			page 1522


 59063      706C494C 
 59064              	.LASF539:
 59065 9fe5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm"
 59065      74313661 
 59065      6C6C6F63 
 59065      61746F72 
 59065      5F747261 
 59066              	.LASF1626:
 59067 a018 5354414D 		.string	"STAMP_MIN"
 59067      505F4D49 
 59067      4E00
 59068              	.LASF1143:
 59069 a022 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv"
 59069      395F5F67 
 59069      6E755F63 
 59069      78783137 
 59069      5F5F6E6F 
 59070              	.LASF139:
 59071 a051 5F5A4E53 		.string	"_ZNSs9_M_mutateEmmm"
 59071      73395F4D 
 59071      5F6D7574 
 59071      61746545 
 59071      6D6D6D00 
 59072              	.LASF369:
 59073 a065 696F7374 		.string	"iostate"
 59073      61746500 
 59074              	.LASF106:
 59075 a06d 5F5A4E4B 		.string	"_ZNKSs7_M_dataEv"
 59075      5373375F 
 59075      4D5F6461 
 59075      74614576 
 59075      00
 59076              	.LASF1576:
 59077 a07e 5F56616C 		.string	"_ValueType"
 59077      75655479 
 59077      706500
 59078              	.LASF901:
 59079 a089 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEcvbEv"
 59079      53743130 
 59079      756E6971 
 59079      75655F70 
 59079      74724931 
 59080              	.LASF1478:
 59081 a0cb 73747274 		.string	"strtoull"
 59081      6F756C6C 
 59081      00
 59082              	.LASF302:
 59083 a0d4 5F547261 		.string	"_Traits"
 59083      69747300 
 59084              	.LASF1443:
 59085 a0dc 5F5F6F66 		.string	"__off64_t"
 59085      6636345F 
 59085      7400
 59086              	.LASF702:
 59087 a0e6 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEixEm"
 59087      74367665 
 59087      63746F72 
GAS LISTING /tmp/ccmMnd7l.s 			page 1523


 59087      496A5361 
 59087      496A4545 
 59088              	.LASF544:
 59089 a0ff 66616C73 		.string	"false_type"
 59089      655F7479 
 59089      706500
 59090              	.LASF1364:
 59091 a10a 77637374 		.string	"wcstof"
 59091      6F6600
 59092              	.LASF223:
 59093 a111 5F5A4E53 		.string	"_ZNSs6insertEmPKcm"
 59093      7336696E 
 59093      73657274 
 59093      456D504B 
 59093      636D00
 59094              	.LASF1366:
 59095 a124 77637374 		.string	"wcstol"
 59095      6F6C00
 59096              	.LASF1592:
 59097 a12b 5F5F7572 		.string	"__urngmin"
 59097      6E676D69 
 59097      6E00
 59098              	.LASF633:
 59099 a135 5F4D5F65 		.string	"_M_erase_at_end"
 59099      72617365 
 59099      5F61745F 
 59099      656E6400 
 59100              	.LASF792:
 59101 a145 5F576561 		.string	"_Weak_result_type_impl<std::uniform_int_distribution<int> >"
 59101      6B5F7265 
 59101      73756C74 
 59101      5F747970 
 59101      655F696D 
 59102              	.LASF131:
 59103 a181 5F535F63 		.string	"_S_copy_chars"
 59103      6F70795F 
 59103      63686172 
 59103      7300
 59104              	.LASF647:
 59105 a18f 616C6C6F 		.string	"allocator<unsigned int>"
 59105      6361746F 
 59105      723C756E 
 59105      7369676E 
 59105      65642069 
 59106              	.LASF7:
 59107 a1a7 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 59107      7431355F 
 59107      5F657863 
 59107      65707469 
 59107      6F6E5F70 
 59108              	.LASF1027:
 59109 a1db 5F5F756E 		.string	"__uninitialized_default_n<double*, long unsigned int>"
 59109      696E6974 
 59109      69616C69 
 59109      7A65645F 
 59109      64656661 
 59110              	.LASF214:
GAS LISTING /tmp/ccmMnd7l.s 			page 1524


 59111 a211 5F5A4E53 		.string	"_ZNSs6assignEPKcm"
 59111      73366173 
 59111      7369676E 
 59111      45504B63 
 59111      6D00
 59112              	.LASF475:
 59113 a223 5F5A4E53 		.string	"_ZNSt13random_deviceclEv"
 59113      74313372 
 59113      616E646F 
 59113      6D5F6465 
 59113      76696365 
 59114              	.LASF105:
 59115 a23c 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refcopyEv"
 59115      73345F52 
 59115      65703130 
 59115      5F4D5F72 
 59115      6566636F 
 59116              	.LASF237:
 59117 a255 5F5A4E53 		.string	"_ZNSs7replaceEmmPKc"
 59117      73377265 
 59117      706C6163 
 59117      65456D6D 
 59117      504B6300 
 59118              	.LASF409:
 59119 a269 5F4D5F69 		.string	"_M_insert<double>"
 59119      6E736572 
 59119      743C646F 
 59119      75626C65 
 59119      3E00
 59120              	.LASF1388:
 59121 a27b 75696E74 		.string	"uint8_t"
 59121      385F7400 
 59122              	.LASF329:
 59123 a283 5F535F68 		.string	"_S_hex"
 59123      657800
 59124              	.LASF1222:
 59125 a28a 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm"
 59125      5F5F676E 
 59125      755F6378 
 59125      7831336E 
 59125      65775F61 
 59126              	.LASF720:
 59127 a2ba 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5eraseEN9__gnu_cxx17__normal_iteratorIPKjS1_EE"
 59127      74367665 
 59127      63746F72 
 59127      496A5361 
 59127      496A4545 
 59128              	.LASF179:
 59129 a2fd 5F5A4E4B 		.string	"_ZNKSs8capacityEv"
 59129      53733863 
 59129      61706163 
 59129      69747945 
 59129      7600
 59130              	.LASF770:
 59131 a30f 5F4D6179 		.string	"_Maybe_wrap_member_pointer<std::uniform_int_distribution<int> >"
 59131      62655F77 
 59131      7261705F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1525


 59131      6D656D62 
 59131      65725F70 
 59132              	.LASF1667:
 59133 a34f 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE10param_type1aEv"
 59133      53743234 
 59133      756E6966 
 59133      6F726D5F 
 59133      696E745F 
 59134              	.LASF246:
 59135 a383 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_"
 59135      73377265 
 59135      706C6163 
 59135      65454E39 
 59135      5F5F676E 
 59136              	.LASF582:
 59137 a3c9 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4rendEv"
 59137      74367665 
 59137      63746F72 
 59137      49645361 
 59137      49644545 
 59138              	.LASF1043:
 59139 a3e5 67656E65 		.ascii	"generate<__gnu_cxx::__normal_iterator<u"
 59139      72617465 
 59139      3C5F5F67 
 59139      6E755F63 
 59139      78783A3A 
 59140 a40c 6E736967 		.string	"nsigned int*, std::vector<unsigned int> >, std::_Bind<std::uniform_int_distribution<>(std
 59140      6E656420 
 59140      696E742A 
 59140      2C207374 
 59140      643A3A76 
 59141              	.LASF1313:
 59142 a50d 62746F77 		.string	"btowc"
 59142      6300
 59143              	.LASF1259:
 59144 a513 5F497465 		.string	"_IteratorL"
 59144      7261746F 
 59144      724C00
 59145              	.LASF1178:
 59146 a51e 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE10_S_on_swapERS1_S3_"
 59146      5F5F676E 
 59146      755F6378 
 59146      7831345F 
 59146      5F616C6C 
 59147              	.LASF332:
 59148 a557 5F535F6F 		.string	"_S_oct"
 59148      637400
 59149              	.LASF1249:
 59150 a55e 5F535F6D 		.string	"_S_mutex"
 59150      75746578 
 59150      00
 59151              	.LASF1002:
 59152 a567 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 59152      65636B5F 
 59152      66616365 
 59152      743C7374 
 59152      643A3A63 
GAS LISTING /tmp/ccmMnd7l.s 			page 1526


 59153              	.LASF992:
 59154 a588 666F7277 		.string	"forward<heatmap_t*&>"
 59154      6172643C 
 59154      68656174 
 59154      6D61705F 
 59154      742A263E 
 59155              	.LASF239:
 59156 a59d 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs"
 59156      73377265 
 59156      706C6163 
 59156      65454E39 
 59156      5F5F676E 
 59157              	.LASF892:
 59158 a5d8 72656D6F 		.string	"remove_reference<std::default_delete<heatmap_t> >"
 59158      76655F72 
 59158      65666572 
 59158      656E6365 
 59158      3C737464 
 59159              	.LASF86:
 59160 a60a 5F5A4E53 		.string	"_ZNSs4_Rep13_M_set_leakedEv"
 59160      73345F52 
 59160      65703133 
 59160      5F4D5F73 
 59160      65745F6C 
 59161              	.LASF326:
 59162 a626 5F535F62 		.string	"_S_boolalpha"
 59162      6F6F6C61 
 59162      6C706861 
 59162      00
 59163              	.LASF541:
 59164 a633 73656C65 		.string	"select_on_container_copy_construction"
 59164      63745F6F 
 59164      6E5F636F 
 59164      6E746169 
 59164      6E65725F 
 59165              	.LASF242:
 59166 a659 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_mc"
 59166      73377265 
 59166      706C6163 
 59166      65454E39 
 59166      5F5F676E 
 59167              	.LASF568:
 59168 a692 76656374 		.string	"vector<double, std::allocator<double> >"
 59168      6F723C64 
 59168      6F75626C 
 59168      652C2073 
 59168      74643A3A 
 59169              	.LASF1615:
 59170 a6ba 70726E67 		.string	"prng"
 59170      00
 59171              	.LASF6:
 59172 a6bf 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 59172      7431355F 
 59172      5F657863 
 59172      65707469 
 59172      6F6E5F70 
 59173              	.LASF1370:
GAS LISTING /tmp/ccmMnd7l.s 			page 1527


 59174 a6f1 776D656D 		.string	"wmemcmp"
 59174      636D7000 
 59175              	.LASF1179:
 59176 a6f9 5F535F70 		.string	"_S_propagate_on_copy_assign"
 59176      726F7061 
 59176      67617465 
 59176      5F6F6E5F 
 59176      636F7079 
 59177              	.LASF809:
 59178 a715 5F486561 		.string	"_Head_base<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 59178      645F6261 
 59178      73653C73 
 59178      74643A3A 
 59178      6D657273 
 59179              	.LASF171:
 59180 a7cf 6D61785F 		.string	"max_size"
 59180      73697A65 
 59180      00
 59181              	.LASF399:
 59182 a7d8 5F5A4E53 		.string	"_ZNSolsEd"
 59182      6F6C7345 
 59182      6400
 59183              	.LASF29:
 59184 a7e2 63686172 		.string	"char_traits<char>"
 59184      5F747261 
 59184      6974733C 
 59184      63686172 
 59184      3E00
 59185              	.LASF598:
 59186 a7f4 5F4D5F72 		.string	"_M_range_check"
 59186      616E6765 
 59186      5F636865 
 59186      636B00
 59187              	.LASF721:
 59188 a803 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5eraseEN9__gnu_cxx17__normal_iteratorIPKjS1_EES6_"
 59188      74367665 
 59188      63746F72 
 59188      496A5361 
 59188      496A4545 
 59189              	.LASF865:
 59190 a849 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_headERKS3_"
 59190      7431315F 
 59190      5475706C 
 59190      655F696D 
 59190      706C494C 
 59191              	.LASF1060:
 59192 a897 5F5F756E 		.string	"__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, 
 59192      67756172 
 59192      6465645F 
 59192      70617274 
 59192      6974696F 
 59193              	.LASF1588:
 59194 a913 5F5F7570 		.string	"__upper_mask"
 59194      7065725F 
 59194      6D61736B 
 59194      00
 59195              	.LASF1215:
GAS LISTING /tmp/ccmMnd7l.s 			page 1528


 59196 a920 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmIEl"
 59196      5F5F676E 
 59196      755F6378 
 59196      7831375F 
 59196      5F6E6F72 
 59197              	.LASF1047:
 59198 a95b 5F446973 		.string	"_Distance"
 59198      74616E63 
 59198      6500
 59199              	.LASF118:
 59200 a965 5F4D5F63 		.string	"_M_check_length"
 59200      6865636B 
 59200      5F6C656E 
 59200      67746800 
 59201              	.LASF700:
 59202 a975 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5emptyEv"
 59202      53743676 
 59202      6563746F 
 59202      72496A53 
 59202      61496A45 
 59203              	.LASF317:
 59204 a993 5F416E79 		.string	"_Anything"
 59204      7468696E 
 59204      6700
 59205              	.LASF694:
 59206 a99d 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4sizeEv"
 59206      53743676 
 59206      6563746F 
 59206      72496A53 
 59206      61496A45 
 59207              	.LASF126:
 59208 a9ba 5F5A4E53 		.string	"_ZNSs7_M_copyEPcPKcm"
 59208      73375F4D 
 59208      5F636F70 
 59208      79455063 
 59208      504B636D 
 59209              	.LASF491:
 59210 a9cf 6F746865 		.string	"other"
 59210      7200
 59211              	.LASF1528:
 59212 a9d5 5F5A4E31 		.string	"_ZN11RepeatTimer4nextEv"
 59212      31526570 
 59212      65617454 
 59212      696D6572 
 59212      346E6578 
 59213              	.LASF183:
 59214 a9ed 5F5A4E53 		.string	"_ZNSs5clearEv"
 59214      7335636C 
 59214      65617245 
 59214      7600
 59215              	.LASF1091:
 59216 a9fb 6C6F6E67 		.string	"long int"
 59216      20696E74 
 59216      00
 59217              	.LASF132:
 59218 aa04 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_"
 59218      7331335F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1529


 59218      535F636F 
 59218      70795F63 
 59218      68617273 
 59219              	.LASF213:
 59220 aa44 5F5A4E53 		.string	"_ZNSs6assignERKSsmm"
 59220      73366173 
 59220      7369676E 
 59220      45524B53 
 59220      736D6D00 
 59221              	.LASF1173:
 59222 aa58 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv"
 59222      395F5F67 
 59222      6E755F63 
 59222      78783133 
 59222      6E65775F 
 59223              	.LASF1389:
 59224 aa84 75696E74 		.string	"uint16_t"
 59224      31365F74 
 59224      00
 59225              	.LASF805:
 59226 aa8d 5F486561 		.string	"_Head_base"
 59226      645F6261 
 59226      736500
 59227              	.LASF1075:
 59228 aa98 5F5A5374 		.string	"_ZSt4cerr"
 59228      34636572 
 59228      7200
 59229              	.LASF1234:
 59230 aaa2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEdeEv"
 59230      395F5F67 
 59230      6E755F63 
 59230      78783137 
 59230      5F5F6E6F 
 59231              	.LASF970:
 59232 aadd 5F497465 		.string	"_Iter_base<unsigned int*, false>"
 59232      725F6261 
 59232      73653C75 
 59232      6E736967 
 59232      6E656420 
 59233              	.LASF1514:
 59234 aafe 746D706E 		.string	"tmpnam"
 59234      616D00
 59235              	.LASF154:
 59236 ab05 72626567 		.string	"rbegin"
 59236      696E00
 59237              	.LASF1088:
 59238 ab0c 6C6F6E67 		.string	"long long unsigned int"
 59238      206C6F6E 
 59238      6720756E 
 59238      7369676E 
 59238      65642069 
 59239              	.LASF1182:
 59240 ab23 5F535F70 		.string	"_S_propagate_on_move_assign"
 59240      726F7061 
 59240      67617465 
 59240      5F6F6E5F 
 59240      6D6F7665 
GAS LISTING /tmp/ccmMnd7l.s 			page 1530


 59241              	.LASF1126:
 59242 ab3f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv"
 59242      395F5F67 
 59242      6E755F63 
 59242      78783137 
 59242      5F5F6E6F 
 59243              	.LASF390:
 59244 ab6b 6661696C 		.string	"failbit"
 59244      62697400 
 59245              	.LASF1240:
 59246 ab73 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEixEl"
 59246      395F5F67 
 59246      6E755F63 
 59246      78783137 
 59246      5F5F6E6F 
 59247              	.LASF268:
 59248 abae 7266696E 		.string	"rfind"
 59248      6400
 59249              	.LASF238:
 59250 abb4 5F5A4E53 		.string	"_ZNSs7replaceEmmmc"
 59250      73377265 
 59250      706C6163 
 59250      65456D6D 
 59250      6D6300
 59251              	.LASF559:
 59252 abc7 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIdSaIdEE13get_allocatorEv"
 59252      53743132 
 59252      5F566563 
 59252      746F725F 
 59252      62617365 
 59253              	.LASF553:
 59254 abf5 7E5F5665 		.string	"~_Vector_impl"
 59254      63746F72 
 59254      5F696D70 
 59254      6C00
 59255              	.LASF291:
 59256 ac03 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcm"
 59256      53733136 
 59256      66696E64 
 59256      5F6C6173 
 59256      745F6E6F 
 59257              	.LASF42:
 59258 ac21 636F7079 		.string	"copy"
 59258      00
 59259              	.LASF1653:
 59260 ac26 68656174 		.string	"heatmap_add_point_with_stamp"
 59260      6D61705F 
 59260      6164645F 
 59260      706F696E 
 59260      745F7769 
 59261              	.LASF177:
 59262 ac43 5F5A4E53 		.string	"_ZNSs13shrink_to_fitEv"
 59262      73313373 
 59262      6872696E 
 59262      6B5F746F 
 59262      5F666974 
 59263              	.LASF1472:
GAS LISTING /tmp/ccmMnd7l.s 			page 1531


 59264 ac5a 73797374 		.string	"system"
 59264      656D00
 59265              	.LASF736:
 59266 ac61 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned i
 59266      7273655F 
 59266      69746572 
 59266      61746F72 
 59266      3C5F5F67 
 59267              	.LASF1206:
 59268 ace1 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv"
 59268      395F5F67 
 59268      6E755F63 
 59268      78783137 
 59268      5F5F6E6F 
 59269              	.LASF121:
 59270 ad1d 5F5A4E4B 		.string	"_ZNKSs8_M_limitEmm"
 59270      5373385F 
 59270      4D5F6C69 
 59270      6D697445 
 59270      6D6D00
 59271              	.LASF580:
 59272 ad30 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6rbeginEv"
 59272      74367665 
 59272      63746F72 
 59272      49645361 
 59272      49644545 
 59273              	.LASF910:
 59274 ad4e 5F486561 		.string	"_Head_base<std::default_delete<heatmap_t>, void>"
 59274      645F6261 
 59274      73653C73 
 59274      74643A3A 
 59274      64656661 
 59275              	.LASF45:
 59276 ad7f 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 59276      74313163 
 59276      6861725F 
 59276      74726169 
 59276      74734963 
 59277              	.LASF982:
 59278 ada1 6F706572 		.string	"operator&"
 59278      61746F72 
 59278      2600
 59279              	.LASF843:
 59280 adab 6F706572 		.string	"operator*"
 59280      61746F72 
 59280      2A00
 59281              	.LASF1136:
 59282 adb5 6F706572 		.string	"operator+"
 59282      61746F72 
 59282      2B00
 59283              	.LASF685:
 59284 adbf 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE3endEv"
 59284      53743676 
 59284      6563746F 
 59284      72496A53 
 59284      61496A45 
 59285              	.LASF1140:
GAS LISTING /tmp/ccmMnd7l.s 			page 1532


 59286 addb 6F706572 		.string	"operator-"
 59286      61746F72 
 59286      2D00
 59287              	.LASF128:
 59288 ade5 5F5A4E53 		.string	"_ZNSs7_M_moveEPcPKcm"
 59288      73375F4D 
 59288      5F6D6F76 
 59288      65455063 
 59288      504B636D 
 59289              	.LASF504:
 59290 adfa 5F497356 		.string	"_IsVol"
 59290      6F6C00
 59291              	.LASF676:
 59292 ae01 76656374 		.string	"vector<unsigned int, std::allocator<unsigned int> >"
 59292      6F723C75 
 59292      6E736967 
 59292      6E656420 
 59292      696E742C 
 59293              	.LASF1448:
 59294 ae35 6469765F 		.string	"div_t"
 59294      7400
 59295              	.LASF1170:
 59296 ae3b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE7addressERKd"
 59296      395F5F67 
 59296      6E755F63 
 59296      78783133 
 59296      6E65775F 
 59297              	.LASF140:
 59298 ae68 5F4D5F6C 		.string	"_M_leak_hard"
 59298      65616B5F 
 59298      68617264 
 59298      00
 59299              	.LASF636:
 59300 ae75 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPdS1_EE"
 59300      74367665 
 59300      63746F72 
 59300      49645361 
 59300      49644545 
 59301              	.LASF8:
 59302 aeba 6F706572 		.string	"operator="
 59302      61746F72 
 59302      3D00
 59303              	.LASF1033:
 59304 aec4 5F424932 		.string	"_BI2"
 59304      00
 59305              	.LASF483:
 59306 aec9 5F4D5F67 		.string	"_M_getval"
 59306      65747661 
 59306      6C00
 59307              	.LASF1039:
 59308 aed3 66696C6C 		.string	"fill_n<unsigned int*, long unsigned int, unsigned int>"
 59308      5F6E3C75 
 59308      6E736967 
 59308      6E656420 
 59308      696E742A 
 59309              	.LASF1503:
 59310 af0a 6674656C 		.string	"ftell"
GAS LISTING /tmp/ccmMnd7l.s 			page 1533


 59310      6C00
 59311              	.LASF333:
 59312 af10 5F535F72 		.string	"_S_right"
 59312      69676874 
 59312      00
 59313              	.LASF25:
 59314 af19 6F706572 		.string	"operator std::integral_constant<bool, true>::value_type"
 59314      61746F72 
 59314      20737464 
 59314      3A3A696E 
 59314      74656772 
 59315              	.LASF1413:
 59316 af51 63686172 		.string	"char32_t"
 59316      33325F74 
 59316      00
 59317              	.LASF1467:
 59318 af5a 72616E64 		.string	"rand"
 59318      00
 59319              	.LASF817:
 59320 af5f 5F4D5F74 		.string	"_M_tail"
 59320      61696C00 
 59321              	.LASF107:
 59322 af67 5F5A4E53 		.string	"_ZNSs7_M_dataEPc"
 59322      73375F4D 
 59322      5F646174 
 59322      61455063 
 59322      00
 59323              	.LASF517:
 59324 af78 5F535F70 		.string	"_S_pointer_helper"
 59324      6F696E74 
 59324      65725F68 
 59324      656C7065 
 59324      7200
 59325              	.LASF1534:
 59326 af8a 68656174 		.string	"heatmap_stamp_t"
 59326      6D61705F 
 59326      7374616D 
 59326      705F7400 
 59327              	.LASF692:
 59328 af9a 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE7crbeginEv"
 59328      53743676 
 59328      6563746F 
 59328      72496A53 
 59328      61496A45 
 59329              	.LASF1185:
 59330 afba 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE20_S_propagate_on_swapEv"
 59330      5F5F676E 
 59330      755F6378 
 59330      7831345F 
 59330      5F616C6C 
 59331              	.LASF476:
 59332 aff7 5F5A4E53 		.string	"_ZNSt13random_deviceaSERKS_"
 59332      74313372 
 59332      616E646F 
 59332      6D5F6465 
 59332      76696365 
 59333              	.LASF289:
GAS LISTING /tmp/ccmMnd7l.s 			page 1534


 59334 b013 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofERKSsm"
 59334      53733136 
 59334      66696E64 
 59334      5F6C6173 
 59334      745F6E6F 
 59335              	.LASF981:
 59336 b032 6F706572 		.string	"operator|"
 59336      61746F72 
 59336      7C00
 59337              	.LASF495:
 59338 b03c 706F696E 		.string	"pointer_traits<double*>"
 59338      7465725F 
 59338      74726169 
 59338      74733C64 
 59338      6F75626C 
 59339              	.LASF296:
 59340 b054 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSs"
 59340      53733763 
 59340      6F6D7061 
 59340      7265456D 
 59340      6D524B53 
 59341              	.LASF257:
 59342 b06a 5F5A4E53 		.string	"_ZNSs4swapERSs"
 59342      73347377 
 59342      61704552 
 59342      537300
 59343              	.LASF748:
 59344 b079 5F5A4E53 		.string	"_ZNSt14default_deleteI9heatmap_tEclEPS0_"
 59344      74313464 
 59344      65666175 
 59344      6C745F64 
 59344      656C6574 
 59345              	.LASF408:
 59346 b0a2 5F5A4E53 		.string	"_ZNSo5flushEv"
 59346      6F35666C 
 59346      75736845 
 59346      7600
 59347              	.LASF1107:
 59348 b0b0 6E65775F 		.string	"new_allocator<char>"
 59348      616C6C6F 
 59348      6361746F 
 59348      723C6368 
 59348      61723E00 
 59349              	.LASF1187:
 59350 b0c4 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_always_equalEv"
 59350      5F5F676E 
 59350      755F6378 
 59350      7831345F 
 59350      5F616C6C 
 59351              	.LASF1099:
 59352 b0fc 5F497465 		.string	"_Iter_less_val"
 59352      725F6C65 
 59352      73735F76 
 59352      616C00
 59353              	.LASF175:
 59354 b10b 5F5A4E53 		.string	"_ZNSs6resizeEm"
 59354      73367265 
GAS LISTING /tmp/ccmMnd7l.s 			page 1535


 59354      73697A65 
 59354      456D00
 59355              	.LASF670:
 59356 b11a 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv"
 59356      7431325F 
 59356      56656374 
 59356      6F725F62 
 59356      61736549 
 59357              	.LASF57:
 59358 b14d 73697A65 		.string	"size_type"
 59358      5F747970 
 59358      6500
 59359              	.LASF834:
 59360 b157 756E6971 		.string	"unique_ptr<heatmap_stamp_t, std::default_delete<heatmap_stamp_t> >"
 59360      75655F70 
 59360      74723C68 
 59360      6561746D 
 59360      61705F73 
 59361              	.LASF1102:
 59362 b19a 5F56616C 		.string	"_Val_less_iter"
 59362      5F6C6573 
 59362      735F6974 
 59362      657200
 59363              	.LASF946:
 59364 b1a9 5F497350 		.string	"_IsPlaceholder"
 59364      6C616365 
 59364      686F6C64 
 59364      657200
 59365              	.LASF894:
 59366 b1b8 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSEOS3_"
 59366      74313075 
 59366      6E697175 
 59366      655F7074 
 59366      72493968 
 59367              	.LASF861:
 59368 b1f4 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI15heatmap_stamp_tELb1EE7_M_headERKS3_"
 59368      7431305F 
 59368      48656164 
 59368      5F626173 
 59368      65494C6D 
 59369              	.LASF739:
 59370 b243 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE4sizeEv"
 59370      53743136 
 59370      696E6974 
 59370      69616C69 
 59370      7A65725F 
 59371              	.LASF962:
 59372 b266 5F535F62 		.string	"_S_base"
 59372      61736500 
 59373              	.LASF1194:
 59374 b26e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEptEv"
 59374      395F5F67 
 59374      6E755F63 
 59374      78783137 
 59374      5F5F6E6F 
 59375              	.LASF818:
 59376 b2a9 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
GAS LISTING /tmp/ccmMnd7l.s 			page 1536


 59376      7431315F 
 59376      5475706C 
 59376      655F696D 
 59376      706C494C 
 59377              	.LASF420:
 59378 b359 5F5F6465 		.string	"__destroy<unsigned int*>"
 59378      7374726F 
 59378      793C756E 
 59378      7369676E 
 59378      65642069 
 59379              	.LASF1162:
 59380 b372 5F5F6E75 		.string	"__numeric_traits_floating<double>"
 59380      6D657269 
 59380      635F7472 
 59380      61697473 
 59380      5F666C6F 
 59381              	.LASF620:
 59382 b394 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE18_M_fill_initializeEmRKd"
 59382      74367665 
 59382      63746F72 
 59382      49645361 
 59382      49644545 
 59383              	.LASF1028:
 59384 b3c2 5F5F756E 		.string	"__uninitialized_default_n_a<double*, long unsigned int, double>"
 59384      696E6974 
 59384      69616C69 
 59384      7A65645F 
 59384      64656661 
 59385              	.LASF1543:
 59386 b402 5F5F6D61 		.string	"__mask"
 59386      736B00
 59387              	.LASF877:
 59388 b409 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_headERS4_"
 59388      7431315F 
 59388      5475706C 
 59388      655F696D 
 59388      706C494C 
 59389              	.LASF1092:
 59390 b45a 6C6F6E67 		.string	"long long int"
 59390      206C6F6E 
 59390      6720696E 
 59390      7400
 59391              	.LASF96:
 59392 b468 5F5A4E53 		.string	"_ZNSs4_Rep9_S_createEmmRKSaIcE"
 59392      73345F52 
 59392      6570395F 
 59392      535F6372 
 59392      65617465 
 59393              	.LASF430:
 59394 b487 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm4294967296ELm1ELm0ELb1ELb1EE6__calcEm"
 59394      74385F5F 
 59394      64657461 
 59394      696C345F 
 59394      4D6F6449 
 59395              	.LASF1629:
 59396 b4c4 5F5F6473 		.string	"__dso_handle"
 59396      6F5F6861 
GAS LISTING /tmp/ccmMnd7l.s 			page 1537


 59396      6E646C65 
 59396      00
 59397              	.LASF847:
 59398 b4d1 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE3getEv"
 59398      53743130 
 59398      756E6971 
 59398      75655F70 
 59398      74724931 
 59399              	.LASF205:
 59400 b514 5F5A4E53 		.string	"_ZNSs6appendEPKcm"
 59400      73366170 
 59400      70656E64 
 59400      45504B63 
 59400      6D00
 59401              	.LASF1310:
 59402 b526 63686172 		.string	"char"
 59402      00
 59403              	.LASF1071:
 59404 b52b 636F7574 		.string	"cout"
 59404      00
 59405              	.LASF1122:
 59406 b530 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 59406      5F5F676E 
 59406      755F6378 
 59406      78336469 
 59406      76457878 
 59407              	.LASF1164:
 59408 b545 5F5F6E75 		.string	"__numeric_traits_integer<long unsigned int>"
 59408      6D657269 
 59408      635F7472 
 59408      61697473 
 59408      5F696E74 
 59409              	.LASF868:
 59410 b571 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEEaSERKS3_"
 59410      7431315F 
 59410      5475706C 
 59410      655F696D 
 59410      706C494C 
 59411              	.LASF370:
 59412 b5b9 73657466 		.string	"setf"
 59412      00
 59413              	.LASF602:
 59414 b5be 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5frontEv"
 59414      74367665 
 59414      63746F72 
 59414      49645361 
 59414      49644545 
 59415              	.LASF448:
 59416 b5db 74656D70 		.string	"tempering_b"
 59416      6572696E 
 59416      675F6200 
 59417              	.LASF450:
 59418 b5e7 74656D70 		.string	"tempering_c"
 59418      6572696E 
 59418      675F6300 
 59419              	.LASF446:
 59420 b5f3 74656D70 		.string	"tempering_d"
GAS LISTING /tmp/ccmMnd7l.s 			page 1538


 59420      6572696E 
 59420      675F6400 
 59421              	.LASF451:
 59422 b5ff 74656D70 		.string	"tempering_l"
 59422      6572696E 
 59422      675F6C00 
 59423              	.LASF682:
 59424 b60b 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5beginEv"
 59424      74367665 
 59424      63746F72 
 59424      496A5361 
 59424      496A4545 
 59425              	.LASF1079:
 59426 b628 5F5F7468 		.string	"__throw_bad_alloc"
 59426      726F775F 
 59426      6261645F 
 59426      616C6C6F 
 59426      6300
 59427              	.LASF447:
 59428 b63a 74656D70 		.string	"tempering_s"
 59428      6572696E 
 59428      675F7300 
 59429              	.LASF449:
 59430 b646 74656D70 		.string	"tempering_t"
 59430      6572696E 
 59430      675F7400 
 59431              	.LASF445:
 59432 b652 74656D70 		.string	"tempering_u"
 59432      6572696E 
 59432      675F7500 
 59433              	.LASF1518:
 59434 b65e 69737763 		.string	"iswctype"
 59434      74797065 
 59434      00
 59435              	.LASF724:
 59436 b667 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj"
 59436      74367665 
 59436      63746F72 
 59436      496A5361 
 59436      496A4545 
 59437              	.LASF60:
 59438 b695 616C6C6F 		.string	"allocator"
 59438      6361746F 
 59438      7200
 59439              	.LASF443:
 59440 b69f 72657375 		.string	"result_type"
 59440      6C745F74 
 59440      79706500 
 59441              	.LASF1355:
 59442 b6ab 746D5F67 		.string	"tm_gmtoff"
 59442      6D746F66 
 59442      6600
 59443              	.LASF810:
 59444 b6b5 5F554865 		.string	"_UHead"
 59444      616400
 59445              	.LASF1444:
 59446 b6bc 5F41746F 		.string	"_Atomic_word"
GAS LISTING /tmp/ccmMnd7l.s 			page 1539


 59446      6D69635F 
 59446      776F7264 
 59446      00
 59447              	.LASF530:
 59448 b6c9 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE48_S_propagate_on_container_copy_assignment_helperEz"
 59448      74313661 
 59448      6C6C6F63 
 59448      61746F72 
 59448      5F747261 
 59449              	.LASF1610:
 59450 b71c 67656E70 		.string	"genpoints"
 59450      6F696E74 
 59450      7300
 59451              	.LASF1338:
 59452 b726 76777363 		.string	"vwscanf"
 59452      616E6600 
 59453              	.LASF1171:
 59454 b72e 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv"
 59454      5F5F676E 
 59454      755F6378 
 59454      7831336E 
 59454      65775F61 
 59455              	.LASF841:
 59456 b75c 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSEOS3_"
 59456      74313075 
 59456      6E697175 
 59456      655F7074 
 59456      72493135 
 59457              	.LASF115:
 59458 b79f 5F5A4E53 		.string	"_ZNSs7_M_leakEv"
 59458      73375F4D 
 59458      5F6C6561 
 59458      6B457600 
 59459              	.LASF51:
 59460 b7af 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 59460      74313163 
 59460      6861725F 
 59460      74726169 
 59460      74734963 
 59461              	.LASF47:
 59462 b7d9 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 59462      74313163 
 59462      6861725F 
 59462      74726169 
 59462      74734963 
 59463              	.LASF262:
 59464 b801 6765745F 		.string	"get_allocator"
 59464      616C6C6F 
 59464      6361746F 
 59464      7200
 59465              	.LASF1016:
 59466 b80f 5F4F7574 		.string	"_OutputIterator"
 59466      70757449 
 59466      74657261 
 59466      746F7200 
 59467              	.LASF597:
 59468 b81f 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEEixEm"
GAS LISTING /tmp/ccmMnd7l.s 			page 1540


 59468      53743676 
 59468      6563746F 
 59468      72496453 
 59468      61496445 
 59469              	.LASF907:
 59470 b839 5F486561 		.string	"_Head_base<1ul, std::default_delete<heatmap_t>, true>"
 59470      645F6261 
 59470      73653C31 
 59470      756C2C20 
 59470      7374643A 
 59471              	.LASF1402:
 59472 b86f 696E745F 		.string	"int_fast32_t"
 59472      66617374 
 59472      33325F74 
 59472      00
 59473              	.LASF961:
 59474 b87c 69746572 		.string	"iterator_type"
 59474      61746F72 
 59474      5F747970 
 59474      6500
 59475              	.LASF1050:
 59476 b88a 5F5F6865 		.string	"__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__o
 59476      61705F73 
 59476      656C6563 
 59476      743C5F5F 
 59476      676E755F 
 59477              	.LASF734:
 59478 b8f8 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 59478      74367665 
 59478      63746F72 
 59478      496A5361 
 59478      496A4545 
 59479              	.LASF436:
 59480 b93e 5F5F6D6F 		.string	"__mod<long unsigned int, 624ul, 1ul, 0ul>"
 59480      643C6C6F 
 59480      6E672075 
 59480      6E736967 
 59480      6E656420 
 59481              	.LASF174:
 59482 b968 5F5A4E53 		.string	"_ZNSs6resizeEmc"
 59482      73367265 
 59482      73697A65 
 59482      456D6300 
 59483              	.LASF711:
 59484 b978 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4dataEv"
 59484      74367665 
 59484      63746F72 
 59484      496A5361 
 59484      496A4545 
 59485              	.LASF1562:
 59486 b994 5F5F746D 		.string	"__tmp"
 59486      7000
 59487              	.LASF1538:
 59488 b99a 5F5F7661 		.string	"__val"
 59488      6C00
 59489              	.LASF1397:
 59490 b9a0 75696E74 		.string	"uint_least16_t"
GAS LISTING /tmp/ccmMnd7l.s 			page 1541


 59490      5F6C6561 
 59490      73743136 
 59490      5F7400
 59491              	.LASF1155:
 59492 b9af 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIEl"
 59492      5F5F676E 
 59492      755F6378 
 59492      7831375F 
 59492      5F6E6F72 
 59493              	.LASF750:
 59494 b9db 5F5A4E53 		.string	"_ZNSt14default_deleteI15heatmap_stamp_tEclEPS0_"
 59494      74313464 
 59494      65666175 
 59494      6C745F64 
 59494      656C6574 
 59495              	.LASF191:
 59496 ba0b 66726F6E 		.string	"front"
 59496      7400
 59497              	.LASF873:
 59498 ba11 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP15heatmap_stamp_tLb0EE7_M_headERS2_"
 59498      7431305F 
 59498      48656164 
 59498      5F626173 
 59498      65494C6D 
 59499              	.LASF272:
 59500 ba4c 5F5A4E4B 		.string	"_ZNKSs5rfindEcm"
 59500      53733572 
 59500      66696E64 
 59500      45636D00 
 59501              	.LASF218:
 59502 ba5c 696E7365 		.string	"insert"
 59502      727400
 59503              	.LASF870:
 59504 ba63 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_swapERS3_"
 59504      7431315F 
 59504      5475706C 
 59504      655F696D 
 59504      706C494C 
 59505              	.LASF825:
 59506 bab0 5F426F75 		.string	"_BoundArgs"
 59506      6E644172 
 59506      677300
 59507              	.LASF857:
 59508 babb 5F547570 		.string	"_Tuple_impl<2ul>"
 59508      6C655F69 
 59508      6D706C3C 
 59508      32756C3E 
 59508      00
 59509              	.LASF1035:
 59510 bacc 5F5F636F 		.string	"__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<double*, std::vector<double> >
 59510      70795F6D 
 59510      6F76655F 
 59510      6261636B 
 59510      77617264 
 59511              	.LASF850:
 59512 bb65 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE11get_deleterEv"
 59512      53743130 
GAS LISTING /tmp/ccmMnd7l.s 			page 1542


 59512      756E6971 
 59512      75655F70 
 59512      74724931 
 59513              	.LASF260:
 59514 bbb1 64617461 		.string	"data"
 59514      00
 59515              	.LASF17:
 59516 bbb6 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 59516      53743135 
 59516      5F5F6578 
 59516      63657074 
 59516      696F6E5F 
 59517              	.LASF1221:
 59518 bbf5 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv"
 59518      5F5F676E 
 59518      755F6378 
 59518      7831336E 
 59518      65775F61 
 59519              	.LASF796:
 59520 bc23 5F496E64 		.string	"_Index_tuple<0ul>"
 59520      65785F74 
 59520      75706C65 
 59520      3C30756C 
 59520      3E00
 59521              	.LASF1325:
 59522 bc35 6D627274 		.string	"mbrtowc"
 59522      6F776300 
 59523              	.LASF283:
 59524 bc3d 66696E64 		.string	"find_first_not_of"
 59524      5F666972 
 59524      73745F6E 
 59524      6F745F6F 
 59524      6600
 59525              	.LASF1602:
 59526 bc4f 5F4E756D 		.string	"_Num"
 59526      00
 59527              	.LASF838:
 59528 bc54 64656C65 		.string	"deleter_type"
 59528      7465725F 
 59528      74797065 
 59528      00
 59529              	.LASF523:
 59530 bc61 5F535F63 		.string	"_S_const_void_pointer_helper"
 59530      6F6E7374 
 59530      5F766F69 
 59530      645F706F 
 59530      696E7465 
 59531              	.LASF1420:
 59532 bc7e 6D6F6E5F 		.string	"mon_decimal_point"
 59532      64656369 
 59532      6D616C5F 
 59532      706F696E 
 59532      7400
 59533              	.LASF133:
 59534 bc90 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_"
 59534      7331335F 
 59534      535F636F 
GAS LISTING /tmp/ccmMnd7l.s 			page 1543


 59534      70795F63 
 59534      68617273 
 59535              	.LASF418:
 59536 bcd1 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE13_M_widen_initEv"
 59536      53743563 
 59536      74797065 
 59536      49634531 
 59536      335F4D5F 
 59537              	.LASF1105:
 59538 bcf2 5F5F7661 		.string	"__val_comp_iter"
 59538      6C5F636F 
 59538      6D705F69 
 59538      74657200 
 59539              	.LASF815:
 59540 bd02 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 59540      7431315F 
 59540      5475706C 
 59540      655F696D 
 59540      706C494C 
 59541              	.LASF32:
 59542 bdb2 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 59542      74313163 
 59542      6861725F 
 59542      74726169 
 59542      74734963 
 59543              	.LASF1282:
 59544 bdd2 5F636861 		.string	"_chain"
 59544      696E00
 59545              	.LASF1300:
 59546 bdd9 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 59546      64656620 
 59546      5F5F7661 
 59546      5F6C6973 
 59546      745F7461 
 59547              	.LASF619:
 59548 bdfd 5F4D5F66 		.string	"_M_fill_initialize"
 59548      696C6C5F 
 59548      696E6974 
 59548      69616C69 
 59548      7A6500
 59549              	.LASF1453:
 59550 be10 5F5F636F 		.string	"__compar_fn_t"
 59550      6D706172 
 59550      5F666E5F 
 59550      7400
 59551              	.LASF589:
 59552 be1e 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE8max_sizeEv"
 59552      53743676 
 59552      6563746F 
 59552      72496453 
 59552      61496445 
 59553              	.LASF1096:
 59554 be3f 6F706572 		.string	"operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__norm
 59554      61746F72 
 59554      28293C5F 
 59554      5F676E75 
 59554      5F637878 
GAS LISTING /tmp/ccmMnd7l.s 			page 1544


 59555              	.LASF1037:
 59556 bec5 5F5F6669 		.string	"__final_insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu
 59556      6E616C5F 
 59556      696E7365 
 59556      7274696F 
 59556      6E5F736F 
 59557              	.LASF407:
 59558 bf3c 666C7573 		.string	"flush"
 59558      6800
 59559              	.LASF1489:
 59560 bf42 66706F73 		.string	"fpos_t"
 59560      5F7400
 59561              	.LASF1404:
 59562 bf49 75696E74 		.string	"uint_fast8_t"
 59562      5F666173 
 59562      74385F74 
 59562      00
 59563              	.LASF1124:
 59564 bf56 5F4D5F63 		.string	"_M_current"
 59564      75727265 
 59564      6E7400
 59565              	.LASF772:
 59566 bf61 5F5A4E53 		.string	"_ZNSt26_Maybe_wrap_member_pointerISt24uniform_int_distributionIiEE9__do_wrapERKS1_"
 59566      7432365F 
 59566      4D617962 
 59566      655F7772 
 59566      61705F6D 
 59567              	.LASF285:
 59568 bfb4 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcmm"
 59568      53733137 
 59568      66696E64 
 59568      5F666972 
 59568      73745F6E 
 59569              	.LASF1048:
 59570 bfd4 5F5F6D61 		.string	"__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops
 59570      6B655F68 
 59570      6561703C 
 59570      5F5F676E 
 59570      755F6378 
 59571              	.LASF497:
 59572 c040 706F696E 		.string	"pointer_to"
 59572      7465725F 
 59572      746F00
 59573              	.LASF888:
 59574 c04b 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEE4swapERS4_"
 59574      74357475 
 59574      706C6549 
 59574      49503135 
 59574      68656174 
 59575              	.LASF200:
 59576 c08e 5F5A4E53 		.string	"_ZNSspLEc"
 59576      73704C45 
 59576      6300
 59577              	.LASF998:
 59578 c098 5F5F6765 		.string	"__get_helper<1ul, std::default_delete<heatmap_stamp_t> >"
 59578      745F6865 
 59578      6C706572 
GAS LISTING /tmp/ccmMnd7l.s 			page 1545


 59578      3C31756C 
 59578      2C207374 
 59579              	.LASF1557:
 59580 c0d1 5F5F6974 		.string	"__it1"
 59580      3100
 59581              	.LASF1558:
 59582 c0d7 5F5F6974 		.string	"__it2"
 59582      3200
 59583              	.LASF727:
 59584 c0dd 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj"
 59584      74367665 
 59584      63746F72 
 59584      496A5361 
 59584      496A4545 
 59585              	.LASF1613:
 59586 c12d 6D617876 		.string	"maxval"
 59586      616C00
 59587              	.LASF1303:
 59588 c134 6F766572 		.string	"overflow_arg_area"
 59588      666C6F77 
 59588      5F617267 
 59588      5F617265 
 59588      6100
 59589              	.LASF1304:
 59590 c146 7265675F 		.string	"reg_save_area"
 59590      73617665 
 59590      5F617265 
 59590      6100
 59591              	.LASF280:
 59592 c154 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcmm"
 59592      53733132 
 59592      66696E64 
 59592      5F6C6173 
 59592      745F6F66 
 59593              	.LASF261:
 59594 c16f 5F5A4E4B 		.string	"_ZNKSs4dataEv"
 59594      53733464 
 59594      61746145 
 59594      7600
 59595              	.LASF250:
 59596 c17d 5F4D5F72 		.string	"_M_replace_safe"
 59596      65706C61 
 59596      63655F73 
 59596      61666500 
 59597              	.LASF1666:
 59598 c18d 646F5F77 		.string	"do_widen"
 59598      6964656E 
 59598      00
 59599              	.LASF957:
 59600 c196 5F5F6974 		.string	"__iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocato
 59600      65726174 
 59600      6F725F74 
 59600      72616974 
 59600      733C5F5F 
 59601              	.LASF1480:
 59602 c204 73747274 		.string	"strtold"
 59602      6F6C6400 
GAS LISTING /tmp/ccmMnd7l.s 			page 1546


 59603              	.LASF1561:
 59604 c20c 5F5F6E65 		.string	"__next"
 59604      787400
 59605              	.LASF1018:
 59606 c213 69746572 		.string	"iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__norma
 59606      5F737761 
 59606      703C5F5F 
 59606      676E755F 
 59606      6378783A 
 59607              	.LASF1477:
 59608 c298 73747274 		.string	"strtoll"
 59608      6F6C6C00 
 59609              	.LASF540:
 59610 c2a0 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_"
 59610      74313661 
 59610      6C6C6F63 
 59610      61746F72 
 59610      5F747261 
 59611              	.LASF1575:
 59612 c2ce 5F5F7061 		.string	"__parent"
 59612      72656E74 
 59612      00
 59613              	.LASF1320:
 59614 c2d7 66777072 		.string	"fwprintf"
 59614      696E7466 
 59614      00
 59615              	.LASF680:
 59616 c2e0 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6assignEmRKj"
 59616      74367665 
 59616      63746F72 
 59616      496A5361 
 59616      496A4545 
 59617              	.LASF355:
 59618 c301 5F535F67 		.string	"_S_goodbit"
 59618      6F6F6462 
 59618      697400
 59619              	.LASF1619:
 59620 c30c 6D61696E 		.string	"main"
 59620      00
 59621              	.LASF441:
 59622 c311 73686966 		.string	"shift_size"
 59622      745F7369 
 59622      7A6500
 59623              	.LASF11:
 59624 c31c 7E657863 		.string	"~exception_ptr"
 59624      65707469 
 59624      6F6E5F70 
 59624      747200
 59625              	.LASF1176:
 59626 c32b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE17_S_select_on_copyERKS1_"
 59626      5F5F676E 
 59626      755F6378 
 59626      7831345F 
 59626      5F616C6C 
 59627              	.LASF937:
 59628 c369 7475706C 		.string	"tuple<heatmap_t*&, std::default_delete<heatmap_t>, void>"
 59628      653C6865 
GAS LISTING /tmp/ccmMnd7l.s 			page 1547


 59628      61746D61 
 59628      705F742A 
 59628      262C2073 
 59629              	.LASF470:
 59630 c3a2 7E72616E 		.string	"~random_device"
 59630      646F6D5F 
 59630      64657669 
 59630      636500
 59631              	.LASF1395:
 59632 c3b1 696E745F 		.string	"int_least64_t"
 59632      6C656173 
 59632      7436345F 
 59632      7400
 59633              	.LASF1425:
 59634 c3bf 696E745F 		.string	"int_frac_digits"
 59634      66726163 
 59634      5F646967 
 59634      69747300 
 59635              	.LASF1063:
 59636 c3cf 656E646C 		.string	"endl<char, std::char_traits<char> >"
 59636      3C636861 
 59636      722C2073 
 59636      74643A3A 
 59636      63686172 
 59637              	.LASF933:
 59638 c3f3 7475706C 		.string	"tuple<heatmap_t*, std::default_delete<heatmap_t> >"
 59638      653C6865 
 59638      61746D61 
 59638      705F742A 
 59638      2C207374 
 59639              	.LASF1156:
 59640 c426 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl"
 59640      395F5F67 
 59640      6E755F63 
 59640      78783137 
 59640      5F5F6E6F 
 59641              	.LASF414:
 59642 c453 77696465 		.string	"widen"
 59642      6E00
 59643              	.LASF722:
 59644 c459 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4swapERS1_"
 59644      74367665 
 59644      63746F72 
 59644      496A5361 
 59644      496A4545 
 59645              	.LASF307:
 59646 c478 696E6974 		.string	"initializer_list<char>"
 59646      69616C69 
 59646      7A65725F 
 59646      6C697374 
 59646      3C636861 
 59647              	.LASF954:
 59648 c48f 5F5F6164 		.string	"__add_ref<std::default_delete<heatmap_t> >"
 59648      645F7265 
 59648      663C7374 
 59648      643A3A64 
 59648      65666175 
GAS LISTING /tmp/ccmMnd7l.s 			page 1548


 59649              	.LASF1512:
 59650 c4ba 73657476 		.string	"setvbuf"
 59650      62756600 
 59651              	.LASF1291:
 59652 c4c2 5F5F7061 		.string	"__pad1"
 59652      643100
 59653              	.LASF345:
 59654 c4c9 5F496F73 		.string	"_Ios_Fmtflags"
 59654      5F466D74 
 59654      666C6167 
 59654      7300
 59655              	.LASF1139:
 59656 c4d7 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIEl"
 59656      5F5F676E 
 59656      755F6378 
 59656      7831375F 
 59656      5F6E6F72 
 59657              	.LASF999:
 59658 c502 6765743C 		.string	"get<1ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 59658      31756C2C 
 59658      20686561 
 59658      746D6170 
 59658      5F737461 
 59659              	.LASF415:
 59660 c544 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 59660      53743563 
 59660      74797065 
 59660      49634535 
 59660      77696465 
 59661              	.LASF900:
 59662 c55c 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE11get_deleterEv"
 59662      53743130 
 59662      756E6971 
 59662      75655F70 
 59662      74724939 
 59663              	.LASF826:
 59664 c5a1 7475706C 		.string	"tuple<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 59664      653C7374 
 59664      643A3A6D 
 59664      65727365 
 59664      6E6E655F 
 59665              	.LASF1184:
 59666 c650 5F535F70 		.string	"_S_propagate_on_swap"
 59666      726F7061 
 59666      67617465 
 59666      5F6F6E5F 
 59666      73776170 
 59667              	.LASF1433:
 59668 c665 696E745F 		.string	"int_p_cs_precedes"
 59668      705F6373 
 59668      5F707265 
 59668      63656465 
 59668      7300
 59669              	.LASF79:
 59670 c677 5F535F65 		.string	"_S_empty_rep_storage"
 59670      6D707479 
 59670      5F726570 
GAS LISTING /tmp/ccmMnd7l.s 			page 1549


 59670      5F73746F 
 59670      72616765 
 59671              	.LASF503:
 59672 c68c 5F497343 		.string	"_IsConst"
 59672      6F6E7374 
 59672      00
 59673              	.LASF1374:
 59674 c695 77707269 		.string	"wprintf"
 59674      6E746600 
 59675              	.LASF1268:
 59676 c69d 5F494F5F 		.string	"_IO_FILE"
 59676      46494C45 
 59676      00
 59677              	.LASF1237:
 59678 c6a6 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEppEi"
 59678      5F5F676E 
 59678      755F6378 
 59678      7831375F 
 59678      5F6E6F72 
 59679              	.LASF1236:
 59680 c6e0 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEppEv"
 59680      5F5F676E 
 59680      755F6378 
 59680      7831375F 
 59680      5F6E6F72 
 59681              	.LASF54:
 59682 c71a 70747264 		.string	"ptrdiff_t"
 59682      6966665F 
 59682      7400
 59683              	.LASF1160:
 59684 c724 5F5F6469 		.string	"__digits10"
 59684      67697473 
 59684      313000
 59685              	.LASF743:
 59686 c72f 5F497465 		.string	"_Iterator"
 59686      7261746F 
 59686      7200
 59687              	.LASF1323:
 59688 c739 67657477 		.string	"getwchar"
 59688      63686172 
 59688      00
 59689              	.LASF908:
 59690 c742 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9heatmap_tELb1EE7_M_headERS3_"
 59690      7431305F 
 59690      48656164 
 59690      5F626173 
 59690      65494C6D 
 59691              	.LASF1301:
 59692 c789 67705F6F 		.string	"gp_offset"
 59692      66667365 
 59692      7400
 59693              	.LASF166:
 59694 c793 6372656E 		.string	"crend"
 59694      6400
 59695              	.LASF1255:
 59696 c799 5F5F6578 		.string	"__exchange_and_add_single"
 59696      6368616E 
GAS LISTING /tmp/ccmMnd7l.s 			page 1550


 59696      67655F61 
 59696      6E645F61 
 59696      64645F73 
 59697              	.LASF1017:
 59698 c7b3 73776170 		.string	"swap<double>"
 59698      3C646F75 
 59698      626C653E 
 59698      00
 59699              	.LASF316:
 59700 c7c0 5F5F7573 		.string	"__uses_alloc0"
 59700      65735F61 
 59700      6C6C6F63 
 59700      3000
 59701              	.LASF615:
 59702 c7ce 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5eraseEN9__gnu_cxx17__normal_iteratorIPKdS1_EE"
 59702      74367665 
 59702      63746F72 
 59702      49645361 
 59702      49644545 
 59703              	.LASF1493:
 59704 c811 66657272 		.string	"ferror"
 59704      6F7200
 59705              	.LASF629:
 59706 c818 5F4D5F73 		.string	"_M_shrink_to_fit"
 59706      6872696E 
 59706      6B5F746F 
 59706      5F666974 
 59706      00
 59707              	.LASF49:
 59708 c829 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 59708      74313163 
 59708      6861725F 
 59708      74726169 
 59708      74734963 
 59709              	.LASF1119:
 59710 c850 5F5F6D61 		.string	"__max"
 59710      7800
 59711              	.LASF1032:
 59712 c856 5F424931 		.string	"_BI1"
 59712      00
 59713              	.LASF487:
 59714 c85b 6D743139 		.string	"mt19937"
 59714      39333700 
 59715              	.LASF1333:
 59716 c863 76667770 		.string	"vfwprintf"
 59716      72696E74 
 59716      6600
 59717              	.LASF1227:
 59718 c86d 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE27_S_propagate_on_copy_assignEv"
 59718      5F5F676E 
 59718      755F6378 
 59718      7831345F 
 59718      5F616C6C 
 59719              	.LASF334:
 59720 c8b1 5F535F73 		.string	"_S_scientific"
 59720      6369656E 
 59720      74696669 
GAS LISTING /tmp/ccmMnd7l.s 			page 1551


 59720      6300
 59721              	.LASF966:
 59722 c8bf 5F497465 		.string	"_Iter_base<double*, false>"
 59722      725F6261 
 59722      73653C64 
 59722      6F75626C 
 59722      652A2C20 
 59723              	.LASF1386:
 59724 c8da 696E7433 		.string	"int32_t"
 59724      325F7400 
 59725              	.LASF790:
 59726 c8e2 5F486173 		.string	"_Has_result_type"
 59726      5F726573 
 59726      756C745F 
 59726      74797065 
 59726      00
 59727              	.LASF975:
 59728 c8f3 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 59728      635F696F 
 59728      733C6368 
 59728      61722C20 
 59728      7374643A 
 59729              	.LASF137:
 59730 c91c 5F5A4E53 		.string	"_ZNSs10_S_compareEmm"
 59730      7331305F 
 59730      535F636F 
 59730      6D706172 
 59730      65456D6D 
 59731              	.LASF35:
 59732 c931 6C656E67 		.string	"length"
 59732      746800
 59733              	.LASF1400:
 59734 c938 696E745F 		.string	"int_fast8_t"
 59734      66617374 
 59734      385F7400 
 59735              	.LASF1523:
 59736 c944 646F7562 		.string	"double_t"
 59736      6C655F74 
 59736      00
 59737              	.LASF1378:
 59738 c94d 77637372 		.string	"wcsrchr"
 59738      63687200 
 59739              	.LASF1317:
 59740 c955 66707574 		.string	"fputwc"
 59740      776300
 59741              	.LASF76:
 59742 c95c 5F526570 		.string	"_Rep"
 59742      00
 59743              	.LASF1384:
 59744 c961 696E7438 		.string	"int8_t"
 59744      5F7400
 59745              	.LASF1318:
 59746 c968 66707574 		.string	"fputws"
 59746      777300
 59747              	.LASF1659:
 59748 c96f 5F5F6378 		.string	"__cxa_atexit"
 59748      615F6174 
GAS LISTING /tmp/ccmMnd7l.s 			page 1552


 59748      65786974 
 59748      00
 59749              	.LASF532:
 59750 c97c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE48_S_propagate_on_container_move_assignment_helperEz"
 59750      74313661 
 59750      6C6C6F63 
 59750      61746F72 
 59750      5F747261 
 59751              	.LASF956:
 59752 c9cf 69746572 		.string	"iterator_traits<char*>"
 59752      61746F72 
 59752      5F747261 
 59752      6974733C 
 59752      63686172 
 59753              	.LASF862:
 59754 c9e6 5F486561 		.string	"_Head_base<std::default_delete<heatmap_stamp_t>, void>"
 59754      645F6261 
 59754      73653C73 
 59754      74643A3A 
 59754      64656661 
 59755              	.LASF146:
 59756 ca1d 5F5A4E53 		.string	"_ZNSsaSEc"
 59756      73615345 
 59756      6300
 59757              	.LASF755:
 59758 ca27 756E6966 		.string	"uniform_int_distribution"
 59758      6F726D5F 
 59758      696E745F 
 59758      64697374 
 59758      72696275 
 59759              	.LASF885:
 59760 ca40 7475706C 		.string	"tuple<heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 59760      653C6865 
 59760      61746D61 
 59760      705F7374 
 59760      616D705F 
 59761              	.LASF545:
 59762 ca7f 5F5F616C 		.string	"__alloctr_rebind<std::allocator<double>, double, true>"
 59762      6C6F6374 
 59762      725F7265 
 59762      62696E64 
 59762      3C737464 
 59763              	.LASF592:
 59764 cab6 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE13shrink_to_fitEv"
 59764      74367665 
 59764      63746F72 
 59764      49645361 
 59764      49644545 
 59765              	.LASF656:
 59766 cadc 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE28_S_const_void_pointer_helperEz"
 59766      74313661 
 59766      6C6C6F63 
 59766      61746F72 
 59766      5F747261 
 59767              	.LASF1305:
 59768 cb1b 77696E74 		.string	"wint_t"
 59768      5F7400
GAS LISTING /tmp/ccmMnd7l.s 			page 1553


 59769              	.LASF1517:
 59770 cb22 77637472 		.string	"wctrans_t"
 59770      616E735F 
 59770      7400
 59771              	.LASF665:
 59772 cb2c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_"
 59772      74313661 
 59772      6C6C6F63 
 59772      61746F72 
 59772      5F747261 
 59773              	.LASF607:
 59774 cb5a 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4dataEv"
 59774      53743676 
 59774      6563746F 
 59774      72496453 
 59774      61496445 
 59775              	.LASF1100:
 59776 cb77 6F706572 		.string	"operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, double>"
 59776      61746F72 
 59776      28293C5F 
 59776      5F676E75 
 59776      5F637878 
 59777              	.LASF212:
 59778 cbc7 5F5A4E53 		.string	"_ZNSs6assignEOSs"
 59778      73366173 
 59778      7369676E 
 59778      454F5373 
 59778      00
 59779              	.LASF909:
 59780 cbd8 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9heatmap_tELb1EE7_M_headERKS3_"
 59780      7431305F 
 59780      48656164 
 59780      5F626173 
 59780      65494C6D 
 59781              	.LASF1087:
 59782 cc20 756E7369 		.string	"unsigned int"
 59782      676E6564 
 59782      20696E74 
 59782      00
 59783              	.LASF71:
 59784 cc2d 72657665 		.string	"reverse_iterator"
 59784      7273655F 
 59784      69746572 
 59784      61746F72 
 59784      00
 59785              	.LASF594:
 59786 cc3e 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5emptyEv"
 59786      53743676 
 59786      6563746F 
 59786      72496453 
 59786      61496445 
 59787              	.LASF419:
 59788 cc5c 5F446573 		.string	"_Destroy_aux<true>"
 59788      74726F79 
 59788      5F617578 
 59788      3C747275 
 59788      653E00
GAS LISTING /tmp/ccmMnd7l.s 			page 1554


 59789              	.LASF1459:
 59790 cc6f 62736561 		.string	"bsearch"
 59790      72636800 
 59791              	.LASF480:
 59792 cc77 5F5A4E53 		.string	"_ZNSt13random_device14_M_init_pretr1ERKSs"
 59792      74313372 
 59792      616E646F 
 59792      6D5F6465 
 59792      76696365 
 59793              	.LASF144:
 59794 cca1 5F5A4E53 		.string	"_ZNSsaSERKSs"
 59794      73615345 
 59794      524B5373 
 59794      00
 59795              	.LASF1606:
 59796 ccae 5F5A3130 		.string	"_Z10gimme_timev"
 59796      67696D6D 
 59796      655F7469 
 59796      6D657600 
 59797              		.hidden	DW.ref.__gxx_personality_v0
 59798              		.weak	DW.ref.__gxx_personality_v0
 59799              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 59800              		.align 8
 59801              		.type	DW.ref.__gxx_personality_v0, @object
 59802              		.size	DW.ref.__gxx_personality_v0, 8
 59803              	DW.ref.__gxx_personality_v0:
 59804 0000 00000000 		.quad	__gxx_personality_v0
 59804      00000000 
 59805              		.hidden	__dso_handle
 59806              		.ident	"GCC: (GNU) 4.9.2"
 59807              		.section	.note.GNU-stack,"",@progbits
