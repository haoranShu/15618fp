GAS LISTING /tmp/ccJUMvuF.s 			page 1


   1              		.file	"rendering.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
   5              		.align 2
   6              	.LCOLDB0:
   7              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
   8              	.LHOTB0:
   9              		.align 2
  10              		.p2align 4,,15
  11              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  12              	.Ltext_cold0:
  13              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  14              		.weak	_ZNKSt5ctypeIcE8do_widenEc
  15              		.type	_ZNKSt5ctypeIcE8do_widenEc, @function
  16              	_ZNKSt5ctypeIcE8do_widenEc:
  17              	.LFB1390:
  18              		.file 1 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Locale support -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** /** @file bits/locale_facets.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
GAS LISTING /tmp/ccJUMvuF.s 			page 2


  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <cctype>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ctype_base.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <iosfwd>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <streambuf>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/type_traits.h>
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** {
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** #endif
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // generic definition.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _Tp>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Explicit specializations for required types.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     void
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const __c_locale&) throw();
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // partially-specialized.
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     struct __pad
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static void
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
GAS LISTING /tmp/ccJUMvuF.s 			page 3


  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // only with __gsize != 0.
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _CharT*
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This template permits specializing facet output code for
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     inline
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     _OutIter
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	*__s = __ws[__j];
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       return __s;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions.
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT char_type;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
GAS LISTING /tmp/ccJUMvuF.s 			page 4


 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
GAS LISTING /tmp/ccJUMvuF.s 			page 5


 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
GAS LISTING /tmp/ccJUMvuF.s 			page 6


 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__c); }
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
GAS LISTING /tmp/ccJUMvuF.s 			page 7


 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  as the input.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
GAS LISTING /tmp/ccJUMvuF.s 			page 8


 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccJUMvuF.s 			page 9


 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
GAS LISTING /tmp/ccJUMvuF.s 			page 10


 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char_type
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  is returned instead.
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
GAS LISTING /tmp/ccJUMvuF.s 			page 11


 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted char.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  streams for many I/O operations.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  __ctype_abstract_base.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef _CharT			char_type;
GAS LISTING /tmp/ccJUMvuF.s 			page 12


 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id			id;
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    protected:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual bool
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		  const char_type* __hi) const;
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char*
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     };
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<typename _CharT>
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   /**
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  @ingroup locales
GAS LISTING /tmp/ccJUMvuF.s 			page 13


 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****    *  optimizations as well.
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   */
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****   template<>
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     {
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Types:
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       typedef char		char_type;
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // Data Members:
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       bool			_M_del;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_toupper;
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       __to_type			_M_tolower;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*		_M_table;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 						// 2 memcpy can't be used
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     public:
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The facet id for ctype<char>
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static locale::id        id;
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *               Else classic_table() is used.
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       explicit
GAS LISTING /tmp/ccJUMvuF.s 			page 14


 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    size_t __refs = 0);
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Test char classification.
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline bool
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(mask __m, char __c) const;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Return a mask array.
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the char array.
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  which is(m,char) is true.
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       inline const char*
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
GAS LISTING /tmp/ccJUMvuF.s 			page 15


 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type __c) const
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type __c) const
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
GAS LISTING /tmp/ccJUMvuF.s 			page 16


 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char_type
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(char __c) const
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char array
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation.  For an underived ctype<char>
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char*
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok == 1)
GAS LISTING /tmp/ccJUMvuF.s 			page 17


 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_widen_ok)
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_widen_init();
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__lo, __hi, __to);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts the char to char using the simplest
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  returned instead.  For an underived ctype<char> facet, @a c
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  will be returned unchanged.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(c).
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_narrow() must always return the same result for the same input.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       char
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_narrow[static_cast<unsigned char>(__c)])
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  return _M_narrow[static_cast<unsigned char>(__c)];
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	const char __t = do_narrow(__c, __dfault);
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__t != __dfault)
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow[static_cast<unsigned char>(__c)] = __t;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return __t;
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Narrow char array
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function converts each char in the input to char using the
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  destination array.  For any char in the input that cannot be
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  For an underived ctype<char>
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  facet, the argument will be copied unchanged.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_narrow(lo, hi,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  dfault, to).  do_narrow() must always return the same result for the
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
GAS LISTING /tmp/ccJUMvuF.s 			page 18


 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const char_type*
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	     char __dfault, char* __to) const
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       {
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (__builtin_expect(_M_narrow_ok == 1, true))
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  {
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    __builtin_memcpy(__to, __lo, __hi - __lo);
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	    return __hi;
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  }
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (!_M_narrow_ok)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	  _M_narrow_init();
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_narrow(__lo, __hi, __dfault, __to);
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       }
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       // DR 695. ctype<char>::classic_table() not accessible.
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the mask table provided to the constructor, or
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// the default from classic_table() if none was provided.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       const mask*
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       table() const throw()
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return _M_table; }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /// Returns a pointer to the C locale mask table.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       static const mask*
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       classic_table() throw();
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****     protected:
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Destructor.
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This function deletes table() if @a del was true in the
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  constructor.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       ~ctype();
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to uppercase if
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type __c) const;
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
GAS LISTING /tmp/ccJUMvuF.s 			page 19


1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercase if possible.  Other chars remain untouched.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char argument to lowercase if
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type __c) const;
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts each char in the range [lo,hi) to
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercase if possible.  Other chars remain untouched.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  the same input.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  @a __hi.
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual const char_type*
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       /**
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @brief  Widen char
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  This virtual function converts the char to char using the simplest
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  argument will be returned unchanged.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
GAS LISTING /tmp/ccJUMvuF.s 			page 20


1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  same input.
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  codecvt for that.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @param __c  The char to convert.
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****        *  @return  The converted character.
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       */
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       virtual char_type
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       do_widen(char __c) const
  19              		.loc 1 1075 0
  20              		.cfi_startproc
  21              	.LVL0:
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h ****       { return __c; }
  22              		.loc 1 1076 0
  23 0000 89F0     		movl	%esi, %eax
  24 0002 C3       		ret
  25              		.cfi_endproc
  26              	.LFE1390:
  27              		.size	_ZNKSt5ctypeIcE8do_widenEc, .-_ZNKSt5ctypeIcE8do_widenEc
  28              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
  29              	.LCOLDE0:
  30              		.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
  31              	.LHOTE0:
  32              		.section	.text.unlikely,"ax",@progbits
  33              	.LCOLDB1:
  34              		.text
  35              	.LHOTB1:
  36              		.p2align 4,,15
  37              		.globl	_Z10gimme_timev
  38              		.type	_Z10gimme_timev, @function
  39              	_Z10gimme_timev:
  40              	.LFB6033:
  41              		.file 2 "./benchs/timing.hpp"
   0:./benchs/timing.hpp **** /* heatmap - High performance heatmap creation in C.
   1:./benchs/timing.hpp ****  *
   2:./benchs/timing.hpp ****  * The MIT License (MIT)
   3:./benchs/timing.hpp ****  *
   4:./benchs/timing.hpp ****  * Copyright (c) 2013 Lucas Beyer
   5:./benchs/timing.hpp ****  *
   6:./benchs/timing.hpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:./benchs/timing.hpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:./benchs/timing.hpp ****  * the Software without restriction, including without limitation the rights to
   9:./benchs/timing.hpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:./benchs/timing.hpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:./benchs/timing.hpp ****  * subject to the following conditions:
  12:./benchs/timing.hpp ****  *
  13:./benchs/timing.hpp ****  * The above copyright notice and this permission notice shall be included in all
  14:./benchs/timing.hpp ****  * copies or substantial portions of the Software.
  15:./benchs/timing.hpp ****  *
  16:./benchs/timing.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:./benchs/timing.hpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:./benchs/timing.hpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:./benchs/timing.hpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:./benchs/timing.hpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:./benchs/timing.hpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:./benchs/timing.hpp ****  */
GAS LISTING /tmp/ccJUMvuF.s 			page 21


  23:./benchs/timing.hpp **** 
  24:./benchs/timing.hpp **** #pragma once
  25:./benchs/timing.hpp **** 
  26:./benchs/timing.hpp **** #include <algorithm>
  27:./benchs/timing.hpp **** #include <iostream>
  28:./benchs/timing.hpp **** #include <numeric>
  29:./benchs/timing.hpp **** #include <vector>
  30:./benchs/timing.hpp **** 
  31:./benchs/timing.hpp **** #ifdef _OPENMP
  32:./benchs/timing.hpp **** #include <omp.h>
  33:./benchs/timing.hpp **** double gimme_time() {
  42              		.loc 2 34 0
  43              		.cfi_startproc
  34:./benchs/timing.hpp ****     return omp_get_wtime();
  44              		.loc 2 35 0
  45 0000 E9000000 		jmp	omp_get_wtime@PLT
  45      00
  46              	.LVL1:
  47              		.cfi_endproc
  48              	.LFE6033:
  49              		.size	_Z10gimme_timev, .-_Z10gimme_timev
  50              		.section	.text.unlikely
  51              	.LCOLDE1:
  52              		.text
  53              	.LHOTE1:
  54              		.section	.text.unlikely._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm
  55              		.align 2
  56              	.LCOLDB2:
  57              		.section	.text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm429496729
  58              	.LHOTB2:
  59              		.align 2
  60              		.p2align 4,,15
  61              		.weak	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
  62              		.type	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
  63              	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26369286
  64              	.LFB6598:
  65              		.file 3 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // random number generation (out of line) -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccJUMvuF.s 			page 22


  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** /** @file bits/random.tcc
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #ifndef _RANDOM_TCC
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #define _RANDOM_TCC 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** {
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /*
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * (Further) implementation-space details.
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   namespace __detail
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // to avoid integer overflow.
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Preconditions:  a > 0, m > 0.
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Tp
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __calc(_Tp __x)
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__a == 1)
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x %= __m;
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __q = __m / __a;
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __r = __m % __a;
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__t1 >= __t2)
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __t1 - __t2;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __m - __t2 + __t1;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__c != 0)
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const _Tp __d = __m - __x;
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__d > __c)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x += __c;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __c - __d;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
GAS LISTING /tmp/ccJUMvuF.s 			page 23


  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __x;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _Tp>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _OutputIterator
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__result = *__first / __factor;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __result;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_END_NAMESPACE_VERSION
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   } // namespace __detail
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * ring identity is never a member of the convergence set.
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __s)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = 1;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR engine with a value generated by @p __q.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
GAS LISTING /tmp/ccJUMvuF.s 			page 24


 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       linear_congruential_engine<_UIntType, __a, __c, __m>::
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k0 = __m == 0 ? std::numeric_limits<_UIntType>::digits
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	                                : std::__lg(__m);
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k = (__k0 + 31) / 32;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__k + 3];
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __k + 3);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __factor = 1u;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __sum = 0u;
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __j = 0; __j < __k; ++__j)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __sum += __arr[__j + 3] * __factor;
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __factor *= __detail::_Shift<_UIntType, 32>::__value;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	seed(__sum);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const linear_congruential_engine<_UIntType,
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__a, __c, __m>& __lcr)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __lcr._M_x;
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __lcr._M_x;
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
GAS LISTING /tmp/ccJUMvuF.s 			page 25


 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::word_size;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::state_size;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::shift_size;
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::mask_bits;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::xor_mask;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_u;
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
GAS LISTING /tmp/ccJUMvuF.s 			page 26


 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_d;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_s;
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_b;
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_t;
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_c;
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_l;
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
GAS LISTING /tmp/ccJUMvuF.s 			page 27


 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****                                               initialization_multiplier;
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::default_seed;
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __sd)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[0] = __detail::__mod<_UIntType,
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __x = _M_x[__i - 1];
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = state_size;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			      __s, __b, __t, __c, __l, __f>::
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __upper_mask = (~_UIntType()) << __r;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__n * __k];
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __n * __k);
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	bool __zero = true;
GAS LISTING /tmp/ccJUMvuF.s 			page 28


 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < state_size; ++__i)
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__zero)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__i == 0)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if ((_M_x[0] & __upper_mask) != 0u)
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __zero = false;
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (_M_x[__i] != 0u)
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __zero = false;
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         if (__zero)
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = state_size;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_gen_rand(void)
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __upper_mask = (~_UIntType()) << __r;
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         {
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         }
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 29


 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard(unsigned long long __z)
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       while (__z > state_size - _M_p)
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __z -= state_size - _M_p;
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_gen_rand();
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p += __z;
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::result_type
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
  66              		.loc 3 453 0
  67              		.cfi_startproc
  68              	.LVL2:
  69              	.LBB3496:
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Reload the vector - cost is O(n) amortized over n calls.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_p >= state_size)
  70              		.loc 3 458 0
  71 0000 488B8780 		movq	4992(%rdi), %rax
  71      130000
  72 0007 483D6F02 		cmpq	$623, %rax
  72      0000
  73 000d 7749     		ja	.L4
  74 000f 488D5001 		leaq	1(%rax), %rdx
  75 0013 488B04C7 		movq	(%rdi,%rax,8), %rax
  76              	.L5:
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_gen_rand();
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate o(x(i)).
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __z = _M_x[_M_p++];
  77              		.loc 3 462 0
GAS LISTING /tmp/ccJUMvuF.s 			page 30


  78 0017 48899780 		movq	%rdx, 4992(%rdi)
  78      130000
  79              	.LVL3:
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __u) & __d;
  80              		.loc 3 463 0
  81 001e 4889C2   		movq	%rax, %rdx
  82 0021 48C1EA0B 		shrq	$11, %rdx
  83 0025 89D2     		movl	%edx, %edx
  84 0027 4831D0   		xorq	%rdx, %rax
  85              	.LVL4:
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __s) & __b;
  86              		.loc 3 464 0
  87 002a 4889C2   		movq	%rax, %rdx
  88 002d 48C1E207 		salq	$7, %rdx
  89 0031 81E28056 		andl	$2636928640, %edx
  89      2C9D
  90 0037 4831C2   		xorq	%rax, %rdx
  91              	.LVL5:
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __t) & __c;
  92              		.loc 3 465 0
  93 003a 4889D0   		movq	%rdx, %rax
  94 003d 48C1E00F 		salq	$15, %rax
  95 0041 250000C6 		andl	$4022730752, %eax
  95      EF
  96 0046 4831D0   		xorq	%rdx, %rax
  97              	.LVL6:
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __l);
  98              		.loc 3 466 0
  99 0049 4889C2   		movq	%rax, %rdx
 100 004c 48C1EA12 		shrq	$18, %rdx
 101              	.LVL7:
 102 0050 4831D0   		xorq	%rdx, %rax
 103              	.LVL8:
 104              	.LBE3496:
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __z;
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 105              		.loc 3 469 0
 106 0053 C3       		ret
 107              	.LVL9:
 108              		.p2align 4,,10
 109 0054 0F1F4000 		.p2align 3
 110              	.L4:
 111 0058 4C8B07   		movq	(%rdi), %r8
 112 005b 488D4F08 		leaq	8(%rdi), %rcx
 113 005f 488D9720 		leaq	1824(%rdi), %rdx
 113      070000
 114 0066 41BADFB0 		movl	$2567483615, %r10d
 114      0899
 115 006c 4531C9   		xorl	%r9d, %r9d
 116 006f 90       		.p2align 4,,10
 117              		.p2align 3
 118              	.L6:
 119              	.LBB3503:
 120              	.LBB3497:
 121              	.LBB3498:
 122              	.LBB3499:
GAS LISTING /tmp/ccJUMvuF.s 			page 31


 123              	.LBB3500:
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 124              		.loc 3 407 0
 125 0070 4C89C0   		movq	%r8, %rax
 126 0073 4C8B01   		movq	(%rcx), %r8
 127 0076 48250000 		andq	$-2147483648, %rax
 127      0080
 128 007c 4C89C6   		movq	%r8, %rsi
 129 007f 81E6FFFF 		andl	$2147483647, %esi
 129      FF7F
 130 0085 4809F0   		orq	%rsi, %rax
 131 0088 4C89CE   		movq	%r9, %rsi
 132 008b A801     		testb	$1, %al
 133 008d 490F45F2 		cmovne	%r10, %rsi
 134 0091 4833B160 		xorq	3168(%rcx), %rsi
 134      0C0000
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 135              		.loc 3 408 0
 136 0098 48D1E8   		shrq	%rax
 137 009b 4883C108 		addq	$8, %rcx
 138 009f 4831F0   		xorq	%rsi, %rax
 139 00a2 488941F0 		movq	%rax, -16(%rcx)
 140              	.LVL10:
 141              	.LBE3500:
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 142              		.loc 3 404 0
 143 00a6 4839D1   		cmpq	%rdx, %rcx
 144 00a9 75C5     		jne	.L6
 145 00ab 488BB718 		movq	1816(%rdi), %rsi
 145      070000
 146 00b2 4C8D9780 		leaq	4992(%rdi), %r10
 146      130000
 147 00b9 41B9DFB0 		movl	$2567483615, %r9d
 147      0899
 148 00bf 4531C0   		xorl	%r8d, %r8d
 149              		.p2align 4,,10
 150 00c2 660F1F44 		.p2align 3
 150      0000
 151              	.L7:
 152              	.LBE3499:
 153              	.LBB3501:
 154              	.LBB3502:
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 155              		.loc 3 415 0
 156 00c8 4889F0   		movq	%rsi, %rax
 157 00cb 488B32   		movq	(%rdx), %rsi
 158 00ce 48250000 		andq	$-2147483648, %rax
 158      0080
 159 00d4 4889F1   		movq	%rsi, %rcx
 160 00d7 81E1FFFF 		andl	$2147483647, %ecx
 160      FF7F
 161 00dd 4809C8   		orq	%rcx, %rax
 162 00e0 4C89C1   		movq	%r8, %rcx
 163 00e3 A801     		testb	$1, %al
 164 00e5 490F45C9 		cmovne	%r9, %rcx
 165 00e9 48338AE0 		xorq	-1824(%rdx), %rcx
 165      F8FFFF
GAS LISTING /tmp/ccJUMvuF.s 			page 32


 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 166              		.loc 3 416 0
 167 00f0 48D1E8   		shrq	%rax
 168 00f3 4883C208 		addq	$8, %rdx
 169 00f7 4831C8   		xorq	%rcx, %rax
 170 00fa 488942F0 		movq	%rax, -16(%rdx)
 171              	.LVL11:
 172              	.LBE3502:
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 173              		.loc 3 412 0
 174 00fe 4C39D2   		cmpq	%r10, %rdx
 175 0101 75C5     		jne	.L7
 176              	.LBE3501:
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 177              		.loc 3 421 0
 178 0103 488B07   		movq	(%rdi), %rax
 179 0106 488B9778 		movq	4984(%rdi), %rdx
 179      130000
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 180              		.loc 3 422 0
 181 010d BEDFB008 		movl	$2567483615, %esi
 181      99
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 182              		.loc 3 421 0
 183 0112 4889C1   		movq	%rax, %rcx
 184 0115 4881E200 		andq	$-2147483648, %rdx
 184      000080
 185 011c 81E1FFFF 		andl	$2147483647, %ecx
 185      FF7F
 186 0122 4809CA   		orq	%rcx, %rdx
 187              	.LVL12:
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 188              		.loc 3 422 0
 189 0125 4889D1   		movq	%rdx, %rcx
 190 0128 48D1E9   		shrq	%rcx
 191 012b 48338F60 		xorq	3168(%rdi), %rcx
 191      0C0000
 192 0132 83E201   		andl	$1, %edx
 193              	.LVL13:
 194 0135 480F45D6 		cmovne	%rsi, %rdx
 195 0139 4831CA   		xorq	%rcx, %rdx
 196 013c 48899778 		movq	%rdx, 4984(%rdi)
 196      130000
 197              	.LVL14:
 198 0143 BA010000 		movl	$1, %edx
 198      00
 199 0148 E9CAFEFF 		jmp	.L5
 199      FF
 200              	.LBE3498:
 201              	.LBE3497:
 202              	.LBE3503:
 203              		.cfi_endproc
 204              	.LFE6598:
 205              		.size	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm2
 206              		.section	.text.unlikely._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm
 207              	.LCOLDE2:
 208              		.section	.text._ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm429496729
GAS LISTING /tmp/ccJUMvuF.s 			page 33


 209              	.LHOTE2:
 210              		.section	.text.unlikely._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm6
 211              		.align 2
 212              	.LCOLDB3:
 213              		.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397E
 214              	.LHOTB3:
 215              		.align 2
 216              		.p2align 4,,15
 217              		.weak	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 218              		.type	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 219              	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 220              	.LFB6565:
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const mersenne_twister_engine<_UIntType, __w, __n, __m,
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_p;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       mersenne_twister_engine<_UIntType, __w, __n, __m,
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 34


 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::word_size;
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::short_lag;
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::long_lag;
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::default_seed;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __value)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__lcg(__value == 0u ? default_seed : __value);
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __n = (__w + 31) / 32;
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < long_lag; ++__i)
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __sum = 0u;
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __factor = 1u;
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  for (size_t __j = 0; __j < __n; ++__j)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __sum += __detail::__mod<uint_least32_t,
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       __detail::_Shift<uint_least32_t, 32>::__value>
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__lcg()) * __factor;
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __factor *= __detail::_Shift<_UIntType, 32>::__value;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__sum);
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       subtract_with_carry_engine<_UIntType, __w, __s, __r>::
GAS LISTING /tmp/ccJUMvuF.s 			page 35


 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__r * __k];
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __r * __k);
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < long_lag; ++__i)
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     result_type
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Derive short lag index from current index.
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       long __ps = _M_p - short_lag;
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__ps < 0)
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ps += long_lag;
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate new x(i) without overflow or division.
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // NB: Thanks to the requirements for _UIntType, _M_x[_M_p] + _M_carry
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // cannot overflow.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __xi;
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_x[__ps] >= _M_x[_M_p] + _M_carry)
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = _M_x[__ps] - _M_x[_M_p] - _M_carry;
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 0;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = (__detail::_Shift<_UIntType, __w>::__value
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  - _M_x[_M_p] - _M_carry + _M_x[__ps]);
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 1;
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[_M_p] = __xi;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Adjust current index to loop around in ring buffer.
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (++_M_p >= long_lag)
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __xi;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 36


 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const subtract_with_carry_engine<_UIntType,
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__w, __s, __r>& __x)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_carry << __space << __x._M_p;
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       subtract_with_carry_engine<_UIntType, __w, __s, __r>& __x)
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __istream_type;
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_carry;
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::block_size;
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::used_block;
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename discard_block_engine<_RandomNumberEngine,
GAS LISTING /tmp/ccJUMvuF.s 			page 37


 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   __p, __r>::result_type
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_n >= used_block)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_b.discard(block_size - _M_n);
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_n = 0;
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       ++_M_n;
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_b();
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const discard_block_engine<_RandomNumberEngine,
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __p, __r>& __x)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base() << __space << __x._M_n;
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       discard_block_engine<_RandomNumberEngine, __p, __r>& __x)
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b >> __x._M_n;
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
GAS LISTING /tmp/ccJUMvuF.s 			page 38


 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename _RandomNumberEngine::result_type _Eresult_type;
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _Eresult_type __r
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	= (_M_b.max() - _M_b.min() < std::numeric_limits<_Eresult_type>::max()
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   ? _M_b.max() - _M_b.min() + 1 : 0);
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __edig = std::numeric_limits<_Eresult_type>::digits;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __m = __r ? std::__lg(__r) : __edig;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename std::common_type<_Eresult_type, result_type>::type
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ctype;
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __cdig = std::numeric_limits<__ctype>::digits;
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       unsigned __n, __n0;
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __ctype __s0, __s1, __y0, __y1;
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < 2; ++__i)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n = (__w + __m - 1) / __m + __i;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n0 = __n - __w % __n;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const unsigned __w0 = __w / __n;  // __w0 <= __m
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s0 = 0;
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s1 = 0;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__w0 < __cdig)
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s0 = __ctype(1) << __w0;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s1 = __s0 << 1;
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y0 = 0;
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y1 = 0;
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__r)
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __y0 = __s0 * (__r / __s0);
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__s1)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y1 = __s1 * (__r / __s1);
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__r - __y0 <= __y0 / __n)
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		break;
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    break;
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __sum = 0;
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < __n0; ++__k)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y0 && __u >= __y0);
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s0 * __sum + (__s0 ? __u % __s0 : __u);
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = __n0; __k < __n; ++__k)
GAS LISTING /tmp/ccJUMvuF.s 			page 39


 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y1 && __u >= __y1);
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s1 * __sum + (__s1 ? __u % __s1 : __u);
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __sum;
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::table_size;
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename shuffle_order_engine<_RandomNumberEngine, __k>::result_type
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __j = __k * ((_M_y - _M_b.min())
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			  / (_M_b.max() - _M_b.min() + 1.0L));
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_y = _M_v[__j];
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_v[__j] = _M_b();
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_y;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base();
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << __x._M_v[__i];
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __space << __x._M_y;
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
GAS LISTING /tmp/ccJUMvuF.s 			page 40


 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b;
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_v[__i];
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_y;
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename uniform_int_distribution<_IntType>::result_type
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       uniform_int_distribution<_IntType>::
 221              		.loc 3 878 0
 222              		.cfi_startproc
 223              	.LVL15:
 224 0000 4157     		pushq	%r15
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 15, -16
 227 0002 4156     		pushq	%r14
 228              		.cfi_def_cfa_offset 24
 229              		.cfi_offset 14, -24
 230 0004 4889D0   		movq	%rdx, %rax
 231 0007 4155     		pushq	%r13
 232              		.cfi_def_cfa_offset 32
 233              		.cfi_offset 13, -32
 234 0009 4154     		pushq	%r12
 235              		.cfi_def_cfa_offset 40
 236              		.cfi_offset 12, -40
 237 000b 55       		pushq	%rbp
 238              		.cfi_def_cfa_offset 48
 239              		.cfi_offset 6, -48
 240 000c 53       		pushq	%rbx
 241              		.cfi_def_cfa_offset 56
 242              		.cfi_offset 3, -56
 243 000d 4889F3   		movq	%rsi, %rbx
 244 0010 4881EC98 		subq	$152, %rsp
 244      000000
 245              		.cfi_def_cfa_offset 208
 246              	.LBB3504:
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename _UniformRandomNumberGenerator::result_type
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Gresult_type;
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::make_unsigned<result_type>::type __utype;
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::common_type<_Gresult_type, __utype>::type
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __uctype;
GAS LISTING /tmp/ccJUMvuF.s 			page 41


 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmin = __urng.min();
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmax = __urng.max();
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngrange = __urngmax - __urngmin;
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urange
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  = __uctype(__param.b()) - __uctype(__param.a());
 247              		.loc 3 892 0
 248 0017 486300   		movslq	(%rax), %rax
 249              	.LBE3504:
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
 250              		.loc 3 878 0
 251 001a 48895424 		movq	%rdx, 112(%rsp)
 251      70
 252              	.LBB3659:
 253              		.loc 3 892 0
 254 001f 48635204 		movslq	4(%rdx), %rdx
 255              	.LVL16:
 256 0023 4829C2   		subq	%rax, %rdx
 257              	.LBB3505:
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__uctype __ret;
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 258              		.loc 3 896 0
 259 0026 B8FEFFFF 		movl	$4294967294, %eax
 259      FF
 260 002b 4839C2   		cmpq	%rax, %rdx
 261              	.LBE3505:
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 262              		.loc 3 892 0
 263 002e 48895424 		movq	%rdx, 72(%rsp)
 263      48
 264              	.LVL17:
 265              	.LBB3657:
 266              		.loc 3 896 0
 267 0033 7743     		ja	.L14
 268              	.LBB3506:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // downscaling
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 269              		.loc 3 899 0
 270 0035 4889D1   		movq	%rdx, %rcx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 271              		.loc 3 900 0
 272 0038 B0FF     		movb	$-1, %al
 273 003a 31D2     		xorl	%edx, %edx
 274              	.LVL18:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 275              		.loc 3 899 0
 276 003c 4883C101 		addq	$1, %rcx
 277              	.LVL19:
 278              		.loc 3 900 0
 279 0040 48F7F1   		divq	%rcx
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 280              		.loc 3 901 0
 281 0043 480FAFC8 		imulq	%rax, %rcx
 282              	.LVL20:
GAS LISTING /tmp/ccJUMvuF.s 			page 42


 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 283              		.loc 3 900 0
 284 0047 4989C4   		movq	%rax, %r12
 285              	.LVL21:
 286              		.loc 3 901 0
 287 004a 4989CD   		movq	%rcx, %r13
 288              	.LVL22:
 289              	.L15:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 290              		.loc 3 903 0 discriminator 1
 291 004d 4889DF   		movq	%rbx, %rdi
 292 0050 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 292      00
 293              	.LVL23:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 294              		.loc 3 902 0 discriminator 1
 295 0055 4939C5   		cmpq	%rax, %r13
 296 0058 76F3     		jbe	.L15
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret >= __past);
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 297              		.loc 3 905 0
 298 005a 31D2     		xorl	%edx, %edx
 299 005c 49F7F4   		divq	%r12
 300              	.LVL24:
 301              	.L16:
 302              	.LBE3506:
 303              	.LBE3657:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // upscaling
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    /*
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      Note that every value in [0, urange]
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      can be written uniquely as
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (urngrange + 1) * high + low
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      where
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      high in [0, urange / (urngrange + 1)]
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      and
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      low in [0, urngrange].
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __uctype __tmp; // wraparound control
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __uerngrange = __urngrange + 1;
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret > __urange || __ret < __tmp);
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
GAS LISTING /tmp/ccJUMvuF.s 			page 43


 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __uctype(__urng()) - __urngmin;
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __ret + __param.a();
 304              		.loc 3 937 0
 305 005f 488B5424 		movq	112(%rsp), %rdx
 305      70
 306 0064 0302     		addl	(%rdx), %eax
 307              	.LVL25:
 308              	.LBE3659:
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 309              		.loc 3 938 0
 310 0066 4881C498 		addq	$152, %rsp
 310      000000
 311              		.cfi_remember_state
 312              		.cfi_def_cfa_offset 56
 313 006d 5B       		popq	%rbx
 314              		.cfi_def_cfa_offset 48
 315              	.LVL26:
 316 006e 5D       		popq	%rbp
 317              		.cfi_def_cfa_offset 40
 318 006f 415C     		popq	%r12
 319              		.cfi_def_cfa_offset 32
 320 0071 415D     		popq	%r13
 321              		.cfi_def_cfa_offset 24
 322 0073 415E     		popq	%r14
 323              		.cfi_def_cfa_offset 16
 324 0075 415F     		popq	%r15
 325              		.cfi_def_cfa_offset 8
 326 0077 C3       		ret
 327              	.LVL27:
 328              	.L14:
 329              		.cfi_restore_state
 330              	.LBB3660:
 331              	.LBB3658:
 332              	.LBB3507:
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 333              		.loc 3 907 0
 334 0078 B8FFFFFF 		movl	$4294967295, %eax
 334      FF
 335 007d 4889D6   		movq	%rdx, %rsi
 336 0080 4839C2   		cmpq	%rax, %rdx
 337 0083 0F849B03 		je	.L17
 337      0000
 338 0089 4889F0   		movq	%rsi, %rax
 339 008c 4989FE   		movq	%rdi, %r14
 340 008f 4C8DBC24 		leaq	128(%rsp), %r15
 340      80000000 
 341 0097 48C1F83F 		sarq	$63, %rax
 342 009b 4889C1   		movq	%rax, %rcx
 343 009e 4889C7   		movq	%rax, %rdi
 344              	.LVL28:
 345 00a1 48894424 		movq	%rax, 104(%rsp)
 345      68
 346 00a6 48894424 		movq	%rax, 88(%rsp)
 346      58
 347 00ab 48894424 		movq	%rax, 80(%rsp)
 347      50
GAS LISTING /tmp/ccJUMvuF.s 			page 44


 348 00b0 48C1EF20 		shrq	$32, %rdi
 349 00b4 48894424 		movq	%rax, 96(%rsp)
 349      60
 350 00b9 48894424 		movq	%rax, 48(%rsp)
 350      30
 351 00be 4989FD   		movq	%rdi, %r13
 352 00c1 48894424 		movq	%rax, 32(%rsp)
 352      20
 353 00c6 48894424 		movq	%rax, 16(%rsp)
 353      10
 354 00cb 48894424 		movq	%rax, 56(%rsp)
 354      38
 355              	.LBB3508:
 356              	.LBB3509:
 357              	.LBB3510:
 358              	.LBB3511:
 359              	.LBB3512:
 360              	.LBB3513:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 361              		.loc 3 899 0
 362 00d0 4883C001 		addq	$1, %rax
 363 00d4 48894424 		movq	%rax, 120(%rsp)
 363      78
 364              	.LBE3513:
 365              	.LBB3514:
 366              	.LBB3515:
 367              	.LBB3516:
 368              	.LBB3517:
 369              	.LBB3518:
 370              	.LBB3519:
 371              	.LBB3520:
 372              	.LBB3521:
 373              	.LBB3522:
 374              	.LBB3523:
 375              	.LBB3524:
 376              	.LBB3525:
 377              	.LBB3526:
 378              	.LBB3527:
 379              	.LBB3528:
 380              	.LBB3529:
 381              	.LBB3530:
 382              	.LBB3531:
 383              	.LBB3532:
 384              	.LBB3533:
 385              	.LBB3534:
 386              	.LBB3535:
 387              	.LBB3536:
 388              	.LBB3537:
 389              	.LBB3538:
 390              	.LBB3539:
 391              	.LBB3540:
 392              	.LBB3541:
 393              	.LBB3542:
 394              	.LBB3543:
 395              	.LBB3544:
 396              	.LBB3545:
 397              	.LBB3546:
GAS LISTING /tmp/ccJUMvuF.s 			page 45


 398              	.LBB3547:
 399              	.LBB3548:
 400              	.LBB3549:
 401              	.LBB3550:
 402 00d9 4889C8   		movq	%rcx, %rax
 403 00dc 4883C001 		addq	$1, %rax
 404 00e0 48894424 		movq	%rax, 24(%rsp)
 404      18
 405              	.LBE3550:
 406              	.LBE3549:
 407              	.LBE3548:
 408              	.LBE3547:
 409              	.LBE3546:
 410              	.LBE3545:
 411              	.LBB3564:
 412 00e5 48894424 		movq	%rax, 40(%rsp)
 412      28
 413              	.LVL29:
 414              	.L69:
 415              	.LBE3564:
 416              	.LBE3544:
 417              	.LBE3543:
 418              	.LBE3542:
 419              	.LBE3541:
 420              	.LBE3540:
 421              	.LBE3539:
 422              	.LBE3538:
 423              	.LBE3537:
 424              	.LBE3536:
 425              	.LBE3535:
 426              	.LBE3534:
 427              	.LBE3533:
 428              	.LBE3532:
 429              	.LBE3531:
 430              	.LBE3530:
 431              	.LBE3529:
 432              	.LBE3528:
 433              	.LBE3527:
 434              	.LBE3526:
 435              	.LBE3525:
 436              	.LBE3524:
 437              	.LBE3523:
 438              	.LBE3522:
 439              	.LBE3521:
 440              	.LBE3520:
 441              	.LBE3519:
 442              	.LBE3518:
 443              	.LBE3517:
 444              	.LBE3516:
 445              	.LBE3515:
 446              	.LBE3514:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 447              		.loc 3 896 0
 448 00ea B8FEFFFF 		movl	$4294967294, %eax
 448      FF
 449 00ef 48394424 		cmpq	%rax, 104(%rsp)
 449      68
GAS LISTING /tmp/ccJUMvuF.s 			page 46


 450 00f4 7748     		ja	.L70
 451              	.LVL30:
 452              	.LBB3651:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 453              		.loc 3 900 0
 454 00f6 488B7424 		movq	120(%rsp), %rsi
 454      78
 455 00fb B0FF     		movb	$-1, %al
 456 00fd 31D2     		xorl	%edx, %edx
 457 00ff 48F7F6   		divq	%rsi
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 458              		.loc 3 901 0
 459 0102 480FAFF0 		imulq	%rax, %rsi
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 460              		.loc 3 900 0
 461 0106 4989C4   		movq	%rax, %r12
 462              	.LVL31:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 463              		.loc 3 901 0
 464 0109 4889F5   		movq	%rsi, %rbp
 465              	.LVL32:
 466              	.L19:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 467              		.loc 3 903 0
 468 010c 4889DF   		movq	%rbx, %rdi
 469 010f E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 469      00
 470              	.LVL33:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 471              		.loc 3 902 0
 472 0114 4839C5   		cmpq	%rax, %rbp
 473 0117 76F3     		jbe	.L19
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 474              		.loc 3 905 0
 475 0119 31D2     		xorl	%edx, %edx
 476 011b 49F7F4   		divq	%r12
 477              	.LVL34:
 478              	.L20:
 479              	.LBE3651:
 480              	.LBE3512:
 481              	.LBE3511:
 482              	.LBE3510:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 483              		.loc 3 928 0
 484 011e 48C1E020 		salq	$32, %rax
 485              	.LVL35:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 486              		.loc 3 930 0
 487 0122 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 488              		.loc 3 928 0
 489 0125 4889C5   		movq	%rax, %rbp
 490              	.LVL36:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 491              		.loc 3 930 0
 492 0128 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 492      00
GAS LISTING /tmp/ccJUMvuF.s 			page 47


 493              	.LVL37:
 494              	.LBE3509:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 495              		.loc 3 925 0
 496 012d 4801E8   		addq	%rbp, %rax
 497              	.LVL38:
 498 0130 72B8     		jc	.L69
 499 0132 483B4424 		cmpq	72(%rsp), %rax
 499      48
 500 0137 77B1     		ja	.L69
 501 0139 E921FFFF 		jmp	.L16
 501      FF
 502              	.LVL39:
 503              	.L70:
 504              	.LBB3656:
 505              	.LBB3655:
 506              	.LBB3654:
 507              	.LBB3653:
 508              	.LBB3652:
 509              	.LBB3650:
 510              	.LBB3648:
 511              	.LBB3646:
 512              	.LBB3644:
 513              	.LBB3642:
 514              	.LBB3639:
 515              	.LBB3636:
 516              	.LBB3633:
 517              	.LBB3630:
 518              	.LBB3627:
 519              	.LBB3623:
 520              	.LBB3620:
 521              	.LBB3617:
 522              	.LBB3614:
 523              	.LBB3611:
 524              	.LBB3607:
 525              	.LBB3604:
 526              	.LBB3601:
 527              	.LBB3598:
 528              	.LBB3595:
 529              	.LBB3591:
 530              	.LBB3588:
 531              	.LBB3585:
 532              	.LBB3582:
 533              	.LBB3579:
 534              	.LBB3575:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 535              		.loc 3 899 0
 536 013e 488B4424 		movq	32(%rsp), %rax
 536      20
 537 0143 4883C001 		addq	$1, %rax
 538 0147 48894424 		movq	%rax, 64(%rsp)
 538      40
 539              	.L68:
 540              	.LVL40:
 541              	.LBE3575:
 542              	.LBE3579:
 543              	.LBE3582:
GAS LISTING /tmp/ccJUMvuF.s 			page 48


 544              	.LBE3585:
 545              	.LBE3588:
 546              	.LBE3591:
 547              	.LBE3595:
 548              	.LBE3598:
 549              	.LBE3601:
 550              	.LBE3604:
 551              	.LBE3607:
 552              	.LBE3611:
 553              	.LBE3614:
 554              	.LBE3617:
 555              	.LBE3620:
 556              	.LBE3623:
 557              	.LBE3627:
 558              	.LBE3630:
 559              	.LBE3633:
 560              	.LBE3636:
 561              	.LBE3639:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 562              		.loc 3 896 0
 563 014c B8FEFFFF 		movl	$4294967294, %eax
 563      FF
 564 0151 48394424 		cmpq	%rax, 88(%rsp)
 564      58
 565 0156 7770     		ja	.L67
 566              	.LBB3640:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 567              		.loc 3 899 0
 568 0158 488B4424 		movq	88(%rsp), %rax
 568      58
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 569              		.loc 3 900 0
 570 015d 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 571              		.loc 3 899 0
 572 015f 488D6801 		leaq	1(%rax), %rbp
 573              	.LVL41:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 574              		.loc 3 900 0
 575 0163 B8FFFFFF 		movl	$4294967295, %eax
 575      FF
 576 0168 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 577              		.loc 3 901 0
 578 016b 480FAFE8 		imulq	%rax, %rbp
 579              	.LVL42:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 580              		.loc 3 900 0
 581 016f 4989C4   		movq	%rax, %r12
 582              	.LVL43:
 583              	.L23:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 584              		.loc 3 903 0
 585 0172 4889DF   		movq	%rbx, %rdi
 586 0175 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 586      00
 587              	.LVL44:
GAS LISTING /tmp/ccJUMvuF.s 			page 49


 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 588              		.loc 3 902 0
 589 017a 4839C5   		cmpq	%rax, %rbp
 590 017d 76F3     		jbe	.L23
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 591              		.loc 3 905 0
 592 017f 31D2     		xorl	%edx, %edx
 593 0181 49F7F4   		divq	%r12
 594              	.LVL45:
 595              	.L24:
 596              	.LBE3640:
 597              	.LBE3642:
 598              	.LBE3644:
 599              	.LBE3646:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 600              		.loc 3 928 0
 601 0184 48C1E020 		salq	$32, %rax
 602              	.LVL46:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 603              		.loc 3 930 0
 604 0188 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 605              		.loc 3 928 0
 606 018b 4889C5   		movq	%rax, %rbp
 607              	.LVL47:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 608              		.loc 3 930 0
 609 018e E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 609      00
 610              	.LVL48:
 611              	.LBE3648:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 612              		.loc 3 925 0
 613 0193 4801E8   		addq	%rbp, %rax
 614              	.LVL49:
 615 0196 72B4     		jc	.L68
 616 0198 483B4424 		cmpq	104(%rsp), %rax
 616      68
 617 019d 77AD     		ja	.L68
 618 019f E97AFFFF 		jmp	.L20
 618      FF
 619              	.LVL50:
 620              		.p2align 4,,10
 621 01a4 0F1F4000 		.p2align 3
 622              	.L79:
 623              	.LBB3649:
 624              	.LBB3647:
 625              	.LBB3645:
 626              	.LBB3643:
 627              	.LBB3641:
 628              	.LBB3637:
 629              	.LBB3634:
 630              	.LBB3631:
 631              	.LBB3628:
 632              	.LBB3624:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 633              		.loc 3 905 0
GAS LISTING /tmp/ccJUMvuF.s 			page 50


 634 01a8 31D2     		xorl	%edx, %edx
 635 01aa 49F7F4   		divq	%r12
 636              	.LVL51:
 637              	.L27:
 638              	.LBE3624:
 639              	.LBE3628:
 640              	.LBE3631:
 641              	.LBE3634:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 642              		.loc 3 928 0
 643 01ad 48C1E020 		salq	$32, %rax
 644              	.LVL52:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 645              		.loc 3 930 0
 646 01b1 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 647              		.loc 3 928 0
 648 01b4 4889C5   		movq	%rax, %rbp
 649              	.LVL53:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 650              		.loc 3 930 0
 651 01b7 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 651      00
 652              	.LVL54:
 653              	.LBE3637:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 654              		.loc 3 925 0
 655 01bc 4801E8   		addq	%rbp, %rax
 656              	.LVL55:
 657 01bf 7207     		jc	.L67
 658 01c1 483B4424 		cmpq	88(%rsp), %rax
 658      58
 659 01c6 76BC     		jbe	.L24
 660              	.LVL56:
 661              	.L67:
 662              	.LBB3638:
 663              	.LBB3635:
 664              	.LBB3632:
 665              	.LBB3629:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 666              		.loc 3 896 0
 667 01c8 B8FEFFFF 		movl	$4294967294, %eax
 667      FF
 668 01cd 48394424 		cmpq	%rax, 80(%rsp)
 668      50
 669 01d2 7749     		ja	.L66
 670              	.LBB3625:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 671              		.loc 3 899 0
 672 01d4 488B4424 		movq	80(%rsp), %rax
 672      50
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 673              		.loc 3 900 0
 674 01d9 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 675              		.loc 3 899 0
 676 01db 488D6801 		leaq	1(%rax), %rbp
GAS LISTING /tmp/ccJUMvuF.s 			page 51


 677              	.LVL57:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 678              		.loc 3 900 0
 679 01df B8FFFFFF 		movl	$4294967295, %eax
 679      FF
 680 01e4 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 681              		.loc 3 901 0
 682 01e7 480FAFE8 		imulq	%rax, %rbp
 683              	.LVL58:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 684              		.loc 3 900 0
 685 01eb 4989C4   		movq	%rax, %r12
 686              	.LVL59:
 687              	.L26:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 688              		.loc 3 903 0
 689 01ee 4889DF   		movq	%rbx, %rdi
 690 01f1 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 690      00
 691              	.LVL60:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 692              		.loc 3 902 0
 693 01f6 4839C5   		cmpq	%rax, %rbp
 694 01f9 76F3     		jbe	.L26
 695 01fb EBAB     		jmp	.L79
 696              	.LVL61:
 697              	.L80:
 698              	.LBE3625:
 699              	.LBB3626:
 700              	.LBB3621:
 701              	.LBB3618:
 702              	.LBB3615:
 703              	.LBB3612:
 704              	.LBB3608:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 705              		.loc 3 905 0
 706 01fd 31D2     		xorl	%edx, %edx
 707 01ff 49F7F4   		divq	%r12
 708              	.LVL62:
 709              	.L30:
 710              	.LBE3608:
 711              	.LBE3612:
 712              	.LBE3615:
 713              	.LBE3618:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 714              		.loc 3 928 0
 715 0202 48C1E020 		salq	$32, %rax
 716              	.LVL63:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 717              		.loc 3 930 0
 718 0206 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 719              		.loc 3 928 0
 720 0209 4889C5   		movq	%rax, %rbp
 721              	.LVL64:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
GAS LISTING /tmp/ccJUMvuF.s 			page 52


 722              		.loc 3 930 0
 723 020c E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 723      00
 724              	.LVL65:
 725              	.LBE3621:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 726              		.loc 3 925 0
 727 0211 4801E8   		addq	%rbp, %rax
 728              	.LVL66:
 729 0214 7207     		jc	.L66
 730 0216 48394424 		cmpq	%rax, 80(%rsp)
 730      50
 731 021b 7390     		jae	.L27
 732              	.LVL67:
 733              	.L66:
 734              	.LBB3622:
 735              	.LBB3619:
 736              	.LBB3616:
 737              	.LBB3613:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 738              		.loc 3 896 0
 739 021d B8FEFFFF 		movl	$4294967294, %eax
 739      FF
 740 0222 48394424 		cmpq	%rax, 96(%rsp)
 740      60
 741 0227 7749     		ja	.L65
 742              	.LBB3609:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 743              		.loc 3 899 0
 744 0229 488B4424 		movq	96(%rsp), %rax
 744      60
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 745              		.loc 3 900 0
 746 022e 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 747              		.loc 3 899 0
 748 0230 488D6801 		leaq	1(%rax), %rbp
 749              	.LVL68:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 750              		.loc 3 900 0
 751 0234 B8FFFFFF 		movl	$4294967295, %eax
 751      FF
 752 0239 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 753              		.loc 3 901 0
 754 023c 480FAFE8 		imulq	%rax, %rbp
 755              	.LVL69:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 756              		.loc 3 900 0
 757 0240 4989C4   		movq	%rax, %r12
 758              	.LVL70:
 759              	.L29:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 760              		.loc 3 903 0
 761 0243 4889DF   		movq	%rbx, %rdi
 762 0246 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 762      00
GAS LISTING /tmp/ccJUMvuF.s 			page 53


 763              	.LVL71:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 764              		.loc 3 902 0
 765 024b 4839C5   		cmpq	%rax, %rbp
 766 024e 76F3     		jbe	.L29
 767 0250 EBAB     		jmp	.L80
 768              	.LVL72:
 769              	.L81:
 770              	.LBE3609:
 771              	.LBB3610:
 772              	.LBB3605:
 773              	.LBB3602:
 774              	.LBB3599:
 775              	.LBB3596:
 776              	.LBB3592:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 777              		.loc 3 905 0
 778 0252 31D2     		xorl	%edx, %edx
 779 0254 49F7F4   		divq	%r12
 780              	.LVL73:
 781              	.L33:
 782              	.LBE3592:
 783              	.LBE3596:
 784              	.LBE3599:
 785              	.LBE3602:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 786              		.loc 3 928 0
 787 0257 48C1E020 		salq	$32, %rax
 788              	.LVL74:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 789              		.loc 3 930 0
 790 025b 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 791              		.loc 3 928 0
 792 025e 4889C5   		movq	%rax, %rbp
 793              	.LVL75:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 794              		.loc 3 930 0
 795 0261 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 795      00
 796              	.LVL76:
 797              	.LBE3605:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 798              		.loc 3 925 0
 799 0266 4801E8   		addq	%rbp, %rax
 800              	.LVL77:
 801 0269 7207     		jc	.L65
 802 026b 483B4424 		cmpq	96(%rsp), %rax
 802      60
 803 0270 7690     		jbe	.L30
 804              	.LVL78:
 805              	.L65:
 806              	.LBB3606:
 807              	.LBB3603:
 808              	.LBB3600:
 809              	.LBB3597:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
GAS LISTING /tmp/ccJUMvuF.s 			page 54


 810              		.loc 3 896 0
 811 0272 B8FEFFFF 		movl	$4294967294, %eax
 811      FF
 812 0277 48394424 		cmpq	%rax, 48(%rsp)
 812      30
 813 027c 7751     		ja	.L64
 814              	.LBB3593:
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 815              		.loc 3 899 0
 816 027e 488B4424 		movq	48(%rsp), %rax
 816      30
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 817              		.loc 3 900 0
 818 0283 31D2     		xorl	%edx, %edx
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 819              		.loc 3 899 0
 820 0285 488D6801 		leaq	1(%rax), %rbp
 821              	.LVL79:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 822              		.loc 3 900 0
 823 0289 B8FFFFFF 		movl	$4294967295, %eax
 823      FF
 824 028e 48F7F5   		divq	%rbp
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 825              		.loc 3 901 0
 826 0291 480FAFE8 		imulq	%rax, %rbp
 827              	.LVL80:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 828              		.loc 3 900 0
 829 0295 4989C4   		movq	%rax, %r12
 830              	.LVL81:
 831 0298 0F1F8400 		.p2align 4,,10
 831      00000000 
 832              		.p2align 3
 833              	.L32:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 834              		.loc 3 903 0
 835 02a0 4889DF   		movq	%rbx, %rdi
 836 02a3 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 836      00
 837              	.LVL82:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 838              		.loc 3 902 0
 839 02a8 4839C5   		cmpq	%rax, %rbp
 840 02ab 76F3     		jbe	.L32
 841 02ad EBA3     		jmp	.L81
 842              	.LVL83:
 843              	.L82:
 844              	.LBE3593:
 845              	.LBB3594:
 846              	.LBB3589:
 847              	.LBB3586:
 848              	.LBB3583:
 849              	.LBB3580:
 850              	.LBB3576:
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 851              		.loc 3 905 0
GAS LISTING /tmp/ccJUMvuF.s 			page 55


 852 02af 31D2     		xorl	%edx, %edx
 853 02b1 48F7F5   		divq	%rbp
 854              	.LVL84:
 855              	.L36:
 856              	.LBE3576:
 857              	.LBE3580:
 858              	.LBE3583:
 859              	.LBE3586:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 860              		.loc 3 928 0
 861 02b4 48C1E020 		salq	$32, %rax
 862              	.LVL85:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 863              		.loc 3 930 0
 864 02b8 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 865              		.loc 3 928 0
 866 02bb 4889C5   		movq	%rax, %rbp
 867              	.LVL86:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 868              		.loc 3 930 0
 869 02be E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 869      00
 870              	.LVL87:
 871              	.LBE3589:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 872              		.loc 3 925 0
 873 02c3 4801E8   		addq	%rbp, %rax
 874              	.LVL88:
 875 02c6 7207     		jc	.L64
 876 02c8 483B4424 		cmpq	48(%rsp), %rax
 876      30
 877 02cd 7688     		jbe	.L33
 878              	.LVL89:
 879              	.L64:
 880              	.LBB3590:
 881              	.LBB3587:
 882              	.LBB3584:
 883              	.LBB3581:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 884              		.loc 3 896 0
 885 02cf B8FEFFFF 		movl	$4294967294, %eax
 885      FF
 886 02d4 48394424 		cmpq	%rax, 32(%rsp)
 886      20
 887 02d9 772C     		ja	.L50
 888              	.LVL90:
 889              	.LBB3577:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 890              		.loc 3 900 0
 891 02db 488B4C24 		movq	64(%rsp), %rcx
 891      40
 892 02e0 B0FF     		movb	$-1, %al
 893 02e2 31D2     		xorl	%edx, %edx
 894 02e4 48F7F1   		divq	%rcx
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 895              		.loc 3 901 0
GAS LISTING /tmp/ccJUMvuF.s 			page 56


 896 02e7 4989CC   		movq	%rcx, %r12
 897 02ea 4C0FAFE0 		imulq	%rax, %r12
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 898              		.loc 3 900 0
 899 02ee 4889C5   		movq	%rax, %rbp
 900              	.LVL91:
 901              		.p2align 4,,10
 902 02f1 0F1F8000 		.p2align 3
 902      000000
 903              	.L35:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 904              		.loc 3 903 0
 905 02f8 4889DF   		movq	%rbx, %rdi
 906 02fb E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 906      00
 907              	.LVL92:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 908              		.loc 3 902 0
 909 0300 4939C4   		cmpq	%rax, %r12
 910 0303 76F3     		jbe	.L35
 911 0305 EBA8     		jmp	.L82
 912              	.LVL93:
 913              	.L50:
 914              	.LBE3577:
 915              	.LBB3578:
 916              	.LBB3573:
 917              	.LBB3571:
 918              	.LBB3569:
 919              	.LBB3567:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 920              		.loc 3 896 0
 921 0307 4C8B6424 		movq	56(%rsp), %r12
 921      38
 922 030c 48890424 		movq	%rax, (%rsp)
 923              	.L63:
 924              	.LVL94:
 925 0310 488B0C24 		movq	(%rsp), %rcx
 926 0314 48394C24 		cmpq	%rcx, 16(%rsp)
 926      10
 927 0319 7765     		ja	.L62
 928              	.L83:
 929              	.LVL95:
 930              	.LBB3565:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 931              		.loc 3 900 0
 932 031b 488B7424 		movq	40(%rsp), %rsi
 932      28
 933 0320 B8FFFFFF 		movl	$4294967295, %eax
 933      FF
 934 0325 31D2     		xorl	%edx, %edx
 935 0327 48F7F6   		divq	%rsi
 936 032a 48894424 		movq	%rax, 8(%rsp)
 936      08
 937              	.LVL96:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 938              		.loc 3 901 0
 939 032f 480FAFC6 		imulq	%rsi, %rax
GAS LISTING /tmp/ccJUMvuF.s 			page 57


 940              	.LVL97:
 941 0333 4889C5   		movq	%rax, %rbp
 942              	.LVL98:
 943 0336 662E0F1F 		.p2align 4,,10
 943      84000000 
 943      0000
 944              		.p2align 3
 945              	.L38:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 946              		.loc 3 903 0
 947 0340 4889DF   		movq	%rbx, %rdi
 948 0343 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 948      00
 949              	.LVL99:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 950              		.loc 3 902 0
 951 0348 4839C5   		cmpq	%rax, %rbp
 952 034b 76F3     		jbe	.L38
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 953              		.loc 3 905 0
 954 034d 31D2     		xorl	%edx, %edx
 955 034f 48F77424 		divq	8(%rsp)
 955      08
 956              	.LVL100:
 957              	.L39:
 958              	.LBE3565:
 959              	.LBE3567:
 960              	.LBE3569:
 961              	.LBE3571:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 962              		.loc 3 928 0
 963 0354 48C1E020 		salq	$32, %rax
 964              	.LVL101:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 965              		.loc 3 930 0
 966 0358 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 967              		.loc 3 928 0
 968 035b 4889C5   		movq	%rax, %rbp
 969              	.LVL102:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 970              		.loc 3 930 0
 971 035e E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 971      00
 972              	.LVL103:
 973              	.LBE3573:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 974              		.loc 3 925 0
 975 0363 4801E8   		addq	%rbp, %rax
 976              	.LVL104:
 977 0366 72A8     		jc	.L63
 978 0368 483B4424 		cmpq	32(%rsp), %rax
 978      20
 979 036d 0F8641FF 		jbe	.L36
 979      FFFF
 980              	.LBB3574:
 981              	.LBB3572:
GAS LISTING /tmp/ccJUMvuF.s 			page 58


 982              	.LBB3570:
 983              	.LBB3568:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 984              		.loc 3 896 0
 985 0373 488B0C24 		movq	(%rsp), %rcx
 986 0377 48394C24 		cmpq	%rcx, 16(%rsp)
 986      10
 987 037c 769D     		jbe	.L83
 988              	.LVL105:
 989 037e 6690     		.p2align 4,,10
 990              		.p2align 3
 991              	.L62:
 992              	.LBB3566:
 993              	.LBB3562:
 994              	.LBB3560:
 995              	.LBB3558:
 996              	.LBB3556:
 997 0380 4C3B2424 		cmpq	(%rsp), %r12
 998 0384 7762     		ja	.L61
 999              	.L84:
 1000              	.LVL106:
 1001              	.LBB3551:
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 1002              		.loc 3 900 0
 1003 0386 488B4C24 		movq	24(%rsp), %rcx
 1003      18
 1004 038b B8FFFFFF 		movl	$4294967295, %eax
 1004      FF
 1005 0390 31D2     		xorl	%edx, %edx
 1006 0392 48F7F1   		divq	%rcx
 1007 0395 48894424 		movq	%rax, 8(%rsp)
 1007      08
 1008              	.LVL107:
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 1009              		.loc 3 901 0
 1010 039a 480FAFC1 		imulq	%rcx, %rax
 1011              	.LVL108:
 1012 039e 4889C5   		movq	%rax, %rbp
 1013              	.LVL109:
 1014              		.p2align 4,,10
 1015 03a1 0F1F8000 		.p2align 3
 1015      000000
 1016              	.L41:
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 1017              		.loc 3 903 0
 1018 03a8 4889DF   		movq	%rbx, %rdi
 1019 03ab E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1019      00
 1020              	.LVL110:
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1021              		.loc 3 902 0
 1022 03b0 4839C5   		cmpq	%rax, %rbp
 1023 03b3 76F3     		jbe	.L41
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 1024              		.loc 3 905 0
 1025 03b5 31D2     		xorl	%edx, %edx
 1026 03b7 48F77424 		divq	8(%rsp)
GAS LISTING /tmp/ccJUMvuF.s 			page 59


 1026      08
 1027              	.LVL111:
 1028              	.L42:
 1029              	.LBE3551:
 1030              	.LBE3556:
 1031              	.LBE3558:
 1032              	.LBE3560:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1033              		.loc 3 928 0
 1034 03bc 48C1E020 		salq	$32, %rax
 1035              	.LVL112:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1036              		.loc 3 930 0
 1037 03c0 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1038              		.loc 3 928 0
 1039 03c3 4889C5   		movq	%rax, %rbp
 1040              	.LVL113:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1041              		.loc 3 930 0
 1042 03c6 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1042      00
 1043              	.LVL114:
 1044              	.LBE3562:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1045              		.loc 3 925 0
 1046 03cb 4801E8   		addq	%rbp, %rax
 1047              	.LVL115:
 1048 03ce 72B0     		jc	.L62
 1049 03d0 483B4424 		cmpq	16(%rsp), %rax
 1049      10
 1050 03d5 0F8679FF 		jbe	.L39
 1050      FFFF
 1051              	.LBB3563:
 1052              	.LBB3561:
 1053              	.LBB3559:
 1054              	.LBB3557:
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 1055              		.loc 3 896 0
 1056 03db 4C3B2424 		cmpq	(%rsp), %r12
 1057 03df 76A5     		jbe	.L84
 1058              	.LVL116:
 1059              		.p2align 4,,10
 1060 03e1 0F1F8000 		.p2align 3
 1060      000000
 1061              	.L61:
 1062              	.LBB3552:
 1063              	.LBB3553:
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 1064              		.loc 3 929 0
 1065 03e8 4C89FA   		movq	%r15, %rdx
 1066 03eb 4889DE   		movq	%rbx, %rsi
 1067 03ee 4C89F7   		movq	%r14, %rdi
 1068              	.LBB3554:
 1069              	.LBB3555:
 1070              		.file 4 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // random number generation -*- C++ -*-
GAS LISTING /tmp/ccJUMvuF.s 			page 60


   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** /**
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  * @file bits/random.h
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  Do not attempt to use it directly. @headername{random}
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  */
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifndef _RANDOM_H
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #define _RANDOM_H 1
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #include <vector>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** {
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   // [26.4] Random number generation
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @defgroup random Random Number Generation
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup numerics
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A facility for generating random numbers on selected distributions.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A function template for converting the output of a (integral)
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * uniform random number generator to a floatng point result in the range
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * [0-1).
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RealType, size_t __bits,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _UniformRandomNumberGenerator>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     _RealType
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
GAS LISTING /tmp/ccJUMvuF.s 			page 61


  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_END_NAMESPACE_VERSION
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /*
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Implementation-space details.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   namespace __detail
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w,
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool = __w < static_cast<size_t>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = 0; };
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift<_UIntType, __w, true>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    /* assume long long no bigger than __int128 */
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= 128))>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 4>
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned int type; };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 3>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long type; };
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 2>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long long type; };
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_INT128
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 1>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned __int128 type; };
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
GAS LISTING /tmp/ccJUMvuF.s 			page 62


 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Schrage.
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x);
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Special cases:
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _Tp __res = __a * __x + __c;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  if (__m)
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __res;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline _Tp
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __mod(_Tp __x)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /* Determine whether number is a power of 2.  */
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp>
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline bool
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _Power_of_2(_Tp __x)
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return ((__x - 1) & __x) == 0;
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /*
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * An adaptor class for converting the output of any Generator into
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * the input for a specific Distribution.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Engine, typename _DInputType>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Adaptor
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "template argument not a floating point type");
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       public:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Adaptor(_Engine& __g)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_g(__g) { }
GAS LISTING /tmp/ccJUMvuF.s 			page 63


 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	min() const
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(0); }
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	max() const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(1); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	/*
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * Converts a value generated by the adapted random number generator
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * into a value in the input domain for the dependent random number
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * distribution.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 */
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator()()
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return std::generate_canonical<_DInputType,
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            std::numeric_limits<_DInputType>::digits,
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       private:
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Engine& _M_g;
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_END_NAMESPACE_VERSION
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   } // namespace __detail
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_generators Random Number Generators
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * These classes define objects which provide random or pseudorandom
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers, either from a discrete or a continuous interval.  The
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator supplied as a part of this library are
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * all uniform random number generators which provide a sequence of
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number uniformly distributed over their range.
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A number generator is a function object with an operator() that
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * takes zero arguments and returns a number.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A compliant random number generator must satisfy the following
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <tr><td>To be documented.</td></tr> </table>
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A model of a linear congruential random number generator.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A random number generator that produces pseudorandom numbers via
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * linear function:
GAS LISTING /tmp/ccJUMvuF.s 			page 64


 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * large enough to store values up to (__m-1). If the template parameter
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __m is 0, the modulus @p __m used is
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$1@f$.
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class linear_congruential_engine
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The multiplier. */
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type multiplier   = __a;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** An increment. */
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type increment    = __c;
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The modulus. */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type modulus      = __m;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 1u;
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine with seed @p __s.  The default seed value
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        is 1.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The initial seed value.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       linear_congruential_engine(result_type __s = default_seed)
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__s); }
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine seeded from the seed sequence @p __q.
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, linear_congruential_engine>::value>
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         linear_congruential_engine(_Sseq& __q)
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccJUMvuF.s 			page 65


 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine sequence to the seed @p __s.
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The new seed.
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s = default_seed);
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sequence using values from the seed sequence @p __q.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         typename std::enable_if<std::is_class<_Sseq>::value>::type
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __c == 0u ? 1u : 0u; }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __m - 1u; }
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()()
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return _M_x;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccJUMvuF.s 			page 66


 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two linear congruential random number generator
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A linear congruential random number generator object.
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another linear congruential random number generator
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const linear_congruential_engine& __lhs,
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const linear_congruential_engine& __rhs)
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_x == __rhs._M_x; }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os  The output stream.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __os.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __a1, __c1, __m1>& __lcr);
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Sets the state of the engine by reading its textual
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        representation from @p __is.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The textual representation must have been previously written using
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an output stream whose imbued locale and whose type's template
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * specialization arguments _CharT and _Traits were the same as those
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of @p __is.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is  The input stream.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __is.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __c1, __m1>& __lcr);
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x;
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two linear congruential random number generator
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
GAS LISTING /tmp/ccJUMvuF.s 			page 67


 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A linear congruential random number generator object.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another linear congruential random number generator
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __lhs,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __rhs)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A generalized feedback shift register discrete random number generator.
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm avoids multiplication and division and is designed to be
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * correctly, this generator will produce numbers with a very long period and
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Takuji Nishimura.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              the state vector.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __n  The degree of recursion.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __m  The period parameter.
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __r  The separation point bit index.
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __a  The last row of the twist matrix.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __f  Initialization multiplier.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class mersenne_twister_engine
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __m && __m <= __n,
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__r <= __w, "template argument substituting "
GAS LISTING /tmp/ccJUMvuF.s 			page 68


 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__r out of bound");
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__u <= __w, "template argument substituting "
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__u out of bound");
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__s <= __w, "template argument substituting "
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__s out of bound");
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__t <= __w, "template argument substituting "
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__t out of bound");
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__l <= __w, "template argument substituting "
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__l out of bound");
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bound");
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __a out of bound");
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __b out of bound");
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __c out of bound");
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __d out of bound");
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __f out of bound");
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size                 = __w;
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      state_size                = __n;
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      shift_size                = __m;
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      mask_bits                 = __r;
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type xor_mask                  = __a;
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_u               = __u;
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_d               = __d;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_s               = __s;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_b               = __b;
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_t               = __t;
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_c               = __c;
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_l               = __l;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type initialization_multiplier = __f;
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 5489u;
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // constructors and member function
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       mersenne_twister_engine(result_type __sd = default_seed)
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine seeded from the seed sequence @p __q.
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value>
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
GAS LISTING /tmp/ccJUMvuF.s 			page 69


 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         mersenne_twister_engine(_Sseq& __q)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; };
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z);
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const mersenne_twister_engine& __lhs,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const mersenne_twister_engine& __rhs)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
GAS LISTING /tmp/ccJUMvuF.s 			page 70


 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_gen_rand();
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x[state_size];
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t    _M_p;
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
GAS LISTING /tmp/ccJUMvuF.s 			page 71


 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief The Marsaglia-Zaman generator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * generator, sometimes referred to as the SWC generator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A discrete random number generator that produces pseudorandom
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers using:
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$r@f$
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_x     The state of the generator.  This is a ring buffer.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_carry The carry.
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_p     Current index of x(i - r).
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class subtract_with_carry_engine
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __s && __s < __r,
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __s out of bounds");
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size    = __w;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      short_lag    = __s;
GAS LISTING /tmp/ccJUMvuF.s 			page 72


 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      long_lag     = __r;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 19780503u;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs an explicitly seeded % subtract_with_carry_engine
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator.
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       subtract_with_carry_engine(result_type __sd = default_seed)
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seeded from the seed sequence @p __q.
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, subtract_with_carry_engine>::value>
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         subtract_with_carry_engine(_Sseq& __q)
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator.
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sets value to 19780503.  In any case, with a linear
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * set carry to 1, otherwise sets carry to 0.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * % subtract_with_carry_engine random number generator.
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive minimum value of the range of random
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; }
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive maximum value of the range of random
GAS LISTING /tmp/ccJUMvuF.s 			page 73


 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator objects of the same type for equality.
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const subtract_with_carry_engine& __rhs)
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>&,
GAS LISTING /tmp/ccJUMvuF.s 			page 74


 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>&,
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_x[long_lag];
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_carry;
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t     _M_p;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        generator objects of the same type for inequality.
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __lhs,
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __rhs)
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers from some base engine by discarding blocks of
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * data.
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * 0 <= @p __r <= @p __p
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class discard_block_engine
GAS LISTING /tmp/ccJUMvuF.s 			page 75


 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1 <= __r && __r <= __p,
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __r out of bounds");
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t block_size = __p;
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t used_block = __r;
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %discard_block_engine engine.
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine()
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(), _M_n(0) { }
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng), _M_n(0) { }
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %discard_block_engine engine.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(result_type __s)
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s), _M_n(0) { }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %discard_block_engine engine.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, discard_block_engine>::value
GAS LISTING /tmp/ccJUMvuF.s 			page 76


 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         discard_block_engine(_Sseq& __q)
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_b(__q), _M_n(0)
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_n = 0;
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 77


 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %discard_block_engine random number generator
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %discard_block_engine random number generator object.
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %discard_block_engine random number generator
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const discard_block_engine& __lhs,
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const discard_block_engine& __rhs)
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %discard_block_engine random
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 78


1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t _M_n;
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %discard_block_engine random number generator
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %discard_block_engine random number generator
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __lhs,
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __rhs)
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers by combining random numbers from some base
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class independent_bits_engine
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
GAS LISTING /tmp/ccJUMvuF.s 			page 79


1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine()
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b() { }
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng) { }
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)) { }
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(result_type __s)
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s) { }
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, independent_bits_engine>::value
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                ::type>
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         independent_bits_engine(_Sseq& __q)
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
GAS LISTING /tmp/ccJUMvuF.s 			page 80


1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(); }
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(__s); }
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed sequence.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_b.seed(__q); }
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0U; }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
GAS LISTING /tmp/ccJUMvuF.s 			page 81


1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %independent_bits_engine random number generator
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %independent_bits_engine random number generator
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const independent_bits_engine& __lhs,
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const independent_bits_engine& __rhs)
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b; }
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %independent_bits_engine random number generator
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          an error state.
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _CharT, typename _Traits>
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __w, _UIntType>& __x)
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  __is >> __x._M_b;
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __is;
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %independent_bits_engine random number generator
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %independent_bits_engine random number generator
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
GAS LISTING /tmp/ccJUMvuF.s 			page 82


1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __lhs,
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __rhs)
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        number generator engine @p __x into the output stream @p __os.
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __os An output stream.
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns The output stream with the state of @p __x inserted or in
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          an error state.
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _CharT, typename _Traits>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     std::basic_ostream<_CharT, _Traits>&
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __w, _UIntType>& __x)
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __os << __x.base();
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return __os;
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Produces random numbers by combining random numbers from some
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * base engine to produce random numbers with a specifies number of bits
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __w.
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class shuffle_order_engine
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __k, "template argument substituting "
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__k out of bound");
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t table_size = __k;
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine()
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b()
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
GAS LISTING /tmp/ccJUMvuF.s 			page 83


1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng)
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng))
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(result_type __s)
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s)
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, shuffle_order_engine>::value
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         shuffle_order_engine(_Sseq& __q)
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_initialize(); }
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                 for the underlying base class generator engine.
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
GAS LISTING /tmp/ccJUMvuF.s 			page 84


1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        for the underlying base class generator engine.
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_initialize();
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets a const reference to the underlying generator engine object.
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the minimum value in the generated random number range.
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the maximum value in the generated random number range.
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Discard a sequence of random numbers.
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 85


1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the next value in the generated random number sequence.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Compares two %shuffle_order_engine random number generator objects
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of the same type for equality.
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const shuffle_order_engine& __lhs,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const shuffle_order_engine& __rhs)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (__lhs._M_b == __rhs._M_b
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	@p __os.
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __k1>& __x);
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
GAS LISTING /tmp/ccJUMvuF.s 			page 86


1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_initialize()
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_v[__i] = _M_b();
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_y = _M_b();
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_v[__k];
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_y;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Compares two %shuffle_order_engine random number generator objects
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * of the same type for inequality.
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __lhs,
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __rhs)
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand0;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative LCR (Lehmer Generator function).
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand;
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Mersenne Twister.
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Reference:
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast32_t,
GAS LISTING /tmp/ccJUMvuF.s 			page 87


1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     32, 624, 397, 31,
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9908b0dfUL, 11,
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xffffffffUL, 7,
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9d2c5680UL, 15,
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative Mersenne Twister.
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast64_t,
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     64, 312, 156, 31,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xb5026f5aa96619e9ULL, 29,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x5555555555555555ULL, 17,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x71d67fffeda60000ULL, 37,
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xfff7eee000000000ULL, 43,
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     6364136223846793005ULL> mt19937_64;
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux24_base;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux48_base;
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef minstd_rand0 default_random_engine;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A standard interface to a platform-specific non-deterministic
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator (if any are available).
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   class random_device
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /** The type of the generated random value. */
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     typedef unsigned int result_type;
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // constructors, destructors and member functions
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "default")
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _M_init(__token);
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ~random_device()
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #else
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 88


1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "mt19937")
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_init_pretr1(__token); }
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     min()
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::min(); }
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     max()
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::max(); }
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     double
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     entropy() const noexcept
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return 0.0; }
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator()()
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval();
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #else
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval_pretr1();
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // No copy functions.
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const random_device&) = delete;
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void operator=(const random_device&) = delete;
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   private:
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_init(const std::string& __token);
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_init_pretr1(const std::string& __token);
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     void _M_fini();
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type _M_getval();
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type _M_getval_pretr1();
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     union
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void*      _M_file;
1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       mt19937    _M_mt;
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   };
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /* @} */ // group random_generators
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_distributions Random Number Distributions
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
GAS LISTING /tmp/ccJUMvuF.s 			page 89


1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_distributions_uniform Uniform Distributions
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random_distributions
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Uniform discrete distribution for random numbers.
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A discrete random distribution on the range @f$[min, max]@f$ with equal
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * probability throughout the range.
1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _IntType = int>
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class uniform_int_distribution
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_integral<_IntType>::value,
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument not an integral type");
1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the range of the distribution. */
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _IntType result_type;
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** Parameter type. */
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct param_type
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typedef uniform_int_distribution<_IntType> distribution_type;
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	explicit
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	param_type(_IntType __a = 0,
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   _IntType __b = std::numeric_limits<_IntType>::max())
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_a(__a), _M_b(__b)
 1071              		.loc 4 1684 0
 1072 03f1 C7842480 		movl	$0, 128(%rsp)
 1072      00000000 
 1072      000000
 1073 03fc 4489AC24 		movl	%r13d, 132(%rsp)
 1073      84000000 
 1074              	.LBE3555:
 1075              	.LBE3554:
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 1076              		.loc 3 929 0
 1077 0404 E8000000 		call	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256
 1077      00
 1078              	.LVL117:
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1079              		.loc 3 928 0
 1080 0409 4889C5   		movq	%rax, %rbp
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1081              		.loc 3 930 0
 1082 040c 4889DF   		movq	%rbx, %rdi
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 1083              		.loc 3 928 0
 1084 040f 48C1E520 		salq	$32, %rbp
 1085              	.LVL118:
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
 1086              		.loc 3 930 0
 1087 0413 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1087      00
GAS LISTING /tmp/ccJUMvuF.s 			page 90


 1088              	.LVL119:
 1089              	.LBE3553:
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1090              		.loc 3 925 0
 1091 0418 4801E8   		addq	%rbp, %rax
 1092              	.LVL120:
 1093 041b 72CB     		jc	.L61
 1094 041d 4C39E0   		cmpq	%r12, %rax
 1095 0420 77C6     		ja	.L61
 1096 0422 EB98     		jmp	.L42
 1097              	.LVL121:
 1098              	.L17:
 1099              	.LBE3552:
 1100              	.LBE3557:
 1101              	.LBE3559:
 1102              	.LBE3561:
 1103              	.LBE3563:
 1104              	.LBE3566:
 1105              	.LBE3568:
 1106              	.LBE3570:
 1107              	.LBE3572:
 1108              	.LBE3574:
 1109              	.LBE3578:
 1110              	.LBE3581:
 1111              	.LBE3584:
 1112              	.LBE3587:
 1113              	.LBE3590:
 1114              	.LBE3594:
 1115              	.LBE3597:
 1116              	.LBE3600:
 1117              	.LBE3603:
 1118              	.LBE3606:
 1119              	.LBE3610:
 1120              	.LBE3613:
 1121              	.LBE3616:
 1122              	.LBE3619:
 1123              	.LBE3622:
 1124              	.LBE3626:
 1125              	.LBE3629:
 1126              	.LBE3632:
 1127              	.LBE3635:
 1128              	.LBE3638:
 1129              	.LBE3641:
 1130              	.LBE3643:
 1131              	.LBE3645:
 1132              	.LBE3647:
 1133              	.LBE3649:
 1134              	.LBE3650:
 1135              	.LBE3652:
 1136              	.LBE3653:
 1137              	.LBE3654:
 1138              	.LBE3655:
 1139              	.LBE3656:
 1140              	.LBE3508:
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __uctype(__urng()) - __urngmin;
 1141              		.loc 3 935 0
 1142 0424 4889DF   		movq	%rbx, %rdi
GAS LISTING /tmp/ccJUMvuF.s 			page 91


 1143              	.LVL122:
 1144 0427 E8000000 		call	_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7ELm26
 1144      00
 1145              	.LVL123:
 1146 042c E92EFCFF 		jmp	.L16
 1146      FF
 1147              	.LBE3507:
 1148              	.LBE3658:
 1149              	.LBE3660:
 1150              		.cfi_endproc
 1151              	.LFE6565:
 1152              		.size	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25
 1153              		.section	.text.unlikely._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm6
 1154              	.LCOLDE3:
 1155              		.section	.text._ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397E
 1156              	.LHOTE3:
 1157              		.section	.rodata.str1.1,"aMS",@progbits,1
 1158              	.LC4:
 1159 0000 64656661 		.string	"default"
 1159      756C7400 
 1160              	.LC5:
 1161 0008 47656E65 		.string	"Generating "
 1161      72617469 
 1161      6E672000 
 1162              	.LC6:
 1163 0014 2072616E 		.string	" random points... "
 1163      646F6D20 
 1163      706F696E 
 1163      74732E2E 
 1163      2E2000
 1164              	.LC7:
 1165 0027 646F6E65 		.string	"done in "
 1165      20696E20 
 1165      00
 1166              	.LC9:
 1167 0030 6D7300   		.string	"ms"
 1168              		.section	.text.unlikely
 1169              	.LCOLDB10:
 1170              		.text
 1171              	.LHOTB10:
 1172 0005 66662E0F 		.p2align 4,,15
 1172      1F840000 
 1172      000000
 1173              		.type	_Z9genpointsmj.constprop.75, @function
 1174              	_Z9genpointsmj.constprop.75:
 1175              	.LFB6730:
 1176              		.file 5 "./benchs/common.hpp"
   0:./benchs/common.hpp **** /* heatmap - High performance heatmap creation in C.
   1:./benchs/common.hpp ****  *
   2:./benchs/common.hpp ****  * The MIT License (MIT)
   3:./benchs/common.hpp ****  *
   4:./benchs/common.hpp ****  * Copyright (c) 2013 Lucas Beyer
   5:./benchs/common.hpp ****  *
   6:./benchs/common.hpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:./benchs/common.hpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:./benchs/common.hpp ****  * the Software without restriction, including without limitation the rights to
   9:./benchs/common.hpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
GAS LISTING /tmp/ccJUMvuF.s 			page 92


  10:./benchs/common.hpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:./benchs/common.hpp ****  * subject to the following conditions:
  12:./benchs/common.hpp ****  *
  13:./benchs/common.hpp ****  * The above copyright notice and this permission notice shall be included in all
  14:./benchs/common.hpp ****  * copies or substantial portions of the Software.
  15:./benchs/common.hpp ****  *
  16:./benchs/common.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:./benchs/common.hpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:./benchs/common.hpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:./benchs/common.hpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:./benchs/common.hpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:./benchs/common.hpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:./benchs/common.hpp ****  */
  23:./benchs/common.hpp **** 
  24:./benchs/common.hpp **** #pragma once
  25:./benchs/common.hpp **** 
  26:./benchs/common.hpp **** #include <functional>
  27:./benchs/common.hpp **** #include <iostream>
  28:./benchs/common.hpp **** #include <random>
  29:./benchs/common.hpp **** #include <vector>
  30:./benchs/common.hpp **** #include <memory>
  31:./benchs/common.hpp **** 
  32:./benchs/common.hpp **** #include "benchs/timing.hpp"
  33:./benchs/common.hpp **** #include "heatmap.h"
  34:./benchs/common.hpp **** 
  35:./benchs/common.hpp **** // Makes unique_ptr "understand" how to delete heatmap_t
  36:./benchs/common.hpp **** // without tracking any additional state.
  37:./benchs/common.hpp **** namespace std {
  38:./benchs/common.hpp ****     template<>
  39:./benchs/common.hpp ****     struct default_delete<heatmap_t> {
  40:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
  41:./benchs/common.hpp ****     };
  42:./benchs/common.hpp ****     template<>
  43:./benchs/common.hpp ****     struct default_delete<heatmap_stamp_t> {
  44:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
  45:./benchs/common.hpp ****     };
  46:./benchs/common.hpp **** }
  47:./benchs/common.hpp **** 
  48:./benchs/common.hpp **** inline std::vector<unsigned> genpoints(size_t npoints, unsigned maxval)
 1177              		.loc 5 49 0
 1178              		.cfi_startproc
 1179              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1180              		.cfi_lsda 0x1b,.LLSDA6730
 1181              	.LVL124:
 1182 0010 4157     		pushq	%r15
 1183              		.cfi_def_cfa_offset 16
 1184              		.cfi_offset 15, -16
 1185 0012 4156     		pushq	%r14
 1186              		.cfi_def_cfa_offset 24
 1187              		.cfi_offset 14, -24
 1188 0014 4189F7   		movl	%esi, %r15d
 1189 0017 4155     		pushq	%r13
 1190              		.cfi_def_cfa_offset 32
 1191              		.cfi_offset 13, -32
 1192 0019 4154     		pushq	%r12
 1193              		.cfi_def_cfa_offset 40
 1194              		.cfi_offset 12, -40
GAS LISTING /tmp/ccJUMvuF.s 			page 93


 1195 001b 4989FC   		movq	%rdi, %r12
 1196 001e 55       		pushq	%rbp
 1197              		.cfi_def_cfa_offset 48
 1198              		.cfi_offset 6, -48
 1199 001f 53       		pushq	%rbx
 1200              		.cfi_def_cfa_offset 56
 1201              		.cfi_offset 3, -56
 1202 0020 4881ECD8 		subq	$15064, %rsp
 1202      3A0000
 1203              		.cfi_def_cfa_offset 15120
 1204              	.LBB3661:
 1205              	.LBB3662:
 1206              	.LBB3663:
 1207              	.LBB3664:
 1208              	.LBB3665:
 1209              		.file 6 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
GAS LISTING /tmp/ccJUMvuF.s 			page 94


  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /** @file bits/stl_vector.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/concept_check.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <initializer_list>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     struct _Vector_base
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        	pointer;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       struct _Vector_impl 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : public _Tp_alloc_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_start;
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_finish;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl()
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 1210              		.loc 6 91 0
 1211 0027 48C70700 		movq	$0, (%rdi)
 1211      000000
 1212 002e 48C74708 		movq	$0, 8(%rdi)
 1212      00000000 
 1213 0036 48C74710 		movq	$0, 16(%rdi)
 1213      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 95


 1214              	.LVL125:
 1215              	.LBE3665:
 1216              	.LBE3664:
 1217              	.LBB3666:
 1218              	.LBB3667:
 1219              	.LBB3668:
 1220              	.LBB3669:
 1221              	.LBB3670:
 1222              	.LBB3671:
 1223              	.LBB3672:
 1224              		.file 7 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** /** @file ext/new_allocator.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/c++config.h>
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <new>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/functexcept.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/move.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <type_traits>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::size_t;
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::ptrdiff_t;
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 96


  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   /**
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @ingroup allocators
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all allocation calls operator new
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   template<typename _Tp>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     class new_allocator
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef size_t     size_type;
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp        value_type;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         struct rebind
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       const_pointer
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	if (__n > this->max_size())
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 97


 103:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1225              		.loc 7 104 0
 1226 003e BF401F00 		movl	$8000, %edi
 1226      00
 1227              	.LVL126:
 1228              	.LBE3672:
 1229              	.LBE3671:
 1230              	.LBE3670:
 1231              	.LBE3669:
 1232              	.LBE3668:
 1233              	.LBE3667:
 1234              	.LBE3666:
 1235              	.LBE3663:
 1236              	.LBE3662:
  49:./benchs/common.hpp **** {
  50:./benchs/common.hpp ****     std::vector<unsigned> points(npoints*2);
  51:./benchs/common.hpp **** 
  52:./benchs/common.hpp ****     std::random_device rd;
 1237              		.loc 5 53 0
 1238 0043 488D9C24 		leaq	5040(%rsp), %rbx
 1238      B0130000 
 1239              	.LEHB0:
 1240              	.LBB3686:
 1241              	.LBB3682:
 1242              	.LBB3680:
 1243              	.LBB3678:
 1244              	.LBB3677:
 1245              	.LBB3676:
 1246              	.LBB3675:
 1247              	.LBB3674:
 1248              	.LBB3673:
 1249              		.loc 7 104 0
 1250 004b E8000000 		call	_Znwm@PLT
 1250      00
 1251              	.LEHE0:
 1252              	.LVL127:
 1253 0050 488D7808 		leaq	8(%rax), %rdi
 1254              	.LBE3673:
 1255              	.LBE3674:
 1256              	.LBE3675:
 1257              	.LBE3676:
 1258              	.LBE3677:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
GAS LISTING /tmp/ccJUMvuF.s 			page 98


 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       };
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp_alloc_type&
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp_alloc_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       allocator_type
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base()
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl() { }
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a) { }
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n)
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl()
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _M_create_storage(__n);
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
GAS LISTING /tmp/ccJUMvuF.s 			page 99


 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_impl _M_impl;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_allocate(size_t __n)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     private:
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1259              		.loc 6 187 0
 1260 0054 488D9040 		leaq	8000(%rax), %rdx
 1260      1F0000
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 1261              		.loc 6 185 0
 1262 005b 49890424 		movq	%rax, (%r12)
 1263              	.LBE3678:
 1264              	.LBE3680:
 1265              	.LBE3682:
 1266              	.LBE3686:
 1267              		.loc 5 53 0
 1268 005f 488DAC24 		leaq	10048(%rsp), %rbp
 1268      40270000 
 1269 0067 488D3500 		leaq	.LC4(%rip), %rsi
 1269      000000
 1270 006e 4883E7F8 		andq	$-8, %rdi
 1271              	.LBB3687:
 1272              	.LBB3683:
 1273              	.LBB3681:
 1274              	.LBB3679:
 1275              		.loc 6 187 0
 1276 0072 49895424 		movq	%rdx, 16(%r12)
 1276      10
 1277              	.LVL128:
 1278 0077 48C70000 		movq	$0, (%rax)
 1278      000000
 1279 007e 48C78038 		movq	$0, 7992(%rax)
 1279      1F000000 
 1279      000000
 1280 0089 4829F8   		subq	%rdi, %rax
 1281              	.LVL129:
 1282 008c 8D88401F 		leal	8000(%rax), %ecx
 1282      0000
GAS LISTING /tmp/ccJUMvuF.s 			page 100


 1283 0092 31C0     		xorl	%eax, %eax
 1284 0094 C1E903   		shrl	$3, %ecx
 1285 0097 F348AB   		rep; stosq
 1286              	.LBE3679:
 1287              	.LBE3681:
 1288              	.LBE3683:
 1289              	.LBB3684:
 1290              	.LBB3685:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     };
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /**
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  individual elements in any order.
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @ingroup sequences
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   */
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Concept requirements.
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Tp					 value_type;
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef size_t					 size_type;
GAS LISTING /tmp/ccJUMvuF.s 			page 101


 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_allocate;
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_deallocate;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_impl;
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector()
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base() { }
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a) { }
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructed elements.
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
GAS LISTING /tmp/ccJUMvuF.s 			page 102


 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  but any extra memory in
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x)
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(),
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
GAS LISTING /tmp/ccJUMvuF.s 			page 103


 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    __rv.clear();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a __l.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    random_access_iterator_tag());
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [first,last).
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
GAS LISTING /tmp/ccJUMvuF.s 			page 104


 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  responsibility.
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(const vector& __x);
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  if the allocators permit it).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         constexpr bool __move_storage =
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
GAS LISTING /tmp/ccJUMvuF.s 			page 105


 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  range [__first,__last).
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
GAS LISTING /tmp/ccJUMvuF.s 			page 106


 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::get_allocator;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // iterators
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
GAS LISTING /tmp/ccJUMvuF.s 			page 107


 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  in reverse element order.
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cbegin() const noexcept
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cend() const noexcept
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
GAS LISTING /tmp/ccJUMvuF.s 			page 108


 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crbegin() const noexcept
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crend() const noexcept
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.2] capacity
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  default constructed elements are appended.
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
GAS LISTING /tmp/ccJUMvuF.s 			page 109


 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       shrink_to_fit()
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  equal end().)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       bool
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return begin() == end(); }
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *          elements.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
GAS LISTING /tmp/ccJUMvuF.s 			page 110


 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  thrown.
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and copying of %vector data.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reserve(size_type __n);
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // element access
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Safety check used only from at().
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__n >= this->size())
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu)"),
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				   __n, this->size());
GAS LISTING /tmp/ccJUMvuF.s 			page 111


 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n)
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n]; 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n) const
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n];
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
GAS LISTING /tmp/ccJUMvuF.s 			page 112


 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element of the %vector.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // data access
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp*
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp*
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_pointer
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  available.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(const value_type& __x)
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                             __x);
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
GAS LISTING /tmp/ccJUMvuF.s 			page 113


 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(value_type&& __x)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Removes last element.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  called.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __args  Arguments.
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::list.
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
GAS LISTING /tmp/ccJUMvuF.s 			page 114


 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  specified by @a position.
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 115


1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return begin() + __offset;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
GAS LISTING /tmp/ccJUMvuF.s 			page 116


1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     __first, __last, __false_type());
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  return begin() + __offset;
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  shorten the %vector by one.
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __position)
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
GAS LISTING /tmp/ccJUMvuF.s 			page 117


1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __position)
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__position); }
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *                  erased.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *           prior to erasing (or end()).
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the elements in the range
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __beg = begin();
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       swap(vector& __x)
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
GAS LISTING /tmp/ccJUMvuF.s 			page 118


1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the user's responsibility.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         pointer
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __try
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      return __result;
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __catch(...)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      __throw_exception_again;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Internal constructor functions follow.
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _Integer>
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			       __false_type)
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    iterator_category _IterCategory;
GAS LISTING /tmp/ccJUMvuF.s 			page 119


1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    emplace_back(*__first);
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    push_back(*__first);
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					this->_M_impl._M_start,
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_default_n_a(this->_M_impl._M_start, __n, 
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					 _M_get_Tp_allocator());
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
 1291              		.loc 6 1312 0
 1292 009a 49895424 		movq	%rdx, 8(%r12)
 1292      08
 1293              	.LVL130:
 1294              	.LBE3685:
 1295              	.LBE3684:
 1296              	.LBE3687:
GAS LISTING /tmp/ccJUMvuF.s 			page 120


 1297              		.loc 5 53 0
 1298 009f 4889EF   		movq	%rbp, %rdi
 1299 00a2 4889DA   		movq	%rbx, %rdx
 1300              	.LVL131:
 1301              	.LEHB1:
 1302 00a5 E8000000 		call	_ZNSsC1EPKcRKSaIcE@PLT
 1302      00
 1303              	.LEHE1:
 1304              	.LVL132:
 1305              	.LBB3688:
 1306              	.LBB3689:
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _M_init(__token);
 1307              		.loc 4 1590 0
 1308 00aa 4C8D6C24 		leaq	32(%rsp), %r13
 1308      20
 1309              	.LVL133:
 1310 00af 4889EE   		movq	%rbp, %rsi
 1311 00b2 4C89EF   		movq	%r13, %rdi
 1312              	.LEHB2:
 1313 00b5 E8000000 		call	_ZNSt13random_device7_M_initERKSs@PLT
 1313      00
 1314              	.LEHE2:
 1315              	.LVL134:
 1316              	.LBE3689:
 1317              	.LBE3688:
 1318              	.LBB3690:
 1319              	.LBB3691:
 1320              	.LBB3692:
 1321              	.LBB3693:
 1322              	.LBB3694:
 1323              	.LBB3695:
 1324              		.file 8 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** /** @file bits/basic_string.h
GAS LISTING /tmp/ccJUMvuF.s 			page 121


  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #define _BASIC_STRING_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <debug/debug.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if __cplusplus >= 201103L
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <initializer_list>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** {
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   /**
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup strings
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup sequences
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                   char_traits<_CharT>.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @doctodo
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Documentation?  What's that?
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  A string looks like this:
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @code
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        [_Rep]
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        _M_length
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @endcode
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
GAS LISTING /tmp/ccJUMvuF.s 			page 122


  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  pointer to the header.
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  object at the front.
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string length.)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  for a C++ string implementation.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   */
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   // 21.3  Template class basic_string
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     class basic_string
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Types:
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Traits					    traits_type;
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****                                                             const_iterator;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // _Rep: string representation
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   Invariants:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      must be kept null-terminated.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
GAS LISTING /tmp/ccJUMvuF.s 			page 123


 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   3. _M_refcount has three states:
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //       0: one reference, non-const.
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      empty string representation needs no constructor.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep_base
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_length;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_capacity;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep : _Rep_base
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Types:
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// (Public) Data members:
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// look like this:
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Solving for m:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const size_type	_S_max_size;
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static _Rep&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { 
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // be reasonably safe in this case.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount > 0; }
GAS LISTING /tmp/ccJUMvuF.s 			page 124


 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = -1; }
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = 0; }
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_length = __n;
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refdata() throw()
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Create & Destroy
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static _Rep*
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 							 -1) <= 0)
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		{
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		}
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 125


 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refcopy() throw()
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return _M_refdata();
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (public):
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // size that the allocator can hold.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (private):
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 1325              		.loc 8 293 0
 1326 00ba 488B8424 		movq	10048(%rsp), %rax
 1326      40270000 
 1327              	.LBE3695:
 1328              	.LBE3694:
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _Rep*
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 1329              		.loc 8 301 0
 1330 00c2 488D78E8 		leaq	-24(%rax), %rdi
 1331              	.LVL135:
 1332              	.LBE3693:
GAS LISTING /tmp/ccJUMvuF.s 			page 126


 1333              	.LBE3692:
 1334              	.LBB3696:
 1335              	.LBB3697:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1336              		.loc 8 240 0
 1337 00c6 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1337      000000
 1338 00cd 0F85F801 		jne	.L122
 1338      0000
 1339              	.LVL136:
 1340              	.L87:
 1341              	.LBE3697:
 1342              	.LBE3696:
 1343              	.LBE3691:
 1344              	.LBE3690:
 1345              	.LBB3711:
 1346              	.LBB3712:
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval();
 1347              		.loc 4 1622 0
 1348 00d3 4C89EF   		movq	%r13, %rdi
 1349              	.LEHB3:
 1350 00d6 E8000000 		call	_ZNSt13random_device9_M_getvalEv@PLT
 1350      00
 1351              	.LVL137:
 1352              	.LBE3712:
 1353              	.LBE3711:
 1354              	.LBB3713:
 1355              	.LBB3714:
 1356              	.LBB3715:
 1357              	.LBB3716:
 1358              	.LBB3717:
 1359              	.LBB3718:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1360              		.loc 4 142 0
 1361 00db 89C7     		movl	%eax, %edi
 1362              	.LVL138:
 1363              	.LBE3718:
 1364              	.LBE3717:
 1365              	.LBE3716:
 1366              	.LBB3721:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1367              		.loc 3 334 0
 1368 00dd BE010000 		movl	$1, %esi
 1368      00
 1369 00e2 89C0     		movl	%eax, %eax
 1370              	.LBE3721:
 1371              	.LBB3738:
 1372              	.LBB3720:
 1373              	.LBB3719:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1374              		.loc 4 142 0
 1375 00e4 4889BC24 		movq	%rdi, 5040(%rsp)
 1375      B0130000 
 1376              	.LVL139:
 1377              	.LBE3719:
 1378              	.LBE3720:
 1379              	.LBE3738:
GAS LISTING /tmp/ccJUMvuF.s 			page 127


 1380              	.LBB3739:
 1381              	.LBB3722:
 1382              	.LBB3723:
 1383              	.LBB3724:
 1384              	.LBB3725:
 1385 00ec 48BF210D 		movabsq	$945986875574848801, %rdi
 1385      D2200DD2 
 1385      200D
 1386              	.LVL140:
 1387 00f6 662E0F1F 		.p2align 4,,10
 1387      84000000 
 1387      0000
 1388              		.p2align 3
 1389              	.L91:
 1390              	.LBE3725:
 1391              	.LBE3724:
 1392              	.LBE3723:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1393              		.loc 3 337 0
 1394 0100 4889C1   		movq	%rax, %rcx
 1395              	.LBB3732:
 1396              	.LBB3729:
 1397              	.LBB3726:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1398              		.loc 4 142 0
 1399 0103 4889F2   		movq	%rsi, %rdx
 1400              	.LBE3726:
 1401              	.LBE3729:
 1402              	.LBE3732:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1403              		.loc 3 337 0
 1404 0106 48C1E91E 		shrq	$30, %rcx
 1405              	.LBB3733:
 1406              	.LBB3730:
 1407              	.LBB3727:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1408              		.loc 4 142 0
 1409 010a 48C1EA04 		shrq	$4, %rdx
 1410              	.LBE3727:
 1411              	.LBE3730:
 1412              	.LBE3733:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1413              		.loc 3 337 0
 1414 010e 4831C8   		xorq	%rcx, %rax
 1415              	.LVL141:
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 1416              		.loc 3 338 0
 1417 0111 4869C865 		imulq	$1812433253, %rax, %rcx
 1417      89076C
 1418              	.LVL142:
 1419              	.LBB3734:
 1420              	.LBB3731:
 1421              	.LBB3728:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1422              		.loc 4 142 0
 1423 0118 4889D0   		movq	%rdx, %rax
 1424 011b 48F7E7   		mulq	%rdi
GAS LISTING /tmp/ccJUMvuF.s 			page 128


 1425 011e 4889F0   		movq	%rsi, %rax
 1426 0121 48D1EA   		shrq	%rdx
 1427 0124 4869D270 		imulq	$624, %rdx, %rdx
 1427      020000
 1428 012b 4829D0   		subq	%rdx, %rax
 1429              	.LBE3728:
 1430              	.LBE3731:
 1431              	.LBE3734:
 1432              	.LBB3735:
 1433              	.LBB3736:
 1434              	.LBB3737:
 1435 012e 01C8     		addl	%ecx, %eax
 1436              	.LVL143:
 1437              	.LBE3737:
 1438              	.LBE3736:
 1439              	.LBE3735:
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 1440              		.loc 3 340 0
 1441 0130 488904F3 		movq	%rax, (%rbx,%rsi,8)
 1442              	.LBE3722:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1443              		.loc 3 334 0
 1444 0134 4883C601 		addq	$1, %rsi
 1445              	.LVL144:
 1446 0138 4881FE70 		cmpq	$624, %rsi
 1446      020000
 1447 013f 75BF     		jne	.L91
 1448              	.LVL145:
 1449              	.LBE3739:
 1450              	.LBE3715:
 1451              	.LBE3714:
 1452              	.LBE3713:
 1453              	.LBB3740:
 1454              	.LBB3741:
 1455              		.file 9 "/opt/gcc/4.9.2/include/c++/4.9.2/ostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Output streams -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
GAS LISTING /tmp/ccJUMvuF.s 			page 129


  22:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** /** @file include/ostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifndef _GLIBCXX_OSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #define _GLIBCXX_OSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <ios>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <bits/ostream_insert.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** {
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Template class basic_ostream.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @ingroup io
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _CharT  Type of character stream.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *                   char_traits<_CharT>.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This is the base class for all output streams.  It provides text
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  formatting of all builtin types, and communicates with any class
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  derived from basic_streambuf to do the actual output.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Types (inherited from basic_ios):
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _CharT			 		char_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::int_type 		int_type;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::off_type 		off_type;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _Traits			 		traits_type;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Non-standard Types:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       							__num_put_type;
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base constructor.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This ctor is almost never called by the user directly, rather from
GAS LISTING /tmp/ccJUMvuF.s 			page 130


  79:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  their own stream buffer.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream(__streambuf_type* __sb)
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(__sb); }
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base destructor.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This does very little apart from providing a virtual base dtor.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       virtual
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~basic_ostream() { }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /// Safe prefix/suffix operations.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       class sentry;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       friend class sentry;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Interface for manipulators.
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  information, see the iomanip header.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 110:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 111:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 117:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 118:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 120:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 121:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 122:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 126:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 127:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 128:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 130:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 131


 136:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 137:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Inserters
 139:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 140:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 141:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 142:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This can have several effects, concluding with the setting of a
 144:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  status flag; see the sentry documentation for more.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 146:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 147:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 149:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 150:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state without causing an
 151:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 152:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  be rethrown.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 154:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 156:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 157:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief Integer arithmetic inserters
 158:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n A variable of builtin integral type.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 160:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 161:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 162:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 163:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 164:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 165:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long __n)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 167:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 168:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 169:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long __n)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 173:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(bool __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(short __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned short __n)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 183:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 185:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 188:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(int __n);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 191:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned int __n)
 192:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
GAS LISTING /tmp/ccJUMvuF.s 			page 132


 193:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 194:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 195:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 196:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 199:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 200:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long long __n)
 201:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 204:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long long __n)
 205:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 207:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 208:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 209:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 210:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 211:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Floating point arithmetic inserters
 212:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __f A variable of builtin floating point type.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 214:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 215:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 216:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 218:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 219:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(double __f)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 223:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(float __f)
 224:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 225:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 227:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<double>(__f));
 228:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 229:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 231:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long double __f)
 232:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 233:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 234:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 236:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Pointer arithmetic inserters
 237:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __p A variable of pointer type.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 239:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 240:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 241:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 242:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 243:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 244:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(const void* __p)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__p); }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Extracting from another streambuf.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __sb  A pointer to a streambuf
GAS LISTING /tmp/ccJUMvuF.s 			page 133


 250:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 251:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 252:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  in that it also constructs a sentry object and has the same error
 253:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  handling behavior.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 256:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 257:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 258:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  until one of the following occurs:
 259:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - the input stream reaches end-of-file,
 261:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - insertion into the output sequence fails (in this case, the
 262:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    character that would have been inserted is not extracted), or
 263:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 264:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    sets failbit in the error state
 265:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the function inserts no characters, failbit is set.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 268:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 269:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__streambuf_type* __sb);
 270:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 271:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 273:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 274:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Unformatted Output Functions
 275:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the unformatted output functions have some common behavior.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Each starts by constructing a temporary object of type
 278:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 279:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  with the setting of a status flag; see the sentry documentation
 280:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  for more.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 282:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 283:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 285:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 286:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 287:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 288:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  without completing its actions.
 289:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 290:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Simple insertion.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __c  The character to insert.
 294:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 295:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 296:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Tries to insert @p __c.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 298:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 299:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 302:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       put(char_type __c);
 303:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 304:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 305:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Core write functionality, without sentry.
 306:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
GAS LISTING /tmp/ccJUMvuF.s 			page 134


 307:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 308:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 309:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       void
 310:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       _M_write(const char_type* __s, streamsize __n)
 311:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 312:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 313:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (__put != __n)
 314:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  this->setstate(ios_base::badbit);
 315:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Character string insertion.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __s  The array to insert.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n  Maximum number of characters to insert.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 322:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 323:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 324:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  one of the following happens:
 325:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 326:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - @p __n characters are inserted
 327:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 328:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *    will be set in the stream's error state)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 330:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @note  This function is not overloaded on signed char and
 331:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *         unsigned char.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 333:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 334:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       write(const char_type* __s, streamsize __n);
 335:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 336:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 338:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Synchronizing the stream buffer.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 340:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 341:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 343:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 344:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  sets badbit.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 346:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 347:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       flush();
 348:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 349:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 350:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Getting the current write position.
 351:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  A file position object.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 353:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 354:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 355:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 356:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       pos_type
 357:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       tellp();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 360:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __pos  A file position object.
 362:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 363:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
GAS LISTING /tmp/ccJUMvuF.s 			page 135


 364:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 365:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  that function fails, sets failbit.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 367:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 368:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(pos_type);
 369:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 370:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 371:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Changing the current write position.
 372:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __off  A file offset object.
 373:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __dir  The direction in which to seek.
 374:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  *this
 375:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 376:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 377:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If that function fails, sets failbit.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 379:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        __ostream_type&
 380:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       seekp(off_type, ios_base::seekdir);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 382:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     protected:
 383:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream()
 384:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(0); }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       template<typename _ValueT>
 387:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_type&
 388:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	_M_insert(_ValueT __v);
 389:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 390:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 391:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Performs setup work for output streams.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 394:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Objects of this class are created before all of the standard
 395:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 396:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  suffix operations</em>.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 398:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <typename _CharT, typename _Traits>
 399:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 400:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 401:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Data Members.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       bool 				_M_ok;
 403:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 404:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
 406:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 407:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  The constructor performs preparatory work.
 408:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __os  The output stream to guard.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 410:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 411:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 412:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  is called to synchronize the output sequences.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the stream state is still good, then the sentry state becomes
 415:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  true (@a okay).
 416:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 417:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 418:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 419:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 420:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
GAS LISTING /tmp/ccJUMvuF.s 			page 136


 421:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Possibly flushes the stream.
 422:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 423:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 424:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 425:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c flush() on the output stream.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 427:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~sentry()
 428:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 429:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// XXX MT
 430:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 431:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  {
 432:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 434:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	      _M_os.setstate(ios_base::badbit);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	  }
 436:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 437:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 438:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 439:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Quick status checking.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  The sentry state.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 443:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  return value is that of the sentry state (true == okay).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #if __cplusplus >= 201103L
 446:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
 447:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #endif
 448:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator bool() const
 449:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_ok; }
 450:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     };
 451:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 452:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 453:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 454:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Character inserters
 455:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 456:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __c  A character.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 458:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 459:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 460:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 461:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts a single character and any required
 462:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 463:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  called.
 464:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 465:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 466:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @c char, the character is widened before insertion.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 469:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 470:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 471:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 472:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 473:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 474:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 475:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << __out.widen(__c)); }
 477:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 137


 478:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Specialization
 479:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template <class _Traits>
 480:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 481:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 482:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 483:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 484:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 485:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 486:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 487:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 491:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 492:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 493:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << static_cast<char>(__c)); }
 494:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 495:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@{
 497:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 498:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  String inserters
 499:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __out  An output stream.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @param  __s  A character string.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @return  out
 502:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 503:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 504:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 505:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 506:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 507:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 508:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 511:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 512:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 514:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 516:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 517:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 518:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 519:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     basic_ostream<_CharT, _Traits> &
 524:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 525:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 526:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Partial specializations
 527:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 529:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 530:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
 531:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       if (!__s)
 532:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__out.setstate(ios_base::badbit);
 533:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       else
 534:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccJUMvuF.s 			page 138


 1456              		.loc 9 535 0
 1457 0141 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1457      000000
 1458 0148 488D3500 		leaq	.LC5(%rip), %rsi
 1458      000000
 1459              	.LVL146:
 1460 014f BA0B0000 		movl	$11, %edx
 1460      00
 1461 0154 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1461      00
 1462              	.LVL147:
 1463              	.LBE3741:
 1464              	.LBE3740:
 1465              	.LBB3742:
 1466              	.LBB3743:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 1467              		.loc 9 171 0
 1468 0159 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1468      000000
 1469 0160 BEE80300 		movl	$1000, %esi
 1469      00
 1470 0165 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 1470      00
 1471              	.LVL148:
 1472              	.LBE3743:
 1473              	.LBE3742:
 1474              	.LBB3745:
 1475              	.LBB3746:
 1476              		.loc 9 535 0
 1477 016a 488D3500 		leaq	.LC6(%rip), %rsi
 1477      000000
 1478 0171 BA120000 		movl	$18, %edx
 1478      00
 1479 0176 4889C7   		movq	%rax, %rdi
 1480              	.LBE3746:
 1481              	.LBE3745:
 1482              	.LBB3748:
 1483              	.LBB3744:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 1484              		.loc 9 171 0
 1485 0179 4989C6   		movq	%rax, %r14
 1486              	.LVL149:
 1487              	.LBE3744:
 1488              	.LBE3748:
 1489              	.LBB3749:
 1490              	.LBB3747:
 1491              		.loc 9 535 0
 1492 017c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1492      00
 1493              	.LVL150:
 1494              	.LBE3747:
 1495              	.LBE3749:
 1496              	.LBB3750:
 1497              	.LBB3751:
 1498              	.LBB3752:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 536:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       return __out;
GAS LISTING /tmp/ccJUMvuF.s 			page 139


 537:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     }
 538:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Signed and unsigned
 540:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits>&
 542:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<class _Traits>
 546:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<char, _Traits> &
 547:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 548:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 549:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   //@}
 550:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 551:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   // Standard basic_ostream manipulators
 552:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 553:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 554:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a newline and flush the stream.
 555:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 556:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 557:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  desired, leading to poor buffering performance.  See
 558:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html
 559:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  for more on this subject.
 560:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 561:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 562:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 563:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 566:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 567:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Write a null character into the output sequence.
 568:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 569:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 570:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 571:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  string terminator.
 572:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 573:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 574:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 575:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 576:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.put(_CharT()); }
 577:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 578:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
 579:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Flushes the output stream.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
 581:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 582:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
 583:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
 584:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     inline basic_ostream<_CharT, _Traits>&
 585:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 586:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return __os.flush(); }
 1499              		.loc 9 587 0
 1500 0181 4C89F7   		movq	%r14, %rdi
 1501 0184 E8000000 		call	_ZNSo5flushEv@PLT
 1501      00
 1502              	.LVL151:
 1503              	.LBE3752:
 1504              	.LBE3751:
GAS LISTING /tmp/ccJUMvuF.s 			page 140


 1505              	.LBE3750:
 1506              	.LBB3753:
 1507              	.LBB3754:
 1508              	.LBB3755:
  35:./benchs/timing.hpp **** }
  36:./benchs/timing.hpp **** #else
  37:./benchs/timing.hpp **** #include <time.h>
  38:./benchs/timing.hpp **** double gimme_time() {
  39:./benchs/timing.hpp ****     // Note that this way of timing doesn't have too high a resolution. I'm lazy.
  40:./benchs/timing.hpp ****     return static_cast<double>(clock())/static_cast<double>(CLOCKS_PER_SEC);
  41:./benchs/timing.hpp **** }
  42:./benchs/timing.hpp **** #endif
  43:./benchs/timing.hpp **** 
  44:./benchs/timing.hpp **** struct Timer {
  45:./benchs/timing.hpp ****     Timer() : _t0(gimme_time()) {}
 1509              		.loc 2 46 0
 1510 0189 E8000000 		call	_Z10gimme_timev@PLT
 1510      00
 1511              	.LEHE3:
 1512              	.LVL152:
 1513              	.LBE3755:
 1514              	.LBE3754:
 1515              	.LBB3757:
 1516              	.LBB3758:
 1517              	.LBB3759:
 1518              	.LBB3760:
 1519              		.file 10 "/opt/gcc/4.9.2/include/c++/4.9.2/functional"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // <functional> -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Copyright (c) 1997
  26:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Silicon Graphics Computer Systems, Inc.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *
  28:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * Permission to use, copy, modify, distribute and sell this software
  29:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * and its documentation for any purpose is hereby granted without fee,
GAS LISTING /tmp/ccJUMvuF.s 			page 141


  30:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * provided that the above copyright notice appear in all copies and
  31:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * that both that copyright notice and this permission notice appear
  32:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * in supporting documentation.  Silicon Graphics makes no
  33:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * representations about the suitability of this software for any
  34:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  * purpose.  It is provided "as is" without express or implied warranty.
  35:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *
  36:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  */
  37:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** /** @file include/functional
  39:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  *  This is a Standard C++ Library header.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  */
  41:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #ifndef _GLIBCXX_FUNCTIONAL
  43:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #define _GLIBCXX_FUNCTIONAL 1
  44:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #pragma GCC system_header
  46:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/c++config.h>
  48:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/stl_function.h>
  49:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #if __cplusplus >= 201103L
  51:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <typeinfo>
  53:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <new>
  54:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <tuple>
  55:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <type_traits>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/functexcept.h>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** #include <bits/functional_hash.h>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** {
  61:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  63:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _MemberPointer>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     _Mem_fn<_Tp _Class::*>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     mem_fn(_Tp _Class::*) noexcept;
  68:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** _GLIBCXX_HAS_NESTED_TYPE(result_type)
  70:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// If we have found a result_type, extract it.
  72:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<bool _Has_result_type, typename _Functor>
  73:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_get_result_type
  74:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
  75:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
  77:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_get_result_type<true, _Functor>
  78:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef typename _Functor::result_type result_type; };
  79:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
  81:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Base class for any function object that has a weak result type, as
  82:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  defined in 3.3/3 of TR1.
  83:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
  84:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
  85:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl
  86:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Maybe_get_result_type<__has_result_type<_Functor>::value, _Functor>
GAS LISTING /tmp/ccJUMvuF.s 			page 142


  87:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
  88:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function type.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...)>
  92:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......)>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
  97:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 101:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 103:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 105:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 107:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) volatile>
 108:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 109:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 110:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) volatile>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 113:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 115:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const volatile>
 116:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 117:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 118:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 119:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const volatile>
 120:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 121:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function reference.
 123:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 124:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes...)>
 125:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 126:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes......)>
 129:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 130:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 131:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve the result type for a function pointer.
 132:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes...)>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 135:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 137:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes......)>
 138:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 139:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 140:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a member function pointer.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 142:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)>
 143:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
GAS LISTING /tmp/ccJUMvuF.s 			page 143


 144:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 146:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)>
 147:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 148:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a const member function pointer.
 150:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 151:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) const>
 152:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 153:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 155:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) const>
 156:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 157:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a volatile member function pointer.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 160:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) volatile>
 161:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 162:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 163:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) volatile>
 165:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 166:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 167:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Retrieve result type for a const volatile member function pointer.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 169:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				  const volatile>
 171:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 172:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 174:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)
 175:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				  const volatile>
 176:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { typedef _Res result_type; };
 177:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 178:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 179:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Strip top-level cv-qualifiers from the function object and let
 180:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  _Weak_result_type_impl perform the real work.
 181:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
 182:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor>
 183:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Weak_result_type
 184:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type_impl<typename remove_cv<_Functor>::type>
 185:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 186:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 188:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Invoke a function object, which may be either a member pointer or a
 189:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * function object. The first parameter will tell which.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 191:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
 193:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 194:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     (!is_member_pointer<_Functor>::value
 195:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && !is_function<_Functor>::value
 196:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && !is_function<typename remove_pointer<_Functor>::type>::value),
 197:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     typename result_of<_Functor&(_Args&&...)>::type
 198:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   >::type
 199:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 200:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
GAS LISTING /tmp/ccJUMvuF.s 			page 144


 201:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return __f(std::forward<_Args>(__args)...);
 202:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 203:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 204:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 205:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
 206:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 207:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****              (is_member_pointer<_Functor>::value
 208:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****               && !is_function<_Functor>::value
 209:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****               && !is_function<typename remove_pointer<_Functor>::type>::value),
 210:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****              typename result_of<_Functor(_Args&&...)>::type
 211:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****            >::type
 212:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 213:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 214:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return std::mem_fn(__f)(std::forward<_Args>(__args)...);
 215:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 216:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 217:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // To pick up function references (that will become function pointers)
 218:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Functor, typename... _Args>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline
 220:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     typename enable_if<
 221:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     (is_pointer<_Functor>::value
 222:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      && is_function<typename remove_pointer<_Functor>::type>::value),
 223:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	     typename result_of<_Functor(_Args&&...)>::type
 224:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   >::type
 225:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __invoke(_Functor __f, _Args&&... __args)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 227:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return __f(std::forward<_Args>(__args)...);
 228:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 229:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 231:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Knowing which of unary_function and binary_function _Tp derives
 232:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  from, derives from the same and ensures that reference_wrapper
 233:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  will have a weak result type. See cases below.
 234:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 235:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<bool _Unary, bool _Binary, typename _Tp>
 236:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // None of the nested argument types.
 239:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 240:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<false, false, _Tp>
 241:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 242:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 243:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 244:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Nested argument_type only.
 245:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 246:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<true, false, _Tp>
 247:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 248:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 249:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::argument_type argument_type;
 250:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 251:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 252:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Nested first_argument_type and second_argument_type only.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 254:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<false, true, _Tp>
 255:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 256:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 257:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
GAS LISTING /tmp/ccJUMvuF.s 			page 145


 258:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 260:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 261:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // All the nested argument types.
 262:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    template<typename _Tp>
 263:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base_impl<true, true, _Tp>
 264:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Weak_result_type<_Tp>
 265:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 266:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::argument_type argument_type;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
 268:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 269:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 270:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 271:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(argument_type)
 272:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(first_argument_type)
 273:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_HAS_NESTED_TYPE(second_argument_type)
 274:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 276:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Derives from unary_function or binary_function when it
 277:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  can. Specializations handle all of the easy cases. The primary
 278:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  template determines what to do with a class type, which may
 279:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  derive from both unary_function and binary_function.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   */
 281:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 282:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base
 283:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : _Reference_wrapper_base_impl<
 284:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __has_argument_type<_Tp>::value,
 285:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __has_first_argument_type<_Tp>::value
 286:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       && __has_second_argument_type<_Tp>::value,
 287:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp>
 288:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 289:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function type (unary)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 292:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1)>
 293:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 294:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 295:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 296:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 297:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) const>
 298:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 299:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 300:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) volatile>
 303:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 304:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 305:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 306:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 307:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1) const volatile>
 308:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 309:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 310:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 311:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function type (binary)
 312:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 313:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2)>
 314:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
GAS LISTING /tmp/ccJUMvuF.s 			page 146


 315:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 316:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 318:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const>
 319:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 320:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 321:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 323:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) volatile>
 324:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 325:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 326:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 327:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 328:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const volatile>
 329:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 330:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 331:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function pointer type (unary)
 333:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 334:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1)>
 335:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1, _Res>
 336:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 337:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 338:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a function pointer type (binary)
 339:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 340:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1, _T2)>
 341:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1, _T2, _Res>
 342:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 343:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 344:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, no qualifiers)
 345:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)()>
 347:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<_T1*, _Res>
 348:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 349:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 350:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, no qualifiers)
 351:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 352:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2)>
 353:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<_T1*, _T2, _Res>
 354:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 355:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, const)
 357:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 358:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const>
 359:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<const _T1*, _Res>
 360:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 361:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 362:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, const)
 363:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<const _T1*, _T2, _Res>
 366:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 367:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 368:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, volatile)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 370:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() volatile>
 371:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<volatile _T1*, _Res>
GAS LISTING /tmp/ccJUMvuF.s 			page 147


 372:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 373:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 374:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, volatile)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 376:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) volatile>
 377:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<volatile _T1*, _T2, _Res>
 378:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 379:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 380:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (unary, const volatile)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 382:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const volatile>
 383:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : unary_function<const volatile _T1*, _Res>
 384:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 385:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // - a pointer to member function type (binary, const volatile)
 387:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const volatile>
 389:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : binary_function<const volatile _T1*, _T2, _Res>
 390:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 391:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 393:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Primary class template for reference_wrapper.
 394:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup functors
 395:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @{
 396:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 397:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 398:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class reference_wrapper
 399:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Reference_wrapper_base<typename remove_cv<_Tp>::type>
 400:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 401:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp* _M_data;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 404:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp type;
 405:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 406:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(_Tp& __indata) noexcept
 407:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       : _M_data(std::__addressof(__indata))
 408:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { }
 409:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 410:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(_Tp&&) = delete;
 411:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 412:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper(const reference_wrapper<_Tp>& __inref) noexcept
 413:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       : _M_data(__inref._M_data)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       reference_wrapper&
 417:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator=(const reference_wrapper<_Tp>& __inref) noexcept
 418:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       {
 419:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_data = __inref._M_data;
 420:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	return *this;
 421:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       }
 422:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 423:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator _Tp&() const noexcept
 424:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return this->get(); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Tp&
 427:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       get() const noexcept
 428:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return *_M_data; }
GAS LISTING /tmp/ccJUMvuF.s 			page 148


 429:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 431:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	typename result_of<_Tp&(_Args&&...)>::type
 432:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Args&&... __args) const
 433:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 434:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return __invoke(get(), std::forward<_Args>(__args)...);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 436:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 437:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 438:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 439:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Denotes a reference should be taken to a variable.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 441:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<_Tp>
 442:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     ref(_Tp& __t) noexcept
 443:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return reference_wrapper<_Tp>(__t); }
 444:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 445:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Denotes a const reference should be taken to a variable.
 446:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 447:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<const _Tp>
 448:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     cref(const _Tp& __t) noexcept
 449:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return reference_wrapper<const _Tp>(__t); }
 450:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 451:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 452:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     void ref(const _Tp&&) = delete;
 453:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 454:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 455:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     void cref(const _Tp&&) = delete;
 456:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 457:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Partial specialization.
 458:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 459:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<_Tp>
 460:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     ref(reference_wrapper<_Tp> __t) noexcept
 461:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return ref(__t.get()); }
 462:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 463:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Partial specialization.
 464:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 465:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline reference_wrapper<const _Tp>
 466:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     cref(reference_wrapper<_Tp> __t) noexcept
 467:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return cref(__t.get()); }
 468:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 469:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // @} group functors
 470:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 471:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename... _Types>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Pack : integral_constant<size_t, sizeof...(_Types)>
 473:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 474:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 475:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _From, typename _To, bool = _From::value == _To::value>
 476:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _AllConvertible : false_type
 477:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 478:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename... _From, typename... _To>
 480:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _AllConvertible<_Pack<_From...>, _Pack<_To...>, true>
 481:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : __and_<is_convertible<_From, _To>...>
 482:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 483:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 484:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp1, typename _Tp2>
 485:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     using _NotSame = __not_<is_same<typename std::decay<_Tp1>::type,
GAS LISTING /tmp/ccJUMvuF.s 			page 149


 486:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 				    typename std::decay<_Tp2>::type>>;
 487:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 488:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 489:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Derives from @c unary_function or @c binary_function, or perhaps
 490:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * nothing, depending on the number of arguments provided. The
 491:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * primary template is the basis case, which derives nothing.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 493:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename... _ArgTypes>
 494:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function { };
 495:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Derives from @c unary_function, as appropriate.
 497:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1>
 498:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1>
 499:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : std::unary_function<_T1, _Res> { };
 500:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 501:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Derives from @c binary_function, as appropriate.
 502:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _T1, typename _T2>
 503:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1, _T2>
 504:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : std::binary_function<_T1, _T2, _Res> { };
 505:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 506:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for member function pointers.
 507:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 508:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...)>
 509:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, _Class*, _ArgTypes...>
 510:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 511:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...);
 512:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 513:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 514:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 515:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 516:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 517:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 518:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 519:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 520:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 521:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 524:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 525:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 526:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 528:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 529:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 530:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 531:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 532:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 533:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // and require _Tp is not _Class, _Class& or _Class*
 534:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 535:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 536:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,
 537:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 540:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // and require _Tp is _Class or derived from _Class
 541:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 542:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
GAS LISTING /tmp/ccJUMvuF.s 			page 150


 543:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 544:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 545:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 546:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 547:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 548:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 550:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 551:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 552:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 553:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 554:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class& __object, _Args&&... __args) const
 555:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 556:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 557:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 558:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 559:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class&& __object, _Args&&... __args) const
 560:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 561:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 562:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 563:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 564:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 565:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 566:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 567:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Class* __object, _Args&&... __args) const
 568:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 569:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 570:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 571:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 572:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 573:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 574:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 575:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 576:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 577:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 578:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 579:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 580:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 581:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 582:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 583:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 584:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 585:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 586:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 587:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 588:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 589:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 590:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for const member function pointers.
 591:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 592:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const>
 593:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, const _Class*,
 594:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 595:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 596:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const;
 597:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 598:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 599:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
GAS LISTING /tmp/ccJUMvuF.s 			page 151


 600:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 601:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 602:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 603:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 604:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 605:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 606:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 607:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 608:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 609:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 610:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 611:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 612:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 613:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 614:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 615:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 616:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 617:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 618:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<const _Class*, _Tp>,
 619:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 622:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 623:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 624:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 625:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 626:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 627:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 628:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 629:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 630:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 631:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 632:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 633:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 634:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class& __object, _Args&&... __args) const
 635:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 636:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 637:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 638:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 639:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class&& __object, _Args&&... __args) const
 640:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 641:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 642:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 643:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 645:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 646:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 647:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const _Class* __object, _Args&&... __args) const
 648:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 649:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 651:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 652:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 653:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 654:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 655:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 656:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
GAS LISTING /tmp/ccJUMvuF.s 			page 152


 657:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 658:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 660:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 661:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 662:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 663:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 664:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 665:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 666:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 667:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 668:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 669:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for volatile member function pointers.
 670:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 671:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) volatile>
 672:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, volatile _Class*,
 673:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 674:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 675:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) volatile;
 676:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 677:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 678:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 679:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 680:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 681:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 682:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 683:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 684:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 685:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 686:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 687:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 688:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 689:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 690:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 691:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 692:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 693:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 694:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 695:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 696:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 697:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<volatile _Class*, _Tp>,
 698:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 699:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 700:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 701:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 702:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 703:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 704:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 705:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 706:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 708:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 709:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 710:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 711:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 712:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 713:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class& __object, _Args&&... __args) const
GAS LISTING /tmp/ccJUMvuF.s 			page 153


 714:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 715:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 716:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 717:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 718:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class&& __object, _Args&&... __args) const
 719:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 720:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 721:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 722:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 723:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 724:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 725:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 726:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(volatile _Class* __object, _Args&&... __args) const
 727:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 728:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 729:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 730:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 731:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 733:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 734:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 735:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 736:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 737:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 738:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 739:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 740:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 741:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 742:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 743:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 744:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 745:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 746:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 747:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 748:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 749:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Implementation of @c mem_fn for const volatile member function pointers.
 750:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 751:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const volatile>
 752:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Maybe_unary_or_binary_function<_Res, const volatile _Class*,
 753:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 					     _ArgTypes...>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 755:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const volatile;
 756:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 757:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 758:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 759:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 760:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		_Args&&... __args) const
 761:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 762:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 763:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    (std::forward<_Args>(__args)...);
 764:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 765:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 767:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 768:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 769:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 770:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 154


 771:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
 772:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs
 773:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 774:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 775:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 776:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs2
 777:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<_NotSame<_Class, _Tp>,
 778:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _NotSame<const volatile _Class*, _Tp>,
 779:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 780:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args>
 782:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	using _RequireValidArgs3
 783:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 784:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 785:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 786:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 787:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Res result_type;
 788:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 789:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 790:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 791:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 792:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 793:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 794:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class& __object, _Args&&... __args) const
 795:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 796:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 797:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 798:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 799:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class&& __object, _Args&&... __args) const
 800:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 801:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 802:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 803:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 804:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 805:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 806:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 807:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Class* __object, _Args&&... __args) const
 808:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 809:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 810:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers, references and pointers to derived
 811:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 812:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 813:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 814:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
 815:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 816:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      std::forward<_Args>(__args)...);
 817:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
 818:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 819:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename... _Args,
 820:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 821:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Res
 822:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 823:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 824:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 826:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor __pmf;
 827:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
GAS LISTING /tmp/ccJUMvuF.s 			page 155


 828:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 829:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 830:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, bool>
 831:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Mem_fn_const_or_non
 832:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 833:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef const _Tp& type;
 834:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 835:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 836:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 837:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Mem_fn_const_or_non<_Tp, false>
 838:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 839:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp& type;
 840:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 841:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 842:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Res, typename _Class>
 843:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mem_fn<_Res _Class::*>
 844:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 845:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       using __pm_type = _Res _Class::*;
 846:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // This bit of genius is due to Peter Dimov, improved slightly by
 848:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Douglas Gregor.
 849:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Made less elegant to support perfect forwarding and noexcept.
 850:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp>
 851:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 852:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, const _Class *) const noexcept
 853:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(std::forward<_Tp>(__object).*std::declval<__pm_type&>())
 854:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return std::forward<_Tp>(__object).*__pm; }
 855:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 856:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Up>
 857:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 858:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __object, _Up * const *) const noexcept
 859:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*std::forward<_Tp>(__object)).*std::declval<__pm_type&>())
 860:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*std::forward<_Tp>(__object)).*__pm; }
 861:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 862:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp>
 863:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 864:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_M_call(_Tp&& __ptr, const volatile void*) const
 865:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept((*__ptr).*std::declval<__pm_type&>()))
 866:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*__ptr).*std::declval<__pm_type&>())
 867:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*__ptr).*__pm; }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       explicit
 871:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Mem_fn(_Res _Class::*__pm) noexcept : __pm(__pm) { }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle objects
 874:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&
 875:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class& __object) const noexcept
 876:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object.*__pm; }
 877:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 878:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&
 879:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class& __object) const noexcept
 880:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object.*__pm; }
 881:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 882:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&&
 883:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class&& __object) const noexcept
 884:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return std::forward<_Class>(__object).*__pm; }
GAS LISTING /tmp/ccJUMvuF.s 			page 156


 885:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 886:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&&
 887:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class&& __object) const noexcept
 888:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return std::forward<const _Class>(__object).*__pm; }
 889:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 890:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle pointers
 891:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res&
 892:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(_Class* __object) const noexcept
 893:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object->*__pm; }
 894:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 895:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       const _Res&
 896:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       operator()(const _Class* __object) const noexcept
 897:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __object->*__pm; }
 898:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 899:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Handle smart pointers and derived
 900:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Req = _Require<_NotSame<_Class*, _Tp>>>
 901:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 902:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_Tp&& __unknown) const
 903:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept(std::declval<_Mem_fn*>()->_M_call
 904:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 			  (std::forward<_Tp>(__unknown), &__unknown)))
 905:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(this->_M_call(std::forward<_Tp>(__unknown), &__unknown))
 906:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return _M_call(std::forward<_Tp>(__unknown), &__unknown); }
 907:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 908:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tp, typename _Req = _Require<is_base_of<_Class, _Tp>>>
 909:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
 910:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(reference_wrapper<_Tp> __ref) const
 911:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	noexcept(noexcept(std::declval<_Mem_fn&>()(__ref.get())))
 912:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype((*this)(__ref.get()))
 913:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return (*this)(__ref.get()); }
 914:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
 916:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Res _Class::*__pm;
 917:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
 918:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 919:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 920:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // 2048.  Unnecessary mem_fn overloads
 921:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 922:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Returns a function object that forwards to the member
 923:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  pointer @a pm.
 924:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup functors
 925:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 926:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
 927:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline _Mem_fn<_Tp _Class::*>
 928:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     mem_fn(_Tp _Class::* __pm) noexcept
 929:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
 930:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       return _Mem_fn<_Tp _Class::*>(__pm);
 931:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     }
 932:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 933:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 934:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Determines if the given type _Tp is a function object
 935:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  should be treated as a subexpression when evaluating calls to
 936:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function objects returned by bind(). [TR1 3.6.1]
 937:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 938:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 939:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 940:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_bind_expression
 941:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public false_type { };
GAS LISTING /tmp/ccJUMvuF.s 			page 157


 942:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 943:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
 944:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief Determines if the given type _Tp is a placeholder in a
 945:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  bind() expression and, if so, which placeholder it is. [TR1 3.6.2]
 946:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 947:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 948:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
 949:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder
 950:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, 0>
 951:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
 952:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 953:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /** @brief The type of placeholder objects defined by libstdc++.
 954:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 955:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 956:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num> struct _Placeholder { };
 957:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 958:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
 959:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
 960:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /** @namespace std::placeholders
 961:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @brief ISO C++11 entities sub-namespace for functional.
 962:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
 963:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 964:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   namespace placeholders
 965:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   {
 966:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
 967:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /* Define a large number of placeholders. There is no way to
 968:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * simplify this with variadic templates, because we're introducing
 969:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * unique names for each.
 970:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
 971:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<1> _1;
 972:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<2> _2;
 973:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<3> _3;
 974:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<4> _4;
 975:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<5> _5;
 976:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<6> _6;
 977:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<7> _7;
 978:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<8> _8;
 979:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<9> _9;
 980:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<10> _10;
 981:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<11> _11;
 982:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<12> _12;
 983:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<13> _13;
 984:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<14> _14;
 985:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<15> _15;
 986:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<16> _16;
 987:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<17> _17;
 988:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<18> _18;
 989:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<19> _19;
 990:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<20> _20;
 991:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<21> _21;
 992:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<22> _22;
 993:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<23> _23;
 994:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<24> _24;
 995:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<25> _25;
 996:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<26> _26;
 997:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<27> _27;
 998:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<28> _28;
GAS LISTING /tmp/ccJUMvuF.s 			page 158


 999:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     extern const _Placeholder<29> _29;
1000:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
1001:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   }
1002:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1003:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
1004:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1005:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1006:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Partial specialization of is_placeholder that provides the placeholder
1007:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  number for the placeholder objects defined by libstdc++.
1008:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  @ingroup binders
1009:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1010:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num>
1011:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder<_Placeholder<_Num> >
1012:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, _Num>
1013:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
1014:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1015:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<int _Num>
1016:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct is_placeholder<const _Placeholder<_Num> >
1017:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public integral_constant<int, _Num>
1018:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { };
1019:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1020:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1021:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Used by _Safe_tuple_element to indicate that there is no tuple
1022:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * element at this position.
1023:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1024:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   struct _No_tuple_element;
1025:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1026:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1027:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Implementation helper for _Safe_tuple_element. This primary
1028:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * template handles the case where it is safe to use @c
1029:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element.
1030:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1031:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t __i, typename _Tuple, bool _IsSafe>
1032:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Safe_tuple_element_impl
1033:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : tuple_element<__i, _Tuple> { };
1034:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1035:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1036:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Implementation helper for _Safe_tuple_element. This partial
1037:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * specialization handles the case where it is not safe to use @c
1038:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element. We just return @c _No_tuple_element.
1039:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1040:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t __i, typename _Tuple>
1041:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Safe_tuple_element_impl<__i, _Tuple, false>
1042:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1043:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _No_tuple_element type;
1044:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1045:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1046:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1047:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * Like tuple_element, but returns @c _No_tuple_element when
1048:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    * tuple_element would return an error.
1049:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1050:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****  template<std::size_t __i, typename _Tuple>
1051:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    struct _Safe_tuple_element
1052:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    : _Safe_tuple_element_impl<__i, _Tuple,
1053:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 			      (__i < tuple_size<_Tuple>::value)>
1054:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    { };
1055:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 159


1056:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1057:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps an argument to bind() into an actual argument to the bound
1058:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function object [TR1 3.6.3/5]. Only the first parameter should
1059:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  be specified: the rest are used to determine among the various
1060:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  implementations. Note that, although this class is a function
1061:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  object, it isn't entirely normal because it takes only two
1062:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  parameters regardless of the number of parameters passed to the
1063:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  bind expression. The first parameter is the bound argument and
1064:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  the second parameter is a tuple containing references to the
1065:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  rest of the arguments.
1066:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1067:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg,
1068:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   bool _IsBindExp = is_bind_expression<_Arg>::value,
1069:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	   bool _IsPlaceholder = (is_placeholder<_Arg>::value > 0)>
1070:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu;
1071:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1072:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1073:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is reference_wrapper<_Tp>, returns the
1074:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  underlying reference. [TR1 3.6.3/5 bullet 1]
1075:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1076:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
1077:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<reference_wrapper<_Tp>, false, false>
1078:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1079:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1080:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp& result_type;
1081:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1082:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       /* Note: This won't actually work for const volatile
1083:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        * reference_wrappers, because reference_wrapper::get() is const
1084:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        * but not volatile-qualified. This might be a defect in the TR.
1085:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****        */
1086:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVRef, typename _Tuple>
1087:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	result_type
1088:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVRef& __arg, _Tuple&) const volatile
1089:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return __arg.get(); }
1090:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1091:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1092:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1093:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is a bind expression, we invoke the underlying
1094:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  function object with the same cv-qualifiers as we are given and
1095:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  pass along all of our arguments (unwrapped). [TR1 3.6.3/5 bullet 2]
1096:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1097:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
1098:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, true, false>
1099:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1100:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1101:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename... _Args>
1102:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
1103:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVArg& __arg,
1104:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		   tuple<_Args...>& __tuple) const volatile
1105:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(__arg(declval<_Args>()...))
1106:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1107:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // Construct an index tuple and forward to __call
1108:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename _Build_index_tuple<sizeof...(_Args)>::__type
1109:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    _Indexes;
1110:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return this->__call(__arg, __tuple, _Indexes());
1111:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1112:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 160


1113:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     private:
1114:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Invokes the underlying function object __arg by unpacking all
1115:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // of the arguments in the tuple.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename... _Args, std::size_t... _Indexes>
1117:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	auto
1118:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call(_CVArg& __arg, tuple<_Args...>& __tuple,
1119:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	       const _Index_tuple<_Indexes...>&) const volatile
1120:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	-> decltype(__arg(declval<_Args>()...))
1121:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1122:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return __arg(std::forward<_Args>(get<_Indexes>(__tuple))...);
1123:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1124:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1125:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1126:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1127:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is a placeholder for the Nth argument, returns
1128:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  a reference to the Nth argument to the bind function object.
1129:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  [TR1 3.6.3/5 bullet 3]
1130:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1131:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
1132:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, false, true>
1133:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1134:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1135:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Signature> class result;
1136:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1137:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1138:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	class result<_CVMu(_CVArg, _Tuple)>
1139:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1140:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // Add a reference, if it hasn't already been done for us.
1141:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // This allows us to be a little bit sloppy in constructing
1142:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  // the tuple that we pass to result_of<...>.
1143:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename _Safe_tuple_element<(is_placeholder<_Arg>::value
1144:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 						- 1), _Tuple>::type
1145:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	    __base_type;
1146:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1147:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	public:
1148:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename add_rvalue_reference<__base_type>::type type;
1149:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	};
1150:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1151:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Tuple>
1152:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	typename result<_Mu(_Arg, _Tuple)>::type
1153:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
1154:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1155:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return std::forward<typename result<_Mu(_Arg, _Tuple)>::type>(
1156:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	      ::std::get<(is_placeholder<_Arg>::value - 1)>(__tuple));
1157:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1158:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1159:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1160:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1161:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  If the argument is just a value, returns a reference to that
1162:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  value. The cv-qualifiers on the reference are the same as the
1163:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  cv-qualifiers on the _Mu object. [TR1 3.6.3/5 bullet 4]
1164:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1165:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Arg>
1166:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Mu<_Arg, false, false>
1167:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1168:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     public:
1169:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Signature> struct result;
GAS LISTING /tmp/ccJUMvuF.s 			page 161


1170:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1171:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1172:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	struct result<_CVMu(_CVArg, _Tuple)>
1173:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1174:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  typedef typename add_lvalue_reference<_CVArg>::type type;
1175:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	};
1176:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1177:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Pick up the cv-qualifiers of the argument
1178:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _CVArg, typename _Tuple>
1179:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_CVArg&&
1180:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	operator()(_CVArg&& __arg, _Tuple&) const volatile
1181:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{ return std::forward<_CVArg>(__arg); }
1182:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1183:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1184:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1185:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1186:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  other function objects untouched. Used by tr1::bind(). The
1187:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  primary template handles the non--member-pointer case.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1189:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp>
1190:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer
1191:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1192:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Tp type;
1193:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1194:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static const _Tp&
1195:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(const _Tp& __x)
1196:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return __x; }
1197:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1198:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static _Tp&&
1199:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(_Tp&& __x)
1200:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return static_cast<_Tp&&>(__x); }
1201:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1202:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1203:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /**
1204:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1205:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  other function objects untouched. Used by tr1::bind(). This
1206:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    *  partial specialization handles the member pointer case.
1207:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    */
1208:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Tp, typename _Class>
1209:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer<_Tp _Class::*>
1210:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1211:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Mem_fn<_Tp _Class::*> type;
1212:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       static type
1214:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       __do_wrap(_Tp _Class::* __pm)
1215:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       { return type(__pm); }
1216:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
1217:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1218:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // Specialization needed to prevent "forming reference to void" errors when
1219:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // bind<void>() is called, because argument deduction instantiates
1220:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // _Maybe_wrap_member_pointer<void> outside the immediate context where
1221:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // SFINAE applies.
1222:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<>
1223:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Maybe_wrap_member_pointer<void>
1224:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1225:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef void type;
1226:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     };
GAS LISTING /tmp/ccJUMvuF.s 			page 162


1227:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1228:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // std::get<I> for volatile-qualified tuples
1229:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t _Ind, typename... _Tp>
1230:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline auto
1231:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __volget(volatile tuple<_Tp...>& __tuple)
1232:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type volatile&
1233:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return std::get<_Ind>(const_cast<tuple<_Tp...>&>(__tuple)); }
1234:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1235:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   // std::get<I> for const-volatile-qualified tuples
1236:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<std::size_t _Ind, typename... _Tp>
1237:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     inline auto
1238:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     __volget(const volatile tuple<_Tp...>& __tuple)
1239:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type const volatile&
1240:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     { return std::get<_Ind>(const_cast<const tuple<_Tp...>&>(__tuple)); }
1241:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1242:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   /// Type of the function object returned from bind().
1243:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****   template<typename _Signature>
1244:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     struct _Bind;
1245:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1246:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****    template<typename _Functor, typename... _Bound_args>
1247:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     class _Bind<_Functor(_Bound_args...)>
1248:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     : public _Weak_result_type<_Functor>
1249:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****     {
1250:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef _Bind __self_type;
1251:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type
1252:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Bound_indexes;
1253:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1254:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       _Functor _M_f;
1255:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       tuple<_Bound_args...> _M_bound_args;
1256:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1257:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call unqualified
1258:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1259:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1260:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
1261:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1262:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1263:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1264:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1265:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1266:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as const
1267:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1268:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1269:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
1270:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1271:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1272:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1273:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1274:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1275:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as volatile
1276:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1278:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_v(tuple<_Args...>&& __args,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		 _Index_tuple<_Indexes...>) volatile
1280:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1281:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1282:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1283:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
GAS LISTING /tmp/ccJUMvuF.s 			page 163


1284:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1285:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       // Call as const volatile
1286:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1287:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	_Result
1288:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	__call_c_v(tuple<_Args...>&& __args,
1289:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		   _Index_tuple<_Indexes...>) const volatile
1290:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	{
1291:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	  return _M_f(_Mu<_Bound_args>()
1292:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1293:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	}
1294:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 
1295:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****      public:
1296:/opt/gcc/4.9.2/include/c++/4.9.2/functional ****       template<typename... _Args>
1297:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	explicit _Bind(const _Functor& __f, _Args&&... __args)
1298:/opt/gcc/4.9.2/include/c++/4.9.2/functional **** 	: _M_f(__f), _M_bound_args(std::forward<_Args>(__args)...)
 1520              		.loc 10 1299 0
 1521 018e 4489BC24 		movl	%r15d, 10052(%rsp)
 1521      44270000 
 1522              	.LBB3761:
 1523              	.LBB3762:
 1524              	.LBB3763:
 1525              	.LBB3764:
 1526              		.file 11 "/opt/gcc/4.9.2/include/c++/4.9.2/tuple"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // <tuple> -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** /** @file include/tuple
  25:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #ifndef _GLIBCXX_TUPLE
  29:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #define _GLIBCXX_TUPLE 1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #pragma GCC system_header
  32:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #if __cplusplus < 201103L
GAS LISTING /tmp/ccJUMvuF.s 			page 164


  34:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** # include <bits/c++0x_warning.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #else
  36:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <utility>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <array>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** #include <bits/uses_allocator.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    *  @addtogroup utilities
  47:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    *  @{
  48:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****    */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds a const reference to a non-reference type.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  52:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_c_ref
  53:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef const _Tp& type; };
  54:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_c_ref<_Tp&>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  58:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds a reference to a non-reference type.
  60:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_ref
  62:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  63:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_ref<_Tp&>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  67:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   // Adds an rvalue reference to a non-reference type.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_r_ref
  71:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp&& type; };
  72:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<typename _Tp>
  74:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct __add_r_ref<_Tp&>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     { typedef _Tp& type; };
  76:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  78:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base;
  79:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head>
  81:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base<_Idx, _Head, true>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     : public _Head
  83:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     {
  84:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base()
  85:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head() { }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base(const _Head& __h)
  88:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head(__h) { }
  89:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead, typename = typename
GAS LISTING /tmp/ccJUMvuF.s 			page 165


  91:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	       enable_if<!is_convertible<_UHead,
  92:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	                                 __uses_alloc_base>::value>::type>
  93:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****         constexpr _Head_base(_UHead&& __h)
  94:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  95:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  96:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _Head_base(__uses_alloc0)
  97:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _Head() { }
  98:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
 102:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a)
 105:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(*__a._M_a) { }
 106:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 107:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead>
 108:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 110:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc, typename _UHead>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 113:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _Alloc, typename _UHead>
 116:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 117:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 118:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 119:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       static constexpr _Head&
 120:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 121:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       static constexpr const _Head&
 123:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     };
 125:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****   template<std::size_t _Idx, typename _Head>
 127:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     struct _Head_base<_Idx, _Head, false>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****     {
 129:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base()
 130:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _M_head_impl() { }
 131:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       constexpr _Head_base(const _Head& __h)
 133:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       : _M_head_impl(__h) { }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 
 135:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****       template<typename _UHead, typename = typename
 136:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	       enable_if<!is_convertible<_UHead,
 137:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	                                 __uses_alloc_base>::value>::type>
 138:/opt/gcc/4.9.2/include/c++/4.9.2/tuple ****         constexpr _Head_base(_UHead&& __h)
 139:/opt/gcc/4.9.2/include/c++/4.9.2/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 1527              		.loc 11 140 0
 1528 0196 4889DE   		movq	%rbx, %rsi
 1529              	.LBE3764:
 1530              	.LBE3763:
 1531              	.LBE3762:
 1532              	.LBE3761:
 1533              	.LBE3760:
 1534              	.LBE3759:
GAS LISTING /tmp/ccJUMvuF.s 			page 166


 1535              	.LBE3758:
 1536              	.LBE3757:
 1537              	.LBB3779:
 1538              	.LBB3780:
 1539              	.LBB3781:
 1540              		.file 12 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
GAS LISTING /tmp/ccJUMvuF.s 			page 167


  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****  */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <ext/type_traits.h>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/move.h>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** {
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    * @addtogroup iterators
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    * @{
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    */
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @code
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @endcode
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class reverse_iterator
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Iterator current;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 168


 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The copy constructor is normal.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : current(__x.current) { }
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       template<typename _Iter>
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	: current(__x.base()) { }
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       iterator_type
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       base() const
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return current; }
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*() const
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *--__tmp;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
GAS LISTING /tmp/ccJUMvuF.s 			page 169


 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       pointer
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator->() const
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return &(operator*()); }
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c *this
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--current;
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--current;
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return __tmp;
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  @c *this
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--()
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++current;
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--(int)
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++current;
GAS LISTING /tmp/ccJUMvuF.s 			page 170


 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return __tmp;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+(difference_type __n) const
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  *this
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+=(difference_type __n)
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	current -= __n;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-(difference_type __n) const
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  *this
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reverse_iterator&
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-=(difference_type __n)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	current += __n;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator[](difference_type __n) const
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *(*this + __n); }
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 171


 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   //@{
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  A simple bool.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x == __y); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y < __x; }
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__y < __x); }
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x < __y); }
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator>
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
GAS LISTING /tmp/ccJUMvuF.s 			page 172


 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x == __y); }
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y < __x; }
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__y < __x); }
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return !(__x < __y); }
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     // DR 685.
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline auto
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   //@}
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
GAS LISTING /tmp/ccJUMvuF.s 			page 173


 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  push_back.
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class back_insert_iterator
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x) : container(&__x) { }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(__value);
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(__value);
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 174


 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator&
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       back_insert_iterator
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  push_front.
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class front_insert_iterator
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x) : container(&__x) { }
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
GAS LISTING /tmp/ccJUMvuF.s 			page 175


 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(__value);
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(__value);
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator&
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       front_insert_iterator
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
GAS LISTING /tmp/ccJUMvuF.s 			page 176


 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  position.
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  %iterator's position.)
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  save typing.
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container>
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class insert_iterator
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Container* container;
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typename _Container::iterator iter;
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Container          container_type;
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : container(&__x), iter(__i) {}
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /**
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @code
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     // vector v contains A and Z
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
GAS LISTING /tmp/ccJUMvuF.s 			page 177


 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 1;
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 2;
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     i = 3;
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****        *  @endcode
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       */
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus < 201103L
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++iter;
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*()
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++()
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       insert_iterator&
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int)
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *this; }
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   /**
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
GAS LISTING /tmp/ccJUMvuF.s 			page 178


 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****    *  types for you.
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   */
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     }
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // @} group iterators
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** } // namespace
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** {
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   using std::iterator_traits;
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   using std::iterator;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     class __normal_iterator
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     {
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     protected:
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _Iterator _M_current;
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     public:
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       explicit
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(__i) { }
 1541              		.loc 12 729 0
 1542 0199 4D8B3C24 		movq	(%r12), %r15
 1543              	.LVL153:
 1544              	.LBE3781:
 1545              	.LBE3780:
 1546              	.LBE3779:
GAS LISTING /tmp/ccJUMvuF.s 			page 179


 1547              	.LBB3782:
 1548              	.LBB3783:
 1549              	.LBB3784:
 1550 019d 498B5C24 		movq	8(%r12), %rbx
 1550      08
 1551              	.LVL154:
 1552              	.LBE3784:
 1553              	.LBE3783:
 1554              	.LBE3782:
 1555              	.LBB3785:
 1556              	.LBB3777:
 1557              	.LBB3775:
 1558              	.LBB3773:
 1559              		.loc 10 1299 0
 1560 01a2 C7842440 		movl	$0, 10048(%rsp)
 1560      27000000 
 1560      000000
 1561              	.LBB3771:
 1562              	.LBB3769:
 1563              	.LBB3767:
 1564              	.LBB3765:
 1565              		.loc 11 140 0
 1566 01ad 488DBC24 		leaq	10056(%rsp), %rdi
 1566      48270000 
 1567 01b5 48C78424 		movq	$624, 10032(%rsp)
 1567      30270000 
 1567      70020000 
 1568 01c1 B9710200 		movl	$625, %ecx
 1568      00
 1569              	.LBE3765:
 1570              	.LBE3767:
 1571              	.LBE3769:
 1572              	.LBE3771:
 1573              	.LBE3773:
 1574              	.LBE3775:
 1575              	.LBE3777:
 1576              	.LBE3785:
 1577              	.LBB3786:
 1578              	.LBB3756:
 1579              		.loc 2 46 0
 1580 01c6 F20F1104 		movsd	%xmm0, (%rsp)
 1580      24
 1581              	.LVL155:
 1582              	.LBE3756:
 1583              	.LBE3786:
 1584              	.LBB3787:
 1585              	.LBB3778:
 1586              	.LBB3776:
 1587              	.LBB3774:
 1588              	.LBB3772:
 1589              	.LBB3770:
 1590              	.LBB3768:
 1591              	.LBB3766:
 1592              		.loc 11 140 0
 1593 01cb F348A5   		rep; movsq
 1594              	.LVL156:
 1595              	.LBE3766:
GAS LISTING /tmp/ccJUMvuF.s 			page 180


 1596              	.LBE3768:
 1597              	.LBE3770:
 1598              	.LBE3772:
 1599              	.LBE3774:
 1600              	.LBE3776:
 1601              	.LBE3778:
 1602              	.LBE3787:
 1603              	.LBB3788:
 1604              	.LBB3789:
 1605              		.file 13 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Algorithm implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
GAS LISTING /tmp/ccJUMvuF.s 			page 181


  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /** @file bits/stl_algo.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifndef _STL_ALGO_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #define _STL_ALGO_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <cstdlib>             // for rand
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/algorithmfwd.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_heap.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/predefined_ops.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <random>     // for std::uniform_int_distribution
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** {
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Compare>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__a, __b))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__b, __c))
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __b);
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __c);
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __a);
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__a, __c))
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __a);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__b, __c))
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __c);
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __b);
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the Input Iterator case.
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_InputIterator __first, _InputIterator __last,
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, input_iterator_tag)
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && !__pred(__first))
GAS LISTING /tmp/ccJUMvuF.s 			page 182


 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	++__first;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the RAI case.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Predicate>
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::difference_type
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__trip_count = (__last - __first) >> 2;
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __trip_count > 0; --__trip_count)
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       switch (__last - __first)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 3:
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 2:
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 1:
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 0:
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	default:
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __last;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Predicate>
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Iterator
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __find_if(__first, __last, __pred,
GAS LISTING /tmp/ccJUMvuF.s 			page 183


 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       std::__iterator_category(__first));
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Provided for stable_partition to use.
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Predicate __pred)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    std::__iterator_category(__first));
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// remaining range length instead of comparing against an end
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// iterator.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __len; --__len, ++__first)
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // for_each
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_if
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_first_of
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // adjacent_find
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count_if
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate  __predicate)
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for empty ranges
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first1;
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for a pattern of length 1.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (++__p1 == __last2)
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first1, __last1,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 184


 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // General case.
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p;
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __current = __first1;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first1 =
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if(__first1, __last1,
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __p = __p1;
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __current = __first1;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__current == __last1)
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__predicate(__current, __p))
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__p == __last2)
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __first1;
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__current == __last1)
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __last1;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first1;
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search_n
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::forward_iterator_tag)
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __n = __count;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __i = __first;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__i;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__i;
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__n;
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__n == 1)
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __last)
GAS LISTING /tmp/ccJUMvuF.s 			page 185


 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterators.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIter
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::random_access_iterator_tag)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __remainder = __count;
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __remainder;
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __tailSize -= __remainder;
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // next possible match.
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__remainder == 0)
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	        return (__first - __count); // Success
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last; // Failure
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _UnaryPredicate>
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Integer __count,
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count <= 0)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count == 1)
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 std::__iterator_category(__first));
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 186


 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for forward iterators.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first2 == __last2)
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __result = __last1;
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (1)
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator1 __new_result
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__new_result == __last1)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __result;
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __result = __new_result;
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first1 = __new_result;
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator1>)
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator2>)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __comp);
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__rresult == __rlast1)
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
GAS LISTING /tmp/ccJUMvuF.s 			page 187


 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result;
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The last iterator @c i in the range
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  subsequence contained in [__first1,__last1).
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
GAS LISTING /tmp/ccJUMvuF.s 			page 188


 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    The predicate to use.
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The last iterator @c i in the range @p
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __comp)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
GAS LISTING /tmp/ccJUMvuF.s 			page 189


 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for at least an element
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if an element exists in the range @p
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          predicate is false.
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
GAS LISTING /tmp/ccJUMvuF.s 			page 190


 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if_not(__first, __last,
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  do not.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::none_of(__first, __last, __pred);
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred)
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // A specific debug-mode test will be necessary...
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __half;
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle;
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 191


 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __half = __len >> 1;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __middle = __first;
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(*__middle))
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value   The value to be removed.
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are copied is unchanged.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
GAS LISTING /tmp/ccJUMvuF.s 			page 192


 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
GAS LISTING /tmp/ccJUMvuF.s 			page 193


 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__n > 0)
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = *__first;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__result;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__n > 0)
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__first;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		break;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator>
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __n      The number of elements to copy.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result An output iterator.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  result+n.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccJUMvuF.s 			page 194


 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  optimizations such as unrolling).
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   std::__iterator_category(__first));
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         depending on the truth value of a predicate.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_true   An output iterator.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_false  An output iterator.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_true = *__first;
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_true;
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
GAS LISTING /tmp/ccJUMvuF.s 			page 195


 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_false = *__first;
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_false;
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         return __first;
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __result = __first;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         if (!__pred(__first))
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           {
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             *__result = _GLIBCXX_MOVE(*__first);
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             ++__result;
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           }
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence.
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be removed.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   const _Tp& __value)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 196


 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred)
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__binary_pred(__first, __next))
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
GAS LISTING /tmp/ccJUMvuF.s 			page 197


 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Skip the beginning, if already unique.
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Do the real copy work.
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __dest = __first;
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__dest, __first))
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__dest;
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values that compare equal.
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values for which @p __binary_pred returns true.
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
GAS LISTING /tmp/ccJUMvuF.s 			page 198


1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            _BinaryPredicate __binary_pred)
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__first, __next))
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __next;
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = *__first;
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
GAS LISTING /tmp/ccJUMvuF.s 			page 199


1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__rebound_pred
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = __value;
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __value = *__first;
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = __value;
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__result, __first))
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__result = *__first;
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for bidirectional iterators.
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
GAS LISTING /tmp/ccJUMvuF.s 			page 200


1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__first == __last || __first == --__last)
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __last);
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for random access iterators.
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      random_access_iterator_tag)
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last;
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first < __last)
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Reverse a sequence.
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   reverse() returns no value.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  so that the first element becomes the last etc.
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
GAS LISTING /tmp/ccJUMvuF.s 			page 201


1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result)
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__last;
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _EuclideanRingElement>
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _EuclideanRingElement
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__n != 0)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __m = __n;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __n = __t;
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __m;
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_ForwardIterator __first,
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __middle,
GAS LISTING /tmp/ccJUMvuF.s 			page 202


1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __last,
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     forward_iterator_tag)
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __first2 = __middle;
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       do
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last);
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first2 = __middle;
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last)
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__first2 == __last)
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first2 = __middle;
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __middle,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __last,
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __middle && __middle != __last)
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, --__last);
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle)
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__middle, __last,   bidirectional_iterator_tag());
GAS LISTING /tmp/ccJUMvuF.s 			page 203


1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __middle,
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __last,
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     random_access_iterator_tag)
1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __n = __last   - __first;
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __k = __middle - __first;
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__k == __n - __k)
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __p = __first;
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__k < __n - __k)
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__p;
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__q;
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
GAS LISTING /tmp/ccJUMvuF.s 			page 204


1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __p = __q - __k;
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__p;
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__q;
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__middle,__last).
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator __last)
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
GAS LISTING /tmp/ccJUMvuF.s 			page 205


1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__rotate(__first, __middle, __last,
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    std::__iterator_category(__first));
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last).
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs 
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                 _ForwardIterator __last, _OutputIterator __result)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::copy(__first, __middle,
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                        std::copy(__middle, __last, __result));
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__pred(*__first))
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (++__first == __last)
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
GAS LISTING /tmp/ccJUMvuF.s 			page 206


1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__next))
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __next);
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (__pred(*__first))
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last;
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partition
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __len != 0 and !__pred(*__first),
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// same as __stable_partition_adaptive.
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Distance>
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_partition(_ForwardIterator __first,
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _Predicate __pred, _Distance __len)
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len == 1)
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle = __first;
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__middle, __len / 2);
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __left_split =
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__inplace_stable_partition(__first, __pred, __len / 2);
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Advance past true-predicate values to satisfy this
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // function's preconditions.
GAS LISTING /tmp/ccJUMvuF.s 			page 207


1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __right_split =
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__right_len)
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__right_split = std::__inplace_stable_partition(__middle,
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__pred,
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__right_len);
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__left_split, __middle, __right_split);
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__left_split, std::distance(__middle, __right_split));
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __left_split;
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// and __len == distance(__first, __last).
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   ///
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// move-assign an element onto itself.
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_ForwardIterator __last,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Predicate __pred, _Distance __len,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Pointer __buffer,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Distance __buffer_size)
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len <= __buffer_size)
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __result2 = __buffer;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result2;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  for (; __first != __last; ++__first)
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__pred(__first))
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result1;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result2;
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result1;
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __len / 2);
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __left_split =
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__stable_partition_adaptive(__first, __middle, __pred,
GAS LISTING /tmp/ccJUMvuF.s 			page 208


1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __len / 2, __buffer,
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __buffer_size);
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // Advance past true-predicate values to satisfy this
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // function's preconditions.
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __right_len = __len - __len / 2;
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __right_split =
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if_not_n(__middle, __right_len, __pred);
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__right_len)
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __right_split =
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__stable_partition_adaptive(__right_split, __last, __pred,
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __right_len,
1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __buffer, __buffer_size);
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__left_split, __middle, __right_split);
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__left_split, std::distance(__middle, __right_split));
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __left_split;
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _Predicate __pred)
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first, __last);
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.size() > 0)
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_partition_adaptive(__first, __last, __pred,
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.requested_size()),
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __buf.begin(),
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.size()));
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__inplace_stable_partition(__first, __pred,
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  _DistanceType(__buf.requested_size()));
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         of a sequence, preserving relative ordering.
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate functor.
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in the range @p [middle,last).
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
GAS LISTING /tmp/ccJUMvuF.s 			page 209


1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Predicate __pred)
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__stable_partition(__first, __last,
1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routines.
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __middle,
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__i, __first))
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partial_sort
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_first,
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_last,
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_Compare __comp)
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__result_first == __result_last)
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __result_last;
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result_real_last = *__first;
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result_real_last;
GAS LISTING /tmp/ccJUMvuF.s 			page 210


1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first, __result_first))
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _DistanceType(__result_real_last
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     - __result_first),
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _InputValueType(*__first), __comp);
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result_real_last;
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *j<*i is false.
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last)
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				                     _OutputValueType>)
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
GAS LISTING /tmp/ccJUMvuF.s 			page 211


1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         comparison.
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another input iterator.
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
1772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
1776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __comp(*j,*i) is false.
1781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last,
1789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
1790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
GAS LISTING /tmp/ccJUMvuF.s 			page 212


1814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
1820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      _Compare __comp)
1821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __next = __last;
1825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__next;
1826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __next;
1830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__next;
1831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
1839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last) return;
1842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
1862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @doctodo
GAS LISTING /tmp/ccJUMvuF.s 			page 213


1871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This controls some aspect of the sort routines.
1872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_threshold = 16 };
1874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  __comp);
1886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last,
1896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    --__last;
1905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
1907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
1916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
1921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __middle,
GAS LISTING /tmp/ccJUMvuF.s 			page 214


1928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __last,
1929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
1930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last,
1940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
1947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __cut;
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // sort
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _Compare __comp)
1963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first != __last)
1965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				std::__lg(__last - __first) * 2,
1968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
1970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
1978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > 3)
1980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      // Place the nth largest element in its final position.
GAS LISTING /tmp/ccJUMvuF.s 			page 215


1985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__first, __nth);
1986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
1989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__cut <= __nth)
1992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __cut;
1993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __last = __cut;
1995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
1997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // lower_bound moved to stl_algobase.h
2002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than @p __val.
2014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
2040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
GAS LISTING /tmp/ccJUMvuF.s 			page 216


2042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__val, __middle))
2054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
2063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
GAS LISTING /tmp/ccJUMvuF.s 			page 217


2099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val,
2132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __left
2155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
GAS LISTING /tmp/ccJUMvuF.s 			page 218


2156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first, __len);
2157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __right
2158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
2176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
2178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_ValueType, _Tp>)
2193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);      
2196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
GAS LISTING /tmp/ccJUMvuF.s 			page 219


2213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
2250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __first,@p __last ].
2251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val)
2259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
GAS LISTING /tmp/ccJUMvuF.s 			page 220


2270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !(__val < *__i);
2273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val, _Compare __comp)
2294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
2308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
2314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
GAS LISTING /tmp/ccJUMvuF.s 			page 221


2327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 != __last1)
2338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
2346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __last2,
2349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator3 __result,
2350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _Compare __comp)
2351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
2353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__first2 == __last2)
2358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last1;
2361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last2;
2362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
2363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__last2, __last1))
2365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first1 == __last1)
2368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
2369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
2371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
2372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last1;
2373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first2 == __last2)
2378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
2379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last2;
2380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 222


2384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
2387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
2388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
2389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __last,
2391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __buffer_size)
2394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len2)
2399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
2403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
2406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len1 <= __buffer_size)
2408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1)
2410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
2417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__first, __middle, __last);
2421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first, std::distance(__middle, __last));
2422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
2423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Pointer, typename _Compare>
2429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                      _BidirectionalIterator __middle,
2432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last,
2433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
2436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
GAS LISTING /tmp/ccJUMvuF.s 			page 223


2441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __first, __comp);
2442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len2 <= __buffer_size)
2444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __buffer_end, __last, __comp);
2448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len11 = 0;
2454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len22 = 0;
2455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1 > __len2)
2456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = __len1 / 2;
2458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first_cut, __len11);
2459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __second_cut
2460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
2463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = __len2 / 2;
2467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__second_cut, __len22);
2468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first_cut
2469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __new_middle
2474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __buffer_size);
2477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len1 - __len11,
2481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len2 - __len22, __buffer,
2482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__buffer_size, __comp);
2483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _BidirectionalIterator __middle,
2492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _BidirectionalIterator __last,
2493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Compare __comp)
2495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
GAS LISTING /tmp/ccJUMvuF.s 			page 224


2498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 + __len2 == 2)
2499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__middle, __first))
2501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __middle);
2502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len11 = 0;
2507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len22 = 0;
2508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2)
2509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = __len1 / 2;
2511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first_cut, __len11);
2512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __second_cut
2513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = __len2 / 2;
2520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__second_cut, __len22);
2521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first_cut
2522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__first_cut, __middle, __second_cut);
2527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __new_middle = __first_cut;
2528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__new_middle, std::distance(__middle, __second_cut));
2529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len11, __len22, __comp);
2531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __middle,
2539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __last,
2540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
2541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _ValueType;
2544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _DistanceType;
2546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __middle == __last)
2548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _TmpBuf __buf(__first, __last);
GAS LISTING /tmp/ccJUMvuF.s 			page 225


2555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.begin() == 0)
2557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_without_buffer
2558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_adaptive
2561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
2577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range will always come before elements from the second.
2578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last)
2588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
GAS LISTING /tmp/ccJUMvuF.s 			page 226


2612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  come before elements from the second.
2615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last,
2628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
2629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
2648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __result));
GAS LISTING /tmp/ccJUMvuF.s 			page 227


2669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator1 __last,
2676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
2678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __two_step)
2682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __step_size,
2685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __two_step,
2686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __result, __comp);
2687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __two_step;
2688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __chunk_size)
2703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __chunk_size;
2706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_chunk_size = 7 };
2711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     _RandomAccessIterator __last,
2716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                              _Pointer __buffer, _Compare __comp)
2717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
2720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = __last - __first;
2722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
GAS LISTING /tmp/ccJUMvuF.s 			page 228


2726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__step_size < __len)
2728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Pointer __buffer, _Distance __buffer_size,
2744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Compare __comp)
2745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
2748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len > __buffer_size)
2749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__middle - __first),
2762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__last - __middle),
2763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __buffer, __buffer_size,
2764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __comp);
2765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first < 15)
2774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __middle - __first,
GAS LISTING /tmp/ccJUMvuF.s 			page 229


2783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __last - __middle,
2784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
2785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // ranges are sorted.
2793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Compare __comp)
2800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__first2, __first1))
2803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return false;
2804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else if (__comp(__first1, __first2))
2805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
2806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
2807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1, ++__first2;
2808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first2 == __last2;
2810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The iterators over each range only move forward, so this is a
2826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
2829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
GAS LISTING /tmp/ccJUMvuF.s 			page 230


2840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comparison.
2854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Comparison function to use.
2860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
2862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  reaches @p __last2, false is returned.
2871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Compare __comp)
2878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
GAS LISTING /tmp/ccJUMvuF.s 			page 231


2897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
2898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
2899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
2900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
2902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // min_element
2903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // max_element
2904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
2911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
2912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
2913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
2914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
2915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
2916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
2917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
2918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
2920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
2923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __ii))
2924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(__i, --__j))
2927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
2928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
2929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
2930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
2932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
2934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
2936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
2938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
2947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
GAS LISTING /tmp/ccJUMvuF.s 			page 232


2954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
2958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
2973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
2976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
2977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  smallest is generated and false returned.
2984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
2989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
3000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
3005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
3010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
GAS LISTING /tmp/ccJUMvuF.s 			page 233


3011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
3012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
3014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
3015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
3017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
3020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__ii, __i))
3021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(--__j, __i))
3024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
3025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
3026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
3027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
3029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
3031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
3033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
3035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
3051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
3053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
3056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 234


3068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
3071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
3075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the largest is generated and false returned.
3082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
3098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace
3101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace_if
3102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
3106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
3107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _OutputIterator __result,
3108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
3111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = __new_value;
3113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
3114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__first;
3115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
3116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
3121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
GAS LISTING /tmp/ccJUMvuF.s 			page 235


3125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result,
3136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         returns true with another value.
3154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
3159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
3163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _OutputIterator __result,
3171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
GAS LISTING /tmp/ccJUMvuF.s 			page 236


3182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     typename iterator_traits<_InputIterator>::difference_type
3188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
3191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__n;
3194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __n;
3195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
3198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
3212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          according to a comparison functor.
3213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Compare __comp)
3223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
3227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
3229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
3232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (++__next; __next != __last; __first = __next, ++__next)
3235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__next, __first))
3236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __next;
3237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __next;
3238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccJUMvuF.s 			page 237


3239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
3275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
GAS LISTING /tmp/ccJUMvuF.s 			page 238


3296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	               : pair<const _Tp&, const _Tp&>(__a, __b);
3304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
3318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	                      : pair<const _Tp&, const _Tp&>(__a, __b);
3321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
3327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last
3330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  || ++__next == __last)
3331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::make_pair(__first, __first);
3332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __min, __max;
3334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__next, __first))
3335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __next;
3337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __first;
3338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __first;
3342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __next;
3343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = __next;
3346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
3347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
3349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __next = __first;
3351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__next == __last)
3352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
GAS LISTING /tmp/ccJUMvuF.s 			page 239


3353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else if (!__comp(__first, __max))
3356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
3358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__next, __first))
3361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__next, __min))
3363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __next;
3364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__first, __max))
3365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
3368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__next, __max))
3372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __next;
3373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
3376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
3377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(__min, __max);
3380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
3385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
GAS LISTING /tmp/ccJUMvuF.s 			page 240


3410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   Comparison functor.
3414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
3423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // N2722 + DR 915.
3436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l)
3439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l)
3449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
GAS LISTING /tmp/ccJUMvuF.s 			page 241


3467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _BinaryPredicate __pred)
3479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
3485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
3487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return true;
3488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Establish __last2 assuming equal ranges by iterating over the
3490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // rest of the list.
3491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __last2 = __first2;
3492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__last2, std::distance(__first1, __last1));
3493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  
3499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches
3500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__count_if(__first2, __last2,
3501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches ||
3503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__count_if(__scan, __last1,
3504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __first2 + (__last1 - __first1)), beginning with 
3520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          ForwardIterator2 begin, such that equal(__first1, __last1, begin)
3521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          returns true; otherwise, returns false.
3522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
GAS LISTING /tmp/ccJUMvuF.s 			page 242


3524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2)
3527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator1>::value_type,
3533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator2>::value_type>)
3534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_equal_to_iter());
3538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus > 201103L
3573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BinaryPredicate __pred)
3579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat1
GAS LISTING /tmp/ccJUMvuF.s 			page 243


3581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat2
3583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
3600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
3604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches
3625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
GAS LISTING /tmp/ccJUMvuF.s 			page 244


3638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return
3655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
3657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
3671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _BinaryPredicate __pred)
3679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifdef _GLIBCXX_USE_C99_STDINT_TR1
3689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Shuffle the elements of a sequence using a uniform random
3691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         number generator.
3692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
3694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
GAS LISTING /tmp/ccJUMvuF.s 			page 245


3695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __g       A UniformRandomNumberGenerator (26.5.1.3).
3696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
3697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reorders the elements in the range @p [__first,__last) using @p __g to
3699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  provide random numbers.
3700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator,
3702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UniformRandomNumberGenerator>
3703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
3704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
3705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _UniformRandomNumberGenerator&& __g)
3706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
3709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _RandomAccessIterator>)
3710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
3714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
3716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
3717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::make_unsigned<_DistanceType>::type __ud_type;
3719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::uniform_int_distribution<__ud_type> __distr_type;
3720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename __distr_type::param_type __p_type;
3721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __distr_type __d;
3722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
3724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__i, __first + __d(__g, __p_type(0, __i - __first)));
3725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif // C++11
3729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_END_NAMESPACE_VERSION
3731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
3733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Apply a function to every element of a sequence.
3736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __f      A unary function object.
3740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   @p __f (std::move(@p __f) in C++0x).
3741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the function object @p __f to each element in the range
3743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [first,last).  @p __f must not modify the order of the sequence.
3744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If @p __f has a return value it is ignored.
3745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Function>
3747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _Function
3748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     for_each(_InputIterator __first, _InputIterator __last, _Function __f)
3749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
GAS LISTING /tmp/ccJUMvuF.s 			page 246


3752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__f(*__first);
3755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE(__f);
3756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first occurrence of a value in a sequence.
3760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
3764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @c *i == @p __val, or @p __last if no such iterator exists.
3766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find(_InputIterator __first, _InputIterator __last,
3770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	 const _Tp& __val)
3771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_InputIterator>::value_type, _Tp>)
3776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__iter_equals_val(__val));
3779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first element in a sequence for which a
3783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate is true.
3784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is true, or @p __last if no such iterator exists.
3790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if(_InputIterator __first, _InputIterator __last,
3794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _Predicate __pred)
3795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
3800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__pred_iter(__pred));
3804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence.
3808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
GAS LISTING /tmp/ccJUMvuF.s 			page 247


3809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c *i == @p *(i2) such that i2 is an
3815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator in [__first2,__last2), or @p __last1 if no such iterator exists.
3816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator>
3823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
3825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2)
3826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (*__first1 == *__iter)
3839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence using a predicate.
3845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Predicate to use.
3851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c comp(*i, @p *(i2)) is true
3853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and i2 is an iterator in [__first2,__last2), or @p __last1 if no
3854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such iterator exists.
3855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
3863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
GAS LISTING /tmp/ccJUMvuF.s 			page 248


3866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2,
3867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __comp)
3868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(*__first1, *__iter))
3881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence that are equal.
3887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
3889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
3890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that @c *i == @c *(i+1),
3892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  or @p __last if no such iterator exists.
3893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
3897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
3901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __gnu_cxx::__ops::__iter_equal_to_iter());
3906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence using a predicate.
3910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first         A forward iterator.
3912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last          A forward iterator.
3913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred   A binary predicate.
3914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that
3916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __binary_pred(*i,*(i+1)) is true, or @p __last if no such iterator
3917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
3918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
3920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
3922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __binary_pred)
GAS LISTING /tmp/ccJUMvuF.s 			page 249


3923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
3933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the number of copies of a value in a sequence.
3937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be counted.
3941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
3942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @c *i == @p __value
3943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
3947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__value));
3956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the elements of a sequence for which a predicate is true.
3960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
3965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @p __pred(*i) is true.
3966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__pred_iter(__pred));
3979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccJUMvuF.s 			page 250


3980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence.
3983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  A forward iterator.
3985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   A forward iterator.
3986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  A forward iterator.
3987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   A forward iterator.
3988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
3989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c *(i+N) == @p
3990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__first2+N) for each @c N in the range @p
3991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
3992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
3994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
3995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the first element
3996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  of the sub-sequence, or @p __last1 if the sub-sequence is not
3997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found.
3998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
4000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
4001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
4002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.
4003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This means that the returned iterator @c i will be in the range
4005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2))
4006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
4008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
4011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
4015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
4018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
4023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence using a predicate.
4027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     A forward iterator.
4029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      A forward iterator.
4030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     A forward iterator.
4031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2      A forward iterator.
4032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __predicate  A binary predicate.
4033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
4034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that
4035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __predicate(*(i+N),*(__first2+N)) is true for each @c N in the range
4036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__last2-__first2), or @p __last1 if no such iterator exists.
GAS LISTING /tmp/ccJUMvuF.s 			page 251


4037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
4039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
4040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2), using @p __predicate to determine equality,
4041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and returns an iterator to the first element of the
4042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sub-sequence, or @p __last1 if no such iterator exists.
4043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @see search(_ForwardIter1, _ForwardIter1, _ForwardIter2, _ForwardIter2)
4045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
4047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
4048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
4051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _BinaryPredicate  __predicate)
4052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
4056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
4059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__predicate));
4064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values.
4068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count  The number of consecutive values.
4072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
4073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @c *(i+N) == @p __val for
4075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each @c N in the range @p [0,__count), or @p __last if no such
4076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator exists.
4077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p count consecutive elements
4079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __val.
4080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp>
4082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val)
4085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__val));
GAS LISTING /tmp/ccJUMvuF.s 			page 252


4094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values using a
4099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate.
4100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
4102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
4103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count        The number of consecutive values.
4104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val          The value to find.
4105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
4106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @p
4108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __binary_pred(*(i+N),__val) is true for each @c N in the range
4109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__count), or @p __last if no such iterator exists.
4110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p __count
4112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  consecutive elements for which the predicate returns true.
4113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp,
4115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _BinaryPredicate>
4116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val,
4119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
4120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_val(__binary_pred, __val));
4129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on a sequence.
4134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first     An input iterator.
4136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last      An input iterator.
4137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result    An output iterator.
4138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __unary_op  A unary operator.
4139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p __result+(__last-__first).
4140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to each element in the input range and assigns
4142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the results to successive elements of the output sequence.
4143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p *(__result+N)=unary_op(*(__first+N)) for each @c N in the
4144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last-__first).
4145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p unary_op must not alter its argument.
4147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
4149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryOperation>
4150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
GAS LISTING /tmp/ccJUMvuF.s 			page 253


4151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator __first, _InputIterator __last,
4152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _OutputIterator __result, _UnaryOperation __unary_op)
4153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
4156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _UnaryOperation"
4158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__unary_op(*__first))>)
4159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
4162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __unary_op(*__first);
4163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on corresponding elements of two sequences.
4168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     An input iterator.
4170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      An input iterator.
4171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     An input iterator.
4172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
4173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_op  A binary operator.
4174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p result+(last-first).
4175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to the corresponding elements in the two
4177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  input ranges and assigns the results to successive elements of the
4178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output sequence.
4179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p
4180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__result+N)=__binary_op(*(__first1+N),*(__first2+N)) for each
4181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @c N in the range @p [0,__last1-__first1).
4182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p binary_op must not alter either of its arguments.
4184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
4186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _BinaryOperation>
4187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
4188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator1 __first1, _InputIterator1 __last1,
4189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _InputIterator2 __first2, _OutputIterator __result,
4190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BinaryOperation __binary_op)
4191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
4194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
4195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _BinaryOperation"
4197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__binary_op(*__first1,*__first2))>)
4198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2, ++__result)
4201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __binary_op(*__first1, *__first2);
4202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each occurrence of one value in a sequence with another
4207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
GAS LISTING /tmp/ccJUMvuF.s 			page 254


4208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
4212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace() returns no value.
4214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @c *i ==
4216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __old_value then the assignment @c *i = @p __new_value is performed.
4217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
4219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace(_ForwardIterator __first, _ForwardIterator __last,
4221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    const _Tp& __old_value, const _Tp& __new_value)
4222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
4233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (*__first == __old_value)
4234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each value in a sequence for which a predicate returns
4239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         true with another value.
4240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
4244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace_if() returns no value.
4246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @p __pred(*i)
4248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is true then the assignment @c *i = @p __new_value is performed.
4249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Tp>
4251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_if(_ForwardIterator __first, _ForwardIterator __last,
4253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Predicate __pred, const _Tp& __new_value)
4254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
4261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
GAS LISTING /tmp/ccJUMvuF.s 			page 255


4265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
4266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Assign the result of a function object to each value in a
4271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         sequence.
4272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __gen    A function object taking no arguments and returning
4276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                 std::iterator_traits<_ForwardIterator>::value_type
4277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   generate() returns no value.
4278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the assignment @c *i = @p __gen() for each @c i in the range
4280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
4281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Generator>
4283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     generate(_ForwardIterator __first, _ForwardIterator __last,
4285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Generator __gen)
4286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_GeneratorConcept<_Generator,
4290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 1606              		.loc 13 4294 0
 1607 01ce 4C39FB   		cmpq	%r15, %rbx
 1608              	.LBB3790:
 1609              	.LBB3791:
 1610              	.LBB3792:
 1611              	.LBB3793:
 1612              	.LBB3794:
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _GLIBCXX_DEBUG_ASSERT(_M_a <= _M_b);
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	a() const
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _M_a; }
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	b() const
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _M_b; }
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend bool
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator==(const param_type& __p1, const param_type& __p2)
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return __p1._M_a == __p2._M_a && __p1._M_b == __p2._M_b; }
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       private:
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_IntType _M_a;
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_IntType _M_b;
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 256


1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a uniform distribution object.
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       uniform_int_distribution(_IntType __a = 0,
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			   _IntType __b = std::numeric_limits<_IntType>::max())
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_param(__a, __b)
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { }
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       uniform_int_distribution(const param_type& __p)
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_param(__p)
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { }
1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Resets the distribution state.
1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Does nothing for the uniform integer distribution.
1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       reset() { }
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       a() const
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param.a(); }
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       b() const
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param.b(); }
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the parameter set of the distribution.
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param_type
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param() const
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_param; }
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Sets the parameter set of the distribution.
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __param The new parameter set of the distribution.
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       param(const param_type& __param)
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_param = __param; }
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the inclusive lower bound of the distribution range.
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min() const
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return this->a(); }
1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Returns the inclusive upper bound of the distribution range.
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
GAS LISTING /tmp/ccJUMvuF.s 			page 257


1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max() const
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return this->b(); }
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generating functions.
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UniformRandomNumberGenerator>
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	result_type
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator()(_UniformRandomNumberGenerator& __urng)
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { return this->operator()(__urng, _M_param); }
 1613              		.loc 4 1772 0
 1614 01d1 4C8D7508 		leaq	8(%rbp), %r14
 1615              	.LVL157:
 1616              	.LBE3794:
 1617              	.LBE3793:
 1618              	.LBE3792:
 1619              	.LBE3791:
 1620              	.LBE3790:
 1621              		.loc 13 4294 0
 1622 01d5 7424     		je	.L96
 1623              	.LVL158:
 1624 01d7 660F1F84 		.p2align 4,,10
 1624      00000000 
 1624      00
 1625              		.p2align 3
 1626              	.L114:
 1627              	.LBB3799:
 1628              	.LBB3798:
 1629              	.LBB3797:
 1630              	.LBB3796:
 1631              	.LBB3795:
 1632              		.loc 4 1772 0
 1633 01e0 4889EA   		movq	%rbp, %rdx
 1634 01e3 4C89F6   		movq	%r14, %rsi
 1635 01e6 4889EF   		movq	%rbp, %rdi
 1636 01e9 E8000000 		call	_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256
 1636      00
 1637              	.LVL159:
 1638 01ee 4983C704 		addq	$4, %r15
 1639              	.LVL160:
 1640              	.LBE3795:
 1641              	.LBE3796:
 1642              	.LBE3797:
 1643              	.LBE3798:
 1644              	.LBE3799:
4294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__first = __gen();
 1645              		.loc 13 4295 0
 1646 01f2 418947FC 		movl	%eax, -4(%r15)
 1647              	.LVL161:
4294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__first = __gen();
 1648              		.loc 13 4294 0
 1649 01f6 4C39FB   		cmpq	%r15, %rbx
 1650 01f9 75E5     		jne	.L114
 1651              	.LVL162:
 1652              	.L96:
 1653              	.LBE3789:
 1654              	.LBE3788:
GAS LISTING /tmp/ccJUMvuF.s 			page 258


 1655              	.LBB3800:
 1656              	.LBB3801:
  46:./benchs/timing.hpp ****     ~Timer() {
  47:./benchs/timing.hpp ****         double t1 = gimme_time();
 1657              		.loc 2 48 0
 1658 01fb E8000000 		call	_Z10gimme_timev@PLT
 1658      00
 1659              	.LVL163:
 1660              	.LBB3802:
 1661              	.LBB3803:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1662              		.loc 9 535 0
 1663 0200 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1663      000000
 1664 0207 488D3500 		leaq	.LC7(%rip), %rsi
 1664      000000
 1665 020e BA080000 		movl	$8, %edx
 1665      00
 1666              	.LBE3803:
 1667              	.LBE3802:
 1668              		.loc 2 48 0
 1669 0213 F20F1144 		movsd	%xmm0, 8(%rsp)
 1669      2408
 1670              	.LVL164:
 1671              	.LBB3805:
 1672              	.LBB3804:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1673              		.loc 9 535 0
 1674 0219 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1674      00
 1675              	.LVL165:
 1676              	.LBE3804:
 1677              	.LBE3805:
  48:./benchs/timing.hpp ****         std::cout << "done in " << (t1-_t0)*1000.0 << "ms" << std::endl;
 1678              		.loc 2 49 0
 1679 021e F20F1044 		movsd	8(%rsp), %xmm0
 1679      2408
 1680              	.LBB3806:
 1681              	.LBB3807:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1682              		.loc 9 221 0
 1683 0224 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 1683      000000
 1684              	.LBE3807:
 1685              	.LBE3806:
 1686              		.loc 2 49 0
 1687 022b F20F5C04 		subsd	(%rsp), %xmm0
 1687      24
 1688 0230 F20F5905 		mulsd	.LC8(%rip), %xmm0
 1688      00000000 
 1689              	.LVL166:
 1690              	.LBB3810:
 1691              	.LBB3808:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1692              		.loc 9 221 0
 1693 0238 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 1693      00
GAS LISTING /tmp/ccJUMvuF.s 			page 259


 1694              	.LVL167:
 1695              	.LBE3808:
 1696              	.LBE3810:
 1697              	.LBB3811:
 1698              	.LBB3812:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1699              		.loc 9 535 0
 1700 023d 488D3500 		leaq	.LC9(%rip), %rsi
 1700      000000
 1701              	.LBE3812:
 1702              	.LBE3811:
 1703              	.LBB3814:
 1704              	.LBB3809:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 1705              		.loc 9 221 0
 1706 0244 4889C3   		movq	%rax, %rbx
 1707              	.LVL168:
 1708              	.LBE3809:
 1709              	.LBE3814:
 1710              	.LBB3815:
 1711              	.LBB3813:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 1712              		.loc 9 535 0
 1713 0247 BA020000 		movl	$2, %edx
 1713      00
 1714 024c 4889C7   		movq	%rax, %rdi
 1715 024f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1715      00
 1716              	.LVL169:
 1717              	.LBE3813:
 1718              	.LBE3815:
 1719              	.LBB3816:
 1720              	.LBB3817:
 1721              	.LBB3818:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 1722              		.loc 9 565 0
 1723 0254 488B03   		movq	(%rbx), %rax
 1724              	.LBB3819:
 1725              	.LBB3820:
 1726              		.file 14 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccJUMvuF.s 			page 260


  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** /** @file bits/basic_ios.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #pragma GCC system_header
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/localefwd.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_classes.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/locale_facets.h>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _Facet>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     inline const _Facet&
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       return *__f;
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     }
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   /**
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  stream classes. 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @ingroup io
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     class basic_ios : public ios_base
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
GAS LISTING /tmp/ccJUMvuF.s 			page 261


  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  These are non-standard types.
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_put_type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 						     __num_get_type;
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Data members:
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     protected:
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For ostream.
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // For istream.
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****     public:
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@{
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This allows you to write constructs such as
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator void*() const
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       operator!() const
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->fail(); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       //@}
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdstate() const
GAS LISTING /tmp/ccJUMvuF.s 			page 262


 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf_state; }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  users will not need to pass an argument.
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       setstate(iostate __state)
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then re
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // throws the propagated exception if bit also set in
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // exceptions().
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       _M_setstate(iostate __state)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  __throw_exception_again;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A wrapper around rdstate.
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       good() const
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       eof() const
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
GAS LISTING /tmp/ccJUMvuF.s 			page 263


 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fail() const
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fast error checking.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bool
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       bad() const
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       iostate
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions() const
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_exception; }
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <iostream>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <fstream>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  #include <exception>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  int main()
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  {
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
GAS LISTING /tmp/ccJUMvuF.s 			page 264


 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       void
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       exceptions(iostate __except)
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_exception = __except;
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Constructor/destructor:
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { this->init(__sb); }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Empty.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       virtual
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       ~basic_ios() { }
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Members:
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           not tied.
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie() const
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_tie; }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *           was not tied.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
GAS LISTING /tmp/ccJUMvuF.s 			page 265


 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         _M_tie = __tiestr;
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****         return __old;
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current stream buffer.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  This does not change the state of the stream.
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf() const
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return _M_streambuf; }
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  error state.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  derived class.  For example:
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  Reference to this object.
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       basic_ios&
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The current fill character.
GAS LISTING /tmp/ccJUMvuF.s 			page 266


 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill() const
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	if (!_M_fill_init)
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  {
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	    _M_fill_init = true;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	  }
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return _M_fill;
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __ch  The new character.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous fill character.
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       fill(char_type __ch)
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       {
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	char_type __old = this->fill();
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	_M_fill = __ch;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	return __old;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       // Locales:
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The previous locale.
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       locale
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       imbue(const locale& __loc);
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The narrowed character.
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  if possible.
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
GAS LISTING /tmp/ccJUMvuF.s 			page 267


 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @brief  Widens characters.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @return  The widened character.
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Returns the result of
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @code
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  @endcode
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  Additional l10n notes are at
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       */
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       char_type
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       widen(char __c) const
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 1727              		.loc 14 444 0
 1728 0257 488B40E8 		movq	-24(%rax), %rax
 1729 025b 488BAC03 		movq	240(%rbx,%rax), %rbp
 1729      F0000000 
 1730              	.LVL170:
 1731              	.LBB3821:
 1732              	.LBB3822:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 1733              		.loc 14 48 0
 1734 0263 4885ED   		testq	%rbp, %rbp
 1735 0266 0F84F900 		je	.L123
 1735      0000
 1736              	.LVL171:
 1737              	.LBE3822:
 1738              	.LBE3821:
 1739              	.LBB3824:
 1740              	.LBB3825:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 1741              		.loc 1 867 0
 1742 026c 807D3800 		cmpb	$0, 56(%rbp)
 1743 0270 7431     		je	.L97
 1744 0272 0FBE7543 		movsbl	67(%rbp), %esi
 1745              	.LVL172:
 1746              	.L98:
 1747              	.LBE3825:
 1748              	.LBE3824:
 1749              	.LBE3820:
 1750              	.LBE3819:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
GAS LISTING /tmp/ccJUMvuF.s 			page 268


 1751              		.loc 9 565 0
 1752 0276 4889DF   		movq	%rbx, %rdi
 1753 0279 E8000000 		call	_ZNSo3putEc@PLT
 1753      00
 1754              	.LVL173:
 1755              	.LBB3833:
 1756              	.LBB3834:
 1757              		.loc 9 587 0
 1758 027e 4889C7   		movq	%rax, %rdi
 1759 0281 E8000000 		call	_ZNSo5flushEv@PLT
 1759      00
 1760              	.LVL174:
 1761              	.LBE3834:
 1762              	.LBE3833:
 1763              	.LBE3818:
 1764              	.LBE3817:
 1765              	.LBE3816:
 1766              	.LBE3801:
 1767              	.LBE3800:
 1768              	.LBE3753:
 1769              	.LBB3847:
 1770              	.LBB3848:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 1771              		.loc 4 1594 0
 1772 0286 4C89EF   		movq	%r13, %rdi
 1773 0289 E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 1773      00
 1774              	.LVL175:
 1775              	.LBE3848:
 1776              	.LBE3847:
 1777              	.LBE3661:
  53:./benchs/common.hpp ****     std::mt19937 prng(rd());
  54:./benchs/common.hpp ****     std::uniform_int_distribution<> dist(0, maxval);
  55:./benchs/common.hpp **** 
  56:./benchs/common.hpp ****     std::cout << "Generating " << npoints << " random points... " << std::flush;
  57:./benchs/common.hpp ****     { Timer t;
  58:./benchs/common.hpp ****         std::generate(points.begin(), points.end(), std::bind(dist, prng));
  59:./benchs/common.hpp ****     }
  60:./benchs/common.hpp **** 
  61:./benchs/common.hpp ****     return points;
  62:./benchs/common.hpp **** }
 1778              		.loc 5 63 0
 1779 028e 4881C4D8 		addq	$15064, %rsp
 1779      3A0000
 1780              		.cfi_remember_state
 1781              		.cfi_def_cfa_offset 56
 1782              	.LVL176:
 1783 0295 4C89E0   		movq	%r12, %rax
 1784 0298 5B       		popq	%rbx
 1785              		.cfi_def_cfa_offset 48
 1786              	.LVL177:
 1787 0299 5D       		popq	%rbp
 1788              		.cfi_def_cfa_offset 40
 1789              	.LVL178:
 1790 029a 415C     		popq	%r12
 1791              		.cfi_def_cfa_offset 32
 1792              	.LVL179:
GAS LISTING /tmp/ccJUMvuF.s 			page 269


 1793 029c 415D     		popq	%r13
 1794              		.cfi_def_cfa_offset 24
 1795              	.LVL180:
 1796 029e 415E     		popq	%r14
 1797              		.cfi_def_cfa_offset 16
 1798              	.LVL181:
 1799 02a0 415F     		popq	%r15
 1800              		.cfi_def_cfa_offset 8
 1801 02a2 C3       		ret
 1802              	.LVL182:
 1803              	.L97:
 1804              		.cfi_restore_state
 1805              	.LBB3888:
 1806              	.LBB3849:
 1807              	.LBB3845:
 1808              	.LBB3843:
 1809              	.LBB3841:
 1810              	.LBB3839:
 1811              	.LBB3837:
 1812              	.LBB3835:
 1813              	.LBB3831:
 1814              	.LBB3829:
 1815              	.LBB3828:
 1816              	.LBB3826:
 1817              	.LBB3827:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 1818              		.loc 1 869 0
 1819 02a3 4889EF   		movq	%rbp, %rdi
 1820 02a6 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 1820      00
 1821              	.LVL183:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 1822              		.loc 1 870 0
 1823 02ab 488B4500 		movq	0(%rbp), %rax
 1824 02af BE0A0000 		movl	$10, %esi
 1824      00
 1825 02b4 488B4030 		movq	48(%rax), %rax
 1826 02b8 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 1826      000000
 1827 02bf 74B5     		je	.L98
 1828 02c1 4889EF   		movq	%rbp, %rdi
 1829 02c4 FFD0     		call	*%rax
 1830              	.LVL184:
 1831 02c6 0FBEF0   		movsbl	%al, %esi
 1832 02c9 EBAB     		jmp	.L98
 1833              	.LVL185:
 1834              	.L122:
 1835              	.LBE3827:
 1836              	.LBE3826:
 1837              	.LBE3828:
 1838              	.LBE3829:
 1839              	.LBE3831:
 1840              	.LBE3835:
 1841              	.LBE3837:
 1842              	.LBE3839:
 1843              	.LBE3841:
 1844              	.LBE3843:
GAS LISTING /tmp/ccJUMvuF.s 			page 270


 1845              	.LBE3845:
 1846              	.LBE3849:
 1847              	.LBB3850:
 1848              	.LBB3710:
 1849              	.LBB3709:
 1850              	.LBB3708:
 1851              	.LBB3698:
 1852              	.LBB3699:
 1853              	.LBB3700:
 1854              	.LBB3701:
 1855              		.file 15 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Support for atomic operations -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Copyright (C) 2004-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** /** @file ext/atomicity.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifndef _GLIBCXX_ATOMICITY_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #define _GLIBCXX_ATOMICITY_H	1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #pragma GCC system_header
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/c++config.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/gthr.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/atomic_word.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** {
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // Functions for portable atomic access.
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // To abstract locking primitives across all thread policies, use:
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __exchange_and_add_dispatch
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __atomic_add_dispatch
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef _GLIBCXX_ATOMIC_BUILTINS
GAS LISTING /tmp/ccJUMvuF.s 			page 271


  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word* __mem, int __val)
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #else
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   _Atomic_word
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word*, int) throw ();
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   void
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word*, int) throw ();
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #endif
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_single(_Atomic_word* __mem, int __val)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     return __result;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   }
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add_single(_Atomic_word* __mem, int __val)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { *__mem += __val; }
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef __GTHREADS
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 1856              		.loc 15 81 0
 1857 02cb 48833D00 		cmpq	$0, _ZL28__gthrw___pthread_key_createPjPFvPvE@GOTPCREL(%rip)
 1857      00000000 
 1858 02d3 7423     		je	.L88
 1859              	.LVL186:
 1860              	.LBB3702:
 1861              	.LBB3703:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
 1862              		.loc 15 49 0
 1863 02d5 BAFFFFFF 		movl	$-1, %edx
 1863      FF
 1864 02da F00FC150 		lock; xaddl	%edx, -8(%rax)
 1864      F8
 1865 02df 89D0     		movl	%edx, %eax
 1866              	.LVL187:
 1867              	.L89:
 1868              	.LBE3703:
 1869              	.LBE3702:
 1870              	.LBE3701:
 1871              	.LBE3700:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 1872              		.loc 8 245 0
GAS LISTING /tmp/ccJUMvuF.s 			page 272


 1873 02e1 85C0     		testl	%eax, %eax
 1874 02e3 0F8FEAFD 		jg	.L87
 1874      FFFF
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 1875              		.loc 8 249 0
 1876 02e9 488D7424 		leaq	31(%rsp), %rsi
 1876      1F
 1877              	.LVL188:
 1878 02ee E8000000 		call	_ZNSs4_Rep10_M_destroyERKSaIcE@PLT
 1878      00
 1879              	.LVL189:
 1880 02f3 E9DBFDFF 		jmp	.L87
 1880      FF
 1881              	.LVL190:
 1882              	.L88:
 1883              	.LBB3707:
 1884              	.LBB3706:
 1885              	.LBB3704:
 1886              	.LBB3705:
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 1887              		.loc 15 67 0
 1888 02f8 8B50F8   		movl	-8(%rax), %edx
 1889              	.LVL191:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 1890              		.loc 15 68 0
 1891 02fb 8D4AFF   		leal	-1(%rdx), %ecx
 1892 02fe 8948F8   		movl	%ecx, -8(%rax)
 1893              	.LBE3705:
 1894              	.LBE3704:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****       return __exchange_and_add(__mem, __val);
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     else
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****       return __exchange_and_add_single(__mem, __val);
 1895              		.loc 15 84 0
 1896 0301 89D0     		movl	%edx, %eax
 1897              	.LVL192:
 1898 0303 EBDC     		jmp	.L89
 1899              	.LVL193:
 1900              	.L110:
 1901              	.LBE3706:
 1902              	.LBE3707:
 1903              	.LBE3699:
 1904              	.LBE3698:
 1905              	.LBE3708:
 1906              	.LBE3709:
 1907              	.LBE3710:
 1908              	.LBE3850:
 1909              	.LBB3851:
 1910              	.LBB3852:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 1911              		.loc 4 1594 0
 1912 0305 4C89EF   		movq	%r13, %rdi
 1913 0308 4889C3   		movq	%rax, %rbx
 1914              	.LVL194:
 1915 030b E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 1915      00
 1916              	.LVL195:
 1917              	.L105:
GAS LISTING /tmp/ccJUMvuF.s 			page 273


 1918              	.LBE3852:
 1919              	.LBE3851:
 1920              	.LBB3853:
 1921              	.LBB3854:
 1922              	.LBB3855:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 1923              		.loc 6 161 0
 1924 0310 498B3C24 		movq	(%r12), %rdi
 1925              	.LVL196:
 1926              	.LBB3856:
 1927              	.LBB3857:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 1928              		.loc 6 177 0
 1929 0314 4885FF   		testq	%rdi, %rdi
 1930 0317 7405     		je	.L107
 1931              	.LVL197:
 1932              	.LBB3858:
 1933              	.LBB3859:
 1934              	.LBB3860:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       }
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       void
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { ::operator delete(__p); }
 1935              		.loc 7 110 0
 1936 0319 E8000000 		call	_ZdlPv@PLT
 1936      00
 1937              	.LVL198:
 1938              	.L107:
 1939 031e 4889DF   		movq	%rbx, %rdi
 1940              	.LEHB4:
 1941 0321 E8000000 		call	_Unwind_Resume@PLT
 1941      00
 1942              	.LEHE4:
 1943              	.LVL199:
 1944              	.L111:
 1945              	.LBE3860:
 1946              	.LBE3859:
 1947              	.LBE3858:
 1948              	.LBE3857:
 1949              	.LBE3856:
 1950              	.LBE3855:
 1951              	.LBE3854:
 1952              	.LBE3853:
 1953              	.LBB3861:
 1954              	.LBB3862:
 1955              	.LBB3863:
 1956              	.LBB3864:
 1957              	.LBB3865:
 1958              	.LBB3866:
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 1959              		.loc 8 293 0
 1960 0326 488B9424 		movq	10048(%rsp), %rdx
 1960      40270000 
 1961 032e 4889C3   		movq	%rax, %rbx
 1962              	.LVL200:
GAS LISTING /tmp/ccJUMvuF.s 			page 274


 1963              	.LBE3866:
 1964              	.LBE3865:
 1965              		.loc 8 301 0
 1966 0331 488D7AE8 		leaq	-24(%rdx), %rdi
 1967              	.LVL201:
 1968              	.LBE3864:
 1969              	.LBE3863:
 1970              	.LBB3867:
 1971              	.LBB3868:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1972              		.loc 8 240 0
 1973 0335 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1973      000000
 1974 033c 74D2     		je	.L105
 1975              	.LVL202:
 1976              	.LBB3869:
 1977              	.LBB3870:
 1978              	.LBB3871:
 1979              	.LBB3872:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 1980              		.loc 15 81 0
 1981 033e 48833D00 		cmpq	$0, _ZL28__gthrw___pthread_key_createPjPFvPvE@GOTPCREL(%rip)
 1981      00000000 
 1982              	.LBE3872:
 1983              	.LBE3871:
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 							 -1) <= 0)
 1984              		.loc 8 246 0
 1985 0346 488D4F10 		leaq	16(%rdi), %rcx
 1986              	.LVL203:
 1987              	.LBB3879:
 1988              	.LBB3877:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 1989              		.loc 15 81 0
 1990 034a 7423     		je	.L102
 1991              	.LVL204:
 1992              	.LBB3873:
 1993              	.LBB3874:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
 1994              		.loc 15 49 0
 1995 034c B8FFFFFF 		movl	$-1, %eax
 1995      FF
 1996 0351 F00FC101 		lock; xaddl	%eax, (%rcx)
 1997              	.LVL205:
 1998              	.L103:
 1999              	.LBE3874:
 2000              	.LBE3873:
 2001              	.LBE3877:
 2002              	.LBE3879:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 2003              		.loc 8 245 0
 2004 0355 85C0     		testl	%eax, %eax
 2005 0357 7FB7     		jg	.L105
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 2006              		.loc 8 249 0
 2007 0359 488D7424 		leaq	31(%rsp), %rsi
 2007      1F
 2008              	.LVL206:
GAS LISTING /tmp/ccJUMvuF.s 			page 275


 2009 035e E8000000 		call	_ZNSs4_Rep10_M_destroyERKSaIcE@PLT
 2009      00
 2010              	.LVL207:
 2011 0363 EBAB     		jmp	.L105
 2012              	.LVL208:
 2013              	.L123:
 2014              	.LBE3870:
 2015              	.LBE3869:
 2016              	.LBE3868:
 2017              	.LBE3867:
 2018              	.LBE3862:
 2019              	.LBE3861:
 2020              	.LBB3886:
 2021              	.LBB3846:
 2022              	.LBB3844:
 2023              	.LBB3842:
 2024              	.LBB3840:
 2025              	.LBB3838:
 2026              	.LBB3836:
 2027              	.LBB3832:
 2028              	.LBB3830:
 2029              	.LBB3823:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 2030              		.loc 14 49 0
 2031 0365 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 2031      00
 2032              	.LVL209:
 2033              	.L109:
 2034 036a 4889C3   		movq	%rax, %rbx
 2035              	.LVL210:
 2036 036d EBA1     		jmp	.L105
 2037              	.LVL211:
 2038              	.L102:
 2039              	.LBE3823:
 2040              	.LBE3830:
 2041              	.LBE3832:
 2042              	.LBE3836:
 2043              	.LBE3838:
 2044              	.LBE3840:
 2045              	.LBE3842:
 2046              	.LBE3844:
 2047              	.LBE3846:
 2048              	.LBE3886:
 2049              	.LBB3887:
 2050              	.LBB3885:
 2051              	.LBB3884:
 2052              	.LBB3883:
 2053              	.LBB3882:
 2054              	.LBB3881:
 2055              	.LBB3880:
 2056              	.LBB3878:
 2057              	.LBB3875:
 2058              	.LBB3876:
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 2059              		.loc 15 67 0
 2060 036f 8B42F8   		movl	-8(%rdx), %eax
 2061              	.LVL212:
GAS LISTING /tmp/ccJUMvuF.s 			page 276


  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 2062              		.loc 15 68 0
 2063 0372 8D48FF   		leal	-1(%rax), %ecx
 2064              	.LVL213:
 2065 0375 894AF8   		movl	%ecx, -8(%rdx)
 2066 0378 EBDB     		jmp	.L103
 2067              	.LBE3876:
 2068              	.LBE3875:
 2069              	.LBE3878:
 2070              	.LBE3880:
 2071              	.LBE3881:
 2072              	.LBE3882:
 2073              	.LBE3883:
 2074              	.LBE3884:
 2075              	.LBE3885:
 2076              	.LBE3887:
 2077              	.LBE3888:
 2078              		.cfi_endproc
 2079              	.LFE6730:
 2080              		.globl	__gxx_personality_v0
 2081              		.section	.gcc_except_table,"a",@progbits
 2082              	.LLSDA6730:
 2083 0000 FF       		.byte	0xff
 2084 0001 FF       		.byte	0xff
 2085 0002 01       		.byte	0x1
 2086 0003 1C       		.uleb128 .LLSDACSE6730-.LLSDACSB6730
 2087              	.LLSDACSB6730:
 2088 0004 3B       		.uleb128 .LEHB0-.LFB6730
 2089 0005 05       		.uleb128 .LEHE0-.LEHB0
 2090 0006 00       		.uleb128 0
 2091 0007 00       		.uleb128 0
 2092 0008 9501     		.uleb128 .LEHB1-.LFB6730
 2093 000a 05       		.uleb128 .LEHE1-.LEHB1
 2094 000b DA06     		.uleb128 .L109-.LFB6730
 2095 000d 00       		.uleb128 0
 2096 000e A501     		.uleb128 .LEHB2-.LFB6730
 2097 0010 05       		.uleb128 .LEHE2-.LEHB2
 2098 0011 9606     		.uleb128 .L111-.LFB6730
 2099 0013 00       		.uleb128 0
 2100 0014 C601     		.uleb128 .LEHB3-.LFB6730
 2101 0016 B801     		.uleb128 .LEHE3-.LEHB3
 2102 0018 F505     		.uleb128 .L110-.LFB6730
 2103 001a 00       		.uleb128 0
 2104 001b 9106     		.uleb128 .LEHB4-.LFB6730
 2105 001d 05       		.uleb128 .LEHE4-.LEHB4
 2106 001e 00       		.uleb128 0
 2107 001f 00       		.uleb128 0
 2108              	.LLSDACSE6730:
 2109              		.text
 2110              		.size	_Z9genpointsmj.constprop.75, .-_Z9genpointsmj.constprop.75
 2111              		.section	.text.unlikely
 2112              	.LCOLDE10:
 2113              		.text
 2114              	.LHOTE10:
 2115              		.section	.text.unlikely._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEld
 2116              	.LCOLDB11:
 2117              		.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__op
GAS LISTING /tmp/ccJUMvuF.s 			page 277


 2118              	.LHOTB11:
 2119              		.p2align 4,,15
 2120              		.weak	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2121              		.type	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2122              	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_it
 2123              	.LFB6612:
 2124              		.file 16 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Heap implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Copyright (c) 1997
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Silicon Graphics Computer Systems, Inc.
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * Permission to use, copy, modify, distribute and sell this software
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * and its documentation for any purpose is hereby granted without fee,
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * provided that the above copyright notice appear in all copies and
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * that both that copyright notice and this permission notice appear
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * in supporting documentation.  Silicon Graphics makes no
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * representations about the suitability of this software for any
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  */
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** /** @file bits/stl_heap.h
GAS LISTING /tmp/ccJUMvuF.s 			page 278


  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *  This is an internal header file, included by other library headers.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  *  Do not attempt to use it directly. @headername{queue}
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****  */
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #ifndef _STL_HEAP_H
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #define _STL_HEAP_H 1
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <debug/debug.h>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <bits/move.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** #include <bits/predefined_ops.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** namespace std _GLIBCXX_VISIBILITY(default)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** {
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    * @defgroup heap_algorithms Heap
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    * @ingroup sorting_algorithms
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    */
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance,
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Compare>
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     _Distance
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap_until(_RandomAccessIterator __first, _Distance __n,
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		    _Compare __comp)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = 0;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       for (_Distance __child = 1; __child < __n; ++__child)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__comp(__first + __parent, __first + __child))
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    return __child;
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if ((__child & 1) == 0)
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    ++__parent;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return __n;
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // __is_heap, a predicate testing whether or not a range is a heap.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // This function is an extension, not part of the C++ standard.
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance>
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _Distance __n)
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return std::__is_heap_until(__first, __n,
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			__gnu_cxx::__ops::__iter_less_iter()) == __n;
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare,
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Distance>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       return std::__is_heap_until(__first, __n,
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	__gnu_cxx::__ops::__iter_comp_iter(__comp)) == __n;
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
GAS LISTING /tmp/ccJUMvuF.s 			page 279


 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     { return std::__is_heap(__first, std::distance(__first, __last)); }
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline bool
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     { return std::__is_heap(__first, __comp, std::distance(__first, __last)); }
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // Heap-manipulation functions: push_heap, pop_heap, make_heap, sort_heap,
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   // + is_heap and is_heap_until in C++0x.
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance, typename _Tp,
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Compare>
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __push_heap(_RandomAccessIterator __first,
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Distance __holeIndex, _Distance __topIndex, _Tp __value,
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = (__holeIndex - 1) / 2;
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __parent;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Push an element onto a heap.
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap + element.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pushes the element at last-1 onto the valid heap
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  over the range [__first,__last-1).  After completion,
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  [__first,__last) is a valid heap.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_ValueType>)
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap(__first, __last - 1);
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));
GAS LISTING /tmp/ccJUMvuF.s 			page 280


 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, _DistanceType((__last - __first) - 1),
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _DistanceType(0), _GLIBCXX_MOVE(__value),
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_less_val());
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Push an element onto a heap using comparison functor.
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap + element.
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pushes the element at __last-1 onto the valid
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap over the range [__first,__last-1).  After completion,
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  [__first,__last) is a valid heap.  Compare operations are
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  performed using comp.
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap_pred(__first, __last - 1, __comp);
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, _DistanceType((__last - __first) - 1),
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _DistanceType(0), _GLIBCXX_MOVE(__value),
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_val(__comp));
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Distance,
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	   typename _Tp, typename _Compare>
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
 2125              		.loc 16 207 0
 2126              		.cfi_startproc
 2127              	.LVL214:
 2128              	.LBB3889:
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		  _Distance __len, _Tp __value, _Compare __comp)
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       const _Distance __topIndex = __holeIndex;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __secondChild = __holeIndex;
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2129              		.loc 16 212 0
 2130 0000 488D42FF 		leaq	-1(%rdx), %rax
 2131 0004 4989C3   		movq	%rax, %r11
 2132 0007 49C1EB3F 		shrq	$63, %r11
 2133 000b 4901C3   		addq	%rax, %r11
GAS LISTING /tmp/ccJUMvuF.s 			page 281


 2134 000e 49D1FB   		sarq	%r11
 2135 0011 4C39DE   		cmpq	%r11, %rsi
 2136 0014 0F8DDC00 		jge	.L125
 2136      0000
 2137 001a 4989F0   		movq	%rsi, %r8
 2138              	.LVL215:
 2139 001d 0F1F00   		.p2align 4,,10
 2140              		.p2align 3
 2141              	.L135:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __secondChild = 2 * (__secondChild + 1);
 2142              		.loc 16 214 0
 2143 0020 498D4001 		leaq	1(%r8), %rax
 2144 0024 488D0C00 		leaq	(%rax,%rax), %rcx
 2145              	.LBB3890:
 2146              	.LBB3891:
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       template<typename _Iter>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 			  typename __enable_if<
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Forward iterator requirements
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return *_M_current; }
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       pointer
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current; }
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       {
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	return *this;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       }
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 282


 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       // Random access iterator requirements
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       reference
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current[__n]; }
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2147              		.loc 12 782 0
 2148 0028 48C1E004 		salq	$4, %rax
 2149 002c 4801F8   		addq	%rdi, %rax
 2150              	.LBE3891:
 2151              	.LBE3890:
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__comp(__first + __secondChild,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		     __first + (__secondChild - 1)))
 2152              		.loc 16 216 0
 2153 002f 4C8D51FF 		leaq	-1(%rcx), %r10
 2154              	.LBB3892:
 2155              	.LBB3893:
 2156              		.file 17 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Default predicates for internal use -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Copyright (C) 2013-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** /** @file predefined_ops.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  *  You should not attempt to use it directly.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** #ifndef _GLIBCXX_PREDEFINED_OPS_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** #define _GLIBCXX_PREDEFINED_OPS_H	1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** namespace __gnu_cxx
GAS LISTING /tmp/ccJUMvuF.s 			page 283


  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** {
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** namespace __ops
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** {
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Iter_less_iter
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Iterator1, typename _Iterator2>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Iterator1 __it1, _Iterator2 __it2) const
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2157              		.loc 17 42 0
 2158 0033 F20F1010 		movsd	(%rax), %xmm2
 2159              	.LBE3893:
 2160              	.LBE3892:
 2161              	.LBB3895:
 2162              	.LBB3896:
 2163              		.loc 12 782 0
 2164 0037 4E8D0CD7 		leaq	(%rdi,%r10,8), %r9
 2165              	.LBE3896:
 2166              	.LBE3895:
 2167              	.LBB3897:
 2168              	.LBB3894:
 2169              		.loc 17 42 0
 2170 003b F2410F10 		movsd	(%r9), %xmm1
 2170      09
 2171 0040 660F2ECA 		ucomisd	%xmm2, %xmm1
 2172 0044 F20F5FCA 		maxsd	%xmm2, %xmm1
 2173 0048 490F47CA 		cmova	%r10, %rcx
 2174 004c 490F47C1 		cmova	%r9, %rax
 2175              	.LVL216:
 2176              	.LBE3894:
 2177              	.LBE3897:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2178              		.loc 16 212 0
 2179 0050 4C39D9   		cmpq	%r11, %rcx
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    __secondChild--;
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __secondChild));
 2180              		.loc 16 218 0
 2181 0053 F2420F11 		movsd	%xmm1, (%rdi,%r8,8)
 2181      0CC7
 2182              	.LVL217:
 2183 0059 4989C8   		movq	%rcx, %r8
 2184              	.LVL218:
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__secondChild < (__len - 1) / 2)
 2185              		.loc 16 212 0
 2186 005c 7CC2     		jl	.L135
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __secondChild;
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if ((__len & 1) == 0 && __secondChild == (__len - 2) / 2)
 2187              		.loc 16 221 0
 2188 005e F6C201   		testb	$1, %dl
 2189 0061 7516     		jne	.L136
 2190              	.LVL219:
 2191              	.L142:
 2192              		.loc 16 221 0 is_stmt 0 discriminator 1
 2193 0063 4883EA02 		subq	$2, %rdx
 2194              	.LVL220:
 2195 0067 4989D0   		movq	%rdx, %r8
GAS LISTING /tmp/ccJUMvuF.s 			page 284


 2196 006a 49C1E83F 		shrq	$63, %r8
 2197 006e 4C01C2   		addq	%r8, %rdx
 2198              	.LVL221:
 2199 0071 48D1FA   		sarq	%rdx
 2200 0074 4839D1   		cmpq	%rdx, %rcx
 2201 0077 7467     		je	.L146
 2202              	.L136:
 2203              	.LVL222:
 2204              	.LBB3898:
 2205              	.LBB3899:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2206              		.loc 16 129 0 is_stmt 1
 2207 0079 4839F1   		cmpq	%rsi, %rcx
 2208 007c 7E22     		jle	.L137
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _Distance __parent = (__holeIndex - 1) / 2;
 2209              		.loc 16 128 0
 2210 007e 488D51FF 		leaq	-1(%rcx), %rdx
 2211 0082 4989D0   		movq	%rdx, %r8
 2212 0085 49C1E83F 		shrq	$63, %r8
 2213 0089 4901D0   		addq	%rdx, %r8
 2214 008c 49D1F8   		sarq	%r8
 2215              	.LVL223:
 2216              	.LBB3900:
 2217              	.LBB3901:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   };
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_iter
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_less_iter()
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_iter(); }
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Iter_less_val
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Iterator, typename _Value>
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Iterator __it, _Value& __val) const
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it < __val; }
 2218              		.loc 17 54 0
 2219 008f F2420F10 		movsd	(%rdi,%r8,8), %xmm1
 2219      0CC7
 2220              	.LBE3901:
 2221              	.LBE3900:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2222              		.loc 16 129 0
 2223 0095 660F2EC1 		ucomisd	%xmm1, %xmm0
 2224 0099 7710     		ja	.L139
 2225              	.LVL224:
 2226 009b 0F1F4400 		.p2align 4,,10
 2226      00
 2227              		.p2align 3
 2228              	.L137:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 2229              		.loc 16 135 0
 2230 00a0 F20F1100 		movsd	%xmm0, (%rax)
 2231 00a4 C3       		ret
 2232              	.LVL225:
 2233              		.p2align 4,,10
 2234 00a5 0F1F00   		.p2align 3
GAS LISTING /tmp/ccJUMvuF.s 			page 285


 2235              	.L143:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 2236              		.loc 16 133 0
 2237 00a8 4989D0   		movq	%rdx, %r8
 2238              	.LVL226:
 2239              	.L139:
 2240 00ab 498D50FF 		leaq	-1(%r8), %rdx
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first + __parent));
 2241              		.loc 16 131 0
 2242 00af F20F110C 		movsd	%xmm1, (%rdi,%rcx,8)
 2242      CF
 2243              	.LBB3903:
 2244              	.LBB3904:
 2245              		.loc 12 782 0
 2246 00b4 4A8D04C7 		leaq	(%rdi,%r8,8), %rax
 2247              	.LVL227:
 2248              	.LBE3904:
 2249              	.LBE3903:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent = (__holeIndex - 1) / 2;
 2250              		.loc 16 133 0
 2251 00b8 4889D1   		movq	%rdx, %rcx
 2252 00bb 48C1E93F 		shrq	$63, %rcx
 2253 00bf 4801CA   		addq	%rcx, %rdx
 2254 00c2 48D1FA   		sarq	%rdx
 2255              	.LVL228:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2256              		.loc 16 129 0
 2257 00c5 4C39C6   		cmpq	%r8, %rsi
 2258 00c8 7DD6     		jge	.L137
 2259              	.LVL229:
 2260              	.LBB3905:
 2261              	.LBB3902:
 2262              		.loc 17 54 0
 2263 00ca F20F100C 		movsd	(%rdi,%rdx,8), %xmm1
 2263      D7
 2264              	.LVL230:
 2265 00cf 4C89C1   		movq	%r8, %rcx
 2266              	.LBE3902:
 2267              	.LBE3905:
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 2268              		.loc 16 129 0
 2269 00d2 660F2EC1 		ucomisd	%xmm1, %xmm0
 2270 00d6 77D0     		ja	.L143
 2271              	.LVL231:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *(__first + __holeIndex) = _GLIBCXX_MOVE(__value);
 2272              		.loc 16 135 0
 2273 00d8 F20F1100 		movsd	%xmm0, (%rax)
 2274 00dc C3       		ret
 2275              	.LVL232:
 2276 00dd 0F1F00   		.p2align 4,,10
 2277              		.p2align 3
 2278              	.L146:
 2279              	.LBE3899:
 2280              	.LBE3898:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __secondChild = 2 * (__secondChild + 1);
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  *(__first + __holeIndex) = _GLIBCXX_MOVE(*(__first
GAS LISTING /tmp/ccJUMvuF.s 			page 286


 2281              		.loc 16 224 0
 2282 00e0 488D4C09 		leaq	1(%rcx,%rcx), %rcx
 2282      01
 2283              	.LVL233:
 2284              	.LBB3906:
 2285              	.LBB3907:
 2286              		.loc 12 782 0
 2287 00e5 488D14CF 		leaq	(%rdi,%rcx,8), %rdx
 2288              	.LVL234:
 2289              	.LBE3907:
 2290              	.LBE3906:
 2291              		.loc 16 224 0
 2292 00e9 F20F100A 		movsd	(%rdx), %xmm1
 2293 00ed F20F1108 		movsd	%xmm1, (%rax)
 2294              	.LVL235:
 2295 00f1 4889D0   		movq	%rdx, %rax
 2296 00f4 EB83     		jmp	.L136
 2297              	.LVL236:
 2298              	.L125:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 2299              		.loc 16 221 0
 2300 00f6 F6C201   		testb	$1, %dl
 2301 00f9 488D04F7 		leaq	(%rdi,%rsi,8), %rax
 2302 00fd 4889F1   		movq	%rsi, %rcx
 2303 0100 0F845DFF 		je	.L142
 2303      FFFF
 2304              	.LVL237:
 2305 0106 EB98     		jmp	.L137
 2306              	.LBE3889:
 2307              		.cfi_endproc
 2308              	.LFE6612:
 2309              		.size	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_
 2310              		.section	.text.unlikely._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEld
 2311              	.LCOLDE11:
 2312              		.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__op
 2313              	.LHOTE11:
 2314              		.section	.text.unlikely
 2315              	.LCOLDB12:
 2316              		.text
 2317              	.LHOTB12:
 2318 037a 660F1F44 		.p2align 4,,15
 2318      0000
 2319              		.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Ite
 2320              	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_
 2321              	.LFB6722:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2322              		.loc 13 1939 0
 2323              		.cfi_startproc
 2324 0380 4155     		pushq	%r13
 2325              		.cfi_def_cfa_offset 16
 2326              		.cfi_offset 13, -16
 2327 0382 4989D5   		movq	%rdx, %r13
 2328 0385 4154     		pushq	%r12
 2329              		.cfi_def_cfa_offset 24
 2330              		.cfi_offset 12, -24
 2331              	.LBB3908:
 2332              	.LBB3909:
GAS LISTING /tmp/ccJUMvuF.s 			page 287


 2333              	.LBB3910:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator&
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       __normal_iterator
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       const _Iterator&
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return _M_current; }
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     };
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Forward iterator requirements
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // Random access iterator requirements
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
GAS LISTING /tmp/ccJUMvuF.s 			page 288


 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline bool
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   // parameters.
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
GAS LISTING /tmp/ccJUMvuF.s 			page 289


 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     // DR 685.
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline auto
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #else
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** #endif
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 2334              		.loc 12 914 0
 2335 0387 4889F2   		movq	%rsi, %rdx
 2336              	.LBE3910:
 2337              	.LBE3909:
 2338              	.LBE3908:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2339              		.loc 13 1939 0
 2340 038a 55       		pushq	%rbp
 2341              		.cfi_def_cfa_offset 32
 2342              		.cfi_offset 6, -32
 2343 038b 53       		pushq	%rbx
 2344              		.cfi_def_cfa_offset 40
 2345              		.cfi_offset 3, -40
 2346              	.LBB4003:
 2347              	.LBB3913:
 2348              	.LBB3911:
 2349              		.loc 12 914 0
 2350 038c 4829FA   		subq	%rdi, %rdx
 2351              	.LBE3911:
 2352              	.LBE3913:
 2353              	.LBE4003:
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
 2354              		.loc 13 1939 0
 2355 038f 4989FC   		movq	%rdi, %r12
 2356 0392 4889F3   		movq	%rsi, %rbx
 2357 0395 4883EC08 		subq	$8, %rsp
 2358              		.cfi_def_cfa_offset 48
 2359              	.LBB4004:
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
 2360              		.loc 13 1943 0
 2361 0399 4881FA87 		cmpq	$135, %rdx
 2361      000000
 2362 03a0 0F8EEE01 		jle	.L147
 2362      0000
 2363              	.LBB3914:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2364              		.loc 13 1945 0
 2365 03a6 4D85ED   		testq	%r13, %r13
GAS LISTING /tmp/ccJUMvuF.s 			page 290


 2366 03a9 4889F0   		movq	%rsi, %rax
 2367 03ac 488D6F08 		leaq	8(%rdi), %rbp
 2368 03b0 0F847201 		je	.L149
 2368      0000
 2369              	.L151:
 2370              	.LBB3915:
 2371              	.LBB3916:
 2372              	.LBB3917:
 2373              	.LBB3918:
 2374              		.loc 12 914 0
 2375 03b6 4C29E0   		subq	%r12, %rax
 2376              	.LBE3918:
 2377              	.LBE3917:
 2378              	.LBB3920:
 2379              	.LBB3921:
 2380              	.LBB3922:
 2381              	.LBB3923:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2382              		.loc 17 42 0
 2383 03b9 F2410F10 		movsd	8(%r12), %xmm0
 2383      442408
 2384              	.LBE3923:
 2385              	.LBE3922:
 2386              	.LBE3921:
 2387              	.LBE3920:
 2388              	.LBB3940:
 2389              	.LBB3919:
 2390              		.loc 12 914 0
 2391 03c0 48C1F803 		sarq	$3, %rax
 2392              	.LBE3919:
 2393              	.LBE3940:
 2394              	.LBE3916:
 2395              	.LBE3915:
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
 2396              		.loc 13 1950 0
 2397 03c4 4983ED01 		subq	$1, %r13
 2398              	.LBB3975:
 2399              	.LBB3972:
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
 2400              		.loc 13 1919 0
 2401 03c8 4889C2   		movq	%rax, %rdx
 2402              	.LBB3941:
 2403              	.LBB3937:
 2404              	.LBB3925:
 2405              	.LBB3926:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2406              		.loc 17 42 0
 2407 03cb F20F105E 		movsd	-8(%rsi), %xmm3
 2407      F8
 2408              	.LBE3926:
 2409              	.LBE3925:
 2410              	.LBE3937:
 2411              	.LBE3941:
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
 2412              		.loc 13 1919 0
 2413 03d0 48C1EA3F 		shrq	$63, %rdx
 2414 03d4 4801D0   		addq	%rdx, %rax
GAS LISTING /tmp/ccJUMvuF.s 			page 291


 2415 03d7 48D1F8   		sarq	%rax
 2416              	.LBB3942:
 2417              	.LBB3943:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2418              		.loc 12 782 0
 2419 03da 498D04C4 		leaq	(%r12,%rax,8), %rax
 2420              	.LBE3943:
 2421              	.LBE3942:
 2422              	.LBB3944:
 2423              	.LBB3938:
 2424              	.LBB3927:
 2425              	.LBB3924:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2426              		.loc 17 42 0
 2427 03de F20F1008 		movsd	(%rax), %xmm1
 2428              	.LBE3924:
 2429              	.LBE3927:
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__a, __b))
 2430              		.loc 13 81 0
 2431 03e2 660F2EC8 		ucomisd	%xmm0, %xmm1
 2432 03e6 0F86E800 		jbe	.L194
 2432      0000
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__b, __c))
 2433              		.loc 13 83 0
 2434 03ec 660F2ED9 		ucomisd	%xmm1, %xmm3
 2435 03f0 0F87EE00 		ja	.L203
 2435      0000
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
 2436              		.loc 13 85 0
 2437 03f6 660F2ED8 		ucomisd	%xmm0, %xmm3
 2438 03fa 0F860B01 		jbe	.L204
 2438      0000
 2439              	.L202:
 2440              	.LBB3928:
 2441              	.LBB3929:
 2442              	.LBB3930:
 2443              		.file 18 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Copyright (C) 2007-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccJUMvuF.s 			page 292


  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** /** @file bits/move.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #ifndef _MOVE_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _MOVE_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <bits/c++config.h>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <bits/concept_check.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Same as C++11 std::addressof
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @ingroup utilities
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline _Tp*
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       return reinterpret_cast<_Tp*>
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     }
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** } // namespace
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #if __cplusplus >= 201103L
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @addtogroup utilities
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @{
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Forward an lvalue.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to the specified type.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr _Tp&&
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
GAS LISTING /tmp/ccJUMvuF.s 			page 293


  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Forward an rvalue.
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to the specified type.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr _Tp&&
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       return static_cast<_Tp&&>(__t);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     move(_Tp&& __t) noexcept
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     struct __move_if_noexcept_cond
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****                     is_copy_constructible<_Tp>>::type { };
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __x  A thing of arbitrary type.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     constexpr typename
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     move_if_noexcept(_Tp& __x) noexcept
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return std::move(__x); }
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   // declval, from type_traits.
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Returns the actual address of the object or function
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *         referenced by r, even in the presence of an overloaded
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *         operator&.
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __r  Reference to an object or function.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return   The actual address.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline _Tp*
GAS LISTING /tmp/ccJUMvuF.s 			page 294


 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     addressof(_Tp& __r) noexcept
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     { return std::__addressof(__r); }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /// @} group utilities
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** } // namespace
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #else
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #endif
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** {
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @addtogroup utilities
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @{
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    */
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   /**
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @brief Swaps two values.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __a  A thing of arbitrary type.
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @param  __b  Another thing of arbitrary type.
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****    *  @return   Nothing.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****   template<typename _Tp>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     inline void
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     swap(_Tp& __a, _Tp& __b)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #if __cplusplus >= 201103L
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     noexcept(__and_<is_nothrow_move_constructible<_Tp>,
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 	            is_nothrow_move_assignable<_Tp>>::value)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** #endif
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****     {
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       // concept requirements
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h **** 
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2444              		.loc 18 175 0
 2445 0400 F2410F10 		movsd	(%r12), %xmm2
 2445      1424
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2446              		.loc 18 176 0
 2447 0406 F2410F11 		movsd	%xmm3, (%r12)
 2447      1C24
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 2448              		.loc 18 177 0
 2449 040c F20F1156 		movsd	%xmm2, -8(%rsi)
 2449      F8
 2450 0411 F2410F10 		movsd	8(%r12), %xmm1
 2450      4C2408
 2451 0418 F2410F10 		movsd	(%r12), %xmm0
 2451      0424
 2452              	.L163:
GAS LISTING /tmp/ccJUMvuF.s 			page 295


 2453              	.LBE3930:
 2454              	.LBE3929:
 2455              	.LBE3928:
 2456              	.LBE3938:
 2457              	.LBE3944:
 2458              	.LBB3945:
 2459              	.LBB3946:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2460              		.loc 13 1901 0
 2461 041e 660F2EC1 		ucomisd	%xmm1, %xmm0
 2462              	.LBE3946:
 2463              	.LBE3945:
 2464              	.LBE3972:
 2465              	.LBE3975:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2466              		.loc 13 1945 0
 2467 0422 4989E8   		movq	%rbp, %r8
 2468 0425 4889F1   		movq	%rsi, %rcx
 2469 0428 498D4008 		leaq	8(%r8), %rax
 2470              	.LBB3976:
 2471              	.LBB3973:
 2472              	.LBB3970:
 2473              	.LBB3969:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2474              		.loc 13 1901 0
 2475 042c 765F     		jbe	.L199
 2476 042e 6690     		.p2align 4,,10
 2477              		.p2align 3
 2478              	.L188:
 2479              	.LBB3947:
 2480              	.LBB3948:
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 2481              		.loc 12 751 0
 2482 0430 4889C3   		movq	%rax, %rbx
 2483 0433 4883C008 		addq	$8, %rax
 2484              	.LBE3948:
 2485              	.LBE3947:
 2486              	.LBB3949:
 2487              	.LBB3950:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2488              		.loc 17 42 0
 2489 0437 F20F1048 		movsd	-8(%rax), %xmm1
 2489      F8
 2490              	.LBE3950:
 2491              	.LBE3949:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2492              		.loc 13 1901 0
 2493 043c 660F2EC1 		ucomisd	%xmm1, %xmm0
 2494 0440 77EE     		ja	.L188
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2495              		.loc 13 1904 0
 2496 0442 660F2ED0 		ucomisd	%xmm0, %xmm2
 2497              	.LBB3951:
 2498              	.LBB3952:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2499              		.loc 12 763 0
 2500 0446 488D51F8 		leaq	-8(%rcx), %rdx
GAS LISTING /tmp/ccJUMvuF.s 			page 296


 2501 044a 488D41F0 		leaq	-16(%rcx), %rax
 2502              	.LBE3952:
 2503              	.LBE3951:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2504              		.loc 13 1904 0
 2505 044e 764E     		jbe	.L200
 2506              		.p2align 4,,10
 2507              		.p2align 3
 2508              	.L187:
 2509              	.LBB3955:
 2510              	.LBB3956:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2511              		.loc 12 763 0
 2512 0450 4889C1   		movq	%rax, %rcx
 2513 0453 4883E808 		subq	$8, %rax
 2514              	.LBE3956:
 2515              	.LBE3955:
 2516              	.LBB3957:
 2517              	.LBB3958:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2518              		.loc 17 42 0
 2519 0457 F20F1050 		movsd	8(%rax), %xmm2
 2519      08
 2520              	.LBE3958:
 2521              	.LBE3957:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2522              		.loc 13 1904 0
 2523 045c 660F2ED0 		ucomisd	%xmm0, %xmm2
 2524 0460 77EE     		ja	.L187
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
 2525              		.loc 13 1906 0
 2526 0462 4839D9   		cmpq	%rbx, %rcx
 2527 0465 763F     		jbe	.L205
 2528              	.L174:
 2529              	.LBB3959:
 2530              	.LBB3960:
 2531              	.LBB3961:
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2532              		.loc 18 176 0
 2533 0467 F20F1113 		movsd	%xmm2, (%rbx)
 2534              	.LBE3961:
 2535              	.LBE3960:
 2536              	.LBE3959:
 2537              	.LBB3964:
 2538              	.LBB3965:
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	++_M_current;
 2539              		.loc 12 751 0
 2540 046b 4C8D4308 		leaq	8(%rbx), %r8
 2541              	.LBE3965:
 2542              	.LBE3964:
 2543              	.LBB3966:
 2544              	.LBB3963:
 2545              	.LBB3962:
 2546              		.loc 18 177 0
 2547 046f F20F1109 		movsd	%xmm1, (%rcx)
 2548 0473 F20F1051 		movsd	-8(%rcx), %xmm2
 2548      F8
GAS LISTING /tmp/ccJUMvuF.s 			page 297


 2549 0478 498D4008 		leaq	8(%r8), %rax
 2550 047c F20F104B 		movsd	8(%rbx), %xmm1
 2550      08
 2551 0481 F2410F10 		movsd	(%r12), %xmm0
 2551      0424
 2552              	.LBE3962:
 2553              	.LBE3963:
 2554              	.LBE3966:
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2555              		.loc 13 1901 0
 2556 0487 660F2EC1 		ucomisd	%xmm1, %xmm0
 2557 048b 77A3     		ja	.L188
 2558              	.L199:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2559              		.loc 13 1904 0
 2560 048d 660F2ED0 		ucomisd	%xmm0, %xmm2
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
 2561              		.loc 13 1901 0
 2562 0491 4C89C3   		movq	%r8, %rbx
 2563              	.LBB3967:
 2564              	.LBB3953:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2565              		.loc 12 763 0
 2566 0494 488D51F8 		leaq	-8(%rcx), %rdx
 2567 0498 488D41F0 		leaq	-16(%rcx), %rax
 2568              	.LBE3953:
 2569              	.LBE3967:
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
 2570              		.loc 13 1904 0
 2571 049c 77B2     		ja	.L187
 2572              	.L200:
 2573              	.LBB3968:
 2574              	.LBB3954:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2575              		.loc 12 763 0
 2576 049e 4889D1   		movq	%rdx, %rcx
 2577              	.LBE3954:
 2578              	.LBE3968:
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
 2579              		.loc 13 1906 0
 2580 04a1 4839D9   		cmpq	%rbx, %rcx
 2581 04a4 77C1     		ja	.L174
 2582              	.L205:
 2583              	.LBE3969:
 2584              	.LBE3970:
 2585              	.LBE3973:
 2586              	.LBE3976:
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
 2587              		.loc 13 1953 0
 2588 04a6 4C89EA   		movq	%r13, %rdx
 2589 04a9 4889DF   		movq	%rbx, %rdi
 2590 04ac E8CFFEFF 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 2590      FF
 2591              	.LBE3914:
 2592              	.LBB4001:
 2593              	.LBB3912:
 2594              		.loc 12 914 0
GAS LISTING /tmp/ccJUMvuF.s 			page 298


 2595 04b1 4889DA   		movq	%rbx, %rdx
 2596 04b4 4889D8   		movq	%rbx, %rax
 2597 04b7 4C29E2   		subq	%r12, %rdx
 2598              	.LBE3912:
 2599              	.LBE4001:
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
 2600              		.loc 13 1943 0
 2601 04ba 4881FA87 		cmpq	$135, %rdx
 2601      000000
 2602 04c1 0F8ECD00 		jle	.L147
 2602      0000
 2603              	.LBB4002:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
 2604              		.loc 13 1945 0
 2605 04c7 4D85ED   		testq	%r13, %r13
 2606 04ca 745C     		je	.L149
 2607 04cc 4889C6   		movq	%rax, %rsi
 2608 04cf E9E2FEFF 		jmp	.L151
 2608      FF
 2609              	.L194:
 2610              	.LBB3977:
 2611              	.LBB3974:
 2612              	.LBB3971:
 2613              	.LBB3939:
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__a, __c))
 2614              		.loc 13 90 0
 2615 04d4 660F2ED8 		ucomisd	%xmm0, %xmm3
 2616 04d8 7731     		ja	.L204
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__b, __c))
 2617              		.loc 13 92 0
 2618 04da 660F2ED9 		ucomisd	%xmm1, %xmm3
 2619 04de 0F871CFF 		ja	.L202
 2619      FFFF
 2620              	.L203:
 2621              	.LBB3931:
 2622              	.LBB3932:
 2623              	.LBB3933:
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2624              		.loc 18 175 0
 2625 04e4 F2410F10 		movsd	(%r12), %xmm0
 2625      0424
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2626              		.loc 18 176 0
 2627 04ea F2410F11 		movsd	%xmm1, (%r12)
 2627      0C24
 2628              		.loc 18 177 0
 2629 04f0 F20F1100 		movsd	%xmm0, (%rax)
 2630 04f4 F20F1056 		movsd	-8(%rsi), %xmm2
 2630      F8
 2631 04f9 F2410F10 		movsd	8(%r12), %xmm1
 2631      4C2408
 2632 0500 F2410F10 		movsd	(%r12), %xmm0
 2632      0424
 2633 0506 E913FFFF 		jmp	.L163
 2633      FF
 2634              	.L204:
 2635              	.LBE3933:
GAS LISTING /tmp/ccJUMvuF.s 			page 299


 2636              	.LBE3932:
 2637              	.LBE3931:
 2638              	.LBB3934:
 2639              	.LBB3935:
 2640              	.LBB3936:
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 2641              		.loc 18 175 0
 2642 050b F2410F10 		movsd	(%r12), %xmm1
 2642      0C24
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h ****       __a = _GLIBCXX_MOVE(__b);
 2643              		.loc 18 176 0
 2644 0511 F2410F11 		movsd	%xmm0, (%r12)
 2644      0424
 2645              		.loc 18 177 0
 2646 0517 F2410F11 		movsd	%xmm1, 8(%r12)
 2646      4C2408
 2647 051e F20F1056 		movsd	-8(%rsi), %xmm2
 2647      F8
 2648 0523 E9F6FEFF 		jmp	.L163
 2648      FF
 2649              	.L149:
 2650              	.LBE3936:
 2651              	.LBE3935:
 2652              	.LBE3934:
 2653              	.LBE3939:
 2654              	.LBE3971:
 2655              	.LBE3974:
 2656              	.LBE3977:
 2657              	.LBB3978:
 2658              	.LBB3979:
 2659              	.LBB3980:
 2660              	.LBB3981:
 2661              	.LBB3982:
 2662              	.LBB3983:
 2663              		.loc 12 914 0
 2664 0528 48C1FA03 		sarq	$3, %rdx
 2665              	.LBE3983:
 2666              	.LBE3982:
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 						     + (__secondChild - 1)));
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __holeIndex = __secondChild - 1;
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__push_heap(__first, __holeIndex, __topIndex, 
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       _GLIBCXX_MOVE(__value),
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_val(__comp));
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	       _RandomAccessIterator __result, _Compare __comp)
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_ValueType;
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_DistanceType;
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*__result);
GAS LISTING /tmp/ccJUMvuF.s 			page 300


 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			 _DistanceType(__last - __first),
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			 _GLIBCXX_MOVE(__value), __comp);
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Pop an element off a heap.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @pre    [__first, __last) is a valid, non-empty range.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pops the top of the heap.  The elements __first
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  and __last-1 are swapped and [__first,__last-1) is made into a
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap.
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	_ValueType;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_ValueType>)
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_non_empty_range(__first, __last);
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap(__first, __last);
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first > 1)
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  --__last;
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__pop_heap(__first, __last, __last,
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			  __gnu_cxx::__ops::__iter_less_iter());
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Pop an element off a heap using comparison functor.
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor to use.
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation pops the top of the heap.  The elements __first
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  and __last-1 are swapped and [__first,__last-1) is made into a
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  heap.  Comparisons are made using comp.
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     pop_heap(_RandomAccessIterator __first,
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	     _RandomAccessIterator __last, _Compare __comp)
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
GAS LISTING /tmp/ccJUMvuF.s 			page 301


 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_non_empty_range(__first, __last);
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_heap_pred(__first, __last, __comp);
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first > 1)
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  --__last;
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__pop_heap(__first, __last, __last,
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__comp));
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType;
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _DistanceType;
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       if (__last - __first < 2)
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	return;
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       const _DistanceType __len = __last - __first;
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _DistanceType __parent = (__len - 2) / 2;
 2667              		.loc 16 329 0
 2668 052c 4C8D6AFE 		leaq	-2(%rdx), %r13
 2669              	.LBB3985:
 2670              	.LBB3984:
 2671              		.loc 12 914 0
 2672 0530 4889D5   		movq	%rdx, %rbp
 2673              	.LBE3984:
 2674              	.LBE3985:
 2675              		.loc 16 329 0
 2676 0533 49D1FD   		sarq	%r13
 2677 0536 EB04     		jmp	.L153
 2678              	.L206:
 2679              	.LBB3986:
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (true)
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	{
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType __value = _GLIBCXX_MOVE(*(__first + __parent));
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 			     __comp);
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__parent == 0)
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    return;
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  __parent--;
 2680              		.loc 16 337 0
 2681 0538 4983ED01 		subq	$1, %r13
 2682              	.L153:
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 2683              		.loc 16 333 0
 2684 053c 4883EC08 		subq	$8, %rsp
 2685              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccJUMvuF.s 			page 302


 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  _ValueType __value = _GLIBCXX_MOVE(*(__first + __parent));
 2686              		.loc 16 332 0
 2687 0540 F2430F10 		movsd	(%r12,%r13,8), %xmm0
 2687      04EC
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  std::__adjust_heap(__first, __parent, __len, _GLIBCXX_MOVE(__value),
 2688              		.loc 16 333 0
 2689 0546 6A00     		pushq	$0
 2690              		.cfi_def_cfa_offset 64
 2691 0548 4C89EE   		movq	%r13, %rsi
 2692 054b 4889EA   		movq	%rbp, %rdx
 2693 054e 4C89E7   		movq	%r12, %rdi
 2694 0551 E8000000 		call	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_l
 2694      00
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	  if (__parent == 0)
 2695              		.loc 16 335 0
 2696 0556 4D85ED   		testq	%r13, %r13
 2697 0559 59       		popq	%rcx
 2698              		.cfi_def_cfa_offset 56
 2699 055a 5E       		popq	%rsi
 2700              		.cfi_def_cfa_offset 48
 2701 055b 75DB     		jne	.L206
 2702              	.L154:
 2703              	.LBE3986:
 2704              	.LBE3981:
 2705              	.LBE3980:
 2706              	.LBE3979:
 2707              	.LBB3987:
 2708              	.LBB3988:
 2709              	.LBB3989:
 2710              	.LBB3990:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 2711              		.loc 12 763 0
 2712 055d 4883EB08 		subq	$8, %rbx
 2713              	.LBE3990:
 2714              	.LBE3989:
 2715              	.LBB3991:
 2716              	.LBB3992:
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 2717              		.loc 16 244 0
 2718 0561 F2410F10 		movsd	(%r12), %xmm1
 2718      0C24
 2719              	.LBB3993:
 2720              	.LBB3994:
 2721              		.loc 12 914 0
 2722 0567 4889DD   		movq	%rbx, %rbp
 2723              	.LBE3994:
 2724              	.LBE3993:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2725              		.loc 16 245 0
 2726 056a 4883EC08 		subq	$8, %rsp
 2727              		.cfi_def_cfa_offset 56
 2728 056e 31F6     		xorl	%esi, %esi
 2729              	.LBB3998:
 2730              	.LBB3995:
 2731              		.loc 12 914 0
 2732 0570 4C29E5   		subq	%r12, %rbp
 2733              	.LBE3995:
GAS LISTING /tmp/ccJUMvuF.s 			page 303


 2734              	.LBE3998:
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       _ValueType __value = _GLIBCXX_MOVE(*__result);
 2735              		.loc 16 243 0
 2736 0573 F20F1003 		movsd	(%rbx), %xmm0
 2737              	.LBB3999:
 2738              	.LBB3996:
 2739              		.loc 12 914 0
 2740 0577 4889EA   		movq	%rbp, %rdx
 2741              	.LBE3996:
 2742              	.LBE3999:
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       *__result = _GLIBCXX_MOVE(*__first);
 2743              		.loc 16 244 0
 2744 057a F20F110B 		movsd	%xmm1, (%rbx)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2745              		.loc 16 245 0
 2746 057e 6A00     		pushq	$0
 2747              		.cfi_def_cfa_offset 64
 2748              	.LBB4000:
 2749              	.LBB3997:
 2750              		.loc 12 914 0
 2751 0580 48C1FA03 		sarq	$3, %rdx
 2752              	.LBE3997:
 2753              	.LBE4000:
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__adjust_heap(__first, _DistanceType(0),
 2754              		.loc 16 245 0
 2755 0584 4C89E7   		movq	%r12, %rdi
 2756 0587 E8000000 		call	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_l
 2756      00
 2757              	.LBE3992:
 2758              	.LBE3991:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	}
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Construct a heap over a range.
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation makes the elements in [__first,__last) into a heap.
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator>
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    typename iterator_traits<_RandomAccessIterator>::value_type>)
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__make_heap(__first, __last,
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_less_iter());
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   /**
GAS LISTING /tmp/ccJUMvuF.s 			page 304


 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @brief  Construct a heap over a range using comparison functor.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __first  Start of heap.
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __last   End of heap.
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @param  __comp   Comparison functor to use.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  @ingroup heap_algorithms
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  This operation makes the elements in [__first,__last) into a heap.
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****    *  Comparisons are made using __comp.
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   */
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     inline void
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	      _Compare __comp)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       // concept requirements
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 	    _RandomAccessIterator>)
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       __glibcxx_requires_valid_range(__first, __last);
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       std::__make_heap(__first, __last,
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		       __gnu_cxx::__ops::__iter_comp_iter(__comp));
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     }
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****   template<typename _RandomAccessIterator, typename _Compare>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     void
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h **** 		_Compare __comp)
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****     {
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_heap.h ****       while (__last - __first > 1)
 2759              		.loc 16 393 0
 2760 058c 4883FD0F 		cmpq	$15, %rbp
 2761 0590 58       		popq	%rax
 2762              		.cfi_def_cfa_offset 56
 2763 0591 5A       		popq	%rdx
 2764              		.cfi_def_cfa_offset 48
 2765 0592 7FC9     		jg	.L154
 2766              	.L147:
 2767              	.LBE3988:
 2768              	.LBE3987:
 2769              	.LBE3978:
 2770              	.LBE4002:
 2771              	.LBE4004:
1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 2772              		.loc 13 1956 0
 2773 0594 4883C408 		addq	$8, %rsp
 2774              		.cfi_def_cfa_offset 40
 2775 0598 5B       		popq	%rbx
 2776              		.cfi_def_cfa_offset 32
 2777 0599 5D       		popq	%rbp
 2778              		.cfi_def_cfa_offset 24
 2779 059a 415C     		popq	%r12
 2780              		.cfi_def_cfa_offset 16
 2781 059c 415D     		popq	%r13
 2782              		.cfi_def_cfa_offset 8
 2783 059e C3       		ret
 2784              		.cfi_endproc
 2785              	.LFE6722:
GAS LISTING /tmp/ccJUMvuF.s 			page 305


 2786              		.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Ite
 2787              		.section	.text.unlikely
 2788              	.LCOLDE12:
 2789              		.text
 2790              	.LHOTE12:
 2791              		.section	.rodata.str1.1
 2792              	.LC14:
 2793 0033 646F6E65 		.string	"done in a median of "
 2793      20696E20 
 2793      61206D65 
 2793      6469616E 
 2793      206F6620 
 2794              	.LC15:
 2795 0048 6D732028 		.string	"ms (avg is "
 2795      61766720 
 2795      69732000 
 2796              	.LC16:
 2797 0054 2900     		.string	")"
 2798              	.LC17:
 2799 0056 276D6564 		.string	"'medt': "
 2799      74273A20 
 2799      00
 2800              	.LC18:
 2801 005f 2C202761 		.string	", 'avgt': "
 2801      76677427 
 2801      3A2000
 2802              	.LC19:
 2803 006a 7D00     		.string	"}"
 2804              		.section	.text.unlikely._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 2805              		.align 2
 2806              	.LCOLDB20:
 2807              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 2808              	.LHOTB20:
 2809              		.align 2
 2810              		.p2align 4,,15
 2811              		.weak	_ZN11RepeatTimerD2Ev
 2812              		.type	_ZN11RepeatTimerD2Ev, @function
 2813              	_ZN11RepeatTimerD2Ev:
 2814              	.LFB6046:
  49:./benchs/timing.hpp ****     }
  50:./benchs/timing.hpp ****     double _t0;
  51:./benchs/timing.hpp **** };
  52:./benchs/timing.hpp **** 
  53:./benchs/timing.hpp **** struct RepeatTimer {
  54:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
  55:./benchs/timing.hpp ****     bool next() {
  56:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
  57:./benchs/timing.hpp ****         bool done = _i != _ts.end();
  58:./benchs/timing.hpp ****         _t0 = gimme_time();
  59:./benchs/timing.hpp ****         return done;
  60:./benchs/timing.hpp ****     }
  61:./benchs/timing.hpp ****     operator bool() const {
  62:./benchs/timing.hpp ****         return _i != _ts.end();
  63:./benchs/timing.hpp ****     }
  64:./benchs/timing.hpp ****     ~RepeatTimer() {
 2815              		.loc 2 65 0
 2816              		.cfi_startproc
GAS LISTING /tmp/ccJUMvuF.s 			page 306


 2817              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2818              		.cfi_lsda 0x1b,.LLSDA6046
 2819              	.LVL238:
 2820 0000 4157     		pushq	%r15
 2821              		.cfi_def_cfa_offset 16
 2822              		.cfi_offset 15, -16
 2823 0002 4156     		pushq	%r14
 2824              		.cfi_def_cfa_offset 24
 2825              		.cfi_offset 14, -24
 2826 0004 4155     		pushq	%r13
 2827              		.cfi_def_cfa_offset 32
 2828              		.cfi_offset 13, -32
 2829 0006 4154     		pushq	%r12
 2830              		.cfi_def_cfa_offset 40
 2831              		.cfi_offset 12, -40
 2832 0008 55       		pushq	%rbp
 2833              		.cfi_def_cfa_offset 48
 2834              		.cfi_offset 6, -48
 2835 0009 53       		pushq	%rbx
 2836              		.cfi_def_cfa_offset 56
 2837              		.cfi_offset 3, -56
 2838 000a 4889FB   		movq	%rdi, %rbx
 2839 000d 4883EC18 		subq	$24, %rsp
 2840              		.cfi_def_cfa_offset 80
 2841              	.LBB4005:
 2842              	.LBB4006:
 2843              	.LBB4007:
 2844              	.LBB4008:
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       : _M_current(__i) { }
 2845              		.loc 12 729 0
 2846 0011 4C8B6710 		movq	16(%rdi), %r12
 2847              	.LVL239:
 2848              	.LBE4008:
 2849              	.LBE4007:
 2850              	.LBE4006:
 2851              	.LBB4009:
 2852              	.LBB4010:
 2853              	.LBB4011:
 2854 0015 4C8B7708 		movq	8(%rdi), %r14
 2855              	.LVL240:
 2856              	.LBE4011:
 2857              	.LBE4010:
 2858              	.LBE4009:
 2859              	.LBB4012:
 2860              	.LBB4013:
 2861              		.file 19 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Numeric functions implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/ccJUMvuF.s 			page 307


  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Copyright (c) 1996,1997
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** /** @file bits/stl_numeric.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  *  Do not attempt to use it directly. @headername{numeric}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #ifndef _STL_NUMERIC_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #define _STL_NUMERIC_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <bits/concept_check.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <debug/debug.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #include <bits/move.h> // For _GLIBCXX_MOVE
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #if __cplusplus >= 201103L
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 308


  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   /**
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @brief  Create a range of sequentially increasing values.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  For each element in the range @p [first,last) assigns @p value and
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  increments @p value as if by @p ++value.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __first  Start of range.
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __last  End of range.
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __value  Starting value.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @return  Nothing.
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    */
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   template<typename _ForwardIterator, typename _Tp>
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     void
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     iota(_ForwardIterator __first, _ForwardIterator __last, _Tp __value)
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     {
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       // concept requirements
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 				  _ForwardIterator>)
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_requires_valid_range(__first, __last);
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	{
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	  *__first = __value;
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	  ++__value;
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	}
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_END_NAMESPACE_VERSION
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** } // namespace std
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** #endif
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** namespace std _GLIBCXX_VISIBILITY(default)
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** {
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   /**
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @brief  Accumulate values in a range.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  Accumulates the values in the range [first,last) using operator+().  The
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  initial value is @a init.  The values are processed in order.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __first  Start of range.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __last  End of range.
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @param  __init  Starting value to add other values to.
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    *  @return  The final sum.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****    */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****   template<typename _InputIterator, typename _Tp>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     inline _Tp
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       // concept requirements
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       __glibcxx_requires_valid_range(__first, __last);
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 309


 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 2862              		.loc 19 126 0
 2863 0019 4D39E6   		cmpq	%r12, %r14
 2864 001c 0F840104 		je	.L208
 2864      0000
 2865 0022 660FEFC0 		pxor	%xmm0, %xmm0
 2866 0026 4C89F0   		movq	%r14, %rax
 2867              	.LVL241:
 2868 0029 0F1F8000 		.p2align 4,,10
 2868      000000
 2869              		.p2align 3
 2870              	.L209:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	__init = __init + *__first;
 2871              		.loc 19 127 0
 2872 0030 F20F5800 		addsd	(%rax), %xmm0
 2873              	.LVL242:
 2874 0034 4883C008 		addq	$8, %rax
 2875              	.LVL243:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h **** 	__init = __init + *__first;
 2876              		.loc 19 126 0
 2877 0038 4939C4   		cmpq	%rax, %r12
 2878 003b 75F3     		jne	.L209
 2879              	.LVL244:
 2880              	.LBE4013:
 2881              	.LBE4012:
 2882              	.LBB4014:
 2883              	.LBB4015:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2884              		.loc 6 655 0
 2885 003d 4C89E5   		movq	%r12, %rbp
 2886 0040 4C29F5   		subq	%r14, %rbp
 2887 0043 4889E8   		movq	%rbp, %rax
 2888              	.LVL245:
 2889 0046 48C1F803 		sarq	$3, %rax
 2890              	.LBE4015:
 2891              	.LBE4014:
  65:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 2892              		.loc 2 66 0
 2893 004a 4885C0   		testq	%rax, %rax
 2894 004d 0F88AF03 		js	.L210
 2894      0000
 2895 0053 660FEFC9 		pxor	%xmm1, %xmm1
 2896 0057 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 2896      C8
 2897              	.L211:
 2898 005c F20F5EC1 		divsd	%xmm1, %xmm0
 2899              	.LVL246:
 2900              	.LBB4016:
 2901              	.LBB4017:
 2902              	.LBB4018:
 2903              	.LBB4019:
 2904              	.LBB4020:
 2905              		.file 20 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** //
GAS LISTING /tmp/ccJUMvuF.s 			page 310


   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/c++config.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
GAS LISTING /tmp/ccJUMvuF.s 			page 311


  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/type_traits.h>
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/concept_check.h>
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <debug/debug.h>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** {
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****             _ValueType1;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap<true>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           swap(*__a, *__b);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         }
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   Nothing.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  iterators themselves.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
GAS LISTING /tmp/ccJUMvuF.s 			page 312


 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline void
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType1;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType2;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType2>)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType1>)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType1;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType2;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       swap(*__a, *__b);
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The ranges must not overlap.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     _ForwardIterator2
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 313


 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first2;
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__a < __b)
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
GAS LISTING /tmp/ccJUMvuF.s 			page 314


 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__b, __a))
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__a, __b))
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Niter_base
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Miter_base
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
GAS LISTING /tmp/ccJUMvuF.s 			page 315


 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // a for loop with an explicit count.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = *__first;
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = *__first;
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
GAS LISTING /tmp/ccJUMvuF.s 			page 316


 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result + _Num;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT>
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct char_traits;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 317


 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class istreambuf_iterator;
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class ostreambuf_iterator;
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				    _CharT*>::__type
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
GAS LISTING /tmp/ccJUMvuF.s 			page 318


 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
GAS LISTING /tmp/ccJUMvuF.s 			page 319


 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
GAS LISTING /tmp/ccJUMvuF.s 			page 320


 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result - _Num;
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __last,
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __result);
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccJUMvuF.s 			page 321


 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						std::__miter_base(__last),
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						__result);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
GAS LISTING /tmp/ccJUMvuF.s 			page 322


 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  	     const _Tp& __value)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __value;
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     const _Tp& __value)
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		       __last - __first);
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   Nothing.
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline void
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator>)
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		    __value);
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
GAS LISTING /tmp/ccJUMvuF.s 			page 323


 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __value;
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first + __n;
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __equal
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccJUMvuF.s 			page 324


 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         equal(_II1 __first1, _II1 __last1, _II2 __first2)
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first1 != __last1; ++__first1, ++__first2)
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    if (!(*__first1 == *__first2))
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      return false;
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return true;
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __equal<true>
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return !__builtin_memcmp(__first1, __first2, sizeof(_Tp)
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   * (__last1 - __first1));
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2>
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline bool
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::value_type _ValueType1;
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::value_type _ValueType2;
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = ((__is_integer<_ValueType1>::__value
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			      || __is_pointer<_ValueType1>::__value)
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II1>::__value
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II2>::__value
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__equal<__simple>::equal(__first1, __last1, __first2);
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename, typename>
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lc_rai
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _II1
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __newlast1(_II1, _II1 __last1, _II2, _II2)
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return __last1; }
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II>
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __cnd2(_II __first, _II __last)
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return __first != __last; }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lc_rai<random_access_iterator_tag, random_access_iterator_tag>
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _RAI1, typename _RAI2>
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _RAI1
GAS LISTING /tmp/ccJUMvuF.s 			page 325


 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __newlast1(_RAI1 __first1, _RAI1 __last1,
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   _RAI2 __first2, _RAI2 __last2)
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const typename iterator_traits<_RAI1>::difference_type
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __diff1 = __last1 - __first1;
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const typename iterator_traits<_RAI2>::difference_type
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __diff2 = __last2 - __first2;
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _RAI>
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __cnd2(_RAI, _RAI)
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { return true; }
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2, typename _Compare>
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     bool
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lexicographical_compare_impl(_II1 __first1, _II1 __last1,
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   _II2 __first2, _II2 __last2,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				   _Compare __comp)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::iterator_category _Category1;
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::iterator_category _Category2;
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef std::__lc_rai<_Category1, _Category2> __rai_type;
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first1 != __last1 && __rai_type::__cnd2(__first2, __last2);
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	   ++__first1, ++__first2)
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__first1, __first2))
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    return true;
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__first2, __first1))
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    return false;
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first1 == __last1 && __first2 != __last2;
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lexicographical_compare
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II1, typename _II2>
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool __lc(_II1, _II1, _II2, _II2);
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     template<typename _II1, typename _II2>
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       bool
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __lexicographical_compare<_BoolType>::
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       {
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return std::__lexicographical_compare_impl(__first1, __last1,
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						   __first2, __last2,
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					__gnu_cxx::__ops::__iter_less_iter());
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       }
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
GAS LISTING /tmp/ccJUMvuF.s 			page 326


 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __lexicographical_compare<true>
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp, typename _Up>
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static bool
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __lc(const _Tp* __first1, const _Tp* __last1,
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     const _Up* __first2, const _Up* __last2)
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const size_t __len1 = __last1 - __first1;
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const size_t __len2 = __last2 - __first2;
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const int __result = __builtin_memcmp(__first1, __first2,
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						std::min(__len1, __len2));
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result != 0 ? __result < 0 : __len1 < __len2;
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II1, typename _II2>
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline bool
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lexicographical_compare_aux(_II1 __first1, _II1 __last1,
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _II2 __first2, _II2 __last2)
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II1>::value_type _ValueType1;
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II2>::value_type _ValueType2;
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple =
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	(__is_byte<_ValueType1>::__value && __is_byte<_ValueType2>::__value
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && !__gnu_cxx::__numeric_traits<_ValueType1>::__is_signed
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && !__gnu_cxx::__numeric_traits<_ValueType2>::__is_signed
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && __is_pointer<_II1>::__value
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	 && __is_pointer<_II2>::__value);
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__lexicographical_compare<__simple>::__lc(__first1, __last1,
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 							    __first2, __last2);
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     _ForwardIterator
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __lower_bound(_ForwardIterator __first, _ForwardIterator __last,
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		  const _Tp& __val, _Compare __comp)
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_DistanceType;
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       _DistanceType __len = std::distance(__first, __last);
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       while (__len > 0)
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	{
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  _DistanceType __half = __len >> 1;
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  _ForwardIterator __middle = __first;
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  std::advance(__middle, __half);
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (__comp(__middle, __val))
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      __first = __middle;
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      __len = __len - __half - 1;
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  else
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __len = __half;
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
GAS LISTING /tmp/ccJUMvuF.s 			page 327


 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first;
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Finds the first position in which @a val could be inserted
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *         without changing the ordering.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first   An iterator.
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last    Another iterator.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __val     The search term.
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return         An iterator pointing to the first element <em>not less
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *                  than</em> @a val, or end() if every element is less than 
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *                  @a val.
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup binary_search_algorithms
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _ForwardIterator
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		const _Tp& __val)
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanOpConcept<
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__lower_bound(__first, __last, __val,
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				__gnu_cxx::__ops::__iter_less_val());
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /// This is a helper function for the sort routines and for random.tcc.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   //  Precondition: __n > 0.
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR int
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(int __n)
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR unsigned
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(unsigned __n)
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   inline _GLIBCXX_CONSTEXPR long
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   __lg(long __n)
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   { return sizeof(long) * __CHAR_BIT__ - 1 - __builtin_clzl(__n); }
 2906              		.loc 20 1015 0
 2907 0060 480FBDC0 		bsrq	%rax, %rax
 2908 0064 BA3F0000 		movl	$63, %edx
 2908      00
 2909 0069 4883F03F 		xorq	$63, %rax
 2910              	.LBE4020:
 2911              	.LBE4019:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 2912              		.loc 13 1967 0
 2913 006d 4C89E6   		movq	%r12, %rsi
 2914 0070 4C89F7   		movq	%r14, %rdi
 2915              	.LVL247:
 2916              	.LBB4022:
 2917              	.LBB4021:
 2918              		.loc 20 1015 0
GAS LISTING /tmp/ccJUMvuF.s 			page 328


 2919 0073 4898     		cltq
 2920 0075 4829C2   		subq	%rax, %rdx
 2921              	.LBE4021:
 2922              	.LBE4022:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
 2923              		.loc 13 1969 0
 2924 0078 4801D2   		addq	%rdx, %rdx
 2925              	.LBE4018:
 2926              	.LBE4017:
 2927              	.LBE4016:
 2928              		.loc 2 66 0
 2929 007b F20F1104 		movsd	%xmm0, (%rsp)
 2929      24
 2930              	.LVL248:
 2931              	.LBB4109:
 2932              	.LBB4106:
 2933              	.LBB4103:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 2934              		.loc 13 1967 0
 2935 0080 E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 2935      00
 2936              	.LVL249:
 2937              	.LBB4023:
 2938              	.LBB4024:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 2939              		.loc 13 1882 0
 2940 0085 4881FD87 		cmpq	$135, %rbp
 2940      000000
 2941 008c 0F8E1E02 		jle	.L212
 2941      0000
 2942              	.LVL250:
 2943 0092 4D8DAE80 		leaq	128(%r14), %r13
 2943      000000
 2944              	.LBB4025:
 2945              	.LBB4026:
 2946              	.LBB4027:
 2947              	.LBB4028:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 2948              		.loc 12 782 0
 2949 0099 4D8D7E08 		leaq	8(%r14), %r15
 2950 009d 4C89ED   		movq	%r13, %rbp
 2951              	.LVL251:
 2952              		.p2align 4,,10
 2953              		.p2align 3
 2954              	.L213:
 2955              	.LBE4028:
 2956              	.LBE4027:
 2957              	.LBB4029:
 2958              	.LBB4030:
 2959              	.LBB4031:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 2960              		.loc 17 42 0
 2961 00a0 F2410F10 		movsd	(%r15), %xmm1
 2961      0F
 2962              	.LVL252:
 2963              	.LBE4031:
 2964              	.LBE4030:
GAS LISTING /tmp/ccJUMvuF.s 			page 329


1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 2965              		.loc 13 1846 0
 2966 00a5 F2410F10 		movsd	(%r14), %xmm0
 2966      06
 2967 00aa 660F2EC1 		ucomisd	%xmm1, %xmm0
 2968 00ae 0F87AC02 		ja	.L279
 2968      0000
 2969              	.LVL253:
 2970              	.LBB4032:
 2971              	.LBB4033:
 2972              	.LBB4034:
 2973              	.LBB4035:
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     };
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_val
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_less_val()
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   inline _Iter_less_val
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   __iter_comp_val(_Iter_less_iter)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   struct _Val_less_iter
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****     template<typename _Value, typename _Iterator>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       bool
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       operator()(_Value& __val, _Iterator __it) const
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return __val < *__it; }
 2974              		.loc 17 70 0
 2975 00b4 F2410F10 		movsd	-8(%r15), %xmm0
 2975      47F8
 2976 00ba 498D47F8 		leaq	-8(%r15), %rax
 2977              	.LVL254:
 2978              	.LBE4035:
 2979              	.LBE4034:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 2980              		.loc 13 1827 0
 2981 00be 660F2EC1 		ucomisd	%xmm1, %xmm0
 2982 00c2 770F     		ja	.L262
 2983 00c4 E9220300 		jmp	.L280
 2983      00
 2984              	.LVL255:
 2985 00c9 0F1F8000 		.p2align 4,,10
 2985      000000
 2986              		.p2align 3
 2987              	.L241:
 2988 00d0 4889D0   		movq	%rdx, %rax
 2989              	.LVL256:
 2990              	.L262:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 2991              		.loc 13 1829 0
 2992 00d3 F20F1140 		movsd	%xmm0, 8(%rax)
 2992      08
 2993              	.LVL257:
 2994              	.LBB4037:
 2995              	.LBB4038:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
GAS LISTING /tmp/ccJUMvuF.s 			page 330


 2996              		.loc 12 763 0
 2997 00d8 488D50F8 		leaq	-8(%rax), %rdx
 2998              	.LVL258:
 2999              	.LBE4038:
 3000              	.LBE4037:
 3001              	.LBB4039:
 3002              	.LBB4036:
 3003              		.loc 17 70 0
 3004 00dc F20F1040 		movsd	-8(%rax), %xmm0
 3004      F8
 3005              	.LBE4036:
 3006              	.LBE4039:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3007              		.loc 13 1827 0
 3008 00e1 660F2EC1 		ucomisd	%xmm1, %xmm0
 3009 00e5 77E9     		ja	.L241
 3010              	.LVL259:
 3011              	.L220:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3012              		.loc 13 1833 0
 3013 00e7 F20F1108 		movsd	%xmm1, (%rax)
 3014              	.LVL260:
 3015              	.L219:
 3016 00eb 4983C708 		addq	$8, %r15
 3017              	.LVL261:
 3018              	.LBE4033:
 3019              	.LBE4032:
 3020              	.LBE4029:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3021              		.loc 13 1844 0
 3022 00ef 4D39EF   		cmpq	%r13, %r15
 3023 00f2 75AC     		jne	.L213
 3024              	.LVL262:
 3025              	.LBE4026:
 3026              	.LBE4025:
 3027              	.LBB4053:
 3028              	.LBB4054:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3029              		.loc 13 1865 0
 3030 00f4 4D39FC   		cmpq	%r15, %r12
 3031 00f7 744B     		je	.L274
 3032              	.LVL263:
 3033 00f9 0F1F8000 		.p2align 4,,10
 3033      000000
 3034              		.p2align 3
 3035              	.L256:
 3036              	.LBB4055:
 3037              	.LBB4056:
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 3038              		.loc 13 1824 0
 3039 0100 F20F104D 		movsd	0(%rbp), %xmm1
 3039      00
 3040              	.LVL264:
 3041 0105 488D45F8 		leaq	-8(%rbp), %rax
 3042              	.LVL265:
 3043              	.LBB4057:
 3044              	.LBB4058:
GAS LISTING /tmp/ccJUMvuF.s 			page 331


 3045              		.loc 17 70 0
 3046 0109 F20F1045 		movsd	-8(%rbp), %xmm0
 3046      F8
 3047              	.LBE4058:
 3048              	.LBE4057:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3049              		.loc 13 1827 0
 3050 010e 660F2EC1 		ucomisd	%xmm1, %xmm0
 3051 0112 770F     		ja	.L263
 3052 0114 E9B10200 		jmp	.L281
 3052      00
 3053              	.LVL266:
 3054 0119 0F1F8000 		.p2align 4,,10
 3054      000000
 3055              		.p2align 3
 3056              	.L243:
 3057 0120 4889D0   		movq	%rdx, %rax
 3058              	.LVL267:
 3059              	.L263:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 3060              		.loc 13 1829 0
 3061 0123 F20F1140 		movsd	%xmm0, 8(%rax)
 3061      08
 3062              	.LVL268:
 3063              	.LBB4060:
 3064              	.LBB4061:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 3065              		.loc 12 763 0
 3066 0128 488D50F8 		leaq	-8(%rax), %rdx
 3067              	.LVL269:
 3068              	.LBE4061:
 3069              	.LBE4060:
 3070              	.LBB4062:
 3071              	.LBB4059:
 3072              		.loc 17 70 0
 3073 012c F20F1040 		movsd	-8(%rax), %xmm0
 3073      F8
 3074              	.LBE4059:
 3075              	.LBE4062:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3076              		.loc 13 1827 0
 3077 0131 660F2EC1 		ucomisd	%xmm1, %xmm0
 3078 0135 77E9     		ja	.L243
 3079              	.LVL270:
 3080 0137 4883C508 		addq	$8, %rbp
 3081              	.LVL271:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3082              		.loc 13 1833 0
 3083 013b F20F1108 		movsd	%xmm1, (%rax)
 3084              	.LVL272:
 3085              	.LBE4056:
 3086              	.LBE4055:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3087              		.loc 13 1865 0
 3088 013f 4939EC   		cmpq	%rbp, %r12
 3089 0142 75BC     		jne	.L256
 3090              	.LVL273:
GAS LISTING /tmp/ccJUMvuF.s 			page 332


 3091              	.L274:
 3092 0144 4C8B7308 		movq	8(%rbx), %r14
 3093              	.LVL274:
 3094 0148 488B4310 		movq	16(%rbx), %rax
 3095 014c 4C29F0   		subq	%r14, %rax
 3096 014f 48C1F803 		sarq	$3, %rax
 3097              	.LVL275:
 3098              	.L215:
 3099              	.LBE4054:
 3100              	.LBE4053:
 3101              	.LBE4024:
 3102              	.LBE4023:
 3103              	.LBE4103:
 3104              	.LBE4106:
 3105              	.LBE4109:
 3106              	.LBB4110:
 3107              	.LBB4111:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3108              		.loc 9 535 0
 3109 0153 488B2D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rbp
 3109      000000
 3110              	.LBE4111:
 3111              	.LBE4110:
  66:./benchs/timing.hpp **** 
  67:./benchs/timing.hpp ****         // Figure out the median time.
  68:./benchs/timing.hpp ****         std::sort(_ts.begin(), _ts.end());
  69:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 3112              		.loc 2 70 0
 3113 015a 48D1E8   		shrq	%rax
 3114              	.LVL276:
 3115              	.LBB4115:
 3116              	.LBB4112:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3117              		.loc 9 535 0
 3118 015d 488D3500 		leaq	.LC14(%rip), %rsi
 3118      000000
 3119              	.LBE4112:
 3120              	.LBE4115:
 3121              		.loc 2 70 0
 3122 0164 F2410F10 		movsd	(%r14,%rax,8), %xmm2
 3122      14C6
 3123              	.LBB4116:
 3124              	.LBB4113:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3125              		.loc 9 535 0
 3126 016a BA140000 		movl	$20, %edx
 3126      00
 3127 016f 4889EF   		movq	%rbp, %rdi
 3128              	.LBE4113:
 3129              	.LBE4116:
 3130              		.loc 2 70 0
 3131 0172 F20F1154 		movsd	%xmm2, 8(%rsp)
 3131      2408
 3132              	.LVL277:
 3133              	.LBB4117:
 3134              	.LBB4114:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccJUMvuF.s 			page 333


 3135              		.loc 9 535 0
 3136 0178 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3136      00
 3137              	.LVL278:
 3138              	.LBE4114:
 3139              	.LBE4117:
 3140              	.LBB4118:
 3141              	.LBB4119:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 3142              		.loc 9 132 0
 3143 017d 488B4500 		movq	0(%rbp), %rax
 3144 0181 4889EA   		movq	%rbp, %rdx
 3145              	.LBE4119:
 3146              	.LBE4118:
 3147              	.LBB4132:
 3148              	.LBB4133:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3149              		.loc 9 221 0
 3150 0184 4889EF   		movq	%rbp, %rdi
 3151              	.LBE4133:
 3152              	.LBE4132:
  70:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 3153              		.loc 2 71 0
 3154 0187 F20F1005 		movsd	.LC8(%rip), %xmm0
 3154      00000000 
 3155              	.LBB4136:
 3156              	.LBB4130:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 3157              		.loc 9 132 0
 3158 018f 480350E8 		addq	-24(%rax), %rdx
 3159              	.LVL279:
 3160              	.LBE4130:
 3161              	.LBE4136:
 3162              		.loc 2 71 0
 3163 0193 F20F5944 		mulsd	8(%rsp), %xmm0
 3163      2408
 3164              	.LBB4137:
 3165              	.LBB4131:
 3166              	.LBB4120:
 3167              	.LBB4121:
 3168              	.LBB4122:
 3169              	.LBB4123:
 3170              	.LBB4124:
 3171              	.LBB4125:
 3172              		.file 21 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccJUMvuF.s 			page 334


  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** /** @file bits/ios_base.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #ifndef _IOS_BASE_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #define _IOS_BASE_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/localefwd.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** #include <bits/locale_classes.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** {
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   // expressions involving them are no longer compile-time constants.
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   enum _Ios_Fmtflags 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     { 
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_left 		= 1L << 5,
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_right 		= 1L << 7,
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
GAS LISTING /tmp/ccJUMvuF.s 			page 335


  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****     };
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 3173              		.loc 21 76 0
 3174 0199 8B4218   		movl	24(%rdx), %eax
 3175 019c 25FBFEFF 		andl	$-261, %eax
 3175      FF
 3176              	.LVL280:
 3177              	.LBE4125:
 3178              	.LBE4124:
 3179              	.LBE4123:
 3180              	.LBB4126:
 3181              	.LBB4127:
 3182              	.LBB4128:
 3183              	.LBB4129:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
 3184              		.loc 21 80 0
 3185 01a1 83C804   		orl	$4, %eax
 3186              	.LVL281:
 3187 01a4 894218   		movl	%eax, 24(%rdx)
 3188              	.LVL282:
 3189              	.LBE4129:
 3190              	.LBE4128:
 3191              	.LBE4127:
 3192              	.LBE4126:
 3193              	.LBE4122:
 3194              	.LBE4121:
 3195              	.LBE4120:
 3196              	.LBE4131:
 3197              	.LBE4137:
 3198              	.LBB4138:
 3199              	.LBB4134:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3200              		.loc 9 221 0
 3201 01a7 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3201      00
 3202              	.LVL283:
 3203              	.LBE4134:
 3204              	.LBE4138:
 3205              	.LBB4139:
 3206              	.LBB4140:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3207              		.loc 9 535 0
 3208 01ac 488D3500 		leaq	.LC15(%rip), %rsi
 3208      000000
 3209 01b3 BA0B0000 		movl	$11, %edx
 3209      00
 3210 01b8 4889C7   		movq	%rax, %rdi
 3211              	.LBE4140:
 3212              	.LBE4139:
GAS LISTING /tmp/ccJUMvuF.s 			page 336


 3213              	.LBB4142:
 3214              	.LBB4135:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3215              		.loc 9 221 0
 3216 01bb 4889C5   		movq	%rax, %rbp
 3217              	.LVL284:
 3218              	.LBE4135:
 3219              	.LBE4142:
 3220              	.LBB4143:
 3221              	.LBB4141:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3222              		.loc 9 535 0
 3223 01be E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3223      00
 3224              	.LVL285:
 3225              	.LBE4141:
 3226              	.LBE4143:
 3227              		.loc 2 71 0
 3228 01c3 F20F1005 		movsd	.LC8(%rip), %xmm0
 3228      00000000 
 3229              	.LVL286:
 3230              	.LBB4144:
 3231              	.LBB4145:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3232              		.loc 9 221 0
 3233 01cb 4889EF   		movq	%rbp, %rdi
 3234              	.LBE4145:
 3235              	.LBE4144:
 3236              		.loc 2 71 0
 3237 01ce F20F5904 		mulsd	(%rsp), %xmm0
 3237      24
 3238              	.LVL287:
 3239              	.LBB4148:
 3240              	.LBB4146:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3241              		.loc 9 221 0
 3242 01d3 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3242      00
 3243              	.LVL288:
 3244              	.LBE4146:
 3245              	.LBE4148:
 3246              	.LBB4149:
 3247              	.LBB4150:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3248              		.loc 9 535 0
 3249 01d8 488D3500 		leaq	.LC16(%rip), %rsi
 3249      000000
 3250              	.LBE4150:
 3251              	.LBE4149:
 3252              	.LBB4152:
 3253              	.LBB4147:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3254              		.loc 9 221 0
 3255 01df 4889C5   		movq	%rax, %rbp
 3256              	.LVL289:
 3257              	.LBE4147:
 3258              	.LBE4152:
GAS LISTING /tmp/ccJUMvuF.s 			page 337


 3259              	.LBB4153:
 3260              	.LBB4151:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3261              		.loc 9 535 0
 3262 01e2 BA010000 		movl	$1, %edx
 3262      00
 3263 01e7 4889C7   		movq	%rax, %rdi
 3264 01ea E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3264      00
 3265              	.LVL290:
 3266              	.LBE4151:
 3267              	.LBE4153:
 3268              	.LBB4154:
 3269              	.LBB4155:
 3270              	.LBB4156:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 3271              		.loc 9 565 0
 3272 01ef 488B4500 		movq	0(%rbp), %rax
 3273              	.LBB4157:
 3274              	.LBB4158:
 3275              		.loc 14 444 0
 3276 01f3 488B40E8 		movq	-24(%rax), %rax
 3277 01f7 4C8BA405 		movq	240(%rbp,%rax), %r12
 3277      F0000000 
 3278              	.LVL291:
 3279              	.LBB4159:
 3280              	.LBB4160:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 3281              		.loc 14 48 0
 3282 01ff 4D85E4   		testq	%r12, %r12
 3283 0202 0F843302 		je	.L282
 3283      0000
 3284              	.LVL292:
 3285              	.LBE4160:
 3286              	.LBE4159:
 3287              	.LBB4162:
 3288              	.LBB4163:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 3289              		.loc 1 867 0
 3290 0208 41807C24 		cmpb	$0, 56(%r12)
 3290      3800
 3291 020e 0F848701 		je	.L237
 3291      0000
 3292 0214 410FBE74 		movsbl	67(%r12), %esi
 3292      2443
 3293              	.LVL293:
 3294              	.L238:
 3295              	.LBE4163:
 3296              	.LBE4162:
 3297              	.LBE4158:
 3298              	.LBE4157:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 3299              		.loc 9 565 0
 3300 021a 4889EF   		movq	%rbp, %rdi
 3301 021d E8000000 		call	_ZNSo3putEc@PLT
 3301      00
 3302              	.LVL294:
GAS LISTING /tmp/ccJUMvuF.s 			page 338


 3303              	.LBB4171:
 3304              	.LBB4172:
 3305              		.loc 9 587 0
 3306 0222 4889C7   		movq	%rax, %rdi
 3307 0225 E8000000 		call	_ZNSo5flushEv@PLT
 3307      00
 3308              	.LVL295:
 3309              	.LBE4172:
 3310              	.LBE4171:
 3311              	.LBE4156:
 3312              	.LBE4155:
 3313              	.LBE4154:
 3314              	.LBB4179:
 3315              	.LBB4180:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3316              		.loc 9 535 0
 3317 022a 488B2D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rbp
 3317      000000
 3318              	.LVL296:
 3319 0231 488D3500 		leaq	.LC17(%rip), %rsi
 3319      000000
 3320 0238 BA080000 		movl	$8, %edx
 3320      00
 3321 023d 4889EF   		movq	%rbp, %rdi
 3322 0240 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3322      00
 3323              	.LVL297:
 3324              	.LBE4180:
 3325              	.LBE4179:
 3326              	.LBB4181:
 3327              	.LBB4182:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3328              		.loc 9 221 0
 3329 0245 F20F1044 		movsd	8(%rsp), %xmm0
 3329      2408
 3330 024b 4889EF   		movq	%rbp, %rdi
 3331 024e E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3331      00
 3332              	.LVL298:
 3333              	.LBE4182:
 3334              	.LBE4181:
 3335              	.LBB4184:
 3336              	.LBB4185:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3337              		.loc 9 535 0
 3338 0253 488D3500 		leaq	.LC18(%rip), %rsi
 3338      000000
 3339 025a BA0A0000 		movl	$10, %edx
 3339      00
 3340 025f 4889C7   		movq	%rax, %rdi
 3341              	.LBE4185:
 3342              	.LBE4184:
 3343              	.LBB4187:
 3344              	.LBB4183:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3345              		.loc 9 221 0
 3346 0262 4889C5   		movq	%rax, %rbp
GAS LISTING /tmp/ccJUMvuF.s 			page 339


 3347              	.LVL299:
 3348              	.LBE4183:
 3349              	.LBE4187:
 3350              	.LBB4188:
 3351              	.LBB4186:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3352              		.loc 9 535 0
 3353 0265 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3353      00
 3354              	.LVL300:
 3355              	.LBE4186:
 3356              	.LBE4188:
 3357              	.LBB4189:
 3358              	.LBB4190:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 3359              		.loc 9 221 0
 3360 026a F20F1004 		movsd	(%rsp), %xmm0
 3360      24
 3361 026f 4889EF   		movq	%rbp, %rdi
 3362 0272 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 3362      00
 3363              	.LVL301:
 3364              	.LBE4190:
 3365              	.LBE4189:
 3366              	.LBB4191:
 3367              	.LBB4192:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3368              		.loc 9 535 0
 3369 0277 488D3500 		leaq	.LC19(%rip), %rsi
 3369      000000
 3370 027e 4889C7   		movq	%rax, %rdi
 3371 0281 BA010000 		movl	$1, %edx
 3371      00
 3372 0286 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3372      00
 3373              	.LVL302:
 3374              	.LBE4192:
 3375              	.LBE4191:
 3376              	.LBE4005:
 3377              	.LBB4197:
 3378              	.LBB4198:
 3379              	.LBB4199:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 3380              		.loc 6 161 0
 3381 028b 488B7B08 		movq	8(%rbx), %rdi
 3382              	.LVL303:
 3383              	.LBB4200:
 3384              	.LBB4201:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 3385              		.loc 6 177 0
 3386 028f 4885FF   		testq	%rdi, %rdi
 3387 0292 0F845B01 		je	.L207
 3387      0000
 3388              	.LVL304:
 3389              	.LBE4201:
 3390              	.LBE4200:
 3391              	.LBE4199:
GAS LISTING /tmp/ccJUMvuF.s 			page 340


 3392              	.LBE4198:
 3393              	.LBE4197:
  71:./benchs/timing.hpp ****         std::cerr << "'medt': " << med << ", 'avgt': " << avg << "}";
  72:./benchs/timing.hpp ****     }
 3394              		.loc 2 73 0
 3395 0298 4883C418 		addq	$24, %rsp
 3396              		.cfi_remember_state
 3397              		.cfi_def_cfa_offset 56
 3398              	.LVL305:
 3399 029c 5B       		popq	%rbx
 3400              		.cfi_def_cfa_offset 48
 3401              	.LVL306:
 3402 029d 5D       		popq	%rbp
 3403              		.cfi_def_cfa_offset 40
 3404              	.LVL307:
 3405 029e 415C     		popq	%r12
 3406              		.cfi_def_cfa_offset 32
 3407              	.LVL308:
 3408 02a0 415D     		popq	%r13
 3409              		.cfi_def_cfa_offset 24
 3410 02a2 415E     		popq	%r14
 3411              		.cfi_def_cfa_offset 16
 3412 02a4 415F     		popq	%r15
 3413              		.cfi_def_cfa_offset 8
 3414              	.LBB4209:
 3415              	.LBB4208:
 3416              	.LBB4207:
 3417              	.LBB4206:
 3418              	.LBB4205:
 3419              	.LBB4202:
 3420              	.LBB4203:
 3421              	.LBB4204:
 3422              		.loc 7 110 0
 3423 02a6 E9000000 		jmp	_ZdlPv@PLT
 3423      00
 3424              	.LVL309:
 3425 02ab 0F1F4400 		.p2align 4,,10
 3425      00
 3426              		.p2align 3
 3427              	.L212:
 3428              		.cfi_restore_state
 3429              	.LBE4204:
 3430              	.LBE4203:
 3431              	.LBE4202:
 3432              	.LBE4205:
 3433              	.LBE4206:
 3434              	.LBE4207:
 3435              	.LBE4208:
 3436              	.LBE4209:
 3437              	.LBB4210:
 3438              	.LBB4193:
 3439              	.LBB4107:
 3440              	.LBB4104:
 3441              	.LBB4101:
 3442              	.LBB4099:
 3443              	.LBB4068:
 3444              	.LBB4069:
GAS LISTING /tmp/ccJUMvuF.s 			page 341


 3445              	.LBB4070:
 3446              	.LBB4071:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 3447              		.loc 12 782 0
 3448 02b0 4D8D6E08 		leaq	8(%r14), %r13
 3449              	.LVL310:
 3450 02b4 BD080000 		movl	$8, %ebp
 3450      00
 3451              	.LVL311:
 3452              	.LBE4071:
 3453              	.LBE4070:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3454              		.loc 13 1844 0
 3455 02b9 4D39EC   		cmpq	%r13, %r12
 3456 02bc 0F8482FE 		je	.L274
 3456      FFFF
 3457              	.LVL312:
 3458              		.p2align 4,,10
 3459 02c2 660F1F44 		.p2align 3
 3459      0000
 3460              	.L257:
 3461              	.LBB4072:
 3462              	.LBB4073:
 3463              	.LBB4074:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 3464              		.loc 17 42 0
 3465 02c8 F2410F10 		movsd	0(%r13), %xmm1
 3465      4D00
 3466              	.LVL313:
 3467              	.LBE4074:
 3468              	.LBE4073:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 3469              		.loc 13 1846 0
 3470 02ce F2410F10 		movsd	(%r14), %xmm0
 3470      06
 3471 02d3 660F2EC1 		ucomisd	%xmm1, %xmm0
 3472 02d7 7747     		ja	.L283
 3473              	.LVL314:
 3474              	.LBB4075:
 3475              	.LBB4076:
 3476              	.LBB4077:
 3477              	.LBB4078:
 3478              		.loc 17 70 0
 3479 02d9 F2410F10 		movsd	-8(%r13), %xmm0
 3479      45F8
 3480 02df 498D45F8 		leaq	-8(%r13), %rax
 3481              	.LVL315:
 3482              	.LBE4078:
 3483              	.LBE4077:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3484              		.loc 13 1827 0
 3485 02e3 660F2EC1 		ucomisd	%xmm1, %xmm0
 3486 02e7 770A     		ja	.L264
 3487 02e9 E9F50000 		jmp	.L284
 3487      00
 3488              	.LVL316:
 3489 02ee 6690     		.p2align 4,,10
GAS LISTING /tmp/ccJUMvuF.s 			page 342


 3490              		.p2align 3
 3491              	.L245:
 3492 02f0 4889D0   		movq	%rdx, %rax
 3493              	.LVL317:
 3494              	.L264:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 3495              		.loc 13 1829 0
 3496 02f3 F20F1140 		movsd	%xmm0, 8(%rax)
 3496      08
 3497              	.LVL318:
 3498              	.LBB4080:
 3499              	.LBB4081:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 3500              		.loc 12 763 0
 3501 02f8 488D50F8 		leaq	-8(%rax), %rdx
 3502              	.LVL319:
 3503              	.LBE4081:
 3504              	.LBE4080:
 3505              	.LBB4082:
 3506              	.LBB4079:
 3507              		.loc 17 70 0
 3508 02fc F20F1040 		movsd	-8(%rax), %xmm0
 3508      F8
 3509              	.LBE4079:
 3510              	.LBE4082:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3511              		.loc 13 1827 0
 3512 0301 660F2EC1 		ucomisd	%xmm1, %xmm0
 3513 0305 77E9     		ja	.L245
 3514              	.LVL320:
 3515              	.L232:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3516              		.loc 13 1833 0
 3517 0307 F20F1108 		movsd	%xmm1, (%rax)
 3518              	.LVL321:
 3519              	.L231:
 3520 030b 4983C508 		addq	$8, %r13
 3521              	.LVL322:
 3522              	.LBE4076:
 3523              	.LBE4075:
 3524              	.LBE4072:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 3525              		.loc 13 1844 0
 3526 030f 4D39EC   		cmpq	%r13, %r12
 3527 0312 75B4     		jne	.L257
 3528 0314 E92BFEFF 		jmp	.L274
 3528      FF
 3529              	.LVL323:
 3530 0319 0F1F8000 		.p2align 4,,10
 3530      000000
 3531              		.p2align 3
 3532              	.L283:
 3533              	.LBB4092:
 3534              	.LBB4084:
 3535              	.LBB4085:
 3536              	.LBB4086:
 3537              	.LBB4087:
GAS LISTING /tmp/ccJUMvuF.s 			page 343


 3538              	.LBB4088:
 3539              	.LBB4089:
 3540              	.LBB4090:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 3541              		.loc 20 576 0
 3542 0320 4C89EA   		movq	%r13, %rdx
 3543 0323 4C29F2   		subq	%r14, %rdx
 3544              	.LVL324:
 3545 0326 4889D0   		movq	%rdx, %rax
 3546 0329 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 3547              		.loc 20 577 0
 3548 032d 4885C0   		testq	%rax, %rax
 3549 0330 741D     		je	.L230
 3550 0332 4889EF   		movq	%rbp, %rdi
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 3551              		.loc 20 578 0
 3552 0335 4C89F6   		movq	%r14, %rsi
 3553 0338 F20F114C 		movsd	%xmm1, 8(%rsp)
 3553      2408
 3554 033e 4829D7   		subq	%rdx, %rdi
 3555 0341 4C01EF   		addq	%r13, %rdi
 3556 0344 E8000000 		call	memmove@PLT
 3556      00
 3557              	.LVL325:
 3558 0349 F20F104C 		movsd	8(%rsp), %xmm1
 3558      2408
 3559              	.LVL326:
 3560              	.L230:
 3561              	.LBE4090:
 3562              	.LBE4089:
 3563              	.LBE4088:
 3564              	.LBE4087:
 3565              	.LBE4086:
 3566              	.LBE4085:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 3567              		.loc 13 1851 0
 3568 034f F2410F11 		movsd	%xmm1, (%r14)
 3568      0E
 3569 0354 EBB5     		jmp	.L231
 3570              	.LVL327:
 3571 0356 662E0F1F 		.p2align 4,,10
 3571      84000000 
 3571      0000
 3572              		.p2align 3
 3573              	.L279:
 3574              	.LBE4084:
 3575              	.LBE4092:
 3576              	.LBE4069:
 3577              	.LBE4068:
 3578              	.LBB4095:
 3579              	.LBB4051:
 3580              	.LBB4049:
 3581              	.LBB4041:
 3582              	.LBB4042:
 3583              	.LBB4043:
 3584              	.LBB4044:
GAS LISTING /tmp/ccJUMvuF.s 			page 344


 3585              	.LBB4045:
 3586              	.LBB4046:
 3587              	.LBB4047:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 3588              		.loc 20 576 0
 3589 0360 4C89FA   		movq	%r15, %rdx
 3590 0363 4C29F2   		subq	%r14, %rdx
 3591              	.LVL328:
 3592 0366 4889D0   		movq	%rdx, %rax
 3593 0369 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 3594              		.loc 20 577 0
 3595 036d 4885C0   		testq	%rax, %rax
 3596 0370 741F     		je	.L218
 3597 0372 BF080000 		movl	$8, %edi
 3597      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 3598              		.loc 20 578 0
 3599 0377 4C89F6   		movq	%r14, %rsi
 3600 037a F20F114C 		movsd	%xmm1, 8(%rsp)
 3600      2408
 3601 0380 4829D7   		subq	%rdx, %rdi
 3602 0383 4C01FF   		addq	%r15, %rdi
 3603 0386 E8000000 		call	memmove@PLT
 3603      00
 3604              	.LVL329:
 3605 038b F20F104C 		movsd	8(%rsp), %xmm1
 3605      2408
 3606              	.LVL330:
 3607              	.L218:
 3608              	.LBE4047:
 3609              	.LBE4046:
 3610              	.LBE4045:
 3611              	.LBE4044:
 3612              	.LBE4043:
 3613              	.LBE4042:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 3614              		.loc 13 1851 0
 3615 0391 F2410F11 		movsd	%xmm1, (%r14)
 3615      0E
 3616 0396 E950FDFF 		jmp	.L219
 3616      FF
 3617              	.LVL331:
 3618              	.L237:
 3619              	.LBE4041:
 3620              	.LBE4049:
 3621              	.LBE4051:
 3622              	.LBE4095:
 3623              	.LBE4099:
 3624              	.LBE4101:
 3625              	.LBE4104:
 3626              	.LBE4107:
 3627              	.LBE4193:
 3628              	.LBB4194:
 3629              	.LBB4177:
 3630              	.LBB4175:
 3631              	.LBB4173:
GAS LISTING /tmp/ccJUMvuF.s 			page 345


 3632              	.LBB4169:
 3633              	.LBB4167:
 3634              	.LBB4166:
 3635              	.LBB4164:
 3636              	.LBB4165:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 3637              		.loc 1 869 0
 3638 039b 4C89E7   		movq	%r12, %rdi
 3639 039e E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 3639      00
 3640              	.LVL332:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 3641              		.loc 1 870 0
 3642 03a3 498B0424 		movq	(%r12), %rax
 3643 03a7 BE0A0000 		movl	$10, %esi
 3643      00
 3644 03ac 488B4030 		movq	48(%rax), %rax
 3645 03b0 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 3645      000000
 3646 03b7 0F845DFE 		je	.L238
 3646      FFFF
 3647 03bd 4C89E7   		movq	%r12, %rdi
 3648 03c0 FFD0     		call	*%rax
 3649              	.LVL333:
 3650 03c2 0FBEF0   		movsbl	%al, %esi
 3651 03c5 E950FEFF 		jmp	.L238
 3651      FF
 3652              	.LVL334:
 3653              	.L281:
 3654              	.LBE4165:
 3655              	.LBE4164:
 3656              	.LBE4166:
 3657              	.LBE4167:
 3658              	.LBE4169:
 3659              	.LBE4173:
 3660              	.LBE4175:
 3661              	.LBE4177:
 3662              	.LBE4194:
 3663              	.LBB4195:
 3664              	.LBB4108:
 3665              	.LBB4105:
 3666              	.LBB4102:
 3667              	.LBB4100:
 3668              	.LBB4096:
 3669              	.LBB4067:
 3670              	.LBB4065:
 3671              	.LBB4063:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3672              		.loc 13 1827 0
 3673 03ca 4889E8   		movq	%rbp, %rax
 3674              	.LVL335:
 3675 03cd 4883C508 		addq	$8, %rbp
 3676              	.LVL336:
 3677              	.LBE4063:
 3678              	.LBE4065:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3679              		.loc 13 1865 0
GAS LISTING /tmp/ccJUMvuF.s 			page 346


 3680 03d1 4939EC   		cmpq	%rbp, %r12
 3681              	.LBB4066:
 3682              	.LBB4064:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 3683              		.loc 13 1833 0
 3684 03d4 F20F1108 		movsd	%xmm1, (%rax)
 3685              	.LVL337:
 3686              	.LBE4064:
 3687              	.LBE4066:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 3688              		.loc 13 1865 0
 3689 03d8 0F8522FD 		jne	.L256
 3689      FFFF
 3690 03de E961FDFF 		jmp	.L274
 3690      FF
 3691              	.LVL338:
 3692              	.L284:
 3693              	.LBE4067:
 3694              	.LBE4096:
 3695              	.LBB4097:
 3696              	.LBB4094:
 3697              	.LBB4093:
 3698              	.LBB4091:
 3699              	.LBB4083:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 3700              		.loc 13 1827 0
 3701 03e3 4C89E8   		movq	%r13, %rax
 3702              	.LVL339:
 3703 03e6 E91CFFFF 		jmp	.L232
 3703      FF
 3704              	.LVL340:
 3705              	.L280:
 3706              	.LBE4083:
 3707              	.LBE4091:
 3708              	.LBE4093:
 3709              	.LBE4094:
 3710              	.LBE4097:
 3711              	.LBB4098:
 3712              	.LBB4052:
 3713              	.LBB4050:
 3714              	.LBB4048:
 3715              	.LBB4040:
 3716 03eb 4C89F8   		movq	%r15, %rax
 3717              	.LVL341:
 3718 03ee E9F4FCFF 		jmp	.L220
 3718      FF
 3719              	.LVL342:
 3720              	.L207:
 3721              	.LBE4040:
 3722              	.LBE4048:
 3723              	.LBE4050:
 3724              	.LBE4052:
 3725              	.LBE4098:
 3726              	.LBE4100:
 3727              	.LBE4102:
 3728              	.LBE4105:
 3729              	.LBE4108:
GAS LISTING /tmp/ccJUMvuF.s 			page 347


 3730              	.LBE4195:
 3731              	.LBE4210:
 3732              		.loc 2 73 0
 3733 03f3 4883C418 		addq	$24, %rsp
 3734              		.cfi_remember_state
 3735              		.cfi_def_cfa_offset 56
 3736              	.LVL343:
 3737 03f7 5B       		popq	%rbx
 3738              		.cfi_def_cfa_offset 48
 3739              	.LVL344:
 3740 03f8 5D       		popq	%rbp
 3741              		.cfi_def_cfa_offset 40
 3742              	.LVL345:
 3743 03f9 415C     		popq	%r12
 3744              		.cfi_def_cfa_offset 32
 3745              	.LVL346:
 3746 03fb 415D     		popq	%r13
 3747              		.cfi_def_cfa_offset 24
 3748 03fd 415E     		popq	%r14
 3749              		.cfi_def_cfa_offset 16
 3750 03ff 415F     		popq	%r15
 3751              		.cfi_def_cfa_offset 8
 3752 0401 C3       		ret
 3753              	.LVL347:
 3754              	.L210:
 3755              		.cfi_restore_state
 3756              	.LBB4211:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 3757              		.loc 2 66 0
 3758 0402 4889C2   		movq	%rax, %rdx
 3759 0405 4889C1   		movq	%rax, %rcx
 3760 0408 660FEFC9 		pxor	%xmm1, %xmm1
 3761 040c 48D1EA   		shrq	%rdx
 3762 040f 83E101   		andl	$1, %ecx
 3763 0412 4809CA   		orq	%rcx, %rdx
 3764 0415 F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 3764      CA
 3765 041a F20F58C9 		addsd	%xmm1, %xmm1
 3766 041e E939FCFF 		jmp	.L211
 3766      FF
 3767              	.LVL348:
 3768              	.L208:
 3769 0423 660FEFC0 		pxor	%xmm0, %xmm0
 3770 0427 31C0     		xorl	%eax, %eax
 3771 0429 660F28E0 		movapd	%xmm0, %xmm4
 3772 042d F20F5EE0 		divsd	%xmm0, %xmm4
 3773 0431 F20F1124 		movsd	%xmm4, (%rsp)
 3773      24
 3774              	.LVL349:
 3775 0436 E918FDFF 		jmp	.L215
 3775      FF
 3776              	.LVL350:
 3777              	.L282:
 3778              	.LBB4196:
 3779              	.LBB4178:
 3780              	.LBB4176:
 3781              	.LBB4174:
GAS LISTING /tmp/ccJUMvuF.s 			page 348


 3782              	.LBB4170:
 3783              	.LBB4168:
 3784              	.LBB4161:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 3785              		.loc 14 49 0
 3786 043b E8000000 		call	_ZSt16__throw_bad_castv@PLT
 3786      00
 3787              	.LVL351:
 3788              	.LBE4161:
 3789              	.LBE4168:
 3790              	.LBE4170:
 3791              	.LBE4174:
 3792              	.LBE4176:
 3793              	.LBE4178:
 3794              	.LBE4196:
 3795              	.LBE4211:
 3796              		.cfi_endproc
 3797              	.LFE6046:
 3798              		.section	.gcc_except_table
 3799              	.LLSDA6046:
 3800 0020 FF       		.byte	0xff
 3801 0021 FF       		.byte	0xff
 3802 0022 01       		.byte	0x1
 3803 0023 00       		.uleb128 .LLSDACSE6046-.LLSDACSB6046
 3804              	.LLSDACSB6046:
 3805              	.LLSDACSE6046:
 3806              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3807              		.size	_ZN11RepeatTimerD2Ev, .-_ZN11RepeatTimerD2Ev
 3808              		.section	.text.unlikely._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3809              	.LCOLDE20:
 3810              		.section	.text._ZN11RepeatTimerD2Ev,"axG",@progbits,_ZN11RepeatTimerD5Ev,comdat
 3811              	.LHOTE20:
 3812              		.weak	_ZN11RepeatTimerD1Ev
 3813              		.set	_ZN11RepeatTimerD1Ev,_ZN11RepeatTimerD2Ev
 3814              		.section	.rodata.str1.1
 3815              	.LC21:
 3816 006c 5B00     		.string	"["
 3817              	.LC22:
 3818 006e 7B276D61 		.string	"{'mapsize': "
 3818      7073697A 
 3818      65273A20 
 3818      00
 3819              	.LC23:
 3820 007b 2C202773 		.string	", 'saturation': false, "
 3820      61747572 
 3820      6174696F 
 3820      6E273A20 
 3820      66616C73 
 3821              	.LC24:
 3822 0093 52656E64 		.string	"Rendering a "
 3822      6572696E 
 3822      67206120 
 3822      00
 3823              	.LC25:
 3824 00a0 C2B2206D 		.string	"\302\262 map without saturation... "
 3824      61702077 
 3824      6974686F 
GAS LISTING /tmp/ccJUMvuF.s 			page 349


 3824      75742073 
 3824      61747572 
 3825              	.LC26:
 3826 00be 2C00     		.string	","
 3827              	.LC27:
 3828 00c0 2C202773 		.string	", 'saturation': true, "
 3828      61747572 
 3828      6174696F 
 3828      6E273A20 
 3828      74727565 
 3829              	.LC28:
 3830 00d7 C2B2206D 		.string	"\302\262 map with saturation... "
 3830      61702077 
 3830      69746820 
 3830      73617475 
 3830      72617469 
 3831              	.LC30:
 3832 00f2 5D00     		.string	"]"
 3833              		.section	.text.unlikely
 3834              	.LCOLDB31:
 3835              		.section	.text.startup,"ax",@progbits
 3836              	.LHOTB31:
 3837              		.p2align 4,,15
 3838              		.globl	main
 3839              		.type	main, @function
 3840              	main:
 3841              	.LFB6051:
 3842              		.file 22 "benchs/rendering.cpp"
   0:benchs/rendering.cpp **** /* heatmap - High performance heatmap creation in C.
   1:benchs/rendering.cpp ****  *
   2:benchs/rendering.cpp ****  * The MIT License (MIT)
   3:benchs/rendering.cpp ****  *
   4:benchs/rendering.cpp ****  * Copyright (c) 2013 Lucas Beyer
   5:benchs/rendering.cpp ****  *
   6:benchs/rendering.cpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:benchs/rendering.cpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:benchs/rendering.cpp ****  * the Software without restriction, including without limitation the rights to
   9:benchs/rendering.cpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:benchs/rendering.cpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:benchs/rendering.cpp ****  * subject to the following conditions:
  12:benchs/rendering.cpp ****  *
  13:benchs/rendering.cpp ****  * The above copyright notice and this permission notice shall be included in all
  14:benchs/rendering.cpp ****  * copies or substantial portions of the Software.
  15:benchs/rendering.cpp ****  *
  16:benchs/rendering.cpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:benchs/rendering.cpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:benchs/rendering.cpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:benchs/rendering.cpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:benchs/rendering.cpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:benchs/rendering.cpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:benchs/rendering.cpp ****  */
  23:benchs/rendering.cpp **** 
  24:benchs/rendering.cpp **** // Test the speed of calling the heatmap point adding function once for
  25:benchs/rendering.cpp **** // every single point (a la glVertex3f) vs. calling one function which
  26:benchs/rendering.cpp **** // adds a whole buffer of points (a la glVertexPointer). Basically, time
  27:benchs/rendering.cpp **** // the function call overhead.
  28:benchs/rendering.cpp **** 
GAS LISTING /tmp/ccJUMvuF.s 			page 350


  29:benchs/rendering.cpp **** #include "benchs/common.hpp"
  30:benchs/rendering.cpp **** 
  31:benchs/rendering.cpp **** static const size_t MAPSIZE_MIN = 128;
  32:benchs/rendering.cpp **** static const size_t MAPSIZE_MAX = 16384; // That's 1 gig of ram already
  33:benchs/rendering.cpp **** static const size_t NPOINTS = 1000;
  34:benchs/rendering.cpp **** static const size_t STAMP = 128;
  35:benchs/rendering.cpp **** 
  36:benchs/rendering.cpp **** int main(/* int argc, char *argv[] */)
  37:benchs/rendering.cpp **** {
 3843              		.loc 22 38 0
 3844              		.cfi_startproc
 3845              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3846              		.cfi_lsda 0x1b,.LLSDA6051
 3847              	.LVL352:
 3848 0000 4157     		pushq	%r15
 3849              		.cfi_def_cfa_offset 16
 3850              		.cfi_offset 15, -16
 3851 0002 4156     		pushq	%r14
 3852              		.cfi_def_cfa_offset 24
 3853              		.cfi_offset 14, -24
 3854              	.LBB4212:
  38:benchs/rendering.cpp ****     // We'll do something funky with ret in order to avoid optimizing
  39:benchs/rendering.cpp ****     // whole code-blocks away.
  40:benchs/rendering.cpp ****     int ret = 0;
  41:benchs/rendering.cpp **** 
  42:benchs/rendering.cpp ****     std::unique_ptr<heatmap_stamp_t> stamp(heatmap_stamp_gen(STAMP));
 3855              		.loc 22 43 0
 3856 0004 BF800000 		movl	$128, %edi
 3856      00
 3857              	.LBE4212:
  38:benchs/rendering.cpp ****     // We'll do something funky with ret in order to avoid optimizing
 3858              		.loc 22 38 0
 3859 0009 4155     		pushq	%r13
 3860              		.cfi_def_cfa_offset 32
 3861              		.cfi_offset 13, -32
 3862 000b 4154     		pushq	%r12
 3863              		.cfi_def_cfa_offset 40
 3864              		.cfi_offset 12, -40
 3865 000d 55       		pushq	%rbp
 3866              		.cfi_def_cfa_offset 48
 3867              		.cfi_offset 6, -48
 3868 000e 53       		pushq	%rbx
 3869              		.cfi_def_cfa_offset 56
 3870              		.cfi_offset 3, -56
 3871 000f 4881ECD8 		subq	$216, %rsp
 3871      000000
 3872              		.cfi_def_cfa_offset 272
 3873              	.LEHB5:
 3874              	.LBB4988:
 3875              		.loc 22 43 0
 3876 0016 E8000000 		call	heatmap_stamp_gen@PLT
 3876      00
 3877              	.LEHE5:
 3878              	.LVL353:
 3879              	.LBB4213:
 3880              	.LBB4214:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccJUMvuF.s 			page 351


 3881              		.loc 9 535 0
 3882 001b 4C8B3D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %r15
 3882      000000
 3883 0022 488D3500 		leaq	.LC21(%rip), %rsi
 3883      000000
 3884 0029 BA010000 		movl	$1, %edx
 3884      00
 3885              	.LBE4214:
 3886              	.LBE4213:
 3887              		.loc 22 43 0
 3888 002e 4889C5   		movq	%rax, %rbp
 3889              	.LVL354:
 3890              	.LBB4216:
 3891              	.LBB4215:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 3892              		.loc 9 535 0
 3893 0031 4C89FF   		movq	%r15, %rdi
 3894              	.LEHB6:
 3895 0034 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3895      00
 3896              	.LVL355:
 3897              	.LBE4215:
 3898              	.LBE4216:
 3899              	.LBB4217:
 3900              	.LBB4218:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 3901              		.loc 9 113 0
 3902 0039 4C89FF   		movq	%r15, %rdi
 3903 003c E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 3903      00
 3904              	.LVL356:
 3905 0041 C7442434 		movl	$8, 52(%rsp)
 3905      08000000 
 3906 0049 48C74424 		movq	$128, 8(%rsp)
 3906      08800000 
 3906      00
 3907 0052 C7442430 		movl	$0, 48(%rsp)
 3907      00000000 
 3908              	.LVL357:
 3909 005a 660F1F44 		.p2align 4,,10
 3909      0000
 3910              		.p2align 3
 3911              	.L364:
 3912              	.LBE4218:
 3913              	.LBE4217:
 3914              	.LBB4219:
 3915              	.LBB4220:
  43:benchs/rendering.cpp **** 
  44:benchs/rendering.cpp ****     std::cerr << "[" << std::endl;
  45:benchs/rendering.cpp ****     for(size_t mapsize = MAPSIZE_MIN ; mapsize <= MAPSIZE_MAX ; mapsize *= 2) {
  46:benchs/rendering.cpp ****         // All of this is preparing the heatmap to be rendered.
  47:benchs/rendering.cpp ****         std::unique_ptr<heatmap_t> hm(heatmap_new(mapsize, mapsize));
 3916              		.loc 22 48 0
 3917 0060 4C8B7424 		movq	8(%rsp), %r14
 3917      08
 3918 0065 4489F6   		movl	%r14d, %esi
 3919 0068 4489F7   		movl	%r14d, %edi
GAS LISTING /tmp/ccJUMvuF.s 			page 352


 3920 006b E8000000 		call	heatmap_new@PLT
 3920      00
 3921              	.LEHE6:
 3922              	.LVL358:
  48:benchs/rendering.cpp ****         auto points = genpoints(NPOINTS, mapsize);
 3923              		.loc 22 49 0
 3924 0070 488D7C24 		leaq	80(%rsp), %rdi
 3924      50
 3925 0075 4489F6   		movl	%r14d, %esi
  48:benchs/rendering.cpp ****         auto points = genpoints(NPOINTS, mapsize);
 3926              		.loc 22 48 0
 3927 0078 4889C3   		movq	%rax, %rbx
 3928              	.LVL359:
 3929              	.LEHB7:
 3930              		.loc 22 49 0
 3931 007b E8000000 		call	_Z9genpointsmj.constprop.75
 3931      00
 3932              	.LEHE7:
 3933              	.LVL360:
 3934 0080 4531E4   		xorl	%r12d, %r12d
 3935              		.p2align 4,,10
 3936 0083 0F1F4400 		.p2align 3
 3936      00
 3937              	.L286:
 3938              	.LVL361:
 3939 0088 488B4424 		movq	80(%rsp), %rax
 3939      50
 3940              	.LVL362:
 3941              	.LBB4221:
  49:benchs/rendering.cpp **** 
  50:benchs/rendering.cpp ****         for(size_t i = 0 ; i < NPOINTS ; ++i) {
  51:benchs/rendering.cpp ****             heatmap_add_point_with_stamp(hm.get(), points[2*i], points[2*i+1], stamp.get());
 3942              		.loc 22 52 0
 3943 008d 4889E9   		movq	%rbp, %rcx
 3944 0090 4889DF   		movq	%rbx, %rdi
 3945 0093 428B5420 		movl	4(%rax,%r12), %edx
 3945      04
 3946 0098 428B3420 		movl	(%rax,%r12), %esi
 3947              	.LEHB8:
 3948 009c E8000000 		call	heatmap_add_point_with_stamp@PLT
 3948      00
 3949              	.LVL363:
 3950 00a1 4983C408 		addq	$8, %r12
  51:benchs/rendering.cpp ****             heatmap_add_point_with_stamp(hm.get(), points[2*i], points[2*i+1], stamp.get());
 3951              		.loc 22 51 0 discriminator 2
 3952 00a5 4981FC40 		cmpq	$8000, %r12
 3952      1F0000
 3953 00ac 75DA     		jne	.L286
 3954              	.LVL364:
 3955              	.LBE4221:
  52:benchs/rendering.cpp ****         }
  53:benchs/rendering.cpp ****         std::vector<unsigned char> imgbuf(mapsize*mapsize*4);
 3956              		.loc 22 54 0
 3957 00ae 4C8B7424 		movq	8(%rsp), %r14
 3957      08
 3958 00b3 4D89F4   		movq	%r14, %r12
 3959 00b6 4D0FAFE6 		imulq	%r14, %r12
GAS LISTING /tmp/ccJUMvuF.s 			page 353


 3960 00ba 49C1E402 		salq	$2, %r12
 3961              	.LVL365:
 3962              	.LBB4222:
 3963              	.LBB4223:
 3964              	.LBB4224:
 3965              	.LBB4225:
 3966              	.LBB4226:
 3967              	.LBB4227:
 3968              	.LBB4228:
 3969              	.LBB4229:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 3970              		.loc 7 104 0
 3971 00be 4C89E7   		movq	%r12, %rdi
 3972 00c1 E8000000 		call	_Znwm@PLT
 3972      00
 3973              	.LEHE8:
 3974              	.LVL366:
 3975              	.LBE4229:
 3976              	.LBE4228:
 3977              	.LBE4227:
 3978              	.LBE4226:
 3979              	.LBE4225:
 3980              	.LBE4224:
 3981              	.LBE4223:
 3982              	.LBB4236:
 3983              	.LBB4237:
 3984              	.LBB4238:
 3985              	.LBB4239:
 3986              	.LBB4240:
 3987              	.LBB4241:
 3988              	.LBB4242:
 3989              	.LBB4243:
 3990              	.LBB4244:
 3991              	.LBB4245:
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 3992              		.loc 20 714 0
 3993 00c6 4C89E2   		movq	%r12, %rdx
 3994 00c9 31F6     		xorl	%esi, %esi
 3995 00cb 4889C7   		movq	%rax, %rdi
 3996              	.LBE4245:
 3997              	.LBE4244:
 3998              	.LBE4243:
 3999              	.LBE4242:
 4000              	.LBE4241:
 4001              	.LBE4240:
 4002              	.LBE4239:
 4003              	.LBE4238:
 4004              	.LBE4237:
 4005              	.LBE4236:
 4006              	.LBB4255:
 4007              	.LBB4235:
 4008              	.LBB4234:
 4009              	.LBB4233:
 4010              	.LBB4232:
 4011              	.LBB4231:
 4012              	.LBB4230:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
GAS LISTING /tmp/ccJUMvuF.s 			page 354


 4013              		.loc 7 104 0
 4014 00ce 4989C5   		movq	%rax, %r13
 4015              	.LVL367:
 4016              	.LBE4230:
 4017              	.LBE4231:
 4018              	.LBE4232:
 4019              	.LBE4233:
 4020              	.LBE4234:
 4021              	.LBE4235:
 4022              	.LBE4255:
 4023              	.LBB4256:
 4024              	.LBB4254:
 4025              	.LBB4253:
 4026              	.LBB4252:
 4027              	.LBB4251:
 4028              	.LBB4250:
 4029              	.LBB4249:
 4030              	.LBB4248:
 4031              	.LBB4247:
 4032              	.LBB4246:
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 4033              		.loc 20 714 0
 4034 00d1 E8000000 		call	memset@PLT
 4034      00
 4035              	.LVL368:
 4036              	.LBE4246:
 4037              	.LBE4247:
 4038              	.LBE4248:
 4039              	.LBE4249:
 4040              	.LBE4250:
 4041              	.LBE4251:
 4042              	.LBE4252:
 4043              	.LBE4253:
 4044              	.LBE4254:
 4045              	.LBE4256:
 4046              	.LBE4222:
 4047              	.LBB4257:
 4048              	.LBB4258:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4049              		.loc 9 535 0
 4050 00d6 488D3500 		leaq	.LC22(%rip), %rsi
 4050      000000
 4051 00dd BA0C0000 		movl	$12, %edx
 4051      00
 4052 00e2 4C89FF   		movq	%r15, %rdi
 4053              	.LEHB9:
 4054 00e5 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4054      00
 4055              	.LVL369:
 4056              	.LBE4258:
 4057              	.LBE4257:
 4058              	.LBB4259:
 4059              	.LBB4260:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4060              		.loc 9 171 0
 4061 00ea 4C89F6   		movq	%r14, %rsi
 4062 00ed 4C89FF   		movq	%r15, %rdi
GAS LISTING /tmp/ccJUMvuF.s 			page 355


 4063 00f0 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4063      00
 4064              	.LVL370:
 4065              	.LBE4260:
 4066              	.LBE4259:
 4067              	.LBB4261:
 4068              	.LBB4262:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4069              		.loc 9 535 0
 4070 00f5 488D3500 		leaq	.LC23(%rip), %rsi
 4070      000000
 4071 00fc BA170000 		movl	$23, %edx
 4071      00
 4072 0101 4889C7   		movq	%rax, %rdi
 4073 0104 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4073      00
 4074              	.LVL371:
 4075              	.LBE4262:
 4076              	.LBE4261:
 4077              	.LBB4263:
 4078              	.LBB4264:
 4079 0109 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4079      000000
 4080 0110 488D3500 		leaq	.LC24(%rip), %rsi
 4080      000000
 4081 0117 BA0C0000 		movl	$12, %edx
 4081      00
 4082 011c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4082      00
 4083              	.LVL372:
 4084              	.LBE4264:
 4085              	.LBE4263:
 4086              	.LBB4265:
 4087              	.LBB4266:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4088              		.loc 9 171 0
 4089 0121 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4089      000000
 4090 0128 4C89F6   		movq	%r14, %rsi
 4091 012b E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4091      00
 4092              	.LVL373:
 4093              	.LBE4266:
 4094              	.LBE4265:
 4095              	.LBB4268:
 4096              	.LBB4269:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4097              		.loc 9 535 0
 4098 0130 488D3500 		leaq	.LC25(%rip), %rsi
 4098      000000
 4099 0137 BA1D0000 		movl	$29, %edx
 4099      00
 4100 013c 4889C7   		movq	%rax, %rdi
 4101              	.LBE4269:
 4102              	.LBE4268:
 4103              	.LBB4271:
 4104              	.LBB4267:
GAS LISTING /tmp/ccJUMvuF.s 			page 356


 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4105              		.loc 9 171 0
 4106 013f 4989C4   		movq	%rax, %r12
 4107              	.LVL374:
 4108              	.LBE4267:
 4109              	.LBE4271:
 4110              	.LBB4272:
 4111              	.LBB4270:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4112              		.loc 9 535 0
 4113 0142 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4113      00
 4114              	.LVL375:
 4115              	.LBE4270:
 4116              	.LBE4272:
 4117              	.LBB4273:
 4118              	.LBB4274:
 4119              	.LBB4275:
 4120              		.loc 9 587 0
 4121 0147 4C89E7   		movq	%r12, %rdi
 4122 014a E8000000 		call	_ZNSo5flushEv@PLT
 4122      00
 4123              	.LVL376:
 4124              	.LBE4275:
 4125              	.LBE4274:
 4126              	.LBE4273:
 4127              	.LBB4276:
 4128              	.LBB4277:
 4129              	.LBB4278:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 4130              		.loc 2 55 0
 4131 014f E8000000 		call	_Z10gimme_timev@PLT
 4131      00
 4132              	.LVL377:
 4133              	.LBB4279:
 4134              	.LBB4280:
 4135              	.LBB4281:
 4136              	.LBB4282:
 4137              	.LBB4283:
 4138              	.LBB4284:
 4139              	.LBB4285:
 4140              	.LBB4286:
 4141              	.LBB4287:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 4142              		.loc 7 104 0
 4143 0154 BF280000 		movl	$40, %edi
 4143      00
 4144              	.LBE4287:
 4145              	.LBE4286:
 4146              	.LBE4285:
 4147              	.LBE4284:
 4148              	.LBE4283:
 4149              	.LBE4282:
 4150              	.LBE4281:
 4151              	.LBE4280:
 4152              	.LBE4279:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
GAS LISTING /tmp/ccJUMvuF.s 			page 357


 4153              		.loc 2 55 0
 4154 0159 F20F1144 		movsd	%xmm0, 112(%rsp)
 4154      2470
 4155              	.LVL378:
 4156              	.LBB4323:
 4157              	.LBB4299:
 4158              	.LBB4295:
 4159              	.LBB4296:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 4160              		.loc 6 91 0
 4161 015f 48C74424 		movq	$0, 120(%rsp)
 4161      78000000 
 4161      00
 4162 0168 48C78424 		movq	$0, 128(%rsp)
 4162      80000000 
 4162      00000000 
 4163 0174 48C78424 		movq	$0, 136(%rsp)
 4163      88000000 
 4163      00000000 
 4164              	.LVL379:
 4165              	.LBE4296:
 4166              	.LBE4295:
 4167              	.LBB4297:
 4168              	.LBB4293:
 4169              	.LBB4292:
 4170              	.LBB4291:
 4171              	.LBB4290:
 4172              	.LBB4289:
 4173              	.LBB4288:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 4174              		.loc 7 104 0
 4175 0180 E8000000 		call	_Znwm@PLT
 4175      00
 4176              	.LEHE9:
 4177              	.LVL380:
 4178              	.LBE4288:
 4179              	.LBE4289:
 4180              	.LBE4290:
 4181              	.LBE4291:
 4182              	.LBE4292:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4183              		.loc 6 187 0
 4184 0185 488D5028 		leaq	40(%rax), %rdx
 4185 0189 4C8B3500 		movq	heatmap_cs_default@GOTPCREL(%rip), %r14
 4185      000000
 4186              	.LVL381:
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 4187              		.loc 6 185 0
 4188 0190 48894424 		movq	%rax, 120(%rsp)
 4188      78
 4189              	.LBE4293:
 4190              	.LBE4297:
 4191              	.LBE4299:
 4192              	.LBB4300:
 4193              	.LBB4301:
 4194              	.LBB4302:
 4195              	.LBB4303:
GAS LISTING /tmp/ccJUMvuF.s 			page 358


 4196              	.LBB4304:
 4197              	.LBB4305:
 4198              	.LBB4306:
 4199              	.LBB4307:
 4200              	.LBB4308:
 4201              	.LBB4309:
 4202              	.LBB4310:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 4203              		.loc 20 762 0
 4204 0195 48C74020 		movq	$0, 32(%rax)
 4204      00000000 
 4205              	.LBE4310:
 4206              	.LBE4309:
 4207              	.LBE4308:
 4208              	.LBE4307:
 4209              	.LBE4306:
 4210              	.LBE4305:
 4211              	.LBE4304:
 4212              	.LBE4303:
 4213              	.LBE4302:
 4214              	.LBE4301:
 4215              	.LBE4300:
 4216              	.LBB4321:
 4217              	.LBB4298:
 4218              	.LBB4294:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4219              		.loc 6 187 0
 4220 019d 48899424 		movq	%rdx, 136(%rsp)
 4220      88000000 
 4221              	.LVL382:
 4222              	.LBE4294:
 4223              	.LBE4298:
 4224              	.LBE4321:
 4225              	.LBB4322:
 4226              	.LBB4320:
 4227              	.LBB4319:
 4228              	.LBB4318:
 4229              	.LBB4317:
 4230              	.LBB4316:
 4231              	.LBB4315:
 4232              	.LBB4314:
 4233              	.LBB4313:
 4234              	.LBB4312:
 4235              	.LBB4311:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 4236              		.loc 20 762 0
 4237 01a5 48C70000 		movq	$0, (%rax)
 4237      000000
 4238              	.LVL383:
 4239 01ac 48C74008 		movq	$0, 8(%rax)
 4239      00000000 
 4240              	.LVL384:
 4241 01b4 48C74010 		movq	$0, 16(%rax)
 4241      00000000 
 4242              	.LVL385:
 4243 01bc 48C74018 		movq	$0, 24(%rax)
 4243      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 359


 4244              	.LVL386:
 4245              	.LBE4311:
 4246              	.LBE4312:
 4247              	.LBE4313:
 4248              	.LBE4314:
 4249              	.LBE4315:
 4250              	.LBE4316:
 4251              	.LBE4317:
 4252              	.LBE4318:
 4253              	.LBE4319:
 4254              		.loc 6 1312 0
 4255 01c4 48899424 		movq	%rdx, 128(%rsp)
 4255      80000000 
 4256              	.LVL387:
 4257              	.LBE4320:
 4258              	.LBE4322:
 4259              	.LBE4323:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 4260              		.loc 2 55 0
 4261 01cc 48898424 		movq	%rax, 144(%rsp)
 4261      90000000 
 4262              	.LVL388:
 4263              		.p2align 4,,10
 4264 01d4 0F1F4000 		.p2align 3
 4265              	.L287:
 4266              	.LBE4278:
 4267              	.LBE4277:
  54:benchs/rendering.cpp **** 
  55:benchs/rendering.cpp ****         // Finally, we can render it!
  56:benchs/rendering.cpp ****         std::cerr << "{'mapsize': " << mapsize << ", 'saturation': false, ";
  57:benchs/rendering.cpp ****         std::cout << "Rendering a " << mapsize << "² map without saturation... " << std::flush;
  58:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
  59:benchs/rendering.cpp ****             heatmap_render_to(hm.get(), heatmap_cs_default, &imgbuf[0]);
 4268              		.loc 22 60 0
 4269 01d8 498B36   		movq	(%r14), %rsi
 4270 01db 4C89EA   		movq	%r13, %rdx
 4271 01de 4889DF   		movq	%rbx, %rdi
 4272              	.LEHB10:
 4273 01e1 E8000000 		call	heatmap_render_to@PLT
 4273      00
 4274              	.LVL389:
 4275              	.LBB4324:
 4276              	.LBB4325:
 4277              	.LBB4326:
 4278              	.LBB4327:
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 4279              		.loc 12 757 0
 4280 01e6 4C8BA424 		movq	144(%rsp), %r12
 4280      90000000 
 4281 01ee 498D4424 		leaq	8(%r12), %rax
 4281      08
 4282 01f3 48898424 		movq	%rax, 144(%rsp)
 4282      90000000 
 4283              	.LBE4327:
 4284              	.LBE4326:
  57:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
 4285              		.loc 2 57 0
GAS LISTING /tmp/ccJUMvuF.s 			page 360


 4286 01fb E8000000 		call	_Z10gimme_timev@PLT
 4286      00
 4287              	.LVL390:
 4288 0200 F20F5C44 		subsd	112(%rsp), %xmm0
 4288      2470
 4289 0206 F2410F11 		movsd	%xmm0, (%r12)
 4289      0424
 4290              	.LVL391:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 4291              		.loc 2 59 0
 4292 020c E8000000 		call	_Z10gimme_timev@PLT
 4292      00
 4293              	.LEHE10:
 4294              	.LVL392:
 4295 0211 488B8C24 		movq	128(%rsp), %rcx
 4295      80000000 
 4296              	.LBE4325:
 4297              	.LBE4324:
  59:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
 4298              		.loc 22 59 0
 4299 0219 483B8C24 		cmpq	144(%rsp), %rcx
 4299      90000000 
 4300              	.LBB4329:
 4301              	.LBB4328:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 4302              		.loc 2 59 0
 4303 0221 F20F1144 		movsd	%xmm0, 112(%rsp)
 4303      2470
 4304              	.LBE4328:
 4305              	.LBE4329:
  59:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
 4306              		.loc 22 59 0
 4307 0227 75AF     		jne	.L287
 4308 0229 4C8B6424 		movq	120(%rsp), %r12
 4308      78
 4309 022e 4989C8   		movq	%rcx, %r8
 4310 0231 4D29E0   		subq	%r12, %r8
 4311 0234 4C89C2   		movq	%r8, %rdx
 4312 0237 48C1FA03 		sarq	$3, %rdx
 4313 023b 4885D2   		testq	%rdx, %rdx
 4314 023e 0F88670B 		js	.L288
 4314      0000
 4315 0244 660FEFC9 		pxor	%xmm1, %xmm1
 4316 0248 F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 4316      CA
 4317              	.L289:
 4318              	.LVL393:
 4319              	.LBB4330:
 4320              	.LBB4331:
 4321              	.LBB4332:
 4322              	.LBB4333:
 4323              	.LBB4334:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 4324              		.loc 19 126 0
 4325 024d 4C39E1   		cmpq	%r12, %rcx
 4326 0250 4C89E0   		movq	%r12, %rax
 4327 0253 48C74424 		movq	$0, 32(%rsp)
GAS LISTING /tmp/ccJUMvuF.s 			page 361


 4327      20000000 
 4327      00
 4328 025c 0F84990B 		je	.L290
 4328      0000
 4329              	.LVL394:
 4330 0262 660FEFC0 		pxor	%xmm0, %xmm0
 4331              	.LVL395:
 4332 0266 662E0F1F 		.p2align 4,,10
 4332      84000000 
 4332      0000
 4333              		.p2align 3
 4334              	.L291:
 4335              		.loc 19 127 0
 4336 0270 F20F5800 		addsd	(%rax), %xmm0
 4337              	.LVL396:
 4338 0274 4883C008 		addq	$8, %rax
 4339              	.LVL397:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 4340              		.loc 19 126 0
 4341 0278 4839C1   		cmpq	%rax, %rcx
 4342 027b 75F3     		jne	.L291
 4343              	.LBE4334:
 4344              	.LBE4333:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 4345              		.loc 2 66 0
 4346 027d F20F5EC1 		divsd	%xmm1, %xmm0
 4347              	.LVL398:
 4348              	.LBB4335:
 4349              	.LBB4336:
 4350              	.LBB4337:
 4351              	.LBB4338:
 4352              	.LBB4339:
 4353              		.loc 20 1015 0
 4354 0281 480FBDD2 		bsrq	%rdx, %rdx
 4355 0285 B83F0000 		movl	$63, %eax
 4355      00
 4356              	.LVL399:
 4357 028a 4883F23F 		xorq	$63, %rdx
 4358              	.LBE4339:
 4359              	.LBE4338:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 4360              		.loc 13 1967 0
 4361 028e 4889CE   		movq	%rcx, %rsi
 4362 0291 4C89E7   		movq	%r12, %rdi
 4363              	.LBB4342:
 4364              	.LBB4340:
 4365              		.loc 20 1015 0
 4366 0294 4863D2   		movslq	%edx, %rdx
 4367 0297 4C894424 		movq	%r8, 40(%rsp)
 4367      28
 4368              	.LVL400:
 4369              	.LBE4340:
 4370              	.LBE4342:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 4371              		.loc 13 1967 0
 4372 029c 48894C24 		movq	%rcx, 16(%rsp)
 4372      10
GAS LISTING /tmp/ccJUMvuF.s 			page 362


 4373              	.LBB4343:
 4374              	.LBB4341:
 4375              		.loc 20 1015 0
 4376 02a1 4829D0   		subq	%rdx, %rax
 4377 02a4 4889C2   		movq	%rax, %rdx
 4378              	.LBE4341:
 4379              	.LBE4343:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
 4380              		.loc 13 1969 0
 4381 02a7 4801D2   		addq	%rdx, %rdx
 4382              	.LBE4337:
 4383              	.LBE4336:
 4384              	.LBE4335:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 4385              		.loc 2 66 0
 4386 02aa F20F1144 		movsd	%xmm0, 24(%rsp)
 4386      2418
 4387              	.LVL401:
 4388              	.LBB4438:
 4389              	.LBB4433:
 4390              	.LBB4428:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 4391              		.loc 13 1967 0
 4392 02b0 E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 4392      00
 4393              	.LVL402:
 4394              	.LBB4344:
 4395              	.LBB4345:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 4396              		.loc 13 1882 0
 4397 02b5 4C8B4424 		movq	40(%rsp), %r8
 4397      28
 4398 02ba 488B4C24 		movq	16(%rsp), %rcx
 4398      10
 4399 02bf 4981F887 		cmpq	$135, %r8
 4399      000000
 4400 02c6 0F8ECD08 		jle	.L510
 4400      0000
 4401              	.LVL403:
 4402 02cc 4D8D9C24 		leaq	128(%r12), %r11
 4402      80000000 
 4403              	.LBB4346:
 4404              	.LBB4347:
 4405              	.LBB4348:
 4406              	.LBB4349:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 4407              		.loc 12 782 0
 4408 02d4 4D8D4C24 		leaq	8(%r12), %r9
 4408      08
 4409 02d9 48896C24 		movq	%rbp, 56(%rsp)
 4409      38
 4410 02de 48895C24 		movq	%rbx, 64(%rsp)
 4410      40
 4411 02e3 4D89E0   		movq	%r12, %r8
 4412 02e6 4989CC   		movq	%rcx, %r12
 4413              	.LVL404:
 4414 02e9 4C895C24 		movq	%r11, 72(%rsp)
GAS LISTING /tmp/ccJUMvuF.s 			page 363


 4414      48
 4415 02ee 4C89CB   		movq	%r9, %rbx
 4416              	.LVL405:
 4417 02f1 4C89DD   		movq	%r11, %rbp
 4418              	.LVL406:
 4419              		.p2align 4,,10
 4420 02f4 0F1F4000 		.p2align 3
 4421              	.L293:
 4422              	.LBE4349:
 4423              	.LBE4348:
 4424              	.LBB4350:
 4425              	.LBB4351:
 4426              	.LBB4352:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 4427              		.loc 17 42 0
 4428 02f8 F20F100B 		movsd	(%rbx), %xmm1
 4429              	.LVL407:
 4430              	.LBE4352:
 4431              	.LBE4351:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 4432              		.loc 13 1846 0
 4433 02fc F2410F10 		movsd	(%r8), %xmm0
 4433      00
 4434 0301 660F2EC1 		ucomisd	%xmm1, %xmm0
 4435 0305 0F876507 		ja	.L511
 4435      0000
 4436              	.LVL408:
 4437              	.LBB4353:
 4438              	.LBB4354:
 4439              	.LBB4355:
 4440              	.LBB4356:
 4441              		.loc 17 70 0
 4442 030b F20F1043 		movsd	-8(%rbx), %xmm0
 4442      F8
 4443 0310 488D43F8 		leaq	-8(%rbx), %rax
 4444              	.LVL409:
 4445              	.LBE4356:
 4446              	.LBE4355:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4447              		.loc 13 1827 0
 4448 0314 660F2EC1 		ucomisd	%xmm1, %xmm0
 4449 0318 7709     		ja	.L452
 4450 031a E93C0A00 		jmp	.L512
 4450      00
 4451              	.LVL410:
 4452 031f 90       		.p2align 4,,10
 4453              		.p2align 3
 4454              	.L380:
 4455 0320 4889D0   		movq	%rdx, %rax
 4456              	.LVL411:
 4457              	.L452:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 4458              		.loc 13 1829 0
 4459 0323 F20F1140 		movsd	%xmm0, 8(%rax)
 4459      08
 4460              	.LVL412:
 4461              	.LBB4358:
GAS LISTING /tmp/ccJUMvuF.s 			page 364


 4462              	.LBB4359:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 4463              		.loc 12 763 0
 4464 0328 488D50F8 		leaq	-8(%rax), %rdx
 4465              	.LVL413:
 4466              	.LBE4359:
 4467              	.LBE4358:
 4468              	.LBB4360:
 4469              	.LBB4357:
 4470              		.loc 17 70 0
 4471 032c F20F1040 		movsd	-8(%rax), %xmm0
 4471      F8
 4472              	.LBE4357:
 4473              	.LBE4360:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4474              		.loc 13 1827 0
 4475 0331 660F2EC1 		ucomisd	%xmm1, %xmm0
 4476 0335 77E9     		ja	.L380
 4477              	.LVL414:
 4478              	.L300:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 4479              		.loc 13 1833 0
 4480 0337 F20F1108 		movsd	%xmm1, (%rax)
 4481              	.LVL415:
 4482              	.L299:
 4483 033b 4883C308 		addq	$8, %rbx
 4484              	.LVL416:
 4485              	.LBE4354:
 4486              	.LBE4353:
 4487              	.LBE4350:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 4488              		.loc 13 1844 0
 4489 033f 4839EB   		cmpq	%rbp, %rbx
 4490 0342 75B4     		jne	.L293
 4491 0344 4989D9   		movq	%rbx, %r9
 4492 0347 488B6C24 		movq	56(%rsp), %rbp
 4492      38
 4493              	.LVL417:
 4494 034c 4C89E1   		movq	%r12, %rcx
 4495              	.LBE4347:
 4496              	.LBE4346:
 4497              	.LBB4374:
 4498              	.LBB4375:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 4499              		.loc 13 1865 0
 4500 034f 4D39CC   		cmpq	%r9, %r12
 4501 0352 4C8B4424 		movq	72(%rsp), %r8
 4501      48
 4502 0357 488B5C24 		movq	64(%rsp), %rbx
 4502      40
 4503              	.LVL418:
 4504 035c 7446     		je	.L496
 4505              	.LVL419:
 4506 035e 6690     		.p2align 4,,10
 4507              		.p2align 3
 4508              	.L438:
 4509              	.LBB4376:
GAS LISTING /tmp/ccJUMvuF.s 			page 365


 4510              	.LBB4377:
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 4511              		.loc 13 1824 0
 4512 0360 F2410F10 		movsd	(%r8), %xmm1
 4512      08
 4513              	.LVL420:
 4514 0365 498D40F8 		leaq	-8(%r8), %rax
 4515              	.LVL421:
 4516              	.LBB4378:
 4517              	.LBB4379:
 4518              		.loc 17 70 0
 4519 0369 F2410F10 		movsd	-8(%r8), %xmm0
 4519      40F8
 4520              	.LBE4379:
 4521              	.LBE4378:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4522              		.loc 13 1827 0
 4523 036f 660F2EC1 		ucomisd	%xmm1, %xmm0
 4524 0373 770E     		ja	.L453
 4525 0375 E94C0900 		jmp	.L513
 4525      00
 4526              	.LVL422:
 4527 037a 660F1F44 		.p2align 4,,10
 4527      0000
 4528              		.p2align 3
 4529              	.L382:
 4530 0380 4889D0   		movq	%rdx, %rax
 4531              	.LVL423:
 4532              	.L453:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 4533              		.loc 13 1829 0
 4534 0383 F20F1140 		movsd	%xmm0, 8(%rax)
 4534      08
 4535              	.LVL424:
 4536              	.LBB4381:
 4537              	.LBB4382:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 4538              		.loc 12 763 0
 4539 0388 488D50F8 		leaq	-8(%rax), %rdx
 4540              	.LVL425:
 4541              	.LBE4382:
 4542              	.LBE4381:
 4543              	.LBB4383:
 4544              	.LBB4380:
 4545              		.loc 17 70 0
 4546 038c F20F1040 		movsd	-8(%rax), %xmm0
 4546      F8
 4547              	.LBE4380:
 4548              	.LBE4383:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 4549              		.loc 13 1827 0
 4550 0391 660F2EC1 		ucomisd	%xmm1, %xmm0
 4551 0395 77E9     		ja	.L382
 4552              	.LVL426:
 4553 0397 4983C008 		addq	$8, %r8
 4554              	.LVL427:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
GAS LISTING /tmp/ccJUMvuF.s 			page 366


 4555              		.loc 13 1833 0
 4556 039b F20F1108 		movsd	%xmm1, (%rax)
 4557              	.LVL428:
 4558              	.LBE4377:
 4559              	.LBE4376:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 4560              		.loc 13 1865 0
 4561 039f 4C39C1   		cmpq	%r8, %rcx
 4562 03a2 75BC     		jne	.L438
 4563              	.LVL429:
 4564              	.L496:
 4565 03a4 4C8B6424 		movq	120(%rsp), %r12
 4565      78
 4566 03a9 488B8424 		movq	128(%rsp), %rax
 4566      80000000 
 4567              	.LVL430:
 4568              	.L295:
 4569              	.LBE4375:
 4570              	.LBE4374:
 4571              	.LBE4345:
 4572              	.LBE4344:
 4573              	.LBE4428:
 4574              	.LBE4433:
 4575              	.LBE4438:
 4576              	.LBB4439:
 4577              	.LBB4440:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4578              		.loc 6 655 0
 4579 03b1 4C29E0   		subq	%r12, %rax
 4580              	.LVL431:
 4581              	.LBE4440:
 4582              	.LBE4439:
 4583              	.LBB4442:
 4584              	.LBB4443:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4585              		.loc 9 535 0
 4586 03b4 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4586      000000
 4587 03bb 488D3500 		leaq	.LC14(%rip), %rsi
 4587      000000
 4588              	.LBE4443:
 4589              	.LBE4442:
 4590              	.LBB4446:
 4591              	.LBB4441:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4592              		.loc 6 655 0
 4593 03c2 48C1F803 		sarq	$3, %rax
 4594              	.LBE4441:
 4595              	.LBE4446:
 4596              	.LBB4447:
 4597              	.LBB4444:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4598              		.loc 9 535 0
 4599 03c6 BA140000 		movl	$20, %edx
 4599      00
 4600              	.LBE4444:
 4601              	.LBE4447:
GAS LISTING /tmp/ccJUMvuF.s 			page 367


  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 4602              		.loc 2 70 0
 4603 03cb 48D1E8   		shrq	%rax
 4604 03ce F2410F10 		movsd	(%r12,%rax,8), %xmm2
 4604      14C4
 4605 03d4 F20F1154 		movsd	%xmm2, 16(%rsp)
 4605      2410
 4606              	.LVL432:
 4607              	.LBB4448:
 4608              	.LBB4445:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4609              		.loc 9 535 0
 4610 03da E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4610      00
 4611              	.LVL433:
 4612              	.LBE4445:
 4613              	.LBE4448:
 4614              	.LBB4449:
 4615              	.LBB4450:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4616              		.loc 9 132 0
 4617 03df 488B0500 		movq	_ZSt4cout@GOTPCREL(%rip), %rax
 4617      000000
 4618 03e6 488B1500 		movq	_ZSt4cout@GOTPCREL(%rip), %rdx
 4618      000000
 4619              	.LBE4450:
 4620              	.LBE4449:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4621              		.loc 2 71 0
 4622 03ed F20F1005 		movsd	.LC8(%rip), %xmm0
 4622      00000000 
 4623              	.LBB4463:
 4624              	.LBB4464:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4625              		.loc 9 221 0
 4626 03f5 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4626      000000
 4627              	.LBE4464:
 4628              	.LBE4463:
 4629              	.LBB4467:
 4630              	.LBB4461:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4631              		.loc 9 132 0
 4632 03fc 488B00   		movq	(%rax), %rax
 4633              	.LBE4461:
 4634              	.LBE4467:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4635              		.loc 2 71 0
 4636 03ff F20F5944 		mulsd	16(%rsp), %xmm0
 4636      2410
 4637              	.LBB4468:
 4638              	.LBB4462:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 4639              		.loc 9 132 0
 4640 0405 480350E8 		addq	-24(%rax), %rdx
 4641              	.LVL434:
 4642              	.LBB4451:
GAS LISTING /tmp/ccJUMvuF.s 			page 368


 4643              	.LBB4452:
 4644              	.LBB4453:
 4645              	.LBB4454:
 4646              	.LBB4455:
 4647              	.LBB4456:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 4648              		.loc 21 76 0
 4649 0409 8B4218   		movl	24(%rdx), %eax
 4650 040c 25FBFEFF 		andl	$-261, %eax
 4650      FF
 4651              	.LVL435:
 4652              	.LBE4456:
 4653              	.LBE4455:
 4654              	.LBE4454:
 4655              	.LBB4457:
 4656              	.LBB4458:
 4657              	.LBB4459:
 4658              	.LBB4460:
 4659              		.loc 21 80 0
 4660 0411 83C804   		orl	$4, %eax
 4661              	.LVL436:
 4662 0414 894218   		movl	%eax, 24(%rdx)
 4663              	.LVL437:
 4664              	.LBE4460:
 4665              	.LBE4459:
 4666              	.LBE4458:
 4667              	.LBE4457:
 4668              	.LBE4453:
 4669              	.LBE4452:
 4670              	.LBE4451:
 4671              	.LBE4462:
 4672              	.LBE4468:
 4673              	.LBB4469:
 4674              	.LBB4465:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4675              		.loc 9 221 0
 4676 0417 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4676      00
 4677              	.LVL438:
 4678              	.LBE4465:
 4679              	.LBE4469:
 4680              	.LBB4470:
 4681              	.LBB4471:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4682              		.loc 9 535 0
 4683 041c 488D3500 		leaq	.LC15(%rip), %rsi
 4683      000000
 4684 0423 BA0B0000 		movl	$11, %edx
 4684      00
 4685 0428 4889C7   		movq	%rax, %rdi
 4686              	.LBE4471:
 4687              	.LBE4470:
 4688              	.LBB4473:
 4689              	.LBB4466:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4690              		.loc 9 221 0
 4691 042b 4989C4   		movq	%rax, %r12
GAS LISTING /tmp/ccJUMvuF.s 			page 369


 4692              	.LVL439:
 4693              	.LBE4466:
 4694              	.LBE4473:
 4695              	.LBB4474:
 4696              	.LBB4472:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4697              		.loc 9 535 0
 4698 042e E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4698      00
 4699              	.LVL440:
 4700              	.LBE4472:
 4701              	.LBE4474:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4702              		.loc 2 71 0
 4703 0433 F20F1005 		movsd	.LC8(%rip), %xmm0
 4703      00000000 
 4704              	.LVL441:
 4705              	.LBB4475:
 4706              	.LBB4476:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4707              		.loc 9 221 0
 4708 043b 4C89E7   		movq	%r12, %rdi
 4709              	.LBE4476:
 4710              	.LBE4475:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 4711              		.loc 2 71 0
 4712 043e F20F5944 		mulsd	24(%rsp), %xmm0
 4712      2418
 4713              	.LVL442:
 4714              	.LBB4479:
 4715              	.LBB4477:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4716              		.loc 9 221 0
 4717 0444 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4717      00
 4718              	.LVL443:
 4719              	.LBE4477:
 4720              	.LBE4479:
 4721              	.LBB4480:
 4722              	.LBB4481:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4723              		.loc 9 535 0
 4724 0449 488D3500 		leaq	.LC16(%rip), %rsi
 4724      000000
 4725              	.LBE4481:
 4726              	.LBE4480:
 4727              	.LBB4483:
 4728              	.LBB4478:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4729              		.loc 9 221 0
 4730 0450 4989C4   		movq	%rax, %r12
 4731              	.LVL444:
 4732              	.LBE4478:
 4733              	.LBE4483:
 4734              	.LBB4484:
 4735              	.LBB4482:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
GAS LISTING /tmp/ccJUMvuF.s 			page 370


 4736              		.loc 9 535 0
 4737 0453 BA010000 		movl	$1, %edx
 4737      00
 4738 0458 4889C7   		movq	%rax, %rdi
 4739 045b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4739      00
 4740              	.LVL445:
 4741              	.LBE4482:
 4742              	.LBE4484:
 4743              	.LBB4485:
 4744              	.LBB4486:
 4745              	.LBB4487:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4746              		.loc 9 565 0
 4747 0460 498B0424 		movq	(%r12), %rax
 4748              	.LBB4488:
 4749              	.LBB4489:
 4750              		.loc 14 444 0
 4751 0464 488B40E8 		movq	-24(%rax), %rax
 4752 0468 498B8404 		movq	240(%r12,%rax), %rax
 4752      F0000000 
 4753              	.LVL446:
 4754              	.LBB4490:
 4755              	.LBB4491:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 4756              		.loc 14 48 0
 4757 0470 4885C0   		testq	%rax, %rax
 4758 0473 0F84F009 		je	.L352
 4758      0000
 4759              	.LVL447:
 4760              	.LBE4491:
 4761              	.LBE4490:
 4762              	.LBB4493:
 4763              	.LBB4494:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 4764              		.loc 1 867 0
 4765 0479 80783800 		cmpb	$0, 56(%rax)
 4766 047d 0F840B08 		je	.L317
 4766      0000
 4767 0483 0FBE7043 		movsbl	67(%rax), %esi
 4768              	.LVL448:
 4769              	.L318:
 4770              	.LBE4494:
 4771              	.LBE4493:
 4772              	.LBE4489:
 4773              	.LBE4488:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4774              		.loc 9 565 0
 4775 0487 4C89E7   		movq	%r12, %rdi
 4776 048a E8000000 		call	_ZNSo3putEc@PLT
 4776      00
 4777              	.LVL449:
 4778              	.LBB4502:
 4779              	.LBB4503:
 4780              		.loc 9 587 0
 4781 048f 4889C7   		movq	%rax, %rdi
 4782 0492 E8000000 		call	_ZNSo5flushEv@PLT
GAS LISTING /tmp/ccJUMvuF.s 			page 371


 4782      00
 4783              	.LVL450:
 4784              	.LBE4503:
 4785              	.LBE4502:
 4786              	.LBE4487:
 4787              	.LBE4486:
 4788              	.LBE4485:
 4789              	.LBB4510:
 4790              	.LBB4511:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4791              		.loc 9 535 0
 4792 0497 488D3500 		leaq	.LC17(%rip), %rsi
 4792      000000
 4793 049e BA080000 		movl	$8, %edx
 4793      00
 4794 04a3 4C89FF   		movq	%r15, %rdi
 4795 04a6 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4795      00
 4796              	.LVL451:
 4797              	.LBE4511:
 4798              	.LBE4510:
 4799              	.LBB4512:
 4800              	.LBB4513:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4801              		.loc 9 221 0
 4802 04ab F20F1044 		movsd	16(%rsp), %xmm0
 4802      2410
 4803 04b1 4C89FF   		movq	%r15, %rdi
 4804 04b4 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4804      00
 4805              	.LVL452:
 4806              	.LBE4513:
 4807              	.LBE4512:
 4808              	.LBB4515:
 4809              	.LBB4516:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4810              		.loc 9 535 0
 4811 04b9 488D3500 		leaq	.LC18(%rip), %rsi
 4811      000000
 4812 04c0 BA0A0000 		movl	$10, %edx
 4812      00
 4813 04c5 4889C7   		movq	%rax, %rdi
 4814              	.LBE4516:
 4815              	.LBE4515:
 4816              	.LBB4518:
 4817              	.LBB4514:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4818              		.loc 9 221 0
 4819 04c8 4989C4   		movq	%rax, %r12
 4820              	.LVL453:
 4821              	.LBE4514:
 4822              	.LBE4518:
 4823              	.LBB4519:
 4824              	.LBB4517:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4825              		.loc 9 535 0
 4826 04cb E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
GAS LISTING /tmp/ccJUMvuF.s 			page 372


 4826      00
 4827              	.LVL454:
 4828              	.LBE4517:
 4829              	.LBE4519:
 4830              	.LBB4520:
 4831              	.LBB4521:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 4832              		.loc 9 221 0
 4833 04d0 F20F1044 		movsd	24(%rsp), %xmm0
 4833      2418
 4834 04d6 4C89E7   		movq	%r12, %rdi
 4835 04d9 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 4835      00
 4836              	.LVL455:
 4837              	.LBE4521:
 4838              	.LBE4520:
 4839              	.LBB4522:
 4840              	.LBB4523:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4841              		.loc 9 535 0
 4842 04de 488D3500 		leaq	.LC19(%rip), %rsi
 4842      000000
 4843 04e5 4889C7   		movq	%rax, %rdi
 4844 04e8 BA010000 		movl	$1, %edx
 4844      00
 4845 04ed E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4845      00
 4846              	.LVL456:
 4847              	.LBE4523:
 4848              	.LBE4522:
 4849              	.LBE4332:
 4850              	.LBB4530:
 4851              	.LBB4531:
 4852              	.LBB4532:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 4853              		.loc 6 161 0
 4854 04f2 488B7C24 		movq	120(%rsp), %rdi
 4854      78
 4855              	.LVL457:
 4856              	.LBB4533:
 4857              	.LBB4534:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 4858              		.loc 6 177 0
 4859 04f7 4885FF   		testq	%rdi, %rdi
 4860 04fa 7405     		je	.L319
 4861              	.LVL458:
 4862              	.LBB4535:
 4863              	.LBB4536:
 4864              	.LBB4537:
 4865              		.loc 7 110 0
 4866 04fc E8000000 		call	_ZdlPv@PLT
 4866      00
 4867              	.LVL459:
 4868              	.L319:
 4869              	.LBE4537:
 4870              	.LBE4536:
 4871              	.LBE4535:
GAS LISTING /tmp/ccJUMvuF.s 			page 373


 4872              	.LBE4534:
 4873              	.LBE4533:
 4874              	.LBE4532:
 4875              	.LBE4531:
 4876              	.LBE4530:
 4877              	.LBE4331:
 4878              	.LBE4330:
 4879              	.LBE4276:
  60:benchs/rendering.cpp ****         }
  61:benchs/rendering.cpp ****         ret += imgbuf[0];
 4880              		.loc 22 62 0
 4881 0501 410FB645 		movzbl	0(%r13), %eax
 4881      00
 4882              	.LBB4556:
 4883              	.LBB4557:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4884              		.loc 9 535 0
 4885 0506 488D3500 		leaq	.LC26(%rip), %rsi
 4885      000000
 4886 050d BA010000 		movl	$1, %edx
 4886      00
 4887              	.LBE4557:
 4888              	.LBE4556:
 4889              		.loc 22 62 0
 4890 0512 03442430 		addl	48(%rsp), %eax
 4891              	.LBB4560:
 4892              	.LBB4558:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4893              		.loc 9 535 0
 4894 0516 4C89FF   		movq	%r15, %rdi
 4895              	.LBE4558:
 4896              	.LBE4560:
 4897              		.loc 22 62 0
 4898 0519 89442430 		movl	%eax, 48(%rsp)
 4899              	.LVL460:
 4900              	.LEHB11:
 4901              	.LBB4561:
 4902              	.LBB4559:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4903              		.loc 9 535 0
 4904 051d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4904      00
 4905              	.LVL461:
 4906              	.LBE4559:
 4907              	.LBE4561:
 4908              	.LBB4562:
 4909              	.LBB4563:
 4910              	.LBB4564:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4911              		.loc 9 565 0
 4912 0522 498B07   		movq	(%r15), %rax
 4913              	.LBB4565:
 4914              	.LBB4566:
 4915              		.loc 14 444 0
 4916 0525 488B40E8 		movq	-24(%rax), %rax
 4917 0529 4E8BA438 		movq	240(%rax,%r15), %r12
 4917      F0000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 374


 4918              	.LVL462:
 4919              	.LBB4567:
 4920              	.LBB4568:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 4921              		.loc 14 48 0
 4922 0531 4D85E4   		testq	%r12, %r12
 4923 0534 0F842A09 		je	.L514
 4923      0000
 4924              	.LVL463:
 4925              	.LBE4568:
 4926              	.LBE4567:
 4927              	.LBB4570:
 4928              	.LBB4571:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 4929              		.loc 1 867 0
 4930 053a 41807C24 		cmpb	$0, 56(%r12)
 4930      3800
 4931 0540 0F841907 		je	.L321
 4931      0000
 4932 0546 410FBE74 		movsbl	67(%r12), %esi
 4932      2443
 4933              	.LVL464:
 4934              	.L322:
 4935              	.LBE4571:
 4936              	.LBE4570:
 4937              	.LBE4566:
 4938              	.LBE4565:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4939              		.loc 9 565 0
 4940 054c 4C89FF   		movq	%r15, %rdi
 4941 054f E8000000 		call	_ZNSo3putEc@PLT
 4941      00
 4942              	.LVL465:
 4943              	.LBB4579:
 4944              	.LBB4580:
 4945              		.loc 9 587 0
 4946 0554 4889C7   		movq	%rax, %rdi
 4947 0557 E8000000 		call	_ZNSo5flushEv@PLT
 4947      00
 4948              	.LVL466:
 4949              	.LBE4580:
 4950              	.LBE4579:
 4951              	.LBE4564:
 4952              	.LBE4563:
 4953              	.LBE4562:
 4954              	.LBB4587:
 4955              	.LBB4588:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4956              		.loc 9 535 0
 4957 055c 488D3500 		leaq	.LC22(%rip), %rsi
 4957      000000
 4958 0563 BA0C0000 		movl	$12, %edx
 4958      00
 4959 0568 4C89FF   		movq	%r15, %rdi
 4960 056b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4960      00
 4961              	.LVL467:
GAS LISTING /tmp/ccJUMvuF.s 			page 375


 4962              	.LBE4588:
 4963              	.LBE4587:
 4964              	.LBB4589:
 4965              	.LBB4590:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4966              		.loc 9 171 0
 4967 0570 4C8B6424 		movq	8(%rsp), %r12
 4967      08
 4968              	.LVL468:
 4969 0575 4C89FF   		movq	%r15, %rdi
 4970 0578 4C89E6   		movq	%r12, %rsi
 4971 057b E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4971      00
 4972              	.LVL469:
 4973              	.LBE4590:
 4974              	.LBE4589:
 4975              	.LBB4591:
 4976              	.LBB4592:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 4977              		.loc 9 535 0
 4978 0580 488D3500 		leaq	.LC27(%rip), %rsi
 4978      000000
 4979 0587 BA160000 		movl	$22, %edx
 4979      00
 4980 058c 4889C7   		movq	%rax, %rdi
 4981 058f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4981      00
 4982              	.LVL470:
 4983              	.LBE4592:
 4984              	.LBE4591:
 4985              	.LBB4593:
 4986              	.LBB4594:
 4987 0594 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4987      000000
 4988 059b 488D3500 		leaq	.LC24(%rip), %rsi
 4988      000000
 4989 05a2 BA0C0000 		movl	$12, %edx
 4989      00
 4990 05a7 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4990      00
 4991              	.LVL471:
 4992              	.LBE4594:
 4993              	.LBE4593:
 4994              	.LBB4595:
 4995              	.LBB4596:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 4996              		.loc 9 171 0
 4997 05ac 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 4997      000000
 4998 05b3 4C89E6   		movq	%r12, %rsi
 4999 05b6 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 4999      00
 5000              	.LVL472:
 5001              	.LBE4596:
 5002              	.LBE4595:
 5003              	.LBB4598:
 5004              	.LBB4599:
GAS LISTING /tmp/ccJUMvuF.s 			page 376


 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5005              		.loc 9 535 0
 5006 05bb 488D3500 		leaq	.LC28(%rip), %rsi
 5006      000000
 5007 05c2 BA1A0000 		movl	$26, %edx
 5007      00
 5008 05c7 4889C7   		movq	%rax, %rdi
 5009              	.LBE4599:
 5010              	.LBE4598:
 5011              	.LBB4601:
 5012              	.LBB4597:
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 5013              		.loc 9 171 0
 5014 05ca 4989C4   		movq	%rax, %r12
 5015              	.LVL473:
 5016              	.LBE4597:
 5017              	.LBE4601:
 5018              	.LBB4602:
 5019              	.LBB4600:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5020              		.loc 9 535 0
 5021 05cd E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5021      00
 5022              	.LVL474:
 5023              	.LBE4600:
 5024              	.LBE4602:
 5025              	.LBB4603:
 5026              	.LBB4604:
 5027              	.LBB4605:
 5028              		.loc 9 587 0
 5029 05d2 4C89E7   		movq	%r12, %rdi
 5030 05d5 E8000000 		call	_ZNSo5flushEv@PLT
 5030      00
 5031              	.LVL475:
 5032              	.LBE4605:
 5033              	.LBE4604:
 5034              	.LBE4603:
 5035              	.LBB4606:
 5036              	.LBB4607:
 5037              	.LBB4608:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5038              		.loc 2 55 0
 5039 05da E8000000 		call	_Z10gimme_timev@PLT
 5039      00
 5040              	.LVL476:
 5041              	.LBB4609:
 5042              	.LBB4610:
 5043              	.LBB4611:
 5044              	.LBB4612:
 5045              	.LBB4613:
 5046              	.LBB4614:
 5047              	.LBB4615:
 5048              	.LBB4616:
 5049              	.LBB4617:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 5050              		.loc 7 104 0
 5051 05df BF280000 		movl	$40, %edi
GAS LISTING /tmp/ccJUMvuF.s 			page 377


 5051      00
 5052              	.LBE4617:
 5053              	.LBE4616:
 5054              	.LBE4615:
 5055              	.LBE4614:
 5056              	.LBE4613:
 5057              	.LBE4612:
 5058              	.LBE4611:
 5059              	.LBE4610:
 5060              	.LBE4609:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5061              		.loc 2 55 0
 5062 05e4 F20F1184 		movsd	%xmm0, 160(%rsp)
 5062      24A00000 
 5062      00
 5063              	.LVL477:
 5064              	.LBB4653:
 5065              	.LBB4629:
 5066              	.LBB4625:
 5067              	.LBB4626:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 5068              		.loc 6 91 0
 5069 05ed 48C78424 		movq	$0, 168(%rsp)
 5069      A8000000 
 5069      00000000 
 5070 05f9 48C78424 		movq	$0, 176(%rsp)
 5070      B0000000 
 5070      00000000 
 5071 0605 48C78424 		movq	$0, 184(%rsp)
 5071      B8000000 
 5071      00000000 
 5072              	.LVL478:
 5073              	.LBE4626:
 5074              	.LBE4625:
 5075              	.LBB4627:
 5076              	.LBB4623:
 5077              	.LBB4622:
 5078              	.LBB4621:
 5079              	.LBB4620:
 5080              	.LBB4619:
 5081              	.LBB4618:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 5082              		.loc 7 104 0
 5083 0611 E8000000 		call	_Znwm@PLT
 5083      00
 5084              	.LEHE11:
 5085              	.LVL479:
 5086              	.LBE4618:
 5087              	.LBE4619:
 5088              	.LBE4620:
 5089              	.LBE4621:
 5090              	.LBE4622:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5091              		.loc 6 187 0
 5092 0616 488D5028 		leaq	40(%rax), %rdx
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 5093              		.loc 6 185 0
GAS LISTING /tmp/ccJUMvuF.s 			page 378


 5094 061a 48898424 		movq	%rax, 168(%rsp)
 5094      A8000000 
 5095              	.LBE4623:
 5096              	.LBE4627:
 5097              	.LBE4629:
 5098              	.LBB4630:
 5099              	.LBB4631:
 5100              	.LBB4632:
 5101              	.LBB4633:
 5102              	.LBB4634:
 5103              	.LBB4635:
 5104              	.LBB4636:
 5105              	.LBB4637:
 5106              	.LBB4638:
 5107              	.LBB4639:
 5108              	.LBB4640:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 5109              		.loc 20 762 0
 5110 0622 48C74020 		movq	$0, 32(%rax)
 5110      00000000 
 5111              	.LBE4640:
 5112              	.LBE4639:
 5113              	.LBE4638:
 5114              	.LBE4637:
 5115              	.LBE4636:
 5116              	.LBE4635:
 5117              	.LBE4634:
 5118              	.LBE4633:
 5119              	.LBE4632:
 5120              	.LBE4631:
 5121              	.LBE4630:
 5122              	.LBB4651:
 5123              	.LBB4628:
 5124              	.LBB4624:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5125              		.loc 6 187 0
 5126 062a 48899424 		movq	%rdx, 184(%rsp)
 5126      B8000000 
 5127              	.LVL480:
 5128              	.LBE4624:
 5129              	.LBE4628:
 5130              	.LBE4651:
 5131              	.LBB4652:
 5132              	.LBB4650:
 5133              	.LBB4649:
 5134              	.LBB4648:
 5135              	.LBB4647:
 5136              	.LBB4646:
 5137              	.LBB4645:
 5138              	.LBB4644:
 5139              	.LBB4643:
 5140              	.LBB4642:
 5141              	.LBB4641:
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 5142              		.loc 20 762 0
 5143 0632 48C70000 		movq	$0, (%rax)
 5143      000000
GAS LISTING /tmp/ccJUMvuF.s 			page 379


 5144              	.LVL481:
 5145 0639 48C74008 		movq	$0, 8(%rax)
 5145      00000000 
 5146              	.LVL482:
 5147 0641 48C74010 		movq	$0, 16(%rax)
 5147      00000000 
 5148              	.LVL483:
 5149 0649 48C74018 		movq	$0, 24(%rax)
 5149      00000000 
 5150              	.LVL484:
 5151              	.LBE4641:
 5152              	.LBE4642:
 5153              	.LBE4643:
 5154              	.LBE4644:
 5155              	.LBE4645:
 5156              	.LBE4646:
 5157              	.LBE4647:
 5158              	.LBE4648:
 5159              	.LBE4649:
 5160              		.loc 6 1312 0
 5161 0651 48899424 		movq	%rdx, 176(%rsp)
 5161      B0000000 
 5162              	.LVL485:
 5163              	.LBE4650:
 5164              	.LBE4652:
 5165              	.LBE4653:
  55:./benchs/timing.hpp ****     RepeatTimer(int count) : _t0(gimme_time()), _ts(count), _i(_ts.begin()) {}
 5166              		.loc 2 55 0
 5167 0659 48898424 		movq	%rax, 192(%rsp)
 5167      C0000000 
 5168              	.LVL486:
 5169              		.p2align 4,,10
 5170 0661 0F1F8000 		.p2align 3
 5170      000000
 5171              	.L323:
 5172              	.LBE4608:
 5173              	.LBE4607:
  62:benchs/rendering.cpp ****         std::cerr << "," << std::endl;
  63:benchs/rendering.cpp **** 
  64:benchs/rendering.cpp ****         std::cerr << "{'mapsize': " << mapsize << ", 'saturation': true, ";
  65:benchs/rendering.cpp ****         std::cout << "Rendering a " << mapsize << "² map with saturation... " << std::flush;
  66:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
  67:benchs/rendering.cpp ****             heatmap_render_saturated_to(hm.get(), heatmap_cs_default, 0.5f, &imgbuf[0]);
 5174              		.loc 22 68 0
 5175 0668 498B36   		movq	(%r14), %rsi
 5176 066b 4C89EA   		movq	%r13, %rdx
 5177 066e 4889DF   		movq	%rbx, %rdi
 5178 0671 F30F1005 		movss	.LC29(%rip), %xmm0
 5178      00000000 
 5179              	.LEHB12:
 5180 0679 E8000000 		call	heatmap_render_saturated_to@PLT
 5180      00
 5181              	.LVL487:
 5182              	.LBB4654:
 5183              	.LBB4655:
 5184              	.LBB4656:
 5185              	.LBB4657:
GAS LISTING /tmp/ccJUMvuF.s 			page 380


 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 5186              		.loc 12 757 0
 5187 067e 4C8BA424 		movq	192(%rsp), %r12
 5187      C0000000 
 5188 0686 498D4424 		leaq	8(%r12), %rax
 5188      08
 5189 068b 48898424 		movq	%rax, 192(%rsp)
 5189      C0000000 
 5190              	.LBE4657:
 5191              	.LBE4656:
  57:./benchs/timing.hpp ****         *_i++ = gimme_time() - _t0;
 5192              		.loc 2 57 0
 5193 0693 E8000000 		call	_Z10gimme_timev@PLT
 5193      00
 5194              	.LVL488:
 5195 0698 F20F5C84 		subsd	160(%rsp), %xmm0
 5195      24A00000 
 5195      00
 5196 06a1 F2410F11 		movsd	%xmm0, (%r12)
 5196      0424
 5197              	.LVL489:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 5198              		.loc 2 59 0
 5199 06a7 E8000000 		call	_Z10gimme_timev@PLT
 5199      00
 5200              	.LEHE12:
 5201              	.LVL490:
 5202 06ac 4C8BA424 		movq	176(%rsp), %r12
 5202      B0000000 
 5203              	.LBE4655:
 5204              	.LBE4654:
  67:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
 5205              		.loc 22 67 0
 5206 06b4 4C3BA424 		cmpq	192(%rsp), %r12
 5206      C0000000 
 5207              	.LBB4659:
 5208              	.LBB4658:
  59:./benchs/timing.hpp ****         _t0 = gimme_time();
 5209              		.loc 2 59 0
 5210 06bc F20F1184 		movsd	%xmm0, 160(%rsp)
 5210      24A00000 
 5210      00
 5211              	.LBE4658:
 5212              	.LBE4659:
  67:benchs/rendering.cpp ****         for(RepeatTimer t(5) ; t ; t.next()) {
 5213              		.loc 22 67 0
 5214 06c5 75A1     		jne	.L323
 5215 06c7 4C8B8C24 		movq	168(%rsp), %r9
 5215      A8000000 
 5216 06cf 4D89E6   		movq	%r12, %r14
 5217 06d2 4D29CE   		subq	%r9, %r14
 5218 06d5 4C89CE   		movq	%r9, %rsi
 5219 06d8 4C89F2   		movq	%r14, %rdx
 5220 06db 48C1FA03 		sarq	$3, %rdx
 5221 06df 4885D2   		testq	%rdx, %rdx
 5222 06e2 0F888306 		js	.L324
 5222      0000
GAS LISTING /tmp/ccJUMvuF.s 			page 381


 5223 06e8 660FEFC9 		pxor	%xmm1, %xmm1
 5224              	.LBB4660:
 5225              	.LBB4661:
 5226              	.LBB4662:
 5227              	.LBB4663:
 5228              	.LBB4664:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 5229              		.loc 19 126 0
 5230 06ec 4D39CC   		cmpq	%r9, %r12
 5231 06ef F2480F2A 		cvtsi2sdq	%rdx, %xmm1
 5231      CA
 5232              	.LVL491:
 5233 06f4 0F849606 		je	.L326
 5233      0000
 5234              	.LVL492:
 5235              	.L524:
 5236 06fa 660FEFC0 		pxor	%xmm0, %xmm0
 5237 06fe 4C89C8   		movq	%r9, %rax
 5238              	.LVL493:
 5239              		.p2align 4,,10
 5240 0701 0F1F8000 		.p2align 3
 5240      000000
 5241              	.L327:
 5242              		.loc 19 127 0
 5243 0708 F20F5800 		addsd	(%rax), %xmm0
 5244              	.LVL494:
 5245 070c 4883C008 		addq	$8, %rax
 5246              	.LVL495:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 5247              		.loc 19 126 0
 5248 0710 4939C4   		cmpq	%rax, %r12
 5249 0713 75F3     		jne	.L327
 5250              	.LVL496:
 5251              	.LBE4664:
 5252              	.LBE4663:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 5253              		.loc 2 66 0
 5254 0715 F20F5EC1 		divsd	%xmm1, %xmm0
 5255              	.LVL497:
 5256              	.LBB4666:
 5257              	.LBB4667:
 5258              	.LBB4668:
 5259              	.LBB4669:
 5260              	.LBB4670:
 5261              		.loc 20 1015 0
 5262 0719 480FBDD2 		bsrq	%rdx, %rdx
 5263 071d B83F0000 		movl	$63, %eax
 5263      00
 5264              	.LVL498:
 5265 0722 4883F23F 		xorq	$63, %rdx
 5266              	.LBE4670:
 5267              	.LBE4669:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5268              		.loc 13 1967 0
 5269 0726 4C89CF   		movq	%r9, %rdi
 5270 0729 4C89E6   		movq	%r12, %rsi
 5271              	.LVL499:
GAS LISTING /tmp/ccJUMvuF.s 			page 382


 5272              	.LBB4673:
 5273              	.LBB4671:
 5274              		.loc 20 1015 0
 5275 072c 4863D2   		movslq	%edx, %rdx
 5276              	.LBE4671:
 5277              	.LBE4673:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5278              		.loc 13 1967 0
 5279 072f 4C894C24 		movq	%r9, 24(%rsp)
 5279      18
 5280              	.LVL500:
 5281              	.LBB4674:
 5282              	.LBB4672:
 5283              		.loc 20 1015 0
 5284 0734 4829D0   		subq	%rdx, %rax
 5285 0737 4889C2   		movq	%rax, %rdx
 5286              	.LBE4672:
 5287              	.LBE4674:
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
 5288              		.loc 13 1969 0
 5289 073a 4801D2   		addq	%rdx, %rdx
 5290              	.LBE4668:
 5291              	.LBE4667:
 5292              	.LBE4666:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 5293              		.loc 2 66 0
 5294 073d F20F1144 		movsd	%xmm0, 16(%rsp)
 5294      2410
 5295              	.LVL501:
 5296              	.LBB4773:
 5297              	.LBB4767:
 5298              	.LBB4761:
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
 5299              		.loc 13 1967 0
 5300 0743 E8000000 		call	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter
 5300      00
 5301              	.LVL502:
 5302              	.LBB4675:
 5303              	.LBB4676:
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
 5304              		.loc 13 1882 0
 5305 0748 4981FE87 		cmpq	$135, %r14
 5305      000000
 5306 074f 4C8B4C24 		movq	24(%rsp), %r9
 5306      18
 5307 0754 0F8E8903 		jle	.L515
 5307      0000
 5308              	.LVL503:
 5309 075a 4D8D9180 		leaq	128(%r9), %r10
 5309      000000
 5310              	.LBB4677:
 5311              	.LBB4678:
 5312              	.LBB4679:
 5313              	.LBB4680:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 5314              		.loc 12 782 0
 5315 0761 4D8D4108 		leaq	8(%r9), %r8
GAS LISTING /tmp/ccJUMvuF.s 			page 383


 5316 0765 48896C24 		movq	%rbp, 32(%rsp)
 5316      20
 5317 076a 48895C24 		movq	%rbx, 40(%rsp)
 5317      28
 5318 076f 4C896424 		movq	%r12, 56(%rsp)
 5318      38
 5319 0774 4C89CD   		movq	%r9, %rbp
 5320 0777 4D89D6   		movq	%r10, %r14
 5321 077a 4C89C3   		movq	%r8, %rbx
 5322 077d 4D89D4   		movq	%r10, %r12
 5323              	.LVL504:
 5324              		.p2align 4,,10
 5325              		.p2align 3
 5326              	.L329:
 5327              	.LBE4680:
 5328              	.LBE4679:
 5329              	.LBB4681:
 5330              	.LBB4682:
 5331              	.LBB4683:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 5332              		.loc 17 42 0
 5333 0780 F20F100B 		movsd	(%rbx), %xmm1
 5334              	.LVL505:
 5335              	.LBE4683:
 5336              	.LBE4682:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 5337              		.loc 13 1846 0
 5338 0784 F20F1045 		movsd	0(%rbp), %xmm0
 5338      00
 5339 0789 660F2EC1 		ucomisd	%xmm1, %xmm0
 5340 078d 0F879D02 		ja	.L516
 5340      0000
 5341              	.LVL506:
 5342              	.LBB4684:
 5343              	.LBB4685:
 5344              	.LBB4686:
 5345              	.LBB4687:
 5346              		.loc 17 70 0
 5347 0793 F20F1043 		movsd	-8(%rbx), %xmm0
 5347      F8
 5348 0798 488D43F8 		leaq	-8(%rbx), %rax
 5349              	.LVL507:
 5350              	.LBE4687:
 5351              	.LBE4686:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5352              		.loc 13 1827 0
 5353 079c 660F2EC1 		ucomisd	%xmm1, %xmm0
 5354 07a0 7711     		ja	.L455
 5355 07a2 E9A40500 		jmp	.L517
 5355      00
 5356              	.LVL508:
 5357 07a7 660F1F84 		.p2align 4,,10
 5357      00000000 
 5357      00
 5358              		.p2align 3
 5359              	.L388:
 5360 07b0 4889D0   		movq	%rdx, %rax
GAS LISTING /tmp/ccJUMvuF.s 			page 384


 5361              	.LVL509:
 5362              	.L455:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 5363              		.loc 13 1829 0
 5364 07b3 F20F1140 		movsd	%xmm0, 8(%rax)
 5364      08
 5365              	.LVL510:
 5366              	.LBB4689:
 5367              	.LBB4690:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 5368              		.loc 12 763 0
 5369 07b8 488D50F8 		leaq	-8(%rax), %rdx
 5370              	.LVL511:
 5371              	.LBE4690:
 5372              	.LBE4689:
 5373              	.LBB4691:
 5374              	.LBB4688:
 5375              		.loc 17 70 0
 5376 07bc F20F1040 		movsd	-8(%rax), %xmm0
 5376      F8
 5377              	.LBE4688:
 5378              	.LBE4691:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5379              		.loc 13 1827 0
 5380 07c1 660F2EC1 		ucomisd	%xmm1, %xmm0
 5381 07c5 77E9     		ja	.L388
 5382              	.LVL512:
 5383              	.L336:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 5384              		.loc 13 1833 0
 5385 07c7 F20F1108 		movsd	%xmm1, (%rax)
 5386              	.LVL513:
 5387              	.L335:
 5388 07cb 4883C308 		addq	$8, %rbx
 5389              	.LVL514:
 5390              	.LBE4685:
 5391              	.LBE4684:
 5392              	.LBE4681:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 5393              		.loc 13 1844 0
 5394 07cf 4C39E3   		cmpq	%r12, %rbx
 5395 07d2 75AC     		jne	.L329
 5396 07d4 4C8B6424 		movq	56(%rsp), %r12
 5396      38
 5397 07d9 4989D8   		movq	%rbx, %r8
 5398 07dc 488B6C24 		movq	32(%rsp), %rbp
 5398      20
 5399 07e1 488B5C24 		movq	40(%rsp), %rbx
 5399      28
 5400              	.LVL515:
 5401              	.LBE4678:
 5402              	.LBE4677:
 5403              	.LBB4705:
 5404              	.LBB4706:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 5405              		.loc 13 1865 0
 5406 07e6 4D39C4   		cmpq	%r8, %r12
GAS LISTING /tmp/ccJUMvuF.s 			page 385


 5407 07e9 7449     		je	.L497
 5408 07eb 0F1F4400 		.p2align 4,,10
 5408      00
 5409              		.p2align 3
 5410              	.L436:
 5411              	.LVL516:
 5412              	.LBB4707:
 5413              	.LBB4708:
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
 5414              		.loc 13 1824 0
 5415 07f0 F2410F10 		movsd	(%r14), %xmm1
 5415      0E
 5416              	.LVL517:
 5417 07f5 498D46F8 		leaq	-8(%r14), %rax
 5418              	.LVL518:
 5419              	.LBB4709:
 5420              	.LBB4710:
 5421              		.loc 17 70 0
 5422 07f9 F2410F10 		movsd	-8(%r14), %xmm0
 5422      46F8
 5423              	.LBE4710:
 5424              	.LBE4709:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 5425              		.loc 13 1827 0
 5426 07ff 660F2EC1 		ucomisd	%xmm1, %xmm0
 5427 0803 770E     		ja	.L456
 5428 0805 E9D50400 		jmp	.L518
 5428      00
 5429              	.LVL519:
 5430 080a 660F1F44 		.p2align 4,,10
 5430      0000
 5431              		.p2align 3
 5432              	.L390:
 5433 0810 4889D0   		movq	%rdx, %rax
 5434              	.LVL520:
 5435              	.L456:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 5436              		.loc 13 1829 0
 5437 0813 F20F1140 		movsd	%xmm0, 8(%rax)
 5437      08
 5438              	.LVL521:
 5439              	.LBB4712:
 5440              	.LBB4713:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 5441              		.loc 12 763 0
 5442 0818 488D50F8 		leaq	-8(%rax), %rdx
 5443              	.LVL522:
 5444              	.LBE4713:
 5445              	.LBE4712:
 5446              	.LBB4714:
 5447              	.LBB4711:
 5448              		.loc 17 70 0
 5449 081c F20F1040 		movsd	-8(%rax), %xmm0
 5449      F8
 5450              	.LBE4711:
 5451              	.LBE4714:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
GAS LISTING /tmp/ccJUMvuF.s 			page 386


 5452              		.loc 13 1827 0
 5453 0821 660F2EC1 		ucomisd	%xmm1, %xmm0
 5454 0825 77E9     		ja	.L390
 5455              	.LVL523:
 5456 0827 4983C608 		addq	$8, %r14
 5457              	.LVL524:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 5458              		.loc 13 1833 0
 5459 082b F20F1108 		movsd	%xmm1, (%rax)
 5460              	.LVL525:
 5461              	.LBE4708:
 5462              	.LBE4707:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 5463              		.loc 13 1865 0
 5464 082f 4D39F4   		cmpq	%r14, %r12
 5465 0832 75BC     		jne	.L436
 5466              	.LVL526:
 5467              	.L497:
 5468 0834 488B8424 		movq	168(%rsp), %rax
 5468      A8000000 
 5469 083c 488B8C24 		movq	176(%rsp), %rcx
 5469      B0000000 
 5470 0844 4889C6   		movq	%rax, %rsi
 5471              	.LVL527:
 5472              	.L331:
 5473              	.LBE4706:
 5474              	.LBE4705:
 5475              	.LBE4676:
 5476              	.LBE4675:
 5477              	.LBE4761:
 5478              	.LBE4767:
 5479              	.LBE4773:
 5480              	.LBB4774:
 5481              	.LBB4775:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5482              		.loc 6 655 0
 5483 0847 4829F1   		subq	%rsi, %rcx
 5484              	.LVL528:
 5485              	.LBE4775:
 5486              	.LBE4774:
 5487              	.LBB4777:
 5488              	.LBB4778:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5489              		.loc 9 535 0
 5490 084a 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5490      000000
 5491 0851 488D3500 		leaq	.LC14(%rip), %rsi
 5491      000000
 5492              	.LBE4778:
 5493              	.LBE4777:
 5494              	.LBB4781:
 5495              	.LBB4776:
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5496              		.loc 6 655 0
 5497 0858 48C1F903 		sarq	$3, %rcx
 5498              	.LBE4776:
 5499              	.LBE4781:
GAS LISTING /tmp/ccJUMvuF.s 			page 387


 5500              	.LBB4782:
 5501              	.LBB4779:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5502              		.loc 9 535 0
 5503 085c BA140000 		movl	$20, %edx
 5503      00
 5504              	.LBE4779:
 5505              	.LBE4782:
  70:./benchs/timing.hpp ****         double med = _ts[_ts.size()/2];
 5506              		.loc 2 70 0
 5507 0861 48D1E9   		shrq	%rcx
 5508 0864 F20F101C 		movsd	(%rax,%rcx,8), %xmm3
 5508      C8
 5509 0869 F20F115C 		movsd	%xmm3, 24(%rsp)
 5509      2418
 5510              	.LVL529:
 5511              	.LBB4783:
 5512              	.LBB4780:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5513              		.loc 9 535 0
 5514 086f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5514      00
 5515              	.LVL530:
 5516              	.LBE4780:
 5517              	.LBE4783:
 5518              	.LBB4784:
 5519              	.LBB4785:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5520              		.loc 9 132 0
 5521 0874 488B0500 		movq	_ZSt4cout@GOTPCREL(%rip), %rax
 5521      000000
 5522 087b 488B1500 		movq	_ZSt4cout@GOTPCREL(%rip), %rdx
 5522      000000
 5523              	.LBE4785:
 5524              	.LBE4784:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5525              		.loc 2 71 0
 5526 0882 F20F1005 		movsd	.LC8(%rip), %xmm0
 5526      00000000 
 5527              	.LBB4798:
 5528              	.LBB4799:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5529              		.loc 9 221 0
 5530 088a 488B3D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rdi
 5530      000000
 5531              	.LBE4799:
 5532              	.LBE4798:
 5533              	.LBB4802:
 5534              	.LBB4796:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5535              		.loc 9 132 0
 5536 0891 488B00   		movq	(%rax), %rax
 5537              	.LBE4796:
 5538              	.LBE4802:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5539              		.loc 2 71 0
 5540 0894 F20F5944 		mulsd	24(%rsp), %xmm0
GAS LISTING /tmp/ccJUMvuF.s 			page 388


 5540      2418
 5541              	.LBB4803:
 5542              	.LBB4797:
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 5543              		.loc 9 132 0
 5544 089a 480350E8 		addq	-24(%rax), %rdx
 5545              	.LVL531:
 5546              	.LBB4786:
 5547              	.LBB4787:
 5548              	.LBB4788:
 5549              	.LBB4789:
 5550              	.LBB4790:
 5551              	.LBB4791:
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
 5552              		.loc 21 76 0
 5553 089e 8B4218   		movl	24(%rdx), %eax
 5554 08a1 25FBFEFF 		andl	$-261, %eax
 5554      FF
 5555              	.LVL532:
 5556              	.LBE4791:
 5557              	.LBE4790:
 5558              	.LBE4789:
 5559              	.LBB4792:
 5560              	.LBB4793:
 5561              	.LBB4794:
 5562              	.LBB4795:
 5563              		.loc 21 80 0
 5564 08a6 83C804   		orl	$4, %eax
 5565              	.LVL533:
 5566 08a9 894218   		movl	%eax, 24(%rdx)
 5567              	.LVL534:
 5568              	.LBE4795:
 5569              	.LBE4794:
 5570              	.LBE4793:
 5571              	.LBE4792:
 5572              	.LBE4788:
 5573              	.LBE4787:
 5574              	.LBE4786:
 5575              	.LBE4797:
 5576              	.LBE4803:
 5577              	.LBB4804:
 5578              	.LBB4800:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5579              		.loc 9 221 0
 5580 08ac E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5580      00
 5581              	.LVL535:
 5582              	.LBE4800:
 5583              	.LBE4804:
 5584              	.LBB4805:
 5585              	.LBB4806:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5586              		.loc 9 535 0
 5587 08b1 488D3500 		leaq	.LC15(%rip), %rsi
 5587      000000
 5588 08b8 BA0B0000 		movl	$11, %edx
 5588      00
GAS LISTING /tmp/ccJUMvuF.s 			page 389


 5589 08bd 4889C7   		movq	%rax, %rdi
 5590              	.LBE4806:
 5591              	.LBE4805:
 5592              	.LBB4808:
 5593              	.LBB4801:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5594              		.loc 9 221 0
 5595 08c0 4989C4   		movq	%rax, %r12
 5596              	.LVL536:
 5597              	.LBE4801:
 5598              	.LBE4808:
 5599              	.LBB4809:
 5600              	.LBB4807:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5601              		.loc 9 535 0
 5602 08c3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5602      00
 5603              	.LVL537:
 5604              	.LBE4807:
 5605              	.LBE4809:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5606              		.loc 2 71 0
 5607 08c8 F20F1005 		movsd	.LC8(%rip), %xmm0
 5607      00000000 
 5608              	.LVL538:
 5609              	.LBB4810:
 5610              	.LBB4811:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5611              		.loc 9 221 0
 5612 08d0 4C89E7   		movq	%r12, %rdi
 5613              	.LBE4811:
 5614              	.LBE4810:
  71:./benchs/timing.hpp ****         std::cout << "done in a median of " << std::fixed << med * 1000.0 << "ms (avg is " << avg *
 5615              		.loc 2 71 0
 5616 08d3 F20F5944 		mulsd	16(%rsp), %xmm0
 5616      2410
 5617              	.LVL539:
 5618              	.LBB4814:
 5619              	.LBB4812:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5620              		.loc 9 221 0
 5621 08d9 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5621      00
 5622              	.LVL540:
 5623              	.LBE4812:
 5624              	.LBE4814:
 5625              	.LBB4815:
 5626              	.LBB4816:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5627              		.loc 9 535 0
 5628 08de 488D3500 		leaq	.LC16(%rip), %rsi
 5628      000000
 5629              	.LBE4816:
 5630              	.LBE4815:
 5631              	.LBB4818:
 5632              	.LBB4813:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
GAS LISTING /tmp/ccJUMvuF.s 			page 390


 5633              		.loc 9 221 0
 5634 08e5 4989C4   		movq	%rax, %r12
 5635              	.LVL541:
 5636              	.LBE4813:
 5637              	.LBE4818:
 5638              	.LBB4819:
 5639              	.LBB4817:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5640              		.loc 9 535 0
 5641 08e8 BA010000 		movl	$1, %edx
 5641      00
 5642 08ed 4889C7   		movq	%rax, %rdi
 5643 08f0 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5643      00
 5644              	.LVL542:
 5645              	.LBE4817:
 5646              	.LBE4819:
 5647              	.LBB4820:
 5648              	.LBB4821:
 5649              	.LBB4822:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 5650              		.loc 9 565 0
 5651 08f5 498B0424 		movq	(%r12), %rax
 5652              	.LBB4823:
 5653              	.LBB4824:
 5654              		.loc 14 444 0
 5655 08f9 488B40E8 		movq	-24(%rax), %rax
 5656 08fd 4D8BB404 		movq	240(%r12,%rax), %r14
 5656      F0000000 
 5657              	.LVL543:
 5658              	.LBB4825:
 5659              	.LBB4826:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 5660              		.loc 14 48 0
 5661 0905 4D85F6   		testq	%r14, %r14
 5662 0908 0F845B05 		je	.L352
 5662      0000
 5663              	.LVL544:
 5664              	.LBE4826:
 5665              	.LBE4825:
 5666              	.LBB4827:
 5667              	.LBB4828:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 5668              		.loc 1 867 0
 5669 090e 41807E38 		cmpb	$0, 56(%r14)
 5669      00
 5670 0913 0F849C01 		je	.L353
 5670      0000
 5671 0919 410FBE76 		movsbl	67(%r14), %esi
 5671      43
 5672              	.LVL545:
 5673              	.L354:
 5674              	.LBE4828:
 5675              	.LBE4827:
 5676              	.LBE4824:
 5677              	.LBE4823:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
GAS LISTING /tmp/ccJUMvuF.s 			page 391


 5678              		.loc 9 565 0
 5679 091e 4C89E7   		movq	%r12, %rdi
 5680 0921 E8000000 		call	_ZNSo3putEc@PLT
 5680      00
 5681              	.LVL546:
 5682              	.LBB4834:
 5683              	.LBB4835:
 5684              		.loc 9 587 0
 5685 0926 4889C7   		movq	%rax, %rdi
 5686 0929 E8000000 		call	_ZNSo5flushEv@PLT
 5686      00
 5687              	.LVL547:
 5688              	.LBE4835:
 5689              	.LBE4834:
 5690              	.LBE4822:
 5691              	.LBE4821:
 5692              	.LBE4820:
 5693              	.LBB4839:
 5694              	.LBB4840:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5695              		.loc 9 535 0
 5696 092e 488D3500 		leaq	.LC17(%rip), %rsi
 5696      000000
 5697 0935 BA080000 		movl	$8, %edx
 5697      00
 5698 093a 4C89FF   		movq	%r15, %rdi
 5699 093d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5699      00
 5700              	.LVL548:
 5701              	.LBE4840:
 5702              	.LBE4839:
 5703              	.LBB4841:
 5704              	.LBB4842:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5705              		.loc 9 221 0
 5706 0942 F20F1044 		movsd	24(%rsp), %xmm0
 5706      2418
 5707 0948 4C89FF   		movq	%r15, %rdi
 5708 094b E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5708      00
 5709              	.LVL549:
 5710              	.LBE4842:
 5711              	.LBE4841:
 5712              	.LBB4844:
 5713              	.LBB4845:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5714              		.loc 9 535 0
 5715 0950 488D3500 		leaq	.LC18(%rip), %rsi
 5715      000000
 5716 0957 BA0A0000 		movl	$10, %edx
 5716      00
 5717 095c 4889C7   		movq	%rax, %rdi
 5718              	.LBE4845:
 5719              	.LBE4844:
 5720              	.LBB4847:
 5721              	.LBB4843:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
GAS LISTING /tmp/ccJUMvuF.s 			page 392


 5722              		.loc 9 221 0
 5723 095f 4989C4   		movq	%rax, %r12
 5724              	.LVL550:
 5725              	.LBE4843:
 5726              	.LBE4847:
 5727              	.LBB4848:
 5728              	.LBB4846:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5729              		.loc 9 535 0
 5730 0962 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5730      00
 5731              	.LVL551:
 5732              	.LBE4846:
 5733              	.LBE4848:
 5734              	.LBB4849:
 5735              	.LBB4850:
 221:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__f); }
 5736              		.loc 9 221 0
 5737 0967 F20F1044 		movsd	16(%rsp), %xmm0
 5737      2410
 5738 096d 4C89E7   		movq	%r12, %rdi
 5739 0970 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 5739      00
 5740              	.LVL552:
 5741              	.LBE4850:
 5742              	.LBE4849:
 5743              	.LBB4851:
 5744              	.LBB4852:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 5745              		.loc 9 535 0
 5746 0975 488D3500 		leaq	.LC19(%rip), %rsi
 5746      000000
 5747 097c 4889C7   		movq	%rax, %rdi
 5748 097f BA010000 		movl	$1, %edx
 5748      00
 5749 0984 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5749      00
 5750              	.LVL553:
 5751              	.LBE4852:
 5752              	.LBE4851:
 5753              	.LBE4662:
 5754              	.LBB4860:
 5755              	.LBB4861:
 5756              	.LBB4862:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 5757              		.loc 6 161 0
 5758 0989 488BBC24 		movq	168(%rsp), %rdi
 5758      A8000000 
 5759              	.LVL554:
 5760              	.LBB4863:
 5761              	.LBB4864:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 5762              		.loc 6 177 0
 5763 0991 4885FF   		testq	%rdi, %rdi
 5764 0994 7405     		je	.L355
 5765              	.LVL555:
 5766              	.LBB4865:
GAS LISTING /tmp/ccJUMvuF.s 			page 393


 5767              	.LBB4866:
 5768              	.LBB4867:
 5769              		.loc 7 110 0
 5770 0996 E8000000 		call	_ZdlPv@PLT
 5770      00
 5771              	.LVL556:
 5772              	.L355:
 5773              	.LBE4867:
 5774              	.LBE4866:
 5775              	.LBE4865:
 5776              	.LBE4864:
 5777              	.LBE4863:
 5778              	.LBE4862:
 5779              	.LBE4861:
 5780              	.LBE4860:
 5781              	.LBE4661:
 5782              	.LBE4660:
 5783              	.LBE4606:
  68:benchs/rendering.cpp ****         }
  69:benchs/rendering.cpp ****         ret += imgbuf[0];
 5784              		.loc 22 70 0
 5785 099b 410FB645 		movzbl	0(%r13), %eax
 5785      00
 5786 09a0 03442430 		addl	48(%rsp), %eax
  70:benchs/rendering.cpp **** 
  71:benchs/rendering.cpp ****         if(mapsize < MAPSIZE_MAX)
 5787              		.loc 22 72 0
 5788 09a4 48817C24 		cmpq	$16384, 8(%rsp)
 5788      08004000 
 5788      00
  70:benchs/rendering.cpp **** 
 5789              		.loc 22 70 0
 5790 09ad 89442430 		movl	%eax, 48(%rsp)
 5791              	.LVL557:
 5792              		.loc 22 72 0
 5793 09b1 0F854103 		jne	.L356
 5793      0000
 5794              	.LVL558:
 5795              	.L362:
 5796              	.LBB4889:
 5797              	.LBB4890:
 5798              	.LBB4891:
 5799              	.LBB4892:
 5800              	.LBB4893:
 5801              	.LBB4894:
 5802              	.LBB4895:
 5803              		.loc 7 110 0
 5804 09b7 4C89EF   		movq	%r13, %rdi
 5805 09ba E8000000 		call	_ZdlPv@PLT
 5805      00
 5806              	.LVL559:
 5807              	.LBE4895:
 5808              	.LBE4894:
 5809              	.LBE4893:
 5810              	.LBE4892:
 5811              	.LBE4891:
 5812              	.LBE4890:
GAS LISTING /tmp/ccJUMvuF.s 			page 394


 5813              	.LBE4889:
 5814              	.LBB4896:
 5815              	.LBB4897:
 5816              	.LBB4898:
 5817              	.LBB4899:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 5818              		.loc 6 161 0
 5819 09bf 488B7C24 		movq	80(%rsp), %rdi
 5819      50
 5820              	.LVL560:
 5821              	.LBB4900:
 5822              	.LBB4901:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 5823              		.loc 6 177 0
 5824 09c4 4885FF   		testq	%rdi, %rdi
 5825 09c7 7405     		je	.L358
 5826              	.LVL561:
 5827              	.LBB4902:
 5828              	.LBB4903:
 5829              	.LBB4904:
 5830              		.loc 7 110 0
 5831 09c9 E8000000 		call	_ZdlPv@PLT
 5831      00
 5832              	.LVL562:
 5833              	.L358:
 5834              	.LBE4904:
 5835              	.LBE4903:
 5836              	.LBE4902:
 5837              	.LBE4901:
 5838              	.LBE4900:
 5839              	.LBE4899:
 5840              	.LBE4898:
 5841              	.LBE4897:
 5842              	.LBE4896:
 5843              	.LBB4905:
 5844              	.LBB4906:
 5845              		.file 23 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // unique_ptr implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Copyright (C) 2008-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccJUMvuF.s 			page 395


  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** /** @file bits/unique_ptr.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  *  Do not attempt to use it directly. @headername{memory}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #ifndef _UNIQUE_PTR_H
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #define _UNIQUE_PTR_H 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <bits/c++config.h>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <debug/debug.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <type_traits>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <utility>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #include <tuple>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** {
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /**
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    * @addtogroup pointer_abstractions
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    * @{
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****    */
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename> class auto_ptr;
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #endif
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// Primary template of default_delete, used by unique_ptr
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename _Tp>
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     struct default_delete
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor.
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, @p _Up,
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * only if @p _Up* is convertible to @p _Tp*.
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = typename
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       enable_if<is_convertible<_Up*, _Tp*>::value>::type>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****         default_delete(const default_delete<_Up>&) noexcept { }
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Calls @c delete @p __ptr
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       void
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(!is_void<_Tp>::value,
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	delete __ptr;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       }
GAS LISTING /tmp/ccJUMvuF.s 			page 396


  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     };
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   // DR 740 - omit specialization for array objects with a compile time length
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// Specialization for arrays, default_delete.
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template<typename _Tp>
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     struct default_delete<_Tp[]>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     private:
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	using __remove_cv = typename remove_cv<_Up>::type;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Like is_base_of<_Tp, _Up> but false if unqualified types are the same
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	using __is_derived_Tp
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  = __and_< is_base_of<_Tp, _Up>,
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		    __not_<is_same<__remove_cv<_Tp>, __remove_cv<_Up>>> >;
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     public:
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr default_delete() noexcept = default;
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Allows conversion from a deleter for arrays of another type, such as
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * a const-qualified version of @p _Tp.
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Conversions from types derived from @c _Tp are not allowed because
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * it is unsafe to @c delete[] an array of derived types through a
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * pointer to the base type.
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = typename
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       enable_if<!__is_derived_Tp<_Up>::value>::type>
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****         default_delete(const default_delete<_Up[]>&) noexcept { }
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Calls @c delete[] @p __ptr
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       void
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       operator()(_Tp* __ptr) const
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	static_assert(sizeof(_Tp)>0,
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "can't delete pointer to incomplete type");
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	delete [] __ptr;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up>
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typename enable_if<__is_derived_Tp<_Up>::value>::type
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	operator()(_Up*) const = delete;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     };
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   /// 20.7.1.2 unique_ptr for single objects.
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****   template <typename _Tp, typename _Dp = default_delete<_Tp> >
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     class unique_ptr
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     {
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // use SFINAE to determine whether _Del::pointer exists
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       class _Pointer
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	template<typename _Up>
GAS LISTING /tmp/ccJUMvuF.s 			page 397


 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  static typename _Up::pointer __test(typename _Up::pointer*);
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	template<typename _Up>
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  static _Tp* __test(...);
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typedef typename remove_reference<_Dp>::type _Del;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       public:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	typedef decltype(__test<_Del>(0)) type;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       };
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef std::tuple<typename _Pointer::type, _Dp>  __tuple_type;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       __tuple_type                                      _M_t;
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****     public:
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef typename _Pointer::type   pointer;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef _Tp                       element_type;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       typedef _Dp                       deleter_type;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Constructors.
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Default constructor, creates a unique_ptr that owns nothing.
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr unique_ptr() noexcept
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t()
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be value-initialized.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       explicit
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p) noexcept
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__p, deleter_type())
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!is_pointer<deleter_type>::value,
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		     "constructed with null function pointer deleter"); }
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __d  A reference to a deleter.
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be initialized with @p __d
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  typename conditional<is_reference<deleter_type>::value,
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	    deleter_type, const deleter_type&>::type __d) noexcept
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__p, __d) { }
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** Takes ownership of a pointer.
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __p  A pointer to an object of @c element_type
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * @param __d  An rvalue reference to a deleter.
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * The deleter will be initialized with @p std::move(__d)
GAS LISTING /tmp/ccJUMvuF.s 			page 398


 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(pointer __p,
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	  typename remove_reference<deleter_type>::type&& __d) noexcept
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(std::move(__p), std::move(__d))
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       { static_assert(!std::is_reference<deleter_type>::value,
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 		      "rvalue deleter bound to reference"); }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Creates a unique_ptr that owns nothing.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       // Move constructors.
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Move constructor.
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       unique_ptr(unique_ptr&& __u) noexcept
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /** @brief Converting constructor from another type
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        *
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * Requires that the pointer owned by @p __u is convertible to the
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * type of pointer owned by this object, @p __u does not own an array,
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        * and @p __u has a compatible deleter type.
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****        */
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename _Ep, typename = _Require<
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       is_convertible<typename unique_ptr<_Up, _Ep>::pointer, pointer>,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       __not_<is_array<_Up>>,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       typename conditional<is_reference<_Dp>::value,
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 				    is_same<_Ep, _Dp>,
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 				    is_convertible<_Ep, _Dp>>::type>>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	unique_ptr(unique_ptr<_Up, _Ep>&& __u) noexcept
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	{ }
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #if _GLIBCXX_USE_DEPRECATED
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Converting constructor from @c auto_ptr
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       template<typename _Up, typename = _Require<
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	       is_convertible<_Up*, _Tp*>, is_same<_Dp, default_delete<_Tp>>>>
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	unique_ptr(auto_ptr<_Up>&& __u) noexcept;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** #endif
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       /// Destructor, invokes the deleter if the stored pointer is not null.
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       ~unique_ptr() noexcept
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h ****       {
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	auto& __ptr = std::get<0>(_M_t);
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/unique_ptr.h **** 	if (__ptr != nullptr)
 5846              		.loc 23 235 0
 5847 09ce 4885DB   		testq	%rbx, %rbx
 5848 09d1 7408     		je	.L363
 5849              	.LVL563:
 5850              	.LBB4907:
 5851              	.LBB4908:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 5852              		.loc 5 41 0
 5853 09d3 4889DF   		movq	%rbx, %rdi
 5854 09d6 E8000000 		call	heatmap_free@PLT
 5854      00
 5855              	.LVL564:
 5856              	.L363:
GAS LISTING /tmp/ccJUMvuF.s 			page 399


 5857              	.LBE4908:
 5858              	.LBE4907:
 5859              	.LBE4906:
 5860              	.LBE4905:
 5861              	.LBE4220:
  46:benchs/rendering.cpp ****     for(size_t mapsize = MAPSIZE_MIN ; mapsize <= MAPSIZE_MAX ; mapsize *= 2) {
 5862              		.loc 22 46 0
 5863 09db 48D16424 		salq	8(%rsp)
 5863      08
 5864              	.LVL565:
 5865 09e0 836C2434 		subl	$1, 52(%rsp)
 5865      01
 5866 09e5 0F8575F6 		jne	.L364
 5866      FFFF
 5867              	.LVL566:
 5868              	.LBE4219:
 5869              	.LBB4974:
 5870              	.LBB4975:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 5871              		.loc 9 113 0
 5872 09eb 4C89FF   		movq	%r15, %rdi
 5873              	.LEHB13:
 5874 09ee E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 5874      00
 5875              	.LVL567:
 5876              	.LBE4975:
 5877              	.LBE4974:
  72:benchs/rendering.cpp ****             std::cerr << "," << std::endl;
  73:benchs/rendering.cpp ****     }
  74:benchs/rendering.cpp ****     std::cerr << std::endl << "]" << std::endl;
 5878              		.loc 22 75 0
 5879 09f3 488D3500 		leaq	.LC30(%rip), %rsi
 5879      000000
 5880 09fa 4889C7   		movq	%rax, %rdi
 5881 09fd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 5881      00
 5882              	.LVL568:
 5883              	.LBB4976:
 5884              	.LBB4977:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 5885              		.loc 9 113 0
 5886 0a02 4889C7   		movq	%rax, %rdi
 5887 0a05 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 5887      00
 5888              	.LEHE13:
 5889              	.LVL569:
 5890              	.LBE4977:
 5891              	.LBE4976:
 5892              	.LBB4978:
 5893              	.LBB4979:
 5894              		.loc 23 235 0
 5895 0a0a 4885ED   		testq	%rbp, %rbp
 5896 0a0d 7408     		je	.L423
 5897              	.LVL570:
 5898              	.LBB4980:
 5899              	.LBB4981:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
GAS LISTING /tmp/ccJUMvuF.s 			page 400


 5900              		.loc 5 45 0
 5901 0a0f 4889EF   		movq	%rbp, %rdi
 5902 0a12 E8000000 		call	heatmap_stamp_free@PLT
 5902      00
 5903              	.LVL571:
 5904              	.L423:
 5905              	.LBE4981:
 5906              	.LBE4980:
 5907              	.LBE4979:
 5908              	.LBE4978:
 5909              	.LBE4988:
  75:benchs/rendering.cpp **** 
  76:benchs/rendering.cpp ****     return ret;
  77:benchs/rendering.cpp **** }
 5910              		.loc 22 78 0
 5911 0a17 8B442430 		movl	48(%rsp), %eax
 5912 0a1b 4881C4D8 		addq	$216, %rsp
 5912      000000
 5913              		.cfi_remember_state
 5914              		.cfi_def_cfa_offset 56
 5915 0a22 5B       		popq	%rbx
 5916              		.cfi_def_cfa_offset 48
 5917 0a23 5D       		popq	%rbp
 5918              		.cfi_def_cfa_offset 40
 5919 0a24 415C     		popq	%r12
 5920              		.cfi_def_cfa_offset 32
 5921 0a26 415D     		popq	%r13
 5922              		.cfi_def_cfa_offset 24
 5923              	.LVL572:
 5924 0a28 415E     		popq	%r14
 5925              		.cfi_def_cfa_offset 16
 5926              	.LVL573:
 5927 0a2a 415F     		popq	%r15
 5928              		.cfi_def_cfa_offset 8
 5929 0a2c C3       		ret
 5930              	.LVL574:
 5931 0a2d 0F1F00   		.p2align 4,,10
 5932              		.p2align 3
 5933              	.L516:
 5934              		.cfi_restore_state
 5935              	.LBB4989:
 5936              	.LBB4982:
 5937              	.LBB4972:
 5938              	.LBB4909:
 5939              	.LBB4880:
 5940              	.LBB4874:
 5941              	.LBB4868:
 5942              	.LBB4853:
 5943              	.LBB4768:
 5944              	.LBB4762:
 5945              	.LBB4756:
 5946              	.LBB4751:
 5947              	.LBB4720:
 5948              	.LBB4703:
 5949              	.LBB4701:
 5950              	.LBB4693:
 5951              	.LBB4694:
GAS LISTING /tmp/ccJUMvuF.s 			page 401


 5952              	.LBB4695:
 5953              	.LBB4696:
 5954              	.LBB4697:
 5955              	.LBB4698:
 5956              	.LBB4699:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 5957              		.loc 20 576 0
 5958 0a30 4889DA   		movq	%rbx, %rdx
 5959 0a33 4829EA   		subq	%rbp, %rdx
 5960              	.LVL575:
 5961 0a36 4889D0   		movq	%rdx, %rax
 5962 0a39 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 5963              		.loc 20 577 0
 5964 0a3d 4885C0   		testq	%rax, %rax
 5965 0a40 741F     		je	.L334
 5966 0a42 BF080000 		movl	$8, %edi
 5966      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 5967              		.loc 20 578 0
 5968 0a47 4889EE   		movq	%rbp, %rsi
 5969 0a4a F20F114C 		movsd	%xmm1, 24(%rsp)
 5969      2418
 5970 0a50 4829D7   		subq	%rdx, %rdi
 5971 0a53 4801DF   		addq	%rbx, %rdi
 5972 0a56 E8000000 		call	memmove@PLT
 5972      00
 5973              	.LVL576:
 5974 0a5b F20F104C 		movsd	24(%rsp), %xmm1
 5974      2418
 5975              	.LVL577:
 5976              	.L334:
 5977              	.LBE4699:
 5978              	.LBE4698:
 5979              	.LBE4697:
 5980              	.LBE4696:
 5981              	.LBE4695:
 5982              	.LBE4694:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 5983              		.loc 13 1851 0
 5984 0a61 F20F114D 		movsd	%xmm1, 0(%rbp)
 5984      00
 5985 0a66 E960FDFF 		jmp	.L335
 5985      FF
 5986              	.LVL578:
 5987 0a6b 0F1F4400 		.p2align 4,,10
 5987      00
 5988              		.p2align 3
 5989              	.L511:
 5990              	.LBE4693:
 5991              	.LBE4701:
 5992              	.LBE4703:
 5993              	.LBE4720:
 5994              	.LBE4751:
 5995              	.LBE4756:
 5996              	.LBE4762:
 5997              	.LBE4768:
GAS LISTING /tmp/ccJUMvuF.s 			page 402


 5998              	.LBE4853:
 5999              	.LBE4868:
 6000              	.LBE4874:
 6001              	.LBE4880:
 6002              	.LBE4909:
 6003              	.LBB4910:
 6004              	.LBB4550:
 6005              	.LBB4544:
 6006              	.LBB4538:
 6007              	.LBB4524:
 6008              	.LBB4434:
 6009              	.LBB4429:
 6010              	.LBB4424:
 6011              	.LBB4420:
 6012              	.LBB4389:
 6013              	.LBB4372:
 6014              	.LBB4370:
 6015              	.LBB4362:
 6016              	.LBB4363:
 6017              	.LBB4364:
 6018              	.LBB4365:
 6019              	.LBB4366:
 6020              	.LBB4367:
 6021              	.LBB4368:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6022              		.loc 20 576 0
 6023 0a70 4889DA   		movq	%rbx, %rdx
 6024 0a73 4C29C2   		subq	%r8, %rdx
 6025              	.LVL579:
 6026 0a76 4889D0   		movq	%rdx, %rax
 6027 0a79 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6028              		.loc 20 577 0
 6029 0a7d 4885C0   		testq	%rax, %rax
 6030 0a80 7429     		je	.L298
 6031 0a82 BF080000 		movl	$8, %edi
 6031      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6032              		.loc 20 578 0
 6033 0a87 4C89C6   		movq	%r8, %rsi
 6034 0a8a F20F114C 		movsd	%xmm1, 40(%rsp)
 6034      2428
 6035 0a90 4829D7   		subq	%rdx, %rdi
 6036 0a93 4C894424 		movq	%r8, 16(%rsp)
 6036      10
 6037 0a98 4801DF   		addq	%rbx, %rdi
 6038 0a9b E8000000 		call	memmove@PLT
 6038      00
 6039              	.LVL580:
 6040 0aa0 4C8B4424 		movq	16(%rsp), %r8
 6040      10
 6041 0aa5 F20F104C 		movsd	40(%rsp), %xmm1
 6041      2428
 6042              	.LVL581:
 6043              	.L298:
 6044              	.LBE4368:
 6045              	.LBE4367:
GAS LISTING /tmp/ccJUMvuF.s 			page 403


 6046              	.LBE4366:
 6047              	.LBE4365:
 6048              	.LBE4364:
 6049              	.LBE4363:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6050              		.loc 13 1851 0
 6051 0aab F2410F11 		movsd	%xmm1, (%r8)
 6051      08
 6052 0ab0 E986F8FF 		jmp	.L299
 6052      FF
 6053              	.LVL582:
 6054              	.L353:
 6055              	.LBE4362:
 6056              	.LBE4370:
 6057              	.LBE4372:
 6058              	.LBE4389:
 6059              	.LBE4420:
 6060              	.LBE4424:
 6061              	.LBE4429:
 6062              	.LBE4434:
 6063              	.LBE4524:
 6064              	.LBE4538:
 6065              	.LBE4544:
 6066              	.LBE4550:
 6067              	.LBE4910:
 6068              	.LBB4911:
 6069              	.LBB4881:
 6070              	.LBB4875:
 6071              	.LBB4869:
 6072              	.LBB4854:
 6073              	.LBB4838:
 6074              	.LBB4837:
 6075              	.LBB4836:
 6076              	.LBB4833:
 6077              	.LBB4832:
 6078              	.LBB4831:
 6079              	.LBB4829:
 6080              	.LBB4830:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6081              		.loc 1 869 0
 6082 0ab5 4C89F7   		movq	%r14, %rdi
 6083 0ab8 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6083      00
 6084              	.LVL583:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6085              		.loc 1 870 0
 6086 0abd 498B06   		movq	(%r14), %rax
 6087 0ac0 BE0A0000 		movl	$10, %esi
 6087      00
 6088 0ac5 488B4030 		movq	48(%rax), %rax
 6089 0ac9 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6089      000000
 6090 0ad0 0F8448FE 		je	.L354
 6090      FFFF
 6091 0ad6 4C89F7   		movq	%r14, %rdi
 6092 0ad9 FFD0     		call	*%rax
 6093              	.LVL584:
GAS LISTING /tmp/ccJUMvuF.s 			page 404


 6094 0adb 0FBEF0   		movsbl	%al, %esi
 6095 0ade E93BFEFF 		jmp	.L354
 6095      FF
 6096              	.LVL585:
 6097              	.L515:
 6098              	.LBE4830:
 6099              	.LBE4829:
 6100              	.LBE4831:
 6101              	.LBE4832:
 6102              	.LBE4833:
 6103              	.LBE4836:
 6104              	.LBE4837:
 6105              	.LBE4838:
 6106              	.LBE4854:
 6107              	.LBB4855:
 6108              	.LBB4769:
 6109              	.LBB4763:
 6110              	.LBB4757:
 6111              	.LBB4752:
 6112              	.LBB4721:
 6113              	.LBB4722:
 6114              	.LBB4723:
 6115              	.LBB4724:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 6116              		.loc 12 782 0
 6117 0ae3 4D8D7108 		leaq	8(%r9), %r14
 6118              	.LVL586:
 6119              	.LBE4724:
 6120              	.LBE4723:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6121              		.loc 13 1844 0
 6122 0ae7 4D39F4   		cmpq	%r14, %r12
 6123 0aea 0F8444FD 		je	.L497
 6123      FFFF
 6124 0af0 48895C24 		movq	%rbx, 32(%rsp)
 6124      20
 6125 0af5 4C89E3   		movq	%r12, %rbx
 6126 0af8 4D89CC   		movq	%r9, %r12
 6127              	.LVL587:
 6128 0afb 0F1F4400 		.p2align 4,,10
 6128      00
 6129              		.p2align 3
 6130              	.L437:
 6131              	.LBB4725:
 6132              	.LBB4726:
 6133              	.LBB4727:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6134              		.loc 17 42 0
 6135 0b00 F2410F10 		movsd	(%r14), %xmm1
 6135      0E
 6136              	.LVL588:
 6137              	.LBE4727:
 6138              	.LBE4726:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6139              		.loc 13 1846 0
 6140 0b05 F2410F10 		movsd	(%r12), %xmm0
 6140      0424
GAS LISTING /tmp/ccJUMvuF.s 			page 405


 6141 0b0b 660F2EC1 		ucomisd	%xmm1, %xmm0
 6142 0b0f 774F     		ja	.L519
 6143              	.LVL589:
 6144              	.LBB4728:
 6145              	.LBB4729:
 6146              	.LBB4730:
 6147              	.LBB4731:
 6148              		.loc 17 70 0
 6149 0b11 F2410F10 		movsd	-8(%r14), %xmm0
 6149      46F8
 6150 0b17 498D46F8 		leaq	-8(%r14), %rax
 6151              	.LVL590:
 6152              	.LBE4731:
 6153              	.LBE4730:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6154              		.loc 13 1827 0
 6155 0b1b 660F2EC1 		ucomisd	%xmm1, %xmm0
 6156 0b1f 7712     		ja	.L457
 6157 0b21 E93D0200 		jmp	.L520
 6157      00
 6158              	.LVL591:
 6159 0b26 662E0F1F 		.p2align 4,,10
 6159      84000000 
 6159      0000
 6160              		.p2align 3
 6161              	.L392:
 6162 0b30 4889D0   		movq	%rdx, %rax
 6163              	.LVL592:
 6164              	.L457:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 6165              		.loc 13 1829 0
 6166 0b33 F20F1140 		movsd	%xmm0, 8(%rax)
 6166      08
 6167              	.LVL593:
 6168              	.LBB4733:
 6169              	.LBB4734:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
 6170              		.loc 12 763 0
 6171 0b38 488D50F8 		leaq	-8(%rax), %rdx
 6172              	.LVL594:
 6173              	.LBE4734:
 6174              	.LBE4733:
 6175              	.LBB4735:
 6176              	.LBB4732:
 6177              		.loc 17 70 0
 6178 0b3c F20F1040 		movsd	-8(%rax), %xmm0
 6178      F8
 6179              	.LBE4732:
 6180              	.LBE4735:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6181              		.loc 13 1827 0
 6182 0b41 660F2EC1 		ucomisd	%xmm1, %xmm0
 6183 0b45 77E9     		ja	.L392
 6184              	.LVL595:
 6185              	.L348:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6186              		.loc 13 1833 0
GAS LISTING /tmp/ccJUMvuF.s 			page 406


 6187 0b47 F20F1108 		movsd	%xmm1, (%rax)
 6188              	.LVL596:
 6189              	.L347:
 6190 0b4b 4983C608 		addq	$8, %r14
 6191              	.LVL597:
 6192              	.LBE4729:
 6193              	.LBE4728:
 6194              	.LBE4725:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6195              		.loc 13 1844 0
 6196 0b4f 4C39F3   		cmpq	%r14, %rbx
 6197 0b52 75AC     		jne	.L437
 6198 0b54 488B5C24 		movq	32(%rsp), %rbx
 6198      20
 6199              	.LVL598:
 6200 0b59 E9D6FCFF 		jmp	.L497
 6200      FF
 6201              	.LVL599:
 6202 0b5e 6690     		.p2align 4,,10
 6203              		.p2align 3
 6204              	.L519:
 6205              	.LBB4745:
 6206              	.LBB4737:
 6207              	.LBB4738:
 6208              	.LBB4739:
 6209              	.LBB4740:
 6210              	.LBB4741:
 6211              	.LBB4742:
 6212              	.LBB4743:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6213              		.loc 20 576 0
 6214 0b60 4C89F2   		movq	%r14, %rdx
 6215 0b63 4C29E2   		subq	%r12, %rdx
 6216              	.LVL600:
 6217 0b66 4889D0   		movq	%rdx, %rax
 6218 0b69 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6219              		.loc 20 577 0
 6220 0b6d 4885C0   		testq	%rax, %rax
 6221 0b70 741F     		je	.L346
 6222 0b72 BF080000 		movl	$8, %edi
 6222      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6223              		.loc 20 578 0
 6224 0b77 4C89E6   		movq	%r12, %rsi
 6225 0b7a F20F114C 		movsd	%xmm1, 24(%rsp)
 6225      2418
 6226 0b80 4829D7   		subq	%rdx, %rdi
 6227 0b83 4C01F7   		addq	%r14, %rdi
 6228 0b86 E8000000 		call	memmove@PLT
 6228      00
 6229              	.LVL601:
 6230 0b8b F20F104C 		movsd	24(%rsp), %xmm1
 6230      2418
 6231              	.LVL602:
 6232              	.L346:
 6233              	.LBE4743:
GAS LISTING /tmp/ccJUMvuF.s 			page 407


 6234              	.LBE4742:
 6235              	.LBE4741:
 6236              	.LBE4740:
 6237              	.LBE4739:
 6238              	.LBE4738:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6239              		.loc 13 1851 0
 6240 0b91 F2410F11 		movsd	%xmm1, (%r12)
 6240      0C24
 6241 0b97 EBB2     		jmp	.L347
 6242              	.LVL603:
 6243              	.L510:
 6244              	.LBE4737:
 6245              	.LBE4745:
 6246              	.LBE4722:
 6247              	.LBE4721:
 6248              	.LBE4752:
 6249              	.LBE4757:
 6250              	.LBE4763:
 6251              	.LBE4769:
 6252              	.LBE4855:
 6253              	.LBE4869:
 6254              	.LBE4875:
 6255              	.LBE4881:
 6256              	.LBE4911:
 6257              	.LBB4912:
 6258              	.LBB4551:
 6259              	.LBB4545:
 6260              	.LBB4539:
 6261              	.LBB4525:
 6262              	.LBB4435:
 6263              	.LBB4430:
 6264              	.LBB4425:
 6265              	.LBB4421:
 6266              	.LBB4390:
 6267              	.LBB4391:
 6268              	.LBB4392:
 6269              	.LBB4393:
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 6270              		.loc 12 782 0
 6271 0b99 4D8D4424 		leaq	8(%r12), %r8
 6271      08
 6272              	.LVL604:
 6273              	.LBE4393:
 6274              	.LBE4392:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6275              		.loc 13 1844 0
 6276 0b9e 4C39C1   		cmpq	%r8, %rcx
 6277 0ba1 0F84FDF7 		je	.L496
 6277      FFFF
 6278 0ba7 48896C24 		movq	%rbp, 40(%rsp)
 6278      28
 6279 0bac 48895C24 		movq	%rbx, 56(%rsp)
 6279      38
 6280 0bb1 4889CD   		movq	%rcx, %rbp
 6281 0bb4 4C89E3   		movq	%r12, %rbx
 6282              	.LVL605:
GAS LISTING /tmp/ccJUMvuF.s 			page 408


 6283 0bb7 4D89C4   		movq	%r8, %r12
 6284              	.LVL606:
 6285 0bba 660F1F44 		.p2align 4,,10
 6285      0000
 6286              		.p2align 3
 6287              	.L439:
 6288              	.LBB4394:
 6289              	.LBB4395:
 6290              	.LBB4396:
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
 6291              		.loc 17 42 0
 6292 0bc0 F2410F10 		movsd	(%r12), %xmm1
 6292      0C24
 6293              	.LVL607:
 6294              	.LBE4396:
 6295              	.LBE4395:
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
 6296              		.loc 13 1846 0
 6297 0bc6 F20F1003 		movsd	(%rbx), %xmm0
 6298 0bca 660F2EC1 		ucomisd	%xmm1, %xmm0
 6299 0bce 7758     		ja	.L521
 6300              	.LVL608:
 6301              	.LBB4397:
 6302              	.LBB4398:
 6303              	.LBB4399:
 6304              	.LBB4400:
 6305              		.loc 17 70 0
 6306 0bd0 F2410F10 		movsd	-8(%r12), %xmm0
 6306      4424F8
 6307 0bd7 498D4424 		leaq	-8(%r12), %rax
 6307      F8
 6308              	.LVL609:
 6309              	.LBE4400:
 6310              	.LBE4399:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6311              		.loc 13 1827 0
 6312 0bdc 660F2EC1 		ucomisd	%xmm1, %xmm0
 6313 0be0 7711     		ja	.L454
 6314 0be2 E96C0100 		jmp	.L522
 6314      00
 6315              	.LVL610:
 6316 0be7 660F1F84 		.p2align 4,,10
 6316      00000000 
 6316      00
 6317              		.p2align 3
 6318              	.L384:
 6319 0bf0 4889D0   		movq	%rdx, %rax
 6320              	.LVL611:
 6321              	.L454:
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
 6322              		.loc 13 1829 0
 6323 0bf3 F20F1140 		movsd	%xmm0, 8(%rax)
 6323      08
 6324              	.LVL612:
 6325              	.LBB4402:
 6326              	.LBB4403:
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h **** 	--_M_current;
GAS LISTING /tmp/ccJUMvuF.s 			page 409


 6327              		.loc 12 763 0
 6328 0bf8 488D50F8 		leaq	-8(%rax), %rdx
 6329              	.LVL613:
 6330              	.LBE4403:
 6331              	.LBE4402:
 6332              	.LBB4404:
 6333              	.LBB4401:
 6334              		.loc 17 70 0
 6335 0bfc F20F1040 		movsd	-8(%rax), %xmm0
 6335      F8
 6336              	.LBE4401:
 6337              	.LBE4404:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6338              		.loc 13 1827 0
 6339 0c01 660F2EC1 		ucomisd	%xmm1, %xmm0
 6340 0c05 77E9     		ja	.L384
 6341              	.LVL614:
 6342              	.L312:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6343              		.loc 13 1833 0
 6344 0c07 F20F1108 		movsd	%xmm1, (%rax)
 6345              	.LVL615:
 6346              	.L311:
 6347 0c0b 4983C408 		addq	$8, %r12
 6348              	.LVL616:
 6349              	.LBE4398:
 6350              	.LBE4397:
 6351              	.LBE4394:
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 6352              		.loc 13 1844 0
 6353 0c0f 4C39E5   		cmpq	%r12, %rbp
 6354 0c12 75AC     		jne	.L439
 6355 0c14 488B6C24 		movq	40(%rsp), %rbp
 6355      28
 6356              	.LVL617:
 6357 0c19 488B5C24 		movq	56(%rsp), %rbx
 6357      38
 6358              	.LVL618:
 6359 0c1e E981F7FF 		jmp	.L496
 6359      FF
 6360              	.LVL619:
 6361              		.p2align 4,,10
 6362 0c23 0F1F4400 		.p2align 3
 6362      00
 6363              	.L521:
 6364              	.LBB4414:
 6365              	.LBB4406:
 6366              	.LBB4407:
 6367              	.LBB4408:
 6368              	.LBB4409:
 6369              	.LBB4410:
 6370              	.LBB4411:
 6371              	.LBB4412:
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 6372              		.loc 20 576 0
 6373 0c28 4C89E2   		movq	%r12, %rdx
 6374 0c2b 4829DA   		subq	%rbx, %rdx
GAS LISTING /tmp/ccJUMvuF.s 			page 410


 6375              	.LVL620:
 6376 0c2e 4889D0   		movq	%rdx, %rax
 6377 0c31 48C1F803 		sarq	$3, %rax
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 6378              		.loc 20 577 0
 6379 0c35 4885C0   		testq	%rax, %rax
 6380 0c38 741F     		je	.L310
 6381 0c3a BF080000 		movl	$8, %edi
 6381      00
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 6382              		.loc 20 578 0
 6383 0c3f 4889DE   		movq	%rbx, %rsi
 6384 0c42 F20F114C 		movsd	%xmm1, 16(%rsp)
 6384      2410
 6385 0c48 4829D7   		subq	%rdx, %rdi
 6386 0c4b 4C01E7   		addq	%r12, %rdi
 6387 0c4e E8000000 		call	memmove@PLT
 6387      00
 6388              	.LVL621:
 6389 0c53 F20F104C 		movsd	16(%rsp), %xmm1
 6389      2410
 6390              	.LVL622:
 6391              	.L310:
 6392              	.LBE4412:
 6393              	.LBE4411:
 6394              	.LBE4410:
 6395              	.LBE4409:
 6396              	.LBE4408:
 6397              	.LBE4407:
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
 6398              		.loc 13 1851 0
 6399 0c59 F20F110B 		movsd	%xmm1, (%rbx)
 6400 0c5d EBAC     		jmp	.L311
 6401              	.LVL623:
 6402              	.L321:
 6403              	.LBE4406:
 6404              	.LBE4414:
 6405              	.LBE4391:
 6406              	.LBE4390:
 6407              	.LBE4421:
 6408              	.LBE4425:
 6409              	.LBE4430:
 6410              	.LBE4435:
 6411              	.LBE4525:
 6412              	.LBE4539:
 6413              	.LBE4545:
 6414              	.LBE4551:
 6415              	.LBE4912:
 6416              	.LBB4913:
 6417              	.LBB4585:
 6418              	.LBB4583:
 6419              	.LBB4581:
 6420              	.LBB4577:
 6421              	.LBB4575:
 6422              	.LBB4574:
 6423              	.LBB4572:
 6424              	.LBB4573:
GAS LISTING /tmp/ccJUMvuF.s 			page 411


 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6425              		.loc 1 869 0
 6426 0c5f 4C89E7   		movq	%r12, %rdi
 6427              	.LEHB14:
 6428 0c62 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6428      00
 6429              	.LVL624:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6430              		.loc 1 870 0
 6431 0c67 498B0424 		movq	(%r12), %rax
 6432 0c6b BE0A0000 		movl	$10, %esi
 6432      00
 6433 0c70 488B4030 		movq	48(%rax), %rax
 6434 0c74 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6434      000000
 6435 0c7b 0F84CBF8 		je	.L322
 6435      FFFF
 6436 0c81 4C89E7   		movq	%r12, %rdi
 6437 0c84 FFD0     		call	*%rax
 6438              	.LEHE14:
 6439              	.LVL625:
 6440 0c86 0FBEF0   		movsbl	%al, %esi
 6441 0c89 E9BEF8FF 		jmp	.L322
 6441      FF
 6442              	.LVL626:
 6443              	.L317:
 6444              	.LBE4573:
 6445              	.LBE4572:
 6446              	.LBE4574:
 6447              	.LBE4575:
 6448              	.LBE4577:
 6449              	.LBE4581:
 6450              	.LBE4583:
 6451              	.LBE4585:
 6452              	.LBE4913:
 6453              	.LBB4914:
 6454              	.LBB4552:
 6455              	.LBB4546:
 6456              	.LBB4540:
 6457              	.LBB4526:
 6458              	.LBB4508:
 6459              	.LBB4506:
 6460              	.LBB4504:
 6461              	.LBB4500:
 6462              	.LBB4498:
 6463              	.LBB4497:
 6464              	.LBB4495:
 6465              	.LBB4496:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6466              		.loc 1 869 0
 6467 0c8e 4889C7   		movq	%rax, %rdi
 6468 0c91 48894424 		movq	%rax, 40(%rsp)
 6468      28
 6469 0c96 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6469      00
 6470              	.LVL627:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
GAS LISTING /tmp/ccJUMvuF.s 			page 412


 6471              		.loc 1 870 0
 6472 0c9b 488B4424 		movq	40(%rsp), %rax
 6472      28
 6473 0ca0 BE0A0000 		movl	$10, %esi
 6473      00
 6474 0ca5 488B10   		movq	(%rax), %rdx
 6475 0ca8 488B5230 		movq	48(%rdx), %rdx
 6476 0cac 483B1500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rdx
 6476      000000
 6477 0cb3 0F84CEF7 		je	.L318
 6477      FFFF
 6478 0cb9 4889C7   		movq	%rax, %rdi
 6479 0cbc FFD2     		call	*%rdx
 6480              	.LVL628:
 6481 0cbe 0FBEF0   		movsbl	%al, %esi
 6482 0cc1 E9C1F7FF 		jmp	.L318
 6482      FF
 6483              	.LVL629:
 6484              	.L513:
 6485              	.LBE4496:
 6486              	.LBE4495:
 6487              	.LBE4497:
 6488              	.LBE4498:
 6489              	.LBE4500:
 6490              	.LBE4504:
 6491              	.LBE4506:
 6492              	.LBE4508:
 6493              	.LBE4526:
 6494              	.LBB4527:
 6495              	.LBB4436:
 6496              	.LBB4431:
 6497              	.LBB4426:
 6498              	.LBB4422:
 6499              	.LBB4417:
 6500              	.LBB4388:
 6501              	.LBB4386:
 6502              	.LBB4384:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6503              		.loc 13 1827 0
 6504 0cc6 4C89C0   		movq	%r8, %rax
 6505              	.LVL630:
 6506 0cc9 4983C008 		addq	$8, %r8
 6507              	.LVL631:
 6508              	.LBE4384:
 6509              	.LBE4386:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6510              		.loc 13 1865 0
 6511 0ccd 4C39C1   		cmpq	%r8, %rcx
 6512              	.LBB4387:
 6513              	.LBB4385:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6514              		.loc 13 1833 0
 6515 0cd0 F20F1108 		movsd	%xmm1, (%rax)
 6516              	.LVL632:
 6517              	.LBE4385:
 6518              	.LBE4387:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
GAS LISTING /tmp/ccJUMvuF.s 			page 413


 6519              		.loc 13 1865 0
 6520 0cd4 0F8586F6 		jne	.L438
 6520      FFFF
 6521 0cda E9C5F6FF 		jmp	.L496
 6521      FF
 6522              	.LVL633:
 6523              	.L518:
 6524              	.LBE4388:
 6525              	.LBE4417:
 6526              	.LBE4422:
 6527              	.LBE4426:
 6528              	.LBE4431:
 6529              	.LBE4436:
 6530              	.LBE4527:
 6531              	.LBE4540:
 6532              	.LBE4546:
 6533              	.LBE4552:
 6534              	.LBE4914:
 6535              	.LBB4915:
 6536              	.LBB4882:
 6537              	.LBB4876:
 6538              	.LBB4870:
 6539              	.LBB4856:
 6540              	.LBB4770:
 6541              	.LBB4764:
 6542              	.LBB4758:
 6543              	.LBB4753:
 6544              	.LBB4748:
 6545              	.LBB4719:
 6546              	.LBB4717:
 6547              	.LBB4715:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6548              		.loc 13 1827 0
 6549 0cdf 4C89F0   		movq	%r14, %rax
 6550              	.LVL634:
 6551 0ce2 4983C608 		addq	$8, %r14
 6552              	.LVL635:
 6553              	.LBE4715:
 6554              	.LBE4717:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6555              		.loc 13 1865 0
 6556 0ce6 4D39F4   		cmpq	%r14, %r12
 6557              	.LBB4718:
 6558              	.LBB4716:
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
 6559              		.loc 13 1833 0
 6560 0ce9 F20F1108 		movsd	%xmm1, (%rax)
 6561              	.LVL636:
 6562              	.LBE4716:
 6563              	.LBE4718:
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 6564              		.loc 13 1865 0
 6565 0ced 0F85FDFA 		jne	.L436
 6565      FFFF
 6566 0cf3 E93CFBFF 		jmp	.L497
 6566      FF
 6567              	.LVL637:
GAS LISTING /tmp/ccJUMvuF.s 			page 414


 6568              	.L356:
 6569              	.LBE4719:
 6570              	.LBE4748:
 6571              	.LBE4753:
 6572              	.LBE4758:
 6573              	.LBE4764:
 6574              	.LBE4770:
 6575              	.LBE4856:
 6576              	.LBE4870:
 6577              	.LBE4876:
 6578              	.LBE4882:
 6579              	.LBE4915:
 6580              	.LBB4916:
 6581              	.LBB4917:
 535:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__ostream_insert(__out, __s,
 6582              		.loc 9 535 0
 6583 0cf8 488D3500 		leaq	.LC26(%rip), %rsi
 6583      000000
 6584 0cff BA010000 		movl	$1, %edx
 6584      00
 6585 0d04 4C89FF   		movq	%r15, %rdi
 6586              	.LEHB15:
 6587 0d07 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6587      00
 6588              	.LVL638:
 6589              	.LBE4917:
 6590              	.LBE4916:
 6591              	.LBB4918:
 6592              	.LBB4919:
 6593              	.LBB4920:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 6594              		.loc 9 565 0
 6595 0d0c 498B07   		movq	(%r15), %rax
 6596              	.LBB4921:
 6597              	.LBB4922:
 6598              		.loc 14 444 0
 6599 0d0f 488B40E8 		movq	-24(%rax), %rax
 6600 0d13 4E8BA438 		movq	240(%rax,%r15), %r12
 6600      F0000000 
 6601              	.LVL639:
 6602              	.LBB4923:
 6603              	.LBB4924:
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h ****       if (!__f)
 6604              		.loc 14 48 0
 6605 0d1b 4D85E4   		testq	%r12, %r12
 6606 0d1e 0F840201 		je	.L523
 6606      0000
 6607              	.LVL640:
 6608              	.LBE4924:
 6609              	.LBE4923:
 6610              	.LBB4926:
 6611              	.LBB4927:
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	if (_M_widen_ok)
 6612              		.loc 1 867 0
 6613 0d24 41807C24 		cmpb	$0, 56(%r12)
 6613      3800
 6614 0d2a 0F849C00 		je	.L360
GAS LISTING /tmp/ccJUMvuF.s 			page 415


 6614      0000
 6615 0d30 410FBE74 		movsbl	67(%r12), %esi
 6615      2443
 6616              	.LVL641:
 6617              	.L361:
 6618              	.LBE4927:
 6619              	.LBE4926:
 6620              	.LBE4922:
 6621              	.LBE4921:
 565:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 6622              		.loc 9 565 0
 6623 0d36 4C89FF   		movq	%r15, %rdi
 6624 0d39 E8000000 		call	_ZNSo3putEc@PLT
 6624      00
 6625              	.LVL642:
 6626              	.LBB4935:
 6627              	.LBB4936:
 6628              		.loc 9 587 0
 6629 0d3e 4889C7   		movq	%rax, %rdi
 6630 0d41 E8000000 		call	_ZNSo5flushEv@PLT
 6630      00
 6631              	.LVL643:
 6632 0d46 E96CFCFF 		jmp	.L362
 6632      FF
 6633              	.LVL644:
 6634              	.L517:
 6635              	.LBE4936:
 6636              	.LBE4935:
 6637              	.LBE4920:
 6638              	.LBE4919:
 6639              	.LBE4918:
 6640              	.LBB4943:
 6641              	.LBB4883:
 6642              	.LBB4877:
 6643              	.LBB4871:
 6644              	.LBB4857:
 6645              	.LBB4771:
 6646              	.LBB4765:
 6647              	.LBB4759:
 6648              	.LBB4754:
 6649              	.LBB4749:
 6650              	.LBB4704:
 6651              	.LBB4702:
 6652              	.LBB4700:
 6653              	.LBB4692:
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
 6654              		.loc 13 1827 0
 6655 0d4b 4889D8   		movq	%rbx, %rax
 6656              	.LVL645:
 6657 0d4e E974FAFF 		jmp	.L336
 6657      FF
 6658              	.LVL646:
 6659              	.L522:
 6660              	.LBE4692:
 6661              	.LBE4700:
 6662              	.LBE4702:
 6663              	.LBE4704:
GAS LISTING /tmp/ccJUMvuF.s 			page 416


 6664              	.LBE4749:
 6665              	.LBE4754:
 6666              	.LBE4759:
 6667              	.LBE4765:
 6668              	.LBE4771:
 6669              	.LBE4857:
 6670              	.LBE4871:
 6671              	.LBE4877:
 6672              	.LBE4883:
 6673              	.LBE4943:
 6674              	.LBB4944:
 6675              	.LBB4553:
 6676              	.LBB4547:
 6677              	.LBB4541:
 6678              	.LBB4528:
 6679              	.LBB4437:
 6680              	.LBB4432:
 6681              	.LBB4427:
 6682              	.LBB4423:
 6683              	.LBB4418:
 6684              	.LBB4416:
 6685              	.LBB4415:
 6686              	.LBB4413:
 6687              	.LBB4405:
 6688 0d53 4C89E0   		movq	%r12, %rax
 6689              	.LVL647:
 6690 0d56 E9ACFEFF 		jmp	.L312
 6690      FF
 6691              	.LVL648:
 6692              	.L512:
 6693              	.LBE4405:
 6694              	.LBE4413:
 6695              	.LBE4415:
 6696              	.LBE4416:
 6697              	.LBE4418:
 6698              	.LBB4419:
 6699              	.LBB4373:
 6700              	.LBB4371:
 6701              	.LBB4369:
 6702              	.LBB4361:
 6703 0d5b 4889D8   		movq	%rbx, %rax
 6704              	.LVL649:
 6705 0d5e E9D4F5FF 		jmp	.L300
 6705      FF
 6706              	.LVL650:
 6707              	.L520:
 6708              	.LBE4361:
 6709              	.LBE4369:
 6710              	.LBE4371:
 6711              	.LBE4373:
 6712              	.LBE4419:
 6713              	.LBE4423:
 6714              	.LBE4427:
 6715              	.LBE4432:
 6716              	.LBE4437:
 6717              	.LBE4528:
 6718              	.LBE4541:
GAS LISTING /tmp/ccJUMvuF.s 			page 417


 6719              	.LBE4547:
 6720              	.LBE4553:
 6721              	.LBE4944:
 6722              	.LBB4945:
 6723              	.LBB4884:
 6724              	.LBB4878:
 6725              	.LBB4872:
 6726              	.LBB4858:
 6727              	.LBB4772:
 6728              	.LBB4766:
 6729              	.LBB4760:
 6730              	.LBB4755:
 6731              	.LBB4750:
 6732              	.LBB4747:
 6733              	.LBB4746:
 6734              	.LBB4744:
 6735              	.LBB4736:
 6736 0d63 4C89F0   		movq	%r14, %rax
 6737              	.LVL651:
 6738 0d66 E9DCFDFF 		jmp	.L348
 6738      FF
 6739              	.LVL652:
 6740              	.L324:
 6741 0d6b 4889D0   		movq	%rdx, %rax
 6742 0d6e 4889D7   		movq	%rdx, %rdi
 6743 0d71 660FEFC9 		pxor	%xmm1, %xmm1
 6744 0d75 48D1E8   		shrq	%rax
 6745 0d78 83E701   		andl	$1, %edi
 6746 0d7b 4809F8   		orq	%rdi, %rax
 6747              	.LBE4736:
 6748              	.LBE4744:
 6749              	.LBE4746:
 6750              	.LBE4747:
 6751              	.LBE4750:
 6752              	.LBE4755:
 6753              	.LBE4760:
 6754              	.LBE4766:
 6755              	.LBE4772:
 6756              	.LBE4858:
 6757              	.LBB4859:
 6758              	.LBB4665:
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_numeric.h ****       for (; __first != __last; ++__first)
 6759              		.loc 19 126 0
 6760 0d7e 4D39CC   		cmpq	%r9, %r12
 6761 0d81 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 6761      C8
 6762 0d86 F20F58C9 		addsd	%xmm1, %xmm1
 6763              	.LVL653:
 6764 0d8a 0F856AF9 		jne	.L524
 6764      FFFF
 6765              	.LVL654:
 6766              	.L326:
 6767              	.LBE4665:
 6768              	.LBE4859:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 6769              		.loc 2 66 0
 6770 0d90 F20F107C 		movsd	32(%rsp), %xmm7
GAS LISTING /tmp/ccJUMvuF.s 			page 418


 6770      2420
 6771              	.LBE4872:
 6772              	.LBE4878:
 6773              	.LBE4884:
 6774              	.LBB4885:
 6775              	.LBB4886:
 6776              	.LBB4887:
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 6777              		.loc 12 825 0
 6778 0d96 4C89E1   		movq	%r12, %rcx
 6779              	.LVL655:
 6780              	.LBE4887:
 6781              	.LBE4886:
 6782              	.LBE4885:
 6783              	.LBB4888:
 6784              	.LBB4879:
 6785              	.LBB4873:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 6786              		.loc 2 66 0
 6787 0d99 4C89E0   		movq	%r12, %rax
 6788 0d9c F20F5EF9 		divsd	%xmm1, %xmm7
 6789 0da0 F20F117C 		movsd	%xmm7, 16(%rsp)
 6789      2410
 6790              	.LVL656:
 6791 0da6 E99CFAFF 		jmp	.L331
 6791      FF
 6792              	.LVL657:
 6793              	.L288:
 6794 0dab 4889D0   		movq	%rdx, %rax
 6795 0dae 4889D6   		movq	%rdx, %rsi
 6796 0db1 660FEFC9 		pxor	%xmm1, %xmm1
 6797 0db5 48D1E8   		shrq	%rax
 6798 0db8 83E601   		andl	$1, %esi
 6799 0dbb 4809F0   		orq	%rsi, %rax
 6800 0dbe F2480F2A 		cvtsi2sdq	%rax, %xmm1
 6800      C8
 6801 0dc3 F20F58C9 		addsd	%xmm1, %xmm1
 6802 0dc7 E981F4FF 		jmp	.L289
 6802      FF
 6803              	.LVL658:
 6804              	.L360:
 6805              	.LBE4873:
 6806              	.LBE4879:
 6807              	.LBE4888:
 6808              	.LBE4945:
 6809              	.LBB4946:
 6810              	.LBB4941:
 6811              	.LBB4939:
 6812              	.LBB4937:
 6813              	.LBB4933:
 6814              	.LBB4931:
 6815              	.LBB4930:
 6816              	.LBB4928:
 6817              	.LBB4929:
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	this->_M_widen_init();
 6818              		.loc 1 869 0
 6819 0dcc 4C89E7   		movq	%r12, %rdi
GAS LISTING /tmp/ccJUMvuF.s 			page 419


 6820 0dcf E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 6820      00
 6821              	.LVL659:
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h **** 	return this->do_widen(__c);
 6822              		.loc 1 870 0
 6823 0dd4 498B0424 		movq	(%r12), %rax
 6824 0dd8 BE0A0000 		movl	$10, %esi
 6824      00
 6825 0ddd 488B4030 		movq	48(%rax), %rax
 6826 0de1 483B0500 		cmpq	_ZNKSt5ctypeIcE8do_widenEc@GOTPCREL(%rip), %rax
 6826      000000
 6827 0de8 0F8448FF 		je	.L361
 6827      FFFF
 6828 0dee 4C89E7   		movq	%r12, %rdi
 6829 0df1 FFD0     		call	*%rax
 6830              	.LEHE15:
 6831              	.LVL660:
 6832 0df3 0FBEF0   		movsbl	%al, %esi
 6833 0df6 E93BFFFF 		jmp	.L361
 6833      FF
 6834              	.LVL661:
 6835              	.L290:
 6836              	.LBE4929:
 6837              	.LBE4928:
 6838              	.LBE4930:
 6839              	.LBE4931:
 6840              	.LBE4933:
 6841              	.LBE4937:
 6842              	.LBE4939:
 6843              	.LBE4941:
 6844              	.LBE4946:
 6845              	.LBB4947:
 6846              	.LBB4554:
 6847              	.LBB4548:
 6848              	.LBB4542:
  66:./benchs/timing.hpp ****         double avg = std::accumulate(_ts.begin(), _ts.end(), 0.0) / static_cast<double>(_ts.size())
 6849              		.loc 2 66 0
 6850 0dfb 660FEFF6 		pxor	%xmm6, %xmm6
 6851 0dff F20F5EF1 		divsd	%xmm1, %xmm6
 6852 0e03 F20F1174 		movsd	%xmm6, 24(%rsp)
 6852      2418
 6853              	.LVL662:
 6854 0e09 E9A3F5FF 		jmp	.L295
 6854      FF
 6855              	.LVL663:
 6856              	.L395:
 6857 0e0e 4889C3   		movq	%rax, %rbx
 6858              	.L373:
 6859              	.LVL664:
 6860              	.LBE4542:
 6861              	.LBE4548:
 6862              	.LBE4554:
 6863              	.LBE4947:
 6864              	.LBE4972:
 6865              	.LBE4982:
 6866              	.LBB4983:
 6867              	.LBB4984:
GAS LISTING /tmp/ccJUMvuF.s 			page 420


 6868              		.loc 23 235 0
 6869 0e11 4885ED   		testq	%rbp, %rbp
 6870 0e14 7408     		je	.L374
 6871              	.LVL665:
 6872              	.LBB4985:
 6873              	.LBB4986:
  45:./benchs/common.hpp ****         void operator()(heatmap_stamp_t* p) { heatmap_stamp_free(p); }
 6874              		.loc 5 45 0
 6875 0e16 4889EF   		movq	%rbp, %rdi
 6876 0e19 E8000000 		call	heatmap_stamp_free@PLT
 6876      00
 6877              	.LVL666:
 6878              	.L374:
 6879 0e1e 4889DF   		movq	%rbx, %rdi
 6880              	.LEHB16:
 6881 0e21 E8000000 		call	_Unwind_Resume@PLT
 6881      00
 6882              	.LEHE16:
 6883              	.LVL667:
 6884              	.L523:
 6885              	.LEHB17:
 6886              	.LBE4986:
 6887              	.LBE4985:
 6888              	.LBE4984:
 6889              	.LBE4983:
 6890              	.LBB4987:
 6891              	.LBB4973:
 6892              	.LBB4948:
 6893              	.LBB4942:
 6894              	.LBB4940:
 6895              	.LBB4938:
 6896              	.LBB4934:
 6897              	.LBB4932:
 6898              	.LBB4925:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 6899              		.loc 14 49 0
 6900 0e26 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 6900      00
 6901              	.LEHE17:
 6902              	.LVL668:
 6903              	.L400:
 6904              	.LBE4925:
 6905              	.LBE4932:
 6906              	.LBE4934:
 6907              	.LBE4938:
 6908              	.LBE4940:
 6909              	.LBE4942:
 6910              	.LBE4948:
 6911              	.LBB4949:
  69:benchs/rendering.cpp ****         }
 6912              		.loc 22 69 0
 6913 0e2b 488DBC24 		leaq	160(%rsp), %rdi
 6913      A0000000 
 6914              	.LVL669:
 6915 0e33 4989C4   		movq	%rax, %r12
 6916 0e36 E8000000 		call	_ZN11RepeatTimerD1Ev@PLT
 6916      00
GAS LISTING /tmp/ccJUMvuF.s 			page 421


 6917              	.LVL670:
 6918              	.L367:
 6919              	.LBE4949:
 6920              	.LBB4950:
 6921              	.LBB4951:
 6922              	.LBB4952:
 6923              	.LBB4953:
 6924              	.LBB4954:
 6925              	.LBB4955:
 6926              	.LBB4956:
 6927              		.loc 7 110 0
 6928 0e3b 4C89EF   		movq	%r13, %rdi
 6929 0e3e E8000000 		call	_ZdlPv@PLT
 6929      00
 6930              	.LVL671:
 6931              	.L369:
 6932              	.LBE4956:
 6933              	.LBE4955:
 6934              	.LBE4954:
 6935              	.LBE4953:
 6936              	.LBE4952:
 6937              	.LBE4951:
 6938              	.LBE4950:
 6939              	.LBB4957:
 6940              	.LBB4958:
 6941              	.LBB4959:
 6942              	.LBB4960:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 6943              		.loc 6 161 0
 6944 0e43 488B7C24 		movq	80(%rsp), %rdi
 6944      50
 6945              	.LVL672:
 6946              	.LBB4961:
 6947              	.LBB4962:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 6948              		.loc 6 177 0
 6949 0e48 4885FF   		testq	%rdi, %rdi
 6950 0e4b 7405     		je	.L371
 6951              	.LVL673:
 6952              	.LBB4963:
 6953              	.LBB4964:
 6954              	.LBB4965:
 6955              		.loc 7 110 0
 6956 0e4d E8000000 		call	_ZdlPv@PLT
 6956      00
 6957              	.LVL674:
 6958              	.L371:
 6959              	.LBE4965:
 6960              	.LBE4964:
 6961              	.LBE4963:
 6962              	.LBE4962:
 6963              	.LBE4961:
 6964              	.LBE4960:
 6965              	.LBE4959:
 6966              	.LBE4958:
 6967              	.LBE4957:
 6968              	.LBB4966:
GAS LISTING /tmp/ccJUMvuF.s 			page 422


 6969              	.LBB4967:
 6970              		.loc 23 235 0
 6971 0e52 4885DB   		testq	%rbx, %rbx
 6972 0e55 7408     		je	.L372
 6973              	.LVL675:
 6974              	.LBB4968:
 6975              	.LBB4969:
  41:./benchs/common.hpp ****         void operator()(heatmap_t* p) { heatmap_free(p); }
 6976              		.loc 5 41 0
 6977 0e57 4889DF   		movq	%rbx, %rdi
 6978 0e5a E8000000 		call	heatmap_free@PLT
 6978      00
 6979              	.LVL676:
 6980              	.L372:
 6981 0e5f 4C89E3   		movq	%r12, %rbx
 6982 0e62 EBAD     		jmp	.L373
 6983              	.LVL677:
 6984              	.L514:
 6985              	.LEHB18:
 6986              	.LBE4969:
 6987              	.LBE4968:
 6988              	.LBE4967:
 6989              	.LBE4966:
 6990              	.LBB4970:
 6991              	.LBB4586:
 6992              	.LBB4584:
 6993              	.LBB4582:
 6994              	.LBB4578:
 6995              	.LBB4576:
 6996              	.LBB4569:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h **** 	__throw_bad_cast();
 6997              		.loc 14 49 0
 6998 0e64 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 6998      00
 6999              	.LEHE18:
 7000              	.LVL678:
 7001              	.L352:
 7002              	.LBE4569:
 7003              	.LBE4576:
 7004              	.LBE4578:
 7005              	.LBE4582:
 7006              	.LBE4584:
 7007              	.LBE4586:
 7008              	.LBE4970:
 7009              	.LBB4971:
 7010              	.LBB4555:
 7011              	.LBB4549:
 7012              	.LBB4543:
 7013              	.LBB4529:
 7014              	.LBB4509:
 7015              	.LBB4507:
 7016              	.LBB4505:
 7017              	.LBB4501:
 7018              	.LBB4499:
 7019              	.LBB4492:
 7020 0e69 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 7020      00
GAS LISTING /tmp/ccJUMvuF.s 			page 423


 7021              	.LVL679:
 7022              	.L399:
 7023              	.LBE4492:
 7024              	.LBE4499:
 7025              	.LBE4501:
 7026              	.LBE4505:
 7027              	.LBE4507:
 7028              	.LBE4509:
 7029              	.LBE4529:
 7030              	.LBE4543:
 7031              	.LBE4549:
 7032              	.LBE4555:
  61:benchs/rendering.cpp ****         }
 7033              		.loc 22 61 0
 7034 0e6e 488D7C24 		leaq	112(%rsp), %rdi
 7034      70
 7035              	.LVL680:
 7036 0e73 4989C4   		movq	%rax, %r12
 7037 0e76 E8000000 		call	_ZN11RepeatTimerD1Ev@PLT
 7037      00
 7038              	.LVL681:
 7039 0e7b EBBE     		jmp	.L367
 7040              	.LVL682:
 7041              	.L398:
 7042 0e7d 4989C4   		movq	%rax, %r12
 7043 0e80 EBB9     		jmp	.L367
 7044              	.LVL683:
 7045              	.L397:
 7046 0e82 4989C4   		movq	%rax, %r12
 7047 0e85 EBBC     		jmp	.L369
 7048              	.LVL684:
 7049              	.L396:
 7050 0e87 4989C4   		movq	%rax, %r12
 7051 0e8a EBC6     		jmp	.L371
 7052              	.LBE4971:
 7053              	.LBE4973:
 7054              	.LBE4987:
 7055              	.LBE4989:
 7056              		.cfi_endproc
 7057              	.LFE6051:
 7058              		.section	.gcc_except_table
 7059              	.LLSDA6051:
 7060 0024 FF       		.byte	0xff
 7061 0025 FF       		.byte	0xff
 7062 0026 01       		.byte	0x1
 7063 0027 52       		.uleb128 .LLSDACSE6051-.LLSDACSB6051
 7064              	.LLSDACSB6051:
 7065 0028 16       		.uleb128 .LEHB5-.LFB6051
 7066 0029 05       		.uleb128 .LEHE5-.LEHB5
 7067 002a 00       		.uleb128 0
 7068 002b 00       		.uleb128 0
 7069 002c 34       		.uleb128 .LEHB6-.LFB6051
 7070 002d 3C       		.uleb128 .LEHE6-.LEHB6
 7071 002e 8E1C     		.uleb128 .L395-.LFB6051
 7072 0030 00       		.uleb128 0
 7073 0031 7B       		.uleb128 .LEHB7-.LFB6051
 7074 0032 05       		.uleb128 .LEHE7-.LEHB7
GAS LISTING /tmp/ccJUMvuF.s 			page 424


 7075 0033 871D     		.uleb128 .L396-.LFB6051
 7076 0035 00       		.uleb128 0
 7077 0036 9C01     		.uleb128 .LEHB8-.LFB6051
 7078 0038 2A       		.uleb128 .LEHE8-.LEHB8
 7079 0039 821D     		.uleb128 .L397-.LFB6051
 7080 003b 00       		.uleb128 0
 7081 003c E501     		.uleb128 .LEHB9-.LFB6051
 7082 003e A001     		.uleb128 .LEHE9-.LEHB9
 7083 0040 FD1C     		.uleb128 .L398-.LFB6051
 7084 0042 00       		.uleb128 0
 7085 0043 E103     		.uleb128 .LEHB10-.LFB6051
 7086 0045 30       		.uleb128 .LEHE10-.LEHB10
 7087 0046 EE1C     		.uleb128 .L399-.LFB6051
 7088 0048 00       		.uleb128 0
 7089 0049 9D0A     		.uleb128 .LEHB11-.LFB6051
 7090 004b F901     		.uleb128 .LEHE11-.LEHB11
 7091 004d FD1C     		.uleb128 .L398-.LFB6051
 7092 004f 00       		.uleb128 0
 7093 0050 F90C     		.uleb128 .LEHB12-.LFB6051
 7094 0052 33       		.uleb128 .LEHE12-.LEHB12
 7095 0053 AB1C     		.uleb128 .L400-.LFB6051
 7096 0055 00       		.uleb128 0
 7097 0056 EE13     		.uleb128 .LEHB13-.LFB6051
 7098 0058 1C       		.uleb128 .LEHE13-.LEHB13
 7099 0059 8E1C     		.uleb128 .L395-.LFB6051
 7100 005b 00       		.uleb128 0
 7101 005c E218     		.uleb128 .LEHB14-.LFB6051
 7102 005e 24       		.uleb128 .LEHE14-.LEHB14
 7103 005f FD1C     		.uleb128 .L398-.LFB6051
 7104 0061 00       		.uleb128 0
 7105 0062 871A     		.uleb128 .LEHB15-.LFB6051
 7106 0064 EC01     		.uleb128 .LEHE15-.LEHB15
 7107 0066 FD1C     		.uleb128 .L398-.LFB6051
 7108 0068 00       		.uleb128 0
 7109 0069 A11C     		.uleb128 .LEHB16-.LFB6051
 7110 006b 05       		.uleb128 .LEHE16-.LEHB16
 7111 006c 00       		.uleb128 0
 7112 006d 00       		.uleb128 0
 7113 006e A61C     		.uleb128 .LEHB17-.LFB6051
 7114 0070 05       		.uleb128 .LEHE17-.LEHB17
 7115 0071 FD1C     		.uleb128 .L398-.LFB6051
 7116 0073 00       		.uleb128 0
 7117 0074 E41C     		.uleb128 .LEHB18-.LFB6051
 7118 0076 05       		.uleb128 .LEHE18-.LEHB18
 7119 0077 FD1C     		.uleb128 .L398-.LFB6051
 7120 0079 00       		.uleb128 0
 7121              	.LLSDACSE6051:
 7122              		.section	.text.startup
 7123              		.size	main, .-main
 7124              		.section	.text.unlikely
 7125              	.LCOLDE31:
 7126              		.section	.text.startup
 7127              	.LHOTE31:
 7128              		.section	.text.unlikely
 7129              	.LCOLDB32:
 7130              		.section	.text.startup
 7131              	.LHOTB32:
GAS LISTING /tmp/ccJUMvuF.s 			page 425


 7132 0e8c 0F1F4000 		.p2align 4,,15
 7133              		.type	_GLOBAL__sub_I_rendering.cpp, @function
 7134              	_GLOBAL__sub_I_rendering.cpp:
 7135              	.LFB6649:
 7136              		.loc 22 78 0
 7137              		.cfi_startproc
 7138              	.LVL685:
 7139              	.LBB4990:
 7140              	.LBB4991:
 7141              		.file 24 "/opt/gcc/4.9.2/include/c++/4.9.2/iostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Standard iostream objects -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** /** @file include/iostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  30:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifndef _GLIBCXX_IOSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #define _GLIBCXX_IOSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <bits/c++config.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <ostream>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <istream>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  @name Standard Stream Objects
GAS LISTING /tmp/ccJUMvuF.s 			page 426


  47:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  49:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  objects</em>.  For other declarations, see
  50:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  51:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  52:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  53:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  They are required by default to cooperate with the global C
  54:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  library's @c FILE streams, and to be available during program
  55:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  startup and termination. For more information, see the section of the
  56:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  manual linked to above.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@{
  59:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern istream cin;		/// Linked to standard input
  60:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cout;		/// Linked to standard output
  61:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  63:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  65:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wistream wcin;		/// Linked to standard input
  66:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcout;	/// Linked to standard output
  67:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  69:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #endif
  70:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@}
  71:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   static ios_base::Init __ioinit;
 7142              		.loc 24 74 0
 7143 0e90 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 7143      000000
 7144              	.LBE4991:
 7145              	.LBE4990:
 7146              		.loc 22 78 0
 7147 0e97 4883EC08 		subq	$8, %rsp
 7148              		.cfi_def_cfa_offset 16
 7149              	.LBB4994:
 7150              	.LBB4992:
 7151              		.loc 24 74 0
 7152 0e9b E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 7152      00
 7153              	.LVL686:
 7154 0ea0 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 7154      000000
 7155 0ea7 488D1500 		leaq	__dso_handle(%rip), %rdx
 7155      000000
 7156 0eae 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 7156      000000
 7157              	.LBE4992:
 7158              	.LBE4994:
 7159              		.loc 22 78 0
 7160 0eb5 4883C408 		addq	$8, %rsp
 7161              		.cfi_def_cfa_offset 8
 7162              	.LBB4995:
 7163              	.LBB4993:
 7164              		.loc 24 74 0
 7165 0eb9 E9000000 		jmp	__cxa_atexit@PLT
 7165      00
GAS LISTING /tmp/ccJUMvuF.s 			page 427


 7166              	.LVL687:
 7167              	.LBE4993:
 7168              	.LBE4995:
 7169              		.cfi_endproc
 7170              	.LFE6649:
 7171              		.size	_GLOBAL__sub_I_rendering.cpp, .-_GLOBAL__sub_I_rendering.cpp
 7172              		.section	.text.unlikely
 7173              	.LCOLDE32:
 7174              		.section	.text.startup
 7175              	.LHOTE32:
 7176              		.section	.ctors,"aw",@progbits
 7177              		.align 8
 7178 0000 00000000 		.quad	_GLOBAL__sub_I_rendering.cpp
 7178      00000000 
 7179              		.local	_ZStL8__ioinit
 7180              		.comm	_ZStL8__ioinit,1,1
 7181              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 7182              		.section	.rodata.cst8,"aM",@progbits,8
 7183              		.align 8
 7184              	.LC8:
 7185 0000 00000000 		.long	0
 7186 0004 00408F40 		.long	1083129856
 7187              		.section	.rodata.cst4,"aM",@progbits,4
 7188              		.align 4
 7189              	.LC29:
 7190 0000 0000003F 		.long	1056964608
 7191              		.text
 7192              	.Letext0:
 7193              		.section	.text.unlikely._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comd
 7194              	.Letext_cold0:
 7195              		.file 25 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/exception_ptr.h"
 7196              		.file 26 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/c++config.h"
 7197              		.file 27 "/opt/gcc/4.9.2/include/c++/4.9.2/type_traits"
 7198              		.file 28 "/opt/gcc/4.9.2/include/c++/4.9.2/new"
 7199              		.file 29 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h"
 7200              		.file 30 "/opt/gcc/4.9.2/include/c++/4.9.2/cwchar"
 7201              		.file 31 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h"
 7202              		.file 32 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdint"
 7203              		.file 33 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/allocator.h"
 7204              		.file 34 "/opt/gcc/4.9.2/include/c++/4.9.2/clocale"
 7205              		.file 35 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib"
 7206              		.file 36 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdio"
 7207              		.file 37 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.tcc"
 7208              		.file 38 "/opt/gcc/4.9.2/include/c++/4.9.2/initializer_list"
 7209              		.file 39 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stringfwd.h"
 7210              		.file 40 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/uses_allocator.h"
 7211              		.file 41 "/opt/gcc/4.9.2/include/c++/4.9.2/cwctype"
 7212              		.file 42 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream.tcc"
 7213              		.file 43 "/opt/gcc/4.9.2/include/c++/4.9.2/cmath"
 7214              		.file 44 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h"
 7215              		.file 45 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h"
 7216              		.file 46 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ptr_traits.h"
 7217              		.file 47 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/alloc_traits.h"
 7218              		.file 48 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/vector.tcc"
 7219              		.file 49 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator_base_types.h"
 7220              		.file 50 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/shared_ptr_base.h"
 7221              		.file 51 "/opt/gcc/4.9.2/include/c++/4.9.2/utility"
GAS LISTING /tmp/ccJUMvuF.s 			page 428


 7222              		.file 52 "/opt/gcc/4.9.2/include/c++/4.9.2/iosfwd"
 7223              		.file 53 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream_insert.h"
 7224              		.file 54 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/postypes.h"
 7225              		.file 55 "/opt/gcc/4.9.2/include/c++/4.9.2/exception"
 7226              		.file 56 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/functexcept.h"
 7227              		.file 57 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/numeric_traits.h"
 7228              		.file 58 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/alloc_traits.h"
 7229              		.file 59 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/concurrence.h"
 7230              		.file 60 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/type_traits.h"
 7231              		.file 61 "/opt/gcc/4.9.2/include/c++/4.9.2/debug/debug.h"
 7232              		.file 62 "/usr/include/stdio.h"
 7233              		.file 63 "/usr/include/libio.h"
 7234              		.file 64 "<built-in>"
 7235              		.file 65 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/stddef.h"
 7236              		.file 66 "/usr/include/wchar.h"
 7237              		.file 67 "/usr/include/time.h"
 7238              		.file 68 "/usr/include/stdint.h"
 7239              		.file 69 "/usr/include/locale.h"
 7240              		.file 70 "/usr/include/bits/types.h"
 7241              		.file 71 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/atomic_word.h"
 7242              		.file 72 "/usr/include/stdlib.h"
 7243              		.file 73 "/usr/include/_G_config.h"
 7244              		.file 74 "/usr/include/bits/stdio.h"
 7245              		.file 75 "/usr/include/wctype.h"
 7246              		.file 76 "/usr/include/bits/mathdef.h"
 7247              		.file 77 "./heatmap.h"
 7248              		.file 78 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/gthr-default.h"
 7249              		.file 79 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/omp.h"
 7250              		.section	.debug_info,"",@progbits
 7251              	.Ldebug_info0:
 7252 0000 376D0100 		.long	0x16d37
 7253 0004 0400     		.value	0x4
 7254 0006 00000000 		.long	.Ldebug_abbrev0
 7255 000a 08       		.byte	0x8
 7256 000b 01       		.uleb128 0x1
 7257 000c 00000000 		.long	.LASF1787
 7258 0010 04       		.byte	0x4
 7259 0011 00000000 		.long	.LASF1788
 7260 0015 00000000 		.long	.LASF1789
 7261 0019 00000000 		.long	.Ldebug_ranges0+0x2cc0
 7262 001d 00000000 		.quad	0
 7262      00000000 
 7263 0025 00000000 		.long	.Ldebug_line0
 7264 0029 02       		.uleb128 0x2
 7265 002a 08       		.byte	0x8
 7266 002b 04       		.byte	0x4
 7267 002c 00000000 		.long	.LASF0
 7268 0030 02       		.uleb128 0x2
 7269 0031 04       		.byte	0x4
 7270 0032 04       		.byte	0x4
 7271 0033 00000000 		.long	.LASF1
 7272 0037 03       		.uleb128 0x3
 7273 0038 73746400 		.string	"std"
 7274 003c 40       		.byte	0x40
 7275 003d 00       		.byte	0
 7276 003e 01930000 		.long	0x9301
 7277 0042 04       		.uleb128 0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 429


 7278 0043 00000000 		.long	.LASF2
 7279 0047 19       		.byte	0x19
 7280 0048 36       		.byte	0x36
 7281 0049 F4010000 		.long	0x1f4
 7282 004d 05       		.uleb128 0x5
 7283 004e 00000000 		.long	.LASF3
 7284 0052 08       		.byte	0x8
 7285 0053 19       		.byte	0x19
 7286 0054 4B       		.byte	0x4b
 7287 0055 EE010000 		.long	0x1ee
 7288 0059 06       		.uleb128 0x6
 7289 005a 00000000 		.long	.LASF64
 7290 005e 19       		.byte	0x19
 7291 005f 4D       		.byte	0x4d
 7292 0060 01930000 		.long	0x9301
 7293 0064 00       		.byte	0
 7294 0065 07       		.uleb128 0x7
 7295 0066 00000000 		.long	.LASF3
 7296 006a 19       		.byte	0x19
 7297 006b 4F       		.byte	0x4f
 7298 006c 74000000 		.long	0x74
 7299 0070 7F000000 		.long	0x7f
 7300 0074 08       		.uleb128 0x8
 7301 0075 03930000 		.long	0x9303
 7302 0079 09       		.uleb128 0x9
 7303 007a 01930000 		.long	0x9301
 7304 007e 00       		.byte	0
 7305 007f 0A       		.uleb128 0xa
 7306 0080 00000000 		.long	.LASF4
 7307 0084 19       		.byte	0x19
 7308 0085 51       		.byte	0x51
 7309 0086 00000000 		.long	.LASF6
 7310 008a 92000000 		.long	0x92
 7311 008e 98000000 		.long	0x98
 7312 0092 08       		.uleb128 0x8
 7313 0093 03930000 		.long	0x9303
 7314 0097 00       		.byte	0
 7315 0098 0A       		.uleb128 0xa
 7316 0099 00000000 		.long	.LASF5
 7317 009d 19       		.byte	0x19
 7318 009e 52       		.byte	0x52
 7319 009f 00000000 		.long	.LASF7
 7320 00a3 AB000000 		.long	0xab
 7321 00a7 B1000000 		.long	0xb1
 7322 00ab 08       		.uleb128 0x8
 7323 00ac 03930000 		.long	0x9303
 7324 00b0 00       		.byte	0
 7325 00b1 0B       		.uleb128 0xb
 7326 00b2 00000000 		.long	.LASF12
 7327 00b6 19       		.byte	0x19
 7328 00b7 54       		.byte	0x54
 7329 00b8 00000000 		.long	.LASF14
 7330 00bc 01930000 		.long	0x9301
 7331 00c0 C8000000 		.long	0xc8
 7332 00c4 CE000000 		.long	0xce
 7333 00c8 08       		.uleb128 0x8
 7334 00c9 09930000 		.long	0x9309
GAS LISTING /tmp/ccJUMvuF.s 			page 430


 7335 00cd 00       		.byte	0
 7336 00ce 0C       		.uleb128 0xc
 7337 00cf 00000000 		.long	.LASF3
 7338 00d3 19       		.byte	0x19
 7339 00d4 5A       		.byte	0x5a
 7340 00d5 01       		.byte	0x1
 7341 00d6 DE000000 		.long	0xde
 7342 00da E4000000 		.long	0xe4
 7343 00de 08       		.uleb128 0x8
 7344 00df 03930000 		.long	0x9303
 7345 00e3 00       		.byte	0
 7346 00e4 0C       		.uleb128 0xc
 7347 00e5 00000000 		.long	.LASF3
 7348 00e9 19       		.byte	0x19
 7349 00ea 5C       		.byte	0x5c
 7350 00eb 01       		.byte	0x1
 7351 00ec F4000000 		.long	0xf4
 7352 00f0 FF000000 		.long	0xff
 7353 00f4 08       		.uleb128 0x8
 7354 00f5 03930000 		.long	0x9303
 7355 00f9 09       		.uleb128 0x9
 7356 00fa 0F930000 		.long	0x930f
 7357 00fe 00       		.byte	0
 7358 00ff 0C       		.uleb128 0xc
 7359 0100 00000000 		.long	.LASF3
 7360 0104 19       		.byte	0x19
 7361 0105 5F       		.byte	0x5f
 7362 0106 01       		.byte	0x1
 7363 0107 0F010000 		.long	0x10f
 7364 010b 1A010000 		.long	0x11a
 7365 010f 08       		.uleb128 0x8
 7366 0110 03930000 		.long	0x9303
 7367 0114 09       		.uleb128 0x9
 7368 0115 FB010000 		.long	0x1fb
 7369 0119 00       		.byte	0
 7370 011a 0C       		.uleb128 0xc
 7371 011b 00000000 		.long	.LASF3
 7372 011f 19       		.byte	0x19
 7373 0120 63       		.byte	0x63
 7374 0121 01       		.byte	0x1
 7375 0122 2A010000 		.long	0x12a
 7376 0126 35010000 		.long	0x135
 7377 012a 08       		.uleb128 0x8
 7378 012b 03930000 		.long	0x9303
 7379 012f 09       		.uleb128 0x9
 7380 0130 1B930000 		.long	0x931b
 7381 0134 00       		.byte	0
 7382 0135 0D       		.uleb128 0xd
 7383 0136 00000000 		.long	.LASF8
 7384 013a 19       		.byte	0x19
 7385 013b 70       		.byte	0x70
 7386 013c 00000000 		.long	.LASF9
 7387 0140 22930000 		.long	0x9322
 7388 0144 01       		.byte	0x1
 7389 0145 4D010000 		.long	0x14d
 7390 0149 58010000 		.long	0x158
 7391 014d 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 431


 7392 014e 03930000 		.long	0x9303
 7393 0152 09       		.uleb128 0x9
 7394 0153 0F930000 		.long	0x930f
 7395 0157 00       		.byte	0
 7396 0158 0D       		.uleb128 0xd
 7397 0159 00000000 		.long	.LASF8
 7398 015d 19       		.byte	0x19
 7399 015e 74       		.byte	0x74
 7400 015f 00000000 		.long	.LASF10
 7401 0163 22930000 		.long	0x9322
 7402 0167 01       		.byte	0x1
 7403 0168 70010000 		.long	0x170
 7404 016c 7B010000 		.long	0x17b
 7405 0170 08       		.uleb128 0x8
 7406 0171 03930000 		.long	0x9303
 7407 0175 09       		.uleb128 0x9
 7408 0176 1B930000 		.long	0x931b
 7409 017a 00       		.byte	0
 7410 017b 0C       		.uleb128 0xc
 7411 017c 00000000 		.long	.LASF11
 7412 0180 19       		.byte	0x19
 7413 0181 7B       		.byte	0x7b
 7414 0182 01       		.byte	0x1
 7415 0183 8B010000 		.long	0x18b
 7416 0187 96010000 		.long	0x196
 7417 018b 08       		.uleb128 0x8
 7418 018c 03930000 		.long	0x9303
 7419 0190 08       		.uleb128 0x8
 7420 0191 28930000 		.long	0x9328
 7421 0195 00       		.byte	0
 7422 0196 0E       		.uleb128 0xe
 7423 0197 00000000 		.long	.LASF13
 7424 019b 19       		.byte	0x19
 7425 019c 7E       		.byte	0x7e
 7426 019d 00000000 		.long	.LASF15
 7427 01a1 01       		.byte	0x1
 7428 01a2 AA010000 		.long	0x1aa
 7429 01a6 B5010000 		.long	0x1b5
 7430 01aa 08       		.uleb128 0x8
 7431 01ab 03930000 		.long	0x9303
 7432 01af 09       		.uleb128 0x9
 7433 01b0 22930000 		.long	0x9322
 7434 01b4 00       		.byte	0
 7435 01b5 0F       		.uleb128 0xf
 7436 01b6 00000000 		.long	.LASF853
 7437 01ba 19       		.byte	0x19
 7438 01bb 8A       		.byte	0x8a
 7439 01bc 00000000 		.long	.LASF1737
 7440 01c0 30930000 		.long	0x9330
 7441 01c4 01       		.byte	0x1
 7442 01c5 CD010000 		.long	0x1cd
 7443 01c9 D3010000 		.long	0x1d3
 7444 01cd 08       		.uleb128 0x8
 7445 01ce 09930000 		.long	0x9309
 7446 01d2 00       		.byte	0
 7447 01d3 10       		.uleb128 0x10
 7448 01d4 00000000 		.long	.LASF16
GAS LISTING /tmp/ccJUMvuF.s 			page 432


 7449 01d8 19       		.byte	0x19
 7450 01d9 93       		.byte	0x93
 7451 01da 00000000 		.long	.LASF17
 7452 01de 37930000 		.long	0x9337
 7453 01e2 01       		.byte	0x1
 7454 01e3 E7010000 		.long	0x1e7
 7455 01e7 08       		.uleb128 0x8
 7456 01e8 09930000 		.long	0x9309
 7457 01ec 00       		.byte	0
 7458 01ed 00       		.byte	0
 7459 01ee 11       		.uleb128 0x11
 7460 01ef 4D000000 		.long	0x4d
 7461 01f3 00       		.byte	0
 7462 01f4 12       		.uleb128 0x12
 7463 01f5 19       		.byte	0x19
 7464 01f6 3A       		.byte	0x3a
 7465 01f7 4D000000 		.long	0x4d
 7466 01fb 13       		.uleb128 0x13
 7467 01fc 00000000 		.long	.LASF18
 7468 0200 1A       		.byte	0x1a
 7469 0201 C0       		.byte	0xc0
 7470 0202 15930000 		.long	0x9315
 7471 0206 14       		.uleb128 0x14
 7472 0207 00000000 		.long	.LASF304
 7473 020b 11       		.uleb128 0x11
 7474 020c 06020000 		.long	0x206
 7475 0210 15       		.uleb128 0x15
 7476 0211 00000000 		.long	.LASF27
 7477 0215 01       		.byte	0x1
 7478 0216 1C       		.byte	0x1c
 7479 0217 63       		.byte	0x63
 7480 0218 16       		.uleb128 0x16
 7481 0219 00000000 		.long	.LASF22
 7482 021d 01       		.byte	0x1
 7483 021e 1B       		.byte	0x1b
 7484 021f 45       		.byte	0x45
 7485 0220 6B020000 		.long	0x26b
 7486 0224 17       		.uleb128 0x17
 7487 0225 00000000 		.long	.LASF24
 7488 0229 1B       		.byte	0x1b
 7489 022a 47       		.byte	0x47
 7490 022b 3D930000 		.long	0x933d
 7491 022f 13       		.uleb128 0x13
 7492 0230 00000000 		.long	.LASF19
 7493 0234 1B       		.byte	0x1b
 7494 0235 48       		.byte	0x48
 7495 0236 30930000 		.long	0x9330
 7496 023a 0B       		.uleb128 0xb
 7497 023b 00000000 		.long	.LASF20
 7498 023f 1B       		.byte	0x1b
 7499 0240 4A       		.byte	0x4a
 7500 0241 00000000 		.long	.LASF21
 7501 0245 2F020000 		.long	0x22f
 7502 0249 51020000 		.long	0x251
 7503 024d 57020000 		.long	0x257
 7504 0251 08       		.uleb128 0x8
 7505 0252 42930000 		.long	0x9342
GAS LISTING /tmp/ccJUMvuF.s 			page 433


 7506 0256 00       		.byte	0
 7507 0257 18       		.uleb128 0x18
 7508 0258 5F547000 		.string	"_Tp"
 7509 025c 30930000 		.long	0x9330
 7510 0260 19       		.uleb128 0x19
 7511 0261 5F5F7600 		.string	"__v"
 7512 0265 30930000 		.long	0x9330
 7513 0269 00       		.byte	0
 7514 026a 00       		.byte	0
 7515 026b 11       		.uleb128 0x11
 7516 026c 18020000 		.long	0x218
 7517 0270 16       		.uleb128 0x16
 7518 0271 00000000 		.long	.LASF23
 7519 0275 01       		.byte	0x1
 7520 0276 1B       		.byte	0x1b
 7521 0277 45       		.byte	0x45
 7522 0278 C3020000 		.long	0x2c3
 7523 027c 17       		.uleb128 0x17
 7524 027d 00000000 		.long	.LASF24
 7525 0281 1B       		.byte	0x1b
 7526 0282 47       		.byte	0x47
 7527 0283 3D930000 		.long	0x933d
 7528 0287 13       		.uleb128 0x13
 7529 0288 00000000 		.long	.LASF19
 7530 028c 1B       		.byte	0x1b
 7531 028d 48       		.byte	0x48
 7532 028e 30930000 		.long	0x9330
 7533 0292 0B       		.uleb128 0xb
 7534 0293 00000000 		.long	.LASF25
 7535 0297 1B       		.byte	0x1b
 7536 0298 4A       		.byte	0x4a
 7537 0299 00000000 		.long	.LASF26
 7538 029d 87020000 		.long	0x287
 7539 02a1 A9020000 		.long	0x2a9
 7540 02a5 AF020000 		.long	0x2af
 7541 02a9 08       		.uleb128 0x8
 7542 02aa 48930000 		.long	0x9348
 7543 02ae 00       		.byte	0
 7544 02af 18       		.uleb128 0x18
 7545 02b0 5F547000 		.string	"_Tp"
 7546 02b4 30930000 		.long	0x9330
 7547 02b8 19       		.uleb128 0x19
 7548 02b9 5F5F7600 		.string	"__v"
 7549 02bd 30930000 		.long	0x9330
 7550 02c1 01       		.byte	0x1
 7551 02c2 00       		.byte	0
 7552 02c3 11       		.uleb128 0x11
 7553 02c4 70020000 		.long	0x270
 7554 02c8 15       		.uleb128 0x15
 7555 02c9 00000000 		.long	.LASF28
 7556 02cd 01       		.byte	0x1
 7557 02ce 1D       		.byte	0x1d
 7558 02cf 4C       		.byte	0x4c
 7559 02d0 1A       		.uleb128 0x1a
 7560 02d1 00000000 		.long	.LASF1790
 7561 02d5 3D       		.byte	0x3d
 7562 02d6 30       		.byte	0x30
GAS LISTING /tmp/ccJUMvuF.s 			page 434


 7563 02d7 12       		.uleb128 0x12
 7564 02d8 1E       		.byte	0x1e
 7565 02d9 40       		.byte	0x40
 7566 02da BEAE0000 		.long	0xaebe
 7567 02de 12       		.uleb128 0x12
 7568 02df 1E       		.byte	0x1e
 7569 02e0 8B       		.byte	0x8b
 7570 02e1 46AE0000 		.long	0xae46
 7571 02e5 12       		.uleb128 0x12
 7572 02e6 1E       		.byte	0x1e
 7573 02e7 8D       		.byte	0x8d
 7574 02e8 D9AE0000 		.long	0xaed9
 7575 02ec 12       		.uleb128 0x12
 7576 02ed 1E       		.byte	0x1e
 7577 02ee 8E       		.byte	0x8e
 7578 02ef EFAE0000 		.long	0xaeef
 7579 02f3 12       		.uleb128 0x12
 7580 02f4 1E       		.byte	0x1e
 7581 02f5 8F       		.byte	0x8f
 7582 02f6 0BAF0000 		.long	0xaf0b
 7583 02fa 12       		.uleb128 0x12
 7584 02fb 1E       		.byte	0x1e
 7585 02fc 90       		.byte	0x90
 7586 02fd 38AF0000 		.long	0xaf38
 7587 0301 12       		.uleb128 0x12
 7588 0302 1E       		.byte	0x1e
 7589 0303 91       		.byte	0x91
 7590 0304 53AF0000 		.long	0xaf53
 7591 0308 12       		.uleb128 0x12
 7592 0309 1E       		.byte	0x1e
 7593 030a 92       		.byte	0x92
 7594 030b 79AF0000 		.long	0xaf79
 7595 030f 12       		.uleb128 0x12
 7596 0310 1E       		.byte	0x1e
 7597 0311 93       		.byte	0x93
 7598 0312 94AF0000 		.long	0xaf94
 7599 0316 12       		.uleb128 0x12
 7600 0317 1E       		.byte	0x1e
 7601 0318 94       		.byte	0x94
 7602 0319 B0AF0000 		.long	0xafb0
 7603 031d 12       		.uleb128 0x12
 7604 031e 1E       		.byte	0x1e
 7605 031f 95       		.byte	0x95
 7606 0320 CCAF0000 		.long	0xafcc
 7607 0324 12       		.uleb128 0x12
 7608 0325 1E       		.byte	0x1e
 7609 0326 96       		.byte	0x96
 7610 0327 E2AF0000 		.long	0xafe2
 7611 032b 12       		.uleb128 0x12
 7612 032c 1E       		.byte	0x1e
 7613 032d 97       		.byte	0x97
 7614 032e EFAF0000 		.long	0xafef
 7615 0332 12       		.uleb128 0x12
 7616 0333 1E       		.byte	0x1e
 7617 0334 98       		.byte	0x98
 7618 0335 15B00000 		.long	0xb015
 7619 0339 12       		.uleb128 0x12
GAS LISTING /tmp/ccJUMvuF.s 			page 435


 7620 033a 1E       		.byte	0x1e
 7621 033b 99       		.byte	0x99
 7622 033c 3AB00000 		.long	0xb03a
 7623 0340 12       		.uleb128 0x12
 7624 0341 1E       		.byte	0x1e
 7625 0342 9A       		.byte	0x9a
 7626 0343 5BB00000 		.long	0xb05b
 7627 0347 12       		.uleb128 0x12
 7628 0348 1E       		.byte	0x1e
 7629 0349 9B       		.byte	0x9b
 7630 034a 86B00000 		.long	0xb086
 7631 034e 12       		.uleb128 0x12
 7632 034f 1E       		.byte	0x1e
 7633 0350 9C       		.byte	0x9c
 7634 0351 A1B00000 		.long	0xb0a1
 7635 0355 12       		.uleb128 0x12
 7636 0356 1E       		.byte	0x1e
 7637 0357 9E       		.byte	0x9e
 7638 0358 B7B00000 		.long	0xb0b7
 7639 035c 12       		.uleb128 0x12
 7640 035d 1E       		.byte	0x1e
 7641 035e A0       		.byte	0xa0
 7642 035f D8B00000 		.long	0xb0d8
 7643 0363 12       		.uleb128 0x12
 7644 0364 1E       		.byte	0x1e
 7645 0365 A1       		.byte	0xa1
 7646 0366 F4B00000 		.long	0xb0f4
 7647 036a 12       		.uleb128 0x12
 7648 036b 1E       		.byte	0x1e
 7649 036c A2       		.byte	0xa2
 7650 036d 0FB10000 		.long	0xb10f
 7651 0371 12       		.uleb128 0x12
 7652 0372 1E       		.byte	0x1e
 7653 0373 A4       		.byte	0xa4
 7654 0374 35B10000 		.long	0xb135
 7655 0378 12       		.uleb128 0x12
 7656 0379 1E       		.byte	0x1e
 7657 037a A7       		.byte	0xa7
 7658 037b 55B10000 		.long	0xb155
 7659 037f 12       		.uleb128 0x12
 7660 0380 1E       		.byte	0x1e
 7661 0381 AA       		.byte	0xaa
 7662 0382 7AB10000 		.long	0xb17a
 7663 0386 12       		.uleb128 0x12
 7664 0387 1E       		.byte	0x1e
 7665 0388 AC       		.byte	0xac
 7666 0389 9AB10000 		.long	0xb19a
 7667 038d 12       		.uleb128 0x12
 7668 038e 1E       		.byte	0x1e
 7669 038f AE       		.byte	0xae
 7670 0390 B5B10000 		.long	0xb1b5
 7671 0394 12       		.uleb128 0x12
 7672 0395 1E       		.byte	0x1e
 7673 0396 B0       		.byte	0xb0
 7674 0397 D0B10000 		.long	0xb1d0
 7675 039b 12       		.uleb128 0x12
 7676 039c 1E       		.byte	0x1e
GAS LISTING /tmp/ccJUMvuF.s 			page 436


 7677 039d B1       		.byte	0xb1
 7678 039e F6B10000 		.long	0xb1f6
 7679 03a2 12       		.uleb128 0x12
 7680 03a3 1E       		.byte	0x1e
 7681 03a4 B2       		.byte	0xb2
 7682 03a5 10B20000 		.long	0xb210
 7683 03a9 12       		.uleb128 0x12
 7684 03aa 1E       		.byte	0x1e
 7685 03ab B3       		.byte	0xb3
 7686 03ac 2AB20000 		.long	0xb22a
 7687 03b0 12       		.uleb128 0x12
 7688 03b1 1E       		.byte	0x1e
 7689 03b2 B4       		.byte	0xb4
 7690 03b3 44B20000 		.long	0xb244
 7691 03b7 12       		.uleb128 0x12
 7692 03b8 1E       		.byte	0x1e
 7693 03b9 B5       		.byte	0xb5
 7694 03ba 5EB20000 		.long	0xb25e
 7695 03be 12       		.uleb128 0x12
 7696 03bf 1E       		.byte	0x1e
 7697 03c0 B6       		.byte	0xb6
 7698 03c1 78B20000 		.long	0xb278
 7699 03c5 12       		.uleb128 0x12
 7700 03c6 1E       		.byte	0x1e
 7701 03c7 B7       		.byte	0xb7
 7702 03c8 39B30000 		.long	0xb339
 7703 03cc 12       		.uleb128 0x12
 7704 03cd 1E       		.byte	0x1e
 7705 03ce B8       		.byte	0xb8
 7706 03cf 4FB30000 		.long	0xb34f
 7707 03d3 12       		.uleb128 0x12
 7708 03d4 1E       		.byte	0x1e
 7709 03d5 B9       		.byte	0xb9
 7710 03d6 6EB30000 		.long	0xb36e
 7711 03da 12       		.uleb128 0x12
 7712 03db 1E       		.byte	0x1e
 7713 03dc BA       		.byte	0xba
 7714 03dd 8DB30000 		.long	0xb38d
 7715 03e1 12       		.uleb128 0x12
 7716 03e2 1E       		.byte	0x1e
 7717 03e3 BB       		.byte	0xbb
 7718 03e4 ACB30000 		.long	0xb3ac
 7719 03e8 12       		.uleb128 0x12
 7720 03e9 1E       		.byte	0x1e
 7721 03ea BC       		.byte	0xbc
 7722 03eb D7B30000 		.long	0xb3d7
 7723 03ef 12       		.uleb128 0x12
 7724 03f0 1E       		.byte	0x1e
 7725 03f1 BD       		.byte	0xbd
 7726 03f2 F1B30000 		.long	0xb3f1
 7727 03f6 12       		.uleb128 0x12
 7728 03f7 1E       		.byte	0x1e
 7729 03f8 BF       		.byte	0xbf
 7730 03f9 12B40000 		.long	0xb412
 7731 03fd 12       		.uleb128 0x12
 7732 03fe 1E       		.byte	0x1e
 7733 03ff C1       		.byte	0xc1
GAS LISTING /tmp/ccJUMvuF.s 			page 437


 7734 0400 2DB40000 		.long	0xb42d
 7735 0404 12       		.uleb128 0x12
 7736 0405 1E       		.byte	0x1e
 7737 0406 C2       		.byte	0xc2
 7738 0407 4DB40000 		.long	0xb44d
 7739 040b 12       		.uleb128 0x12
 7740 040c 1E       		.byte	0x1e
 7741 040d C3       		.byte	0xc3
 7742 040e 6DB40000 		.long	0xb46d
 7743 0412 12       		.uleb128 0x12
 7744 0413 1E       		.byte	0x1e
 7745 0414 C4       		.byte	0xc4
 7746 0415 8DB40000 		.long	0xb48d
 7747 0419 12       		.uleb128 0x12
 7748 041a 1E       		.byte	0x1e
 7749 041b C5       		.byte	0xc5
 7750 041c ACB40000 		.long	0xb4ac
 7751 0420 12       		.uleb128 0x12
 7752 0421 1E       		.byte	0x1e
 7753 0422 C6       		.byte	0xc6
 7754 0423 C2B40000 		.long	0xb4c2
 7755 0427 12       		.uleb128 0x12
 7756 0428 1E       		.byte	0x1e
 7757 0429 C7       		.byte	0xc7
 7758 042a E2B40000 		.long	0xb4e2
 7759 042e 12       		.uleb128 0x12
 7760 042f 1E       		.byte	0x1e
 7761 0430 C8       		.byte	0xc8
 7762 0431 02B50000 		.long	0xb502
 7763 0435 12       		.uleb128 0x12
 7764 0436 1E       		.byte	0x1e
 7765 0437 C9       		.byte	0xc9
 7766 0438 22B50000 		.long	0xb522
 7767 043c 12       		.uleb128 0x12
 7768 043d 1E       		.byte	0x1e
 7769 043e CA       		.byte	0xca
 7770 043f 42B50000 		.long	0xb542
 7771 0443 12       		.uleb128 0x12
 7772 0444 1E       		.byte	0x1e
 7773 0445 CB       		.byte	0xcb
 7774 0446 59B50000 		.long	0xb559
 7775 044a 12       		.uleb128 0x12
 7776 044b 1E       		.byte	0x1e
 7777 044c CC       		.byte	0xcc
 7778 044d 70B50000 		.long	0xb570
 7779 0451 12       		.uleb128 0x12
 7780 0452 1E       		.byte	0x1e
 7781 0453 CD       		.byte	0xcd
 7782 0454 8EB50000 		.long	0xb58e
 7783 0458 12       		.uleb128 0x12
 7784 0459 1E       		.byte	0x1e
 7785 045a CE       		.byte	0xce
 7786 045b ADB50000 		.long	0xb5ad
 7787 045f 12       		.uleb128 0x12
 7788 0460 1E       		.byte	0x1e
 7789 0461 CF       		.byte	0xcf
 7790 0462 CBB50000 		.long	0xb5cb
GAS LISTING /tmp/ccJUMvuF.s 			page 438


 7791 0466 12       		.uleb128 0x12
 7792 0467 1E       		.byte	0x1e
 7793 0468 D0       		.byte	0xd0
 7794 0469 EAB50000 		.long	0xb5ea
 7795 046d 1B       		.uleb128 0x1b
 7796 046e 1E       		.byte	0x1e
 7797 046f 0801     		.value	0x108
 7798 0471 0EB60000 		.long	0xb60e
 7799 0475 1B       		.uleb128 0x1b
 7800 0476 1E       		.byte	0x1e
 7801 0477 0901     		.value	0x109
 7802 0479 29B60000 		.long	0xb629
 7803 047d 1B       		.uleb128 0x1b
 7804 047e 1E       		.byte	0x1e
 7805 047f 0A01     		.value	0x10a
 7806 0481 49B60000 		.long	0xb649
 7807 0485 1B       		.uleb128 0x1b
 7808 0486 1E       		.byte	0x1e
 7809 0487 1801     		.value	0x118
 7810 0489 12B40000 		.long	0xb412
 7811 048d 1B       		.uleb128 0x1b
 7812 048e 1E       		.byte	0x1e
 7813 048f 1B01     		.value	0x11b
 7814 0491 35B10000 		.long	0xb135
 7815 0495 1B       		.uleb128 0x1b
 7816 0496 1E       		.byte	0x1e
 7817 0497 1E01     		.value	0x11e
 7818 0499 7AB10000 		.long	0xb17a
 7819 049d 1B       		.uleb128 0x1b
 7820 049e 1E       		.byte	0x1e
 7821 049f 2101     		.value	0x121
 7822 04a1 B5B10000 		.long	0xb1b5
 7823 04a5 1B       		.uleb128 0x1b
 7824 04a6 1E       		.byte	0x1e
 7825 04a7 2501     		.value	0x125
 7826 04a9 0EB60000 		.long	0xb60e
 7827 04ad 1B       		.uleb128 0x1b
 7828 04ae 1E       		.byte	0x1e
 7829 04af 2601     		.value	0x126
 7830 04b1 29B60000 		.long	0xb629
 7831 04b5 1B       		.uleb128 0x1b
 7832 04b6 1E       		.byte	0x1e
 7833 04b7 2701     		.value	0x127
 7834 04b9 49B60000 		.long	0xb649
 7835 04bd 16       		.uleb128 0x16
 7836 04be 00000000 		.long	.LASF29
 7837 04c2 01       		.byte	0x1
 7838 04c3 1F       		.byte	0x1f
 7839 04c4 E9       		.byte	0xe9
 7840 04c5 85060000 		.long	0x685
 7841 04c9 13       		.uleb128 0x13
 7842 04ca 00000000 		.long	.LASF30
 7843 04ce 1F       		.byte	0x1f
 7844 04cf EB       		.byte	0xeb
 7845 04d0 ACAE0000 		.long	0xaeac
 7846 04d4 13       		.uleb128 0x13
 7847 04d5 00000000 		.long	.LASF31
GAS LISTING /tmp/ccJUMvuF.s 			page 439


 7848 04d9 1F       		.byte	0x1f
 7849 04da EC       		.byte	0xec
 7850 04db 28930000 		.long	0x9328
 7851 04df 1C       		.uleb128 0x1c
 7852 04e0 00000000 		.long	.LASF44
 7853 04e4 1F       		.byte	0x1f
 7854 04e5 F2       		.byte	0xf2
 7855 04e6 00000000 		.long	.LASF749
 7856 04ea F9040000 		.long	0x4f9
 7857 04ee 09       		.uleb128 0x9
 7858 04ef 69B60000 		.long	0xb669
 7859 04f3 09       		.uleb128 0x9
 7860 04f4 6FB60000 		.long	0xb66f
 7861 04f8 00       		.byte	0
 7862 04f9 11       		.uleb128 0x11
 7863 04fa C9040000 		.long	0x4c9
 7864 04fe 1D       		.uleb128 0x1d
 7865 04ff 657100   		.string	"eq"
 7866 0502 1F       		.byte	0x1f
 7867 0503 F6       		.byte	0xf6
 7868 0504 00000000 		.long	.LASF32
 7869 0508 30930000 		.long	0x9330
 7870 050c 1B050000 		.long	0x51b
 7871 0510 09       		.uleb128 0x9
 7872 0511 6FB60000 		.long	0xb66f
 7873 0515 09       		.uleb128 0x9
 7874 0516 6FB60000 		.long	0xb66f
 7875 051a 00       		.byte	0
 7876 051b 1D       		.uleb128 0x1d
 7877 051c 6C7400   		.string	"lt"
 7878 051f 1F       		.byte	0x1f
 7879 0520 FA       		.byte	0xfa
 7880 0521 00000000 		.long	.LASF33
 7881 0525 30930000 		.long	0x9330
 7882 0529 38050000 		.long	0x538
 7883 052d 09       		.uleb128 0x9
 7884 052e 6FB60000 		.long	0xb66f
 7885 0532 09       		.uleb128 0x9
 7886 0533 6FB60000 		.long	0xb66f
 7887 0537 00       		.byte	0
 7888 0538 1E       		.uleb128 0x1e
 7889 0539 00000000 		.long	.LASF34
 7890 053d 1F       		.byte	0x1f
 7891 053e 0201     		.value	0x102
 7892 0540 00000000 		.long	.LASF36
 7893 0544 28930000 		.long	0x9328
 7894 0548 5C050000 		.long	0x55c
 7895 054c 09       		.uleb128 0x9
 7896 054d 75B60000 		.long	0xb675
 7897 0551 09       		.uleb128 0x9
 7898 0552 75B60000 		.long	0xb675
 7899 0556 09       		.uleb128 0x9
 7900 0557 85060000 		.long	0x685
 7901 055b 00       		.byte	0
 7902 055c 1E       		.uleb128 0x1e
 7903 055d 00000000 		.long	.LASF35
 7904 0561 1F       		.byte	0x1f
GAS LISTING /tmp/ccJUMvuF.s 			page 440


 7905 0562 0601     		.value	0x106
 7906 0564 00000000 		.long	.LASF37
 7907 0568 85060000 		.long	0x685
 7908 056c 76050000 		.long	0x576
 7909 0570 09       		.uleb128 0x9
 7910 0571 75B60000 		.long	0xb675
 7911 0575 00       		.byte	0
 7912 0576 1E       		.uleb128 0x1e
 7913 0577 00000000 		.long	.LASF38
 7914 057b 1F       		.byte	0x1f
 7915 057c 0A01     		.value	0x10a
 7916 057e 00000000 		.long	.LASF39
 7917 0582 75B60000 		.long	0xb675
 7918 0586 9A050000 		.long	0x59a
 7919 058a 09       		.uleb128 0x9
 7920 058b 75B60000 		.long	0xb675
 7921 058f 09       		.uleb128 0x9
 7922 0590 85060000 		.long	0x685
 7923 0594 09       		.uleb128 0x9
 7924 0595 6FB60000 		.long	0xb66f
 7925 0599 00       		.byte	0
 7926 059a 1E       		.uleb128 0x1e
 7927 059b 00000000 		.long	.LASF40
 7928 059f 1F       		.byte	0x1f
 7929 05a0 0E01     		.value	0x10e
 7930 05a2 00000000 		.long	.LASF41
 7931 05a6 7BB60000 		.long	0xb67b
 7932 05aa BE050000 		.long	0x5be
 7933 05ae 09       		.uleb128 0x9
 7934 05af 7BB60000 		.long	0xb67b
 7935 05b3 09       		.uleb128 0x9
 7936 05b4 75B60000 		.long	0xb675
 7937 05b8 09       		.uleb128 0x9
 7938 05b9 85060000 		.long	0x685
 7939 05bd 00       		.byte	0
 7940 05be 1E       		.uleb128 0x1e
 7941 05bf 00000000 		.long	.LASF42
 7942 05c3 1F       		.byte	0x1f
 7943 05c4 1201     		.value	0x112
 7944 05c6 00000000 		.long	.LASF43
 7945 05ca 7BB60000 		.long	0xb67b
 7946 05ce E2050000 		.long	0x5e2
 7947 05d2 09       		.uleb128 0x9
 7948 05d3 7BB60000 		.long	0xb67b
 7949 05d7 09       		.uleb128 0x9
 7950 05d8 75B60000 		.long	0xb675
 7951 05dc 09       		.uleb128 0x9
 7952 05dd 85060000 		.long	0x685
 7953 05e1 00       		.byte	0
 7954 05e2 1E       		.uleb128 0x1e
 7955 05e3 00000000 		.long	.LASF44
 7956 05e7 1F       		.byte	0x1f
 7957 05e8 1601     		.value	0x116
 7958 05ea 00000000 		.long	.LASF45
 7959 05ee 7BB60000 		.long	0xb67b
 7960 05f2 06060000 		.long	0x606
 7961 05f6 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 441


 7962 05f7 7BB60000 		.long	0xb67b
 7963 05fb 09       		.uleb128 0x9
 7964 05fc 85060000 		.long	0x685
 7965 0600 09       		.uleb128 0x9
 7966 0601 C9040000 		.long	0x4c9
 7967 0605 00       		.byte	0
 7968 0606 1E       		.uleb128 0x1e
 7969 0607 00000000 		.long	.LASF46
 7970 060b 1F       		.byte	0x1f
 7971 060c 1A01     		.value	0x11a
 7972 060e 00000000 		.long	.LASF47
 7973 0612 C9040000 		.long	0x4c9
 7974 0616 20060000 		.long	0x620
 7975 061a 09       		.uleb128 0x9
 7976 061b 81B60000 		.long	0xb681
 7977 061f 00       		.byte	0
 7978 0620 11       		.uleb128 0x11
 7979 0621 D4040000 		.long	0x4d4
 7980 0625 1E       		.uleb128 0x1e
 7981 0626 00000000 		.long	.LASF48
 7982 062a 1F       		.byte	0x1f
 7983 062b 2001     		.value	0x120
 7984 062d 00000000 		.long	.LASF49
 7985 0631 D4040000 		.long	0x4d4
 7986 0635 3F060000 		.long	0x63f
 7987 0639 09       		.uleb128 0x9
 7988 063a 6FB60000 		.long	0xb66f
 7989 063e 00       		.byte	0
 7990 063f 1E       		.uleb128 0x1e
 7991 0640 00000000 		.long	.LASF50
 7992 0644 1F       		.byte	0x1f
 7993 0645 2401     		.value	0x124
 7994 0647 00000000 		.long	.LASF51
 7995 064b 30930000 		.long	0x9330
 7996 064f 5E060000 		.long	0x65e
 7997 0653 09       		.uleb128 0x9
 7998 0654 81B60000 		.long	0xb681
 7999 0658 09       		.uleb128 0x9
 8000 0659 81B60000 		.long	0xb681
 8001 065d 00       		.byte	0
 8002 065e 1F       		.uleb128 0x1f
 8003 065f 656F6600 		.string	"eof"
 8004 0663 1F       		.byte	0x1f
 8005 0664 2801     		.value	0x128
 8006 0666 00000000 		.long	.LASF1791
 8007 066a D4040000 		.long	0x4d4
 8008 066e 20       		.uleb128 0x20
 8009 066f 00000000 		.long	.LASF52
 8010 0673 1F       		.byte	0x1f
 8011 0674 2C01     		.value	0x12c
 8012 0676 00000000 		.long	.LASF125
 8013 067a D4040000 		.long	0x4d4
 8014 067e 09       		.uleb128 0x9
 8015 067f 81B60000 		.long	0xb681
 8016 0683 00       		.byte	0
 8017 0684 00       		.byte	0
 8018 0685 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 442


 8019 0686 00000000 		.long	.LASF53
 8020 068a 1A       		.byte	0x1a
 8021 068b BC       		.byte	0xbc
 8022 068c 53930000 		.long	0x9353
 8023 0690 12       		.uleb128 0x12
 8024 0691 20       		.byte	0x20
 8025 0692 30       		.byte	0x30
 8026 0693 87B60000 		.long	0xb687
 8027 0697 12       		.uleb128 0x12
 8028 0698 20       		.byte	0x20
 8029 0699 31       		.byte	0x31
 8030 069a 92B60000 		.long	0xb692
 8031 069e 12       		.uleb128 0x12
 8032 069f 20       		.byte	0x20
 8033 06a0 32       		.byte	0x32
 8034 06a1 9DB60000 		.long	0xb69d
 8035 06a5 12       		.uleb128 0x12
 8036 06a6 20       		.byte	0x20
 8037 06a7 33       		.byte	0x33
 8038 06a8 A8B60000 		.long	0xb6a8
 8039 06ac 12       		.uleb128 0x12
 8040 06ad 20       		.byte	0x20
 8041 06ae 35       		.byte	0x35
 8042 06af 37B70000 		.long	0xb737
 8043 06b3 12       		.uleb128 0x12
 8044 06b4 20       		.byte	0x20
 8045 06b5 36       		.byte	0x36
 8046 06b6 42B70000 		.long	0xb742
 8047 06ba 12       		.uleb128 0x12
 8048 06bb 20       		.byte	0x20
 8049 06bc 37       		.byte	0x37
 8050 06bd 4DB70000 		.long	0xb74d
 8051 06c1 12       		.uleb128 0x12
 8052 06c2 20       		.byte	0x20
 8053 06c3 38       		.byte	0x38
 8054 06c4 58B70000 		.long	0xb758
 8055 06c8 12       		.uleb128 0x12
 8056 06c9 20       		.byte	0x20
 8057 06ca 3A       		.byte	0x3a
 8058 06cb DFB60000 		.long	0xb6df
 8059 06cf 12       		.uleb128 0x12
 8060 06d0 20       		.byte	0x20
 8061 06d1 3B       		.byte	0x3b
 8062 06d2 EAB60000 		.long	0xb6ea
 8063 06d6 12       		.uleb128 0x12
 8064 06d7 20       		.byte	0x20
 8065 06d8 3C       		.byte	0x3c
 8066 06d9 F5B60000 		.long	0xb6f5
 8067 06dd 12       		.uleb128 0x12
 8068 06de 20       		.byte	0x20
 8069 06df 3D       		.byte	0x3d
 8070 06e0 00B70000 		.long	0xb700
 8071 06e4 12       		.uleb128 0x12
 8072 06e5 20       		.byte	0x20
 8073 06e6 3F       		.byte	0x3f
 8074 06e7 A5B70000 		.long	0xb7a5
 8075 06eb 12       		.uleb128 0x12
GAS LISTING /tmp/ccJUMvuF.s 			page 443


 8076 06ec 20       		.byte	0x20
 8077 06ed 40       		.byte	0x40
 8078 06ee 8FB70000 		.long	0xb78f
 8079 06f2 12       		.uleb128 0x12
 8080 06f3 20       		.byte	0x20
 8081 06f4 42       		.byte	0x42
 8082 06f5 B3B60000 		.long	0xb6b3
 8083 06f9 12       		.uleb128 0x12
 8084 06fa 20       		.byte	0x20
 8085 06fb 43       		.byte	0x43
 8086 06fc BEB60000 		.long	0xb6be
 8087 0700 12       		.uleb128 0x12
 8088 0701 20       		.byte	0x20
 8089 0702 44       		.byte	0x44
 8090 0703 C9B60000 		.long	0xb6c9
 8091 0707 12       		.uleb128 0x12
 8092 0708 20       		.byte	0x20
 8093 0709 45       		.byte	0x45
 8094 070a D4B60000 		.long	0xb6d4
 8095 070e 12       		.uleb128 0x12
 8096 070f 20       		.byte	0x20
 8097 0710 47       		.byte	0x47
 8098 0711 63B70000 		.long	0xb763
 8099 0715 12       		.uleb128 0x12
 8100 0716 20       		.byte	0x20
 8101 0717 48       		.byte	0x48
 8102 0718 6EB70000 		.long	0xb76e
 8103 071c 12       		.uleb128 0x12
 8104 071d 20       		.byte	0x20
 8105 071e 49       		.byte	0x49
 8106 071f 79B70000 		.long	0xb779
 8107 0723 12       		.uleb128 0x12
 8108 0724 20       		.byte	0x20
 8109 0725 4A       		.byte	0x4a
 8110 0726 84B70000 		.long	0xb784
 8111 072a 12       		.uleb128 0x12
 8112 072b 20       		.byte	0x20
 8113 072c 4C       		.byte	0x4c
 8114 072d 0BB70000 		.long	0xb70b
 8115 0731 12       		.uleb128 0x12
 8116 0732 20       		.byte	0x20
 8117 0733 4D       		.byte	0x4d
 8118 0734 16B70000 		.long	0xb716
 8119 0738 12       		.uleb128 0x12
 8120 0739 20       		.byte	0x20
 8121 073a 4E       		.byte	0x4e
 8122 073b 21B70000 		.long	0xb721
 8123 073f 12       		.uleb128 0x12
 8124 0740 20       		.byte	0x20
 8125 0741 4F       		.byte	0x4f
 8126 0742 2CB70000 		.long	0xb72c
 8127 0746 12       		.uleb128 0x12
 8128 0747 20       		.byte	0x20
 8129 0748 51       		.byte	0x51
 8130 0749 B0B70000 		.long	0xb7b0
 8131 074d 12       		.uleb128 0x12
 8132 074e 20       		.byte	0x20
GAS LISTING /tmp/ccJUMvuF.s 			page 444


 8133 074f 52       		.byte	0x52
 8134 0750 9AB70000 		.long	0xb79a
 8135 0754 13       		.uleb128 0x13
 8136 0755 00000000 		.long	.LASF54
 8137 0759 1A       		.byte	0x1a
 8138 075a BD       		.byte	0xbd
 8139 075b 84930000 		.long	0x9384
 8140 075f 13       		.uleb128 0x13
 8141 0760 00000000 		.long	.LASF55
 8142 0764 1B       		.byte	0x1b
 8143 0765 57       		.byte	0x57
 8144 0766 70020000 		.long	0x270
 8145 076a 05       		.uleb128 0x5
 8146 076b 00000000 		.long	.LASF56
 8147 076f 01       		.byte	0x1
 8148 0770 21       		.byte	0x21
 8149 0771 5C       		.byte	0x5c
 8150 0772 EA070000 		.long	0x7ea
 8151 0776 21       		.uleb128 0x21
 8152 0777 D0940000 		.long	0x94d0
 8153 077b 00       		.byte	0
 8154 077c 01       		.byte	0x1
 8155 077d 22       		.uleb128 0x22
 8156 077e 00000000 		.long	.LASF57
 8157 0782 21       		.byte	0x21
 8158 0783 5F       		.byte	0x5f
 8159 0784 85060000 		.long	0x685
 8160 0788 01       		.byte	0x1
 8161 0789 22       		.uleb128 0x22
 8162 078a 00000000 		.long	.LASF58
 8163 078e 21       		.byte	0x21
 8164 078f 63       		.byte	0x63
 8165 0790 D1B70000 		.long	0xb7d1
 8166 0794 01       		.byte	0x1
 8167 0795 22       		.uleb128 0x22
 8168 0796 00000000 		.long	.LASF59
 8169 079a 21       		.byte	0x21
 8170 079b 64       		.byte	0x64
 8171 079c D7B70000 		.long	0xb7d7
 8172 07a0 01       		.byte	0x1
 8173 07a1 0C       		.uleb128 0xc
 8174 07a2 00000000 		.long	.LASF60
 8175 07a6 21       		.byte	0x21
 8176 07a7 71       		.byte	0x71
 8177 07a8 01       		.byte	0x1
 8178 07a9 B1070000 		.long	0x7b1
 8179 07ad B7070000 		.long	0x7b7
 8180 07b1 08       		.uleb128 0x8
 8181 07b2 EFB70000 		.long	0xb7ef
 8182 07b6 00       		.byte	0
 8183 07b7 0C       		.uleb128 0xc
 8184 07b8 00000000 		.long	.LASF60
 8185 07bc 21       		.byte	0x21
 8186 07bd 73       		.byte	0x73
 8187 07be 01       		.byte	0x1
 8188 07bf C7070000 		.long	0x7c7
 8189 07c3 D2070000 		.long	0x7d2
GAS LISTING /tmp/ccJUMvuF.s 			page 445


 8190 07c7 08       		.uleb128 0x8
 8191 07c8 EFB70000 		.long	0xb7ef
 8192 07cc 09       		.uleb128 0x9
 8193 07cd F5B70000 		.long	0xb7f5
 8194 07d1 00       		.byte	0
 8195 07d2 23       		.uleb128 0x23
 8196 07d3 00000000 		.long	.LASF61
 8197 07d7 21       		.byte	0x21
 8198 07d8 79       		.byte	0x79
 8199 07d9 01       		.byte	0x1
 8200 07da DE070000 		.long	0x7de
 8201 07de 08       		.uleb128 0x8
 8202 07df EFB70000 		.long	0xb7ef
 8203 07e3 08       		.uleb128 0x8
 8204 07e4 28930000 		.long	0x9328
 8205 07e8 00       		.byte	0
 8206 07e9 00       		.byte	0
 8207 07ea 11       		.uleb128 0x11
 8208 07eb 6A070000 		.long	0x76a
 8209 07ef 12       		.uleb128 0x12
 8210 07f0 22       		.byte	0x22
 8211 07f1 35       		.byte	0x35
 8212 07f2 FBB70000 		.long	0xb7fb
 8213 07f6 12       		.uleb128 0x12
 8214 07f7 22       		.byte	0x22
 8215 07f8 36       		.byte	0x36
 8216 07f9 28B90000 		.long	0xb928
 8217 07fd 12       		.uleb128 0x12
 8218 07fe 22       		.byte	0x22
 8219 07ff 37       		.byte	0x37
 8220 0800 42B90000 		.long	0xb942
 8221 0804 12       		.uleb128 0x12
 8222 0805 23       		.byte	0x23
 8223 0806 76       		.byte	0x76
 8224 0807 B9B90000 		.long	0xb9b9
 8225 080b 12       		.uleb128 0x12
 8226 080c 23       		.byte	0x23
 8227 080d 77       		.byte	0x77
 8228 080e EBB90000 		.long	0xb9eb
 8229 0812 12       		.uleb128 0x12
 8230 0813 23       		.byte	0x23
 8231 0814 7B       		.byte	0x7b
 8232 0815 4FBA0000 		.long	0xba4f
 8233 0819 12       		.uleb128 0x12
 8234 081a 23       		.byte	0x23
 8235 081b 7E       		.byte	0x7e
 8236 081c 6DBA0000 		.long	0xba6d
 8237 0820 12       		.uleb128 0x12
 8238 0821 23       		.byte	0x23
 8239 0822 81       		.byte	0x81
 8240 0823 87BA0000 		.long	0xba87
 8241 0827 12       		.uleb128 0x12
 8242 0828 23       		.byte	0x23
 8243 0829 82       		.byte	0x82
 8244 082a 9DBA0000 		.long	0xba9d
 8245 082e 12       		.uleb128 0x12
 8246 082f 23       		.byte	0x23
GAS LISTING /tmp/ccJUMvuF.s 			page 446


 8247 0830 83       		.byte	0x83
 8248 0831 B3BA0000 		.long	0xbab3
 8249 0835 12       		.uleb128 0x12
 8250 0836 23       		.byte	0x23
 8251 0837 84       		.byte	0x84
 8252 0838 C9BA0000 		.long	0xbac9
 8253 083c 12       		.uleb128 0x12
 8254 083d 23       		.byte	0x23
 8255 083e 86       		.byte	0x86
 8256 083f F3BA0000 		.long	0xbaf3
 8257 0843 12       		.uleb128 0x12
 8258 0844 23       		.byte	0x23
 8259 0845 89       		.byte	0x89
 8260 0846 0FBB0000 		.long	0xbb0f
 8261 084a 12       		.uleb128 0x12
 8262 084b 23       		.byte	0x23
 8263 084c 8B       		.byte	0x8b
 8264 084d 25BB0000 		.long	0xbb25
 8265 0851 12       		.uleb128 0x12
 8266 0852 23       		.byte	0x23
 8267 0853 8E       		.byte	0x8e
 8268 0854 40BB0000 		.long	0xbb40
 8269 0858 12       		.uleb128 0x12
 8270 0859 23       		.byte	0x23
 8271 085a 8F       		.byte	0x8f
 8272 085b 5BBB0000 		.long	0xbb5b
 8273 085f 12       		.uleb128 0x12
 8274 0860 23       		.byte	0x23
 8275 0861 90       		.byte	0x90
 8276 0862 7BBB0000 		.long	0xbb7b
 8277 0866 12       		.uleb128 0x12
 8278 0867 23       		.byte	0x23
 8279 0868 92       		.byte	0x92
 8280 0869 9BBB0000 		.long	0xbb9b
 8281 086d 12       		.uleb128 0x12
 8282 086e 23       		.byte	0x23
 8283 086f 95       		.byte	0x95
 8284 0870 BCBB0000 		.long	0xbbbc
 8285 0874 12       		.uleb128 0x12
 8286 0875 23       		.byte	0x23
 8287 0876 98       		.byte	0x98
 8288 0877 CEBB0000 		.long	0xbbce
 8289 087b 12       		.uleb128 0x12
 8290 087c 23       		.byte	0x23
 8291 087d 9A       		.byte	0x9a
 8292 087e DBBB0000 		.long	0xbbdb
 8293 0882 12       		.uleb128 0x12
 8294 0883 23       		.byte	0x23
 8295 0884 9B       		.byte	0x9b
 8296 0885 EDBB0000 		.long	0xbbed
 8297 0889 12       		.uleb128 0x12
 8298 088a 23       		.byte	0x23
 8299 088b 9C       		.byte	0x9c
 8300 088c 0DBC0000 		.long	0xbc0d
 8301 0890 12       		.uleb128 0x12
 8302 0891 23       		.byte	0x23
 8303 0892 9D       		.byte	0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 447


 8304 0893 2CBC0000 		.long	0xbc2c
 8305 0897 12       		.uleb128 0x12
 8306 0898 23       		.byte	0x23
 8307 0899 9E       		.byte	0x9e
 8308 089a 4BBC0000 		.long	0xbc4b
 8309 089e 12       		.uleb128 0x12
 8310 089f 23       		.byte	0x23
 8311 08a0 A0       		.byte	0xa0
 8312 08a1 61BC0000 		.long	0xbc61
 8313 08a5 12       		.uleb128 0x12
 8314 08a6 23       		.byte	0x23
 8315 08a7 A1       		.byte	0xa1
 8316 08a8 81BC0000 		.long	0xbc81
 8317 08ac 12       		.uleb128 0x12
 8318 08ad 23       		.byte	0x23
 8319 08ae F1       		.byte	0xf1
 8320 08af 1DBA0000 		.long	0xba1d
 8321 08b3 12       		.uleb128 0x12
 8322 08b4 23       		.byte	0x23
 8323 08b5 F6       		.byte	0xf6
 8324 08b6 96960000 		.long	0x9696
 8325 08ba 12       		.uleb128 0x12
 8326 08bb 23       		.byte	0x23
 8327 08bc F7       		.byte	0xf7
 8328 08bd 9CBC0000 		.long	0xbc9c
 8329 08c1 12       		.uleb128 0x12
 8330 08c2 23       		.byte	0x23
 8331 08c3 F9       		.byte	0xf9
 8332 08c4 B7BC0000 		.long	0xbcb7
 8333 08c8 12       		.uleb128 0x12
 8334 08c9 23       		.byte	0x23
 8335 08ca FA       		.byte	0xfa
 8336 08cb 0BBD0000 		.long	0xbd0b
 8337 08cf 12       		.uleb128 0x12
 8338 08d0 23       		.byte	0x23
 8339 08d1 FB       		.byte	0xfb
 8340 08d2 CDBC0000 		.long	0xbccd
 8341 08d6 12       		.uleb128 0x12
 8342 08d7 23       		.byte	0x23
 8343 08d8 FC       		.byte	0xfc
 8344 08d9 ECBC0000 		.long	0xbcec
 8345 08dd 12       		.uleb128 0x12
 8346 08de 23       		.byte	0x23
 8347 08df FD       		.byte	0xfd
 8348 08e0 25BD0000 		.long	0xbd25
 8349 08e4 12       		.uleb128 0x12
 8350 08e5 24       		.byte	0x24
 8351 08e6 62       		.byte	0x62
 8352 08e7 5AAC0000 		.long	0xac5a
 8353 08eb 12       		.uleb128 0x12
 8354 08ec 24       		.byte	0x24
 8355 08ed 63       		.byte	0x63
 8356 08ee DFBD0000 		.long	0xbddf
 8357 08f2 12       		.uleb128 0x12
 8358 08f3 24       		.byte	0x24
 8359 08f4 65       		.byte	0x65
 8360 08f5 EABD0000 		.long	0xbdea
GAS LISTING /tmp/ccJUMvuF.s 			page 448


 8361 08f9 12       		.uleb128 0x12
 8362 08fa 24       		.byte	0x24
 8363 08fb 66       		.byte	0x66
 8364 08fc 02BE0000 		.long	0xbe02
 8365 0900 12       		.uleb128 0x12
 8366 0901 24       		.byte	0x24
 8367 0902 67       		.byte	0x67
 8368 0903 17BE0000 		.long	0xbe17
 8369 0907 12       		.uleb128 0x12
 8370 0908 24       		.byte	0x24
 8371 0909 68       		.byte	0x68
 8372 090a 2DBE0000 		.long	0xbe2d
 8373 090e 12       		.uleb128 0x12
 8374 090f 24       		.byte	0x24
 8375 0910 69       		.byte	0x69
 8376 0911 43BE0000 		.long	0xbe43
 8377 0915 12       		.uleb128 0x12
 8378 0916 24       		.byte	0x24
 8379 0917 6A       		.byte	0x6a
 8380 0918 58BE0000 		.long	0xbe58
 8381 091c 12       		.uleb128 0x12
 8382 091d 24       		.byte	0x24
 8383 091e 6B       		.byte	0x6b
 8384 091f 6EBE0000 		.long	0xbe6e
 8385 0923 12       		.uleb128 0x12
 8386 0924 24       		.byte	0x24
 8387 0925 6C       		.byte	0x6c
 8388 0926 8FBE0000 		.long	0xbe8f
 8389 092a 12       		.uleb128 0x12
 8390 092b 24       		.byte	0x24
 8391 092c 6D       		.byte	0x6d
 8392 092d AFBE0000 		.long	0xbeaf
 8393 0931 12       		.uleb128 0x12
 8394 0932 24       		.byte	0x24
 8395 0933 71       		.byte	0x71
 8396 0934 CABE0000 		.long	0xbeca
 8397 0938 12       		.uleb128 0x12
 8398 0939 24       		.byte	0x24
 8399 093a 72       		.byte	0x72
 8400 093b EFBE0000 		.long	0xbeef
 8401 093f 12       		.uleb128 0x12
 8402 0940 24       		.byte	0x24
 8403 0941 74       		.byte	0x74
 8404 0942 0FBF0000 		.long	0xbf0f
 8405 0946 12       		.uleb128 0x12
 8406 0947 24       		.byte	0x24
 8407 0948 75       		.byte	0x75
 8408 0949 2FBF0000 		.long	0xbf2f
 8409 094d 12       		.uleb128 0x12
 8410 094e 24       		.byte	0x24
 8411 094f 76       		.byte	0x76
 8412 0950 55BF0000 		.long	0xbf55
 8413 0954 12       		.uleb128 0x12
 8414 0955 24       		.byte	0x24
 8415 0956 78       		.byte	0x78
 8416 0957 6BBF0000 		.long	0xbf6b
 8417 095b 12       		.uleb128 0x12
GAS LISTING /tmp/ccJUMvuF.s 			page 449


 8418 095c 24       		.byte	0x24
 8419 095d 79       		.byte	0x79
 8420 095e 81BF0000 		.long	0xbf81
 8421 0962 12       		.uleb128 0x12
 8422 0963 24       		.byte	0x24
 8423 0964 7C       		.byte	0x7c
 8424 0965 8DBF0000 		.long	0xbf8d
 8425 0969 12       		.uleb128 0x12
 8426 096a 24       		.byte	0x24
 8427 096b 7E       		.byte	0x7e
 8428 096c A3BF0000 		.long	0xbfa3
 8429 0970 12       		.uleb128 0x12
 8430 0971 24       		.byte	0x24
 8431 0972 83       		.byte	0x83
 8432 0973 B5BF0000 		.long	0xbfb5
 8433 0977 12       		.uleb128 0x12
 8434 0978 24       		.byte	0x24
 8435 0979 84       		.byte	0x84
 8436 097a CABF0000 		.long	0xbfca
 8437 097e 12       		.uleb128 0x12
 8438 097f 24       		.byte	0x24
 8439 0980 85       		.byte	0x85
 8440 0981 E4BF0000 		.long	0xbfe4
 8441 0985 12       		.uleb128 0x12
 8442 0986 24       		.byte	0x24
 8443 0987 87       		.byte	0x87
 8444 0988 F6BF0000 		.long	0xbff6
 8445 098c 12       		.uleb128 0x12
 8446 098d 24       		.byte	0x24
 8447 098e 88       		.byte	0x88
 8448 098f 0DC00000 		.long	0xc00d
 8449 0993 12       		.uleb128 0x12
 8450 0994 24       		.byte	0x24
 8451 0995 8B       		.byte	0x8b
 8452 0996 32C00000 		.long	0xc032
 8453 099a 12       		.uleb128 0x12
 8454 099b 24       		.byte	0x24
 8455 099c 8D       		.byte	0x8d
 8456 099d 3EC00000 		.long	0xc03e
 8457 09a1 12       		.uleb128 0x12
 8458 09a2 24       		.byte	0x24
 8459 09a3 8F       		.byte	0x8f
 8460 09a4 53C00000 		.long	0xc053
 8461 09a8 05       		.uleb128 0x5
 8462 09a9 00000000 		.long	.LASF62
 8463 09ad 08       		.byte	0x8
 8464 09ae 08       		.byte	0x8
 8465 09af 70       		.byte	0x70
 8466 09b0 D0220000 		.long	0x22d0
 8467 09b4 24       		.uleb128 0x24
 8468 09b5 00000000 		.long	.LASF63
 8469 09b9 08       		.byte	0x8
 8470 09ba 08       		.byte	0x8
 8471 09bb 1001     		.value	0x110
 8472 09bd 090A0000 		.long	0xa09
 8473 09c1 25       		.uleb128 0x25
 8474 09c2 6A070000 		.long	0x76a
GAS LISTING /tmp/ccJUMvuF.s 			page 450


 8475 09c6 00       		.byte	0
 8476 09c7 26       		.uleb128 0x26
 8477 09c8 00000000 		.long	.LASF65
 8478 09cc 08       		.byte	0x8
 8479 09cd 1501     		.value	0x115
 8480 09cf F0B10000 		.long	0xb1f0
 8481 09d3 00       		.byte	0
 8482 09d4 27       		.uleb128 0x27
 8483 09d5 00000000 		.long	.LASF63
 8484 09d9 08       		.byte	0x8
 8485 09da 1201     		.value	0x112
 8486 09dc E4090000 		.long	0x9e4
 8487 09e0 F4090000 		.long	0x9f4
 8488 09e4 08       		.uleb128 0x8
 8489 09e5 6EC00000 		.long	0xc06e
 8490 09e9 09       		.uleb128 0x9
 8491 09ea F0B10000 		.long	0xb1f0
 8492 09ee 09       		.uleb128 0x9
 8493 09ef F5B70000 		.long	0xb7f5
 8494 09f3 00       		.byte	0
 8495 09f4 28       		.uleb128 0x28
 8496 09f5 00000000 		.long	.LASF319
 8497 09f9 FD090000 		.long	0x9fd
 8498 09fd 08       		.uleb128 0x8
 8499 09fe 6EC00000 		.long	0xc06e
 8500 0a02 08       		.uleb128 0x8
 8501 0a03 28930000 		.long	0x9328
 8502 0a07 00       		.byte	0
 8503 0a08 00       		.byte	0
 8504 0a09 22       		.uleb128 0x22
 8505 0a0a 00000000 		.long	.LASF57
 8506 0a0e 08       		.byte	0x8
 8507 0a0f 79       		.byte	0x79
 8508 0a10 7D070000 		.long	0x77d
 8509 0a14 01       		.byte	0x1
 8510 0a15 29       		.uleb128 0x29
 8511 0a16 00000000 		.long	.LASF440
 8512 0a1a 08       		.byte	0x8
 8513 0a1b 1D01     		.value	0x11d
 8514 0a1d 220A0000 		.long	0xa22
 8515 0a21 01       		.byte	0x1
 8516 0a22 11       		.uleb128 0x11
 8517 0a23 090A0000 		.long	0xa09
 8518 0a27 26       		.uleb128 0x26
 8519 0a28 00000000 		.long	.LASF66
 8520 0a2c 08       		.byte	0x8
 8521 0a2d 2101     		.value	0x121
 8522 0a2f B4090000 		.long	0x9b4
 8523 0a33 00       		.byte	0
 8524 0a34 22       		.uleb128 0x22
 8525 0a35 00000000 		.long	.LASF67
 8526 0a39 08       		.byte	0x8
 8527 0a3a 78       		.byte	0x78
 8528 0a3b 6A070000 		.long	0x76a
 8529 0a3f 01       		.byte	0x1
 8530 0a40 22       		.uleb128 0x22
 8531 0a41 00000000 		.long	.LASF58
GAS LISTING /tmp/ccJUMvuF.s 			page 451


 8532 0a45 08       		.byte	0x8
 8533 0a46 7B       		.byte	0x7b
 8534 0a47 89070000 		.long	0x789
 8535 0a4b 01       		.byte	0x1
 8536 0a4c 22       		.uleb128 0x22
 8537 0a4d 00000000 		.long	.LASF59
 8538 0a51 08       		.byte	0x8
 8539 0a52 7C       		.byte	0x7c
 8540 0a53 95070000 		.long	0x795
 8541 0a57 01       		.byte	0x1
 8542 0a58 22       		.uleb128 0x22
 8543 0a59 00000000 		.long	.LASF68
 8544 0a5d 08       		.byte	0x8
 8545 0a5e 7F       		.byte	0x7f
 8546 0a5f B4960000 		.long	0x96b4
 8547 0a63 01       		.byte	0x1
 8548 0a64 22       		.uleb128 0x22
 8549 0a65 00000000 		.long	.LASF69
 8550 0a69 08       		.byte	0x8
 8551 0a6a 81       		.byte	0x81
 8552 0a6b D3980000 		.long	0x98d3
 8553 0a6f 01       		.byte	0x1
 8554 0a70 22       		.uleb128 0x22
 8555 0a71 00000000 		.long	.LASF70
 8556 0a75 08       		.byte	0x8
 8557 0a76 82       		.byte	0x82
 8558 0a77 D0220000 		.long	0x22d0
 8559 0a7b 01       		.byte	0x1
 8560 0a7c 22       		.uleb128 0x22
 8561 0a7d 00000000 		.long	.LASF71
 8562 0a81 08       		.byte	0x8
 8563 0a82 83       		.byte	0x83
 8564 0a83 D5220000 		.long	0x22d5
 8565 0a87 01       		.byte	0x1
 8566 0a88 16       		.uleb128 0x16
 8567 0a89 00000000 		.long	.LASF72
 8568 0a8d 18       		.byte	0x18
 8569 0a8e 08       		.byte	0x8
 8570 0a8f 94       		.byte	0x94
 8571 0a90 B90A0000 		.long	0xab9
 8572 0a94 06       		.uleb128 0x6
 8573 0a95 00000000 		.long	.LASF73
 8574 0a99 08       		.byte	0x8
 8575 0a9a 96       		.byte	0x96
 8576 0a9b 090A0000 		.long	0xa09
 8577 0a9f 00       		.byte	0
 8578 0aa0 06       		.uleb128 0x6
 8579 0aa1 00000000 		.long	.LASF74
 8580 0aa5 08       		.byte	0x8
 8581 0aa6 97       		.byte	0x97
 8582 0aa7 090A0000 		.long	0xa09
 8583 0aab 08       		.byte	0x8
 8584 0aac 06       		.uleb128 0x6
 8585 0aad 00000000 		.long	.LASF75
 8586 0ab1 08       		.byte	0x8
 8587 0ab2 98       		.byte	0x98
 8588 0ab3 87B90000 		.long	0xb987
GAS LISTING /tmp/ccJUMvuF.s 			page 452


 8589 0ab7 10       		.byte	0x10
 8590 0ab8 00       		.byte	0
 8591 0ab9 16       		.uleb128 0x16
 8592 0aba 00000000 		.long	.LASF76
 8593 0abe 18       		.byte	0x18
 8594 0abf 08       		.byte	0x8
 8595 0ac0 9B       		.byte	0x9b
 8596 0ac1 6D0C0000 		.long	0xc6d
 8597 0ac5 25       		.uleb128 0x25
 8598 0ac6 880A0000 		.long	0xa88
 8599 0aca 00       		.byte	0
 8600 0acb 17       		.uleb128 0x17
 8601 0acc 00000000 		.long	.LASF77
 8602 0ad0 25       		.byte	0x25
 8603 0ad1 32       		.byte	0x32
 8604 0ad2 220A0000 		.long	0xa22
 8605 0ad6 17       		.uleb128 0x17
 8606 0ad7 00000000 		.long	.LASF78
 8607 0adb 25       		.byte	0x25
 8608 0adc 37       		.byte	0x37
 8609 0add D4AE0000 		.long	0xaed4
 8610 0ae1 17       		.uleb128 0x17
 8611 0ae2 00000000 		.long	.LASF79
 8612 0ae6 25       		.byte	0x25
 8613 0ae7 42       		.byte	0x42
 8614 0ae8 B1C00000 		.long	0xc0b1
 8615 0aec 2A       		.uleb128 0x2a
 8616 0aed 00000000 		.long	.LASF80
 8617 0af1 08       		.byte	0x8
 8618 0af2 B5       		.byte	0xb5
 8619 0af3 00000000 		.long	.LASF1284
 8620 0af7 86C00000 		.long	0xc086
 8621 0afb 0B       		.uleb128 0xb
 8622 0afc 00000000 		.long	.LASF81
 8623 0b00 08       		.byte	0x8
 8624 0b01 BF       		.byte	0xbf
 8625 0b02 00000000 		.long	.LASF82
 8626 0b06 30930000 		.long	0x9330
 8627 0b0a 120B0000 		.long	0xb12
 8628 0b0e 180B0000 		.long	0xb18
 8629 0b12 08       		.uleb128 0x8
 8630 0b13 BEC00000 		.long	0xc0be
 8631 0b17 00       		.byte	0
 8632 0b18 0B       		.uleb128 0xb
 8633 0b19 00000000 		.long	.LASF83
 8634 0b1d 08       		.byte	0x8
 8635 0b1e C3       		.byte	0xc3
 8636 0b1f 00000000 		.long	.LASF84
 8637 0b23 30930000 		.long	0x9330
 8638 0b27 2F0B0000 		.long	0xb2f
 8639 0b2b 350B0000 		.long	0xb35
 8640 0b2f 08       		.uleb128 0x8
 8641 0b30 BEC00000 		.long	0xc0be
 8642 0b34 00       		.byte	0
 8643 0b35 0A       		.uleb128 0xa
 8644 0b36 00000000 		.long	.LASF85
 8645 0b3a 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 453


 8646 0b3b C7       		.byte	0xc7
 8647 0b3c 00000000 		.long	.LASF86
 8648 0b40 480B0000 		.long	0xb48
 8649 0b44 4E0B0000 		.long	0xb4e
 8650 0b48 08       		.uleb128 0x8
 8651 0b49 80C00000 		.long	0xc080
 8652 0b4d 00       		.byte	0
 8653 0b4e 0A       		.uleb128 0xa
 8654 0b4f 00000000 		.long	.LASF87
 8655 0b53 08       		.byte	0x8
 8656 0b54 CB       		.byte	0xcb
 8657 0b55 00000000 		.long	.LASF88
 8658 0b59 610B0000 		.long	0xb61
 8659 0b5d 670B0000 		.long	0xb67
 8660 0b61 08       		.uleb128 0x8
 8661 0b62 80C00000 		.long	0xc080
 8662 0b66 00       		.byte	0
 8663 0b67 0A       		.uleb128 0xa
 8664 0b68 00000000 		.long	.LASF89
 8665 0b6c 08       		.byte	0x8
 8666 0b6d CF       		.byte	0xcf
 8667 0b6e 00000000 		.long	.LASF90
 8668 0b72 7A0B0000 		.long	0xb7a
 8669 0b76 850B0000 		.long	0xb85
 8670 0b7a 08       		.uleb128 0x8
 8671 0b7b 80C00000 		.long	0xc080
 8672 0b7f 09       		.uleb128 0x9
 8673 0b80 090A0000 		.long	0xa09
 8674 0b84 00       		.byte	0
 8675 0b85 0B       		.uleb128 0xb
 8676 0b86 00000000 		.long	.LASF91
 8677 0b8a 08       		.byte	0x8
 8678 0b8b DE       		.byte	0xde
 8679 0b8c 00000000 		.long	.LASF92
 8680 0b90 F0B10000 		.long	0xb1f0
 8681 0b94 9C0B0000 		.long	0xb9c
 8682 0b98 A20B0000 		.long	0xba2
 8683 0b9c 08       		.uleb128 0x8
 8684 0b9d 80C00000 		.long	0xc080
 8685 0ba1 00       		.byte	0
 8686 0ba2 0B       		.uleb128 0xb
 8687 0ba3 00000000 		.long	.LASF93
 8688 0ba7 08       		.byte	0x8
 8689 0ba8 E2       		.byte	0xe2
 8690 0ba9 00000000 		.long	.LASF94
 8691 0bad F0B10000 		.long	0xb1f0
 8692 0bb1 B90B0000 		.long	0xbb9
 8693 0bb5 C90B0000 		.long	0xbc9
 8694 0bb9 08       		.uleb128 0x8
 8695 0bba 80C00000 		.long	0xc080
 8696 0bbe 09       		.uleb128 0x9
 8697 0bbf F5B70000 		.long	0xb7f5
 8698 0bc3 09       		.uleb128 0x9
 8699 0bc4 F5B70000 		.long	0xb7f5
 8700 0bc8 00       		.byte	0
 8701 0bc9 1E       		.uleb128 0x1e
 8702 0bca 00000000 		.long	.LASF95
GAS LISTING /tmp/ccJUMvuF.s 			page 454


 8703 0bce 25       		.byte	0x25
 8704 0bcf 2102     		.value	0x221
 8705 0bd1 00000000 		.long	.LASF96
 8706 0bd5 80C00000 		.long	0xc080
 8707 0bd9 ED0B0000 		.long	0xbed
 8708 0bdd 09       		.uleb128 0x9
 8709 0bde 090A0000 		.long	0xa09
 8710 0be2 09       		.uleb128 0x9
 8711 0be3 090A0000 		.long	0xa09
 8712 0be7 09       		.uleb128 0x9
 8713 0be8 F5B70000 		.long	0xb7f5
 8714 0bec 00       		.byte	0
 8715 0bed 0A       		.uleb128 0xa
 8716 0bee 00000000 		.long	.LASF97
 8717 0bf2 08       		.byte	0x8
 8718 0bf3 ED       		.byte	0xed
 8719 0bf4 00000000 		.long	.LASF98
 8720 0bf8 000C0000 		.long	0xc00
 8721 0bfc 0B0C0000 		.long	0xc0b
 8722 0c00 08       		.uleb128 0x8
 8723 0c01 80C00000 		.long	0xc080
 8724 0c05 09       		.uleb128 0x9
 8725 0c06 F5B70000 		.long	0xb7f5
 8726 0c0a 00       		.byte	0
 8727 0c0b 2B       		.uleb128 0x2b
 8728 0c0c 00000000 		.long	.LASF99
 8729 0c10 25       		.byte	0x25
 8730 0c11 BC01     		.value	0x1bc
 8731 0c13 00000000 		.long	.LASF100
 8732 0c17 1F0C0000 		.long	0xc1f
 8733 0c1b 2A0C0000 		.long	0xc2a
 8734 0c1f 08       		.uleb128 0x8
 8735 0c20 80C00000 		.long	0xc080
 8736 0c24 09       		.uleb128 0x9
 8737 0c25 F5B70000 		.long	0xb7f5
 8738 0c29 00       		.byte	0
 8739 0c2a 2C       		.uleb128 0x2c
 8740 0c2b 00000000 		.long	.LASF101
 8741 0c2f 08       		.byte	0x8
 8742 0c30 0201     		.value	0x102
 8743 0c32 00000000 		.long	.LASF105
 8744 0c36 F0B10000 		.long	0xb1f0
 8745 0c3a 420C0000 		.long	0xc42
 8746 0c3e 480C0000 		.long	0xc48
 8747 0c42 08       		.uleb128 0x8
 8748 0c43 80C00000 		.long	0xc080
 8749 0c47 00       		.byte	0
 8750 0c48 2D       		.uleb128 0x2d
 8751 0c49 00000000 		.long	.LASF102
 8752 0c4d 25       		.byte	0x25
 8753 0c4e 6F02     		.value	0x26f
 8754 0c50 00000000 		.long	.LASF103
 8755 0c54 F0B10000 		.long	0xb1f0
 8756 0c58 5C0C0000 		.long	0xc5c
 8757 0c5c 08       		.uleb128 0x8
 8758 0c5d 80C00000 		.long	0xc080
 8759 0c61 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 455


 8760 0c62 F5B70000 		.long	0xb7f5
 8761 0c66 09       		.uleb128 0x9
 8762 0c67 090A0000 		.long	0xa09
 8763 0c6b 00       		.byte	0
 8764 0c6c 00       		.byte	0
 8765 0c6d 2C       		.uleb128 0x2c
 8766 0c6e 00000000 		.long	.LASF104
 8767 0c72 08       		.byte	0x8
 8768 0c73 2401     		.value	0x124
 8769 0c75 00000000 		.long	.LASF106
 8770 0c79 F0B10000 		.long	0xb1f0
 8771 0c7d 850C0000 		.long	0xc85
 8772 0c81 8B0C0000 		.long	0xc8b
 8773 0c85 08       		.uleb128 0x8
 8774 0c86 74C00000 		.long	0xc074
 8775 0c8a 00       		.byte	0
 8776 0c8b 2C       		.uleb128 0x2c
 8777 0c8c 00000000 		.long	.LASF104
 8778 0c90 08       		.byte	0x8
 8779 0c91 2801     		.value	0x128
 8780 0c93 00000000 		.long	.LASF107
 8781 0c97 F0B10000 		.long	0xb1f0
 8782 0c9b A30C0000 		.long	0xca3
 8783 0c9f AE0C0000 		.long	0xcae
 8784 0ca3 08       		.uleb128 0x8
 8785 0ca4 7AC00000 		.long	0xc07a
 8786 0ca8 09       		.uleb128 0x9
 8787 0ca9 F0B10000 		.long	0xb1f0
 8788 0cad 00       		.byte	0
 8789 0cae 2C       		.uleb128 0x2c
 8790 0caf 00000000 		.long	.LASF108
 8791 0cb3 08       		.byte	0x8
 8792 0cb4 2C01     		.value	0x12c
 8793 0cb6 00000000 		.long	.LASF109
 8794 0cba 80C00000 		.long	0xc080
 8795 0cbe C60C0000 		.long	0xcc6
 8796 0cc2 CC0C0000 		.long	0xccc
 8797 0cc6 08       		.uleb128 0x8
 8798 0cc7 74C00000 		.long	0xc074
 8799 0ccb 00       		.byte	0
 8800 0ccc 2C       		.uleb128 0x2c
 8801 0ccd 00000000 		.long	.LASF110
 8802 0cd1 08       		.byte	0x8
 8803 0cd2 3201     		.value	0x132
 8804 0cd4 00000000 		.long	.LASF111
 8805 0cd8 580A0000 		.long	0xa58
 8806 0cdc E40C0000 		.long	0xce4
 8807 0ce0 EA0C0000 		.long	0xcea
 8808 0ce4 08       		.uleb128 0x8
 8809 0ce5 74C00000 		.long	0xc074
 8810 0ce9 00       		.byte	0
 8811 0cea 2C       		.uleb128 0x2c
 8812 0ceb 00000000 		.long	.LASF112
 8813 0cef 08       		.byte	0x8
 8814 0cf0 3601     		.value	0x136
 8815 0cf2 00000000 		.long	.LASF113
 8816 0cf6 580A0000 		.long	0xa58
GAS LISTING /tmp/ccJUMvuF.s 			page 456


 8817 0cfa 020D0000 		.long	0xd02
 8818 0cfe 080D0000 		.long	0xd08
 8819 0d02 08       		.uleb128 0x8
 8820 0d03 74C00000 		.long	0xc074
 8821 0d07 00       		.byte	0
 8822 0d08 2B       		.uleb128 0x2b
 8823 0d09 00000000 		.long	.LASF114
 8824 0d0d 08       		.byte	0x8
 8825 0d0e 3A01     		.value	0x13a
 8826 0d10 00000000 		.long	.LASF115
 8827 0d14 1C0D0000 		.long	0xd1c
 8828 0d18 220D0000 		.long	0xd22
 8829 0d1c 08       		.uleb128 0x8
 8830 0d1d 7AC00000 		.long	0xc07a
 8831 0d21 00       		.byte	0
 8832 0d22 2C       		.uleb128 0x2c
 8833 0d23 00000000 		.long	.LASF116
 8834 0d27 08       		.byte	0x8
 8835 0d28 4101     		.value	0x141
 8836 0d2a 00000000 		.long	.LASF117
 8837 0d2e 090A0000 		.long	0xa09
 8838 0d32 3A0D0000 		.long	0xd3a
 8839 0d36 4A0D0000 		.long	0xd4a
 8840 0d3a 08       		.uleb128 0x8
 8841 0d3b 74C00000 		.long	0xc074
 8842 0d3f 09       		.uleb128 0x9
 8843 0d40 090A0000 		.long	0xa09
 8844 0d44 09       		.uleb128 0x9
 8845 0d45 CEAE0000 		.long	0xaece
 8846 0d49 00       		.byte	0
 8847 0d4a 2B       		.uleb128 0x2b
 8848 0d4b 00000000 		.long	.LASF118
 8849 0d4f 08       		.byte	0x8
 8850 0d50 4B01     		.value	0x14b
 8851 0d52 00000000 		.long	.LASF119
 8852 0d56 5E0D0000 		.long	0xd5e
 8853 0d5a 730D0000 		.long	0xd73
 8854 0d5e 08       		.uleb128 0x8
 8855 0d5f 74C00000 		.long	0xc074
 8856 0d63 09       		.uleb128 0x9
 8857 0d64 090A0000 		.long	0xa09
 8858 0d68 09       		.uleb128 0x9
 8859 0d69 090A0000 		.long	0xa09
 8860 0d6d 09       		.uleb128 0x9
 8861 0d6e CEAE0000 		.long	0xaece
 8862 0d72 00       		.byte	0
 8863 0d73 2C       		.uleb128 0x2c
 8864 0d74 00000000 		.long	.LASF120
 8865 0d78 08       		.byte	0x8
 8866 0d79 5301     		.value	0x153
 8867 0d7b 00000000 		.long	.LASF121
 8868 0d7f 090A0000 		.long	0xa09
 8869 0d83 8B0D0000 		.long	0xd8b
 8870 0d87 9B0D0000 		.long	0xd9b
 8871 0d8b 08       		.uleb128 0x8
 8872 0d8c 74C00000 		.long	0xc074
 8873 0d90 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 457


 8874 0d91 090A0000 		.long	0xa09
 8875 0d95 09       		.uleb128 0x9
 8876 0d96 090A0000 		.long	0xa09
 8877 0d9a 00       		.byte	0
 8878 0d9b 2C       		.uleb128 0x2c
 8879 0d9c 00000000 		.long	.LASF122
 8880 0da0 08       		.byte	0x8
 8881 0da1 5B01     		.value	0x15b
 8882 0da3 00000000 		.long	.LASF123
 8883 0da7 30930000 		.long	0x9330
 8884 0dab B30D0000 		.long	0xdb3
 8885 0daf BE0D0000 		.long	0xdbe
 8886 0db3 08       		.uleb128 0x8
 8887 0db4 74C00000 		.long	0xc074
 8888 0db8 09       		.uleb128 0x9
 8889 0db9 CEAE0000 		.long	0xaece
 8890 0dbd 00       		.byte	0
 8891 0dbe 2E       		.uleb128 0x2e
 8892 0dbf 00000000 		.long	.LASF124
 8893 0dc3 08       		.byte	0x8
 8894 0dc4 6401     		.value	0x164
 8895 0dc6 00000000 		.long	.LASF126
 8896 0dca DE0D0000 		.long	0xdde
 8897 0dce 09       		.uleb128 0x9
 8898 0dcf F0B10000 		.long	0xb1f0
 8899 0dd3 09       		.uleb128 0x9
 8900 0dd4 CEAE0000 		.long	0xaece
 8901 0dd8 09       		.uleb128 0x9
 8902 0dd9 090A0000 		.long	0xa09
 8903 0ddd 00       		.byte	0
 8904 0dde 2E       		.uleb128 0x2e
 8905 0ddf 00000000 		.long	.LASF127
 8906 0de3 08       		.byte	0x8
 8907 0de4 6D01     		.value	0x16d
 8908 0de6 00000000 		.long	.LASF128
 8909 0dea FE0D0000 		.long	0xdfe
 8910 0dee 09       		.uleb128 0x9
 8911 0def F0B10000 		.long	0xb1f0
 8912 0df3 09       		.uleb128 0x9
 8913 0df4 CEAE0000 		.long	0xaece
 8914 0df8 09       		.uleb128 0x9
 8915 0df9 090A0000 		.long	0xa09
 8916 0dfd 00       		.byte	0
 8917 0dfe 2E       		.uleb128 0x2e
 8918 0dff 00000000 		.long	.LASF129
 8919 0e03 08       		.byte	0x8
 8920 0e04 7601     		.value	0x176
 8921 0e06 00000000 		.long	.LASF130
 8922 0e0a 1E0E0000 		.long	0xe1e
 8923 0e0e 09       		.uleb128 0x9
 8924 0e0f F0B10000 		.long	0xb1f0
 8925 0e13 09       		.uleb128 0x9
 8926 0e14 090A0000 		.long	0xa09
 8927 0e18 09       		.uleb128 0x9
 8928 0e19 ACAE0000 		.long	0xaeac
 8929 0e1d 00       		.byte	0
 8930 0e1e 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccJUMvuF.s 			page 458


 8931 0e1f 00000000 		.long	.LASF131
 8932 0e23 08       		.byte	0x8
 8933 0e24 8A01     		.value	0x18a
 8934 0e26 00000000 		.long	.LASF132
 8935 0e2a 3E0E0000 		.long	0xe3e
 8936 0e2e 09       		.uleb128 0x9
 8937 0e2f F0B10000 		.long	0xb1f0
 8938 0e33 09       		.uleb128 0x9
 8939 0e34 580A0000 		.long	0xa58
 8940 0e38 09       		.uleb128 0x9
 8941 0e39 580A0000 		.long	0xa58
 8942 0e3d 00       		.byte	0
 8943 0e3e 2E       		.uleb128 0x2e
 8944 0e3f 00000000 		.long	.LASF131
 8945 0e43 08       		.byte	0x8
 8946 0e44 8E01     		.value	0x18e
 8947 0e46 00000000 		.long	.LASF133
 8948 0e4a 5E0E0000 		.long	0xe5e
 8949 0e4e 09       		.uleb128 0x9
 8950 0e4f F0B10000 		.long	0xb1f0
 8951 0e53 09       		.uleb128 0x9
 8952 0e54 640A0000 		.long	0xa64
 8953 0e58 09       		.uleb128 0x9
 8954 0e59 640A0000 		.long	0xa64
 8955 0e5d 00       		.byte	0
 8956 0e5e 2E       		.uleb128 0x2e
 8957 0e5f 00000000 		.long	.LASF131
 8958 0e63 08       		.byte	0x8
 8959 0e64 9301     		.value	0x193
 8960 0e66 00000000 		.long	.LASF134
 8961 0e6a 7E0E0000 		.long	0xe7e
 8962 0e6e 09       		.uleb128 0x9
 8963 0e6f F0B10000 		.long	0xb1f0
 8964 0e73 09       		.uleb128 0x9
 8965 0e74 F0B10000 		.long	0xb1f0
 8966 0e78 09       		.uleb128 0x9
 8967 0e79 F0B10000 		.long	0xb1f0
 8968 0e7d 00       		.byte	0
 8969 0e7e 2E       		.uleb128 0x2e
 8970 0e7f 00000000 		.long	.LASF131
 8971 0e83 08       		.byte	0x8
 8972 0e84 9701     		.value	0x197
 8973 0e86 00000000 		.long	.LASF135
 8974 0e8a 9E0E0000 		.long	0xe9e
 8975 0e8e 09       		.uleb128 0x9
 8976 0e8f F0B10000 		.long	0xb1f0
 8977 0e93 09       		.uleb128 0x9
 8978 0e94 CEAE0000 		.long	0xaece
 8979 0e98 09       		.uleb128 0x9
 8980 0e99 CEAE0000 		.long	0xaece
 8981 0e9d 00       		.byte	0
 8982 0e9e 1E       		.uleb128 0x1e
 8983 0e9f 00000000 		.long	.LASF136
 8984 0ea3 08       		.byte	0x8
 8985 0ea4 9C01     		.value	0x19c
 8986 0ea6 00000000 		.long	.LASF137
 8987 0eaa 28930000 		.long	0x9328
GAS LISTING /tmp/ccJUMvuF.s 			page 459


 8988 0eae BD0E0000 		.long	0xebd
 8989 0eb2 09       		.uleb128 0x9
 8990 0eb3 090A0000 		.long	0xa09
 8991 0eb7 09       		.uleb128 0x9
 8992 0eb8 090A0000 		.long	0xa09
 8993 0ebc 00       		.byte	0
 8994 0ebd 2B       		.uleb128 0x2b
 8995 0ebe 00000000 		.long	.LASF138
 8996 0ec2 08       		.byte	0x8
 8997 0ec3 A901     		.value	0x1a9
 8998 0ec5 00000000 		.long	.LASF139
 8999 0ec9 D10E0000 		.long	0xed1
 9000 0ecd E60E0000 		.long	0xee6
 9001 0ed1 08       		.uleb128 0x8
 9002 0ed2 7AC00000 		.long	0xc07a
 9003 0ed6 09       		.uleb128 0x9
 9004 0ed7 090A0000 		.long	0xa09
 9005 0edb 09       		.uleb128 0x9
 9006 0edc 090A0000 		.long	0xa09
 9007 0ee0 09       		.uleb128 0x9
 9008 0ee1 090A0000 		.long	0xa09
 9009 0ee5 00       		.byte	0
 9010 0ee6 2B       		.uleb128 0x2b
 9011 0ee7 00000000 		.long	.LASF140
 9012 0eeb 08       		.byte	0x8
 9013 0eec AC01     		.value	0x1ac
 9014 0eee 00000000 		.long	.LASF141
 9015 0ef2 FA0E0000 		.long	0xefa
 9016 0ef6 000F0000 		.long	0xf00
 9017 0efa 08       		.uleb128 0x8
 9018 0efb 7AC00000 		.long	0xc07a
 9019 0eff 00       		.byte	0
 9020 0f00 2F       		.uleb128 0x2f
 9021 0f01 00000000 		.long	.LASF80
 9022 0f05 08       		.byte	0x8
 9023 0f06 AF01     		.value	0x1af
 9024 0f08 00000000 		.long	.LASF1792
 9025 0f0c 86C00000 		.long	0xc086
 9026 0f10 30       		.uleb128 0x30
 9027 0f11 00000000 		.long	.LASF142
 9028 0f15 08       		.byte	0x8
 9029 0f16 BA01     		.value	0x1ba
 9030 0f18 01       		.byte	0x1
 9031 0f19 210F0000 		.long	0xf21
 9032 0f1d 270F0000 		.long	0xf27
 9033 0f21 08       		.uleb128 0x8
 9034 0f22 7AC00000 		.long	0xc07a
 9035 0f26 00       		.byte	0
 9036 0f27 31       		.uleb128 0x31
 9037 0f28 00000000 		.long	.LASF142
 9038 0f2c 08       		.byte	0x8
 9039 0f2d C501     		.value	0x1c5
 9040 0f2f 01       		.byte	0x1
 9041 0f30 380F0000 		.long	0xf38
 9042 0f34 430F0000 		.long	0xf43
 9043 0f38 08       		.uleb128 0x8
 9044 0f39 7AC00000 		.long	0xc07a
GAS LISTING /tmp/ccJUMvuF.s 			page 460


 9045 0f3d 09       		.uleb128 0x9
 9046 0f3e F5B70000 		.long	0xb7f5
 9047 0f42 00       		.byte	0
 9048 0f43 30       		.uleb128 0x30
 9049 0f44 00000000 		.long	.LASF142
 9050 0f48 08       		.byte	0x8
 9051 0f49 CC01     		.value	0x1cc
 9052 0f4b 01       		.byte	0x1
 9053 0f4c 540F0000 		.long	0xf54
 9054 0f50 5F0F0000 		.long	0xf5f
 9055 0f54 08       		.uleb128 0x8
 9056 0f55 7AC00000 		.long	0xc07a
 9057 0f59 09       		.uleb128 0x9
 9058 0f5a 8CC00000 		.long	0xc08c
 9059 0f5e 00       		.byte	0
 9060 0f5f 30       		.uleb128 0x30
 9061 0f60 00000000 		.long	.LASF142
 9062 0f64 08       		.byte	0x8
 9063 0f65 D301     		.value	0x1d3
 9064 0f67 01       		.byte	0x1
 9065 0f68 700F0000 		.long	0xf70
 9066 0f6c 850F0000 		.long	0xf85
 9067 0f70 08       		.uleb128 0x8
 9068 0f71 7AC00000 		.long	0xc07a
 9069 0f75 09       		.uleb128 0x9
 9070 0f76 8CC00000 		.long	0xc08c
 9071 0f7a 09       		.uleb128 0x9
 9072 0f7b 090A0000 		.long	0xa09
 9073 0f7f 09       		.uleb128 0x9
 9074 0f80 090A0000 		.long	0xa09
 9075 0f84 00       		.byte	0
 9076 0f85 30       		.uleb128 0x30
 9077 0f86 00000000 		.long	.LASF142
 9078 0f8a 08       		.byte	0x8
 9079 0f8b DC01     		.value	0x1dc
 9080 0f8d 01       		.byte	0x1
 9081 0f8e 960F0000 		.long	0xf96
 9082 0f92 B00F0000 		.long	0xfb0
 9083 0f96 08       		.uleb128 0x8
 9084 0f97 7AC00000 		.long	0xc07a
 9085 0f9b 09       		.uleb128 0x9
 9086 0f9c 8CC00000 		.long	0xc08c
 9087 0fa0 09       		.uleb128 0x9
 9088 0fa1 090A0000 		.long	0xa09
 9089 0fa5 09       		.uleb128 0x9
 9090 0fa6 090A0000 		.long	0xa09
 9091 0faa 09       		.uleb128 0x9
 9092 0fab F5B70000 		.long	0xb7f5
 9093 0faf 00       		.byte	0
 9094 0fb0 30       		.uleb128 0x30
 9095 0fb1 00000000 		.long	.LASF142
 9096 0fb5 08       		.byte	0x8
 9097 0fb6 E801     		.value	0x1e8
 9098 0fb8 01       		.byte	0x1
 9099 0fb9 C10F0000 		.long	0xfc1
 9100 0fbd D60F0000 		.long	0xfd6
 9101 0fc1 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 461


 9102 0fc2 7AC00000 		.long	0xc07a
 9103 0fc6 09       		.uleb128 0x9
 9104 0fc7 CEAE0000 		.long	0xaece
 9105 0fcb 09       		.uleb128 0x9
 9106 0fcc 090A0000 		.long	0xa09
 9107 0fd0 09       		.uleb128 0x9
 9108 0fd1 F5B70000 		.long	0xb7f5
 9109 0fd5 00       		.byte	0
 9110 0fd6 30       		.uleb128 0x30
 9111 0fd7 00000000 		.long	.LASF142
 9112 0fdb 08       		.byte	0x8
 9113 0fdc EF01     		.value	0x1ef
 9114 0fde 01       		.byte	0x1
 9115 0fdf E70F0000 		.long	0xfe7
 9116 0fe3 F70F0000 		.long	0xff7
 9117 0fe7 08       		.uleb128 0x8
 9118 0fe8 7AC00000 		.long	0xc07a
 9119 0fec 09       		.uleb128 0x9
 9120 0fed CEAE0000 		.long	0xaece
 9121 0ff1 09       		.uleb128 0x9
 9122 0ff2 F5B70000 		.long	0xb7f5
 9123 0ff6 00       		.byte	0
 9124 0ff7 30       		.uleb128 0x30
 9125 0ff8 00000000 		.long	.LASF142
 9126 0ffc 08       		.byte	0x8
 9127 0ffd F601     		.value	0x1f6
 9128 0fff 01       		.byte	0x1
 9129 1000 08100000 		.long	0x1008
 9130 1004 1D100000 		.long	0x101d
 9131 1008 08       		.uleb128 0x8
 9132 1009 7AC00000 		.long	0xc07a
 9133 100d 09       		.uleb128 0x9
 9134 100e 090A0000 		.long	0xa09
 9135 1012 09       		.uleb128 0x9
 9136 1013 ACAE0000 		.long	0xaeac
 9137 1017 09       		.uleb128 0x9
 9138 1018 F5B70000 		.long	0xb7f5
 9139 101c 00       		.byte	0
 9140 101d 30       		.uleb128 0x30
 9141 101e 00000000 		.long	.LASF142
 9142 1022 08       		.byte	0x8
 9143 1023 0002     		.value	0x200
 9144 1025 01       		.byte	0x1
 9145 1026 2E100000 		.long	0x102e
 9146 102a 39100000 		.long	0x1039
 9147 102e 08       		.uleb128 0x8
 9148 102f 7AC00000 		.long	0xc07a
 9149 1033 09       		.uleb128 0x9
 9150 1034 92C00000 		.long	0xc092
 9151 1038 00       		.byte	0
 9152 1039 30       		.uleb128 0x30
 9153 103a 00000000 		.long	.LASF142
 9154 103e 08       		.byte	0x8
 9155 103f 1202     		.value	0x212
 9156 1041 01       		.byte	0x1
 9157 1042 4A100000 		.long	0x104a
 9158 1046 5A100000 		.long	0x105a
GAS LISTING /tmp/ccJUMvuF.s 			page 462


 9159 104a 08       		.uleb128 0x8
 9160 104b 7AC00000 		.long	0xc07a
 9161 104f 09       		.uleb128 0x9
 9162 1050 DF220000 		.long	0x22df
 9163 1054 09       		.uleb128 0x9
 9164 1055 F5B70000 		.long	0xb7f5
 9165 1059 00       		.byte	0
 9166 105a 30       		.uleb128 0x30
 9167 105b 00000000 		.long	.LASF143
 9168 105f 08       		.byte	0x8
 9169 1060 2202     		.value	0x222
 9170 1062 01       		.byte	0x1
 9171 1063 6B100000 		.long	0x106b
 9172 1067 76100000 		.long	0x1076
 9173 106b 08       		.uleb128 0x8
 9174 106c 7AC00000 		.long	0xc07a
 9175 1070 08       		.uleb128 0x8
 9176 1071 28930000 		.long	0x9328
 9177 1075 00       		.byte	0
 9178 1076 32       		.uleb128 0x32
 9179 1077 00000000 		.long	.LASF8
 9180 107b 08       		.byte	0x8
 9181 107c 2A02     		.value	0x22a
 9182 107e 00000000 		.long	.LASF144
 9183 1082 99C00000 		.long	0xc099
 9184 1086 01       		.byte	0x1
 9185 1087 8F100000 		.long	0x108f
 9186 108b 9A100000 		.long	0x109a
 9187 108f 08       		.uleb128 0x8
 9188 1090 7AC00000 		.long	0xc07a
 9189 1094 09       		.uleb128 0x9
 9190 1095 8CC00000 		.long	0xc08c
 9191 1099 00       		.byte	0
 9192 109a 32       		.uleb128 0x32
 9193 109b 00000000 		.long	.LASF8
 9194 109f 08       		.byte	0x8
 9195 10a0 3202     		.value	0x232
 9196 10a2 00000000 		.long	.LASF145
 9197 10a6 99C00000 		.long	0xc099
 9198 10aa 01       		.byte	0x1
 9199 10ab B3100000 		.long	0x10b3
 9200 10af BE100000 		.long	0x10be
 9201 10b3 08       		.uleb128 0x8
 9202 10b4 7AC00000 		.long	0xc07a
 9203 10b8 09       		.uleb128 0x9
 9204 10b9 CEAE0000 		.long	0xaece
 9205 10bd 00       		.byte	0
 9206 10be 32       		.uleb128 0x32
 9207 10bf 00000000 		.long	.LASF8
 9208 10c3 08       		.byte	0x8
 9209 10c4 3D02     		.value	0x23d
 9210 10c6 00000000 		.long	.LASF146
 9211 10ca 99C00000 		.long	0xc099
 9212 10ce 01       		.byte	0x1
 9213 10cf D7100000 		.long	0x10d7
 9214 10d3 E2100000 		.long	0x10e2
 9215 10d7 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 463


 9216 10d8 7AC00000 		.long	0xc07a
 9217 10dc 09       		.uleb128 0x9
 9218 10dd ACAE0000 		.long	0xaeac
 9219 10e1 00       		.byte	0
 9220 10e2 32       		.uleb128 0x32
 9221 10e3 00000000 		.long	.LASF8
 9222 10e7 08       		.byte	0x8
 9223 10e8 4D02     		.value	0x24d
 9224 10ea 00000000 		.long	.LASF147
 9225 10ee 99C00000 		.long	0xc099
 9226 10f2 01       		.byte	0x1
 9227 10f3 FB100000 		.long	0x10fb
 9228 10f7 06110000 		.long	0x1106
 9229 10fb 08       		.uleb128 0x8
 9230 10fc 7AC00000 		.long	0xc07a
 9231 1100 09       		.uleb128 0x9
 9232 1101 92C00000 		.long	0xc092
 9233 1105 00       		.byte	0
 9234 1106 32       		.uleb128 0x32
 9235 1107 00000000 		.long	.LASF8
 9236 110b 08       		.byte	0x8
 9237 110c 5902     		.value	0x259
 9238 110e 00000000 		.long	.LASF148
 9239 1112 99C00000 		.long	0xc099
 9240 1116 01       		.byte	0x1
 9241 1117 1F110000 		.long	0x111f
 9242 111b 2A110000 		.long	0x112a
 9243 111f 08       		.uleb128 0x8
 9244 1120 7AC00000 		.long	0xc07a
 9245 1124 09       		.uleb128 0x9
 9246 1125 DF220000 		.long	0x22df
 9247 1129 00       		.byte	0
 9248 112a 32       		.uleb128 0x32
 9249 112b 00000000 		.long	.LASF149
 9250 112f 08       		.byte	0x8
 9251 1130 6602     		.value	0x266
 9252 1132 00000000 		.long	.LASF150
 9253 1136 580A0000 		.long	0xa58
 9254 113a 01       		.byte	0x1
 9255 113b 43110000 		.long	0x1143
 9256 113f 49110000 		.long	0x1149
 9257 1143 08       		.uleb128 0x8
 9258 1144 7AC00000 		.long	0xc07a
 9259 1148 00       		.byte	0
 9260 1149 32       		.uleb128 0x32
 9261 114a 00000000 		.long	.LASF149
 9262 114e 08       		.byte	0x8
 9263 114f 7102     		.value	0x271
 9264 1151 00000000 		.long	.LASF151
 9265 1155 640A0000 		.long	0xa64
 9266 1159 01       		.byte	0x1
 9267 115a 62110000 		.long	0x1162
 9268 115e 68110000 		.long	0x1168
 9269 1162 08       		.uleb128 0x8
 9270 1163 74C00000 		.long	0xc074
 9271 1167 00       		.byte	0
 9272 1168 33       		.uleb128 0x33
GAS LISTING /tmp/ccJUMvuF.s 			page 464


 9273 1169 656E6400 		.string	"end"
 9274 116d 08       		.byte	0x8
 9275 116e 7902     		.value	0x279
 9276 1170 00000000 		.long	.LASF152
 9277 1174 580A0000 		.long	0xa58
 9278 1178 01       		.byte	0x1
 9279 1179 81110000 		.long	0x1181
 9280 117d 87110000 		.long	0x1187
 9281 1181 08       		.uleb128 0x8
 9282 1182 7AC00000 		.long	0xc07a
 9283 1186 00       		.byte	0
 9284 1187 33       		.uleb128 0x33
 9285 1188 656E6400 		.string	"end"
 9286 118c 08       		.byte	0x8
 9287 118d 8402     		.value	0x284
 9288 118f 00000000 		.long	.LASF153
 9289 1193 640A0000 		.long	0xa64
 9290 1197 01       		.byte	0x1
 9291 1198 A0110000 		.long	0x11a0
 9292 119c A6110000 		.long	0x11a6
 9293 11a0 08       		.uleb128 0x8
 9294 11a1 74C00000 		.long	0xc074
 9295 11a5 00       		.byte	0
 9296 11a6 32       		.uleb128 0x32
 9297 11a7 00000000 		.long	.LASF154
 9298 11ab 08       		.byte	0x8
 9299 11ac 8D02     		.value	0x28d
 9300 11ae 00000000 		.long	.LASF155
 9301 11b2 7C0A0000 		.long	0xa7c
 9302 11b6 01       		.byte	0x1
 9303 11b7 BF110000 		.long	0x11bf
 9304 11bb C5110000 		.long	0x11c5
 9305 11bf 08       		.uleb128 0x8
 9306 11c0 7AC00000 		.long	0xc07a
 9307 11c4 00       		.byte	0
 9308 11c5 32       		.uleb128 0x32
 9309 11c6 00000000 		.long	.LASF154
 9310 11ca 08       		.byte	0x8
 9311 11cb 9602     		.value	0x296
 9312 11cd 00000000 		.long	.LASF156
 9313 11d1 700A0000 		.long	0xa70
 9314 11d5 01       		.byte	0x1
 9315 11d6 DE110000 		.long	0x11de
 9316 11da E4110000 		.long	0x11e4
 9317 11de 08       		.uleb128 0x8
 9318 11df 74C00000 		.long	0xc074
 9319 11e3 00       		.byte	0
 9320 11e4 32       		.uleb128 0x32
 9321 11e5 00000000 		.long	.LASF157
 9322 11e9 08       		.byte	0x8
 9323 11ea 9F02     		.value	0x29f
 9324 11ec 00000000 		.long	.LASF158
 9325 11f0 7C0A0000 		.long	0xa7c
 9326 11f4 01       		.byte	0x1
 9327 11f5 FD110000 		.long	0x11fd
 9328 11f9 03120000 		.long	0x1203
 9329 11fd 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 465


 9330 11fe 7AC00000 		.long	0xc07a
 9331 1202 00       		.byte	0
 9332 1203 32       		.uleb128 0x32
 9333 1204 00000000 		.long	.LASF157
 9334 1208 08       		.byte	0x8
 9335 1209 A802     		.value	0x2a8
 9336 120b 00000000 		.long	.LASF159
 9337 120f 700A0000 		.long	0xa70
 9338 1213 01       		.byte	0x1
 9339 1214 1C120000 		.long	0x121c
 9340 1218 22120000 		.long	0x1222
 9341 121c 08       		.uleb128 0x8
 9342 121d 74C00000 		.long	0xc074
 9343 1221 00       		.byte	0
 9344 1222 32       		.uleb128 0x32
 9345 1223 00000000 		.long	.LASF160
 9346 1227 08       		.byte	0x8
 9347 1228 B102     		.value	0x2b1
 9348 122a 00000000 		.long	.LASF161
 9349 122e 640A0000 		.long	0xa64
 9350 1232 01       		.byte	0x1
 9351 1233 3B120000 		.long	0x123b
 9352 1237 41120000 		.long	0x1241
 9353 123b 08       		.uleb128 0x8
 9354 123c 74C00000 		.long	0xc074
 9355 1240 00       		.byte	0
 9356 1241 32       		.uleb128 0x32
 9357 1242 00000000 		.long	.LASF162
 9358 1246 08       		.byte	0x8
 9359 1247 B902     		.value	0x2b9
 9360 1249 00000000 		.long	.LASF163
 9361 124d 640A0000 		.long	0xa64
 9362 1251 01       		.byte	0x1
 9363 1252 5A120000 		.long	0x125a
 9364 1256 60120000 		.long	0x1260
 9365 125a 08       		.uleb128 0x8
 9366 125b 74C00000 		.long	0xc074
 9367 125f 00       		.byte	0
 9368 1260 32       		.uleb128 0x32
 9369 1261 00000000 		.long	.LASF164
 9370 1265 08       		.byte	0x8
 9371 1266 C202     		.value	0x2c2
 9372 1268 00000000 		.long	.LASF165
 9373 126c 700A0000 		.long	0xa70
 9374 1270 01       		.byte	0x1
 9375 1271 79120000 		.long	0x1279
 9376 1275 7F120000 		.long	0x127f
 9377 1279 08       		.uleb128 0x8
 9378 127a 74C00000 		.long	0xc074
 9379 127e 00       		.byte	0
 9380 127f 32       		.uleb128 0x32
 9381 1280 00000000 		.long	.LASF166
 9382 1284 08       		.byte	0x8
 9383 1285 CB02     		.value	0x2cb
 9384 1287 00000000 		.long	.LASF167
 9385 128b 700A0000 		.long	0xa70
 9386 128f 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 466


 9387 1290 98120000 		.long	0x1298
 9388 1294 9E120000 		.long	0x129e
 9389 1298 08       		.uleb128 0x8
 9390 1299 74C00000 		.long	0xc074
 9391 129d 00       		.byte	0
 9392 129e 32       		.uleb128 0x32
 9393 129f 00000000 		.long	.LASF168
 9394 12a3 08       		.byte	0x8
 9395 12a4 D402     		.value	0x2d4
 9396 12a6 00000000 		.long	.LASF169
 9397 12aa 090A0000 		.long	0xa09
 9398 12ae 01       		.byte	0x1
 9399 12af B7120000 		.long	0x12b7
 9400 12b3 BD120000 		.long	0x12bd
 9401 12b7 08       		.uleb128 0x8
 9402 12b8 74C00000 		.long	0xc074
 9403 12bc 00       		.byte	0
 9404 12bd 32       		.uleb128 0x32
 9405 12be 00000000 		.long	.LASF35
 9406 12c2 08       		.byte	0x8
 9407 12c3 DA02     		.value	0x2da
 9408 12c5 00000000 		.long	.LASF170
 9409 12c9 090A0000 		.long	0xa09
 9410 12cd 01       		.byte	0x1
 9411 12ce D6120000 		.long	0x12d6
 9412 12d2 DC120000 		.long	0x12dc
 9413 12d6 08       		.uleb128 0x8
 9414 12d7 74C00000 		.long	0xc074
 9415 12db 00       		.byte	0
 9416 12dc 32       		.uleb128 0x32
 9417 12dd 00000000 		.long	.LASF171
 9418 12e1 08       		.byte	0x8
 9419 12e2 DF02     		.value	0x2df
 9420 12e4 00000000 		.long	.LASF172
 9421 12e8 090A0000 		.long	0xa09
 9422 12ec 01       		.byte	0x1
 9423 12ed F5120000 		.long	0x12f5
 9424 12f1 FB120000 		.long	0x12fb
 9425 12f5 08       		.uleb128 0x8
 9426 12f6 74C00000 		.long	0xc074
 9427 12fa 00       		.byte	0
 9428 12fb 34       		.uleb128 0x34
 9429 12fc 00000000 		.long	.LASF173
 9430 1300 08       		.byte	0x8
 9431 1301 ED02     		.value	0x2ed
 9432 1303 00000000 		.long	.LASF174
 9433 1307 01       		.byte	0x1
 9434 1308 10130000 		.long	0x1310
 9435 130c 20130000 		.long	0x1320
 9436 1310 08       		.uleb128 0x8
 9437 1311 7AC00000 		.long	0xc07a
 9438 1315 09       		.uleb128 0x9
 9439 1316 090A0000 		.long	0xa09
 9440 131a 09       		.uleb128 0x9
 9441 131b ACAE0000 		.long	0xaeac
 9442 131f 00       		.byte	0
 9443 1320 34       		.uleb128 0x34
GAS LISTING /tmp/ccJUMvuF.s 			page 467


 9444 1321 00000000 		.long	.LASF173
 9445 1325 08       		.byte	0x8
 9446 1326 FA02     		.value	0x2fa
 9447 1328 00000000 		.long	.LASF175
 9448 132c 01       		.byte	0x1
 9449 132d 35130000 		.long	0x1335
 9450 1331 40130000 		.long	0x1340
 9451 1335 08       		.uleb128 0x8
 9452 1336 7AC00000 		.long	0xc07a
 9453 133a 09       		.uleb128 0x9
 9454 133b 090A0000 		.long	0xa09
 9455 133f 00       		.byte	0
 9456 1340 34       		.uleb128 0x34
 9457 1341 00000000 		.long	.LASF176
 9458 1345 08       		.byte	0x8
 9459 1346 0003     		.value	0x300
 9460 1348 00000000 		.long	.LASF177
 9461 134c 01       		.byte	0x1
 9462 134d 55130000 		.long	0x1355
 9463 1351 5B130000 		.long	0x135b
 9464 1355 08       		.uleb128 0x8
 9465 1356 7AC00000 		.long	0xc07a
 9466 135a 00       		.byte	0
 9467 135b 32       		.uleb128 0x32
 9468 135c 00000000 		.long	.LASF178
 9469 1360 08       		.byte	0x8
 9470 1361 1103     		.value	0x311
 9471 1363 00000000 		.long	.LASF179
 9472 1367 090A0000 		.long	0xa09
 9473 136b 01       		.byte	0x1
 9474 136c 74130000 		.long	0x1374
 9475 1370 7A130000 		.long	0x137a
 9476 1374 08       		.uleb128 0x8
 9477 1375 74C00000 		.long	0xc074
 9478 1379 00       		.byte	0
 9479 137a 34       		.uleb128 0x34
 9480 137b 00000000 		.long	.LASF180
 9481 137f 08       		.byte	0x8
 9482 1380 2603     		.value	0x326
 9483 1382 00000000 		.long	.LASF181
 9484 1386 01       		.byte	0x1
 9485 1387 8F130000 		.long	0x138f
 9486 138b 9A130000 		.long	0x139a
 9487 138f 08       		.uleb128 0x8
 9488 1390 7AC00000 		.long	0xc07a
 9489 1394 09       		.uleb128 0x9
 9490 1395 090A0000 		.long	0xa09
 9491 1399 00       		.byte	0
 9492 139a 34       		.uleb128 0x34
 9493 139b 00000000 		.long	.LASF182
 9494 139f 08       		.byte	0x8
 9495 13a0 2D03     		.value	0x32d
 9496 13a2 00000000 		.long	.LASF183
 9497 13a6 01       		.byte	0x1
 9498 13a7 AF130000 		.long	0x13af
 9499 13ab B5130000 		.long	0x13b5
 9500 13af 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 468


 9501 13b0 7AC00000 		.long	0xc07a
 9502 13b4 00       		.byte	0
 9503 13b5 32       		.uleb128 0x32
 9504 13b6 00000000 		.long	.LASF184
 9505 13ba 08       		.byte	0x8
 9506 13bb 3503     		.value	0x335
 9507 13bd 00000000 		.long	.LASF185
 9508 13c1 30930000 		.long	0x9330
 9509 13c5 01       		.byte	0x1
 9510 13c6 CE130000 		.long	0x13ce
 9511 13ca D4130000 		.long	0x13d4
 9512 13ce 08       		.uleb128 0x8
 9513 13cf 74C00000 		.long	0xc074
 9514 13d3 00       		.byte	0
 9515 13d4 32       		.uleb128 0x32
 9516 13d5 00000000 		.long	.LASF186
 9517 13d9 08       		.byte	0x8
 9518 13da 4403     		.value	0x344
 9519 13dc 00000000 		.long	.LASF187
 9520 13e0 4C0A0000 		.long	0xa4c
 9521 13e4 01       		.byte	0x1
 9522 13e5 ED130000 		.long	0x13ed
 9523 13e9 F8130000 		.long	0x13f8
 9524 13ed 08       		.uleb128 0x8
 9525 13ee 74C00000 		.long	0xc074
 9526 13f2 09       		.uleb128 0x9
 9527 13f3 090A0000 		.long	0xa09
 9528 13f7 00       		.byte	0
 9529 13f8 32       		.uleb128 0x32
 9530 13f9 00000000 		.long	.LASF186
 9531 13fd 08       		.byte	0x8
 9532 13fe 5503     		.value	0x355
 9533 1400 00000000 		.long	.LASF188
 9534 1404 400A0000 		.long	0xa40
 9535 1408 01       		.byte	0x1
 9536 1409 11140000 		.long	0x1411
 9537 140d 1C140000 		.long	0x141c
 9538 1411 08       		.uleb128 0x8
 9539 1412 7AC00000 		.long	0xc07a
 9540 1416 09       		.uleb128 0x9
 9541 1417 090A0000 		.long	0xa09
 9542 141b 00       		.byte	0
 9543 141c 33       		.uleb128 0x33
 9544 141d 617400   		.string	"at"
 9545 1420 08       		.byte	0x8
 9546 1421 6B03     		.value	0x36b
 9547 1423 00000000 		.long	.LASF189
 9548 1427 4C0A0000 		.long	0xa4c
 9549 142b 01       		.byte	0x1
 9550 142c 34140000 		.long	0x1434
 9551 1430 3F140000 		.long	0x143f
 9552 1434 08       		.uleb128 0x8
 9553 1435 74C00000 		.long	0xc074
 9554 1439 09       		.uleb128 0x9
 9555 143a 090A0000 		.long	0xa09
 9556 143e 00       		.byte	0
 9557 143f 33       		.uleb128 0x33
GAS LISTING /tmp/ccJUMvuF.s 			page 469


 9558 1440 617400   		.string	"at"
 9559 1443 08       		.byte	0x8
 9560 1444 8103     		.value	0x381
 9561 1446 00000000 		.long	.LASF190
 9562 144a 400A0000 		.long	0xa40
 9563 144e 01       		.byte	0x1
 9564 144f 57140000 		.long	0x1457
 9565 1453 62140000 		.long	0x1462
 9566 1457 08       		.uleb128 0x8
 9567 1458 7AC00000 		.long	0xc07a
 9568 145c 09       		.uleb128 0x9
 9569 145d 090A0000 		.long	0xa09
 9570 1461 00       		.byte	0
 9571 1462 32       		.uleb128 0x32
 9572 1463 00000000 		.long	.LASF191
 9573 1467 08       		.byte	0x8
 9574 1468 9203     		.value	0x392
 9575 146a 00000000 		.long	.LASF192
 9576 146e 400A0000 		.long	0xa40
 9577 1472 01       		.byte	0x1
 9578 1473 7B140000 		.long	0x147b
 9579 1477 81140000 		.long	0x1481
 9580 147b 08       		.uleb128 0x8
 9581 147c 7AC00000 		.long	0xc07a
 9582 1480 00       		.byte	0
 9583 1481 32       		.uleb128 0x32
 9584 1482 00000000 		.long	.LASF191
 9585 1486 08       		.byte	0x8
 9586 1487 9A03     		.value	0x39a
 9587 1489 00000000 		.long	.LASF193
 9588 148d 4C0A0000 		.long	0xa4c
 9589 1491 01       		.byte	0x1
 9590 1492 9A140000 		.long	0x149a
 9591 1496 A0140000 		.long	0x14a0
 9592 149a 08       		.uleb128 0x8
 9593 149b 74C00000 		.long	0xc074
 9594 149f 00       		.byte	0
 9595 14a0 32       		.uleb128 0x32
 9596 14a1 00000000 		.long	.LASF194
 9597 14a5 08       		.byte	0x8
 9598 14a6 A203     		.value	0x3a2
 9599 14a8 00000000 		.long	.LASF195
 9600 14ac 400A0000 		.long	0xa40
 9601 14b0 01       		.byte	0x1
 9602 14b1 B9140000 		.long	0x14b9
 9603 14b5 BF140000 		.long	0x14bf
 9604 14b9 08       		.uleb128 0x8
 9605 14ba 7AC00000 		.long	0xc07a
 9606 14be 00       		.byte	0
 9607 14bf 32       		.uleb128 0x32
 9608 14c0 00000000 		.long	.LASF194
 9609 14c4 08       		.byte	0x8
 9610 14c5 AA03     		.value	0x3aa
 9611 14c7 00000000 		.long	.LASF196
 9612 14cb 4C0A0000 		.long	0xa4c
 9613 14cf 01       		.byte	0x1
 9614 14d0 D8140000 		.long	0x14d8
GAS LISTING /tmp/ccJUMvuF.s 			page 470


 9615 14d4 DE140000 		.long	0x14de
 9616 14d8 08       		.uleb128 0x8
 9617 14d9 74C00000 		.long	0xc074
 9618 14dd 00       		.byte	0
 9619 14de 32       		.uleb128 0x32
 9620 14df 00000000 		.long	.LASF197
 9621 14e3 08       		.byte	0x8
 9622 14e4 B503     		.value	0x3b5
 9623 14e6 00000000 		.long	.LASF198
 9624 14ea 99C00000 		.long	0xc099
 9625 14ee 01       		.byte	0x1
 9626 14ef F7140000 		.long	0x14f7
 9627 14f3 02150000 		.long	0x1502
 9628 14f7 08       		.uleb128 0x8
 9629 14f8 7AC00000 		.long	0xc07a
 9630 14fc 09       		.uleb128 0x9
 9631 14fd 8CC00000 		.long	0xc08c
 9632 1501 00       		.byte	0
 9633 1502 32       		.uleb128 0x32
 9634 1503 00000000 		.long	.LASF197
 9635 1507 08       		.byte	0x8
 9636 1508 BE03     		.value	0x3be
 9637 150a 00000000 		.long	.LASF199
 9638 150e 99C00000 		.long	0xc099
 9639 1512 01       		.byte	0x1
 9640 1513 1B150000 		.long	0x151b
 9641 1517 26150000 		.long	0x1526
 9642 151b 08       		.uleb128 0x8
 9643 151c 7AC00000 		.long	0xc07a
 9644 1520 09       		.uleb128 0x9
 9645 1521 CEAE0000 		.long	0xaece
 9646 1525 00       		.byte	0
 9647 1526 32       		.uleb128 0x32
 9648 1527 00000000 		.long	.LASF197
 9649 152b 08       		.byte	0x8
 9650 152c C703     		.value	0x3c7
 9651 152e 00000000 		.long	.LASF200
 9652 1532 99C00000 		.long	0xc099
 9653 1536 01       		.byte	0x1
 9654 1537 3F150000 		.long	0x153f
 9655 153b 4A150000 		.long	0x154a
 9656 153f 08       		.uleb128 0x8
 9657 1540 7AC00000 		.long	0xc07a
 9658 1544 09       		.uleb128 0x9
 9659 1545 ACAE0000 		.long	0xaeac
 9660 1549 00       		.byte	0
 9661 154a 32       		.uleb128 0x32
 9662 154b 00000000 		.long	.LASF197
 9663 154f 08       		.byte	0x8
 9664 1550 D403     		.value	0x3d4
 9665 1552 00000000 		.long	.LASF201
 9666 1556 99C00000 		.long	0xc099
 9667 155a 01       		.byte	0x1
 9668 155b 63150000 		.long	0x1563
 9669 155f 6E150000 		.long	0x156e
 9670 1563 08       		.uleb128 0x8
 9671 1564 7AC00000 		.long	0xc07a
GAS LISTING /tmp/ccJUMvuF.s 			page 471


 9672 1568 09       		.uleb128 0x9
 9673 1569 DF220000 		.long	0x22df
 9674 156d 00       		.byte	0
 9675 156e 32       		.uleb128 0x32
 9676 156f 00000000 		.long	.LASF202
 9677 1573 08       		.byte	0x8
 9678 1574 DE03     		.value	0x3de
 9679 1576 00000000 		.long	.LASF203
 9680 157a 99C00000 		.long	0xc099
 9681 157e 01       		.byte	0x1
 9682 157f 87150000 		.long	0x1587
 9683 1583 92150000 		.long	0x1592
 9684 1587 08       		.uleb128 0x8
 9685 1588 7AC00000 		.long	0xc07a
 9686 158c 09       		.uleb128 0x9
 9687 158d 8CC00000 		.long	0xc08c
 9688 1591 00       		.byte	0
 9689 1592 32       		.uleb128 0x32
 9690 1593 00000000 		.long	.LASF202
 9691 1597 08       		.byte	0x8
 9692 1598 EE03     		.value	0x3ee
 9693 159a 00000000 		.long	.LASF204
 9694 159e 99C00000 		.long	0xc099
 9695 15a2 01       		.byte	0x1
 9696 15a3 AB150000 		.long	0x15ab
 9697 15a7 C0150000 		.long	0x15c0
 9698 15ab 08       		.uleb128 0x8
 9699 15ac 7AC00000 		.long	0xc07a
 9700 15b0 09       		.uleb128 0x9
 9701 15b1 8CC00000 		.long	0xc08c
 9702 15b5 09       		.uleb128 0x9
 9703 15b6 090A0000 		.long	0xa09
 9704 15ba 09       		.uleb128 0x9
 9705 15bb 090A0000 		.long	0xa09
 9706 15bf 00       		.byte	0
 9707 15c0 32       		.uleb128 0x32
 9708 15c1 00000000 		.long	.LASF202
 9709 15c5 08       		.byte	0x8
 9710 15c6 F703     		.value	0x3f7
 9711 15c8 00000000 		.long	.LASF205
 9712 15cc 99C00000 		.long	0xc099
 9713 15d0 01       		.byte	0x1
 9714 15d1 D9150000 		.long	0x15d9
 9715 15d5 E9150000 		.long	0x15e9
 9716 15d9 08       		.uleb128 0x8
 9717 15da 7AC00000 		.long	0xc07a
 9718 15de 09       		.uleb128 0x9
 9719 15df CEAE0000 		.long	0xaece
 9720 15e3 09       		.uleb128 0x9
 9721 15e4 090A0000 		.long	0xa09
 9722 15e8 00       		.byte	0
 9723 15e9 32       		.uleb128 0x32
 9724 15ea 00000000 		.long	.LASF202
 9725 15ee 08       		.byte	0x8
 9726 15ef FF03     		.value	0x3ff
 9727 15f1 00000000 		.long	.LASF206
 9728 15f5 99C00000 		.long	0xc099
GAS LISTING /tmp/ccJUMvuF.s 			page 472


 9729 15f9 01       		.byte	0x1
 9730 15fa 02160000 		.long	0x1602
 9731 15fe 0D160000 		.long	0x160d
 9732 1602 08       		.uleb128 0x8
 9733 1603 7AC00000 		.long	0xc07a
 9734 1607 09       		.uleb128 0x9
 9735 1608 CEAE0000 		.long	0xaece
 9736 160c 00       		.byte	0
 9737 160d 32       		.uleb128 0x32
 9738 160e 00000000 		.long	.LASF202
 9739 1612 08       		.byte	0x8
 9740 1613 0E04     		.value	0x40e
 9741 1615 00000000 		.long	.LASF207
 9742 1619 99C00000 		.long	0xc099
 9743 161d 01       		.byte	0x1
 9744 161e 26160000 		.long	0x1626
 9745 1622 36160000 		.long	0x1636
 9746 1626 08       		.uleb128 0x8
 9747 1627 7AC00000 		.long	0xc07a
 9748 162b 09       		.uleb128 0x9
 9749 162c 090A0000 		.long	0xa09
 9750 1630 09       		.uleb128 0x9
 9751 1631 ACAE0000 		.long	0xaeac
 9752 1635 00       		.byte	0
 9753 1636 32       		.uleb128 0x32
 9754 1637 00000000 		.long	.LASF202
 9755 163b 08       		.byte	0x8
 9756 163c 1704     		.value	0x417
 9757 163e 00000000 		.long	.LASF208
 9758 1642 99C00000 		.long	0xc099
 9759 1646 01       		.byte	0x1
 9760 1647 4F160000 		.long	0x164f
 9761 164b 5A160000 		.long	0x165a
 9762 164f 08       		.uleb128 0x8
 9763 1650 7AC00000 		.long	0xc07a
 9764 1654 09       		.uleb128 0x9
 9765 1655 DF220000 		.long	0x22df
 9766 1659 00       		.byte	0
 9767 165a 34       		.uleb128 0x34
 9768 165b 00000000 		.long	.LASF209
 9769 165f 08       		.byte	0x8
 9770 1660 2D04     		.value	0x42d
 9771 1662 00000000 		.long	.LASF210
 9772 1666 01       		.byte	0x1
 9773 1667 6F160000 		.long	0x166f
 9774 166b 7A160000 		.long	0x167a
 9775 166f 08       		.uleb128 0x8
 9776 1670 7AC00000 		.long	0xc07a
 9777 1674 09       		.uleb128 0x9
 9778 1675 ACAE0000 		.long	0xaeac
 9779 1679 00       		.byte	0
 9780 167a 32       		.uleb128 0x32
 9781 167b 00000000 		.long	.LASF44
 9782 167f 08       		.byte	0x8
 9783 1680 3C04     		.value	0x43c
 9784 1682 00000000 		.long	.LASF211
 9785 1686 99C00000 		.long	0xc099
GAS LISTING /tmp/ccJUMvuF.s 			page 473


 9786 168a 01       		.byte	0x1
 9787 168b 93160000 		.long	0x1693
 9788 168f 9E160000 		.long	0x169e
 9789 1693 08       		.uleb128 0x8
 9790 1694 7AC00000 		.long	0xc07a
 9791 1698 09       		.uleb128 0x9
 9792 1699 8CC00000 		.long	0xc08c
 9793 169d 00       		.byte	0
 9794 169e 32       		.uleb128 0x32
 9795 169f 00000000 		.long	.LASF44
 9796 16a3 08       		.byte	0x8
 9797 16a4 4904     		.value	0x449
 9798 16a6 00000000 		.long	.LASF212
 9799 16aa 99C00000 		.long	0xc099
 9800 16ae 01       		.byte	0x1
 9801 16af B7160000 		.long	0x16b7
 9802 16b3 C2160000 		.long	0x16c2
 9803 16b7 08       		.uleb128 0x8
 9804 16b8 7AC00000 		.long	0xc07a
 9805 16bc 09       		.uleb128 0x9
 9806 16bd 92C00000 		.long	0xc092
 9807 16c1 00       		.byte	0
 9808 16c2 32       		.uleb128 0x32
 9809 16c3 00000000 		.long	.LASF44
 9810 16c7 08       		.byte	0x8
 9811 16c8 5E04     		.value	0x45e
 9812 16ca 00000000 		.long	.LASF213
 9813 16ce 99C00000 		.long	0xc099
 9814 16d2 01       		.byte	0x1
 9815 16d3 DB160000 		.long	0x16db
 9816 16d7 F0160000 		.long	0x16f0
 9817 16db 08       		.uleb128 0x8
 9818 16dc 7AC00000 		.long	0xc07a
 9819 16e0 09       		.uleb128 0x9
 9820 16e1 8CC00000 		.long	0xc08c
 9821 16e5 09       		.uleb128 0x9
 9822 16e6 090A0000 		.long	0xa09
 9823 16ea 09       		.uleb128 0x9
 9824 16eb 090A0000 		.long	0xa09
 9825 16ef 00       		.byte	0
 9826 16f0 32       		.uleb128 0x32
 9827 16f1 00000000 		.long	.LASF44
 9828 16f5 08       		.byte	0x8
 9829 16f6 6E04     		.value	0x46e
 9830 16f8 00000000 		.long	.LASF214
 9831 16fc 99C00000 		.long	0xc099
 9832 1700 01       		.byte	0x1
 9833 1701 09170000 		.long	0x1709
 9834 1705 19170000 		.long	0x1719
 9835 1709 08       		.uleb128 0x8
 9836 170a 7AC00000 		.long	0xc07a
 9837 170e 09       		.uleb128 0x9
 9838 170f CEAE0000 		.long	0xaece
 9839 1713 09       		.uleb128 0x9
 9840 1714 090A0000 		.long	0xa09
 9841 1718 00       		.byte	0
 9842 1719 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 474


 9843 171a 00000000 		.long	.LASF44
 9844 171e 08       		.byte	0x8
 9845 171f 7A04     		.value	0x47a
 9846 1721 00000000 		.long	.LASF215
 9847 1725 99C00000 		.long	0xc099
 9848 1729 01       		.byte	0x1
 9849 172a 32170000 		.long	0x1732
 9850 172e 3D170000 		.long	0x173d
 9851 1732 08       		.uleb128 0x8
 9852 1733 7AC00000 		.long	0xc07a
 9853 1737 09       		.uleb128 0x9
 9854 1738 CEAE0000 		.long	0xaece
 9855 173c 00       		.byte	0
 9856 173d 32       		.uleb128 0x32
 9857 173e 00000000 		.long	.LASF44
 9858 1742 08       		.byte	0x8
 9859 1743 8A04     		.value	0x48a
 9860 1745 00000000 		.long	.LASF216
 9861 1749 99C00000 		.long	0xc099
 9862 174d 01       		.byte	0x1
 9863 174e 56170000 		.long	0x1756
 9864 1752 66170000 		.long	0x1766
 9865 1756 08       		.uleb128 0x8
 9866 1757 7AC00000 		.long	0xc07a
 9867 175b 09       		.uleb128 0x9
 9868 175c 090A0000 		.long	0xa09
 9869 1760 09       		.uleb128 0x9
 9870 1761 ACAE0000 		.long	0xaeac
 9871 1765 00       		.byte	0
 9872 1766 32       		.uleb128 0x32
 9873 1767 00000000 		.long	.LASF44
 9874 176b 08       		.byte	0x8
 9875 176c A104     		.value	0x4a1
 9876 176e 00000000 		.long	.LASF217
 9877 1772 99C00000 		.long	0xc099
 9878 1776 01       		.byte	0x1
 9879 1777 7F170000 		.long	0x177f
 9880 177b 8A170000 		.long	0x178a
 9881 177f 08       		.uleb128 0x8
 9882 1780 7AC00000 		.long	0xc07a
 9883 1784 09       		.uleb128 0x9
 9884 1785 DF220000 		.long	0x22df
 9885 1789 00       		.byte	0
 9886 178a 34       		.uleb128 0x34
 9887 178b 00000000 		.long	.LASF218
 9888 178f 08       		.byte	0x8
 9889 1790 B304     		.value	0x4b3
 9890 1792 00000000 		.long	.LASF219
 9891 1796 01       		.byte	0x1
 9892 1797 9F170000 		.long	0x179f
 9893 179b B4170000 		.long	0x17b4
 9894 179f 08       		.uleb128 0x8
 9895 17a0 7AC00000 		.long	0xc07a
 9896 17a4 09       		.uleb128 0x9
 9897 17a5 580A0000 		.long	0xa58
 9898 17a9 09       		.uleb128 0x9
 9899 17aa 090A0000 		.long	0xa09
GAS LISTING /tmp/ccJUMvuF.s 			page 475


 9900 17ae 09       		.uleb128 0x9
 9901 17af ACAE0000 		.long	0xaeac
 9902 17b3 00       		.byte	0
 9903 17b4 34       		.uleb128 0x34
 9904 17b5 00000000 		.long	.LASF218
 9905 17b9 08       		.byte	0x8
 9906 17ba CF04     		.value	0x4cf
 9907 17bc 00000000 		.long	.LASF220
 9908 17c0 01       		.byte	0x1
 9909 17c1 C9170000 		.long	0x17c9
 9910 17c5 D9170000 		.long	0x17d9
 9911 17c9 08       		.uleb128 0x8
 9912 17ca 7AC00000 		.long	0xc07a
 9913 17ce 09       		.uleb128 0x9
 9914 17cf 580A0000 		.long	0xa58
 9915 17d3 09       		.uleb128 0x9
 9916 17d4 DF220000 		.long	0x22df
 9917 17d8 00       		.byte	0
 9918 17d9 32       		.uleb128 0x32
 9919 17da 00000000 		.long	.LASF218
 9920 17de 08       		.byte	0x8
 9921 17df E304     		.value	0x4e3
 9922 17e1 00000000 		.long	.LASF221
 9923 17e5 99C00000 		.long	0xc099
 9924 17e9 01       		.byte	0x1
 9925 17ea F2170000 		.long	0x17f2
 9926 17ee 02180000 		.long	0x1802
 9927 17f2 08       		.uleb128 0x8
 9928 17f3 7AC00000 		.long	0xc07a
 9929 17f7 09       		.uleb128 0x9
 9930 17f8 090A0000 		.long	0xa09
 9931 17fc 09       		.uleb128 0x9
 9932 17fd 8CC00000 		.long	0xc08c
 9933 1801 00       		.byte	0
 9934 1802 32       		.uleb128 0x32
 9935 1803 00000000 		.long	.LASF218
 9936 1807 08       		.byte	0x8
 9937 1808 F904     		.value	0x4f9
 9938 180a 00000000 		.long	.LASF222
 9939 180e 99C00000 		.long	0xc099
 9940 1812 01       		.byte	0x1
 9941 1813 1B180000 		.long	0x181b
 9942 1817 35180000 		.long	0x1835
 9943 181b 08       		.uleb128 0x8
 9944 181c 7AC00000 		.long	0xc07a
 9945 1820 09       		.uleb128 0x9
 9946 1821 090A0000 		.long	0xa09
 9947 1825 09       		.uleb128 0x9
 9948 1826 8CC00000 		.long	0xc08c
 9949 182a 09       		.uleb128 0x9
 9950 182b 090A0000 		.long	0xa09
 9951 182f 09       		.uleb128 0x9
 9952 1830 090A0000 		.long	0xa09
 9953 1834 00       		.byte	0
 9954 1835 32       		.uleb128 0x32
 9955 1836 00000000 		.long	.LASF218
 9956 183a 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 476


 9957 183b 1005     		.value	0x510
 9958 183d 00000000 		.long	.LASF223
 9959 1841 99C00000 		.long	0xc099
 9960 1845 01       		.byte	0x1
 9961 1846 4E180000 		.long	0x184e
 9962 184a 63180000 		.long	0x1863
 9963 184e 08       		.uleb128 0x8
 9964 184f 7AC00000 		.long	0xc07a
 9965 1853 09       		.uleb128 0x9
 9966 1854 090A0000 		.long	0xa09
 9967 1858 09       		.uleb128 0x9
 9968 1859 CEAE0000 		.long	0xaece
 9969 185d 09       		.uleb128 0x9
 9970 185e 090A0000 		.long	0xa09
 9971 1862 00       		.byte	0
 9972 1863 32       		.uleb128 0x32
 9973 1864 00000000 		.long	.LASF218
 9974 1868 08       		.byte	0x8
 9975 1869 2205     		.value	0x522
 9976 186b 00000000 		.long	.LASF224
 9977 186f 99C00000 		.long	0xc099
 9978 1873 01       		.byte	0x1
 9979 1874 7C180000 		.long	0x187c
 9980 1878 8C180000 		.long	0x188c
 9981 187c 08       		.uleb128 0x8
 9982 187d 7AC00000 		.long	0xc07a
 9983 1881 09       		.uleb128 0x9
 9984 1882 090A0000 		.long	0xa09
 9985 1886 09       		.uleb128 0x9
 9986 1887 CEAE0000 		.long	0xaece
 9987 188b 00       		.byte	0
 9988 188c 32       		.uleb128 0x32
 9989 188d 00000000 		.long	.LASF218
 9990 1891 08       		.byte	0x8
 9991 1892 3905     		.value	0x539
 9992 1894 00000000 		.long	.LASF225
 9993 1898 99C00000 		.long	0xc099
 9994 189c 01       		.byte	0x1
 9995 189d A5180000 		.long	0x18a5
 9996 18a1 BA180000 		.long	0x18ba
 9997 18a5 08       		.uleb128 0x8
 9998 18a6 7AC00000 		.long	0xc07a
 9999 18aa 09       		.uleb128 0x9
 10000 18ab 090A0000 		.long	0xa09
 10001 18af 09       		.uleb128 0x9
 10002 18b0 090A0000 		.long	0xa09
 10003 18b4 09       		.uleb128 0x9
 10004 18b5 ACAE0000 		.long	0xaeac
 10005 18b9 00       		.byte	0
 10006 18ba 32       		.uleb128 0x32
 10007 18bb 00000000 		.long	.LASF218
 10008 18bf 08       		.byte	0x8
 10009 18c0 4B05     		.value	0x54b
 10010 18c2 00000000 		.long	.LASF226
 10011 18c6 580A0000 		.long	0xa58
 10012 18ca 01       		.byte	0x1
 10013 18cb D3180000 		.long	0x18d3
GAS LISTING /tmp/ccJUMvuF.s 			page 477


 10014 18cf E3180000 		.long	0x18e3
 10015 18d3 08       		.uleb128 0x8
 10016 18d4 7AC00000 		.long	0xc07a
 10017 18d8 09       		.uleb128 0x9
 10018 18d9 580A0000 		.long	0xa58
 10019 18dd 09       		.uleb128 0x9
 10020 18de ACAE0000 		.long	0xaeac
 10021 18e2 00       		.byte	0
 10022 18e3 32       		.uleb128 0x32
 10023 18e4 00000000 		.long	.LASF227
 10024 18e8 08       		.byte	0x8
 10025 18e9 6405     		.value	0x564
 10026 18eb 00000000 		.long	.LASF228
 10027 18ef 99C00000 		.long	0xc099
 10028 18f3 01       		.byte	0x1
 10029 18f4 FC180000 		.long	0x18fc
 10030 18f8 0C190000 		.long	0x190c
 10031 18fc 08       		.uleb128 0x8
 10032 18fd 7AC00000 		.long	0xc07a
 10033 1901 09       		.uleb128 0x9
 10034 1902 090A0000 		.long	0xa09
 10035 1906 09       		.uleb128 0x9
 10036 1907 090A0000 		.long	0xa09
 10037 190b 00       		.byte	0
 10038 190c 32       		.uleb128 0x32
 10039 190d 00000000 		.long	.LASF227
 10040 1911 08       		.byte	0x8
 10041 1912 7405     		.value	0x574
 10042 1914 00000000 		.long	.LASF229
 10043 1918 580A0000 		.long	0xa58
 10044 191c 01       		.byte	0x1
 10045 191d 25190000 		.long	0x1925
 10046 1921 30190000 		.long	0x1930
 10047 1925 08       		.uleb128 0x8
 10048 1926 7AC00000 		.long	0xc07a
 10049 192a 09       		.uleb128 0x9
 10050 192b 580A0000 		.long	0xa58
 10051 192f 00       		.byte	0
 10052 1930 32       		.uleb128 0x32
 10053 1931 00000000 		.long	.LASF227
 10054 1935 08       		.byte	0x8
 10055 1936 8805     		.value	0x588
 10056 1938 00000000 		.long	.LASF230
 10057 193c 580A0000 		.long	0xa58
 10058 1940 01       		.byte	0x1
 10059 1941 49190000 		.long	0x1949
 10060 1945 59190000 		.long	0x1959
 10061 1949 08       		.uleb128 0x8
 10062 194a 7AC00000 		.long	0xc07a
 10063 194e 09       		.uleb128 0x9
 10064 194f 580A0000 		.long	0xa58
 10065 1953 09       		.uleb128 0x9
 10066 1954 580A0000 		.long	0xa58
 10067 1958 00       		.byte	0
 10068 1959 34       		.uleb128 0x34
 10069 195a 00000000 		.long	.LASF231
 10070 195e 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 478


 10071 195f 9105     		.value	0x591
 10072 1961 00000000 		.long	.LASF232
 10073 1965 01       		.byte	0x1
 10074 1966 6E190000 		.long	0x196e
 10075 196a 74190000 		.long	0x1974
 10076 196e 08       		.uleb128 0x8
 10077 196f 7AC00000 		.long	0xc07a
 10078 1973 00       		.byte	0
 10079 1974 32       		.uleb128 0x32
 10080 1975 00000000 		.long	.LASF233
 10081 1979 08       		.byte	0x8
 10082 197a A705     		.value	0x5a7
 10083 197c 00000000 		.long	.LASF234
 10084 1980 99C00000 		.long	0xc099
 10085 1984 01       		.byte	0x1
 10086 1985 8D190000 		.long	0x198d
 10087 1989 A2190000 		.long	0x19a2
 10088 198d 08       		.uleb128 0x8
 10089 198e 7AC00000 		.long	0xc07a
 10090 1992 09       		.uleb128 0x9
 10091 1993 090A0000 		.long	0xa09
 10092 1997 09       		.uleb128 0x9
 10093 1998 090A0000 		.long	0xa09
 10094 199c 09       		.uleb128 0x9
 10095 199d 8CC00000 		.long	0xc08c
 10096 19a1 00       		.byte	0
 10097 19a2 32       		.uleb128 0x32
 10098 19a3 00000000 		.long	.LASF233
 10099 19a7 08       		.byte	0x8
 10100 19a8 BD05     		.value	0x5bd
 10101 19aa 00000000 		.long	.LASF235
 10102 19ae 99C00000 		.long	0xc099
 10103 19b2 01       		.byte	0x1
 10104 19b3 BB190000 		.long	0x19bb
 10105 19b7 DA190000 		.long	0x19da
 10106 19bb 08       		.uleb128 0x8
 10107 19bc 7AC00000 		.long	0xc07a
 10108 19c0 09       		.uleb128 0x9
 10109 19c1 090A0000 		.long	0xa09
 10110 19c5 09       		.uleb128 0x9
 10111 19c6 090A0000 		.long	0xa09
 10112 19ca 09       		.uleb128 0x9
 10113 19cb 8CC00000 		.long	0xc08c
 10114 19cf 09       		.uleb128 0x9
 10115 19d0 090A0000 		.long	0xa09
 10116 19d4 09       		.uleb128 0x9
 10117 19d5 090A0000 		.long	0xa09
 10118 19d9 00       		.byte	0
 10119 19da 32       		.uleb128 0x32
 10120 19db 00000000 		.long	.LASF233
 10121 19df 08       		.byte	0x8
 10122 19e0 D605     		.value	0x5d6
 10123 19e2 00000000 		.long	.LASF236
 10124 19e6 99C00000 		.long	0xc099
 10125 19ea 01       		.byte	0x1
 10126 19eb F3190000 		.long	0x19f3
 10127 19ef 0D1A0000 		.long	0x1a0d
GAS LISTING /tmp/ccJUMvuF.s 			page 479


 10128 19f3 08       		.uleb128 0x8
 10129 19f4 7AC00000 		.long	0xc07a
 10130 19f8 09       		.uleb128 0x9
 10131 19f9 090A0000 		.long	0xa09
 10132 19fd 09       		.uleb128 0x9
 10133 19fe 090A0000 		.long	0xa09
 10134 1a02 09       		.uleb128 0x9
 10135 1a03 CEAE0000 		.long	0xaece
 10136 1a07 09       		.uleb128 0x9
 10137 1a08 090A0000 		.long	0xa09
 10138 1a0c 00       		.byte	0
 10139 1a0d 32       		.uleb128 0x32
 10140 1a0e 00000000 		.long	.LASF233
 10141 1a12 08       		.byte	0x8
 10142 1a13 EA05     		.value	0x5ea
 10143 1a15 00000000 		.long	.LASF237
 10144 1a19 99C00000 		.long	0xc099
 10145 1a1d 01       		.byte	0x1
 10146 1a1e 261A0000 		.long	0x1a26
 10147 1a22 3B1A0000 		.long	0x1a3b
 10148 1a26 08       		.uleb128 0x8
 10149 1a27 7AC00000 		.long	0xc07a
 10150 1a2b 09       		.uleb128 0x9
 10151 1a2c 090A0000 		.long	0xa09
 10152 1a30 09       		.uleb128 0x9
 10153 1a31 090A0000 		.long	0xa09
 10154 1a35 09       		.uleb128 0x9
 10155 1a36 CEAE0000 		.long	0xaece
 10156 1a3a 00       		.byte	0
 10157 1a3b 32       		.uleb128 0x32
 10158 1a3c 00000000 		.long	.LASF233
 10159 1a40 08       		.byte	0x8
 10160 1a41 0206     		.value	0x602
 10161 1a43 00000000 		.long	.LASF238
 10162 1a47 99C00000 		.long	0xc099
 10163 1a4b 01       		.byte	0x1
 10164 1a4c 541A0000 		.long	0x1a54
 10165 1a50 6E1A0000 		.long	0x1a6e
 10166 1a54 08       		.uleb128 0x8
 10167 1a55 7AC00000 		.long	0xc07a
 10168 1a59 09       		.uleb128 0x9
 10169 1a5a 090A0000 		.long	0xa09
 10170 1a5e 09       		.uleb128 0x9
 10171 1a5f 090A0000 		.long	0xa09
 10172 1a63 09       		.uleb128 0x9
 10173 1a64 090A0000 		.long	0xa09
 10174 1a68 09       		.uleb128 0x9
 10175 1a69 ACAE0000 		.long	0xaeac
 10176 1a6d 00       		.byte	0
 10177 1a6e 32       		.uleb128 0x32
 10178 1a6f 00000000 		.long	.LASF233
 10179 1a73 08       		.byte	0x8
 10180 1a74 1406     		.value	0x614
 10181 1a76 00000000 		.long	.LASF239
 10182 1a7a 99C00000 		.long	0xc099
 10183 1a7e 01       		.byte	0x1
 10184 1a7f 871A0000 		.long	0x1a87
GAS LISTING /tmp/ccJUMvuF.s 			page 480


 10185 1a83 9C1A0000 		.long	0x1a9c
 10186 1a87 08       		.uleb128 0x8
 10187 1a88 7AC00000 		.long	0xc07a
 10188 1a8c 09       		.uleb128 0x9
 10189 1a8d 580A0000 		.long	0xa58
 10190 1a91 09       		.uleb128 0x9
 10191 1a92 580A0000 		.long	0xa58
 10192 1a96 09       		.uleb128 0x9
 10193 1a97 8CC00000 		.long	0xc08c
 10194 1a9b 00       		.byte	0
 10195 1a9c 32       		.uleb128 0x32
 10196 1a9d 00000000 		.long	.LASF233
 10197 1aa1 08       		.byte	0x8
 10198 1aa2 2706     		.value	0x627
 10199 1aa4 00000000 		.long	.LASF240
 10200 1aa8 99C00000 		.long	0xc099
 10201 1aac 01       		.byte	0x1
 10202 1aad B51A0000 		.long	0x1ab5
 10203 1ab1 CF1A0000 		.long	0x1acf
 10204 1ab5 08       		.uleb128 0x8
 10205 1ab6 7AC00000 		.long	0xc07a
 10206 1aba 09       		.uleb128 0x9
 10207 1abb 580A0000 		.long	0xa58
 10208 1abf 09       		.uleb128 0x9
 10209 1ac0 580A0000 		.long	0xa58
 10210 1ac4 09       		.uleb128 0x9
 10211 1ac5 CEAE0000 		.long	0xaece
 10212 1ac9 09       		.uleb128 0x9
 10213 1aca 090A0000 		.long	0xa09
 10214 1ace 00       		.byte	0
 10215 1acf 32       		.uleb128 0x32
 10216 1ad0 00000000 		.long	.LASF233
 10217 1ad4 08       		.byte	0x8
 10218 1ad5 3C06     		.value	0x63c
 10219 1ad7 00000000 		.long	.LASF241
 10220 1adb 99C00000 		.long	0xc099
 10221 1adf 01       		.byte	0x1
 10222 1ae0 E81A0000 		.long	0x1ae8
 10223 1ae4 FD1A0000 		.long	0x1afd
 10224 1ae8 08       		.uleb128 0x8
 10225 1ae9 7AC00000 		.long	0xc07a
 10226 1aed 09       		.uleb128 0x9
 10227 1aee 580A0000 		.long	0xa58
 10228 1af2 09       		.uleb128 0x9
 10229 1af3 580A0000 		.long	0xa58
 10230 1af7 09       		.uleb128 0x9
 10231 1af8 CEAE0000 		.long	0xaece
 10232 1afc 00       		.byte	0
 10233 1afd 32       		.uleb128 0x32
 10234 1afe 00000000 		.long	.LASF233
 10235 1b02 08       		.byte	0x8
 10236 1b03 5106     		.value	0x651
 10237 1b05 00000000 		.long	.LASF242
 10238 1b09 99C00000 		.long	0xc099
 10239 1b0d 01       		.byte	0x1
 10240 1b0e 161B0000 		.long	0x1b16
 10241 1b12 301B0000 		.long	0x1b30
GAS LISTING /tmp/ccJUMvuF.s 			page 481


 10242 1b16 08       		.uleb128 0x8
 10243 1b17 7AC00000 		.long	0xc07a
 10244 1b1b 09       		.uleb128 0x9
 10245 1b1c 580A0000 		.long	0xa58
 10246 1b20 09       		.uleb128 0x9
 10247 1b21 580A0000 		.long	0xa58
 10248 1b25 09       		.uleb128 0x9
 10249 1b26 090A0000 		.long	0xa09
 10250 1b2a 09       		.uleb128 0x9
 10251 1b2b ACAE0000 		.long	0xaeac
 10252 1b2f 00       		.byte	0
 10253 1b30 32       		.uleb128 0x32
 10254 1b31 00000000 		.long	.LASF233
 10255 1b35 08       		.byte	0x8
 10256 1b36 7606     		.value	0x676
 10257 1b38 00000000 		.long	.LASF243
 10258 1b3c 99C00000 		.long	0xc099
 10259 1b40 01       		.byte	0x1
 10260 1b41 491B0000 		.long	0x1b49
 10261 1b45 631B0000 		.long	0x1b63
 10262 1b49 08       		.uleb128 0x8
 10263 1b4a 7AC00000 		.long	0xc07a
 10264 1b4e 09       		.uleb128 0x9
 10265 1b4f 580A0000 		.long	0xa58
 10266 1b53 09       		.uleb128 0x9
 10267 1b54 580A0000 		.long	0xa58
 10268 1b58 09       		.uleb128 0x9
 10269 1b59 F0B10000 		.long	0xb1f0
 10270 1b5d 09       		.uleb128 0x9
 10271 1b5e F0B10000 		.long	0xb1f0
 10272 1b62 00       		.byte	0
 10273 1b63 32       		.uleb128 0x32
 10274 1b64 00000000 		.long	.LASF233
 10275 1b68 08       		.byte	0x8
 10276 1b69 8006     		.value	0x680
 10277 1b6b 00000000 		.long	.LASF244
 10278 1b6f 99C00000 		.long	0xc099
 10279 1b73 01       		.byte	0x1
 10280 1b74 7C1B0000 		.long	0x1b7c
 10281 1b78 961B0000 		.long	0x1b96
 10282 1b7c 08       		.uleb128 0x8
 10283 1b7d 7AC00000 		.long	0xc07a
 10284 1b81 09       		.uleb128 0x9
 10285 1b82 580A0000 		.long	0xa58
 10286 1b86 09       		.uleb128 0x9
 10287 1b87 580A0000 		.long	0xa58
 10288 1b8b 09       		.uleb128 0x9
 10289 1b8c CEAE0000 		.long	0xaece
 10290 1b90 09       		.uleb128 0x9
 10291 1b91 CEAE0000 		.long	0xaece
 10292 1b95 00       		.byte	0
 10293 1b96 32       		.uleb128 0x32
 10294 1b97 00000000 		.long	.LASF233
 10295 1b9b 08       		.byte	0x8
 10296 1b9c 8B06     		.value	0x68b
 10297 1b9e 00000000 		.long	.LASF245
 10298 1ba2 99C00000 		.long	0xc099
GAS LISTING /tmp/ccJUMvuF.s 			page 482


 10299 1ba6 01       		.byte	0x1
 10300 1ba7 AF1B0000 		.long	0x1baf
 10301 1bab C91B0000 		.long	0x1bc9
 10302 1baf 08       		.uleb128 0x8
 10303 1bb0 7AC00000 		.long	0xc07a
 10304 1bb4 09       		.uleb128 0x9
 10305 1bb5 580A0000 		.long	0xa58
 10306 1bb9 09       		.uleb128 0x9
 10307 1bba 580A0000 		.long	0xa58
 10308 1bbe 09       		.uleb128 0x9
 10309 1bbf 580A0000 		.long	0xa58
 10310 1bc3 09       		.uleb128 0x9
 10311 1bc4 580A0000 		.long	0xa58
 10312 1bc8 00       		.byte	0
 10313 1bc9 32       		.uleb128 0x32
 10314 1bca 00000000 		.long	.LASF233
 10315 1bce 08       		.byte	0x8
 10316 1bcf 9506     		.value	0x695
 10317 1bd1 00000000 		.long	.LASF246
 10318 1bd5 99C00000 		.long	0xc099
 10319 1bd9 01       		.byte	0x1
 10320 1bda E21B0000 		.long	0x1be2
 10321 1bde FC1B0000 		.long	0x1bfc
 10322 1be2 08       		.uleb128 0x8
 10323 1be3 7AC00000 		.long	0xc07a
 10324 1be7 09       		.uleb128 0x9
 10325 1be8 580A0000 		.long	0xa58
 10326 1bec 09       		.uleb128 0x9
 10327 1bed 580A0000 		.long	0xa58
 10328 1bf1 09       		.uleb128 0x9
 10329 1bf2 640A0000 		.long	0xa64
 10330 1bf6 09       		.uleb128 0x9
 10331 1bf7 640A0000 		.long	0xa64
 10332 1bfb 00       		.byte	0
 10333 1bfc 32       		.uleb128 0x32
 10334 1bfd 00000000 		.long	.LASF233
 10335 1c01 08       		.byte	0x8
 10336 1c02 AE06     		.value	0x6ae
 10337 1c04 00000000 		.long	.LASF247
 10338 1c08 99C00000 		.long	0xc099
 10339 1c0c 01       		.byte	0x1
 10340 1c0d 151C0000 		.long	0x1c15
 10341 1c11 2A1C0000 		.long	0x1c2a
 10342 1c15 08       		.uleb128 0x8
 10343 1c16 7AC00000 		.long	0xc07a
 10344 1c1a 09       		.uleb128 0x9
 10345 1c1b 580A0000 		.long	0xa58
 10346 1c1f 09       		.uleb128 0x9
 10347 1c20 580A0000 		.long	0xa58
 10348 1c24 09       		.uleb128 0x9
 10349 1c25 DF220000 		.long	0x22df
 10350 1c29 00       		.byte	0
 10351 1c2a 2C       		.uleb128 0x2c
 10352 1c2b 00000000 		.long	.LASF248
 10353 1c2f 08       		.byte	0x8
 10354 1c30 C006     		.value	0x6c0
 10355 1c32 00000000 		.long	.LASF249
GAS LISTING /tmp/ccJUMvuF.s 			page 483


 10356 1c36 99C00000 		.long	0xc099
 10357 1c3a 421C0000 		.long	0x1c42
 10358 1c3e 5C1C0000 		.long	0x1c5c
 10359 1c42 08       		.uleb128 0x8
 10360 1c43 7AC00000 		.long	0xc07a
 10361 1c47 09       		.uleb128 0x9
 10362 1c48 090A0000 		.long	0xa09
 10363 1c4c 09       		.uleb128 0x9
 10364 1c4d 090A0000 		.long	0xa09
 10365 1c51 09       		.uleb128 0x9
 10366 1c52 090A0000 		.long	0xa09
 10367 1c56 09       		.uleb128 0x9
 10368 1c57 ACAE0000 		.long	0xaeac
 10369 1c5b 00       		.byte	0
 10370 1c5c 2C       		.uleb128 0x2c
 10371 1c5d 00000000 		.long	.LASF250
 10372 1c61 08       		.byte	0x8
 10373 1c62 C406     		.value	0x6c4
 10374 1c64 00000000 		.long	.LASF251
 10375 1c68 99C00000 		.long	0xc099
 10376 1c6c 741C0000 		.long	0x1c74
 10377 1c70 8E1C0000 		.long	0x1c8e
 10378 1c74 08       		.uleb128 0x8
 10379 1c75 7AC00000 		.long	0xc07a
 10380 1c79 09       		.uleb128 0x9
 10381 1c7a 090A0000 		.long	0xa09
 10382 1c7e 09       		.uleb128 0x9
 10383 1c7f 090A0000 		.long	0xa09
 10384 1c83 09       		.uleb128 0x9
 10385 1c84 CEAE0000 		.long	0xaece
 10386 1c88 09       		.uleb128 0x9
 10387 1c89 090A0000 		.long	0xa09
 10388 1c8d 00       		.byte	0
 10389 1c8e 1E       		.uleb128 0x1e
 10390 1c8f 00000000 		.long	.LASF252
 10391 1c93 08       		.byte	0x8
 10392 1c94 DC06     		.value	0x6dc
 10393 1c96 00000000 		.long	.LASF253
 10394 1c9a F0B10000 		.long	0xb1f0
 10395 1c9e B21C0000 		.long	0x1cb2
 10396 1ca2 09       		.uleb128 0x9
 10397 1ca3 090A0000 		.long	0xa09
 10398 1ca7 09       		.uleb128 0x9
 10399 1ca8 ACAE0000 		.long	0xaeac
 10400 1cac 09       		.uleb128 0x9
 10401 1cad F5B70000 		.long	0xb7f5
 10402 1cb1 00       		.byte	0
 10403 1cb2 1E       		.uleb128 0x1e
 10404 1cb3 00000000 		.long	.LASF254
 10405 1cb7 08       		.byte	0x8
 10406 1cb8 F506     		.value	0x6f5
 10407 1cba 00000000 		.long	.LASF255
 10408 1cbe F0B10000 		.long	0xb1f0
 10409 1cc2 D61C0000 		.long	0x1cd6
 10410 1cc6 09       		.uleb128 0x9
 10411 1cc7 090A0000 		.long	0xa09
 10412 1ccb 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 484


 10413 1ccc ACAE0000 		.long	0xaeac
 10414 1cd0 09       		.uleb128 0x9
 10415 1cd1 F5B70000 		.long	0xb7f5
 10416 1cd5 00       		.byte	0
 10417 1cd6 32       		.uleb128 0x32
 10418 1cd7 00000000 		.long	.LASF42
 10419 1cdb 08       		.byte	0x8
 10420 1cdc 0607     		.value	0x706
 10421 1cde 00000000 		.long	.LASF256
 10422 1ce2 090A0000 		.long	0xa09
 10423 1ce6 01       		.byte	0x1
 10424 1ce7 EF1C0000 		.long	0x1cef
 10425 1ceb 041D0000 		.long	0x1d04
 10426 1cef 08       		.uleb128 0x8
 10427 1cf0 74C00000 		.long	0xc074
 10428 1cf4 09       		.uleb128 0x9
 10429 1cf5 F0B10000 		.long	0xb1f0
 10430 1cf9 09       		.uleb128 0x9
 10431 1cfa 090A0000 		.long	0xa09
 10432 1cfe 09       		.uleb128 0x9
 10433 1cff 090A0000 		.long	0xa09
 10434 1d03 00       		.byte	0
 10435 1d04 34       		.uleb128 0x34
 10436 1d05 00000000 		.long	.LASF13
 10437 1d09 08       		.byte	0x8
 10438 1d0a 1107     		.value	0x711
 10439 1d0c 00000000 		.long	.LASF257
 10440 1d10 01       		.byte	0x1
 10441 1d11 191D0000 		.long	0x1d19
 10442 1d15 241D0000 		.long	0x1d24
 10443 1d19 08       		.uleb128 0x8
 10444 1d1a 7AC00000 		.long	0xc07a
 10445 1d1e 09       		.uleb128 0x9
 10446 1d1f 99C00000 		.long	0xc099
 10447 1d23 00       		.byte	0
 10448 1d24 32       		.uleb128 0x32
 10449 1d25 00000000 		.long	.LASF258
 10450 1d29 08       		.byte	0x8
 10451 1d2a 1B07     		.value	0x71b
 10452 1d2c 00000000 		.long	.LASF259
 10453 1d30 CEAE0000 		.long	0xaece
 10454 1d34 01       		.byte	0x1
 10455 1d35 3D1D0000 		.long	0x1d3d
 10456 1d39 431D0000 		.long	0x1d43
 10457 1d3d 08       		.uleb128 0x8
 10458 1d3e 74C00000 		.long	0xc074
 10459 1d42 00       		.byte	0
 10460 1d43 32       		.uleb128 0x32
 10461 1d44 00000000 		.long	.LASF260
 10462 1d48 08       		.byte	0x8
 10463 1d49 2507     		.value	0x725
 10464 1d4b 00000000 		.long	.LASF261
 10465 1d4f CEAE0000 		.long	0xaece
 10466 1d53 01       		.byte	0x1
 10467 1d54 5C1D0000 		.long	0x1d5c
 10468 1d58 621D0000 		.long	0x1d62
 10469 1d5c 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 485


 10470 1d5d 74C00000 		.long	0xc074
 10471 1d61 00       		.byte	0
 10472 1d62 32       		.uleb128 0x32
 10473 1d63 00000000 		.long	.LASF262
 10474 1d67 08       		.byte	0x8
 10475 1d68 2C07     		.value	0x72c
 10476 1d6a 00000000 		.long	.LASF263
 10477 1d6e 340A0000 		.long	0xa34
 10478 1d72 01       		.byte	0x1
 10479 1d73 7B1D0000 		.long	0x1d7b
 10480 1d77 811D0000 		.long	0x1d81
 10481 1d7b 08       		.uleb128 0x8
 10482 1d7c 74C00000 		.long	0xc074
 10483 1d80 00       		.byte	0
 10484 1d81 32       		.uleb128 0x32
 10485 1d82 00000000 		.long	.LASF38
 10486 1d86 08       		.byte	0x8
 10487 1d87 3C07     		.value	0x73c
 10488 1d89 00000000 		.long	.LASF264
 10489 1d8d 090A0000 		.long	0xa09
 10490 1d91 01       		.byte	0x1
 10491 1d92 9A1D0000 		.long	0x1d9a
 10492 1d96 AF1D0000 		.long	0x1daf
 10493 1d9a 08       		.uleb128 0x8
 10494 1d9b 74C00000 		.long	0xc074
 10495 1d9f 09       		.uleb128 0x9
 10496 1da0 CEAE0000 		.long	0xaece
 10497 1da4 09       		.uleb128 0x9
 10498 1da5 090A0000 		.long	0xa09
 10499 1da9 09       		.uleb128 0x9
 10500 1daa 090A0000 		.long	0xa09
 10501 1dae 00       		.byte	0
 10502 1daf 32       		.uleb128 0x32
 10503 1db0 00000000 		.long	.LASF38
 10504 1db4 08       		.byte	0x8
 10505 1db5 4907     		.value	0x749
 10506 1db7 00000000 		.long	.LASF265
 10507 1dbb 090A0000 		.long	0xa09
 10508 1dbf 01       		.byte	0x1
 10509 1dc0 C81D0000 		.long	0x1dc8
 10510 1dc4 D81D0000 		.long	0x1dd8
 10511 1dc8 08       		.uleb128 0x8
 10512 1dc9 74C00000 		.long	0xc074
 10513 1dcd 09       		.uleb128 0x9
 10514 1dce 8CC00000 		.long	0xc08c
 10515 1dd2 09       		.uleb128 0x9
 10516 1dd3 090A0000 		.long	0xa09
 10517 1dd7 00       		.byte	0
 10518 1dd8 32       		.uleb128 0x32
 10519 1dd9 00000000 		.long	.LASF38
 10520 1ddd 08       		.byte	0x8
 10521 1dde 5807     		.value	0x758
 10522 1de0 00000000 		.long	.LASF266
 10523 1de4 090A0000 		.long	0xa09
 10524 1de8 01       		.byte	0x1
 10525 1de9 F11D0000 		.long	0x1df1
 10526 1ded 011E0000 		.long	0x1e01
GAS LISTING /tmp/ccJUMvuF.s 			page 486


 10527 1df1 08       		.uleb128 0x8
 10528 1df2 74C00000 		.long	0xc074
 10529 1df6 09       		.uleb128 0x9
 10530 1df7 CEAE0000 		.long	0xaece
 10531 1dfb 09       		.uleb128 0x9
 10532 1dfc 090A0000 		.long	0xa09
 10533 1e00 00       		.byte	0
 10534 1e01 32       		.uleb128 0x32
 10535 1e02 00000000 		.long	.LASF38
 10536 1e06 08       		.byte	0x8
 10537 1e07 6907     		.value	0x769
 10538 1e09 00000000 		.long	.LASF267
 10539 1e0d 090A0000 		.long	0xa09
 10540 1e11 01       		.byte	0x1
 10541 1e12 1A1E0000 		.long	0x1e1a
 10542 1e16 2A1E0000 		.long	0x1e2a
 10543 1e1a 08       		.uleb128 0x8
 10544 1e1b 74C00000 		.long	0xc074
 10545 1e1f 09       		.uleb128 0x9
 10546 1e20 ACAE0000 		.long	0xaeac
 10547 1e24 09       		.uleb128 0x9
 10548 1e25 090A0000 		.long	0xa09
 10549 1e29 00       		.byte	0
 10550 1e2a 32       		.uleb128 0x32
 10551 1e2b 00000000 		.long	.LASF268
 10552 1e2f 08       		.byte	0x8
 10553 1e30 7607     		.value	0x776
 10554 1e32 00000000 		.long	.LASF269
 10555 1e36 090A0000 		.long	0xa09
 10556 1e3a 01       		.byte	0x1
 10557 1e3b 431E0000 		.long	0x1e43
 10558 1e3f 531E0000 		.long	0x1e53
 10559 1e43 08       		.uleb128 0x8
 10560 1e44 74C00000 		.long	0xc074
 10561 1e48 09       		.uleb128 0x9
 10562 1e49 8CC00000 		.long	0xc08c
 10563 1e4d 09       		.uleb128 0x9
 10564 1e4e 090A0000 		.long	0xa09
 10565 1e52 00       		.byte	0
 10566 1e53 32       		.uleb128 0x32
 10567 1e54 00000000 		.long	.LASF268
 10568 1e58 08       		.byte	0x8
 10569 1e59 8707     		.value	0x787
 10570 1e5b 00000000 		.long	.LASF270
 10571 1e5f 090A0000 		.long	0xa09
 10572 1e63 01       		.byte	0x1
 10573 1e64 6C1E0000 		.long	0x1e6c
 10574 1e68 811E0000 		.long	0x1e81
 10575 1e6c 08       		.uleb128 0x8
 10576 1e6d 74C00000 		.long	0xc074
 10577 1e71 09       		.uleb128 0x9
 10578 1e72 CEAE0000 		.long	0xaece
 10579 1e76 09       		.uleb128 0x9
 10580 1e77 090A0000 		.long	0xa09
 10581 1e7b 09       		.uleb128 0x9
 10582 1e7c 090A0000 		.long	0xa09
 10583 1e80 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 487


 10584 1e81 32       		.uleb128 0x32
 10585 1e82 00000000 		.long	.LASF268
 10586 1e86 08       		.byte	0x8
 10587 1e87 9407     		.value	0x794
 10588 1e89 00000000 		.long	.LASF271
 10589 1e8d 090A0000 		.long	0xa09
 10590 1e91 01       		.byte	0x1
 10591 1e92 9A1E0000 		.long	0x1e9a
 10592 1e96 AA1E0000 		.long	0x1eaa
 10593 1e9a 08       		.uleb128 0x8
 10594 1e9b 74C00000 		.long	0xc074
 10595 1e9f 09       		.uleb128 0x9
 10596 1ea0 CEAE0000 		.long	0xaece
 10597 1ea4 09       		.uleb128 0x9
 10598 1ea5 090A0000 		.long	0xa09
 10599 1ea9 00       		.byte	0
 10600 1eaa 32       		.uleb128 0x32
 10601 1eab 00000000 		.long	.LASF268
 10602 1eaf 08       		.byte	0x8
 10603 1eb0 A507     		.value	0x7a5
 10604 1eb2 00000000 		.long	.LASF272
 10605 1eb6 090A0000 		.long	0xa09
 10606 1eba 01       		.byte	0x1
 10607 1ebb C31E0000 		.long	0x1ec3
 10608 1ebf D31E0000 		.long	0x1ed3
 10609 1ec3 08       		.uleb128 0x8
 10610 1ec4 74C00000 		.long	0xc074
 10611 1ec8 09       		.uleb128 0x9
 10612 1ec9 ACAE0000 		.long	0xaeac
 10613 1ecd 09       		.uleb128 0x9
 10614 1ece 090A0000 		.long	0xa09
 10615 1ed2 00       		.byte	0
 10616 1ed3 32       		.uleb128 0x32
 10617 1ed4 00000000 		.long	.LASF273
 10618 1ed8 08       		.byte	0x8
 10619 1ed9 B307     		.value	0x7b3
 10620 1edb 00000000 		.long	.LASF274
 10621 1edf 090A0000 		.long	0xa09
 10622 1ee3 01       		.byte	0x1
 10623 1ee4 EC1E0000 		.long	0x1eec
 10624 1ee8 FC1E0000 		.long	0x1efc
 10625 1eec 08       		.uleb128 0x8
 10626 1eed 74C00000 		.long	0xc074
 10627 1ef1 09       		.uleb128 0x9
 10628 1ef2 8CC00000 		.long	0xc08c
 10629 1ef6 09       		.uleb128 0x9
 10630 1ef7 090A0000 		.long	0xa09
 10631 1efb 00       		.byte	0
 10632 1efc 32       		.uleb128 0x32
 10633 1efd 00000000 		.long	.LASF273
 10634 1f01 08       		.byte	0x8
 10635 1f02 C407     		.value	0x7c4
 10636 1f04 00000000 		.long	.LASF275
 10637 1f08 090A0000 		.long	0xa09
 10638 1f0c 01       		.byte	0x1
 10639 1f0d 151F0000 		.long	0x1f15
 10640 1f11 2A1F0000 		.long	0x1f2a
GAS LISTING /tmp/ccJUMvuF.s 			page 488


 10641 1f15 08       		.uleb128 0x8
 10642 1f16 74C00000 		.long	0xc074
 10643 1f1a 09       		.uleb128 0x9
 10644 1f1b CEAE0000 		.long	0xaece
 10645 1f1f 09       		.uleb128 0x9
 10646 1f20 090A0000 		.long	0xa09
 10647 1f24 09       		.uleb128 0x9
 10648 1f25 090A0000 		.long	0xa09
 10649 1f29 00       		.byte	0
 10650 1f2a 32       		.uleb128 0x32
 10651 1f2b 00000000 		.long	.LASF273
 10652 1f2f 08       		.byte	0x8
 10653 1f30 D107     		.value	0x7d1
 10654 1f32 00000000 		.long	.LASF276
 10655 1f36 090A0000 		.long	0xa09
 10656 1f3a 01       		.byte	0x1
 10657 1f3b 431F0000 		.long	0x1f43
 10658 1f3f 531F0000 		.long	0x1f53
 10659 1f43 08       		.uleb128 0x8
 10660 1f44 74C00000 		.long	0xc074
 10661 1f48 09       		.uleb128 0x9
 10662 1f49 CEAE0000 		.long	0xaece
 10663 1f4d 09       		.uleb128 0x9
 10664 1f4e 090A0000 		.long	0xa09
 10665 1f52 00       		.byte	0
 10666 1f53 32       		.uleb128 0x32
 10667 1f54 00000000 		.long	.LASF273
 10668 1f58 08       		.byte	0x8
 10669 1f59 E407     		.value	0x7e4
 10670 1f5b 00000000 		.long	.LASF277
 10671 1f5f 090A0000 		.long	0xa09
 10672 1f63 01       		.byte	0x1
 10673 1f64 6C1F0000 		.long	0x1f6c
 10674 1f68 7C1F0000 		.long	0x1f7c
 10675 1f6c 08       		.uleb128 0x8
 10676 1f6d 74C00000 		.long	0xc074
 10677 1f71 09       		.uleb128 0x9
 10678 1f72 ACAE0000 		.long	0xaeac
 10679 1f76 09       		.uleb128 0x9
 10680 1f77 090A0000 		.long	0xa09
 10681 1f7b 00       		.byte	0
 10682 1f7c 32       		.uleb128 0x32
 10683 1f7d 00000000 		.long	.LASF278
 10684 1f81 08       		.byte	0x8
 10685 1f82 F307     		.value	0x7f3
 10686 1f84 00000000 		.long	.LASF279
 10687 1f88 090A0000 		.long	0xa09
 10688 1f8c 01       		.byte	0x1
 10689 1f8d 951F0000 		.long	0x1f95
 10690 1f91 A51F0000 		.long	0x1fa5
 10691 1f95 08       		.uleb128 0x8
 10692 1f96 74C00000 		.long	0xc074
 10693 1f9a 09       		.uleb128 0x9
 10694 1f9b 8CC00000 		.long	0xc08c
 10695 1f9f 09       		.uleb128 0x9
 10696 1fa0 090A0000 		.long	0xa09
 10697 1fa4 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 489


 10698 1fa5 32       		.uleb128 0x32
 10699 1fa6 00000000 		.long	.LASF278
 10700 1faa 08       		.byte	0x8
 10701 1fab 0408     		.value	0x804
 10702 1fad 00000000 		.long	.LASF280
 10703 1fb1 090A0000 		.long	0xa09
 10704 1fb5 01       		.byte	0x1
 10705 1fb6 BE1F0000 		.long	0x1fbe
 10706 1fba D31F0000 		.long	0x1fd3
 10707 1fbe 08       		.uleb128 0x8
 10708 1fbf 74C00000 		.long	0xc074
 10709 1fc3 09       		.uleb128 0x9
 10710 1fc4 CEAE0000 		.long	0xaece
 10711 1fc8 09       		.uleb128 0x9
 10712 1fc9 090A0000 		.long	0xa09
 10713 1fcd 09       		.uleb128 0x9
 10714 1fce 090A0000 		.long	0xa09
 10715 1fd2 00       		.byte	0
 10716 1fd3 32       		.uleb128 0x32
 10717 1fd4 00000000 		.long	.LASF278
 10718 1fd8 08       		.byte	0x8
 10719 1fd9 1108     		.value	0x811
 10720 1fdb 00000000 		.long	.LASF281
 10721 1fdf 090A0000 		.long	0xa09
 10722 1fe3 01       		.byte	0x1
 10723 1fe4 EC1F0000 		.long	0x1fec
 10724 1fe8 FC1F0000 		.long	0x1ffc
 10725 1fec 08       		.uleb128 0x8
 10726 1fed 74C00000 		.long	0xc074
 10727 1ff1 09       		.uleb128 0x9
 10728 1ff2 CEAE0000 		.long	0xaece
 10729 1ff6 09       		.uleb128 0x9
 10730 1ff7 090A0000 		.long	0xa09
 10731 1ffb 00       		.byte	0
 10732 1ffc 32       		.uleb128 0x32
 10733 1ffd 00000000 		.long	.LASF278
 10734 2001 08       		.byte	0x8
 10735 2002 2408     		.value	0x824
 10736 2004 00000000 		.long	.LASF282
 10737 2008 090A0000 		.long	0xa09
 10738 200c 01       		.byte	0x1
 10739 200d 15200000 		.long	0x2015
 10740 2011 25200000 		.long	0x2025
 10741 2015 08       		.uleb128 0x8
 10742 2016 74C00000 		.long	0xc074
 10743 201a 09       		.uleb128 0x9
 10744 201b ACAE0000 		.long	0xaeac
 10745 201f 09       		.uleb128 0x9
 10746 2020 090A0000 		.long	0xa09
 10747 2024 00       		.byte	0
 10748 2025 32       		.uleb128 0x32
 10749 2026 00000000 		.long	.LASF283
 10750 202a 08       		.byte	0x8
 10751 202b 3208     		.value	0x832
 10752 202d 00000000 		.long	.LASF284
 10753 2031 090A0000 		.long	0xa09
 10754 2035 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 490


 10755 2036 3E200000 		.long	0x203e
 10756 203a 4E200000 		.long	0x204e
 10757 203e 08       		.uleb128 0x8
 10758 203f 74C00000 		.long	0xc074
 10759 2043 09       		.uleb128 0x9
 10760 2044 8CC00000 		.long	0xc08c
 10761 2048 09       		.uleb128 0x9
 10762 2049 090A0000 		.long	0xa09
 10763 204d 00       		.byte	0
 10764 204e 32       		.uleb128 0x32
 10765 204f 00000000 		.long	.LASF283
 10766 2053 08       		.byte	0x8
 10767 2054 4308     		.value	0x843
 10768 2056 00000000 		.long	.LASF285
 10769 205a 090A0000 		.long	0xa09
 10770 205e 01       		.byte	0x1
 10771 205f 67200000 		.long	0x2067
 10772 2063 7C200000 		.long	0x207c
 10773 2067 08       		.uleb128 0x8
 10774 2068 74C00000 		.long	0xc074
 10775 206c 09       		.uleb128 0x9
 10776 206d CEAE0000 		.long	0xaece
 10777 2071 09       		.uleb128 0x9
 10778 2072 090A0000 		.long	0xa09
 10779 2076 09       		.uleb128 0x9
 10780 2077 090A0000 		.long	0xa09
 10781 207b 00       		.byte	0
 10782 207c 32       		.uleb128 0x32
 10783 207d 00000000 		.long	.LASF283
 10784 2081 08       		.byte	0x8
 10785 2082 5108     		.value	0x851
 10786 2084 00000000 		.long	.LASF286
 10787 2088 090A0000 		.long	0xa09
 10788 208c 01       		.byte	0x1
 10789 208d 95200000 		.long	0x2095
 10790 2091 A5200000 		.long	0x20a5
 10791 2095 08       		.uleb128 0x8
 10792 2096 74C00000 		.long	0xc074
 10793 209a 09       		.uleb128 0x9
 10794 209b CEAE0000 		.long	0xaece
 10795 209f 09       		.uleb128 0x9
 10796 20a0 090A0000 		.long	0xa09
 10797 20a4 00       		.byte	0
 10798 20a5 32       		.uleb128 0x32
 10799 20a6 00000000 		.long	.LASF283
 10800 20aa 08       		.byte	0x8
 10801 20ab 6208     		.value	0x862
 10802 20ad 00000000 		.long	.LASF287
 10803 20b1 090A0000 		.long	0xa09
 10804 20b5 01       		.byte	0x1
 10805 20b6 BE200000 		.long	0x20be
 10806 20ba CE200000 		.long	0x20ce
 10807 20be 08       		.uleb128 0x8
 10808 20bf 74C00000 		.long	0xc074
 10809 20c3 09       		.uleb128 0x9
 10810 20c4 ACAE0000 		.long	0xaeac
 10811 20c8 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 491


 10812 20c9 090A0000 		.long	0xa09
 10813 20cd 00       		.byte	0
 10814 20ce 32       		.uleb128 0x32
 10815 20cf 00000000 		.long	.LASF288
 10816 20d3 08       		.byte	0x8
 10817 20d4 7108     		.value	0x871
 10818 20d6 00000000 		.long	.LASF289
 10819 20da 090A0000 		.long	0xa09
 10820 20de 01       		.byte	0x1
 10821 20df E7200000 		.long	0x20e7
 10822 20e3 F7200000 		.long	0x20f7
 10823 20e7 08       		.uleb128 0x8
 10824 20e8 74C00000 		.long	0xc074
 10825 20ec 09       		.uleb128 0x9
 10826 20ed 8CC00000 		.long	0xc08c
 10827 20f1 09       		.uleb128 0x9
 10828 20f2 090A0000 		.long	0xa09
 10829 20f6 00       		.byte	0
 10830 20f7 32       		.uleb128 0x32
 10831 20f8 00000000 		.long	.LASF288
 10832 20fc 08       		.byte	0x8
 10833 20fd 8208     		.value	0x882
 10834 20ff 00000000 		.long	.LASF290
 10835 2103 090A0000 		.long	0xa09
 10836 2107 01       		.byte	0x1
 10837 2108 10210000 		.long	0x2110
 10838 210c 25210000 		.long	0x2125
 10839 2110 08       		.uleb128 0x8
 10840 2111 74C00000 		.long	0xc074
 10841 2115 09       		.uleb128 0x9
 10842 2116 CEAE0000 		.long	0xaece
 10843 211a 09       		.uleb128 0x9
 10844 211b 090A0000 		.long	0xa09
 10845 211f 09       		.uleb128 0x9
 10846 2120 090A0000 		.long	0xa09
 10847 2124 00       		.byte	0
 10848 2125 32       		.uleb128 0x32
 10849 2126 00000000 		.long	.LASF288
 10850 212a 08       		.byte	0x8
 10851 212b 9008     		.value	0x890
 10852 212d 00000000 		.long	.LASF291
 10853 2131 090A0000 		.long	0xa09
 10854 2135 01       		.byte	0x1
 10855 2136 3E210000 		.long	0x213e
 10856 213a 4E210000 		.long	0x214e
 10857 213e 08       		.uleb128 0x8
 10858 213f 74C00000 		.long	0xc074
 10859 2143 09       		.uleb128 0x9
 10860 2144 CEAE0000 		.long	0xaece
 10861 2148 09       		.uleb128 0x9
 10862 2149 090A0000 		.long	0xa09
 10863 214d 00       		.byte	0
 10864 214e 32       		.uleb128 0x32
 10865 214f 00000000 		.long	.LASF288
 10866 2153 08       		.byte	0x8
 10867 2154 A108     		.value	0x8a1
 10868 2156 00000000 		.long	.LASF292
GAS LISTING /tmp/ccJUMvuF.s 			page 492


 10869 215a 090A0000 		.long	0xa09
 10870 215e 01       		.byte	0x1
 10871 215f 67210000 		.long	0x2167
 10872 2163 77210000 		.long	0x2177
 10873 2167 08       		.uleb128 0x8
 10874 2168 74C00000 		.long	0xc074
 10875 216c 09       		.uleb128 0x9
 10876 216d ACAE0000 		.long	0xaeac
 10877 2171 09       		.uleb128 0x9
 10878 2172 090A0000 		.long	0xa09
 10879 2176 00       		.byte	0
 10880 2177 32       		.uleb128 0x32
 10881 2178 00000000 		.long	.LASF293
 10882 217c 08       		.byte	0x8
 10883 217d B108     		.value	0x8b1
 10884 217f 00000000 		.long	.LASF294
 10885 2183 A8090000 		.long	0x9a8
 10886 2187 01       		.byte	0x1
 10887 2188 90210000 		.long	0x2190
 10888 218c A0210000 		.long	0x21a0
 10889 2190 08       		.uleb128 0x8
 10890 2191 74C00000 		.long	0xc074
 10891 2195 09       		.uleb128 0x9
 10892 2196 090A0000 		.long	0xa09
 10893 219a 09       		.uleb128 0x9
 10894 219b 090A0000 		.long	0xa09
 10895 219f 00       		.byte	0
 10896 21a0 32       		.uleb128 0x32
 10897 21a1 00000000 		.long	.LASF34
 10898 21a5 08       		.byte	0x8
 10899 21a6 C408     		.value	0x8c4
 10900 21a8 00000000 		.long	.LASF295
 10901 21ac 28930000 		.long	0x9328
 10902 21b0 01       		.byte	0x1
 10903 21b1 B9210000 		.long	0x21b9
 10904 21b5 C4210000 		.long	0x21c4
 10905 21b9 08       		.uleb128 0x8
 10906 21ba 74C00000 		.long	0xc074
 10907 21be 09       		.uleb128 0x9
 10908 21bf 8CC00000 		.long	0xc08c
 10909 21c3 00       		.byte	0
 10910 21c4 32       		.uleb128 0x32
 10911 21c5 00000000 		.long	.LASF34
 10912 21c9 08       		.byte	0x8
 10913 21ca E408     		.value	0x8e4
 10914 21cc 00000000 		.long	.LASF296
 10915 21d0 28930000 		.long	0x9328
 10916 21d4 01       		.byte	0x1
 10917 21d5 DD210000 		.long	0x21dd
 10918 21d9 F2210000 		.long	0x21f2
 10919 21dd 08       		.uleb128 0x8
 10920 21de 74C00000 		.long	0xc074
 10921 21e2 09       		.uleb128 0x9
 10922 21e3 090A0000 		.long	0xa09
 10923 21e7 09       		.uleb128 0x9
 10924 21e8 090A0000 		.long	0xa09
 10925 21ec 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 493


 10926 21ed 8CC00000 		.long	0xc08c
 10927 21f1 00       		.byte	0
 10928 21f2 32       		.uleb128 0x32
 10929 21f3 00000000 		.long	.LASF34
 10930 21f7 08       		.byte	0x8
 10931 21f8 FE08     		.value	0x8fe
 10932 21fa 00000000 		.long	.LASF297
 10933 21fe 28930000 		.long	0x9328
 10934 2202 01       		.byte	0x1
 10935 2203 0B220000 		.long	0x220b
 10936 2207 2A220000 		.long	0x222a
 10937 220b 08       		.uleb128 0x8
 10938 220c 74C00000 		.long	0xc074
 10939 2210 09       		.uleb128 0x9
 10940 2211 090A0000 		.long	0xa09
 10941 2215 09       		.uleb128 0x9
 10942 2216 090A0000 		.long	0xa09
 10943 221a 09       		.uleb128 0x9
 10944 221b 8CC00000 		.long	0xc08c
 10945 221f 09       		.uleb128 0x9
 10946 2220 090A0000 		.long	0xa09
 10947 2224 09       		.uleb128 0x9
 10948 2225 090A0000 		.long	0xa09
 10949 2229 00       		.byte	0
 10950 222a 32       		.uleb128 0x32
 10951 222b 00000000 		.long	.LASF34
 10952 222f 08       		.byte	0x8
 10953 2230 1009     		.value	0x910
 10954 2232 00000000 		.long	.LASF298
 10955 2236 28930000 		.long	0x9328
 10956 223a 01       		.byte	0x1
 10957 223b 43220000 		.long	0x2243
 10958 223f 4E220000 		.long	0x224e
 10959 2243 08       		.uleb128 0x8
 10960 2244 74C00000 		.long	0xc074
 10961 2248 09       		.uleb128 0x9
 10962 2249 CEAE0000 		.long	0xaece
 10963 224d 00       		.byte	0
 10964 224e 32       		.uleb128 0x32
 10965 224f 00000000 		.long	.LASF34
 10966 2253 08       		.byte	0x8
 10967 2254 2809     		.value	0x928
 10968 2256 00000000 		.long	.LASF299
 10969 225a 28930000 		.long	0x9328
 10970 225e 01       		.byte	0x1
 10971 225f 67220000 		.long	0x2267
 10972 2263 7C220000 		.long	0x227c
 10973 2267 08       		.uleb128 0x8
 10974 2268 74C00000 		.long	0xc074
 10975 226c 09       		.uleb128 0x9
 10976 226d 090A0000 		.long	0xa09
 10977 2271 09       		.uleb128 0x9
 10978 2272 090A0000 		.long	0xa09
 10979 2276 09       		.uleb128 0x9
 10980 2277 CEAE0000 		.long	0xaece
 10981 227b 00       		.byte	0
 10982 227c 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 494


 10983 227d 00000000 		.long	.LASF34
 10984 2281 08       		.byte	0x8
 10985 2282 4309     		.value	0x943
 10986 2284 00000000 		.long	.LASF300
 10987 2288 28930000 		.long	0x9328
 10988 228c 01       		.byte	0x1
 10989 228d 95220000 		.long	0x2295
 10990 2291 AF220000 		.long	0x22af
 10991 2295 08       		.uleb128 0x8
 10992 2296 74C00000 		.long	0xc074
 10993 229a 09       		.uleb128 0x9
 10994 229b 090A0000 		.long	0xa09
 10995 229f 09       		.uleb128 0x9
 10996 22a0 090A0000 		.long	0xa09
 10997 22a4 09       		.uleb128 0x9
 10998 22a5 CEAE0000 		.long	0xaece
 10999 22a9 09       		.uleb128 0x9
 11000 22aa 090A0000 		.long	0xa09
 11001 22ae 00       		.byte	0
 11002 22af 11       		.uleb128 0x11
 11003 22b0 B90A0000 		.long	0xab9
 11004 22b4 35       		.uleb128 0x35
 11005 22b5 00000000 		.long	.LASF301
 11006 22b9 ACAE0000 		.long	0xaeac
 11007 22bd 36       		.uleb128 0x36
 11008 22be 00000000 		.long	.LASF302
 11009 22c2 BD040000 		.long	0x4bd
 11010 22c6 36       		.uleb128 0x36
 11011 22c7 00000000 		.long	.LASF303
 11012 22cb 6A070000 		.long	0x76a
 11013 22cf 00       		.byte	0
 11014 22d0 14       		.uleb128 0x14
 11015 22d1 00000000 		.long	.LASF305
 11016 22d5 14       		.uleb128 0x14
 11017 22d6 00000000 		.long	.LASF306
 11018 22da 11       		.uleb128 0x11
 11019 22db A8090000 		.long	0x9a8
 11020 22df 05       		.uleb128 0x5
 11021 22e0 00000000 		.long	.LASF307
 11022 22e4 10       		.byte	0x10
 11023 22e5 26       		.byte	0x26
 11024 22e6 2F       		.byte	0x2f
 11025 22e7 BF230000 		.long	0x23bf
 11026 22eb 22       		.uleb128 0x22
 11027 22ec 00000000 		.long	.LASF68
 11028 22f0 26       		.byte	0x26
 11029 22f1 36       		.byte	0x36
 11030 22f2 CEAE0000 		.long	0xaece
 11031 22f6 01       		.byte	0x1
 11032 22f7 06       		.uleb128 0x6
 11033 22f8 00000000 		.long	.LASF308
 11034 22fc 26       		.byte	0x26
 11035 22fd 3A       		.byte	0x3a
 11036 22fe EB220000 		.long	0x22eb
 11037 2302 00       		.byte	0
 11038 2303 22       		.uleb128 0x22
 11039 2304 00000000 		.long	.LASF57
GAS LISTING /tmp/ccJUMvuF.s 			page 495


 11040 2308 26       		.byte	0x26
 11041 2309 35       		.byte	0x35
 11042 230a 85060000 		.long	0x685
 11043 230e 01       		.byte	0x1
 11044 230f 06       		.uleb128 0x6
 11045 2310 00000000 		.long	.LASF309
 11046 2314 26       		.byte	0x26
 11047 2315 3B       		.byte	0x3b
 11048 2316 03230000 		.long	0x2303
 11049 231a 08       		.byte	0x8
 11050 231b 22       		.uleb128 0x22
 11051 231c 00000000 		.long	.LASF69
 11052 2320 26       		.byte	0x26
 11053 2321 37       		.byte	0x37
 11054 2322 CEAE0000 		.long	0xaece
 11055 2326 01       		.byte	0x1
 11056 2327 37       		.uleb128 0x37
 11057 2328 00000000 		.long	.LASF310
 11058 232c 26       		.byte	0x26
 11059 232d 3E       		.byte	0x3e
 11060 232e 36230000 		.long	0x2336
 11061 2332 46230000 		.long	0x2346
 11062 2336 08       		.uleb128 0x8
 11063 2337 9FC00000 		.long	0xc09f
 11064 233b 09       		.uleb128 0x9
 11065 233c 1B230000 		.long	0x231b
 11066 2340 09       		.uleb128 0x9
 11067 2341 03230000 		.long	0x2303
 11068 2345 00       		.byte	0
 11069 2346 0C       		.uleb128 0xc
 11070 2347 00000000 		.long	.LASF310
 11071 234b 26       		.byte	0x26
 11072 234c 42       		.byte	0x42
 11073 234d 01       		.byte	0x1
 11074 234e 56230000 		.long	0x2356
 11075 2352 5C230000 		.long	0x235c
 11076 2356 08       		.uleb128 0x8
 11077 2357 9FC00000 		.long	0xc09f
 11078 235b 00       		.byte	0
 11079 235c 0D       		.uleb128 0xd
 11080 235d 00000000 		.long	.LASF168
 11081 2361 26       		.byte	0x26
 11082 2362 47       		.byte	0x47
 11083 2363 00000000 		.long	.LASF311
 11084 2367 03230000 		.long	0x2303
 11085 236b 01       		.byte	0x1
 11086 236c 74230000 		.long	0x2374
 11087 2370 7A230000 		.long	0x237a
 11088 2374 08       		.uleb128 0x8
 11089 2375 A5C00000 		.long	0xc0a5
 11090 2379 00       		.byte	0
 11091 237a 0D       		.uleb128 0xd
 11092 237b 00000000 		.long	.LASF149
 11093 237f 26       		.byte	0x26
 11094 2380 4B       		.byte	0x4b
 11095 2381 00000000 		.long	.LASF312
 11096 2385 1B230000 		.long	0x231b
GAS LISTING /tmp/ccJUMvuF.s 			page 496


 11097 2389 01       		.byte	0x1
 11098 238a 92230000 		.long	0x2392
 11099 238e 98230000 		.long	0x2398
 11100 2392 08       		.uleb128 0x8
 11101 2393 A5C00000 		.long	0xc0a5
 11102 2397 00       		.byte	0
 11103 2398 38       		.uleb128 0x38
 11104 2399 656E6400 		.string	"end"
 11105 239d 26       		.byte	0x26
 11106 239e 4F       		.byte	0x4f
 11107 239f 00000000 		.long	.LASF411
 11108 23a3 1B230000 		.long	0x231b
 11109 23a7 01       		.byte	0x1
 11110 23a8 B0230000 		.long	0x23b0
 11111 23ac B6230000 		.long	0x23b6
 11112 23b0 08       		.uleb128 0x8
 11113 23b1 A5C00000 		.long	0xc0a5
 11114 23b5 00       		.byte	0
 11115 23b6 18       		.uleb128 0x18
 11116 23b7 5F4500   		.string	"_E"
 11117 23ba ACAE0000 		.long	0xaeac
 11118 23be 00       		.byte	0
 11119 23bf 11       		.uleb128 0x11
 11120 23c0 DF220000 		.long	0x22df
 11121 23c4 11       		.uleb128 0x11
 11122 23c5 C9230000 		.long	0x23c9
 11123 23c9 13       		.uleb128 0x13
 11124 23ca 00000000 		.long	.LASF313
 11125 23ce 27       		.byte	0x27
 11126 23cf 3E       		.byte	0x3e
 11127 23d0 A8090000 		.long	0x9a8
 11128 23d4 15       		.uleb128 0x15
 11129 23d5 00000000 		.long	.LASF314
 11130 23d9 01       		.byte	0x1
 11131 23da 28       		.byte	0x28
 11132 23db 27       		.byte	0x27
 11133 23dc 15       		.uleb128 0x15
 11134 23dd 00000000 		.long	.LASF315
 11135 23e1 01       		.byte	0x1
 11136 23e2 28       		.byte	0x28
 11137 23e3 44       		.byte	0x44
 11138 23e4 16       		.uleb128 0x16
 11139 23e5 00000000 		.long	.LASF316
 11140 23e9 01       		.byte	0x1
 11141 23ea 28       		.byte	0x28
 11142 23eb 45       		.byte	0x45
 11143 23ec 31240000 		.long	0x2431
 11144 23f0 16       		.uleb128 0x16
 11145 23f1 00000000 		.long	.LASF317
 11146 23f5 01       		.byte	0x1
 11147 23f6 28       		.byte	0x28
 11148 23f7 46       		.byte	0x46
 11149 23f8 0F240000 		.long	0x240f
 11150 23fc 39       		.uleb128 0x39
 11151 23fd 00000000 		.long	.LASF317
 11152 2401 28       		.byte	0x28
 11153 2402 46       		.byte	0x46
GAS LISTING /tmp/ccJUMvuF.s 			page 497


 11154 2403 07240000 		.long	0x2407
 11155 2407 08       		.uleb128 0x8
 11156 2408 C4C00000 		.long	0xc0c4
 11157 240c 3A       		.uleb128 0x3a
 11158 240d 00       		.byte	0
 11159 240e 00       		.byte	0
 11160 240f 25       		.uleb128 0x25
 11161 2410 DC230000 		.long	0x23dc
 11162 2414 00       		.byte	0
 11163 2415 06       		.uleb128 0x6
 11164 2416 00000000 		.long	.LASF318
 11165 241a 28       		.byte	0x28
 11166 241b 46       		.byte	0x46
 11167 241c F0230000 		.long	0x23f0
 11168 2420 00       		.byte	0
 11169 2421 28       		.uleb128 0x28
 11170 2422 00000000 		.long	.LASF316
 11171 2426 2A240000 		.long	0x242a
 11172 242a 08       		.uleb128 0x8
 11173 242b CAC00000 		.long	0xc0ca
 11174 242f 00       		.byte	0
 11175 2430 00       		.byte	0
 11176 2431 3B       		.uleb128 0x3b
 11177 2432 00000000 		.long	.LASF320
 11178 2436 01       		.byte	0x1
 11179 2437 0B       		.byte	0xb
 11180 2438 0002     		.value	0x200
 11181 243a 5B240000 		.long	0x245b
 11182 243e 3C       		.uleb128 0x3c
 11183 243f 00000000 		.long	.LASF13
 11184 2443 0B       		.byte	0xb
 11185 2444 0302     		.value	0x203
 11186 2446 00000000 		.long	.LASF321
 11187 244a 01       		.byte	0x1
 11188 244b 4F240000 		.long	0x244f
 11189 244f 08       		.uleb128 0x8
 11190 2450 D0C00000 		.long	0xc0d0
 11191 2454 09       		.uleb128 0x9
 11192 2455 D6C00000 		.long	0xc0d6
 11193 2459 00       		.byte	0
 11194 245a 00       		.byte	0
 11195 245b 3D       		.uleb128 0x3d
 11196 245c 00000000 		.long	.LASF322
 11197 2460 01       		.byte	0x1
 11198 2461 0B       		.byte	0xb
 11199 2462 2C04     		.value	0x42c
 11200 2464 16       		.uleb128 0x16
 11201 2465 00000000 		.long	.LASF323
 11202 2469 01       		.byte	0x1
 11203 246a 1B       		.byte	0x1b
 11204 246b 45       		.byte	0x45
 11205 246c B7240000 		.long	0x24b7
 11206 2470 17       		.uleb128 0x17
 11207 2471 00000000 		.long	.LASF24
 11208 2475 1B       		.byte	0x1b
 11209 2476 47       		.byte	0x47
 11210 2477 C9AE0000 		.long	0xaec9
GAS LISTING /tmp/ccJUMvuF.s 			page 498


 11211 247b 13       		.uleb128 0x13
 11212 247c 00000000 		.long	.LASF19
 11213 2480 1B       		.byte	0x1b
 11214 2481 48       		.byte	0x48
 11215 2482 28930000 		.long	0x9328
 11216 2486 0B       		.uleb128 0xb
 11217 2487 00000000 		.long	.LASF324
 11218 248b 1B       		.byte	0x1b
 11219 248c 4A       		.byte	0x4a
 11220 248d 00000000 		.long	.LASF325
 11221 2491 7B240000 		.long	0x247b
 11222 2495 9D240000 		.long	0x249d
 11223 2499 A3240000 		.long	0x24a3
 11224 249d 08       		.uleb128 0x8
 11225 249e DCC00000 		.long	0xc0dc
 11226 24a2 00       		.byte	0
 11227 24a3 18       		.uleb128 0x18
 11228 24a4 5F547000 		.string	"_Tp"
 11229 24a8 28930000 		.long	0x9328
 11230 24ac 19       		.uleb128 0x19
 11231 24ad 5F5F7600 		.string	"__v"
 11232 24b1 28930000 		.long	0x9328
 11233 24b5 00       		.byte	0
 11234 24b6 00       		.byte	0
 11235 24b7 11       		.uleb128 0x11
 11236 24b8 64240000 		.long	0x2464
 11237 24bc 11       		.uleb128 0x11
 11238 24bd 85060000 		.long	0x685
 11239 24c1 3E       		.uleb128 0x3e
 11240 24c2 00000000 		.long	.LASF345
 11241 24c6 04       		.byte	0x4
 11242 24c7 15       		.byte	0x15
 11243 24c8 33       		.byte	0x33
 11244 24c9 50250000 		.long	0x2550
 11245 24cd 3F       		.uleb128 0x3f
 11246 24ce 00000000 		.long	.LASF326
 11247 24d2 01       		.sleb128 1
 11248 24d3 3F       		.uleb128 0x3f
 11249 24d4 00000000 		.long	.LASF327
 11250 24d8 02       		.sleb128 2
 11251 24d9 3F       		.uleb128 0x3f
 11252 24da 00000000 		.long	.LASF328
 11253 24de 04       		.sleb128 4
 11254 24df 3F       		.uleb128 0x3f
 11255 24e0 00000000 		.long	.LASF329
 11256 24e4 08       		.sleb128 8
 11257 24e5 3F       		.uleb128 0x3f
 11258 24e6 00000000 		.long	.LASF330
 11259 24ea 10       		.sleb128 16
 11260 24eb 3F       		.uleb128 0x3f
 11261 24ec 00000000 		.long	.LASF331
 11262 24f0 20       		.sleb128 32
 11263 24f1 3F       		.uleb128 0x3f
 11264 24f2 00000000 		.long	.LASF332
 11265 24f6 C000     		.sleb128 64
 11266 24f8 3F       		.uleb128 0x3f
 11267 24f9 00000000 		.long	.LASF333
GAS LISTING /tmp/ccJUMvuF.s 			page 499


 11268 24fd 8001     		.sleb128 128
 11269 24ff 3F       		.uleb128 0x3f
 11270 2500 00000000 		.long	.LASF334
 11271 2504 8002     		.sleb128 256
 11272 2506 3F       		.uleb128 0x3f
 11273 2507 00000000 		.long	.LASF335
 11274 250b 8004     		.sleb128 512
 11275 250d 3F       		.uleb128 0x3f
 11276 250e 00000000 		.long	.LASF336
 11277 2512 8008     		.sleb128 1024
 11278 2514 3F       		.uleb128 0x3f
 11279 2515 00000000 		.long	.LASF337
 11280 2519 8010     		.sleb128 2048
 11281 251b 3F       		.uleb128 0x3f
 11282 251c 00000000 		.long	.LASF338
 11283 2520 8020     		.sleb128 4096
 11284 2522 3F       		.uleb128 0x3f
 11285 2523 00000000 		.long	.LASF339
 11286 2527 80C000   		.sleb128 8192
 11287 252a 3F       		.uleb128 0x3f
 11288 252b 00000000 		.long	.LASF340
 11289 252f 808001   		.sleb128 16384
 11290 2532 3F       		.uleb128 0x3f
 11291 2533 00000000 		.long	.LASF341
 11292 2537 B001     		.sleb128 176
 11293 2539 3F       		.uleb128 0x3f
 11294 253a 00000000 		.long	.LASF342
 11295 253e CA00     		.sleb128 74
 11296 2540 3F       		.uleb128 0x3f
 11297 2541 00000000 		.long	.LASF343
 11298 2545 8402     		.sleb128 260
 11299 2547 3F       		.uleb128 0x3f
 11300 2548 00000000 		.long	.LASF344
 11301 254c 808004   		.sleb128 65536
 11302 254f 00       		.byte	0
 11303 2550 3E       		.uleb128 0x3e
 11304 2551 00000000 		.long	.LASF346
 11305 2555 04       		.byte	0x4
 11306 2556 15       		.byte	0x15
 11307 2557 67       		.byte	0x67
 11308 2558 89250000 		.long	0x2589
 11309 255c 3F       		.uleb128 0x3f
 11310 255d 00000000 		.long	.LASF347
 11311 2561 01       		.sleb128 1
 11312 2562 3F       		.uleb128 0x3f
 11313 2563 00000000 		.long	.LASF348
 11314 2567 02       		.sleb128 2
 11315 2568 3F       		.uleb128 0x3f
 11316 2569 00000000 		.long	.LASF349
 11317 256d 04       		.sleb128 4
 11318 256e 3F       		.uleb128 0x3f
 11319 256f 00000000 		.long	.LASF350
 11320 2573 08       		.sleb128 8
 11321 2574 3F       		.uleb128 0x3f
 11322 2575 00000000 		.long	.LASF351
 11323 2579 10       		.sleb128 16
 11324 257a 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccJUMvuF.s 			page 500


 11325 257b 00000000 		.long	.LASF352
 11326 257f 20       		.sleb128 32
 11327 2580 3F       		.uleb128 0x3f
 11328 2581 00000000 		.long	.LASF353
 11329 2585 808004   		.sleb128 65536
 11330 2588 00       		.byte	0
 11331 2589 3E       		.uleb128 0x3e
 11332 258a 00000000 		.long	.LASF354
 11333 258e 04       		.byte	0x4
 11334 258f 15       		.byte	0x15
 11335 2590 8F       		.byte	0x8f
 11336 2591 B6250000 		.long	0x25b6
 11337 2595 3F       		.uleb128 0x3f
 11338 2596 00000000 		.long	.LASF355
 11339 259a 00       		.sleb128 0
 11340 259b 3F       		.uleb128 0x3f
 11341 259c 00000000 		.long	.LASF356
 11342 25a0 01       		.sleb128 1
 11343 25a1 3F       		.uleb128 0x3f
 11344 25a2 00000000 		.long	.LASF357
 11345 25a6 02       		.sleb128 2
 11346 25a7 3F       		.uleb128 0x3f
 11347 25a8 00000000 		.long	.LASF358
 11348 25ac 04       		.sleb128 4
 11349 25ad 3F       		.uleb128 0x3f
 11350 25ae 00000000 		.long	.LASF359
 11351 25b2 808004   		.sleb128 65536
 11352 25b5 00       		.byte	0
 11353 25b6 3E       		.uleb128 0x3e
 11354 25b7 00000000 		.long	.LASF360
 11355 25bb 04       		.byte	0x4
 11356 25bc 15       		.byte	0x15
 11357 25bd B5       		.byte	0xb5
 11358 25be DD250000 		.long	0x25dd
 11359 25c2 3F       		.uleb128 0x3f
 11360 25c3 00000000 		.long	.LASF361
 11361 25c7 00       		.sleb128 0
 11362 25c8 3F       		.uleb128 0x3f
 11363 25c9 00000000 		.long	.LASF362
 11364 25cd 01       		.sleb128 1
 11365 25ce 3F       		.uleb128 0x3f
 11366 25cf 00000000 		.long	.LASF363
 11367 25d3 02       		.sleb128 2
 11368 25d4 3F       		.uleb128 0x3f
 11369 25d5 00000000 		.long	.LASF364
 11370 25d9 808004   		.sleb128 65536
 11371 25dc 00       		.byte	0
 11372 25dd 40       		.uleb128 0x40
 11373 25de 00000000 		.long	.LASF396
 11374 25e2 66280000 		.long	0x2866
 11375 25e6 41       		.uleb128 0x41
 11376 25e7 00000000 		.long	.LASF367
 11377 25eb 01       		.byte	0x1
 11378 25ec 15       		.byte	0x15
 11379 25ed 1502     		.value	0x215
 11380 25ef 01       		.byte	0x1
 11381 25f0 3C260000 		.long	0x263c
GAS LISTING /tmp/ccJUMvuF.s 			page 501


 11382 25f4 42       		.uleb128 0x42
 11383 25f5 00000000 		.long	.LASF365
 11384 25f9 15       		.byte	0x15
 11385 25fa 1D02     		.value	0x21d
 11386 25fc 87B90000 		.long	0xb987
 11387 2600 42       		.uleb128 0x42
 11388 2601 00000000 		.long	.LASF366
 11389 2605 15       		.byte	0x15
 11390 2606 1E02     		.value	0x21e
 11391 2608 30930000 		.long	0x9330
 11392 260c 30       		.uleb128 0x30
 11393 260d 00000000 		.long	.LASF367
 11394 2611 15       		.byte	0x15
 11395 2612 1902     		.value	0x219
 11396 2614 01       		.byte	0x1
 11397 2615 1D260000 		.long	0x261d
 11398 2619 23260000 		.long	0x2623
 11399 261d 08       		.uleb128 0x8
 11400 261e EDC00000 		.long	0xc0ed
 11401 2622 00       		.byte	0
 11402 2623 43       		.uleb128 0x43
 11403 2624 00000000 		.long	.LASF368
 11404 2628 15       		.byte	0x15
 11405 2629 1A02     		.value	0x21a
 11406 262b 01       		.byte	0x1
 11407 262c 30260000 		.long	0x2630
 11408 2630 08       		.uleb128 0x8
 11409 2631 EDC00000 		.long	0xc0ed
 11410 2635 08       		.uleb128 0x8
 11411 2636 28930000 		.long	0x9328
 11412 263a 00       		.byte	0
 11413 263b 00       		.byte	0
 11414 263c 44       		.uleb128 0x44
 11415 263d 00000000 		.long	.LASF369
 11416 2641 15       		.byte	0x15
 11417 2642 4A01     		.value	0x14a
 11418 2644 89250000 		.long	0x2589
 11419 2648 01       		.byte	0x1
 11420 2649 32       		.uleb128 0x32
 11421 264a 00000000 		.long	.LASF370
 11422 264e 15       		.byte	0x15
 11423 264f 5302     		.value	0x253
 11424 2651 00000000 		.long	.LASF371
 11425 2655 72260000 		.long	0x2672
 11426 2659 01       		.byte	0x1
 11427 265a 62260000 		.long	0x2662
 11428 265e 72260000 		.long	0x2672
 11429 2662 08       		.uleb128 0x8
 11430 2663 CACB0000 		.long	0xcbca
 11431 2667 09       		.uleb128 0x9
 11432 2668 72260000 		.long	0x2672
 11433 266c 09       		.uleb128 0x9
 11434 266d 72260000 		.long	0x2672
 11435 2671 00       		.byte	0
 11436 2672 22       		.uleb128 0x22
 11437 2673 00000000 		.long	.LASF372
 11438 2677 15       		.byte	0x15
GAS LISTING /tmp/ccJUMvuF.s 			page 502


 11439 2678 FF       		.byte	0xff
 11440 2679 C1240000 		.long	0x24c1
 11441 267d 01       		.byte	0x1
 11442 267e 45       		.uleb128 0x45
 11443 267f 00000000 		.long	.LASF373
 11444 2683 15       		.byte	0x15
 11445 2684 0201     		.value	0x102
 11446 2686 8C260000 		.long	0x268c
 11447 268a 01       		.byte	0x1
 11448 268b 01       		.byte	0x1
 11449 268c 11       		.uleb128 0x11
 11450 268d 72260000 		.long	0x2672
 11451 2691 46       		.uleb128 0x46
 11452 2692 64656300 		.string	"dec"
 11453 2696 15       		.byte	0x15
 11454 2697 0501     		.value	0x105
 11455 2699 8C260000 		.long	0x268c
 11456 269d 01       		.byte	0x1
 11457 269e 02       		.byte	0x2
 11458 269f 45       		.uleb128 0x45
 11459 26a0 00000000 		.long	.LASF374
 11460 26a4 15       		.byte	0x15
 11461 26a5 0801     		.value	0x108
 11462 26a7 8C260000 		.long	0x268c
 11463 26ab 01       		.byte	0x1
 11464 26ac 04       		.byte	0x4
 11465 26ad 46       		.uleb128 0x46
 11466 26ae 68657800 		.string	"hex"
 11467 26b2 15       		.byte	0x15
 11468 26b3 0B01     		.value	0x10b
 11469 26b5 8C260000 		.long	0x268c
 11470 26b9 01       		.byte	0x1
 11471 26ba 08       		.byte	0x8
 11472 26bb 45       		.uleb128 0x45
 11473 26bc 00000000 		.long	.LASF375
 11474 26c0 15       		.byte	0x15
 11475 26c1 1001     		.value	0x110
 11476 26c3 8C260000 		.long	0x268c
 11477 26c7 01       		.byte	0x1
 11478 26c8 10       		.byte	0x10
 11479 26c9 45       		.uleb128 0x45
 11480 26ca 00000000 		.long	.LASF376
 11481 26ce 15       		.byte	0x15
 11482 26cf 1401     		.value	0x114
 11483 26d1 8C260000 		.long	0x268c
 11484 26d5 01       		.byte	0x1
 11485 26d6 20       		.byte	0x20
 11486 26d7 46       		.uleb128 0x46
 11487 26d8 6F637400 		.string	"oct"
 11488 26dc 15       		.byte	0x15
 11489 26dd 1701     		.value	0x117
 11490 26df 8C260000 		.long	0x268c
 11491 26e3 01       		.byte	0x1
 11492 26e4 40       		.byte	0x40
 11493 26e5 45       		.uleb128 0x45
 11494 26e6 00000000 		.long	.LASF377
 11495 26ea 15       		.byte	0x15
GAS LISTING /tmp/ccJUMvuF.s 			page 503


 11496 26eb 1B01     		.value	0x11b
 11497 26ed 8C260000 		.long	0x268c
 11498 26f1 01       		.byte	0x1
 11499 26f2 80       		.byte	0x80
 11500 26f3 47       		.uleb128 0x47
 11501 26f4 00000000 		.long	.LASF378
 11502 26f8 15       		.byte	0x15
 11503 26f9 1E01     		.value	0x11e
 11504 26fb 8C260000 		.long	0x268c
 11505 26ff 01       		.byte	0x1
 11506 2700 0001     		.value	0x100
 11507 2702 47       		.uleb128 0x47
 11508 2703 00000000 		.long	.LASF379
 11509 2707 15       		.byte	0x15
 11510 2708 2201     		.value	0x122
 11511 270a 8C260000 		.long	0x268c
 11512 270e 01       		.byte	0x1
 11513 270f 0002     		.value	0x200
 11514 2711 47       		.uleb128 0x47
 11515 2712 00000000 		.long	.LASF380
 11516 2716 15       		.byte	0x15
 11517 2717 2601     		.value	0x126
 11518 2719 8C260000 		.long	0x268c
 11519 271d 01       		.byte	0x1
 11520 271e 0004     		.value	0x400
 11521 2720 47       		.uleb128 0x47
 11522 2721 00000000 		.long	.LASF381
 11523 2725 15       		.byte	0x15
 11524 2726 2901     		.value	0x129
 11525 2728 8C260000 		.long	0x268c
 11526 272c 01       		.byte	0x1
 11527 272d 0008     		.value	0x800
 11528 272f 47       		.uleb128 0x47
 11529 2730 00000000 		.long	.LASF382
 11530 2734 15       		.byte	0x15
 11531 2735 2C01     		.value	0x12c
 11532 2737 8C260000 		.long	0x268c
 11533 273b 01       		.byte	0x1
 11534 273c 0010     		.value	0x1000
 11535 273e 47       		.uleb128 0x47
 11536 273f 00000000 		.long	.LASF383
 11537 2743 15       		.byte	0x15
 11538 2744 2F01     		.value	0x12f
 11539 2746 8C260000 		.long	0x268c
 11540 274a 01       		.byte	0x1
 11541 274b 0020     		.value	0x2000
 11542 274d 47       		.uleb128 0x47
 11543 274e 00000000 		.long	.LASF384
 11544 2752 15       		.byte	0x15
 11545 2753 3301     		.value	0x133
 11546 2755 8C260000 		.long	0x268c
 11547 2759 01       		.byte	0x1
 11548 275a 0040     		.value	0x4000
 11549 275c 45       		.uleb128 0x45
 11550 275d 00000000 		.long	.LASF385
 11551 2761 15       		.byte	0x15
 11552 2762 3601     		.value	0x136
GAS LISTING /tmp/ccJUMvuF.s 			page 504


 11553 2764 8C260000 		.long	0x268c
 11554 2768 01       		.byte	0x1
 11555 2769 B0       		.byte	0xb0
 11556 276a 45       		.uleb128 0x45
 11557 276b 00000000 		.long	.LASF386
 11558 276f 15       		.byte	0x15
 11559 2770 3901     		.value	0x139
 11560 2772 8C260000 		.long	0x268c
 11561 2776 01       		.byte	0x1
 11562 2777 4A       		.byte	0x4a
 11563 2778 47       		.uleb128 0x47
 11564 2779 00000000 		.long	.LASF387
 11565 277d 15       		.byte	0x15
 11566 277e 3C01     		.value	0x13c
 11567 2780 8C260000 		.long	0x268c
 11568 2784 01       		.byte	0x1
 11569 2785 0401     		.value	0x104
 11570 2787 45       		.uleb128 0x45
 11571 2788 00000000 		.long	.LASF388
 11572 278c 15       		.byte	0x15
 11573 278d 4E01     		.value	0x14e
 11574 278f 95270000 		.long	0x2795
 11575 2793 01       		.byte	0x1
 11576 2794 01       		.byte	0x1
 11577 2795 11       		.uleb128 0x11
 11578 2796 3C260000 		.long	0x263c
 11579 279a 45       		.uleb128 0x45
 11580 279b 00000000 		.long	.LASF389
 11581 279f 15       		.byte	0x15
 11582 27a0 5101     		.value	0x151
 11583 27a2 95270000 		.long	0x2795
 11584 27a6 01       		.byte	0x1
 11585 27a7 02       		.byte	0x2
 11586 27a8 45       		.uleb128 0x45
 11587 27a9 00000000 		.long	.LASF390
 11588 27ad 15       		.byte	0x15
 11589 27ae 5601     		.value	0x156
 11590 27b0 95270000 		.long	0x2795
 11591 27b4 01       		.byte	0x1
 11592 27b5 04       		.byte	0x4
 11593 27b6 45       		.uleb128 0x45
 11594 27b7 00000000 		.long	.LASF391
 11595 27bb 15       		.byte	0x15
 11596 27bc 5901     		.value	0x159
 11597 27be 95270000 		.long	0x2795
 11598 27c2 01       		.byte	0x1
 11599 27c3 00       		.byte	0
 11600 27c4 44       		.uleb128 0x44
 11601 27c5 00000000 		.long	.LASF392
 11602 27c9 15       		.byte	0x15
 11603 27ca 6901     		.value	0x169
 11604 27cc 50250000 		.long	0x2550
 11605 27d0 01       		.byte	0x1
 11606 27d1 46       		.uleb128 0x46
 11607 27d2 61707000 		.string	"app"
 11608 27d6 15       		.byte	0x15
 11609 27d7 6C01     		.value	0x16c
GAS LISTING /tmp/ccJUMvuF.s 			page 505


 11610 27d9 DF270000 		.long	0x27df
 11611 27dd 01       		.byte	0x1
 11612 27de 01       		.byte	0x1
 11613 27df 11       		.uleb128 0x11
 11614 27e0 C4270000 		.long	0x27c4
 11615 27e4 46       		.uleb128 0x46
 11616 27e5 61746500 		.string	"ate"
 11617 27e9 15       		.byte	0x15
 11618 27ea 6F01     		.value	0x16f
 11619 27ec DF270000 		.long	0x27df
 11620 27f0 01       		.byte	0x1
 11621 27f1 02       		.byte	0x2
 11622 27f2 45       		.uleb128 0x45
 11623 27f3 00000000 		.long	.LASF393
 11624 27f7 15       		.byte	0x15
 11625 27f8 7401     		.value	0x174
 11626 27fa DF270000 		.long	0x27df
 11627 27fe 01       		.byte	0x1
 11628 27ff 04       		.byte	0x4
 11629 2800 46       		.uleb128 0x46
 11630 2801 696E00   		.string	"in"
 11631 2804 15       		.byte	0x15
 11632 2805 7701     		.value	0x177
 11633 2807 DF270000 		.long	0x27df
 11634 280b 01       		.byte	0x1
 11635 280c 08       		.byte	0x8
 11636 280d 46       		.uleb128 0x46
 11637 280e 6F757400 		.string	"out"
 11638 2812 15       		.byte	0x15
 11639 2813 7A01     		.value	0x17a
 11640 2815 DF270000 		.long	0x27df
 11641 2819 01       		.byte	0x1
 11642 281a 10       		.byte	0x10
 11643 281b 45       		.uleb128 0x45
 11644 281c 00000000 		.long	.LASF394
 11645 2820 15       		.byte	0x15
 11646 2821 7D01     		.value	0x17d
 11647 2823 DF270000 		.long	0x27df
 11648 2827 01       		.byte	0x1
 11649 2828 20       		.byte	0x20
 11650 2829 44       		.uleb128 0x44
 11651 282a 00000000 		.long	.LASF395
 11652 282e 15       		.byte	0x15
 11653 282f 8901     		.value	0x189
 11654 2831 B6250000 		.long	0x25b6
 11655 2835 01       		.byte	0x1
 11656 2836 46       		.uleb128 0x46
 11657 2837 62656700 		.string	"beg"
 11658 283b 15       		.byte	0x15
 11659 283c 8C01     		.value	0x18c
 11660 283e 44280000 		.long	0x2844
 11661 2842 01       		.byte	0x1
 11662 2843 00       		.byte	0
 11663 2844 11       		.uleb128 0x11
 11664 2845 29280000 		.long	0x2829
 11665 2849 46       		.uleb128 0x46
 11666 284a 63757200 		.string	"cur"
GAS LISTING /tmp/ccJUMvuF.s 			page 506


 11667 284e 15       		.byte	0x15
 11668 284f 8F01     		.value	0x18f
 11669 2851 44280000 		.long	0x2844
 11670 2855 01       		.byte	0x1
 11671 2856 01       		.byte	0x1
 11672 2857 46       		.uleb128 0x46
 11673 2858 656E6400 		.string	"end"
 11674 285c 15       		.byte	0x15
 11675 285d 9201     		.value	0x192
 11676 285f 44280000 		.long	0x2844
 11677 2863 01       		.byte	0x1
 11678 2864 02       		.byte	0x2
 11679 2865 00       		.byte	0
 11680 2866 12       		.uleb128 0x12
 11681 2867 29       		.byte	0x29
 11682 2868 52       		.byte	0x52
 11683 2869 FEC00000 		.long	0xc0fe
 11684 286d 12       		.uleb128 0x12
 11685 286e 29       		.byte	0x29
 11686 286f 53       		.byte	0x53
 11687 2870 F3C00000 		.long	0xc0f3
 11688 2874 12       		.uleb128 0x12
 11689 2875 29       		.byte	0x29
 11690 2876 54       		.byte	0x54
 11691 2877 46AE0000 		.long	0xae46
 11692 287b 12       		.uleb128 0x12
 11693 287c 29       		.byte	0x29
 11694 287d 5C       		.byte	0x5c
 11695 287e 14C10000 		.long	0xc114
 11696 2882 12       		.uleb128 0x12
 11697 2883 29       		.byte	0x29
 11698 2884 65       		.byte	0x65
 11699 2885 2EC10000 		.long	0xc12e
 11700 2889 12       		.uleb128 0x12
 11701 288a 29       		.byte	0x29
 11702 288b 68       		.byte	0x68
 11703 288c 48C10000 		.long	0xc148
 11704 2890 12       		.uleb128 0x12
 11705 2891 29       		.byte	0x29
 11706 2892 69       		.byte	0x69
 11707 2893 5DC10000 		.long	0xc15d
 11708 2897 40       		.uleb128 0x40
 11709 2898 00000000 		.long	.LASF397
 11710 289c F0290000 		.long	0x29f0
 11711 28a0 0D       		.uleb128 0xd
 11712 28a1 00000000 		.long	.LASF398
 11713 28a5 09       		.byte	0x9
 11714 28a6 DC       		.byte	0xdc
 11715 28a7 00000000 		.long	.LASF399
 11716 28ab 4BCC0000 		.long	0xcc4b
 11717 28af 01       		.byte	0x1
 11718 28b0 B8280000 		.long	0x28b8
 11719 28b4 C3280000 		.long	0x28c3
 11720 28b8 08       		.uleb128 0x8
 11721 28b9 51CC0000 		.long	0xcc51
 11722 28bd 09       		.uleb128 0x9
 11723 28be 29000000 		.long	0x29
GAS LISTING /tmp/ccJUMvuF.s 			page 507


 11724 28c2 00       		.byte	0
 11725 28c3 22       		.uleb128 0x22
 11726 28c4 00000000 		.long	.LASF400
 11727 28c8 09       		.byte	0x9
 11728 28c9 47       		.byte	0x47
 11729 28ca 97280000 		.long	0x2897
 11730 28ce 01       		.byte	0x1
 11731 28cf 0D       		.uleb128 0xd
 11732 28d0 00000000 		.long	.LASF398
 11733 28d4 09       		.byte	0x9
 11734 28d5 6C       		.byte	0x6c
 11735 28d6 00000000 		.long	.LASF401
 11736 28da 4BCC0000 		.long	0xcc4b
 11737 28de 01       		.byte	0x1
 11738 28df E7280000 		.long	0x28e7
 11739 28e3 F2280000 		.long	0x28f2
 11740 28e7 08       		.uleb128 0x8
 11741 28e8 51CC0000 		.long	0xcc51
 11742 28ec 09       		.uleb128 0x9
 11743 28ed 82CC0000 		.long	0xcc82
 11744 28f1 00       		.byte	0
 11745 28f2 0D       		.uleb128 0xd
 11746 28f3 00000000 		.long	.LASF398
 11747 28f7 09       		.byte	0x9
 11748 28f8 AA       		.byte	0xaa
 11749 28f9 00000000 		.long	.LASF402
 11750 28fd 4BCC0000 		.long	0xcc4b
 11751 2901 01       		.byte	0x1
 11752 2902 0A290000 		.long	0x290a
 11753 2906 15290000 		.long	0x2915
 11754 290a 08       		.uleb128 0x8
 11755 290b 51CC0000 		.long	0xcc51
 11756 290f 09       		.uleb128 0x9
 11757 2910 53930000 		.long	0x9353
 11758 2914 00       		.byte	0
 11759 2915 0D       		.uleb128 0xd
 11760 2916 00000000 		.long	.LASF398
 11761 291a 09       		.byte	0x9
 11762 291b 7F       		.byte	0x7f
 11763 291c 00000000 		.long	.LASF403
 11764 2920 4BCC0000 		.long	0xcc4b
 11765 2924 01       		.byte	0x1
 11766 2925 2D290000 		.long	0x292d
 11767 2929 38290000 		.long	0x2938
 11768 292d 08       		.uleb128 0x8
 11769 292e 51CC0000 		.long	0xcc51
 11770 2932 09       		.uleb128 0x9
 11771 2933 ECFA0000 		.long	0xfaec
 11772 2937 00       		.byte	0
 11773 2938 35       		.uleb128 0x35
 11774 2939 00000000 		.long	.LASF301
 11775 293d ACAE0000 		.long	0xaeac
 11776 2941 36       		.uleb128 0x36
 11777 2942 00000000 		.long	.LASF302
 11778 2946 BD040000 		.long	0x4bd
 11779 294a 0D       		.uleb128 0xd
 11780 294b 00000000 		.long	.LASF404
GAS LISTING /tmp/ccJUMvuF.s 			page 508


 11781 294f 2A       		.byte	0x2a
 11782 2950 3F       		.byte	0x3f
 11783 2951 00000000 		.long	.LASF405
 11784 2955 72C10000 		.long	0xc172
 11785 2959 02       		.byte	0x2
 11786 295a 6B290000 		.long	0x296b
 11787 295e 76290000 		.long	0x2976
 11788 2962 35       		.uleb128 0x35
 11789 2963 00000000 		.long	.LASF406
 11790 2967 53930000 		.long	0x9353
 11791 296b 08       		.uleb128 0x8
 11792 296c 51CC0000 		.long	0xcc51
 11793 2970 09       		.uleb128 0x9
 11794 2971 53930000 		.long	0x9353
 11795 2975 00       		.byte	0
 11796 2976 0D       		.uleb128 0xd
 11797 2977 00000000 		.long	.LASF407
 11798 297b 2A       		.byte	0x2a
 11799 297c D2       		.byte	0xd2
 11800 297d 00000000 		.long	.LASF408
 11801 2981 72C10000 		.long	0xc172
 11802 2985 01       		.byte	0x1
 11803 2986 8E290000 		.long	0x298e
 11804 298a 94290000 		.long	0x2994
 11805 298e 08       		.uleb128 0x8
 11806 298f 51CC0000 		.long	0xcc51
 11807 2993 00       		.byte	0
 11808 2994 0D       		.uleb128 0xd
 11809 2995 00000000 		.long	.LASF409
 11810 2999 2A       		.byte	0x2a
 11811 299a 3F       		.byte	0x3f
 11812 299b 00000000 		.long	.LASF410
 11813 299f 72C10000 		.long	0xc172
 11814 29a3 02       		.byte	0x2
 11815 29a4 B5290000 		.long	0x29b5
 11816 29a8 C0290000 		.long	0x29c0
 11817 29ac 35       		.uleb128 0x35
 11818 29ad 00000000 		.long	.LASF406
 11819 29b1 29000000 		.long	0x29
 11820 29b5 08       		.uleb128 0x8
 11821 29b6 51CC0000 		.long	0xcc51
 11822 29ba 09       		.uleb128 0x9
 11823 29bb 29000000 		.long	0x29
 11824 29bf 00       		.byte	0
 11825 29c0 38       		.uleb128 0x38
 11826 29c1 70757400 		.string	"put"
 11827 29c5 2A       		.byte	0x2a
 11828 29c6 94       		.byte	0x94
 11829 29c7 00000000 		.long	.LASF412
 11830 29cb 72C10000 		.long	0xc172
 11831 29cf 01       		.byte	0x1
 11832 29d0 D8290000 		.long	0x29d8
 11833 29d4 E3290000 		.long	0x29e3
 11834 29d8 08       		.uleb128 0x8
 11835 29d9 51CC0000 		.long	0xcc51
 11836 29dd 09       		.uleb128 0x9
 11837 29de E3290000 		.long	0x29e3
GAS LISTING /tmp/ccJUMvuF.s 			page 509


 11838 29e2 00       		.byte	0
 11839 29e3 22       		.uleb128 0x22
 11840 29e4 00000000 		.long	.LASF30
 11841 29e8 09       		.byte	0x9
 11842 29e9 3E       		.byte	0x3e
 11843 29ea ACAE0000 		.long	0xaeac
 11844 29ee 01       		.byte	0x1
 11845 29ef 00       		.byte	0
 11846 29f0 40       		.uleb128 0x40
 11847 29f1 00000000 		.long	.LASF413
 11848 29f5 7C2A0000 		.long	0x2a7c
 11849 29f9 32       		.uleb128 0x32
 11850 29fa 00000000 		.long	.LASF414
 11851 29fe 01       		.byte	0x1
 11852 29ff 6103     		.value	0x361
 11853 2a01 00000000 		.long	.LASF415
 11854 2a05 1D2A0000 		.long	0x2a1d
 11855 2a09 01       		.byte	0x1
 11856 2a0a 122A0000 		.long	0x2a12
 11857 2a0e 1D2A0000 		.long	0x2a1d
 11858 2a12 08       		.uleb128 0x8
 11859 2a13 19CC0000 		.long	0xcc19
 11860 2a17 09       		.uleb128 0x9
 11861 2a18 ACAE0000 		.long	0xaeac
 11862 2a1c 00       		.byte	0
 11863 2a1d 44       		.uleb128 0x44
 11864 2a1e 00000000 		.long	.LASF30
 11865 2a22 01       		.byte	0x1
 11866 2a23 A702     		.value	0x2a7
 11867 2a25 ACAE0000 		.long	0xaeac
 11868 2a29 01       		.byte	0x1
 11869 2a2a 48       		.uleb128 0x48
 11870 2a2b 00000000 		.long	.LASF1793
 11871 2a2f 01       		.byte	0x1
 11872 2a30 3304     		.value	0x433
 11873 2a32 00000000 		.long	.LASF1740
 11874 2a36 1D2A0000 		.long	0x2a1d
 11875 2a3a 01       		.byte	0x1
 11876 2a3b 02       		.uleb128 0x2
 11877 2a3c 10       		.byte	0x10
 11878 2a3d 06       		.uleb128 0x6
 11879 2a3e F0290000 		.long	0x29f0
 11880 2a42 02       		.byte	0x2
 11881 2a43 4B2A0000 		.long	0x2a4b
 11882 2a47 562A0000 		.long	0x2a56
 11883 2a4b 08       		.uleb128 0x8
 11884 2a4c 19CC0000 		.long	0xcc19
 11885 2a50 09       		.uleb128 0x9
 11886 2a51 ACAE0000 		.long	0xaeac
 11887 2a55 00       		.byte	0
 11888 2a56 47       		.uleb128 0x47
 11889 2a57 00000000 		.long	.LASF416
 11890 2a5b 01       		.byte	0x1
 11891 2a5c BA02     		.value	0x2ba
 11892 2a5e BC240000 		.long	0x24bc
 11893 2a62 01       		.byte	0x1
 11894 2a63 0001     		.value	0x100
GAS LISTING /tmp/ccJUMvuF.s 			page 510


 11895 2a65 49       		.uleb128 0x49
 11896 2a66 00000000 		.long	.LASF417
 11897 2a6a 01       		.byte	0x1
 11898 2a6b 8704     		.value	0x487
 11899 2a6d 00000000 		.long	.LASF418
 11900 2a71 752A0000 		.long	0x2a75
 11901 2a75 08       		.uleb128 0x8
 11902 2a76 19CC0000 		.long	0xcc19
 11903 2a7a 00       		.byte	0
 11904 2a7b 00       		.byte	0
 11905 2a7c 1B       		.uleb128 0x1b
 11906 2a7d 2B       		.byte	0x2b
 11907 2a7e 0E04     		.value	0x40e
 11908 2a80 8DC10000 		.long	0xc18d
 11909 2a84 1B       		.uleb128 0x1b
 11910 2a85 2B       		.byte	0x2b
 11911 2a86 0F04     		.value	0x40f
 11912 2a88 82C10000 		.long	0xc182
 11913 2a8c 16       		.uleb128 0x16
 11914 2a8d 00000000 		.long	.LASF419
 11915 2a91 01       		.byte	0x1
 11916 2a92 2C       		.byte	0x2c
 11917 2a93 6C       		.byte	0x6c
 11918 2a94 F22A0000 		.long	0x2af2
 11919 2a98 4A       		.uleb128 0x4a
 11920 2a99 00000000 		.long	.LASF420
 11921 2a9d 2C       		.byte	0x2c
 11922 2a9e 70       		.byte	0x70
 11923 2a9f B72A0000 		.long	0x2ab7
 11924 2aa3 35       		.uleb128 0x35
 11925 2aa4 00000000 		.long	.LASF421
 11926 2aa8 98C20000 		.long	0xc298
 11927 2aac 09       		.uleb128 0x9
 11928 2aad 98C20000 		.long	0xc298
 11929 2ab1 09       		.uleb128 0x9
 11930 2ab2 98C20000 		.long	0xc298
 11931 2ab6 00       		.byte	0
 11932 2ab7 4A       		.uleb128 0x4a
 11933 2ab8 00000000 		.long	.LASF422
 11934 2abc 2C       		.byte	0x2c
 11935 2abd 70       		.byte	0x70
 11936 2abe D62A0000 		.long	0x2ad6
 11937 2ac2 35       		.uleb128 0x35
 11938 2ac3 00000000 		.long	.LASF421
 11939 2ac7 C9C10000 		.long	0xc1c9
 11940 2acb 09       		.uleb128 0x9
 11941 2acc C9C10000 		.long	0xc1c9
 11942 2ad0 09       		.uleb128 0x9
 11943 2ad1 C9C10000 		.long	0xc1c9
 11944 2ad5 00       		.byte	0
 11945 2ad6 4B       		.uleb128 0x4b
 11946 2ad7 00000000 		.long	.LASF423
 11947 2adb 2C       		.byte	0x2c
 11948 2adc 70       		.byte	0x70
 11949 2add 35       		.uleb128 0x35
 11950 2ade 00000000 		.long	.LASF421
 11951 2ae2 00C80000 		.long	0xc800
GAS LISTING /tmp/ccJUMvuF.s 			page 511


 11952 2ae6 09       		.uleb128 0x9
 11953 2ae7 00C80000 		.long	0xc800
 11954 2aeb 09       		.uleb128 0x9
 11955 2aec 00C80000 		.long	0xc800
 11956 2af0 00       		.byte	0
 11957 2af1 00       		.byte	0
 11958 2af2 24       		.uleb128 0x24
 11959 2af3 00000000 		.long	.LASF424
 11960 2af7 01       		.byte	0x1
 11961 2af8 2D       		.byte	0x2d
 11962 2af9 0E02     		.value	0x20e
 11963 2afb 772B0000 		.long	0x2b77
 11964 2aff 4C       		.uleb128 0x4c
 11965 2b00 00000000 		.long	.LASF425
 11966 2b04 2D       		.byte	0x2d
 11967 2b05 1202     		.value	0x212
 11968 2b07 282B0000 		.long	0x2b28
 11969 2b0b 35       		.uleb128 0x35
 11970 2b0c 00000000 		.long	.LASF421
 11971 2b10 C9C10000 		.long	0xc1c9
 11972 2b14 35       		.uleb128 0x35
 11973 2b15 00000000 		.long	.LASF426
 11974 2b19 53930000 		.long	0x9353
 11975 2b1d 09       		.uleb128 0x9
 11976 2b1e C9C10000 		.long	0xc1c9
 11977 2b22 09       		.uleb128 0x9
 11978 2b23 53930000 		.long	0x9353
 11979 2b27 00       		.byte	0
 11980 2b28 4C       		.uleb128 0x4c
 11981 2b29 00000000 		.long	.LASF427
 11982 2b2d 2D       		.byte	0x2d
 11983 2b2e 1202     		.value	0x212
 11984 2b30 512B0000 		.long	0x2b51
 11985 2b34 35       		.uleb128 0x35
 11986 2b35 00000000 		.long	.LASF421
 11987 2b39 98C20000 		.long	0xc298
 11988 2b3d 35       		.uleb128 0x35
 11989 2b3e 00000000 		.long	.LASF426
 11990 2b42 53930000 		.long	0x9353
 11991 2b46 09       		.uleb128 0x9
 11992 2b47 98C20000 		.long	0xc298
 11993 2b4b 09       		.uleb128 0x9
 11994 2b4c 53930000 		.long	0x9353
 11995 2b50 00       		.byte	0
 11996 2b51 4D       		.uleb128 0x4d
 11997 2b52 00000000 		.long	.LASF428
 11998 2b56 2D       		.byte	0x2d
 11999 2b57 1202     		.value	0x212
 12000 2b59 35       		.uleb128 0x35
 12001 2b5a 00000000 		.long	.LASF421
 12002 2b5e 00C80000 		.long	0xc800
 12003 2b62 35       		.uleb128 0x35
 12004 2b63 00000000 		.long	.LASF426
 12005 2b67 53930000 		.long	0x9353
 12006 2b6b 09       		.uleb128 0x9
 12007 2b6c 00C80000 		.long	0xc800
 12008 2b70 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 512


 12009 2b71 53930000 		.long	0x9353
 12010 2b75 00       		.byte	0
 12011 2b76 00       		.byte	0
 12012 2b77 04       		.uleb128 0x4
 12013 2b78 00000000 		.long	.LASF429
 12014 2b7c 04       		.byte	0x4
 12015 2b7d 42       		.byte	0x42
 12016 2b7e C92C0000 		.long	0x2cc9
 12017 2b82 16       		.uleb128 0x16
 12018 2b83 00000000 		.long	.LASF430
 12019 2b87 01       		.byte	0x1
 12020 2b88 04       		.byte	0x4
 12021 2b89 87       		.byte	0x87
 12022 2b8a EA2B0000 		.long	0x2bea
 12023 2b8e 4E       		.uleb128 0x4e
 12024 2b8f 00000000 		.long	.LASF431
 12025 2b93 04       		.byte	0x4
 12026 2b94 8A       		.byte	0x8a
 12027 2b95 00000000 		.long	.LASF432
 12028 2b99 53930000 		.long	0x9353
 12029 2b9d A72B0000 		.long	0x2ba7
 12030 2ba1 09       		.uleb128 0x9
 12031 2ba2 53930000 		.long	0x9353
 12032 2ba6 00       		.byte	0
 12033 2ba7 18       		.uleb128 0x18
 12034 2ba8 5F547000 		.string	"_Tp"
 12035 2bac 53930000 		.long	0x9353
 12036 2bb0 4F       		.uleb128 0x4f
 12037 2bb1 5F5F6D00 		.string	"__m"
 12038 2bb5 53930000 		.long	0x9353
 12039 2bb9 00000000 		.quad	0x100000000
 12039      01000000 
 12040 2bc1 19       		.uleb128 0x19
 12041 2bc2 5F5F6100 		.string	"__a"
 12042 2bc6 53930000 		.long	0x9353
 12043 2bca 01       		.byte	0x1
 12044 2bcb 19       		.uleb128 0x19
 12045 2bcc 5F5F6300 		.string	"__c"
 12046 2bd0 53930000 		.long	0x9353
 12047 2bd4 00       		.byte	0
 12048 2bd5 50       		.uleb128 0x50
 12049 2bd6 00000000 		.long	.LASF433
 12050 2bda 30930000 		.long	0x9330
 12051 2bde 01       		.byte	0x1
 12052 2bdf 50       		.uleb128 0x50
 12053 2be0 00000000 		.long	.LASF434
 12054 2be4 30930000 		.long	0x9330
 12055 2be8 01       		.byte	0x1
 12056 2be9 00       		.byte	0
 12057 2bea 16       		.uleb128 0x16
 12058 2beb 00000000 		.long	.LASF435
 12059 2bef 01       		.byte	0x1
 12060 2bf0 04       		.byte	0x4
 12061 2bf1 87       		.byte	0x87
 12062 2bf2 4C2C0000 		.long	0x2c4c
 12063 2bf6 4E       		.uleb128 0x4e
 12064 2bf7 00000000 		.long	.LASF431
GAS LISTING /tmp/ccJUMvuF.s 			page 513


 12065 2bfb 04       		.byte	0x4
 12066 2bfc 8A       		.byte	0x8a
 12067 2bfd 00000000 		.long	.LASF436
 12068 2c01 53930000 		.long	0x9353
 12069 2c05 0F2C0000 		.long	0x2c0f
 12070 2c09 09       		.uleb128 0x9
 12071 2c0a 53930000 		.long	0x9353
 12072 2c0e 00       		.byte	0
 12073 2c0f 18       		.uleb128 0x18
 12074 2c10 5F547000 		.string	"_Tp"
 12075 2c14 53930000 		.long	0x9353
 12076 2c18 51       		.uleb128 0x51
 12077 2c19 5F5F6D00 		.string	"__m"
 12078 2c1d 53930000 		.long	0x9353
 12079 2c21 7002     		.value	0x270
 12080 2c23 19       		.uleb128 0x19
 12081 2c24 5F5F6100 		.string	"__a"
 12082 2c28 53930000 		.long	0x9353
 12083 2c2c 01       		.byte	0x1
 12084 2c2d 19       		.uleb128 0x19
 12085 2c2e 5F5F6300 		.string	"__c"
 12086 2c32 53930000 		.long	0x9353
 12087 2c36 00       		.byte	0
 12088 2c37 50       		.uleb128 0x50
 12089 2c38 00000000 		.long	.LASF433
 12090 2c3c 30930000 		.long	0x9330
 12091 2c40 01       		.byte	0x1
 12092 2c41 50       		.uleb128 0x50
 12093 2c42 00000000 		.long	.LASF434
 12094 2c46 30930000 		.long	0x9330
 12095 2c4a 01       		.byte	0x1
 12096 2c4b 00       		.byte	0
 12097 2c4c 52       		.uleb128 0x52
 12098 2c4d 00000000 		.long	.LASF437
 12099 2c51 04       		.byte	0x4
 12100 2c52 95       		.byte	0x95
 12101 2c53 53930000 		.long	0x9353
 12102 2c57 8F2C0000 		.long	0x2c8f
 12103 2c5b 18       		.uleb128 0x18
 12104 2c5c 5F547000 		.string	"_Tp"
 12105 2c60 53930000 		.long	0x9353
 12106 2c64 4F       		.uleb128 0x4f
 12107 2c65 5F5F6D00 		.string	"__m"
 12108 2c69 53930000 		.long	0x9353
 12109 2c6d 00000000 		.quad	0x100000000
 12109      01000000 
 12110 2c75 19       		.uleb128 0x19
 12111 2c76 5F5F6100 		.string	"__a"
 12112 2c7a 53930000 		.long	0x9353
 12113 2c7e 01       		.byte	0x1
 12114 2c7f 19       		.uleb128 0x19
 12115 2c80 5F5F6300 		.string	"__c"
 12116 2c84 53930000 		.long	0x9353
 12117 2c88 00       		.byte	0
 12118 2c89 09       		.uleb128 0x9
 12119 2c8a 53930000 		.long	0x9353
 12120 2c8e 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 514


 12121 2c8f 53       		.uleb128 0x53
 12122 2c90 00000000 		.long	.LASF438
 12123 2c94 04       		.byte	0x4
 12124 2c95 95       		.byte	0x95
 12125 2c96 53930000 		.long	0x9353
 12126 2c9a 18       		.uleb128 0x18
 12127 2c9b 5F547000 		.string	"_Tp"
 12128 2c9f 53930000 		.long	0x9353
 12129 2ca3 51       		.uleb128 0x51
 12130 2ca4 5F5F6D00 		.string	"__m"
 12131 2ca8 53930000 		.long	0x9353
 12132 2cac 7002     		.value	0x270
 12133 2cae 19       		.uleb128 0x19
 12134 2caf 5F5F6100 		.string	"__a"
 12135 2cb3 53930000 		.long	0x9353
 12136 2cb7 01       		.byte	0x1
 12137 2cb8 19       		.uleb128 0x19
 12138 2cb9 5F5F6300 		.string	"__c"
 12139 2cbd 53930000 		.long	0x9353
 12140 2cc1 00       		.byte	0
 12141 2cc2 09       		.uleb128 0x9
 12142 2cc3 53930000 		.long	0x9353
 12143 2cc7 00       		.byte	0
 12144 2cc8 00       		.byte	0
 12145 2cc9 54       		.uleb128 0x54
 12146 2cca 00000000 		.long	.LASF439
 12147 2cce 8813     		.value	0x1388
 12148 2cd0 04       		.byte	0x4
 12149 2cd1 C301     		.value	0x1c3
 12150 2cd3 102F0000 		.long	0x2f10
 12151 2cd7 29       		.uleb128 0x29
 12152 2cd8 00000000 		.long	.LASF441
 12153 2cdc 04       		.byte	0x4
 12154 2cdd E501     		.value	0x1e5
 12155 2cdf BC240000 		.long	0x24bc
 12156 2ce3 01       		.byte	0x1
 12157 2ce4 47       		.uleb128 0x47
 12158 2ce5 00000000 		.long	.LASF442
 12159 2ce9 04       		.byte	0x4
 12160 2cea E601     		.value	0x1e6
 12161 2cec BC240000 		.long	0x24bc
 12162 2cf0 01       		.byte	0x1
 12163 2cf1 7002     		.value	0x270
 12164 2cf3 29       		.uleb128 0x29
 12165 2cf4 00000000 		.long	.LASF443
 12166 2cf8 04       		.byte	0x4
 12167 2cf9 E701     		.value	0x1e7
 12168 2cfb BC240000 		.long	0x24bc
 12169 2cff 01       		.byte	0x1
 12170 2d00 29       		.uleb128 0x29
 12171 2d01 00000000 		.long	.LASF444
 12172 2d05 04       		.byte	0x4
 12173 2d06 E801     		.value	0x1e8
 12174 2d08 BC240000 		.long	0x24bc
 12175 2d0c 01       		.byte	0x1
 12176 2d0d 44       		.uleb128 0x44
 12177 2d0e 00000000 		.long	.LASF445
GAS LISTING /tmp/ccJUMvuF.s 			page 515


 12178 2d12 04       		.byte	0x4
 12179 2d13 E201     		.value	0x1e2
 12180 2d15 53930000 		.long	0x9353
 12181 2d19 01       		.byte	0x1
 12182 2d1a 29       		.uleb128 0x29
 12183 2d1b 00000000 		.long	.LASF446
 12184 2d1f 04       		.byte	0x4
 12185 2d20 E901     		.value	0x1e9
 12186 2d22 272D0000 		.long	0x2d27
 12187 2d26 01       		.byte	0x1
 12188 2d27 11       		.uleb128 0x11
 12189 2d28 0D2D0000 		.long	0x2d0d
 12190 2d2c 29       		.uleb128 0x29
 12191 2d2d 00000000 		.long	.LASF447
 12192 2d31 04       		.byte	0x4
 12193 2d32 EA01     		.value	0x1ea
 12194 2d34 BC240000 		.long	0x24bc
 12195 2d38 01       		.byte	0x1
 12196 2d39 29       		.uleb128 0x29
 12197 2d3a 00000000 		.long	.LASF448
 12198 2d3e 04       		.byte	0x4
 12199 2d3f EB01     		.value	0x1eb
 12200 2d41 272D0000 		.long	0x2d27
 12201 2d45 01       		.byte	0x1
 12202 2d46 29       		.uleb128 0x29
 12203 2d47 00000000 		.long	.LASF449
 12204 2d4b 04       		.byte	0x4
 12205 2d4c EC01     		.value	0x1ec
 12206 2d4e BC240000 		.long	0x24bc
 12207 2d52 01       		.byte	0x1
 12208 2d53 29       		.uleb128 0x29
 12209 2d54 00000000 		.long	.LASF450
 12210 2d58 04       		.byte	0x4
 12211 2d59 ED01     		.value	0x1ed
 12212 2d5b 272D0000 		.long	0x2d27
 12213 2d5f 01       		.byte	0x1
 12214 2d60 29       		.uleb128 0x29
 12215 2d61 00000000 		.long	.LASF451
 12216 2d65 04       		.byte	0x4
 12217 2d66 EE01     		.value	0x1ee
 12218 2d68 BC240000 		.long	0x24bc
 12219 2d6c 01       		.byte	0x1
 12220 2d6d 29       		.uleb128 0x29
 12221 2d6e 00000000 		.long	.LASF452
 12222 2d72 04       		.byte	0x4
 12223 2d73 EF01     		.value	0x1ef
 12224 2d75 272D0000 		.long	0x2d27
 12225 2d79 01       		.byte	0x1
 12226 2d7a 29       		.uleb128 0x29
 12227 2d7b 00000000 		.long	.LASF453
 12228 2d7f 04       		.byte	0x4
 12229 2d80 F001     		.value	0x1f0
 12230 2d82 BC240000 		.long	0x24bc
 12231 2d86 01       		.byte	0x1
 12232 2d87 29       		.uleb128 0x29
 12233 2d88 00000000 		.long	.LASF454
 12234 2d8c 04       		.byte	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 516


 12235 2d8d F101     		.value	0x1f1
 12236 2d8f 272D0000 		.long	0x2d27
 12237 2d93 01       		.byte	0x1
 12238 2d94 29       		.uleb128 0x29
 12239 2d95 00000000 		.long	.LASF455
 12240 2d99 04       		.byte	0x4
 12241 2d9a F201     		.value	0x1f2
 12242 2d9c 272D0000 		.long	0x2d27
 12243 2da0 01       		.byte	0x1
 12244 2da1 26       		.uleb128 0x26
 12245 2da2 00000000 		.long	.LASF456
 12246 2da6 04       		.byte	0x4
 12247 2da7 6D02     		.value	0x26d
 12248 2da9 98C10000 		.long	0xc198
 12249 2dad 00       		.byte	0
 12250 2dae 55       		.uleb128 0x55
 12251 2daf 00000000 		.long	.LASF65
 12252 2db3 04       		.byte	0x4
 12253 2db4 6E02     		.value	0x26e
 12254 2db6 85060000 		.long	0x685
 12255 2dba 8013     		.value	0x1380
 12256 2dbc 31       		.uleb128 0x31
 12257 2dbd 00000000 		.long	.LASF457
 12258 2dc1 04       		.byte	0x4
 12259 2dc2 F601     		.value	0x1f6
 12260 2dc4 01       		.byte	0x1
 12261 2dc5 CD2D0000 		.long	0x2dcd
 12262 2dc9 D82D0000 		.long	0x2dd8
 12263 2dcd 08       		.uleb128 0x8
 12264 2dce ABC10000 		.long	0xc1ab
 12265 2dd2 09       		.uleb128 0x9
 12266 2dd3 0D2D0000 		.long	0x2d0d
 12267 2dd7 00       		.byte	0
 12268 2dd8 34       		.uleb128 0x34
 12269 2dd9 00000000 		.long	.LASF458
 12270 2ddd 04       		.byte	0x4
 12271 2dde 0702     		.value	0x207
 12272 2de0 00000000 		.long	.LASF459
 12273 2de4 01       		.byte	0x1
 12274 2de5 ED2D0000 		.long	0x2ded
 12275 2de9 F82D0000 		.long	0x2df8
 12276 2ded 08       		.uleb128 0x8
 12277 2dee ABC10000 		.long	0xc1ab
 12278 2df2 09       		.uleb128 0x9
 12279 2df3 0D2D0000 		.long	0x2d0d
 12280 2df7 00       		.byte	0
 12281 2df8 56       		.uleb128 0x56
 12282 2df9 6D696E00 		.string	"min"
 12283 2dfd 04       		.byte	0x4
 12284 2dfe 1102     		.value	0x211
 12285 2e00 00000000 		.long	.LASF460
 12286 2e04 0D2D0000 		.long	0x2d0d
 12287 2e08 01       		.byte	0x1
 12288 2e09 56       		.uleb128 0x56
 12289 2e0a 6D617800 		.string	"max"
 12290 2e0e 04       		.byte	0x4
 12291 2e0f 1802     		.value	0x218
GAS LISTING /tmp/ccJUMvuF.s 			page 517


 12292 2e11 00000000 		.long	.LASF461
 12293 2e15 0D2D0000 		.long	0x2d0d
 12294 2e19 01       		.byte	0x1
 12295 2e1a 34       		.uleb128 0x34
 12296 2e1b 00000000 		.long	.LASF462
 12297 2e1f 04       		.byte	0x4
 12298 2e20 1F02     		.value	0x21f
 12299 2e22 00000000 		.long	.LASF463
 12300 2e26 01       		.byte	0x1
 12301 2e27 2F2E0000 		.long	0x2e2f
 12302 2e2b 3A2E0000 		.long	0x2e3a
 12303 2e2f 08       		.uleb128 0x8
 12304 2e30 ABC10000 		.long	0xc1ab
 12305 2e34 09       		.uleb128 0x9
 12306 2e35 6F930000 		.long	0x936f
 12307 2e39 00       		.byte	0
 12308 2e3a 32       		.uleb128 0x32
 12309 2e3b 00000000 		.long	.LASF464
 12310 2e3f 04       		.byte	0x4
 12311 2e40 2202     		.value	0x222
 12312 2e42 00000000 		.long	.LASF465
 12313 2e46 0D2D0000 		.long	0x2d0d
 12314 2e4a 01       		.byte	0x1
 12315 2e4b 532E0000 		.long	0x2e53
 12316 2e4f 592E0000 		.long	0x2e59
 12317 2e53 08       		.uleb128 0x8
 12318 2e54 ABC10000 		.long	0xc1ab
 12319 2e58 00       		.byte	0
 12320 2e59 2B       		.uleb128 0x2b
 12321 2e5a 00000000 		.long	.LASF466
 12322 2e5e 04       		.byte	0x4
 12323 2e5f 6B02     		.value	0x26b
 12324 2e61 00000000 		.long	.LASF467
 12325 2e65 6D2E0000 		.long	0x2e6d
 12326 2e69 732E0000 		.long	0x2e73
 12327 2e6d 08       		.uleb128 0x8
 12328 2e6e ABC10000 		.long	0xc1ab
 12329 2e72 00       		.byte	0
 12330 2e73 35       		.uleb128 0x35
 12331 2e74 00000000 		.long	.LASF468
 12332 2e78 53930000 		.long	0x9353
 12333 2e7c 19       		.uleb128 0x19
 12334 2e7d 5F5F7700 		.string	"__w"
 12335 2e81 53930000 		.long	0x9353
 12336 2e85 20       		.byte	0x20
 12337 2e86 51       		.uleb128 0x51
 12338 2e87 5F5F6E00 		.string	"__n"
 12339 2e8b 53930000 		.long	0x9353
 12340 2e8f 7002     		.value	0x270
 12341 2e91 51       		.uleb128 0x51
 12342 2e92 5F5F6D00 		.string	"__m"
 12343 2e96 53930000 		.long	0x9353
 12344 2e9a 8D01     		.value	0x18d
 12345 2e9c 19       		.uleb128 0x19
 12346 2e9d 5F5F7200 		.string	"__r"
 12347 2ea1 53930000 		.long	0x9353
 12348 2ea5 1F       		.byte	0x1f
GAS LISTING /tmp/ccJUMvuF.s 			page 518


 12349 2ea6 57       		.uleb128 0x57
 12350 2ea7 5F5F6100 		.string	"__a"
 12351 2eab 53930000 		.long	0x9353
 12352 2eaf DFB00899 		.long	0x9908b0df
 12353 2eb3 19       		.uleb128 0x19
 12354 2eb4 5F5F7500 		.string	"__u"
 12355 2eb8 53930000 		.long	0x9353
 12356 2ebc 0B       		.byte	0xb
 12357 2ebd 57       		.uleb128 0x57
 12358 2ebe 5F5F6400 		.string	"__d"
 12359 2ec2 53930000 		.long	0x9353
 12360 2ec6 FFFFFFFF 		.long	0xffffffff
 12361 2eca 19       		.uleb128 0x19
 12362 2ecb 5F5F7300 		.string	"__s"
 12363 2ecf 53930000 		.long	0x9353
 12364 2ed3 07       		.byte	0x7
 12365 2ed4 57       		.uleb128 0x57
 12366 2ed5 5F5F6200 		.string	"__b"
 12367 2ed9 53930000 		.long	0x9353
 12368 2edd 80562C9D 		.long	0x9d2c5680
 12369 2ee1 19       		.uleb128 0x19
 12370 2ee2 5F5F7400 		.string	"__t"
 12371 2ee6 53930000 		.long	0x9353
 12372 2eea 0F       		.byte	0xf
 12373 2eeb 57       		.uleb128 0x57
 12374 2eec 5F5F6300 		.string	"__c"
 12375 2ef0 53930000 		.long	0x9353
 12376 2ef4 0000C6EF 		.long	0xefc60000
 12377 2ef8 19       		.uleb128 0x19
 12378 2ef9 5F5F6C00 		.string	"__l"
 12379 2efd 53930000 		.long	0x9353
 12380 2f01 12       		.byte	0x12
 12381 2f02 57       		.uleb128 0x57
 12382 2f03 5F5F6600 		.string	"__f"
 12383 2f07 53930000 		.long	0x9353
 12384 2f0b 6589076C 		.long	0x6c078965
 12385 2f0f 00       		.byte	0
 12386 2f10 54       		.uleb128 0x54
 12387 2f11 00000000 		.long	.LASF469
 12388 2f15 8813     		.value	0x1388
 12389 2f17 04       		.byte	0x4
 12390 2f18 2906     		.value	0x629
 12391 2f1a C4300000 		.long	0x30c4
 12392 2f1e 58       		.uleb128 0x58
 12393 2f1f 8813     		.value	0x1388
 12394 2f21 04       		.byte	0x4
 12395 2f22 6A06     		.value	0x66a
 12396 2f24 4C2F0000 		.long	0x2f4c
 12397 2f28 59       		.uleb128 0x59
 12398 2f29 00000000 		.long	.LASF470
 12399 2f2d 04       		.byte	0x4
 12400 2f2e 6B06     		.value	0x66b
 12401 2f30 01930000 		.long	0x9301
 12402 2f34 59       		.uleb128 0x59
 12403 2f35 00000000 		.long	.LASF471
 12404 2f39 04       		.byte	0x4
 12405 2f3a 6C06     		.value	0x66c
GAS LISTING /tmp/ccJUMvuF.s 			page 519


 12406 2f3c C4300000 		.long	0x30c4
 12407 2f40 5A       		.uleb128 0x5a
 12408 2f41 452F0000 		.long	0x2f45
 12409 2f45 08       		.uleb128 0x8
 12410 2f46 B1C10000 		.long	0xc1b1
 12411 2f4a 00       		.byte	0
 12412 2f4b 00       		.byte	0
 12413 2f4c 5B       		.uleb128 0x5b
 12414 2f4d 1E2F0000 		.long	0x2f1e
 12415 2f51 00       		.byte	0
 12416 2f52 44       		.uleb128 0x44
 12417 2f53 00000000 		.long	.LASF445
 12418 2f57 04       		.byte	0x4
 12419 2f58 2D06     		.value	0x62d
 12420 2f5a 68930000 		.long	0x9368
 12421 2f5e 01       		.byte	0x1
 12422 2f5f 31       		.uleb128 0x31
 12423 2f60 00000000 		.long	.LASF469
 12424 2f64 04       		.byte	0x4
 12425 2f65 3406     		.value	0x634
 12426 2f67 01       		.byte	0x1
 12427 2f68 702F0000 		.long	0x2f70
 12428 2f6c 7B2F0000 		.long	0x2f7b
 12429 2f70 08       		.uleb128 0x8
 12430 2f71 B7C10000 		.long	0xc1b7
 12431 2f75 09       		.uleb128 0x9
 12432 2f76 ABC00000 		.long	0xc0ab
 12433 2f7a 00       		.byte	0
 12434 2f7b 30       		.uleb128 0x30
 12435 2f7c 00000000 		.long	.LASF472
 12436 2f80 04       		.byte	0x4
 12437 2f81 3906     		.value	0x639
 12438 2f83 01       		.byte	0x1
 12439 2f84 8C2F0000 		.long	0x2f8c
 12440 2f88 972F0000 		.long	0x2f97
 12441 2f8c 08       		.uleb128 0x8
 12442 2f8d B7C10000 		.long	0xc1b7
 12443 2f91 08       		.uleb128 0x8
 12444 2f92 28930000 		.long	0x9328
 12445 2f96 00       		.byte	0
 12446 2f97 56       		.uleb128 0x56
 12447 2f98 6D696E00 		.string	"min"
 12448 2f9c 04       		.byte	0x4
 12449 2f9d 4706     		.value	0x647
 12450 2f9f 00000000 		.long	.LASF473
 12451 2fa3 522F0000 		.long	0x2f52
 12452 2fa7 01       		.byte	0x1
 12453 2fa8 56       		.uleb128 0x56
 12454 2fa9 6D617800 		.string	"max"
 12455 2fad 04       		.byte	0x4
 12456 2fae 4B06     		.value	0x64b
 12457 2fb0 00000000 		.long	.LASF474
 12458 2fb4 522F0000 		.long	0x2f52
 12459 2fb8 01       		.byte	0x1
 12460 2fb9 32       		.uleb128 0x32
 12461 2fba 00000000 		.long	.LASF475
 12462 2fbe 04       		.byte	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 520


 12463 2fbf 4F06     		.value	0x64f
 12464 2fc1 00000000 		.long	.LASF476
 12465 2fc5 29000000 		.long	0x29
 12466 2fc9 01       		.byte	0x1
 12467 2fca D22F0000 		.long	0x2fd2
 12468 2fce D82F0000 		.long	0x2fd8
 12469 2fd2 08       		.uleb128 0x8
 12470 2fd3 BDC10000 		.long	0xc1bd
 12471 2fd7 00       		.byte	0
 12472 2fd8 32       		.uleb128 0x32
 12473 2fd9 00000000 		.long	.LASF464
 12474 2fdd 04       		.byte	0x4
 12475 2fde 5306     		.value	0x653
 12476 2fe0 00000000 		.long	.LASF477
 12477 2fe4 522F0000 		.long	0x2f52
 12478 2fe8 01       		.byte	0x1
 12479 2fe9 F12F0000 		.long	0x2ff1
 12480 2fed F72F0000 		.long	0x2ff7
 12481 2ff1 08       		.uleb128 0x8
 12482 2ff2 B7C10000 		.long	0xc1b7
 12483 2ff6 00       		.byte	0
 12484 2ff7 30       		.uleb128 0x30
 12485 2ff8 00000000 		.long	.LASF469
 12486 2ffc 04       		.byte	0x4
 12487 2ffd 5D06     		.value	0x65d
 12488 2fff 01       		.byte	0x1
 12489 3000 08300000 		.long	0x3008
 12490 3004 13300000 		.long	0x3013
 12491 3008 08       		.uleb128 0x8
 12492 3009 B7C10000 		.long	0xc1b7
 12493 300d 09       		.uleb128 0x9
 12494 300e C3C10000 		.long	0xc1c3
 12495 3012 00       		.byte	0
 12496 3013 34       		.uleb128 0x34
 12497 3014 00000000 		.long	.LASF8
 12498 3018 04       		.byte	0x4
 12499 3019 5E06     		.value	0x65e
 12500 301b 00000000 		.long	.LASF478
 12501 301f 01       		.byte	0x1
 12502 3020 28300000 		.long	0x3028
 12503 3024 33300000 		.long	0x3033
 12504 3028 08       		.uleb128 0x8
 12505 3029 B7C10000 		.long	0xc1b7
 12506 302d 09       		.uleb128 0x9
 12507 302e C3C10000 		.long	0xc1c3
 12508 3032 00       		.byte	0
 12509 3033 2B       		.uleb128 0x2b
 12510 3034 00000000 		.long	.LASF479
 12511 3038 04       		.byte	0x4
 12512 3039 6206     		.value	0x662
 12513 303b 00000000 		.long	.LASF480
 12514 303f 47300000 		.long	0x3047
 12515 3043 52300000 		.long	0x3052
 12516 3047 08       		.uleb128 0x8
 12517 3048 B7C10000 		.long	0xc1b7
 12518 304c 09       		.uleb128 0x9
 12519 304d ABC00000 		.long	0xc0ab
GAS LISTING /tmp/ccJUMvuF.s 			page 521


 12520 3051 00       		.byte	0
 12521 3052 2B       		.uleb128 0x2b
 12522 3053 00000000 		.long	.LASF481
 12523 3057 04       		.byte	0x4
 12524 3058 6306     		.value	0x663
 12525 305a 00000000 		.long	.LASF482
 12526 305e 66300000 		.long	0x3066
 12527 3062 71300000 		.long	0x3071
 12528 3066 08       		.uleb128 0x8
 12529 3067 B7C10000 		.long	0xc1b7
 12530 306b 09       		.uleb128 0x9
 12531 306c ABC00000 		.long	0xc0ab
 12532 3070 00       		.byte	0
 12533 3071 2B       		.uleb128 0x2b
 12534 3072 00000000 		.long	.LASF483
 12535 3076 04       		.byte	0x4
 12536 3077 6406     		.value	0x664
 12537 3079 00000000 		.long	.LASF484
 12538 307d 85300000 		.long	0x3085
 12539 3081 8B300000 		.long	0x308b
 12540 3085 08       		.uleb128 0x8
 12541 3086 B7C10000 		.long	0xc1b7
 12542 308a 00       		.byte	0
 12543 308b 2C       		.uleb128 0x2c
 12544 308c 00000000 		.long	.LASF485
 12545 3090 04       		.byte	0x4
 12546 3091 6606     		.value	0x666
 12547 3093 00000000 		.long	.LASF486
 12548 3097 522F0000 		.long	0x2f52
 12549 309b A3300000 		.long	0x30a3
 12550 309f A9300000 		.long	0x30a9
 12551 30a3 08       		.uleb128 0x8
 12552 30a4 B7C10000 		.long	0xc1b7
 12553 30a8 00       		.byte	0
 12554 30a9 2D       		.uleb128 0x2d
 12555 30aa 00000000 		.long	.LASF487
 12556 30ae 04       		.byte	0x4
 12557 30af 6706     		.value	0x667
 12558 30b1 00000000 		.long	.LASF488
 12559 30b5 522F0000 		.long	0x2f52
 12560 30b9 BD300000 		.long	0x30bd
 12561 30bd 08       		.uleb128 0x8
 12562 30be B7C10000 		.long	0xc1b7
 12563 30c2 00       		.byte	0
 12564 30c3 00       		.byte	0
 12565 30c4 5C       		.uleb128 0x5c
 12566 30c5 00000000 		.long	.LASF489
 12567 30c9 04       		.byte	0x4
 12568 30ca 0906     		.value	0x609
 12569 30cc C92C0000 		.long	0x2cc9
 12570 30d0 11       		.uleb128 0x11
 12571 30d1 102F0000 		.long	0x2f10
 12572 30d5 05       		.uleb128 0x5
 12573 30d6 00000000 		.long	.LASF490
 12574 30da 01       		.byte	0x1
 12575 30db 21       		.byte	0x21
 12576 30dc 5C       		.byte	0x5c
GAS LISTING /tmp/ccJUMvuF.s 			page 522


 12577 30dd 77310000 		.long	0x3177
 12578 30e1 21       		.uleb128 0x21
 12579 30e2 C09C0000 		.long	0x9cc0
 12580 30e6 00       		.byte	0
 12581 30e7 01       		.byte	0x1
 12582 30e8 22       		.uleb128 0x22
 12583 30e9 00000000 		.long	.LASF57
 12584 30ed 21       		.byte	0x21
 12585 30ee 5F       		.byte	0x5f
 12586 30ef 85060000 		.long	0x685
 12587 30f3 01       		.byte	0x1
 12588 30f4 22       		.uleb128 0x22
 12589 30f5 00000000 		.long	.LASF491
 12590 30f9 21       		.byte	0x21
 12591 30fa 61       		.byte	0x61
 12592 30fb C9C10000 		.long	0xc1c9
 12593 30ff 01       		.byte	0x1
 12594 3100 22       		.uleb128 0x22
 12595 3101 00000000 		.long	.LASF19
 12596 3105 21       		.byte	0x21
 12597 3106 65       		.byte	0x65
 12598 3107 29000000 		.long	0x29
 12599 310b 01       		.byte	0x1
 12600 310c 0C       		.uleb128 0xc
 12601 310d 00000000 		.long	.LASF60
 12602 3111 21       		.byte	0x21
 12603 3112 71       		.byte	0x71
 12604 3113 01       		.byte	0x1
 12605 3114 1C310000 		.long	0x311c
 12606 3118 22310000 		.long	0x3122
 12607 311c 08       		.uleb128 0x8
 12608 311d F8C10000 		.long	0xc1f8
 12609 3121 00       		.byte	0
 12610 3122 0C       		.uleb128 0xc
 12611 3123 00000000 		.long	.LASF60
 12612 3127 21       		.byte	0x21
 12613 3128 73       		.byte	0x73
 12614 3129 01       		.byte	0x1
 12615 312a 32310000 		.long	0x3132
 12616 312e 3D310000 		.long	0x313d
 12617 3132 08       		.uleb128 0x8
 12618 3133 F8C10000 		.long	0xc1f8
 12619 3137 09       		.uleb128 0x9
 12620 3138 FEC10000 		.long	0xc1fe
 12621 313c 00       		.byte	0
 12622 313d 0C       		.uleb128 0xc
 12623 313e 00000000 		.long	.LASF61
 12624 3142 21       		.byte	0x21
 12625 3143 79       		.byte	0x79
 12626 3144 01       		.byte	0x1
 12627 3145 4D310000 		.long	0x314d
 12628 3149 58310000 		.long	0x3158
 12629 314d 08       		.uleb128 0x8
 12630 314e F8C10000 		.long	0xc1f8
 12631 3152 08       		.uleb128 0x8
 12632 3153 28930000 		.long	0x9328
 12633 3157 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 523


 12634 3158 5D       		.uleb128 0x5d
 12635 3159 00000000 		.long	.LASF492
 12636 315d 01       		.byte	0x1
 12637 315e 21       		.byte	0x21
 12638 315f 68       		.byte	0x68
 12639 3160 01       		.byte	0x1
 12640 3161 13       		.uleb128 0x13
 12641 3162 00000000 		.long	.LASF493
 12642 3166 21       		.byte	0x21
 12643 3167 69       		.byte	0x69
 12644 3168 D5300000 		.long	0x30d5
 12645 316c 35       		.uleb128 0x35
 12646 316d 00000000 		.long	.LASF494
 12647 3171 29000000 		.long	0x29
 12648 3175 00       		.byte	0
 12649 3176 00       		.byte	0
 12650 3177 11       		.uleb128 0x11
 12651 3178 D5300000 		.long	0x30d5
 12652 317c 16       		.uleb128 0x16
 12653 317d 00000000 		.long	.LASF495
 12654 3181 01       		.byte	0x1
 12655 3182 2E       		.byte	0x2e
 12656 3183 69       		.byte	0x69
 12657 3184 9D310000 		.long	0x319d
 12658 3188 13       		.uleb128 0x13
 12659 3189 00000000 		.long	.LASF496
 12660 318d 2E       		.byte	0x2e
 12661 318e 6B       		.byte	0x6b
 12662 318f 29000000 		.long	0x29
 12663 3193 18       		.uleb128 0x18
 12664 3194 5F547000 		.string	"_Tp"
 12665 3198 29000000 		.long	0x29
 12666 319c 00       		.byte	0
 12667 319d 16       		.uleb128 0x16
 12668 319e 00000000 		.long	.LASF497
 12669 31a2 01       		.byte	0x1
 12670 31a3 2E       		.byte	0x2e
 12671 31a4 96       		.byte	0x96
 12672 31a5 03320000 		.long	0x3203
 12673 31a9 13       		.uleb128 0x13
 12674 31aa 00000000 		.long	.LASF491
 12675 31ae 2E       		.byte	0x2e
 12676 31af 99       		.byte	0x99
 12677 31b0 C9C10000 		.long	0xc1c9
 12678 31b4 13       		.uleb128 0x13
 12679 31b5 00000000 		.long	.LASF498
 12680 31b9 2E       		.byte	0x2e
 12681 31ba 9D       		.byte	0x9d
 12682 31bb 54070000 		.long	0x754
 12683 31bf 4E       		.uleb128 0x4e
 12684 31c0 00000000 		.long	.LASF499
 12685 31c4 2E       		.byte	0x2e
 12686 31c5 A8       		.byte	0xa8
 12687 31c6 00000000 		.long	.LASF500
 12688 31ca A9310000 		.long	0x31a9
 12689 31ce D8310000 		.long	0x31d8
 12690 31d2 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 524


 12691 31d3 04C20000 		.long	0xc204
 12692 31d7 00       		.byte	0
 12693 31d8 13       		.uleb128 0x13
 12694 31d9 00000000 		.long	.LASF501
 12695 31dd 2E       		.byte	0x2e
 12696 31de A0       		.byte	0xa0
 12697 31df 01930000 		.long	0x9301
 12698 31e3 13       		.uleb128 0x13
 12699 31e4 00000000 		.long	.LASF501
 12700 31e8 2E       		.byte	0x2e
 12701 31e9 A0       		.byte	0xa0
 12702 31ea C9B70000 		.long	0xb7c9
 12703 31ee 13       		.uleb128 0x13
 12704 31ef 00000000 		.long	.LASF501
 12705 31f3 2E       		.byte	0x2e
 12706 31f4 A0       		.byte	0xa0
 12707 31f5 CFC10000 		.long	0xc1cf
 12708 31f9 35       		.uleb128 0x35
 12709 31fa 00000000 		.long	.LASF502
 12710 31fe C9C10000 		.long	0xc1c9
 12711 3202 00       		.byte	0
 12712 3203 24       		.uleb128 0x24
 12713 3204 00000000 		.long	.LASF503
 12714 3208 01       		.byte	0x1
 12715 3209 1B       		.byte	0x1b
 12716 320a 1806     		.value	0x618
 12717 320c 3A320000 		.long	0x323a
 12718 3210 5C       		.uleb128 0x5c
 12719 3211 00000000 		.long	.LASF496
 12720 3215 1B       		.byte	0x1b
 12721 3216 1906     		.value	0x619
 12722 3218 53930000 		.long	0x9353
 12723 321c 35       		.uleb128 0x35
 12724 321d 00000000 		.long	.LASF504
 12725 3221 53930000 		.long	0x9353
 12726 3225 50       		.uleb128 0x50
 12727 3226 00000000 		.long	.LASF505
 12728 322a 30930000 		.long	0x9330
 12729 322e 00       		.byte	0
 12730 322f 50       		.uleb128 0x50
 12731 3230 00000000 		.long	.LASF506
 12732 3234 30930000 		.long	0x9330
 12733 3238 00       		.byte	0
 12734 3239 00       		.byte	0
 12735 323a 3B       		.uleb128 0x3b
 12736 323b 00000000 		.long	.LASF507
 12737 323f 01       		.byte	0x1
 12738 3240 1B       		.byte	0x1b
 12739 3241 2A06     		.value	0x62a
 12740 3243 7B320000 		.long	0x327b
 12741 3247 44       		.uleb128 0x44
 12742 3248 00000000 		.long	.LASF496
 12743 324c 1B       		.byte	0x1b
 12744 324d 2F06     		.value	0x62f
 12745 324f 10320000 		.long	0x3210
 12746 3253 01       		.byte	0x1
 12747 3254 35       		.uleb128 0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 525


 12748 3255 00000000 		.long	.LASF508
 12749 3259 84930000 		.long	0x9384
 12750 325d 35       		.uleb128 0x35
 12751 325e 00000000 		.long	.LASF504
 12752 3262 53930000 		.long	0x9353
 12753 3266 50       		.uleb128 0x50
 12754 3267 00000000 		.long	.LASF505
 12755 326b 30930000 		.long	0x9330
 12756 326f 00       		.byte	0
 12757 3270 50       		.uleb128 0x50
 12758 3271 00000000 		.long	.LASF506
 12759 3275 30930000 		.long	0x9330
 12760 3279 00       		.byte	0
 12761 327a 00       		.byte	0
 12762 327b 3B       		.uleb128 0x3b
 12763 327c 00000000 		.long	.LASF509
 12764 3280 01       		.byte	0x1
 12765 3281 1B       		.byte	0x1b
 12766 3282 6206     		.value	0x662
 12767 3284 B3320000 		.long	0x32b3
 12768 3288 44       		.uleb128 0x44
 12769 3289 00000000 		.long	.LASF496
 12770 328d 1B       		.byte	0x1b
 12771 328e 6906     		.value	0x669
 12772 3290 47320000 		.long	0x3247
 12773 3294 01       		.byte	0x1
 12774 3295 18       		.uleb128 0x18
 12775 3296 5F547000 		.string	"_Tp"
 12776 329a 84930000 		.long	0x9384
 12777 329e 50       		.uleb128 0x50
 12778 329f 00000000 		.long	.LASF510
 12779 32a3 30930000 		.long	0x9330
 12780 32a7 01       		.byte	0x1
 12781 32a8 50       		.uleb128 0x50
 12782 32a9 00000000 		.long	.LASF511
 12783 32ad 30930000 		.long	0x9330
 12784 32b1 00       		.byte	0
 12785 32b2 00       		.byte	0
 12786 32b3 24       		.uleb128 0x24
 12787 32b4 00000000 		.long	.LASF512
 12788 32b8 01       		.byte	0x1
 12789 32b9 1B       		.byte	0x1b
 12790 32ba 8206     		.value	0x682
 12791 32bc D6320000 		.long	0x32d6
 12792 32c0 5C       		.uleb128 0x5c
 12793 32c1 00000000 		.long	.LASF513
 12794 32c5 1B       		.byte	0x1b
 12795 32c6 8306     		.value	0x683
 12796 32c8 88320000 		.long	0x3288
 12797 32cc 18       		.uleb128 0x18
 12798 32cd 5F547000 		.string	"_Tp"
 12799 32d1 84930000 		.long	0x9384
 12800 32d5 00       		.byte	0
 12801 32d6 16       		.uleb128 0x16
 12802 32d7 00000000 		.long	.LASF514
 12803 32db 01       		.byte	0x1
 12804 32dc 2F       		.byte	0x2f
GAS LISTING /tmp/ccJUMvuF.s 			page 526


 12805 32dd 50       		.byte	0x50
 12806 32de A4340000 		.long	0x34a4
 12807 32e2 13       		.uleb128 0x13
 12808 32e3 00000000 		.long	.LASF19
 12809 32e7 2F       		.byte	0x2f
 12810 32e8 55       		.byte	0x55
 12811 32e9 00310000 		.long	0x3100
 12812 32ed 22       		.uleb128 0x22
 12813 32ee 00000000 		.long	.LASF515
 12814 32f2 2F       		.byte	0x2f
 12815 32f3 5F       		.byte	0x5f
 12816 32f4 F4300000 		.long	0x30f4
 12817 32f8 03       		.byte	0x3
 12818 32f9 13       		.uleb128 0x13
 12819 32fa 00000000 		.long	.LASF491
 12820 32fe 2F       		.byte	0x2f
 12821 32ff 66       		.byte	0x66
 12822 3300 ED320000 		.long	0x32ed
 12823 3304 22       		.uleb128 0x22
 12824 3305 00000000 		.long	.LASF516
 12825 3309 2F       		.byte	0x2f
 12826 330a 7E       		.byte	0x7e
 12827 330b E3310000 		.long	0x31e3
 12828 330f 03       		.byte	0x3
 12829 3310 13       		.uleb128 0x13
 12830 3311 00000000 		.long	.LASF517
 12831 3315 2F       		.byte	0x2f
 12832 3316 87       		.byte	0x87
 12833 3317 04330000 		.long	0x3304
 12834 331b 22       		.uleb128 0x22
 12835 331c 00000000 		.long	.LASF518
 12836 3320 2F       		.byte	0x2f
 12837 3321 94       		.byte	0x94
 12838 3322 E8300000 		.long	0x30e8
 12839 3326 03       		.byte	0x3
 12840 3327 13       		.uleb128 0x13
 12841 3328 00000000 		.long	.LASF57
 12842 332c 2F       		.byte	0x2f
 12843 332d 9D       		.byte	0x9d
 12844 332e 1B330000 		.long	0x331b
 12845 3332 5E       		.uleb128 0x5e
 12846 3333 00000000 		.long	.LASF519
 12847 3337 2F       		.byte	0x2f
 12848 3338 5F       		.byte	0x5f
 12849 3339 00000000 		.long	.LASF520
 12850 333d 0AC20000 		.long	0xc20a
 12851 3341 03       		.byte	0x3
 12852 3342 48330000 		.long	0x3348
 12853 3346 3A       		.uleb128 0x3a
 12854 3347 00       		.byte	0
 12855 3348 5E       		.uleb128 0x5e
 12856 3349 00000000 		.long	.LASF521
 12857 334d 2F       		.byte	0x2f
 12858 334e 68       		.byte	0x68
 12859 334f 00000000 		.long	.LASF522
 12860 3353 EE310000 		.long	0x31ee
 12861 3357 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 527


 12862 3358 5E330000 		.long	0x335e
 12863 335c 3A       		.uleb128 0x3a
 12864 335d 00       		.byte	0
 12865 335e 5E       		.uleb128 0x5e
 12866 335f 00000000 		.long	.LASF523
 12867 3363 2F       		.byte	0x2f
 12868 3364 73       		.byte	0x73
 12869 3365 00000000 		.long	.LASF524
 12870 3369 D8310000 		.long	0x31d8
 12871 336d 03       		.byte	0x3
 12872 336e 74330000 		.long	0x3374
 12873 3372 3A       		.uleb128 0x3a
 12874 3373 00       		.byte	0
 12875 3374 5E       		.uleb128 0x5e
 12876 3375 00000000 		.long	.LASF525
 12877 3379 2F       		.byte	0x2f
 12878 337a 7E       		.byte	0x7e
 12879 337b 00000000 		.long	.LASF526
 12880 337f E3310000 		.long	0x31e3
 12881 3383 03       		.byte	0x3
 12882 3384 8A330000 		.long	0x338a
 12883 3388 3A       		.uleb128 0x3a
 12884 3389 00       		.byte	0
 12885 338a 5E       		.uleb128 0x5e
 12886 338b 00000000 		.long	.LASF527
 12887 338f 2F       		.byte	0x2f
 12888 3390 89       		.byte	0x89
 12889 3391 00000000 		.long	.LASF528
 12890 3395 B4310000 		.long	0x31b4
 12891 3399 03       		.byte	0x3
 12892 339a A0330000 		.long	0x33a0
 12893 339e 3A       		.uleb128 0x3a
 12894 339f 00       		.byte	0
 12895 33a0 5E       		.uleb128 0x5e
 12896 33a1 00000000 		.long	.LASF529
 12897 33a5 2F       		.byte	0x2f
 12898 33a6 94       		.byte	0x94
 12899 33a7 00000000 		.long	.LASF530
 12900 33ab C0320000 		.long	0x32c0
 12901 33af 03       		.byte	0x3
 12902 33b0 B6330000 		.long	0x33b6
 12903 33b4 3A       		.uleb128 0x3a
 12904 33b5 00       		.byte	0
 12905 33b6 5E       		.uleb128 0x5e
 12906 33b7 00000000 		.long	.LASF531
 12907 33bb 2F       		.byte	0x2f
 12908 33bc 9F       		.byte	0x9f
 12909 33bd 00000000 		.long	.LASF532
 12910 33c1 A4340000 		.long	0x34a4
 12911 33c5 03       		.byte	0x3
 12912 33c6 CC330000 		.long	0x33cc
 12913 33ca 3A       		.uleb128 0x3a
 12914 33cb 00       		.byte	0
 12915 33cc 5E       		.uleb128 0x5e
 12916 33cd 00000000 		.long	.LASF533
 12917 33d1 2F       		.byte	0x2f
 12918 33d2 AB       		.byte	0xab
GAS LISTING /tmp/ccJUMvuF.s 			page 528


 12919 33d3 00000000 		.long	.LASF534
 12920 33d7 A4340000 		.long	0x34a4
 12921 33db 03       		.byte	0x3
 12922 33dc E2330000 		.long	0x33e2
 12923 33e0 3A       		.uleb128 0x3a
 12924 33e1 00       		.byte	0
 12925 33e2 5E       		.uleb128 0x5e
 12926 33e3 00000000 		.long	.LASF535
 12927 33e7 2F       		.byte	0x2f
 12928 33e8 B7       		.byte	0xb7
 12929 33e9 00000000 		.long	.LASF536
 12930 33ed A4340000 		.long	0x34a4
 12931 33f1 03       		.byte	0x3
 12932 33f2 F8330000 		.long	0x33f8
 12933 33f6 3A       		.uleb128 0x3a
 12934 33f7 00       		.byte	0
 12935 33f8 1E       		.uleb128 0x1e
 12936 33f9 00000000 		.long	.LASF537
 12937 33fd 2F       		.byte	0x2f
 12938 33fe 6401     		.value	0x164
 12939 3400 00000000 		.long	.LASF538
 12940 3404 F9320000 		.long	0x32f9
 12941 3408 17340000 		.long	0x3417
 12942 340c 09       		.uleb128 0x9
 12943 340d 10C20000 		.long	0xc210
 12944 3411 09       		.uleb128 0x9
 12945 3412 27330000 		.long	0x3327
 12946 3416 00       		.byte	0
 12947 3417 1E       		.uleb128 0x1e
 12948 3418 00000000 		.long	.LASF537
 12949 341c 2F       		.byte	0x2f
 12950 341d 7301     		.value	0x173
 12951 341f 00000000 		.long	.LASF539
 12952 3423 F9320000 		.long	0x32f9
 12953 3427 3B340000 		.long	0x343b
 12954 342b 09       		.uleb128 0x9
 12955 342c 10C20000 		.long	0xc210
 12956 3430 09       		.uleb128 0x9
 12957 3431 27330000 		.long	0x3327
 12958 3435 09       		.uleb128 0x9
 12959 3436 10330000 		.long	0x3310
 12960 343a 00       		.byte	0
 12961 343b 2E       		.uleb128 0x2e
 12962 343c 00000000 		.long	.LASF540
 12963 3440 2F       		.byte	0x2f
 12964 3441 7E01     		.value	0x17e
 12965 3443 00000000 		.long	.LASF541
 12966 3447 5B340000 		.long	0x345b
 12967 344b 09       		.uleb128 0x9
 12968 344c 10C20000 		.long	0xc210
 12969 3450 09       		.uleb128 0x9
 12970 3451 F9320000 		.long	0x32f9
 12971 3455 09       		.uleb128 0x9
 12972 3456 27330000 		.long	0x3327
 12973 345a 00       		.byte	0
 12974 345b 1E       		.uleb128 0x1e
 12975 345c 00000000 		.long	.LASF171
GAS LISTING /tmp/ccJUMvuF.s 			page 529


 12976 3460 2F       		.byte	0x2f
 12977 3461 A501     		.value	0x1a5
 12978 3463 00000000 		.long	.LASF542
 12979 3467 27330000 		.long	0x3327
 12980 346b 75340000 		.long	0x3475
 12981 346f 09       		.uleb128 0x9
 12982 3470 FEC10000 		.long	0xc1fe
 12983 3474 00       		.byte	0
 12984 3475 1E       		.uleb128 0x1e
 12985 3476 00000000 		.long	.LASF543
 12986 347a 2F       		.byte	0x2f
 12987 347b B101     		.value	0x1b1
 12988 347d 00000000 		.long	.LASF544
 12989 3481 D5300000 		.long	0x30d5
 12990 3485 8F340000 		.long	0x348f
 12991 3489 09       		.uleb128 0x9
 12992 348a FEC10000 		.long	0xc1fe
 12993 348e 00       		.byte	0
 12994 348f 13       		.uleb128 0x13
 12995 3490 00000000 		.long	.LASF545
 12996 3494 2F       		.byte	0x2f
 12997 3495 C5       		.byte	0xc5
 12998 3496 BB340000 		.long	0x34bb
 12999 349a 35       		.uleb128 0x35
 13000 349b 00000000 		.long	.LASF303
 13001 349f D5300000 		.long	0x30d5
 13002 34a3 00       		.byte	0
 13003 34a4 13       		.uleb128 0x13
 13004 34a5 00000000 		.long	.LASF546
 13005 34a9 1B       		.byte	0x1b
 13006 34aa 5A       		.byte	0x5a
 13007 34ab 18020000 		.long	0x218
 13008 34af 16       		.uleb128 0x16
 13009 34b0 00000000 		.long	.LASF547
 13010 34b4 01       		.byte	0x1
 13011 34b5 2F       		.byte	0x2f
 13012 34b6 3F       		.byte	0x3f
 13013 34b7 D9340000 		.long	0x34d9
 13014 34bb 13       		.uleb128 0x13
 13015 34bc 00000000 		.long	.LASF496
 13016 34c0 2F       		.byte	0x2f
 13017 34c1 41       		.byte	0x41
 13018 34c2 61310000 		.long	0x3161
 13019 34c6 35       		.uleb128 0x35
 13020 34c7 00000000 		.long	.LASF303
 13021 34cb D5300000 		.long	0x30d5
 13022 34cf 18       		.uleb128 0x18
 13023 34d0 5F547000 		.string	"_Tp"
 13024 34d4 29000000 		.long	0x29
 13025 34d8 00       		.byte	0
 13026 34d9 16       		.uleb128 0x16
 13027 34da 00000000 		.long	.LASF548
 13028 34de 18       		.byte	0x18
 13029 34df 06       		.byte	0x6
 13030 34e0 48       		.byte	0x48
 13031 34e1 71370000 		.long	0x3771
 13032 34e5 16       		.uleb128 0x16
GAS LISTING /tmp/ccJUMvuF.s 			page 530


 13033 34e6 00000000 		.long	.LASF549
 13034 34ea 18       		.byte	0x18
 13035 34eb 06       		.byte	0x6
 13036 34ec 4F       		.byte	0x4f
 13037 34ed 97350000 		.long	0x3597
 13038 34f1 25       		.uleb128 0x25
 13039 34f2 D5300000 		.long	0x30d5
 13040 34f6 00       		.byte	0
 13041 34f7 06       		.uleb128 0x6
 13042 34f8 00000000 		.long	.LASF550
 13043 34fc 06       		.byte	0x6
 13044 34fd 52       		.byte	0x52
 13045 34fe 97350000 		.long	0x3597
 13046 3502 00       		.byte	0
 13047 3503 06       		.uleb128 0x6
 13048 3504 00000000 		.long	.LASF551
 13049 3508 06       		.byte	0x6
 13050 3509 53       		.byte	0x53
 13051 350a 97350000 		.long	0x3597
 13052 350e 08       		.byte	0x8
 13053 350f 06       		.uleb128 0x6
 13054 3510 00000000 		.long	.LASF552
 13055 3514 06       		.byte	0x6
 13056 3515 54       		.byte	0x54
 13057 3516 97350000 		.long	0x3597
 13058 351a 10       		.byte	0x10
 13059 351b 37       		.uleb128 0x37
 13060 351c 00000000 		.long	.LASF549
 13061 3520 06       		.byte	0x6
 13062 3521 56       		.byte	0x56
 13063 3522 2A350000 		.long	0x352a
 13064 3526 30350000 		.long	0x3530
 13065 352a 08       		.uleb128 0x8
 13066 352b 22C20000 		.long	0xc222
 13067 352f 00       		.byte	0
 13068 3530 37       		.uleb128 0x37
 13069 3531 00000000 		.long	.LASF549
 13070 3535 06       		.byte	0x6
 13071 3536 5A       		.byte	0x5a
 13072 3537 3F350000 		.long	0x353f
 13073 353b 4A350000 		.long	0x354a
 13074 353f 08       		.uleb128 0x8
 13075 3540 22C20000 		.long	0xc222
 13076 3544 09       		.uleb128 0x9
 13077 3545 28C20000 		.long	0xc228
 13078 3549 00       		.byte	0
 13079 354a 37       		.uleb128 0x37
 13080 354b 00000000 		.long	.LASF549
 13081 354f 06       		.byte	0x6
 13082 3550 5F       		.byte	0x5f
 13083 3551 59350000 		.long	0x3559
 13084 3555 64350000 		.long	0x3564
 13085 3559 08       		.uleb128 0x8
 13086 355a 22C20000 		.long	0xc222
 13087 355e 09       		.uleb128 0x9
 13088 355f 2EC20000 		.long	0xc22e
 13089 3563 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 531


 13090 3564 0A       		.uleb128 0xa
 13091 3565 00000000 		.long	.LASF553
 13092 3569 06       		.byte	0x6
 13093 356a 65       		.byte	0x65
 13094 356b 00000000 		.long	.LASF554
 13095 356f 77350000 		.long	0x3577
 13096 3573 82350000 		.long	0x3582
 13097 3577 08       		.uleb128 0x8
 13098 3578 22C20000 		.long	0xc222
 13099 357c 09       		.uleb128 0x9
 13100 357d 35C20000 		.long	0xc235
 13101 3581 00       		.byte	0
 13102 3582 28       		.uleb128 0x28
 13103 3583 00000000 		.long	.LASF555
 13104 3587 8B350000 		.long	0x358b
 13105 358b 08       		.uleb128 0x8
 13106 358c 22C20000 		.long	0xc222
 13107 3590 08       		.uleb128 0x8
 13108 3591 28930000 		.long	0x9328
 13109 3595 00       		.byte	0
 13110 3596 00       		.byte	0
 13111 3597 13       		.uleb128 0x13
 13112 3598 00000000 		.long	.LASF491
 13113 359c 06       		.byte	0x6
 13114 359d 4D       		.byte	0x4d
 13115 359e 389E0000 		.long	0x9e38
 13116 35a2 11       		.uleb128 0x11
 13117 35a3 A7350000 		.long	0x35a7
 13118 35a7 13       		.uleb128 0x13
 13119 35a8 00000000 		.long	.LASF556
 13120 35ac 06       		.byte	0x6
 13121 35ad 4B       		.byte	0x4b
 13122 35ae F79E0000 		.long	0x9ef7
 13123 35b2 06       		.uleb128 0x6
 13124 35b3 00000000 		.long	.LASF557
 13125 35b7 06       		.byte	0x6
 13126 35b8 A4       		.byte	0xa4
 13127 35b9 E5340000 		.long	0x34e5
 13128 35bd 00       		.byte	0
 13129 35be 13       		.uleb128 0x13
 13130 35bf 00000000 		.long	.LASF67
 13131 35c3 06       		.byte	0x6
 13132 35c4 6E       		.byte	0x6e
 13133 35c5 D5300000 		.long	0x30d5
 13134 35c9 0B       		.uleb128 0xb
 13135 35ca 00000000 		.long	.LASF558
 13136 35ce 06       		.byte	0x6
 13137 35cf 71       		.byte	0x71
 13138 35d0 00000000 		.long	.LASF559
 13139 35d4 3BC20000 		.long	0xc23b
 13140 35d8 E0350000 		.long	0x35e0
 13141 35dc E6350000 		.long	0x35e6
 13142 35e0 08       		.uleb128 0x8
 13143 35e1 41C20000 		.long	0xc241
 13144 35e5 00       		.byte	0
 13145 35e6 0B       		.uleb128 0xb
 13146 35e7 00000000 		.long	.LASF558
GAS LISTING /tmp/ccJUMvuF.s 			page 532


 13147 35eb 06       		.byte	0x6
 13148 35ec 75       		.byte	0x75
 13149 35ed 00000000 		.long	.LASF560
 13150 35f1 28C20000 		.long	0xc228
 13151 35f5 FD350000 		.long	0x35fd
 13152 35f9 03360000 		.long	0x3603
 13153 35fd 08       		.uleb128 0x8
 13154 35fe 47C20000 		.long	0xc247
 13155 3602 00       		.byte	0
 13156 3603 0B       		.uleb128 0xb
 13157 3604 00000000 		.long	.LASF262
 13158 3608 06       		.byte	0x6
 13159 3609 79       		.byte	0x79
 13160 360a 00000000 		.long	.LASF561
 13161 360e BE350000 		.long	0x35be
 13162 3612 1A360000 		.long	0x361a
 13163 3616 20360000 		.long	0x3620
 13164 361a 08       		.uleb128 0x8
 13165 361b 47C20000 		.long	0xc247
 13166 361f 00       		.byte	0
 13167 3620 37       		.uleb128 0x37
 13168 3621 00000000 		.long	.LASF562
 13169 3625 06       		.byte	0x6
 13170 3626 7C       		.byte	0x7c
 13171 3627 2F360000 		.long	0x362f
 13172 362b 35360000 		.long	0x3635
 13173 362f 08       		.uleb128 0x8
 13174 3630 41C20000 		.long	0xc241
 13175 3634 00       		.byte	0
 13176 3635 37       		.uleb128 0x37
 13177 3636 00000000 		.long	.LASF562
 13178 363a 06       		.byte	0x6
 13179 363b 7F       		.byte	0x7f
 13180 363c 44360000 		.long	0x3644
 13181 3640 4F360000 		.long	0x364f
 13182 3644 08       		.uleb128 0x8
 13183 3645 41C20000 		.long	0xc241
 13184 3649 09       		.uleb128 0x9
 13185 364a 4DC20000 		.long	0xc24d
 13186 364e 00       		.byte	0
 13187 364f 11       		.uleb128 0x11
 13188 3650 BE350000 		.long	0x35be
 13189 3654 37       		.uleb128 0x37
 13190 3655 00000000 		.long	.LASF562
 13191 3659 06       		.byte	0x6
 13192 365a 82       		.byte	0x82
 13193 365b 63360000 		.long	0x3663
 13194 365f 6E360000 		.long	0x366e
 13195 3663 08       		.uleb128 0x8
 13196 3664 41C20000 		.long	0xc241
 13197 3668 09       		.uleb128 0x9
 13198 3669 85060000 		.long	0x685
 13199 366d 00       		.byte	0
 13200 366e 37       		.uleb128 0x37
 13201 366f 00000000 		.long	.LASF562
 13202 3673 06       		.byte	0x6
 13203 3674 86       		.byte	0x86
GAS LISTING /tmp/ccJUMvuF.s 			page 533


 13204 3675 7D360000 		.long	0x367d
 13205 3679 8D360000 		.long	0x368d
 13206 367d 08       		.uleb128 0x8
 13207 367e 41C20000 		.long	0xc241
 13208 3682 09       		.uleb128 0x9
 13209 3683 85060000 		.long	0x685
 13210 3687 09       		.uleb128 0x9
 13211 3688 4DC20000 		.long	0xc24d
 13212 368c 00       		.byte	0
 13213 368d 37       		.uleb128 0x37
 13214 368e 00000000 		.long	.LASF562
 13215 3692 06       		.byte	0x6
 13216 3693 8B       		.byte	0x8b
 13217 3694 9C360000 		.long	0x369c
 13218 3698 A7360000 		.long	0x36a7
 13219 369c 08       		.uleb128 0x8
 13220 369d 41C20000 		.long	0xc241
 13221 36a1 09       		.uleb128 0x9
 13222 36a2 2EC20000 		.long	0xc22e
 13223 36a6 00       		.byte	0
 13224 36a7 37       		.uleb128 0x37
 13225 36a8 00000000 		.long	.LASF562
 13226 36ac 06       		.byte	0x6
 13227 36ad 8E       		.byte	0x8e
 13228 36ae B6360000 		.long	0x36b6
 13229 36b2 C1360000 		.long	0x36c1
 13230 36b6 08       		.uleb128 0x8
 13231 36b7 41C20000 		.long	0xc241
 13232 36bb 09       		.uleb128 0x9
 13233 36bc 53C20000 		.long	0xc253
 13234 36c0 00       		.byte	0
 13235 36c1 37       		.uleb128 0x37
 13236 36c2 00000000 		.long	.LASF562
 13237 36c6 06       		.byte	0x6
 13238 36c7 92       		.byte	0x92
 13239 36c8 D0360000 		.long	0x36d0
 13240 36cc E0360000 		.long	0x36e0
 13241 36d0 08       		.uleb128 0x8
 13242 36d1 41C20000 		.long	0xc241
 13243 36d5 09       		.uleb128 0x9
 13244 36d6 53C20000 		.long	0xc253
 13245 36da 09       		.uleb128 0x9
 13246 36db 4DC20000 		.long	0xc24d
 13247 36df 00       		.byte	0
 13248 36e0 37       		.uleb128 0x37
 13249 36e1 00000000 		.long	.LASF563
 13250 36e5 06       		.byte	0x6
 13251 36e6 9F       		.byte	0x9f
 13252 36e7 EF360000 		.long	0x36ef
 13253 36eb FA360000 		.long	0x36fa
 13254 36ef 08       		.uleb128 0x8
 13255 36f0 41C20000 		.long	0xc241
 13256 36f4 08       		.uleb128 0x8
 13257 36f5 28930000 		.long	0x9328
 13258 36f9 00       		.byte	0
 13259 36fa 0B       		.uleb128 0xb
 13260 36fb 00000000 		.long	.LASF564
GAS LISTING /tmp/ccJUMvuF.s 			page 534


 13261 36ff 06       		.byte	0x6
 13262 3700 A7       		.byte	0xa7
 13263 3701 00000000 		.long	.LASF565
 13264 3705 97350000 		.long	0x3597
 13265 3709 11370000 		.long	0x3711
 13266 370d 1C370000 		.long	0x371c
 13267 3711 08       		.uleb128 0x8
 13268 3712 41C20000 		.long	0xc241
 13269 3716 09       		.uleb128 0x9
 13270 3717 85060000 		.long	0x685
 13271 371b 00       		.byte	0
 13272 371c 0A       		.uleb128 0xa
 13273 371d 00000000 		.long	.LASF566
 13274 3721 06       		.byte	0x6
 13275 3722 AE       		.byte	0xae
 13276 3723 00000000 		.long	.LASF567
 13277 3727 2F370000 		.long	0x372f
 13278 372b 3F370000 		.long	0x373f
 13279 372f 08       		.uleb128 0x8
 13280 3730 41C20000 		.long	0xc241
 13281 3734 09       		.uleb128 0x9
 13282 3735 97350000 		.long	0x3597
 13283 3739 09       		.uleb128 0x9
 13284 373a 85060000 		.long	0x685
 13285 373e 00       		.byte	0
 13286 373f 0E       		.uleb128 0xe
 13287 3740 00000000 		.long	.LASF568
 13288 3744 06       		.byte	0x6
 13289 3745 B7       		.byte	0xb7
 13290 3746 00000000 		.long	.LASF569
 13291 374a 03       		.byte	0x3
 13292 374b 53370000 		.long	0x3753
 13293 374f 5E370000 		.long	0x375e
 13294 3753 08       		.uleb128 0x8
 13295 3754 41C20000 		.long	0xc241
 13296 3758 09       		.uleb128 0x9
 13297 3759 85060000 		.long	0x685
 13298 375d 00       		.byte	0
 13299 375e 18       		.uleb128 0x18
 13300 375f 5F547000 		.string	"_Tp"
 13301 3763 29000000 		.long	0x29
 13302 3767 35       		.uleb128 0x35
 13303 3768 00000000 		.long	.LASF303
 13304 376c D5300000 		.long	0x30d5
 13305 3770 00       		.byte	0
 13306 3771 11       		.uleb128 0x11
 13307 3772 D9340000 		.long	0x34d9
 13308 3776 05       		.uleb128 0x5
 13309 3777 00000000 		.long	.LASF570
 13310 377b 18       		.byte	0x18
 13311 377c 06       		.byte	0x6
 13312 377d D6       		.byte	0xd6
 13313 377e 31410000 		.long	0x4131
 13314 3782 12       		.uleb128 0x12
 13315 3783 06       		.byte	0x6
 13316 3784 D6       		.byte	0xd6
 13317 3785 FA360000 		.long	0x36fa
GAS LISTING /tmp/ccJUMvuF.s 			page 535


 13318 3789 12       		.uleb128 0x12
 13319 378a 06       		.byte	0x6
 13320 378b D6       		.byte	0xd6
 13321 378c 1C370000 		.long	0x371c
 13322 3790 12       		.uleb128 0x12
 13323 3791 06       		.byte	0x6
 13324 3792 D6       		.byte	0xd6
 13325 3793 B2350000 		.long	0x35b2
 13326 3797 12       		.uleb128 0x12
 13327 3798 06       		.byte	0x6
 13328 3799 D6       		.byte	0xd6
 13329 379a E6350000 		.long	0x35e6
 13330 379e 12       		.uleb128 0x12
 13331 379f 06       		.byte	0x6
 13332 37a0 D6       		.byte	0xd6
 13333 37a1 03360000 		.long	0x3603
 13334 37a5 21       		.uleb128 0x21
 13335 37a6 D9340000 		.long	0x34d9
 13336 37aa 00       		.byte	0
 13337 37ab 02       		.byte	0x2
 13338 37ac 22       		.uleb128 0x22
 13339 37ad 00000000 		.long	.LASF19
 13340 37b1 06       		.byte	0x6
 13341 37b2 E2       		.byte	0xe2
 13342 37b3 29000000 		.long	0x29
 13343 37b7 01       		.byte	0x1
 13344 37b8 22       		.uleb128 0x22
 13345 37b9 00000000 		.long	.LASF491
 13346 37bd 06       		.byte	0x6
 13347 37be E3       		.byte	0xe3
 13348 37bf 97350000 		.long	0x3597
 13349 37c3 01       		.byte	0x1
 13350 37c4 22       		.uleb128 0x22
 13351 37c5 00000000 		.long	.LASF58
 13352 37c9 06       		.byte	0x6
 13353 37ca E5       		.byte	0xe5
 13354 37cb 439E0000 		.long	0x9e43
 13355 37cf 01       		.byte	0x1
 13356 37d0 22       		.uleb128 0x22
 13357 37d1 00000000 		.long	.LASF59
 13358 37d5 06       		.byte	0x6
 13359 37d6 E6       		.byte	0xe6
 13360 37d7 4E9E0000 		.long	0x9e4e
 13361 37db 01       		.byte	0x1
 13362 37dc 22       		.uleb128 0x22
 13363 37dd 00000000 		.long	.LASF68
 13364 37e1 06       		.byte	0x6
 13365 37e2 E7       		.byte	0xe7
 13366 37e3 169F0000 		.long	0x9f16
 13367 37e7 01       		.byte	0x1
 13368 37e8 22       		.uleb128 0x22
 13369 37e9 00000000 		.long	.LASF69
 13370 37ed 06       		.byte	0x6
 13371 37ee E9       		.byte	0xe9
 13372 37ef 4FA10000 		.long	0xa14f
 13373 37f3 01       		.byte	0x1
 13374 37f4 22       		.uleb128 0x22
GAS LISTING /tmp/ccJUMvuF.s 			page 536


 13375 37f5 00000000 		.long	.LASF70
 13376 37f9 06       		.byte	0x6
 13377 37fa EA       		.byte	0xea
 13378 37fb 31410000 		.long	0x4131
 13379 37ff 01       		.byte	0x1
 13380 3800 22       		.uleb128 0x22
 13381 3801 00000000 		.long	.LASF71
 13382 3805 06       		.byte	0x6
 13383 3806 EB       		.byte	0xeb
 13384 3807 36410000 		.long	0x4136
 13385 380b 01       		.byte	0x1
 13386 380c 22       		.uleb128 0x22
 13387 380d 00000000 		.long	.LASF57
 13388 3811 06       		.byte	0x6
 13389 3812 EC       		.byte	0xec
 13390 3813 85060000 		.long	0x685
 13391 3817 01       		.byte	0x1
 13392 3818 22       		.uleb128 0x22
 13393 3819 00000000 		.long	.LASF67
 13394 381d 06       		.byte	0x6
 13395 381e EE       		.byte	0xee
 13396 381f D5300000 		.long	0x30d5
 13397 3823 01       		.byte	0x1
 13398 3824 0C       		.uleb128 0xc
 13399 3825 00000000 		.long	.LASF571
 13400 3829 06       		.byte	0x6
 13401 382a FD       		.byte	0xfd
 13402 382b 01       		.byte	0x1
 13403 382c 34380000 		.long	0x3834
 13404 3830 3A380000 		.long	0x383a
 13405 3834 08       		.uleb128 0x8
 13406 3835 5AC20000 		.long	0xc25a
 13407 3839 00       		.byte	0
 13408 383a 31       		.uleb128 0x31
 13409 383b 00000000 		.long	.LASF571
 13410 383f 06       		.byte	0x6
 13411 3840 0801     		.value	0x108
 13412 3842 01       		.byte	0x1
 13413 3843 4B380000 		.long	0x384b
 13414 3847 56380000 		.long	0x3856
 13415 384b 08       		.uleb128 0x8
 13416 384c 5AC20000 		.long	0xc25a
 13417 3850 09       		.uleb128 0x9
 13418 3851 60C20000 		.long	0xc260
 13419 3855 00       		.byte	0
 13420 3856 11       		.uleb128 0x11
 13421 3857 18380000 		.long	0x3818
 13422 385b 31       		.uleb128 0x31
 13423 385c 00000000 		.long	.LASF571
 13424 3860 06       		.byte	0x6
 13425 3861 1501     		.value	0x115
 13426 3863 01       		.byte	0x1
 13427 3864 6C380000 		.long	0x386c
 13428 3868 7C380000 		.long	0x387c
 13429 386c 08       		.uleb128 0x8
 13430 386d 5AC20000 		.long	0xc25a
 13431 3871 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 537


 13432 3872 0C380000 		.long	0x380c
 13433 3876 09       		.uleb128 0x9
 13434 3877 60C20000 		.long	0xc260
 13435 387b 00       		.byte	0
 13436 387c 30       		.uleb128 0x30
 13437 387d 00000000 		.long	.LASF571
 13438 3881 06       		.byte	0x6
 13439 3882 2101     		.value	0x121
 13440 3884 01       		.byte	0x1
 13441 3885 8D380000 		.long	0x388d
 13442 3889 A2380000 		.long	0x38a2
 13443 388d 08       		.uleb128 0x8
 13444 388e 5AC20000 		.long	0xc25a
 13445 3892 09       		.uleb128 0x9
 13446 3893 0C380000 		.long	0x380c
 13447 3897 09       		.uleb128 0x9
 13448 3898 66C20000 		.long	0xc266
 13449 389c 09       		.uleb128 0x9
 13450 389d 60C20000 		.long	0xc260
 13451 38a1 00       		.byte	0
 13452 38a2 11       		.uleb128 0x11
 13453 38a3 AC370000 		.long	0x37ac
 13454 38a7 30       		.uleb128 0x30
 13455 38a8 00000000 		.long	.LASF571
 13456 38ac 06       		.byte	0x6
 13457 38ad 3E01     		.value	0x13e
 13458 38af 01       		.byte	0x1
 13459 38b0 B8380000 		.long	0x38b8
 13460 38b4 C3380000 		.long	0x38c3
 13461 38b8 08       		.uleb128 0x8
 13462 38b9 5AC20000 		.long	0xc25a
 13463 38bd 09       		.uleb128 0x9
 13464 38be 6CC20000 		.long	0xc26c
 13465 38c2 00       		.byte	0
 13466 38c3 30       		.uleb128 0x30
 13467 38c4 00000000 		.long	.LASF571
 13468 38c8 06       		.byte	0x6
 13469 38c9 4F01     		.value	0x14f
 13470 38cb 01       		.byte	0x1
 13471 38cc D4380000 		.long	0x38d4
 13472 38d0 DF380000 		.long	0x38df
 13473 38d4 08       		.uleb128 0x8
 13474 38d5 5AC20000 		.long	0xc25a
 13475 38d9 09       		.uleb128 0x9
 13476 38da 72C20000 		.long	0xc272
 13477 38de 00       		.byte	0
 13478 38df 30       		.uleb128 0x30
 13479 38e0 00000000 		.long	.LASF571
 13480 38e4 06       		.byte	0x6
 13481 38e5 5301     		.value	0x153
 13482 38e7 01       		.byte	0x1
 13483 38e8 F0380000 		.long	0x38f0
 13484 38ec 00390000 		.long	0x3900
 13485 38f0 08       		.uleb128 0x8
 13486 38f1 5AC20000 		.long	0xc25a
 13487 38f5 09       		.uleb128 0x9
 13488 38f6 6CC20000 		.long	0xc26c
GAS LISTING /tmp/ccJUMvuF.s 			page 538


 13489 38fa 09       		.uleb128 0x9
 13490 38fb 60C20000 		.long	0xc260
 13491 38ff 00       		.byte	0
 13492 3900 30       		.uleb128 0x30
 13493 3901 00000000 		.long	.LASF571
 13494 3905 06       		.byte	0x6
 13495 3906 5C01     		.value	0x15c
 13496 3908 01       		.byte	0x1
 13497 3909 11390000 		.long	0x3911
 13498 390d 21390000 		.long	0x3921
 13499 3911 08       		.uleb128 0x8
 13500 3912 5AC20000 		.long	0xc25a
 13501 3916 09       		.uleb128 0x9
 13502 3917 72C20000 		.long	0xc272
 13503 391b 09       		.uleb128 0x9
 13504 391c 60C20000 		.long	0xc260
 13505 3920 00       		.byte	0
 13506 3921 30       		.uleb128 0x30
 13507 3922 00000000 		.long	.LASF571
 13508 3926 06       		.byte	0x6
 13509 3927 7501     		.value	0x175
 13510 3929 01       		.byte	0x1
 13511 392a 32390000 		.long	0x3932
 13512 392e 42390000 		.long	0x3942
 13513 3932 08       		.uleb128 0x8
 13514 3933 5AC20000 		.long	0xc25a
 13515 3937 09       		.uleb128 0x9
 13516 3938 40410000 		.long	0x4140
 13517 393c 09       		.uleb128 0x9
 13518 393d 60C20000 		.long	0xc260
 13519 3941 00       		.byte	0
 13520 3942 30       		.uleb128 0x30
 13521 3943 00000000 		.long	.LASF572
 13522 3947 06       		.byte	0x6
 13523 3948 A701     		.value	0x1a7
 13524 394a 01       		.byte	0x1
 13525 394b 53390000 		.long	0x3953
 13526 394f 5E390000 		.long	0x395e
 13527 3953 08       		.uleb128 0x8
 13528 3954 5AC20000 		.long	0xc25a
 13529 3958 08       		.uleb128 0x8
 13530 3959 28930000 		.long	0x9328
 13531 395d 00       		.byte	0
 13532 395e 0D       		.uleb128 0xd
 13533 395f 00000000 		.long	.LASF8
 13534 3963 30       		.byte	0x30
 13535 3964 A7       		.byte	0xa7
 13536 3965 00000000 		.long	.LASF573
 13537 3969 79C20000 		.long	0xc279
 13538 396d 01       		.byte	0x1
 13539 396e 76390000 		.long	0x3976
 13540 3972 81390000 		.long	0x3981
 13541 3976 08       		.uleb128 0x8
 13542 3977 5AC20000 		.long	0xc25a
 13543 397b 09       		.uleb128 0x9
 13544 397c 6CC20000 		.long	0xc26c
 13545 3980 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 539


 13546 3981 32       		.uleb128 0x32
 13547 3982 00000000 		.long	.LASF8
 13548 3986 06       		.byte	0x6
 13549 3987 C001     		.value	0x1c0
 13550 3989 00000000 		.long	.LASF574
 13551 398d 79C20000 		.long	0xc279
 13552 3991 01       		.byte	0x1
 13553 3992 9A390000 		.long	0x399a
 13554 3996 A5390000 		.long	0x39a5
 13555 399a 08       		.uleb128 0x8
 13556 399b 5AC20000 		.long	0xc25a
 13557 399f 09       		.uleb128 0x9
 13558 39a0 72C20000 		.long	0xc272
 13559 39a4 00       		.byte	0
 13560 39a5 32       		.uleb128 0x32
 13561 39a6 00000000 		.long	.LASF8
 13562 39aa 06       		.byte	0x6
 13563 39ab D601     		.value	0x1d6
 13564 39ad 00000000 		.long	.LASF575
 13565 39b1 79C20000 		.long	0xc279
 13566 39b5 01       		.byte	0x1
 13567 39b6 BE390000 		.long	0x39be
 13568 39ba C9390000 		.long	0x39c9
 13569 39be 08       		.uleb128 0x8
 13570 39bf 5AC20000 		.long	0xc25a
 13571 39c3 09       		.uleb128 0x9
 13572 39c4 40410000 		.long	0x4140
 13573 39c8 00       		.byte	0
 13574 39c9 34       		.uleb128 0x34
 13575 39ca 00000000 		.long	.LASF44
 13576 39ce 06       		.byte	0x6
 13577 39cf E801     		.value	0x1e8
 13578 39d1 00000000 		.long	.LASF576
 13579 39d5 01       		.byte	0x1
 13580 39d6 DE390000 		.long	0x39de
 13581 39da EE390000 		.long	0x39ee
 13582 39de 08       		.uleb128 0x8
 13583 39df 5AC20000 		.long	0xc25a
 13584 39e3 09       		.uleb128 0x9
 13585 39e4 0C380000 		.long	0x380c
 13586 39e8 09       		.uleb128 0x9
 13587 39e9 66C20000 		.long	0xc266
 13588 39ed 00       		.byte	0
 13589 39ee 34       		.uleb128 0x34
 13590 39ef 00000000 		.long	.LASF44
 13591 39f3 06       		.byte	0x6
 13592 39f4 1502     		.value	0x215
 13593 39f6 00000000 		.long	.LASF577
 13594 39fa 01       		.byte	0x1
 13595 39fb 033A0000 		.long	0x3a03
 13596 39ff 0E3A0000 		.long	0x3a0e
 13597 3a03 08       		.uleb128 0x8
 13598 3a04 5AC20000 		.long	0xc25a
 13599 3a08 09       		.uleb128 0x9
 13600 3a09 40410000 		.long	0x4140
 13601 3a0d 00       		.byte	0
 13602 3a0e 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 540


 13603 3a0f 00000000 		.long	.LASF149
 13604 3a13 06       		.byte	0x6
 13605 3a14 2302     		.value	0x223
 13606 3a16 00000000 		.long	.LASF578
 13607 3a1a DC370000 		.long	0x37dc
 13608 3a1e 01       		.byte	0x1
 13609 3a1f 273A0000 		.long	0x3a27
 13610 3a23 2D3A0000 		.long	0x3a2d
 13611 3a27 08       		.uleb128 0x8
 13612 3a28 5AC20000 		.long	0xc25a
 13613 3a2c 00       		.byte	0
 13614 3a2d 32       		.uleb128 0x32
 13615 3a2e 00000000 		.long	.LASF149
 13616 3a32 06       		.byte	0x6
 13617 3a33 2C02     		.value	0x22c
 13618 3a35 00000000 		.long	.LASF579
 13619 3a39 E8370000 		.long	0x37e8
 13620 3a3d 01       		.byte	0x1
 13621 3a3e 463A0000 		.long	0x3a46
 13622 3a42 4C3A0000 		.long	0x3a4c
 13623 3a46 08       		.uleb128 0x8
 13624 3a47 7FC20000 		.long	0xc27f
 13625 3a4b 00       		.byte	0
 13626 3a4c 33       		.uleb128 0x33
 13627 3a4d 656E6400 		.string	"end"
 13628 3a51 06       		.byte	0x6
 13629 3a52 3502     		.value	0x235
 13630 3a54 00000000 		.long	.LASF580
 13631 3a58 DC370000 		.long	0x37dc
 13632 3a5c 01       		.byte	0x1
 13633 3a5d 653A0000 		.long	0x3a65
 13634 3a61 6B3A0000 		.long	0x3a6b
 13635 3a65 08       		.uleb128 0x8
 13636 3a66 5AC20000 		.long	0xc25a
 13637 3a6a 00       		.byte	0
 13638 3a6b 33       		.uleb128 0x33
 13639 3a6c 656E6400 		.string	"end"
 13640 3a70 06       		.byte	0x6
 13641 3a71 3E02     		.value	0x23e
 13642 3a73 00000000 		.long	.LASF581
 13643 3a77 E8370000 		.long	0x37e8
 13644 3a7b 01       		.byte	0x1
 13645 3a7c 843A0000 		.long	0x3a84
 13646 3a80 8A3A0000 		.long	0x3a8a
 13647 3a84 08       		.uleb128 0x8
 13648 3a85 7FC20000 		.long	0xc27f
 13649 3a89 00       		.byte	0
 13650 3a8a 32       		.uleb128 0x32
 13651 3a8b 00000000 		.long	.LASF154
 13652 3a8f 06       		.byte	0x6
 13653 3a90 4702     		.value	0x247
 13654 3a92 00000000 		.long	.LASF582
 13655 3a96 00380000 		.long	0x3800
 13656 3a9a 01       		.byte	0x1
 13657 3a9b A33A0000 		.long	0x3aa3
 13658 3a9f A93A0000 		.long	0x3aa9
 13659 3aa3 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 541


 13660 3aa4 5AC20000 		.long	0xc25a
 13661 3aa8 00       		.byte	0
 13662 3aa9 32       		.uleb128 0x32
 13663 3aaa 00000000 		.long	.LASF154
 13664 3aae 06       		.byte	0x6
 13665 3aaf 5002     		.value	0x250
 13666 3ab1 00000000 		.long	.LASF583
 13667 3ab5 F4370000 		.long	0x37f4
 13668 3ab9 01       		.byte	0x1
 13669 3aba C23A0000 		.long	0x3ac2
 13670 3abe C83A0000 		.long	0x3ac8
 13671 3ac2 08       		.uleb128 0x8
 13672 3ac3 7FC20000 		.long	0xc27f
 13673 3ac7 00       		.byte	0
 13674 3ac8 32       		.uleb128 0x32
 13675 3ac9 00000000 		.long	.LASF157
 13676 3acd 06       		.byte	0x6
 13677 3ace 5902     		.value	0x259
 13678 3ad0 00000000 		.long	.LASF584
 13679 3ad4 00380000 		.long	0x3800
 13680 3ad8 01       		.byte	0x1
 13681 3ad9 E13A0000 		.long	0x3ae1
 13682 3add E73A0000 		.long	0x3ae7
 13683 3ae1 08       		.uleb128 0x8
 13684 3ae2 5AC20000 		.long	0xc25a
 13685 3ae6 00       		.byte	0
 13686 3ae7 32       		.uleb128 0x32
 13687 3ae8 00000000 		.long	.LASF157
 13688 3aec 06       		.byte	0x6
 13689 3aed 6202     		.value	0x262
 13690 3aef 00000000 		.long	.LASF585
 13691 3af3 F4370000 		.long	0x37f4
 13692 3af7 01       		.byte	0x1
 13693 3af8 003B0000 		.long	0x3b00
 13694 3afc 063B0000 		.long	0x3b06
 13695 3b00 08       		.uleb128 0x8
 13696 3b01 7FC20000 		.long	0xc27f
 13697 3b05 00       		.byte	0
 13698 3b06 32       		.uleb128 0x32
 13699 3b07 00000000 		.long	.LASF160
 13700 3b0b 06       		.byte	0x6
 13701 3b0c 6C02     		.value	0x26c
 13702 3b0e 00000000 		.long	.LASF586
 13703 3b12 E8370000 		.long	0x37e8
 13704 3b16 01       		.byte	0x1
 13705 3b17 1F3B0000 		.long	0x3b1f
 13706 3b1b 253B0000 		.long	0x3b25
 13707 3b1f 08       		.uleb128 0x8
 13708 3b20 7FC20000 		.long	0xc27f
 13709 3b24 00       		.byte	0
 13710 3b25 32       		.uleb128 0x32
 13711 3b26 00000000 		.long	.LASF162
 13712 3b2a 06       		.byte	0x6
 13713 3b2b 7502     		.value	0x275
 13714 3b2d 00000000 		.long	.LASF587
 13715 3b31 E8370000 		.long	0x37e8
 13716 3b35 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 542


 13717 3b36 3E3B0000 		.long	0x3b3e
 13718 3b3a 443B0000 		.long	0x3b44
 13719 3b3e 08       		.uleb128 0x8
 13720 3b3f 7FC20000 		.long	0xc27f
 13721 3b43 00       		.byte	0
 13722 3b44 32       		.uleb128 0x32
 13723 3b45 00000000 		.long	.LASF164
 13724 3b49 06       		.byte	0x6
 13725 3b4a 7E02     		.value	0x27e
 13726 3b4c 00000000 		.long	.LASF588
 13727 3b50 F4370000 		.long	0x37f4
 13728 3b54 01       		.byte	0x1
 13729 3b55 5D3B0000 		.long	0x3b5d
 13730 3b59 633B0000 		.long	0x3b63
 13731 3b5d 08       		.uleb128 0x8
 13732 3b5e 7FC20000 		.long	0xc27f
 13733 3b62 00       		.byte	0
 13734 3b63 32       		.uleb128 0x32
 13735 3b64 00000000 		.long	.LASF166
 13736 3b68 06       		.byte	0x6
 13737 3b69 8702     		.value	0x287
 13738 3b6b 00000000 		.long	.LASF589
 13739 3b6f F4370000 		.long	0x37f4
 13740 3b73 01       		.byte	0x1
 13741 3b74 7C3B0000 		.long	0x3b7c
 13742 3b78 823B0000 		.long	0x3b82
 13743 3b7c 08       		.uleb128 0x8
 13744 3b7d 7FC20000 		.long	0xc27f
 13745 3b81 00       		.byte	0
 13746 3b82 32       		.uleb128 0x32
 13747 3b83 00000000 		.long	.LASF168
 13748 3b87 06       		.byte	0x6
 13749 3b88 8E02     		.value	0x28e
 13750 3b8a 00000000 		.long	.LASF590
 13751 3b8e 0C380000 		.long	0x380c
 13752 3b92 01       		.byte	0x1
 13753 3b93 9B3B0000 		.long	0x3b9b
 13754 3b97 A13B0000 		.long	0x3ba1
 13755 3b9b 08       		.uleb128 0x8
 13756 3b9c 7FC20000 		.long	0xc27f
 13757 3ba0 00       		.byte	0
 13758 3ba1 32       		.uleb128 0x32
 13759 3ba2 00000000 		.long	.LASF171
 13760 3ba6 06       		.byte	0x6
 13761 3ba7 9302     		.value	0x293
 13762 3ba9 00000000 		.long	.LASF591
 13763 3bad 0C380000 		.long	0x380c
 13764 3bb1 01       		.byte	0x1
 13765 3bb2 BA3B0000 		.long	0x3bba
 13766 3bb6 C03B0000 		.long	0x3bc0
 13767 3bba 08       		.uleb128 0x8
 13768 3bbb 7FC20000 		.long	0xc27f
 13769 3bbf 00       		.byte	0
 13770 3bc0 34       		.uleb128 0x34
 13771 3bc1 00000000 		.long	.LASF173
 13772 3bc5 06       		.byte	0x6
 13773 3bc6 A102     		.value	0x2a1
GAS LISTING /tmp/ccJUMvuF.s 			page 543


 13774 3bc8 00000000 		.long	.LASF592
 13775 3bcc 01       		.byte	0x1
 13776 3bcd D53B0000 		.long	0x3bd5
 13777 3bd1 E03B0000 		.long	0x3be0
 13778 3bd5 08       		.uleb128 0x8
 13779 3bd6 5AC20000 		.long	0xc25a
 13780 3bda 09       		.uleb128 0x9
 13781 3bdb 0C380000 		.long	0x380c
 13782 3bdf 00       		.byte	0
 13783 3be0 34       		.uleb128 0x34
 13784 3be1 00000000 		.long	.LASF173
 13785 3be5 06       		.byte	0x6
 13786 3be6 B502     		.value	0x2b5
 13787 3be8 00000000 		.long	.LASF593
 13788 3bec 01       		.byte	0x1
 13789 3bed F53B0000 		.long	0x3bf5
 13790 3bf1 053C0000 		.long	0x3c05
 13791 3bf5 08       		.uleb128 0x8
 13792 3bf6 5AC20000 		.long	0xc25a
 13793 3bfa 09       		.uleb128 0x9
 13794 3bfb 0C380000 		.long	0x380c
 13795 3bff 09       		.uleb128 0x9
 13796 3c00 66C20000 		.long	0xc266
 13797 3c04 00       		.byte	0
 13798 3c05 34       		.uleb128 0x34
 13799 3c06 00000000 		.long	.LASF176
 13800 3c0a 06       		.byte	0x6
 13801 3c0b D502     		.value	0x2d5
 13802 3c0d 00000000 		.long	.LASF594
 13803 3c11 01       		.byte	0x1
 13804 3c12 1A3C0000 		.long	0x3c1a
 13805 3c16 203C0000 		.long	0x3c20
 13806 3c1a 08       		.uleb128 0x8
 13807 3c1b 5AC20000 		.long	0xc25a
 13808 3c1f 00       		.byte	0
 13809 3c20 32       		.uleb128 0x32
 13810 3c21 00000000 		.long	.LASF178
 13811 3c25 06       		.byte	0x6
 13812 3c26 DE02     		.value	0x2de
 13813 3c28 00000000 		.long	.LASF595
 13814 3c2c 0C380000 		.long	0x380c
 13815 3c30 01       		.byte	0x1
 13816 3c31 393C0000 		.long	0x3c39
 13817 3c35 3F3C0000 		.long	0x3c3f
 13818 3c39 08       		.uleb128 0x8
 13819 3c3a 7FC20000 		.long	0xc27f
 13820 3c3e 00       		.byte	0
 13821 3c3f 32       		.uleb128 0x32
 13822 3c40 00000000 		.long	.LASF184
 13823 3c44 06       		.byte	0x6
 13824 3c45 E702     		.value	0x2e7
 13825 3c47 00000000 		.long	.LASF596
 13826 3c4b 30930000 		.long	0x9330
 13827 3c4f 01       		.byte	0x1
 13828 3c50 583C0000 		.long	0x3c58
 13829 3c54 5E3C0000 		.long	0x3c5e
 13830 3c58 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 544


 13831 3c59 7FC20000 		.long	0xc27f
 13832 3c5d 00       		.byte	0
 13833 3c5e 0E       		.uleb128 0xe
 13834 3c5f 00000000 		.long	.LASF180
 13835 3c63 30       		.byte	0x30
 13836 3c64 41       		.byte	0x41
 13837 3c65 00000000 		.long	.LASF597
 13838 3c69 01       		.byte	0x1
 13839 3c6a 723C0000 		.long	0x3c72
 13840 3c6e 7D3C0000 		.long	0x3c7d
 13841 3c72 08       		.uleb128 0x8
 13842 3c73 5AC20000 		.long	0xc25a
 13843 3c77 09       		.uleb128 0x9
 13844 3c78 0C380000 		.long	0x380c
 13845 3c7c 00       		.byte	0
 13846 3c7d 32       		.uleb128 0x32
 13847 3c7e 00000000 		.long	.LASF186
 13848 3c82 06       		.byte	0x6
 13849 3c83 0B03     		.value	0x30b
 13850 3c85 00000000 		.long	.LASF598
 13851 3c89 C4370000 		.long	0x37c4
 13852 3c8d 01       		.byte	0x1
 13853 3c8e 963C0000 		.long	0x3c96
 13854 3c92 A13C0000 		.long	0x3ca1
 13855 3c96 08       		.uleb128 0x8
 13856 3c97 5AC20000 		.long	0xc25a
 13857 3c9b 09       		.uleb128 0x9
 13858 3c9c 0C380000 		.long	0x380c
 13859 3ca0 00       		.byte	0
 13860 3ca1 32       		.uleb128 0x32
 13861 3ca2 00000000 		.long	.LASF186
 13862 3ca6 06       		.byte	0x6
 13863 3ca7 1A03     		.value	0x31a
 13864 3ca9 00000000 		.long	.LASF599
 13865 3cad D0370000 		.long	0x37d0
 13866 3cb1 01       		.byte	0x1
 13867 3cb2 BA3C0000 		.long	0x3cba
 13868 3cb6 C53C0000 		.long	0x3cc5
 13869 3cba 08       		.uleb128 0x8
 13870 3cbb 7FC20000 		.long	0xc27f
 13871 3cbf 09       		.uleb128 0x9
 13872 3cc0 0C380000 		.long	0x380c
 13873 3cc4 00       		.byte	0
 13874 3cc5 34       		.uleb128 0x34
 13875 3cc6 00000000 		.long	.LASF600
 13876 3cca 06       		.byte	0x6
 13877 3ccb 2003     		.value	0x320
 13878 3ccd 00000000 		.long	.LASF601
 13879 3cd1 02       		.byte	0x2
 13880 3cd2 DA3C0000 		.long	0x3cda
 13881 3cd6 E53C0000 		.long	0x3ce5
 13882 3cda 08       		.uleb128 0x8
 13883 3cdb 7FC20000 		.long	0xc27f
 13884 3cdf 09       		.uleb128 0x9
 13885 3ce0 0C380000 		.long	0x380c
 13886 3ce4 00       		.byte	0
 13887 3ce5 33       		.uleb128 0x33
GAS LISTING /tmp/ccJUMvuF.s 			page 545


 13888 3ce6 617400   		.string	"at"
 13889 3ce9 06       		.byte	0x6
 13890 3cea 3603     		.value	0x336
 13891 3cec 00000000 		.long	.LASF602
 13892 3cf0 C4370000 		.long	0x37c4
 13893 3cf4 01       		.byte	0x1
 13894 3cf5 FD3C0000 		.long	0x3cfd
 13895 3cf9 083D0000 		.long	0x3d08
 13896 3cfd 08       		.uleb128 0x8
 13897 3cfe 5AC20000 		.long	0xc25a
 13898 3d02 09       		.uleb128 0x9
 13899 3d03 0C380000 		.long	0x380c
 13900 3d07 00       		.byte	0
 13901 3d08 33       		.uleb128 0x33
 13902 3d09 617400   		.string	"at"
 13903 3d0c 06       		.byte	0x6
 13904 3d0d 4803     		.value	0x348
 13905 3d0f 00000000 		.long	.LASF603
 13906 3d13 D0370000 		.long	0x37d0
 13907 3d17 01       		.byte	0x1
 13908 3d18 203D0000 		.long	0x3d20
 13909 3d1c 2B3D0000 		.long	0x3d2b
 13910 3d20 08       		.uleb128 0x8
 13911 3d21 7FC20000 		.long	0xc27f
 13912 3d25 09       		.uleb128 0x9
 13913 3d26 0C380000 		.long	0x380c
 13914 3d2a 00       		.byte	0
 13915 3d2b 32       		.uleb128 0x32
 13916 3d2c 00000000 		.long	.LASF191
 13917 3d30 06       		.byte	0x6
 13918 3d31 5303     		.value	0x353
 13919 3d33 00000000 		.long	.LASF604
 13920 3d37 C4370000 		.long	0x37c4
 13921 3d3b 01       		.byte	0x1
 13922 3d3c 443D0000 		.long	0x3d44
 13923 3d40 4A3D0000 		.long	0x3d4a
 13924 3d44 08       		.uleb128 0x8
 13925 3d45 5AC20000 		.long	0xc25a
 13926 3d49 00       		.byte	0
 13927 3d4a 32       		.uleb128 0x32
 13928 3d4b 00000000 		.long	.LASF191
 13929 3d4f 06       		.byte	0x6
 13930 3d50 5B03     		.value	0x35b
 13931 3d52 00000000 		.long	.LASF605
 13932 3d56 D0370000 		.long	0x37d0
 13933 3d5a 01       		.byte	0x1
 13934 3d5b 633D0000 		.long	0x3d63
 13935 3d5f 693D0000 		.long	0x3d69
 13936 3d63 08       		.uleb128 0x8
 13937 3d64 7FC20000 		.long	0xc27f
 13938 3d68 00       		.byte	0
 13939 3d69 32       		.uleb128 0x32
 13940 3d6a 00000000 		.long	.LASF194
 13941 3d6e 06       		.byte	0x6
 13942 3d6f 6303     		.value	0x363
 13943 3d71 00000000 		.long	.LASF606
 13944 3d75 C4370000 		.long	0x37c4
GAS LISTING /tmp/ccJUMvuF.s 			page 546


 13945 3d79 01       		.byte	0x1
 13946 3d7a 823D0000 		.long	0x3d82
 13947 3d7e 883D0000 		.long	0x3d88
 13948 3d82 08       		.uleb128 0x8
 13949 3d83 5AC20000 		.long	0xc25a
 13950 3d87 00       		.byte	0
 13951 3d88 32       		.uleb128 0x32
 13952 3d89 00000000 		.long	.LASF194
 13953 3d8d 06       		.byte	0x6
 13954 3d8e 6B03     		.value	0x36b
 13955 3d90 00000000 		.long	.LASF607
 13956 3d94 D0370000 		.long	0x37d0
 13957 3d98 01       		.byte	0x1
 13958 3d99 A13D0000 		.long	0x3da1
 13959 3d9d A73D0000 		.long	0x3da7
 13960 3da1 08       		.uleb128 0x8
 13961 3da2 7FC20000 		.long	0xc27f
 13962 3da6 00       		.byte	0
 13963 3da7 32       		.uleb128 0x32
 13964 3da8 00000000 		.long	.LASF260
 13965 3dac 06       		.byte	0x6
 13966 3dad 7A03     		.value	0x37a
 13967 3daf 00000000 		.long	.LASF608
 13968 3db3 C9C10000 		.long	0xc1c9
 13969 3db7 01       		.byte	0x1
 13970 3db8 C03D0000 		.long	0x3dc0
 13971 3dbc C63D0000 		.long	0x3dc6
 13972 3dc0 08       		.uleb128 0x8
 13973 3dc1 5AC20000 		.long	0xc25a
 13974 3dc5 00       		.byte	0
 13975 3dc6 32       		.uleb128 0x32
 13976 3dc7 00000000 		.long	.LASF260
 13977 3dcb 06       		.byte	0x6
 13978 3dcc 8203     		.value	0x382
 13979 3dce 00000000 		.long	.LASF609
 13980 3dd2 CFC10000 		.long	0xc1cf
 13981 3dd6 01       		.byte	0x1
 13982 3dd7 DF3D0000 		.long	0x3ddf
 13983 3ddb E53D0000 		.long	0x3de5
 13984 3ddf 08       		.uleb128 0x8
 13985 3de0 7FC20000 		.long	0xc27f
 13986 3de4 00       		.byte	0
 13987 3de5 34       		.uleb128 0x34
 13988 3de6 00000000 		.long	.LASF209
 13989 3dea 06       		.byte	0x6
 13990 3deb 9103     		.value	0x391
 13991 3ded 00000000 		.long	.LASF610
 13992 3df1 01       		.byte	0x1
 13993 3df2 FA3D0000 		.long	0x3dfa
 13994 3df6 053E0000 		.long	0x3e05
 13995 3dfa 08       		.uleb128 0x8
 13996 3dfb 5AC20000 		.long	0xc25a
 13997 3dff 09       		.uleb128 0x9
 13998 3e00 66C20000 		.long	0xc266
 13999 3e04 00       		.byte	0
 14000 3e05 34       		.uleb128 0x34
 14001 3e06 00000000 		.long	.LASF209
GAS LISTING /tmp/ccJUMvuF.s 			page 547


 14002 3e0a 06       		.byte	0x6
 14003 3e0b A303     		.value	0x3a3
 14004 3e0d 00000000 		.long	.LASF611
 14005 3e11 01       		.byte	0x1
 14006 3e12 1A3E0000 		.long	0x3e1a
 14007 3e16 253E0000 		.long	0x3e25
 14008 3e1a 08       		.uleb128 0x8
 14009 3e1b 5AC20000 		.long	0xc25a
 14010 3e1f 09       		.uleb128 0x9
 14011 3e20 85C20000 		.long	0xc285
 14012 3e24 00       		.byte	0
 14013 3e25 34       		.uleb128 0x34
 14014 3e26 00000000 		.long	.LASF231
 14015 3e2a 06       		.byte	0x6
 14016 3e2b B503     		.value	0x3b5
 14017 3e2d 00000000 		.long	.LASF612
 14018 3e31 01       		.byte	0x1
 14019 3e32 3A3E0000 		.long	0x3e3a
 14020 3e36 403E0000 		.long	0x3e40
 14021 3e3a 08       		.uleb128 0x8
 14022 3e3b 5AC20000 		.long	0xc25a
 14023 3e3f 00       		.byte	0
 14024 3e40 0D       		.uleb128 0xd
 14025 3e41 00000000 		.long	.LASF218
 14026 3e45 30       		.byte	0x30
 14027 3e46 6B       		.byte	0x6b
 14028 3e47 00000000 		.long	.LASF613
 14029 3e4b DC370000 		.long	0x37dc
 14030 3e4f 01       		.byte	0x1
 14031 3e50 583E0000 		.long	0x3e58
 14032 3e54 683E0000 		.long	0x3e68
 14033 3e58 08       		.uleb128 0x8
 14034 3e59 5AC20000 		.long	0xc25a
 14035 3e5d 09       		.uleb128 0x9
 14036 3e5e E8370000 		.long	0x37e8
 14037 3e62 09       		.uleb128 0x9
 14038 3e63 66C20000 		.long	0xc266
 14039 3e67 00       		.byte	0
 14040 3e68 32       		.uleb128 0x32
 14041 3e69 00000000 		.long	.LASF218
 14042 3e6d 06       		.byte	0x6
 14043 3e6e F603     		.value	0x3f6
 14044 3e70 00000000 		.long	.LASF614
 14045 3e74 DC370000 		.long	0x37dc
 14046 3e78 01       		.byte	0x1
 14047 3e79 813E0000 		.long	0x3e81
 14048 3e7d 913E0000 		.long	0x3e91
 14049 3e81 08       		.uleb128 0x8
 14050 3e82 5AC20000 		.long	0xc25a
 14051 3e86 09       		.uleb128 0x9
 14052 3e87 E8370000 		.long	0x37e8
 14053 3e8b 09       		.uleb128 0x9
 14054 3e8c 85C20000 		.long	0xc285
 14055 3e90 00       		.byte	0
 14056 3e91 32       		.uleb128 0x32
 14057 3e92 00000000 		.long	.LASF218
 14058 3e96 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 548


 14059 3e97 0704     		.value	0x407
 14060 3e99 00000000 		.long	.LASF615
 14061 3e9d DC370000 		.long	0x37dc
 14062 3ea1 01       		.byte	0x1
 14063 3ea2 AA3E0000 		.long	0x3eaa
 14064 3ea6 BA3E0000 		.long	0x3eba
 14065 3eaa 08       		.uleb128 0x8
 14066 3eab 5AC20000 		.long	0xc25a
 14067 3eaf 09       		.uleb128 0x9
 14068 3eb0 E8370000 		.long	0x37e8
 14069 3eb4 09       		.uleb128 0x9
 14070 3eb5 40410000 		.long	0x4140
 14071 3eb9 00       		.byte	0
 14072 3eba 32       		.uleb128 0x32
 14073 3ebb 00000000 		.long	.LASF218
 14074 3ebf 06       		.byte	0x6
 14075 3ec0 1B04     		.value	0x41b
 14076 3ec2 00000000 		.long	.LASF616
 14077 3ec6 DC370000 		.long	0x37dc
 14078 3eca 01       		.byte	0x1
 14079 3ecb D33E0000 		.long	0x3ed3
 14080 3ecf E83E0000 		.long	0x3ee8
 14081 3ed3 08       		.uleb128 0x8
 14082 3ed4 5AC20000 		.long	0xc25a
 14083 3ed8 09       		.uleb128 0x9
 14084 3ed9 E8370000 		.long	0x37e8
 14085 3edd 09       		.uleb128 0x9
 14086 3ede 0C380000 		.long	0x380c
 14087 3ee2 09       		.uleb128 0x9
 14088 3ee3 66C20000 		.long	0xc266
 14089 3ee7 00       		.byte	0
 14090 3ee8 32       		.uleb128 0x32
 14091 3ee9 00000000 		.long	.LASF227
 14092 3eed 06       		.byte	0x6
 14093 3eee 7A04     		.value	0x47a
 14094 3ef0 00000000 		.long	.LASF617
 14095 3ef4 DC370000 		.long	0x37dc
 14096 3ef8 01       		.byte	0x1
 14097 3ef9 013F0000 		.long	0x3f01
 14098 3efd 0C3F0000 		.long	0x3f0c
 14099 3f01 08       		.uleb128 0x8
 14100 3f02 5AC20000 		.long	0xc25a
 14101 3f06 09       		.uleb128 0x9
 14102 3f07 E8370000 		.long	0x37e8
 14103 3f0b 00       		.byte	0
 14104 3f0c 32       		.uleb128 0x32
 14105 3f0d 00000000 		.long	.LASF227
 14106 3f11 06       		.byte	0x6
 14107 3f12 9504     		.value	0x495
 14108 3f14 00000000 		.long	.LASF618
 14109 3f18 DC370000 		.long	0x37dc
 14110 3f1c 01       		.byte	0x1
 14111 3f1d 253F0000 		.long	0x3f25
 14112 3f21 353F0000 		.long	0x3f35
 14113 3f25 08       		.uleb128 0x8
 14114 3f26 5AC20000 		.long	0xc25a
 14115 3f2a 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 549


 14116 3f2b E8370000 		.long	0x37e8
 14117 3f2f 09       		.uleb128 0x9
 14118 3f30 E8370000 		.long	0x37e8
 14119 3f34 00       		.byte	0
 14120 3f35 34       		.uleb128 0x34
 14121 3f36 00000000 		.long	.LASF13
 14122 3f3a 06       		.byte	0x6
 14123 3f3b AA04     		.value	0x4aa
 14124 3f3d 00000000 		.long	.LASF619
 14125 3f41 01       		.byte	0x1
 14126 3f42 4A3F0000 		.long	0x3f4a
 14127 3f46 553F0000 		.long	0x3f55
 14128 3f4a 08       		.uleb128 0x8
 14129 3f4b 5AC20000 		.long	0xc25a
 14130 3f4f 09       		.uleb128 0x9
 14131 3f50 79C20000 		.long	0xc279
 14132 3f54 00       		.byte	0
 14133 3f55 34       		.uleb128 0x34
 14134 3f56 00000000 		.long	.LASF182
 14135 3f5a 06       		.byte	0x6
 14136 3f5b BB04     		.value	0x4bb
 14137 3f5d 00000000 		.long	.LASF620
 14138 3f61 01       		.byte	0x1
 14139 3f62 6A3F0000 		.long	0x3f6a
 14140 3f66 703F0000 		.long	0x3f70
 14141 3f6a 08       		.uleb128 0x8
 14142 3f6b 5AC20000 		.long	0xc25a
 14143 3f6f 00       		.byte	0
 14144 3f70 34       		.uleb128 0x34
 14145 3f71 00000000 		.long	.LASF621
 14146 3f75 06       		.byte	0x6
 14147 3f76 1205     		.value	0x512
 14148 3f78 00000000 		.long	.LASF622
 14149 3f7c 02       		.byte	0x2
 14150 3f7d 853F0000 		.long	0x3f85
 14151 3f81 953F0000 		.long	0x3f95
 14152 3f85 08       		.uleb128 0x8
 14153 3f86 5AC20000 		.long	0xc25a
 14154 3f8a 09       		.uleb128 0x9
 14155 3f8b 0C380000 		.long	0x380c
 14156 3f8f 09       		.uleb128 0x9
 14157 3f90 66C20000 		.long	0xc266
 14158 3f94 00       		.byte	0
 14159 3f95 34       		.uleb128 0x34
 14160 3f96 00000000 		.long	.LASF623
 14161 3f9a 06       		.byte	0x6
 14162 3f9b 1C05     		.value	0x51c
 14163 3f9d 00000000 		.long	.LASF624
 14164 3fa1 02       		.byte	0x2
 14165 3fa2 AA3F0000 		.long	0x3faa
 14166 3fa6 B53F0000 		.long	0x3fb5
 14167 3faa 08       		.uleb128 0x8
 14168 3fab 5AC20000 		.long	0xc25a
 14169 3faf 09       		.uleb128 0x9
 14170 3fb0 0C380000 		.long	0x380c
 14171 3fb4 00       		.byte	0
 14172 3fb5 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 550


 14173 3fb6 00000000 		.long	.LASF625
 14174 3fba 30       		.byte	0x30
 14175 3fbb E1       		.byte	0xe1
 14176 3fbc 00000000 		.long	.LASF626
 14177 3fc0 02       		.byte	0x2
 14178 3fc1 C93F0000 		.long	0x3fc9
 14179 3fc5 D93F0000 		.long	0x3fd9
 14180 3fc9 08       		.uleb128 0x8
 14181 3fca 5AC20000 		.long	0xc25a
 14182 3fce 09       		.uleb128 0x9
 14183 3fcf 85060000 		.long	0x685
 14184 3fd3 09       		.uleb128 0x9
 14185 3fd4 66C20000 		.long	0xc266
 14186 3fd8 00       		.byte	0
 14187 3fd9 34       		.uleb128 0x34
 14188 3fda 00000000 		.long	.LASF627
 14189 3fde 30       		.byte	0x30
 14190 3fdf C101     		.value	0x1c1
 14191 3fe1 00000000 		.long	.LASF628
 14192 3fe5 02       		.byte	0x2
 14193 3fe6 EE3F0000 		.long	0x3fee
 14194 3fea 03400000 		.long	0x4003
 14195 3fee 08       		.uleb128 0x8
 14196 3fef 5AC20000 		.long	0xc25a
 14197 3ff3 09       		.uleb128 0x9
 14198 3ff4 DC370000 		.long	0x37dc
 14199 3ff8 09       		.uleb128 0x9
 14200 3ff9 0C380000 		.long	0x380c
 14201 3ffd 09       		.uleb128 0x9
 14202 3ffe 66C20000 		.long	0xc266
 14203 4002 00       		.byte	0
 14204 4003 34       		.uleb128 0x34
 14205 4004 00000000 		.long	.LASF629
 14206 4008 30       		.byte	0x30
 14207 4009 1C02     		.value	0x21c
 14208 400b 00000000 		.long	.LASF630
 14209 400f 02       		.byte	0x2
 14210 4010 18400000 		.long	0x4018
 14211 4014 23400000 		.long	0x4023
 14212 4018 08       		.uleb128 0x8
 14213 4019 5AC20000 		.long	0xc25a
 14214 401d 09       		.uleb128 0x9
 14215 401e 0C380000 		.long	0x380c
 14216 4022 00       		.byte	0
 14217 4023 32       		.uleb128 0x32
 14218 4024 00000000 		.long	.LASF631
 14219 4028 30       		.byte	0x30
 14220 4029 4E02     		.value	0x24e
 14221 402b 00000000 		.long	.LASF632
 14222 402f 30930000 		.long	0x9330
 14223 4033 02       		.byte	0x2
 14224 4034 3C400000 		.long	0x403c
 14225 4038 42400000 		.long	0x4042
 14226 403c 08       		.uleb128 0x8
 14227 403d 5AC20000 		.long	0xc25a
 14228 4041 00       		.byte	0
 14229 4042 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 551


 14230 4043 00000000 		.long	.LASF633
 14231 4047 06       		.byte	0x6
 14232 4048 8E05     		.value	0x58e
 14233 404a 00000000 		.long	.LASF634
 14234 404e 0C380000 		.long	0x380c
 14235 4052 02       		.byte	0x2
 14236 4053 5B400000 		.long	0x405b
 14237 4057 6B400000 		.long	0x406b
 14238 405b 08       		.uleb128 0x8
 14239 405c 7FC20000 		.long	0xc27f
 14240 4060 09       		.uleb128 0x9
 14241 4061 0C380000 		.long	0x380c
 14242 4065 09       		.uleb128 0x9
 14243 4066 CEAE0000 		.long	0xaece
 14244 406a 00       		.byte	0
 14245 406b 34       		.uleb128 0x34
 14246 406c 00000000 		.long	.LASF635
 14247 4070 06       		.byte	0x6
 14248 4071 9C05     		.value	0x59c
 14249 4073 00000000 		.long	.LASF636
 14250 4077 02       		.byte	0x2
 14251 4078 80400000 		.long	0x4080
 14252 407c 8B400000 		.long	0x408b
 14253 4080 08       		.uleb128 0x8
 14254 4081 5AC20000 		.long	0xc25a
 14255 4085 09       		.uleb128 0x9
 14256 4086 B8370000 		.long	0x37b8
 14257 408a 00       		.byte	0
 14258 408b 0D       		.uleb128 0xd
 14259 408c 00000000 		.long	.LASF637
 14260 4090 30       		.byte	0x30
 14261 4091 8D       		.byte	0x8d
 14262 4092 00000000 		.long	.LASF638
 14263 4096 DC370000 		.long	0x37dc
 14264 409a 02       		.byte	0x2
 14265 409b A3400000 		.long	0x40a3
 14266 409f AE400000 		.long	0x40ae
 14267 40a3 08       		.uleb128 0x8
 14268 40a4 5AC20000 		.long	0xc25a
 14269 40a8 09       		.uleb128 0x9
 14270 40a9 DC370000 		.long	0x37dc
 14271 40ad 00       		.byte	0
 14272 40ae 0D       		.uleb128 0xd
 14273 40af 00000000 		.long	.LASF637
 14274 40b3 30       		.byte	0x30
 14275 40b4 99       		.byte	0x99
 14276 40b5 00000000 		.long	.LASF639
 14277 40b9 DC370000 		.long	0x37dc
 14278 40bd 02       		.byte	0x2
 14279 40be C6400000 		.long	0x40c6
 14280 40c2 D6400000 		.long	0x40d6
 14281 40c6 08       		.uleb128 0x8
 14282 40c7 5AC20000 		.long	0xc25a
 14283 40cb 09       		.uleb128 0x9
 14284 40cc DC370000 		.long	0x37dc
 14285 40d0 09       		.uleb128 0x9
 14286 40d1 DC370000 		.long	0x37dc
GAS LISTING /tmp/ccJUMvuF.s 			page 552


 14287 40d5 00       		.byte	0
 14288 40d6 2B       		.uleb128 0x2b
 14289 40d7 00000000 		.long	.LASF640
 14290 40db 06       		.byte	0x6
 14291 40dc AE05     		.value	0x5ae
 14292 40de 00000000 		.long	.LASF641
 14293 40e2 EA400000 		.long	0x40ea
 14294 40e6 FA400000 		.long	0x40fa
 14295 40ea 08       		.uleb128 0x8
 14296 40eb 5AC20000 		.long	0xc25a
 14297 40ef 09       		.uleb128 0x9
 14298 40f0 72C20000 		.long	0xc272
 14299 40f4 09       		.uleb128 0x9
 14300 40f5 5F070000 		.long	0x75f
 14301 40f9 00       		.byte	0
 14302 40fa 2B       		.uleb128 0x2b
 14303 40fb 00000000 		.long	.LASF640
 14304 40ff 06       		.byte	0x6
 14305 4100 B905     		.value	0x5b9
 14306 4102 00000000 		.long	.LASF642
 14307 4106 0E410000 		.long	0x410e
 14308 410a 1E410000 		.long	0x411e
 14309 410e 08       		.uleb128 0x8
 14310 410f 5AC20000 		.long	0xc25a
 14311 4113 09       		.uleb128 0x9
 14312 4114 72C20000 		.long	0xc272
 14313 4118 09       		.uleb128 0x9
 14314 4119 A4340000 		.long	0x34a4
 14315 411d 00       		.byte	0
 14316 411e 18       		.uleb128 0x18
 14317 411f 5F547000 		.string	"_Tp"
 14318 4123 29000000 		.long	0x29
 14319 4127 36       		.uleb128 0x36
 14320 4128 00000000 		.long	.LASF303
 14321 412c D5300000 		.long	0x30d5
 14322 4130 00       		.byte	0
 14323 4131 14       		.uleb128 0x14
 14324 4132 00000000 		.long	.LASF643
 14325 4136 14       		.uleb128 0x14
 14326 4137 00000000 		.long	.LASF644
 14327 413b 11       		.uleb128 0x11
 14328 413c 76370000 		.long	0x3776
 14329 4140 05       		.uleb128 0x5
 14330 4141 00000000 		.long	.LASF645
 14331 4145 10       		.byte	0x10
 14332 4146 26       		.byte	0x26
 14333 4147 2F       		.byte	0x2f
 14334 4148 20420000 		.long	0x4220
 14335 414c 22       		.uleb128 0x22
 14336 414d 00000000 		.long	.LASF68
 14337 4151 26       		.byte	0x26
 14338 4152 36       		.byte	0x36
 14339 4153 CFC10000 		.long	0xc1cf
 14340 4157 01       		.byte	0x1
 14341 4158 06       		.uleb128 0x6
 14342 4159 00000000 		.long	.LASF308
 14343 415d 26       		.byte	0x26
GAS LISTING /tmp/ccJUMvuF.s 			page 553


 14344 415e 3A       		.byte	0x3a
 14345 415f 4C410000 		.long	0x414c
 14346 4163 00       		.byte	0
 14347 4164 22       		.uleb128 0x22
 14348 4165 00000000 		.long	.LASF57
 14349 4169 26       		.byte	0x26
 14350 416a 35       		.byte	0x35
 14351 416b 85060000 		.long	0x685
 14352 416f 01       		.byte	0x1
 14353 4170 06       		.uleb128 0x6
 14354 4171 00000000 		.long	.LASF309
 14355 4175 26       		.byte	0x26
 14356 4176 3B       		.byte	0x3b
 14357 4177 64410000 		.long	0x4164
 14358 417b 08       		.byte	0x8
 14359 417c 22       		.uleb128 0x22
 14360 417d 00000000 		.long	.LASF69
 14361 4181 26       		.byte	0x26
 14362 4182 37       		.byte	0x37
 14363 4183 CFC10000 		.long	0xc1cf
 14364 4187 01       		.byte	0x1
 14365 4188 37       		.uleb128 0x37
 14366 4189 00000000 		.long	.LASF310
 14367 418d 26       		.byte	0x26
 14368 418e 3E       		.byte	0x3e
 14369 418f 97410000 		.long	0x4197
 14370 4193 A7410000 		.long	0x41a7
 14371 4197 08       		.uleb128 0x8
 14372 4198 8CC20000 		.long	0xc28c
 14373 419c 09       		.uleb128 0x9
 14374 419d 7C410000 		.long	0x417c
 14375 41a1 09       		.uleb128 0x9
 14376 41a2 64410000 		.long	0x4164
 14377 41a6 00       		.byte	0
 14378 41a7 0C       		.uleb128 0xc
 14379 41a8 00000000 		.long	.LASF310
 14380 41ac 26       		.byte	0x26
 14381 41ad 42       		.byte	0x42
 14382 41ae 01       		.byte	0x1
 14383 41af B7410000 		.long	0x41b7
 14384 41b3 BD410000 		.long	0x41bd
 14385 41b7 08       		.uleb128 0x8
 14386 41b8 8CC20000 		.long	0xc28c
 14387 41bc 00       		.byte	0
 14388 41bd 0D       		.uleb128 0xd
 14389 41be 00000000 		.long	.LASF168
 14390 41c2 26       		.byte	0x26
 14391 41c3 47       		.byte	0x47
 14392 41c4 00000000 		.long	.LASF646
 14393 41c8 64410000 		.long	0x4164
 14394 41cc 01       		.byte	0x1
 14395 41cd D5410000 		.long	0x41d5
 14396 41d1 DB410000 		.long	0x41db
 14397 41d5 08       		.uleb128 0x8
 14398 41d6 92C20000 		.long	0xc292
 14399 41da 00       		.byte	0
 14400 41db 0D       		.uleb128 0xd
GAS LISTING /tmp/ccJUMvuF.s 			page 554


 14401 41dc 00000000 		.long	.LASF149
 14402 41e0 26       		.byte	0x26
 14403 41e1 4B       		.byte	0x4b
 14404 41e2 00000000 		.long	.LASF647
 14405 41e6 7C410000 		.long	0x417c
 14406 41ea 01       		.byte	0x1
 14407 41eb F3410000 		.long	0x41f3
 14408 41ef F9410000 		.long	0x41f9
 14409 41f3 08       		.uleb128 0x8
 14410 41f4 92C20000 		.long	0xc292
 14411 41f8 00       		.byte	0
 14412 41f9 38       		.uleb128 0x38
 14413 41fa 656E6400 		.string	"end"
 14414 41fe 26       		.byte	0x26
 14415 41ff 4F       		.byte	0x4f
 14416 4200 00000000 		.long	.LASF648
 14417 4204 7C410000 		.long	0x417c
 14418 4208 01       		.byte	0x1
 14419 4209 11420000 		.long	0x4211
 14420 420d 17420000 		.long	0x4217
 14421 4211 08       		.uleb128 0x8
 14422 4212 92C20000 		.long	0xc292
 14423 4216 00       		.byte	0
 14424 4217 18       		.uleb128 0x18
 14425 4218 5F4500   		.string	"_E"
 14426 421b 29000000 		.long	0x29
 14427 421f 00       		.byte	0
 14428 4220 11       		.uleb128 0x11
 14429 4221 40410000 		.long	0x4140
 14430 4225 05       		.uleb128 0x5
 14431 4226 00000000 		.long	.LASF649
 14432 422a 01       		.byte	0x1
 14433 422b 21       		.byte	0x21
 14434 422c 5C       		.byte	0x5c
 14435 422d C7420000 		.long	0x42c7
 14436 4231 21       		.uleb128 0x21
 14437 4232 6EA30000 		.long	0xa36e
 14438 4236 00       		.byte	0
 14439 4237 01       		.byte	0x1
 14440 4238 22       		.uleb128 0x22
 14441 4239 00000000 		.long	.LASF57
 14442 423d 21       		.byte	0x21
 14443 423e 5F       		.byte	0x5f
 14444 423f 85060000 		.long	0x685
 14445 4243 01       		.byte	0x1
 14446 4244 22       		.uleb128 0x22
 14447 4245 00000000 		.long	.LASF491
 14448 4249 21       		.byte	0x21
 14449 424a 61       		.byte	0x61
 14450 424b 98C20000 		.long	0xc298
 14451 424f 01       		.byte	0x1
 14452 4250 22       		.uleb128 0x22
 14453 4251 00000000 		.long	.LASF19
 14454 4255 21       		.byte	0x21
 14455 4256 65       		.byte	0x65
 14456 4257 68930000 		.long	0x9368
 14457 425b 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 555


 14458 425c 0C       		.uleb128 0xc
 14459 425d 00000000 		.long	.LASF60
 14460 4261 21       		.byte	0x21
 14461 4262 71       		.byte	0x71
 14462 4263 01       		.byte	0x1
 14463 4264 6C420000 		.long	0x426c
 14464 4268 72420000 		.long	0x4272
 14465 426c 08       		.uleb128 0x8
 14466 426d C7C20000 		.long	0xc2c7
 14467 4271 00       		.byte	0
 14468 4272 0C       		.uleb128 0xc
 14469 4273 00000000 		.long	.LASF60
 14470 4277 21       		.byte	0x21
 14471 4278 73       		.byte	0x73
 14472 4279 01       		.byte	0x1
 14473 427a 82420000 		.long	0x4282
 14474 427e 8D420000 		.long	0x428d
 14475 4282 08       		.uleb128 0x8
 14476 4283 C7C20000 		.long	0xc2c7
 14477 4287 09       		.uleb128 0x9
 14478 4288 CDC20000 		.long	0xc2cd
 14479 428c 00       		.byte	0
 14480 428d 0C       		.uleb128 0xc
 14481 428e 00000000 		.long	.LASF61
 14482 4292 21       		.byte	0x21
 14483 4293 79       		.byte	0x79
 14484 4294 01       		.byte	0x1
 14485 4295 9D420000 		.long	0x429d
 14486 4299 A8420000 		.long	0x42a8
 14487 429d 08       		.uleb128 0x8
 14488 429e C7C20000 		.long	0xc2c7
 14489 42a2 08       		.uleb128 0x8
 14490 42a3 28930000 		.long	0x9328
 14491 42a7 00       		.byte	0
 14492 42a8 5D       		.uleb128 0x5d
 14493 42a9 00000000 		.long	.LASF650
 14494 42ad 01       		.byte	0x1
 14495 42ae 21       		.byte	0x21
 14496 42af 68       		.byte	0x68
 14497 42b0 01       		.byte	0x1
 14498 42b1 13       		.uleb128 0x13
 14499 42b2 00000000 		.long	.LASF493
 14500 42b6 21       		.byte	0x21
 14501 42b7 69       		.byte	0x69
 14502 42b8 25420000 		.long	0x4225
 14503 42bc 35       		.uleb128 0x35
 14504 42bd 00000000 		.long	.LASF494
 14505 42c1 68930000 		.long	0x9368
 14506 42c5 00       		.byte	0
 14507 42c6 00       		.byte	0
 14508 42c7 11       		.uleb128 0x11
 14509 42c8 25420000 		.long	0x4225
 14510 42cc 16       		.uleb128 0x16
 14511 42cd 00000000 		.long	.LASF651
 14512 42d1 01       		.byte	0x1
 14513 42d2 2E       		.byte	0x2e
 14514 42d3 69       		.byte	0x69
GAS LISTING /tmp/ccJUMvuF.s 			page 556


 14515 42d4 ED420000 		.long	0x42ed
 14516 42d8 13       		.uleb128 0x13
 14517 42d9 00000000 		.long	.LASF496
 14518 42dd 2E       		.byte	0x2e
 14519 42de 6B       		.byte	0x6b
 14520 42df 68930000 		.long	0x9368
 14521 42e3 18       		.uleb128 0x18
 14522 42e4 5F547000 		.string	"_Tp"
 14523 42e8 68930000 		.long	0x9368
 14524 42ec 00       		.byte	0
 14525 42ed 16       		.uleb128 0x16
 14526 42ee 00000000 		.long	.LASF652
 14527 42f2 01       		.byte	0x1
 14528 42f3 2E       		.byte	0x2e
 14529 42f4 96       		.byte	0x96
 14530 42f5 53430000 		.long	0x4353
 14531 42f9 13       		.uleb128 0x13
 14532 42fa 00000000 		.long	.LASF491
 14533 42fe 2E       		.byte	0x2e
 14534 42ff 99       		.byte	0x99
 14535 4300 98C20000 		.long	0xc298
 14536 4304 13       		.uleb128 0x13
 14537 4305 00000000 		.long	.LASF498
 14538 4309 2E       		.byte	0x2e
 14539 430a 9D       		.byte	0x9d
 14540 430b 54070000 		.long	0x754
 14541 430f 4E       		.uleb128 0x4e
 14542 4310 00000000 		.long	.LASF499
 14543 4314 2E       		.byte	0x2e
 14544 4315 A8       		.byte	0xa8
 14545 4316 00000000 		.long	.LASF653
 14546 431a F9420000 		.long	0x42f9
 14547 431e 28430000 		.long	0x4328
 14548 4322 09       		.uleb128 0x9
 14549 4323 D3C20000 		.long	0xc2d3
 14550 4327 00       		.byte	0
 14551 4328 13       		.uleb128 0x13
 14552 4329 00000000 		.long	.LASF501
 14553 432d 2E       		.byte	0x2e
 14554 432e A0       		.byte	0xa0
 14555 432f 01930000 		.long	0x9301
 14556 4333 13       		.uleb128 0x13
 14557 4334 00000000 		.long	.LASF501
 14558 4338 2E       		.byte	0x2e
 14559 4339 A0       		.byte	0xa0
 14560 433a C9B70000 		.long	0xb7c9
 14561 433e 13       		.uleb128 0x13
 14562 433f 00000000 		.long	.LASF501
 14563 4343 2E       		.byte	0x2e
 14564 4344 A0       		.byte	0xa0
 14565 4345 9EC20000 		.long	0xc29e
 14566 4349 35       		.uleb128 0x35
 14567 434a 00000000 		.long	.LASF502
 14568 434e 98C20000 		.long	0xc298
 14569 4352 00       		.byte	0
 14570 4353 16       		.uleb128 0x16
 14571 4354 00000000 		.long	.LASF654
GAS LISTING /tmp/ccJUMvuF.s 			page 557


 14572 4358 01       		.byte	0x1
 14573 4359 2F       		.byte	0x2f
 14574 435a 50       		.byte	0x50
 14575 435b 21450000 		.long	0x4521
 14576 435f 13       		.uleb128 0x13
 14577 4360 00000000 		.long	.LASF19
 14578 4364 2F       		.byte	0x2f
 14579 4365 55       		.byte	0x55
 14580 4366 50420000 		.long	0x4250
 14581 436a 22       		.uleb128 0x22
 14582 436b 00000000 		.long	.LASF515
 14583 436f 2F       		.byte	0x2f
 14584 4370 5F       		.byte	0x5f
 14585 4371 44420000 		.long	0x4244
 14586 4375 03       		.byte	0x3
 14587 4376 13       		.uleb128 0x13
 14588 4377 00000000 		.long	.LASF491
 14589 437b 2F       		.byte	0x2f
 14590 437c 66       		.byte	0x66
 14591 437d 6A430000 		.long	0x436a
 14592 4381 22       		.uleb128 0x22
 14593 4382 00000000 		.long	.LASF516
 14594 4386 2F       		.byte	0x2f
 14595 4387 7E       		.byte	0x7e
 14596 4388 33430000 		.long	0x4333
 14597 438c 03       		.byte	0x3
 14598 438d 13       		.uleb128 0x13
 14599 438e 00000000 		.long	.LASF517
 14600 4392 2F       		.byte	0x2f
 14601 4393 87       		.byte	0x87
 14602 4394 81430000 		.long	0x4381
 14603 4398 22       		.uleb128 0x22
 14604 4399 00000000 		.long	.LASF518
 14605 439d 2F       		.byte	0x2f
 14606 439e 94       		.byte	0x94
 14607 439f 38420000 		.long	0x4238
 14608 43a3 03       		.byte	0x3
 14609 43a4 13       		.uleb128 0x13
 14610 43a5 00000000 		.long	.LASF57
 14611 43a9 2F       		.byte	0x2f
 14612 43aa 9D       		.byte	0x9d
 14613 43ab 98430000 		.long	0x4398
 14614 43af 5E       		.uleb128 0x5e
 14615 43b0 00000000 		.long	.LASF519
 14616 43b4 2F       		.byte	0x2f
 14617 43b5 5F       		.byte	0x5f
 14618 43b6 00000000 		.long	.LASF655
 14619 43ba D9C20000 		.long	0xc2d9
 14620 43be 03       		.byte	0x3
 14621 43bf C5430000 		.long	0x43c5
 14622 43c3 3A       		.uleb128 0x3a
 14623 43c4 00       		.byte	0
 14624 43c5 5E       		.uleb128 0x5e
 14625 43c6 00000000 		.long	.LASF521
 14626 43ca 2F       		.byte	0x2f
 14627 43cb 68       		.byte	0x68
 14628 43cc 00000000 		.long	.LASF656
GAS LISTING /tmp/ccJUMvuF.s 			page 558


 14629 43d0 3E430000 		.long	0x433e
 14630 43d4 03       		.byte	0x3
 14631 43d5 DB430000 		.long	0x43db
 14632 43d9 3A       		.uleb128 0x3a
 14633 43da 00       		.byte	0
 14634 43db 5E       		.uleb128 0x5e
 14635 43dc 00000000 		.long	.LASF523
 14636 43e0 2F       		.byte	0x2f
 14637 43e1 73       		.byte	0x73
 14638 43e2 00000000 		.long	.LASF657
 14639 43e6 28430000 		.long	0x4328
 14640 43ea 03       		.byte	0x3
 14641 43eb F1430000 		.long	0x43f1
 14642 43ef 3A       		.uleb128 0x3a
 14643 43f0 00       		.byte	0
 14644 43f1 5E       		.uleb128 0x5e
 14645 43f2 00000000 		.long	.LASF525
 14646 43f6 2F       		.byte	0x2f
 14647 43f7 7E       		.byte	0x7e
 14648 43f8 00000000 		.long	.LASF658
 14649 43fc 33430000 		.long	0x4333
 14650 4400 03       		.byte	0x3
 14651 4401 07440000 		.long	0x4407
 14652 4405 3A       		.uleb128 0x3a
 14653 4406 00       		.byte	0
 14654 4407 5E       		.uleb128 0x5e
 14655 4408 00000000 		.long	.LASF527
 14656 440c 2F       		.byte	0x2f
 14657 440d 89       		.byte	0x89
 14658 440e 00000000 		.long	.LASF659
 14659 4412 04430000 		.long	0x4304
 14660 4416 03       		.byte	0x3
 14661 4417 1D440000 		.long	0x441d
 14662 441b 3A       		.uleb128 0x3a
 14663 441c 00       		.byte	0
 14664 441d 5E       		.uleb128 0x5e
 14665 441e 00000000 		.long	.LASF529
 14666 4422 2F       		.byte	0x2f
 14667 4423 94       		.byte	0x94
 14668 4424 00000000 		.long	.LASF660
 14669 4428 C0320000 		.long	0x32c0
 14670 442c 03       		.byte	0x3
 14671 442d 33440000 		.long	0x4433
 14672 4431 3A       		.uleb128 0x3a
 14673 4432 00       		.byte	0
 14674 4433 5E       		.uleb128 0x5e
 14675 4434 00000000 		.long	.LASF531
 14676 4438 2F       		.byte	0x2f
 14677 4439 9F       		.byte	0x9f
 14678 443a 00000000 		.long	.LASF661
 14679 443e A4340000 		.long	0x34a4
 14680 4442 03       		.byte	0x3
 14681 4443 49440000 		.long	0x4449
 14682 4447 3A       		.uleb128 0x3a
 14683 4448 00       		.byte	0
 14684 4449 5E       		.uleb128 0x5e
 14685 444a 00000000 		.long	.LASF533
GAS LISTING /tmp/ccJUMvuF.s 			page 559


 14686 444e 2F       		.byte	0x2f
 14687 444f AB       		.byte	0xab
 14688 4450 00000000 		.long	.LASF662
 14689 4454 A4340000 		.long	0x34a4
 14690 4458 03       		.byte	0x3
 14691 4459 5F440000 		.long	0x445f
 14692 445d 3A       		.uleb128 0x3a
 14693 445e 00       		.byte	0
 14694 445f 5E       		.uleb128 0x5e
 14695 4460 00000000 		.long	.LASF535
 14696 4464 2F       		.byte	0x2f
 14697 4465 B7       		.byte	0xb7
 14698 4466 00000000 		.long	.LASF663
 14699 446a A4340000 		.long	0x34a4
 14700 446e 03       		.byte	0x3
 14701 446f 75440000 		.long	0x4475
 14702 4473 3A       		.uleb128 0x3a
 14703 4474 00       		.byte	0
 14704 4475 1E       		.uleb128 0x1e
 14705 4476 00000000 		.long	.LASF537
 14706 447a 2F       		.byte	0x2f
 14707 447b 6401     		.value	0x164
 14708 447d 00000000 		.long	.LASF664
 14709 4481 76430000 		.long	0x4376
 14710 4485 94440000 		.long	0x4494
 14711 4489 09       		.uleb128 0x9
 14712 448a DFC20000 		.long	0xc2df
 14713 448e 09       		.uleb128 0x9
 14714 448f A4430000 		.long	0x43a4
 14715 4493 00       		.byte	0
 14716 4494 1E       		.uleb128 0x1e
 14717 4495 00000000 		.long	.LASF537
 14718 4499 2F       		.byte	0x2f
 14719 449a 7301     		.value	0x173
 14720 449c 00000000 		.long	.LASF665
 14721 44a0 76430000 		.long	0x4376
 14722 44a4 B8440000 		.long	0x44b8
 14723 44a8 09       		.uleb128 0x9
 14724 44a9 DFC20000 		.long	0xc2df
 14725 44ad 09       		.uleb128 0x9
 14726 44ae A4430000 		.long	0x43a4
 14727 44b2 09       		.uleb128 0x9
 14728 44b3 8D430000 		.long	0x438d
 14729 44b7 00       		.byte	0
 14730 44b8 2E       		.uleb128 0x2e
 14731 44b9 00000000 		.long	.LASF540
 14732 44bd 2F       		.byte	0x2f
 14733 44be 7E01     		.value	0x17e
 14734 44c0 00000000 		.long	.LASF666
 14735 44c4 D8440000 		.long	0x44d8
 14736 44c8 09       		.uleb128 0x9
 14737 44c9 DFC20000 		.long	0xc2df
 14738 44cd 09       		.uleb128 0x9
 14739 44ce 76430000 		.long	0x4376
 14740 44d2 09       		.uleb128 0x9
 14741 44d3 A4430000 		.long	0x43a4
 14742 44d7 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 560


 14743 44d8 1E       		.uleb128 0x1e
 14744 44d9 00000000 		.long	.LASF171
 14745 44dd 2F       		.byte	0x2f
 14746 44de A501     		.value	0x1a5
 14747 44e0 00000000 		.long	.LASF667
 14748 44e4 A4430000 		.long	0x43a4
 14749 44e8 F2440000 		.long	0x44f2
 14750 44ec 09       		.uleb128 0x9
 14751 44ed CDC20000 		.long	0xc2cd
 14752 44f1 00       		.byte	0
 14753 44f2 1E       		.uleb128 0x1e
 14754 44f3 00000000 		.long	.LASF543
 14755 44f7 2F       		.byte	0x2f
 14756 44f8 B101     		.value	0x1b1
 14757 44fa 00000000 		.long	.LASF668
 14758 44fe 25420000 		.long	0x4225
 14759 4502 0C450000 		.long	0x450c
 14760 4506 09       		.uleb128 0x9
 14761 4507 CDC20000 		.long	0xc2cd
 14762 450b 00       		.byte	0
 14763 450c 13       		.uleb128 0x13
 14764 450d 00000000 		.long	.LASF545
 14765 4511 2F       		.byte	0x2f
 14766 4512 C5       		.byte	0xc5
 14767 4513 2D450000 		.long	0x452d
 14768 4517 35       		.uleb128 0x35
 14769 4518 00000000 		.long	.LASF303
 14770 451c 25420000 		.long	0x4225
 14771 4520 00       		.byte	0
 14772 4521 16       		.uleb128 0x16
 14773 4522 00000000 		.long	.LASF669
 14774 4526 01       		.byte	0x1
 14775 4527 2F       		.byte	0x2f
 14776 4528 3F       		.byte	0x3f
 14777 4529 4B450000 		.long	0x454b
 14778 452d 13       		.uleb128 0x13
 14779 452e 00000000 		.long	.LASF496
 14780 4532 2F       		.byte	0x2f
 14781 4533 41       		.byte	0x41
 14782 4534 B1420000 		.long	0x42b1
 14783 4538 35       		.uleb128 0x35
 14784 4539 00000000 		.long	.LASF303
 14785 453d 25420000 		.long	0x4225
 14786 4541 18       		.uleb128 0x18
 14787 4542 5F547000 		.string	"_Tp"
 14788 4546 68930000 		.long	0x9368
 14789 454a 00       		.byte	0
 14790 454b 16       		.uleb128 0x16
 14791 454c 00000000 		.long	.LASF670
 14792 4550 18       		.byte	0x18
 14793 4551 06       		.byte	0x6
 14794 4552 48       		.byte	0x48
 14795 4553 E3470000 		.long	0x47e3
 14796 4557 16       		.uleb128 0x16
 14797 4558 00000000 		.long	.LASF549
 14798 455c 18       		.byte	0x18
 14799 455d 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 561


 14800 455e 4F       		.byte	0x4f
 14801 455f 09460000 		.long	0x4609
 14802 4563 25       		.uleb128 0x25
 14803 4564 25420000 		.long	0x4225
 14804 4568 00       		.byte	0
 14805 4569 06       		.uleb128 0x6
 14806 456a 00000000 		.long	.LASF550
 14807 456e 06       		.byte	0x6
 14808 456f 52       		.byte	0x52
 14809 4570 09460000 		.long	0x4609
 14810 4574 00       		.byte	0
 14811 4575 06       		.uleb128 0x6
 14812 4576 00000000 		.long	.LASF551
 14813 457a 06       		.byte	0x6
 14814 457b 53       		.byte	0x53
 14815 457c 09460000 		.long	0x4609
 14816 4580 08       		.byte	0x8
 14817 4581 06       		.uleb128 0x6
 14818 4582 00000000 		.long	.LASF552
 14819 4586 06       		.byte	0x6
 14820 4587 54       		.byte	0x54
 14821 4588 09460000 		.long	0x4609
 14822 458c 10       		.byte	0x10
 14823 458d 37       		.uleb128 0x37
 14824 458e 00000000 		.long	.LASF549
 14825 4592 06       		.byte	0x6
 14826 4593 56       		.byte	0x56
 14827 4594 9C450000 		.long	0x459c
 14828 4598 A2450000 		.long	0x45a2
 14829 459c 08       		.uleb128 0x8
 14830 459d F1C20000 		.long	0xc2f1
 14831 45a1 00       		.byte	0
 14832 45a2 37       		.uleb128 0x37
 14833 45a3 00000000 		.long	.LASF549
 14834 45a7 06       		.byte	0x6
 14835 45a8 5A       		.byte	0x5a
 14836 45a9 B1450000 		.long	0x45b1
 14837 45ad BC450000 		.long	0x45bc
 14838 45b1 08       		.uleb128 0x8
 14839 45b2 F1C20000 		.long	0xc2f1
 14840 45b6 09       		.uleb128 0x9
 14841 45b7 F7C20000 		.long	0xc2f7
 14842 45bb 00       		.byte	0
 14843 45bc 37       		.uleb128 0x37
 14844 45bd 00000000 		.long	.LASF549
 14845 45c1 06       		.byte	0x6
 14846 45c2 5F       		.byte	0x5f
 14847 45c3 CB450000 		.long	0x45cb
 14848 45c7 D6450000 		.long	0x45d6
 14849 45cb 08       		.uleb128 0x8
 14850 45cc F1C20000 		.long	0xc2f1
 14851 45d0 09       		.uleb128 0x9
 14852 45d1 FDC20000 		.long	0xc2fd
 14853 45d5 00       		.byte	0
 14854 45d6 0A       		.uleb128 0xa
 14855 45d7 00000000 		.long	.LASF553
 14856 45db 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 562


 14857 45dc 65       		.byte	0x65
 14858 45dd 00000000 		.long	.LASF671
 14859 45e1 E9450000 		.long	0x45e9
 14860 45e5 F4450000 		.long	0x45f4
 14861 45e9 08       		.uleb128 0x8
 14862 45ea F1C20000 		.long	0xc2f1
 14863 45ee 09       		.uleb128 0x9
 14864 45ef 04C30000 		.long	0xc304
 14865 45f3 00       		.byte	0
 14866 45f4 28       		.uleb128 0x28
 14867 45f5 00000000 		.long	.LASF555
 14868 45f9 FD450000 		.long	0x45fd
 14869 45fd 08       		.uleb128 0x8
 14870 45fe F1C20000 		.long	0xc2f1
 14871 4602 08       		.uleb128 0x8
 14872 4603 28930000 		.long	0x9328
 14873 4607 00       		.byte	0
 14874 4608 00       		.byte	0
 14875 4609 13       		.uleb128 0x13
 14876 460a 00000000 		.long	.LASF491
 14877 460e 06       		.byte	0x6
 14878 460f 4D       		.byte	0x4d
 14879 4610 E6A40000 		.long	0xa4e6
 14880 4614 11       		.uleb128 0x11
 14881 4615 19460000 		.long	0x4619
 14882 4619 13       		.uleb128 0x13
 14883 461a 00000000 		.long	.LASF556
 14884 461e 06       		.byte	0x6
 14885 461f 4B       		.byte	0x4b
 14886 4620 A5A50000 		.long	0xa5a5
 14887 4624 06       		.uleb128 0x6
 14888 4625 00000000 		.long	.LASF557
 14889 4629 06       		.byte	0x6
 14890 462a A4       		.byte	0xa4
 14891 462b 57450000 		.long	0x4557
 14892 462f 00       		.byte	0
 14893 4630 13       		.uleb128 0x13
 14894 4631 00000000 		.long	.LASF67
 14895 4635 06       		.byte	0x6
 14896 4636 6E       		.byte	0x6e
 14897 4637 25420000 		.long	0x4225
 14898 463b 0B       		.uleb128 0xb
 14899 463c 00000000 		.long	.LASF558
 14900 4640 06       		.byte	0x6
 14901 4641 71       		.byte	0x71
 14902 4642 00000000 		.long	.LASF672
 14903 4646 0AC30000 		.long	0xc30a
 14904 464a 52460000 		.long	0x4652
 14905 464e 58460000 		.long	0x4658
 14906 4652 08       		.uleb128 0x8
 14907 4653 10C30000 		.long	0xc310
 14908 4657 00       		.byte	0
 14909 4658 0B       		.uleb128 0xb
 14910 4659 00000000 		.long	.LASF558
 14911 465d 06       		.byte	0x6
 14912 465e 75       		.byte	0x75
 14913 465f 00000000 		.long	.LASF673
GAS LISTING /tmp/ccJUMvuF.s 			page 563


 14914 4663 F7C20000 		.long	0xc2f7
 14915 4667 6F460000 		.long	0x466f
 14916 466b 75460000 		.long	0x4675
 14917 466f 08       		.uleb128 0x8
 14918 4670 16C30000 		.long	0xc316
 14919 4674 00       		.byte	0
 14920 4675 0B       		.uleb128 0xb
 14921 4676 00000000 		.long	.LASF262
 14922 467a 06       		.byte	0x6
 14923 467b 79       		.byte	0x79
 14924 467c 00000000 		.long	.LASF674
 14925 4680 30460000 		.long	0x4630
 14926 4684 8C460000 		.long	0x468c
 14927 4688 92460000 		.long	0x4692
 14928 468c 08       		.uleb128 0x8
 14929 468d 16C30000 		.long	0xc316
 14930 4691 00       		.byte	0
 14931 4692 37       		.uleb128 0x37
 14932 4693 00000000 		.long	.LASF562
 14933 4697 06       		.byte	0x6
 14934 4698 7C       		.byte	0x7c
 14935 4699 A1460000 		.long	0x46a1
 14936 469d A7460000 		.long	0x46a7
 14937 46a1 08       		.uleb128 0x8
 14938 46a2 10C30000 		.long	0xc310
 14939 46a6 00       		.byte	0
 14940 46a7 37       		.uleb128 0x37
 14941 46a8 00000000 		.long	.LASF562
 14942 46ac 06       		.byte	0x6
 14943 46ad 7F       		.byte	0x7f
 14944 46ae B6460000 		.long	0x46b6
 14945 46b2 C1460000 		.long	0x46c1
 14946 46b6 08       		.uleb128 0x8
 14947 46b7 10C30000 		.long	0xc310
 14948 46bb 09       		.uleb128 0x9
 14949 46bc 1CC30000 		.long	0xc31c
 14950 46c0 00       		.byte	0
 14951 46c1 11       		.uleb128 0x11
 14952 46c2 30460000 		.long	0x4630
 14953 46c6 37       		.uleb128 0x37
 14954 46c7 00000000 		.long	.LASF562
 14955 46cb 06       		.byte	0x6
 14956 46cc 82       		.byte	0x82
 14957 46cd D5460000 		.long	0x46d5
 14958 46d1 E0460000 		.long	0x46e0
 14959 46d5 08       		.uleb128 0x8
 14960 46d6 10C30000 		.long	0xc310
 14961 46da 09       		.uleb128 0x9
 14962 46db 85060000 		.long	0x685
 14963 46df 00       		.byte	0
 14964 46e0 37       		.uleb128 0x37
 14965 46e1 00000000 		.long	.LASF562
 14966 46e5 06       		.byte	0x6
 14967 46e6 86       		.byte	0x86
 14968 46e7 EF460000 		.long	0x46ef
 14969 46eb FF460000 		.long	0x46ff
 14970 46ef 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 564


 14971 46f0 10C30000 		.long	0xc310
 14972 46f4 09       		.uleb128 0x9
 14973 46f5 85060000 		.long	0x685
 14974 46f9 09       		.uleb128 0x9
 14975 46fa 1CC30000 		.long	0xc31c
 14976 46fe 00       		.byte	0
 14977 46ff 37       		.uleb128 0x37
 14978 4700 00000000 		.long	.LASF562
 14979 4704 06       		.byte	0x6
 14980 4705 8B       		.byte	0x8b
 14981 4706 0E470000 		.long	0x470e
 14982 470a 19470000 		.long	0x4719
 14983 470e 08       		.uleb128 0x8
 14984 470f 10C30000 		.long	0xc310
 14985 4713 09       		.uleb128 0x9
 14986 4714 FDC20000 		.long	0xc2fd
 14987 4718 00       		.byte	0
 14988 4719 37       		.uleb128 0x37
 14989 471a 00000000 		.long	.LASF562
 14990 471e 06       		.byte	0x6
 14991 471f 8E       		.byte	0x8e
 14992 4720 28470000 		.long	0x4728
 14993 4724 33470000 		.long	0x4733
 14994 4728 08       		.uleb128 0x8
 14995 4729 10C30000 		.long	0xc310
 14996 472d 09       		.uleb128 0x9
 14997 472e 22C30000 		.long	0xc322
 14998 4732 00       		.byte	0
 14999 4733 37       		.uleb128 0x37
 15000 4734 00000000 		.long	.LASF562
 15001 4738 06       		.byte	0x6
 15002 4739 92       		.byte	0x92
 15003 473a 42470000 		.long	0x4742
 15004 473e 52470000 		.long	0x4752
 15005 4742 08       		.uleb128 0x8
 15006 4743 10C30000 		.long	0xc310
 15007 4747 09       		.uleb128 0x9
 15008 4748 22C30000 		.long	0xc322
 15009 474c 09       		.uleb128 0x9
 15010 474d 1CC30000 		.long	0xc31c
 15011 4751 00       		.byte	0
 15012 4752 37       		.uleb128 0x37
 15013 4753 00000000 		.long	.LASF563
 15014 4757 06       		.byte	0x6
 15015 4758 9F       		.byte	0x9f
 15016 4759 61470000 		.long	0x4761
 15017 475d 6C470000 		.long	0x476c
 15018 4761 08       		.uleb128 0x8
 15019 4762 10C30000 		.long	0xc310
 15020 4766 08       		.uleb128 0x8
 15021 4767 28930000 		.long	0x9328
 15022 476b 00       		.byte	0
 15023 476c 0B       		.uleb128 0xb
 15024 476d 00000000 		.long	.LASF564
 15025 4771 06       		.byte	0x6
 15026 4772 A7       		.byte	0xa7
 15027 4773 00000000 		.long	.LASF675
GAS LISTING /tmp/ccJUMvuF.s 			page 565


 15028 4777 09460000 		.long	0x4609
 15029 477b 83470000 		.long	0x4783
 15030 477f 8E470000 		.long	0x478e
 15031 4783 08       		.uleb128 0x8
 15032 4784 10C30000 		.long	0xc310
 15033 4788 09       		.uleb128 0x9
 15034 4789 85060000 		.long	0x685
 15035 478d 00       		.byte	0
 15036 478e 0A       		.uleb128 0xa
 15037 478f 00000000 		.long	.LASF566
 15038 4793 06       		.byte	0x6
 15039 4794 AE       		.byte	0xae
 15040 4795 00000000 		.long	.LASF676
 15041 4799 A1470000 		.long	0x47a1
 15042 479d B1470000 		.long	0x47b1
 15043 47a1 08       		.uleb128 0x8
 15044 47a2 10C30000 		.long	0xc310
 15045 47a6 09       		.uleb128 0x9
 15046 47a7 09460000 		.long	0x4609
 15047 47ab 09       		.uleb128 0x9
 15048 47ac 85060000 		.long	0x685
 15049 47b0 00       		.byte	0
 15050 47b1 0E       		.uleb128 0xe
 15051 47b2 00000000 		.long	.LASF568
 15052 47b6 06       		.byte	0x6
 15053 47b7 B7       		.byte	0xb7
 15054 47b8 00000000 		.long	.LASF677
 15055 47bc 03       		.byte	0x3
 15056 47bd C5470000 		.long	0x47c5
 15057 47c1 D0470000 		.long	0x47d0
 15058 47c5 08       		.uleb128 0x8
 15059 47c6 10C30000 		.long	0xc310
 15060 47ca 09       		.uleb128 0x9
 15061 47cb 85060000 		.long	0x685
 15062 47cf 00       		.byte	0
 15063 47d0 18       		.uleb128 0x18
 15064 47d1 5F547000 		.string	"_Tp"
 15065 47d5 68930000 		.long	0x9368
 15066 47d9 35       		.uleb128 0x35
 15067 47da 00000000 		.long	.LASF303
 15068 47de 25420000 		.long	0x4225
 15069 47e2 00       		.byte	0
 15070 47e3 11       		.uleb128 0x11
 15071 47e4 4B450000 		.long	0x454b
 15072 47e8 05       		.uleb128 0x5
 15073 47e9 00000000 		.long	.LASF678
 15074 47ed 18       		.byte	0x18
 15075 47ee 06       		.byte	0x6
 15076 47ef D6       		.byte	0xd6
 15077 47f0 A3510000 		.long	0x51a3
 15078 47f4 12       		.uleb128 0x12
 15079 47f5 06       		.byte	0x6
 15080 47f6 D6       		.byte	0xd6
 15081 47f7 6C470000 		.long	0x476c
 15082 47fb 12       		.uleb128 0x12
 15083 47fc 06       		.byte	0x6
 15084 47fd D6       		.byte	0xd6
GAS LISTING /tmp/ccJUMvuF.s 			page 566


 15085 47fe 8E470000 		.long	0x478e
 15086 4802 12       		.uleb128 0x12
 15087 4803 06       		.byte	0x6
 15088 4804 D6       		.byte	0xd6
 15089 4805 24460000 		.long	0x4624
 15090 4809 12       		.uleb128 0x12
 15091 480a 06       		.byte	0x6
 15092 480b D6       		.byte	0xd6
 15093 480c 58460000 		.long	0x4658
 15094 4810 12       		.uleb128 0x12
 15095 4811 06       		.byte	0x6
 15096 4812 D6       		.byte	0xd6
 15097 4813 75460000 		.long	0x4675
 15098 4817 21       		.uleb128 0x21
 15099 4818 4B450000 		.long	0x454b
 15100 481c 00       		.byte	0
 15101 481d 02       		.byte	0x2
 15102 481e 22       		.uleb128 0x22
 15103 481f 00000000 		.long	.LASF19
 15104 4823 06       		.byte	0x6
 15105 4824 E2       		.byte	0xe2
 15106 4825 68930000 		.long	0x9368
 15107 4829 01       		.byte	0x1
 15108 482a 22       		.uleb128 0x22
 15109 482b 00000000 		.long	.LASF491
 15110 482f 06       		.byte	0x6
 15111 4830 E3       		.byte	0xe3
 15112 4831 09460000 		.long	0x4609
 15113 4835 01       		.byte	0x1
 15114 4836 22       		.uleb128 0x22
 15115 4837 00000000 		.long	.LASF58
 15116 483b 06       		.byte	0x6
 15117 483c E5       		.byte	0xe5
 15118 483d F1A40000 		.long	0xa4f1
 15119 4841 01       		.byte	0x1
 15120 4842 22       		.uleb128 0x22
 15121 4843 00000000 		.long	.LASF59
 15122 4847 06       		.byte	0x6
 15123 4848 E6       		.byte	0xe6
 15124 4849 FCA40000 		.long	0xa4fc
 15125 484d 01       		.byte	0x1
 15126 484e 22       		.uleb128 0x22
 15127 484f 00000000 		.long	.LASF68
 15128 4853 06       		.byte	0x6
 15129 4854 E7       		.byte	0xe7
 15130 4855 C4A50000 		.long	0xa5c4
 15131 4859 01       		.byte	0x1
 15132 485a 22       		.uleb128 0x22
 15133 485b 00000000 		.long	.LASF69
 15134 485f 06       		.byte	0x6
 15135 4860 E9       		.byte	0xe9
 15136 4861 E3A70000 		.long	0xa7e3
 15137 4865 01       		.byte	0x1
 15138 4866 22       		.uleb128 0x22
 15139 4867 00000000 		.long	.LASF70
 15140 486b 06       		.byte	0x6
 15141 486c EA       		.byte	0xea
GAS LISTING /tmp/ccJUMvuF.s 			page 567


 15142 486d A3510000 		.long	0x51a3
 15143 4871 01       		.byte	0x1
 15144 4872 22       		.uleb128 0x22
 15145 4873 00000000 		.long	.LASF71
 15146 4877 06       		.byte	0x6
 15147 4878 EB       		.byte	0xeb
 15148 4879 A8510000 		.long	0x51a8
 15149 487d 01       		.byte	0x1
 15150 487e 22       		.uleb128 0x22
 15151 487f 00000000 		.long	.LASF57
 15152 4883 06       		.byte	0x6
 15153 4884 EC       		.byte	0xec
 15154 4885 85060000 		.long	0x685
 15155 4889 01       		.byte	0x1
 15156 488a 22       		.uleb128 0x22
 15157 488b 00000000 		.long	.LASF67
 15158 488f 06       		.byte	0x6
 15159 4890 EE       		.byte	0xee
 15160 4891 25420000 		.long	0x4225
 15161 4895 01       		.byte	0x1
 15162 4896 0C       		.uleb128 0xc
 15163 4897 00000000 		.long	.LASF571
 15164 489b 06       		.byte	0x6
 15165 489c FD       		.byte	0xfd
 15166 489d 01       		.byte	0x1
 15167 489e A6480000 		.long	0x48a6
 15168 48a2 AC480000 		.long	0x48ac
 15169 48a6 08       		.uleb128 0x8
 15170 48a7 29C30000 		.long	0xc329
 15171 48ab 00       		.byte	0
 15172 48ac 31       		.uleb128 0x31
 15173 48ad 00000000 		.long	.LASF571
 15174 48b1 06       		.byte	0x6
 15175 48b2 0801     		.value	0x108
 15176 48b4 01       		.byte	0x1
 15177 48b5 BD480000 		.long	0x48bd
 15178 48b9 C8480000 		.long	0x48c8
 15179 48bd 08       		.uleb128 0x8
 15180 48be 29C30000 		.long	0xc329
 15181 48c2 09       		.uleb128 0x9
 15182 48c3 2FC30000 		.long	0xc32f
 15183 48c7 00       		.byte	0
 15184 48c8 11       		.uleb128 0x11
 15185 48c9 8A480000 		.long	0x488a
 15186 48cd 31       		.uleb128 0x31
 15187 48ce 00000000 		.long	.LASF571
 15188 48d2 06       		.byte	0x6
 15189 48d3 1501     		.value	0x115
 15190 48d5 01       		.byte	0x1
 15191 48d6 DE480000 		.long	0x48de
 15192 48da EE480000 		.long	0x48ee
 15193 48de 08       		.uleb128 0x8
 15194 48df 29C30000 		.long	0xc329
 15195 48e3 09       		.uleb128 0x9
 15196 48e4 7E480000 		.long	0x487e
 15197 48e8 09       		.uleb128 0x9
 15198 48e9 2FC30000 		.long	0xc32f
GAS LISTING /tmp/ccJUMvuF.s 			page 568


 15199 48ed 00       		.byte	0
 15200 48ee 30       		.uleb128 0x30
 15201 48ef 00000000 		.long	.LASF571
 15202 48f3 06       		.byte	0x6
 15203 48f4 2101     		.value	0x121
 15204 48f6 01       		.byte	0x1
 15205 48f7 FF480000 		.long	0x48ff
 15206 48fb 14490000 		.long	0x4914
 15207 48ff 08       		.uleb128 0x8
 15208 4900 29C30000 		.long	0xc329
 15209 4904 09       		.uleb128 0x9
 15210 4905 7E480000 		.long	0x487e
 15211 4909 09       		.uleb128 0x9
 15212 490a 35C30000 		.long	0xc335
 15213 490e 09       		.uleb128 0x9
 15214 490f 2FC30000 		.long	0xc32f
 15215 4913 00       		.byte	0
 15216 4914 11       		.uleb128 0x11
 15217 4915 1E480000 		.long	0x481e
 15218 4919 30       		.uleb128 0x30
 15219 491a 00000000 		.long	.LASF571
 15220 491e 06       		.byte	0x6
 15221 491f 3E01     		.value	0x13e
 15222 4921 01       		.byte	0x1
 15223 4922 2A490000 		.long	0x492a
 15224 4926 35490000 		.long	0x4935
 15225 492a 08       		.uleb128 0x8
 15226 492b 29C30000 		.long	0xc329
 15227 492f 09       		.uleb128 0x9
 15228 4930 3BC30000 		.long	0xc33b
 15229 4934 00       		.byte	0
 15230 4935 30       		.uleb128 0x30
 15231 4936 00000000 		.long	.LASF571
 15232 493a 06       		.byte	0x6
 15233 493b 4F01     		.value	0x14f
 15234 493d 01       		.byte	0x1
 15235 493e 46490000 		.long	0x4946
 15236 4942 51490000 		.long	0x4951
 15237 4946 08       		.uleb128 0x8
 15238 4947 29C30000 		.long	0xc329
 15239 494b 09       		.uleb128 0x9
 15240 494c 41C30000 		.long	0xc341
 15241 4950 00       		.byte	0
 15242 4951 30       		.uleb128 0x30
 15243 4952 00000000 		.long	.LASF571
 15244 4956 06       		.byte	0x6
 15245 4957 5301     		.value	0x153
 15246 4959 01       		.byte	0x1
 15247 495a 62490000 		.long	0x4962
 15248 495e 72490000 		.long	0x4972
 15249 4962 08       		.uleb128 0x8
 15250 4963 29C30000 		.long	0xc329
 15251 4967 09       		.uleb128 0x9
 15252 4968 3BC30000 		.long	0xc33b
 15253 496c 09       		.uleb128 0x9
 15254 496d 2FC30000 		.long	0xc32f
 15255 4971 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 569


 15256 4972 30       		.uleb128 0x30
 15257 4973 00000000 		.long	.LASF571
 15258 4977 06       		.byte	0x6
 15259 4978 5C01     		.value	0x15c
 15260 497a 01       		.byte	0x1
 15261 497b 83490000 		.long	0x4983
 15262 497f 93490000 		.long	0x4993
 15263 4983 08       		.uleb128 0x8
 15264 4984 29C30000 		.long	0xc329
 15265 4988 09       		.uleb128 0x9
 15266 4989 41C30000 		.long	0xc341
 15267 498d 09       		.uleb128 0x9
 15268 498e 2FC30000 		.long	0xc32f
 15269 4992 00       		.byte	0
 15270 4993 30       		.uleb128 0x30
 15271 4994 00000000 		.long	.LASF571
 15272 4998 06       		.byte	0x6
 15273 4999 7501     		.value	0x175
 15274 499b 01       		.byte	0x1
 15275 499c A4490000 		.long	0x49a4
 15276 49a0 B4490000 		.long	0x49b4
 15277 49a4 08       		.uleb128 0x8
 15278 49a5 29C30000 		.long	0xc329
 15279 49a9 09       		.uleb128 0x9
 15280 49aa B2510000 		.long	0x51b2
 15281 49ae 09       		.uleb128 0x9
 15282 49af 2FC30000 		.long	0xc32f
 15283 49b3 00       		.byte	0
 15284 49b4 30       		.uleb128 0x30
 15285 49b5 00000000 		.long	.LASF572
 15286 49b9 06       		.byte	0x6
 15287 49ba A701     		.value	0x1a7
 15288 49bc 01       		.byte	0x1
 15289 49bd C5490000 		.long	0x49c5
 15290 49c1 D0490000 		.long	0x49d0
 15291 49c5 08       		.uleb128 0x8
 15292 49c6 29C30000 		.long	0xc329
 15293 49ca 08       		.uleb128 0x8
 15294 49cb 28930000 		.long	0x9328
 15295 49cf 00       		.byte	0
 15296 49d0 0D       		.uleb128 0xd
 15297 49d1 00000000 		.long	.LASF8
 15298 49d5 30       		.byte	0x30
 15299 49d6 A7       		.byte	0xa7
 15300 49d7 00000000 		.long	.LASF679
 15301 49db 48C30000 		.long	0xc348
 15302 49df 01       		.byte	0x1
 15303 49e0 E8490000 		.long	0x49e8
 15304 49e4 F3490000 		.long	0x49f3
 15305 49e8 08       		.uleb128 0x8
 15306 49e9 29C30000 		.long	0xc329
 15307 49ed 09       		.uleb128 0x9
 15308 49ee 3BC30000 		.long	0xc33b
 15309 49f2 00       		.byte	0
 15310 49f3 32       		.uleb128 0x32
 15311 49f4 00000000 		.long	.LASF8
 15312 49f8 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 570


 15313 49f9 C001     		.value	0x1c0
 15314 49fb 00000000 		.long	.LASF680
 15315 49ff 48C30000 		.long	0xc348
 15316 4a03 01       		.byte	0x1
 15317 4a04 0C4A0000 		.long	0x4a0c
 15318 4a08 174A0000 		.long	0x4a17
 15319 4a0c 08       		.uleb128 0x8
 15320 4a0d 29C30000 		.long	0xc329
 15321 4a11 09       		.uleb128 0x9
 15322 4a12 41C30000 		.long	0xc341
 15323 4a16 00       		.byte	0
 15324 4a17 32       		.uleb128 0x32
 15325 4a18 00000000 		.long	.LASF8
 15326 4a1c 06       		.byte	0x6
 15327 4a1d D601     		.value	0x1d6
 15328 4a1f 00000000 		.long	.LASF681
 15329 4a23 48C30000 		.long	0xc348
 15330 4a27 01       		.byte	0x1
 15331 4a28 304A0000 		.long	0x4a30
 15332 4a2c 3B4A0000 		.long	0x4a3b
 15333 4a30 08       		.uleb128 0x8
 15334 4a31 29C30000 		.long	0xc329
 15335 4a35 09       		.uleb128 0x9
 15336 4a36 B2510000 		.long	0x51b2
 15337 4a3a 00       		.byte	0
 15338 4a3b 34       		.uleb128 0x34
 15339 4a3c 00000000 		.long	.LASF44
 15340 4a40 06       		.byte	0x6
 15341 4a41 E801     		.value	0x1e8
 15342 4a43 00000000 		.long	.LASF682
 15343 4a47 01       		.byte	0x1
 15344 4a48 504A0000 		.long	0x4a50
 15345 4a4c 604A0000 		.long	0x4a60
 15346 4a50 08       		.uleb128 0x8
 15347 4a51 29C30000 		.long	0xc329
 15348 4a55 09       		.uleb128 0x9
 15349 4a56 7E480000 		.long	0x487e
 15350 4a5a 09       		.uleb128 0x9
 15351 4a5b 35C30000 		.long	0xc335
 15352 4a5f 00       		.byte	0
 15353 4a60 34       		.uleb128 0x34
 15354 4a61 00000000 		.long	.LASF44
 15355 4a65 06       		.byte	0x6
 15356 4a66 1502     		.value	0x215
 15357 4a68 00000000 		.long	.LASF683
 15358 4a6c 01       		.byte	0x1
 15359 4a6d 754A0000 		.long	0x4a75
 15360 4a71 804A0000 		.long	0x4a80
 15361 4a75 08       		.uleb128 0x8
 15362 4a76 29C30000 		.long	0xc329
 15363 4a7a 09       		.uleb128 0x9
 15364 4a7b B2510000 		.long	0x51b2
 15365 4a7f 00       		.byte	0
 15366 4a80 32       		.uleb128 0x32
 15367 4a81 00000000 		.long	.LASF149
 15368 4a85 06       		.byte	0x6
 15369 4a86 2302     		.value	0x223
GAS LISTING /tmp/ccJUMvuF.s 			page 571


 15370 4a88 00000000 		.long	.LASF684
 15371 4a8c 4E480000 		.long	0x484e
 15372 4a90 01       		.byte	0x1
 15373 4a91 994A0000 		.long	0x4a99
 15374 4a95 9F4A0000 		.long	0x4a9f
 15375 4a99 08       		.uleb128 0x8
 15376 4a9a 29C30000 		.long	0xc329
 15377 4a9e 00       		.byte	0
 15378 4a9f 32       		.uleb128 0x32
 15379 4aa0 00000000 		.long	.LASF149
 15380 4aa4 06       		.byte	0x6
 15381 4aa5 2C02     		.value	0x22c
 15382 4aa7 00000000 		.long	.LASF685
 15383 4aab 5A480000 		.long	0x485a
 15384 4aaf 01       		.byte	0x1
 15385 4ab0 B84A0000 		.long	0x4ab8
 15386 4ab4 BE4A0000 		.long	0x4abe
 15387 4ab8 08       		.uleb128 0x8
 15388 4ab9 4EC30000 		.long	0xc34e
 15389 4abd 00       		.byte	0
 15390 4abe 33       		.uleb128 0x33
 15391 4abf 656E6400 		.string	"end"
 15392 4ac3 06       		.byte	0x6
 15393 4ac4 3502     		.value	0x235
 15394 4ac6 00000000 		.long	.LASF686
 15395 4aca 4E480000 		.long	0x484e
 15396 4ace 01       		.byte	0x1
 15397 4acf D74A0000 		.long	0x4ad7
 15398 4ad3 DD4A0000 		.long	0x4add
 15399 4ad7 08       		.uleb128 0x8
 15400 4ad8 29C30000 		.long	0xc329
 15401 4adc 00       		.byte	0
 15402 4add 33       		.uleb128 0x33
 15403 4ade 656E6400 		.string	"end"
 15404 4ae2 06       		.byte	0x6
 15405 4ae3 3E02     		.value	0x23e
 15406 4ae5 00000000 		.long	.LASF687
 15407 4ae9 5A480000 		.long	0x485a
 15408 4aed 01       		.byte	0x1
 15409 4aee F64A0000 		.long	0x4af6
 15410 4af2 FC4A0000 		.long	0x4afc
 15411 4af6 08       		.uleb128 0x8
 15412 4af7 4EC30000 		.long	0xc34e
 15413 4afb 00       		.byte	0
 15414 4afc 32       		.uleb128 0x32
 15415 4afd 00000000 		.long	.LASF154
 15416 4b01 06       		.byte	0x6
 15417 4b02 4702     		.value	0x247
 15418 4b04 00000000 		.long	.LASF688
 15419 4b08 72480000 		.long	0x4872
 15420 4b0c 01       		.byte	0x1
 15421 4b0d 154B0000 		.long	0x4b15
 15422 4b11 1B4B0000 		.long	0x4b1b
 15423 4b15 08       		.uleb128 0x8
 15424 4b16 29C30000 		.long	0xc329
 15425 4b1a 00       		.byte	0
 15426 4b1b 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 572


 15427 4b1c 00000000 		.long	.LASF154
 15428 4b20 06       		.byte	0x6
 15429 4b21 5002     		.value	0x250
 15430 4b23 00000000 		.long	.LASF689
 15431 4b27 66480000 		.long	0x4866
 15432 4b2b 01       		.byte	0x1
 15433 4b2c 344B0000 		.long	0x4b34
 15434 4b30 3A4B0000 		.long	0x4b3a
 15435 4b34 08       		.uleb128 0x8
 15436 4b35 4EC30000 		.long	0xc34e
 15437 4b39 00       		.byte	0
 15438 4b3a 32       		.uleb128 0x32
 15439 4b3b 00000000 		.long	.LASF157
 15440 4b3f 06       		.byte	0x6
 15441 4b40 5902     		.value	0x259
 15442 4b42 00000000 		.long	.LASF690
 15443 4b46 72480000 		.long	0x4872
 15444 4b4a 01       		.byte	0x1
 15445 4b4b 534B0000 		.long	0x4b53
 15446 4b4f 594B0000 		.long	0x4b59
 15447 4b53 08       		.uleb128 0x8
 15448 4b54 29C30000 		.long	0xc329
 15449 4b58 00       		.byte	0
 15450 4b59 32       		.uleb128 0x32
 15451 4b5a 00000000 		.long	.LASF157
 15452 4b5e 06       		.byte	0x6
 15453 4b5f 6202     		.value	0x262
 15454 4b61 00000000 		.long	.LASF691
 15455 4b65 66480000 		.long	0x4866
 15456 4b69 01       		.byte	0x1
 15457 4b6a 724B0000 		.long	0x4b72
 15458 4b6e 784B0000 		.long	0x4b78
 15459 4b72 08       		.uleb128 0x8
 15460 4b73 4EC30000 		.long	0xc34e
 15461 4b77 00       		.byte	0
 15462 4b78 32       		.uleb128 0x32
 15463 4b79 00000000 		.long	.LASF160
 15464 4b7d 06       		.byte	0x6
 15465 4b7e 6C02     		.value	0x26c
 15466 4b80 00000000 		.long	.LASF692
 15467 4b84 5A480000 		.long	0x485a
 15468 4b88 01       		.byte	0x1
 15469 4b89 914B0000 		.long	0x4b91
 15470 4b8d 974B0000 		.long	0x4b97
 15471 4b91 08       		.uleb128 0x8
 15472 4b92 4EC30000 		.long	0xc34e
 15473 4b96 00       		.byte	0
 15474 4b97 32       		.uleb128 0x32
 15475 4b98 00000000 		.long	.LASF162
 15476 4b9c 06       		.byte	0x6
 15477 4b9d 7502     		.value	0x275
 15478 4b9f 00000000 		.long	.LASF693
 15479 4ba3 5A480000 		.long	0x485a
 15480 4ba7 01       		.byte	0x1
 15481 4ba8 B04B0000 		.long	0x4bb0
 15482 4bac B64B0000 		.long	0x4bb6
 15483 4bb0 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 573


 15484 4bb1 4EC30000 		.long	0xc34e
 15485 4bb5 00       		.byte	0
 15486 4bb6 32       		.uleb128 0x32
 15487 4bb7 00000000 		.long	.LASF164
 15488 4bbb 06       		.byte	0x6
 15489 4bbc 7E02     		.value	0x27e
 15490 4bbe 00000000 		.long	.LASF694
 15491 4bc2 66480000 		.long	0x4866
 15492 4bc6 01       		.byte	0x1
 15493 4bc7 CF4B0000 		.long	0x4bcf
 15494 4bcb D54B0000 		.long	0x4bd5
 15495 4bcf 08       		.uleb128 0x8
 15496 4bd0 4EC30000 		.long	0xc34e
 15497 4bd4 00       		.byte	0
 15498 4bd5 32       		.uleb128 0x32
 15499 4bd6 00000000 		.long	.LASF166
 15500 4bda 06       		.byte	0x6
 15501 4bdb 8702     		.value	0x287
 15502 4bdd 00000000 		.long	.LASF695
 15503 4be1 66480000 		.long	0x4866
 15504 4be5 01       		.byte	0x1
 15505 4be6 EE4B0000 		.long	0x4bee
 15506 4bea F44B0000 		.long	0x4bf4
 15507 4bee 08       		.uleb128 0x8
 15508 4bef 4EC30000 		.long	0xc34e
 15509 4bf3 00       		.byte	0
 15510 4bf4 32       		.uleb128 0x32
 15511 4bf5 00000000 		.long	.LASF168
 15512 4bf9 06       		.byte	0x6
 15513 4bfa 8E02     		.value	0x28e
 15514 4bfc 00000000 		.long	.LASF696
 15515 4c00 7E480000 		.long	0x487e
 15516 4c04 01       		.byte	0x1
 15517 4c05 0D4C0000 		.long	0x4c0d
 15518 4c09 134C0000 		.long	0x4c13
 15519 4c0d 08       		.uleb128 0x8
 15520 4c0e 4EC30000 		.long	0xc34e
 15521 4c12 00       		.byte	0
 15522 4c13 32       		.uleb128 0x32
 15523 4c14 00000000 		.long	.LASF171
 15524 4c18 06       		.byte	0x6
 15525 4c19 9302     		.value	0x293
 15526 4c1b 00000000 		.long	.LASF697
 15527 4c1f 7E480000 		.long	0x487e
 15528 4c23 01       		.byte	0x1
 15529 4c24 2C4C0000 		.long	0x4c2c
 15530 4c28 324C0000 		.long	0x4c32
 15531 4c2c 08       		.uleb128 0x8
 15532 4c2d 4EC30000 		.long	0xc34e
 15533 4c31 00       		.byte	0
 15534 4c32 34       		.uleb128 0x34
 15535 4c33 00000000 		.long	.LASF173
 15536 4c37 06       		.byte	0x6
 15537 4c38 A102     		.value	0x2a1
 15538 4c3a 00000000 		.long	.LASF698
 15539 4c3e 01       		.byte	0x1
 15540 4c3f 474C0000 		.long	0x4c47
GAS LISTING /tmp/ccJUMvuF.s 			page 574


 15541 4c43 524C0000 		.long	0x4c52
 15542 4c47 08       		.uleb128 0x8
 15543 4c48 29C30000 		.long	0xc329
 15544 4c4c 09       		.uleb128 0x9
 15545 4c4d 7E480000 		.long	0x487e
 15546 4c51 00       		.byte	0
 15547 4c52 34       		.uleb128 0x34
 15548 4c53 00000000 		.long	.LASF173
 15549 4c57 06       		.byte	0x6
 15550 4c58 B502     		.value	0x2b5
 15551 4c5a 00000000 		.long	.LASF699
 15552 4c5e 01       		.byte	0x1
 15553 4c5f 674C0000 		.long	0x4c67
 15554 4c63 774C0000 		.long	0x4c77
 15555 4c67 08       		.uleb128 0x8
 15556 4c68 29C30000 		.long	0xc329
 15557 4c6c 09       		.uleb128 0x9
 15558 4c6d 7E480000 		.long	0x487e
 15559 4c71 09       		.uleb128 0x9
 15560 4c72 35C30000 		.long	0xc335
 15561 4c76 00       		.byte	0
 15562 4c77 34       		.uleb128 0x34
 15563 4c78 00000000 		.long	.LASF176
 15564 4c7c 06       		.byte	0x6
 15565 4c7d D502     		.value	0x2d5
 15566 4c7f 00000000 		.long	.LASF700
 15567 4c83 01       		.byte	0x1
 15568 4c84 8C4C0000 		.long	0x4c8c
 15569 4c88 924C0000 		.long	0x4c92
 15570 4c8c 08       		.uleb128 0x8
 15571 4c8d 29C30000 		.long	0xc329
 15572 4c91 00       		.byte	0
 15573 4c92 32       		.uleb128 0x32
 15574 4c93 00000000 		.long	.LASF178
 15575 4c97 06       		.byte	0x6
 15576 4c98 DE02     		.value	0x2de
 15577 4c9a 00000000 		.long	.LASF701
 15578 4c9e 7E480000 		.long	0x487e
 15579 4ca2 01       		.byte	0x1
 15580 4ca3 AB4C0000 		.long	0x4cab
 15581 4ca7 B14C0000 		.long	0x4cb1
 15582 4cab 08       		.uleb128 0x8
 15583 4cac 4EC30000 		.long	0xc34e
 15584 4cb0 00       		.byte	0
 15585 4cb1 32       		.uleb128 0x32
 15586 4cb2 00000000 		.long	.LASF184
 15587 4cb6 06       		.byte	0x6
 15588 4cb7 E702     		.value	0x2e7
 15589 4cb9 00000000 		.long	.LASF702
 15590 4cbd 30930000 		.long	0x9330
 15591 4cc1 01       		.byte	0x1
 15592 4cc2 CA4C0000 		.long	0x4cca
 15593 4cc6 D04C0000 		.long	0x4cd0
 15594 4cca 08       		.uleb128 0x8
 15595 4ccb 4EC30000 		.long	0xc34e
 15596 4ccf 00       		.byte	0
 15597 4cd0 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 575


 15598 4cd1 00000000 		.long	.LASF180
 15599 4cd5 30       		.byte	0x30
 15600 4cd6 41       		.byte	0x41
 15601 4cd7 00000000 		.long	.LASF703
 15602 4cdb 01       		.byte	0x1
 15603 4cdc E44C0000 		.long	0x4ce4
 15604 4ce0 EF4C0000 		.long	0x4cef
 15605 4ce4 08       		.uleb128 0x8
 15606 4ce5 29C30000 		.long	0xc329
 15607 4ce9 09       		.uleb128 0x9
 15608 4cea 7E480000 		.long	0x487e
 15609 4cee 00       		.byte	0
 15610 4cef 32       		.uleb128 0x32
 15611 4cf0 00000000 		.long	.LASF186
 15612 4cf4 06       		.byte	0x6
 15613 4cf5 0B03     		.value	0x30b
 15614 4cf7 00000000 		.long	.LASF704
 15615 4cfb 36480000 		.long	0x4836
 15616 4cff 01       		.byte	0x1
 15617 4d00 084D0000 		.long	0x4d08
 15618 4d04 134D0000 		.long	0x4d13
 15619 4d08 08       		.uleb128 0x8
 15620 4d09 29C30000 		.long	0xc329
 15621 4d0d 09       		.uleb128 0x9
 15622 4d0e 7E480000 		.long	0x487e
 15623 4d12 00       		.byte	0
 15624 4d13 32       		.uleb128 0x32
 15625 4d14 00000000 		.long	.LASF186
 15626 4d18 06       		.byte	0x6
 15627 4d19 1A03     		.value	0x31a
 15628 4d1b 00000000 		.long	.LASF705
 15629 4d1f 42480000 		.long	0x4842
 15630 4d23 01       		.byte	0x1
 15631 4d24 2C4D0000 		.long	0x4d2c
 15632 4d28 374D0000 		.long	0x4d37
 15633 4d2c 08       		.uleb128 0x8
 15634 4d2d 4EC30000 		.long	0xc34e
 15635 4d31 09       		.uleb128 0x9
 15636 4d32 7E480000 		.long	0x487e
 15637 4d36 00       		.byte	0
 15638 4d37 34       		.uleb128 0x34
 15639 4d38 00000000 		.long	.LASF600
 15640 4d3c 06       		.byte	0x6
 15641 4d3d 2003     		.value	0x320
 15642 4d3f 00000000 		.long	.LASF706
 15643 4d43 02       		.byte	0x2
 15644 4d44 4C4D0000 		.long	0x4d4c
 15645 4d48 574D0000 		.long	0x4d57
 15646 4d4c 08       		.uleb128 0x8
 15647 4d4d 4EC30000 		.long	0xc34e
 15648 4d51 09       		.uleb128 0x9
 15649 4d52 7E480000 		.long	0x487e
 15650 4d56 00       		.byte	0
 15651 4d57 33       		.uleb128 0x33
 15652 4d58 617400   		.string	"at"
 15653 4d5b 06       		.byte	0x6
 15654 4d5c 3603     		.value	0x336
GAS LISTING /tmp/ccJUMvuF.s 			page 576


 15655 4d5e 00000000 		.long	.LASF707
 15656 4d62 36480000 		.long	0x4836
 15657 4d66 01       		.byte	0x1
 15658 4d67 6F4D0000 		.long	0x4d6f
 15659 4d6b 7A4D0000 		.long	0x4d7a
 15660 4d6f 08       		.uleb128 0x8
 15661 4d70 29C30000 		.long	0xc329
 15662 4d74 09       		.uleb128 0x9
 15663 4d75 7E480000 		.long	0x487e
 15664 4d79 00       		.byte	0
 15665 4d7a 33       		.uleb128 0x33
 15666 4d7b 617400   		.string	"at"
 15667 4d7e 06       		.byte	0x6
 15668 4d7f 4803     		.value	0x348
 15669 4d81 00000000 		.long	.LASF708
 15670 4d85 42480000 		.long	0x4842
 15671 4d89 01       		.byte	0x1
 15672 4d8a 924D0000 		.long	0x4d92
 15673 4d8e 9D4D0000 		.long	0x4d9d
 15674 4d92 08       		.uleb128 0x8
 15675 4d93 4EC30000 		.long	0xc34e
 15676 4d97 09       		.uleb128 0x9
 15677 4d98 7E480000 		.long	0x487e
 15678 4d9c 00       		.byte	0
 15679 4d9d 32       		.uleb128 0x32
 15680 4d9e 00000000 		.long	.LASF191
 15681 4da2 06       		.byte	0x6
 15682 4da3 5303     		.value	0x353
 15683 4da5 00000000 		.long	.LASF709
 15684 4da9 36480000 		.long	0x4836
 15685 4dad 01       		.byte	0x1
 15686 4dae B64D0000 		.long	0x4db6
 15687 4db2 BC4D0000 		.long	0x4dbc
 15688 4db6 08       		.uleb128 0x8
 15689 4db7 29C30000 		.long	0xc329
 15690 4dbb 00       		.byte	0
 15691 4dbc 32       		.uleb128 0x32
 15692 4dbd 00000000 		.long	.LASF191
 15693 4dc1 06       		.byte	0x6
 15694 4dc2 5B03     		.value	0x35b
 15695 4dc4 00000000 		.long	.LASF710
 15696 4dc8 42480000 		.long	0x4842
 15697 4dcc 01       		.byte	0x1
 15698 4dcd D54D0000 		.long	0x4dd5
 15699 4dd1 DB4D0000 		.long	0x4ddb
 15700 4dd5 08       		.uleb128 0x8
 15701 4dd6 4EC30000 		.long	0xc34e
 15702 4dda 00       		.byte	0
 15703 4ddb 32       		.uleb128 0x32
 15704 4ddc 00000000 		.long	.LASF194
 15705 4de0 06       		.byte	0x6
 15706 4de1 6303     		.value	0x363
 15707 4de3 00000000 		.long	.LASF711
 15708 4de7 36480000 		.long	0x4836
 15709 4deb 01       		.byte	0x1
 15710 4dec F44D0000 		.long	0x4df4
 15711 4df0 FA4D0000 		.long	0x4dfa
GAS LISTING /tmp/ccJUMvuF.s 			page 577


 15712 4df4 08       		.uleb128 0x8
 15713 4df5 29C30000 		.long	0xc329
 15714 4df9 00       		.byte	0
 15715 4dfa 32       		.uleb128 0x32
 15716 4dfb 00000000 		.long	.LASF194
 15717 4dff 06       		.byte	0x6
 15718 4e00 6B03     		.value	0x36b
 15719 4e02 00000000 		.long	.LASF712
 15720 4e06 42480000 		.long	0x4842
 15721 4e0a 01       		.byte	0x1
 15722 4e0b 134E0000 		.long	0x4e13
 15723 4e0f 194E0000 		.long	0x4e19
 15724 4e13 08       		.uleb128 0x8
 15725 4e14 4EC30000 		.long	0xc34e
 15726 4e18 00       		.byte	0
 15727 4e19 32       		.uleb128 0x32
 15728 4e1a 00000000 		.long	.LASF260
 15729 4e1e 06       		.byte	0x6
 15730 4e1f 7A03     		.value	0x37a
 15731 4e21 00000000 		.long	.LASF713
 15732 4e25 98C20000 		.long	0xc298
 15733 4e29 01       		.byte	0x1
 15734 4e2a 324E0000 		.long	0x4e32
 15735 4e2e 384E0000 		.long	0x4e38
 15736 4e32 08       		.uleb128 0x8
 15737 4e33 29C30000 		.long	0xc329
 15738 4e37 00       		.byte	0
 15739 4e38 32       		.uleb128 0x32
 15740 4e39 00000000 		.long	.LASF260
 15741 4e3d 06       		.byte	0x6
 15742 4e3e 8203     		.value	0x382
 15743 4e40 00000000 		.long	.LASF714
 15744 4e44 9EC20000 		.long	0xc29e
 15745 4e48 01       		.byte	0x1
 15746 4e49 514E0000 		.long	0x4e51
 15747 4e4d 574E0000 		.long	0x4e57
 15748 4e51 08       		.uleb128 0x8
 15749 4e52 4EC30000 		.long	0xc34e
 15750 4e56 00       		.byte	0
 15751 4e57 34       		.uleb128 0x34
 15752 4e58 00000000 		.long	.LASF209
 15753 4e5c 06       		.byte	0x6
 15754 4e5d 9103     		.value	0x391
 15755 4e5f 00000000 		.long	.LASF715
 15756 4e63 01       		.byte	0x1
 15757 4e64 6C4E0000 		.long	0x4e6c
 15758 4e68 774E0000 		.long	0x4e77
 15759 4e6c 08       		.uleb128 0x8
 15760 4e6d 29C30000 		.long	0xc329
 15761 4e71 09       		.uleb128 0x9
 15762 4e72 35C30000 		.long	0xc335
 15763 4e76 00       		.byte	0
 15764 4e77 34       		.uleb128 0x34
 15765 4e78 00000000 		.long	.LASF209
 15766 4e7c 06       		.byte	0x6
 15767 4e7d A303     		.value	0x3a3
 15768 4e7f 00000000 		.long	.LASF716
GAS LISTING /tmp/ccJUMvuF.s 			page 578


 15769 4e83 01       		.byte	0x1
 15770 4e84 8C4E0000 		.long	0x4e8c
 15771 4e88 974E0000 		.long	0x4e97
 15772 4e8c 08       		.uleb128 0x8
 15773 4e8d 29C30000 		.long	0xc329
 15774 4e91 09       		.uleb128 0x9
 15775 4e92 54C30000 		.long	0xc354
 15776 4e96 00       		.byte	0
 15777 4e97 34       		.uleb128 0x34
 15778 4e98 00000000 		.long	.LASF231
 15779 4e9c 06       		.byte	0x6
 15780 4e9d B503     		.value	0x3b5
 15781 4e9f 00000000 		.long	.LASF717
 15782 4ea3 01       		.byte	0x1
 15783 4ea4 AC4E0000 		.long	0x4eac
 15784 4ea8 B24E0000 		.long	0x4eb2
 15785 4eac 08       		.uleb128 0x8
 15786 4ead 29C30000 		.long	0xc329
 15787 4eb1 00       		.byte	0
 15788 4eb2 0D       		.uleb128 0xd
 15789 4eb3 00000000 		.long	.LASF218
 15790 4eb7 30       		.byte	0x30
 15791 4eb8 6B       		.byte	0x6b
 15792 4eb9 00000000 		.long	.LASF718
 15793 4ebd 4E480000 		.long	0x484e
 15794 4ec1 01       		.byte	0x1
 15795 4ec2 CA4E0000 		.long	0x4eca
 15796 4ec6 DA4E0000 		.long	0x4eda
 15797 4eca 08       		.uleb128 0x8
 15798 4ecb 29C30000 		.long	0xc329
 15799 4ecf 09       		.uleb128 0x9
 15800 4ed0 5A480000 		.long	0x485a
 15801 4ed4 09       		.uleb128 0x9
 15802 4ed5 35C30000 		.long	0xc335
 15803 4ed9 00       		.byte	0
 15804 4eda 32       		.uleb128 0x32
 15805 4edb 00000000 		.long	.LASF218
 15806 4edf 06       		.byte	0x6
 15807 4ee0 F603     		.value	0x3f6
 15808 4ee2 00000000 		.long	.LASF719
 15809 4ee6 4E480000 		.long	0x484e
 15810 4eea 01       		.byte	0x1
 15811 4eeb F34E0000 		.long	0x4ef3
 15812 4eef 034F0000 		.long	0x4f03
 15813 4ef3 08       		.uleb128 0x8
 15814 4ef4 29C30000 		.long	0xc329
 15815 4ef8 09       		.uleb128 0x9
 15816 4ef9 5A480000 		.long	0x485a
 15817 4efd 09       		.uleb128 0x9
 15818 4efe 54C30000 		.long	0xc354
 15819 4f02 00       		.byte	0
 15820 4f03 32       		.uleb128 0x32
 15821 4f04 00000000 		.long	.LASF218
 15822 4f08 06       		.byte	0x6
 15823 4f09 0704     		.value	0x407
 15824 4f0b 00000000 		.long	.LASF720
 15825 4f0f 4E480000 		.long	0x484e
GAS LISTING /tmp/ccJUMvuF.s 			page 579


 15826 4f13 01       		.byte	0x1
 15827 4f14 1C4F0000 		.long	0x4f1c
 15828 4f18 2C4F0000 		.long	0x4f2c
 15829 4f1c 08       		.uleb128 0x8
 15830 4f1d 29C30000 		.long	0xc329
 15831 4f21 09       		.uleb128 0x9
 15832 4f22 5A480000 		.long	0x485a
 15833 4f26 09       		.uleb128 0x9
 15834 4f27 B2510000 		.long	0x51b2
 15835 4f2b 00       		.byte	0
 15836 4f2c 32       		.uleb128 0x32
 15837 4f2d 00000000 		.long	.LASF218
 15838 4f31 06       		.byte	0x6
 15839 4f32 1B04     		.value	0x41b
 15840 4f34 00000000 		.long	.LASF721
 15841 4f38 4E480000 		.long	0x484e
 15842 4f3c 01       		.byte	0x1
 15843 4f3d 454F0000 		.long	0x4f45
 15844 4f41 5A4F0000 		.long	0x4f5a
 15845 4f45 08       		.uleb128 0x8
 15846 4f46 29C30000 		.long	0xc329
 15847 4f4a 09       		.uleb128 0x9
 15848 4f4b 5A480000 		.long	0x485a
 15849 4f4f 09       		.uleb128 0x9
 15850 4f50 7E480000 		.long	0x487e
 15851 4f54 09       		.uleb128 0x9
 15852 4f55 35C30000 		.long	0xc335
 15853 4f59 00       		.byte	0
 15854 4f5a 32       		.uleb128 0x32
 15855 4f5b 00000000 		.long	.LASF227
 15856 4f5f 06       		.byte	0x6
 15857 4f60 7A04     		.value	0x47a
 15858 4f62 00000000 		.long	.LASF722
 15859 4f66 4E480000 		.long	0x484e
 15860 4f6a 01       		.byte	0x1
 15861 4f6b 734F0000 		.long	0x4f73
 15862 4f6f 7E4F0000 		.long	0x4f7e
 15863 4f73 08       		.uleb128 0x8
 15864 4f74 29C30000 		.long	0xc329
 15865 4f78 09       		.uleb128 0x9
 15866 4f79 5A480000 		.long	0x485a
 15867 4f7d 00       		.byte	0
 15868 4f7e 32       		.uleb128 0x32
 15869 4f7f 00000000 		.long	.LASF227
 15870 4f83 06       		.byte	0x6
 15871 4f84 9504     		.value	0x495
 15872 4f86 00000000 		.long	.LASF723
 15873 4f8a 4E480000 		.long	0x484e
 15874 4f8e 01       		.byte	0x1
 15875 4f8f 974F0000 		.long	0x4f97
 15876 4f93 A74F0000 		.long	0x4fa7
 15877 4f97 08       		.uleb128 0x8
 15878 4f98 29C30000 		.long	0xc329
 15879 4f9c 09       		.uleb128 0x9
 15880 4f9d 5A480000 		.long	0x485a
 15881 4fa1 09       		.uleb128 0x9
 15882 4fa2 5A480000 		.long	0x485a
GAS LISTING /tmp/ccJUMvuF.s 			page 580


 15883 4fa6 00       		.byte	0
 15884 4fa7 34       		.uleb128 0x34
 15885 4fa8 00000000 		.long	.LASF13
 15886 4fac 06       		.byte	0x6
 15887 4fad AA04     		.value	0x4aa
 15888 4faf 00000000 		.long	.LASF724
 15889 4fb3 01       		.byte	0x1
 15890 4fb4 BC4F0000 		.long	0x4fbc
 15891 4fb8 C74F0000 		.long	0x4fc7
 15892 4fbc 08       		.uleb128 0x8
 15893 4fbd 29C30000 		.long	0xc329
 15894 4fc1 09       		.uleb128 0x9
 15895 4fc2 48C30000 		.long	0xc348
 15896 4fc6 00       		.byte	0
 15897 4fc7 34       		.uleb128 0x34
 15898 4fc8 00000000 		.long	.LASF182
 15899 4fcc 06       		.byte	0x6
 15900 4fcd BB04     		.value	0x4bb
 15901 4fcf 00000000 		.long	.LASF725
 15902 4fd3 01       		.byte	0x1
 15903 4fd4 DC4F0000 		.long	0x4fdc
 15904 4fd8 E24F0000 		.long	0x4fe2
 15905 4fdc 08       		.uleb128 0x8
 15906 4fdd 29C30000 		.long	0xc329
 15907 4fe1 00       		.byte	0
 15908 4fe2 34       		.uleb128 0x34
 15909 4fe3 00000000 		.long	.LASF621
 15910 4fe7 06       		.byte	0x6
 15911 4fe8 1205     		.value	0x512
 15912 4fea 00000000 		.long	.LASF726
 15913 4fee 02       		.byte	0x2
 15914 4fef F74F0000 		.long	0x4ff7
 15915 4ff3 07500000 		.long	0x5007
 15916 4ff7 08       		.uleb128 0x8
 15917 4ff8 29C30000 		.long	0xc329
 15918 4ffc 09       		.uleb128 0x9
 15919 4ffd 7E480000 		.long	0x487e
 15920 5001 09       		.uleb128 0x9
 15921 5002 35C30000 		.long	0xc335
 15922 5006 00       		.byte	0
 15923 5007 34       		.uleb128 0x34
 15924 5008 00000000 		.long	.LASF623
 15925 500c 06       		.byte	0x6
 15926 500d 1C05     		.value	0x51c
 15927 500f 00000000 		.long	.LASF727
 15928 5013 02       		.byte	0x2
 15929 5014 1C500000 		.long	0x501c
 15930 5018 27500000 		.long	0x5027
 15931 501c 08       		.uleb128 0x8
 15932 501d 29C30000 		.long	0xc329
 15933 5021 09       		.uleb128 0x9
 15934 5022 7E480000 		.long	0x487e
 15935 5026 00       		.byte	0
 15936 5027 0E       		.uleb128 0xe
 15937 5028 00000000 		.long	.LASF625
 15938 502c 30       		.byte	0x30
 15939 502d E1       		.byte	0xe1
GAS LISTING /tmp/ccJUMvuF.s 			page 581


 15940 502e 00000000 		.long	.LASF728
 15941 5032 02       		.byte	0x2
 15942 5033 3B500000 		.long	0x503b
 15943 5037 4B500000 		.long	0x504b
 15944 503b 08       		.uleb128 0x8
 15945 503c 29C30000 		.long	0xc329
 15946 5040 09       		.uleb128 0x9
 15947 5041 85060000 		.long	0x685
 15948 5045 09       		.uleb128 0x9
 15949 5046 35C30000 		.long	0xc335
 15950 504a 00       		.byte	0
 15951 504b 34       		.uleb128 0x34
 15952 504c 00000000 		.long	.LASF627
 15953 5050 30       		.byte	0x30
 15954 5051 C101     		.value	0x1c1
 15955 5053 00000000 		.long	.LASF729
 15956 5057 02       		.byte	0x2
 15957 5058 60500000 		.long	0x5060
 15958 505c 75500000 		.long	0x5075
 15959 5060 08       		.uleb128 0x8
 15960 5061 29C30000 		.long	0xc329
 15961 5065 09       		.uleb128 0x9
 15962 5066 4E480000 		.long	0x484e
 15963 506a 09       		.uleb128 0x9
 15964 506b 7E480000 		.long	0x487e
 15965 506f 09       		.uleb128 0x9
 15966 5070 35C30000 		.long	0xc335
 15967 5074 00       		.byte	0
 15968 5075 34       		.uleb128 0x34
 15969 5076 00000000 		.long	.LASF629
 15970 507a 30       		.byte	0x30
 15971 507b 1C02     		.value	0x21c
 15972 507d 00000000 		.long	.LASF730
 15973 5081 02       		.byte	0x2
 15974 5082 8A500000 		.long	0x508a
 15975 5086 95500000 		.long	0x5095
 15976 508a 08       		.uleb128 0x8
 15977 508b 29C30000 		.long	0xc329
 15978 508f 09       		.uleb128 0x9
 15979 5090 7E480000 		.long	0x487e
 15980 5094 00       		.byte	0
 15981 5095 32       		.uleb128 0x32
 15982 5096 00000000 		.long	.LASF631
 15983 509a 30       		.byte	0x30
 15984 509b 4E02     		.value	0x24e
 15985 509d 00000000 		.long	.LASF731
 15986 50a1 30930000 		.long	0x9330
 15987 50a5 02       		.byte	0x2
 15988 50a6 AE500000 		.long	0x50ae
 15989 50aa B4500000 		.long	0x50b4
 15990 50ae 08       		.uleb128 0x8
 15991 50af 29C30000 		.long	0xc329
 15992 50b3 00       		.byte	0
 15993 50b4 32       		.uleb128 0x32
 15994 50b5 00000000 		.long	.LASF633
 15995 50b9 06       		.byte	0x6
 15996 50ba 8E05     		.value	0x58e
GAS LISTING /tmp/ccJUMvuF.s 			page 582


 15997 50bc 00000000 		.long	.LASF732
 15998 50c0 7E480000 		.long	0x487e
 15999 50c4 02       		.byte	0x2
 16000 50c5 CD500000 		.long	0x50cd
 16001 50c9 DD500000 		.long	0x50dd
 16002 50cd 08       		.uleb128 0x8
 16003 50ce 4EC30000 		.long	0xc34e
 16004 50d2 09       		.uleb128 0x9
 16005 50d3 7E480000 		.long	0x487e
 16006 50d7 09       		.uleb128 0x9
 16007 50d8 CEAE0000 		.long	0xaece
 16008 50dc 00       		.byte	0
 16009 50dd 34       		.uleb128 0x34
 16010 50de 00000000 		.long	.LASF635
 16011 50e2 06       		.byte	0x6
 16012 50e3 9C05     		.value	0x59c
 16013 50e5 00000000 		.long	.LASF733
 16014 50e9 02       		.byte	0x2
 16015 50ea F2500000 		.long	0x50f2
 16016 50ee FD500000 		.long	0x50fd
 16017 50f2 08       		.uleb128 0x8
 16018 50f3 29C30000 		.long	0xc329
 16019 50f7 09       		.uleb128 0x9
 16020 50f8 2A480000 		.long	0x482a
 16021 50fc 00       		.byte	0
 16022 50fd 0D       		.uleb128 0xd
 16023 50fe 00000000 		.long	.LASF637
 16024 5102 30       		.byte	0x30
 16025 5103 8D       		.byte	0x8d
 16026 5104 00000000 		.long	.LASF734
 16027 5108 4E480000 		.long	0x484e
 16028 510c 02       		.byte	0x2
 16029 510d 15510000 		.long	0x5115
 16030 5111 20510000 		.long	0x5120
 16031 5115 08       		.uleb128 0x8
 16032 5116 29C30000 		.long	0xc329
 16033 511a 09       		.uleb128 0x9
 16034 511b 4E480000 		.long	0x484e
 16035 511f 00       		.byte	0
 16036 5120 0D       		.uleb128 0xd
 16037 5121 00000000 		.long	.LASF637
 16038 5125 30       		.byte	0x30
 16039 5126 99       		.byte	0x99
 16040 5127 00000000 		.long	.LASF735
 16041 512b 4E480000 		.long	0x484e
 16042 512f 02       		.byte	0x2
 16043 5130 38510000 		.long	0x5138
 16044 5134 48510000 		.long	0x5148
 16045 5138 08       		.uleb128 0x8
 16046 5139 29C30000 		.long	0xc329
 16047 513d 09       		.uleb128 0x9
 16048 513e 4E480000 		.long	0x484e
 16049 5142 09       		.uleb128 0x9
 16050 5143 4E480000 		.long	0x484e
 16051 5147 00       		.byte	0
 16052 5148 2B       		.uleb128 0x2b
 16053 5149 00000000 		.long	.LASF640
GAS LISTING /tmp/ccJUMvuF.s 			page 583


 16054 514d 06       		.byte	0x6
 16055 514e AE05     		.value	0x5ae
 16056 5150 00000000 		.long	.LASF736
 16057 5154 5C510000 		.long	0x515c
 16058 5158 6C510000 		.long	0x516c
 16059 515c 08       		.uleb128 0x8
 16060 515d 29C30000 		.long	0xc329
 16061 5161 09       		.uleb128 0x9
 16062 5162 41C30000 		.long	0xc341
 16063 5166 09       		.uleb128 0x9
 16064 5167 5F070000 		.long	0x75f
 16065 516b 00       		.byte	0
 16066 516c 2B       		.uleb128 0x2b
 16067 516d 00000000 		.long	.LASF640
 16068 5171 06       		.byte	0x6
 16069 5172 B905     		.value	0x5b9
 16070 5174 00000000 		.long	.LASF737
 16071 5178 80510000 		.long	0x5180
 16072 517c 90510000 		.long	0x5190
 16073 5180 08       		.uleb128 0x8
 16074 5181 29C30000 		.long	0xc329
 16075 5185 09       		.uleb128 0x9
 16076 5186 41C30000 		.long	0xc341
 16077 518a 09       		.uleb128 0x9
 16078 518b A4340000 		.long	0x34a4
 16079 518f 00       		.byte	0
 16080 5190 18       		.uleb128 0x18
 16081 5191 5F547000 		.string	"_Tp"
 16082 5195 68930000 		.long	0x9368
 16083 5199 36       		.uleb128 0x36
 16084 519a 00000000 		.long	.LASF303
 16085 519e 25420000 		.long	0x4225
 16086 51a2 00       		.byte	0
 16087 51a3 14       		.uleb128 0x14
 16088 51a4 00000000 		.long	.LASF738
 16089 51a8 14       		.uleb128 0x14
 16090 51a9 00000000 		.long	.LASF739
 16091 51ad 11       		.uleb128 0x11
 16092 51ae E8470000 		.long	0x47e8
 16093 51b2 05       		.uleb128 0x5
 16094 51b3 00000000 		.long	.LASF740
 16095 51b7 10       		.byte	0x10
 16096 51b8 26       		.byte	0x26
 16097 51b9 2F       		.byte	0x2f
 16098 51ba 92520000 		.long	0x5292
 16099 51be 22       		.uleb128 0x22
 16100 51bf 00000000 		.long	.LASF68
 16101 51c3 26       		.byte	0x26
 16102 51c4 36       		.byte	0x36
 16103 51c5 9EC20000 		.long	0xc29e
 16104 51c9 01       		.byte	0x1
 16105 51ca 06       		.uleb128 0x6
 16106 51cb 00000000 		.long	.LASF308
 16107 51cf 26       		.byte	0x26
 16108 51d0 3A       		.byte	0x3a
 16109 51d1 BE510000 		.long	0x51be
 16110 51d5 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 584


 16111 51d6 22       		.uleb128 0x22
 16112 51d7 00000000 		.long	.LASF57
 16113 51db 26       		.byte	0x26
 16114 51dc 35       		.byte	0x35
 16115 51dd 85060000 		.long	0x685
 16116 51e1 01       		.byte	0x1
 16117 51e2 06       		.uleb128 0x6
 16118 51e3 00000000 		.long	.LASF309
 16119 51e7 26       		.byte	0x26
 16120 51e8 3B       		.byte	0x3b
 16121 51e9 D6510000 		.long	0x51d6
 16122 51ed 08       		.byte	0x8
 16123 51ee 22       		.uleb128 0x22
 16124 51ef 00000000 		.long	.LASF69
 16125 51f3 26       		.byte	0x26
 16126 51f4 37       		.byte	0x37
 16127 51f5 9EC20000 		.long	0xc29e
 16128 51f9 01       		.byte	0x1
 16129 51fa 37       		.uleb128 0x37
 16130 51fb 00000000 		.long	.LASF310
 16131 51ff 26       		.byte	0x26
 16132 5200 3E       		.byte	0x3e
 16133 5201 09520000 		.long	0x5209
 16134 5205 19520000 		.long	0x5219
 16135 5209 08       		.uleb128 0x8
 16136 520a 6DC50000 		.long	0xc56d
 16137 520e 09       		.uleb128 0x9
 16138 520f EE510000 		.long	0x51ee
 16139 5213 09       		.uleb128 0x9
 16140 5214 D6510000 		.long	0x51d6
 16141 5218 00       		.byte	0
 16142 5219 0C       		.uleb128 0xc
 16143 521a 00000000 		.long	.LASF310
 16144 521e 26       		.byte	0x26
 16145 521f 42       		.byte	0x42
 16146 5220 01       		.byte	0x1
 16147 5221 29520000 		.long	0x5229
 16148 5225 2F520000 		.long	0x522f
 16149 5229 08       		.uleb128 0x8
 16150 522a 6DC50000 		.long	0xc56d
 16151 522e 00       		.byte	0
 16152 522f 0D       		.uleb128 0xd
 16153 5230 00000000 		.long	.LASF168
 16154 5234 26       		.byte	0x26
 16155 5235 47       		.byte	0x47
 16156 5236 00000000 		.long	.LASF741
 16157 523a D6510000 		.long	0x51d6
 16158 523e 01       		.byte	0x1
 16159 523f 47520000 		.long	0x5247
 16160 5243 4D520000 		.long	0x524d
 16161 5247 08       		.uleb128 0x8
 16162 5248 73C50000 		.long	0xc573
 16163 524c 00       		.byte	0
 16164 524d 0D       		.uleb128 0xd
 16165 524e 00000000 		.long	.LASF149
 16166 5252 26       		.byte	0x26
 16167 5253 4B       		.byte	0x4b
GAS LISTING /tmp/ccJUMvuF.s 			page 585


 16168 5254 00000000 		.long	.LASF742
 16169 5258 EE510000 		.long	0x51ee
 16170 525c 01       		.byte	0x1
 16171 525d 65520000 		.long	0x5265
 16172 5261 6B520000 		.long	0x526b
 16173 5265 08       		.uleb128 0x8
 16174 5266 73C50000 		.long	0xc573
 16175 526a 00       		.byte	0
 16176 526b 38       		.uleb128 0x38
 16177 526c 656E6400 		.string	"end"
 16178 5270 26       		.byte	0x26
 16179 5271 4F       		.byte	0x4f
 16180 5272 00000000 		.long	.LASF743
 16181 5276 EE510000 		.long	0x51ee
 16182 527a 01       		.byte	0x1
 16183 527b 83520000 		.long	0x5283
 16184 527f 89520000 		.long	0x5289
 16185 5283 08       		.uleb128 0x8
 16186 5284 73C50000 		.long	0xc573
 16187 5288 00       		.byte	0
 16188 5289 18       		.uleb128 0x18
 16189 528a 5F4500   		.string	"_E"
 16190 528d 68930000 		.long	0x9368
 16191 5291 00       		.byte	0
 16192 5292 16       		.uleb128 0x16
 16193 5293 00000000 		.long	.LASF744
 16194 5297 01       		.byte	0x1
 16195 5298 31       		.byte	0x31
 16196 5299 AF       		.byte	0xaf
 16197 529a D4520000 		.long	0x52d4
 16198 529e 13       		.uleb128 0x13
 16199 529f 00000000 		.long	.LASF19
 16200 52a3 31       		.byte	0x31
 16201 52a4 B2       		.byte	0xb2
 16202 52a5 29000000 		.long	0x29
 16203 52a9 13       		.uleb128 0x13
 16204 52aa 00000000 		.long	.LASF498
 16205 52ae 31       		.byte	0x31
 16206 52af B3       		.byte	0xb3
 16207 52b0 54070000 		.long	0x754
 16208 52b4 13       		.uleb128 0x13
 16209 52b5 00000000 		.long	.LASF491
 16210 52b9 31       		.byte	0x31
 16211 52ba B4       		.byte	0xb4
 16212 52bb C9C10000 		.long	0xc1c9
 16213 52bf 13       		.uleb128 0x13
 16214 52c0 00000000 		.long	.LASF58
 16215 52c4 31       		.byte	0x31
 16216 52c5 B5       		.byte	0xb5
 16217 52c6 DAC10000 		.long	0xc1da
 16218 52ca 35       		.uleb128 0x35
 16219 52cb 00000000 		.long	.LASF745
 16220 52cf C9C10000 		.long	0xc1c9
 16221 52d3 00       		.byte	0
 16222 52d4 12       		.uleb128 0x12
 16223 52d5 32       		.byte	0x32
 16224 52d6 50       		.byte	0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 586


 16225 52d7 EDA70000 		.long	0xa7ed
 16226 52db 12       		.uleb128 0x12
 16227 52dc 32       		.byte	0x32
 16228 52dd 51       		.byte	0x51
 16229 52de 0CA80000 		.long	0xa80c
 16230 52e2 12       		.uleb128 0x12
 16231 52e3 32       		.byte	0x32
 16232 52e4 52       		.byte	0x52
 16233 52e5 EDA70000 		.long	0xa7ed
 16234 52e9 12       		.uleb128 0x12
 16235 52ea 32       		.byte	0x32
 16236 52eb 53       		.byte	0x53
 16237 52ec EDA70000 		.long	0xa7ed
 16238 52f0 12       		.uleb128 0x12
 16239 52f1 32       		.byte	0x32
 16240 52f2 54       		.byte	0x54
 16241 52f3 EDA70000 		.long	0xa7ed
 16242 52f7 5F       		.uleb128 0x5f
 16243 52f8 04       		.byte	0x4
 16244 52f9 0D       		.byte	0xd
 16245 52fa 5207     		.value	0x752
 16246 52fc 07530000 		.long	0x5307
 16247 5300 3F       		.uleb128 0x3f
 16248 5301 00000000 		.long	.LASF746
 16249 5305 10       		.sleb128 16
 16250 5306 00       		.byte	0
 16251 5307 16       		.uleb128 0x16
 16252 5308 00000000 		.long	.LASF747
 16253 530c 01       		.byte	0x1
 16254 530d 31       		.byte	0x31
 16255 530e BA       		.byte	0xba
 16256 530f 3E530000 		.long	0x533e
 16257 5313 13       		.uleb128 0x13
 16258 5314 00000000 		.long	.LASF498
 16259 5318 31       		.byte	0x31
 16260 5319 BE       		.byte	0xbe
 16261 531a 54070000 		.long	0x754
 16262 531e 13       		.uleb128 0x13
 16263 531f 00000000 		.long	.LASF491
 16264 5323 31       		.byte	0x31
 16265 5324 BF       		.byte	0xbf
 16266 5325 CFC10000 		.long	0xc1cf
 16267 5329 13       		.uleb128 0x13
 16268 532a 00000000 		.long	.LASF58
 16269 532e 31       		.byte	0x31
 16270 532f C0       		.byte	0xc0
 16271 5330 E0C10000 		.long	0xc1e0
 16272 5334 35       		.uleb128 0x35
 16273 5335 00000000 		.long	.LASF745
 16274 5339 CFC10000 		.long	0xc1cf
 16275 533d 00       		.byte	0
 16276 533e 16       		.uleb128 0x16
 16277 533f 00000000 		.long	.LASF748
 16278 5343 01       		.byte	0x1
 16279 5344 05       		.byte	0x5
 16280 5345 28       		.byte	0x28
 16281 5346 65530000 		.long	0x5365
GAS LISTING /tmp/ccJUMvuF.s 			page 587


 16282 534a 60       		.uleb128 0x60
 16283 534b 00000000 		.long	.LASF464
 16284 534f 05       		.byte	0x5
 16285 5350 29       		.byte	0x29
 16286 5351 00000000 		.long	.LASF750
 16287 5355 59530000 		.long	0x5359
 16288 5359 08       		.uleb128 0x8
 16289 535a 55C50000 		.long	0xc555
 16290 535e 09       		.uleb128 0x9
 16291 535f 5BC50000 		.long	0xc55b
 16292 5363 00       		.byte	0
 16293 5364 00       		.byte	0
 16294 5365 16       		.uleb128 0x16
 16295 5366 00000000 		.long	.LASF751
 16296 536a 01       		.byte	0x1
 16297 536b 05       		.byte	0x5
 16298 536c 2C       		.byte	0x2c
 16299 536d 8C530000 		.long	0x538c
 16300 5371 60       		.uleb128 0x60
 16301 5372 00000000 		.long	.LASF464
 16302 5376 05       		.byte	0x5
 16303 5377 2D       		.byte	0x2d
 16304 5378 00000000 		.long	.LASF752
 16305 537c 80530000 		.long	0x5380
 16306 5380 08       		.uleb128 0x8
 16307 5381 61C50000 		.long	0xc561
 16308 5385 09       		.uleb128 0x9
 16309 5386 67C50000 		.long	0xc567
 16310 538a 00       		.byte	0
 16311 538b 00       		.byte	0
 16312 538c 11       		.uleb128 0x11
 16313 538d B2510000 		.long	0x51b2
 16314 5391 3B       		.uleb128 0x3b
 16315 5392 00000000 		.long	.LASF753
 16316 5396 08       		.byte	0x8
 16317 5397 04       		.byte	0x4
 16318 5398 8406     		.value	0x684
 16319 539a AC550000 		.long	0x55ac
 16320 539e 61       		.uleb128 0x61
 16321 539f 00000000 		.long	.LASF755
 16322 53a3 08       		.byte	0x8
 16323 53a4 04       		.byte	0x4
 16324 53a5 8D06     		.value	0x68d
 16325 53a7 01       		.byte	0x1
 16326 53a8 1D540000 		.long	0x541d
 16327 53ac 62       		.uleb128 0x62
 16328 53ad 00000000 		.long	.LASF318
 16329 53b1 04       		.byte	0x4
 16330 53b2 A606     		.value	0x6a6
 16331 53b4 28930000 		.long	0x9328
 16332 53b8 00       		.byte	0
 16333 53b9 03       		.byte	0x3
 16334 53ba 62       		.uleb128 0x62
 16335 53bb 00000000 		.long	.LASF754
 16336 53bf 04       		.byte	0x4
 16337 53c0 A706     		.value	0x6a7
 16338 53c2 28930000 		.long	0x9328
GAS LISTING /tmp/ccJUMvuF.s 			page 588


 16339 53c6 04       		.byte	0x4
 16340 53c7 03       		.byte	0x3
 16341 53c8 63       		.uleb128 0x63
 16342 53c9 00000000 		.long	.LASF755
 16343 53cd 04       		.byte	0x4
 16344 53ce 9206     		.value	0x692
 16345 53d0 D8530000 		.long	0x53d8
 16346 53d4 E8530000 		.long	0x53e8
 16347 53d8 08       		.uleb128 0x8
 16348 53d9 79C50000 		.long	0xc579
 16349 53dd 09       		.uleb128 0x9
 16350 53de 28930000 		.long	0x9328
 16351 53e2 09       		.uleb128 0x9
 16352 53e3 28930000 		.long	0x9328
 16353 53e7 00       		.byte	0
 16354 53e8 64       		.uleb128 0x64
 16355 53e9 6100     		.string	"a"
 16356 53eb 04       		.byte	0x4
 16357 53ec 9A06     		.value	0x69a
 16358 53ee 00000000 		.long	.LASF1794
 16359 53f2 1D540000 		.long	0x541d
 16360 53f6 FE530000 		.long	0x53fe
 16361 53fa 04540000 		.long	0x5404
 16362 53fe 08       		.uleb128 0x8
 16363 53ff 7FC50000 		.long	0xc57f
 16364 5403 00       		.byte	0
 16365 5404 65       		.uleb128 0x65
 16366 5405 6200     		.string	"b"
 16367 5407 04       		.byte	0x4
 16368 5408 9E06     		.value	0x69e
 16369 540a 00000000 		.long	.LASF1795
 16370 540e 1D540000 		.long	0x541d
 16371 5412 16540000 		.long	0x5416
 16372 5416 08       		.uleb128 0x8
 16373 5417 7FC50000 		.long	0xc57f
 16374 541b 00       		.byte	0
 16375 541c 00       		.byte	0
 16376 541d 44       		.uleb128 0x44
 16377 541e 00000000 		.long	.LASF445
 16378 5422 04       		.byte	0x4
 16379 5423 8B06     		.value	0x68b
 16380 5425 28930000 		.long	0x9328
 16381 5429 01       		.byte	0x1
 16382 542a 11       		.uleb128 0x11
 16383 542b 9E530000 		.long	0x539e
 16384 542f 26       		.uleb128 0x26
 16385 5430 00000000 		.long	.LASF756
 16386 5434 04       		.byte	0x4
 16387 5435 1A07     		.value	0x71a
 16388 5437 9E530000 		.long	0x539e
 16389 543b 00       		.byte	0
 16390 543c 31       		.uleb128 0x31
 16391 543d 00000000 		.long	.LASF757
 16392 5441 04       		.byte	0x4
 16393 5442 AF06     		.value	0x6af
 16394 5444 01       		.byte	0x1
 16395 5445 4D540000 		.long	0x544d
GAS LISTING /tmp/ccJUMvuF.s 			page 589


 16396 5449 5D540000 		.long	0x545d
 16397 544d 08       		.uleb128 0x8
 16398 544e 85C50000 		.long	0xc585
 16399 5452 09       		.uleb128 0x9
 16400 5453 28930000 		.long	0x9328
 16401 5457 09       		.uleb128 0x9
 16402 5458 28930000 		.long	0x9328
 16403 545c 00       		.byte	0
 16404 545d 31       		.uleb128 0x31
 16405 545e 00000000 		.long	.LASF757
 16406 5462 04       		.byte	0x4
 16407 5463 B506     		.value	0x6b5
 16408 5465 01       		.byte	0x1
 16409 5466 6E540000 		.long	0x546e
 16410 546a 79540000 		.long	0x5479
 16411 546e 08       		.uleb128 0x8
 16412 546f 85C50000 		.long	0xc585
 16413 5473 09       		.uleb128 0x9
 16414 5474 8BC50000 		.long	0xc58b
 16415 5478 00       		.byte	0
 16416 5479 34       		.uleb128 0x34
 16417 547a 00000000 		.long	.LASF758
 16418 547e 04       		.byte	0x4
 16419 547f BF06     		.value	0x6bf
 16420 5481 00000000 		.long	.LASF759
 16421 5485 01       		.byte	0x1
 16422 5486 8E540000 		.long	0x548e
 16423 548a 94540000 		.long	0x5494
 16424 548e 08       		.uleb128 0x8
 16425 548f 85C50000 		.long	0xc585
 16426 5493 00       		.byte	0
 16427 5494 33       		.uleb128 0x33
 16428 5495 6100     		.string	"a"
 16429 5497 04       		.byte	0x4
 16430 5498 C206     		.value	0x6c2
 16431 549a 00000000 		.long	.LASF760
 16432 549e 1D540000 		.long	0x541d
 16433 54a2 01       		.byte	0x1
 16434 54a3 AB540000 		.long	0x54ab
 16435 54a7 B1540000 		.long	0x54b1
 16436 54ab 08       		.uleb128 0x8
 16437 54ac 91C50000 		.long	0xc591
 16438 54b0 00       		.byte	0
 16439 54b1 33       		.uleb128 0x33
 16440 54b2 6200     		.string	"b"
 16441 54b4 04       		.byte	0x4
 16442 54b5 C606     		.value	0x6c6
 16443 54b7 00000000 		.long	.LASF761
 16444 54bb 1D540000 		.long	0x541d
 16445 54bf 01       		.byte	0x1
 16446 54c0 C8540000 		.long	0x54c8
 16447 54c4 CE540000 		.long	0x54ce
 16448 54c8 08       		.uleb128 0x8
 16449 54c9 91C50000 		.long	0xc591
 16450 54cd 00       		.byte	0
 16451 54ce 32       		.uleb128 0x32
 16452 54cf 00000000 		.long	.LASF762
GAS LISTING /tmp/ccJUMvuF.s 			page 590


 16453 54d3 04       		.byte	0x4
 16454 54d4 CD06     		.value	0x6cd
 16455 54d6 00000000 		.long	.LASF763
 16456 54da 9E530000 		.long	0x539e
 16457 54de 01       		.byte	0x1
 16458 54df E7540000 		.long	0x54e7
 16459 54e3 ED540000 		.long	0x54ed
 16460 54e7 08       		.uleb128 0x8
 16461 54e8 91C50000 		.long	0xc591
 16462 54ec 00       		.byte	0
 16463 54ed 34       		.uleb128 0x34
 16464 54ee 00000000 		.long	.LASF762
 16465 54f2 04       		.byte	0x4
 16466 54f3 D506     		.value	0x6d5
 16467 54f5 00000000 		.long	.LASF764
 16468 54f9 01       		.byte	0x1
 16469 54fa 02550000 		.long	0x5502
 16470 54fe 0D550000 		.long	0x550d
 16471 5502 08       		.uleb128 0x8
 16472 5503 85C50000 		.long	0xc585
 16473 5507 09       		.uleb128 0x9
 16474 5508 8BC50000 		.long	0xc58b
 16475 550c 00       		.byte	0
 16476 550d 33       		.uleb128 0x33
 16477 550e 6D696E00 		.string	"min"
 16478 5512 04       		.byte	0x4
 16479 5513 DC06     		.value	0x6dc
 16480 5515 00000000 		.long	.LASF765
 16481 5519 1D540000 		.long	0x541d
 16482 551d 01       		.byte	0x1
 16483 551e 26550000 		.long	0x5526
 16484 5522 2C550000 		.long	0x552c
 16485 5526 08       		.uleb128 0x8
 16486 5527 91C50000 		.long	0xc591
 16487 552b 00       		.byte	0
 16488 552c 33       		.uleb128 0x33
 16489 552d 6D617800 		.string	"max"
 16490 5531 04       		.byte	0x4
 16491 5532 E306     		.value	0x6e3
 16492 5534 00000000 		.long	.LASF766
 16493 5538 1D540000 		.long	0x541d
 16494 553c 01       		.byte	0x1
 16495 553d 45550000 		.long	0x5545
 16496 5541 4B550000 		.long	0x554b
 16497 5545 08       		.uleb128 0x8
 16498 5546 91C50000 		.long	0xc591
 16499 554a 00       		.byte	0
 16500 554b 66       		.uleb128 0x66
 16501 554c 00000000 		.long	.LASF767
 16502 5550 04       		.byte	0x4
 16503 5551 EB06     		.value	0x6eb
 16504 5553 1D540000 		.long	0x541d
 16505 5557 01       		.byte	0x1
 16506 5558 69550000 		.long	0x5569
 16507 555c 74550000 		.long	0x5574
 16508 5560 35       		.uleb128 0x35
 16509 5561 00000000 		.long	.LASF768
GAS LISTING /tmp/ccJUMvuF.s 			page 591


 16510 5565 C92C0000 		.long	0x2cc9
 16511 5569 08       		.uleb128 0x8
 16512 556a 85C50000 		.long	0xc585
 16513 556e 09       		.uleb128 0x9
 16514 556f D9C50000 		.long	0xc5d9
 16515 5573 00       		.byte	0
 16516 5574 66       		.uleb128 0x66
 16517 5575 00000000 		.long	.LASF767
 16518 5579 03       		.byte	0x3
 16519 557a 6E03     		.value	0x36e
 16520 557c 1D540000 		.long	0x541d
 16521 5580 01       		.byte	0x1
 16522 5581 92550000 		.long	0x5592
 16523 5585 A2550000 		.long	0x55a2
 16524 5589 35       		.uleb128 0x35
 16525 558a 00000000 		.long	.LASF768
 16526 558e C92C0000 		.long	0x2cc9
 16527 5592 08       		.uleb128 0x8
 16528 5593 85C50000 		.long	0xc585
 16529 5597 09       		.uleb128 0x9
 16530 5598 D9C50000 		.long	0xc5d9
 16531 559c 09       		.uleb128 0x9
 16532 559d 8BC50000 		.long	0xc58b
 16533 55a1 00       		.byte	0
 16534 55a2 36       		.uleb128 0x36
 16535 55a3 00000000 		.long	.LASF769
 16536 55a7 28930000 		.long	0x9328
 16537 55ab 00       		.byte	0
 16538 55ac 11       		.uleb128 0x11
 16539 55ad 91530000 		.long	0x5391
 16540 55b1 16       		.uleb128 0x16
 16541 55b2 00000000 		.long	.LASF770
 16542 55b6 01       		.byte	0x1
 16543 55b7 31       		.byte	0x31
 16544 55b8 AF       		.byte	0xaf
 16545 55b9 E8550000 		.long	0x55e8
 16546 55bd 13       		.uleb128 0x13
 16547 55be 00000000 		.long	.LASF498
 16548 55c2 31       		.byte	0x31
 16549 55c3 B3       		.byte	0xb3
 16550 55c4 54070000 		.long	0x754
 16551 55c8 13       		.uleb128 0x13
 16552 55c9 00000000 		.long	.LASF491
 16553 55cd 31       		.byte	0x31
 16554 55ce B4       		.byte	0xb4
 16555 55cf 98C20000 		.long	0xc298
 16556 55d3 13       		.uleb128 0x13
 16557 55d4 00000000 		.long	.LASF58
 16558 55d8 31       		.byte	0x31
 16559 55d9 B5       		.byte	0xb5
 16560 55da A9C20000 		.long	0xc2a9
 16561 55de 35       		.uleb128 0x35
 16562 55df 00000000 		.long	.LASF745
 16563 55e3 98C20000 		.long	0xc298
 16564 55e7 00       		.byte	0
 16565 55e8 24       		.uleb128 0x24
 16566 55e9 00000000 		.long	.LASF771
GAS LISTING /tmp/ccJUMvuF.s 			page 592


 16567 55ed 01       		.byte	0x1
 16568 55ee 1B       		.byte	0x1b
 16569 55ef E005     		.value	0x5e0
 16570 55f1 02560000 		.long	0x5602
 16571 55f5 5C       		.uleb128 0x5c
 16572 55f6 00000000 		.long	.LASF513
 16573 55fa 1B       		.byte	0x1b
 16574 55fb E105     		.value	0x5e1
 16575 55fd 91530000 		.long	0x5391
 16576 5601 00       		.byte	0
 16577 5602 24       		.uleb128 0x24
 16578 5603 00000000 		.long	.LASF772
 16579 5607 01       		.byte	0x1
 16580 5608 0A       		.byte	0xa
 16581 5609 A704     		.value	0x4a7
 16582 560b 4D560000 		.long	0x564d
 16583 560f 1E       		.uleb128 0x1e
 16584 5610 00000000 		.long	.LASF773
 16585 5614 0A       		.byte	0xa
 16586 5615 AC04     		.value	0x4ac
 16587 5617 00000000 		.long	.LASF774
 16588 561b B4C50000 		.long	0xc5b4
 16589 561f 29560000 		.long	0x5629
 16590 5623 09       		.uleb128 0x9
 16591 5624 B4C50000 		.long	0xc5b4
 16592 5628 00       		.byte	0
 16593 5629 1E       		.uleb128 0x1e
 16594 562a 00000000 		.long	.LASF773
 16595 562e 0A       		.byte	0xa
 16596 562f B004     		.value	0x4b0
 16597 5631 00000000 		.long	.LASF775
 16598 5635 BAC50000 		.long	0xc5ba
 16599 5639 43560000 		.long	0x5643
 16600 563d 09       		.uleb128 0x9
 16601 563e BAC50000 		.long	0xc5ba
 16602 5642 00       		.byte	0
 16603 5643 18       		.uleb128 0x18
 16604 5644 5F547000 		.string	"_Tp"
 16605 5648 91530000 		.long	0x5391
 16606 564c 00       		.byte	0
 16607 564d 24       		.uleb128 0x24
 16608 564e 00000000 		.long	.LASF776
 16609 5652 01       		.byte	0x1
 16610 5653 1B       		.byte	0x1b
 16611 5654 E005     		.value	0x5e0
 16612 5656 67560000 		.long	0x5667
 16613 565a 5C       		.uleb128 0x5c
 16614 565b 00000000 		.long	.LASF513
 16615 565f 1B       		.byte	0x1b
 16616 5660 E105     		.value	0x5e1
 16617 5662 C92C0000 		.long	0x2cc9
 16618 5666 00       		.byte	0
 16619 5667 24       		.uleb128 0x24
 16620 5668 00000000 		.long	.LASF777
 16621 566c 01       		.byte	0x1
 16622 566d 0A       		.byte	0xa
 16623 566e 4106     		.value	0x641
GAS LISTING /tmp/ccJUMvuF.s 			page 593


 16624 5670 9F560000 		.long	0x569f
 16625 5674 5C       		.uleb128 0x5c
 16626 5675 00000000 		.long	.LASF513
 16627 5679 0A       		.byte	0xa
 16628 567a 4606     		.value	0x646
 16629 567c 9F560000 		.long	0x569f
 16630 5680 50       		.uleb128 0x50
 16631 5681 00000000 		.long	.LASF778
 16632 5685 30930000 		.long	0x9330
 16633 5689 00       		.byte	0
 16634 568a 35       		.uleb128 0x35
 16635 568b 00000000 		.long	.LASF779
 16636 568f CAD80000 		.long	0xd8ca
 16637 5693 67       		.uleb128 0x67
 16638 5694 00000000 		.long	.LASF827
 16639 5698 68       		.uleb128 0x68
 16640 5699 D9C50000 		.long	0xc5d9
 16641 569d 00       		.byte	0
 16642 569e 00       		.byte	0
 16643 569f 69       		.uleb128 0x69
 16644 56a0 00000000 		.long	.LASF780
 16645 56a4 9013     		.value	0x1390
 16646 56a6 0A       		.byte	0xa
 16647 56a7 E004     		.value	0x4e0
 16648 56a9 AC570000 		.long	0x57ac
 16649 56ad 25       		.uleb128 0x25
 16650 56ae 0E580000 		.long	0x580e
 16651 56b2 00       		.byte	0
 16652 56b3 62       		.uleb128 0x62
 16653 56b4 00000000 		.long	.LASF781
 16654 56b8 0A       		.byte	0xa
 16655 56b9 E704     		.value	0x4e7
 16656 56bb 91530000 		.long	0x5391
 16657 56bf 00       		.byte	0
 16658 56c0 03       		.byte	0x3
 16659 56c1 62       		.uleb128 0x62
 16660 56c2 00000000 		.long	.LASF782
 16661 56c6 0A       		.byte	0xa
 16662 56c7 E804     		.value	0x4e8
 16663 56c9 175B0000 		.long	0x5b17
 16664 56cd 08       		.byte	0x8
 16665 56ce 03       		.byte	0x3
 16666 56cf 27       		.uleb128 0x27
 16667 56d0 00000000 		.long	.LASF783
 16668 56d4 0A       		.byte	0xa
 16669 56d5 1B05     		.value	0x51b
 16670 56d7 DF560000 		.long	0x56df
 16671 56db EA560000 		.long	0x56ea
 16672 56df 08       		.uleb128 0x8
 16673 56e0 29C60000 		.long	0xc629
 16674 56e4 09       		.uleb128 0x9
 16675 56e5 2FC60000 		.long	0xc62f
 16676 56e9 00       		.byte	0
 16677 56ea 27       		.uleb128 0x27
 16678 56eb 00000000 		.long	.LASF783
 16679 56ef 0A       		.byte	0xa
 16680 56f0 1D05     		.value	0x51d
GAS LISTING /tmp/ccJUMvuF.s 			page 594


 16681 56f2 FA560000 		.long	0x56fa
 16682 56f6 05570000 		.long	0x5705
 16683 56fa 08       		.uleb128 0x8
 16684 56fb 29C60000 		.long	0xc629
 16685 56ff 09       		.uleb128 0x9
 16686 5700 35C60000 		.long	0xc635
 16687 5704 00       		.byte	0
 16688 5705 63       		.uleb128 0x63
 16689 5706 00000000 		.long	.LASF784
 16690 570a 0A       		.byte	0xa
 16691 570b 1205     		.value	0x512
 16692 570d 24570000 		.long	0x5724
 16693 5711 34570000 		.long	0x5734
 16694 5715 6A       		.uleb128 0x6a
 16695 5716 00000000 		.long	.LASF788
 16696 571a 24570000 		.long	0x5724
 16697 571e 68       		.uleb128 0x68
 16698 571f D9C50000 		.long	0xc5d9
 16699 5723 00       		.byte	0
 16700 5724 08       		.uleb128 0x8
 16701 5725 29C60000 		.long	0xc629
 16702 5729 09       		.uleb128 0x9
 16703 572a B4C50000 		.long	0xc5b4
 16704 572e 09       		.uleb128 0x9
 16705 572f D9C50000 		.long	0xc5d9
 16706 5733 00       		.byte	0
 16707 5734 66       		.uleb128 0x66
 16708 5735 00000000 		.long	.LASF785
 16709 5739 0A       		.byte	0xa
 16710 573a ED04     		.value	0x4ed
 16711 573c 28930000 		.long	0x9328
 16712 5740 03       		.byte	0x3
 16713 5741 6A570000 		.long	0x576a
 16714 5745 7A570000 		.long	0x577a
 16715 5749 35       		.uleb128 0x35
 16716 574a 00000000 		.long	.LASF786
 16717 574e 28930000 		.long	0x9328
 16718 5752 6B       		.uleb128 0x6b
 16719 5753 00000000 		.long	.LASF788
 16720 5757 6C       		.uleb128 0x6c
 16721 5758 00000000 		.long	.LASF1693
 16722 575c 0A       		.byte	0xa
 16723 575d EB04     		.value	0x4eb
 16724 575f 6A570000 		.long	0x576a
 16725 5763 6D       		.uleb128 0x6d
 16726 5764 53930000 		.long	0x9353
 16727 5768 00       		.byte	0
 16728 5769 00       		.byte	0
 16729 576a 08       		.uleb128 0x8
 16730 576b 29C60000 		.long	0xc629
 16731 576f 09       		.uleb128 0x9
 16732 5770 F4EA0000 		.long	0xeaf4
 16733 5774 09       		.uleb128 0x9
 16734 5775 3D580000 		.long	0x583d
 16735 5779 00       		.byte	0
 16736 577a 6E       		.uleb128 0x6e
 16737 577b 00000000 		.long	.LASF787
GAS LISTING /tmp/ccJUMvuF.s 			page 595


 16738 577f 0A       		.byte	0xa
 16739 5780 2705     		.value	0x527
 16740 5782 28930000 		.long	0x9328
 16741 5786 9C570000 		.long	0x579c
 16742 578a A2570000 		.long	0x57a2
 16743 578e 6B       		.uleb128 0x6b
 16744 578f 00000000 		.long	.LASF788
 16745 5793 35       		.uleb128 0x35
 16746 5794 00000000 		.long	.LASF786
 16747 5798 28930000 		.long	0x9328
 16748 579c 08       		.uleb128 0x8
 16749 579d 29C60000 		.long	0xc629
 16750 57a1 00       		.byte	0
 16751 57a2 35       		.uleb128 0x35
 16752 57a3 00000000 		.long	.LASF789
 16753 57a7 B86B0100 		.long	0x16bb8
 16754 57ab 00       		.byte	0
 16755 57ac 16       		.uleb128 0x16
 16756 57ad 00000000 		.long	.LASF790
 16757 57b1 01       		.byte	0x1
 16758 57b2 0A       		.byte	0xa
 16759 57b3 4E       		.byte	0x4e
 16760 57b4 DF570000 		.long	0x57df
 16761 57b8 6F       		.uleb128 0x6f
 16762 57b9 00000000 		.long	.LASF791
 16763 57bd C5570000 		.long	0x57c5
 16764 57c1 CB570000 		.long	0x57cb
 16765 57c5 08       		.uleb128 0x8
 16766 57c6 5BCD0000 		.long	0xcd5b
 16767 57ca 00       		.byte	0
 16768 57cb 50       		.uleb128 0x50
 16769 57cc 00000000 		.long	.LASF792
 16770 57d0 30930000 		.long	0x9330
 16771 57d4 01       		.byte	0x1
 16772 57d5 35       		.uleb128 0x35
 16773 57d6 00000000 		.long	.LASF793
 16774 57da 91530000 		.long	0x5391
 16775 57de 00       		.byte	0
 16776 57df 16       		.uleb128 0x16
 16777 57e0 00000000 		.long	.LASF794
 16778 57e4 01       		.byte	0x1
 16779 57e5 0A       		.byte	0xa
 16780 57e6 56       		.byte	0x56
 16781 57e7 0E580000 		.long	0x580e
 16782 57eb 25       		.uleb128 0x25
 16783 57ec AC570000 		.long	0x57ac
 16784 57f0 00       		.byte	0
 16785 57f1 6F       		.uleb128 0x6f
 16786 57f2 00000000 		.long	.LASF795
 16787 57f6 FE570000 		.long	0x57fe
 16788 57fa 04580000 		.long	0x5804
 16789 57fe 08       		.uleb128 0x8
 16790 57ff 82CD0000 		.long	0xcd82
 16791 5803 00       		.byte	0
 16792 5804 35       		.uleb128 0x35
 16793 5805 00000000 		.long	.LASF793
 16794 5809 91530000 		.long	0x5391
GAS LISTING /tmp/ccJUMvuF.s 			page 596


 16795 580d 00       		.byte	0
 16796 580e 16       		.uleb128 0x16
 16797 580f 00000000 		.long	.LASF796
 16798 5813 01       		.byte	0x1
 16799 5814 0A       		.byte	0xa
 16800 5815 B8       		.byte	0xb8
 16801 5816 3D580000 		.long	0x583d
 16802 581a 25       		.uleb128 0x25
 16803 581b DF570000 		.long	0x57df
 16804 581f 00       		.byte	0
 16805 5820 6F       		.uleb128 0x6f
 16806 5821 00000000 		.long	.LASF797
 16807 5825 2D580000 		.long	0x582d
 16808 5829 33580000 		.long	0x5833
 16809 582d 08       		.uleb128 0x8
 16810 582e 65D80000 		.long	0xd865
 16811 5832 00       		.byte	0
 16812 5833 35       		.uleb128 0x35
 16813 5834 00000000 		.long	.LASF793
 16814 5838 91530000 		.long	0x5391
 16815 583c 00       		.byte	0
 16816 583d 16       		.uleb128 0x16
 16817 583e 00000000 		.long	.LASF798
 16818 5842 01       		.byte	0x1
 16819 5843 33       		.byte	0x33
 16820 5844 CE       		.byte	0xce
 16821 5845 4B580000 		.long	0x584b
 16822 5849 70       		.uleb128 0x70
 16823 584a 00       		.byte	0
 16824 584b 16       		.uleb128 0x16
 16825 584c 00000000 		.long	.LASF799
 16826 5850 01       		.byte	0x1
 16827 5851 0B       		.byte	0xb
 16828 5852 BF       		.byte	0xbf
 16829 5853 9B580000 		.long	0x589b
 16830 5857 37       		.uleb128 0x37
 16831 5858 00000000 		.long	.LASF800
 16832 585c 0B       		.byte	0xb
 16833 585d C3       		.byte	0xc3
 16834 585e 66580000 		.long	0x5866
 16835 5862 6C580000 		.long	0x586c
 16836 5866 08       		.uleb128 0x8
 16837 5867 C1C50000 		.long	0xc5c1
 16838 586b 00       		.byte	0
 16839 586c 0E       		.uleb128 0xe
 16840 586d 00000000 		.long	.LASF801
 16841 5871 0B       		.byte	0xb
 16842 5872 CF       		.byte	0xcf
 16843 5873 00000000 		.long	.LASF802
 16844 5877 02       		.byte	0x2
 16845 5878 80580000 		.long	0x5880
 16846 587c 8B580000 		.long	0x588b
 16847 5880 08       		.uleb128 0x8
 16848 5881 C1C50000 		.long	0xc5c1
 16849 5885 09       		.uleb128 0x9
 16850 5886 C7C50000 		.long	0xc5c7
 16851 588a 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 597


 16852 588b 50       		.uleb128 0x50
 16853 588c 00000000 		.long	.LASF803
 16854 5890 53930000 		.long	0x9353
 16855 5894 01       		.byte	0x1
 16856 5895 6B       		.uleb128 0x6b
 16857 5896 00000000 		.long	.LASF804
 16858 589a 00       		.byte	0
 16859 589b 71       		.uleb128 0x71
 16860 589c 00000000 		.long	.LASF805
 16861 58a0 8813     		.value	0x1388
 16862 58a2 0B       		.byte	0xb
 16863 58a3 80       		.byte	0x80
 16864 58a4 70590000 		.long	0x5970
 16865 58a8 06       		.uleb128 0x6
 16866 58a9 00000000 		.long	.LASF806
 16867 58ad 0B       		.byte	0xb
 16868 58ae AC       		.byte	0xac
 16869 58af C92C0000 		.long	0x2cc9
 16870 58b3 00       		.byte	0
 16871 58b4 37       		.uleb128 0x37
 16872 58b5 00000000 		.long	.LASF807
 16873 58b9 0B       		.byte	0xb
 16874 58ba 82       		.byte	0x82
 16875 58bb C3580000 		.long	0x58c3
 16876 58bf C9580000 		.long	0x58c9
 16877 58c3 08       		.uleb128 0x8
 16878 58c4 CDC50000 		.long	0xc5cd
 16879 58c8 00       		.byte	0
 16880 58c9 37       		.uleb128 0x37
 16881 58ca 00000000 		.long	.LASF807
 16882 58ce 0B       		.byte	0xb
 16883 58cf 85       		.byte	0x85
 16884 58d0 D8580000 		.long	0x58d8
 16885 58d4 E3580000 		.long	0x58e3
 16886 58d8 08       		.uleb128 0x8
 16887 58d9 CDC50000 		.long	0xc5cd
 16888 58dd 09       		.uleb128 0x9
 16889 58de D3C50000 		.long	0xc5d3
 16890 58e2 00       		.byte	0
 16891 58e3 37       		.uleb128 0x37
 16892 58e4 00000000 		.long	.LASF807
 16893 58e8 0B       		.byte	0xb
 16894 58e9 8E       		.byte	0x8e
 16895 58ea F2580000 		.long	0x58f2
 16896 58ee FD580000 		.long	0x58fd
 16897 58f2 08       		.uleb128 0x8
 16898 58f3 CDC50000 		.long	0xc5cd
 16899 58f7 09       		.uleb128 0x9
 16900 58f8 E4230000 		.long	0x23e4
 16901 58fc 00       		.byte	0
 16902 58fd 4E       		.uleb128 0x4e
 16903 58fe 00000000 		.long	.LASF808
 16904 5902 0B       		.byte	0xb
 16905 5903 A7       		.byte	0xa7
 16906 5904 00000000 		.long	.LASF809
 16907 5908 D9C50000 		.long	0xc5d9
 16908 590c 16590000 		.long	0x5916
GAS LISTING /tmp/ccJUMvuF.s 			page 598


 16909 5910 09       		.uleb128 0x9
 16910 5911 DFC50000 		.long	0xc5df
 16911 5915 00       		.byte	0
 16912 5916 4E       		.uleb128 0x4e
 16913 5917 00000000 		.long	.LASF808
 16914 591b 0B       		.byte	0xb
 16915 591c AA       		.byte	0xaa
 16916 591d 00000000 		.long	.LASF810
 16917 5921 D3C50000 		.long	0xc5d3
 16918 5925 2F590000 		.long	0x592f
 16919 5929 09       		.uleb128 0x9
 16920 592a E5C50000 		.long	0xc5e5
 16921 592e 00       		.byte	0
 16922 592f 37       		.uleb128 0x37
 16923 5930 00000000 		.long	.LASF811
 16924 5934 0B       		.byte	0xb
 16925 5935 8B       		.byte	0x8b
 16926 5936 47590000 		.long	0x5947
 16927 593a 52590000 		.long	0x5952
 16928 593e 35       		.uleb128 0x35
 16929 593f 00000000 		.long	.LASF812
 16930 5943 D9C50000 		.long	0xc5d9
 16931 5947 08       		.uleb128 0x8
 16932 5948 CDC50000 		.long	0xc5cd
 16933 594c 09       		.uleb128 0x9
 16934 594d D9C50000 		.long	0xc5d9
 16935 5951 00       		.byte	0
 16936 5952 50       		.uleb128 0x50
 16937 5953 00000000 		.long	.LASF803
 16938 5957 53930000 		.long	0x9353
 16939 595b 00       		.byte	0
 16940 595c 35       		.uleb128 0x35
 16941 595d 00000000 		.long	.LASF813
 16942 5961 C92C0000 		.long	0x2cc9
 16943 5965 50       		.uleb128 0x50
 16944 5966 00000000 		.long	.LASF814
 16945 596a 30930000 		.long	0x9330
 16946 596e 00       		.byte	0
 16947 596f 00       		.byte	0
 16948 5970 11       		.uleb128 0x11
 16949 5971 C92C0000 		.long	0x2cc9
 16950 5975 11       		.uleb128 0x11
 16951 5976 9B580000 		.long	0x589b
 16952 597a 71       		.uleb128 0x71
 16953 597b 00000000 		.long	.LASF815
 16954 597f 8813     		.value	0x1388
 16955 5981 0B       		.byte	0xb
 16956 5982 E5       		.byte	0xe5
 16957 5983 125B0000 		.long	0x5b12
 16958 5987 25       		.uleb128 0x25
 16959 5988 4B580000 		.long	0x584b
 16960 598c 00       		.byte	0
 16961 598d 21       		.uleb128 0x21
 16962 598e 9B580000 		.long	0x589b
 16963 5992 00       		.byte	0
 16964 5993 03       		.byte	0x3
 16965 5994 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 599


 16966 5995 00000000 		.long	.LASF816
 16967 5999 0B       		.byte	0xb
 16968 599a EB       		.byte	0xeb
 16969 599b 4B580000 		.long	0x584b
 16970 599f 4E       		.uleb128 0x4e
 16971 59a0 00000000 		.long	.LASF808
 16972 59a4 0B       		.byte	0xb
 16973 59a5 EF       		.byte	0xef
 16974 59a6 00000000 		.long	.LASF817
 16975 59aa D9C50000 		.long	0xc5d9
 16976 59ae B8590000 		.long	0x59b8
 16977 59b2 09       		.uleb128 0x9
 16978 59b3 EBC50000 		.long	0xc5eb
 16979 59b7 00       		.byte	0
 16980 59b8 4E       		.uleb128 0x4e
 16981 59b9 00000000 		.long	.LASF808
 16982 59bd 0B       		.byte	0xb
 16983 59be F2       		.byte	0xf2
 16984 59bf 00000000 		.long	.LASF818
 16985 59c3 D3C50000 		.long	0xc5d3
 16986 59c7 D1590000 		.long	0x59d1
 16987 59cb 09       		.uleb128 0x9
 16988 59cc F1C50000 		.long	0xc5f1
 16989 59d0 00       		.byte	0
 16990 59d1 4E       		.uleb128 0x4e
 16991 59d2 00000000 		.long	.LASF819
 16992 59d6 0B       		.byte	0xb
 16993 59d7 F5       		.byte	0xf5
 16994 59d8 00000000 		.long	.LASF820
 16995 59dc F7C50000 		.long	0xc5f7
 16996 59e0 EA590000 		.long	0x59ea
 16997 59e4 09       		.uleb128 0x9
 16998 59e5 EBC50000 		.long	0xc5eb
 16999 59e9 00       		.byte	0
 17000 59ea 4E       		.uleb128 0x4e
 17001 59eb 00000000 		.long	.LASF819
 17002 59ef 0B       		.byte	0xb
 17003 59f0 F8       		.byte	0xf8
 17004 59f1 00000000 		.long	.LASF821
 17005 59f5 FDC50000 		.long	0xc5fd
 17006 59f9 035A0000 		.long	0x5a03
 17007 59fd 09       		.uleb128 0x9
 17008 59fe F1C50000 		.long	0xc5f1
 17009 5a02 00       		.byte	0
 17010 5a03 11       		.uleb128 0x11
 17011 5a04 94590000 		.long	0x5994
 17012 5a08 37       		.uleb128 0x37
 17013 5a09 00000000 		.long	.LASF800
 17014 5a0d 0B       		.byte	0xb
 17015 5a0e FA       		.byte	0xfa
 17016 5a0f 175A0000 		.long	0x5a17
 17017 5a13 1D5A0000 		.long	0x5a1d
 17018 5a17 08       		.uleb128 0x8
 17019 5a18 03C60000 		.long	0xc603
 17020 5a1c 00       		.byte	0
 17021 5a1d 07       		.uleb128 0x7
 17022 5a1e 00000000 		.long	.LASF800
GAS LISTING /tmp/ccJUMvuF.s 			page 600


 17023 5a22 0B       		.byte	0xb
 17024 5a23 FE       		.byte	0xfe
 17025 5a24 2C5A0000 		.long	0x5a2c
 17026 5a28 375A0000 		.long	0x5a37
 17027 5a2c 08       		.uleb128 0x8
 17028 5a2d 03C60000 		.long	0xc603
 17029 5a31 09       		.uleb128 0x9
 17030 5a32 D3C50000 		.long	0xc5d3
 17031 5a36 00       		.byte	0
 17032 5a37 27       		.uleb128 0x27
 17033 5a38 00000000 		.long	.LASF800
 17034 5a3c 0B       		.byte	0xb
 17035 5a3d 0801     		.value	0x108
 17036 5a3f 475A0000 		.long	0x5a47
 17037 5a43 525A0000 		.long	0x5a52
 17038 5a47 08       		.uleb128 0x8
 17039 5a48 03C60000 		.long	0xc603
 17040 5a4c 09       		.uleb128 0x9
 17041 5a4d F1C50000 		.long	0xc5f1
 17042 5a51 00       		.byte	0
 17043 5a52 27       		.uleb128 0x27
 17044 5a53 00000000 		.long	.LASF800
 17045 5a57 0B       		.byte	0xb
 17046 5a58 0B01     		.value	0x10b
 17047 5a5a 625A0000 		.long	0x5a62
 17048 5a5e 6D5A0000 		.long	0x5a6d
 17049 5a62 08       		.uleb128 0x8
 17050 5a63 03C60000 		.long	0xc603
 17051 5a67 09       		.uleb128 0x9
 17052 5a68 09C60000 		.long	0xc609
 17053 5a6c 00       		.byte	0
 17054 5a6d 2C       		.uleb128 0x2c
 17055 5a6e 00000000 		.long	.LASF8
 17056 5a72 0B       		.byte	0xb
 17057 5a73 5001     		.value	0x150
 17058 5a75 00000000 		.long	.LASF822
 17059 5a79 EBC50000 		.long	0xc5eb
 17060 5a7d 855A0000 		.long	0x5a85
 17061 5a81 905A0000 		.long	0x5a90
 17062 5a85 08       		.uleb128 0x8
 17063 5a86 03C60000 		.long	0xc603
 17064 5a8a 09       		.uleb128 0x9
 17065 5a8b F1C50000 		.long	0xc5f1
 17066 5a8f 00       		.byte	0
 17067 5a90 2C       		.uleb128 0x2c
 17068 5a91 00000000 		.long	.LASF8
 17069 5a95 0B       		.byte	0xb
 17070 5a96 5801     		.value	0x158
 17071 5a98 00000000 		.long	.LASF823
 17072 5a9c EBC50000 		.long	0xc5eb
 17073 5aa0 A85A0000 		.long	0x5aa8
 17074 5aa4 B35A0000 		.long	0x5ab3
 17075 5aa8 08       		.uleb128 0x8
 17076 5aa9 03C60000 		.long	0xc603
 17077 5aad 09       		.uleb128 0x9
 17078 5aae 09C60000 		.long	0xc609
 17079 5ab2 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 601


 17080 5ab3 34       		.uleb128 0x34
 17081 5ab4 00000000 		.long	.LASF801
 17082 5ab8 0B       		.byte	0xb
 17083 5ab9 7701     		.value	0x177
 17084 5abb 00000000 		.long	.LASF824
 17085 5abf 02       		.byte	0x2
 17086 5ac0 C85A0000 		.long	0x5ac8
 17087 5ac4 D35A0000 		.long	0x5ad3
 17088 5ac8 08       		.uleb128 0x8
 17089 5ac9 03C60000 		.long	0xc603
 17090 5acd 09       		.uleb128 0x9
 17091 5ace EBC50000 		.long	0xc5eb
 17092 5ad2 00       		.byte	0
 17093 5ad3 63       		.uleb128 0x63
 17094 5ad4 00000000 		.long	.LASF825
 17095 5ad8 0B       		.byte	0xb
 17096 5ad9 0401     		.value	0x104
 17097 5adb F15A0000 		.long	0x5af1
 17098 5adf FC5A0000 		.long	0x5afc
 17099 5ae3 35       		.uleb128 0x35
 17100 5ae4 00000000 		.long	.LASF812
 17101 5ae8 D9C50000 		.long	0xc5d9
 17102 5aec 6B       		.uleb128 0x6b
 17103 5aed 00000000 		.long	.LASF826
 17104 5af1 08       		.uleb128 0x8
 17105 5af2 03C60000 		.long	0xc603
 17106 5af6 09       		.uleb128 0x9
 17107 5af7 D9C50000 		.long	0xc5d9
 17108 5afb 00       		.byte	0
 17109 5afc 50       		.uleb128 0x50
 17110 5afd 00000000 		.long	.LASF803
 17111 5b01 53930000 		.long	0x9353
 17112 5b05 00       		.byte	0
 17113 5b06 67       		.uleb128 0x67
 17114 5b07 00000000 		.long	.LASF804
 17115 5b0b 68       		.uleb128 0x68
 17116 5b0c C92C0000 		.long	0x2cc9
 17117 5b10 00       		.byte	0
 17118 5b11 00       		.byte	0
 17119 5b12 11       		.uleb128 0x11
 17120 5b13 7A590000 		.long	0x597a
 17121 5b17 54       		.uleb128 0x54
 17122 5b18 00000000 		.long	.LASF828
 17123 5b1c 8813     		.value	0x1388
 17124 5b1e 0B       		.byte	0xb
 17125 5b1f 8401     		.value	0x184
 17126 5b21 2C5C0000 		.long	0x5c2c
 17127 5b25 21       		.uleb128 0x21
 17128 5b26 7A590000 		.long	0x597a
 17129 5b2a 00       		.byte	0
 17130 5b2b 01       		.byte	0x1
 17131 5b2c 30       		.uleb128 0x30
 17132 5b2d 00000000 		.long	.LASF829
 17133 5b31 0B       		.byte	0xb
 17134 5b32 8901     		.value	0x189
 17135 5b34 01       		.byte	0x1
 17136 5b35 3D5B0000 		.long	0x5b3d
GAS LISTING /tmp/ccJUMvuF.s 			page 602


 17137 5b39 435B0000 		.long	0x5b43
 17138 5b3d 08       		.uleb128 0x8
 17139 5b3e 10C60000 		.long	0xc610
 17140 5b42 00       		.byte	0
 17141 5b43 31       		.uleb128 0x31
 17142 5b44 00000000 		.long	.LASF829
 17143 5b48 0B       		.byte	0xb
 17144 5b49 8D01     		.value	0x18d
 17145 5b4b 01       		.byte	0x1
 17146 5b4c 545B0000 		.long	0x5b54
 17147 5b50 5F5B0000 		.long	0x5b5f
 17148 5b54 08       		.uleb128 0x8
 17149 5b55 10C60000 		.long	0xc610
 17150 5b59 09       		.uleb128 0x9
 17151 5b5a D3C50000 		.long	0xc5d3
 17152 5b5e 00       		.byte	0
 17153 5b5f 30       		.uleb128 0x30
 17154 5b60 00000000 		.long	.LASF829
 17155 5b64 0B       		.byte	0xb
 17156 5b65 9701     		.value	0x197
 17157 5b67 01       		.byte	0x1
 17158 5b68 705B0000 		.long	0x5b70
 17159 5b6c 7B5B0000 		.long	0x5b7b
 17160 5b70 08       		.uleb128 0x8
 17161 5b71 10C60000 		.long	0xc610
 17162 5b75 09       		.uleb128 0x9
 17163 5b76 16C60000 		.long	0xc616
 17164 5b7a 00       		.byte	0
 17165 5b7b 30       		.uleb128 0x30
 17166 5b7c 00000000 		.long	.LASF829
 17167 5b80 0B       		.byte	0xb
 17168 5b81 9901     		.value	0x199
 17169 5b83 01       		.byte	0x1
 17170 5b84 8C5B0000 		.long	0x5b8c
 17171 5b88 975B0000 		.long	0x5b97
 17172 5b8c 08       		.uleb128 0x8
 17173 5b8d 10C60000 		.long	0xc610
 17174 5b91 09       		.uleb128 0x9
 17175 5b92 1CC60000 		.long	0xc61c
 17176 5b96 00       		.byte	0
 17177 5b97 32       		.uleb128 0x32
 17178 5b98 00000000 		.long	.LASF8
 17179 5b9c 0B       		.byte	0xb
 17180 5b9d D601     		.value	0x1d6
 17181 5b9f 00000000 		.long	.LASF830
 17182 5ba3 23C60000 		.long	0xc623
 17183 5ba7 01       		.byte	0x1
 17184 5ba8 B05B0000 		.long	0x5bb0
 17185 5bac BB5B0000 		.long	0x5bbb
 17186 5bb0 08       		.uleb128 0x8
 17187 5bb1 10C60000 		.long	0xc610
 17188 5bb5 09       		.uleb128 0x9
 17189 5bb6 16C60000 		.long	0xc616
 17190 5bba 00       		.byte	0
 17191 5bbb 32       		.uleb128 0x32
 17192 5bbc 00000000 		.long	.LASF8
 17193 5bc0 0B       		.byte	0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 603


 17194 5bc1 DD01     		.value	0x1dd
 17195 5bc3 00000000 		.long	.LASF831
 17196 5bc7 23C60000 		.long	0xc623
 17197 5bcb 01       		.byte	0x1
 17198 5bcc D45B0000 		.long	0x5bd4
 17199 5bd0 DF5B0000 		.long	0x5bdf
 17200 5bd4 08       		.uleb128 0x8
 17201 5bd5 10C60000 		.long	0xc610
 17202 5bd9 09       		.uleb128 0x9
 17203 5bda 1CC60000 		.long	0xc61c
 17204 5bde 00       		.byte	0
 17205 5bdf 34       		.uleb128 0x34
 17206 5be0 00000000 		.long	.LASF13
 17207 5be4 0B       		.byte	0xb
 17208 5be5 F901     		.value	0x1f9
 17209 5be7 00000000 		.long	.LASF832
 17210 5beb 01       		.byte	0x1
 17211 5bec F45B0000 		.long	0x5bf4
 17212 5bf0 FF5B0000 		.long	0x5bff
 17213 5bf4 08       		.uleb128 0x8
 17214 5bf5 10C60000 		.long	0xc610
 17215 5bf9 09       		.uleb128 0x9
 17216 5bfa 23C60000 		.long	0xc623
 17217 5bfe 00       		.byte	0
 17218 5bff 31       		.uleb128 0x31
 17219 5c00 00000000 		.long	.LASF833
 17220 5c04 0B       		.byte	0xb
 17221 5c05 9401     		.value	0x194
 17222 5c07 01       		.byte	0x1
 17223 5c08 1F5C0000 		.long	0x5c1f
 17224 5c0c 2A5C0000 		.long	0x5c2a
 17225 5c10 6A       		.uleb128 0x6a
 17226 5c11 00000000 		.long	.LASF834
 17227 5c15 1F5C0000 		.long	0x5c1f
 17228 5c19 68       		.uleb128 0x68
 17229 5c1a D9C50000 		.long	0xc5d9
 17230 5c1e 00       		.byte	0
 17231 5c1f 08       		.uleb128 0x8
 17232 5c20 10C60000 		.long	0xc610
 17233 5c24 09       		.uleb128 0x9
 17234 5c25 D9C50000 		.long	0xc5d9
 17235 5c29 00       		.byte	0
 17236 5c2a 70       		.uleb128 0x70
 17237 5c2b 00       		.byte	0
 17238 5c2c 11       		.uleb128 0x11
 17239 5c2d 175B0000 		.long	0x5b17
 17240 5c31 11       		.uleb128 0x11
 17241 5c32 9F560000 		.long	0x569f
 17242 5c36 24       		.uleb128 0x24
 17243 5c37 00000000 		.long	.LASF835
 17244 5c3b 01       		.byte	0x1
 17245 5c3c 1B       		.byte	0x1b
 17246 5c3d DC05     		.value	0x5dc
 17247 5c3f 505C0000 		.long	0x5c50
 17248 5c43 5C       		.uleb128 0x5c
 17249 5c44 00000000 		.long	.LASF513
 17250 5c48 1B       		.byte	0x1b
GAS LISTING /tmp/ccJUMvuF.s 			page 604


 17251 5c49 DD05     		.value	0x5dd
 17252 5c4b 65530000 		.long	0x5365
 17253 5c4f 00       		.byte	0
 17254 5c50 05       		.uleb128 0x5
 17255 5c51 00000000 		.long	.LASF836
 17256 5c55 08       		.byte	0x8
 17257 5c56 17       		.byte	0x17
 17258 5c57 81       		.byte	0x81
 17259 5c58 1E5F0000 		.long	0x5f1e
 17260 5c5c 05       		.uleb128 0x5
 17261 5c5d 00000000 		.long	.LASF837
 17262 5c61 01       		.byte	0x1
 17263 5c62 17       		.byte	0x17
 17264 5c63 84       		.byte	0x84
 17265 5c64 755C0000 		.long	0x5c75
 17266 5c68 22       		.uleb128 0x22
 17267 5c69 00000000 		.long	.LASF513
 17268 5c6d 17       		.byte	0x17
 17269 5c6e 8F       		.byte	0x8f
 17270 5c6f 67C50000 		.long	0xc567
 17271 5c73 01       		.byte	0x1
 17272 5c74 00       		.byte	0
 17273 5c75 13       		.uleb128 0x13
 17274 5c76 00000000 		.long	.LASF838
 17275 5c7a 17       		.byte	0x17
 17276 5c7b 92       		.byte	0x92
 17277 5c7c 70640000 		.long	0x6470
 17278 5c80 06       		.uleb128 0x6
 17279 5c81 00000000 		.long	.LASF839
 17280 5c85 17       		.byte	0x17
 17281 5c86 93       		.byte	0x93
 17282 5c87 755C0000 		.long	0x5c75
 17283 5c8b 00       		.byte	0
 17284 5c8c 22       		.uleb128 0x22
 17285 5c8d 00000000 		.long	.LASF491
 17286 5c91 17       		.byte	0x17
 17287 5c92 96       		.byte	0x96
 17288 5c93 685C0000 		.long	0x5c68
 17289 5c97 01       		.byte	0x1
 17290 5c98 22       		.uleb128 0x22
 17291 5c99 00000000 		.long	.LASF840
 17292 5c9d 17       		.byte	0x17
 17293 5c9e 98       		.byte	0x98
 17294 5c9f 65530000 		.long	0x5365
 17295 5ca3 01       		.byte	0x1
 17296 5ca4 0C       		.uleb128 0xc
 17297 5ca5 00000000 		.long	.LASF841
 17298 5ca9 17       		.byte	0x17
 17299 5caa 9D       		.byte	0x9d
 17300 5cab 01       		.byte	0x1
 17301 5cac B45C0000 		.long	0x5cb4
 17302 5cb0 BA5C0000 		.long	0x5cba
 17303 5cb4 08       		.uleb128 0x8
 17304 5cb5 F2C60000 		.long	0xc6f2
 17305 5cb9 00       		.byte	0
 17306 5cba 72       		.uleb128 0x72
 17307 5cbb 00000000 		.long	.LASF841
GAS LISTING /tmp/ccJUMvuF.s 			page 605


 17308 5cbf 17       		.byte	0x17
 17309 5cc0 A9       		.byte	0xa9
 17310 5cc1 01       		.byte	0x1
 17311 5cc2 CA5C0000 		.long	0x5cca
 17312 5cc6 D55C0000 		.long	0x5cd5
 17313 5cca 08       		.uleb128 0x8
 17314 5ccb F2C60000 		.long	0xc6f2
 17315 5ccf 09       		.uleb128 0x9
 17316 5cd0 8C5C0000 		.long	0x5c8c
 17317 5cd4 00       		.byte	0
 17318 5cd5 0C       		.uleb128 0xc
 17319 5cd6 00000000 		.long	.LASF841
 17320 5cda 17       		.byte	0x17
 17321 5cdb B5       		.byte	0xb5
 17322 5cdc 01       		.byte	0x1
 17323 5cdd E55C0000 		.long	0x5ce5
 17324 5ce1 F55C0000 		.long	0x5cf5
 17325 5ce5 08       		.uleb128 0x8
 17326 5ce6 F2C60000 		.long	0xc6f2
 17327 5cea 09       		.uleb128 0x9
 17328 5ceb 8C5C0000 		.long	0x5c8c
 17329 5cef 09       		.uleb128 0x9
 17330 5cf0 A3650000 		.long	0x65a3
 17331 5cf4 00       		.byte	0
 17332 5cf5 0C       		.uleb128 0xc
 17333 5cf6 00000000 		.long	.LASF841
 17334 5cfa 17       		.byte	0x17
 17335 5cfb C1       		.byte	0xc1
 17336 5cfc 01       		.byte	0x1
 17337 5cfd 055D0000 		.long	0x5d05
 17338 5d01 155D0000 		.long	0x5d15
 17339 5d05 08       		.uleb128 0x8
 17340 5d06 F2C60000 		.long	0xc6f2
 17341 5d0a 09       		.uleb128 0x9
 17342 5d0b 8C5C0000 		.long	0x5c8c
 17343 5d0f 09       		.uleb128 0x9
 17344 5d10 F8C60000 		.long	0xc6f8
 17345 5d14 00       		.byte	0
 17346 5d15 0C       		.uleb128 0xc
 17347 5d16 00000000 		.long	.LASF841
 17348 5d1a 17       		.byte	0x17
 17349 5d1b C8       		.byte	0xc8
 17350 5d1c 01       		.byte	0x1
 17351 5d1d 255D0000 		.long	0x5d25
 17352 5d21 305D0000 		.long	0x5d30
 17353 5d25 08       		.uleb128 0x8
 17354 5d26 F2C60000 		.long	0xc6f2
 17355 5d2a 09       		.uleb128 0x9
 17356 5d2b FB010000 		.long	0x1fb
 17357 5d2f 00       		.byte	0
 17358 5d30 0C       		.uleb128 0xc
 17359 5d31 00000000 		.long	.LASF841
 17360 5d35 17       		.byte	0x17
 17361 5d36 CD       		.byte	0xcd
 17362 5d37 01       		.byte	0x1
 17363 5d38 405D0000 		.long	0x5d40
 17364 5d3c 4B5D0000 		.long	0x5d4b
GAS LISTING /tmp/ccJUMvuF.s 			page 606


 17365 5d40 08       		.uleb128 0x8
 17366 5d41 F2C60000 		.long	0xc6f2
 17367 5d45 09       		.uleb128 0x9
 17368 5d46 FFC60000 		.long	0xc6ff
 17369 5d4a 00       		.byte	0
 17370 5d4b 0C       		.uleb128 0xc
 17371 5d4c 00000000 		.long	.LASF842
 17372 5d50 17       		.byte	0x17
 17373 5d51 E8       		.byte	0xe8
 17374 5d52 01       		.byte	0x1
 17375 5d53 5B5D0000 		.long	0x5d5b
 17376 5d57 665D0000 		.long	0x5d66
 17377 5d5b 08       		.uleb128 0x8
 17378 5d5c F2C60000 		.long	0xc6f2
 17379 5d60 08       		.uleb128 0x8
 17380 5d61 28930000 		.long	0x9328
 17381 5d65 00       		.byte	0
 17382 5d66 0D       		.uleb128 0xd
 17383 5d67 00000000 		.long	.LASF8
 17384 5d6b 17       		.byte	0x17
 17385 5d6c F9       		.byte	0xf9
 17386 5d6d 00000000 		.long	.LASF843
 17387 5d71 06C70000 		.long	0xc706
 17388 5d75 01       		.byte	0x1
 17389 5d76 7E5D0000 		.long	0x5d7e
 17390 5d7a 895D0000 		.long	0x5d89
 17391 5d7e 08       		.uleb128 0x8
 17392 5d7f F2C60000 		.long	0xc6f2
 17393 5d83 09       		.uleb128 0x9
 17394 5d84 FFC60000 		.long	0xc6ff
 17395 5d88 00       		.byte	0
 17396 5d89 32       		.uleb128 0x32
 17397 5d8a 00000000 		.long	.LASF8
 17398 5d8e 17       		.byte	0x17
 17399 5d8f 1601     		.value	0x116
 17400 5d91 00000000 		.long	.LASF844
 17401 5d95 06C70000 		.long	0xc706
 17402 5d99 01       		.byte	0x1
 17403 5d9a A25D0000 		.long	0x5da2
 17404 5d9e AD5D0000 		.long	0x5dad
 17405 5da2 08       		.uleb128 0x8
 17406 5da3 F2C60000 		.long	0xc6f2
 17407 5da7 09       		.uleb128 0x9
 17408 5da8 FB010000 		.long	0x1fb
 17409 5dac 00       		.byte	0
 17410 5dad 32       		.uleb128 0x32
 17411 5dae 00000000 		.long	.LASF845
 17412 5db2 17       		.byte	0x17
 17413 5db3 2001     		.value	0x120
 17414 5db5 00000000 		.long	.LASF846
 17415 5db9 BD650000 		.long	0x65bd
 17416 5dbd 01       		.byte	0x1
 17417 5dbe C65D0000 		.long	0x5dc6
 17418 5dc2 CC5D0000 		.long	0x5dcc
 17419 5dc6 08       		.uleb128 0x8
 17420 5dc7 0CC70000 		.long	0xc70c
 17421 5dcb 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 607


 17422 5dcc 32       		.uleb128 0x32
 17423 5dcd 00000000 		.long	.LASF847
 17424 5dd1 17       		.byte	0x17
 17425 5dd2 2801     		.value	0x128
 17426 5dd4 00000000 		.long	.LASF848
 17427 5dd8 8C5C0000 		.long	0x5c8c
 17428 5ddc 01       		.byte	0x1
 17429 5ddd E55D0000 		.long	0x5de5
 17430 5de1 EB5D0000 		.long	0x5deb
 17431 5de5 08       		.uleb128 0x8
 17432 5de6 0CC70000 		.long	0xc70c
 17433 5dea 00       		.byte	0
 17434 5deb 33       		.uleb128 0x33
 17435 5dec 67657400 		.string	"get"
 17436 5df0 17       		.byte	0x17
 17437 5df1 3001     		.value	0x130
 17438 5df3 00000000 		.long	.LASF849
 17439 5df7 8C5C0000 		.long	0x5c8c
 17440 5dfb 01       		.byte	0x1
 17441 5dfc 045E0000 		.long	0x5e04
 17442 5e00 0A5E0000 		.long	0x5e0a
 17443 5e04 08       		.uleb128 0x8
 17444 5e05 0CC70000 		.long	0xc70c
 17445 5e09 00       		.byte	0
 17446 5e0a 32       		.uleb128 0x32
 17447 5e0b 00000000 		.long	.LASF850
 17448 5e0f 17       		.byte	0x17
 17449 5e10 3501     		.value	0x135
 17450 5e12 00000000 		.long	.LASF851
 17451 5e16 12C70000 		.long	0xc712
 17452 5e1a 01       		.byte	0x1
 17453 5e1b 235E0000 		.long	0x5e23
 17454 5e1f 295E0000 		.long	0x5e29
 17455 5e23 08       		.uleb128 0x8
 17456 5e24 F2C60000 		.long	0xc6f2
 17457 5e28 00       		.byte	0
 17458 5e29 32       		.uleb128 0x32
 17459 5e2a 00000000 		.long	.LASF850
 17460 5e2e 17       		.byte	0x17
 17461 5e2f 3A01     		.value	0x13a
 17462 5e31 00000000 		.long	.LASF852
 17463 5e35 18C70000 		.long	0xc718
 17464 5e39 01       		.byte	0x1
 17465 5e3a 425E0000 		.long	0x5e42
 17466 5e3e 485E0000 		.long	0x5e48
 17467 5e42 08       		.uleb128 0x8
 17468 5e43 0CC70000 		.long	0xc70c
 17469 5e47 00       		.byte	0
 17470 5e48 11       		.uleb128 0x11
 17471 5e49 985C0000 		.long	0x5c98
 17472 5e4d 73       		.uleb128 0x73
 17473 5e4e 00000000 		.long	.LASF853
 17474 5e52 17       		.byte	0x17
 17475 5e53 3E01     		.value	0x13e
 17476 5e55 00000000 		.long	.LASF903
 17477 5e59 30930000 		.long	0x9330
 17478 5e5d 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 608


 17479 5e5e 665E0000 		.long	0x5e66
 17480 5e62 6C5E0000 		.long	0x5e6c
 17481 5e66 08       		.uleb128 0x8
 17482 5e67 0CC70000 		.long	0xc70c
 17483 5e6b 00       		.byte	0
 17484 5e6c 32       		.uleb128 0x32
 17485 5e6d 00000000 		.long	.LASF854
 17486 5e71 17       		.byte	0x17
 17487 5e72 4501     		.value	0x145
 17488 5e74 00000000 		.long	.LASF855
 17489 5e78 8C5C0000 		.long	0x5c8c
 17490 5e7c 01       		.byte	0x1
 17491 5e7d 855E0000 		.long	0x5e85
 17492 5e81 8B5E0000 		.long	0x5e8b
 17493 5e85 08       		.uleb128 0x8
 17494 5e86 F2C60000 		.long	0xc6f2
 17495 5e8a 00       		.byte	0
 17496 5e8b 34       		.uleb128 0x34
 17497 5e8c 00000000 		.long	.LASF758
 17498 5e90 17       		.byte	0x17
 17499 5e91 5301     		.value	0x153
 17500 5e93 00000000 		.long	.LASF856
 17501 5e97 01       		.byte	0x1
 17502 5e98 A05E0000 		.long	0x5ea0
 17503 5e9c AB5E0000 		.long	0x5eab
 17504 5ea0 08       		.uleb128 0x8
 17505 5ea1 F2C60000 		.long	0xc6f2
 17506 5ea5 09       		.uleb128 0x9
 17507 5ea6 8C5C0000 		.long	0x5c8c
 17508 5eaa 00       		.byte	0
 17509 5eab 34       		.uleb128 0x34
 17510 5eac 00000000 		.long	.LASF13
 17511 5eb0 17       		.byte	0x17
 17512 5eb1 5D01     		.value	0x15d
 17513 5eb3 00000000 		.long	.LASF857
 17514 5eb7 01       		.byte	0x1
 17515 5eb8 C05E0000 		.long	0x5ec0
 17516 5ebc CB5E0000 		.long	0x5ecb
 17517 5ec0 08       		.uleb128 0x8
 17518 5ec1 F2C60000 		.long	0xc6f2
 17519 5ec5 09       		.uleb128 0x9
 17520 5ec6 06C70000 		.long	0xc706
 17521 5eca 00       		.byte	0
 17522 5ecb 30       		.uleb128 0x30
 17523 5ecc 00000000 		.long	.LASF841
 17524 5ed0 17       		.byte	0x17
 17525 5ed1 6401     		.value	0x164
 17526 5ed3 01       		.byte	0x1
 17527 5ed4 DC5E0000 		.long	0x5edc
 17528 5ed8 E75E0000 		.long	0x5ee7
 17529 5edc 08       		.uleb128 0x8
 17530 5edd F2C60000 		.long	0xc6f2
 17531 5ee1 09       		.uleb128 0x9
 17532 5ee2 1EC70000 		.long	0xc71e
 17533 5ee6 00       		.byte	0
 17534 5ee7 32       		.uleb128 0x32
 17535 5ee8 00000000 		.long	.LASF8
GAS LISTING /tmp/ccJUMvuF.s 			page 609


 17536 5eec 17       		.byte	0x17
 17537 5eed 6501     		.value	0x165
 17538 5eef 00000000 		.long	.LASF858
 17539 5ef3 06C70000 		.long	0xc706
 17540 5ef7 01       		.byte	0x1
 17541 5ef8 005F0000 		.long	0x5f00
 17542 5efc 0B5F0000 		.long	0x5f0b
 17543 5f00 08       		.uleb128 0x8
 17544 5f01 F2C60000 		.long	0xc6f2
 17545 5f05 09       		.uleb128 0x9
 17546 5f06 1EC70000 		.long	0xc71e
 17547 5f0a 00       		.byte	0
 17548 5f0b 18       		.uleb128 0x18
 17549 5f0c 5F547000 		.string	"_Tp"
 17550 5f10 0EC50000 		.long	0xc50e
 17551 5f14 74       		.uleb128 0x74
 17552 5f15 5F447000 		.string	"_Dp"
 17553 5f19 65530000 		.long	0x5365
 17554 5f1d 00       		.byte	0
 17555 5f1e 16       		.uleb128 0x16
 17556 5f1f 00000000 		.long	.LASF859
 17557 5f23 01       		.byte	0x1
 17558 5f24 0B       		.byte	0xb
 17559 5f25 BF       		.byte	0xbf
 17560 5f26 6E5F0000 		.long	0x5f6e
 17561 5f2a 37       		.uleb128 0x37
 17562 5f2b 00000000 		.long	.LASF800
 17563 5f2f 0B       		.byte	0xb
 17564 5f30 C3       		.byte	0xc3
 17565 5f31 395F0000 		.long	0x5f39
 17566 5f35 3F5F0000 		.long	0x5f3f
 17567 5f39 08       		.uleb128 0x8
 17568 5f3a 3CC60000 		.long	0xc63c
 17569 5f3e 00       		.byte	0
 17570 5f3f 0E       		.uleb128 0xe
 17571 5f40 00000000 		.long	.LASF801
 17572 5f44 0B       		.byte	0xb
 17573 5f45 CF       		.byte	0xcf
 17574 5f46 00000000 		.long	.LASF860
 17575 5f4a 02       		.byte	0x2
 17576 5f4b 535F0000 		.long	0x5f53
 17577 5f4f 5E5F0000 		.long	0x5f5e
 17578 5f53 08       		.uleb128 0x8
 17579 5f54 3CC60000 		.long	0xc63c
 17580 5f58 09       		.uleb128 0x9
 17581 5f59 42C60000 		.long	0xc642
 17582 5f5d 00       		.byte	0
 17583 5f5e 50       		.uleb128 0x50
 17584 5f5f 00000000 		.long	.LASF803
 17585 5f63 53930000 		.long	0x9353
 17586 5f67 02       		.byte	0x2
 17587 5f68 6B       		.uleb128 0x6b
 17588 5f69 00000000 		.long	.LASF804
 17589 5f6d 00       		.byte	0
 17590 5f6e 16       		.uleb128 0x16
 17591 5f6f 00000000 		.long	.LASF861
 17592 5f73 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 610


 17593 5f74 0B       		.byte	0xb
 17594 5f75 52       		.byte	0x52
 17595 5f76 3C600000 		.long	0x603c
 17596 5f7a 25       		.uleb128 0x25
 17597 5f7b 65530000 		.long	0x5365
 17598 5f7f 00       		.byte	0
 17599 5f80 37       		.uleb128 0x37
 17600 5f81 00000000 		.long	.LASF807
 17601 5f85 0B       		.byte	0xb
 17602 5f86 55       		.byte	0x55
 17603 5f87 8F5F0000 		.long	0x5f8f
 17604 5f8b 955F0000 		.long	0x5f95
 17605 5f8f 08       		.uleb128 0x8
 17606 5f90 48C60000 		.long	0xc648
 17607 5f94 00       		.byte	0
 17608 5f95 37       		.uleb128 0x37
 17609 5f96 00000000 		.long	.LASF807
 17610 5f9a 0B       		.byte	0xb
 17611 5f9b 58       		.byte	0x58
 17612 5f9c A45F0000 		.long	0x5fa4
 17613 5fa0 AF5F0000 		.long	0x5faf
 17614 5fa4 08       		.uleb128 0x8
 17615 5fa5 48C60000 		.long	0xc648
 17616 5fa9 09       		.uleb128 0x9
 17617 5faa 4EC60000 		.long	0xc64e
 17618 5fae 00       		.byte	0
 17619 5faf 37       		.uleb128 0x37
 17620 5fb0 00000000 		.long	.LASF807
 17621 5fb4 0B       		.byte	0xb
 17622 5fb5 61       		.byte	0x61
 17623 5fb6 BE5F0000 		.long	0x5fbe
 17624 5fba C95F0000 		.long	0x5fc9
 17625 5fbe 08       		.uleb128 0x8
 17626 5fbf 48C60000 		.long	0xc648
 17627 5fc3 09       		.uleb128 0x9
 17628 5fc4 E4230000 		.long	0x23e4
 17629 5fc8 00       		.byte	0
 17630 5fc9 4E       		.uleb128 0x4e
 17631 5fca 00000000 		.long	.LASF808
 17632 5fce 0B       		.byte	0xb
 17633 5fcf 79       		.byte	0x79
 17634 5fd0 00000000 		.long	.LASF862
 17635 5fd4 54C60000 		.long	0xc654
 17636 5fd8 E25F0000 		.long	0x5fe2
 17637 5fdc 09       		.uleb128 0x9
 17638 5fdd 5AC60000 		.long	0xc65a
 17639 5fe1 00       		.byte	0
 17640 5fe2 4E       		.uleb128 0x4e
 17641 5fe3 00000000 		.long	.LASF808
 17642 5fe7 0B       		.byte	0xb
 17643 5fe8 7C       		.byte	0x7c
 17644 5fe9 00000000 		.long	.LASF863
 17645 5fed 4EC60000 		.long	0xc64e
 17646 5ff1 FB5F0000 		.long	0x5ffb
 17647 5ff5 09       		.uleb128 0x9
 17648 5ff6 60C60000 		.long	0xc660
 17649 5ffa 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 611


 17650 5ffb 37       		.uleb128 0x37
 17651 5ffc 00000000 		.long	.LASF864
 17652 6000 0B       		.byte	0xb
 17653 6001 5E       		.byte	0x5e
 17654 6002 13600000 		.long	0x6013
 17655 6006 1E600000 		.long	0x601e
 17656 600a 35       		.uleb128 0x35
 17657 600b 00000000 		.long	.LASF812
 17658 600f 65530000 		.long	0x5365
 17659 6013 08       		.uleb128 0x8
 17660 6014 48C60000 		.long	0xc648
 17661 6018 09       		.uleb128 0x9
 17662 6019 C4C80000 		.long	0xc8c4
 17663 601d 00       		.byte	0
 17664 601e 50       		.uleb128 0x50
 17665 601f 00000000 		.long	.LASF803
 17666 6023 53930000 		.long	0x9353
 17667 6027 01       		.byte	0x1
 17668 6028 35       		.uleb128 0x35
 17669 6029 00000000 		.long	.LASF813
 17670 602d 65530000 		.long	0x5365
 17671 6031 50       		.uleb128 0x50
 17672 6032 00000000 		.long	.LASF814
 17673 6036 30930000 		.long	0x9330
 17674 603a 01       		.byte	0x1
 17675 603b 00       		.byte	0
 17676 603c 11       		.uleb128 0x11
 17677 603d 65530000 		.long	0x5365
 17678 6041 11       		.uleb128 0x11
 17679 6042 6E5F0000 		.long	0x5f6e
 17680 6046 16       		.uleb128 0x16
 17681 6047 00000000 		.long	.LASF865
 17682 604b 01       		.byte	0x1
 17683 604c 0B       		.byte	0xb
 17684 604d E5       		.byte	0xe5
 17685 604e DD610000 		.long	0x61dd
 17686 6052 25       		.uleb128 0x25
 17687 6053 1E5F0000 		.long	0x5f1e
 17688 6057 00       		.byte	0
 17689 6058 21       		.uleb128 0x21
 17690 6059 6E5F0000 		.long	0x5f6e
 17691 605d 00       		.byte	0
 17692 605e 03       		.byte	0x3
 17693 605f 13       		.uleb128 0x13
 17694 6060 00000000 		.long	.LASF816
 17695 6064 0B       		.byte	0xb
 17696 6065 EB       		.byte	0xeb
 17697 6066 1E5F0000 		.long	0x5f1e
 17698 606a 4E       		.uleb128 0x4e
 17699 606b 00000000 		.long	.LASF808
 17700 606f 0B       		.byte	0xb
 17701 6070 EF       		.byte	0xef
 17702 6071 00000000 		.long	.LASF866
 17703 6075 54C60000 		.long	0xc654
 17704 6079 83600000 		.long	0x6083
 17705 607d 09       		.uleb128 0x9
 17706 607e 66C60000 		.long	0xc666
GAS LISTING /tmp/ccJUMvuF.s 			page 612


 17707 6082 00       		.byte	0
 17708 6083 4E       		.uleb128 0x4e
 17709 6084 00000000 		.long	.LASF808
 17710 6088 0B       		.byte	0xb
 17711 6089 F2       		.byte	0xf2
 17712 608a 00000000 		.long	.LASF867
 17713 608e 4EC60000 		.long	0xc64e
 17714 6092 9C600000 		.long	0x609c
 17715 6096 09       		.uleb128 0x9
 17716 6097 6CC60000 		.long	0xc66c
 17717 609b 00       		.byte	0
 17718 609c 4E       		.uleb128 0x4e
 17719 609d 00000000 		.long	.LASF819
 17720 60a1 0B       		.byte	0xb
 17721 60a2 F5       		.byte	0xf5
 17722 60a3 00000000 		.long	.LASF868
 17723 60a7 72C60000 		.long	0xc672
 17724 60ab B5600000 		.long	0x60b5
 17725 60af 09       		.uleb128 0x9
 17726 60b0 66C60000 		.long	0xc666
 17727 60b4 00       		.byte	0
 17728 60b5 4E       		.uleb128 0x4e
 17729 60b6 00000000 		.long	.LASF819
 17730 60ba 0B       		.byte	0xb
 17731 60bb F8       		.byte	0xf8
 17732 60bc 00000000 		.long	.LASF869
 17733 60c0 78C60000 		.long	0xc678
 17734 60c4 CE600000 		.long	0x60ce
 17735 60c8 09       		.uleb128 0x9
 17736 60c9 6CC60000 		.long	0xc66c
 17737 60cd 00       		.byte	0
 17738 60ce 11       		.uleb128 0x11
 17739 60cf 5F600000 		.long	0x605f
 17740 60d3 37       		.uleb128 0x37
 17741 60d4 00000000 		.long	.LASF800
 17742 60d8 0B       		.byte	0xb
 17743 60d9 FA       		.byte	0xfa
 17744 60da E2600000 		.long	0x60e2
 17745 60de E8600000 		.long	0x60e8
 17746 60e2 08       		.uleb128 0x8
 17747 60e3 7EC60000 		.long	0xc67e
 17748 60e7 00       		.byte	0
 17749 60e8 07       		.uleb128 0x7
 17750 60e9 00000000 		.long	.LASF800
 17751 60ed 0B       		.byte	0xb
 17752 60ee FE       		.byte	0xfe
 17753 60ef F7600000 		.long	0x60f7
 17754 60f3 02610000 		.long	0x6102
 17755 60f7 08       		.uleb128 0x8
 17756 60f8 7EC60000 		.long	0xc67e
 17757 60fc 09       		.uleb128 0x9
 17758 60fd 4EC60000 		.long	0xc64e
 17759 6101 00       		.byte	0
 17760 6102 27       		.uleb128 0x27
 17761 6103 00000000 		.long	.LASF800
 17762 6107 0B       		.byte	0xb
 17763 6108 0801     		.value	0x108
GAS LISTING /tmp/ccJUMvuF.s 			page 613


 17764 610a 12610000 		.long	0x6112
 17765 610e 1D610000 		.long	0x611d
 17766 6112 08       		.uleb128 0x8
 17767 6113 7EC60000 		.long	0xc67e
 17768 6117 09       		.uleb128 0x9
 17769 6118 6CC60000 		.long	0xc66c
 17770 611c 00       		.byte	0
 17771 611d 27       		.uleb128 0x27
 17772 611e 00000000 		.long	.LASF800
 17773 6122 0B       		.byte	0xb
 17774 6123 0B01     		.value	0x10b
 17775 6125 2D610000 		.long	0x612d
 17776 6129 38610000 		.long	0x6138
 17777 612d 08       		.uleb128 0x8
 17778 612e 7EC60000 		.long	0xc67e
 17779 6132 09       		.uleb128 0x9
 17780 6133 84C60000 		.long	0xc684
 17781 6137 00       		.byte	0
 17782 6138 2C       		.uleb128 0x2c
 17783 6139 00000000 		.long	.LASF8
 17784 613d 0B       		.byte	0xb
 17785 613e 5001     		.value	0x150
 17786 6140 00000000 		.long	.LASF870
 17787 6144 66C60000 		.long	0xc666
 17788 6148 50610000 		.long	0x6150
 17789 614c 5B610000 		.long	0x615b
 17790 6150 08       		.uleb128 0x8
 17791 6151 7EC60000 		.long	0xc67e
 17792 6155 09       		.uleb128 0x9
 17793 6156 6CC60000 		.long	0xc66c
 17794 615a 00       		.byte	0
 17795 615b 2C       		.uleb128 0x2c
 17796 615c 00000000 		.long	.LASF8
 17797 6160 0B       		.byte	0xb
 17798 6161 5801     		.value	0x158
 17799 6163 00000000 		.long	.LASF871
 17800 6167 66C60000 		.long	0xc666
 17801 616b 73610000 		.long	0x6173
 17802 616f 7E610000 		.long	0x617e
 17803 6173 08       		.uleb128 0x8
 17804 6174 7EC60000 		.long	0xc67e
 17805 6178 09       		.uleb128 0x9
 17806 6179 84C60000 		.long	0xc684
 17807 617d 00       		.byte	0
 17808 617e 34       		.uleb128 0x34
 17809 617f 00000000 		.long	.LASF801
 17810 6183 0B       		.byte	0xb
 17811 6184 7701     		.value	0x177
 17812 6186 00000000 		.long	.LASF872
 17813 618a 02       		.byte	0x2
 17814 618b 93610000 		.long	0x6193
 17815 618f 9E610000 		.long	0x619e
 17816 6193 08       		.uleb128 0x8
 17817 6194 7EC60000 		.long	0xc67e
 17818 6198 09       		.uleb128 0x9
 17819 6199 66C60000 		.long	0xc666
 17820 619d 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 614


 17821 619e 63       		.uleb128 0x63
 17822 619f 00000000 		.long	.LASF873
 17823 61a3 0B       		.byte	0xb
 17824 61a4 0401     		.value	0x104
 17825 61a6 BC610000 		.long	0x61bc
 17826 61aa C7610000 		.long	0x61c7
 17827 61ae 35       		.uleb128 0x35
 17828 61af 00000000 		.long	.LASF812
 17829 61b3 65530000 		.long	0x5365
 17830 61b7 6B       		.uleb128 0x6b
 17831 61b8 00000000 		.long	.LASF826
 17832 61bc 08       		.uleb128 0x8
 17833 61bd 7EC60000 		.long	0xc67e
 17834 61c1 09       		.uleb128 0x9
 17835 61c2 C4C80000 		.long	0xc8c4
 17836 61c6 00       		.byte	0
 17837 61c7 50       		.uleb128 0x50
 17838 61c8 00000000 		.long	.LASF803
 17839 61cc 53930000 		.long	0x9353
 17840 61d0 01       		.byte	0x1
 17841 61d1 67       		.uleb128 0x67
 17842 61d2 00000000 		.long	.LASF804
 17843 61d6 68       		.uleb128 0x68
 17844 61d7 65530000 		.long	0x5365
 17845 61db 00       		.byte	0
 17846 61dc 00       		.byte	0
 17847 61dd 11       		.uleb128 0x11
 17848 61de 46600000 		.long	0x6046
 17849 61e2 16       		.uleb128 0x16
 17850 61e3 00000000 		.long	.LASF874
 17851 61e7 08       		.byte	0x8
 17852 61e8 0B       		.byte	0xb
 17853 61e9 80       		.byte	0x80
 17854 61ea B6620000 		.long	0x62b6
 17855 61ee 06       		.uleb128 0x6
 17856 61ef 00000000 		.long	.LASF806
 17857 61f3 0B       		.byte	0xb
 17858 61f4 AC       		.byte	0xac
 17859 61f5 67C50000 		.long	0xc567
 17860 61f9 00       		.byte	0
 17861 61fa 37       		.uleb128 0x37
 17862 61fb 00000000 		.long	.LASF807
 17863 61ff 0B       		.byte	0xb
 17864 6200 82       		.byte	0x82
 17865 6201 09620000 		.long	0x6209
 17866 6205 0F620000 		.long	0x620f
 17867 6209 08       		.uleb128 0x8
 17868 620a 8BC60000 		.long	0xc68b
 17869 620e 00       		.byte	0
 17870 620f 37       		.uleb128 0x37
 17871 6210 00000000 		.long	.LASF807
 17872 6214 0B       		.byte	0xb
 17873 6215 85       		.byte	0x85
 17874 6216 1E620000 		.long	0x621e
 17875 621a 29620000 		.long	0x6229
 17876 621e 08       		.uleb128 0x8
 17877 621f 8BC60000 		.long	0xc68b
GAS LISTING /tmp/ccJUMvuF.s 			page 615


 17878 6223 09       		.uleb128 0x9
 17879 6224 91C60000 		.long	0xc691
 17880 6228 00       		.byte	0
 17881 6229 37       		.uleb128 0x37
 17882 622a 00000000 		.long	.LASF807
 17883 622e 0B       		.byte	0xb
 17884 622f 8E       		.byte	0x8e
 17885 6230 38620000 		.long	0x6238
 17886 6234 43620000 		.long	0x6243
 17887 6238 08       		.uleb128 0x8
 17888 6239 8BC60000 		.long	0xc68b
 17889 623d 09       		.uleb128 0x9
 17890 623e E4230000 		.long	0x23e4
 17891 6242 00       		.byte	0
 17892 6243 4E       		.uleb128 0x4e
 17893 6244 00000000 		.long	.LASF808
 17894 6248 0B       		.byte	0xb
 17895 6249 A7       		.byte	0xa7
 17896 624a 00000000 		.long	.LASF875
 17897 624e 9CC60000 		.long	0xc69c
 17898 6252 5C620000 		.long	0x625c
 17899 6256 09       		.uleb128 0x9
 17900 6257 A2C60000 		.long	0xc6a2
 17901 625b 00       		.byte	0
 17902 625c 4E       		.uleb128 0x4e
 17903 625d 00000000 		.long	.LASF808
 17904 6261 0B       		.byte	0xb
 17905 6262 AA       		.byte	0xaa
 17906 6263 00000000 		.long	.LASF876
 17907 6267 91C60000 		.long	0xc691
 17908 626b 75620000 		.long	0x6275
 17909 626f 09       		.uleb128 0x9
 17910 6270 A8C60000 		.long	0xc6a8
 17911 6274 00       		.byte	0
 17912 6275 37       		.uleb128 0x37
 17913 6276 00000000 		.long	.LASF877
 17914 627a 0B       		.byte	0xb
 17915 627b 8B       		.byte	0x8b
 17916 627c 8D620000 		.long	0x628d
 17917 6280 98620000 		.long	0x6298
 17918 6284 35       		.uleb128 0x35
 17919 6285 00000000 		.long	.LASF812
 17920 6289 9CC60000 		.long	0xc69c
 17921 628d 08       		.uleb128 0x8
 17922 628e 8BC60000 		.long	0xc68b
 17923 6292 09       		.uleb128 0x9
 17924 6293 9CC60000 		.long	0xc69c
 17925 6297 00       		.byte	0
 17926 6298 50       		.uleb128 0x50
 17927 6299 00000000 		.long	.LASF803
 17928 629d 53930000 		.long	0x9353
 17929 62a1 00       		.byte	0
 17930 62a2 35       		.uleb128 0x35
 17931 62a3 00000000 		.long	.LASF813
 17932 62a7 67C50000 		.long	0xc567
 17933 62ab 50       		.uleb128 0x50
 17934 62ac 00000000 		.long	.LASF814
GAS LISTING /tmp/ccJUMvuF.s 			page 616


 17935 62b0 30930000 		.long	0x9330
 17936 62b4 00       		.byte	0
 17937 62b5 00       		.byte	0
 17938 62b6 11       		.uleb128 0x11
 17939 62b7 E2610000 		.long	0x61e2
 17940 62bb 16       		.uleb128 0x16
 17941 62bc 00000000 		.long	.LASF878
 17942 62c0 08       		.byte	0x8
 17943 62c1 0B       		.byte	0xb
 17944 62c2 E5       		.byte	0xe5
 17945 62c3 6B640000 		.long	0x646b
 17946 62c7 25       		.uleb128 0x25
 17947 62c8 46600000 		.long	0x6046
 17948 62cc 00       		.byte	0
 17949 62cd 21       		.uleb128 0x21
 17950 62ce E2610000 		.long	0x61e2
 17951 62d2 00       		.byte	0
 17952 62d3 03       		.byte	0x3
 17953 62d4 13       		.uleb128 0x13
 17954 62d5 00000000 		.long	.LASF816
 17955 62d9 0B       		.byte	0xb
 17956 62da EB       		.byte	0xeb
 17957 62db 46600000 		.long	0x6046
 17958 62df 4E       		.uleb128 0x4e
 17959 62e0 00000000 		.long	.LASF808
 17960 62e4 0B       		.byte	0xb
 17961 62e5 EF       		.byte	0xef
 17962 62e6 00000000 		.long	.LASF879
 17963 62ea 9CC60000 		.long	0xc69c
 17964 62ee F8620000 		.long	0x62f8
 17965 62f2 09       		.uleb128 0x9
 17966 62f3 AEC60000 		.long	0xc6ae
 17967 62f7 00       		.byte	0
 17968 62f8 4E       		.uleb128 0x4e
 17969 62f9 00000000 		.long	.LASF808
 17970 62fd 0B       		.byte	0xb
 17971 62fe F2       		.byte	0xf2
 17972 62ff 00000000 		.long	.LASF880
 17973 6303 91C60000 		.long	0xc691
 17974 6307 11630000 		.long	0x6311
 17975 630b 09       		.uleb128 0x9
 17976 630c B4C60000 		.long	0xc6b4
 17977 6310 00       		.byte	0
 17978 6311 4E       		.uleb128 0x4e
 17979 6312 00000000 		.long	.LASF819
 17980 6316 0B       		.byte	0xb
 17981 6317 F5       		.byte	0xf5
 17982 6318 00000000 		.long	.LASF881
 17983 631c BAC60000 		.long	0xc6ba
 17984 6320 2A630000 		.long	0x632a
 17985 6324 09       		.uleb128 0x9
 17986 6325 AEC60000 		.long	0xc6ae
 17987 6329 00       		.byte	0
 17988 632a 4E       		.uleb128 0x4e
 17989 632b 00000000 		.long	.LASF819
 17990 632f 0B       		.byte	0xb
 17991 6330 F8       		.byte	0xf8
GAS LISTING /tmp/ccJUMvuF.s 			page 617


 17992 6331 00000000 		.long	.LASF882
 17993 6335 C0C60000 		.long	0xc6c0
 17994 6339 43630000 		.long	0x6343
 17995 633d 09       		.uleb128 0x9
 17996 633e B4C60000 		.long	0xc6b4
 17997 6342 00       		.byte	0
 17998 6343 11       		.uleb128 0x11
 17999 6344 D4620000 		.long	0x62d4
 18000 6348 37       		.uleb128 0x37
 18001 6349 00000000 		.long	.LASF800
 18002 634d 0B       		.byte	0xb
 18003 634e FA       		.byte	0xfa
 18004 634f 57630000 		.long	0x6357
 18005 6353 5D630000 		.long	0x635d
 18006 6357 08       		.uleb128 0x8
 18007 6358 C6C60000 		.long	0xc6c6
 18008 635c 00       		.byte	0
 18009 635d 07       		.uleb128 0x7
 18010 635e 00000000 		.long	.LASF800
 18011 6362 0B       		.byte	0xb
 18012 6363 FE       		.byte	0xfe
 18013 6364 6C630000 		.long	0x636c
 18014 6368 7C630000 		.long	0x637c
 18015 636c 08       		.uleb128 0x8
 18016 636d C6C60000 		.long	0xc6c6
 18017 6371 09       		.uleb128 0x9
 18018 6372 91C60000 		.long	0xc691
 18019 6376 09       		.uleb128 0x9
 18020 6377 4EC60000 		.long	0xc64e
 18021 637b 00       		.byte	0
 18022 637c 27       		.uleb128 0x27
 18023 637d 00000000 		.long	.LASF800
 18024 6381 0B       		.byte	0xb
 18025 6382 0801     		.value	0x108
 18026 6384 8C630000 		.long	0x638c
 18027 6388 97630000 		.long	0x6397
 18028 638c 08       		.uleb128 0x8
 18029 638d C6C60000 		.long	0xc6c6
 18030 6391 09       		.uleb128 0x9
 18031 6392 B4C60000 		.long	0xc6b4
 18032 6396 00       		.byte	0
 18033 6397 27       		.uleb128 0x27
 18034 6398 00000000 		.long	.LASF800
 18035 639c 0B       		.byte	0xb
 18036 639d 0B01     		.value	0x10b
 18037 639f A7630000 		.long	0x63a7
 18038 63a3 B2630000 		.long	0x63b2
 18039 63a7 08       		.uleb128 0x8
 18040 63a8 C6C60000 		.long	0xc6c6
 18041 63ac 09       		.uleb128 0x9
 18042 63ad CCC60000 		.long	0xc6cc
 18043 63b1 00       		.byte	0
 18044 63b2 2C       		.uleb128 0x2c
 18045 63b3 00000000 		.long	.LASF8
 18046 63b7 0B       		.byte	0xb
 18047 63b8 5001     		.value	0x150
 18048 63ba 00000000 		.long	.LASF883
GAS LISTING /tmp/ccJUMvuF.s 			page 618


 18049 63be AEC60000 		.long	0xc6ae
 18050 63c2 CA630000 		.long	0x63ca
 18051 63c6 D5630000 		.long	0x63d5
 18052 63ca 08       		.uleb128 0x8
 18053 63cb C6C60000 		.long	0xc6c6
 18054 63cf 09       		.uleb128 0x9
 18055 63d0 B4C60000 		.long	0xc6b4
 18056 63d4 00       		.byte	0
 18057 63d5 2C       		.uleb128 0x2c
 18058 63d6 00000000 		.long	.LASF8
 18059 63da 0B       		.byte	0xb
 18060 63db 5801     		.value	0x158
 18061 63dd 00000000 		.long	.LASF884
 18062 63e1 AEC60000 		.long	0xc6ae
 18063 63e5 ED630000 		.long	0x63ed
 18064 63e9 F8630000 		.long	0x63f8
 18065 63ed 08       		.uleb128 0x8
 18066 63ee C6C60000 		.long	0xc6c6
 18067 63f2 09       		.uleb128 0x9
 18068 63f3 CCC60000 		.long	0xc6cc
 18069 63f7 00       		.byte	0
 18070 63f8 34       		.uleb128 0x34
 18071 63f9 00000000 		.long	.LASF801
 18072 63fd 0B       		.byte	0xb
 18073 63fe 7701     		.value	0x177
 18074 6400 00000000 		.long	.LASF885
 18075 6404 02       		.byte	0x2
 18076 6405 0D640000 		.long	0x640d
 18077 6409 18640000 		.long	0x6418
 18078 640d 08       		.uleb128 0x8
 18079 640e C6C60000 		.long	0xc6c6
 18080 6412 09       		.uleb128 0x9
 18081 6413 AEC60000 		.long	0xc6ae
 18082 6417 00       		.byte	0
 18083 6418 63       		.uleb128 0x63
 18084 6419 00000000 		.long	.LASF886
 18085 641d 0B       		.byte	0xb
 18086 641e 0401     		.value	0x104
 18087 6420 40640000 		.long	0x6440
 18088 6424 50640000 		.long	0x6450
 18089 6428 35       		.uleb128 0x35
 18090 6429 00000000 		.long	.LASF812
 18091 642d 9CC60000 		.long	0xc69c
 18092 6431 6A       		.uleb128 0x6a
 18093 6432 00000000 		.long	.LASF826
 18094 6436 40640000 		.long	0x6440
 18095 643a 68       		.uleb128 0x68
 18096 643b 65530000 		.long	0x5365
 18097 643f 00       		.byte	0
 18098 6440 08       		.uleb128 0x8
 18099 6441 C6C60000 		.long	0xc6c6
 18100 6445 09       		.uleb128 0x9
 18101 6446 9CC60000 		.long	0xc69c
 18102 644a 09       		.uleb128 0x9
 18103 644b C4C80000 		.long	0xc8c4
 18104 644f 00       		.byte	0
 18105 6450 50       		.uleb128 0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 619


 18106 6451 00000000 		.long	.LASF803
 18107 6455 53930000 		.long	0x9353
 18108 6459 00       		.byte	0
 18109 645a 67       		.uleb128 0x67
 18110 645b 00000000 		.long	.LASF804
 18111 645f 68       		.uleb128 0x68
 18112 6460 67C50000 		.long	0xc567
 18113 6464 68       		.uleb128 0x68
 18114 6465 65530000 		.long	0x5365
 18115 6469 00       		.byte	0
 18116 646a 00       		.byte	0
 18117 646b 11       		.uleb128 0x11
 18118 646c BB620000 		.long	0x62bb
 18119 6470 3B       		.uleb128 0x3b
 18120 6471 00000000 		.long	.LASF887
 18121 6475 08       		.byte	0x8
 18122 6476 0B       		.byte	0xb
 18123 6477 0902     		.value	0x209
 18124 6479 91650000 		.long	0x6591
 18125 647d 21       		.uleb128 0x21
 18126 647e BB620000 		.long	0x62bb
 18127 6482 00       		.byte	0
 18128 6483 01       		.byte	0x1
 18129 6484 30       		.uleb128 0x30
 18130 6485 00000000 		.long	.LASF829
 18131 6489 0B       		.byte	0xb
 18132 648a 0E02     		.value	0x20e
 18133 648c 01       		.byte	0x1
 18134 648d 95640000 		.long	0x6495
 18135 6491 9B640000 		.long	0x649b
 18136 6495 08       		.uleb128 0x8
 18137 6496 D3C60000 		.long	0xc6d3
 18138 649a 00       		.byte	0
 18139 649b 31       		.uleb128 0x31
 18140 649c 00000000 		.long	.LASF829
 18141 64a0 0B       		.byte	0xb
 18142 64a1 1202     		.value	0x212
 18143 64a3 01       		.byte	0x1
 18144 64a4 AC640000 		.long	0x64ac
 18145 64a8 BC640000 		.long	0x64bc
 18146 64ac 08       		.uleb128 0x8
 18147 64ad D3C60000 		.long	0xc6d3
 18148 64b1 09       		.uleb128 0x9
 18149 64b2 91C60000 		.long	0xc691
 18150 64b6 09       		.uleb128 0x9
 18151 64b7 4EC60000 		.long	0xc64e
 18152 64bb 00       		.byte	0
 18153 64bc 30       		.uleb128 0x30
 18154 64bd 00000000 		.long	.LASF829
 18155 64c1 0B       		.byte	0xb
 18156 64c2 1C02     		.value	0x21c
 18157 64c4 01       		.byte	0x1
 18158 64c5 CD640000 		.long	0x64cd
 18159 64c9 D8640000 		.long	0x64d8
 18160 64cd 08       		.uleb128 0x8
 18161 64ce D3C60000 		.long	0xc6d3
 18162 64d2 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 620


 18163 64d3 D9C60000 		.long	0xc6d9
 18164 64d7 00       		.byte	0
 18165 64d8 30       		.uleb128 0x30
 18166 64d9 00000000 		.long	.LASF829
 18167 64dd 0B       		.byte	0xb
 18168 64de 1E02     		.value	0x21e
 18169 64e0 01       		.byte	0x1
 18170 64e1 E9640000 		.long	0x64e9
 18171 64e5 F4640000 		.long	0x64f4
 18172 64e9 08       		.uleb128 0x8
 18173 64ea D3C60000 		.long	0xc6d3
 18174 64ee 09       		.uleb128 0x9
 18175 64ef DFC60000 		.long	0xc6df
 18176 64f3 00       		.byte	0
 18177 64f4 32       		.uleb128 0x32
 18178 64f5 00000000 		.long	.LASF8
 18179 64f9 0B       		.byte	0xb
 18180 64fa 6802     		.value	0x268
 18181 64fc 00000000 		.long	.LASF888
 18182 6500 E6C60000 		.long	0xc6e6
 18183 6504 01       		.byte	0x1
 18184 6505 0D650000 		.long	0x650d
 18185 6509 18650000 		.long	0x6518
 18186 650d 08       		.uleb128 0x8
 18187 650e D3C60000 		.long	0xc6d3
 18188 6512 09       		.uleb128 0x9
 18189 6513 D9C60000 		.long	0xc6d9
 18190 6517 00       		.byte	0
 18191 6518 32       		.uleb128 0x32
 18192 6519 00000000 		.long	.LASF8
 18193 651d 0B       		.byte	0xb
 18194 651e 6F02     		.value	0x26f
 18195 6520 00000000 		.long	.LASF889
 18196 6524 E6C60000 		.long	0xc6e6
 18197 6528 01       		.byte	0x1
 18198 6529 31650000 		.long	0x6531
 18199 652d 3C650000 		.long	0x653c
 18200 6531 08       		.uleb128 0x8
 18201 6532 D3C60000 		.long	0xc6d3
 18202 6536 09       		.uleb128 0x9
 18203 6537 DFC60000 		.long	0xc6df
 18204 653b 00       		.byte	0
 18205 653c 34       		.uleb128 0x34
 18206 653d 00000000 		.long	.LASF13
 18207 6541 0B       		.byte	0xb
 18208 6542 9902     		.value	0x299
 18209 6544 00000000 		.long	.LASF890
 18210 6548 01       		.byte	0x1
 18211 6549 51650000 		.long	0x6551
 18212 654d 5C650000 		.long	0x655c
 18213 6551 08       		.uleb128 0x8
 18214 6552 D3C60000 		.long	0xc6d3
 18215 6556 09       		.uleb128 0x9
 18216 6557 E6C60000 		.long	0xc6e6
 18217 655b 00       		.byte	0
 18218 655c 31       		.uleb128 0x31
 18219 655d 00000000 		.long	.LASF891
GAS LISTING /tmp/ccJUMvuF.s 			page 621


 18220 6561 0B       		.byte	0xb
 18221 6562 1902     		.value	0x219
 18222 6564 01       		.byte	0x1
 18223 6565 7F650000 		.long	0x657f
 18224 6569 8F650000 		.long	0x658f
 18225 656d 18       		.uleb128 0x18
 18226 656e 5F553100 		.string	"_U1"
 18227 6572 9CC60000 		.long	0xc69c
 18228 6576 18       		.uleb128 0x18
 18229 6577 5F553200 		.string	"_U2"
 18230 657b 65530000 		.long	0x5365
 18231 657f 08       		.uleb128 0x8
 18232 6580 D3C60000 		.long	0xc6d3
 18233 6584 09       		.uleb128 0x9
 18234 6585 9CC60000 		.long	0xc69c
 18235 6589 09       		.uleb128 0x9
 18236 658a C4C80000 		.long	0xc8c4
 18237 658e 00       		.byte	0
 18238 658f 70       		.uleb128 0x70
 18239 6590 00       		.byte	0
 18240 6591 11       		.uleb128 0x11
 18241 6592 70640000 		.long	0x6470
 18242 6596 24       		.uleb128 0x24
 18243 6597 00000000 		.long	.LASF892
 18244 659b 01       		.byte	0x1
 18245 659c 1B       		.byte	0x1b
 18246 659d AF07     		.value	0x7af
 18247 659f B0650000 		.long	0x65b0
 18248 65a3 5C       		.uleb128 0x5c
 18249 65a4 00000000 		.long	.LASF513
 18250 65a8 1B       		.byte	0x1b
 18251 65a9 B007     		.value	0x7b0
 18252 65ab 4EC60000 		.long	0xc64e
 18253 65af 00       		.byte	0
 18254 65b0 24       		.uleb128 0x24
 18255 65b1 00000000 		.long	.LASF893
 18256 65b5 01       		.byte	0x1
 18257 65b6 1B       		.byte	0x1b
 18258 65b7 EC05     		.value	0x5ec
 18259 65b9 D3650000 		.long	0x65d3
 18260 65bd 5C       		.uleb128 0x5c
 18261 65be 00000000 		.long	.LASF513
 18262 65c2 1B       		.byte	0x1b
 18263 65c3 ED05     		.value	0x5ed
 18264 65c5 ECC60000 		.long	0xc6ec
 18265 65c9 18       		.uleb128 0x18
 18266 65ca 5F547000 		.string	"_Tp"
 18267 65ce 0EC50000 		.long	0xc50e
 18268 65d2 00       		.byte	0
 18269 65d3 11       		.uleb128 0x11
 18270 65d4 505C0000 		.long	0x5c50
 18271 65d8 24       		.uleb128 0x24
 18272 65d9 00000000 		.long	.LASF894
 18273 65dd 01       		.byte	0x1
 18274 65de 1B       		.byte	0x1b
 18275 65df DC05     		.value	0x5dc
 18276 65e1 F2650000 		.long	0x65f2
GAS LISTING /tmp/ccJUMvuF.s 			page 622


 18277 65e5 5C       		.uleb128 0x5c
 18278 65e6 00000000 		.long	.LASF513
 18279 65ea 1B       		.byte	0x1b
 18280 65eb DD05     		.value	0x5dd
 18281 65ed 3E530000 		.long	0x533e
 18282 65f1 00       		.byte	0
 18283 65f2 05       		.uleb128 0x5
 18284 65f3 00000000 		.long	.LASF895
 18285 65f7 08       		.byte	0x8
 18286 65f8 17       		.byte	0x17
 18287 65f9 81       		.byte	0x81
 18288 65fa C0680000 		.long	0x68c0
 18289 65fe 05       		.uleb128 0x5
 18290 65ff 00000000 		.long	.LASF837
 18291 6603 01       		.byte	0x1
 18292 6604 17       		.byte	0x17
 18293 6605 84       		.byte	0x84
 18294 6606 17660000 		.long	0x6617
 18295 660a 22       		.uleb128 0x22
 18296 660b 00000000 		.long	.LASF513
 18297 660f 17       		.byte	0x17
 18298 6610 8F       		.byte	0x8f
 18299 6611 5BC50000 		.long	0xc55b
 18300 6615 01       		.byte	0x1
 18301 6616 00       		.byte	0
 18302 6617 13       		.uleb128 0x13
 18303 6618 00000000 		.long	.LASF838
 18304 661c 17       		.byte	0x17
 18305 661d 92       		.byte	0x92
 18306 661e C26D0000 		.long	0x6dc2
 18307 6622 06       		.uleb128 0x6
 18308 6623 00000000 		.long	.LASF839
 18309 6627 17       		.byte	0x17
 18310 6628 93       		.byte	0x93
 18311 6629 17660000 		.long	0x6617
 18312 662d 00       		.byte	0
 18313 662e 22       		.uleb128 0x22
 18314 662f 00000000 		.long	.LASF491
 18315 6633 17       		.byte	0x17
 18316 6634 96       		.byte	0x96
 18317 6635 0A660000 		.long	0x660a
 18318 6639 01       		.byte	0x1
 18319 663a 22       		.uleb128 0x22
 18320 663b 00000000 		.long	.LASF840
 18321 663f 17       		.byte	0x17
 18322 6640 98       		.byte	0x98
 18323 6641 3E530000 		.long	0x533e
 18324 6645 01       		.byte	0x1
 18325 6646 0C       		.uleb128 0xc
 18326 6647 00000000 		.long	.LASF841
 18327 664b 17       		.byte	0x17
 18328 664c 9D       		.byte	0x9d
 18329 664d 01       		.byte	0x1
 18330 664e 56660000 		.long	0x6656
 18331 6652 5C660000 		.long	0x665c
 18332 6656 08       		.uleb128 0x8
 18333 6657 CEC70000 		.long	0xc7ce
GAS LISTING /tmp/ccJUMvuF.s 			page 623


 18334 665b 00       		.byte	0
 18335 665c 72       		.uleb128 0x72
 18336 665d 00000000 		.long	.LASF841
 18337 6661 17       		.byte	0x17
 18338 6662 A9       		.byte	0xa9
 18339 6663 01       		.byte	0x1
 18340 6664 6C660000 		.long	0x666c
 18341 6668 77660000 		.long	0x6677
 18342 666c 08       		.uleb128 0x8
 18343 666d CEC70000 		.long	0xc7ce
 18344 6671 09       		.uleb128 0x9
 18345 6672 2E660000 		.long	0x662e
 18346 6676 00       		.byte	0
 18347 6677 0C       		.uleb128 0xc
 18348 6678 00000000 		.long	.LASF841
 18349 667c 17       		.byte	0x17
 18350 667d B5       		.byte	0xb5
 18351 667e 01       		.byte	0x1
 18352 667f 87660000 		.long	0x6687
 18353 6683 97660000 		.long	0x6697
 18354 6687 08       		.uleb128 0x8
 18355 6688 CEC70000 		.long	0xc7ce
 18356 668c 09       		.uleb128 0x9
 18357 668d 2E660000 		.long	0x662e
 18358 6691 09       		.uleb128 0x9
 18359 6692 F56E0000 		.long	0x6ef5
 18360 6696 00       		.byte	0
 18361 6697 0C       		.uleb128 0xc
 18362 6698 00000000 		.long	.LASF841
 18363 669c 17       		.byte	0x17
 18364 669d C1       		.byte	0xc1
 18365 669e 01       		.byte	0x1
 18366 669f A7660000 		.long	0x66a7
 18367 66a3 B7660000 		.long	0x66b7
 18368 66a7 08       		.uleb128 0x8
 18369 66a8 CEC70000 		.long	0xc7ce
 18370 66ac 09       		.uleb128 0x9
 18371 66ad 2E660000 		.long	0x662e
 18372 66b1 09       		.uleb128 0x9
 18373 66b2 D4C70000 		.long	0xc7d4
 18374 66b6 00       		.byte	0
 18375 66b7 0C       		.uleb128 0xc
 18376 66b8 00000000 		.long	.LASF841
 18377 66bc 17       		.byte	0x17
 18378 66bd C8       		.byte	0xc8
 18379 66be 01       		.byte	0x1
 18380 66bf C7660000 		.long	0x66c7
 18381 66c3 D2660000 		.long	0x66d2
 18382 66c7 08       		.uleb128 0x8
 18383 66c8 CEC70000 		.long	0xc7ce
 18384 66cc 09       		.uleb128 0x9
 18385 66cd FB010000 		.long	0x1fb
 18386 66d1 00       		.byte	0
 18387 66d2 0C       		.uleb128 0xc
 18388 66d3 00000000 		.long	.LASF841
 18389 66d7 17       		.byte	0x17
 18390 66d8 CD       		.byte	0xcd
GAS LISTING /tmp/ccJUMvuF.s 			page 624


 18391 66d9 01       		.byte	0x1
 18392 66da E2660000 		.long	0x66e2
 18393 66de ED660000 		.long	0x66ed
 18394 66e2 08       		.uleb128 0x8
 18395 66e3 CEC70000 		.long	0xc7ce
 18396 66e7 09       		.uleb128 0x9
 18397 66e8 DBC70000 		.long	0xc7db
 18398 66ec 00       		.byte	0
 18399 66ed 0C       		.uleb128 0xc
 18400 66ee 00000000 		.long	.LASF842
 18401 66f2 17       		.byte	0x17
 18402 66f3 E8       		.byte	0xe8
 18403 66f4 01       		.byte	0x1
 18404 66f5 FD660000 		.long	0x66fd
 18405 66f9 08670000 		.long	0x6708
 18406 66fd 08       		.uleb128 0x8
 18407 66fe CEC70000 		.long	0xc7ce
 18408 6702 08       		.uleb128 0x8
 18409 6703 28930000 		.long	0x9328
 18410 6707 00       		.byte	0
 18411 6708 0D       		.uleb128 0xd
 18412 6709 00000000 		.long	.LASF8
 18413 670d 17       		.byte	0x17
 18414 670e F9       		.byte	0xf9
 18415 670f 00000000 		.long	.LASF896
 18416 6713 E2C70000 		.long	0xc7e2
 18417 6717 01       		.byte	0x1
 18418 6718 20670000 		.long	0x6720
 18419 671c 2B670000 		.long	0x672b
 18420 6720 08       		.uleb128 0x8
 18421 6721 CEC70000 		.long	0xc7ce
 18422 6725 09       		.uleb128 0x9
 18423 6726 DBC70000 		.long	0xc7db
 18424 672a 00       		.byte	0
 18425 672b 32       		.uleb128 0x32
 18426 672c 00000000 		.long	.LASF8
 18427 6730 17       		.byte	0x17
 18428 6731 1601     		.value	0x116
 18429 6733 00000000 		.long	.LASF897
 18430 6737 E2C70000 		.long	0xc7e2
 18431 673b 01       		.byte	0x1
 18432 673c 44670000 		.long	0x6744
 18433 6740 4F670000 		.long	0x674f
 18434 6744 08       		.uleb128 0x8
 18435 6745 CEC70000 		.long	0xc7ce
 18436 6749 09       		.uleb128 0x9
 18437 674a FB010000 		.long	0x1fb
 18438 674e 00       		.byte	0
 18439 674f 32       		.uleb128 0x32
 18440 6750 00000000 		.long	.LASF845
 18441 6754 17       		.byte	0x17
 18442 6755 2001     		.value	0x120
 18443 6757 00000000 		.long	.LASF898
 18444 675b 0F6F0000 		.long	0x6f0f
 18445 675f 01       		.byte	0x1
 18446 6760 68670000 		.long	0x6768
 18447 6764 6E670000 		.long	0x676e
GAS LISTING /tmp/ccJUMvuF.s 			page 625


 18448 6768 08       		.uleb128 0x8
 18449 6769 E8C70000 		.long	0xc7e8
 18450 676d 00       		.byte	0
 18451 676e 32       		.uleb128 0x32
 18452 676f 00000000 		.long	.LASF847
 18453 6773 17       		.byte	0x17
 18454 6774 2801     		.value	0x128
 18455 6776 00000000 		.long	.LASF899
 18456 677a 2E660000 		.long	0x662e
 18457 677e 01       		.byte	0x1
 18458 677f 87670000 		.long	0x6787
 18459 6783 8D670000 		.long	0x678d
 18460 6787 08       		.uleb128 0x8
 18461 6788 E8C70000 		.long	0xc7e8
 18462 678c 00       		.byte	0
 18463 678d 33       		.uleb128 0x33
 18464 678e 67657400 		.string	"get"
 18465 6792 17       		.byte	0x17
 18466 6793 3001     		.value	0x130
 18467 6795 00000000 		.long	.LASF900
 18468 6799 2E660000 		.long	0x662e
 18469 679d 01       		.byte	0x1
 18470 679e A6670000 		.long	0x67a6
 18471 67a2 AC670000 		.long	0x67ac
 18472 67a6 08       		.uleb128 0x8
 18473 67a7 E8C70000 		.long	0xc7e8
 18474 67ab 00       		.byte	0
 18475 67ac 32       		.uleb128 0x32
 18476 67ad 00000000 		.long	.LASF850
 18477 67b1 17       		.byte	0x17
 18478 67b2 3501     		.value	0x135
 18479 67b4 00000000 		.long	.LASF901
 18480 67b8 EEC70000 		.long	0xc7ee
 18481 67bc 01       		.byte	0x1
 18482 67bd C5670000 		.long	0x67c5
 18483 67c1 CB670000 		.long	0x67cb
 18484 67c5 08       		.uleb128 0x8
 18485 67c6 CEC70000 		.long	0xc7ce
 18486 67ca 00       		.byte	0
 18487 67cb 32       		.uleb128 0x32
 18488 67cc 00000000 		.long	.LASF850
 18489 67d0 17       		.byte	0x17
 18490 67d1 3A01     		.value	0x13a
 18491 67d3 00000000 		.long	.LASF902
 18492 67d7 F4C70000 		.long	0xc7f4
 18493 67db 01       		.byte	0x1
 18494 67dc E4670000 		.long	0x67e4
 18495 67e0 EA670000 		.long	0x67ea
 18496 67e4 08       		.uleb128 0x8
 18497 67e5 E8C70000 		.long	0xc7e8
 18498 67e9 00       		.byte	0
 18499 67ea 11       		.uleb128 0x11
 18500 67eb 3A660000 		.long	0x663a
 18501 67ef 73       		.uleb128 0x73
 18502 67f0 00000000 		.long	.LASF853
 18503 67f4 17       		.byte	0x17
 18504 67f5 3E01     		.value	0x13e
GAS LISTING /tmp/ccJUMvuF.s 			page 626


 18505 67f7 00000000 		.long	.LASF904
 18506 67fb 30930000 		.long	0x9330
 18507 67ff 01       		.byte	0x1
 18508 6800 08680000 		.long	0x6808
 18509 6804 0E680000 		.long	0x680e
 18510 6808 08       		.uleb128 0x8
 18511 6809 E8C70000 		.long	0xc7e8
 18512 680d 00       		.byte	0
 18513 680e 32       		.uleb128 0x32
 18514 680f 00000000 		.long	.LASF854
 18515 6813 17       		.byte	0x17
 18516 6814 4501     		.value	0x145
 18517 6816 00000000 		.long	.LASF905
 18518 681a 2E660000 		.long	0x662e
 18519 681e 01       		.byte	0x1
 18520 681f 27680000 		.long	0x6827
 18521 6823 2D680000 		.long	0x682d
 18522 6827 08       		.uleb128 0x8
 18523 6828 CEC70000 		.long	0xc7ce
 18524 682c 00       		.byte	0
 18525 682d 34       		.uleb128 0x34
 18526 682e 00000000 		.long	.LASF758
 18527 6832 17       		.byte	0x17
 18528 6833 5301     		.value	0x153
 18529 6835 00000000 		.long	.LASF906
 18530 6839 01       		.byte	0x1
 18531 683a 42680000 		.long	0x6842
 18532 683e 4D680000 		.long	0x684d
 18533 6842 08       		.uleb128 0x8
 18534 6843 CEC70000 		.long	0xc7ce
 18535 6847 09       		.uleb128 0x9
 18536 6848 2E660000 		.long	0x662e
 18537 684c 00       		.byte	0
 18538 684d 34       		.uleb128 0x34
 18539 684e 00000000 		.long	.LASF13
 18540 6852 17       		.byte	0x17
 18541 6853 5D01     		.value	0x15d
 18542 6855 00000000 		.long	.LASF907
 18543 6859 01       		.byte	0x1
 18544 685a 62680000 		.long	0x6862
 18545 685e 6D680000 		.long	0x686d
 18546 6862 08       		.uleb128 0x8
 18547 6863 CEC70000 		.long	0xc7ce
 18548 6867 09       		.uleb128 0x9
 18549 6868 E2C70000 		.long	0xc7e2
 18550 686c 00       		.byte	0
 18551 686d 30       		.uleb128 0x30
 18552 686e 00000000 		.long	.LASF841
 18553 6872 17       		.byte	0x17
 18554 6873 6401     		.value	0x164
 18555 6875 01       		.byte	0x1
 18556 6876 7E680000 		.long	0x687e
 18557 687a 89680000 		.long	0x6889
 18558 687e 08       		.uleb128 0x8
 18559 687f CEC70000 		.long	0xc7ce
 18560 6883 09       		.uleb128 0x9
 18561 6884 FAC70000 		.long	0xc7fa
GAS LISTING /tmp/ccJUMvuF.s 			page 627


 18562 6888 00       		.byte	0
 18563 6889 32       		.uleb128 0x32
 18564 688a 00000000 		.long	.LASF8
 18565 688e 17       		.byte	0x17
 18566 688f 6501     		.value	0x165
 18567 6891 00000000 		.long	.LASF908
 18568 6895 E2C70000 		.long	0xc7e2
 18569 6899 01       		.byte	0x1
 18570 689a A2680000 		.long	0x68a2
 18571 689e AD680000 		.long	0x68ad
 18572 68a2 08       		.uleb128 0x8
 18573 68a3 CEC70000 		.long	0xc7ce
 18574 68a7 09       		.uleb128 0x9
 18575 68a8 FAC70000 		.long	0xc7fa
 18576 68ac 00       		.byte	0
 18577 68ad 18       		.uleb128 0x18
 18578 68ae 5F547000 		.string	"_Tp"
 18579 68b2 D2C40000 		.long	0xc4d2
 18580 68b6 74       		.uleb128 0x74
 18581 68b7 5F447000 		.string	"_Dp"
 18582 68bb 3E530000 		.long	0x533e
 18583 68bf 00       		.byte	0
 18584 68c0 16       		.uleb128 0x16
 18585 68c1 00000000 		.long	.LASF909
 18586 68c5 01       		.byte	0x1
 18587 68c6 0B       		.byte	0xb
 18588 68c7 52       		.byte	0x52
 18589 68c8 8E690000 		.long	0x698e
 18590 68cc 25       		.uleb128 0x25
 18591 68cd 3E530000 		.long	0x533e
 18592 68d1 00       		.byte	0
 18593 68d2 37       		.uleb128 0x37
 18594 68d3 00000000 		.long	.LASF807
 18595 68d7 0B       		.byte	0xb
 18596 68d8 55       		.byte	0x55
 18597 68d9 E1680000 		.long	0x68e1
 18598 68dd E7680000 		.long	0x68e7
 18599 68e1 08       		.uleb128 0x8
 18600 68e2 24C70000 		.long	0xc724
 18601 68e6 00       		.byte	0
 18602 68e7 37       		.uleb128 0x37
 18603 68e8 00000000 		.long	.LASF807
 18604 68ec 0B       		.byte	0xb
 18605 68ed 58       		.byte	0x58
 18606 68ee F6680000 		.long	0x68f6
 18607 68f2 01690000 		.long	0x6901
 18608 68f6 08       		.uleb128 0x8
 18609 68f7 24C70000 		.long	0xc724
 18610 68fb 09       		.uleb128 0x9
 18611 68fc 2AC70000 		.long	0xc72a
 18612 6900 00       		.byte	0
 18613 6901 37       		.uleb128 0x37
 18614 6902 00000000 		.long	.LASF807
 18615 6906 0B       		.byte	0xb
 18616 6907 61       		.byte	0x61
 18617 6908 10690000 		.long	0x6910
 18618 690c 1B690000 		.long	0x691b
GAS LISTING /tmp/ccJUMvuF.s 			page 628


 18619 6910 08       		.uleb128 0x8
 18620 6911 24C70000 		.long	0xc724
 18621 6915 09       		.uleb128 0x9
 18622 6916 E4230000 		.long	0x23e4
 18623 691a 00       		.byte	0
 18624 691b 4E       		.uleb128 0x4e
 18625 691c 00000000 		.long	.LASF808
 18626 6920 0B       		.byte	0xb
 18627 6921 79       		.byte	0x79
 18628 6922 00000000 		.long	.LASF910
 18629 6926 30C70000 		.long	0xc730
 18630 692a 34690000 		.long	0x6934
 18631 692e 09       		.uleb128 0x9
 18632 692f 36C70000 		.long	0xc736
 18633 6933 00       		.byte	0
 18634 6934 4E       		.uleb128 0x4e
 18635 6935 00000000 		.long	.LASF808
 18636 6939 0B       		.byte	0xb
 18637 693a 7C       		.byte	0x7c
 18638 693b 00000000 		.long	.LASF911
 18639 693f 2AC70000 		.long	0xc72a
 18640 6943 4D690000 		.long	0x694d
 18641 6947 09       		.uleb128 0x9
 18642 6948 3CC70000 		.long	0xc73c
 18643 694c 00       		.byte	0
 18644 694d 37       		.uleb128 0x37
 18645 694e 00000000 		.long	.LASF912
 18646 6952 0B       		.byte	0xb
 18647 6953 5E       		.byte	0x5e
 18648 6954 65690000 		.long	0x6965
 18649 6958 70690000 		.long	0x6970
 18650 695c 35       		.uleb128 0x35
 18651 695d 00000000 		.long	.LASF812
 18652 6961 3E530000 		.long	0x533e
 18653 6965 08       		.uleb128 0x8
 18654 6966 24C70000 		.long	0xc724
 18655 696a 09       		.uleb128 0x9
 18656 696b CBC80000 		.long	0xc8cb
 18657 696f 00       		.byte	0
 18658 6970 50       		.uleb128 0x50
 18659 6971 00000000 		.long	.LASF803
 18660 6975 53930000 		.long	0x9353
 18661 6979 01       		.byte	0x1
 18662 697a 35       		.uleb128 0x35
 18663 697b 00000000 		.long	.LASF813
 18664 697f 3E530000 		.long	0x533e
 18665 6983 50       		.uleb128 0x50
 18666 6984 00000000 		.long	.LASF814
 18667 6988 30930000 		.long	0x9330
 18668 698c 01       		.byte	0x1
 18669 698d 00       		.byte	0
 18670 698e 11       		.uleb128 0x11
 18671 698f 3E530000 		.long	0x533e
 18672 6993 11       		.uleb128 0x11
 18673 6994 C0680000 		.long	0x68c0
 18674 6998 16       		.uleb128 0x16
 18675 6999 00000000 		.long	.LASF913
GAS LISTING /tmp/ccJUMvuF.s 			page 629


 18676 699d 01       		.byte	0x1
 18677 699e 0B       		.byte	0xb
 18678 699f E5       		.byte	0xe5
 18679 69a0 2F6B0000 		.long	0x6b2f
 18680 69a4 25       		.uleb128 0x25
 18681 69a5 1E5F0000 		.long	0x5f1e
 18682 69a9 00       		.byte	0
 18683 69aa 21       		.uleb128 0x21
 18684 69ab C0680000 		.long	0x68c0
 18685 69af 00       		.byte	0
 18686 69b0 03       		.byte	0x3
 18687 69b1 13       		.uleb128 0x13
 18688 69b2 00000000 		.long	.LASF816
 18689 69b6 0B       		.byte	0xb
 18690 69b7 EB       		.byte	0xeb
 18691 69b8 1E5F0000 		.long	0x5f1e
 18692 69bc 4E       		.uleb128 0x4e
 18693 69bd 00000000 		.long	.LASF808
 18694 69c1 0B       		.byte	0xb
 18695 69c2 EF       		.byte	0xef
 18696 69c3 00000000 		.long	.LASF914
 18697 69c7 30C70000 		.long	0xc730
 18698 69cb D5690000 		.long	0x69d5
 18699 69cf 09       		.uleb128 0x9
 18700 69d0 42C70000 		.long	0xc742
 18701 69d4 00       		.byte	0
 18702 69d5 4E       		.uleb128 0x4e
 18703 69d6 00000000 		.long	.LASF808
 18704 69da 0B       		.byte	0xb
 18705 69db F2       		.byte	0xf2
 18706 69dc 00000000 		.long	.LASF915
 18707 69e0 2AC70000 		.long	0xc72a
 18708 69e4 EE690000 		.long	0x69ee
 18709 69e8 09       		.uleb128 0x9
 18710 69e9 48C70000 		.long	0xc748
 18711 69ed 00       		.byte	0
 18712 69ee 4E       		.uleb128 0x4e
 18713 69ef 00000000 		.long	.LASF819
 18714 69f3 0B       		.byte	0xb
 18715 69f4 F5       		.byte	0xf5
 18716 69f5 00000000 		.long	.LASF916
 18717 69f9 4EC70000 		.long	0xc74e
 18718 69fd 076A0000 		.long	0x6a07
 18719 6a01 09       		.uleb128 0x9
 18720 6a02 42C70000 		.long	0xc742
 18721 6a06 00       		.byte	0
 18722 6a07 4E       		.uleb128 0x4e
 18723 6a08 00000000 		.long	.LASF819
 18724 6a0c 0B       		.byte	0xb
 18725 6a0d F8       		.byte	0xf8
 18726 6a0e 00000000 		.long	.LASF917
 18727 6a12 54C70000 		.long	0xc754
 18728 6a16 206A0000 		.long	0x6a20
 18729 6a1a 09       		.uleb128 0x9
 18730 6a1b 48C70000 		.long	0xc748
 18731 6a1f 00       		.byte	0
 18732 6a20 11       		.uleb128 0x11
GAS LISTING /tmp/ccJUMvuF.s 			page 630


 18733 6a21 B1690000 		.long	0x69b1
 18734 6a25 37       		.uleb128 0x37
 18735 6a26 00000000 		.long	.LASF800
 18736 6a2a 0B       		.byte	0xb
 18737 6a2b FA       		.byte	0xfa
 18738 6a2c 346A0000 		.long	0x6a34
 18739 6a30 3A6A0000 		.long	0x6a3a
 18740 6a34 08       		.uleb128 0x8
 18741 6a35 5AC70000 		.long	0xc75a
 18742 6a39 00       		.byte	0
 18743 6a3a 07       		.uleb128 0x7
 18744 6a3b 00000000 		.long	.LASF800
 18745 6a3f 0B       		.byte	0xb
 18746 6a40 FE       		.byte	0xfe
 18747 6a41 496A0000 		.long	0x6a49
 18748 6a45 546A0000 		.long	0x6a54
 18749 6a49 08       		.uleb128 0x8
 18750 6a4a 5AC70000 		.long	0xc75a
 18751 6a4e 09       		.uleb128 0x9
 18752 6a4f 2AC70000 		.long	0xc72a
 18753 6a53 00       		.byte	0
 18754 6a54 27       		.uleb128 0x27
 18755 6a55 00000000 		.long	.LASF800
 18756 6a59 0B       		.byte	0xb
 18757 6a5a 0801     		.value	0x108
 18758 6a5c 646A0000 		.long	0x6a64
 18759 6a60 6F6A0000 		.long	0x6a6f
 18760 6a64 08       		.uleb128 0x8
 18761 6a65 5AC70000 		.long	0xc75a
 18762 6a69 09       		.uleb128 0x9
 18763 6a6a 48C70000 		.long	0xc748
 18764 6a6e 00       		.byte	0
 18765 6a6f 27       		.uleb128 0x27
 18766 6a70 00000000 		.long	.LASF800
 18767 6a74 0B       		.byte	0xb
 18768 6a75 0B01     		.value	0x10b
 18769 6a77 7F6A0000 		.long	0x6a7f
 18770 6a7b 8A6A0000 		.long	0x6a8a
 18771 6a7f 08       		.uleb128 0x8
 18772 6a80 5AC70000 		.long	0xc75a
 18773 6a84 09       		.uleb128 0x9
 18774 6a85 60C70000 		.long	0xc760
 18775 6a89 00       		.byte	0
 18776 6a8a 2C       		.uleb128 0x2c
 18777 6a8b 00000000 		.long	.LASF8
 18778 6a8f 0B       		.byte	0xb
 18779 6a90 5001     		.value	0x150
 18780 6a92 00000000 		.long	.LASF918
 18781 6a96 42C70000 		.long	0xc742
 18782 6a9a A26A0000 		.long	0x6aa2
 18783 6a9e AD6A0000 		.long	0x6aad
 18784 6aa2 08       		.uleb128 0x8
 18785 6aa3 5AC70000 		.long	0xc75a
 18786 6aa7 09       		.uleb128 0x9
 18787 6aa8 48C70000 		.long	0xc748
 18788 6aac 00       		.byte	0
 18789 6aad 2C       		.uleb128 0x2c
GAS LISTING /tmp/ccJUMvuF.s 			page 631


 18790 6aae 00000000 		.long	.LASF8
 18791 6ab2 0B       		.byte	0xb
 18792 6ab3 5801     		.value	0x158
 18793 6ab5 00000000 		.long	.LASF919
 18794 6ab9 42C70000 		.long	0xc742
 18795 6abd C56A0000 		.long	0x6ac5
 18796 6ac1 D06A0000 		.long	0x6ad0
 18797 6ac5 08       		.uleb128 0x8
 18798 6ac6 5AC70000 		.long	0xc75a
 18799 6aca 09       		.uleb128 0x9
 18800 6acb 60C70000 		.long	0xc760
 18801 6acf 00       		.byte	0
 18802 6ad0 34       		.uleb128 0x34
 18803 6ad1 00000000 		.long	.LASF801
 18804 6ad5 0B       		.byte	0xb
 18805 6ad6 7701     		.value	0x177
 18806 6ad8 00000000 		.long	.LASF920
 18807 6adc 02       		.byte	0x2
 18808 6add E56A0000 		.long	0x6ae5
 18809 6ae1 F06A0000 		.long	0x6af0
 18810 6ae5 08       		.uleb128 0x8
 18811 6ae6 5AC70000 		.long	0xc75a
 18812 6aea 09       		.uleb128 0x9
 18813 6aeb 42C70000 		.long	0xc742
 18814 6aef 00       		.byte	0
 18815 6af0 63       		.uleb128 0x63
 18816 6af1 00000000 		.long	.LASF921
 18817 6af5 0B       		.byte	0xb
 18818 6af6 0401     		.value	0x104
 18819 6af8 0E6B0000 		.long	0x6b0e
 18820 6afc 196B0000 		.long	0x6b19
 18821 6b00 35       		.uleb128 0x35
 18822 6b01 00000000 		.long	.LASF812
 18823 6b05 3E530000 		.long	0x533e
 18824 6b09 6B       		.uleb128 0x6b
 18825 6b0a 00000000 		.long	.LASF826
 18826 6b0e 08       		.uleb128 0x8
 18827 6b0f 5AC70000 		.long	0xc75a
 18828 6b13 09       		.uleb128 0x9
 18829 6b14 CBC80000 		.long	0xc8cb
 18830 6b18 00       		.byte	0
 18831 6b19 50       		.uleb128 0x50
 18832 6b1a 00000000 		.long	.LASF803
 18833 6b1e 53930000 		.long	0x9353
 18834 6b22 01       		.byte	0x1
 18835 6b23 67       		.uleb128 0x67
 18836 6b24 00000000 		.long	.LASF804
 18837 6b28 68       		.uleb128 0x68
 18838 6b29 3E530000 		.long	0x533e
 18839 6b2d 00       		.byte	0
 18840 6b2e 00       		.byte	0
 18841 6b2f 11       		.uleb128 0x11
 18842 6b30 98690000 		.long	0x6998
 18843 6b34 16       		.uleb128 0x16
 18844 6b35 00000000 		.long	.LASF922
 18845 6b39 08       		.byte	0x8
 18846 6b3a 0B       		.byte	0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 632


 18847 6b3b 80       		.byte	0x80
 18848 6b3c 086C0000 		.long	0x6c08
 18849 6b40 06       		.uleb128 0x6
 18850 6b41 00000000 		.long	.LASF806
 18851 6b45 0B       		.byte	0xb
 18852 6b46 AC       		.byte	0xac
 18853 6b47 5BC50000 		.long	0xc55b
 18854 6b4b 00       		.byte	0
 18855 6b4c 37       		.uleb128 0x37
 18856 6b4d 00000000 		.long	.LASF807
 18857 6b51 0B       		.byte	0xb
 18858 6b52 82       		.byte	0x82
 18859 6b53 5B6B0000 		.long	0x6b5b
 18860 6b57 616B0000 		.long	0x6b61
 18861 6b5b 08       		.uleb128 0x8
 18862 6b5c 67C70000 		.long	0xc767
 18863 6b60 00       		.byte	0
 18864 6b61 37       		.uleb128 0x37
 18865 6b62 00000000 		.long	.LASF807
 18866 6b66 0B       		.byte	0xb
 18867 6b67 85       		.byte	0x85
 18868 6b68 706B0000 		.long	0x6b70
 18869 6b6c 7B6B0000 		.long	0x6b7b
 18870 6b70 08       		.uleb128 0x8
 18871 6b71 67C70000 		.long	0xc767
 18872 6b75 09       		.uleb128 0x9
 18873 6b76 6DC70000 		.long	0xc76d
 18874 6b7a 00       		.byte	0
 18875 6b7b 37       		.uleb128 0x37
 18876 6b7c 00000000 		.long	.LASF807
 18877 6b80 0B       		.byte	0xb
 18878 6b81 8E       		.byte	0x8e
 18879 6b82 8A6B0000 		.long	0x6b8a
 18880 6b86 956B0000 		.long	0x6b95
 18881 6b8a 08       		.uleb128 0x8
 18882 6b8b 67C70000 		.long	0xc767
 18883 6b8f 09       		.uleb128 0x9
 18884 6b90 E4230000 		.long	0x23e4
 18885 6b94 00       		.byte	0
 18886 6b95 4E       		.uleb128 0x4e
 18887 6b96 00000000 		.long	.LASF808
 18888 6b9a 0B       		.byte	0xb
 18889 6b9b A7       		.byte	0xa7
 18890 6b9c 00000000 		.long	.LASF923
 18891 6ba0 78C70000 		.long	0xc778
 18892 6ba4 AE6B0000 		.long	0x6bae
 18893 6ba8 09       		.uleb128 0x9
 18894 6ba9 7EC70000 		.long	0xc77e
 18895 6bad 00       		.byte	0
 18896 6bae 4E       		.uleb128 0x4e
 18897 6baf 00000000 		.long	.LASF808
 18898 6bb3 0B       		.byte	0xb
 18899 6bb4 AA       		.byte	0xaa
 18900 6bb5 00000000 		.long	.LASF924
 18901 6bb9 6DC70000 		.long	0xc76d
 18902 6bbd C76B0000 		.long	0x6bc7
 18903 6bc1 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 633


 18904 6bc2 84C70000 		.long	0xc784
 18905 6bc6 00       		.byte	0
 18906 6bc7 37       		.uleb128 0x37
 18907 6bc8 00000000 		.long	.LASF925
 18908 6bcc 0B       		.byte	0xb
 18909 6bcd 8B       		.byte	0x8b
 18910 6bce DF6B0000 		.long	0x6bdf
 18911 6bd2 EA6B0000 		.long	0x6bea
 18912 6bd6 35       		.uleb128 0x35
 18913 6bd7 00000000 		.long	.LASF812
 18914 6bdb 78C70000 		.long	0xc778
 18915 6bdf 08       		.uleb128 0x8
 18916 6be0 67C70000 		.long	0xc767
 18917 6be4 09       		.uleb128 0x9
 18918 6be5 78C70000 		.long	0xc778
 18919 6be9 00       		.byte	0
 18920 6bea 50       		.uleb128 0x50
 18921 6beb 00000000 		.long	.LASF803
 18922 6bef 53930000 		.long	0x9353
 18923 6bf3 00       		.byte	0
 18924 6bf4 35       		.uleb128 0x35
 18925 6bf5 00000000 		.long	.LASF813
 18926 6bf9 5BC50000 		.long	0xc55b
 18927 6bfd 50       		.uleb128 0x50
 18928 6bfe 00000000 		.long	.LASF814
 18929 6c02 30930000 		.long	0x9330
 18930 6c06 00       		.byte	0
 18931 6c07 00       		.byte	0
 18932 6c08 11       		.uleb128 0x11
 18933 6c09 346B0000 		.long	0x6b34
 18934 6c0d 16       		.uleb128 0x16
 18935 6c0e 00000000 		.long	.LASF926
 18936 6c12 08       		.byte	0x8
 18937 6c13 0B       		.byte	0xb
 18938 6c14 E5       		.byte	0xe5
 18939 6c15 BD6D0000 		.long	0x6dbd
 18940 6c19 25       		.uleb128 0x25
 18941 6c1a 98690000 		.long	0x6998
 18942 6c1e 00       		.byte	0
 18943 6c1f 21       		.uleb128 0x21
 18944 6c20 346B0000 		.long	0x6b34
 18945 6c24 00       		.byte	0
 18946 6c25 03       		.byte	0x3
 18947 6c26 13       		.uleb128 0x13
 18948 6c27 00000000 		.long	.LASF816
 18949 6c2b 0B       		.byte	0xb
 18950 6c2c EB       		.byte	0xeb
 18951 6c2d 98690000 		.long	0x6998
 18952 6c31 4E       		.uleb128 0x4e
 18953 6c32 00000000 		.long	.LASF808
 18954 6c36 0B       		.byte	0xb
 18955 6c37 EF       		.byte	0xef
 18956 6c38 00000000 		.long	.LASF927
 18957 6c3c 78C70000 		.long	0xc778
 18958 6c40 4A6C0000 		.long	0x6c4a
 18959 6c44 09       		.uleb128 0x9
 18960 6c45 8AC70000 		.long	0xc78a
GAS LISTING /tmp/ccJUMvuF.s 			page 634


 18961 6c49 00       		.byte	0
 18962 6c4a 4E       		.uleb128 0x4e
 18963 6c4b 00000000 		.long	.LASF808
 18964 6c4f 0B       		.byte	0xb
 18965 6c50 F2       		.byte	0xf2
 18966 6c51 00000000 		.long	.LASF928
 18967 6c55 6DC70000 		.long	0xc76d
 18968 6c59 636C0000 		.long	0x6c63
 18969 6c5d 09       		.uleb128 0x9
 18970 6c5e 90C70000 		.long	0xc790
 18971 6c62 00       		.byte	0
 18972 6c63 4E       		.uleb128 0x4e
 18973 6c64 00000000 		.long	.LASF819
 18974 6c68 0B       		.byte	0xb
 18975 6c69 F5       		.byte	0xf5
 18976 6c6a 00000000 		.long	.LASF929
 18977 6c6e 96C70000 		.long	0xc796
 18978 6c72 7C6C0000 		.long	0x6c7c
 18979 6c76 09       		.uleb128 0x9
 18980 6c77 8AC70000 		.long	0xc78a
 18981 6c7b 00       		.byte	0
 18982 6c7c 4E       		.uleb128 0x4e
 18983 6c7d 00000000 		.long	.LASF819
 18984 6c81 0B       		.byte	0xb
 18985 6c82 F8       		.byte	0xf8
 18986 6c83 00000000 		.long	.LASF930
 18987 6c87 9CC70000 		.long	0xc79c
 18988 6c8b 956C0000 		.long	0x6c95
 18989 6c8f 09       		.uleb128 0x9
 18990 6c90 90C70000 		.long	0xc790
 18991 6c94 00       		.byte	0
 18992 6c95 11       		.uleb128 0x11
 18993 6c96 266C0000 		.long	0x6c26
 18994 6c9a 37       		.uleb128 0x37
 18995 6c9b 00000000 		.long	.LASF800
 18996 6c9f 0B       		.byte	0xb
 18997 6ca0 FA       		.byte	0xfa
 18998 6ca1 A96C0000 		.long	0x6ca9
 18999 6ca5 AF6C0000 		.long	0x6caf
 19000 6ca9 08       		.uleb128 0x8
 19001 6caa A2C70000 		.long	0xc7a2
 19002 6cae 00       		.byte	0
 19003 6caf 07       		.uleb128 0x7
 19004 6cb0 00000000 		.long	.LASF800
 19005 6cb4 0B       		.byte	0xb
 19006 6cb5 FE       		.byte	0xfe
 19007 6cb6 BE6C0000 		.long	0x6cbe
 19008 6cba CE6C0000 		.long	0x6cce
 19009 6cbe 08       		.uleb128 0x8
 19010 6cbf A2C70000 		.long	0xc7a2
 19011 6cc3 09       		.uleb128 0x9
 19012 6cc4 6DC70000 		.long	0xc76d
 19013 6cc8 09       		.uleb128 0x9
 19014 6cc9 2AC70000 		.long	0xc72a
 19015 6ccd 00       		.byte	0
 19016 6cce 27       		.uleb128 0x27
 19017 6ccf 00000000 		.long	.LASF800
GAS LISTING /tmp/ccJUMvuF.s 			page 635


 19018 6cd3 0B       		.byte	0xb
 19019 6cd4 0801     		.value	0x108
 19020 6cd6 DE6C0000 		.long	0x6cde
 19021 6cda E96C0000 		.long	0x6ce9
 19022 6cde 08       		.uleb128 0x8
 19023 6cdf A2C70000 		.long	0xc7a2
 19024 6ce3 09       		.uleb128 0x9
 19025 6ce4 90C70000 		.long	0xc790
 19026 6ce8 00       		.byte	0
 19027 6ce9 27       		.uleb128 0x27
 19028 6cea 00000000 		.long	.LASF800
 19029 6cee 0B       		.byte	0xb
 19030 6cef 0B01     		.value	0x10b
 19031 6cf1 F96C0000 		.long	0x6cf9
 19032 6cf5 046D0000 		.long	0x6d04
 19033 6cf9 08       		.uleb128 0x8
 19034 6cfa A2C70000 		.long	0xc7a2
 19035 6cfe 09       		.uleb128 0x9
 19036 6cff A8C70000 		.long	0xc7a8
 19037 6d03 00       		.byte	0
 19038 6d04 2C       		.uleb128 0x2c
 19039 6d05 00000000 		.long	.LASF8
 19040 6d09 0B       		.byte	0xb
 19041 6d0a 5001     		.value	0x150
 19042 6d0c 00000000 		.long	.LASF931
 19043 6d10 8AC70000 		.long	0xc78a
 19044 6d14 1C6D0000 		.long	0x6d1c
 19045 6d18 276D0000 		.long	0x6d27
 19046 6d1c 08       		.uleb128 0x8
 19047 6d1d A2C70000 		.long	0xc7a2
 19048 6d21 09       		.uleb128 0x9
 19049 6d22 90C70000 		.long	0xc790
 19050 6d26 00       		.byte	0
 19051 6d27 2C       		.uleb128 0x2c
 19052 6d28 00000000 		.long	.LASF8
 19053 6d2c 0B       		.byte	0xb
 19054 6d2d 5801     		.value	0x158
 19055 6d2f 00000000 		.long	.LASF932
 19056 6d33 8AC70000 		.long	0xc78a
 19057 6d37 3F6D0000 		.long	0x6d3f
 19058 6d3b 4A6D0000 		.long	0x6d4a
 19059 6d3f 08       		.uleb128 0x8
 19060 6d40 A2C70000 		.long	0xc7a2
 19061 6d44 09       		.uleb128 0x9
 19062 6d45 A8C70000 		.long	0xc7a8
 19063 6d49 00       		.byte	0
 19064 6d4a 34       		.uleb128 0x34
 19065 6d4b 00000000 		.long	.LASF801
 19066 6d4f 0B       		.byte	0xb
 19067 6d50 7701     		.value	0x177
 19068 6d52 00000000 		.long	.LASF933
 19069 6d56 02       		.byte	0x2
 19070 6d57 5F6D0000 		.long	0x6d5f
 19071 6d5b 6A6D0000 		.long	0x6d6a
 19072 6d5f 08       		.uleb128 0x8
 19073 6d60 A2C70000 		.long	0xc7a2
 19074 6d64 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 636


 19075 6d65 8AC70000 		.long	0xc78a
 19076 6d69 00       		.byte	0
 19077 6d6a 63       		.uleb128 0x63
 19078 6d6b 00000000 		.long	.LASF934
 19079 6d6f 0B       		.byte	0xb
 19080 6d70 0401     		.value	0x104
 19081 6d72 926D0000 		.long	0x6d92
 19082 6d76 A26D0000 		.long	0x6da2
 19083 6d7a 35       		.uleb128 0x35
 19084 6d7b 00000000 		.long	.LASF812
 19085 6d7f 78C70000 		.long	0xc778
 19086 6d83 6A       		.uleb128 0x6a
 19087 6d84 00000000 		.long	.LASF826
 19088 6d88 926D0000 		.long	0x6d92
 19089 6d8c 68       		.uleb128 0x68
 19090 6d8d 3E530000 		.long	0x533e
 19091 6d91 00       		.byte	0
 19092 6d92 08       		.uleb128 0x8
 19093 6d93 A2C70000 		.long	0xc7a2
 19094 6d97 09       		.uleb128 0x9
 19095 6d98 78C70000 		.long	0xc778
 19096 6d9c 09       		.uleb128 0x9
 19097 6d9d CBC80000 		.long	0xc8cb
 19098 6da1 00       		.byte	0
 19099 6da2 50       		.uleb128 0x50
 19100 6da3 00000000 		.long	.LASF803
 19101 6da7 53930000 		.long	0x9353
 19102 6dab 00       		.byte	0
 19103 6dac 67       		.uleb128 0x67
 19104 6dad 00000000 		.long	.LASF804
 19105 6db1 68       		.uleb128 0x68
 19106 6db2 5BC50000 		.long	0xc55b
 19107 6db6 68       		.uleb128 0x68
 19108 6db7 3E530000 		.long	0x533e
 19109 6dbb 00       		.byte	0
 19110 6dbc 00       		.byte	0
 19111 6dbd 11       		.uleb128 0x11
 19112 6dbe 0D6C0000 		.long	0x6c0d
 19113 6dc2 3B       		.uleb128 0x3b
 19114 6dc3 00000000 		.long	.LASF935
 19115 6dc7 08       		.byte	0x8
 19116 6dc8 0B       		.byte	0xb
 19117 6dc9 0902     		.value	0x209
 19118 6dcb E36E0000 		.long	0x6ee3
 19119 6dcf 21       		.uleb128 0x21
 19120 6dd0 0D6C0000 		.long	0x6c0d
 19121 6dd4 00       		.byte	0
 19122 6dd5 01       		.byte	0x1
 19123 6dd6 30       		.uleb128 0x30
 19124 6dd7 00000000 		.long	.LASF829
 19125 6ddb 0B       		.byte	0xb
 19126 6ddc 0E02     		.value	0x20e
 19127 6dde 01       		.byte	0x1
 19128 6ddf E76D0000 		.long	0x6de7
 19129 6de3 ED6D0000 		.long	0x6ded
 19130 6de7 08       		.uleb128 0x8
 19131 6de8 AFC70000 		.long	0xc7af
GAS LISTING /tmp/ccJUMvuF.s 			page 637


 19132 6dec 00       		.byte	0
 19133 6ded 31       		.uleb128 0x31
 19134 6dee 00000000 		.long	.LASF829
 19135 6df2 0B       		.byte	0xb
 19136 6df3 1202     		.value	0x212
 19137 6df5 01       		.byte	0x1
 19138 6df6 FE6D0000 		.long	0x6dfe
 19139 6dfa 0E6E0000 		.long	0x6e0e
 19140 6dfe 08       		.uleb128 0x8
 19141 6dff AFC70000 		.long	0xc7af
 19142 6e03 09       		.uleb128 0x9
 19143 6e04 6DC70000 		.long	0xc76d
 19144 6e08 09       		.uleb128 0x9
 19145 6e09 2AC70000 		.long	0xc72a
 19146 6e0d 00       		.byte	0
 19147 6e0e 30       		.uleb128 0x30
 19148 6e0f 00000000 		.long	.LASF829
 19149 6e13 0B       		.byte	0xb
 19150 6e14 1C02     		.value	0x21c
 19151 6e16 01       		.byte	0x1
 19152 6e17 1F6E0000 		.long	0x6e1f
 19153 6e1b 2A6E0000 		.long	0x6e2a
 19154 6e1f 08       		.uleb128 0x8
 19155 6e20 AFC70000 		.long	0xc7af
 19156 6e24 09       		.uleb128 0x9
 19157 6e25 B5C70000 		.long	0xc7b5
 19158 6e29 00       		.byte	0
 19159 6e2a 30       		.uleb128 0x30
 19160 6e2b 00000000 		.long	.LASF829
 19161 6e2f 0B       		.byte	0xb
 19162 6e30 1E02     		.value	0x21e
 19163 6e32 01       		.byte	0x1
 19164 6e33 3B6E0000 		.long	0x6e3b
 19165 6e37 466E0000 		.long	0x6e46
 19166 6e3b 08       		.uleb128 0x8
 19167 6e3c AFC70000 		.long	0xc7af
 19168 6e40 09       		.uleb128 0x9
 19169 6e41 BBC70000 		.long	0xc7bb
 19170 6e45 00       		.byte	0
 19171 6e46 32       		.uleb128 0x32
 19172 6e47 00000000 		.long	.LASF8
 19173 6e4b 0B       		.byte	0xb
 19174 6e4c 6802     		.value	0x268
 19175 6e4e 00000000 		.long	.LASF936
 19176 6e52 C2C70000 		.long	0xc7c2
 19177 6e56 01       		.byte	0x1
 19178 6e57 5F6E0000 		.long	0x6e5f
 19179 6e5b 6A6E0000 		.long	0x6e6a
 19180 6e5f 08       		.uleb128 0x8
 19181 6e60 AFC70000 		.long	0xc7af
 19182 6e64 09       		.uleb128 0x9
 19183 6e65 B5C70000 		.long	0xc7b5
 19184 6e69 00       		.byte	0
 19185 6e6a 32       		.uleb128 0x32
 19186 6e6b 00000000 		.long	.LASF8
 19187 6e6f 0B       		.byte	0xb
 19188 6e70 6F02     		.value	0x26f
GAS LISTING /tmp/ccJUMvuF.s 			page 638


 19189 6e72 00000000 		.long	.LASF937
 19190 6e76 C2C70000 		.long	0xc7c2
 19191 6e7a 01       		.byte	0x1
 19192 6e7b 836E0000 		.long	0x6e83
 19193 6e7f 8E6E0000 		.long	0x6e8e
 19194 6e83 08       		.uleb128 0x8
 19195 6e84 AFC70000 		.long	0xc7af
 19196 6e88 09       		.uleb128 0x9
 19197 6e89 BBC70000 		.long	0xc7bb
 19198 6e8d 00       		.byte	0
 19199 6e8e 34       		.uleb128 0x34
 19200 6e8f 00000000 		.long	.LASF13
 19201 6e93 0B       		.byte	0xb
 19202 6e94 9902     		.value	0x299
 19203 6e96 00000000 		.long	.LASF938
 19204 6e9a 01       		.byte	0x1
 19205 6e9b A36E0000 		.long	0x6ea3
 19206 6e9f AE6E0000 		.long	0x6eae
 19207 6ea3 08       		.uleb128 0x8
 19208 6ea4 AFC70000 		.long	0xc7af
 19209 6ea8 09       		.uleb128 0x9
 19210 6ea9 C2C70000 		.long	0xc7c2
 19211 6ead 00       		.byte	0
 19212 6eae 31       		.uleb128 0x31
 19213 6eaf 00000000 		.long	.LASF939
 19214 6eb3 0B       		.byte	0xb
 19215 6eb4 1902     		.value	0x219
 19216 6eb6 01       		.byte	0x1
 19217 6eb7 D16E0000 		.long	0x6ed1
 19218 6ebb E16E0000 		.long	0x6ee1
 19219 6ebf 18       		.uleb128 0x18
 19220 6ec0 5F553100 		.string	"_U1"
 19221 6ec4 78C70000 		.long	0xc778
 19222 6ec8 18       		.uleb128 0x18
 19223 6ec9 5F553200 		.string	"_U2"
 19224 6ecd 3E530000 		.long	0x533e
 19225 6ed1 08       		.uleb128 0x8
 19226 6ed2 AFC70000 		.long	0xc7af
 19227 6ed6 09       		.uleb128 0x9
 19228 6ed7 78C70000 		.long	0xc778
 19229 6edb 09       		.uleb128 0x9
 19230 6edc CBC80000 		.long	0xc8cb
 19231 6ee0 00       		.byte	0
 19232 6ee1 70       		.uleb128 0x70
 19233 6ee2 00       		.byte	0
 19234 6ee3 11       		.uleb128 0x11
 19235 6ee4 C26D0000 		.long	0x6dc2
 19236 6ee8 24       		.uleb128 0x24
 19237 6ee9 00000000 		.long	.LASF940
 19238 6eed 01       		.byte	0x1
 19239 6eee 1B       		.byte	0x1b
 19240 6eef AF07     		.value	0x7af
 19241 6ef1 026F0000 		.long	0x6f02
 19242 6ef5 5C       		.uleb128 0x5c
 19243 6ef6 00000000 		.long	.LASF513
 19244 6efa 1B       		.byte	0x1b
 19245 6efb B007     		.value	0x7b0
GAS LISTING /tmp/ccJUMvuF.s 			page 639


 19246 6efd 2AC70000 		.long	0xc72a
 19247 6f01 00       		.byte	0
 19248 6f02 24       		.uleb128 0x24
 19249 6f03 00000000 		.long	.LASF941
 19250 6f07 01       		.byte	0x1
 19251 6f08 1B       		.byte	0x1b
 19252 6f09 EC05     		.value	0x5ec
 19253 6f0b 256F0000 		.long	0x6f25
 19254 6f0f 5C       		.uleb128 0x5c
 19255 6f10 00000000 		.long	.LASF513
 19256 6f14 1B       		.byte	0x1b
 19257 6f15 ED05     		.value	0x5ed
 19258 6f17 C8C70000 		.long	0xc7c8
 19259 6f1b 18       		.uleb128 0x18
 19260 6f1c 5F547000 		.string	"_Tp"
 19261 6f20 D2C40000 		.long	0xc4d2
 19262 6f24 00       		.byte	0
 19263 6f25 11       		.uleb128 0x11
 19264 6f26 F2650000 		.long	0x65f2
 19265 6f2a 05       		.uleb128 0x5
 19266 6f2b 00000000 		.long	.LASF942
 19267 6f2f 01       		.byte	0x1
 19268 6f30 21       		.byte	0x21
 19269 6f31 5C       		.byte	0x5c
 19270 6f32 CC6F0000 		.long	0x6fcc
 19271 6f36 21       		.uleb128 0x21
 19272 6f37 28A80000 		.long	0xa828
 19273 6f3b 00       		.byte	0
 19274 6f3c 01       		.byte	0x1
 19275 6f3d 22       		.uleb128 0x22
 19276 6f3e 00000000 		.long	.LASF57
 19277 6f42 21       		.byte	0x21
 19278 6f43 5F       		.byte	0x5f
 19279 6f44 85060000 		.long	0x685
 19280 6f48 01       		.byte	0x1
 19281 6f49 22       		.uleb128 0x22
 19282 6f4a 00000000 		.long	.LASF491
 19283 6f4e 21       		.byte	0x21
 19284 6f4f 61       		.byte	0x61
 19285 6f50 00C80000 		.long	0xc800
 19286 6f54 01       		.byte	0x1
 19287 6f55 22       		.uleb128 0x22
 19288 6f56 00000000 		.long	.LASF19
 19289 6f5a 21       		.byte	0x21
 19290 6f5b 65       		.byte	0x65
 19291 6f5c 5A930000 		.long	0x935a
 19292 6f60 01       		.byte	0x1
 19293 6f61 0C       		.uleb128 0xc
 19294 6f62 00000000 		.long	.LASF60
 19295 6f66 21       		.byte	0x21
 19296 6f67 71       		.byte	0x71
 19297 6f68 01       		.byte	0x1
 19298 6f69 716F0000 		.long	0x6f71
 19299 6f6d 776F0000 		.long	0x6f77
 19300 6f71 08       		.uleb128 0x8
 19301 6f72 24C80000 		.long	0xc824
 19302 6f76 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 640


 19303 6f77 0C       		.uleb128 0xc
 19304 6f78 00000000 		.long	.LASF60
 19305 6f7c 21       		.byte	0x21
 19306 6f7d 73       		.byte	0x73
 19307 6f7e 01       		.byte	0x1
 19308 6f7f 876F0000 		.long	0x6f87
 19309 6f83 926F0000 		.long	0x6f92
 19310 6f87 08       		.uleb128 0x8
 19311 6f88 24C80000 		.long	0xc824
 19312 6f8c 09       		.uleb128 0x9
 19313 6f8d 2AC80000 		.long	0xc82a
 19314 6f91 00       		.byte	0
 19315 6f92 0C       		.uleb128 0xc
 19316 6f93 00000000 		.long	.LASF61
 19317 6f97 21       		.byte	0x21
 19318 6f98 79       		.byte	0x79
 19319 6f99 01       		.byte	0x1
 19320 6f9a A26F0000 		.long	0x6fa2
 19321 6f9e AD6F0000 		.long	0x6fad
 19322 6fa2 08       		.uleb128 0x8
 19323 6fa3 24C80000 		.long	0xc824
 19324 6fa7 08       		.uleb128 0x8
 19325 6fa8 28930000 		.long	0x9328
 19326 6fac 00       		.byte	0
 19327 6fad 5D       		.uleb128 0x5d
 19328 6fae 00000000 		.long	.LASF943
 19329 6fb2 01       		.byte	0x1
 19330 6fb3 21       		.byte	0x21
 19331 6fb4 68       		.byte	0x68
 19332 6fb5 01       		.byte	0x1
 19333 6fb6 13       		.uleb128 0x13
 19334 6fb7 00000000 		.long	.LASF493
 19335 6fbb 21       		.byte	0x21
 19336 6fbc 69       		.byte	0x69
 19337 6fbd 2A6F0000 		.long	0x6f2a
 19338 6fc1 35       		.uleb128 0x35
 19339 6fc2 00000000 		.long	.LASF494
 19340 6fc6 5A930000 		.long	0x935a
 19341 6fca 00       		.byte	0
 19342 6fcb 00       		.byte	0
 19343 6fcc 11       		.uleb128 0x11
 19344 6fcd 2A6F0000 		.long	0x6f2a
 19345 6fd1 16       		.uleb128 0x16
 19346 6fd2 00000000 		.long	.LASF944
 19347 6fd6 01       		.byte	0x1
 19348 6fd7 2E       		.byte	0x2e
 19349 6fd8 69       		.byte	0x69
 19350 6fd9 F26F0000 		.long	0x6ff2
 19351 6fdd 13       		.uleb128 0x13
 19352 6fde 00000000 		.long	.LASF496
 19353 6fe2 2E       		.byte	0x2e
 19354 6fe3 6B       		.byte	0x6b
 19355 6fe4 5A930000 		.long	0x935a
 19356 6fe8 18       		.uleb128 0x18
 19357 6fe9 5F547000 		.string	"_Tp"
 19358 6fed 5A930000 		.long	0x935a
 19359 6ff1 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 641


 19360 6ff2 16       		.uleb128 0x16
 19361 6ff3 00000000 		.long	.LASF945
 19362 6ff7 01       		.byte	0x1
 19363 6ff8 2E       		.byte	0x2e
 19364 6ff9 96       		.byte	0x96
 19365 6ffa 58700000 		.long	0x7058
 19366 6ffe 13       		.uleb128 0x13
 19367 6fff 00000000 		.long	.LASF491
 19368 7003 2E       		.byte	0x2e
 19369 7004 99       		.byte	0x99
 19370 7005 00C80000 		.long	0xc800
 19371 7009 13       		.uleb128 0x13
 19372 700a 00000000 		.long	.LASF498
 19373 700e 2E       		.byte	0x2e
 19374 700f 9D       		.byte	0x9d
 19375 7010 54070000 		.long	0x754
 19376 7014 4E       		.uleb128 0x4e
 19377 7015 00000000 		.long	.LASF499
 19378 7019 2E       		.byte	0x2e
 19379 701a A8       		.byte	0xa8
 19380 701b 00000000 		.long	.LASF946
 19381 701f FE6F0000 		.long	0x6ffe
 19382 7023 2D700000 		.long	0x702d
 19383 7027 09       		.uleb128 0x9
 19384 7028 30C80000 		.long	0xc830
 19385 702c 00       		.byte	0
 19386 702d 13       		.uleb128 0x13
 19387 702e 00000000 		.long	.LASF501
 19388 7032 2E       		.byte	0x2e
 19389 7033 A0       		.byte	0xa0
 19390 7034 01930000 		.long	0x9301
 19391 7038 13       		.uleb128 0x13
 19392 7039 00000000 		.long	.LASF501
 19393 703d 2E       		.byte	0x2e
 19394 703e A0       		.byte	0xa0
 19395 703f C9B70000 		.long	0xb7c9
 19396 7043 13       		.uleb128 0x13
 19397 7044 00000000 		.long	.LASF501
 19398 7048 2E       		.byte	0x2e
 19399 7049 A0       		.byte	0xa0
 19400 704a 3FC50000 		.long	0xc53f
 19401 704e 35       		.uleb128 0x35
 19402 704f 00000000 		.long	.LASF502
 19403 7053 00C80000 		.long	0xc800
 19404 7057 00       		.byte	0
 19405 7058 16       		.uleb128 0x16
 19406 7059 00000000 		.long	.LASF947
 19407 705d 01       		.byte	0x1
 19408 705e 2F       		.byte	0x2f
 19409 705f 50       		.byte	0x50
 19410 7060 26720000 		.long	0x7226
 19411 7064 13       		.uleb128 0x13
 19412 7065 00000000 		.long	.LASF19
 19413 7069 2F       		.byte	0x2f
 19414 706a 55       		.byte	0x55
 19415 706b 556F0000 		.long	0x6f55
 19416 706f 22       		.uleb128 0x22
GAS LISTING /tmp/ccJUMvuF.s 			page 642


 19417 7070 00000000 		.long	.LASF515
 19418 7074 2F       		.byte	0x2f
 19419 7075 5F       		.byte	0x5f
 19420 7076 496F0000 		.long	0x6f49
 19421 707a 03       		.byte	0x3
 19422 707b 13       		.uleb128 0x13
 19423 707c 00000000 		.long	.LASF491
 19424 7080 2F       		.byte	0x2f
 19425 7081 66       		.byte	0x66
 19426 7082 6F700000 		.long	0x706f
 19427 7086 22       		.uleb128 0x22
 19428 7087 00000000 		.long	.LASF516
 19429 708b 2F       		.byte	0x2f
 19430 708c 7E       		.byte	0x7e
 19431 708d 38700000 		.long	0x7038
 19432 7091 03       		.byte	0x3
 19433 7092 13       		.uleb128 0x13
 19434 7093 00000000 		.long	.LASF517
 19435 7097 2F       		.byte	0x2f
 19436 7098 87       		.byte	0x87
 19437 7099 86700000 		.long	0x7086
 19438 709d 22       		.uleb128 0x22
 19439 709e 00000000 		.long	.LASF518
 19440 70a2 2F       		.byte	0x2f
 19441 70a3 94       		.byte	0x94
 19442 70a4 3D6F0000 		.long	0x6f3d
 19443 70a8 03       		.byte	0x3
 19444 70a9 13       		.uleb128 0x13
 19445 70aa 00000000 		.long	.LASF57
 19446 70ae 2F       		.byte	0x2f
 19447 70af 9D       		.byte	0x9d
 19448 70b0 9D700000 		.long	0x709d
 19449 70b4 5E       		.uleb128 0x5e
 19450 70b5 00000000 		.long	.LASF519
 19451 70b9 2F       		.byte	0x2f
 19452 70ba 5F       		.byte	0x5f
 19453 70bb 00000000 		.long	.LASF948
 19454 70bf 36C80000 		.long	0xc836
 19455 70c3 03       		.byte	0x3
 19456 70c4 CA700000 		.long	0x70ca
 19457 70c8 3A       		.uleb128 0x3a
 19458 70c9 00       		.byte	0
 19459 70ca 5E       		.uleb128 0x5e
 19460 70cb 00000000 		.long	.LASF521
 19461 70cf 2F       		.byte	0x2f
 19462 70d0 68       		.byte	0x68
 19463 70d1 00000000 		.long	.LASF949
 19464 70d5 43700000 		.long	0x7043
 19465 70d9 03       		.byte	0x3
 19466 70da E0700000 		.long	0x70e0
 19467 70de 3A       		.uleb128 0x3a
 19468 70df 00       		.byte	0
 19469 70e0 5E       		.uleb128 0x5e
 19470 70e1 00000000 		.long	.LASF523
 19471 70e5 2F       		.byte	0x2f
 19472 70e6 73       		.byte	0x73
 19473 70e7 00000000 		.long	.LASF950
GAS LISTING /tmp/ccJUMvuF.s 			page 643


 19474 70eb 2D700000 		.long	0x702d
 19475 70ef 03       		.byte	0x3
 19476 70f0 F6700000 		.long	0x70f6
 19477 70f4 3A       		.uleb128 0x3a
 19478 70f5 00       		.byte	0
 19479 70f6 5E       		.uleb128 0x5e
 19480 70f7 00000000 		.long	.LASF525
 19481 70fb 2F       		.byte	0x2f
 19482 70fc 7E       		.byte	0x7e
 19483 70fd 00000000 		.long	.LASF951
 19484 7101 38700000 		.long	0x7038
 19485 7105 03       		.byte	0x3
 19486 7106 0C710000 		.long	0x710c
 19487 710a 3A       		.uleb128 0x3a
 19488 710b 00       		.byte	0
 19489 710c 5E       		.uleb128 0x5e
 19490 710d 00000000 		.long	.LASF527
 19491 7111 2F       		.byte	0x2f
 19492 7112 89       		.byte	0x89
 19493 7113 00000000 		.long	.LASF952
 19494 7117 09700000 		.long	0x7009
 19495 711b 03       		.byte	0x3
 19496 711c 22710000 		.long	0x7122
 19497 7120 3A       		.uleb128 0x3a
 19498 7121 00       		.byte	0
 19499 7122 5E       		.uleb128 0x5e
 19500 7123 00000000 		.long	.LASF529
 19501 7127 2F       		.byte	0x2f
 19502 7128 94       		.byte	0x94
 19503 7129 00000000 		.long	.LASF953
 19504 712d C0320000 		.long	0x32c0
 19505 7131 03       		.byte	0x3
 19506 7132 38710000 		.long	0x7138
 19507 7136 3A       		.uleb128 0x3a
 19508 7137 00       		.byte	0
 19509 7138 5E       		.uleb128 0x5e
 19510 7139 00000000 		.long	.LASF531
 19511 713d 2F       		.byte	0x2f
 19512 713e 9F       		.byte	0x9f
 19513 713f 00000000 		.long	.LASF954
 19514 7143 A4340000 		.long	0x34a4
 19515 7147 03       		.byte	0x3
 19516 7148 4E710000 		.long	0x714e
 19517 714c 3A       		.uleb128 0x3a
 19518 714d 00       		.byte	0
 19519 714e 5E       		.uleb128 0x5e
 19520 714f 00000000 		.long	.LASF533
 19521 7153 2F       		.byte	0x2f
 19522 7154 AB       		.byte	0xab
 19523 7155 00000000 		.long	.LASF955
 19524 7159 A4340000 		.long	0x34a4
 19525 715d 03       		.byte	0x3
 19526 715e 64710000 		.long	0x7164
 19527 7162 3A       		.uleb128 0x3a
 19528 7163 00       		.byte	0
 19529 7164 5E       		.uleb128 0x5e
 19530 7165 00000000 		.long	.LASF535
GAS LISTING /tmp/ccJUMvuF.s 			page 644


 19531 7169 2F       		.byte	0x2f
 19532 716a B7       		.byte	0xb7
 19533 716b 00000000 		.long	.LASF956
 19534 716f A4340000 		.long	0x34a4
 19535 7173 03       		.byte	0x3
 19536 7174 7A710000 		.long	0x717a
 19537 7178 3A       		.uleb128 0x3a
 19538 7179 00       		.byte	0
 19539 717a 1E       		.uleb128 0x1e
 19540 717b 00000000 		.long	.LASF537
 19541 717f 2F       		.byte	0x2f
 19542 7180 6401     		.value	0x164
 19543 7182 00000000 		.long	.LASF957
 19544 7186 7B700000 		.long	0x707b
 19545 718a 99710000 		.long	0x7199
 19546 718e 09       		.uleb128 0x9
 19547 718f 3CC80000 		.long	0xc83c
 19548 7193 09       		.uleb128 0x9
 19549 7194 A9700000 		.long	0x70a9
 19550 7198 00       		.byte	0
 19551 7199 1E       		.uleb128 0x1e
 19552 719a 00000000 		.long	.LASF537
 19553 719e 2F       		.byte	0x2f
 19554 719f 7301     		.value	0x173
 19555 71a1 00000000 		.long	.LASF958
 19556 71a5 7B700000 		.long	0x707b
 19557 71a9 BD710000 		.long	0x71bd
 19558 71ad 09       		.uleb128 0x9
 19559 71ae 3CC80000 		.long	0xc83c
 19560 71b2 09       		.uleb128 0x9
 19561 71b3 A9700000 		.long	0x70a9
 19562 71b7 09       		.uleb128 0x9
 19563 71b8 92700000 		.long	0x7092
 19564 71bc 00       		.byte	0
 19565 71bd 2E       		.uleb128 0x2e
 19566 71be 00000000 		.long	.LASF540
 19567 71c2 2F       		.byte	0x2f
 19568 71c3 7E01     		.value	0x17e
 19569 71c5 00000000 		.long	.LASF959
 19570 71c9 DD710000 		.long	0x71dd
 19571 71cd 09       		.uleb128 0x9
 19572 71ce 3CC80000 		.long	0xc83c
 19573 71d2 09       		.uleb128 0x9
 19574 71d3 7B700000 		.long	0x707b
 19575 71d7 09       		.uleb128 0x9
 19576 71d8 A9700000 		.long	0x70a9
 19577 71dc 00       		.byte	0
 19578 71dd 1E       		.uleb128 0x1e
 19579 71de 00000000 		.long	.LASF171
 19580 71e2 2F       		.byte	0x2f
 19581 71e3 A501     		.value	0x1a5
 19582 71e5 00000000 		.long	.LASF960
 19583 71e9 A9700000 		.long	0x70a9
 19584 71ed F7710000 		.long	0x71f7
 19585 71f1 09       		.uleb128 0x9
 19586 71f2 2AC80000 		.long	0xc82a
 19587 71f6 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 645


 19588 71f7 1E       		.uleb128 0x1e
 19589 71f8 00000000 		.long	.LASF543
 19590 71fc 2F       		.byte	0x2f
 19591 71fd B101     		.value	0x1b1
 19592 71ff 00000000 		.long	.LASF961
 19593 7203 2A6F0000 		.long	0x6f2a
 19594 7207 11720000 		.long	0x7211
 19595 720b 09       		.uleb128 0x9
 19596 720c 2AC80000 		.long	0xc82a
 19597 7210 00       		.byte	0
 19598 7211 13       		.uleb128 0x13
 19599 7212 00000000 		.long	.LASF545
 19600 7216 2F       		.byte	0x2f
 19601 7217 C5       		.byte	0xc5
 19602 7218 32720000 		.long	0x7232
 19603 721c 35       		.uleb128 0x35
 19604 721d 00000000 		.long	.LASF303
 19605 7221 2A6F0000 		.long	0x6f2a
 19606 7225 00       		.byte	0
 19607 7226 16       		.uleb128 0x16
 19608 7227 00000000 		.long	.LASF962
 19609 722b 01       		.byte	0x1
 19610 722c 2F       		.byte	0x2f
 19611 722d 3F       		.byte	0x3f
 19612 722e 50720000 		.long	0x7250
 19613 7232 13       		.uleb128 0x13
 19614 7233 00000000 		.long	.LASF496
 19615 7237 2F       		.byte	0x2f
 19616 7238 41       		.byte	0x41
 19617 7239 B66F0000 		.long	0x6fb6
 19618 723d 35       		.uleb128 0x35
 19619 723e 00000000 		.long	.LASF303
 19620 7242 2A6F0000 		.long	0x6f2a
 19621 7246 18       		.uleb128 0x18
 19622 7247 5F547000 		.string	"_Tp"
 19623 724b 5A930000 		.long	0x935a
 19624 724f 00       		.byte	0
 19625 7250 16       		.uleb128 0x16
 19626 7251 00000000 		.long	.LASF963
 19627 7255 18       		.byte	0x18
 19628 7256 06       		.byte	0x6
 19629 7257 48       		.byte	0x48
 19630 7258 E8740000 		.long	0x74e8
 19631 725c 16       		.uleb128 0x16
 19632 725d 00000000 		.long	.LASF549
 19633 7261 18       		.byte	0x18
 19634 7262 06       		.byte	0x6
 19635 7263 4F       		.byte	0x4f
 19636 7264 0E730000 		.long	0x730e
 19637 7268 25       		.uleb128 0x25
 19638 7269 2A6F0000 		.long	0x6f2a
 19639 726d 00       		.byte	0
 19640 726e 06       		.uleb128 0x6
 19641 726f 00000000 		.long	.LASF550
 19642 7273 06       		.byte	0x6
 19643 7274 52       		.byte	0x52
 19644 7275 0E730000 		.long	0x730e
GAS LISTING /tmp/ccJUMvuF.s 			page 646


 19645 7279 00       		.byte	0
 19646 727a 06       		.uleb128 0x6
 19647 727b 00000000 		.long	.LASF551
 19648 727f 06       		.byte	0x6
 19649 7280 53       		.byte	0x53
 19650 7281 0E730000 		.long	0x730e
 19651 7285 08       		.byte	0x8
 19652 7286 06       		.uleb128 0x6
 19653 7287 00000000 		.long	.LASF552
 19654 728b 06       		.byte	0x6
 19655 728c 54       		.byte	0x54
 19656 728d 0E730000 		.long	0x730e
 19657 7291 10       		.byte	0x10
 19658 7292 37       		.uleb128 0x37
 19659 7293 00000000 		.long	.LASF549
 19660 7297 06       		.byte	0x6
 19661 7298 56       		.byte	0x56
 19662 7299 A1720000 		.long	0x72a1
 19663 729d A7720000 		.long	0x72a7
 19664 72a1 08       		.uleb128 0x8
 19665 72a2 4EC80000 		.long	0xc84e
 19666 72a6 00       		.byte	0
 19667 72a7 37       		.uleb128 0x37
 19668 72a8 00000000 		.long	.LASF549
 19669 72ac 06       		.byte	0x6
 19670 72ad 5A       		.byte	0x5a
 19671 72ae B6720000 		.long	0x72b6
 19672 72b2 C1720000 		.long	0x72c1
 19673 72b6 08       		.uleb128 0x8
 19674 72b7 4EC80000 		.long	0xc84e
 19675 72bb 09       		.uleb128 0x9
 19676 72bc 54C80000 		.long	0xc854
 19677 72c0 00       		.byte	0
 19678 72c1 37       		.uleb128 0x37
 19679 72c2 00000000 		.long	.LASF549
 19680 72c6 06       		.byte	0x6
 19681 72c7 5F       		.byte	0x5f
 19682 72c8 D0720000 		.long	0x72d0
 19683 72cc DB720000 		.long	0x72db
 19684 72d0 08       		.uleb128 0x8
 19685 72d1 4EC80000 		.long	0xc84e
 19686 72d5 09       		.uleb128 0x9
 19687 72d6 5AC80000 		.long	0xc85a
 19688 72da 00       		.byte	0
 19689 72db 0A       		.uleb128 0xa
 19690 72dc 00000000 		.long	.LASF553
 19691 72e0 06       		.byte	0x6
 19692 72e1 65       		.byte	0x65
 19693 72e2 00000000 		.long	.LASF964
 19694 72e6 EE720000 		.long	0x72ee
 19695 72ea F9720000 		.long	0x72f9
 19696 72ee 08       		.uleb128 0x8
 19697 72ef 4EC80000 		.long	0xc84e
 19698 72f3 09       		.uleb128 0x9
 19699 72f4 61C80000 		.long	0xc861
 19700 72f8 00       		.byte	0
 19701 72f9 28       		.uleb128 0x28
GAS LISTING /tmp/ccJUMvuF.s 			page 647


 19702 72fa 00000000 		.long	.LASF555
 19703 72fe 02730000 		.long	0x7302
 19704 7302 08       		.uleb128 0x8
 19705 7303 4EC80000 		.long	0xc84e
 19706 7307 08       		.uleb128 0x8
 19707 7308 28930000 		.long	0x9328
 19708 730c 00       		.byte	0
 19709 730d 00       		.byte	0
 19710 730e 13       		.uleb128 0x13
 19711 730f 00000000 		.long	.LASF491
 19712 7313 06       		.byte	0x6
 19713 7314 4D       		.byte	0x4d
 19714 7315 A0A90000 		.long	0xa9a0
 19715 7319 11       		.uleb128 0x11
 19716 731a 1E730000 		.long	0x731e
 19717 731e 13       		.uleb128 0x13
 19718 731f 00000000 		.long	.LASF556
 19719 7323 06       		.byte	0x6
 19720 7324 4B       		.byte	0x4b
 19721 7325 5FAA0000 		.long	0xaa5f
 19722 7329 06       		.uleb128 0x6
 19723 732a 00000000 		.long	.LASF557
 19724 732e 06       		.byte	0x6
 19725 732f A4       		.byte	0xa4
 19726 7330 5C720000 		.long	0x725c
 19727 7334 00       		.byte	0
 19728 7335 13       		.uleb128 0x13
 19729 7336 00000000 		.long	.LASF67
 19730 733a 06       		.byte	0x6
 19731 733b 6E       		.byte	0x6e
 19732 733c 2A6F0000 		.long	0x6f2a
 19733 7340 0B       		.uleb128 0xb
 19734 7341 00000000 		.long	.LASF558
 19735 7345 06       		.byte	0x6
 19736 7346 71       		.byte	0x71
 19737 7347 00000000 		.long	.LASF965
 19738 734b 67C80000 		.long	0xc867
 19739 734f 57730000 		.long	0x7357
 19740 7353 5D730000 		.long	0x735d
 19741 7357 08       		.uleb128 0x8
 19742 7358 6DC80000 		.long	0xc86d
 19743 735c 00       		.byte	0
 19744 735d 0B       		.uleb128 0xb
 19745 735e 00000000 		.long	.LASF558
 19746 7362 06       		.byte	0x6
 19747 7363 75       		.byte	0x75
 19748 7364 00000000 		.long	.LASF966
 19749 7368 54C80000 		.long	0xc854
 19750 736c 74730000 		.long	0x7374
 19751 7370 7A730000 		.long	0x737a
 19752 7374 08       		.uleb128 0x8
 19753 7375 73C80000 		.long	0xc873
 19754 7379 00       		.byte	0
 19755 737a 0B       		.uleb128 0xb
 19756 737b 00000000 		.long	.LASF262
 19757 737f 06       		.byte	0x6
 19758 7380 79       		.byte	0x79
GAS LISTING /tmp/ccJUMvuF.s 			page 648


 19759 7381 00000000 		.long	.LASF967
 19760 7385 35730000 		.long	0x7335
 19761 7389 91730000 		.long	0x7391
 19762 738d 97730000 		.long	0x7397
 19763 7391 08       		.uleb128 0x8
 19764 7392 73C80000 		.long	0xc873
 19765 7396 00       		.byte	0
 19766 7397 37       		.uleb128 0x37
 19767 7398 00000000 		.long	.LASF562
 19768 739c 06       		.byte	0x6
 19769 739d 7C       		.byte	0x7c
 19770 739e A6730000 		.long	0x73a6
 19771 73a2 AC730000 		.long	0x73ac
 19772 73a6 08       		.uleb128 0x8
 19773 73a7 6DC80000 		.long	0xc86d
 19774 73ab 00       		.byte	0
 19775 73ac 37       		.uleb128 0x37
 19776 73ad 00000000 		.long	.LASF562
 19777 73b1 06       		.byte	0x6
 19778 73b2 7F       		.byte	0x7f
 19779 73b3 BB730000 		.long	0x73bb
 19780 73b7 C6730000 		.long	0x73c6
 19781 73bb 08       		.uleb128 0x8
 19782 73bc 6DC80000 		.long	0xc86d
 19783 73c0 09       		.uleb128 0x9
 19784 73c1 79C80000 		.long	0xc879
 19785 73c5 00       		.byte	0
 19786 73c6 11       		.uleb128 0x11
 19787 73c7 35730000 		.long	0x7335
 19788 73cb 37       		.uleb128 0x37
 19789 73cc 00000000 		.long	.LASF562
 19790 73d0 06       		.byte	0x6
 19791 73d1 82       		.byte	0x82
 19792 73d2 DA730000 		.long	0x73da
 19793 73d6 E5730000 		.long	0x73e5
 19794 73da 08       		.uleb128 0x8
 19795 73db 6DC80000 		.long	0xc86d
 19796 73df 09       		.uleb128 0x9
 19797 73e0 85060000 		.long	0x685
 19798 73e4 00       		.byte	0
 19799 73e5 37       		.uleb128 0x37
 19800 73e6 00000000 		.long	.LASF562
 19801 73ea 06       		.byte	0x6
 19802 73eb 86       		.byte	0x86
 19803 73ec F4730000 		.long	0x73f4
 19804 73f0 04740000 		.long	0x7404
 19805 73f4 08       		.uleb128 0x8
 19806 73f5 6DC80000 		.long	0xc86d
 19807 73f9 09       		.uleb128 0x9
 19808 73fa 85060000 		.long	0x685
 19809 73fe 09       		.uleb128 0x9
 19810 73ff 79C80000 		.long	0xc879
 19811 7403 00       		.byte	0
 19812 7404 37       		.uleb128 0x37
 19813 7405 00000000 		.long	.LASF562
 19814 7409 06       		.byte	0x6
 19815 740a 8B       		.byte	0x8b
GAS LISTING /tmp/ccJUMvuF.s 			page 649


 19816 740b 13740000 		.long	0x7413
 19817 740f 1E740000 		.long	0x741e
 19818 7413 08       		.uleb128 0x8
 19819 7414 6DC80000 		.long	0xc86d
 19820 7418 09       		.uleb128 0x9
 19821 7419 5AC80000 		.long	0xc85a
 19822 741d 00       		.byte	0
 19823 741e 37       		.uleb128 0x37
 19824 741f 00000000 		.long	.LASF562
 19825 7423 06       		.byte	0x6
 19826 7424 8E       		.byte	0x8e
 19827 7425 2D740000 		.long	0x742d
 19828 7429 38740000 		.long	0x7438
 19829 742d 08       		.uleb128 0x8
 19830 742e 6DC80000 		.long	0xc86d
 19831 7432 09       		.uleb128 0x9
 19832 7433 7FC80000 		.long	0xc87f
 19833 7437 00       		.byte	0
 19834 7438 37       		.uleb128 0x37
 19835 7439 00000000 		.long	.LASF562
 19836 743d 06       		.byte	0x6
 19837 743e 92       		.byte	0x92
 19838 743f 47740000 		.long	0x7447
 19839 7443 57740000 		.long	0x7457
 19840 7447 08       		.uleb128 0x8
 19841 7448 6DC80000 		.long	0xc86d
 19842 744c 09       		.uleb128 0x9
 19843 744d 7FC80000 		.long	0xc87f
 19844 7451 09       		.uleb128 0x9
 19845 7452 79C80000 		.long	0xc879
 19846 7456 00       		.byte	0
 19847 7457 37       		.uleb128 0x37
 19848 7458 00000000 		.long	.LASF563
 19849 745c 06       		.byte	0x6
 19850 745d 9F       		.byte	0x9f
 19851 745e 66740000 		.long	0x7466
 19852 7462 71740000 		.long	0x7471
 19853 7466 08       		.uleb128 0x8
 19854 7467 6DC80000 		.long	0xc86d
 19855 746b 08       		.uleb128 0x8
 19856 746c 28930000 		.long	0x9328
 19857 7470 00       		.byte	0
 19858 7471 0B       		.uleb128 0xb
 19859 7472 00000000 		.long	.LASF564
 19860 7476 06       		.byte	0x6
 19861 7477 A7       		.byte	0xa7
 19862 7478 00000000 		.long	.LASF968
 19863 747c 0E730000 		.long	0x730e
 19864 7480 88740000 		.long	0x7488
 19865 7484 93740000 		.long	0x7493
 19866 7488 08       		.uleb128 0x8
 19867 7489 6DC80000 		.long	0xc86d
 19868 748d 09       		.uleb128 0x9
 19869 748e 85060000 		.long	0x685
 19870 7492 00       		.byte	0
 19871 7493 0A       		.uleb128 0xa
 19872 7494 00000000 		.long	.LASF566
GAS LISTING /tmp/ccJUMvuF.s 			page 650


 19873 7498 06       		.byte	0x6
 19874 7499 AE       		.byte	0xae
 19875 749a 00000000 		.long	.LASF969
 19876 749e A6740000 		.long	0x74a6
 19877 74a2 B6740000 		.long	0x74b6
 19878 74a6 08       		.uleb128 0x8
 19879 74a7 6DC80000 		.long	0xc86d
 19880 74ab 09       		.uleb128 0x9
 19881 74ac 0E730000 		.long	0x730e
 19882 74b0 09       		.uleb128 0x9
 19883 74b1 85060000 		.long	0x685
 19884 74b5 00       		.byte	0
 19885 74b6 0E       		.uleb128 0xe
 19886 74b7 00000000 		.long	.LASF568
 19887 74bb 06       		.byte	0x6
 19888 74bc B7       		.byte	0xb7
 19889 74bd 00000000 		.long	.LASF970
 19890 74c1 03       		.byte	0x3
 19891 74c2 CA740000 		.long	0x74ca
 19892 74c6 D5740000 		.long	0x74d5
 19893 74ca 08       		.uleb128 0x8
 19894 74cb 6DC80000 		.long	0xc86d
 19895 74cf 09       		.uleb128 0x9
 19896 74d0 85060000 		.long	0x685
 19897 74d4 00       		.byte	0
 19898 74d5 18       		.uleb128 0x18
 19899 74d6 5F547000 		.string	"_Tp"
 19900 74da 5A930000 		.long	0x935a
 19901 74de 35       		.uleb128 0x35
 19902 74df 00000000 		.long	.LASF303
 19903 74e3 2A6F0000 		.long	0x6f2a
 19904 74e7 00       		.byte	0
 19905 74e8 11       		.uleb128 0x11
 19906 74e9 50720000 		.long	0x7250
 19907 74ed 05       		.uleb128 0x5
 19908 74ee 00000000 		.long	.LASF971
 19909 74f2 18       		.byte	0x18
 19910 74f3 06       		.byte	0x6
 19911 74f4 D6       		.byte	0xd6
 19912 74f5 A87E0000 		.long	0x7ea8
 19913 74f9 12       		.uleb128 0x12
 19914 74fa 06       		.byte	0x6
 19915 74fb D6       		.byte	0xd6
 19916 74fc 71740000 		.long	0x7471
 19917 7500 12       		.uleb128 0x12
 19918 7501 06       		.byte	0x6
 19919 7502 D6       		.byte	0xd6
 19920 7503 93740000 		.long	0x7493
 19921 7507 12       		.uleb128 0x12
 19922 7508 06       		.byte	0x6
 19923 7509 D6       		.byte	0xd6
 19924 750a 29730000 		.long	0x7329
 19925 750e 12       		.uleb128 0x12
 19926 750f 06       		.byte	0x6
 19927 7510 D6       		.byte	0xd6
 19928 7511 5D730000 		.long	0x735d
 19929 7515 12       		.uleb128 0x12
GAS LISTING /tmp/ccJUMvuF.s 			page 651


 19930 7516 06       		.byte	0x6
 19931 7517 D6       		.byte	0xd6
 19932 7518 7A730000 		.long	0x737a
 19933 751c 21       		.uleb128 0x21
 19934 751d 50720000 		.long	0x7250
 19935 7521 00       		.byte	0
 19936 7522 02       		.byte	0x2
 19937 7523 22       		.uleb128 0x22
 19938 7524 00000000 		.long	.LASF19
 19939 7528 06       		.byte	0x6
 19940 7529 E2       		.byte	0xe2
 19941 752a 5A930000 		.long	0x935a
 19942 752e 01       		.byte	0x1
 19943 752f 22       		.uleb128 0x22
 19944 7530 00000000 		.long	.LASF491
 19945 7534 06       		.byte	0x6
 19946 7535 E3       		.byte	0xe3
 19947 7536 0E730000 		.long	0x730e
 19948 753a 01       		.byte	0x1
 19949 753b 22       		.uleb128 0x22
 19950 753c 00000000 		.long	.LASF58
 19951 7540 06       		.byte	0x6
 19952 7541 E5       		.byte	0xe5
 19953 7542 ABA90000 		.long	0xa9ab
 19954 7546 01       		.byte	0x1
 19955 7547 22       		.uleb128 0x22
 19956 7548 00000000 		.long	.LASF59
 19957 754c 06       		.byte	0x6
 19958 754d E6       		.byte	0xe6
 19959 754e B6A90000 		.long	0xa9b6
 19960 7552 01       		.byte	0x1
 19961 7553 22       		.uleb128 0x22
 19962 7554 00000000 		.long	.LASF68
 19963 7558 06       		.byte	0x6
 19964 7559 E7       		.byte	0xe7
 19965 755a 7EAA0000 		.long	0xaa7e
 19966 755e 01       		.byte	0x1
 19967 755f 22       		.uleb128 0x22
 19968 7560 00000000 		.long	.LASF69
 19969 7564 06       		.byte	0x6
 19970 7565 E9       		.byte	0xe9
 19971 7566 83AA0000 		.long	0xaa83
 19972 756a 01       		.byte	0x1
 19973 756b 22       		.uleb128 0x22
 19974 756c 00000000 		.long	.LASF70
 19975 7570 06       		.byte	0x6
 19976 7571 EA       		.byte	0xea
 19977 7572 A87E0000 		.long	0x7ea8
 19978 7576 01       		.byte	0x1
 19979 7577 22       		.uleb128 0x22
 19980 7578 00000000 		.long	.LASF71
 19981 757c 06       		.byte	0x6
 19982 757d EB       		.byte	0xeb
 19983 757e AD7E0000 		.long	0x7ead
 19984 7582 01       		.byte	0x1
 19985 7583 22       		.uleb128 0x22
 19986 7584 00000000 		.long	.LASF57
GAS LISTING /tmp/ccJUMvuF.s 			page 652


 19987 7588 06       		.byte	0x6
 19988 7589 EC       		.byte	0xec
 19989 758a 85060000 		.long	0x685
 19990 758e 01       		.byte	0x1
 19991 758f 22       		.uleb128 0x22
 19992 7590 00000000 		.long	.LASF67
 19993 7594 06       		.byte	0x6
 19994 7595 EE       		.byte	0xee
 19995 7596 2A6F0000 		.long	0x6f2a
 19996 759a 01       		.byte	0x1
 19997 759b 0C       		.uleb128 0xc
 19998 759c 00000000 		.long	.LASF571
 19999 75a0 06       		.byte	0x6
 20000 75a1 FD       		.byte	0xfd
 20001 75a2 01       		.byte	0x1
 20002 75a3 AB750000 		.long	0x75ab
 20003 75a7 B1750000 		.long	0x75b1
 20004 75ab 08       		.uleb128 0x8
 20005 75ac 86C80000 		.long	0xc886
 20006 75b0 00       		.byte	0
 20007 75b1 31       		.uleb128 0x31
 20008 75b2 00000000 		.long	.LASF571
 20009 75b6 06       		.byte	0x6
 20010 75b7 0801     		.value	0x108
 20011 75b9 01       		.byte	0x1
 20012 75ba C2750000 		.long	0x75c2
 20013 75be CD750000 		.long	0x75cd
 20014 75c2 08       		.uleb128 0x8
 20015 75c3 86C80000 		.long	0xc886
 20016 75c7 09       		.uleb128 0x9
 20017 75c8 8CC80000 		.long	0xc88c
 20018 75cc 00       		.byte	0
 20019 75cd 11       		.uleb128 0x11
 20020 75ce 8F750000 		.long	0x758f
 20021 75d2 31       		.uleb128 0x31
 20022 75d3 00000000 		.long	.LASF571
 20023 75d7 06       		.byte	0x6
 20024 75d8 1501     		.value	0x115
 20025 75da 01       		.byte	0x1
 20026 75db E3750000 		.long	0x75e3
 20027 75df F3750000 		.long	0x75f3
 20028 75e3 08       		.uleb128 0x8
 20029 75e4 86C80000 		.long	0xc886
 20030 75e8 09       		.uleb128 0x9
 20031 75e9 83750000 		.long	0x7583
 20032 75ed 09       		.uleb128 0x9
 20033 75ee 8CC80000 		.long	0xc88c
 20034 75f2 00       		.byte	0
 20035 75f3 30       		.uleb128 0x30
 20036 75f4 00000000 		.long	.LASF571
 20037 75f8 06       		.byte	0x6
 20038 75f9 2101     		.value	0x121
 20039 75fb 01       		.byte	0x1
 20040 75fc 04760000 		.long	0x7604
 20041 7600 19760000 		.long	0x7619
 20042 7604 08       		.uleb128 0x8
 20043 7605 86C80000 		.long	0xc886
GAS LISTING /tmp/ccJUMvuF.s 			page 653


 20044 7609 09       		.uleb128 0x9
 20045 760a 83750000 		.long	0x7583
 20046 760e 09       		.uleb128 0x9
 20047 760f 92C80000 		.long	0xc892
 20048 7613 09       		.uleb128 0x9
 20049 7614 8CC80000 		.long	0xc88c
 20050 7618 00       		.byte	0
 20051 7619 11       		.uleb128 0x11
 20052 761a 23750000 		.long	0x7523
 20053 761e 30       		.uleb128 0x30
 20054 761f 00000000 		.long	.LASF571
 20055 7623 06       		.byte	0x6
 20056 7624 3E01     		.value	0x13e
 20057 7626 01       		.byte	0x1
 20058 7627 2F760000 		.long	0x762f
 20059 762b 3A760000 		.long	0x763a
 20060 762f 08       		.uleb128 0x8
 20061 7630 86C80000 		.long	0xc886
 20062 7634 09       		.uleb128 0x9
 20063 7635 98C80000 		.long	0xc898
 20064 7639 00       		.byte	0
 20065 763a 30       		.uleb128 0x30
 20066 763b 00000000 		.long	.LASF571
 20067 763f 06       		.byte	0x6
 20068 7640 4F01     		.value	0x14f
 20069 7642 01       		.byte	0x1
 20070 7643 4B760000 		.long	0x764b
 20071 7647 56760000 		.long	0x7656
 20072 764b 08       		.uleb128 0x8
 20073 764c 86C80000 		.long	0xc886
 20074 7650 09       		.uleb128 0x9
 20075 7651 9EC80000 		.long	0xc89e
 20076 7655 00       		.byte	0
 20077 7656 30       		.uleb128 0x30
 20078 7657 00000000 		.long	.LASF571
 20079 765b 06       		.byte	0x6
 20080 765c 5301     		.value	0x153
 20081 765e 01       		.byte	0x1
 20082 765f 67760000 		.long	0x7667
 20083 7663 77760000 		.long	0x7677
 20084 7667 08       		.uleb128 0x8
 20085 7668 86C80000 		.long	0xc886
 20086 766c 09       		.uleb128 0x9
 20087 766d 98C80000 		.long	0xc898
 20088 7671 09       		.uleb128 0x9
 20089 7672 8CC80000 		.long	0xc88c
 20090 7676 00       		.byte	0
 20091 7677 30       		.uleb128 0x30
 20092 7678 00000000 		.long	.LASF571
 20093 767c 06       		.byte	0x6
 20094 767d 5C01     		.value	0x15c
 20095 767f 01       		.byte	0x1
 20096 7680 88760000 		.long	0x7688
 20097 7684 98760000 		.long	0x7698
 20098 7688 08       		.uleb128 0x8
 20099 7689 86C80000 		.long	0xc886
 20100 768d 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 654


 20101 768e 9EC80000 		.long	0xc89e
 20102 7692 09       		.uleb128 0x9
 20103 7693 8CC80000 		.long	0xc88c
 20104 7697 00       		.byte	0
 20105 7698 30       		.uleb128 0x30
 20106 7699 00000000 		.long	.LASF571
 20107 769d 06       		.byte	0x6
 20108 769e 7501     		.value	0x175
 20109 76a0 01       		.byte	0x1
 20110 76a1 A9760000 		.long	0x76a9
 20111 76a5 B9760000 		.long	0x76b9
 20112 76a9 08       		.uleb128 0x8
 20113 76aa 86C80000 		.long	0xc886
 20114 76ae 09       		.uleb128 0x9
 20115 76af B77E0000 		.long	0x7eb7
 20116 76b3 09       		.uleb128 0x9
 20117 76b4 8CC80000 		.long	0xc88c
 20118 76b8 00       		.byte	0
 20119 76b9 30       		.uleb128 0x30
 20120 76ba 00000000 		.long	.LASF572
 20121 76be 06       		.byte	0x6
 20122 76bf A701     		.value	0x1a7
 20123 76c1 01       		.byte	0x1
 20124 76c2 CA760000 		.long	0x76ca
 20125 76c6 D5760000 		.long	0x76d5
 20126 76ca 08       		.uleb128 0x8
 20127 76cb 86C80000 		.long	0xc886
 20128 76cf 08       		.uleb128 0x8
 20129 76d0 28930000 		.long	0x9328
 20130 76d4 00       		.byte	0
 20131 76d5 0D       		.uleb128 0xd
 20132 76d6 00000000 		.long	.LASF8
 20133 76da 30       		.byte	0x30
 20134 76db A7       		.byte	0xa7
 20135 76dc 00000000 		.long	.LASF972
 20136 76e0 A5C80000 		.long	0xc8a5
 20137 76e4 01       		.byte	0x1
 20138 76e5 ED760000 		.long	0x76ed
 20139 76e9 F8760000 		.long	0x76f8
 20140 76ed 08       		.uleb128 0x8
 20141 76ee 86C80000 		.long	0xc886
 20142 76f2 09       		.uleb128 0x9
 20143 76f3 98C80000 		.long	0xc898
 20144 76f7 00       		.byte	0
 20145 76f8 32       		.uleb128 0x32
 20146 76f9 00000000 		.long	.LASF8
 20147 76fd 06       		.byte	0x6
 20148 76fe C001     		.value	0x1c0
 20149 7700 00000000 		.long	.LASF973
 20150 7704 A5C80000 		.long	0xc8a5
 20151 7708 01       		.byte	0x1
 20152 7709 11770000 		.long	0x7711
 20153 770d 1C770000 		.long	0x771c
 20154 7711 08       		.uleb128 0x8
 20155 7712 86C80000 		.long	0xc886
 20156 7716 09       		.uleb128 0x9
 20157 7717 9EC80000 		.long	0xc89e
GAS LISTING /tmp/ccJUMvuF.s 			page 655


 20158 771b 00       		.byte	0
 20159 771c 32       		.uleb128 0x32
 20160 771d 00000000 		.long	.LASF8
 20161 7721 06       		.byte	0x6
 20162 7722 D601     		.value	0x1d6
 20163 7724 00000000 		.long	.LASF974
 20164 7728 A5C80000 		.long	0xc8a5
 20165 772c 01       		.byte	0x1
 20166 772d 35770000 		.long	0x7735
 20167 7731 40770000 		.long	0x7740
 20168 7735 08       		.uleb128 0x8
 20169 7736 86C80000 		.long	0xc886
 20170 773a 09       		.uleb128 0x9
 20171 773b B77E0000 		.long	0x7eb7
 20172 773f 00       		.byte	0
 20173 7740 34       		.uleb128 0x34
 20174 7741 00000000 		.long	.LASF44
 20175 7745 06       		.byte	0x6
 20176 7746 E801     		.value	0x1e8
 20177 7748 00000000 		.long	.LASF975
 20178 774c 01       		.byte	0x1
 20179 774d 55770000 		.long	0x7755
 20180 7751 65770000 		.long	0x7765
 20181 7755 08       		.uleb128 0x8
 20182 7756 86C80000 		.long	0xc886
 20183 775a 09       		.uleb128 0x9
 20184 775b 83750000 		.long	0x7583
 20185 775f 09       		.uleb128 0x9
 20186 7760 92C80000 		.long	0xc892
 20187 7764 00       		.byte	0
 20188 7765 34       		.uleb128 0x34
 20189 7766 00000000 		.long	.LASF44
 20190 776a 06       		.byte	0x6
 20191 776b 1502     		.value	0x215
 20192 776d 00000000 		.long	.LASF976
 20193 7771 01       		.byte	0x1
 20194 7772 7A770000 		.long	0x777a
 20195 7776 85770000 		.long	0x7785
 20196 777a 08       		.uleb128 0x8
 20197 777b 86C80000 		.long	0xc886
 20198 777f 09       		.uleb128 0x9
 20199 7780 B77E0000 		.long	0x7eb7
 20200 7784 00       		.byte	0
 20201 7785 32       		.uleb128 0x32
 20202 7786 00000000 		.long	.LASF149
 20203 778a 06       		.byte	0x6
 20204 778b 2302     		.value	0x223
 20205 778d 00000000 		.long	.LASF977
 20206 7791 53750000 		.long	0x7553
 20207 7795 01       		.byte	0x1
 20208 7796 9E770000 		.long	0x779e
 20209 779a A4770000 		.long	0x77a4
 20210 779e 08       		.uleb128 0x8
 20211 779f 86C80000 		.long	0xc886
 20212 77a3 00       		.byte	0
 20213 77a4 32       		.uleb128 0x32
 20214 77a5 00000000 		.long	.LASF149
GAS LISTING /tmp/ccJUMvuF.s 			page 656


 20215 77a9 06       		.byte	0x6
 20216 77aa 2C02     		.value	0x22c
 20217 77ac 00000000 		.long	.LASF978
 20218 77b0 5F750000 		.long	0x755f
 20219 77b4 01       		.byte	0x1
 20220 77b5 BD770000 		.long	0x77bd
 20221 77b9 C3770000 		.long	0x77c3
 20222 77bd 08       		.uleb128 0x8
 20223 77be ABC80000 		.long	0xc8ab
 20224 77c2 00       		.byte	0
 20225 77c3 33       		.uleb128 0x33
 20226 77c4 656E6400 		.string	"end"
 20227 77c8 06       		.byte	0x6
 20228 77c9 3502     		.value	0x235
 20229 77cb 00000000 		.long	.LASF979
 20230 77cf 53750000 		.long	0x7553
 20231 77d3 01       		.byte	0x1
 20232 77d4 DC770000 		.long	0x77dc
 20233 77d8 E2770000 		.long	0x77e2
 20234 77dc 08       		.uleb128 0x8
 20235 77dd 86C80000 		.long	0xc886
 20236 77e1 00       		.byte	0
 20237 77e2 33       		.uleb128 0x33
 20238 77e3 656E6400 		.string	"end"
 20239 77e7 06       		.byte	0x6
 20240 77e8 3E02     		.value	0x23e
 20241 77ea 00000000 		.long	.LASF980
 20242 77ee 5F750000 		.long	0x755f
 20243 77f2 01       		.byte	0x1
 20244 77f3 FB770000 		.long	0x77fb
 20245 77f7 01780000 		.long	0x7801
 20246 77fb 08       		.uleb128 0x8
 20247 77fc ABC80000 		.long	0xc8ab
 20248 7800 00       		.byte	0
 20249 7801 32       		.uleb128 0x32
 20250 7802 00000000 		.long	.LASF154
 20251 7806 06       		.byte	0x6
 20252 7807 4702     		.value	0x247
 20253 7809 00000000 		.long	.LASF981
 20254 780d 77750000 		.long	0x7577
 20255 7811 01       		.byte	0x1
 20256 7812 1A780000 		.long	0x781a
 20257 7816 20780000 		.long	0x7820
 20258 781a 08       		.uleb128 0x8
 20259 781b 86C80000 		.long	0xc886
 20260 781f 00       		.byte	0
 20261 7820 32       		.uleb128 0x32
 20262 7821 00000000 		.long	.LASF154
 20263 7825 06       		.byte	0x6
 20264 7826 5002     		.value	0x250
 20265 7828 00000000 		.long	.LASF982
 20266 782c 6B750000 		.long	0x756b
 20267 7830 01       		.byte	0x1
 20268 7831 39780000 		.long	0x7839
 20269 7835 3F780000 		.long	0x783f
 20270 7839 08       		.uleb128 0x8
 20271 783a ABC80000 		.long	0xc8ab
GAS LISTING /tmp/ccJUMvuF.s 			page 657


 20272 783e 00       		.byte	0
 20273 783f 32       		.uleb128 0x32
 20274 7840 00000000 		.long	.LASF157
 20275 7844 06       		.byte	0x6
 20276 7845 5902     		.value	0x259
 20277 7847 00000000 		.long	.LASF983
 20278 784b 77750000 		.long	0x7577
 20279 784f 01       		.byte	0x1
 20280 7850 58780000 		.long	0x7858
 20281 7854 5E780000 		.long	0x785e
 20282 7858 08       		.uleb128 0x8
 20283 7859 86C80000 		.long	0xc886
 20284 785d 00       		.byte	0
 20285 785e 32       		.uleb128 0x32
 20286 785f 00000000 		.long	.LASF157
 20287 7863 06       		.byte	0x6
 20288 7864 6202     		.value	0x262
 20289 7866 00000000 		.long	.LASF984
 20290 786a 6B750000 		.long	0x756b
 20291 786e 01       		.byte	0x1
 20292 786f 77780000 		.long	0x7877
 20293 7873 7D780000 		.long	0x787d
 20294 7877 08       		.uleb128 0x8
 20295 7878 ABC80000 		.long	0xc8ab
 20296 787c 00       		.byte	0
 20297 787d 32       		.uleb128 0x32
 20298 787e 00000000 		.long	.LASF160
 20299 7882 06       		.byte	0x6
 20300 7883 6C02     		.value	0x26c
 20301 7885 00000000 		.long	.LASF985
 20302 7889 5F750000 		.long	0x755f
 20303 788d 01       		.byte	0x1
 20304 788e 96780000 		.long	0x7896
 20305 7892 9C780000 		.long	0x789c
 20306 7896 08       		.uleb128 0x8
 20307 7897 ABC80000 		.long	0xc8ab
 20308 789b 00       		.byte	0
 20309 789c 32       		.uleb128 0x32
 20310 789d 00000000 		.long	.LASF162
 20311 78a1 06       		.byte	0x6
 20312 78a2 7502     		.value	0x275
 20313 78a4 00000000 		.long	.LASF986
 20314 78a8 5F750000 		.long	0x755f
 20315 78ac 01       		.byte	0x1
 20316 78ad B5780000 		.long	0x78b5
 20317 78b1 BB780000 		.long	0x78bb
 20318 78b5 08       		.uleb128 0x8
 20319 78b6 ABC80000 		.long	0xc8ab
 20320 78ba 00       		.byte	0
 20321 78bb 32       		.uleb128 0x32
 20322 78bc 00000000 		.long	.LASF164
 20323 78c0 06       		.byte	0x6
 20324 78c1 7E02     		.value	0x27e
 20325 78c3 00000000 		.long	.LASF987
 20326 78c7 6B750000 		.long	0x756b
 20327 78cb 01       		.byte	0x1
 20328 78cc D4780000 		.long	0x78d4
GAS LISTING /tmp/ccJUMvuF.s 			page 658


 20329 78d0 DA780000 		.long	0x78da
 20330 78d4 08       		.uleb128 0x8
 20331 78d5 ABC80000 		.long	0xc8ab
 20332 78d9 00       		.byte	0
 20333 78da 32       		.uleb128 0x32
 20334 78db 00000000 		.long	.LASF166
 20335 78df 06       		.byte	0x6
 20336 78e0 8702     		.value	0x287
 20337 78e2 00000000 		.long	.LASF988
 20338 78e6 6B750000 		.long	0x756b
 20339 78ea 01       		.byte	0x1
 20340 78eb F3780000 		.long	0x78f3
 20341 78ef F9780000 		.long	0x78f9
 20342 78f3 08       		.uleb128 0x8
 20343 78f4 ABC80000 		.long	0xc8ab
 20344 78f8 00       		.byte	0
 20345 78f9 32       		.uleb128 0x32
 20346 78fa 00000000 		.long	.LASF168
 20347 78fe 06       		.byte	0x6
 20348 78ff 8E02     		.value	0x28e
 20349 7901 00000000 		.long	.LASF989
 20350 7905 83750000 		.long	0x7583
 20351 7909 01       		.byte	0x1
 20352 790a 12790000 		.long	0x7912
 20353 790e 18790000 		.long	0x7918
 20354 7912 08       		.uleb128 0x8
 20355 7913 ABC80000 		.long	0xc8ab
 20356 7917 00       		.byte	0
 20357 7918 32       		.uleb128 0x32
 20358 7919 00000000 		.long	.LASF171
 20359 791d 06       		.byte	0x6
 20360 791e 9302     		.value	0x293
 20361 7920 00000000 		.long	.LASF990
 20362 7924 83750000 		.long	0x7583
 20363 7928 01       		.byte	0x1
 20364 7929 31790000 		.long	0x7931
 20365 792d 37790000 		.long	0x7937
 20366 7931 08       		.uleb128 0x8
 20367 7932 ABC80000 		.long	0xc8ab
 20368 7936 00       		.byte	0
 20369 7937 34       		.uleb128 0x34
 20370 7938 00000000 		.long	.LASF173
 20371 793c 06       		.byte	0x6
 20372 793d A102     		.value	0x2a1
 20373 793f 00000000 		.long	.LASF991
 20374 7943 01       		.byte	0x1
 20375 7944 4C790000 		.long	0x794c
 20376 7948 57790000 		.long	0x7957
 20377 794c 08       		.uleb128 0x8
 20378 794d 86C80000 		.long	0xc886
 20379 7951 09       		.uleb128 0x9
 20380 7952 83750000 		.long	0x7583
 20381 7956 00       		.byte	0
 20382 7957 34       		.uleb128 0x34
 20383 7958 00000000 		.long	.LASF173
 20384 795c 06       		.byte	0x6
 20385 795d B502     		.value	0x2b5
GAS LISTING /tmp/ccJUMvuF.s 			page 659


 20386 795f 00000000 		.long	.LASF992
 20387 7963 01       		.byte	0x1
 20388 7964 6C790000 		.long	0x796c
 20389 7968 7C790000 		.long	0x797c
 20390 796c 08       		.uleb128 0x8
 20391 796d 86C80000 		.long	0xc886
 20392 7971 09       		.uleb128 0x9
 20393 7972 83750000 		.long	0x7583
 20394 7976 09       		.uleb128 0x9
 20395 7977 92C80000 		.long	0xc892
 20396 797b 00       		.byte	0
 20397 797c 34       		.uleb128 0x34
 20398 797d 00000000 		.long	.LASF176
 20399 7981 06       		.byte	0x6
 20400 7982 D502     		.value	0x2d5
 20401 7984 00000000 		.long	.LASF993
 20402 7988 01       		.byte	0x1
 20403 7989 91790000 		.long	0x7991
 20404 798d 97790000 		.long	0x7997
 20405 7991 08       		.uleb128 0x8
 20406 7992 86C80000 		.long	0xc886
 20407 7996 00       		.byte	0
 20408 7997 32       		.uleb128 0x32
 20409 7998 00000000 		.long	.LASF178
 20410 799c 06       		.byte	0x6
 20411 799d DE02     		.value	0x2de
 20412 799f 00000000 		.long	.LASF994
 20413 79a3 83750000 		.long	0x7583
 20414 79a7 01       		.byte	0x1
 20415 79a8 B0790000 		.long	0x79b0
 20416 79ac B6790000 		.long	0x79b6
 20417 79b0 08       		.uleb128 0x8
 20418 79b1 ABC80000 		.long	0xc8ab
 20419 79b5 00       		.byte	0
 20420 79b6 32       		.uleb128 0x32
 20421 79b7 00000000 		.long	.LASF184
 20422 79bb 06       		.byte	0x6
 20423 79bc E702     		.value	0x2e7
 20424 79be 00000000 		.long	.LASF995
 20425 79c2 30930000 		.long	0x9330
 20426 79c6 01       		.byte	0x1
 20427 79c7 CF790000 		.long	0x79cf
 20428 79cb D5790000 		.long	0x79d5
 20429 79cf 08       		.uleb128 0x8
 20430 79d0 ABC80000 		.long	0xc8ab
 20431 79d4 00       		.byte	0
 20432 79d5 0E       		.uleb128 0xe
 20433 79d6 00000000 		.long	.LASF180
 20434 79da 30       		.byte	0x30
 20435 79db 41       		.byte	0x41
 20436 79dc 00000000 		.long	.LASF996
 20437 79e0 01       		.byte	0x1
 20438 79e1 E9790000 		.long	0x79e9
 20439 79e5 F4790000 		.long	0x79f4
 20440 79e9 08       		.uleb128 0x8
 20441 79ea 86C80000 		.long	0xc886
 20442 79ee 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 660


 20443 79ef 83750000 		.long	0x7583
 20444 79f3 00       		.byte	0
 20445 79f4 32       		.uleb128 0x32
 20446 79f5 00000000 		.long	.LASF186
 20447 79f9 06       		.byte	0x6
 20448 79fa 0B03     		.value	0x30b
 20449 79fc 00000000 		.long	.LASF997
 20450 7a00 3B750000 		.long	0x753b
 20451 7a04 01       		.byte	0x1
 20452 7a05 0D7A0000 		.long	0x7a0d
 20453 7a09 187A0000 		.long	0x7a18
 20454 7a0d 08       		.uleb128 0x8
 20455 7a0e 86C80000 		.long	0xc886
 20456 7a12 09       		.uleb128 0x9
 20457 7a13 83750000 		.long	0x7583
 20458 7a17 00       		.byte	0
 20459 7a18 32       		.uleb128 0x32
 20460 7a19 00000000 		.long	.LASF186
 20461 7a1d 06       		.byte	0x6
 20462 7a1e 1A03     		.value	0x31a
 20463 7a20 00000000 		.long	.LASF998
 20464 7a24 47750000 		.long	0x7547
 20465 7a28 01       		.byte	0x1
 20466 7a29 317A0000 		.long	0x7a31
 20467 7a2d 3C7A0000 		.long	0x7a3c
 20468 7a31 08       		.uleb128 0x8
 20469 7a32 ABC80000 		.long	0xc8ab
 20470 7a36 09       		.uleb128 0x9
 20471 7a37 83750000 		.long	0x7583
 20472 7a3b 00       		.byte	0
 20473 7a3c 34       		.uleb128 0x34
 20474 7a3d 00000000 		.long	.LASF600
 20475 7a41 06       		.byte	0x6
 20476 7a42 2003     		.value	0x320
 20477 7a44 00000000 		.long	.LASF999
 20478 7a48 02       		.byte	0x2
 20479 7a49 517A0000 		.long	0x7a51
 20480 7a4d 5C7A0000 		.long	0x7a5c
 20481 7a51 08       		.uleb128 0x8
 20482 7a52 ABC80000 		.long	0xc8ab
 20483 7a56 09       		.uleb128 0x9
 20484 7a57 83750000 		.long	0x7583
 20485 7a5b 00       		.byte	0
 20486 7a5c 33       		.uleb128 0x33
 20487 7a5d 617400   		.string	"at"
 20488 7a60 06       		.byte	0x6
 20489 7a61 3603     		.value	0x336
 20490 7a63 00000000 		.long	.LASF1000
 20491 7a67 3B750000 		.long	0x753b
 20492 7a6b 01       		.byte	0x1
 20493 7a6c 747A0000 		.long	0x7a74
 20494 7a70 7F7A0000 		.long	0x7a7f
 20495 7a74 08       		.uleb128 0x8
 20496 7a75 86C80000 		.long	0xc886
 20497 7a79 09       		.uleb128 0x9
 20498 7a7a 83750000 		.long	0x7583
 20499 7a7e 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 661


 20500 7a7f 33       		.uleb128 0x33
 20501 7a80 617400   		.string	"at"
 20502 7a83 06       		.byte	0x6
 20503 7a84 4803     		.value	0x348
 20504 7a86 00000000 		.long	.LASF1001
 20505 7a8a 47750000 		.long	0x7547
 20506 7a8e 01       		.byte	0x1
 20507 7a8f 977A0000 		.long	0x7a97
 20508 7a93 A27A0000 		.long	0x7aa2
 20509 7a97 08       		.uleb128 0x8
 20510 7a98 ABC80000 		.long	0xc8ab
 20511 7a9c 09       		.uleb128 0x9
 20512 7a9d 83750000 		.long	0x7583
 20513 7aa1 00       		.byte	0
 20514 7aa2 32       		.uleb128 0x32
 20515 7aa3 00000000 		.long	.LASF191
 20516 7aa7 06       		.byte	0x6
 20517 7aa8 5303     		.value	0x353
 20518 7aaa 00000000 		.long	.LASF1002
 20519 7aae 3B750000 		.long	0x753b
 20520 7ab2 01       		.byte	0x1
 20521 7ab3 BB7A0000 		.long	0x7abb
 20522 7ab7 C17A0000 		.long	0x7ac1
 20523 7abb 08       		.uleb128 0x8
 20524 7abc 86C80000 		.long	0xc886
 20525 7ac0 00       		.byte	0
 20526 7ac1 32       		.uleb128 0x32
 20527 7ac2 00000000 		.long	.LASF191
 20528 7ac6 06       		.byte	0x6
 20529 7ac7 5B03     		.value	0x35b
 20530 7ac9 00000000 		.long	.LASF1003
 20531 7acd 47750000 		.long	0x7547
 20532 7ad1 01       		.byte	0x1
 20533 7ad2 DA7A0000 		.long	0x7ada
 20534 7ad6 E07A0000 		.long	0x7ae0
 20535 7ada 08       		.uleb128 0x8
 20536 7adb ABC80000 		.long	0xc8ab
 20537 7adf 00       		.byte	0
 20538 7ae0 32       		.uleb128 0x32
 20539 7ae1 00000000 		.long	.LASF194
 20540 7ae5 06       		.byte	0x6
 20541 7ae6 6303     		.value	0x363
 20542 7ae8 00000000 		.long	.LASF1004
 20543 7aec 3B750000 		.long	0x753b
 20544 7af0 01       		.byte	0x1
 20545 7af1 F97A0000 		.long	0x7af9
 20546 7af5 FF7A0000 		.long	0x7aff
 20547 7af9 08       		.uleb128 0x8
 20548 7afa 86C80000 		.long	0xc886
 20549 7afe 00       		.byte	0
 20550 7aff 32       		.uleb128 0x32
 20551 7b00 00000000 		.long	.LASF194
 20552 7b04 06       		.byte	0x6
 20553 7b05 6B03     		.value	0x36b
 20554 7b07 00000000 		.long	.LASF1005
 20555 7b0b 47750000 		.long	0x7547
 20556 7b0f 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 662


 20557 7b10 187B0000 		.long	0x7b18
 20558 7b14 1E7B0000 		.long	0x7b1e
 20559 7b18 08       		.uleb128 0x8
 20560 7b19 ABC80000 		.long	0xc8ab
 20561 7b1d 00       		.byte	0
 20562 7b1e 32       		.uleb128 0x32
 20563 7b1f 00000000 		.long	.LASF260
 20564 7b23 06       		.byte	0x6
 20565 7b24 7A03     		.value	0x37a
 20566 7b26 00000000 		.long	.LASF1006
 20567 7b2a 00C80000 		.long	0xc800
 20568 7b2e 01       		.byte	0x1
 20569 7b2f 377B0000 		.long	0x7b37
 20570 7b33 3D7B0000 		.long	0x7b3d
 20571 7b37 08       		.uleb128 0x8
 20572 7b38 86C80000 		.long	0xc886
 20573 7b3c 00       		.byte	0
 20574 7b3d 32       		.uleb128 0x32
 20575 7b3e 00000000 		.long	.LASF260
 20576 7b42 06       		.byte	0x6
 20577 7b43 8203     		.value	0x382
 20578 7b45 00000000 		.long	.LASF1007
 20579 7b49 3FC50000 		.long	0xc53f
 20580 7b4d 01       		.byte	0x1
 20581 7b4e 567B0000 		.long	0x7b56
 20582 7b52 5C7B0000 		.long	0x7b5c
 20583 7b56 08       		.uleb128 0x8
 20584 7b57 ABC80000 		.long	0xc8ab
 20585 7b5b 00       		.byte	0
 20586 7b5c 34       		.uleb128 0x34
 20587 7b5d 00000000 		.long	.LASF209
 20588 7b61 06       		.byte	0x6
 20589 7b62 9103     		.value	0x391
 20590 7b64 00000000 		.long	.LASF1008
 20591 7b68 01       		.byte	0x1
 20592 7b69 717B0000 		.long	0x7b71
 20593 7b6d 7C7B0000 		.long	0x7b7c
 20594 7b71 08       		.uleb128 0x8
 20595 7b72 86C80000 		.long	0xc886
 20596 7b76 09       		.uleb128 0x9
 20597 7b77 92C80000 		.long	0xc892
 20598 7b7b 00       		.byte	0
 20599 7b7c 34       		.uleb128 0x34
 20600 7b7d 00000000 		.long	.LASF209
 20601 7b81 06       		.byte	0x6
 20602 7b82 A303     		.value	0x3a3
 20603 7b84 00000000 		.long	.LASF1009
 20604 7b88 01       		.byte	0x1
 20605 7b89 917B0000 		.long	0x7b91
 20606 7b8d 9C7B0000 		.long	0x7b9c
 20607 7b91 08       		.uleb128 0x8
 20608 7b92 86C80000 		.long	0xc886
 20609 7b96 09       		.uleb128 0x9
 20610 7b97 B1C80000 		.long	0xc8b1
 20611 7b9b 00       		.byte	0
 20612 7b9c 34       		.uleb128 0x34
 20613 7b9d 00000000 		.long	.LASF231
GAS LISTING /tmp/ccJUMvuF.s 			page 663


 20614 7ba1 06       		.byte	0x6
 20615 7ba2 B503     		.value	0x3b5
 20616 7ba4 00000000 		.long	.LASF1010
 20617 7ba8 01       		.byte	0x1
 20618 7ba9 B17B0000 		.long	0x7bb1
 20619 7bad B77B0000 		.long	0x7bb7
 20620 7bb1 08       		.uleb128 0x8
 20621 7bb2 86C80000 		.long	0xc886
 20622 7bb6 00       		.byte	0
 20623 7bb7 0D       		.uleb128 0xd
 20624 7bb8 00000000 		.long	.LASF218
 20625 7bbc 30       		.byte	0x30
 20626 7bbd 6B       		.byte	0x6b
 20627 7bbe 00000000 		.long	.LASF1011
 20628 7bc2 53750000 		.long	0x7553
 20629 7bc6 01       		.byte	0x1
 20630 7bc7 CF7B0000 		.long	0x7bcf
 20631 7bcb DF7B0000 		.long	0x7bdf
 20632 7bcf 08       		.uleb128 0x8
 20633 7bd0 86C80000 		.long	0xc886
 20634 7bd4 09       		.uleb128 0x9
 20635 7bd5 5F750000 		.long	0x755f
 20636 7bd9 09       		.uleb128 0x9
 20637 7bda 92C80000 		.long	0xc892
 20638 7bde 00       		.byte	0
 20639 7bdf 32       		.uleb128 0x32
 20640 7be0 00000000 		.long	.LASF218
 20641 7be4 06       		.byte	0x6
 20642 7be5 F603     		.value	0x3f6
 20643 7be7 00000000 		.long	.LASF1012
 20644 7beb 53750000 		.long	0x7553
 20645 7bef 01       		.byte	0x1
 20646 7bf0 F87B0000 		.long	0x7bf8
 20647 7bf4 087C0000 		.long	0x7c08
 20648 7bf8 08       		.uleb128 0x8
 20649 7bf9 86C80000 		.long	0xc886
 20650 7bfd 09       		.uleb128 0x9
 20651 7bfe 5F750000 		.long	0x755f
 20652 7c02 09       		.uleb128 0x9
 20653 7c03 B1C80000 		.long	0xc8b1
 20654 7c07 00       		.byte	0
 20655 7c08 32       		.uleb128 0x32
 20656 7c09 00000000 		.long	.LASF218
 20657 7c0d 06       		.byte	0x6
 20658 7c0e 0704     		.value	0x407
 20659 7c10 00000000 		.long	.LASF1013
 20660 7c14 53750000 		.long	0x7553
 20661 7c18 01       		.byte	0x1
 20662 7c19 217C0000 		.long	0x7c21
 20663 7c1d 317C0000 		.long	0x7c31
 20664 7c21 08       		.uleb128 0x8
 20665 7c22 86C80000 		.long	0xc886
 20666 7c26 09       		.uleb128 0x9
 20667 7c27 5F750000 		.long	0x755f
 20668 7c2b 09       		.uleb128 0x9
 20669 7c2c B77E0000 		.long	0x7eb7
 20670 7c30 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 664


 20671 7c31 32       		.uleb128 0x32
 20672 7c32 00000000 		.long	.LASF218
 20673 7c36 06       		.byte	0x6
 20674 7c37 1B04     		.value	0x41b
 20675 7c39 00000000 		.long	.LASF1014
 20676 7c3d 53750000 		.long	0x7553
 20677 7c41 01       		.byte	0x1
 20678 7c42 4A7C0000 		.long	0x7c4a
 20679 7c46 5F7C0000 		.long	0x7c5f
 20680 7c4a 08       		.uleb128 0x8
 20681 7c4b 86C80000 		.long	0xc886
 20682 7c4f 09       		.uleb128 0x9
 20683 7c50 5F750000 		.long	0x755f
 20684 7c54 09       		.uleb128 0x9
 20685 7c55 83750000 		.long	0x7583
 20686 7c59 09       		.uleb128 0x9
 20687 7c5a 92C80000 		.long	0xc892
 20688 7c5e 00       		.byte	0
 20689 7c5f 32       		.uleb128 0x32
 20690 7c60 00000000 		.long	.LASF227
 20691 7c64 06       		.byte	0x6
 20692 7c65 7A04     		.value	0x47a
 20693 7c67 00000000 		.long	.LASF1015
 20694 7c6b 53750000 		.long	0x7553
 20695 7c6f 01       		.byte	0x1
 20696 7c70 787C0000 		.long	0x7c78
 20697 7c74 837C0000 		.long	0x7c83
 20698 7c78 08       		.uleb128 0x8
 20699 7c79 86C80000 		.long	0xc886
 20700 7c7d 09       		.uleb128 0x9
 20701 7c7e 5F750000 		.long	0x755f
 20702 7c82 00       		.byte	0
 20703 7c83 32       		.uleb128 0x32
 20704 7c84 00000000 		.long	.LASF227
 20705 7c88 06       		.byte	0x6
 20706 7c89 9504     		.value	0x495
 20707 7c8b 00000000 		.long	.LASF1016
 20708 7c8f 53750000 		.long	0x7553
 20709 7c93 01       		.byte	0x1
 20710 7c94 9C7C0000 		.long	0x7c9c
 20711 7c98 AC7C0000 		.long	0x7cac
 20712 7c9c 08       		.uleb128 0x8
 20713 7c9d 86C80000 		.long	0xc886
 20714 7ca1 09       		.uleb128 0x9
 20715 7ca2 5F750000 		.long	0x755f
 20716 7ca6 09       		.uleb128 0x9
 20717 7ca7 5F750000 		.long	0x755f
 20718 7cab 00       		.byte	0
 20719 7cac 34       		.uleb128 0x34
 20720 7cad 00000000 		.long	.LASF13
 20721 7cb1 06       		.byte	0x6
 20722 7cb2 AA04     		.value	0x4aa
 20723 7cb4 00000000 		.long	.LASF1017
 20724 7cb8 01       		.byte	0x1
 20725 7cb9 C17C0000 		.long	0x7cc1
 20726 7cbd CC7C0000 		.long	0x7ccc
 20727 7cc1 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 665


 20728 7cc2 86C80000 		.long	0xc886
 20729 7cc6 09       		.uleb128 0x9
 20730 7cc7 A5C80000 		.long	0xc8a5
 20731 7ccb 00       		.byte	0
 20732 7ccc 34       		.uleb128 0x34
 20733 7ccd 00000000 		.long	.LASF182
 20734 7cd1 06       		.byte	0x6
 20735 7cd2 BB04     		.value	0x4bb
 20736 7cd4 00000000 		.long	.LASF1018
 20737 7cd8 01       		.byte	0x1
 20738 7cd9 E17C0000 		.long	0x7ce1
 20739 7cdd E77C0000 		.long	0x7ce7
 20740 7ce1 08       		.uleb128 0x8
 20741 7ce2 86C80000 		.long	0xc886
 20742 7ce6 00       		.byte	0
 20743 7ce7 34       		.uleb128 0x34
 20744 7ce8 00000000 		.long	.LASF621
 20745 7cec 06       		.byte	0x6
 20746 7ced 1205     		.value	0x512
 20747 7cef 00000000 		.long	.LASF1019
 20748 7cf3 02       		.byte	0x2
 20749 7cf4 FC7C0000 		.long	0x7cfc
 20750 7cf8 0C7D0000 		.long	0x7d0c
 20751 7cfc 08       		.uleb128 0x8
 20752 7cfd 86C80000 		.long	0xc886
 20753 7d01 09       		.uleb128 0x9
 20754 7d02 83750000 		.long	0x7583
 20755 7d06 09       		.uleb128 0x9
 20756 7d07 92C80000 		.long	0xc892
 20757 7d0b 00       		.byte	0
 20758 7d0c 34       		.uleb128 0x34
 20759 7d0d 00000000 		.long	.LASF623
 20760 7d11 06       		.byte	0x6
 20761 7d12 1C05     		.value	0x51c
 20762 7d14 00000000 		.long	.LASF1020
 20763 7d18 02       		.byte	0x2
 20764 7d19 217D0000 		.long	0x7d21
 20765 7d1d 2C7D0000 		.long	0x7d2c
 20766 7d21 08       		.uleb128 0x8
 20767 7d22 86C80000 		.long	0xc886
 20768 7d26 09       		.uleb128 0x9
 20769 7d27 83750000 		.long	0x7583
 20770 7d2b 00       		.byte	0
 20771 7d2c 0E       		.uleb128 0xe
 20772 7d2d 00000000 		.long	.LASF625
 20773 7d31 30       		.byte	0x30
 20774 7d32 E1       		.byte	0xe1
 20775 7d33 00000000 		.long	.LASF1021
 20776 7d37 02       		.byte	0x2
 20777 7d38 407D0000 		.long	0x7d40
 20778 7d3c 507D0000 		.long	0x7d50
 20779 7d40 08       		.uleb128 0x8
 20780 7d41 86C80000 		.long	0xc886
 20781 7d45 09       		.uleb128 0x9
 20782 7d46 85060000 		.long	0x685
 20783 7d4a 09       		.uleb128 0x9
 20784 7d4b 92C80000 		.long	0xc892
GAS LISTING /tmp/ccJUMvuF.s 			page 666


 20785 7d4f 00       		.byte	0
 20786 7d50 34       		.uleb128 0x34
 20787 7d51 00000000 		.long	.LASF627
 20788 7d55 30       		.byte	0x30
 20789 7d56 C101     		.value	0x1c1
 20790 7d58 00000000 		.long	.LASF1022
 20791 7d5c 02       		.byte	0x2
 20792 7d5d 657D0000 		.long	0x7d65
 20793 7d61 7A7D0000 		.long	0x7d7a
 20794 7d65 08       		.uleb128 0x8
 20795 7d66 86C80000 		.long	0xc886
 20796 7d6a 09       		.uleb128 0x9
 20797 7d6b 53750000 		.long	0x7553
 20798 7d6f 09       		.uleb128 0x9
 20799 7d70 83750000 		.long	0x7583
 20800 7d74 09       		.uleb128 0x9
 20801 7d75 92C80000 		.long	0xc892
 20802 7d79 00       		.byte	0
 20803 7d7a 34       		.uleb128 0x34
 20804 7d7b 00000000 		.long	.LASF629
 20805 7d7f 30       		.byte	0x30
 20806 7d80 1C02     		.value	0x21c
 20807 7d82 00000000 		.long	.LASF1023
 20808 7d86 02       		.byte	0x2
 20809 7d87 8F7D0000 		.long	0x7d8f
 20810 7d8b 9A7D0000 		.long	0x7d9a
 20811 7d8f 08       		.uleb128 0x8
 20812 7d90 86C80000 		.long	0xc886
 20813 7d94 09       		.uleb128 0x9
 20814 7d95 83750000 		.long	0x7583
 20815 7d99 00       		.byte	0
 20816 7d9a 32       		.uleb128 0x32
 20817 7d9b 00000000 		.long	.LASF631
 20818 7d9f 30       		.byte	0x30
 20819 7da0 4E02     		.value	0x24e
 20820 7da2 00000000 		.long	.LASF1024
 20821 7da6 30930000 		.long	0x9330
 20822 7daa 02       		.byte	0x2
 20823 7dab B37D0000 		.long	0x7db3
 20824 7daf B97D0000 		.long	0x7db9
 20825 7db3 08       		.uleb128 0x8
 20826 7db4 86C80000 		.long	0xc886
 20827 7db8 00       		.byte	0
 20828 7db9 32       		.uleb128 0x32
 20829 7dba 00000000 		.long	.LASF633
 20830 7dbe 06       		.byte	0x6
 20831 7dbf 8E05     		.value	0x58e
 20832 7dc1 00000000 		.long	.LASF1025
 20833 7dc5 83750000 		.long	0x7583
 20834 7dc9 02       		.byte	0x2
 20835 7dca D27D0000 		.long	0x7dd2
 20836 7dce E27D0000 		.long	0x7de2
 20837 7dd2 08       		.uleb128 0x8
 20838 7dd3 ABC80000 		.long	0xc8ab
 20839 7dd7 09       		.uleb128 0x9
 20840 7dd8 83750000 		.long	0x7583
 20841 7ddc 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 667


 20842 7ddd CEAE0000 		.long	0xaece
 20843 7de1 00       		.byte	0
 20844 7de2 34       		.uleb128 0x34
 20845 7de3 00000000 		.long	.LASF635
 20846 7de7 06       		.byte	0x6
 20847 7de8 9C05     		.value	0x59c
 20848 7dea 00000000 		.long	.LASF1026
 20849 7dee 02       		.byte	0x2
 20850 7def F77D0000 		.long	0x7df7
 20851 7df3 027E0000 		.long	0x7e02
 20852 7df7 08       		.uleb128 0x8
 20853 7df8 86C80000 		.long	0xc886
 20854 7dfc 09       		.uleb128 0x9
 20855 7dfd 2F750000 		.long	0x752f
 20856 7e01 00       		.byte	0
 20857 7e02 0D       		.uleb128 0xd
 20858 7e03 00000000 		.long	.LASF637
 20859 7e07 30       		.byte	0x30
 20860 7e08 8D       		.byte	0x8d
 20861 7e09 00000000 		.long	.LASF1027
 20862 7e0d 53750000 		.long	0x7553
 20863 7e11 02       		.byte	0x2
 20864 7e12 1A7E0000 		.long	0x7e1a
 20865 7e16 257E0000 		.long	0x7e25
 20866 7e1a 08       		.uleb128 0x8
 20867 7e1b 86C80000 		.long	0xc886
 20868 7e1f 09       		.uleb128 0x9
 20869 7e20 53750000 		.long	0x7553
 20870 7e24 00       		.byte	0
 20871 7e25 0D       		.uleb128 0xd
 20872 7e26 00000000 		.long	.LASF637
 20873 7e2a 30       		.byte	0x30
 20874 7e2b 99       		.byte	0x99
 20875 7e2c 00000000 		.long	.LASF1028
 20876 7e30 53750000 		.long	0x7553
 20877 7e34 02       		.byte	0x2
 20878 7e35 3D7E0000 		.long	0x7e3d
 20879 7e39 4D7E0000 		.long	0x7e4d
 20880 7e3d 08       		.uleb128 0x8
 20881 7e3e 86C80000 		.long	0xc886
 20882 7e42 09       		.uleb128 0x9
 20883 7e43 53750000 		.long	0x7553
 20884 7e47 09       		.uleb128 0x9
 20885 7e48 53750000 		.long	0x7553
 20886 7e4c 00       		.byte	0
 20887 7e4d 2B       		.uleb128 0x2b
 20888 7e4e 00000000 		.long	.LASF640
 20889 7e52 06       		.byte	0x6
 20890 7e53 AE05     		.value	0x5ae
 20891 7e55 00000000 		.long	.LASF1029
 20892 7e59 617E0000 		.long	0x7e61
 20893 7e5d 717E0000 		.long	0x7e71
 20894 7e61 08       		.uleb128 0x8
 20895 7e62 86C80000 		.long	0xc886
 20896 7e66 09       		.uleb128 0x9
 20897 7e67 9EC80000 		.long	0xc89e
 20898 7e6b 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 668


 20899 7e6c 5F070000 		.long	0x75f
 20900 7e70 00       		.byte	0
 20901 7e71 2B       		.uleb128 0x2b
 20902 7e72 00000000 		.long	.LASF640
 20903 7e76 06       		.byte	0x6
 20904 7e77 B905     		.value	0x5b9
 20905 7e79 00000000 		.long	.LASF1030
 20906 7e7d 857E0000 		.long	0x7e85
 20907 7e81 957E0000 		.long	0x7e95
 20908 7e85 08       		.uleb128 0x8
 20909 7e86 86C80000 		.long	0xc886
 20910 7e8a 09       		.uleb128 0x9
 20911 7e8b 9EC80000 		.long	0xc89e
 20912 7e8f 09       		.uleb128 0x9
 20913 7e90 A4340000 		.long	0x34a4
 20914 7e94 00       		.byte	0
 20915 7e95 18       		.uleb128 0x18
 20916 7e96 5F547000 		.string	"_Tp"
 20917 7e9a 5A930000 		.long	0x935a
 20918 7e9e 36       		.uleb128 0x36
 20919 7e9f 00000000 		.long	.LASF303
 20920 7ea3 2A6F0000 		.long	0x6f2a
 20921 7ea7 00       		.byte	0
 20922 7ea8 14       		.uleb128 0x14
 20923 7ea9 00000000 		.long	.LASF1031
 20924 7ead 14       		.uleb128 0x14
 20925 7eae 00000000 		.long	.LASF1032
 20926 7eb2 11       		.uleb128 0x11
 20927 7eb3 ED740000 		.long	0x74ed
 20928 7eb7 05       		.uleb128 0x5
 20929 7eb8 00000000 		.long	.LASF1033
 20930 7ebc 10       		.byte	0x10
 20931 7ebd 26       		.byte	0x26
 20932 7ebe 2F       		.byte	0x2f
 20933 7ebf 977F0000 		.long	0x7f97
 20934 7ec3 22       		.uleb128 0x22
 20935 7ec4 00000000 		.long	.LASF68
 20936 7ec8 26       		.byte	0x26
 20937 7ec9 36       		.byte	0x36
 20938 7eca 3FC50000 		.long	0xc53f
 20939 7ece 01       		.byte	0x1
 20940 7ecf 06       		.uleb128 0x6
 20941 7ed0 00000000 		.long	.LASF308
 20942 7ed4 26       		.byte	0x26
 20943 7ed5 3A       		.byte	0x3a
 20944 7ed6 C37E0000 		.long	0x7ec3
 20945 7eda 00       		.byte	0
 20946 7edb 22       		.uleb128 0x22
 20947 7edc 00000000 		.long	.LASF57
 20948 7ee0 26       		.byte	0x26
 20949 7ee1 35       		.byte	0x35
 20950 7ee2 85060000 		.long	0x685
 20951 7ee6 01       		.byte	0x1
 20952 7ee7 06       		.uleb128 0x6
 20953 7ee8 00000000 		.long	.LASF309
 20954 7eec 26       		.byte	0x26
 20955 7eed 3B       		.byte	0x3b
GAS LISTING /tmp/ccJUMvuF.s 			page 669


 20956 7eee DB7E0000 		.long	0x7edb
 20957 7ef2 08       		.byte	0x8
 20958 7ef3 22       		.uleb128 0x22
 20959 7ef4 00000000 		.long	.LASF69
 20960 7ef8 26       		.byte	0x26
 20961 7ef9 37       		.byte	0x37
 20962 7efa 3FC50000 		.long	0xc53f
 20963 7efe 01       		.byte	0x1
 20964 7eff 37       		.uleb128 0x37
 20965 7f00 00000000 		.long	.LASF310
 20966 7f04 26       		.byte	0x26
 20967 7f05 3E       		.byte	0x3e
 20968 7f06 0E7F0000 		.long	0x7f0e
 20969 7f0a 1E7F0000 		.long	0x7f1e
 20970 7f0e 08       		.uleb128 0x8
 20971 7f0f B8C80000 		.long	0xc8b8
 20972 7f13 09       		.uleb128 0x9
 20973 7f14 F37E0000 		.long	0x7ef3
 20974 7f18 09       		.uleb128 0x9
 20975 7f19 DB7E0000 		.long	0x7edb
 20976 7f1d 00       		.byte	0
 20977 7f1e 0C       		.uleb128 0xc
 20978 7f1f 00000000 		.long	.LASF310
 20979 7f23 26       		.byte	0x26
 20980 7f24 42       		.byte	0x42
 20981 7f25 01       		.byte	0x1
 20982 7f26 2E7F0000 		.long	0x7f2e
 20983 7f2a 347F0000 		.long	0x7f34
 20984 7f2e 08       		.uleb128 0x8
 20985 7f2f B8C80000 		.long	0xc8b8
 20986 7f33 00       		.byte	0
 20987 7f34 0D       		.uleb128 0xd
 20988 7f35 00000000 		.long	.LASF168
 20989 7f39 26       		.byte	0x26
 20990 7f3a 47       		.byte	0x47
 20991 7f3b 00000000 		.long	.LASF1034
 20992 7f3f DB7E0000 		.long	0x7edb
 20993 7f43 01       		.byte	0x1
 20994 7f44 4C7F0000 		.long	0x7f4c
 20995 7f48 527F0000 		.long	0x7f52
 20996 7f4c 08       		.uleb128 0x8
 20997 7f4d BEC80000 		.long	0xc8be
 20998 7f51 00       		.byte	0
 20999 7f52 0D       		.uleb128 0xd
 21000 7f53 00000000 		.long	.LASF149
 21001 7f57 26       		.byte	0x26
 21002 7f58 4B       		.byte	0x4b
 21003 7f59 00000000 		.long	.LASF1035
 21004 7f5d F37E0000 		.long	0x7ef3
 21005 7f61 01       		.byte	0x1
 21006 7f62 6A7F0000 		.long	0x7f6a
 21007 7f66 707F0000 		.long	0x7f70
 21008 7f6a 08       		.uleb128 0x8
 21009 7f6b BEC80000 		.long	0xc8be
 21010 7f6f 00       		.byte	0
 21011 7f70 38       		.uleb128 0x38
 21012 7f71 656E6400 		.string	"end"
GAS LISTING /tmp/ccJUMvuF.s 			page 670


 21013 7f75 26       		.byte	0x26
 21014 7f76 4F       		.byte	0x4f
 21015 7f77 00000000 		.long	.LASF1036
 21016 7f7b F37E0000 		.long	0x7ef3
 21017 7f7f 01       		.byte	0x1
 21018 7f80 887F0000 		.long	0x7f88
 21019 7f84 8E7F0000 		.long	0x7f8e
 21020 7f88 08       		.uleb128 0x8
 21021 7f89 BEC80000 		.long	0xc8be
 21022 7f8d 00       		.byte	0
 21023 7f8e 18       		.uleb128 0x18
 21024 7f8f 5F4500   		.string	"_E"
 21025 7f92 5A930000 		.long	0x935a
 21026 7f96 00       		.byte	0
 21027 7f97 11       		.uleb128 0x11
 21028 7f98 B77E0000 		.long	0x7eb7
 21029 7f9c 3B       		.uleb128 0x3b
 21030 7f9d 00000000 		.long	.LASF1037
 21031 7fa1 01       		.byte	0x1
 21032 7fa2 0A       		.byte	0xa
 21033 7fa3 8F04     		.value	0x48f
 21034 7fa5 FE7F0000 		.long	0x7ffe
 21035 7fa9 66       		.uleb128 0x66
 21036 7faa 00000000 		.long	.LASF1038
 21037 7fae 0A       		.byte	0xa
 21038 7faf 9D04     		.value	0x49d
 21039 7fb1 D9C50000 		.long	0xc5d9
 21040 7fb5 01       		.byte	0x1
 21041 7fb6 D07F0000 		.long	0x7fd0
 21042 7fba E07F0000 		.long	0x7fe0
 21043 7fbe 35       		.uleb128 0x35
 21044 7fbf 00000000 		.long	.LASF1039
 21045 7fc3 D9C50000 		.long	0xc5d9
 21046 7fc7 35       		.uleb128 0x35
 21047 7fc8 00000000 		.long	.LASF1040
 21048 7fcc 31240000 		.long	0x2431
 21049 7fd0 08       		.uleb128 0x8
 21050 7fd1 51EA0000 		.long	0xea51
 21051 7fd5 09       		.uleb128 0x9
 21052 7fd6 D9C50000 		.long	0xc5d9
 21053 7fda 09       		.uleb128 0x9
 21054 7fdb D6C00000 		.long	0xc0d6
 21055 7fdf 00       		.byte	0
 21056 7fe0 35       		.uleb128 0x35
 21057 7fe1 00000000 		.long	.LASF1041
 21058 7fe5 C92C0000 		.long	0x2cc9
 21059 7fe9 50       		.uleb128 0x50
 21060 7fea 00000000 		.long	.LASF1042
 21061 7fee 30930000 		.long	0x9330
 21062 7ff2 00       		.byte	0
 21063 7ff3 50       		.uleb128 0x50
 21064 7ff4 00000000 		.long	.LASF1043
 21065 7ff8 30930000 		.long	0x9330
 21066 7ffc 00       		.byte	0
 21067 7ffd 00       		.byte	0
 21068 7ffe 24       		.uleb128 0x24
 21069 7fff 00000000 		.long	.LASF1044
GAS LISTING /tmp/ccJUMvuF.s 			page 671


 21070 8003 01       		.byte	0x1
 21071 8004 1B       		.byte	0x1b
 21072 8005 E005     		.value	0x5e0
 21073 8007 18800000 		.long	0x8018
 21074 800b 5C       		.uleb128 0x5c
 21075 800c 00000000 		.long	.LASF513
 21076 8010 1B       		.byte	0x1b
 21077 8011 E105     		.value	0x5e1
 21078 8013 67C50000 		.long	0xc567
 21079 8017 00       		.byte	0
 21080 8018 16       		.uleb128 0x16
 21081 8019 00000000 		.long	.LASF1045
 21082 801d 01       		.byte	0x1
 21083 801e 0B       		.byte	0xb
 21084 801f 35       		.byte	0x35
 21085 8020 39800000 		.long	0x8039
 21086 8024 13       		.uleb128 0x13
 21087 8025 00000000 		.long	.LASF513
 21088 8029 0B       		.byte	0xb
 21089 802a 36       		.byte	0x36
 21090 802b 91C60000 		.long	0xc691
 21091 802f 18       		.uleb128 0x18
 21092 8030 5F547000 		.string	"_Tp"
 21093 8034 67C50000 		.long	0xc567
 21094 8038 00       		.byte	0
 21095 8039 16       		.uleb128 0x16
 21096 803a 00000000 		.long	.LASF1046
 21097 803e 01       		.byte	0x1
 21098 803f 0B       		.byte	0xb
 21099 8040 3E       		.byte	0x3e
 21100 8041 5A800000 		.long	0x805a
 21101 8045 13       		.uleb128 0x13
 21102 8046 00000000 		.long	.LASF513
 21103 804a 0B       		.byte	0xb
 21104 804b 3F       		.byte	0x3f
 21105 804c 9CC60000 		.long	0xc69c
 21106 8050 18       		.uleb128 0x18
 21107 8051 5F547000 		.string	"_Tp"
 21108 8055 67C50000 		.long	0xc567
 21109 8059 00       		.byte	0
 21110 805a 24       		.uleb128 0x24
 21111 805b 00000000 		.long	.LASF1047
 21112 805f 01       		.byte	0x1
 21113 8060 1B       		.byte	0x1b
 21114 8061 E005     		.value	0x5e0
 21115 8063 74800000 		.long	0x8074
 21116 8067 5C       		.uleb128 0x5c
 21117 8068 00000000 		.long	.LASF513
 21118 806c 1B       		.byte	0x1b
 21119 806d E105     		.value	0x5e1
 21120 806f 5BC50000 		.long	0xc55b
 21121 8073 00       		.byte	0
 21122 8074 16       		.uleb128 0x16
 21123 8075 00000000 		.long	.LASF1048
 21124 8079 01       		.byte	0x1
 21125 807a 0B       		.byte	0xb
 21126 807b 35       		.byte	0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 672


 21127 807c 95800000 		.long	0x8095
 21128 8080 13       		.uleb128 0x13
 21129 8081 00000000 		.long	.LASF513
 21130 8085 0B       		.byte	0xb
 21131 8086 36       		.byte	0x36
 21132 8087 6DC70000 		.long	0xc76d
 21133 808b 18       		.uleb128 0x18
 21134 808c 5F547000 		.string	"_Tp"
 21135 8090 5BC50000 		.long	0xc55b
 21136 8094 00       		.byte	0
 21137 8095 16       		.uleb128 0x16
 21138 8096 00000000 		.long	.LASF1049
 21139 809a 01       		.byte	0x1
 21140 809b 0B       		.byte	0xb
 21141 809c 3E       		.byte	0x3e
 21142 809d B6800000 		.long	0x80b6
 21143 80a1 13       		.uleb128 0x13
 21144 80a2 00000000 		.long	.LASF513
 21145 80a6 0B       		.byte	0xb
 21146 80a7 3F       		.byte	0x3f
 21147 80a8 78C70000 		.long	0xc778
 21148 80ac 18       		.uleb128 0x18
 21149 80ad 5F547000 		.string	"_Tp"
 21150 80b1 5BC50000 		.long	0xc55b
 21151 80b5 00       		.byte	0
 21152 80b6 16       		.uleb128 0x16
 21153 80b7 00000000 		.long	.LASF1050
 21154 80bb 01       		.byte	0x1
 21155 80bc 0B       		.byte	0xb
 21156 80bd 3E       		.byte	0x3e
 21157 80be D7800000 		.long	0x80d7
 21158 80c2 13       		.uleb128 0x13
 21159 80c3 00000000 		.long	.LASF513
 21160 80c7 0B       		.byte	0xb
 21161 80c8 3F       		.byte	0x3f
 21162 80c9 54C60000 		.long	0xc654
 21163 80cd 18       		.uleb128 0x18
 21164 80ce 5F547000 		.string	"_Tp"
 21165 80d2 65530000 		.long	0x5365
 21166 80d6 00       		.byte	0
 21167 80d7 16       		.uleb128 0x16
 21168 80d8 00000000 		.long	.LASF1051
 21169 80dc 01       		.byte	0x1
 21170 80dd 0B       		.byte	0xb
 21171 80de 3E       		.byte	0x3e
 21172 80df F8800000 		.long	0x80f8
 21173 80e3 13       		.uleb128 0x13
 21174 80e4 00000000 		.long	.LASF513
 21175 80e8 0B       		.byte	0xb
 21176 80e9 3F       		.byte	0x3f
 21177 80ea 30C70000 		.long	0xc730
 21178 80ee 18       		.uleb128 0x18
 21179 80ef 5F547000 		.string	"_Tp"
 21180 80f3 3E530000 		.long	0x533e
 21181 80f7 00       		.byte	0
 21182 80f8 16       		.uleb128 0x16
 21183 80f9 00000000 		.long	.LASF1052
GAS LISTING /tmp/ccJUMvuF.s 			page 673


 21184 80fd 01       		.byte	0x1
 21185 80fe 0B       		.byte	0xb
 21186 80ff 3E       		.byte	0x3e
 21187 8100 19810000 		.long	0x8119
 21188 8104 13       		.uleb128 0x13
 21189 8105 00000000 		.long	.LASF513
 21190 8109 0B       		.byte	0xb
 21191 810a 3F       		.byte	0x3f
 21192 810b D9C50000 		.long	0xc5d9
 21193 810f 18       		.uleb128 0x18
 21194 8110 5F547000 		.string	"_Tp"
 21195 8114 C92C0000 		.long	0x2cc9
 21196 8118 00       		.byte	0
 21197 8119 16       		.uleb128 0x16
 21198 811a 00000000 		.long	.LASF1053
 21199 811e 01       		.byte	0x1
 21200 811f 31       		.byte	0x31
 21201 8120 AF       		.byte	0xaf
 21202 8121 50810000 		.long	0x8150
 21203 8125 13       		.uleb128 0x13
 21204 8126 00000000 		.long	.LASF498
 21205 812a 31       		.byte	0x31
 21206 812b B3       		.byte	0xb3
 21207 812c 54070000 		.long	0x754
 21208 8130 13       		.uleb128 0x13
 21209 8131 00000000 		.long	.LASF491
 21210 8135 31       		.byte	0x31
 21211 8136 B4       		.byte	0xb4
 21212 8137 F0B10000 		.long	0xb1f0
 21213 813b 13       		.uleb128 0x13
 21214 813c 00000000 		.long	.LASF58
 21215 8140 31       		.byte	0x31
 21216 8141 B5       		.byte	0xb5
 21217 8142 D1B70000 		.long	0xb7d1
 21218 8146 35       		.uleb128 0x35
 21219 8147 00000000 		.long	.LASF745
 21220 814b F0B10000 		.long	0xb1f0
 21221 814f 00       		.byte	0
 21222 8150 16       		.uleb128 0x16
 21223 8151 00000000 		.long	.LASF1054
 21224 8155 01       		.byte	0x1
 21225 8156 31       		.byte	0x31
 21226 8157 95       		.byte	0x95
 21227 8158 7C810000 		.long	0x817c
 21228 815c 13       		.uleb128 0x13
 21229 815d 00000000 		.long	.LASF19
 21230 8161 31       		.byte	0x31
 21231 8162 98       		.byte	0x98
 21232 8163 3E9F0000 		.long	0x9f3e
 21233 8167 13       		.uleb128 0x13
 21234 8168 00000000 		.long	.LASF498
 21235 816c 31       		.byte	0x31
 21236 816d 99       		.byte	0x99
 21237 816e 4B9F0000 		.long	0x9f4b
 21238 8172 35       		.uleb128 0x35
 21239 8173 00000000 		.long	.LASF745
 21240 8177 169F0000 		.long	0x9f16
GAS LISTING /tmp/ccJUMvuF.s 			page 674


 21241 817b 00       		.byte	0
 21242 817c 24       		.uleb128 0x24
 21243 817d 00000000 		.long	.LASF1055
 21244 8181 01       		.byte	0x1
 21245 8182 1B       		.byte	0x1b
 21246 8183 E005     		.value	0x5e0
 21247 8185 96810000 		.long	0x8196
 21248 8189 5C       		.uleb128 0x5c
 21249 818a 00000000 		.long	.LASF513
 21250 818e 1B       		.byte	0x1b
 21251 818f E105     		.value	0x5e1
 21252 8191 29000000 		.long	0x29
 21253 8195 00       		.byte	0
 21254 8196 16       		.uleb128 0x16
 21255 8197 00000000 		.long	.LASF1056
 21256 819b 01       		.byte	0x1
 21257 819c 31       		.byte	0x31
 21258 819d BA       		.byte	0xba
 21259 819e CD810000 		.long	0x81cd
 21260 81a2 13       		.uleb128 0x13
 21261 81a3 00000000 		.long	.LASF498
 21262 81a7 31       		.byte	0x31
 21263 81a8 BE       		.byte	0xbe
 21264 81a9 54070000 		.long	0x754
 21265 81ad 13       		.uleb128 0x13
 21266 81ae 00000000 		.long	.LASF491
 21267 81b2 31       		.byte	0x31
 21268 81b3 BF       		.byte	0xbf
 21269 81b4 CEAE0000 		.long	0xaece
 21270 81b8 13       		.uleb128 0x13
 21271 81b9 00000000 		.long	.LASF58
 21272 81bd 31       		.byte	0x31
 21273 81be C0       		.byte	0xc0
 21274 81bf D7B70000 		.long	0xb7d7
 21275 81c3 35       		.uleb128 0x35
 21276 81c4 00000000 		.long	.LASF745
 21277 81c8 CEAE0000 		.long	0xaece
 21278 81cc 00       		.byte	0
 21279 81cd 16       		.uleb128 0x16
 21280 81ce 00000000 		.long	.LASF1057
 21281 81d2 01       		.byte	0x1
 21282 81d3 31       		.byte	0x31
 21283 81d4 D1       		.byte	0xd1
 21284 81d5 11820000 		.long	0x8211
 21285 81d9 13       		.uleb128 0x13
 21286 81da 00000000 		.long	.LASF1058
 21287 81de 31       		.byte	0x31
 21288 81df D3       		.byte	0xd3
 21289 81e0 169F0000 		.long	0x9f16
 21290 81e4 4E       		.uleb128 0x4e
 21291 81e5 00000000 		.long	.LASF1059
 21292 81e9 31       		.byte	0x31
 21293 81ea D4       		.byte	0xd4
 21294 81eb 00000000 		.long	.LASF1060
 21295 81ef D9810000 		.long	0x81d9
 21296 81f3 FD810000 		.long	0x81fd
 21297 81f7 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 675


 21298 81f8 169F0000 		.long	0x9f16
 21299 81fc 00       		.byte	0
 21300 81fd 35       		.uleb128 0x35
 21301 81fe 00000000 		.long	.LASF745
 21302 8202 169F0000 		.long	0x9f16
 21303 8206 50       		.uleb128 0x50
 21304 8207 00000000 		.long	.LASF1061
 21305 820b 30930000 		.long	0x9330
 21306 820f 00       		.byte	0
 21307 8210 00       		.byte	0
 21308 8211 16       		.uleb128 0x16
 21309 8212 00000000 		.long	.LASF1062
 21310 8216 01       		.byte	0x1
 21311 8217 1B       		.byte	0x1b
 21312 8218 9A       		.byte	0x9a
 21313 8219 32820000 		.long	0x8232
 21314 821d 13       		.uleb128 0x13
 21315 821e 00000000 		.long	.LASF513
 21316 8222 1B       		.byte	0x1b
 21317 8223 9B       		.byte	0x9b
 21318 8224 53930000 		.long	0x9353
 21319 8228 18       		.uleb128 0x18
 21320 8229 5F547000 		.string	"_Tp"
 21321 822d 53930000 		.long	0x9353
 21322 8231 00       		.byte	0
 21323 8232 16       		.uleb128 0x16
 21324 8233 00000000 		.long	.LASF1063
 21325 8237 01       		.byte	0x1
 21326 8238 31       		.byte	0x31
 21327 8239 D1       		.byte	0xd1
 21328 823a 76820000 		.long	0x8276
 21329 823e 13       		.uleb128 0x13
 21330 823f 00000000 		.long	.LASF1058
 21331 8243 31       		.byte	0x31
 21332 8244 D3       		.byte	0xd3
 21333 8245 C9C10000 		.long	0xc1c9
 21334 8249 4E       		.uleb128 0x4e
 21335 824a 00000000 		.long	.LASF1059
 21336 824e 31       		.byte	0x31
 21337 824f D4       		.byte	0xd4
 21338 8250 00000000 		.long	.LASF1064
 21339 8254 3E820000 		.long	0x823e
 21340 8258 62820000 		.long	0x8262
 21341 825c 09       		.uleb128 0x9
 21342 825d C9C10000 		.long	0xc1c9
 21343 8261 00       		.byte	0
 21344 8262 35       		.uleb128 0x35
 21345 8263 00000000 		.long	.LASF745
 21346 8267 C9C10000 		.long	0xc1c9
 21347 826b 50       		.uleb128 0x50
 21348 826c 00000000 		.long	.LASF1061
 21349 8270 30930000 		.long	0x9330
 21350 8274 00       		.byte	0
 21351 8275 00       		.byte	0
 21352 8276 16       		.uleb128 0x16
 21353 8277 00000000 		.long	.LASF1065
 21354 827b 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 676


 21355 827c 31       		.byte	0x31
 21356 827d D9       		.byte	0xd9
 21357 827e BA820000 		.long	0x82ba
 21358 8282 13       		.uleb128 0x13
 21359 8283 00000000 		.long	.LASF1058
 21360 8287 31       		.byte	0x31
 21361 8288 DB       		.byte	0xdb
 21362 8289 319F0000 		.long	0x9f31
 21363 828d 4E       		.uleb128 0x4e
 21364 828e 00000000 		.long	.LASF1059
 21365 8292 31       		.byte	0x31
 21366 8293 DC       		.byte	0xdc
 21367 8294 00000000 		.long	.LASF1066
 21368 8298 82820000 		.long	0x8282
 21369 829c A6820000 		.long	0x82a6
 21370 82a0 09       		.uleb128 0x9
 21371 82a1 169F0000 		.long	0x9f16
 21372 82a5 00       		.byte	0
 21373 82a6 35       		.uleb128 0x35
 21374 82a7 00000000 		.long	.LASF745
 21375 82ab 169F0000 		.long	0x9f16
 21376 82af 50       		.uleb128 0x50
 21377 82b0 00000000 		.long	.LASF1061
 21378 82b4 30930000 		.long	0x9330
 21379 82b8 01       		.byte	0x1
 21380 82b9 00       		.byte	0
 21381 82ba 16       		.uleb128 0x16
 21382 82bb 00000000 		.long	.LASF1067
 21383 82bf 01       		.byte	0x1
 21384 82c0 31       		.byte	0x31
 21385 82c1 D1       		.byte	0xd1
 21386 82c2 FE820000 		.long	0x82fe
 21387 82c6 13       		.uleb128 0x13
 21388 82c7 00000000 		.long	.LASF1058
 21389 82cb 31       		.byte	0x31
 21390 82cc D3       		.byte	0xd3
 21391 82cd 98C20000 		.long	0xc298
 21392 82d1 4E       		.uleb128 0x4e
 21393 82d2 00000000 		.long	.LASF1059
 21394 82d6 31       		.byte	0x31
 21395 82d7 D4       		.byte	0xd4
 21396 82d8 00000000 		.long	.LASF1068
 21397 82dc C6820000 		.long	0x82c6
 21398 82e0 EA820000 		.long	0x82ea
 21399 82e4 09       		.uleb128 0x9
 21400 82e5 98C20000 		.long	0xc298
 21401 82e9 00       		.byte	0
 21402 82ea 35       		.uleb128 0x35
 21403 82eb 00000000 		.long	.LASF745
 21404 82ef 98C20000 		.long	0xc298
 21405 82f3 50       		.uleb128 0x50
 21406 82f4 00000000 		.long	.LASF1061
 21407 82f8 30930000 		.long	0x9330
 21408 82fc 00       		.byte	0
 21409 82fd 00       		.byte	0
 21410 82fe 16       		.uleb128 0x16
 21411 82ff 00000000 		.long	.LASF1069
GAS LISTING /tmp/ccJUMvuF.s 			page 677


 21412 8303 01       		.byte	0x1
 21413 8304 31       		.byte	0x31
 21414 8305 D1       		.byte	0xd1
 21415 8306 42830000 		.long	0x8342
 21416 830a 13       		.uleb128 0x13
 21417 830b 00000000 		.long	.LASF1058
 21418 830f 31       		.byte	0x31
 21419 8310 D3       		.byte	0xd3
 21420 8311 00C80000 		.long	0xc800
 21421 8315 4E       		.uleb128 0x4e
 21422 8316 00000000 		.long	.LASF1059
 21423 831a 31       		.byte	0x31
 21424 831b D4       		.byte	0xd4
 21425 831c 00000000 		.long	.LASF1070
 21426 8320 0A830000 		.long	0x830a
 21427 8324 2E830000 		.long	0x832e
 21428 8328 09       		.uleb128 0x9
 21429 8329 00C80000 		.long	0xc800
 21430 832d 00       		.byte	0
 21431 832e 35       		.uleb128 0x35
 21432 832f 00000000 		.long	.LASF745
 21433 8333 00C80000 		.long	0xc800
 21434 8337 50       		.uleb128 0x50
 21435 8338 00000000 		.long	.LASF1061
 21436 833c 30930000 		.long	0x9330
 21437 8340 00       		.byte	0
 21438 8341 00       		.byte	0
 21439 8342 24       		.uleb128 0x24
 21440 8343 00000000 		.long	.LASF1071
 21441 8347 01       		.byte	0x1
 21442 8348 14       		.byte	0x14
 21443 8349 3502     		.value	0x235
 21444 834b 75830000 		.long	0x8375
 21445 834f 75       		.uleb128 0x75
 21446 8350 00000000 		.long	.LASF1072
 21447 8354 14       		.byte	0x14
 21448 8355 3902     		.value	0x239
 21449 8357 C9C10000 		.long	0xc1c9
 21450 835b 18       		.uleb128 0x18
 21451 835c 5F547000 		.string	"_Tp"
 21452 8360 29000000 		.long	0x29
 21453 8364 09       		.uleb128 0x9
 21454 8365 CFC10000 		.long	0xc1cf
 21455 8369 09       		.uleb128 0x9
 21456 836a CFC10000 		.long	0xc1cf
 21457 836e 09       		.uleb128 0x9
 21458 836f C9C10000 		.long	0xc1c9
 21459 8373 00       		.byte	0
 21460 8374 00       		.byte	0
 21461 8375 14       		.uleb128 0x14
 21462 8376 00000000 		.long	.LASF1073
 21463 837a 40       		.uleb128 0x40
 21464 837b 00000000 		.long	.LASF1074
 21465 837f 03840000 		.long	0x8403
 21466 8383 0D       		.uleb128 0xd
 21467 8384 00000000 		.long	.LASF1075
 21468 8388 0E       		.byte	0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 678


 21469 8389 83       		.byte	0x83
 21470 838a 00000000 		.long	.LASF1076
 21471 838e 3C260000 		.long	0x263c
 21472 8392 01       		.byte	0x1
 21473 8393 9B830000 		.long	0x839b
 21474 8397 A1830000 		.long	0x83a1
 21475 839b 08       		.uleb128 0x8
 21476 839c 26C90000 		.long	0xc926
 21477 83a0 00       		.byte	0
 21478 83a1 0E       		.uleb128 0xe
 21479 83a2 00000000 		.long	.LASF1077
 21480 83a6 0E       		.byte	0xe
 21481 83a7 97       		.byte	0x97
 21482 83a8 00000000 		.long	.LASF1078
 21483 83ac 01       		.byte	0x1
 21484 83ad B5830000 		.long	0x83b5
 21485 83b1 C0830000 		.long	0x83c0
 21486 83b5 08       		.uleb128 0x8
 21487 83b6 D6CA0000 		.long	0xcad6
 21488 83ba 09       		.uleb128 0x9
 21489 83bb 3C260000 		.long	0x263c
 21490 83bf 00       		.byte	0
 21491 83c0 32       		.uleb128 0x32
 21492 83c1 00000000 		.long	.LASF414
 21493 83c5 0E       		.byte	0xe
 21494 83c6 BB01     		.value	0x1bb
 21495 83c8 00000000 		.long	.LASF1079
 21496 83cc E4830000 		.long	0x83e4
 21497 83d0 01       		.byte	0x1
 21498 83d1 D9830000 		.long	0x83d9
 21499 83d5 E4830000 		.long	0x83e4
 21500 83d9 08       		.uleb128 0x8
 21501 83da 26C90000 		.long	0xc926
 21502 83de 09       		.uleb128 0x9
 21503 83df ACAE0000 		.long	0xaeac
 21504 83e3 00       		.byte	0
 21505 83e4 22       		.uleb128 0x22
 21506 83e5 00000000 		.long	.LASF30
 21507 83e9 0E       		.byte	0xe
 21508 83ea 4B       		.byte	0x4b
 21509 83eb ACAE0000 		.long	0xaeac
 21510 83ef 01       		.byte	0x1
 21511 83f0 35       		.uleb128 0x35
 21512 83f1 00000000 		.long	.LASF301
 21513 83f5 ACAE0000 		.long	0xaeac
 21514 83f9 36       		.uleb128 0x36
 21515 83fa 00000000 		.long	.LASF302
 21516 83fe BD040000 		.long	0x4bd
 21517 8402 00       		.byte	0
 21518 8403 11       		.uleb128 0x11
 21519 8404 7A830000 		.long	0x837a
 21520 8408 52       		.uleb128 0x52
 21521 8409 00000000 		.long	.LASF1080
 21522 840d 15       		.byte	0x15
 21523 840e 4F       		.byte	0x4f
 21524 840f C1240000 		.long	0x24c1
 21525 8413 22840000 		.long	0x8422
GAS LISTING /tmp/ccJUMvuF.s 			page 679


 21526 8417 09       		.uleb128 0x9
 21527 8418 C1240000 		.long	0x24c1
 21528 841c 09       		.uleb128 0x9
 21529 841d C1240000 		.long	0x24c1
 21530 8421 00       		.byte	0
 21531 8422 52       		.uleb128 0x52
 21532 8423 00000000 		.long	.LASF1081
 21533 8427 15       		.byte	0x15
 21534 8428 4B       		.byte	0x4b
 21535 8429 C1240000 		.long	0x24c1
 21536 842d 3C840000 		.long	0x843c
 21537 8431 09       		.uleb128 0x9
 21538 8432 C1240000 		.long	0x24c1
 21539 8436 09       		.uleb128 0x9
 21540 8437 C1240000 		.long	0x24c1
 21541 843b 00       		.byte	0
 21542 843c 52       		.uleb128 0x52
 21543 843d 00000000 		.long	.LASF1080
 21544 8441 15       		.byte	0x15
 21545 8442 9D       		.byte	0x9d
 21546 8443 89250000 		.long	0x2589
 21547 8447 56840000 		.long	0x8456
 21548 844b 09       		.uleb128 0x9
 21549 844c 89250000 		.long	0x2589
 21550 8450 09       		.uleb128 0x9
 21551 8451 89250000 		.long	0x2589
 21552 8455 00       		.byte	0
 21553 8456 76       		.uleb128 0x76
 21554 8457 00000000 		.long	.LASF1082
 21555 845b 09       		.byte	0x9
 21556 845c 1202     		.value	0x212
 21557 845e 72C10000 		.long	0xc172
 21558 8462 7A840000 		.long	0x847a
 21559 8466 35       		.uleb128 0x35
 21560 8467 00000000 		.long	.LASF302
 21561 846b BD040000 		.long	0x4bd
 21562 846f 09       		.uleb128 0x9
 21563 8470 72C10000 		.long	0xc172
 21564 8474 09       		.uleb128 0x9
 21565 8475 CEAE0000 		.long	0xaece
 21566 8479 00       		.byte	0
 21567 847a 52       		.uleb128 0x52
 21568 847b 00000000 		.long	.LASF1083
 21569 847f 15       		.byte	0x15
 21570 8480 57       		.byte	0x57
 21571 8481 C1240000 		.long	0x24c1
 21572 8485 8F840000 		.long	0x848f
 21573 8489 09       		.uleb128 0x9
 21574 848a C1240000 		.long	0x24c1
 21575 848e 00       		.byte	0
 21576 848f 52       		.uleb128 0x52
 21577 8490 00000000 		.long	.LASF1084
 21578 8494 15       		.byte	0x15
 21579 8495 5F       		.byte	0x5f
 21580 8496 6CCB0000 		.long	0xcb6c
 21581 849a A9840000 		.long	0x84a9
 21582 849e 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 680


 21583 849f 72CB0000 		.long	0xcb72
 21584 84a3 09       		.uleb128 0x9
 21585 84a4 C1240000 		.long	0x24c1
 21586 84a8 00       		.byte	0
 21587 84a9 11       		.uleb128 0x11
 21588 84aa C1240000 		.long	0x24c1
 21589 84ae 52       		.uleb128 0x52
 21590 84af 00000000 		.long	.LASF1085
 21591 84b3 15       		.byte	0x15
 21592 84b4 5B       		.byte	0x5b
 21593 84b5 6CCB0000 		.long	0xcb6c
 21594 84b9 C8840000 		.long	0x84c8
 21595 84bd 09       		.uleb128 0x9
 21596 84be 72CB0000 		.long	0xcb72
 21597 84c2 09       		.uleb128 0x9
 21598 84c3 C1240000 		.long	0x24c1
 21599 84c7 00       		.byte	0
 21600 84c8 11       		.uleb128 0x11
 21601 84c9 F0290000 		.long	0x29f0
 21602 84cd 52       		.uleb128 0x52
 21603 84ce 00000000 		.long	.LASF1086
 21604 84d2 12       		.byte	0x12
 21605 84d3 4C       		.byte	0x4c
 21606 84d4 C4C80000 		.long	0xc8c4
 21607 84d8 EB840000 		.long	0x84eb
 21608 84dc 18       		.uleb128 0x18
 21609 84dd 5F547000 		.string	"_Tp"
 21610 84e1 65530000 		.long	0x5365
 21611 84e5 09       		.uleb128 0x9
 21612 84e6 C6CD0000 		.long	0xcdc6
 21613 84ea 00       		.byte	0
 21614 84eb 52       		.uleb128 0x52
 21615 84ec 00000000 		.long	.LASF1087
 21616 84f0 12       		.byte	0x12
 21617 84f1 4C       		.byte	0x4c
 21618 84f2 9CC60000 		.long	0xc69c
 21619 84f6 09850000 		.long	0x8509
 21620 84fa 18       		.uleb128 0x18
 21621 84fb 5F547000 		.string	"_Tp"
 21622 84ff 9CC60000 		.long	0xc69c
 21623 8503 09       		.uleb128 0x9
 21624 8504 4ACE0000 		.long	0xce4a
 21625 8508 00       		.byte	0
 21626 8509 76       		.uleb128 0x76
 21627 850a 00000000 		.long	.LASF1088
 21628 850e 0B       		.byte	0xb
 21629 850f E702     		.value	0x2e7
 21630 8511 45800000 		.long	0x8045
 21631 8515 41850000 		.long	0x8541
 21632 8519 19       		.uleb128 0x19
 21633 851a 5F5F6900 		.string	"__i"
 21634 851e 53930000 		.long	0x9353
 21635 8522 00       		.byte	0
 21636 8523 35       		.uleb128 0x35
 21637 8524 00000000 		.long	.LASF813
 21638 8528 67C50000 		.long	0xc567
 21639 852c 6A       		.uleb128 0x6a
GAS LISTING /tmp/ccJUMvuF.s 			page 681


 21640 852d 00000000 		.long	.LASF1089
 21641 8531 3B850000 		.long	0x853b
 21642 8535 68       		.uleb128 0x68
 21643 8536 65530000 		.long	0x5365
 21644 853a 00       		.byte	0
 21645 853b 09       		.uleb128 0x9
 21646 853c AEC60000 		.long	0xc6ae
 21647 8540 00       		.byte	0
 21648 8541 52       		.uleb128 0x52
 21649 8542 00000000 		.long	.LASF1090
 21650 8546 12       		.byte	0x12
 21651 8547 4C       		.byte	0x4c
 21652 8548 CBC80000 		.long	0xc8cb
 21653 854c 5F850000 		.long	0x855f
 21654 8550 18       		.uleb128 0x18
 21655 8551 5F547000 		.string	"_Tp"
 21656 8555 3E530000 		.long	0x533e
 21657 8559 09       		.uleb128 0x9
 21658 855a 1BD00000 		.long	0xd01b
 21659 855e 00       		.byte	0
 21660 855f 52       		.uleb128 0x52
 21661 8560 00000000 		.long	.LASF1091
 21662 8564 12       		.byte	0x12
 21663 8565 4C       		.byte	0x4c
 21664 8566 78C70000 		.long	0xc778
 21665 856a 7D850000 		.long	0x857d
 21666 856e 18       		.uleb128 0x18
 21667 856f 5F547000 		.string	"_Tp"
 21668 8573 78C70000 		.long	0xc778
 21669 8577 09       		.uleb128 0x9
 21670 8578 80D00000 		.long	0xd080
 21671 857c 00       		.byte	0
 21672 857d 76       		.uleb128 0x76
 21673 857e 00000000 		.long	.LASF1092
 21674 8582 0B       		.byte	0xb
 21675 8583 E702     		.value	0x2e7
 21676 8585 A1800000 		.long	0x80a1
 21677 8589 B5850000 		.long	0x85b5
 21678 858d 19       		.uleb128 0x19
 21679 858e 5F5F6900 		.string	"__i"
 21680 8592 53930000 		.long	0x9353
 21681 8596 00       		.byte	0
 21682 8597 35       		.uleb128 0x35
 21683 8598 00000000 		.long	.LASF813
 21684 859c 5BC50000 		.long	0xc55b
 21685 85a0 6A       		.uleb128 0x6a
 21686 85a1 00000000 		.long	.LASF1089
 21687 85a5 AF850000 		.long	0x85af
 21688 85a9 68       		.uleb128 0x68
 21689 85aa 3E530000 		.long	0x533e
 21690 85ae 00       		.byte	0
 21691 85af 09       		.uleb128 0x9
 21692 85b0 8AC70000 		.long	0xc78a
 21693 85b4 00       		.byte	0
 21694 85b5 76       		.uleb128 0x76
 21695 85b6 00000000 		.long	.LASF1092
 21696 85ba 0B       		.byte	0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 682


 21697 85bb EC02     		.value	0x2ec
 21698 85bd 80800000 		.long	0x8080
 21699 85c1 ED850000 		.long	0x85ed
 21700 85c5 19       		.uleb128 0x19
 21701 85c6 5F5F6900 		.string	"__i"
 21702 85ca 53930000 		.long	0x9353
 21703 85ce 00       		.byte	0
 21704 85cf 35       		.uleb128 0x35
 21705 85d0 00000000 		.long	.LASF813
 21706 85d4 5BC50000 		.long	0xc55b
 21707 85d8 6A       		.uleb128 0x6a
 21708 85d9 00000000 		.long	.LASF1089
 21709 85dd E7850000 		.long	0x85e7
 21710 85e1 68       		.uleb128 0x68
 21711 85e2 3E530000 		.long	0x533e
 21712 85e6 00       		.byte	0
 21713 85e7 09       		.uleb128 0x9
 21714 85e8 90C70000 		.long	0xc790
 21715 85ec 00       		.byte	0
 21716 85ed 76       		.uleb128 0x76
 21717 85ee 00000000 		.long	.LASF1093
 21718 85f2 0B       		.byte	0xb
 21719 85f3 FC02     		.value	0x2fc
 21720 85f5 80800000 		.long	0x8080
 21721 85f9 21860000 		.long	0x8621
 21722 85fd 19       		.uleb128 0x19
 21723 85fe 5F5F6900 		.string	"__i"
 21724 8602 53930000 		.long	0x9353
 21725 8606 00       		.byte	0
 21726 8607 6A       		.uleb128 0x6a
 21727 8608 00000000 		.long	.LASF804
 21728 860c 1B860000 		.long	0x861b
 21729 8610 68       		.uleb128 0x68
 21730 8611 5BC50000 		.long	0xc55b
 21731 8615 68       		.uleb128 0x68
 21732 8616 3E530000 		.long	0x533e
 21733 861a 00       		.byte	0
 21734 861b 09       		.uleb128 0x9
 21735 861c B5C70000 		.long	0xc7b5
 21736 8620 00       		.byte	0
 21737 8621 76       		.uleb128 0x76
 21738 8622 00000000 		.long	.LASF1088
 21739 8626 0B       		.byte	0xb
 21740 8627 EC02     		.value	0x2ec
 21741 8629 24800000 		.long	0x8024
 21742 862d 59860000 		.long	0x8659
 21743 8631 19       		.uleb128 0x19
 21744 8632 5F5F6900 		.string	"__i"
 21745 8636 53930000 		.long	0x9353
 21746 863a 00       		.byte	0
 21747 863b 35       		.uleb128 0x35
 21748 863c 00000000 		.long	.LASF813
 21749 8640 67C50000 		.long	0xc567
 21750 8644 6A       		.uleb128 0x6a
 21751 8645 00000000 		.long	.LASF1089
 21752 8649 53860000 		.long	0x8653
 21753 864d 68       		.uleb128 0x68
GAS LISTING /tmp/ccJUMvuF.s 			page 683


 21754 864e 65530000 		.long	0x5365
 21755 8652 00       		.byte	0
 21756 8653 09       		.uleb128 0x9
 21757 8654 B4C60000 		.long	0xc6b4
 21758 8658 00       		.byte	0
 21759 8659 76       		.uleb128 0x76
 21760 865a 00000000 		.long	.LASF1094
 21761 865e 0B       		.byte	0xb
 21762 865f FC02     		.value	0x2fc
 21763 8661 24800000 		.long	0x8024
 21764 8665 8D860000 		.long	0x868d
 21765 8669 19       		.uleb128 0x19
 21766 866a 5F5F6900 		.string	"__i"
 21767 866e 53930000 		.long	0x9353
 21768 8672 00       		.byte	0
 21769 8673 6A       		.uleb128 0x6a
 21770 8674 00000000 		.long	.LASF804
 21771 8678 87860000 		.long	0x8687
 21772 867c 68       		.uleb128 0x68
 21773 867d 67C50000 		.long	0xc567
 21774 8681 68       		.uleb128 0x68
 21775 8682 65530000 		.long	0x5365
 21776 8686 00       		.byte	0
 21777 8687 09       		.uleb128 0x9
 21778 8688 D9C60000 		.long	0xc6d9
 21779 868c 00       		.byte	0
 21780 868d 52       		.uleb128 0x52
 21781 868e 00000000 		.long	.LASF1095
 21782 8692 12       		.byte	0x12
 21783 8693 4C       		.byte	0x4c
 21784 8694 D9C50000 		.long	0xc5d9
 21785 8698 AB860000 		.long	0x86ab
 21786 869c 18       		.uleb128 0x18
 21787 869d 5F547000 		.string	"_Tp"
 21788 86a1 D9C50000 		.long	0xc5d9
 21789 86a5 09       		.uleb128 0x9
 21790 86a6 9DD70000 		.long	0xd79d
 21791 86aa 00       		.byte	0
 21792 86ab 52       		.uleb128 0x52
 21793 86ac 00000000 		.long	.LASF1096
 21794 86b0 12       		.byte	0x12
 21795 86b1 4C       		.byte	0x4c
 21796 86b2 CAD80000 		.long	0xd8ca
 21797 86b6 C9860000 		.long	0x86c9
 21798 86ba 18       		.uleb128 0x18
 21799 86bb 5F547000 		.string	"_Tp"
 21800 86bf CAD80000 		.long	0xd8ca
 21801 86c3 09       		.uleb128 0x9
 21802 86c4 D0D80000 		.long	0xd8d0
 21803 86c8 00       		.byte	0
 21804 86c9 76       		.uleb128 0x76
 21805 86ca 00000000 		.long	.LASF1097
 21806 86ce 0B       		.byte	0xb
 21807 86cf E702     		.value	0x2e7
 21808 86d1 C2800000 		.long	0x80c2
 21809 86d5 F7860000 		.long	0x86f7
 21810 86d9 19       		.uleb128 0x19
GAS LISTING /tmp/ccJUMvuF.s 			page 684


 21811 86da 5F5F6900 		.string	"__i"
 21812 86de 53930000 		.long	0x9353
 21813 86e2 01       		.byte	0x1
 21814 86e3 35       		.uleb128 0x35
 21815 86e4 00000000 		.long	.LASF813
 21816 86e8 65530000 		.long	0x5365
 21817 86ec 6B       		.uleb128 0x6b
 21818 86ed 00000000 		.long	.LASF1089
 21819 86f1 09       		.uleb128 0x9
 21820 86f2 66C60000 		.long	0xc666
 21821 86f6 00       		.byte	0
 21822 86f7 76       		.uleb128 0x76
 21823 86f8 00000000 		.long	.LASF1098
 21824 86fc 0B       		.byte	0xb
 21825 86fd F402     		.value	0x2f4
 21826 86ff C2800000 		.long	0x80c2
 21827 8703 2B870000 		.long	0x872b
 21828 8707 19       		.uleb128 0x19
 21829 8708 5F5F6900 		.string	"__i"
 21830 870c 53930000 		.long	0x9353
 21831 8710 01       		.byte	0x1
 21832 8711 6A       		.uleb128 0x6a
 21833 8712 00000000 		.long	.LASF804
 21834 8716 25870000 		.long	0x8725
 21835 871a 68       		.uleb128 0x68
 21836 871b 67C50000 		.long	0xc567
 21837 871f 68       		.uleb128 0x68
 21838 8720 65530000 		.long	0x5365
 21839 8724 00       		.byte	0
 21840 8725 09       		.uleb128 0x9
 21841 8726 E6C60000 		.long	0xc6e6
 21842 872a 00       		.byte	0
 21843 872b 76       		.uleb128 0x76
 21844 872c 00000000 		.long	.LASF1094
 21845 8730 0B       		.byte	0xb
 21846 8731 F402     		.value	0x2f4
 21847 8733 45800000 		.long	0x8045
 21848 8737 5F870000 		.long	0x875f
 21849 873b 19       		.uleb128 0x19
 21850 873c 5F5F6900 		.string	"__i"
 21851 8740 53930000 		.long	0x9353
 21852 8744 00       		.byte	0
 21853 8745 6A       		.uleb128 0x6a
 21854 8746 00000000 		.long	.LASF804
 21855 874a 59870000 		.long	0x8759
 21856 874e 68       		.uleb128 0x68
 21857 874f 67C50000 		.long	0xc567
 21858 8753 68       		.uleb128 0x68
 21859 8754 65530000 		.long	0x5365
 21860 8758 00       		.byte	0
 21861 8759 09       		.uleb128 0x9
 21862 875a E6C60000 		.long	0xc6e6
 21863 875e 00       		.byte	0
 21864 875f 76       		.uleb128 0x76
 21865 8760 00000000 		.long	.LASF1099
 21866 8764 0B       		.byte	0xb
 21867 8765 E702     		.value	0x2e7
GAS LISTING /tmp/ccJUMvuF.s 			page 685


 21868 8767 E3800000 		.long	0x80e3
 21869 876b 8D870000 		.long	0x878d
 21870 876f 19       		.uleb128 0x19
 21871 8770 5F5F6900 		.string	"__i"
 21872 8774 53930000 		.long	0x9353
 21873 8778 01       		.byte	0x1
 21874 8779 35       		.uleb128 0x35
 21875 877a 00000000 		.long	.LASF813
 21876 877e 3E530000 		.long	0x533e
 21877 8782 6B       		.uleb128 0x6b
 21878 8783 00000000 		.long	.LASF1089
 21879 8787 09       		.uleb128 0x9
 21880 8788 42C70000 		.long	0xc742
 21881 878c 00       		.byte	0
 21882 878d 76       		.uleb128 0x76
 21883 878e 00000000 		.long	.LASF1100
 21884 8792 0B       		.byte	0xb
 21885 8793 F402     		.value	0x2f4
 21886 8795 E3800000 		.long	0x80e3
 21887 8799 C1870000 		.long	0x87c1
 21888 879d 19       		.uleb128 0x19
 21889 879e 5F5F6900 		.string	"__i"
 21890 87a2 53930000 		.long	0x9353
 21891 87a6 01       		.byte	0x1
 21892 87a7 6A       		.uleb128 0x6a
 21893 87a8 00000000 		.long	.LASF804
 21894 87ac BB870000 		.long	0x87bb
 21895 87b0 68       		.uleb128 0x68
 21896 87b1 5BC50000 		.long	0xc55b
 21897 87b5 68       		.uleb128 0x68
 21898 87b6 3E530000 		.long	0x533e
 21899 87ba 00       		.byte	0
 21900 87bb 09       		.uleb128 0x9
 21901 87bc C2C70000 		.long	0xc7c2
 21902 87c0 00       		.byte	0
 21903 87c1 76       		.uleb128 0x76
 21904 87c2 00000000 		.long	.LASF1093
 21905 87c6 0B       		.byte	0xb
 21906 87c7 F402     		.value	0x2f4
 21907 87c9 A1800000 		.long	0x80a1
 21908 87cd F5870000 		.long	0x87f5
 21909 87d1 19       		.uleb128 0x19
 21910 87d2 5F5F6900 		.string	"__i"
 21911 87d6 53930000 		.long	0x9353
 21912 87da 00       		.byte	0
 21913 87db 6A       		.uleb128 0x6a
 21914 87dc 00000000 		.long	.LASF804
 21915 87e0 EF870000 		.long	0x87ef
 21916 87e4 68       		.uleb128 0x68
 21917 87e5 5BC50000 		.long	0xc55b
 21918 87e9 68       		.uleb128 0x68
 21919 87ea 3E530000 		.long	0x533e
 21920 87ee 00       		.byte	0
 21921 87ef 09       		.uleb128 0x9
 21922 87f0 C2C70000 		.long	0xc7c2
 21923 87f4 00       		.byte	0
 21924 87f5 52       		.uleb128 0x52
GAS LISTING /tmp/ccJUMvuF.s 			page 686


 21925 87f6 00000000 		.long	.LASF1101
 21926 87fa 0E       		.byte	0xe
 21927 87fb 2E       		.byte	0x2e
 21928 87fc 93DC0000 		.long	0xdc93
 21929 8800 13880000 		.long	0x8813
 21930 8804 35       		.uleb128 0x35
 21931 8805 00000000 		.long	.LASF1102
 21932 8809 F0290000 		.long	0x29f0
 21933 880d 09       		.uleb128 0x9
 21934 880e 19CC0000 		.long	0xcc19
 21935 8812 00       		.byte	0
 21936 8813 76       		.uleb128 0x76
 21937 8814 00000000 		.long	.LASF1103
 21938 8818 09       		.byte	0x9
 21939 8819 4A02     		.value	0x24a
 21940 881b 72C10000 		.long	0xc172
 21941 881f 3B880000 		.long	0x883b
 21942 8823 35       		.uleb128 0x35
 21943 8824 00000000 		.long	.LASF301
 21944 8828 ACAE0000 		.long	0xaeac
 21945 882c 35       		.uleb128 0x35
 21946 882d 00000000 		.long	.LASF302
 21947 8831 BD040000 		.long	0x4bd
 21948 8835 09       		.uleb128 0x9
 21949 8836 72C10000 		.long	0xc172
 21950 883a 00       		.byte	0
 21951 883b 76       		.uleb128 0x76
 21952 883c 00000000 		.long	.LASF1104
 21953 8840 0B       		.byte	0xb
 21954 8841 E702     		.value	0x2e7
 21955 8843 04810000 		.long	0x8104
 21956 8847 69880000 		.long	0x8869
 21957 884b 19       		.uleb128 0x19
 21958 884c 5F5F6900 		.string	"__i"
 21959 8850 53930000 		.long	0x9353
 21960 8854 00       		.byte	0
 21961 8855 35       		.uleb128 0x35
 21962 8856 00000000 		.long	.LASF813
 21963 885a C92C0000 		.long	0x2cc9
 21964 885e 6B       		.uleb128 0x6b
 21965 885f 00000000 		.long	.LASF1089
 21966 8863 09       		.uleb128 0x9
 21967 8864 EBC50000 		.long	0xc5eb
 21968 8868 00       		.byte	0
 21969 8869 4A       		.uleb128 0x4a
 21970 886a 00000000 		.long	.LASF1105
 21971 886e 2C       		.byte	0x2c
 21972 886f 7A       		.byte	0x7a
 21973 8870 88880000 		.long	0x8888
 21974 8874 35       		.uleb128 0x35
 21975 8875 00000000 		.long	.LASF421
 21976 8879 98C20000 		.long	0xc298
 21977 887d 09       		.uleb128 0x9
 21978 887e 98C20000 		.long	0xc298
 21979 8882 09       		.uleb128 0x9
 21980 8883 98C20000 		.long	0xc298
 21981 8887 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 687


 21982 8888 4A       		.uleb128 0x4a
 21983 8889 00000000 		.long	.LASF1106
 21984 888d 2C       		.byte	0x2c
 21985 888e 94       		.byte	0x94
 21986 888f B5880000 		.long	0x88b5
 21987 8893 35       		.uleb128 0x35
 21988 8894 00000000 		.long	.LASF421
 21989 8898 98C20000 		.long	0xc298
 21990 889c 18       		.uleb128 0x18
 21991 889d 5F547000 		.string	"_Tp"
 21992 88a1 68930000 		.long	0x9368
 21993 88a5 09       		.uleb128 0x9
 21994 88a6 98C20000 		.long	0xc298
 21995 88aa 09       		.uleb128 0x9
 21996 88ab 98C20000 		.long	0xc298
 21997 88af 09       		.uleb128 0x9
 21998 88b0 DFC20000 		.long	0xc2df
 21999 88b4 00       		.byte	0
 22000 88b5 4A       		.uleb128 0x4a
 22001 88b6 00000000 		.long	.LASF1107
 22002 88ba 2C       		.byte	0x2c
 22003 88bb 7A       		.byte	0x7a
 22004 88bc D4880000 		.long	0x88d4
 22005 88c0 35       		.uleb128 0x35
 22006 88c1 00000000 		.long	.LASF421
 22007 88c5 C9C10000 		.long	0xc1c9
 22008 88c9 09       		.uleb128 0x9
 22009 88ca C9C10000 		.long	0xc1c9
 22010 88ce 09       		.uleb128 0x9
 22011 88cf C9C10000 		.long	0xc1c9
 22012 88d3 00       		.byte	0
 22013 88d4 4A       		.uleb128 0x4a
 22014 88d5 00000000 		.long	.LASF1108
 22015 88d9 2C       		.byte	0x2c
 22016 88da 94       		.byte	0x94
 22017 88db 01890000 		.long	0x8901
 22018 88df 35       		.uleb128 0x35
 22019 88e0 00000000 		.long	.LASF421
 22020 88e4 C9C10000 		.long	0xc1c9
 22021 88e8 18       		.uleb128 0x18
 22022 88e9 5F547000 		.string	"_Tp"
 22023 88ed 29000000 		.long	0x29
 22024 88f1 09       		.uleb128 0x9
 22025 88f2 C9C10000 		.long	0xc1c9
 22026 88f6 09       		.uleb128 0x9
 22027 88f7 C9C10000 		.long	0xc1c9
 22028 88fb 09       		.uleb128 0x9
 22029 88fc 10C20000 		.long	0xc210
 22030 8900 00       		.byte	0
 22031 8901 4A       		.uleb128 0x4a
 22032 8902 00000000 		.long	.LASF1109
 22033 8906 2C       		.byte	0x2c
 22034 8907 7A       		.byte	0x7a
 22035 8908 20890000 		.long	0x8920
 22036 890c 35       		.uleb128 0x35
 22037 890d 00000000 		.long	.LASF421
 22038 8911 00C80000 		.long	0xc800
GAS LISTING /tmp/ccJUMvuF.s 			page 688


 22039 8915 09       		.uleb128 0x9
 22040 8916 00C80000 		.long	0xc800
 22041 891a 09       		.uleb128 0x9
 22042 891b 00C80000 		.long	0xc800
 22043 891f 00       		.byte	0
 22044 8920 4A       		.uleb128 0x4a
 22045 8921 00000000 		.long	.LASF1110
 22046 8925 2C       		.byte	0x2c
 22047 8926 94       		.byte	0x94
 22048 8927 4D890000 		.long	0x894d
 22049 892b 35       		.uleb128 0x35
 22050 892c 00000000 		.long	.LASF421
 22051 8930 00C80000 		.long	0xc800
 22052 8934 18       		.uleb128 0x18
 22053 8935 5F547000 		.string	"_Tp"
 22054 8939 5A930000 		.long	0x935a
 22055 893d 09       		.uleb128 0x9
 22056 893e 00C80000 		.long	0xc800
 22057 8942 09       		.uleb128 0x9
 22058 8943 00C80000 		.long	0xc800
 22059 8947 09       		.uleb128 0x9
 22060 8948 3CC80000 		.long	0xc83c
 22061 894c 00       		.byte	0
 22062 894d 52       		.uleb128 0x52
 22063 894e 00000000 		.long	.LASF1111
 22064 8952 12       		.byte	0x12
 22065 8953 65       		.byte	0x65
 22066 8954 C2E40000 		.long	0xe4c2
 22067 8958 6B890000 		.long	0x896b
 22068 895c 18       		.uleb128 0x18
 22069 895d 5F547000 		.string	"_Tp"
 22070 8961 DAC10000 		.long	0xc1da
 22071 8965 09       		.uleb128 0x9
 22072 8966 DAC10000 		.long	0xc1da
 22073 896a 00       		.byte	0
 22074 896b 4C       		.uleb128 0x4c
 22075 896c 00000000 		.long	.LASF1112
 22076 8970 0D       		.byte	0xd
 22077 8971 1C07     		.value	0x71c
 22078 8973 94890000 		.long	0x8994
 22079 8977 35       		.uleb128 0x35
 22080 8978 00000000 		.long	.LASF1113
 22081 897c 169F0000 		.long	0x9f16
 22082 8980 35       		.uleb128 0x35
 22083 8981 00000000 		.long	.LASF1114
 22084 8985 26940000 		.long	0x9426
 22085 8989 09       		.uleb128 0x9
 22086 898a 169F0000 		.long	0x9f16
 22087 898e 09       		.uleb128 0x9
 22088 898f 26940000 		.long	0x9426
 22089 8993 00       		.byte	0
 22090 8994 4C       		.uleb128 0x4c
 22091 8995 00000000 		.long	.LASF1115
 22092 8999 0D       		.byte	0xd
 22093 899a 4607     		.value	0x746
 22094 899c C2890000 		.long	0x89c2
 22095 89a0 35       		.uleb128 0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 689


 22096 89a1 00000000 		.long	.LASF1113
 22097 89a5 169F0000 		.long	0x9f16
 22098 89a9 35       		.uleb128 0x35
 22099 89aa 00000000 		.long	.LASF1114
 22100 89ae A8930000 		.long	0x93a8
 22101 89b2 09       		.uleb128 0x9
 22102 89b3 169F0000 		.long	0x9f16
 22103 89b7 09       		.uleb128 0x9
 22104 89b8 169F0000 		.long	0x9f16
 22105 89bc 09       		.uleb128 0x9
 22106 89bd A8930000 		.long	0x93a8
 22107 89c1 00       		.byte	0
 22108 89c2 76       		.uleb128 0x76
 22109 89c3 00000000 		.long	.LASF1116
 22110 89c7 14       		.byte	0x14
 22111 89c8 F502     		.value	0x2f5
 22112 89ca 9EAA0000 		.long	0xaa9e
 22113 89ce FD890000 		.long	0x89fd
 22114 89d2 35       		.uleb128 0x35
 22115 89d3 00000000 		.long	.LASF1117
 22116 89d7 C9C10000 		.long	0xc1c9
 22117 89db 35       		.uleb128 0x35
 22118 89dc 00000000 		.long	.LASF426
 22119 89e0 53930000 		.long	0x9353
 22120 89e4 18       		.uleb128 0x18
 22121 89e5 5F547000 		.string	"_Tp"
 22122 89e9 29000000 		.long	0x29
 22123 89ed 09       		.uleb128 0x9
 22124 89ee C9C10000 		.long	0xc1c9
 22125 89f2 09       		.uleb128 0x9
 22126 89f3 53930000 		.long	0x9353
 22127 89f7 09       		.uleb128 0x9
 22128 89f8 E0C10000 		.long	0xc1e0
 22129 89fc 00       		.byte	0
 22130 89fd 4A       		.uleb128 0x4a
 22131 89fe 00000000 		.long	.LASF1118
 22132 8a02 12       		.byte	0x12
 22133 8a03 A6       		.byte	0xa6
 22134 8a04 1C8A0000 		.long	0x8a1c
 22135 8a08 18       		.uleb128 0x18
 22136 8a09 5F547000 		.string	"_Tp"
 22137 8a0d 29000000 		.long	0x29
 22138 8a11 09       		.uleb128 0x9
 22139 8a12 DAC10000 		.long	0xc1da
 22140 8a16 09       		.uleb128 0x9
 22141 8a17 DAC10000 		.long	0xc1da
 22142 8a1b 00       		.byte	0
 22143 8a1c 4A       		.uleb128 0x4a
 22144 8a1d 00000000 		.long	.LASF1119
 22145 8a21 14       		.byte	0x14
 22146 8a22 78       		.byte	0x78
 22147 8a23 448A0000 		.long	0x8a44
 22148 8a27 35       		.uleb128 0x35
 22149 8a28 00000000 		.long	.LASF1120
 22150 8a2c 169F0000 		.long	0x9f16
 22151 8a30 35       		.uleb128 0x35
 22152 8a31 00000000 		.long	.LASF1121
GAS LISTING /tmp/ccJUMvuF.s 			page 690


 22153 8a35 169F0000 		.long	0x9f16
 22154 8a39 09       		.uleb128 0x9
 22155 8a3a 169F0000 		.long	0x9f16
 22156 8a3e 09       		.uleb128 0x9
 22157 8a3f 169F0000 		.long	0x9f16
 22158 8a43 00       		.byte	0
 22159 8a44 76       		.uleb128 0x76
 22160 8a45 00000000 		.long	.LASF1122
 22161 8a49 0D       		.byte	0xd
 22162 8a4a 6707     		.value	0x767
 22163 8a4c 169F0000 		.long	0x9f16
 22164 8a50 7B8A0000 		.long	0x8a7b
 22165 8a54 35       		.uleb128 0x35
 22166 8a55 00000000 		.long	.LASF1113
 22167 8a59 169F0000 		.long	0x9f16
 22168 8a5d 35       		.uleb128 0x35
 22169 8a5e 00000000 		.long	.LASF1114
 22170 8a62 A8930000 		.long	0x93a8
 22171 8a66 09       		.uleb128 0x9
 22172 8a67 169F0000 		.long	0x9f16
 22173 8a6b 09       		.uleb128 0x9
 22174 8a6c 169F0000 		.long	0x9f16
 22175 8a70 09       		.uleb128 0x9
 22176 8a71 169F0000 		.long	0x9f16
 22177 8a75 09       		.uleb128 0x9
 22178 8a76 A8930000 		.long	0x93a8
 22179 8a7a 00       		.byte	0
 22180 8a7b 76       		.uleb128 0x76
 22181 8a7c 00000000 		.long	.LASF1123
 22182 8a80 14       		.byte	0x14
 22183 8a81 F502     		.value	0x2f5
 22184 8a83 B6AA0000 		.long	0xaab6
 22185 8a87 B68A0000 		.long	0x8ab6
 22186 8a8b 35       		.uleb128 0x35
 22187 8a8c 00000000 		.long	.LASF1117
 22188 8a90 98C20000 		.long	0xc298
 22189 8a94 35       		.uleb128 0x35
 22190 8a95 00000000 		.long	.LASF426
 22191 8a99 53930000 		.long	0x9353
 22192 8a9d 18       		.uleb128 0x18
 22193 8a9e 5F547000 		.string	"_Tp"
 22194 8aa2 68930000 		.long	0x9368
 22195 8aa6 09       		.uleb128 0x9
 22196 8aa7 98C20000 		.long	0xc298
 22197 8aab 09       		.uleb128 0x9
 22198 8aac 53930000 		.long	0x9353
 22199 8ab0 09       		.uleb128 0x9
 22200 8ab1 AFC20000 		.long	0xc2af
 22201 8ab5 00       		.byte	0
 22202 8ab6 76       		.uleb128 0x76
 22203 8ab7 00000000 		.long	.LASF1124
 22204 8abb 0B       		.byte	0xb
 22205 8abc F402     		.value	0x2f4
 22206 8abe 04810000 		.long	0x8104
 22207 8ac2 E58A0000 		.long	0x8ae5
 22208 8ac6 19       		.uleb128 0x19
 22209 8ac7 5F5F6900 		.string	"__i"
GAS LISTING /tmp/ccJUMvuF.s 			page 691


 22210 8acb 53930000 		.long	0x9353
 22211 8acf 00       		.byte	0
 22212 8ad0 6A       		.uleb128 0x6a
 22213 8ad1 00000000 		.long	.LASF804
 22214 8ad5 DF8A0000 		.long	0x8adf
 22215 8ad9 68       		.uleb128 0x68
 22216 8ada C92C0000 		.long	0x2cc9
 22217 8ade 00       		.byte	0
 22218 8adf 09       		.uleb128 0x9
 22219 8ae0 23C60000 		.long	0xc623
 22220 8ae4 00       		.byte	0
 22221 8ae5 77       		.uleb128 0x77
 22222 8ae6 EA8A0000 		.long	0x8aea
 22223 8aea 11       		.uleb128 0x11
 22224 8aeb 9C7F0000 		.long	0x7f9c
 22225 8aef 76       		.uleb128 0x76
 22226 8af0 00000000 		.long	.LASF1125
 22227 8af4 0B       		.byte	0xb
 22228 8af5 8603     		.value	0x386
 22229 8af7 31240000 		.long	0x2431
 22230 8afb 058B0000 		.long	0x8b05
 22231 8aff 6B       		.uleb128 0x6b
 22232 8b00 00000000 		.long	.LASF804
 22233 8b04 00       		.byte	0
 22234 8b05 76       		.uleb128 0x76
 22235 8b06 00000000 		.long	.LASF1126
 22236 8b0a 14       		.byte	0x14
 22237 8b0b 1601     		.value	0x116
 22238 8b0d 3E820000 		.long	0x823e
 22239 8b11 248B0000 		.long	0x8b24
 22240 8b15 35       		.uleb128 0x35
 22241 8b16 00000000 		.long	.LASF745
 22242 8b1a C9C10000 		.long	0xc1c9
 22243 8b1e 09       		.uleb128 0x9
 22244 8b1f C9C10000 		.long	0xc1c9
 22245 8b23 00       		.byte	0
 22246 8b24 76       		.uleb128 0x76
 22247 8b25 00000000 		.long	.LASF1127
 22248 8b29 14       		.byte	0x14
 22249 8b2a 1803     		.value	0x318
 22250 8b2c C9C10000 		.long	0xc1c9
 22251 8b30 5F8B0000 		.long	0x8b5f
 22252 8b34 18       		.uleb128 0x18
 22253 8b35 5F4F4900 		.string	"_OI"
 22254 8b39 C9C10000 		.long	0xc1c9
 22255 8b3d 35       		.uleb128 0x35
 22256 8b3e 00000000 		.long	.LASF426
 22257 8b42 53930000 		.long	0x9353
 22258 8b46 18       		.uleb128 0x18
 22259 8b47 5F547000 		.string	"_Tp"
 22260 8b4b 29000000 		.long	0x29
 22261 8b4f 09       		.uleb128 0x9
 22262 8b50 C9C10000 		.long	0xc1c9
 22263 8b54 09       		.uleb128 0x9
 22264 8b55 53930000 		.long	0x9353
 22265 8b59 09       		.uleb128 0x9
 22266 8b5a E0C10000 		.long	0xc1e0
GAS LISTING /tmp/ccJUMvuF.s 			page 692


 22267 8b5e 00       		.byte	0
 22268 8b5f 4C       		.uleb128 0x4c
 22269 8b60 00000000 		.long	.LASF1128
 22270 8b64 2D       		.byte	0x2d
 22271 8b65 3102     		.value	0x231
 22272 8b67 888B0000 		.long	0x8b88
 22273 8b6b 35       		.uleb128 0x35
 22274 8b6c 00000000 		.long	.LASF421
 22275 8b70 C9C10000 		.long	0xc1c9
 22276 8b74 35       		.uleb128 0x35
 22277 8b75 00000000 		.long	.LASF426
 22278 8b79 53930000 		.long	0x9353
 22279 8b7d 09       		.uleb128 0x9
 22280 8b7e C9C10000 		.long	0xc1c9
 22281 8b82 09       		.uleb128 0x9
 22282 8b83 53930000 		.long	0x9353
 22283 8b87 00       		.byte	0
 22284 8b88 4C       		.uleb128 0x4c
 22285 8b89 00000000 		.long	.LASF1129
 22286 8b8d 2D       		.byte	0x2d
 22287 8b8e 7502     		.value	0x275
 22288 8b90 BF8B0000 		.long	0x8bbf
 22289 8b94 35       		.uleb128 0x35
 22290 8b95 00000000 		.long	.LASF421
 22291 8b99 C9C10000 		.long	0xc1c9
 22292 8b9d 35       		.uleb128 0x35
 22293 8b9e 00000000 		.long	.LASF426
 22294 8ba2 53930000 		.long	0x9353
 22295 8ba6 18       		.uleb128 0x18
 22296 8ba7 5F547000 		.string	"_Tp"
 22297 8bab 29000000 		.long	0x29
 22298 8baf 09       		.uleb128 0x9
 22299 8bb0 C9C10000 		.long	0xc1c9
 22300 8bb4 09       		.uleb128 0x9
 22301 8bb5 53930000 		.long	0x9353
 22302 8bb9 09       		.uleb128 0x9
 22303 8bba 10C20000 		.long	0xc210
 22304 8bbe 00       		.byte	0
 22305 8bbf 76       		.uleb128 0x76
 22306 8bc0 00000000 		.long	.LASF1130
 22307 8bc4 14       		.byte	0x14
 22308 8bc5 1601     		.value	0x116
 22309 8bc7 82820000 		.long	0x8282
 22310 8bcb DE8B0000 		.long	0x8bde
 22311 8bcf 35       		.uleb128 0x35
 22312 8bd0 00000000 		.long	.LASF745
 22313 8bd4 169F0000 		.long	0x9f16
 22314 8bd8 09       		.uleb128 0x9
 22315 8bd9 169F0000 		.long	0x9f16
 22316 8bdd 00       		.byte	0
 22317 8bde 76       		.uleb128 0x76
 22318 8bdf 00000000 		.long	.LASF1131
 22319 8be3 14       		.byte	0x14
 22320 8be4 4902     		.value	0x249
 22321 8be6 C9C10000 		.long	0xc1c9
 22322 8bea 1A8C0000 		.long	0x8c1a
 22323 8bee 50       		.uleb128 0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 693


 22324 8bef 00000000 		.long	.LASF1132
 22325 8bf3 30930000 		.long	0x9330
 22326 8bf7 01       		.byte	0x1
 22327 8bf8 35       		.uleb128 0x35
 22328 8bf9 00000000 		.long	.LASF1133
 22329 8bfd C9C10000 		.long	0xc1c9
 22330 8c01 35       		.uleb128 0x35
 22331 8c02 00000000 		.long	.LASF1134
 22332 8c06 C9C10000 		.long	0xc1c9
 22333 8c0a 09       		.uleb128 0x9
 22334 8c0b C9C10000 		.long	0xc1c9
 22335 8c0f 09       		.uleb128 0x9
 22336 8c10 C9C10000 		.long	0xc1c9
 22337 8c14 09       		.uleb128 0x9
 22338 8c15 C9C10000 		.long	0xc1c9
 22339 8c19 00       		.byte	0
 22340 8c1a 76       		.uleb128 0x76
 22341 8c1b 00000000 		.long	.LASF1135
 22342 8c1f 14       		.byte	0x14
 22343 8c20 2101     		.value	0x121
 22344 8c22 D9810000 		.long	0x81d9
 22345 8c26 398C0000 		.long	0x8c39
 22346 8c2a 35       		.uleb128 0x35
 22347 8c2b 00000000 		.long	.LASF745
 22348 8c2f 169F0000 		.long	0x9f16
 22349 8c33 09       		.uleb128 0x9
 22350 8c34 169F0000 		.long	0x9f16
 22351 8c38 00       		.byte	0
 22352 8c39 76       		.uleb128 0x76
 22353 8c3a 00000000 		.long	.LASF1136
 22354 8c3e 14       		.byte	0x14
 22355 8c3f 5B02     		.value	0x25b
 22356 8c41 169F0000 		.long	0x9f16
 22357 8c45 758C0000 		.long	0x8c75
 22358 8c49 50       		.uleb128 0x50
 22359 8c4a 00000000 		.long	.LASF1132
 22360 8c4e 30930000 		.long	0x9330
 22361 8c52 01       		.byte	0x1
 22362 8c53 35       		.uleb128 0x35
 22363 8c54 00000000 		.long	.LASF1133
 22364 8c58 169F0000 		.long	0x9f16
 22365 8c5c 35       		.uleb128 0x35
 22366 8c5d 00000000 		.long	.LASF1134
 22367 8c61 169F0000 		.long	0x9f16
 22368 8c65 09       		.uleb128 0x9
 22369 8c66 169F0000 		.long	0x9f16
 22370 8c6a 09       		.uleb128 0x9
 22371 8c6b 169F0000 		.long	0x9f16
 22372 8c6f 09       		.uleb128 0x9
 22373 8c70 169F0000 		.long	0x9f16
 22374 8c74 00       		.byte	0
 22375 8c75 76       		.uleb128 0x76
 22376 8c76 00000000 		.long	.LASF1137
 22377 8c7a 14       		.byte	0x14
 22378 8c7b 9A02     		.value	0x29a
 22379 8c7d 169F0000 		.long	0x9f16
 22380 8c81 A78C0000 		.long	0x8ca7
GAS LISTING /tmp/ccJUMvuF.s 			page 694


 22381 8c85 35       		.uleb128 0x35
 22382 8c86 00000000 		.long	.LASF1133
 22383 8c8a 169F0000 		.long	0x9f16
 22384 8c8e 35       		.uleb128 0x35
 22385 8c8f 00000000 		.long	.LASF1134
 22386 8c93 169F0000 		.long	0x9f16
 22387 8c97 09       		.uleb128 0x9
 22388 8c98 169F0000 		.long	0x9f16
 22389 8c9c 09       		.uleb128 0x9
 22390 8c9d 169F0000 		.long	0x9f16
 22391 8ca1 09       		.uleb128 0x9
 22392 8ca2 169F0000 		.long	0x9f16
 22393 8ca6 00       		.byte	0
 22394 8ca7 4C       		.uleb128 0x4c
 22395 8ca8 00000000 		.long	.LASF1138
 22396 8cac 0D       		.byte	0xd
 22397 8cad 5707     		.value	0x757
 22398 8caf D58C0000 		.long	0x8cd5
 22399 8cb3 35       		.uleb128 0x35
 22400 8cb4 00000000 		.long	.LASF1113
 22401 8cb8 169F0000 		.long	0x9f16
 22402 8cbc 35       		.uleb128 0x35
 22403 8cbd 00000000 		.long	.LASF1114
 22404 8cc1 A8930000 		.long	0x93a8
 22405 8cc5 09       		.uleb128 0x9
 22406 8cc6 169F0000 		.long	0x9f16
 22407 8cca 09       		.uleb128 0x9
 22408 8ccb 169F0000 		.long	0x9f16
 22409 8ccf 09       		.uleb128 0x9
 22410 8cd0 A8930000 		.long	0x93a8
 22411 8cd4 00       		.byte	0
 22412 8cd5 76       		.uleb128 0x76
 22413 8cd6 00000000 		.long	.LASF1139
 22414 8cda 14       		.byte	0x14
 22415 8cdb 1601     		.value	0x116
 22416 8cdd C6820000 		.long	0x82c6
 22417 8ce1 F48C0000 		.long	0x8cf4
 22418 8ce5 35       		.uleb128 0x35
 22419 8ce6 00000000 		.long	.LASF745
 22420 8cea 98C20000 		.long	0xc298
 22421 8cee 09       		.uleb128 0x9
 22422 8cef 98C20000 		.long	0xc298
 22423 8cf3 00       		.byte	0
 22424 8cf4 76       		.uleb128 0x76
 22425 8cf5 00000000 		.long	.LASF1140
 22426 8cf9 14       		.byte	0x14
 22427 8cfa 1803     		.value	0x318
 22428 8cfc 98C20000 		.long	0xc298
 22429 8d00 2F8D0000 		.long	0x8d2f
 22430 8d04 18       		.uleb128 0x18
 22431 8d05 5F4F4900 		.string	"_OI"
 22432 8d09 98C20000 		.long	0xc298
 22433 8d0d 35       		.uleb128 0x35
 22434 8d0e 00000000 		.long	.LASF426
 22435 8d12 53930000 		.long	0x9353
 22436 8d16 18       		.uleb128 0x18
 22437 8d17 5F547000 		.string	"_Tp"
GAS LISTING /tmp/ccJUMvuF.s 			page 695


 22438 8d1b 68930000 		.long	0x9368
 22439 8d1f 09       		.uleb128 0x9
 22440 8d20 98C20000 		.long	0xc298
 22441 8d24 09       		.uleb128 0x9
 22442 8d25 53930000 		.long	0x9353
 22443 8d29 09       		.uleb128 0x9
 22444 8d2a AFC20000 		.long	0xc2af
 22445 8d2e 00       		.byte	0
 22446 8d2f 4C       		.uleb128 0x4c
 22447 8d30 00000000 		.long	.LASF1141
 22448 8d34 2D       		.byte	0x2d
 22449 8d35 3102     		.value	0x231
 22450 8d37 588D0000 		.long	0x8d58
 22451 8d3b 35       		.uleb128 0x35
 22452 8d3c 00000000 		.long	.LASF421
 22453 8d40 98C20000 		.long	0xc298
 22454 8d44 35       		.uleb128 0x35
 22455 8d45 00000000 		.long	.LASF426
 22456 8d49 53930000 		.long	0x9353
 22457 8d4d 09       		.uleb128 0x9
 22458 8d4e 98C20000 		.long	0xc298
 22459 8d52 09       		.uleb128 0x9
 22460 8d53 53930000 		.long	0x9353
 22461 8d57 00       		.byte	0
 22462 8d58 4C       		.uleb128 0x4c
 22463 8d59 00000000 		.long	.LASF1142
 22464 8d5d 2D       		.byte	0x2d
 22465 8d5e 7502     		.value	0x275
 22466 8d60 8F8D0000 		.long	0x8d8f
 22467 8d64 35       		.uleb128 0x35
 22468 8d65 00000000 		.long	.LASF421
 22469 8d69 98C20000 		.long	0xc298
 22470 8d6d 35       		.uleb128 0x35
 22471 8d6e 00000000 		.long	.LASF426
 22472 8d72 53930000 		.long	0x9353
 22473 8d76 18       		.uleb128 0x18
 22474 8d77 5F547000 		.string	"_Tp"
 22475 8d7b 68930000 		.long	0x9368
 22476 8d7f 09       		.uleb128 0x9
 22477 8d80 98C20000 		.long	0xc298
 22478 8d84 09       		.uleb128 0x9
 22479 8d85 53930000 		.long	0x9353
 22480 8d89 09       		.uleb128 0x9
 22481 8d8a DFC20000 		.long	0xc2df
 22482 8d8e 00       		.byte	0
 22483 8d8f 76       		.uleb128 0x76
 22484 8d90 00000000 		.long	.LASF1143
 22485 8d94 0A       		.byte	0xa
 22486 8d95 5706     		.value	0x657
 22487 8d97 74560000 		.long	0x5674
 22488 8d9b C28D0000 		.long	0x8dc2
 22489 8d9f 35       		.uleb128 0x35
 22490 8da0 00000000 		.long	.LASF779
 22491 8da4 CAD80000 		.long	0xd8ca
 22492 8da8 6A       		.uleb128 0x6a
 22493 8da9 00000000 		.long	.LASF827
 22494 8dad B78D0000 		.long	0x8db7
GAS LISTING /tmp/ccJUMvuF.s 			page 696


 22495 8db1 68       		.uleb128 0x68
 22496 8db2 D9C50000 		.long	0xc5d9
 22497 8db6 00       		.byte	0
 22498 8db7 09       		.uleb128 0x9
 22499 8db8 CAD80000 		.long	0xd8ca
 22500 8dbc 09       		.uleb128 0x9
 22501 8dbd D9C50000 		.long	0xc5d9
 22502 8dc1 00       		.byte	0
 22503 8dc2 4C       		.uleb128 0x4c
 22504 8dc3 00000000 		.long	.LASF1144
 22505 8dc7 0D       		.byte	0xd
 22506 8dc8 BD10     		.value	0x10bd
 22507 8dca F08D0000 		.long	0x8df0
 22508 8dce 35       		.uleb128 0x35
 22509 8dcf 00000000 		.long	.LASF1145
 22510 8dd3 C4A50000 		.long	0xa5c4
 22511 8dd7 35       		.uleb128 0x35
 22512 8dd8 00000000 		.long	.LASF1146
 22513 8ddc 9F560000 		.long	0x569f
 22514 8de0 09       		.uleb128 0x9
 22515 8de1 C4A50000 		.long	0xa5c4
 22516 8de5 09       		.uleb128 0x9
 22517 8de6 C4A50000 		.long	0xa5c4
 22518 8dea 09       		.uleb128 0x9
 22519 8deb 9F560000 		.long	0x569f
 22520 8def 00       		.byte	0
 22521 8df0 4C       		.uleb128 0x4c
 22522 8df1 00000000 		.long	.LASF1147
 22523 8df5 14       		.byte	0x14
 22524 8df6 C702     		.value	0x2c7
 22525 8df8 158E0000 		.long	0x8e15
 22526 8dfc 18       		.uleb128 0x18
 22527 8dfd 5F547000 		.string	"_Tp"
 22528 8e01 5A930000 		.long	0x935a
 22529 8e05 09       		.uleb128 0x9
 22530 8e06 00C80000 		.long	0xc800
 22531 8e0a 09       		.uleb128 0x9
 22532 8e0b 00C80000 		.long	0xc800
 22533 8e0f 09       		.uleb128 0x9
 22534 8e10 0CC80000 		.long	0xc80c
 22535 8e14 00       		.byte	0
 22536 8e15 76       		.uleb128 0x76
 22537 8e16 00000000 		.long	.LASF1148
 22538 8e1a 14       		.byte	0x14
 22539 8e1b 0103     		.value	0x301
 22540 8e1d CEAA0000 		.long	0xaace
 22541 8e21 478E0000 		.long	0x8e47
 22542 8e25 35       		.uleb128 0x35
 22543 8e26 00000000 		.long	.LASF426
 22544 8e2a 53930000 		.long	0x9353
 22545 8e2e 18       		.uleb128 0x18
 22546 8e2f 5F547000 		.string	"_Tp"
 22547 8e33 5A930000 		.long	0x935a
 22548 8e37 09       		.uleb128 0x9
 22549 8e38 00C80000 		.long	0xc800
 22550 8e3c 09       		.uleb128 0x9
 22551 8e3d 53930000 		.long	0x9353
GAS LISTING /tmp/ccJUMvuF.s 			page 697


 22552 8e41 09       		.uleb128 0x9
 22553 8e42 0CC80000 		.long	0xc80c
 22554 8e46 00       		.byte	0
 22555 8e47 76       		.uleb128 0x76
 22556 8e48 00000000 		.long	.LASF1149
 22557 8e4c 14       		.byte	0x14
 22558 8e4d 1601     		.value	0x116
 22559 8e4f 0A830000 		.long	0x830a
 22560 8e53 668E0000 		.long	0x8e66
 22561 8e57 35       		.uleb128 0x35
 22562 8e58 00000000 		.long	.LASF745
 22563 8e5c 00C80000 		.long	0xc800
 22564 8e60 09       		.uleb128 0x9
 22565 8e61 00C80000 		.long	0xc800
 22566 8e65 00       		.byte	0
 22567 8e66 76       		.uleb128 0x76
 22568 8e67 00000000 		.long	.LASF1150
 22569 8e6b 14       		.byte	0x14
 22570 8e6c 1803     		.value	0x318
 22571 8e6e 00C80000 		.long	0xc800
 22572 8e72 A18E0000 		.long	0x8ea1
 22573 8e76 18       		.uleb128 0x18
 22574 8e77 5F4F4900 		.string	"_OI"
 22575 8e7b 00C80000 		.long	0xc800
 22576 8e7f 35       		.uleb128 0x35
 22577 8e80 00000000 		.long	.LASF426
 22578 8e84 53930000 		.long	0x9353
 22579 8e88 18       		.uleb128 0x18
 22580 8e89 5F547000 		.string	"_Tp"
 22581 8e8d 5A930000 		.long	0x935a
 22582 8e91 09       		.uleb128 0x9
 22583 8e92 00C80000 		.long	0xc800
 22584 8e96 09       		.uleb128 0x9
 22585 8e97 53930000 		.long	0x9353
 22586 8e9b 09       		.uleb128 0x9
 22587 8e9c 0CC80000 		.long	0xc80c
 22588 8ea0 00       		.byte	0
 22589 8ea1 4C       		.uleb128 0x4c
 22590 8ea2 00000000 		.long	.LASF1151
 22591 8ea6 2D       		.byte	0x2d
 22592 8ea7 3102     		.value	0x231
 22593 8ea9 CA8E0000 		.long	0x8eca
 22594 8ead 35       		.uleb128 0x35
 22595 8eae 00000000 		.long	.LASF421
 22596 8eb2 00C80000 		.long	0xc800
 22597 8eb6 35       		.uleb128 0x35
 22598 8eb7 00000000 		.long	.LASF426
 22599 8ebb 53930000 		.long	0x9353
 22600 8ebf 09       		.uleb128 0x9
 22601 8ec0 00C80000 		.long	0xc800
 22602 8ec4 09       		.uleb128 0x9
 22603 8ec5 53930000 		.long	0x9353
 22604 8ec9 00       		.byte	0
 22605 8eca 4C       		.uleb128 0x4c
 22606 8ecb 00000000 		.long	.LASF1152
 22607 8ecf 2D       		.byte	0x2d
 22608 8ed0 7502     		.value	0x275
GAS LISTING /tmp/ccJUMvuF.s 			page 698


 22609 8ed2 018F0000 		.long	0x8f01
 22610 8ed6 35       		.uleb128 0x35
 22611 8ed7 00000000 		.long	.LASF421
 22612 8edb 00C80000 		.long	0xc800
 22613 8edf 35       		.uleb128 0x35
 22614 8ee0 00000000 		.long	.LASF426
 22615 8ee4 53930000 		.long	0x9353
 22616 8ee8 18       		.uleb128 0x18
 22617 8ee9 5F547000 		.string	"_Tp"
 22618 8eed 5A930000 		.long	0x935a
 22619 8ef1 09       		.uleb128 0x9
 22620 8ef2 00C80000 		.long	0xc800
 22621 8ef6 09       		.uleb128 0x9
 22622 8ef7 53930000 		.long	0x9353
 22623 8efb 09       		.uleb128 0x9
 22624 8efc 3CC80000 		.long	0xc83c
 22625 8f00 00       		.byte	0
 22626 8f01 4A       		.uleb128 0x4a
 22627 8f02 00000000 		.long	.LASF1153
 22628 8f06 10       		.byte	0x10
 22629 8f07 7C       		.byte	0x7c
 22630 8f08 4A8F0000 		.long	0x8f4a
 22631 8f0c 35       		.uleb128 0x35
 22632 8f0d 00000000 		.long	.LASF1113
 22633 8f11 169F0000 		.long	0x9f16
 22634 8f15 35       		.uleb128 0x35
 22635 8f16 00000000 		.long	.LASF1154
 22636 8f1a 84930000 		.long	0x9384
 22637 8f1e 18       		.uleb128 0x18
 22638 8f1f 5F547000 		.string	"_Tp"
 22639 8f23 29000000 		.long	0x29
 22640 8f27 35       		.uleb128 0x35
 22641 8f28 00000000 		.long	.LASF1114
 22642 8f2c E7930000 		.long	0x93e7
 22643 8f30 09       		.uleb128 0x9
 22644 8f31 169F0000 		.long	0x9f16
 22645 8f35 09       		.uleb128 0x9
 22646 8f36 84930000 		.long	0x9384
 22647 8f3a 09       		.uleb128 0x9
 22648 8f3b 84930000 		.long	0x9384
 22649 8f3f 09       		.uleb128 0x9
 22650 8f40 29000000 		.long	0x29
 22651 8f44 09       		.uleb128 0x9
 22652 8f45 E7930000 		.long	0x93e7
 22653 8f49 00       		.byte	0
 22654 8f4a 4C       		.uleb128 0x4c
 22655 8f4b 00000000 		.long	.LASF1155
 22656 8f4f 10       		.byte	0x10
 22657 8f50 3D01     		.value	0x13d
 22658 8f52 788F0000 		.long	0x8f78
 22659 8f56 35       		.uleb128 0x35
 22660 8f57 00000000 		.long	.LASF1113
 22661 8f5b 169F0000 		.long	0x9f16
 22662 8f5f 35       		.uleb128 0x35
 22663 8f60 00000000 		.long	.LASF1114
 22664 8f64 A8930000 		.long	0x93a8
 22665 8f68 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 699


 22666 8f69 169F0000 		.long	0x9f16
 22667 8f6d 09       		.uleb128 0x9
 22668 8f6e 169F0000 		.long	0x9f16
 22669 8f72 09       		.uleb128 0x9
 22670 8f73 A8930000 		.long	0x93a8
 22671 8f77 00       		.byte	0
 22672 8f78 4A       		.uleb128 0x4a
 22673 8f79 00000000 		.long	.LASF1156
 22674 8f7d 10       		.byte	0x10
 22675 8f7e EB       		.byte	0xeb
 22676 8f7f AA8F0000 		.long	0x8faa
 22677 8f83 35       		.uleb128 0x35
 22678 8f84 00000000 		.long	.LASF1113
 22679 8f88 169F0000 		.long	0x9f16
 22680 8f8c 35       		.uleb128 0x35
 22681 8f8d 00000000 		.long	.LASF1114
 22682 8f91 A8930000 		.long	0x93a8
 22683 8f95 09       		.uleb128 0x9
 22684 8f96 169F0000 		.long	0x9f16
 22685 8f9a 09       		.uleb128 0x9
 22686 8f9b 169F0000 		.long	0x9f16
 22687 8f9f 09       		.uleb128 0x9
 22688 8fa0 169F0000 		.long	0x9f16
 22689 8fa4 09       		.uleb128 0x9
 22690 8fa5 A8930000 		.long	0x93a8
 22691 8fa9 00       		.byte	0
 22692 8faa 4C       		.uleb128 0x4c
 22693 8fab 00000000 		.long	.LASF1157
 22694 8faf 0D       		.byte	0xd
 22695 8fb0 8506     		.value	0x685
 22696 8fb2 DD8F0000 		.long	0x8fdd
 22697 8fb6 35       		.uleb128 0x35
 22698 8fb7 00000000 		.long	.LASF1113
 22699 8fbb 169F0000 		.long	0x9f16
 22700 8fbf 35       		.uleb128 0x35
 22701 8fc0 00000000 		.long	.LASF1114
 22702 8fc4 A8930000 		.long	0x93a8
 22703 8fc8 09       		.uleb128 0x9
 22704 8fc9 169F0000 		.long	0x9f16
 22705 8fcd 09       		.uleb128 0x9
 22706 8fce 169F0000 		.long	0x9f16
 22707 8fd2 09       		.uleb128 0x9
 22708 8fd3 169F0000 		.long	0x9f16
 22709 8fd7 09       		.uleb128 0x9
 22710 8fd8 A8930000 		.long	0x93a8
 22711 8fdc 00       		.byte	0
 22712 8fdd 4C       		.uleb128 0x4c
 22713 8fde 00000000 		.long	.LASF1158
 22714 8fe2 10       		.byte	0x10
 22715 8fe3 8601     		.value	0x186
 22716 8fe5 0B900000 		.long	0x900b
 22717 8fe9 35       		.uleb128 0x35
 22718 8fea 00000000 		.long	.LASF1113
 22719 8fee 169F0000 		.long	0x9f16
 22720 8ff2 35       		.uleb128 0x35
 22721 8ff3 00000000 		.long	.LASF1114
 22722 8ff7 A8930000 		.long	0x93a8
GAS LISTING /tmp/ccJUMvuF.s 			page 700


 22723 8ffb 09       		.uleb128 0x9
 22724 8ffc 169F0000 		.long	0x9f16
 22725 9000 09       		.uleb128 0x9
 22726 9001 169F0000 		.long	0x9f16
 22727 9005 09       		.uleb128 0x9
 22728 9006 A8930000 		.long	0x93a8
 22729 900a 00       		.byte	0
 22730 900b 4C       		.uleb128 0x4c
 22731 900c 00000000 		.long	.LASF1159
 22732 9010 0D       		.byte	0xd
 22733 9011 8707     		.value	0x787
 22734 9013 3E900000 		.long	0x903e
 22735 9017 35       		.uleb128 0x35
 22736 9018 00000000 		.long	.LASF1113
 22737 901c 169F0000 		.long	0x9f16
 22738 9020 35       		.uleb128 0x35
 22739 9021 00000000 		.long	.LASF1114
 22740 9025 A8930000 		.long	0x93a8
 22741 9029 09       		.uleb128 0x9
 22742 902a 169F0000 		.long	0x9f16
 22743 902e 09       		.uleb128 0x9
 22744 902f 169F0000 		.long	0x9f16
 22745 9033 09       		.uleb128 0x9
 22746 9034 169F0000 		.long	0x9f16
 22747 9038 09       		.uleb128 0x9
 22748 9039 A8930000 		.long	0x93a8
 22749 903d 00       		.byte	0
 22750 903e 4C       		.uleb128 0x4c
 22751 903f 00000000 		.long	.LASF1160
 22752 9043 0D       		.byte	0xd
 22753 9044 9307     		.value	0x793
 22754 9046 7A900000 		.long	0x907a
 22755 904a 35       		.uleb128 0x35
 22756 904b 00000000 		.long	.LASF1113
 22757 904f 169F0000 		.long	0x9f16
 22758 9053 35       		.uleb128 0x35
 22759 9054 00000000 		.long	.LASF426
 22760 9058 84930000 		.long	0x9384
 22761 905c 35       		.uleb128 0x35
 22762 905d 00000000 		.long	.LASF1114
 22763 9061 A8930000 		.long	0x93a8
 22764 9065 09       		.uleb128 0x9
 22765 9066 169F0000 		.long	0x9f16
 22766 906a 09       		.uleb128 0x9
 22767 906b 169F0000 		.long	0x9f16
 22768 906f 09       		.uleb128 0x9
 22769 9070 84930000 		.long	0x9384
 22770 9074 09       		.uleb128 0x9
 22771 9075 A8930000 		.long	0x93a8
 22772 9079 00       		.byte	0
 22773 907a 76       		.uleb128 0x76
 22774 907b 00000000 		.long	.LASF1161
 22775 907f 14       		.byte	0x14
 22776 9080 F603     		.value	0x3f6
 22777 9082 84930000 		.long	0x9384
 22778 9086 90900000 		.long	0x9090
 22779 908a 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 701


 22780 908b 84930000 		.long	0x9384
 22781 908f 00       		.byte	0
 22782 9090 4C       		.uleb128 0x4c
 22783 9091 00000000 		.long	.LASF1162
 22784 9095 0D       		.byte	0xd
 22785 9096 AA07     		.value	0x7aa
 22786 9098 BE900000 		.long	0x90be
 22787 909c 35       		.uleb128 0x35
 22788 909d 00000000 		.long	.LASF1113
 22789 90a1 169F0000 		.long	0x9f16
 22790 90a5 35       		.uleb128 0x35
 22791 90a6 00000000 		.long	.LASF1114
 22792 90aa A8930000 		.long	0x93a8
 22793 90ae 09       		.uleb128 0x9
 22794 90af 169F0000 		.long	0x9f16
 22795 90b3 09       		.uleb128 0x9
 22796 90b4 169F0000 		.long	0x9f16
 22797 90b8 09       		.uleb128 0x9
 22798 90b9 A8930000 		.long	0x93a8
 22799 90bd 00       		.byte	0
 22800 90be 52       		.uleb128 0x52
 22801 90bf 00000000 		.long	.LASF1163
 22802 90c3 13       		.byte	0x13
 22803 90c4 78       		.byte	0x78
 22804 90c5 29000000 		.long	0x29
 22805 90c9 EF900000 		.long	0x90ef
 22806 90cd 35       		.uleb128 0x35
 22807 90ce 00000000 		.long	.LASF1164
 22808 90d2 169F0000 		.long	0x9f16
 22809 90d6 18       		.uleb128 0x18
 22810 90d7 5F547000 		.string	"_Tp"
 22811 90db 29000000 		.long	0x29
 22812 90df 09       		.uleb128 0x9
 22813 90e0 169F0000 		.long	0x9f16
 22814 90e4 09       		.uleb128 0x9
 22815 90e5 169F0000 		.long	0x9f16
 22816 90e9 09       		.uleb128 0x9
 22817 90ea 29000000 		.long	0x29
 22818 90ee 00       		.byte	0
 22819 90ef 4C       		.uleb128 0x4c
 22820 90f0 00000000 		.long	.LASF1165
 22821 90f4 0D       		.byte	0xd
 22822 90f5 4412     		.value	0x1244
 22823 90f7 0F910000 		.long	0x910f
 22824 90fb 35       		.uleb128 0x35
 22825 90fc 00000000 		.long	.LASF1166
 22826 9100 169F0000 		.long	0x9f16
 22827 9104 09       		.uleb128 0x9
 22828 9105 169F0000 		.long	0x9f16
 22829 9109 09       		.uleb128 0x9
 22830 910a 169F0000 		.long	0x9f16
 22831 910e 00       		.byte	0
 22832 910f 76       		.uleb128 0x76
 22833 9110 00000000 		.long	.LASF1167
 22834 9114 09       		.byte	0x9
 22835 9115 3402     		.value	0x234
 22836 9117 72C10000 		.long	0xc172
GAS LISTING /tmp/ccJUMvuF.s 			page 702


 22837 911b 37910000 		.long	0x9137
 22838 911f 35       		.uleb128 0x35
 22839 9120 00000000 		.long	.LASF301
 22840 9124 ACAE0000 		.long	0xaeac
 22841 9128 35       		.uleb128 0x35
 22842 9129 00000000 		.long	.LASF302
 22843 912d BD040000 		.long	0x4bd
 22844 9131 09       		.uleb128 0x9
 22845 9132 72C10000 		.long	0xc172
 22846 9136 00       		.byte	0
 22847 9137 76       		.uleb128 0x76
 22848 9138 00000000 		.long	.LASF1168
 22849 913c 0D       		.byte	0xd
 22850 913d 7C07     		.value	0x77c
 22851 913f 169F0000 		.long	0x9f16
 22852 9143 69910000 		.long	0x9169
 22853 9147 35       		.uleb128 0x35
 22854 9148 00000000 		.long	.LASF1113
 22855 914c 169F0000 		.long	0x9f16
 22856 9150 35       		.uleb128 0x35
 22857 9151 00000000 		.long	.LASF1114
 22858 9155 A8930000 		.long	0x93a8
 22859 9159 09       		.uleb128 0x9
 22860 915a 169F0000 		.long	0x9f16
 22861 915e 09       		.uleb128 0x9
 22862 915f 169F0000 		.long	0x9f16
 22863 9163 09       		.uleb128 0x9
 22864 9164 A8930000 		.long	0x93a8
 22865 9168 00       		.byte	0
 22866 9169 4A       		.uleb128 0x4a
 22867 916a 00000000 		.long	.LASF1169
 22868 916e 0D       		.byte	0xd
 22869 916f 4E       		.byte	0x4e
 22870 9170 A0910000 		.long	0x91a0
 22871 9174 35       		.uleb128 0x35
 22872 9175 00000000 		.long	.LASF745
 22873 9179 169F0000 		.long	0x9f16
 22874 917d 35       		.uleb128 0x35
 22875 917e 00000000 		.long	.LASF1114
 22876 9182 A8930000 		.long	0x93a8
 22877 9186 09       		.uleb128 0x9
 22878 9187 169F0000 		.long	0x9f16
 22879 918b 09       		.uleb128 0x9
 22880 918c 169F0000 		.long	0x9f16
 22881 9190 09       		.uleb128 0x9
 22882 9191 169F0000 		.long	0x9f16
 22883 9195 09       		.uleb128 0x9
 22884 9196 169F0000 		.long	0x9f16
 22885 919a 09       		.uleb128 0x9
 22886 919b A8930000 		.long	0x93a8
 22887 919f 00       		.byte	0
 22888 91a0 4C       		.uleb128 0x4c
 22889 91a1 00000000 		.long	.LASF1170
 22890 91a5 0D       		.byte	0xd
 22891 91a6 2F07     		.value	0x72f
 22892 91a8 CE910000 		.long	0x91ce
 22893 91ac 35       		.uleb128 0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 703


 22894 91ad 00000000 		.long	.LASF1113
 22895 91b1 169F0000 		.long	0x9f16
 22896 91b5 35       		.uleb128 0x35
 22897 91b6 00000000 		.long	.LASF1114
 22898 91ba A8930000 		.long	0x93a8
 22899 91be 09       		.uleb128 0x9
 22900 91bf 169F0000 		.long	0x9f16
 22901 91c3 09       		.uleb128 0x9
 22902 91c4 169F0000 		.long	0x9f16
 22903 91c8 09       		.uleb128 0x9
 22904 91c9 A8930000 		.long	0x93a8
 22905 91cd 00       		.byte	0
 22906 91ce 11       		.uleb128 0x11
 22907 91cf 54070000 		.long	0x754
 22908 91d3 76       		.uleb128 0x76
 22909 91d4 00000000 		.long	.LASF374
 22910 91d8 15       		.byte	0x15
 22911 91d9 BE03     		.value	0x3be
 22912 91db E7C00000 		.long	0xc0e7
 22913 91df E9910000 		.long	0x91e9
 22914 91e3 09       		.uleb128 0x9
 22915 91e4 E7C00000 		.long	0xc0e7
 22916 91e8 00       		.byte	0
 22917 91e9 1C       		.uleb128 0x1c
 22918 91ea 00000000 		.long	.LASF1171
 22919 91ee 10       		.byte	0x10
 22920 91ef CF       		.byte	0xcf
 22921 91f0 00000000 		.long	.LASF1172
 22922 91f4 36920000 		.long	0x9236
 22923 91f8 35       		.uleb128 0x35
 22924 91f9 00000000 		.long	.LASF1113
 22925 91fd 169F0000 		.long	0x9f16
 22926 9201 35       		.uleb128 0x35
 22927 9202 00000000 		.long	.LASF1154
 22928 9206 84930000 		.long	0x9384
 22929 920a 18       		.uleb128 0x18
 22930 920b 5F547000 		.string	"_Tp"
 22931 920f 29000000 		.long	0x29
 22932 9213 35       		.uleb128 0x35
 22933 9214 00000000 		.long	.LASF1114
 22934 9218 A8930000 		.long	0x93a8
 22935 921c 09       		.uleb128 0x9
 22936 921d 169F0000 		.long	0x9f16
 22937 9221 09       		.uleb128 0x9
 22938 9222 84930000 		.long	0x9384
 22939 9226 09       		.uleb128 0x9
 22940 9227 84930000 		.long	0x9384
 22941 922b 09       		.uleb128 0x9
 22942 922c 29000000 		.long	0x29
 22943 9230 09       		.uleb128 0x9
 22944 9231 A8930000 		.long	0x93a8
 22945 9235 00       		.byte	0
 22946 9236 78       		.uleb128 0x78
 22947 9237 00000000 		.long	.LASF1177
 22948 923b 1C       		.byte	0x1c
 22949 923c 65       		.byte	0x65
 22950 923d 00000000 		.long	.LASF1179
GAS LISTING /tmp/ccJUMvuF.s 			page 704


 22951 9241 45920000 		.long	0x9245
 22952 9245 11       		.uleb128 0x11
 22953 9246 10020000 		.long	0x210
 22954 924a 79       		.uleb128 0x79
 22955 924b 00000000 		.long	.LASF1173
 22956 924f 1D       		.byte	0x1d
 22957 9250 4F       		.byte	0x4f
 22958 9251 57920000 		.long	0x9257
 22959 9255 01       		.byte	0x1
 22960 9256 00       		.byte	0
 22961 9257 11       		.uleb128 0x11
 22962 9258 C8020000 		.long	0x2c8
 22963 925c 79       		.uleb128 0x79
 22964 925d 00000000 		.long	.LASF1174
 22965 9261 28       		.byte	0x28
 22966 9262 29       		.byte	0x29
 22967 9263 69920000 		.long	0x9269
 22968 9267 01       		.byte	0x1
 22969 9268 00       		.byte	0
 22970 9269 11       		.uleb128 0x11
 22971 926a D4230000 		.long	0x23d4
 22972 926e 7A       		.uleb128 0x7a
 22973 926f 00000000 		.long	.LASF1175
 22974 9273 0B       		.byte	0xb
 22975 9274 3404     		.value	0x434
 22976 9276 7C920000 		.long	0x927c
 22977 927a 01       		.byte	0x1
 22978 927b 00       		.byte	0
 22979 927c 11       		.uleb128 0x11
 22980 927d 5B240000 		.long	0x245b
 22981 9281 13       		.uleb128 0x13
 22982 9282 00000000 		.long	.LASF1176
 22983 9286 34       		.byte	0x34
 22984 9287 88       		.byte	0x88
 22985 9288 97280000 		.long	0x2897
 22986 928c 78       		.uleb128 0x78
 22987 928d 00000000 		.long	.LASF1178
 22988 9291 18       		.byte	0x18
 22989 9292 3D       		.byte	0x3d
 22990 9293 00000000 		.long	.LASF1180
 22991 9297 81920000 		.long	0x9281
 22992 929b 78       		.uleb128 0x78
 22993 929c 00000000 		.long	.LASF1181
 22994 92a0 18       		.byte	0x18
 22995 92a1 3E       		.byte	0x3e
 22996 92a2 00000000 		.long	.LASF1182
 22997 92a6 81920000 		.long	0x9281
 22998 92aa 7B       		.uleb128 0x7b
 22999 92ab 00000000 		.long	.LASF1739
 23000 92af 18       		.byte	0x18
 23001 92b0 4A       		.byte	0x4a
 23002 92b1 E6250000 		.long	0x25e6
 23003 92b5 4E       		.uleb128 0x4e
 23004 92b6 00000000 		.long	.LASF1183
 23005 92ba 35       		.byte	0x35
 23006 92bb 4C       		.byte	0x4c
 23007 92bc 00000000 		.long	.LASF1184
GAS LISTING /tmp/ccJUMvuF.s 			page 705


 23008 92c0 72C10000 		.long	0xc172
 23009 92c4 EA920000 		.long	0x92ea
 23010 92c8 35       		.uleb128 0x35
 23011 92c9 00000000 		.long	.LASF301
 23012 92cd ACAE0000 		.long	0xaeac
 23013 92d1 35       		.uleb128 0x35
 23014 92d2 00000000 		.long	.LASF302
 23015 92d6 BD040000 		.long	0x4bd
 23016 92da 09       		.uleb128 0x9
 23017 92db 72C10000 		.long	0xc172
 23018 92df 09       		.uleb128 0x9
 23019 92e0 CEAE0000 		.long	0xaece
 23020 92e4 09       		.uleb128 0x9
 23021 92e5 EA920000 		.long	0x92ea
 23022 92e9 00       		.byte	0
 23023 92ea 13       		.uleb128 0x13
 23024 92eb 00000000 		.long	.LASF1185
 23025 92ef 36       		.byte	0x36
 23026 92f0 62       		.byte	0x62
 23027 92f1 54070000 		.long	0x754
 23028 92f5 7C       		.uleb128 0x7c
 23029 92f6 00000000 		.long	.LASF1209
 23030 92fa 38       		.byte	0x38
 23031 92fb 38       		.byte	0x38
 23032 92fc 00000000 		.long	.LASF1796
 23033 9300 00       		.byte	0
 23034 9301 7D       		.uleb128 0x7d
 23035 9302 08       		.byte	0x8
 23036 9303 7E       		.uleb128 0x7e
 23037 9304 08       		.byte	0x8
 23038 9305 4D000000 		.long	0x4d
 23039 9309 7E       		.uleb128 0x7e
 23040 930a 08       		.byte	0x8
 23041 930b EE010000 		.long	0x1ee
 23042 930f 7F       		.uleb128 0x7f
 23043 9310 08       		.byte	0x8
 23044 9311 EE010000 		.long	0x1ee
 23045 9315 8001     		.uleb128 0x80
 23046 9317 00000000 		.long	.LASF1797
 23047 931b 8101     		.uleb128 0x81
 23048 931d 08       		.byte	0x8
 23049 931e 4D000000 		.long	0x4d
 23050 9322 7F       		.uleb128 0x7f
 23051 9323 08       		.byte	0x8
 23052 9324 4D000000 		.long	0x4d
 23053 9328 8201     		.uleb128 0x82
 23054 932a 04       		.byte	0x4
 23055 932b 05       		.byte	0x5
 23056 932c 696E7400 		.string	"int"
 23057 9330 02       		.uleb128 0x2
 23058 9331 01       		.byte	0x1
 23059 9332 02       		.byte	0x2
 23060 9333 00000000 		.long	.LASF1186
 23061 9337 7E       		.uleb128 0x7e
 23062 9338 08       		.byte	0x8
 23063 9339 0B020000 		.long	0x20b
 23064 933d 11       		.uleb128 0x11
GAS LISTING /tmp/ccJUMvuF.s 			page 706


 23065 933e 30930000 		.long	0x9330
 23066 9342 7E       		.uleb128 0x7e
 23067 9343 08       		.byte	0x8
 23068 9344 6B020000 		.long	0x26b
 23069 9348 7E       		.uleb128 0x7e
 23070 9349 08       		.byte	0x8
 23071 934a C3020000 		.long	0x2c3
 23072 934e 11       		.uleb128 0x11
 23073 934f 53930000 		.long	0x9353
 23074 9353 02       		.uleb128 0x2
 23075 9354 08       		.byte	0x8
 23076 9355 07       		.byte	0x7
 23077 9356 00000000 		.long	.LASF1187
 23078 935a 02       		.uleb128 0x2
 23079 935b 01       		.byte	0x1
 23080 935c 08       		.byte	0x8
 23081 935d 00000000 		.long	.LASF1188
 23082 9361 02       		.uleb128 0x2
 23083 9362 02       		.byte	0x2
 23084 9363 07       		.byte	0x7
 23085 9364 00000000 		.long	.LASF1189
 23086 9368 02       		.uleb128 0x2
 23087 9369 04       		.byte	0x4
 23088 936a 07       		.byte	0x7
 23089 936b 00000000 		.long	.LASF1190
 23090 936f 02       		.uleb128 0x2
 23091 9370 08       		.byte	0x8
 23092 9371 07       		.byte	0x7
 23093 9372 00000000 		.long	.LASF1191
 23094 9376 02       		.uleb128 0x2
 23095 9377 01       		.byte	0x1
 23096 9378 06       		.byte	0x6
 23097 9379 00000000 		.long	.LASF1192
 23098 937d 02       		.uleb128 0x2
 23099 937e 02       		.byte	0x2
 23100 937f 05       		.byte	0x5
 23101 9380 00000000 		.long	.LASF1193
 23102 9384 02       		.uleb128 0x2
 23103 9385 08       		.byte	0x8
 23104 9386 05       		.byte	0x5
 23105 9387 00000000 		.long	.LASF1194
 23106 938b 02       		.uleb128 0x2
 23107 938c 08       		.byte	0x8
 23108 938d 05       		.byte	0x5
 23109 938e 00000000 		.long	.LASF1195
 23110 9392 04       		.uleb128 0x4
 23111 9393 00000000 		.long	.LASF1196
 23112 9397 37       		.byte	0x37
 23113 9398 85       		.byte	0x85
 23114 9399 3FAC0000 		.long	0xac3f
 23115 939d 04       		.uleb128 0x4
 23116 939e 00000000 		.long	.LASF1197
 23117 93a2 11       		.byte	0x11
 23118 93a3 24       		.byte	0x24
 23119 93a4 AB940000 		.long	0x94ab
 23120 93a8 16       		.uleb128 0x16
 23121 93a9 00000000 		.long	.LASF1198
GAS LISTING /tmp/ccJUMvuF.s 			page 707


 23122 93ad 01       		.byte	0x1
 23123 93ae 11       		.byte	0x11
 23124 93af 25       		.byte	0x25
 23125 93b0 E7930000 		.long	0x93e7
 23126 93b4 8301     		.uleb128 0x83
 23127 93b6 00000000 		.long	.LASF1199
 23128 93ba 11       		.byte	0x11
 23129 93bb 29       		.byte	0x29
 23130 93bc 30930000 		.long	0x9330
 23131 93c0 D6930000 		.long	0x93d6
 23132 93c4 35       		.uleb128 0x35
 23133 93c5 00000000 		.long	.LASF1200
 23134 93c9 169F0000 		.long	0x9f16
 23135 93cd 35       		.uleb128 0x35
 23136 93ce 00000000 		.long	.LASF1201
 23137 93d2 169F0000 		.long	0x9f16
 23138 93d6 08       		.uleb128 0x8
 23139 93d7 7CE20000 		.long	0xe27c
 23140 93db 09       		.uleb128 0x9
 23141 93dc 169F0000 		.long	0x9f16
 23142 93e0 09       		.uleb128 0x9
 23143 93e1 169F0000 		.long	0x9f16
 23144 93e5 00       		.byte	0
 23145 93e6 00       		.byte	0
 23146 93e7 16       		.uleb128 0x16
 23147 93e8 00000000 		.long	.LASF1202
 23148 93ec 01       		.byte	0x1
 23149 93ed 11       		.byte	0x11
 23150 93ee 31       		.byte	0x31
 23151 93ef 26940000 		.long	0x9426
 23152 93f3 8301     		.uleb128 0x83
 23153 93f5 00000000 		.long	.LASF1203
 23154 93f9 11       		.byte	0x11
 23155 93fa 35       		.byte	0x35
 23156 93fb 30930000 		.long	0x9330
 23157 93ff 15940000 		.long	0x9415
 23158 9403 35       		.uleb128 0x35
 23159 9404 00000000 		.long	.LASF745
 23160 9408 169F0000 		.long	0x9f16
 23161 940c 35       		.uleb128 0x35
 23162 940d 00000000 		.long	.LASF1204
 23163 9411 29000000 		.long	0x29
 23164 9415 08       		.uleb128 0x8
 23165 9416 ECF60000 		.long	0xf6ec
 23166 941a 09       		.uleb128 0x9
 23167 941b 169F0000 		.long	0x9f16
 23168 941f 09       		.uleb128 0x9
 23169 9420 DAC10000 		.long	0xc1da
 23170 9424 00       		.byte	0
 23171 9425 00       		.byte	0
 23172 9426 16       		.uleb128 0x16
 23173 9427 00000000 		.long	.LASF1205
 23174 942b 01       		.byte	0x1
 23175 942c 11       		.byte	0x11
 23176 942d 41       		.byte	0x41
 23177 942e 65940000 		.long	0x9465
 23178 9432 8301     		.uleb128 0x83
GAS LISTING /tmp/ccJUMvuF.s 			page 708


 23179 9434 00000000 		.long	.LASF1206
 23180 9438 11       		.byte	0x11
 23181 9439 45       		.byte	0x45
 23182 943a 30930000 		.long	0x9330
 23183 943e 54940000 		.long	0x9454
 23184 9442 35       		.uleb128 0x35
 23185 9443 00000000 		.long	.LASF1204
 23186 9447 29000000 		.long	0x29
 23187 944b 35       		.uleb128 0x35
 23188 944c 00000000 		.long	.LASF745
 23189 9450 169F0000 		.long	0x9f16
 23190 9454 08       		.uleb128 0x8
 23191 9455 6EE40000 		.long	0xe46e
 23192 9459 09       		.uleb128 0x9
 23193 945a DAC10000 		.long	0xc1da
 23194 945e 09       		.uleb128 0x9
 23195 945f 169F0000 		.long	0x9f16
 23196 9463 00       		.byte	0
 23197 9464 00       		.byte	0
 23198 9465 52       		.uleb128 0x52
 23199 9466 00000000 		.long	.LASF1207
 23200 946a 11       		.byte	0x11
 23201 946b 3E       		.byte	0x3e
 23202 946c E7930000 		.long	0x93e7
 23203 9470 7A940000 		.long	0x947a
 23204 9474 09       		.uleb128 0x9
 23205 9475 A8930000 		.long	0x93a8
 23206 9479 00       		.byte	0
 23207 947a 52       		.uleb128 0x52
 23208 947b 00000000 		.long	.LASF1208
 23209 947f 11       		.byte	0x11
 23210 9480 4E       		.byte	0x4e
 23211 9481 26940000 		.long	0x9426
 23212 9485 8F940000 		.long	0x948f
 23213 9489 09       		.uleb128 0x9
 23214 948a A8930000 		.long	0x93a8
 23215 948e 00       		.byte	0
 23216 948f 11       		.uleb128 0x11
 23217 9490 A8930000 		.long	0x93a8
 23218 9494 11       		.uleb128 0x11
 23219 9495 26940000 		.long	0x9426
 23220 9499 11       		.uleb128 0x11
 23221 949a E7930000 		.long	0x93e7
 23222 949e 8401     		.uleb128 0x84
 23223 94a0 00000000 		.long	.LASF1210
 23224 94a4 11       		.byte	0x11
 23225 94a5 2E       		.byte	0x2e
 23226 94a6 A8930000 		.long	0x93a8
 23227 94aa 00       		.byte	0
 23228 94ab 12       		.uleb128 0x12
 23229 94ac 1E       		.byte	0x1e
 23230 94ad F8       		.byte	0xf8
 23231 94ae 0EB60000 		.long	0xb60e
 23232 94b2 1B       		.uleb128 0x1b
 23233 94b3 1E       		.byte	0x1e
 23234 94b4 0101     		.value	0x101
 23235 94b6 29B60000 		.long	0xb629
GAS LISTING /tmp/ccJUMvuF.s 			page 709


 23236 94ba 1B       		.uleb128 0x1b
 23237 94bb 1E       		.byte	0x1e
 23238 94bc 0201     		.value	0x102
 23239 94be 49B60000 		.long	0xb649
 23240 94c2 12       		.uleb128 0x12
 23241 94c3 07       		.byte	0x7
 23242 94c4 2C       		.byte	0x2c
 23243 94c5 85060000 		.long	0x685
 23244 94c9 12       		.uleb128 0x12
 23245 94ca 07       		.byte	0x7
 23246 94cb 2D       		.byte	0x2d
 23247 94cc 54070000 		.long	0x754
 23248 94d0 05       		.uleb128 0x5
 23249 94d1 00000000 		.long	.LASF1211
 23250 94d5 01       		.byte	0x1
 23251 94d6 07       		.byte	0x7
 23252 94d7 3A       		.byte	0x3a
 23253 94d8 1E960000 		.long	0x961e
 23254 94dc 22       		.uleb128 0x22
 23255 94dd 00000000 		.long	.LASF57
 23256 94e1 07       		.byte	0x7
 23257 94e2 3D       		.byte	0x3d
 23258 94e3 85060000 		.long	0x685
 23259 94e7 01       		.byte	0x1
 23260 94e8 22       		.uleb128 0x22
 23261 94e9 00000000 		.long	.LASF491
 23262 94ed 07       		.byte	0x7
 23263 94ee 3F       		.byte	0x3f
 23264 94ef F0B10000 		.long	0xb1f0
 23265 94f3 01       		.byte	0x1
 23266 94f4 22       		.uleb128 0x22
 23267 94f5 00000000 		.long	.LASF1212
 23268 94f9 07       		.byte	0x7
 23269 94fa 40       		.byte	0x40
 23270 94fb CEAE0000 		.long	0xaece
 23271 94ff 01       		.byte	0x1
 23272 9500 22       		.uleb128 0x22
 23273 9501 00000000 		.long	.LASF58
 23274 9505 07       		.byte	0x7
 23275 9506 41       		.byte	0x41
 23276 9507 D1B70000 		.long	0xb7d1
 23277 950b 01       		.byte	0x1
 23278 950c 22       		.uleb128 0x22
 23279 950d 00000000 		.long	.LASF59
 23280 9511 07       		.byte	0x7
 23281 9512 42       		.byte	0x42
 23282 9513 D7B70000 		.long	0xb7d7
 23283 9517 01       		.byte	0x1
 23284 9518 0C       		.uleb128 0xc
 23285 9519 00000000 		.long	.LASF1213
 23286 951d 07       		.byte	0x7
 23287 951e 4F       		.byte	0x4f
 23288 951f 01       		.byte	0x1
 23289 9520 28950000 		.long	0x9528
 23290 9524 2E950000 		.long	0x952e
 23291 9528 08       		.uleb128 0x8
 23292 9529 DDB70000 		.long	0xb7dd
GAS LISTING /tmp/ccJUMvuF.s 			page 710


 23293 952d 00       		.byte	0
 23294 952e 0C       		.uleb128 0xc
 23295 952f 00000000 		.long	.LASF1213
 23296 9533 07       		.byte	0x7
 23297 9534 51       		.byte	0x51
 23298 9535 01       		.byte	0x1
 23299 9536 3E950000 		.long	0x953e
 23300 953a 49950000 		.long	0x9549
 23301 953e 08       		.uleb128 0x8
 23302 953f DDB70000 		.long	0xb7dd
 23303 9543 09       		.uleb128 0x9
 23304 9544 E3B70000 		.long	0xb7e3
 23305 9548 00       		.byte	0
 23306 9549 0C       		.uleb128 0xc
 23307 954a 00000000 		.long	.LASF1214
 23308 954e 07       		.byte	0x7
 23309 954f 56       		.byte	0x56
 23310 9550 01       		.byte	0x1
 23311 9551 59950000 		.long	0x9559
 23312 9555 64950000 		.long	0x9564
 23313 9559 08       		.uleb128 0x8
 23314 955a DDB70000 		.long	0xb7dd
 23315 955e 08       		.uleb128 0x8
 23316 955f 28930000 		.long	0x9328
 23317 9563 00       		.byte	0
 23318 9564 0D       		.uleb128 0xd
 23319 9565 00000000 		.long	.LASF1215
 23320 9569 07       		.byte	0x7
 23321 956a 59       		.byte	0x59
 23322 956b 00000000 		.long	.LASF1216
 23323 956f E8940000 		.long	0x94e8
 23324 9573 01       		.byte	0x1
 23325 9574 7C950000 		.long	0x957c
 23326 9578 87950000 		.long	0x9587
 23327 957c 08       		.uleb128 0x8
 23328 957d E9B70000 		.long	0xb7e9
 23329 9581 09       		.uleb128 0x9
 23330 9582 00950000 		.long	0x9500
 23331 9586 00       		.byte	0
 23332 9587 0D       		.uleb128 0xd
 23333 9588 00000000 		.long	.LASF1215
 23334 958c 07       		.byte	0x7
 23335 958d 5D       		.byte	0x5d
 23336 958e 00000000 		.long	.LASF1217
 23337 9592 F4940000 		.long	0x94f4
 23338 9596 01       		.byte	0x1
 23339 9597 9F950000 		.long	0x959f
 23340 959b AA950000 		.long	0x95aa
 23341 959f 08       		.uleb128 0x8
 23342 95a0 E9B70000 		.long	0xb7e9
 23343 95a4 09       		.uleb128 0x9
 23344 95a5 0C950000 		.long	0x950c
 23345 95a9 00       		.byte	0
 23346 95aa 0D       		.uleb128 0xd
 23347 95ab 00000000 		.long	.LASF537
 23348 95af 07       		.byte	0x7
 23349 95b0 63       		.byte	0x63
GAS LISTING /tmp/ccJUMvuF.s 			page 711


 23350 95b1 00000000 		.long	.LASF1218
 23351 95b5 E8940000 		.long	0x94e8
 23352 95b9 01       		.byte	0x1
 23353 95ba C2950000 		.long	0x95c2
 23354 95be D2950000 		.long	0x95d2
 23355 95c2 08       		.uleb128 0x8
 23356 95c3 DDB70000 		.long	0xb7dd
 23357 95c7 09       		.uleb128 0x9
 23358 95c8 DC940000 		.long	0x94dc
 23359 95cc 09       		.uleb128 0x9
 23360 95cd C9B70000 		.long	0xb7c9
 23361 95d1 00       		.byte	0
 23362 95d2 0E       		.uleb128 0xe
 23363 95d3 00000000 		.long	.LASF540
 23364 95d7 07       		.byte	0x7
 23365 95d8 6D       		.byte	0x6d
 23366 95d9 00000000 		.long	.LASF1219
 23367 95dd 01       		.byte	0x1
 23368 95de E6950000 		.long	0x95e6
 23369 95e2 F6950000 		.long	0x95f6
 23370 95e6 08       		.uleb128 0x8
 23371 95e7 DDB70000 		.long	0xb7dd
 23372 95eb 09       		.uleb128 0x9
 23373 95ec E8940000 		.long	0x94e8
 23374 95f0 09       		.uleb128 0x9
 23375 95f1 DC940000 		.long	0x94dc
 23376 95f5 00       		.byte	0
 23377 95f6 0D       		.uleb128 0xd
 23378 95f7 00000000 		.long	.LASF171
 23379 95fb 07       		.byte	0x7
 23380 95fc 71       		.byte	0x71
 23381 95fd 00000000 		.long	.LASF1220
 23382 9601 DC940000 		.long	0x94dc
 23383 9605 01       		.byte	0x1
 23384 9606 0E960000 		.long	0x960e
 23385 960a 14960000 		.long	0x9614
 23386 960e 08       		.uleb128 0x8
 23387 960f E9B70000 		.long	0xb7e9
 23388 9613 00       		.byte	0
 23389 9614 18       		.uleb128 0x18
 23390 9615 5F547000 		.string	"_Tp"
 23391 9619 ACAE0000 		.long	0xaeac
 23392 961d 00       		.byte	0
 23393 961e 11       		.uleb128 0x11
 23394 961f D0940000 		.long	0x94d0
 23395 9623 16       		.uleb128 0x16
 23396 9624 00000000 		.long	.LASF1221
 23397 9628 01       		.byte	0x1
 23398 9629 39       		.byte	0x39
 23399 962a 37       		.byte	0x37
 23400 962b 65960000 		.long	0x9665
 23401 962f 17       		.uleb128 0x17
 23402 9630 00000000 		.long	.LASF1222
 23403 9634 39       		.byte	0x39
 23404 9635 3A       		.byte	0x3a
 23405 9636 C9AE0000 		.long	0xaec9
 23406 963a 17       		.uleb128 0x17
GAS LISTING /tmp/ccJUMvuF.s 			page 712


 23407 963b 00000000 		.long	.LASF1223
 23408 963f 39       		.byte	0x39
 23409 9640 3B       		.byte	0x3b
 23410 9641 C9AE0000 		.long	0xaec9
 23411 9645 17       		.uleb128 0x17
 23412 9646 00000000 		.long	.LASF1224
 23413 964a 39       		.byte	0x39
 23414 964b 3F       		.byte	0x3f
 23415 964c 3D930000 		.long	0x933d
 23416 9650 17       		.uleb128 0x17
 23417 9651 00000000 		.long	.LASF1225
 23418 9655 39       		.byte	0x39
 23419 9656 40       		.byte	0x40
 23420 9657 C9AE0000 		.long	0xaec9
 23421 965b 35       		.uleb128 0x35
 23422 965c 00000000 		.long	.LASF1204
 23423 9660 28930000 		.long	0x9328
 23424 9664 00       		.byte	0
 23425 9665 12       		.uleb128 0x12
 23426 9666 23       		.byte	0x23
 23427 9667 C9       		.byte	0xc9
 23428 9668 1DBA0000 		.long	0xba1d
 23429 966c 12       		.uleb128 0x12
 23430 966d 23       		.byte	0x23
 23431 966e D9       		.byte	0xd9
 23432 966f 9CBC0000 		.long	0xbc9c
 23433 9673 12       		.uleb128 0x12
 23434 9674 23       		.byte	0x23
 23435 9675 E4       		.byte	0xe4
 23436 9676 B7BC0000 		.long	0xbcb7
 23437 967a 12       		.uleb128 0x12
 23438 967b 23       		.byte	0x23
 23439 967c E5       		.byte	0xe5
 23440 967d CDBC0000 		.long	0xbccd
 23441 9681 12       		.uleb128 0x12
 23442 9682 23       		.byte	0x23
 23443 9683 E6       		.byte	0xe6
 23444 9684 ECBC0000 		.long	0xbcec
 23445 9688 12       		.uleb128 0x12
 23446 9689 23       		.byte	0x23
 23447 968a E8       		.byte	0xe8
 23448 968b 0BBD0000 		.long	0xbd0b
 23449 968f 12       		.uleb128 0x12
 23450 9690 23       		.byte	0x23
 23451 9691 E9       		.byte	0xe9
 23452 9692 25BD0000 		.long	0xbd25
 23453 9696 1D       		.uleb128 0x1d
 23454 9697 64697600 		.string	"div"
 23455 969b 23       		.byte	0x23
 23456 969c D6       		.byte	0xd6
 23457 969d 00000000 		.long	.LASF1226
 23458 96a1 1DBA0000 		.long	0xba1d
 23459 96a5 B4960000 		.long	0x96b4
 23460 96a9 09       		.uleb128 0x9
 23461 96aa 8B930000 		.long	0x938b
 23462 96ae 09       		.uleb128 0x9
 23463 96af 8B930000 		.long	0x938b
GAS LISTING /tmp/ccJUMvuF.s 			page 713


 23464 96b3 00       		.byte	0
 23465 96b4 3B       		.uleb128 0x3b
 23466 96b5 00000000 		.long	.LASF1227
 23467 96b9 08       		.byte	0x8
 23468 96ba 0C       		.byte	0xc
 23469 96bb C502     		.value	0x2c5
 23470 96bd D3980000 		.long	0x98d3
 23471 96c1 62       		.uleb128 0x62
 23472 96c2 00000000 		.long	.LASF1228
 23473 96c6 0C       		.byte	0xc
 23474 96c7 C802     		.value	0x2c8
 23475 96c9 F0B10000 		.long	0xb1f0
 23476 96cd 00       		.byte	0
 23477 96ce 02       		.byte	0x2
 23478 96cf 44       		.uleb128 0x44
 23479 96d0 00000000 		.long	.LASF498
 23480 96d4 0C       		.byte	0xc
 23481 96d5 D002     		.value	0x2d0
 23482 96d7 25810000 		.long	0x8125
 23483 96db 01       		.byte	0x1
 23484 96dc 44       		.uleb128 0x44
 23485 96dd 00000000 		.long	.LASF58
 23486 96e1 0C       		.byte	0xc
 23487 96e2 D102     		.value	0x2d1
 23488 96e4 3B810000 		.long	0x813b
 23489 96e8 01       		.byte	0x1
 23490 96e9 44       		.uleb128 0x44
 23491 96ea 00000000 		.long	.LASF491
 23492 96ee 0C       		.byte	0xc
 23493 96ef D202     		.value	0x2d2
 23494 96f1 30810000 		.long	0x8130
 23495 96f5 01       		.byte	0x1
 23496 96f6 30       		.uleb128 0x30
 23497 96f7 00000000 		.long	.LASF1229
 23498 96fb 0C       		.byte	0xc
 23499 96fc D402     		.value	0x2d4
 23500 96fe 01       		.byte	0x1
 23501 96ff 07970000 		.long	0x9707
 23502 9703 0D970000 		.long	0x970d
 23503 9707 08       		.uleb128 0x8
 23504 9708 EAC80000 		.long	0xc8ea
 23505 970c 00       		.byte	0
 23506 970d 31       		.uleb128 0x31
 23507 970e 00000000 		.long	.LASF1229
 23508 9712 0C       		.byte	0xc
 23509 9713 D802     		.value	0x2d8
 23510 9715 01       		.byte	0x1
 23511 9716 1E970000 		.long	0x971e
 23512 971a 29970000 		.long	0x9729
 23513 971e 08       		.uleb128 0x8
 23514 971f EAC80000 		.long	0xc8ea
 23515 9723 09       		.uleb128 0x9
 23516 9724 F0C80000 		.long	0xc8f0
 23517 9728 00       		.byte	0
 23518 9729 32       		.uleb128 0x32
 23519 972a 00000000 		.long	.LASF845
 23520 972e 0C       		.byte	0xc
GAS LISTING /tmp/ccJUMvuF.s 			page 714


 23521 972f E502     		.value	0x2e5
 23522 9731 00000000 		.long	.LASF1230
 23523 9735 DC960000 		.long	0x96dc
 23524 9739 01       		.byte	0x1
 23525 973a 42970000 		.long	0x9742
 23526 973e 48970000 		.long	0x9748
 23527 9742 08       		.uleb128 0x8
 23528 9743 FBC80000 		.long	0xc8fb
 23529 9747 00       		.byte	0
 23530 9748 32       		.uleb128 0x32
 23531 9749 00000000 		.long	.LASF847
 23532 974d 0C       		.byte	0xc
 23533 974e E902     		.value	0x2e9
 23534 9750 00000000 		.long	.LASF1231
 23535 9754 E9960000 		.long	0x96e9
 23536 9758 01       		.byte	0x1
 23537 9759 61970000 		.long	0x9761
 23538 975d 67970000 		.long	0x9767
 23539 9761 08       		.uleb128 0x8
 23540 9762 FBC80000 		.long	0xc8fb
 23541 9766 00       		.byte	0
 23542 9767 32       		.uleb128 0x32
 23543 9768 00000000 		.long	.LASF1232
 23544 976c 0C       		.byte	0xc
 23545 976d ED02     		.value	0x2ed
 23546 976f 00000000 		.long	.LASF1233
 23547 9773 01C90000 		.long	0xc901
 23548 9777 01       		.byte	0x1
 23549 9778 80970000 		.long	0x9780
 23550 977c 86970000 		.long	0x9786
 23551 9780 08       		.uleb128 0x8
 23552 9781 EAC80000 		.long	0xc8ea
 23553 9785 00       		.byte	0
 23554 9786 32       		.uleb128 0x32
 23555 9787 00000000 		.long	.LASF1232
 23556 978b 0C       		.byte	0xc
 23557 978c F402     		.value	0x2f4
 23558 978e 00000000 		.long	.LASF1234
 23559 9792 B4960000 		.long	0x96b4
 23560 9796 01       		.byte	0x1
 23561 9797 9F970000 		.long	0x979f
 23562 979b AA970000 		.long	0x97aa
 23563 979f 08       		.uleb128 0x8
 23564 97a0 EAC80000 		.long	0xc8ea
 23565 97a4 09       		.uleb128 0x9
 23566 97a5 28930000 		.long	0x9328
 23567 97a9 00       		.byte	0
 23568 97aa 32       		.uleb128 0x32
 23569 97ab 00000000 		.long	.LASF1235
 23570 97af 0C       		.byte	0xc
 23571 97b0 F902     		.value	0x2f9
 23572 97b2 00000000 		.long	.LASF1236
 23573 97b6 01C90000 		.long	0xc901
 23574 97ba 01       		.byte	0x1
 23575 97bb C3970000 		.long	0x97c3
 23576 97bf C9970000 		.long	0x97c9
 23577 97c3 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 715


 23578 97c4 EAC80000 		.long	0xc8ea
 23579 97c8 00       		.byte	0
 23580 97c9 32       		.uleb128 0x32
 23581 97ca 00000000 		.long	.LASF1235
 23582 97ce 0C       		.byte	0xc
 23583 97cf 0003     		.value	0x300
 23584 97d1 00000000 		.long	.LASF1237
 23585 97d5 B4960000 		.long	0x96b4
 23586 97d9 01       		.byte	0x1
 23587 97da E2970000 		.long	0x97e2
 23588 97de ED970000 		.long	0x97ed
 23589 97e2 08       		.uleb128 0x8
 23590 97e3 EAC80000 		.long	0xc8ea
 23591 97e7 09       		.uleb128 0x9
 23592 97e8 28930000 		.long	0x9328
 23593 97ec 00       		.byte	0
 23594 97ed 32       		.uleb128 0x32
 23595 97ee 00000000 		.long	.LASF186
 23596 97f2 0C       		.byte	0xc
 23597 97f3 0503     		.value	0x305
 23598 97f5 00000000 		.long	.LASF1238
 23599 97f9 DC960000 		.long	0x96dc
 23600 97fd 01       		.byte	0x1
 23601 97fe 06980000 		.long	0x9806
 23602 9802 11980000 		.long	0x9811
 23603 9806 08       		.uleb128 0x8
 23604 9807 FBC80000 		.long	0xc8fb
 23605 980b 09       		.uleb128 0x9
 23606 980c CF960000 		.long	0x96cf
 23607 9810 00       		.byte	0
 23608 9811 32       		.uleb128 0x32
 23609 9812 00000000 		.long	.LASF197
 23610 9816 0C       		.byte	0xc
 23611 9817 0903     		.value	0x309
 23612 9819 00000000 		.long	.LASF1239
 23613 981d 01C90000 		.long	0xc901
 23614 9821 01       		.byte	0x1
 23615 9822 2A980000 		.long	0x982a
 23616 9826 35980000 		.long	0x9835
 23617 982a 08       		.uleb128 0x8
 23618 982b EAC80000 		.long	0xc8ea
 23619 982f 09       		.uleb128 0x9
 23620 9830 CF960000 		.long	0x96cf
 23621 9834 00       		.byte	0
 23622 9835 32       		.uleb128 0x32
 23623 9836 00000000 		.long	.LASF1240
 23624 983a 0C       		.byte	0xc
 23625 983b 0D03     		.value	0x30d
 23626 983d 00000000 		.long	.LASF1241
 23627 9841 B4960000 		.long	0x96b4
 23628 9845 01       		.byte	0x1
 23629 9846 4E980000 		.long	0x984e
 23630 984a 59980000 		.long	0x9859
 23631 984e 08       		.uleb128 0x8
 23632 984f FBC80000 		.long	0xc8fb
 23633 9853 09       		.uleb128 0x9
 23634 9854 CF960000 		.long	0x96cf
GAS LISTING /tmp/ccJUMvuF.s 			page 716


 23635 9858 00       		.byte	0
 23636 9859 32       		.uleb128 0x32
 23637 985a 00000000 		.long	.LASF1242
 23638 985e 0C       		.byte	0xc
 23639 985f 1103     		.value	0x311
 23640 9861 00000000 		.long	.LASF1243
 23641 9865 01C90000 		.long	0xc901
 23642 9869 01       		.byte	0x1
 23643 986a 72980000 		.long	0x9872
 23644 986e 7D980000 		.long	0x987d
 23645 9872 08       		.uleb128 0x8
 23646 9873 EAC80000 		.long	0xc8ea
 23647 9877 09       		.uleb128 0x9
 23648 9878 CF960000 		.long	0x96cf
 23649 987c 00       		.byte	0
 23650 987d 32       		.uleb128 0x32
 23651 987e 00000000 		.long	.LASF1244
 23652 9882 0C       		.byte	0xc
 23653 9883 1503     		.value	0x315
 23654 9885 00000000 		.long	.LASF1245
 23655 9889 B4960000 		.long	0x96b4
 23656 988d 01       		.byte	0x1
 23657 988e 96980000 		.long	0x9896
 23658 9892 A1980000 		.long	0x98a1
 23659 9896 08       		.uleb128 0x8
 23660 9897 FBC80000 		.long	0xc8fb
 23661 989b 09       		.uleb128 0x9
 23662 989c CF960000 		.long	0x96cf
 23663 98a0 00       		.byte	0
 23664 98a1 32       		.uleb128 0x32
 23665 98a2 00000000 		.long	.LASF1246
 23666 98a6 0C       		.byte	0xc
 23667 98a7 1903     		.value	0x319
 23668 98a9 00000000 		.long	.LASF1247
 23669 98ad F0C80000 		.long	0xc8f0
 23670 98b1 01       		.byte	0x1
 23671 98b2 BA980000 		.long	0x98ba
 23672 98b6 C0980000 		.long	0x98c0
 23673 98ba 08       		.uleb128 0x8
 23674 98bb FBC80000 		.long	0xc8fb
 23675 98bf 00       		.byte	0
 23676 98c0 35       		.uleb128 0x35
 23677 98c1 00000000 		.long	.LASF745
 23678 98c5 F0B10000 		.long	0xb1f0
 23679 98c9 35       		.uleb128 0x35
 23680 98ca 00000000 		.long	.LASF1248
 23681 98ce A8090000 		.long	0x9a8
 23682 98d2 00       		.byte	0
 23683 98d3 3B       		.uleb128 0x3b
 23684 98d4 00000000 		.long	.LASF1249
 23685 98d8 08       		.byte	0x8
 23686 98d9 0C       		.byte	0xc
 23687 98da C502     		.value	0x2c5
 23688 98dc F29A0000 		.long	0x9af2
 23689 98e0 62       		.uleb128 0x62
 23690 98e1 00000000 		.long	.LASF1228
 23691 98e5 0C       		.byte	0xc
GAS LISTING /tmp/ccJUMvuF.s 			page 717


 23692 98e6 C802     		.value	0x2c8
 23693 98e8 CEAE0000 		.long	0xaece
 23694 98ec 00       		.byte	0
 23695 98ed 02       		.byte	0x2
 23696 98ee 44       		.uleb128 0x44
 23697 98ef 00000000 		.long	.LASF498
 23698 98f3 0C       		.byte	0xc
 23699 98f4 D002     		.value	0x2d0
 23700 98f6 A2810000 		.long	0x81a2
 23701 98fa 01       		.byte	0x1
 23702 98fb 44       		.uleb128 0x44
 23703 98fc 00000000 		.long	.LASF58
 23704 9900 0C       		.byte	0xc
 23705 9901 D102     		.value	0x2d1
 23706 9903 B8810000 		.long	0x81b8
 23707 9907 01       		.byte	0x1
 23708 9908 44       		.uleb128 0x44
 23709 9909 00000000 		.long	.LASF491
 23710 990d 0C       		.byte	0xc
 23711 990e D202     		.value	0x2d2
 23712 9910 AD810000 		.long	0x81ad
 23713 9914 01       		.byte	0x1
 23714 9915 30       		.uleb128 0x30
 23715 9916 00000000 		.long	.LASF1229
 23716 991a 0C       		.byte	0xc
 23717 991b D402     		.value	0x2d4
 23718 991d 01       		.byte	0x1
 23719 991e 26990000 		.long	0x9926
 23720 9922 2C990000 		.long	0x992c
 23721 9926 08       		.uleb128 0x8
 23722 9927 D2C80000 		.long	0xc8d2
 23723 992b 00       		.byte	0
 23724 992c 31       		.uleb128 0x31
 23725 992d 00000000 		.long	.LASF1229
 23726 9931 0C       		.byte	0xc
 23727 9932 D802     		.value	0x2d8
 23728 9934 01       		.byte	0x1
 23729 9935 3D990000 		.long	0x993d
 23730 9939 48990000 		.long	0x9948
 23731 993d 08       		.uleb128 0x8
 23732 993e D2C80000 		.long	0xc8d2
 23733 9942 09       		.uleb128 0x9
 23734 9943 D8C80000 		.long	0xc8d8
 23735 9947 00       		.byte	0
 23736 9948 32       		.uleb128 0x32
 23737 9949 00000000 		.long	.LASF845
 23738 994d 0C       		.byte	0xc
 23739 994e E502     		.value	0x2e5
 23740 9950 00000000 		.long	.LASF1250
 23741 9954 FB980000 		.long	0x98fb
 23742 9958 01       		.byte	0x1
 23743 9959 61990000 		.long	0x9961
 23744 995d 67990000 		.long	0x9967
 23745 9961 08       		.uleb128 0x8
 23746 9962 DEC80000 		.long	0xc8de
 23747 9966 00       		.byte	0
 23748 9967 32       		.uleb128 0x32
GAS LISTING /tmp/ccJUMvuF.s 			page 718


 23749 9968 00000000 		.long	.LASF847
 23750 996c 0C       		.byte	0xc
 23751 996d E902     		.value	0x2e9
 23752 996f 00000000 		.long	.LASF1251
 23753 9973 08990000 		.long	0x9908
 23754 9977 01       		.byte	0x1
 23755 9978 80990000 		.long	0x9980
 23756 997c 86990000 		.long	0x9986
 23757 9980 08       		.uleb128 0x8
 23758 9981 DEC80000 		.long	0xc8de
 23759 9985 00       		.byte	0
 23760 9986 32       		.uleb128 0x32
 23761 9987 00000000 		.long	.LASF1232
 23762 998b 0C       		.byte	0xc
 23763 998c ED02     		.value	0x2ed
 23764 998e 00000000 		.long	.LASF1252
 23765 9992 E4C80000 		.long	0xc8e4
 23766 9996 01       		.byte	0x1
 23767 9997 9F990000 		.long	0x999f
 23768 999b A5990000 		.long	0x99a5
 23769 999f 08       		.uleb128 0x8
 23770 99a0 D2C80000 		.long	0xc8d2
 23771 99a4 00       		.byte	0
 23772 99a5 32       		.uleb128 0x32
 23773 99a6 00000000 		.long	.LASF1232
 23774 99aa 0C       		.byte	0xc
 23775 99ab F402     		.value	0x2f4
 23776 99ad 00000000 		.long	.LASF1253
 23777 99b1 D3980000 		.long	0x98d3
 23778 99b5 01       		.byte	0x1
 23779 99b6 BE990000 		.long	0x99be
 23780 99ba C9990000 		.long	0x99c9
 23781 99be 08       		.uleb128 0x8
 23782 99bf D2C80000 		.long	0xc8d2
 23783 99c3 09       		.uleb128 0x9
 23784 99c4 28930000 		.long	0x9328
 23785 99c8 00       		.byte	0
 23786 99c9 32       		.uleb128 0x32
 23787 99ca 00000000 		.long	.LASF1235
 23788 99ce 0C       		.byte	0xc
 23789 99cf F902     		.value	0x2f9
 23790 99d1 00000000 		.long	.LASF1254
 23791 99d5 E4C80000 		.long	0xc8e4
 23792 99d9 01       		.byte	0x1
 23793 99da E2990000 		.long	0x99e2
 23794 99de E8990000 		.long	0x99e8
 23795 99e2 08       		.uleb128 0x8
 23796 99e3 D2C80000 		.long	0xc8d2
 23797 99e7 00       		.byte	0
 23798 99e8 32       		.uleb128 0x32
 23799 99e9 00000000 		.long	.LASF1235
 23800 99ed 0C       		.byte	0xc
 23801 99ee 0003     		.value	0x300
 23802 99f0 00000000 		.long	.LASF1255
 23803 99f4 D3980000 		.long	0x98d3
 23804 99f8 01       		.byte	0x1
 23805 99f9 019A0000 		.long	0x9a01
GAS LISTING /tmp/ccJUMvuF.s 			page 719


 23806 99fd 0C9A0000 		.long	0x9a0c
 23807 9a01 08       		.uleb128 0x8
 23808 9a02 D2C80000 		.long	0xc8d2
 23809 9a06 09       		.uleb128 0x9
 23810 9a07 28930000 		.long	0x9328
 23811 9a0b 00       		.byte	0
 23812 9a0c 32       		.uleb128 0x32
 23813 9a0d 00000000 		.long	.LASF186
 23814 9a11 0C       		.byte	0xc
 23815 9a12 0503     		.value	0x305
 23816 9a14 00000000 		.long	.LASF1256
 23817 9a18 FB980000 		.long	0x98fb
 23818 9a1c 01       		.byte	0x1
 23819 9a1d 259A0000 		.long	0x9a25
 23820 9a21 309A0000 		.long	0x9a30
 23821 9a25 08       		.uleb128 0x8
 23822 9a26 DEC80000 		.long	0xc8de
 23823 9a2a 09       		.uleb128 0x9
 23824 9a2b EE980000 		.long	0x98ee
 23825 9a2f 00       		.byte	0
 23826 9a30 32       		.uleb128 0x32
 23827 9a31 00000000 		.long	.LASF197
 23828 9a35 0C       		.byte	0xc
 23829 9a36 0903     		.value	0x309
 23830 9a38 00000000 		.long	.LASF1257
 23831 9a3c E4C80000 		.long	0xc8e4
 23832 9a40 01       		.byte	0x1
 23833 9a41 499A0000 		.long	0x9a49
 23834 9a45 549A0000 		.long	0x9a54
 23835 9a49 08       		.uleb128 0x8
 23836 9a4a D2C80000 		.long	0xc8d2
 23837 9a4e 09       		.uleb128 0x9
 23838 9a4f EE980000 		.long	0x98ee
 23839 9a53 00       		.byte	0
 23840 9a54 32       		.uleb128 0x32
 23841 9a55 00000000 		.long	.LASF1240
 23842 9a59 0C       		.byte	0xc
 23843 9a5a 0D03     		.value	0x30d
 23844 9a5c 00000000 		.long	.LASF1258
 23845 9a60 D3980000 		.long	0x98d3
 23846 9a64 01       		.byte	0x1
 23847 9a65 6D9A0000 		.long	0x9a6d
 23848 9a69 789A0000 		.long	0x9a78
 23849 9a6d 08       		.uleb128 0x8
 23850 9a6e DEC80000 		.long	0xc8de
 23851 9a72 09       		.uleb128 0x9
 23852 9a73 EE980000 		.long	0x98ee
 23853 9a77 00       		.byte	0
 23854 9a78 32       		.uleb128 0x32
 23855 9a79 00000000 		.long	.LASF1242
 23856 9a7d 0C       		.byte	0xc
 23857 9a7e 1103     		.value	0x311
 23858 9a80 00000000 		.long	.LASF1259
 23859 9a84 E4C80000 		.long	0xc8e4
 23860 9a88 01       		.byte	0x1
 23861 9a89 919A0000 		.long	0x9a91
 23862 9a8d 9C9A0000 		.long	0x9a9c
GAS LISTING /tmp/ccJUMvuF.s 			page 720


 23863 9a91 08       		.uleb128 0x8
 23864 9a92 D2C80000 		.long	0xc8d2
 23865 9a96 09       		.uleb128 0x9
 23866 9a97 EE980000 		.long	0x98ee
 23867 9a9b 00       		.byte	0
 23868 9a9c 32       		.uleb128 0x32
 23869 9a9d 00000000 		.long	.LASF1244
 23870 9aa1 0C       		.byte	0xc
 23871 9aa2 1503     		.value	0x315
 23872 9aa4 00000000 		.long	.LASF1260
 23873 9aa8 D3980000 		.long	0x98d3
 23874 9aac 01       		.byte	0x1
 23875 9aad B59A0000 		.long	0x9ab5
 23876 9ab1 C09A0000 		.long	0x9ac0
 23877 9ab5 08       		.uleb128 0x8
 23878 9ab6 DEC80000 		.long	0xc8de
 23879 9aba 09       		.uleb128 0x9
 23880 9abb EE980000 		.long	0x98ee
 23881 9abf 00       		.byte	0
 23882 9ac0 32       		.uleb128 0x32
 23883 9ac1 00000000 		.long	.LASF1246
 23884 9ac5 0C       		.byte	0xc
 23885 9ac6 1903     		.value	0x319
 23886 9ac8 00000000 		.long	.LASF1261
 23887 9acc D8C80000 		.long	0xc8d8
 23888 9ad0 01       		.byte	0x1
 23889 9ad1 D99A0000 		.long	0x9ad9
 23890 9ad5 DF9A0000 		.long	0x9adf
 23891 9ad9 08       		.uleb128 0x8
 23892 9ada DEC80000 		.long	0xc8de
 23893 9ade 00       		.byte	0
 23894 9adf 35       		.uleb128 0x35
 23895 9ae0 00000000 		.long	.LASF745
 23896 9ae4 CEAE0000 		.long	0xaece
 23897 9ae8 35       		.uleb128 0x35
 23898 9ae9 00000000 		.long	.LASF1248
 23899 9aed A8090000 		.long	0x9a8
 23900 9af1 00       		.byte	0
 23901 9af2 16       		.uleb128 0x16
 23902 9af3 00000000 		.long	.LASF1262
 23903 9af7 01       		.byte	0x1
 23904 9af8 39       		.byte	0x39
 23905 9af9 64       		.byte	0x64
 23906 9afa 349B0000 		.long	0x9b34
 23907 9afe 17       		.uleb128 0x17
 23908 9aff 00000000 		.long	.LASF1263
 23909 9b03 39       		.byte	0x39
 23910 9b04 67       		.byte	0x67
 23911 9b05 C9AE0000 		.long	0xaec9
 23912 9b09 17       		.uleb128 0x17
 23913 9b0a 00000000 		.long	.LASF1224
 23914 9b0e 39       		.byte	0x39
 23915 9b0f 6A       		.byte	0x6a
 23916 9b10 3D930000 		.long	0x933d
 23917 9b14 17       		.uleb128 0x17
 23918 9b15 00000000 		.long	.LASF1264
 23919 9b19 39       		.byte	0x39
GAS LISTING /tmp/ccJUMvuF.s 			page 721


 23920 9b1a 6B       		.byte	0x6b
 23921 9b1b C9AE0000 		.long	0xaec9
 23922 9b1f 17       		.uleb128 0x17
 23923 9b20 00000000 		.long	.LASF1265
 23924 9b24 39       		.byte	0x39
 23925 9b25 6C       		.byte	0x6c
 23926 9b26 C9AE0000 		.long	0xaec9
 23927 9b2a 35       		.uleb128 0x35
 23928 9b2b 00000000 		.long	.LASF1204
 23929 9b2f 30000000 		.long	0x30
 23930 9b33 00       		.byte	0
 23931 9b34 16       		.uleb128 0x16
 23932 9b35 00000000 		.long	.LASF1266
 23933 9b39 01       		.byte	0x1
 23934 9b3a 39       		.byte	0x39
 23935 9b3b 64       		.byte	0x64
 23936 9b3c 769B0000 		.long	0x9b76
 23937 9b40 17       		.uleb128 0x17
 23938 9b41 00000000 		.long	.LASF1263
 23939 9b45 39       		.byte	0x39
 23940 9b46 67       		.byte	0x67
 23941 9b47 C9AE0000 		.long	0xaec9
 23942 9b4b 17       		.uleb128 0x17
 23943 9b4c 00000000 		.long	.LASF1224
 23944 9b50 39       		.byte	0x39
 23945 9b51 6A       		.byte	0x6a
 23946 9b52 3D930000 		.long	0x933d
 23947 9b56 17       		.uleb128 0x17
 23948 9b57 00000000 		.long	.LASF1264
 23949 9b5b 39       		.byte	0x39
 23950 9b5c 6B       		.byte	0x6b
 23951 9b5d C9AE0000 		.long	0xaec9
 23952 9b61 17       		.uleb128 0x17
 23953 9b62 00000000 		.long	.LASF1265
 23954 9b66 39       		.byte	0x39
 23955 9b67 6C       		.byte	0x6c
 23956 9b68 C9AE0000 		.long	0xaec9
 23957 9b6c 35       		.uleb128 0x35
 23958 9b6d 00000000 		.long	.LASF1204
 23959 9b71 29000000 		.long	0x29
 23960 9b75 00       		.byte	0
 23961 9b76 16       		.uleb128 0x16
 23962 9b77 00000000 		.long	.LASF1267
 23963 9b7b 01       		.byte	0x1
 23964 9b7c 39       		.byte	0x39
 23965 9b7d 64       		.byte	0x64
 23966 9b7e B89B0000 		.long	0x9bb8
 23967 9b82 17       		.uleb128 0x17
 23968 9b83 00000000 		.long	.LASF1263
 23969 9b87 39       		.byte	0x39
 23970 9b88 67       		.byte	0x67
 23971 9b89 C9AE0000 		.long	0xaec9
 23972 9b8d 17       		.uleb128 0x17
 23973 9b8e 00000000 		.long	.LASF1224
 23974 9b92 39       		.byte	0x39
 23975 9b93 6A       		.byte	0x6a
 23976 9b94 3D930000 		.long	0x933d
GAS LISTING /tmp/ccJUMvuF.s 			page 722


 23977 9b98 17       		.uleb128 0x17
 23978 9b99 00000000 		.long	.LASF1264
 23979 9b9d 39       		.byte	0x39
 23980 9b9e 6B       		.byte	0x6b
 23981 9b9f C9AE0000 		.long	0xaec9
 23982 9ba3 17       		.uleb128 0x17
 23983 9ba4 00000000 		.long	.LASF1265
 23984 9ba8 39       		.byte	0x39
 23985 9ba9 6C       		.byte	0x6c
 23986 9baa C9AE0000 		.long	0xaec9
 23987 9bae 35       		.uleb128 0x35
 23988 9baf 00000000 		.long	.LASF1204
 23989 9bb3 3FAC0000 		.long	0xac3f
 23990 9bb7 00       		.byte	0
 23991 9bb8 16       		.uleb128 0x16
 23992 9bb9 00000000 		.long	.LASF1268
 23993 9bbd 01       		.byte	0x1
 23994 9bbe 39       		.byte	0x39
 23995 9bbf 37       		.byte	0x37
 23996 9bc0 FA9B0000 		.long	0x9bfa
 23997 9bc4 17       		.uleb128 0x17
 23998 9bc5 00000000 		.long	.LASF1222
 23999 9bc9 39       		.byte	0x39
 24000 9bca 3A       		.byte	0x3a
 24001 9bcb 4E930000 		.long	0x934e
 24002 9bcf 17       		.uleb128 0x17
 24003 9bd0 00000000 		.long	.LASF1223
 24004 9bd4 39       		.byte	0x39
 24005 9bd5 3B       		.byte	0x3b
 24006 9bd6 4E930000 		.long	0x934e
 24007 9bda 17       		.uleb128 0x17
 24008 9bdb 00000000 		.long	.LASF1224
 24009 9bdf 39       		.byte	0x39
 24010 9be0 3F       		.byte	0x3f
 24011 9be1 3D930000 		.long	0x933d
 24012 9be5 17       		.uleb128 0x17
 24013 9be6 00000000 		.long	.LASF1225
 24014 9bea 39       		.byte	0x39
 24015 9beb 40       		.byte	0x40
 24016 9bec C9AE0000 		.long	0xaec9
 24017 9bf0 35       		.uleb128 0x35
 24018 9bf1 00000000 		.long	.LASF1204
 24019 9bf5 53930000 		.long	0x9353
 24020 9bf9 00       		.byte	0
 24021 9bfa 16       		.uleb128 0x16
 24022 9bfb 00000000 		.long	.LASF1269
 24023 9bff 01       		.byte	0x1
 24024 9c00 39       		.byte	0x39
 24025 9c01 37       		.byte	0x37
 24026 9c02 3C9C0000 		.long	0x9c3c
 24027 9c06 17       		.uleb128 0x17
 24028 9c07 00000000 		.long	.LASF1222
 24029 9c0b 39       		.byte	0x39
 24030 9c0c 3A       		.byte	0x3a
 24031 9c0d D4AE0000 		.long	0xaed4
 24032 9c11 17       		.uleb128 0x17
 24033 9c12 00000000 		.long	.LASF1223
GAS LISTING /tmp/ccJUMvuF.s 			page 723


 24034 9c16 39       		.byte	0x39
 24035 9c17 3B       		.byte	0x3b
 24036 9c18 D4AE0000 		.long	0xaed4
 24037 9c1c 17       		.uleb128 0x17
 24038 9c1d 00000000 		.long	.LASF1224
 24039 9c21 39       		.byte	0x39
 24040 9c22 3F       		.byte	0x3f
 24041 9c23 3D930000 		.long	0x933d
 24042 9c27 17       		.uleb128 0x17
 24043 9c28 00000000 		.long	.LASF1225
 24044 9c2c 39       		.byte	0x39
 24045 9c2d 40       		.byte	0x40
 24046 9c2e C9AE0000 		.long	0xaec9
 24047 9c32 35       		.uleb128 0x35
 24048 9c33 00000000 		.long	.LASF1204
 24049 9c37 ACAE0000 		.long	0xaeac
 24050 9c3b 00       		.byte	0
 24051 9c3c 16       		.uleb128 0x16
 24052 9c3d 00000000 		.long	.LASF1270
 24053 9c41 01       		.byte	0x1
 24054 9c42 39       		.byte	0x39
 24055 9c43 37       		.byte	0x37
 24056 9c44 7E9C0000 		.long	0x9c7e
 24057 9c48 17       		.uleb128 0x17
 24058 9c49 00000000 		.long	.LASF1222
 24059 9c4d 39       		.byte	0x39
 24060 9c4e 3A       		.byte	0x3a
 24061 9c4f 78C10000 		.long	0xc178
 24062 9c53 17       		.uleb128 0x17
 24063 9c54 00000000 		.long	.LASF1223
 24064 9c58 39       		.byte	0x39
 24065 9c59 3B       		.byte	0x3b
 24066 9c5a 78C10000 		.long	0xc178
 24067 9c5e 17       		.uleb128 0x17
 24068 9c5f 00000000 		.long	.LASF1224
 24069 9c63 39       		.byte	0x39
 24070 9c64 3F       		.byte	0x3f
 24071 9c65 3D930000 		.long	0x933d
 24072 9c69 17       		.uleb128 0x17
 24073 9c6a 00000000 		.long	.LASF1225
 24074 9c6e 39       		.byte	0x39
 24075 9c6f 40       		.byte	0x40
 24076 9c70 C9AE0000 		.long	0xaec9
 24077 9c74 35       		.uleb128 0x35
 24078 9c75 00000000 		.long	.LASF1204
 24079 9c79 7D930000 		.long	0x937d
 24080 9c7d 00       		.byte	0
 24081 9c7e 16       		.uleb128 0x16
 24082 9c7f 00000000 		.long	.LASF1271
 24083 9c83 01       		.byte	0x1
 24084 9c84 39       		.byte	0x39
 24085 9c85 37       		.byte	0x37
 24086 9c86 C09C0000 		.long	0x9cc0
 24087 9c8a 17       		.uleb128 0x17
 24088 9c8b 00000000 		.long	.LASF1222
 24089 9c8f 39       		.byte	0x39
 24090 9c90 3A       		.byte	0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 724


 24091 9c91 7DC10000 		.long	0xc17d
 24092 9c95 17       		.uleb128 0x17
 24093 9c96 00000000 		.long	.LASF1223
 24094 9c9a 39       		.byte	0x39
 24095 9c9b 3B       		.byte	0x3b
 24096 9c9c 7DC10000 		.long	0xc17d
 24097 9ca0 17       		.uleb128 0x17
 24098 9ca1 00000000 		.long	.LASF1224
 24099 9ca5 39       		.byte	0x39
 24100 9ca6 3F       		.byte	0x3f
 24101 9ca7 3D930000 		.long	0x933d
 24102 9cab 17       		.uleb128 0x17
 24103 9cac 00000000 		.long	.LASF1225
 24104 9cb0 39       		.byte	0x39
 24105 9cb1 40       		.byte	0x40
 24106 9cb2 C9AE0000 		.long	0xaec9
 24107 9cb6 35       		.uleb128 0x35
 24108 9cb7 00000000 		.long	.LASF1204
 24109 9cbb 84930000 		.long	0x9384
 24110 9cbf 00       		.byte	0
 24111 9cc0 16       		.uleb128 0x16
 24112 9cc1 00000000 		.long	.LASF1272
 24113 9cc5 01       		.byte	0x1
 24114 9cc6 07       		.byte	0x7
 24115 9cc7 3A       		.byte	0x3a
 24116 9cc8 019E0000 		.long	0x9e01
 24117 9ccc 13       		.uleb128 0x13
 24118 9ccd 00000000 		.long	.LASF57
 24119 9cd1 07       		.byte	0x7
 24120 9cd2 3D       		.byte	0x3d
 24121 9cd3 85060000 		.long	0x685
 24122 9cd7 13       		.uleb128 0x13
 24123 9cd8 00000000 		.long	.LASF491
 24124 9cdc 07       		.byte	0x7
 24125 9cdd 3F       		.byte	0x3f
 24126 9cde C9C10000 		.long	0xc1c9
 24127 9ce2 13       		.uleb128 0x13
 24128 9ce3 00000000 		.long	.LASF1212
 24129 9ce7 07       		.byte	0x7
 24130 9ce8 40       		.byte	0x40
 24131 9ce9 CFC10000 		.long	0xc1cf
 24132 9ced 13       		.uleb128 0x13
 24133 9cee 00000000 		.long	.LASF58
 24134 9cf2 07       		.byte	0x7
 24135 9cf3 41       		.byte	0x41
 24136 9cf4 DAC10000 		.long	0xc1da
 24137 9cf8 13       		.uleb128 0x13
 24138 9cf9 00000000 		.long	.LASF59
 24139 9cfd 07       		.byte	0x7
 24140 9cfe 42       		.byte	0x42
 24141 9cff E0C10000 		.long	0xc1e0
 24142 9d03 37       		.uleb128 0x37
 24143 9d04 00000000 		.long	.LASF1213
 24144 9d08 07       		.byte	0x7
 24145 9d09 4F       		.byte	0x4f
 24146 9d0a 129D0000 		.long	0x9d12
 24147 9d0e 189D0000 		.long	0x9d18
GAS LISTING /tmp/ccJUMvuF.s 			page 725


 24148 9d12 08       		.uleb128 0x8
 24149 9d13 E6C10000 		.long	0xc1e6
 24150 9d17 00       		.byte	0
 24151 9d18 37       		.uleb128 0x37
 24152 9d19 00000000 		.long	.LASF1213
 24153 9d1d 07       		.byte	0x7
 24154 9d1e 51       		.byte	0x51
 24155 9d1f 279D0000 		.long	0x9d27
 24156 9d23 329D0000 		.long	0x9d32
 24157 9d27 08       		.uleb128 0x8
 24158 9d28 E6C10000 		.long	0xc1e6
 24159 9d2c 09       		.uleb128 0x9
 24160 9d2d ECC10000 		.long	0xc1ec
 24161 9d31 00       		.byte	0
 24162 9d32 37       		.uleb128 0x37
 24163 9d33 00000000 		.long	.LASF1214
 24164 9d37 07       		.byte	0x7
 24165 9d38 56       		.byte	0x56
 24166 9d39 419D0000 		.long	0x9d41
 24167 9d3d 4C9D0000 		.long	0x9d4c
 24168 9d41 08       		.uleb128 0x8
 24169 9d42 E6C10000 		.long	0xc1e6
 24170 9d46 08       		.uleb128 0x8
 24171 9d47 28930000 		.long	0x9328
 24172 9d4b 00       		.byte	0
 24173 9d4c 0B       		.uleb128 0xb
 24174 9d4d 00000000 		.long	.LASF1215
 24175 9d51 07       		.byte	0x7
 24176 9d52 59       		.byte	0x59
 24177 9d53 00000000 		.long	.LASF1273
 24178 9d57 D79C0000 		.long	0x9cd7
 24179 9d5b 639D0000 		.long	0x9d63
 24180 9d5f 6E9D0000 		.long	0x9d6e
 24181 9d63 08       		.uleb128 0x8
 24182 9d64 F2C10000 		.long	0xc1f2
 24183 9d68 09       		.uleb128 0x9
 24184 9d69 ED9C0000 		.long	0x9ced
 24185 9d6d 00       		.byte	0
 24186 9d6e 0B       		.uleb128 0xb
 24187 9d6f 00000000 		.long	.LASF1215
 24188 9d73 07       		.byte	0x7
 24189 9d74 5D       		.byte	0x5d
 24190 9d75 00000000 		.long	.LASF1274
 24191 9d79 E29C0000 		.long	0x9ce2
 24192 9d7d 859D0000 		.long	0x9d85
 24193 9d81 909D0000 		.long	0x9d90
 24194 9d85 08       		.uleb128 0x8
 24195 9d86 F2C10000 		.long	0xc1f2
 24196 9d8a 09       		.uleb128 0x9
 24197 9d8b F89C0000 		.long	0x9cf8
 24198 9d8f 00       		.byte	0
 24199 9d90 0B       		.uleb128 0xb
 24200 9d91 00000000 		.long	.LASF537
 24201 9d95 07       		.byte	0x7
 24202 9d96 63       		.byte	0x63
 24203 9d97 00000000 		.long	.LASF1275
 24204 9d9b D79C0000 		.long	0x9cd7
GAS LISTING /tmp/ccJUMvuF.s 			page 726


 24205 9d9f A79D0000 		.long	0x9da7
 24206 9da3 B79D0000 		.long	0x9db7
 24207 9da7 08       		.uleb128 0x8
 24208 9da8 E6C10000 		.long	0xc1e6
 24209 9dac 09       		.uleb128 0x9
 24210 9dad CC9C0000 		.long	0x9ccc
 24211 9db1 09       		.uleb128 0x9
 24212 9db2 C9B70000 		.long	0xb7c9
 24213 9db6 00       		.byte	0
 24214 9db7 0A       		.uleb128 0xa
 24215 9db8 00000000 		.long	.LASF540
 24216 9dbc 07       		.byte	0x7
 24217 9dbd 6D       		.byte	0x6d
 24218 9dbe 00000000 		.long	.LASF1276
 24219 9dc2 CA9D0000 		.long	0x9dca
 24220 9dc6 DA9D0000 		.long	0x9dda
 24221 9dca 08       		.uleb128 0x8
 24222 9dcb E6C10000 		.long	0xc1e6
 24223 9dcf 09       		.uleb128 0x9
 24224 9dd0 D79C0000 		.long	0x9cd7
 24225 9dd4 09       		.uleb128 0x9
 24226 9dd5 CC9C0000 		.long	0x9ccc
 24227 9dd9 00       		.byte	0
 24228 9dda 0B       		.uleb128 0xb
 24229 9ddb 00000000 		.long	.LASF171
 24230 9ddf 07       		.byte	0x7
 24231 9de0 71       		.byte	0x71
 24232 9de1 00000000 		.long	.LASF1277
 24233 9de5 CC9C0000 		.long	0x9ccc
 24234 9de9 F19D0000 		.long	0x9df1
 24235 9ded F79D0000 		.long	0x9df7
 24236 9df1 08       		.uleb128 0x8
 24237 9df2 F2C10000 		.long	0xc1f2
 24238 9df6 00       		.byte	0
 24239 9df7 18       		.uleb128 0x18
 24240 9df8 5F547000 		.string	"_Tp"
 24241 9dfc 29000000 		.long	0x29
 24242 9e00 00       		.byte	0
 24243 9e01 11       		.uleb128 0x11
 24244 9e02 C09C0000 		.long	0x9cc0
 24245 9e06 16       		.uleb128 0x16
 24246 9e07 00000000 		.long	.LASF1278
 24247 9e0b 01       		.byte	0x1
 24248 9e0c 3A       		.byte	0x3a
 24249 9e0d 5F       		.byte	0x5f
 24250 9e0e 169F0000 		.long	0x9f16
 24251 9e12 12       		.uleb128 0x12
 24252 9e13 3A       		.byte	0x3a
 24253 9e14 5F       		.byte	0x5f
 24254 9e15 17340000 		.long	0x3417
 24255 9e19 12       		.uleb128 0x12
 24256 9e1a 3A       		.byte	0x3a
 24257 9e1b 5F       		.byte	0x5f
 24258 9e1c 3B340000 		.long	0x343b
 24259 9e20 12       		.uleb128 0x12
 24260 9e21 3A       		.byte	0x3a
 24261 9e22 5F       		.byte	0x5f
GAS LISTING /tmp/ccJUMvuF.s 			page 727


 24262 9e23 5B340000 		.long	0x345b
 24263 9e27 25       		.uleb128 0x25
 24264 9e28 D6320000 		.long	0x32d6
 24265 9e2c 00       		.byte	0
 24266 9e2d 13       		.uleb128 0x13
 24267 9e2e 00000000 		.long	.LASF19
 24268 9e32 3A       		.byte	0x3a
 24269 9e33 67       		.byte	0x67
 24270 9e34 E2320000 		.long	0x32e2
 24271 9e38 13       		.uleb128 0x13
 24272 9e39 00000000 		.long	.LASF491
 24273 9e3d 3A       		.byte	0x3a
 24274 9e3e 68       		.byte	0x68
 24275 9e3f F9320000 		.long	0x32f9
 24276 9e43 13       		.uleb128 0x13
 24277 9e44 00000000 		.long	.LASF58
 24278 9e48 3A       		.byte	0x3a
 24279 9e49 6D       		.byte	0x6d
 24280 9e4a 16C20000 		.long	0xc216
 24281 9e4e 13       		.uleb128 0x13
 24282 9e4f 00000000 		.long	.LASF59
 24283 9e53 3A       		.byte	0x3a
 24284 9e54 6E       		.byte	0x6e
 24285 9e55 1CC20000 		.long	0xc21c
 24286 9e59 11       		.uleb128 0x11
 24287 9e5a 2D9E0000 		.long	0x9e2d
 24288 9e5e 4E       		.uleb128 0x4e
 24289 9e5f 00000000 		.long	.LASF1279
 24290 9e63 3A       		.byte	0x3a
 24291 9e64 8B       		.byte	0x8b
 24292 9e65 00000000 		.long	.LASF1280
 24293 9e69 D5300000 		.long	0x30d5
 24294 9e6d 779E0000 		.long	0x9e77
 24295 9e71 09       		.uleb128 0x9
 24296 9e72 FEC10000 		.long	0xc1fe
 24297 9e76 00       		.byte	0
 24298 9e77 1C       		.uleb128 0x1c
 24299 9e78 00000000 		.long	.LASF1281
 24300 9e7c 3A       		.byte	0x3a
 24301 9e7d 8E       		.byte	0x8e
 24302 9e7e 00000000 		.long	.LASF1282
 24303 9e82 919E0000 		.long	0x9e91
 24304 9e86 09       		.uleb128 0x9
 24305 9e87 10C20000 		.long	0xc210
 24306 9e8b 09       		.uleb128 0x9
 24307 9e8c 10C20000 		.long	0xc210
 24308 9e90 00       		.byte	0
 24309 9e91 2A       		.uleb128 0x2a
 24310 9e92 00000000 		.long	.LASF1283
 24311 9e96 3A       		.byte	0x3a
 24312 9e97 91       		.byte	0x91
 24313 9e98 00000000 		.long	.LASF1285
 24314 9e9c 30930000 		.long	0x9330
 24315 9ea0 2A       		.uleb128 0x2a
 24316 9ea1 00000000 		.long	.LASF1286
 24317 9ea5 3A       		.byte	0x3a
 24318 9ea6 94       		.byte	0x94
GAS LISTING /tmp/ccJUMvuF.s 			page 728


 24319 9ea7 00000000 		.long	.LASF1287
 24320 9eab 30930000 		.long	0x9330
 24321 9eaf 2A       		.uleb128 0x2a
 24322 9eb0 00000000 		.long	.LASF1288
 24323 9eb4 3A       		.byte	0x3a
 24324 9eb5 97       		.byte	0x97
 24325 9eb6 00000000 		.long	.LASF1289
 24326 9eba 30930000 		.long	0x9330
 24327 9ebe 2A       		.uleb128 0x2a
 24328 9ebf 00000000 		.long	.LASF1290
 24329 9ec3 3A       		.byte	0x3a
 24330 9ec4 9A       		.byte	0x9a
 24331 9ec5 00000000 		.long	.LASF1291
 24332 9ec9 30930000 		.long	0x9330
 24333 9ecd 2A       		.uleb128 0x2a
 24334 9ece 00000000 		.long	.LASF1292
 24335 9ed2 3A       		.byte	0x3a
 24336 9ed3 9D       		.byte	0x9d
 24337 9ed4 00000000 		.long	.LASF1293
 24338 9ed8 30930000 		.long	0x9330
 24339 9edc 2A       		.uleb128 0x2a
 24340 9edd 00000000 		.long	.LASF1294
 24341 9ee1 3A       		.byte	0x3a
 24342 9ee2 A0       		.byte	0xa0
 24343 9ee3 00000000 		.long	.LASF1295
 24344 9ee7 30930000 		.long	0x9330
 24345 9eeb 16       		.uleb128 0x16
 24346 9eec 00000000 		.long	.LASF492
 24347 9ef0 01       		.byte	0x1
 24348 9ef1 3A       		.byte	0x3a
 24349 9ef2 A8       		.byte	0xa8
 24350 9ef3 0C9F0000 		.long	0x9f0c
 24351 9ef7 13       		.uleb128 0x13
 24352 9ef8 00000000 		.long	.LASF493
 24353 9efc 3A       		.byte	0x3a
 24354 9efd A9       		.byte	0xa9
 24355 9efe 8F340000 		.long	0x348f
 24356 9f02 18       		.uleb128 0x18
 24357 9f03 5F547000 		.string	"_Tp"
 24358 9f07 29000000 		.long	0x29
 24359 9f0b 00       		.byte	0
 24360 9f0c 35       		.uleb128 0x35
 24361 9f0d 00000000 		.long	.LASF303
 24362 9f11 D5300000 		.long	0x30d5
 24363 9f15 00       		.byte	0
 24364 9f16 3B       		.uleb128 0x3b
 24365 9f17 00000000 		.long	.LASF1296
 24366 9f1b 08       		.byte	0x8
 24367 9f1c 0C       		.byte	0xc
 24368 9f1d C502     		.value	0x2c5
 24369 9f1f 4FA10000 		.long	0xa14f
 24370 9f23 62       		.uleb128 0x62
 24371 9f24 00000000 		.long	.LASF1228
 24372 9f28 0C       		.byte	0xc
 24373 9f29 C802     		.value	0x2c8
 24374 9f2b C9C10000 		.long	0xc1c9
 24375 9f2f 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 729


 24376 9f30 02       		.byte	0x2
 24377 9f31 44       		.uleb128 0x44
 24378 9f32 00000000 		.long	.LASF1058
 24379 9f36 0C       		.byte	0xc
 24380 9f37 CD02     		.value	0x2cd
 24381 9f39 C9C10000 		.long	0xc1c9
 24382 9f3d 01       		.byte	0x1
 24383 9f3e 44       		.uleb128 0x44
 24384 9f3f 00000000 		.long	.LASF19
 24385 9f43 0C       		.byte	0xc
 24386 9f44 CF02     		.value	0x2cf
 24387 9f46 9E520000 		.long	0x529e
 24388 9f4a 01       		.byte	0x1
 24389 9f4b 44       		.uleb128 0x44
 24390 9f4c 00000000 		.long	.LASF498
 24391 9f50 0C       		.byte	0xc
 24392 9f51 D002     		.value	0x2d0
 24393 9f53 A9520000 		.long	0x52a9
 24394 9f57 01       		.byte	0x1
 24395 9f58 44       		.uleb128 0x44
 24396 9f59 00000000 		.long	.LASF58
 24397 9f5d 0C       		.byte	0xc
 24398 9f5e D102     		.value	0x2d1
 24399 9f60 BF520000 		.long	0x52bf
 24400 9f64 01       		.byte	0x1
 24401 9f65 44       		.uleb128 0x44
 24402 9f66 00000000 		.long	.LASF491
 24403 9f6a 0C       		.byte	0xc
 24404 9f6b D202     		.value	0x2d2
 24405 9f6d B4520000 		.long	0x52b4
 24406 9f71 01       		.byte	0x1
 24407 9f72 30       		.uleb128 0x30
 24408 9f73 00000000 		.long	.LASF1229
 24409 9f77 0C       		.byte	0xc
 24410 9f78 D402     		.value	0x2d4
 24411 9f7a 01       		.byte	0x1
 24412 9f7b 839F0000 		.long	0x9f83
 24413 9f7f 899F0000 		.long	0x9f89
 24414 9f83 08       		.uleb128 0x8
 24415 9f84 5BC30000 		.long	0xc35b
 24416 9f88 00       		.byte	0
 24417 9f89 31       		.uleb128 0x31
 24418 9f8a 00000000 		.long	.LASF1229
 24419 9f8e 0C       		.byte	0xc
 24420 9f8f D802     		.value	0x2d8
 24421 9f91 01       		.byte	0x1
 24422 9f92 9A9F0000 		.long	0x9f9a
 24423 9f96 A59F0000 		.long	0x9fa5
 24424 9f9a 08       		.uleb128 0x8
 24425 9f9b 5BC30000 		.long	0xc35b
 24426 9f9f 09       		.uleb128 0x9
 24427 9fa0 61C30000 		.long	0xc361
 24428 9fa4 00       		.byte	0
 24429 9fa5 32       		.uleb128 0x32
 24430 9fa6 00000000 		.long	.LASF845
 24431 9faa 0C       		.byte	0xc
 24432 9fab E502     		.value	0x2e5
GAS LISTING /tmp/ccJUMvuF.s 			page 730


 24433 9fad 00000000 		.long	.LASF1297
 24434 9fb1 589F0000 		.long	0x9f58
 24435 9fb5 01       		.byte	0x1
 24436 9fb6 BE9F0000 		.long	0x9fbe
 24437 9fba C49F0000 		.long	0x9fc4
 24438 9fbe 08       		.uleb128 0x8
 24439 9fbf 6CC30000 		.long	0xc36c
 24440 9fc3 00       		.byte	0
 24441 9fc4 32       		.uleb128 0x32
 24442 9fc5 00000000 		.long	.LASF847
 24443 9fc9 0C       		.byte	0xc
 24444 9fca E902     		.value	0x2e9
 24445 9fcc 00000000 		.long	.LASF1298
 24446 9fd0 659F0000 		.long	0x9f65
 24447 9fd4 01       		.byte	0x1
 24448 9fd5 DD9F0000 		.long	0x9fdd
 24449 9fd9 E39F0000 		.long	0x9fe3
 24450 9fdd 08       		.uleb128 0x8
 24451 9fde 6CC30000 		.long	0xc36c
 24452 9fe2 00       		.byte	0
 24453 9fe3 32       		.uleb128 0x32
 24454 9fe4 00000000 		.long	.LASF1232
 24455 9fe8 0C       		.byte	0xc
 24456 9fe9 ED02     		.value	0x2ed
 24457 9feb 00000000 		.long	.LASF1299
 24458 9fef 72C30000 		.long	0xc372
 24459 9ff3 01       		.byte	0x1
 24460 9ff4 FC9F0000 		.long	0x9ffc
 24461 9ff8 02A00000 		.long	0xa002
 24462 9ffc 08       		.uleb128 0x8
 24463 9ffd 5BC30000 		.long	0xc35b
 24464 a001 00       		.byte	0
 24465 a002 32       		.uleb128 0x32
 24466 a003 00000000 		.long	.LASF1232
 24467 a007 0C       		.byte	0xc
 24468 a008 F402     		.value	0x2f4
 24469 a00a 00000000 		.long	.LASF1300
 24470 a00e 169F0000 		.long	0x9f16
 24471 a012 01       		.byte	0x1
 24472 a013 1BA00000 		.long	0xa01b
 24473 a017 26A00000 		.long	0xa026
 24474 a01b 08       		.uleb128 0x8
 24475 a01c 5BC30000 		.long	0xc35b
 24476 a020 09       		.uleb128 0x9
 24477 a021 28930000 		.long	0x9328
 24478 a025 00       		.byte	0
 24479 a026 32       		.uleb128 0x32
 24480 a027 00000000 		.long	.LASF1235
 24481 a02b 0C       		.byte	0xc
 24482 a02c F902     		.value	0x2f9
 24483 a02e 00000000 		.long	.LASF1301
 24484 a032 72C30000 		.long	0xc372
 24485 a036 01       		.byte	0x1
 24486 a037 3FA00000 		.long	0xa03f
 24487 a03b 45A00000 		.long	0xa045
 24488 a03f 08       		.uleb128 0x8
 24489 a040 5BC30000 		.long	0xc35b
GAS LISTING /tmp/ccJUMvuF.s 			page 731


 24490 a044 00       		.byte	0
 24491 a045 32       		.uleb128 0x32
 24492 a046 00000000 		.long	.LASF1235
 24493 a04a 0C       		.byte	0xc
 24494 a04b 0003     		.value	0x300
 24495 a04d 00000000 		.long	.LASF1302
 24496 a051 169F0000 		.long	0x9f16
 24497 a055 01       		.byte	0x1
 24498 a056 5EA00000 		.long	0xa05e
 24499 a05a 69A00000 		.long	0xa069
 24500 a05e 08       		.uleb128 0x8
 24501 a05f 5BC30000 		.long	0xc35b
 24502 a063 09       		.uleb128 0x9
 24503 a064 28930000 		.long	0x9328
 24504 a068 00       		.byte	0
 24505 a069 32       		.uleb128 0x32
 24506 a06a 00000000 		.long	.LASF186
 24507 a06e 0C       		.byte	0xc
 24508 a06f 0503     		.value	0x305
 24509 a071 00000000 		.long	.LASF1303
 24510 a075 589F0000 		.long	0x9f58
 24511 a079 01       		.byte	0x1
 24512 a07a 82A00000 		.long	0xa082
 24513 a07e 8DA00000 		.long	0xa08d
 24514 a082 08       		.uleb128 0x8
 24515 a083 6CC30000 		.long	0xc36c
 24516 a087 09       		.uleb128 0x9
 24517 a088 4B9F0000 		.long	0x9f4b
 24518 a08c 00       		.byte	0
 24519 a08d 32       		.uleb128 0x32
 24520 a08e 00000000 		.long	.LASF197
 24521 a092 0C       		.byte	0xc
 24522 a093 0903     		.value	0x309
 24523 a095 00000000 		.long	.LASF1304
 24524 a099 72C30000 		.long	0xc372
 24525 a09d 01       		.byte	0x1
 24526 a09e A6A00000 		.long	0xa0a6
 24527 a0a2 B1A00000 		.long	0xa0b1
 24528 a0a6 08       		.uleb128 0x8
 24529 a0a7 5BC30000 		.long	0xc35b
 24530 a0ab 09       		.uleb128 0x9
 24531 a0ac 4B9F0000 		.long	0x9f4b
 24532 a0b0 00       		.byte	0
 24533 a0b1 32       		.uleb128 0x32
 24534 a0b2 00000000 		.long	.LASF1240
 24535 a0b6 0C       		.byte	0xc
 24536 a0b7 0D03     		.value	0x30d
 24537 a0b9 00000000 		.long	.LASF1305
 24538 a0bd 169F0000 		.long	0x9f16
 24539 a0c1 01       		.byte	0x1
 24540 a0c2 CAA00000 		.long	0xa0ca
 24541 a0c6 D5A00000 		.long	0xa0d5
 24542 a0ca 08       		.uleb128 0x8
 24543 a0cb 6CC30000 		.long	0xc36c
 24544 a0cf 09       		.uleb128 0x9
 24545 a0d0 4B9F0000 		.long	0x9f4b
 24546 a0d4 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 732


 24547 a0d5 32       		.uleb128 0x32
 24548 a0d6 00000000 		.long	.LASF1242
 24549 a0da 0C       		.byte	0xc
 24550 a0db 1103     		.value	0x311
 24551 a0dd 00000000 		.long	.LASF1306
 24552 a0e1 72C30000 		.long	0xc372
 24553 a0e5 01       		.byte	0x1
 24554 a0e6 EEA00000 		.long	0xa0ee
 24555 a0ea F9A00000 		.long	0xa0f9
 24556 a0ee 08       		.uleb128 0x8
 24557 a0ef 5BC30000 		.long	0xc35b
 24558 a0f3 09       		.uleb128 0x9
 24559 a0f4 4B9F0000 		.long	0x9f4b
 24560 a0f8 00       		.byte	0
 24561 a0f9 32       		.uleb128 0x32
 24562 a0fa 00000000 		.long	.LASF1244
 24563 a0fe 0C       		.byte	0xc
 24564 a0ff 1503     		.value	0x315
 24565 a101 00000000 		.long	.LASF1307
 24566 a105 169F0000 		.long	0x9f16
 24567 a109 01       		.byte	0x1
 24568 a10a 12A10000 		.long	0xa112
 24569 a10e 1DA10000 		.long	0xa11d
 24570 a112 08       		.uleb128 0x8
 24571 a113 6CC30000 		.long	0xc36c
 24572 a117 09       		.uleb128 0x9
 24573 a118 4B9F0000 		.long	0x9f4b
 24574 a11c 00       		.byte	0
 24575 a11d 32       		.uleb128 0x32
 24576 a11e 00000000 		.long	.LASF1246
 24577 a122 0C       		.byte	0xc
 24578 a123 1903     		.value	0x319
 24579 a125 00000000 		.long	.LASF1308
 24580 a129 61C30000 		.long	0xc361
 24581 a12d 01       		.byte	0x1
 24582 a12e 36A10000 		.long	0xa136
 24583 a132 3CA10000 		.long	0xa13c
 24584 a136 08       		.uleb128 0x8
 24585 a137 6CC30000 		.long	0xc36c
 24586 a13b 00       		.byte	0
 24587 a13c 35       		.uleb128 0x35
 24588 a13d 00000000 		.long	.LASF745
 24589 a141 C9C10000 		.long	0xc1c9
 24590 a145 35       		.uleb128 0x35
 24591 a146 00000000 		.long	.LASF1248
 24592 a14a 76370000 		.long	0x3776
 24593 a14e 00       		.byte	0
 24594 a14f 3B       		.uleb128 0x3b
 24595 a150 00000000 		.long	.LASF1309
 24596 a154 08       		.byte	0x8
 24597 a155 0C       		.byte	0xc
 24598 a156 C502     		.value	0x2c5
 24599 a158 6EA30000 		.long	0xa36e
 24600 a15c 62       		.uleb128 0x62
 24601 a15d 00000000 		.long	.LASF1228
 24602 a161 0C       		.byte	0xc
 24603 a162 C802     		.value	0x2c8
GAS LISTING /tmp/ccJUMvuF.s 			page 733


 24604 a164 CFC10000 		.long	0xc1cf
 24605 a168 00       		.byte	0
 24606 a169 02       		.byte	0x2
 24607 a16a 44       		.uleb128 0x44
 24608 a16b 00000000 		.long	.LASF498
 24609 a16f 0C       		.byte	0xc
 24610 a170 D002     		.value	0x2d0
 24611 a172 13530000 		.long	0x5313
 24612 a176 01       		.byte	0x1
 24613 a177 44       		.uleb128 0x44
 24614 a178 00000000 		.long	.LASF58
 24615 a17c 0C       		.byte	0xc
 24616 a17d D102     		.value	0x2d1
 24617 a17f 29530000 		.long	0x5329
 24618 a183 01       		.byte	0x1
 24619 a184 44       		.uleb128 0x44
 24620 a185 00000000 		.long	.LASF491
 24621 a189 0C       		.byte	0xc
 24622 a18a D202     		.value	0x2d2
 24623 a18c 1E530000 		.long	0x531e
 24624 a190 01       		.byte	0x1
 24625 a191 30       		.uleb128 0x30
 24626 a192 00000000 		.long	.LASF1229
 24627 a196 0C       		.byte	0xc
 24628 a197 D402     		.value	0x2d4
 24629 a199 01       		.byte	0x1
 24630 a19a A2A10000 		.long	0xa1a2
 24631 a19e A8A10000 		.long	0xa1a8
 24632 a1a2 08       		.uleb128 0x8
 24633 a1a3 71C40000 		.long	0xc471
 24634 a1a7 00       		.byte	0
 24635 a1a8 31       		.uleb128 0x31
 24636 a1a9 00000000 		.long	.LASF1229
 24637 a1ad 0C       		.byte	0xc
 24638 a1ae D802     		.value	0x2d8
 24639 a1b0 01       		.byte	0x1
 24640 a1b1 B9A10000 		.long	0xa1b9
 24641 a1b5 C4A10000 		.long	0xa1c4
 24642 a1b9 08       		.uleb128 0x8
 24643 a1ba 71C40000 		.long	0xc471
 24644 a1be 09       		.uleb128 0x9
 24645 a1bf 77C40000 		.long	0xc477
 24646 a1c3 00       		.byte	0
 24647 a1c4 32       		.uleb128 0x32
 24648 a1c5 00000000 		.long	.LASF845
 24649 a1c9 0C       		.byte	0xc
 24650 a1ca E502     		.value	0x2e5
 24651 a1cc 00000000 		.long	.LASF1310
 24652 a1d0 77A10000 		.long	0xa177
 24653 a1d4 01       		.byte	0x1
 24654 a1d5 DDA10000 		.long	0xa1dd
 24655 a1d9 E3A10000 		.long	0xa1e3
 24656 a1dd 08       		.uleb128 0x8
 24657 a1de 82C40000 		.long	0xc482
 24658 a1e2 00       		.byte	0
 24659 a1e3 32       		.uleb128 0x32
 24660 a1e4 00000000 		.long	.LASF847
GAS LISTING /tmp/ccJUMvuF.s 			page 734


 24661 a1e8 0C       		.byte	0xc
 24662 a1e9 E902     		.value	0x2e9
 24663 a1eb 00000000 		.long	.LASF1311
 24664 a1ef 84A10000 		.long	0xa184
 24665 a1f3 01       		.byte	0x1
 24666 a1f4 FCA10000 		.long	0xa1fc
 24667 a1f8 02A20000 		.long	0xa202
 24668 a1fc 08       		.uleb128 0x8
 24669 a1fd 82C40000 		.long	0xc482
 24670 a201 00       		.byte	0
 24671 a202 32       		.uleb128 0x32
 24672 a203 00000000 		.long	.LASF1232
 24673 a207 0C       		.byte	0xc
 24674 a208 ED02     		.value	0x2ed
 24675 a20a 00000000 		.long	.LASF1312
 24676 a20e 88C40000 		.long	0xc488
 24677 a212 01       		.byte	0x1
 24678 a213 1BA20000 		.long	0xa21b
 24679 a217 21A20000 		.long	0xa221
 24680 a21b 08       		.uleb128 0x8
 24681 a21c 71C40000 		.long	0xc471
 24682 a220 00       		.byte	0
 24683 a221 32       		.uleb128 0x32
 24684 a222 00000000 		.long	.LASF1232
 24685 a226 0C       		.byte	0xc
 24686 a227 F402     		.value	0x2f4
 24687 a229 00000000 		.long	.LASF1313
 24688 a22d 4FA10000 		.long	0xa14f
 24689 a231 01       		.byte	0x1
 24690 a232 3AA20000 		.long	0xa23a
 24691 a236 45A20000 		.long	0xa245
 24692 a23a 08       		.uleb128 0x8
 24693 a23b 71C40000 		.long	0xc471
 24694 a23f 09       		.uleb128 0x9
 24695 a240 28930000 		.long	0x9328
 24696 a244 00       		.byte	0
 24697 a245 32       		.uleb128 0x32
 24698 a246 00000000 		.long	.LASF1235
 24699 a24a 0C       		.byte	0xc
 24700 a24b F902     		.value	0x2f9
 24701 a24d 00000000 		.long	.LASF1314
 24702 a251 88C40000 		.long	0xc488
 24703 a255 01       		.byte	0x1
 24704 a256 5EA20000 		.long	0xa25e
 24705 a25a 64A20000 		.long	0xa264
 24706 a25e 08       		.uleb128 0x8
 24707 a25f 71C40000 		.long	0xc471
 24708 a263 00       		.byte	0
 24709 a264 32       		.uleb128 0x32
 24710 a265 00000000 		.long	.LASF1235
 24711 a269 0C       		.byte	0xc
 24712 a26a 0003     		.value	0x300
 24713 a26c 00000000 		.long	.LASF1315
 24714 a270 4FA10000 		.long	0xa14f
 24715 a274 01       		.byte	0x1
 24716 a275 7DA20000 		.long	0xa27d
 24717 a279 88A20000 		.long	0xa288
GAS LISTING /tmp/ccJUMvuF.s 			page 735


 24718 a27d 08       		.uleb128 0x8
 24719 a27e 71C40000 		.long	0xc471
 24720 a282 09       		.uleb128 0x9
 24721 a283 28930000 		.long	0x9328
 24722 a287 00       		.byte	0
 24723 a288 32       		.uleb128 0x32
 24724 a289 00000000 		.long	.LASF186
 24725 a28d 0C       		.byte	0xc
 24726 a28e 0503     		.value	0x305
 24727 a290 00000000 		.long	.LASF1316
 24728 a294 77A10000 		.long	0xa177
 24729 a298 01       		.byte	0x1
 24730 a299 A1A20000 		.long	0xa2a1
 24731 a29d ACA20000 		.long	0xa2ac
 24732 a2a1 08       		.uleb128 0x8
 24733 a2a2 82C40000 		.long	0xc482
 24734 a2a6 09       		.uleb128 0x9
 24735 a2a7 6AA10000 		.long	0xa16a
 24736 a2ab 00       		.byte	0
 24737 a2ac 32       		.uleb128 0x32
 24738 a2ad 00000000 		.long	.LASF197
 24739 a2b1 0C       		.byte	0xc
 24740 a2b2 0903     		.value	0x309
 24741 a2b4 00000000 		.long	.LASF1317
 24742 a2b8 88C40000 		.long	0xc488
 24743 a2bc 01       		.byte	0x1
 24744 a2bd C5A20000 		.long	0xa2c5
 24745 a2c1 D0A20000 		.long	0xa2d0
 24746 a2c5 08       		.uleb128 0x8
 24747 a2c6 71C40000 		.long	0xc471
 24748 a2ca 09       		.uleb128 0x9
 24749 a2cb 6AA10000 		.long	0xa16a
 24750 a2cf 00       		.byte	0
 24751 a2d0 32       		.uleb128 0x32
 24752 a2d1 00000000 		.long	.LASF1240
 24753 a2d5 0C       		.byte	0xc
 24754 a2d6 0D03     		.value	0x30d
 24755 a2d8 00000000 		.long	.LASF1318
 24756 a2dc 4FA10000 		.long	0xa14f
 24757 a2e0 01       		.byte	0x1
 24758 a2e1 E9A20000 		.long	0xa2e9
 24759 a2e5 F4A20000 		.long	0xa2f4
 24760 a2e9 08       		.uleb128 0x8
 24761 a2ea 82C40000 		.long	0xc482
 24762 a2ee 09       		.uleb128 0x9
 24763 a2ef 6AA10000 		.long	0xa16a
 24764 a2f3 00       		.byte	0
 24765 a2f4 32       		.uleb128 0x32
 24766 a2f5 00000000 		.long	.LASF1242
 24767 a2f9 0C       		.byte	0xc
 24768 a2fa 1103     		.value	0x311
 24769 a2fc 00000000 		.long	.LASF1319
 24770 a300 88C40000 		.long	0xc488
 24771 a304 01       		.byte	0x1
 24772 a305 0DA30000 		.long	0xa30d
 24773 a309 18A30000 		.long	0xa318
 24774 a30d 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 736


 24775 a30e 71C40000 		.long	0xc471
 24776 a312 09       		.uleb128 0x9
 24777 a313 6AA10000 		.long	0xa16a
 24778 a317 00       		.byte	0
 24779 a318 32       		.uleb128 0x32
 24780 a319 00000000 		.long	.LASF1244
 24781 a31d 0C       		.byte	0xc
 24782 a31e 1503     		.value	0x315
 24783 a320 00000000 		.long	.LASF1320
 24784 a324 4FA10000 		.long	0xa14f
 24785 a328 01       		.byte	0x1
 24786 a329 31A30000 		.long	0xa331
 24787 a32d 3CA30000 		.long	0xa33c
 24788 a331 08       		.uleb128 0x8
 24789 a332 82C40000 		.long	0xc482
 24790 a336 09       		.uleb128 0x9
 24791 a337 6AA10000 		.long	0xa16a
 24792 a33b 00       		.byte	0
 24793 a33c 32       		.uleb128 0x32
 24794 a33d 00000000 		.long	.LASF1246
 24795 a341 0C       		.byte	0xc
 24796 a342 1903     		.value	0x319
 24797 a344 00000000 		.long	.LASF1321
 24798 a348 77C40000 		.long	0xc477
 24799 a34c 01       		.byte	0x1
 24800 a34d 55A30000 		.long	0xa355
 24801 a351 5BA30000 		.long	0xa35b
 24802 a355 08       		.uleb128 0x8
 24803 a356 82C40000 		.long	0xc482
 24804 a35a 00       		.byte	0
 24805 a35b 35       		.uleb128 0x35
 24806 a35c 00000000 		.long	.LASF745
 24807 a360 CFC10000 		.long	0xc1cf
 24808 a364 35       		.uleb128 0x35
 24809 a365 00000000 		.long	.LASF1248
 24810 a369 76370000 		.long	0x3776
 24811 a36d 00       		.byte	0
 24812 a36e 16       		.uleb128 0x16
 24813 a36f 00000000 		.long	.LASF1322
 24814 a373 01       		.byte	0x1
 24815 a374 07       		.byte	0x7
 24816 a375 3A       		.byte	0x3a
 24817 a376 AFA40000 		.long	0xa4af
 24818 a37a 13       		.uleb128 0x13
 24819 a37b 00000000 		.long	.LASF57
 24820 a37f 07       		.byte	0x7
 24821 a380 3D       		.byte	0x3d
 24822 a381 85060000 		.long	0x685
 24823 a385 13       		.uleb128 0x13
 24824 a386 00000000 		.long	.LASF491
 24825 a38a 07       		.byte	0x7
 24826 a38b 3F       		.byte	0x3f
 24827 a38c 98C20000 		.long	0xc298
 24828 a390 13       		.uleb128 0x13
 24829 a391 00000000 		.long	.LASF1212
 24830 a395 07       		.byte	0x7
 24831 a396 40       		.byte	0x40
GAS LISTING /tmp/ccJUMvuF.s 			page 737


 24832 a397 9EC20000 		.long	0xc29e
 24833 a39b 13       		.uleb128 0x13
 24834 a39c 00000000 		.long	.LASF58
 24835 a3a0 07       		.byte	0x7
 24836 a3a1 41       		.byte	0x41
 24837 a3a2 A9C20000 		.long	0xc2a9
 24838 a3a6 13       		.uleb128 0x13
 24839 a3a7 00000000 		.long	.LASF59
 24840 a3ab 07       		.byte	0x7
 24841 a3ac 42       		.byte	0x42
 24842 a3ad AFC20000 		.long	0xc2af
 24843 a3b1 37       		.uleb128 0x37
 24844 a3b2 00000000 		.long	.LASF1213
 24845 a3b6 07       		.byte	0x7
 24846 a3b7 4F       		.byte	0x4f
 24847 a3b8 C0A30000 		.long	0xa3c0
 24848 a3bc C6A30000 		.long	0xa3c6
 24849 a3c0 08       		.uleb128 0x8
 24850 a3c1 B5C20000 		.long	0xc2b5
 24851 a3c5 00       		.byte	0
 24852 a3c6 37       		.uleb128 0x37
 24853 a3c7 00000000 		.long	.LASF1213
 24854 a3cb 07       		.byte	0x7
 24855 a3cc 51       		.byte	0x51
 24856 a3cd D5A30000 		.long	0xa3d5
 24857 a3d1 E0A30000 		.long	0xa3e0
 24858 a3d5 08       		.uleb128 0x8
 24859 a3d6 B5C20000 		.long	0xc2b5
 24860 a3da 09       		.uleb128 0x9
 24861 a3db BBC20000 		.long	0xc2bb
 24862 a3df 00       		.byte	0
 24863 a3e0 37       		.uleb128 0x37
 24864 a3e1 00000000 		.long	.LASF1214
 24865 a3e5 07       		.byte	0x7
 24866 a3e6 56       		.byte	0x56
 24867 a3e7 EFA30000 		.long	0xa3ef
 24868 a3eb FAA30000 		.long	0xa3fa
 24869 a3ef 08       		.uleb128 0x8
 24870 a3f0 B5C20000 		.long	0xc2b5
 24871 a3f4 08       		.uleb128 0x8
 24872 a3f5 28930000 		.long	0x9328
 24873 a3f9 00       		.byte	0
 24874 a3fa 0B       		.uleb128 0xb
 24875 a3fb 00000000 		.long	.LASF1215
 24876 a3ff 07       		.byte	0x7
 24877 a400 59       		.byte	0x59
 24878 a401 00000000 		.long	.LASF1323
 24879 a405 85A30000 		.long	0xa385
 24880 a409 11A40000 		.long	0xa411
 24881 a40d 1CA40000 		.long	0xa41c
 24882 a411 08       		.uleb128 0x8
 24883 a412 C1C20000 		.long	0xc2c1
 24884 a416 09       		.uleb128 0x9
 24885 a417 9BA30000 		.long	0xa39b
 24886 a41b 00       		.byte	0
 24887 a41c 0B       		.uleb128 0xb
 24888 a41d 00000000 		.long	.LASF1215
GAS LISTING /tmp/ccJUMvuF.s 			page 738


 24889 a421 07       		.byte	0x7
 24890 a422 5D       		.byte	0x5d
 24891 a423 00000000 		.long	.LASF1324
 24892 a427 90A30000 		.long	0xa390
 24893 a42b 33A40000 		.long	0xa433
 24894 a42f 3EA40000 		.long	0xa43e
 24895 a433 08       		.uleb128 0x8
 24896 a434 C1C20000 		.long	0xc2c1
 24897 a438 09       		.uleb128 0x9
 24898 a439 A6A30000 		.long	0xa3a6
 24899 a43d 00       		.byte	0
 24900 a43e 0B       		.uleb128 0xb
 24901 a43f 00000000 		.long	.LASF537
 24902 a443 07       		.byte	0x7
 24903 a444 63       		.byte	0x63
 24904 a445 00000000 		.long	.LASF1325
 24905 a449 85A30000 		.long	0xa385
 24906 a44d 55A40000 		.long	0xa455
 24907 a451 65A40000 		.long	0xa465
 24908 a455 08       		.uleb128 0x8
 24909 a456 B5C20000 		.long	0xc2b5
 24910 a45a 09       		.uleb128 0x9
 24911 a45b 7AA30000 		.long	0xa37a
 24912 a45f 09       		.uleb128 0x9
 24913 a460 C9B70000 		.long	0xb7c9
 24914 a464 00       		.byte	0
 24915 a465 0A       		.uleb128 0xa
 24916 a466 00000000 		.long	.LASF540
 24917 a46a 07       		.byte	0x7
 24918 a46b 6D       		.byte	0x6d
 24919 a46c 00000000 		.long	.LASF1326
 24920 a470 78A40000 		.long	0xa478
 24921 a474 88A40000 		.long	0xa488
 24922 a478 08       		.uleb128 0x8
 24923 a479 B5C20000 		.long	0xc2b5
 24924 a47d 09       		.uleb128 0x9
 24925 a47e 85A30000 		.long	0xa385
 24926 a482 09       		.uleb128 0x9
 24927 a483 7AA30000 		.long	0xa37a
 24928 a487 00       		.byte	0
 24929 a488 0B       		.uleb128 0xb
 24930 a489 00000000 		.long	.LASF171
 24931 a48d 07       		.byte	0x7
 24932 a48e 71       		.byte	0x71
 24933 a48f 00000000 		.long	.LASF1327
 24934 a493 7AA30000 		.long	0xa37a
 24935 a497 9FA40000 		.long	0xa49f
 24936 a49b A5A40000 		.long	0xa4a5
 24937 a49f 08       		.uleb128 0x8
 24938 a4a0 C1C20000 		.long	0xc2c1
 24939 a4a4 00       		.byte	0
 24940 a4a5 18       		.uleb128 0x18
 24941 a4a6 5F547000 		.string	"_Tp"
 24942 a4aa 68930000 		.long	0x9368
 24943 a4ae 00       		.byte	0
 24944 a4af 11       		.uleb128 0x11
 24945 a4b0 6EA30000 		.long	0xa36e
GAS LISTING /tmp/ccJUMvuF.s 			page 739


 24946 a4b4 16       		.uleb128 0x16
 24947 a4b5 00000000 		.long	.LASF1328
 24948 a4b9 01       		.byte	0x1
 24949 a4ba 3A       		.byte	0x3a
 24950 a4bb 5F       		.byte	0x5f
 24951 a4bc C4A50000 		.long	0xa5c4
 24952 a4c0 12       		.uleb128 0x12
 24953 a4c1 3A       		.byte	0x3a
 24954 a4c2 5F       		.byte	0x5f
 24955 a4c3 94440000 		.long	0x4494
 24956 a4c7 12       		.uleb128 0x12
 24957 a4c8 3A       		.byte	0x3a
 24958 a4c9 5F       		.byte	0x5f
 24959 a4ca B8440000 		.long	0x44b8
 24960 a4ce 12       		.uleb128 0x12
 24961 a4cf 3A       		.byte	0x3a
 24962 a4d0 5F       		.byte	0x5f
 24963 a4d1 D8440000 		.long	0x44d8
 24964 a4d5 25       		.uleb128 0x25
 24965 a4d6 53430000 		.long	0x4353
 24966 a4da 00       		.byte	0
 24967 a4db 13       		.uleb128 0x13
 24968 a4dc 00000000 		.long	.LASF19
 24969 a4e0 3A       		.byte	0x3a
 24970 a4e1 67       		.byte	0x67
 24971 a4e2 5F430000 		.long	0x435f
 24972 a4e6 13       		.uleb128 0x13
 24973 a4e7 00000000 		.long	.LASF491
 24974 a4eb 3A       		.byte	0x3a
 24975 a4ec 68       		.byte	0x68
 24976 a4ed 76430000 		.long	0x4376
 24977 a4f1 13       		.uleb128 0x13
 24978 a4f2 00000000 		.long	.LASF58
 24979 a4f6 3A       		.byte	0x3a
 24980 a4f7 6D       		.byte	0x6d
 24981 a4f8 E5C20000 		.long	0xc2e5
 24982 a4fc 13       		.uleb128 0x13
 24983 a4fd 00000000 		.long	.LASF59
 24984 a501 3A       		.byte	0x3a
 24985 a502 6E       		.byte	0x6e
 24986 a503 EBC20000 		.long	0xc2eb
 24987 a507 11       		.uleb128 0x11
 24988 a508 DBA40000 		.long	0xa4db
 24989 a50c 4E       		.uleb128 0x4e
 24990 a50d 00000000 		.long	.LASF1279
 24991 a511 3A       		.byte	0x3a
 24992 a512 8B       		.byte	0x8b
 24993 a513 00000000 		.long	.LASF1329
 24994 a517 25420000 		.long	0x4225
 24995 a51b 25A50000 		.long	0xa525
 24996 a51f 09       		.uleb128 0x9
 24997 a520 CDC20000 		.long	0xc2cd
 24998 a524 00       		.byte	0
 24999 a525 1C       		.uleb128 0x1c
 25000 a526 00000000 		.long	.LASF1281
 25001 a52a 3A       		.byte	0x3a
 25002 a52b 8E       		.byte	0x8e
GAS LISTING /tmp/ccJUMvuF.s 			page 740


 25003 a52c 00000000 		.long	.LASF1330
 25004 a530 3FA50000 		.long	0xa53f
 25005 a534 09       		.uleb128 0x9
 25006 a535 DFC20000 		.long	0xc2df
 25007 a539 09       		.uleb128 0x9
 25008 a53a DFC20000 		.long	0xc2df
 25009 a53e 00       		.byte	0
 25010 a53f 2A       		.uleb128 0x2a
 25011 a540 00000000 		.long	.LASF1283
 25012 a544 3A       		.byte	0x3a
 25013 a545 91       		.byte	0x91
 25014 a546 00000000 		.long	.LASF1331
 25015 a54a 30930000 		.long	0x9330
 25016 a54e 2A       		.uleb128 0x2a
 25017 a54f 00000000 		.long	.LASF1286
 25018 a553 3A       		.byte	0x3a
 25019 a554 94       		.byte	0x94
 25020 a555 00000000 		.long	.LASF1332
 25021 a559 30930000 		.long	0x9330
 25022 a55d 2A       		.uleb128 0x2a
 25023 a55e 00000000 		.long	.LASF1288
 25024 a562 3A       		.byte	0x3a
 25025 a563 97       		.byte	0x97
 25026 a564 00000000 		.long	.LASF1333
 25027 a568 30930000 		.long	0x9330
 25028 a56c 2A       		.uleb128 0x2a
 25029 a56d 00000000 		.long	.LASF1290
 25030 a571 3A       		.byte	0x3a
 25031 a572 9A       		.byte	0x9a
 25032 a573 00000000 		.long	.LASF1334
 25033 a577 30930000 		.long	0x9330
 25034 a57b 2A       		.uleb128 0x2a
 25035 a57c 00000000 		.long	.LASF1292
 25036 a580 3A       		.byte	0x3a
 25037 a581 9D       		.byte	0x9d
 25038 a582 00000000 		.long	.LASF1335
 25039 a586 30930000 		.long	0x9330
 25040 a58a 2A       		.uleb128 0x2a
 25041 a58b 00000000 		.long	.LASF1294
 25042 a58f 3A       		.byte	0x3a
 25043 a590 A0       		.byte	0xa0
 25044 a591 00000000 		.long	.LASF1336
 25045 a595 30930000 		.long	0x9330
 25046 a599 16       		.uleb128 0x16
 25047 a59a 00000000 		.long	.LASF650
 25048 a59e 01       		.byte	0x1
 25049 a59f 3A       		.byte	0x3a
 25050 a5a0 A8       		.byte	0xa8
 25051 a5a1 BAA50000 		.long	0xa5ba
 25052 a5a5 13       		.uleb128 0x13
 25053 a5a6 00000000 		.long	.LASF493
 25054 a5aa 3A       		.byte	0x3a
 25055 a5ab A9       		.byte	0xa9
 25056 a5ac 0C450000 		.long	0x450c
 25057 a5b0 18       		.uleb128 0x18
 25058 a5b1 5F547000 		.string	"_Tp"
 25059 a5b5 68930000 		.long	0x9368
GAS LISTING /tmp/ccJUMvuF.s 			page 741


 25060 a5b9 00       		.byte	0
 25061 a5ba 35       		.uleb128 0x35
 25062 a5bb 00000000 		.long	.LASF303
 25063 a5bf 25420000 		.long	0x4225
 25064 a5c3 00       		.byte	0
 25065 a5c4 3B       		.uleb128 0x3b
 25066 a5c5 00000000 		.long	.LASF1337
 25067 a5c9 08       		.byte	0x8
 25068 a5ca 0C       		.byte	0xc
 25069 a5cb C502     		.value	0x2c5
 25070 a5cd E3A70000 		.long	0xa7e3
 25071 a5d1 62       		.uleb128 0x62
 25072 a5d2 00000000 		.long	.LASF1228
 25073 a5d6 0C       		.byte	0xc
 25074 a5d7 C802     		.value	0x2c8
 25075 a5d9 98C20000 		.long	0xc298
 25076 a5dd 00       		.byte	0
 25077 a5de 02       		.byte	0x2
 25078 a5df 44       		.uleb128 0x44
 25079 a5e0 00000000 		.long	.LASF498
 25080 a5e4 0C       		.byte	0xc
 25081 a5e5 D002     		.value	0x2d0
 25082 a5e7 BD550000 		.long	0x55bd
 25083 a5eb 01       		.byte	0x1
 25084 a5ec 44       		.uleb128 0x44
 25085 a5ed 00000000 		.long	.LASF58
 25086 a5f1 0C       		.byte	0xc
 25087 a5f2 D102     		.value	0x2d1
 25088 a5f4 D3550000 		.long	0x55d3
 25089 a5f8 01       		.byte	0x1
 25090 a5f9 44       		.uleb128 0x44
 25091 a5fa 00000000 		.long	.LASF491
 25092 a5fe 0C       		.byte	0xc
 25093 a5ff D202     		.value	0x2d2
 25094 a601 C8550000 		.long	0x55c8
 25095 a605 01       		.byte	0x1
 25096 a606 30       		.uleb128 0x30
 25097 a607 00000000 		.long	.LASF1229
 25098 a60b 0C       		.byte	0xc
 25099 a60c D402     		.value	0x2d4
 25100 a60e 01       		.byte	0x1
 25101 a60f 17A60000 		.long	0xa617
 25102 a613 1DA60000 		.long	0xa61d
 25103 a617 08       		.uleb128 0x8
 25104 a618 97C50000 		.long	0xc597
 25105 a61c 00       		.byte	0
 25106 a61d 31       		.uleb128 0x31
 25107 a61e 00000000 		.long	.LASF1229
 25108 a622 0C       		.byte	0xc
 25109 a623 D802     		.value	0x2d8
 25110 a625 01       		.byte	0x1
 25111 a626 2EA60000 		.long	0xa62e
 25112 a62a 39A60000 		.long	0xa639
 25113 a62e 08       		.uleb128 0x8
 25114 a62f 97C50000 		.long	0xc597
 25115 a633 09       		.uleb128 0x9
 25116 a634 9DC50000 		.long	0xc59d
GAS LISTING /tmp/ccJUMvuF.s 			page 742


 25117 a638 00       		.byte	0
 25118 a639 32       		.uleb128 0x32
 25119 a63a 00000000 		.long	.LASF845
 25120 a63e 0C       		.byte	0xc
 25121 a63f E502     		.value	0x2e5
 25122 a641 00000000 		.long	.LASF1338
 25123 a645 ECA50000 		.long	0xa5ec
 25124 a649 01       		.byte	0x1
 25125 a64a 52A60000 		.long	0xa652
 25126 a64e 58A60000 		.long	0xa658
 25127 a652 08       		.uleb128 0x8
 25128 a653 A8C50000 		.long	0xc5a8
 25129 a657 00       		.byte	0
 25130 a658 32       		.uleb128 0x32
 25131 a659 00000000 		.long	.LASF847
 25132 a65d 0C       		.byte	0xc
 25133 a65e E902     		.value	0x2e9
 25134 a660 00000000 		.long	.LASF1339
 25135 a664 F9A50000 		.long	0xa5f9
 25136 a668 01       		.byte	0x1
 25137 a669 71A60000 		.long	0xa671
 25138 a66d 77A60000 		.long	0xa677
 25139 a671 08       		.uleb128 0x8
 25140 a672 A8C50000 		.long	0xc5a8
 25141 a676 00       		.byte	0
 25142 a677 32       		.uleb128 0x32
 25143 a678 00000000 		.long	.LASF1232
 25144 a67c 0C       		.byte	0xc
 25145 a67d ED02     		.value	0x2ed
 25146 a67f 00000000 		.long	.LASF1340
 25147 a683 AEC50000 		.long	0xc5ae
 25148 a687 01       		.byte	0x1
 25149 a688 90A60000 		.long	0xa690
 25150 a68c 96A60000 		.long	0xa696
 25151 a690 08       		.uleb128 0x8
 25152 a691 97C50000 		.long	0xc597
 25153 a695 00       		.byte	0
 25154 a696 32       		.uleb128 0x32
 25155 a697 00000000 		.long	.LASF1232
 25156 a69b 0C       		.byte	0xc
 25157 a69c F402     		.value	0x2f4
 25158 a69e 00000000 		.long	.LASF1341
 25159 a6a2 C4A50000 		.long	0xa5c4
 25160 a6a6 01       		.byte	0x1
 25161 a6a7 AFA60000 		.long	0xa6af
 25162 a6ab BAA60000 		.long	0xa6ba
 25163 a6af 08       		.uleb128 0x8
 25164 a6b0 97C50000 		.long	0xc597
 25165 a6b4 09       		.uleb128 0x9
 25166 a6b5 28930000 		.long	0x9328
 25167 a6b9 00       		.byte	0
 25168 a6ba 32       		.uleb128 0x32
 25169 a6bb 00000000 		.long	.LASF1235
 25170 a6bf 0C       		.byte	0xc
 25171 a6c0 F902     		.value	0x2f9
 25172 a6c2 00000000 		.long	.LASF1342
 25173 a6c6 AEC50000 		.long	0xc5ae
GAS LISTING /tmp/ccJUMvuF.s 			page 743


 25174 a6ca 01       		.byte	0x1
 25175 a6cb D3A60000 		.long	0xa6d3
 25176 a6cf D9A60000 		.long	0xa6d9
 25177 a6d3 08       		.uleb128 0x8
 25178 a6d4 97C50000 		.long	0xc597
 25179 a6d8 00       		.byte	0
 25180 a6d9 32       		.uleb128 0x32
 25181 a6da 00000000 		.long	.LASF1235
 25182 a6de 0C       		.byte	0xc
 25183 a6df 0003     		.value	0x300
 25184 a6e1 00000000 		.long	.LASF1343
 25185 a6e5 C4A50000 		.long	0xa5c4
 25186 a6e9 01       		.byte	0x1
 25187 a6ea F2A60000 		.long	0xa6f2
 25188 a6ee FDA60000 		.long	0xa6fd
 25189 a6f2 08       		.uleb128 0x8
 25190 a6f3 97C50000 		.long	0xc597
 25191 a6f7 09       		.uleb128 0x9
 25192 a6f8 28930000 		.long	0x9328
 25193 a6fc 00       		.byte	0
 25194 a6fd 32       		.uleb128 0x32
 25195 a6fe 00000000 		.long	.LASF186
 25196 a702 0C       		.byte	0xc
 25197 a703 0503     		.value	0x305
 25198 a705 00000000 		.long	.LASF1344
 25199 a709 ECA50000 		.long	0xa5ec
 25200 a70d 01       		.byte	0x1
 25201 a70e 16A70000 		.long	0xa716
 25202 a712 21A70000 		.long	0xa721
 25203 a716 08       		.uleb128 0x8
 25204 a717 A8C50000 		.long	0xc5a8
 25205 a71b 09       		.uleb128 0x9
 25206 a71c DFA50000 		.long	0xa5df
 25207 a720 00       		.byte	0
 25208 a721 32       		.uleb128 0x32
 25209 a722 00000000 		.long	.LASF197
 25210 a726 0C       		.byte	0xc
 25211 a727 0903     		.value	0x309
 25212 a729 00000000 		.long	.LASF1345
 25213 a72d AEC50000 		.long	0xc5ae
 25214 a731 01       		.byte	0x1
 25215 a732 3AA70000 		.long	0xa73a
 25216 a736 45A70000 		.long	0xa745
 25217 a73a 08       		.uleb128 0x8
 25218 a73b 97C50000 		.long	0xc597
 25219 a73f 09       		.uleb128 0x9
 25220 a740 DFA50000 		.long	0xa5df
 25221 a744 00       		.byte	0
 25222 a745 32       		.uleb128 0x32
 25223 a746 00000000 		.long	.LASF1240
 25224 a74a 0C       		.byte	0xc
 25225 a74b 0D03     		.value	0x30d
 25226 a74d 00000000 		.long	.LASF1346
 25227 a751 C4A50000 		.long	0xa5c4
 25228 a755 01       		.byte	0x1
 25229 a756 5EA70000 		.long	0xa75e
 25230 a75a 69A70000 		.long	0xa769
GAS LISTING /tmp/ccJUMvuF.s 			page 744


 25231 a75e 08       		.uleb128 0x8
 25232 a75f A8C50000 		.long	0xc5a8
 25233 a763 09       		.uleb128 0x9
 25234 a764 DFA50000 		.long	0xa5df
 25235 a768 00       		.byte	0
 25236 a769 32       		.uleb128 0x32
 25237 a76a 00000000 		.long	.LASF1242
 25238 a76e 0C       		.byte	0xc
 25239 a76f 1103     		.value	0x311
 25240 a771 00000000 		.long	.LASF1347
 25241 a775 AEC50000 		.long	0xc5ae
 25242 a779 01       		.byte	0x1
 25243 a77a 82A70000 		.long	0xa782
 25244 a77e 8DA70000 		.long	0xa78d
 25245 a782 08       		.uleb128 0x8
 25246 a783 97C50000 		.long	0xc597
 25247 a787 09       		.uleb128 0x9
 25248 a788 DFA50000 		.long	0xa5df
 25249 a78c 00       		.byte	0
 25250 a78d 32       		.uleb128 0x32
 25251 a78e 00000000 		.long	.LASF1244
 25252 a792 0C       		.byte	0xc
 25253 a793 1503     		.value	0x315
 25254 a795 00000000 		.long	.LASF1348
 25255 a799 C4A50000 		.long	0xa5c4
 25256 a79d 01       		.byte	0x1
 25257 a79e A6A70000 		.long	0xa7a6
 25258 a7a2 B1A70000 		.long	0xa7b1
 25259 a7a6 08       		.uleb128 0x8
 25260 a7a7 A8C50000 		.long	0xc5a8
 25261 a7ab 09       		.uleb128 0x9
 25262 a7ac DFA50000 		.long	0xa5df
 25263 a7b0 00       		.byte	0
 25264 a7b1 32       		.uleb128 0x32
 25265 a7b2 00000000 		.long	.LASF1246
 25266 a7b6 0C       		.byte	0xc
 25267 a7b7 1903     		.value	0x319
 25268 a7b9 00000000 		.long	.LASF1349
 25269 a7bd 9DC50000 		.long	0xc59d
 25270 a7c1 01       		.byte	0x1
 25271 a7c2 CAA70000 		.long	0xa7ca
 25272 a7c6 D0A70000 		.long	0xa7d0
 25273 a7ca 08       		.uleb128 0x8
 25274 a7cb A8C50000 		.long	0xc5a8
 25275 a7cf 00       		.byte	0
 25276 a7d0 35       		.uleb128 0x35
 25277 a7d1 00000000 		.long	.LASF745
 25278 a7d5 98C20000 		.long	0xc298
 25279 a7d9 35       		.uleb128 0x35
 25280 a7da 00000000 		.long	.LASF1248
 25281 a7de E8470000 		.long	0x47e8
 25282 a7e2 00       		.byte	0
 25283 a7e3 14       		.uleb128 0x14
 25284 a7e4 00000000 		.long	.LASF1350
 25285 a7e8 11       		.uleb128 0x11
 25286 a7e9 169F0000 		.long	0x9f16
 25287 a7ed 3E       		.uleb128 0x3e
GAS LISTING /tmp/ccJUMvuF.s 			page 745


 25288 a7ee 00000000 		.long	.LASF1351
 25289 a7f2 04       		.byte	0x4
 25290 a7f3 3B       		.byte	0x3b
 25291 a7f4 31       		.byte	0x31
 25292 a7f5 0CA80000 		.long	0xa80c
 25293 a7f9 3F       		.uleb128 0x3f
 25294 a7fa 00000000 		.long	.LASF1352
 25295 a7fe 00       		.sleb128 0
 25296 a7ff 3F       		.uleb128 0x3f
 25297 a800 00000000 		.long	.LASF1353
 25298 a804 01       		.sleb128 1
 25299 a805 3F       		.uleb128 0x3f
 25300 a806 00000000 		.long	.LASF1354
 25301 a80a 02       		.sleb128 2
 25302 a80b 00       		.byte	0
 25303 a80c 8501     		.uleb128 0x85
 25304 a80e 00000000 		.long	.LASF1355
 25305 a812 3B       		.byte	0x3b
 25306 a813 35       		.byte	0x35
 25307 a814 19A80000 		.long	0xa819
 25308 a818 02       		.byte	0x2
 25309 a819 11       		.uleb128 0x11
 25310 a81a EDA70000 		.long	0xa7ed
 25311 a81e 11       		.uleb128 0x11
 25312 a81f 4FA10000 		.long	0xa14f
 25313 a823 11       		.uleb128 0x11
 25314 a824 C4A50000 		.long	0xa5c4
 25315 a828 16       		.uleb128 0x16
 25316 a829 00000000 		.long	.LASF1356
 25317 a82d 01       		.byte	0x1
 25318 a82e 07       		.byte	0x7
 25319 a82f 3A       		.byte	0x3a
 25320 a830 69A90000 		.long	0xa969
 25321 a834 13       		.uleb128 0x13
 25322 a835 00000000 		.long	.LASF57
 25323 a839 07       		.byte	0x7
 25324 a83a 3D       		.byte	0x3d
 25325 a83b 85060000 		.long	0x685
 25326 a83f 13       		.uleb128 0x13
 25327 a840 00000000 		.long	.LASF491
 25328 a844 07       		.byte	0x7
 25329 a845 3F       		.byte	0x3f
 25330 a846 00C80000 		.long	0xc800
 25331 a84a 13       		.uleb128 0x13
 25332 a84b 00000000 		.long	.LASF1212
 25333 a84f 07       		.byte	0x7
 25334 a850 40       		.byte	0x40
 25335 a851 3FC50000 		.long	0xc53f
 25336 a855 13       		.uleb128 0x13
 25337 a856 00000000 		.long	.LASF58
 25338 a85a 07       		.byte	0x7
 25339 a85b 41       		.byte	0x41
 25340 a85c 06C80000 		.long	0xc806
 25341 a860 13       		.uleb128 0x13
 25342 a861 00000000 		.long	.LASF59
 25343 a865 07       		.byte	0x7
 25344 a866 42       		.byte	0x42
GAS LISTING /tmp/ccJUMvuF.s 			page 746


 25345 a867 0CC80000 		.long	0xc80c
 25346 a86b 37       		.uleb128 0x37
 25347 a86c 00000000 		.long	.LASF1213
 25348 a870 07       		.byte	0x7
 25349 a871 4F       		.byte	0x4f
 25350 a872 7AA80000 		.long	0xa87a
 25351 a876 80A80000 		.long	0xa880
 25352 a87a 08       		.uleb128 0x8
 25353 a87b 12C80000 		.long	0xc812
 25354 a87f 00       		.byte	0
 25355 a880 37       		.uleb128 0x37
 25356 a881 00000000 		.long	.LASF1213
 25357 a885 07       		.byte	0x7
 25358 a886 51       		.byte	0x51
 25359 a887 8FA80000 		.long	0xa88f
 25360 a88b 9AA80000 		.long	0xa89a
 25361 a88f 08       		.uleb128 0x8
 25362 a890 12C80000 		.long	0xc812
 25363 a894 09       		.uleb128 0x9
 25364 a895 18C80000 		.long	0xc818
 25365 a899 00       		.byte	0
 25366 a89a 37       		.uleb128 0x37
 25367 a89b 00000000 		.long	.LASF1214
 25368 a89f 07       		.byte	0x7
 25369 a8a0 56       		.byte	0x56
 25370 a8a1 A9A80000 		.long	0xa8a9
 25371 a8a5 B4A80000 		.long	0xa8b4
 25372 a8a9 08       		.uleb128 0x8
 25373 a8aa 12C80000 		.long	0xc812
 25374 a8ae 08       		.uleb128 0x8
 25375 a8af 28930000 		.long	0x9328
 25376 a8b3 00       		.byte	0
 25377 a8b4 0B       		.uleb128 0xb
 25378 a8b5 00000000 		.long	.LASF1215
 25379 a8b9 07       		.byte	0x7
 25380 a8ba 59       		.byte	0x59
 25381 a8bb 00000000 		.long	.LASF1357
 25382 a8bf 3FA80000 		.long	0xa83f
 25383 a8c3 CBA80000 		.long	0xa8cb
 25384 a8c7 D6A80000 		.long	0xa8d6
 25385 a8cb 08       		.uleb128 0x8
 25386 a8cc 1EC80000 		.long	0xc81e
 25387 a8d0 09       		.uleb128 0x9
 25388 a8d1 55A80000 		.long	0xa855
 25389 a8d5 00       		.byte	0
 25390 a8d6 0B       		.uleb128 0xb
 25391 a8d7 00000000 		.long	.LASF1215
 25392 a8db 07       		.byte	0x7
 25393 a8dc 5D       		.byte	0x5d
 25394 a8dd 00000000 		.long	.LASF1358
 25395 a8e1 4AA80000 		.long	0xa84a
 25396 a8e5 EDA80000 		.long	0xa8ed
 25397 a8e9 F8A80000 		.long	0xa8f8
 25398 a8ed 08       		.uleb128 0x8
 25399 a8ee 1EC80000 		.long	0xc81e
 25400 a8f2 09       		.uleb128 0x9
 25401 a8f3 60A80000 		.long	0xa860
GAS LISTING /tmp/ccJUMvuF.s 			page 747


 25402 a8f7 00       		.byte	0
 25403 a8f8 0B       		.uleb128 0xb
 25404 a8f9 00000000 		.long	.LASF537
 25405 a8fd 07       		.byte	0x7
 25406 a8fe 63       		.byte	0x63
 25407 a8ff 00000000 		.long	.LASF1359
 25408 a903 3FA80000 		.long	0xa83f
 25409 a907 0FA90000 		.long	0xa90f
 25410 a90b 1FA90000 		.long	0xa91f
 25411 a90f 08       		.uleb128 0x8
 25412 a910 12C80000 		.long	0xc812
 25413 a914 09       		.uleb128 0x9
 25414 a915 34A80000 		.long	0xa834
 25415 a919 09       		.uleb128 0x9
 25416 a91a C9B70000 		.long	0xb7c9
 25417 a91e 00       		.byte	0
 25418 a91f 0A       		.uleb128 0xa
 25419 a920 00000000 		.long	.LASF540
 25420 a924 07       		.byte	0x7
 25421 a925 6D       		.byte	0x6d
 25422 a926 00000000 		.long	.LASF1360
 25423 a92a 32A90000 		.long	0xa932
 25424 a92e 42A90000 		.long	0xa942
 25425 a932 08       		.uleb128 0x8
 25426 a933 12C80000 		.long	0xc812
 25427 a937 09       		.uleb128 0x9
 25428 a938 3FA80000 		.long	0xa83f
 25429 a93c 09       		.uleb128 0x9
 25430 a93d 34A80000 		.long	0xa834
 25431 a941 00       		.byte	0
 25432 a942 0B       		.uleb128 0xb
 25433 a943 00000000 		.long	.LASF171
 25434 a947 07       		.byte	0x7
 25435 a948 71       		.byte	0x71
 25436 a949 00000000 		.long	.LASF1361
 25437 a94d 34A80000 		.long	0xa834
 25438 a951 59A90000 		.long	0xa959
 25439 a955 5FA90000 		.long	0xa95f
 25440 a959 08       		.uleb128 0x8
 25441 a95a 1EC80000 		.long	0xc81e
 25442 a95e 00       		.byte	0
 25443 a95f 18       		.uleb128 0x18
 25444 a960 5F547000 		.string	"_Tp"
 25445 a964 5A930000 		.long	0x935a
 25446 a968 00       		.byte	0
 25447 a969 11       		.uleb128 0x11
 25448 a96a 28A80000 		.long	0xa828
 25449 a96e 16       		.uleb128 0x16
 25450 a96f 00000000 		.long	.LASF1362
 25451 a973 01       		.byte	0x1
 25452 a974 3A       		.byte	0x3a
 25453 a975 5F       		.byte	0x5f
 25454 a976 7EAA0000 		.long	0xaa7e
 25455 a97a 12       		.uleb128 0x12
 25456 a97b 3A       		.byte	0x3a
 25457 a97c 5F       		.byte	0x5f
 25458 a97d 99710000 		.long	0x7199
GAS LISTING /tmp/ccJUMvuF.s 			page 748


 25459 a981 12       		.uleb128 0x12
 25460 a982 3A       		.byte	0x3a
 25461 a983 5F       		.byte	0x5f
 25462 a984 BD710000 		.long	0x71bd
 25463 a988 12       		.uleb128 0x12
 25464 a989 3A       		.byte	0x3a
 25465 a98a 5F       		.byte	0x5f
 25466 a98b DD710000 		.long	0x71dd
 25467 a98f 25       		.uleb128 0x25
 25468 a990 58700000 		.long	0x7058
 25469 a994 00       		.byte	0
 25470 a995 13       		.uleb128 0x13
 25471 a996 00000000 		.long	.LASF19
 25472 a99a 3A       		.byte	0x3a
 25473 a99b 67       		.byte	0x67
 25474 a99c 64700000 		.long	0x7064
 25475 a9a0 13       		.uleb128 0x13
 25476 a9a1 00000000 		.long	.LASF491
 25477 a9a5 3A       		.byte	0x3a
 25478 a9a6 68       		.byte	0x68
 25479 a9a7 7B700000 		.long	0x707b
 25480 a9ab 13       		.uleb128 0x13
 25481 a9ac 00000000 		.long	.LASF58
 25482 a9b0 3A       		.byte	0x3a
 25483 a9b1 6D       		.byte	0x6d
 25484 a9b2 42C80000 		.long	0xc842
 25485 a9b6 13       		.uleb128 0x13
 25486 a9b7 00000000 		.long	.LASF59
 25487 a9bb 3A       		.byte	0x3a
 25488 a9bc 6E       		.byte	0x6e
 25489 a9bd 48C80000 		.long	0xc848
 25490 a9c1 11       		.uleb128 0x11
 25491 a9c2 95A90000 		.long	0xa995
 25492 a9c6 4E       		.uleb128 0x4e
 25493 a9c7 00000000 		.long	.LASF1279
 25494 a9cb 3A       		.byte	0x3a
 25495 a9cc 8B       		.byte	0x8b
 25496 a9cd 00000000 		.long	.LASF1363
 25497 a9d1 2A6F0000 		.long	0x6f2a
 25498 a9d5 DFA90000 		.long	0xa9df
 25499 a9d9 09       		.uleb128 0x9
 25500 a9da 2AC80000 		.long	0xc82a
 25501 a9de 00       		.byte	0
 25502 a9df 1C       		.uleb128 0x1c
 25503 a9e0 00000000 		.long	.LASF1281
 25504 a9e4 3A       		.byte	0x3a
 25505 a9e5 8E       		.byte	0x8e
 25506 a9e6 00000000 		.long	.LASF1364
 25507 a9ea F9A90000 		.long	0xa9f9
 25508 a9ee 09       		.uleb128 0x9
 25509 a9ef 3CC80000 		.long	0xc83c
 25510 a9f3 09       		.uleb128 0x9
 25511 a9f4 3CC80000 		.long	0xc83c
 25512 a9f8 00       		.byte	0
 25513 a9f9 2A       		.uleb128 0x2a
 25514 a9fa 00000000 		.long	.LASF1283
 25515 a9fe 3A       		.byte	0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 749


 25516 a9ff 91       		.byte	0x91
 25517 aa00 00000000 		.long	.LASF1365
 25518 aa04 30930000 		.long	0x9330
 25519 aa08 2A       		.uleb128 0x2a
 25520 aa09 00000000 		.long	.LASF1286
 25521 aa0d 3A       		.byte	0x3a
 25522 aa0e 94       		.byte	0x94
 25523 aa0f 00000000 		.long	.LASF1366
 25524 aa13 30930000 		.long	0x9330
 25525 aa17 2A       		.uleb128 0x2a
 25526 aa18 00000000 		.long	.LASF1288
 25527 aa1c 3A       		.byte	0x3a
 25528 aa1d 97       		.byte	0x97
 25529 aa1e 00000000 		.long	.LASF1367
 25530 aa22 30930000 		.long	0x9330
 25531 aa26 2A       		.uleb128 0x2a
 25532 aa27 00000000 		.long	.LASF1290
 25533 aa2b 3A       		.byte	0x3a
 25534 aa2c 9A       		.byte	0x9a
 25535 aa2d 00000000 		.long	.LASF1368
 25536 aa31 30930000 		.long	0x9330
 25537 aa35 2A       		.uleb128 0x2a
 25538 aa36 00000000 		.long	.LASF1292
 25539 aa3a 3A       		.byte	0x3a
 25540 aa3b 9D       		.byte	0x9d
 25541 aa3c 00000000 		.long	.LASF1369
 25542 aa40 30930000 		.long	0x9330
 25543 aa44 2A       		.uleb128 0x2a
 25544 aa45 00000000 		.long	.LASF1294
 25545 aa49 3A       		.byte	0x3a
 25546 aa4a A0       		.byte	0xa0
 25547 aa4b 00000000 		.long	.LASF1370
 25548 aa4f 30930000 		.long	0x9330
 25549 aa53 16       		.uleb128 0x16
 25550 aa54 00000000 		.long	.LASF943
 25551 aa58 01       		.byte	0x1
 25552 aa59 3A       		.byte	0x3a
 25553 aa5a A8       		.byte	0xa8
 25554 aa5b 74AA0000 		.long	0xaa74
 25555 aa5f 13       		.uleb128 0x13
 25556 aa60 00000000 		.long	.LASF493
 25557 aa64 3A       		.byte	0x3a
 25558 aa65 A9       		.byte	0xa9
 25559 aa66 11720000 		.long	0x7211
 25560 aa6a 18       		.uleb128 0x18
 25561 aa6b 5F547000 		.string	"_Tp"
 25562 aa6f 5A930000 		.long	0x935a
 25563 aa73 00       		.byte	0
 25564 aa74 35       		.uleb128 0x35
 25565 aa75 00000000 		.long	.LASF303
 25566 aa79 2A6F0000 		.long	0x6f2a
 25567 aa7d 00       		.byte	0
 25568 aa7e 14       		.uleb128 0x14
 25569 aa7f 00000000 		.long	.LASF1371
 25570 aa83 14       		.uleb128 0x14
 25571 aa84 00000000 		.long	.LASF1372
 25572 aa88 11       		.uleb128 0x11
GAS LISTING /tmp/ccJUMvuF.s 			page 750


 25573 aa89 D3980000 		.long	0x98d3
 25574 aa8d 11       		.uleb128 0x11
 25575 aa8e B4960000 		.long	0x96b4
 25576 aa92 16       		.uleb128 0x16
 25577 aa93 00000000 		.long	.LASF1373
 25578 aa97 01       		.byte	0x1
 25579 aa98 3C       		.byte	0x3c
 25580 aa99 2F       		.byte	0x2f
 25581 aa9a AAAA0000 		.long	0xaaaa
 25582 aa9e 13       		.uleb128 0x13
 25583 aa9f 00000000 		.long	.LASF496
 25584 aaa3 3C       		.byte	0x3c
 25585 aaa4 30       		.byte	0x30
 25586 aaa5 C9C10000 		.long	0xc1c9
 25587 aaa9 00       		.byte	0
 25588 aaaa 16       		.uleb128 0x16
 25589 aaab 00000000 		.long	.LASF1374
 25590 aaaf 01       		.byte	0x1
 25591 aab0 3C       		.byte	0x3c
 25592 aab1 2F       		.byte	0x2f
 25593 aab2 C2AA0000 		.long	0xaac2
 25594 aab6 13       		.uleb128 0x13
 25595 aab7 00000000 		.long	.LASF496
 25596 aabb 3C       		.byte	0x3c
 25597 aabc 30       		.byte	0x30
 25598 aabd 98C20000 		.long	0xc298
 25599 aac1 00       		.byte	0
 25600 aac2 16       		.uleb128 0x16
 25601 aac3 00000000 		.long	.LASF1375
 25602 aac7 01       		.byte	0x1
 25603 aac8 3C       		.byte	0x3c
 25604 aac9 2F       		.byte	0x2f
 25605 aaca DAAA0000 		.long	0xaada
 25606 aace 13       		.uleb128 0x13
 25607 aacf 00000000 		.long	.LASF496
 25608 aad3 3C       		.byte	0x3c
 25609 aad4 30       		.byte	0x30
 25610 aad5 00C80000 		.long	0xc800
 25611 aad9 00       		.byte	0
 25612 aada 8601     		.uleb128 0x86
 25613 aadc 00000000 		.long	.LASF1376
 25614 aae0 0F       		.byte	0xf
 25615 aae1 30       		.byte	0x30
 25616 aae2 87B90000 		.long	0xb987
 25617 aae6 F5AA0000 		.long	0xaaf5
 25618 aaea 09       		.uleb128 0x9
 25619 aaeb 71C90000 		.long	0xc971
 25620 aaef 09       		.uleb128 0x9
 25621 aaf0 28930000 		.long	0x9328
 25622 aaf4 00       		.byte	0
 25623 aaf5 8601     		.uleb128 0x86
 25624 aaf7 00000000 		.long	.LASF1377
 25625 aafb 0F       		.byte	0xf
 25626 aafc 41       		.byte	0x41
 25627 aafd 87B90000 		.long	0xb987
 25628 ab01 10AB0000 		.long	0xab10
 25629 ab05 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 751


 25630 ab06 A0C90000 		.long	0xc9a0
 25631 ab0a 09       		.uleb128 0x9
 25632 ab0b 28930000 		.long	0x9328
 25633 ab0f 00       		.byte	0
 25634 ab10 8601     		.uleb128 0x86
 25635 ab12 00000000 		.long	.LASF1378
 25636 ab16 0F       		.byte	0xf
 25637 ab17 4E       		.byte	0x4e
 25638 ab18 87B90000 		.long	0xb987
 25639 ab1c 2BAB0000 		.long	0xab2b
 25640 ab20 09       		.uleb128 0x9
 25641 ab21 A0C90000 		.long	0xc9a0
 25642 ab25 09       		.uleb128 0x9
 25643 ab26 28930000 		.long	0x9328
 25644 ab2a 00       		.byte	0
 25645 ab2b 76       		.uleb128 0x76
 25646 ab2c 00000000 		.long	.LASF1379
 25647 ab30 0C       		.byte	0xc
 25648 ab31 3D03     		.value	0x33d
 25649 ab33 30930000 		.long	0x9330
 25650 ab37 58AB0000 		.long	0xab58
 25651 ab3b 35       		.uleb128 0x35
 25652 ab3c 00000000 		.long	.LASF745
 25653 ab40 C9C10000 		.long	0xc1c9
 25654 ab44 35       		.uleb128 0x35
 25655 ab45 00000000 		.long	.LASF1248
 25656 ab49 76370000 		.long	0x3776
 25657 ab4d 09       		.uleb128 0x9
 25658 ab4e 24D50000 		.long	0xd524
 25659 ab52 09       		.uleb128 0x9
 25660 ab53 24D50000 		.long	0xd524
 25661 ab57 00       		.byte	0
 25662 ab58 76       		.uleb128 0x76
 25663 ab59 00000000 		.long	.LASF1380
 25664 ab5d 0C       		.byte	0xc
 25665 ab5e 3603     		.value	0x336
 25666 ab60 30930000 		.long	0x9330
 25667 ab64 8EAB0000 		.long	0xab8e
 25668 ab68 35       		.uleb128 0x35
 25669 ab69 00000000 		.long	.LASF1381
 25670 ab6d C9C10000 		.long	0xc1c9
 25671 ab71 35       		.uleb128 0x35
 25672 ab72 00000000 		.long	.LASF1382
 25673 ab76 CFC10000 		.long	0xc1cf
 25674 ab7a 35       		.uleb128 0x35
 25675 ab7b 00000000 		.long	.LASF1248
 25676 ab7f 76370000 		.long	0x3776
 25677 ab83 09       		.uleb128 0x9
 25678 ab84 24D50000 		.long	0xd524
 25679 ab88 09       		.uleb128 0x9
 25680 ab89 D6D50000 		.long	0xd5d6
 25681 ab8d 00       		.byte	0
 25682 ab8e 76       		.uleb128 0x76
 25683 ab8f 00000000 		.long	.LASF1383
 25684 ab93 0C       		.byte	0xc
 25685 ab94 4C03     		.value	0x34c
 25686 ab96 30930000 		.long	0x9330
GAS LISTING /tmp/ccJUMvuF.s 			page 752


 25687 ab9a BBAB0000 		.long	0xabbb
 25688 ab9e 35       		.uleb128 0x35
 25689 ab9f 00000000 		.long	.LASF745
 25690 aba3 C9C10000 		.long	0xc1c9
 25691 aba7 35       		.uleb128 0x35
 25692 aba8 00000000 		.long	.LASF1248
 25693 abac 76370000 		.long	0x3776
 25694 abb0 09       		.uleb128 0x9
 25695 abb1 24D50000 		.long	0xd524
 25696 abb5 09       		.uleb128 0x9
 25697 abb6 24D50000 		.long	0xd524
 25698 abba 00       		.byte	0
 25699 abbb 76       		.uleb128 0x76
 25700 abbc 00000000 		.long	.LASF1384
 25701 abc0 0C       		.byte	0xc
 25702 abc1 8F03     		.value	0x38f
 25703 abc3 4B9F0000 		.long	0x9f4b
 25704 abc7 E8AB0000 		.long	0xabe8
 25705 abcb 35       		.uleb128 0x35
 25706 abcc 00000000 		.long	.LASF745
 25707 abd0 C9C10000 		.long	0xc1c9
 25708 abd4 35       		.uleb128 0x35
 25709 abd5 00000000 		.long	.LASF1248
 25710 abd9 76370000 		.long	0x3776
 25711 abdd 09       		.uleb128 0x9
 25712 abde 24D50000 		.long	0xd524
 25713 abe2 09       		.uleb128 0x9
 25714 abe3 24D50000 		.long	0xd524
 25715 abe7 00       		.byte	0
 25716 abe8 76       		.uleb128 0x76
 25717 abe9 00000000 		.long	.LASF1385
 25718 abed 0C       		.byte	0xc
 25719 abee 3D03     		.value	0x33d
 25720 abf0 30930000 		.long	0x9330
 25721 abf4 15AC0000 		.long	0xac15
 25722 abf8 35       		.uleb128 0x35
 25723 abf9 00000000 		.long	.LASF745
 25724 abfd 98C20000 		.long	0xc298
 25725 ac01 35       		.uleb128 0x35
 25726 ac02 00000000 		.long	.LASF1248
 25727 ac06 E8470000 		.long	0x47e8
 25728 ac0a 09       		.uleb128 0x9
 25729 ac0b AEEB0000 		.long	0xebae
 25730 ac0f 09       		.uleb128 0x9
 25731 ac10 AEEB0000 		.long	0xebae
 25732 ac14 00       		.byte	0
 25733 ac15 75       		.uleb128 0x75
 25734 ac16 00000000 		.long	.LASF1386
 25735 ac1a 0C       		.byte	0xc
 25736 ac1b 2F03     		.value	0x32f
 25737 ac1d 30930000 		.long	0x9330
 25738 ac21 35       		.uleb128 0x35
 25739 ac22 00000000 		.long	.LASF745
 25740 ac26 C9C10000 		.long	0xc1c9
 25741 ac2a 35       		.uleb128 0x35
 25742 ac2b 00000000 		.long	.LASF1248
 25743 ac2f 76370000 		.long	0x3776
GAS LISTING /tmp/ccJUMvuF.s 			page 753


 25744 ac33 09       		.uleb128 0x9
 25745 ac34 24D50000 		.long	0xd524
 25746 ac38 09       		.uleb128 0x9
 25747 ac39 24D50000 		.long	0xd524
 25748 ac3d 00       		.byte	0
 25749 ac3e 00       		.byte	0
 25750 ac3f 02       		.uleb128 0x2
 25751 ac40 10       		.byte	0x10
 25752 ac41 04       		.byte	0x4
 25753 ac42 00000000 		.long	.LASF1387
 25754 ac46 04       		.uleb128 0x4
 25755 ac47 00000000 		.long	.LASF1388
 25756 ac4b 3D       		.byte	0x3d
 25757 ac4c 37       		.byte	0x37
 25758 ac4d 5AAC0000 		.long	0xac5a
 25759 ac51 8701     		.uleb128 0x87
 25760 ac53 3D       		.byte	0x3d
 25761 ac54 38       		.byte	0x38
 25762 ac55 D0020000 		.long	0x2d0
 25763 ac59 00       		.byte	0
 25764 ac5a 13       		.uleb128 0x13
 25765 ac5b 00000000 		.long	.LASF1389
 25766 ac5f 3E       		.byte	0x3e
 25767 ac60 31       		.byte	0x31
 25768 ac61 65AC0000 		.long	0xac65
 25769 ac65 24       		.uleb128 0x24
 25770 ac66 00000000 		.long	.LASF1390
 25771 ac6a D8       		.byte	0xd8
 25772 ac6b 3F       		.byte	0x3f
 25773 ac6c 0F01     		.value	0x10f
 25774 ac6e ECAD0000 		.long	0xadec
 25775 ac72 26       		.uleb128 0x26
 25776 ac73 00000000 		.long	.LASF1391
 25777 ac77 3F       		.byte	0x3f
 25778 ac78 1001     		.value	0x110
 25779 ac7a 28930000 		.long	0x9328
 25780 ac7e 00       		.byte	0
 25781 ac7f 26       		.uleb128 0x26
 25782 ac80 00000000 		.long	.LASF1392
 25783 ac84 3F       		.byte	0x3f
 25784 ac85 1501     		.value	0x115
 25785 ac87 F0B10000 		.long	0xb1f0
 25786 ac8b 08       		.byte	0x8
 25787 ac8c 26       		.uleb128 0x26
 25788 ac8d 00000000 		.long	.LASF1393
 25789 ac91 3F       		.byte	0x3f
 25790 ac92 1601     		.value	0x116
 25791 ac94 F0B10000 		.long	0xb1f0
 25792 ac98 10       		.byte	0x10
 25793 ac99 26       		.uleb128 0x26
 25794 ac9a 00000000 		.long	.LASF1394
 25795 ac9e 3F       		.byte	0x3f
 25796 ac9f 1701     		.value	0x117
 25797 aca1 F0B10000 		.long	0xb1f0
 25798 aca5 18       		.byte	0x18
 25799 aca6 26       		.uleb128 0x26
 25800 aca7 00000000 		.long	.LASF1395
GAS LISTING /tmp/ccJUMvuF.s 			page 754


 25801 acab 3F       		.byte	0x3f
 25802 acac 1801     		.value	0x118
 25803 acae F0B10000 		.long	0xb1f0
 25804 acb2 20       		.byte	0x20
 25805 acb3 26       		.uleb128 0x26
 25806 acb4 00000000 		.long	.LASF1396
 25807 acb8 3F       		.byte	0x3f
 25808 acb9 1901     		.value	0x119
 25809 acbb F0B10000 		.long	0xb1f0
 25810 acbf 28       		.byte	0x28
 25811 acc0 26       		.uleb128 0x26
 25812 acc1 00000000 		.long	.LASF1397
 25813 acc5 3F       		.byte	0x3f
 25814 acc6 1A01     		.value	0x11a
 25815 acc8 F0B10000 		.long	0xb1f0
 25816 accc 30       		.byte	0x30
 25817 accd 26       		.uleb128 0x26
 25818 acce 00000000 		.long	.LASF1398
 25819 acd2 3F       		.byte	0x3f
 25820 acd3 1B01     		.value	0x11b
 25821 acd5 F0B10000 		.long	0xb1f0
 25822 acd9 38       		.byte	0x38
 25823 acda 26       		.uleb128 0x26
 25824 acdb 00000000 		.long	.LASF1399
 25825 acdf 3F       		.byte	0x3f
 25826 ace0 1C01     		.value	0x11c
 25827 ace2 F0B10000 		.long	0xb1f0
 25828 ace6 40       		.byte	0x40
 25829 ace7 26       		.uleb128 0x26
 25830 ace8 00000000 		.long	.LASF1400
 25831 acec 3F       		.byte	0x3f
 25832 aced 1E01     		.value	0x11e
 25833 acef F0B10000 		.long	0xb1f0
 25834 acf3 48       		.byte	0x48
 25835 acf4 26       		.uleb128 0x26
 25836 acf5 00000000 		.long	.LASF1401
 25837 acf9 3F       		.byte	0x3f
 25838 acfa 1F01     		.value	0x11f
 25839 acfc F0B10000 		.long	0xb1f0
 25840 ad00 50       		.byte	0x50
 25841 ad01 26       		.uleb128 0x26
 25842 ad02 00000000 		.long	.LASF1402
 25843 ad06 3F       		.byte	0x3f
 25844 ad07 2001     		.value	0x120
 25845 ad09 F0B10000 		.long	0xb1f0
 25846 ad0d 58       		.byte	0x58
 25847 ad0e 26       		.uleb128 0x26
 25848 ad0f 00000000 		.long	.LASF1403
 25849 ad13 3F       		.byte	0x3f
 25850 ad14 2201     		.value	0x122
 25851 ad16 A9BD0000 		.long	0xbda9
 25852 ad1a 60       		.byte	0x60
 25853 ad1b 26       		.uleb128 0x26
 25854 ad1c 00000000 		.long	.LASF1404
 25855 ad20 3F       		.byte	0x3f
 25856 ad21 2401     		.value	0x124
 25857 ad23 AFBD0000 		.long	0xbdaf
GAS LISTING /tmp/ccJUMvuF.s 			page 755


 25858 ad27 68       		.byte	0x68
 25859 ad28 26       		.uleb128 0x26
 25860 ad29 00000000 		.long	.LASF1405
 25861 ad2d 3F       		.byte	0x3f
 25862 ad2e 2601     		.value	0x126
 25863 ad30 28930000 		.long	0x9328
 25864 ad34 70       		.byte	0x70
 25865 ad35 26       		.uleb128 0x26
 25866 ad36 00000000 		.long	.LASF1406
 25867 ad3a 3F       		.byte	0x3f
 25868 ad3b 2A01     		.value	0x12a
 25869 ad3d 28930000 		.long	0x9328
 25870 ad41 74       		.byte	0x74
 25871 ad42 26       		.uleb128 0x26
 25872 ad43 00000000 		.long	.LASF1407
 25873 ad47 3F       		.byte	0x3f
 25874 ad48 2C01     		.value	0x12c
 25875 ad4a 5FB90000 		.long	0xb95f
 25876 ad4e 78       		.byte	0x78
 25877 ad4f 26       		.uleb128 0x26
 25878 ad50 00000000 		.long	.LASF1408
 25879 ad54 3F       		.byte	0x3f
 25880 ad55 3001     		.value	0x130
 25881 ad57 61930000 		.long	0x9361
 25882 ad5b 80       		.byte	0x80
 25883 ad5c 26       		.uleb128 0x26
 25884 ad5d 00000000 		.long	.LASF1409
 25885 ad61 3F       		.byte	0x3f
 25886 ad62 3101     		.value	0x131
 25887 ad64 76930000 		.long	0x9376
 25888 ad68 82       		.byte	0x82
 25889 ad69 26       		.uleb128 0x26
 25890 ad6a 00000000 		.long	.LASF1410
 25891 ad6e 3F       		.byte	0x3f
 25892 ad6f 3201     		.value	0x132
 25893 ad71 B5BD0000 		.long	0xbdb5
 25894 ad75 83       		.byte	0x83
 25895 ad76 26       		.uleb128 0x26
 25896 ad77 00000000 		.long	.LASF1411
 25897 ad7b 3F       		.byte	0x3f
 25898 ad7c 3601     		.value	0x136
 25899 ad7e C7BD0000 		.long	0xbdc7
 25900 ad82 88       		.byte	0x88
 25901 ad83 26       		.uleb128 0x26
 25902 ad84 00000000 		.long	.LASF1412
 25903 ad88 3F       		.byte	0x3f
 25904 ad89 3F01     		.value	0x13f
 25905 ad8b 6AB90000 		.long	0xb96a
 25906 ad8f 90       		.byte	0x90
 25907 ad90 26       		.uleb128 0x26
 25908 ad91 00000000 		.long	.LASF1413
 25909 ad95 3F       		.byte	0x3f
 25910 ad96 4801     		.value	0x148
 25911 ad98 01930000 		.long	0x9301
 25912 ad9c 98       		.byte	0x98
 25913 ad9d 26       		.uleb128 0x26
 25914 ad9e 00000000 		.long	.LASF1414
GAS LISTING /tmp/ccJUMvuF.s 			page 756


 25915 ada2 3F       		.byte	0x3f
 25916 ada3 4901     		.value	0x149
 25917 ada5 01930000 		.long	0x9301
 25918 ada9 A0       		.byte	0xa0
 25919 adaa 26       		.uleb128 0x26
 25920 adab 00000000 		.long	.LASF1415
 25921 adaf 3F       		.byte	0x3f
 25922 adb0 4A01     		.value	0x14a
 25923 adb2 01930000 		.long	0x9301
 25924 adb6 A8       		.byte	0xa8
 25925 adb7 26       		.uleb128 0x26
 25926 adb8 00000000 		.long	.LASF1416
 25927 adbc 3F       		.byte	0x3f
 25928 adbd 4B01     		.value	0x14b
 25929 adbf 01930000 		.long	0x9301
 25930 adc3 B0       		.byte	0xb0
 25931 adc4 26       		.uleb128 0x26
 25932 adc5 00000000 		.long	.LASF1417
 25933 adc9 3F       		.byte	0x3f
 25934 adca 4C01     		.value	0x14c
 25935 adcc 3BAE0000 		.long	0xae3b
 25936 add0 B8       		.byte	0xb8
 25937 add1 26       		.uleb128 0x26
 25938 add2 00000000 		.long	.LASF1418
 25939 add6 3F       		.byte	0x3f
 25940 add7 4E01     		.value	0x14e
 25941 add9 28930000 		.long	0x9328
 25942 addd C0       		.byte	0xc0
 25943 adde 26       		.uleb128 0x26
 25944 addf 00000000 		.long	.LASF1419
 25945 ade3 3F       		.byte	0x3f
 25946 ade4 5001     		.value	0x150
 25947 ade6 CDBD0000 		.long	0xbdcd
 25948 adea C4       		.byte	0xc4
 25949 adeb 00       		.byte	0
 25950 adec 13       		.uleb128 0x13
 25951 aded 00000000 		.long	.LASF1420
 25952 adf1 3E       		.byte	0x3e
 25953 adf2 41       		.byte	0x41
 25954 adf3 65AC0000 		.long	0xac65
 25955 adf7 02       		.uleb128 0x2
 25956 adf8 08       		.byte	0x8
 25957 adf9 07       		.byte	0x7
 25958 adfa 00000000 		.long	.LASF1421
 25959 adfe 16       		.uleb128 0x16
 25960 adff 00000000 		.long	.LASF1422
 25961 ae03 18       		.byte	0x18
 25962 ae04 40       		.byte	0x40
 25963 ae05 00       		.byte	0
 25964 ae06 3BAE0000 		.long	0xae3b
 25965 ae0a 06       		.uleb128 0x6
 25966 ae0b 00000000 		.long	.LASF1423
 25967 ae0f 40       		.byte	0x40
 25968 ae10 00       		.byte	0
 25969 ae11 68930000 		.long	0x9368
 25970 ae15 00       		.byte	0
 25971 ae16 06       		.uleb128 0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 757


 25972 ae17 00000000 		.long	.LASF1424
 25973 ae1b 40       		.byte	0x40
 25974 ae1c 00       		.byte	0
 25975 ae1d 68930000 		.long	0x9368
 25976 ae21 04       		.byte	0x4
 25977 ae22 06       		.uleb128 0x6
 25978 ae23 00000000 		.long	.LASF1425
 25979 ae27 40       		.byte	0x40
 25980 ae28 00       		.byte	0
 25981 ae29 01930000 		.long	0x9301
 25982 ae2d 08       		.byte	0x8
 25983 ae2e 06       		.uleb128 0x6
 25984 ae2f 00000000 		.long	.LASF1426
 25985 ae33 40       		.byte	0x40
 25986 ae34 00       		.byte	0
 25987 ae35 01930000 		.long	0x9301
 25988 ae39 10       		.byte	0x10
 25989 ae3a 00       		.byte	0
 25990 ae3b 13       		.uleb128 0x13
 25991 ae3c 00000000 		.long	.LASF53
 25992 ae40 41       		.byte	0x41
 25993 ae41 D4       		.byte	0xd4
 25994 ae42 53930000 		.long	0x9353
 25995 ae46 5C       		.uleb128 0x5c
 25996 ae47 00000000 		.long	.LASF1427
 25997 ae4b 41       		.byte	0x41
 25998 ae4c 6101     		.value	0x161
 25999 ae4e 68930000 		.long	0x9368
 26000 ae52 8801     		.uleb128 0x88
 26001 ae54 08       		.byte	0x8
 26002 ae55 42       		.byte	0x42
 26003 ae56 54       		.byte	0x54
 26004 ae57 00000000 		.long	.LASF1567
 26005 ae5b 9AAE0000 		.long	0xae9a
 26006 ae5f 8901     		.uleb128 0x89
 26007 ae61 04       		.byte	0x4
 26008 ae62 42       		.byte	0x42
 26009 ae63 57       		.byte	0x57
 26010 ae64 81AE0000 		.long	0xae81
 26011 ae68 8A01     		.uleb128 0x8a
 26012 ae6a 00000000 		.long	.LASF1428
 26013 ae6e 42       		.byte	0x42
 26014 ae6f 59       		.byte	0x59
 26015 ae70 68930000 		.long	0x9368
 26016 ae74 8A01     		.uleb128 0x8a
 26017 ae76 00000000 		.long	.LASF1429
 26018 ae7a 42       		.byte	0x42
 26019 ae7b 5D       		.byte	0x5d
 26020 ae7c 9AAE0000 		.long	0xae9a
 26021 ae80 00       		.byte	0
 26022 ae81 06       		.uleb128 0x6
 26023 ae82 00000000 		.long	.LASF1430
 26024 ae86 42       		.byte	0x42
 26025 ae87 55       		.byte	0x55
 26026 ae88 28930000 		.long	0x9328
 26027 ae8c 00       		.byte	0
 26028 ae8d 06       		.uleb128 0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 758


 26029 ae8e 00000000 		.long	.LASF1431
 26030 ae92 42       		.byte	0x42
 26031 ae93 5E       		.byte	0x5e
 26032 ae94 5FAE0000 		.long	0xae5f
 26033 ae98 04       		.byte	0x4
 26034 ae99 00       		.byte	0
 26035 ae9a 8B01     		.uleb128 0x8b
 26036 ae9c ACAE0000 		.long	0xaeac
 26037 aea0 ACAE0000 		.long	0xaeac
 26038 aea4 8C01     		.uleb128 0x8c
 26039 aea6 F7AD0000 		.long	0xadf7
 26040 aeaa 03       		.byte	0x3
 26041 aeab 00       		.byte	0
 26042 aeac 02       		.uleb128 0x2
 26043 aead 01       		.byte	0x1
 26044 aeae 06       		.byte	0x6
 26045 aeaf 00000000 		.long	.LASF1432
 26046 aeb3 13       		.uleb128 0x13
 26047 aeb4 00000000 		.long	.LASF1433
 26048 aeb8 42       		.byte	0x42
 26049 aeb9 5F       		.byte	0x5f
 26050 aeba 52AE0000 		.long	0xae52
 26051 aebe 13       		.uleb128 0x13
 26052 aebf 00000000 		.long	.LASF1434
 26053 aec3 42       		.byte	0x42
 26054 aec4 6A       		.byte	0x6a
 26055 aec5 B3AE0000 		.long	0xaeb3
 26056 aec9 11       		.uleb128 0x11
 26057 aeca 28930000 		.long	0x9328
 26058 aece 7E       		.uleb128 0x7e
 26059 aecf 08       		.byte	0x8
 26060 aed0 D4AE0000 		.long	0xaed4
 26061 aed4 11       		.uleb128 0x11
 26062 aed5 ACAE0000 		.long	0xaeac
 26063 aed9 76       		.uleb128 0x76
 26064 aeda 00000000 		.long	.LASF1435
 26065 aede 42       		.byte	0x42
 26066 aedf 8201     		.value	0x182
 26067 aee1 46AE0000 		.long	0xae46
 26068 aee5 EFAE0000 		.long	0xaeef
 26069 aee9 09       		.uleb128 0x9
 26070 aeea 28930000 		.long	0x9328
 26071 aeee 00       		.byte	0
 26072 aeef 76       		.uleb128 0x76
 26073 aef0 00000000 		.long	.LASF1436
 26074 aef4 42       		.byte	0x42
 26075 aef5 E702     		.value	0x2e7
 26076 aef7 46AE0000 		.long	0xae46
 26077 aefb 05AF0000 		.long	0xaf05
 26078 aeff 09       		.uleb128 0x9
 26079 af00 05AF0000 		.long	0xaf05
 26080 af04 00       		.byte	0
 26081 af05 7E       		.uleb128 0x7e
 26082 af06 08       		.byte	0x8
 26083 af07 ECAD0000 		.long	0xadec
 26084 af0b 76       		.uleb128 0x76
 26085 af0c 00000000 		.long	.LASF1437
GAS LISTING /tmp/ccJUMvuF.s 			page 759


 26086 af10 42       		.byte	0x42
 26087 af11 0403     		.value	0x304
 26088 af13 2BAF0000 		.long	0xaf2b
 26089 af17 2BAF0000 		.long	0xaf2b
 26090 af1b 09       		.uleb128 0x9
 26091 af1c 2BAF0000 		.long	0xaf2b
 26092 af20 09       		.uleb128 0x9
 26093 af21 28930000 		.long	0x9328
 26094 af25 09       		.uleb128 0x9
 26095 af26 05AF0000 		.long	0xaf05
 26096 af2a 00       		.byte	0
 26097 af2b 7E       		.uleb128 0x7e
 26098 af2c 08       		.byte	0x8
 26099 af2d 31AF0000 		.long	0xaf31
 26100 af31 02       		.uleb128 0x2
 26101 af32 04       		.byte	0x4
 26102 af33 05       		.byte	0x5
 26103 af34 00000000 		.long	.LASF1438
 26104 af38 76       		.uleb128 0x76
 26105 af39 00000000 		.long	.LASF1439
 26106 af3d 42       		.byte	0x42
 26107 af3e F502     		.value	0x2f5
 26108 af40 46AE0000 		.long	0xae46
 26109 af44 53AF0000 		.long	0xaf53
 26110 af48 09       		.uleb128 0x9
 26111 af49 31AF0000 		.long	0xaf31
 26112 af4d 09       		.uleb128 0x9
 26113 af4e 05AF0000 		.long	0xaf05
 26114 af52 00       		.byte	0
 26115 af53 76       		.uleb128 0x76
 26116 af54 00000000 		.long	.LASF1440
 26117 af58 42       		.byte	0x42
 26118 af59 0B03     		.value	0x30b
 26119 af5b 28930000 		.long	0x9328
 26120 af5f 6EAF0000 		.long	0xaf6e
 26121 af63 09       		.uleb128 0x9
 26122 af64 6EAF0000 		.long	0xaf6e
 26123 af68 09       		.uleb128 0x9
 26124 af69 05AF0000 		.long	0xaf05
 26125 af6d 00       		.byte	0
 26126 af6e 7E       		.uleb128 0x7e
 26127 af6f 08       		.byte	0x8
 26128 af70 74AF0000 		.long	0xaf74
 26129 af74 11       		.uleb128 0x11
 26130 af75 31AF0000 		.long	0xaf31
 26131 af79 76       		.uleb128 0x76
 26132 af7a 00000000 		.long	.LASF1441
 26133 af7e 42       		.byte	0x42
 26134 af7f 4902     		.value	0x249
 26135 af81 28930000 		.long	0x9328
 26136 af85 94AF0000 		.long	0xaf94
 26137 af89 09       		.uleb128 0x9
 26138 af8a 05AF0000 		.long	0xaf05
 26139 af8e 09       		.uleb128 0x9
 26140 af8f 28930000 		.long	0x9328
 26141 af93 00       		.byte	0
 26142 af94 76       		.uleb128 0x76
GAS LISTING /tmp/ccJUMvuF.s 			page 760


 26143 af95 00000000 		.long	.LASF1442
 26144 af99 42       		.byte	0x42
 26145 af9a 5002     		.value	0x250
 26146 af9c 28930000 		.long	0x9328
 26147 afa0 B0AF0000 		.long	0xafb0
 26148 afa4 09       		.uleb128 0x9
 26149 afa5 05AF0000 		.long	0xaf05
 26150 afa9 09       		.uleb128 0x9
 26151 afaa 6EAF0000 		.long	0xaf6e
 26152 afae 3A       		.uleb128 0x3a
 26153 afaf 00       		.byte	0
 26154 afb0 76       		.uleb128 0x76
 26155 afb1 00000000 		.long	.LASF1443
 26156 afb5 42       		.byte	0x42
 26157 afb6 7902     		.value	0x279
 26158 afb8 28930000 		.long	0x9328
 26159 afbc CCAF0000 		.long	0xafcc
 26160 afc0 09       		.uleb128 0x9
 26161 afc1 05AF0000 		.long	0xaf05
 26162 afc5 09       		.uleb128 0x9
 26163 afc6 6EAF0000 		.long	0xaf6e
 26164 afca 3A       		.uleb128 0x3a
 26165 afcb 00       		.byte	0
 26166 afcc 76       		.uleb128 0x76
 26167 afcd 00000000 		.long	.LASF1444
 26168 afd1 42       		.byte	0x42
 26169 afd2 E802     		.value	0x2e8
 26170 afd4 46AE0000 		.long	0xae46
 26171 afd8 E2AF0000 		.long	0xafe2
 26172 afdc 09       		.uleb128 0x9
 26173 afdd 05AF0000 		.long	0xaf05
 26174 afe1 00       		.byte	0
 26175 afe2 8D01     		.uleb128 0x8d
 26176 afe4 00000000 		.long	.LASF1445
 26177 afe8 42       		.byte	0x42
 26178 afe9 EE02     		.value	0x2ee
 26179 afeb 46AE0000 		.long	0xae46
 26180 afef 76       		.uleb128 0x76
 26181 aff0 00000000 		.long	.LASF1446
 26182 aff4 42       		.byte	0x42
 26183 aff5 8D01     		.value	0x18d
 26184 aff7 3BAE0000 		.long	0xae3b
 26185 affb 0FB00000 		.long	0xb00f
 26186 afff 09       		.uleb128 0x9
 26187 b000 CEAE0000 		.long	0xaece
 26188 b004 09       		.uleb128 0x9
 26189 b005 3BAE0000 		.long	0xae3b
 26190 b009 09       		.uleb128 0x9
 26191 b00a 0FB00000 		.long	0xb00f
 26192 b00e 00       		.byte	0
 26193 b00f 7E       		.uleb128 0x7e
 26194 b010 08       		.byte	0x8
 26195 b011 BEAE0000 		.long	0xaebe
 26196 b015 76       		.uleb128 0x76
 26197 b016 00000000 		.long	.LASF1447
 26198 b01a 42       		.byte	0x42
 26199 b01b 6B01     		.value	0x16b
GAS LISTING /tmp/ccJUMvuF.s 			page 761


 26200 b01d 3BAE0000 		.long	0xae3b
 26201 b021 3AB00000 		.long	0xb03a
 26202 b025 09       		.uleb128 0x9
 26203 b026 2BAF0000 		.long	0xaf2b
 26204 b02a 09       		.uleb128 0x9
 26205 b02b CEAE0000 		.long	0xaece
 26206 b02f 09       		.uleb128 0x9
 26207 b030 3BAE0000 		.long	0xae3b
 26208 b034 09       		.uleb128 0x9
 26209 b035 0FB00000 		.long	0xb00f
 26210 b039 00       		.byte	0
 26211 b03a 76       		.uleb128 0x76
 26212 b03b 00000000 		.long	.LASF1448
 26213 b03f 42       		.byte	0x42
 26214 b040 6701     		.value	0x167
 26215 b042 28930000 		.long	0x9328
 26216 b046 50B00000 		.long	0xb050
 26217 b04a 09       		.uleb128 0x9
 26218 b04b 50B00000 		.long	0xb050
 26219 b04f 00       		.byte	0
 26220 b050 7E       		.uleb128 0x7e
 26221 b051 08       		.byte	0x8
 26222 b052 56B00000 		.long	0xb056
 26223 b056 11       		.uleb128 0x11
 26224 b057 BEAE0000 		.long	0xaebe
 26225 b05b 76       		.uleb128 0x76
 26226 b05c 00000000 		.long	.LASF1449
 26227 b060 42       		.byte	0x42
 26228 b061 9601     		.value	0x196
 26229 b063 3BAE0000 		.long	0xae3b
 26230 b067 80B00000 		.long	0xb080
 26231 b06b 09       		.uleb128 0x9
 26232 b06c 2BAF0000 		.long	0xaf2b
 26233 b070 09       		.uleb128 0x9
 26234 b071 80B00000 		.long	0xb080
 26235 b075 09       		.uleb128 0x9
 26236 b076 3BAE0000 		.long	0xae3b
 26237 b07a 09       		.uleb128 0x9
 26238 b07b 0FB00000 		.long	0xb00f
 26239 b07f 00       		.byte	0
 26240 b080 7E       		.uleb128 0x7e
 26241 b081 08       		.byte	0x8
 26242 b082 CEAE0000 		.long	0xaece
 26243 b086 76       		.uleb128 0x76
 26244 b087 00000000 		.long	.LASF1450
 26245 b08b 42       		.byte	0x42
 26246 b08c F602     		.value	0x2f6
 26247 b08e 46AE0000 		.long	0xae46
 26248 b092 A1B00000 		.long	0xb0a1
 26249 b096 09       		.uleb128 0x9
 26250 b097 31AF0000 		.long	0xaf31
 26251 b09b 09       		.uleb128 0x9
 26252 b09c 05AF0000 		.long	0xaf05
 26253 b0a0 00       		.byte	0
 26254 b0a1 76       		.uleb128 0x76
 26255 b0a2 00000000 		.long	.LASF1451
 26256 b0a6 42       		.byte	0x42
GAS LISTING /tmp/ccJUMvuF.s 			page 762


 26257 b0a7 FC02     		.value	0x2fc
 26258 b0a9 46AE0000 		.long	0xae46
 26259 b0ad B7B00000 		.long	0xb0b7
 26260 b0b1 09       		.uleb128 0x9
 26261 b0b2 31AF0000 		.long	0xaf31
 26262 b0b6 00       		.byte	0
 26263 b0b7 76       		.uleb128 0x76
 26264 b0b8 00000000 		.long	.LASF1452
 26265 b0bc 42       		.byte	0x42
 26266 b0bd 5A02     		.value	0x25a
 26267 b0bf 28930000 		.long	0x9328
 26268 b0c3 D8B00000 		.long	0xb0d8
 26269 b0c7 09       		.uleb128 0x9
 26270 b0c8 2BAF0000 		.long	0xaf2b
 26271 b0cc 09       		.uleb128 0x9
 26272 b0cd 3BAE0000 		.long	0xae3b
 26273 b0d1 09       		.uleb128 0x9
 26274 b0d2 6EAF0000 		.long	0xaf6e
 26275 b0d6 3A       		.uleb128 0x3a
 26276 b0d7 00       		.byte	0
 26277 b0d8 76       		.uleb128 0x76
 26278 b0d9 00000000 		.long	.LASF1453
 26279 b0dd 42       		.byte	0x42
 26280 b0de 8302     		.value	0x283
 26281 b0e0 28930000 		.long	0x9328
 26282 b0e4 F4B00000 		.long	0xb0f4
 26283 b0e8 09       		.uleb128 0x9
 26284 b0e9 6EAF0000 		.long	0xaf6e
 26285 b0ed 09       		.uleb128 0x9
 26286 b0ee 6EAF0000 		.long	0xaf6e
 26287 b0f2 3A       		.uleb128 0x3a
 26288 b0f3 00       		.byte	0
 26289 b0f4 76       		.uleb128 0x76
 26290 b0f5 00000000 		.long	.LASF1454
 26291 b0f9 42       		.byte	0x42
 26292 b0fa 1303     		.value	0x313
 26293 b0fc 46AE0000 		.long	0xae46
 26294 b100 0FB10000 		.long	0xb10f
 26295 b104 09       		.uleb128 0x9
 26296 b105 46AE0000 		.long	0xae46
 26297 b109 09       		.uleb128 0x9
 26298 b10a 05AF0000 		.long	0xaf05
 26299 b10e 00       		.byte	0
 26300 b10f 76       		.uleb128 0x76
 26301 b110 00000000 		.long	.LASF1455
 26302 b114 42       		.byte	0x42
 26303 b115 6202     		.value	0x262
 26304 b117 28930000 		.long	0x9328
 26305 b11b 2FB10000 		.long	0xb12f
 26306 b11f 09       		.uleb128 0x9
 26307 b120 05AF0000 		.long	0xaf05
 26308 b124 09       		.uleb128 0x9
 26309 b125 6EAF0000 		.long	0xaf6e
 26310 b129 09       		.uleb128 0x9
 26311 b12a 2FB10000 		.long	0xb12f
 26312 b12e 00       		.byte	0
 26313 b12f 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 763


 26314 b130 08       		.byte	0x8
 26315 b131 FEAD0000 		.long	0xadfe
 26316 b135 76       		.uleb128 0x76
 26317 b136 00000000 		.long	.LASF1456
 26318 b13a 42       		.byte	0x42
 26319 b13b AF02     		.value	0x2af
 26320 b13d 28930000 		.long	0x9328
 26321 b141 55B10000 		.long	0xb155
 26322 b145 09       		.uleb128 0x9
 26323 b146 05AF0000 		.long	0xaf05
 26324 b14a 09       		.uleb128 0x9
 26325 b14b 6EAF0000 		.long	0xaf6e
 26326 b14f 09       		.uleb128 0x9
 26327 b150 2FB10000 		.long	0xb12f
 26328 b154 00       		.byte	0
 26329 b155 76       		.uleb128 0x76
 26330 b156 00000000 		.long	.LASF1457
 26331 b15a 42       		.byte	0x42
 26332 b15b 6F02     		.value	0x26f
 26333 b15d 28930000 		.long	0x9328
 26334 b161 7AB10000 		.long	0xb17a
 26335 b165 09       		.uleb128 0x9
 26336 b166 2BAF0000 		.long	0xaf2b
 26337 b16a 09       		.uleb128 0x9
 26338 b16b 3BAE0000 		.long	0xae3b
 26339 b16f 09       		.uleb128 0x9
 26340 b170 6EAF0000 		.long	0xaf6e
 26341 b174 09       		.uleb128 0x9
 26342 b175 2FB10000 		.long	0xb12f
 26343 b179 00       		.byte	0
 26344 b17a 76       		.uleb128 0x76
 26345 b17b 00000000 		.long	.LASF1458
 26346 b17f 42       		.byte	0x42
 26347 b180 BB02     		.value	0x2bb
 26348 b182 28930000 		.long	0x9328
 26349 b186 9AB10000 		.long	0xb19a
 26350 b18a 09       		.uleb128 0x9
 26351 b18b 6EAF0000 		.long	0xaf6e
 26352 b18f 09       		.uleb128 0x9
 26353 b190 6EAF0000 		.long	0xaf6e
 26354 b194 09       		.uleb128 0x9
 26355 b195 2FB10000 		.long	0xb12f
 26356 b199 00       		.byte	0
 26357 b19a 76       		.uleb128 0x76
 26358 b19b 00000000 		.long	.LASF1459
 26359 b19f 42       		.byte	0x42
 26360 b1a0 6A02     		.value	0x26a
 26361 b1a2 28930000 		.long	0x9328
 26362 b1a6 B5B10000 		.long	0xb1b5
 26363 b1aa 09       		.uleb128 0x9
 26364 b1ab 6EAF0000 		.long	0xaf6e
 26365 b1af 09       		.uleb128 0x9
 26366 b1b0 2FB10000 		.long	0xb12f
 26367 b1b4 00       		.byte	0
 26368 b1b5 76       		.uleb128 0x76
 26369 b1b6 00000000 		.long	.LASF1460
 26370 b1ba 42       		.byte	0x42
GAS LISTING /tmp/ccJUMvuF.s 			page 764


 26371 b1bb B702     		.value	0x2b7
 26372 b1bd 28930000 		.long	0x9328
 26373 b1c1 D0B10000 		.long	0xb1d0
 26374 b1c5 09       		.uleb128 0x9
 26375 b1c6 6EAF0000 		.long	0xaf6e
 26376 b1ca 09       		.uleb128 0x9
 26377 b1cb 2FB10000 		.long	0xb12f
 26378 b1cf 00       		.byte	0
 26379 b1d0 76       		.uleb128 0x76
 26380 b1d1 00000000 		.long	.LASF1461
 26381 b1d5 42       		.byte	0x42
 26382 b1d6 7001     		.value	0x170
 26383 b1d8 3BAE0000 		.long	0xae3b
 26384 b1dc F0B10000 		.long	0xb1f0
 26385 b1e0 09       		.uleb128 0x9
 26386 b1e1 F0B10000 		.long	0xb1f0
 26387 b1e5 09       		.uleb128 0x9
 26388 b1e6 31AF0000 		.long	0xaf31
 26389 b1ea 09       		.uleb128 0x9
 26390 b1eb 0FB00000 		.long	0xb00f
 26391 b1ef 00       		.byte	0
 26392 b1f0 7E       		.uleb128 0x7e
 26393 b1f1 08       		.byte	0x8
 26394 b1f2 ACAE0000 		.long	0xaeac
 26395 b1f6 52       		.uleb128 0x52
 26396 b1f7 00000000 		.long	.LASF1462
 26397 b1fb 42       		.byte	0x42
 26398 b1fc 98       		.byte	0x98
 26399 b1fd 2BAF0000 		.long	0xaf2b
 26400 b201 10B20000 		.long	0xb210
 26401 b205 09       		.uleb128 0x9
 26402 b206 2BAF0000 		.long	0xaf2b
 26403 b20a 09       		.uleb128 0x9
 26404 b20b 6EAF0000 		.long	0xaf6e
 26405 b20f 00       		.byte	0
 26406 b210 52       		.uleb128 0x52
 26407 b211 00000000 		.long	.LASF1463
 26408 b215 42       		.byte	0x42
 26409 b216 A0       		.byte	0xa0
 26410 b217 28930000 		.long	0x9328
 26411 b21b 2AB20000 		.long	0xb22a
 26412 b21f 09       		.uleb128 0x9
 26413 b220 6EAF0000 		.long	0xaf6e
 26414 b224 09       		.uleb128 0x9
 26415 b225 6EAF0000 		.long	0xaf6e
 26416 b229 00       		.byte	0
 26417 b22a 52       		.uleb128 0x52
 26418 b22b 00000000 		.long	.LASF1464
 26419 b22f 42       		.byte	0x42
 26420 b230 BD       		.byte	0xbd
 26421 b231 28930000 		.long	0x9328
 26422 b235 44B20000 		.long	0xb244
 26423 b239 09       		.uleb128 0x9
 26424 b23a 6EAF0000 		.long	0xaf6e
 26425 b23e 09       		.uleb128 0x9
 26426 b23f 6EAF0000 		.long	0xaf6e
 26427 b243 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 765


 26428 b244 52       		.uleb128 0x52
 26429 b245 00000000 		.long	.LASF1465
 26430 b249 42       		.byte	0x42
 26431 b24a 90       		.byte	0x90
 26432 b24b 2BAF0000 		.long	0xaf2b
 26433 b24f 5EB20000 		.long	0xb25e
 26434 b253 09       		.uleb128 0x9
 26435 b254 2BAF0000 		.long	0xaf2b
 26436 b258 09       		.uleb128 0x9
 26437 b259 6EAF0000 		.long	0xaf6e
 26438 b25d 00       		.byte	0
 26439 b25e 52       		.uleb128 0x52
 26440 b25f 00000000 		.long	.LASF1466
 26441 b263 42       		.byte	0x42
 26442 b264 F9       		.byte	0xf9
 26443 b265 3BAE0000 		.long	0xae3b
 26444 b269 78B20000 		.long	0xb278
 26445 b26d 09       		.uleb128 0x9
 26446 b26e 6EAF0000 		.long	0xaf6e
 26447 b272 09       		.uleb128 0x9
 26448 b273 6EAF0000 		.long	0xaf6e
 26449 b277 00       		.byte	0
 26450 b278 76       		.uleb128 0x76
 26451 b279 00000000 		.long	.LASF1467
 26452 b27d 42       		.byte	0x42
 26453 b27e 5503     		.value	0x355
 26454 b280 3BAE0000 		.long	0xae3b
 26455 b284 9DB20000 		.long	0xb29d
 26456 b288 09       		.uleb128 0x9
 26457 b289 2BAF0000 		.long	0xaf2b
 26458 b28d 09       		.uleb128 0x9
 26459 b28e 3BAE0000 		.long	0xae3b
 26460 b292 09       		.uleb128 0x9
 26461 b293 6EAF0000 		.long	0xaf6e
 26462 b297 09       		.uleb128 0x9
 26463 b298 9DB20000 		.long	0xb29d
 26464 b29c 00       		.byte	0
 26465 b29d 7E       		.uleb128 0x7e
 26466 b29e 08       		.byte	0x8
 26467 b29f A3B20000 		.long	0xb2a3
 26468 b2a3 11       		.uleb128 0x11
 26469 b2a4 A8B20000 		.long	0xb2a8
 26470 b2a8 8E01     		.uleb128 0x8e
 26471 b2aa 746D00   		.string	"tm"
 26472 b2ad 38       		.byte	0x38
 26473 b2ae 43       		.byte	0x43
 26474 b2af 85       		.byte	0x85
 26475 b2b0 39B30000 		.long	0xb339
 26476 b2b4 06       		.uleb128 0x6
 26477 b2b5 00000000 		.long	.LASF1468
 26478 b2b9 43       		.byte	0x43
 26479 b2ba 87       		.byte	0x87
 26480 b2bb 28930000 		.long	0x9328
 26481 b2bf 00       		.byte	0
 26482 b2c0 06       		.uleb128 0x6
 26483 b2c1 00000000 		.long	.LASF1469
 26484 b2c5 43       		.byte	0x43
GAS LISTING /tmp/ccJUMvuF.s 			page 766


 26485 b2c6 88       		.byte	0x88
 26486 b2c7 28930000 		.long	0x9328
 26487 b2cb 04       		.byte	0x4
 26488 b2cc 06       		.uleb128 0x6
 26489 b2cd 00000000 		.long	.LASF1470
 26490 b2d1 43       		.byte	0x43
 26491 b2d2 89       		.byte	0x89
 26492 b2d3 28930000 		.long	0x9328
 26493 b2d7 08       		.byte	0x8
 26494 b2d8 06       		.uleb128 0x6
 26495 b2d9 00000000 		.long	.LASF1471
 26496 b2dd 43       		.byte	0x43
 26497 b2de 8A       		.byte	0x8a
 26498 b2df 28930000 		.long	0x9328
 26499 b2e3 0C       		.byte	0xc
 26500 b2e4 06       		.uleb128 0x6
 26501 b2e5 00000000 		.long	.LASF1472
 26502 b2e9 43       		.byte	0x43
 26503 b2ea 8B       		.byte	0x8b
 26504 b2eb 28930000 		.long	0x9328
 26505 b2ef 10       		.byte	0x10
 26506 b2f0 06       		.uleb128 0x6
 26507 b2f1 00000000 		.long	.LASF1473
 26508 b2f5 43       		.byte	0x43
 26509 b2f6 8C       		.byte	0x8c
 26510 b2f7 28930000 		.long	0x9328
 26511 b2fb 14       		.byte	0x14
 26512 b2fc 06       		.uleb128 0x6
 26513 b2fd 00000000 		.long	.LASF1474
 26514 b301 43       		.byte	0x43
 26515 b302 8D       		.byte	0x8d
 26516 b303 28930000 		.long	0x9328
 26517 b307 18       		.byte	0x18
 26518 b308 06       		.uleb128 0x6
 26519 b309 00000000 		.long	.LASF1475
 26520 b30d 43       		.byte	0x43
 26521 b30e 8E       		.byte	0x8e
 26522 b30f 28930000 		.long	0x9328
 26523 b313 1C       		.byte	0x1c
 26524 b314 06       		.uleb128 0x6
 26525 b315 00000000 		.long	.LASF1476
 26526 b319 43       		.byte	0x43
 26527 b31a 8F       		.byte	0x8f
 26528 b31b 28930000 		.long	0x9328
 26529 b31f 20       		.byte	0x20
 26530 b320 06       		.uleb128 0x6
 26531 b321 00000000 		.long	.LASF1477
 26532 b325 43       		.byte	0x43
 26533 b326 92       		.byte	0x92
 26534 b327 84930000 		.long	0x9384
 26535 b32b 28       		.byte	0x28
 26536 b32c 06       		.uleb128 0x6
 26537 b32d 00000000 		.long	.LASF1478
 26538 b331 43       		.byte	0x43
 26539 b332 93       		.byte	0x93
 26540 b333 CEAE0000 		.long	0xaece
 26541 b337 30       		.byte	0x30
GAS LISTING /tmp/ccJUMvuF.s 			page 767


 26542 b338 00       		.byte	0
 26543 b339 76       		.uleb128 0x76
 26544 b33a 00000000 		.long	.LASF1479
 26545 b33e 42       		.byte	0x42
 26546 b33f 1C01     		.value	0x11c
 26547 b341 3BAE0000 		.long	0xae3b
 26548 b345 4FB30000 		.long	0xb34f
 26549 b349 09       		.uleb128 0x9
 26550 b34a 6EAF0000 		.long	0xaf6e
 26551 b34e 00       		.byte	0
 26552 b34f 52       		.uleb128 0x52
 26553 b350 00000000 		.long	.LASF1480
 26554 b354 42       		.byte	0x42
 26555 b355 9B       		.byte	0x9b
 26556 b356 2BAF0000 		.long	0xaf2b
 26557 b35a 6EB30000 		.long	0xb36e
 26558 b35e 09       		.uleb128 0x9
 26559 b35f 2BAF0000 		.long	0xaf2b
 26560 b363 09       		.uleb128 0x9
 26561 b364 6EAF0000 		.long	0xaf6e
 26562 b368 09       		.uleb128 0x9
 26563 b369 3BAE0000 		.long	0xae3b
 26564 b36d 00       		.byte	0
 26565 b36e 52       		.uleb128 0x52
 26566 b36f 00000000 		.long	.LASF1481
 26567 b373 42       		.byte	0x42
 26568 b374 A3       		.byte	0xa3
 26569 b375 28930000 		.long	0x9328
 26570 b379 8DB30000 		.long	0xb38d
 26571 b37d 09       		.uleb128 0x9
 26572 b37e 6EAF0000 		.long	0xaf6e
 26573 b382 09       		.uleb128 0x9
 26574 b383 6EAF0000 		.long	0xaf6e
 26575 b387 09       		.uleb128 0x9
 26576 b388 3BAE0000 		.long	0xae3b
 26577 b38c 00       		.byte	0
 26578 b38d 52       		.uleb128 0x52
 26579 b38e 00000000 		.long	.LASF1482
 26580 b392 42       		.byte	0x42
 26581 b393 93       		.byte	0x93
 26582 b394 2BAF0000 		.long	0xaf2b
 26583 b398 ACB30000 		.long	0xb3ac
 26584 b39c 09       		.uleb128 0x9
 26585 b39d 2BAF0000 		.long	0xaf2b
 26586 b3a1 09       		.uleb128 0x9
 26587 b3a2 6EAF0000 		.long	0xaf6e
 26588 b3a6 09       		.uleb128 0x9
 26589 b3a7 3BAE0000 		.long	0xae3b
 26590 b3ab 00       		.byte	0
 26591 b3ac 76       		.uleb128 0x76
 26592 b3ad 00000000 		.long	.LASF1483
 26593 b3b1 42       		.byte	0x42
 26594 b3b2 9C01     		.value	0x19c
 26595 b3b4 3BAE0000 		.long	0xae3b
 26596 b3b8 D1B30000 		.long	0xb3d1
 26597 b3bc 09       		.uleb128 0x9
 26598 b3bd F0B10000 		.long	0xb1f0
GAS LISTING /tmp/ccJUMvuF.s 			page 768


 26599 b3c1 09       		.uleb128 0x9
 26600 b3c2 D1B30000 		.long	0xb3d1
 26601 b3c6 09       		.uleb128 0x9
 26602 b3c7 3BAE0000 		.long	0xae3b
 26603 b3cb 09       		.uleb128 0x9
 26604 b3cc 0FB00000 		.long	0xb00f
 26605 b3d0 00       		.byte	0
 26606 b3d1 7E       		.uleb128 0x7e
 26607 b3d2 08       		.byte	0x8
 26608 b3d3 6EAF0000 		.long	0xaf6e
 26609 b3d7 52       		.uleb128 0x52
 26610 b3d8 00000000 		.long	.LASF1484
 26611 b3dc 42       		.byte	0x42
 26612 b3dd FD       		.byte	0xfd
 26613 b3de 3BAE0000 		.long	0xae3b
 26614 b3e2 F1B30000 		.long	0xb3f1
 26615 b3e6 09       		.uleb128 0x9
 26616 b3e7 6EAF0000 		.long	0xaf6e
 26617 b3eb 09       		.uleb128 0x9
 26618 b3ec 6EAF0000 		.long	0xaf6e
 26619 b3f0 00       		.byte	0
 26620 b3f1 76       		.uleb128 0x76
 26621 b3f2 00000000 		.long	.LASF1485
 26622 b3f6 42       		.byte	0x42
 26623 b3f7 C001     		.value	0x1c0
 26624 b3f9 29000000 		.long	0x29
 26625 b3fd 0CB40000 		.long	0xb40c
 26626 b401 09       		.uleb128 0x9
 26627 b402 6EAF0000 		.long	0xaf6e
 26628 b406 09       		.uleb128 0x9
 26629 b407 0CB40000 		.long	0xb40c
 26630 b40b 00       		.byte	0
 26631 b40c 7E       		.uleb128 0x7e
 26632 b40d 08       		.byte	0x8
 26633 b40e 2BAF0000 		.long	0xaf2b
 26634 b412 76       		.uleb128 0x76
 26635 b413 00000000 		.long	.LASF1486
 26636 b417 42       		.byte	0x42
 26637 b418 C701     		.value	0x1c7
 26638 b41a 30000000 		.long	0x30
 26639 b41e 2DB40000 		.long	0xb42d
 26640 b422 09       		.uleb128 0x9
 26641 b423 6EAF0000 		.long	0xaf6e
 26642 b427 09       		.uleb128 0x9
 26643 b428 0CB40000 		.long	0xb40c
 26644 b42c 00       		.byte	0
 26645 b42d 76       		.uleb128 0x76
 26646 b42e 00000000 		.long	.LASF1487
 26647 b432 42       		.byte	0x42
 26648 b433 1701     		.value	0x117
 26649 b435 2BAF0000 		.long	0xaf2b
 26650 b439 4DB40000 		.long	0xb44d
 26651 b43d 09       		.uleb128 0x9
 26652 b43e 2BAF0000 		.long	0xaf2b
 26653 b442 09       		.uleb128 0x9
 26654 b443 6EAF0000 		.long	0xaf6e
 26655 b447 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 769


 26656 b448 0CB40000 		.long	0xb40c
 26657 b44c 00       		.byte	0
 26658 b44d 76       		.uleb128 0x76
 26659 b44e 00000000 		.long	.LASF1488
 26660 b452 42       		.byte	0x42
 26661 b453 D201     		.value	0x1d2
 26662 b455 84930000 		.long	0x9384
 26663 b459 6DB40000 		.long	0xb46d
 26664 b45d 09       		.uleb128 0x9
 26665 b45e 6EAF0000 		.long	0xaf6e
 26666 b462 09       		.uleb128 0x9
 26667 b463 0CB40000 		.long	0xb40c
 26668 b467 09       		.uleb128 0x9
 26669 b468 28930000 		.long	0x9328
 26670 b46c 00       		.byte	0
 26671 b46d 76       		.uleb128 0x76
 26672 b46e 00000000 		.long	.LASF1489
 26673 b472 42       		.byte	0x42
 26674 b473 D701     		.value	0x1d7
 26675 b475 53930000 		.long	0x9353
 26676 b479 8DB40000 		.long	0xb48d
 26677 b47d 09       		.uleb128 0x9
 26678 b47e 6EAF0000 		.long	0xaf6e
 26679 b482 09       		.uleb128 0x9
 26680 b483 0CB40000 		.long	0xb40c
 26681 b487 09       		.uleb128 0x9
 26682 b488 28930000 		.long	0x9328
 26683 b48c 00       		.byte	0
 26684 b48d 52       		.uleb128 0x52
 26685 b48e 00000000 		.long	.LASF1490
 26686 b492 42       		.byte	0x42
 26687 b493 C1       		.byte	0xc1
 26688 b494 3BAE0000 		.long	0xae3b
 26689 b498 ACB40000 		.long	0xb4ac
 26690 b49c 09       		.uleb128 0x9
 26691 b49d 2BAF0000 		.long	0xaf2b
 26692 b4a1 09       		.uleb128 0x9
 26693 b4a2 6EAF0000 		.long	0xaf6e
 26694 b4a6 09       		.uleb128 0x9
 26695 b4a7 3BAE0000 		.long	0xae3b
 26696 b4ab 00       		.byte	0
 26697 b4ac 76       		.uleb128 0x76
 26698 b4ad 00000000 		.long	.LASF1491
 26699 b4b1 42       		.byte	0x42
 26700 b4b2 8801     		.value	0x188
 26701 b4b4 28930000 		.long	0x9328
 26702 b4b8 C2B40000 		.long	0xb4c2
 26703 b4bc 09       		.uleb128 0x9
 26704 b4bd 46AE0000 		.long	0xae46
 26705 b4c1 00       		.byte	0
 26706 b4c2 76       		.uleb128 0x76
 26707 b4c3 00000000 		.long	.LASF1492
 26708 b4c7 42       		.byte	0x42
 26709 b4c8 4201     		.value	0x142
 26710 b4ca 28930000 		.long	0x9328
 26711 b4ce E2B40000 		.long	0xb4e2
 26712 b4d2 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 770


 26713 b4d3 6EAF0000 		.long	0xaf6e
 26714 b4d7 09       		.uleb128 0x9
 26715 b4d8 6EAF0000 		.long	0xaf6e
 26716 b4dc 09       		.uleb128 0x9
 26717 b4dd 3BAE0000 		.long	0xae3b
 26718 b4e1 00       		.byte	0
 26719 b4e2 76       		.uleb128 0x76
 26720 b4e3 00000000 		.long	.LASF1493
 26721 b4e7 42       		.byte	0x42
 26722 b4e8 4701     		.value	0x147
 26723 b4ea 2BAF0000 		.long	0xaf2b
 26724 b4ee 02B50000 		.long	0xb502
 26725 b4f2 09       		.uleb128 0x9
 26726 b4f3 2BAF0000 		.long	0xaf2b
 26727 b4f7 09       		.uleb128 0x9
 26728 b4f8 6EAF0000 		.long	0xaf6e
 26729 b4fc 09       		.uleb128 0x9
 26730 b4fd 3BAE0000 		.long	0xae3b
 26731 b501 00       		.byte	0
 26732 b502 76       		.uleb128 0x76
 26733 b503 00000000 		.long	.LASF1494
 26734 b507 42       		.byte	0x42
 26735 b508 4C01     		.value	0x14c
 26736 b50a 2BAF0000 		.long	0xaf2b
 26737 b50e 22B50000 		.long	0xb522
 26738 b512 09       		.uleb128 0x9
 26739 b513 2BAF0000 		.long	0xaf2b
 26740 b517 09       		.uleb128 0x9
 26741 b518 6EAF0000 		.long	0xaf6e
 26742 b51c 09       		.uleb128 0x9
 26743 b51d 3BAE0000 		.long	0xae3b
 26744 b521 00       		.byte	0
 26745 b522 76       		.uleb128 0x76
 26746 b523 00000000 		.long	.LASF1495
 26747 b527 42       		.byte	0x42
 26748 b528 5001     		.value	0x150
 26749 b52a 2BAF0000 		.long	0xaf2b
 26750 b52e 42B50000 		.long	0xb542
 26751 b532 09       		.uleb128 0x9
 26752 b533 2BAF0000 		.long	0xaf2b
 26753 b537 09       		.uleb128 0x9
 26754 b538 31AF0000 		.long	0xaf31
 26755 b53c 09       		.uleb128 0x9
 26756 b53d 3BAE0000 		.long	0xae3b
 26757 b541 00       		.byte	0
 26758 b542 76       		.uleb128 0x76
 26759 b543 00000000 		.long	.LASF1496
 26760 b547 42       		.byte	0x42
 26761 b548 5702     		.value	0x257
 26762 b54a 28930000 		.long	0x9328
 26763 b54e 59B50000 		.long	0xb559
 26764 b552 09       		.uleb128 0x9
 26765 b553 6EAF0000 		.long	0xaf6e
 26766 b557 3A       		.uleb128 0x3a
 26767 b558 00       		.byte	0
 26768 b559 76       		.uleb128 0x76
 26769 b55a 00000000 		.long	.LASF1497
GAS LISTING /tmp/ccJUMvuF.s 			page 771


 26770 b55e 42       		.byte	0x42
 26771 b55f 8002     		.value	0x280
 26772 b561 28930000 		.long	0x9328
 26773 b565 70B50000 		.long	0xb570
 26774 b569 09       		.uleb128 0x9
 26775 b56a 6EAF0000 		.long	0xaf6e
 26776 b56e 3A       		.uleb128 0x3a
 26777 b56f 00       		.byte	0
 26778 b570 4E       		.uleb128 0x4e
 26779 b571 00000000 		.long	.LASF1498
 26780 b575 42       		.byte	0x42
 26781 b576 DD       		.byte	0xdd
 26782 b577 00000000 		.long	.LASF1498
 26783 b57b 6EAF0000 		.long	0xaf6e
 26784 b57f 8EB50000 		.long	0xb58e
 26785 b583 09       		.uleb128 0x9
 26786 b584 6EAF0000 		.long	0xaf6e
 26787 b588 09       		.uleb128 0x9
 26788 b589 31AF0000 		.long	0xaf31
 26789 b58d 00       		.byte	0
 26790 b58e 1E       		.uleb128 0x1e
 26791 b58f 00000000 		.long	.LASF1499
 26792 b593 42       		.byte	0x42
 26793 b594 0301     		.value	0x103
 26794 b596 00000000 		.long	.LASF1499
 26795 b59a 6EAF0000 		.long	0xaf6e
 26796 b59e ADB50000 		.long	0xb5ad
 26797 b5a2 09       		.uleb128 0x9
 26798 b5a3 6EAF0000 		.long	0xaf6e
 26799 b5a7 09       		.uleb128 0x9
 26800 b5a8 6EAF0000 		.long	0xaf6e
 26801 b5ac 00       		.byte	0
 26802 b5ad 4E       		.uleb128 0x4e
 26803 b5ae 00000000 		.long	.LASF1500
 26804 b5b2 42       		.byte	0x42
 26805 b5b3 E7       		.byte	0xe7
 26806 b5b4 00000000 		.long	.LASF1500
 26807 b5b8 6EAF0000 		.long	0xaf6e
 26808 b5bc CBB50000 		.long	0xb5cb
 26809 b5c0 09       		.uleb128 0x9
 26810 b5c1 6EAF0000 		.long	0xaf6e
 26811 b5c5 09       		.uleb128 0x9
 26812 b5c6 31AF0000 		.long	0xaf31
 26813 b5ca 00       		.byte	0
 26814 b5cb 1E       		.uleb128 0x1e
 26815 b5cc 00000000 		.long	.LASF1501
 26816 b5d0 42       		.byte	0x42
 26817 b5d1 0E01     		.value	0x10e
 26818 b5d3 00000000 		.long	.LASF1501
 26819 b5d7 6EAF0000 		.long	0xaf6e
 26820 b5db EAB50000 		.long	0xb5ea
 26821 b5df 09       		.uleb128 0x9
 26822 b5e0 6EAF0000 		.long	0xaf6e
 26823 b5e4 09       		.uleb128 0x9
 26824 b5e5 6EAF0000 		.long	0xaf6e
 26825 b5e9 00       		.byte	0
 26826 b5ea 1E       		.uleb128 0x1e
GAS LISTING /tmp/ccJUMvuF.s 			page 772


 26827 b5eb 00000000 		.long	.LASF1502
 26828 b5ef 42       		.byte	0x42
 26829 b5f0 3901     		.value	0x139
 26830 b5f2 00000000 		.long	.LASF1502
 26831 b5f6 6EAF0000 		.long	0xaf6e
 26832 b5fa 0EB60000 		.long	0xb60e
 26833 b5fe 09       		.uleb128 0x9
 26834 b5ff 6EAF0000 		.long	0xaf6e
 26835 b603 09       		.uleb128 0x9
 26836 b604 31AF0000 		.long	0xaf31
 26837 b608 09       		.uleb128 0x9
 26838 b609 3BAE0000 		.long	0xae3b
 26839 b60d 00       		.byte	0
 26840 b60e 76       		.uleb128 0x76
 26841 b60f 00000000 		.long	.LASF1503
 26842 b613 42       		.byte	0x42
 26843 b614 C901     		.value	0x1c9
 26844 b616 3FAC0000 		.long	0xac3f
 26845 b61a 29B60000 		.long	0xb629
 26846 b61e 09       		.uleb128 0x9
 26847 b61f 6EAF0000 		.long	0xaf6e
 26848 b623 09       		.uleb128 0x9
 26849 b624 0CB40000 		.long	0xb40c
 26850 b628 00       		.byte	0
 26851 b629 76       		.uleb128 0x76
 26852 b62a 00000000 		.long	.LASF1504
 26853 b62e 42       		.byte	0x42
 26854 b62f E101     		.value	0x1e1
 26855 b631 8B930000 		.long	0x938b
 26856 b635 49B60000 		.long	0xb649
 26857 b639 09       		.uleb128 0x9
 26858 b63a 6EAF0000 		.long	0xaf6e
 26859 b63e 09       		.uleb128 0x9
 26860 b63f 0CB40000 		.long	0xb40c
 26861 b643 09       		.uleb128 0x9
 26862 b644 28930000 		.long	0x9328
 26863 b648 00       		.byte	0
 26864 b649 76       		.uleb128 0x76
 26865 b64a 00000000 		.long	.LASF1505
 26866 b64e 42       		.byte	0x42
 26867 b64f E801     		.value	0x1e8
 26868 b651 6F930000 		.long	0x936f
 26869 b655 69B60000 		.long	0xb669
 26870 b659 09       		.uleb128 0x9
 26871 b65a 6EAF0000 		.long	0xaf6e
 26872 b65e 09       		.uleb128 0x9
 26873 b65f 0CB40000 		.long	0xb40c
 26874 b663 09       		.uleb128 0x9
 26875 b664 28930000 		.long	0x9328
 26876 b668 00       		.byte	0
 26877 b669 7F       		.uleb128 0x7f
 26878 b66a 08       		.byte	0x8
 26879 b66b C9040000 		.long	0x4c9
 26880 b66f 7F       		.uleb128 0x7f
 26881 b670 08       		.byte	0x8
 26882 b671 F9040000 		.long	0x4f9
 26883 b675 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 773


 26884 b676 08       		.byte	0x8
 26885 b677 F9040000 		.long	0x4f9
 26886 b67b 7E       		.uleb128 0x7e
 26887 b67c 08       		.byte	0x8
 26888 b67d C9040000 		.long	0x4c9
 26889 b681 7F       		.uleb128 0x7f
 26890 b682 08       		.byte	0x8
 26891 b683 20060000 		.long	0x620
 26892 b687 13       		.uleb128 0x13
 26893 b688 00000000 		.long	.LASF1506
 26894 b68c 44       		.byte	0x44
 26895 b68d 25       		.byte	0x25
 26896 b68e 76930000 		.long	0x9376
 26897 b692 13       		.uleb128 0x13
 26898 b693 00000000 		.long	.LASF1507
 26899 b697 44       		.byte	0x44
 26900 b698 26       		.byte	0x26
 26901 b699 7D930000 		.long	0x937d
 26902 b69d 13       		.uleb128 0x13
 26903 b69e 00000000 		.long	.LASF1508
 26904 b6a2 44       		.byte	0x44
 26905 b6a3 27       		.byte	0x27
 26906 b6a4 28930000 		.long	0x9328
 26907 b6a8 13       		.uleb128 0x13
 26908 b6a9 00000000 		.long	.LASF1509
 26909 b6ad 44       		.byte	0x44
 26910 b6ae 29       		.byte	0x29
 26911 b6af 84930000 		.long	0x9384
 26912 b6b3 13       		.uleb128 0x13
 26913 b6b4 00000000 		.long	.LASF1510
 26914 b6b8 44       		.byte	0x44
 26915 b6b9 31       		.byte	0x31
 26916 b6ba 5A930000 		.long	0x935a
 26917 b6be 13       		.uleb128 0x13
 26918 b6bf 00000000 		.long	.LASF1511
 26919 b6c3 44       		.byte	0x44
 26920 b6c4 32       		.byte	0x32
 26921 b6c5 61930000 		.long	0x9361
 26922 b6c9 13       		.uleb128 0x13
 26923 b6ca 00000000 		.long	.LASF1512
 26924 b6ce 44       		.byte	0x44
 26925 b6cf 34       		.byte	0x34
 26926 b6d0 68930000 		.long	0x9368
 26927 b6d4 13       		.uleb128 0x13
 26928 b6d5 00000000 		.long	.LASF1513
 26929 b6d9 44       		.byte	0x44
 26930 b6da 38       		.byte	0x38
 26931 b6db 53930000 		.long	0x9353
 26932 b6df 13       		.uleb128 0x13
 26933 b6e0 00000000 		.long	.LASF1514
 26934 b6e4 44       		.byte	0x44
 26935 b6e5 42       		.byte	0x42
 26936 b6e6 76930000 		.long	0x9376
 26937 b6ea 13       		.uleb128 0x13
 26938 b6eb 00000000 		.long	.LASF1515
 26939 b6ef 44       		.byte	0x44
 26940 b6f0 43       		.byte	0x43
GAS LISTING /tmp/ccJUMvuF.s 			page 774


 26941 b6f1 7D930000 		.long	0x937d
 26942 b6f5 13       		.uleb128 0x13
 26943 b6f6 00000000 		.long	.LASF1516
 26944 b6fa 44       		.byte	0x44
 26945 b6fb 44       		.byte	0x44
 26946 b6fc 28930000 		.long	0x9328
 26947 b700 13       		.uleb128 0x13
 26948 b701 00000000 		.long	.LASF1517
 26949 b705 44       		.byte	0x44
 26950 b706 46       		.byte	0x46
 26951 b707 84930000 		.long	0x9384
 26952 b70b 13       		.uleb128 0x13
 26953 b70c 00000000 		.long	.LASF1518
 26954 b710 44       		.byte	0x44
 26955 b711 4D       		.byte	0x4d
 26956 b712 5A930000 		.long	0x935a
 26957 b716 13       		.uleb128 0x13
 26958 b717 00000000 		.long	.LASF1519
 26959 b71b 44       		.byte	0x44
 26960 b71c 4E       		.byte	0x4e
 26961 b71d 61930000 		.long	0x9361
 26962 b721 13       		.uleb128 0x13
 26963 b722 00000000 		.long	.LASF1520
 26964 b726 44       		.byte	0x44
 26965 b727 4F       		.byte	0x4f
 26966 b728 68930000 		.long	0x9368
 26967 b72c 13       		.uleb128 0x13
 26968 b72d 00000000 		.long	.LASF1521
 26969 b731 44       		.byte	0x44
 26970 b732 51       		.byte	0x51
 26971 b733 53930000 		.long	0x9353
 26972 b737 13       		.uleb128 0x13
 26973 b738 00000000 		.long	.LASF1522
 26974 b73c 44       		.byte	0x44
 26975 b73d 5B       		.byte	0x5b
 26976 b73e 76930000 		.long	0x9376
 26977 b742 13       		.uleb128 0x13
 26978 b743 00000000 		.long	.LASF1523
 26979 b747 44       		.byte	0x44
 26980 b748 5D       		.byte	0x5d
 26981 b749 84930000 		.long	0x9384
 26982 b74d 13       		.uleb128 0x13
 26983 b74e 00000000 		.long	.LASF1524
 26984 b752 44       		.byte	0x44
 26985 b753 5E       		.byte	0x5e
 26986 b754 84930000 		.long	0x9384
 26987 b758 13       		.uleb128 0x13
 26988 b759 00000000 		.long	.LASF1525
 26989 b75d 44       		.byte	0x44
 26990 b75e 5F       		.byte	0x5f
 26991 b75f 84930000 		.long	0x9384
 26992 b763 13       		.uleb128 0x13
 26993 b764 00000000 		.long	.LASF1526
 26994 b768 44       		.byte	0x44
 26995 b769 68       		.byte	0x68
 26996 b76a 5A930000 		.long	0x935a
 26997 b76e 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 775


 26998 b76f 00000000 		.long	.LASF1527
 26999 b773 44       		.byte	0x44
 27000 b774 6A       		.byte	0x6a
 27001 b775 53930000 		.long	0x9353
 27002 b779 13       		.uleb128 0x13
 27003 b77a 00000000 		.long	.LASF1528
 27004 b77e 44       		.byte	0x44
 27005 b77f 6B       		.byte	0x6b
 27006 b780 53930000 		.long	0x9353
 27007 b784 13       		.uleb128 0x13
 27008 b785 00000000 		.long	.LASF1529
 27009 b789 44       		.byte	0x44
 27010 b78a 6C       		.byte	0x6c
 27011 b78b 53930000 		.long	0x9353
 27012 b78f 13       		.uleb128 0x13
 27013 b790 00000000 		.long	.LASF1530
 27014 b794 44       		.byte	0x44
 27015 b795 78       		.byte	0x78
 27016 b796 84930000 		.long	0x9384
 27017 b79a 13       		.uleb128 0x13
 27018 b79b 00000000 		.long	.LASF1531
 27019 b79f 44       		.byte	0x44
 27020 b7a0 7B       		.byte	0x7b
 27021 b7a1 53930000 		.long	0x9353
 27022 b7a5 13       		.uleb128 0x13
 27023 b7a6 00000000 		.long	.LASF1532
 27024 b7aa 44       		.byte	0x44
 27025 b7ab 87       		.byte	0x87
 27026 b7ac 84930000 		.long	0x9384
 27027 b7b0 13       		.uleb128 0x13
 27028 b7b1 00000000 		.long	.LASF1533
 27029 b7b5 44       		.byte	0x44
 27030 b7b6 88       		.byte	0x88
 27031 b7b7 53930000 		.long	0x9353
 27032 b7bb 02       		.uleb128 0x2
 27033 b7bc 02       		.byte	0x2
 27034 b7bd 10       		.byte	0x10
 27035 b7be 00000000 		.long	.LASF1534
 27036 b7c2 02       		.uleb128 0x2
 27037 b7c3 04       		.byte	0x4
 27038 b7c4 10       		.byte	0x10
 27039 b7c5 00000000 		.long	.LASF1535
 27040 b7c9 7E       		.uleb128 0x7e
 27041 b7ca 08       		.byte	0x8
 27042 b7cb CFB70000 		.long	0xb7cf
 27043 b7cf 8F01     		.uleb128 0x8f
 27044 b7d1 7F       		.uleb128 0x7f
 27045 b7d2 08       		.byte	0x8
 27046 b7d3 ACAE0000 		.long	0xaeac
 27047 b7d7 7F       		.uleb128 0x7f
 27048 b7d8 08       		.byte	0x8
 27049 b7d9 D4AE0000 		.long	0xaed4
 27050 b7dd 7E       		.uleb128 0x7e
 27051 b7de 08       		.byte	0x8
 27052 b7df D0940000 		.long	0x94d0
 27053 b7e3 7F       		.uleb128 0x7f
 27054 b7e4 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 776


 27055 b7e5 1E960000 		.long	0x961e
 27056 b7e9 7E       		.uleb128 0x7e
 27057 b7ea 08       		.byte	0x8
 27058 b7eb 1E960000 		.long	0x961e
 27059 b7ef 7E       		.uleb128 0x7e
 27060 b7f0 08       		.byte	0x8
 27061 b7f1 6A070000 		.long	0x76a
 27062 b7f5 7F       		.uleb128 0x7f
 27063 b7f6 08       		.byte	0x8
 27064 b7f7 EA070000 		.long	0x7ea
 27065 b7fb 16       		.uleb128 0x16
 27066 b7fc 00000000 		.long	.LASF1536
 27067 b800 60       		.byte	0x60
 27068 b801 45       		.byte	0x45
 27069 b802 36       		.byte	0x36
 27070 b803 28B90000 		.long	0xb928
 27071 b807 06       		.uleb128 0x6
 27072 b808 00000000 		.long	.LASF1537
 27073 b80c 45       		.byte	0x45
 27074 b80d 3A       		.byte	0x3a
 27075 b80e F0B10000 		.long	0xb1f0
 27076 b812 00       		.byte	0
 27077 b813 06       		.uleb128 0x6
 27078 b814 00000000 		.long	.LASF1538
 27079 b818 45       		.byte	0x45
 27080 b819 3B       		.byte	0x3b
 27081 b81a F0B10000 		.long	0xb1f0
 27082 b81e 08       		.byte	0x8
 27083 b81f 06       		.uleb128 0x6
 27084 b820 00000000 		.long	.LASF1539
 27085 b824 45       		.byte	0x45
 27086 b825 41       		.byte	0x41
 27087 b826 F0B10000 		.long	0xb1f0
 27088 b82a 10       		.byte	0x10
 27089 b82b 06       		.uleb128 0x6
 27090 b82c 00000000 		.long	.LASF1540
 27091 b830 45       		.byte	0x45
 27092 b831 47       		.byte	0x47
 27093 b832 F0B10000 		.long	0xb1f0
 27094 b836 18       		.byte	0x18
 27095 b837 06       		.uleb128 0x6
 27096 b838 00000000 		.long	.LASF1541
 27097 b83c 45       		.byte	0x45
 27098 b83d 48       		.byte	0x48
 27099 b83e F0B10000 		.long	0xb1f0
 27100 b842 20       		.byte	0x20
 27101 b843 06       		.uleb128 0x6
 27102 b844 00000000 		.long	.LASF1542
 27103 b848 45       		.byte	0x45
 27104 b849 49       		.byte	0x49
 27105 b84a F0B10000 		.long	0xb1f0
 27106 b84e 28       		.byte	0x28
 27107 b84f 06       		.uleb128 0x6
 27108 b850 00000000 		.long	.LASF1543
 27109 b854 45       		.byte	0x45
 27110 b855 4A       		.byte	0x4a
 27111 b856 F0B10000 		.long	0xb1f0
GAS LISTING /tmp/ccJUMvuF.s 			page 777


 27112 b85a 30       		.byte	0x30
 27113 b85b 06       		.uleb128 0x6
 27114 b85c 00000000 		.long	.LASF1544
 27115 b860 45       		.byte	0x45
 27116 b861 4B       		.byte	0x4b
 27117 b862 F0B10000 		.long	0xb1f0
 27118 b866 38       		.byte	0x38
 27119 b867 06       		.uleb128 0x6
 27120 b868 00000000 		.long	.LASF1545
 27121 b86c 45       		.byte	0x45
 27122 b86d 4C       		.byte	0x4c
 27123 b86e F0B10000 		.long	0xb1f0
 27124 b872 40       		.byte	0x40
 27125 b873 06       		.uleb128 0x6
 27126 b874 00000000 		.long	.LASF1546
 27127 b878 45       		.byte	0x45
 27128 b879 4D       		.byte	0x4d
 27129 b87a F0B10000 		.long	0xb1f0
 27130 b87e 48       		.byte	0x48
 27131 b87f 06       		.uleb128 0x6
 27132 b880 00000000 		.long	.LASF1547
 27133 b884 45       		.byte	0x45
 27134 b885 4E       		.byte	0x4e
 27135 b886 ACAE0000 		.long	0xaeac
 27136 b88a 50       		.byte	0x50
 27137 b88b 06       		.uleb128 0x6
 27138 b88c 00000000 		.long	.LASF1548
 27139 b890 45       		.byte	0x45
 27140 b891 4F       		.byte	0x4f
 27141 b892 ACAE0000 		.long	0xaeac
 27142 b896 51       		.byte	0x51
 27143 b897 06       		.uleb128 0x6
 27144 b898 00000000 		.long	.LASF1549
 27145 b89c 45       		.byte	0x45
 27146 b89d 51       		.byte	0x51
 27147 b89e ACAE0000 		.long	0xaeac
 27148 b8a2 52       		.byte	0x52
 27149 b8a3 06       		.uleb128 0x6
 27150 b8a4 00000000 		.long	.LASF1550
 27151 b8a8 45       		.byte	0x45
 27152 b8a9 53       		.byte	0x53
 27153 b8aa ACAE0000 		.long	0xaeac
 27154 b8ae 53       		.byte	0x53
 27155 b8af 06       		.uleb128 0x6
 27156 b8b0 00000000 		.long	.LASF1551
 27157 b8b4 45       		.byte	0x45
 27158 b8b5 55       		.byte	0x55
 27159 b8b6 ACAE0000 		.long	0xaeac
 27160 b8ba 54       		.byte	0x54
 27161 b8bb 06       		.uleb128 0x6
 27162 b8bc 00000000 		.long	.LASF1552
 27163 b8c0 45       		.byte	0x45
 27164 b8c1 57       		.byte	0x57
 27165 b8c2 ACAE0000 		.long	0xaeac
 27166 b8c6 55       		.byte	0x55
 27167 b8c7 06       		.uleb128 0x6
 27168 b8c8 00000000 		.long	.LASF1553
GAS LISTING /tmp/ccJUMvuF.s 			page 778


 27169 b8cc 45       		.byte	0x45
 27170 b8cd 5E       		.byte	0x5e
 27171 b8ce ACAE0000 		.long	0xaeac
 27172 b8d2 56       		.byte	0x56
 27173 b8d3 06       		.uleb128 0x6
 27174 b8d4 00000000 		.long	.LASF1554
 27175 b8d8 45       		.byte	0x45
 27176 b8d9 5F       		.byte	0x5f
 27177 b8da ACAE0000 		.long	0xaeac
 27178 b8de 57       		.byte	0x57
 27179 b8df 06       		.uleb128 0x6
 27180 b8e0 00000000 		.long	.LASF1555
 27181 b8e4 45       		.byte	0x45
 27182 b8e5 62       		.byte	0x62
 27183 b8e6 ACAE0000 		.long	0xaeac
 27184 b8ea 58       		.byte	0x58
 27185 b8eb 06       		.uleb128 0x6
 27186 b8ec 00000000 		.long	.LASF1556
 27187 b8f0 45       		.byte	0x45
 27188 b8f1 64       		.byte	0x64
 27189 b8f2 ACAE0000 		.long	0xaeac
 27190 b8f6 59       		.byte	0x59
 27191 b8f7 06       		.uleb128 0x6
 27192 b8f8 00000000 		.long	.LASF1557
 27193 b8fc 45       		.byte	0x45
 27194 b8fd 66       		.byte	0x66
 27195 b8fe ACAE0000 		.long	0xaeac
 27196 b902 5A       		.byte	0x5a
 27197 b903 06       		.uleb128 0x6
 27198 b904 00000000 		.long	.LASF1558
 27199 b908 45       		.byte	0x45
 27200 b909 68       		.byte	0x68
 27201 b90a ACAE0000 		.long	0xaeac
 27202 b90e 5B       		.byte	0x5b
 27203 b90f 06       		.uleb128 0x6
 27204 b910 00000000 		.long	.LASF1559
 27205 b914 45       		.byte	0x45
 27206 b915 6F       		.byte	0x6f
 27207 b916 ACAE0000 		.long	0xaeac
 27208 b91a 5C       		.byte	0x5c
 27209 b91b 06       		.uleb128 0x6
 27210 b91c 00000000 		.long	.LASF1560
 27211 b920 45       		.byte	0x45
 27212 b921 70       		.byte	0x70
 27213 b922 ACAE0000 		.long	0xaeac
 27214 b926 5D       		.byte	0x5d
 27215 b927 00       		.byte	0
 27216 b928 52       		.uleb128 0x52
 27217 b929 00000000 		.long	.LASF1561
 27218 b92d 45       		.byte	0x45
 27219 b92e 7D       		.byte	0x7d
 27220 b92f F0B10000 		.long	0xb1f0
 27221 b933 42B90000 		.long	0xb942
 27222 b937 09       		.uleb128 0x9
 27223 b938 28930000 		.long	0x9328
 27224 b93c 09       		.uleb128 0x9
 27225 b93d CEAE0000 		.long	0xaece
GAS LISTING /tmp/ccJUMvuF.s 			page 779


 27226 b941 00       		.byte	0
 27227 b942 8401     		.uleb128 0x84
 27228 b944 00000000 		.long	.LASF1562
 27229 b948 45       		.byte	0x45
 27230 b949 80       		.byte	0x80
 27231 b94a 4EB90000 		.long	0xb94e
 27232 b94e 7E       		.uleb128 0x7e
 27233 b94f 08       		.byte	0x8
 27234 b950 FBB70000 		.long	0xb7fb
 27235 b954 13       		.uleb128 0x13
 27236 b955 00000000 		.long	.LASF1563
 27237 b959 46       		.byte	0x46
 27238 b95a 29       		.byte	0x29
 27239 b95b 28930000 		.long	0x9328
 27240 b95f 13       		.uleb128 0x13
 27241 b960 00000000 		.long	.LASF1564
 27242 b964 46       		.byte	0x46
 27243 b965 8D       		.byte	0x8d
 27244 b966 84930000 		.long	0x9384
 27245 b96a 13       		.uleb128 0x13
 27246 b96b 00000000 		.long	.LASF1565
 27247 b96f 46       		.byte	0x46
 27248 b970 8E       		.byte	0x8e
 27249 b971 84930000 		.long	0x9384
 27250 b975 9001     		.uleb128 0x90
 27251 b977 81B90000 		.long	0xb981
 27252 b97b 09       		.uleb128 0x9
 27253 b97c 01930000 		.long	0x9301
 27254 b980 00       		.byte	0
 27255 b981 7E       		.uleb128 0x7e
 27256 b982 08       		.byte	0x8
 27257 b983 75B90000 		.long	0xb975
 27258 b987 13       		.uleb128 0x13
 27259 b988 00000000 		.long	.LASF1566
 27260 b98c 47       		.byte	0x47
 27261 b98d 20       		.byte	0x20
 27262 b98e 28930000 		.long	0x9328
 27263 b992 8801     		.uleb128 0x88
 27264 b994 08       		.byte	0x8
 27265 b995 48       		.byte	0x48
 27266 b996 63       		.byte	0x63
 27267 b997 00000000 		.long	.LASF1568
 27268 b99b B9B90000 		.long	0xb9b9
 27269 b99f 06       		.uleb128 0x6
 27270 b9a0 00000000 		.long	.LASF1569
 27271 b9a4 48       		.byte	0x48
 27272 b9a5 64       		.byte	0x64
 27273 b9a6 28930000 		.long	0x9328
 27274 b9aa 00       		.byte	0
 27275 b9ab 9101     		.uleb128 0x91
 27276 b9ad 72656D00 		.string	"rem"
 27277 b9b1 48       		.byte	0x48
 27278 b9b2 65       		.byte	0x65
 27279 b9b3 28930000 		.long	0x9328
 27280 b9b7 04       		.byte	0x4
 27281 b9b8 00       		.byte	0
 27282 b9b9 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 780


 27283 b9ba 00000000 		.long	.LASF1570
 27284 b9be 48       		.byte	0x48
 27285 b9bf 66       		.byte	0x66
 27286 b9c0 92B90000 		.long	0xb992
 27287 b9c4 8801     		.uleb128 0x88
 27288 b9c6 10       		.byte	0x10
 27289 b9c7 48       		.byte	0x48
 27290 b9c8 6B       		.byte	0x6b
 27291 b9c9 00000000 		.long	.LASF1571
 27292 b9cd EBB90000 		.long	0xb9eb
 27293 b9d1 06       		.uleb128 0x6
 27294 b9d2 00000000 		.long	.LASF1569
 27295 b9d6 48       		.byte	0x48
 27296 b9d7 6C       		.byte	0x6c
 27297 b9d8 84930000 		.long	0x9384
 27298 b9dc 00       		.byte	0
 27299 b9dd 9101     		.uleb128 0x91
 27300 b9df 72656D00 		.string	"rem"
 27301 b9e3 48       		.byte	0x48
 27302 b9e4 6D       		.byte	0x6d
 27303 b9e5 84930000 		.long	0x9384
 27304 b9e9 08       		.byte	0x8
 27305 b9ea 00       		.byte	0
 27306 b9eb 13       		.uleb128 0x13
 27307 b9ec 00000000 		.long	.LASF1572
 27308 b9f0 48       		.byte	0x48
 27309 b9f1 6E       		.byte	0x6e
 27310 b9f2 C4B90000 		.long	0xb9c4
 27311 b9f6 8801     		.uleb128 0x88
 27312 b9f8 10       		.byte	0x10
 27313 b9f9 48       		.byte	0x48
 27314 b9fa 77       		.byte	0x77
 27315 b9fb 00000000 		.long	.LASF1573
 27316 b9ff 1DBA0000 		.long	0xba1d
 27317 ba03 06       		.uleb128 0x6
 27318 ba04 00000000 		.long	.LASF1569
 27319 ba08 48       		.byte	0x48
 27320 ba09 78       		.byte	0x78
 27321 ba0a 8B930000 		.long	0x938b
 27322 ba0e 00       		.byte	0
 27323 ba0f 9101     		.uleb128 0x91
 27324 ba11 72656D00 		.string	"rem"
 27325 ba15 48       		.byte	0x48
 27326 ba16 79       		.byte	0x79
 27327 ba17 8B930000 		.long	0x938b
 27328 ba1b 08       		.byte	0x8
 27329 ba1c 00       		.byte	0
 27330 ba1d 13       		.uleb128 0x13
 27331 ba1e 00000000 		.long	.LASF1574
 27332 ba22 48       		.byte	0x48
 27333 ba23 7A       		.byte	0x7a
 27334 ba24 F6B90000 		.long	0xb9f6
 27335 ba28 5C       		.uleb128 0x5c
 27336 ba29 00000000 		.long	.LASF1575
 27337 ba2d 48       		.byte	0x48
 27338 ba2e E602     		.value	0x2e6
 27339 ba30 34BA0000 		.long	0xba34
GAS LISTING /tmp/ccJUMvuF.s 			page 781


 27340 ba34 7E       		.uleb128 0x7e
 27341 ba35 08       		.byte	0x8
 27342 ba36 3ABA0000 		.long	0xba3a
 27343 ba3a 9201     		.uleb128 0x92
 27344 ba3c 28930000 		.long	0x9328
 27345 ba40 4FBA0000 		.long	0xba4f
 27346 ba44 09       		.uleb128 0x9
 27347 ba45 C9B70000 		.long	0xb7c9
 27348 ba49 09       		.uleb128 0x9
 27349 ba4a C9B70000 		.long	0xb7c9
 27350 ba4e 00       		.byte	0
 27351 ba4f 76       		.uleb128 0x76
 27352 ba50 00000000 		.long	.LASF1576
 27353 ba54 48       		.byte	0x48
 27354 ba55 0602     		.value	0x206
 27355 ba57 28930000 		.long	0x9328
 27356 ba5b 65BA0000 		.long	0xba65
 27357 ba5f 09       		.uleb128 0x9
 27358 ba60 65BA0000 		.long	0xba65
 27359 ba64 00       		.byte	0
 27360 ba65 7E       		.uleb128 0x7e
 27361 ba66 08       		.byte	0x8
 27362 ba67 6BBA0000 		.long	0xba6b
 27363 ba6b 9301     		.uleb128 0x93
 27364 ba6d 1E       		.uleb128 0x1e
 27365 ba6e 00000000 		.long	.LASF1577
 27366 ba72 48       		.byte	0x48
 27367 ba73 0D02     		.value	0x20d
 27368 ba75 00000000 		.long	.LASF1577
 27369 ba79 28930000 		.long	0x9328
 27370 ba7d 87BA0000 		.long	0xba87
 27371 ba81 09       		.uleb128 0x9
 27372 ba82 65BA0000 		.long	0xba65
 27373 ba86 00       		.byte	0
 27374 ba87 76       		.uleb128 0x76
 27375 ba88 00000000 		.long	.LASF1578
 27376 ba8c 48       		.byte	0x48
 27377 ba8d 1701     		.value	0x117
 27378 ba8f 29000000 		.long	0x29
 27379 ba93 9DBA0000 		.long	0xba9d
 27380 ba97 09       		.uleb128 0x9
 27381 ba98 CEAE0000 		.long	0xaece
 27382 ba9c 00       		.byte	0
 27383 ba9d 76       		.uleb128 0x76
 27384 ba9e 00000000 		.long	.LASF1579
 27385 baa2 48       		.byte	0x48
 27386 baa3 1C01     		.value	0x11c
 27387 baa5 28930000 		.long	0x9328
 27388 baa9 B3BA0000 		.long	0xbab3
 27389 baad 09       		.uleb128 0x9
 27390 baae CEAE0000 		.long	0xaece
 27391 bab2 00       		.byte	0
 27392 bab3 76       		.uleb128 0x76
 27393 bab4 00000000 		.long	.LASF1580
 27394 bab8 48       		.byte	0x48
 27395 bab9 2101     		.value	0x121
 27396 babb 84930000 		.long	0x9384
GAS LISTING /tmp/ccJUMvuF.s 			page 782


 27397 babf C9BA0000 		.long	0xbac9
 27398 bac3 09       		.uleb128 0x9
 27399 bac4 CEAE0000 		.long	0xaece
 27400 bac8 00       		.byte	0
 27401 bac9 76       		.uleb128 0x76
 27402 baca 00000000 		.long	.LASF1581
 27403 bace 48       		.byte	0x48
 27404 bacf F302     		.value	0x2f3
 27405 bad1 01930000 		.long	0x9301
 27406 bad5 F3BA0000 		.long	0xbaf3
 27407 bad9 09       		.uleb128 0x9
 27408 bada C9B70000 		.long	0xb7c9
 27409 bade 09       		.uleb128 0x9
 27410 badf C9B70000 		.long	0xb7c9
 27411 bae3 09       		.uleb128 0x9
 27412 bae4 3BAE0000 		.long	0xae3b
 27413 bae8 09       		.uleb128 0x9
 27414 bae9 3BAE0000 		.long	0xae3b
 27415 baed 09       		.uleb128 0x9
 27416 baee 28BA0000 		.long	0xba28
 27417 baf2 00       		.byte	0
 27418 baf3 9401     		.uleb128 0x94
 27419 baf5 64697600 		.string	"div"
 27420 baf9 48       		.byte	0x48
 27421 bafa 1103     		.value	0x311
 27422 bafc B9B90000 		.long	0xb9b9
 27423 bb00 0FBB0000 		.long	0xbb0f
 27424 bb04 09       		.uleb128 0x9
 27425 bb05 28930000 		.long	0x9328
 27426 bb09 09       		.uleb128 0x9
 27427 bb0a 28930000 		.long	0x9328
 27428 bb0e 00       		.byte	0
 27429 bb0f 76       		.uleb128 0x76
 27430 bb10 00000000 		.long	.LASF1582
 27431 bb14 48       		.byte	0x48
 27432 bb15 3702     		.value	0x237
 27433 bb17 F0B10000 		.long	0xb1f0
 27434 bb1b 25BB0000 		.long	0xbb25
 27435 bb1f 09       		.uleb128 0x9
 27436 bb20 CEAE0000 		.long	0xaece
 27437 bb24 00       		.byte	0
 27438 bb25 76       		.uleb128 0x76
 27439 bb26 00000000 		.long	.LASF1583
 27440 bb2a 48       		.byte	0x48
 27441 bb2b 1303     		.value	0x313
 27442 bb2d EBB90000 		.long	0xb9eb
 27443 bb31 40BB0000 		.long	0xbb40
 27444 bb35 09       		.uleb128 0x9
 27445 bb36 84930000 		.long	0x9384
 27446 bb3a 09       		.uleb128 0x9
 27447 bb3b 84930000 		.long	0x9384
 27448 bb3f 00       		.byte	0
 27449 bb40 76       		.uleb128 0x76
 27450 bb41 00000000 		.long	.LASF1584
 27451 bb45 48       		.byte	0x48
 27452 bb46 5C03     		.value	0x35c
 27453 bb48 28930000 		.long	0x9328
GAS LISTING /tmp/ccJUMvuF.s 			page 783


 27454 bb4c 5BBB0000 		.long	0xbb5b
 27455 bb50 09       		.uleb128 0x9
 27456 bb51 CEAE0000 		.long	0xaece
 27457 bb55 09       		.uleb128 0x9
 27458 bb56 3BAE0000 		.long	0xae3b
 27459 bb5a 00       		.byte	0
 27460 bb5b 76       		.uleb128 0x76
 27461 bb5c 00000000 		.long	.LASF1585
 27462 bb60 48       		.byte	0x48
 27463 bb61 6703     		.value	0x367
 27464 bb63 3BAE0000 		.long	0xae3b
 27465 bb67 7BBB0000 		.long	0xbb7b
 27466 bb6b 09       		.uleb128 0x9
 27467 bb6c 2BAF0000 		.long	0xaf2b
 27468 bb70 09       		.uleb128 0x9
 27469 bb71 CEAE0000 		.long	0xaece
 27470 bb75 09       		.uleb128 0x9
 27471 bb76 3BAE0000 		.long	0xae3b
 27472 bb7a 00       		.byte	0
 27473 bb7b 76       		.uleb128 0x76
 27474 bb7c 00000000 		.long	.LASF1586
 27475 bb80 48       		.byte	0x48
 27476 bb81 5F03     		.value	0x35f
 27477 bb83 28930000 		.long	0x9328
 27478 bb87 9BBB0000 		.long	0xbb9b
 27479 bb8b 09       		.uleb128 0x9
 27480 bb8c 2BAF0000 		.long	0xaf2b
 27481 bb90 09       		.uleb128 0x9
 27482 bb91 CEAE0000 		.long	0xaece
 27483 bb95 09       		.uleb128 0x9
 27484 bb96 3BAE0000 		.long	0xae3b
 27485 bb9a 00       		.byte	0
 27486 bb9b 4C       		.uleb128 0x4c
 27487 bb9c 00000000 		.long	.LASF1587
 27488 bba0 48       		.byte	0x48
 27489 bba1 F902     		.value	0x2f9
 27490 bba3 BCBB0000 		.long	0xbbbc
 27491 bba7 09       		.uleb128 0x9
 27492 bba8 01930000 		.long	0x9301
 27493 bbac 09       		.uleb128 0x9
 27494 bbad 3BAE0000 		.long	0xae3b
 27495 bbb1 09       		.uleb128 0x9
 27496 bbb2 3BAE0000 		.long	0xae3b
 27497 bbb6 09       		.uleb128 0x9
 27498 bbb7 28BA0000 		.long	0xba28
 27499 bbbb 00       		.byte	0
 27500 bbbc 4C       		.uleb128 0x4c
 27501 bbbd 00000000 		.long	.LASF1588
 27502 bbc1 48       		.byte	0x48
 27503 bbc2 2802     		.value	0x228
 27504 bbc4 CEBB0000 		.long	0xbbce
 27505 bbc8 09       		.uleb128 0x9
 27506 bbc9 28930000 		.long	0x9328
 27507 bbcd 00       		.byte	0
 27508 bbce 8D01     		.uleb128 0x8d
 27509 bbd0 00000000 		.long	.LASF1589
 27510 bbd4 48       		.byte	0x48
GAS LISTING /tmp/ccJUMvuF.s 			page 784


 27511 bbd5 7C01     		.value	0x17c
 27512 bbd7 28930000 		.long	0x9328
 27513 bbdb 4C       		.uleb128 0x4c
 27514 bbdc 00000000 		.long	.LASF1590
 27515 bbe0 48       		.byte	0x48
 27516 bbe1 7E01     		.value	0x17e
 27517 bbe3 EDBB0000 		.long	0xbbed
 27518 bbe7 09       		.uleb128 0x9
 27519 bbe8 68930000 		.long	0x9368
 27520 bbec 00       		.byte	0
 27521 bbed 52       		.uleb128 0x52
 27522 bbee 00000000 		.long	.LASF1591
 27523 bbf2 48       		.byte	0x48
 27524 bbf3 A5       		.byte	0xa5
 27525 bbf4 29000000 		.long	0x29
 27526 bbf8 07BC0000 		.long	0xbc07
 27527 bbfc 09       		.uleb128 0x9
 27528 bbfd CEAE0000 		.long	0xaece
 27529 bc01 09       		.uleb128 0x9
 27530 bc02 07BC0000 		.long	0xbc07
 27531 bc06 00       		.byte	0
 27532 bc07 7E       		.uleb128 0x7e
 27533 bc08 08       		.byte	0x8
 27534 bc09 F0B10000 		.long	0xb1f0
 27535 bc0d 52       		.uleb128 0x52
 27536 bc0e 00000000 		.long	.LASF1592
 27537 bc12 48       		.byte	0x48
 27538 bc13 B8       		.byte	0xb8
 27539 bc14 84930000 		.long	0x9384
 27540 bc18 2CBC0000 		.long	0xbc2c
 27541 bc1c 09       		.uleb128 0x9
 27542 bc1d CEAE0000 		.long	0xaece
 27543 bc21 09       		.uleb128 0x9
 27544 bc22 07BC0000 		.long	0xbc07
 27545 bc26 09       		.uleb128 0x9
 27546 bc27 28930000 		.long	0x9328
 27547 bc2b 00       		.byte	0
 27548 bc2c 52       		.uleb128 0x52
 27549 bc2d 00000000 		.long	.LASF1593
 27550 bc31 48       		.byte	0x48
 27551 bc32 BC       		.byte	0xbc
 27552 bc33 53930000 		.long	0x9353
 27553 bc37 4BBC0000 		.long	0xbc4b
 27554 bc3b 09       		.uleb128 0x9
 27555 bc3c CEAE0000 		.long	0xaece
 27556 bc40 09       		.uleb128 0x9
 27557 bc41 07BC0000 		.long	0xbc07
 27558 bc45 09       		.uleb128 0x9
 27559 bc46 28930000 		.long	0x9328
 27560 bc4a 00       		.byte	0
 27561 bc4b 76       		.uleb128 0x76
 27562 bc4c 00000000 		.long	.LASF1594
 27563 bc50 48       		.byte	0x48
 27564 bc51 CD02     		.value	0x2cd
 27565 bc53 28930000 		.long	0x9328
 27566 bc57 61BC0000 		.long	0xbc61
 27567 bc5b 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 785


 27568 bc5c CEAE0000 		.long	0xaece
 27569 bc60 00       		.byte	0
 27570 bc61 76       		.uleb128 0x76
 27571 bc62 00000000 		.long	.LASF1595
 27572 bc66 48       		.byte	0x48
 27573 bc67 6A03     		.value	0x36a
 27574 bc69 3BAE0000 		.long	0xae3b
 27575 bc6d 81BC0000 		.long	0xbc81
 27576 bc71 09       		.uleb128 0x9
 27577 bc72 F0B10000 		.long	0xb1f0
 27578 bc76 09       		.uleb128 0x9
 27579 bc77 6EAF0000 		.long	0xaf6e
 27580 bc7b 09       		.uleb128 0x9
 27581 bc7c 3BAE0000 		.long	0xae3b
 27582 bc80 00       		.byte	0
 27583 bc81 76       		.uleb128 0x76
 27584 bc82 00000000 		.long	.LASF1596
 27585 bc86 48       		.byte	0x48
 27586 bc87 6303     		.value	0x363
 27587 bc89 28930000 		.long	0x9328
 27588 bc8d 9CBC0000 		.long	0xbc9c
 27589 bc91 09       		.uleb128 0x9
 27590 bc92 F0B10000 		.long	0xb1f0
 27591 bc96 09       		.uleb128 0x9
 27592 bc97 31AF0000 		.long	0xaf31
 27593 bc9b 00       		.byte	0
 27594 bc9c 76       		.uleb128 0x76
 27595 bc9d 00000000 		.long	.LASF1597
 27596 bca1 48       		.byte	0x48
 27597 bca2 1903     		.value	0x319
 27598 bca4 1DBA0000 		.long	0xba1d
 27599 bca8 B7BC0000 		.long	0xbcb7
 27600 bcac 09       		.uleb128 0x9
 27601 bcad 8B930000 		.long	0x938b
 27602 bcb1 09       		.uleb128 0x9
 27603 bcb2 8B930000 		.long	0x938b
 27604 bcb6 00       		.byte	0
 27605 bcb7 76       		.uleb128 0x76
 27606 bcb8 00000000 		.long	.LASF1598
 27607 bcbc 48       		.byte	0x48
 27608 bcbd 2A01     		.value	0x12a
 27609 bcbf 8B930000 		.long	0x938b
 27610 bcc3 CDBC0000 		.long	0xbccd
 27611 bcc7 09       		.uleb128 0x9
 27612 bcc8 CEAE0000 		.long	0xaece
 27613 bccc 00       		.byte	0
 27614 bccd 52       		.uleb128 0x52
 27615 bcce 00000000 		.long	.LASF1599
 27616 bcd2 48       		.byte	0x48
 27617 bcd3 D2       		.byte	0xd2
 27618 bcd4 8B930000 		.long	0x938b
 27619 bcd8 ECBC0000 		.long	0xbcec
 27620 bcdc 09       		.uleb128 0x9
 27621 bcdd CEAE0000 		.long	0xaece
 27622 bce1 09       		.uleb128 0x9
 27623 bce2 07BC0000 		.long	0xbc07
 27624 bce6 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 786


 27625 bce7 28930000 		.long	0x9328
 27626 bceb 00       		.byte	0
 27627 bcec 52       		.uleb128 0x52
 27628 bced 00000000 		.long	.LASF1600
 27629 bcf1 48       		.byte	0x48
 27630 bcf2 D7       		.byte	0xd7
 27631 bcf3 6F930000 		.long	0x936f
 27632 bcf7 0BBD0000 		.long	0xbd0b
 27633 bcfb 09       		.uleb128 0x9
 27634 bcfc CEAE0000 		.long	0xaece
 27635 bd00 09       		.uleb128 0x9
 27636 bd01 07BC0000 		.long	0xbc07
 27637 bd05 09       		.uleb128 0x9
 27638 bd06 28930000 		.long	0x9328
 27639 bd0a 00       		.byte	0
 27640 bd0b 52       		.uleb128 0x52
 27641 bd0c 00000000 		.long	.LASF1601
 27642 bd10 48       		.byte	0x48
 27643 bd11 AD       		.byte	0xad
 27644 bd12 30000000 		.long	0x30
 27645 bd16 25BD0000 		.long	0xbd25
 27646 bd1a 09       		.uleb128 0x9
 27647 bd1b CEAE0000 		.long	0xaece
 27648 bd1f 09       		.uleb128 0x9
 27649 bd20 07BC0000 		.long	0xbc07
 27650 bd24 00       		.byte	0
 27651 bd25 52       		.uleb128 0x52
 27652 bd26 00000000 		.long	.LASF1602
 27653 bd2a 48       		.byte	0x48
 27654 bd2b B0       		.byte	0xb0
 27655 bd2c 3FAC0000 		.long	0xac3f
 27656 bd30 3FBD0000 		.long	0xbd3f
 27657 bd34 09       		.uleb128 0x9
 27658 bd35 CEAE0000 		.long	0xaece
 27659 bd39 09       		.uleb128 0x9
 27660 bd3a 07BC0000 		.long	0xbc07
 27661 bd3e 00       		.byte	0
 27662 bd3f 8801     		.uleb128 0x88
 27663 bd41 10       		.byte	0x10
 27664 bd42 49       		.byte	0x49
 27665 bd43 17       		.byte	0x17
 27666 bd44 00000000 		.long	.LASF1603
 27667 bd48 65BD0000 		.long	0xbd65
 27668 bd4c 06       		.uleb128 0x6
 27669 bd4d 00000000 		.long	.LASF1604
 27670 bd51 49       		.byte	0x49
 27671 bd52 18       		.byte	0x18
 27672 bd53 5FB90000 		.long	0xb95f
 27673 bd57 00       		.byte	0
 27674 bd58 06       		.uleb128 0x6
 27675 bd59 00000000 		.long	.LASF1605
 27676 bd5d 49       		.byte	0x49
 27677 bd5e 19       		.byte	0x19
 27678 bd5f B3AE0000 		.long	0xaeb3
 27679 bd63 08       		.byte	0x8
 27680 bd64 00       		.byte	0
 27681 bd65 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 787


 27682 bd66 00000000 		.long	.LASF1606
 27683 bd6a 49       		.byte	0x49
 27684 bd6b 1A       		.byte	0x1a
 27685 bd6c 3FBD0000 		.long	0xbd3f
 27686 bd70 9501     		.uleb128 0x95
 27687 bd72 00000000 		.long	.LASF1798
 27688 bd76 3F       		.byte	0x3f
 27689 bd77 B4       		.byte	0xb4
 27690 bd78 16       		.uleb128 0x16
 27691 bd79 00000000 		.long	.LASF1607
 27692 bd7d 18       		.byte	0x18
 27693 bd7e 3F       		.byte	0x3f
 27694 bd7f BA       		.byte	0xba
 27695 bd80 A9BD0000 		.long	0xbda9
 27696 bd84 06       		.uleb128 0x6
 27697 bd85 00000000 		.long	.LASF1608
 27698 bd89 3F       		.byte	0x3f
 27699 bd8a BB       		.byte	0xbb
 27700 bd8b A9BD0000 		.long	0xbda9
 27701 bd8f 00       		.byte	0
 27702 bd90 06       		.uleb128 0x6
 27703 bd91 00000000 		.long	.LASF1609
 27704 bd95 3F       		.byte	0x3f
 27705 bd96 BC       		.byte	0xbc
 27706 bd97 AFBD0000 		.long	0xbdaf
 27707 bd9b 08       		.byte	0x8
 27708 bd9c 06       		.uleb128 0x6
 27709 bd9d 00000000 		.long	.LASF1610
 27710 bda1 3F       		.byte	0x3f
 27711 bda2 C0       		.byte	0xc0
 27712 bda3 28930000 		.long	0x9328
 27713 bda7 10       		.byte	0x10
 27714 bda8 00       		.byte	0
 27715 bda9 7E       		.uleb128 0x7e
 27716 bdaa 08       		.byte	0x8
 27717 bdab 78BD0000 		.long	0xbd78
 27718 bdaf 7E       		.uleb128 0x7e
 27719 bdb0 08       		.byte	0x8
 27720 bdb1 65AC0000 		.long	0xac65
 27721 bdb5 8B01     		.uleb128 0x8b
 27722 bdb7 ACAE0000 		.long	0xaeac
 27723 bdbb C7BD0000 		.long	0xbdc7
 27724 bdbf 8C01     		.uleb128 0x8c
 27725 bdc1 F7AD0000 		.long	0xadf7
 27726 bdc5 00       		.byte	0
 27727 bdc6 00       		.byte	0
 27728 bdc7 7E       		.uleb128 0x7e
 27729 bdc8 08       		.byte	0x8
 27730 bdc9 70BD0000 		.long	0xbd70
 27731 bdcd 8B01     		.uleb128 0x8b
 27732 bdcf ACAE0000 		.long	0xaeac
 27733 bdd3 DFBD0000 		.long	0xbddf
 27734 bdd7 8C01     		.uleb128 0x8c
 27735 bdd9 F7AD0000 		.long	0xadf7
 27736 bddd 13       		.byte	0x13
 27737 bdde 00       		.byte	0
 27738 bddf 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 788


 27739 bde0 00000000 		.long	.LASF1611
 27740 bde4 3E       		.byte	0x3e
 27741 bde5 6F       		.byte	0x6f
 27742 bde6 65BD0000 		.long	0xbd65
 27743 bdea 4C       		.uleb128 0x4c
 27744 bdeb 00000000 		.long	.LASF1612
 27745 bdef 3E       		.byte	0x3e
 27746 bdf0 3503     		.value	0x335
 27747 bdf2 FCBD0000 		.long	0xbdfc
 27748 bdf6 09       		.uleb128 0x9
 27749 bdf7 FCBD0000 		.long	0xbdfc
 27750 bdfb 00       		.byte	0
 27751 bdfc 7E       		.uleb128 0x7e
 27752 bdfd 08       		.byte	0x8
 27753 bdfe 5AAC0000 		.long	0xac5a
 27754 be02 52       		.uleb128 0x52
 27755 be03 00000000 		.long	.LASF1613
 27756 be07 3E       		.byte	0x3e
 27757 be08 EC       		.byte	0xec
 27758 be09 28930000 		.long	0x9328
 27759 be0d 17BE0000 		.long	0xbe17
 27760 be11 09       		.uleb128 0x9
 27761 be12 FCBD0000 		.long	0xbdfc
 27762 be16 00       		.byte	0
 27763 be17 76       		.uleb128 0x76
 27764 be18 00000000 		.long	.LASF1614
 27765 be1c 3E       		.byte	0x3e
 27766 be1d 3703     		.value	0x337
 27767 be1f 28930000 		.long	0x9328
 27768 be23 2DBE0000 		.long	0xbe2d
 27769 be27 09       		.uleb128 0x9
 27770 be28 FCBD0000 		.long	0xbdfc
 27771 be2c 00       		.byte	0
 27772 be2d 76       		.uleb128 0x76
 27773 be2e 00000000 		.long	.LASF1615
 27774 be32 3E       		.byte	0x3e
 27775 be33 3903     		.value	0x339
 27776 be35 28930000 		.long	0x9328
 27777 be39 43BE0000 		.long	0xbe43
 27778 be3d 09       		.uleb128 0x9
 27779 be3e FCBD0000 		.long	0xbdfc
 27780 be42 00       		.byte	0
 27781 be43 52       		.uleb128 0x52
 27782 be44 00000000 		.long	.LASF1616
 27783 be48 3E       		.byte	0x3e
 27784 be49 F1       		.byte	0xf1
 27785 be4a 28930000 		.long	0x9328
 27786 be4e 58BE0000 		.long	0xbe58
 27787 be52 09       		.uleb128 0x9
 27788 be53 FCBD0000 		.long	0xbdfc
 27789 be57 00       		.byte	0
 27790 be58 76       		.uleb128 0x76
 27791 be59 00000000 		.long	.LASF1617
 27792 be5d 3E       		.byte	0x3e
 27793 be5e 1702     		.value	0x217
 27794 be60 28930000 		.long	0x9328
 27795 be64 6EBE0000 		.long	0xbe6e
GAS LISTING /tmp/ccJUMvuF.s 			page 789


 27796 be68 09       		.uleb128 0x9
 27797 be69 FCBD0000 		.long	0xbdfc
 27798 be6d 00       		.byte	0
 27799 be6e 76       		.uleb128 0x76
 27800 be6f 00000000 		.long	.LASF1618
 27801 be73 3E       		.byte	0x3e
 27802 be74 1903     		.value	0x319
 27803 be76 28930000 		.long	0x9328
 27804 be7a 89BE0000 		.long	0xbe89
 27805 be7e 09       		.uleb128 0x9
 27806 be7f FCBD0000 		.long	0xbdfc
 27807 be83 09       		.uleb128 0x9
 27808 be84 89BE0000 		.long	0xbe89
 27809 be88 00       		.byte	0
 27810 be89 7E       		.uleb128 0x7e
 27811 be8a 08       		.byte	0x8
 27812 be8b DFBD0000 		.long	0xbddf
 27813 be8f 76       		.uleb128 0x76
 27814 be90 00000000 		.long	.LASF1619
 27815 be94 3E       		.byte	0x3e
 27816 be95 7202     		.value	0x272
 27817 be97 F0B10000 		.long	0xb1f0
 27818 be9b AFBE0000 		.long	0xbeaf
 27819 be9f 09       		.uleb128 0x9
 27820 bea0 F0B10000 		.long	0xb1f0
 27821 bea4 09       		.uleb128 0x9
 27822 bea5 28930000 		.long	0x9328
 27823 bea9 09       		.uleb128 0x9
 27824 beaa FCBD0000 		.long	0xbdfc
 27825 beae 00       		.byte	0
 27826 beaf 76       		.uleb128 0x76
 27827 beb0 00000000 		.long	.LASF1620
 27828 beb4 3E       		.byte	0x3e
 27829 beb5 0F01     		.value	0x10f
 27830 beb7 FCBD0000 		.long	0xbdfc
 27831 bebb CABE0000 		.long	0xbeca
 27832 bebf 09       		.uleb128 0x9
 27833 bec0 CEAE0000 		.long	0xaece
 27834 bec4 09       		.uleb128 0x9
 27835 bec5 CEAE0000 		.long	0xaece
 27836 bec9 00       		.byte	0
 27837 beca 76       		.uleb128 0x76
 27838 becb 00000000 		.long	.LASF1621
 27839 becf 3E       		.byte	0x3e
 27840 bed0 C002     		.value	0x2c0
 27841 bed2 3BAE0000 		.long	0xae3b
 27842 bed6 EFBE0000 		.long	0xbeef
 27843 beda 09       		.uleb128 0x9
 27844 bedb 01930000 		.long	0x9301
 27845 bedf 09       		.uleb128 0x9
 27846 bee0 3BAE0000 		.long	0xae3b
 27847 bee4 09       		.uleb128 0x9
 27848 bee5 3BAE0000 		.long	0xae3b
 27849 bee9 09       		.uleb128 0x9
 27850 beea FCBD0000 		.long	0xbdfc
 27851 beee 00       		.byte	0
 27852 beef 76       		.uleb128 0x76
GAS LISTING /tmp/ccJUMvuF.s 			page 790


 27853 bef0 00000000 		.long	.LASF1622
 27854 bef4 3E       		.byte	0x3e
 27855 bef5 1501     		.value	0x115
 27856 bef7 FCBD0000 		.long	0xbdfc
 27857 befb 0FBF0000 		.long	0xbf0f
 27858 beff 09       		.uleb128 0x9
 27859 bf00 CEAE0000 		.long	0xaece
 27860 bf04 09       		.uleb128 0x9
 27861 bf05 CEAE0000 		.long	0xaece
 27862 bf09 09       		.uleb128 0x9
 27863 bf0a FCBD0000 		.long	0xbdfc
 27864 bf0e 00       		.byte	0
 27865 bf0f 76       		.uleb128 0x76
 27866 bf10 00000000 		.long	.LASF1623
 27867 bf14 3E       		.byte	0x3e
 27868 bf15 E802     		.value	0x2e8
 27869 bf17 28930000 		.long	0x9328
 27870 bf1b 2FBF0000 		.long	0xbf2f
 27871 bf1f 09       		.uleb128 0x9
 27872 bf20 FCBD0000 		.long	0xbdfc
 27873 bf24 09       		.uleb128 0x9
 27874 bf25 84930000 		.long	0x9384
 27875 bf29 09       		.uleb128 0x9
 27876 bf2a 28930000 		.long	0x9328
 27877 bf2e 00       		.byte	0
 27878 bf2f 76       		.uleb128 0x76
 27879 bf30 00000000 		.long	.LASF1624
 27880 bf34 3E       		.byte	0x3e
 27881 bf35 1E03     		.value	0x31e
 27882 bf37 28930000 		.long	0x9328
 27883 bf3b 4ABF0000 		.long	0xbf4a
 27884 bf3f 09       		.uleb128 0x9
 27885 bf40 FCBD0000 		.long	0xbdfc
 27886 bf44 09       		.uleb128 0x9
 27887 bf45 4ABF0000 		.long	0xbf4a
 27888 bf49 00       		.byte	0
 27889 bf4a 7E       		.uleb128 0x7e
 27890 bf4b 08       		.byte	0x8
 27891 bf4c 50BF0000 		.long	0xbf50
 27892 bf50 11       		.uleb128 0x11
 27893 bf51 DFBD0000 		.long	0xbddf
 27894 bf55 76       		.uleb128 0x76
 27895 bf56 00000000 		.long	.LASF1625
 27896 bf5a 3E       		.byte	0x3e
 27897 bf5b ED02     		.value	0x2ed
 27898 bf5d 84930000 		.long	0x9384
 27899 bf61 6BBF0000 		.long	0xbf6b
 27900 bf65 09       		.uleb128 0x9
 27901 bf66 FCBD0000 		.long	0xbdfc
 27902 bf6a 00       		.byte	0
 27903 bf6b 76       		.uleb128 0x76
 27904 bf6c 00000000 		.long	.LASF1626
 27905 bf70 3E       		.byte	0x3e
 27906 bf71 1802     		.value	0x218
 27907 bf73 28930000 		.long	0x9328
 27908 bf77 81BF0000 		.long	0xbf81
 27909 bf7b 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 791


 27910 bf7c FCBD0000 		.long	0xbdfc
 27911 bf80 00       		.byte	0
 27912 bf81 8401     		.uleb128 0x84
 27913 bf83 00000000 		.long	.LASF1627
 27914 bf87 4A       		.byte	0x4a
 27915 bf88 2D       		.byte	0x2d
 27916 bf89 28930000 		.long	0x9328
 27917 bf8d 76       		.uleb128 0x76
 27918 bf8e 00000000 		.long	.LASF1628
 27919 bf92 3E       		.byte	0x3e
 27920 bf93 7A02     		.value	0x27a
 27921 bf95 F0B10000 		.long	0xb1f0
 27922 bf99 A3BF0000 		.long	0xbfa3
 27923 bf9d 09       		.uleb128 0x9
 27924 bf9e F0B10000 		.long	0xb1f0
 27925 bfa2 00       		.byte	0
 27926 bfa3 4C       		.uleb128 0x4c
 27927 bfa4 00000000 		.long	.LASF1629
 27928 bfa8 3E       		.byte	0x3e
 27929 bfa9 4903     		.value	0x349
 27930 bfab B5BF0000 		.long	0xbfb5
 27931 bfaf 09       		.uleb128 0x9
 27932 bfb0 CEAE0000 		.long	0xaece
 27933 bfb4 00       		.byte	0
 27934 bfb5 52       		.uleb128 0x52
 27935 bfb6 00000000 		.long	.LASF1630
 27936 bfba 3E       		.byte	0x3e
 27937 bfbb B1       		.byte	0xb1
 27938 bfbc 28930000 		.long	0x9328
 27939 bfc0 CABF0000 		.long	0xbfca
 27940 bfc4 09       		.uleb128 0x9
 27941 bfc5 CEAE0000 		.long	0xaece
 27942 bfc9 00       		.byte	0
 27943 bfca 52       		.uleb128 0x52
 27944 bfcb 00000000 		.long	.LASF1631
 27945 bfcf 3E       		.byte	0x3e
 27946 bfd0 B3       		.byte	0xb3
 27947 bfd1 28930000 		.long	0x9328
 27948 bfd5 E4BF0000 		.long	0xbfe4
 27949 bfd9 09       		.uleb128 0x9
 27950 bfda CEAE0000 		.long	0xaece
 27951 bfde 09       		.uleb128 0x9
 27952 bfdf CEAE0000 		.long	0xaece
 27953 bfe3 00       		.byte	0
 27954 bfe4 4C       		.uleb128 0x4c
 27955 bfe5 00000000 		.long	.LASF1632
 27956 bfe9 3E       		.byte	0x3e
 27957 bfea F202     		.value	0x2f2
 27958 bfec F6BF0000 		.long	0xbff6
 27959 bff0 09       		.uleb128 0x9
 27960 bff1 FCBD0000 		.long	0xbdfc
 27961 bff5 00       		.byte	0
 27962 bff6 4C       		.uleb128 0x4c
 27963 bff7 00000000 		.long	.LASF1633
 27964 bffb 3E       		.byte	0x3e
 27965 bffc 4B01     		.value	0x14b
 27966 bffe 0DC00000 		.long	0xc00d
GAS LISTING /tmp/ccJUMvuF.s 			page 792


 27967 c002 09       		.uleb128 0x9
 27968 c003 FCBD0000 		.long	0xbdfc
 27969 c007 09       		.uleb128 0x9
 27970 c008 F0B10000 		.long	0xb1f0
 27971 c00c 00       		.byte	0
 27972 c00d 76       		.uleb128 0x76
 27973 c00e 00000000 		.long	.LASF1634
 27974 c012 3E       		.byte	0x3e
 27975 c013 4F01     		.value	0x14f
 27976 c015 28930000 		.long	0x9328
 27977 c019 32C00000 		.long	0xc032
 27978 c01d 09       		.uleb128 0x9
 27979 c01e FCBD0000 		.long	0xbdfc
 27980 c022 09       		.uleb128 0x9
 27981 c023 F0B10000 		.long	0xb1f0
 27982 c027 09       		.uleb128 0x9
 27983 c028 28930000 		.long	0x9328
 27984 c02c 09       		.uleb128 0x9
 27985 c02d 3BAE0000 		.long	0xae3b
 27986 c031 00       		.byte	0
 27987 c032 8401     		.uleb128 0x84
 27988 c034 00000000 		.long	.LASF1635
 27989 c038 3E       		.byte	0x3e
 27990 c039 C2       		.byte	0xc2
 27991 c03a FCBD0000 		.long	0xbdfc
 27992 c03e 52       		.uleb128 0x52
 27993 c03f 00000000 		.long	.LASF1636
 27994 c043 3E       		.byte	0x3e
 27995 c044 D0       		.byte	0xd0
 27996 c045 F0B10000 		.long	0xb1f0
 27997 c049 53C00000 		.long	0xc053
 27998 c04d 09       		.uleb128 0x9
 27999 c04e F0B10000 		.long	0xb1f0
 28000 c052 00       		.byte	0
 28001 c053 76       		.uleb128 0x76
 28002 c054 00000000 		.long	.LASF1637
 28003 c058 3E       		.byte	0x3e
 28004 c059 B902     		.value	0x2b9
 28005 c05b 28930000 		.long	0x9328
 28006 c05f 6EC00000 		.long	0xc06e
 28007 c063 09       		.uleb128 0x9
 28008 c064 28930000 		.long	0x9328
 28009 c068 09       		.uleb128 0x9
 28010 c069 FCBD0000 		.long	0xbdfc
 28011 c06d 00       		.byte	0
 28012 c06e 7E       		.uleb128 0x7e
 28013 c06f 08       		.byte	0x8
 28014 c070 B4090000 		.long	0x9b4
 28015 c074 7E       		.uleb128 0x7e
 28016 c075 08       		.byte	0x8
 28017 c076 DA220000 		.long	0x22da
 28018 c07a 7E       		.uleb128 0x7e
 28019 c07b 08       		.byte	0x8
 28020 c07c A8090000 		.long	0x9a8
 28021 c080 7E       		.uleb128 0x7e
 28022 c081 08       		.byte	0x8
 28023 c082 B90A0000 		.long	0xab9
GAS LISTING /tmp/ccJUMvuF.s 			page 793


 28024 c086 7F       		.uleb128 0x7f
 28025 c087 08       		.byte	0x8
 28026 c088 B90A0000 		.long	0xab9
 28027 c08c 7F       		.uleb128 0x7f
 28028 c08d 08       		.byte	0x8
 28029 c08e DA220000 		.long	0x22da
 28030 c092 8101     		.uleb128 0x81
 28031 c094 08       		.byte	0x8
 28032 c095 A8090000 		.long	0x9a8
 28033 c099 7F       		.uleb128 0x7f
 28034 c09a 08       		.byte	0x8
 28035 c09b A8090000 		.long	0x9a8
 28036 c09f 7E       		.uleb128 0x7e
 28037 c0a0 08       		.byte	0x8
 28038 c0a1 DF220000 		.long	0x22df
 28039 c0a5 7E       		.uleb128 0x7e
 28040 c0a6 08       		.byte	0x8
 28041 c0a7 BF230000 		.long	0x23bf
 28042 c0ab 7F       		.uleb128 0x7f
 28043 c0ac 08       		.byte	0x8
 28044 c0ad C4230000 		.long	0x23c4
 28045 c0b1 8B01     		.uleb128 0x8b
 28046 c0b3 53930000 		.long	0x9353
 28047 c0b7 BEC00000 		.long	0xc0be
 28048 c0bb 9601     		.uleb128 0x96
 28049 c0bd 00       		.byte	0
 28050 c0be 7E       		.uleb128 0x7e
 28051 c0bf 08       		.byte	0x8
 28052 c0c0 AF220000 		.long	0x22af
 28053 c0c4 7E       		.uleb128 0x7e
 28054 c0c5 08       		.byte	0x8
 28055 c0c6 F0230000 		.long	0x23f0
 28056 c0ca 7E       		.uleb128 0x7e
 28057 c0cb 08       		.byte	0x8
 28058 c0cc E4230000 		.long	0x23e4
 28059 c0d0 7E       		.uleb128 0x7e
 28060 c0d1 08       		.byte	0x8
 28061 c0d2 31240000 		.long	0x2431
 28062 c0d6 7F       		.uleb128 0x7f
 28063 c0d7 08       		.byte	0x8
 28064 c0d8 31240000 		.long	0x2431
 28065 c0dc 7E       		.uleb128 0x7e
 28066 c0dd 08       		.byte	0x8
 28067 c0de B7240000 		.long	0x24b7
 28068 c0e2 11       		.uleb128 0x11
 28069 c0e3 CEAE0000 		.long	0xaece
 28070 c0e7 7F       		.uleb128 0x7f
 28071 c0e8 08       		.byte	0x8
 28072 c0e9 DD250000 		.long	0x25dd
 28073 c0ed 7E       		.uleb128 0x7e
 28074 c0ee 08       		.byte	0x8
 28075 c0ef E6250000 		.long	0x25e6
 28076 c0f3 13       		.uleb128 0x13
 28077 c0f4 00000000 		.long	.LASF1638
 28078 c0f8 4B       		.byte	0x4b
 28079 c0f9 35       		.byte	0x35
 28080 c0fa 53930000 		.long	0x9353
GAS LISTING /tmp/ccJUMvuF.s 			page 794


 28081 c0fe 13       		.uleb128 0x13
 28082 c0ff 00000000 		.long	.LASF1639
 28083 c103 4B       		.byte	0x4b
 28084 c104 BB       		.byte	0xbb
 28085 c105 09C10000 		.long	0xc109
 28086 c109 7E       		.uleb128 0x7e
 28087 c10a 08       		.byte	0x8
 28088 c10b 0FC10000 		.long	0xc10f
 28089 c10f 11       		.uleb128 0x11
 28090 c110 54B90000 		.long	0xb954
 28091 c114 52       		.uleb128 0x52
 28092 c115 00000000 		.long	.LASF1640
 28093 c119 4B       		.byte	0x4b
 28094 c11a B0       		.byte	0xb0
 28095 c11b 28930000 		.long	0x9328
 28096 c11f 2EC10000 		.long	0xc12e
 28097 c123 09       		.uleb128 0x9
 28098 c124 46AE0000 		.long	0xae46
 28099 c128 09       		.uleb128 0x9
 28100 c129 F3C00000 		.long	0xc0f3
 28101 c12d 00       		.byte	0
 28102 c12e 52       		.uleb128 0x52
 28103 c12f 00000000 		.long	.LASF1641
 28104 c133 4B       		.byte	0x4b
 28105 c134 DE       		.byte	0xde
 28106 c135 46AE0000 		.long	0xae46
 28107 c139 48C10000 		.long	0xc148
 28108 c13d 09       		.uleb128 0x9
 28109 c13e 46AE0000 		.long	0xae46
 28110 c142 09       		.uleb128 0x9
 28111 c143 FEC00000 		.long	0xc0fe
 28112 c147 00       		.byte	0
 28113 c148 52       		.uleb128 0x52
 28114 c149 00000000 		.long	.LASF1642
 28115 c14d 4B       		.byte	0x4b
 28116 c14e DB       		.byte	0xdb
 28117 c14f FEC00000 		.long	0xc0fe
 28118 c153 5DC10000 		.long	0xc15d
 28119 c157 09       		.uleb128 0x9
 28120 c158 CEAE0000 		.long	0xaece
 28121 c15c 00       		.byte	0
 28122 c15d 52       		.uleb128 0x52
 28123 c15e 00000000 		.long	.LASF1643
 28124 c162 4B       		.byte	0x4b
 28125 c163 AC       		.byte	0xac
 28126 c164 F3C00000 		.long	0xc0f3
 28127 c168 72C10000 		.long	0xc172
 28128 c16c 09       		.uleb128 0x9
 28129 c16d CEAE0000 		.long	0xaece
 28130 c171 00       		.byte	0
 28131 c172 7F       		.uleb128 0x7f
 28132 c173 08       		.byte	0x8
 28133 c174 97280000 		.long	0x2897
 28134 c178 11       		.uleb128 0x11
 28135 c179 7D930000 		.long	0x937d
 28136 c17d 11       		.uleb128 0x11
 28137 c17e 84930000 		.long	0x9384
GAS LISTING /tmp/ccJUMvuF.s 			page 795


 28138 c182 13       		.uleb128 0x13
 28139 c183 00000000 		.long	.LASF1644
 28140 c187 4C       		.byte	0x4c
 28141 c188 1F       		.byte	0x1f
 28142 c189 30000000 		.long	0x30
 28143 c18d 13       		.uleb128 0x13
 28144 c18e 00000000 		.long	.LASF1645
 28145 c192 4C       		.byte	0x4c
 28146 c193 20       		.byte	0x20
 28147 c194 29000000 		.long	0x29
 28148 c198 8B01     		.uleb128 0x8b
 28149 c19a 53930000 		.long	0x9353
 28150 c19e ABC10000 		.long	0xc1ab
 28151 c1a2 9701     		.uleb128 0x97
 28152 c1a4 F7AD0000 		.long	0xadf7
 28153 c1a8 6F02     		.value	0x26f
 28154 c1aa 00       		.byte	0
 28155 c1ab 7E       		.uleb128 0x7e
 28156 c1ac 08       		.byte	0x8
 28157 c1ad C92C0000 		.long	0x2cc9
 28158 c1b1 7E       		.uleb128 0x7e
 28159 c1b2 08       		.byte	0x8
 28160 c1b3 1E2F0000 		.long	0x2f1e
 28161 c1b7 7E       		.uleb128 0x7e
 28162 c1b8 08       		.byte	0x8
 28163 c1b9 102F0000 		.long	0x2f10
 28164 c1bd 7E       		.uleb128 0x7e
 28165 c1be 08       		.byte	0x8
 28166 c1bf D0300000 		.long	0x30d0
 28167 c1c3 7F       		.uleb128 0x7f
 28168 c1c4 08       		.byte	0x8
 28169 c1c5 D0300000 		.long	0x30d0
 28170 c1c9 7E       		.uleb128 0x7e
 28171 c1ca 08       		.byte	0x8
 28172 c1cb 29000000 		.long	0x29
 28173 c1cf 7E       		.uleb128 0x7e
 28174 c1d0 08       		.byte	0x8
 28175 c1d1 D5C10000 		.long	0xc1d5
 28176 c1d5 11       		.uleb128 0x11
 28177 c1d6 29000000 		.long	0x29
 28178 c1da 7F       		.uleb128 0x7f
 28179 c1db 08       		.byte	0x8
 28180 c1dc 29000000 		.long	0x29
 28181 c1e0 7F       		.uleb128 0x7f
 28182 c1e1 08       		.byte	0x8
 28183 c1e2 D5C10000 		.long	0xc1d5
 28184 c1e6 7E       		.uleb128 0x7e
 28185 c1e7 08       		.byte	0x8
 28186 c1e8 C09C0000 		.long	0x9cc0
 28187 c1ec 7F       		.uleb128 0x7f
 28188 c1ed 08       		.byte	0x8
 28189 c1ee 019E0000 		.long	0x9e01
 28190 c1f2 7E       		.uleb128 0x7e
 28191 c1f3 08       		.byte	0x8
 28192 c1f4 019E0000 		.long	0x9e01
 28193 c1f8 7E       		.uleb128 0x7e
 28194 c1f9 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 796


 28195 c1fa D5300000 		.long	0x30d5
 28196 c1fe 7F       		.uleb128 0x7f
 28197 c1ff 08       		.byte	0x8
 28198 c200 77310000 		.long	0x3177
 28199 c204 7F       		.uleb128 0x7f
 28200 c205 08       		.byte	0x8
 28201 c206 88310000 		.long	0x3188
 28202 c20a 7E       		.uleb128 0x7e
 28203 c20b 08       		.byte	0x8
 28204 c20c E2320000 		.long	0x32e2
 28205 c210 7F       		.uleb128 0x7f
 28206 c211 08       		.byte	0x8
 28207 c212 D5300000 		.long	0x30d5
 28208 c216 7F       		.uleb128 0x7f
 28209 c217 08       		.byte	0x8
 28210 c218 2D9E0000 		.long	0x9e2d
 28211 c21c 7F       		.uleb128 0x7f
 28212 c21d 08       		.byte	0x8
 28213 c21e 599E0000 		.long	0x9e59
 28214 c222 7E       		.uleb128 0x7e
 28215 c223 08       		.byte	0x8
 28216 c224 E5340000 		.long	0x34e5
 28217 c228 7F       		.uleb128 0x7f
 28218 c229 08       		.byte	0x8
 28219 c22a A2350000 		.long	0x35a2
 28220 c22e 8101     		.uleb128 0x81
 28221 c230 08       		.byte	0x8
 28222 c231 A7350000 		.long	0x35a7
 28223 c235 7F       		.uleb128 0x7f
 28224 c236 08       		.byte	0x8
 28225 c237 E5340000 		.long	0x34e5
 28226 c23b 7F       		.uleb128 0x7f
 28227 c23c 08       		.byte	0x8
 28228 c23d A7350000 		.long	0x35a7
 28229 c241 7E       		.uleb128 0x7e
 28230 c242 08       		.byte	0x8
 28231 c243 D9340000 		.long	0x34d9
 28232 c247 7E       		.uleb128 0x7e
 28233 c248 08       		.byte	0x8
 28234 c249 71370000 		.long	0x3771
 28235 c24d 7F       		.uleb128 0x7f
 28236 c24e 08       		.byte	0x8
 28237 c24f 4F360000 		.long	0x364f
 28238 c253 8101     		.uleb128 0x81
 28239 c255 08       		.byte	0x8
 28240 c256 D9340000 		.long	0x34d9
 28241 c25a 7E       		.uleb128 0x7e
 28242 c25b 08       		.byte	0x8
 28243 c25c 76370000 		.long	0x3776
 28244 c260 7F       		.uleb128 0x7f
 28245 c261 08       		.byte	0x8
 28246 c262 56380000 		.long	0x3856
 28247 c266 7F       		.uleb128 0x7f
 28248 c267 08       		.byte	0x8
 28249 c268 A2380000 		.long	0x38a2
 28250 c26c 7F       		.uleb128 0x7f
 28251 c26d 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 797


 28252 c26e 3B410000 		.long	0x413b
 28253 c272 8101     		.uleb128 0x81
 28254 c274 08       		.byte	0x8
 28255 c275 76370000 		.long	0x3776
 28256 c279 7F       		.uleb128 0x7f
 28257 c27a 08       		.byte	0x8
 28258 c27b 76370000 		.long	0x3776
 28259 c27f 7E       		.uleb128 0x7e
 28260 c280 08       		.byte	0x8
 28261 c281 3B410000 		.long	0x413b
 28262 c285 8101     		.uleb128 0x81
 28263 c287 08       		.byte	0x8
 28264 c288 AC370000 		.long	0x37ac
 28265 c28c 7E       		.uleb128 0x7e
 28266 c28d 08       		.byte	0x8
 28267 c28e 40410000 		.long	0x4140
 28268 c292 7E       		.uleb128 0x7e
 28269 c293 08       		.byte	0x8
 28270 c294 20420000 		.long	0x4220
 28271 c298 7E       		.uleb128 0x7e
 28272 c299 08       		.byte	0x8
 28273 c29a 68930000 		.long	0x9368
 28274 c29e 7E       		.uleb128 0x7e
 28275 c29f 08       		.byte	0x8
 28276 c2a0 A4C20000 		.long	0xc2a4
 28277 c2a4 11       		.uleb128 0x11
 28278 c2a5 68930000 		.long	0x9368
 28279 c2a9 7F       		.uleb128 0x7f
 28280 c2aa 08       		.byte	0x8
 28281 c2ab 68930000 		.long	0x9368
 28282 c2af 7F       		.uleb128 0x7f
 28283 c2b0 08       		.byte	0x8
 28284 c2b1 A4C20000 		.long	0xc2a4
 28285 c2b5 7E       		.uleb128 0x7e
 28286 c2b6 08       		.byte	0x8
 28287 c2b7 6EA30000 		.long	0xa36e
 28288 c2bb 7F       		.uleb128 0x7f
 28289 c2bc 08       		.byte	0x8
 28290 c2bd AFA40000 		.long	0xa4af
 28291 c2c1 7E       		.uleb128 0x7e
 28292 c2c2 08       		.byte	0x8
 28293 c2c3 AFA40000 		.long	0xa4af
 28294 c2c7 7E       		.uleb128 0x7e
 28295 c2c8 08       		.byte	0x8
 28296 c2c9 25420000 		.long	0x4225
 28297 c2cd 7F       		.uleb128 0x7f
 28298 c2ce 08       		.byte	0x8
 28299 c2cf C7420000 		.long	0x42c7
 28300 c2d3 7F       		.uleb128 0x7f
 28301 c2d4 08       		.byte	0x8
 28302 c2d5 D8420000 		.long	0x42d8
 28303 c2d9 7E       		.uleb128 0x7e
 28304 c2da 08       		.byte	0x8
 28305 c2db 5F430000 		.long	0x435f
 28306 c2df 7F       		.uleb128 0x7f
 28307 c2e0 08       		.byte	0x8
 28308 c2e1 25420000 		.long	0x4225
GAS LISTING /tmp/ccJUMvuF.s 			page 798


 28309 c2e5 7F       		.uleb128 0x7f
 28310 c2e6 08       		.byte	0x8
 28311 c2e7 DBA40000 		.long	0xa4db
 28312 c2eb 7F       		.uleb128 0x7f
 28313 c2ec 08       		.byte	0x8
 28314 c2ed 07A50000 		.long	0xa507
 28315 c2f1 7E       		.uleb128 0x7e
 28316 c2f2 08       		.byte	0x8
 28317 c2f3 57450000 		.long	0x4557
 28318 c2f7 7F       		.uleb128 0x7f
 28319 c2f8 08       		.byte	0x8
 28320 c2f9 14460000 		.long	0x4614
 28321 c2fd 8101     		.uleb128 0x81
 28322 c2ff 08       		.byte	0x8
 28323 c300 19460000 		.long	0x4619
 28324 c304 7F       		.uleb128 0x7f
 28325 c305 08       		.byte	0x8
 28326 c306 57450000 		.long	0x4557
 28327 c30a 7F       		.uleb128 0x7f
 28328 c30b 08       		.byte	0x8
 28329 c30c 19460000 		.long	0x4619
 28330 c310 7E       		.uleb128 0x7e
 28331 c311 08       		.byte	0x8
 28332 c312 4B450000 		.long	0x454b
 28333 c316 7E       		.uleb128 0x7e
 28334 c317 08       		.byte	0x8
 28335 c318 E3470000 		.long	0x47e3
 28336 c31c 7F       		.uleb128 0x7f
 28337 c31d 08       		.byte	0x8
 28338 c31e C1460000 		.long	0x46c1
 28339 c322 8101     		.uleb128 0x81
 28340 c324 08       		.byte	0x8
 28341 c325 4B450000 		.long	0x454b
 28342 c329 7E       		.uleb128 0x7e
 28343 c32a 08       		.byte	0x8
 28344 c32b E8470000 		.long	0x47e8
 28345 c32f 7F       		.uleb128 0x7f
 28346 c330 08       		.byte	0x8
 28347 c331 C8480000 		.long	0x48c8
 28348 c335 7F       		.uleb128 0x7f
 28349 c336 08       		.byte	0x8
 28350 c337 14490000 		.long	0x4914
 28351 c33b 7F       		.uleb128 0x7f
 28352 c33c 08       		.byte	0x8
 28353 c33d AD510000 		.long	0x51ad
 28354 c341 8101     		.uleb128 0x81
 28355 c343 08       		.byte	0x8
 28356 c344 E8470000 		.long	0x47e8
 28357 c348 7F       		.uleb128 0x7f
 28358 c349 08       		.byte	0x8
 28359 c34a E8470000 		.long	0x47e8
 28360 c34e 7E       		.uleb128 0x7e
 28361 c34f 08       		.byte	0x8
 28362 c350 AD510000 		.long	0x51ad
 28363 c354 8101     		.uleb128 0x81
 28364 c356 08       		.byte	0x8
 28365 c357 1E480000 		.long	0x481e
GAS LISTING /tmp/ccJUMvuF.s 			page 799


 28366 c35b 7E       		.uleb128 0x7e
 28367 c35c 08       		.byte	0x8
 28368 c35d 169F0000 		.long	0x9f16
 28369 c361 7F       		.uleb128 0x7f
 28370 c362 08       		.byte	0x8
 28371 c363 67C30000 		.long	0xc367
 28372 c367 11       		.uleb128 0x11
 28373 c368 C9C10000 		.long	0xc1c9
 28374 c36c 7E       		.uleb128 0x7e
 28375 c36d 08       		.byte	0x8
 28376 c36e E8A70000 		.long	0xa7e8
 28377 c372 7F       		.uleb128 0x7f
 28378 c373 08       		.byte	0x8
 28379 c374 169F0000 		.long	0x9f16
 28380 c378 16       		.uleb128 0x16
 28381 c379 00000000 		.long	.LASF1646
 28382 c37d 08       		.byte	0x8
 28383 c37e 02       		.byte	0x2
 28384 c37f 2D       		.byte	0x2d
 28385 c380 BDC30000 		.long	0xc3bd
 28386 c384 9101     		.uleb128 0x91
 28387 c386 5F743000 		.string	"_t0"
 28388 c38a 02       		.byte	0x2
 28389 c38b 33       		.byte	0x33
 28390 c38c 29000000 		.long	0x29
 28391 c390 00       		.byte	0
 28392 c391 37       		.uleb128 0x37
 28393 c392 00000000 		.long	.LASF1646
 28394 c396 02       		.byte	0x2
 28395 c397 2E       		.byte	0x2e
 28396 c398 A0C30000 		.long	0xc3a0
 28397 c39c A6C30000 		.long	0xc3a6
 28398 c3a0 08       		.uleb128 0x8
 28399 c3a1 BDC30000 		.long	0xc3bd
 28400 c3a5 00       		.byte	0
 28401 c3a6 39       		.uleb128 0x39
 28402 c3a7 00000000 		.long	.LASF1647
 28403 c3ab 02       		.byte	0x2
 28404 c3ac 2F       		.byte	0x2f
 28405 c3ad B1C30000 		.long	0xc3b1
 28406 c3b1 08       		.uleb128 0x8
 28407 c3b2 BDC30000 		.long	0xc3bd
 28408 c3b6 08       		.uleb128 0x8
 28409 c3b7 28930000 		.long	0x9328
 28410 c3bb 00       		.byte	0
 28411 c3bc 00       		.byte	0
 28412 c3bd 7E       		.uleb128 0x7e
 28413 c3be 08       		.byte	0x8
 28414 c3bf 78C30000 		.long	0xc378
 28415 c3c3 16       		.uleb128 0x16
 28416 c3c4 00000000 		.long	.LASF1648
 28417 c3c8 28       		.byte	0x28
 28418 c3c9 02       		.byte	0x2
 28419 c3ca 36       		.byte	0x36
 28420 c3cb 60C40000 		.long	0xc460
 28421 c3cf 9101     		.uleb128 0x91
 28422 c3d1 5F743000 		.string	"_t0"
GAS LISTING /tmp/ccJUMvuF.s 			page 800


 28423 c3d5 02       		.byte	0x2
 28424 c3d6 4A       		.byte	0x4a
 28425 c3d7 29000000 		.long	0x29
 28426 c3db 00       		.byte	0
 28427 c3dc 9101     		.uleb128 0x91
 28428 c3de 5F747300 		.string	"_ts"
 28429 c3e2 02       		.byte	0x2
 28430 c3e3 4B       		.byte	0x4b
 28431 c3e4 76370000 		.long	0x3776
 28432 c3e8 08       		.byte	0x8
 28433 c3e9 9101     		.uleb128 0x91
 28434 c3eb 5F6900   		.string	"_i"
 28435 c3ee 02       		.byte	0x2
 28436 c3ef 4C       		.byte	0x4c
 28437 c3f0 DC370000 		.long	0x37dc
 28438 c3f4 20       		.byte	0x20
 28439 c3f5 37       		.uleb128 0x37
 28440 c3f6 00000000 		.long	.LASF1648
 28441 c3fa 02       		.byte	0x2
 28442 c3fb 37       		.byte	0x37
 28443 c3fc 04C40000 		.long	0xc404
 28444 c400 0FC40000 		.long	0xc40f
 28445 c404 08       		.uleb128 0x8
 28446 c405 60C40000 		.long	0xc460
 28447 c409 09       		.uleb128 0x9
 28448 c40a 28930000 		.long	0x9328
 28449 c40e 00       		.byte	0
 28450 c40f 0B       		.uleb128 0xb
 28451 c410 00000000 		.long	.LASF1649
 28452 c414 02       		.byte	0x2
 28453 c415 38       		.byte	0x38
 28454 c416 00000000 		.long	.LASF1650
 28455 c41a 30930000 		.long	0x9330
 28456 c41e 26C40000 		.long	0xc426
 28457 c422 2CC40000 		.long	0xc42c
 28458 c426 08       		.uleb128 0x8
 28459 c427 60C40000 		.long	0xc460
 28460 c42b 00       		.byte	0
 28461 c42c 0B       		.uleb128 0xb
 28462 c42d 00000000 		.long	.LASF853
 28463 c431 02       		.byte	0x2
 28464 c432 3E       		.byte	0x3e
 28465 c433 00000000 		.long	.LASF1651
 28466 c437 30930000 		.long	0x9330
 28467 c43b 43C40000 		.long	0xc443
 28468 c43f 49C40000 		.long	0xc449
 28469 c443 08       		.uleb128 0x8
 28470 c444 66C40000 		.long	0xc466
 28471 c448 00       		.byte	0
 28472 c449 39       		.uleb128 0x39
 28473 c44a 00000000 		.long	.LASF1652
 28474 c44e 02       		.byte	0x2
 28475 c44f 41       		.byte	0x41
 28476 c450 54C40000 		.long	0xc454
 28477 c454 08       		.uleb128 0x8
 28478 c455 60C40000 		.long	0xc460
 28479 c459 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 801


 28480 c45a 28930000 		.long	0x9328
 28481 c45e 00       		.byte	0
 28482 c45f 00       		.byte	0
 28483 c460 7E       		.uleb128 0x7e
 28484 c461 08       		.byte	0x8
 28485 c462 C3C30000 		.long	0xc3c3
 28486 c466 7E       		.uleb128 0x7e
 28487 c467 08       		.byte	0x8
 28488 c468 6CC40000 		.long	0xc46c
 28489 c46c 11       		.uleb128 0x11
 28490 c46d C3C30000 		.long	0xc3c3
 28491 c471 7E       		.uleb128 0x7e
 28492 c472 08       		.byte	0x8
 28493 c473 4FA10000 		.long	0xa14f
 28494 c477 7F       		.uleb128 0x7f
 28495 c478 08       		.byte	0x8
 28496 c479 7DC40000 		.long	0xc47d
 28497 c47d 11       		.uleb128 0x11
 28498 c47e CFC10000 		.long	0xc1cf
 28499 c482 7E       		.uleb128 0x7e
 28500 c483 08       		.byte	0x8
 28501 c484 1EA80000 		.long	0xa81e
 28502 c488 7F       		.uleb128 0x7f
 28503 c489 08       		.byte	0x8
 28504 c48a 4FA10000 		.long	0xa14f
 28505 c48e 8801     		.uleb128 0x88
 28506 c490 18       		.byte	0x18
 28507 c491 4D       		.byte	0x4d
 28508 c492 27       		.byte	0x27
 28509 c493 00000000 		.long	.LASF1653
 28510 c497 CCC40000 		.long	0xc4cc
 28511 c49b 9101     		.uleb128 0x91
 28512 c49d 62756600 		.string	"buf"
 28513 c4a1 4D       		.byte	0x4d
 28514 c4a2 28       		.byte	0x28
 28515 c4a3 CCC40000 		.long	0xc4cc
 28516 c4a7 00       		.byte	0
 28517 c4a8 9101     		.uleb128 0x91
 28518 c4aa 6D617800 		.string	"max"
 28519 c4ae 4D       		.byte	0x4d
 28520 c4af 29       		.byte	0x29
 28521 c4b0 30000000 		.long	0x30
 28522 c4b4 08       		.byte	0x8
 28523 c4b5 9101     		.uleb128 0x91
 28524 c4b7 7700     		.string	"w"
 28525 c4b9 4D       		.byte	0x4d
 28526 c4ba 2A       		.byte	0x2a
 28527 c4bb 68930000 		.long	0x9368
 28528 c4bf 0C       		.byte	0xc
 28529 c4c0 9101     		.uleb128 0x91
 28530 c4c2 6800     		.string	"h"
 28531 c4c4 4D       		.byte	0x4d
 28532 c4c5 2A       		.byte	0x2a
 28533 c4c6 68930000 		.long	0x9368
 28534 c4ca 10       		.byte	0x10
 28535 c4cb 00       		.byte	0
 28536 c4cc 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 802


 28537 c4cd 08       		.byte	0x8
 28538 c4ce 30000000 		.long	0x30
 28539 c4d2 13       		.uleb128 0x13
 28540 c4d3 00000000 		.long	.LASF1654
 28541 c4d7 4D       		.byte	0x4d
 28542 c4d8 2B       		.byte	0x2b
 28543 c4d9 8EC40000 		.long	0xc48e
 28544 c4dd 8801     		.uleb128 0x88
 28545 c4df 10       		.byte	0x10
 28546 c4e0 4D       		.byte	0x4d
 28547 c4e1 31       		.byte	0x31
 28548 c4e2 00000000 		.long	.LASF1655
 28549 c4e6 0EC50000 		.long	0xc50e
 28550 c4ea 9101     		.uleb128 0x91
 28551 c4ec 62756600 		.string	"buf"
 28552 c4f0 4D       		.byte	0x4d
 28553 c4f1 32       		.byte	0x32
 28554 c4f2 CCC40000 		.long	0xc4cc
 28555 c4f6 00       		.byte	0
 28556 c4f7 9101     		.uleb128 0x91
 28557 c4f9 7700     		.string	"w"
 28558 c4fb 4D       		.byte	0x4d
 28559 c4fc 33       		.byte	0x33
 28560 c4fd 68930000 		.long	0x9368
 28561 c501 08       		.byte	0x8
 28562 c502 9101     		.uleb128 0x91
 28563 c504 6800     		.string	"h"
 28564 c506 4D       		.byte	0x4d
 28565 c507 33       		.byte	0x33
 28566 c508 68930000 		.long	0x9368
 28567 c50c 0C       		.byte	0xc
 28568 c50d 00       		.byte	0
 28569 c50e 13       		.uleb128 0x13
 28570 c50f 00000000 		.long	.LASF1656
 28571 c513 4D       		.byte	0x4d
 28572 c514 34       		.byte	0x34
 28573 c515 DDC40000 		.long	0xc4dd
 28574 c519 8801     		.uleb128 0x88
 28575 c51b 10       		.byte	0x10
 28576 c51c 4D       		.byte	0x4d
 28577 c51d 3F       		.byte	0x3f
 28578 c51e 00000000 		.long	.LASF1657
 28579 c522 3FC50000 		.long	0xc53f
 28580 c526 06       		.uleb128 0x6
 28581 c527 00000000 		.long	.LASF1658
 28582 c52b 4D       		.byte	0x4d
 28583 c52c 40       		.byte	0x40
 28584 c52d 3FC50000 		.long	0xc53f
 28585 c531 00       		.byte	0
 28586 c532 06       		.uleb128 0x6
 28587 c533 00000000 		.long	.LASF1659
 28588 c537 4D       		.byte	0x4d
 28589 c538 41       		.byte	0x41
 28590 c539 3BAE0000 		.long	0xae3b
 28591 c53d 08       		.byte	0x8
 28592 c53e 00       		.byte	0
 28593 c53f 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 803


 28594 c540 08       		.byte	0x8
 28595 c541 45C50000 		.long	0xc545
 28596 c545 11       		.uleb128 0x11
 28597 c546 5A930000 		.long	0x935a
 28598 c54a 13       		.uleb128 0x13
 28599 c54b 00000000 		.long	.LASF1660
 28600 c54f 4D       		.byte	0x4d
 28601 c550 42       		.byte	0x42
 28602 c551 19C50000 		.long	0xc519
 28603 c555 7E       		.uleb128 0x7e
 28604 c556 08       		.byte	0x8
 28605 c557 3E530000 		.long	0x533e
 28606 c55b 7E       		.uleb128 0x7e
 28607 c55c 08       		.byte	0x8
 28608 c55d D2C40000 		.long	0xc4d2
 28609 c561 7E       		.uleb128 0x7e
 28610 c562 08       		.byte	0x8
 28611 c563 65530000 		.long	0x5365
 28612 c567 7E       		.uleb128 0x7e
 28613 c568 08       		.byte	0x8
 28614 c569 0EC50000 		.long	0xc50e
 28615 c56d 7E       		.uleb128 0x7e
 28616 c56e 08       		.byte	0x8
 28617 c56f B2510000 		.long	0x51b2
 28618 c573 7E       		.uleb128 0x7e
 28619 c574 08       		.byte	0x8
 28620 c575 8C530000 		.long	0x538c
 28621 c579 7E       		.uleb128 0x7e
 28622 c57a 08       		.byte	0x8
 28623 c57b 9E530000 		.long	0x539e
 28624 c57f 7E       		.uleb128 0x7e
 28625 c580 08       		.byte	0x8
 28626 c581 2A540000 		.long	0x542a
 28627 c585 7E       		.uleb128 0x7e
 28628 c586 08       		.byte	0x8
 28629 c587 91530000 		.long	0x5391
 28630 c58b 7F       		.uleb128 0x7f
 28631 c58c 08       		.byte	0x8
 28632 c58d 2A540000 		.long	0x542a
 28633 c591 7E       		.uleb128 0x7e
 28634 c592 08       		.byte	0x8
 28635 c593 AC550000 		.long	0x55ac
 28636 c597 7E       		.uleb128 0x7e
 28637 c598 08       		.byte	0x8
 28638 c599 C4A50000 		.long	0xa5c4
 28639 c59d 7F       		.uleb128 0x7f
 28640 c59e 08       		.byte	0x8
 28641 c59f A3C50000 		.long	0xc5a3
 28642 c5a3 11       		.uleb128 0x11
 28643 c5a4 98C20000 		.long	0xc298
 28644 c5a8 7E       		.uleb128 0x7e
 28645 c5a9 08       		.byte	0x8
 28646 c5aa 23A80000 		.long	0xa823
 28647 c5ae 7F       		.uleb128 0x7f
 28648 c5af 08       		.byte	0x8
 28649 c5b0 C4A50000 		.long	0xa5c4
 28650 c5b4 7F       		.uleb128 0x7f
GAS LISTING /tmp/ccJUMvuF.s 			page 804


 28651 c5b5 08       		.byte	0x8
 28652 c5b6 AC550000 		.long	0x55ac
 28653 c5ba 8101     		.uleb128 0x81
 28654 c5bc 08       		.byte	0x8
 28655 c5bd 91530000 		.long	0x5391
 28656 c5c1 7E       		.uleb128 0x7e
 28657 c5c2 08       		.byte	0x8
 28658 c5c3 4B580000 		.long	0x584b
 28659 c5c7 7F       		.uleb128 0x7f
 28660 c5c8 08       		.byte	0x8
 28661 c5c9 4B580000 		.long	0x584b
 28662 c5cd 7E       		.uleb128 0x7e
 28663 c5ce 08       		.byte	0x8
 28664 c5cf 9B580000 		.long	0x589b
 28665 c5d3 7F       		.uleb128 0x7f
 28666 c5d4 08       		.byte	0x8
 28667 c5d5 70590000 		.long	0x5970
 28668 c5d9 7F       		.uleb128 0x7f
 28669 c5da 08       		.byte	0x8
 28670 c5db C92C0000 		.long	0x2cc9
 28671 c5df 7F       		.uleb128 0x7f
 28672 c5e0 08       		.byte	0x8
 28673 c5e1 9B580000 		.long	0x589b
 28674 c5e5 7F       		.uleb128 0x7f
 28675 c5e6 08       		.byte	0x8
 28676 c5e7 75590000 		.long	0x5975
 28677 c5eb 7F       		.uleb128 0x7f
 28678 c5ec 08       		.byte	0x8
 28679 c5ed 7A590000 		.long	0x597a
 28680 c5f1 7F       		.uleb128 0x7f
 28681 c5f2 08       		.byte	0x8
 28682 c5f3 125B0000 		.long	0x5b12
 28683 c5f7 7F       		.uleb128 0x7f
 28684 c5f8 08       		.byte	0x8
 28685 c5f9 94590000 		.long	0x5994
 28686 c5fd 7F       		.uleb128 0x7f
 28687 c5fe 08       		.byte	0x8
 28688 c5ff 035A0000 		.long	0x5a03
 28689 c603 7E       		.uleb128 0x7e
 28690 c604 08       		.byte	0x8
 28691 c605 7A590000 		.long	0x597a
 28692 c609 8101     		.uleb128 0x81
 28693 c60b 08       		.byte	0x8
 28694 c60c 7A590000 		.long	0x597a
 28695 c610 7E       		.uleb128 0x7e
 28696 c611 08       		.byte	0x8
 28697 c612 175B0000 		.long	0x5b17
 28698 c616 7F       		.uleb128 0x7f
 28699 c617 08       		.byte	0x8
 28700 c618 2C5C0000 		.long	0x5c2c
 28701 c61c 8101     		.uleb128 0x81
 28702 c61e 08       		.byte	0x8
 28703 c61f 175B0000 		.long	0x5b17
 28704 c623 7F       		.uleb128 0x7f
 28705 c624 08       		.byte	0x8
 28706 c625 175B0000 		.long	0x5b17
 28707 c629 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 805


 28708 c62a 08       		.byte	0x8
 28709 c62b 9F560000 		.long	0x569f
 28710 c62f 7F       		.uleb128 0x7f
 28711 c630 08       		.byte	0x8
 28712 c631 315C0000 		.long	0x5c31
 28713 c635 8101     		.uleb128 0x81
 28714 c637 08       		.byte	0x8
 28715 c638 9F560000 		.long	0x569f
 28716 c63c 7E       		.uleb128 0x7e
 28717 c63d 08       		.byte	0x8
 28718 c63e 1E5F0000 		.long	0x5f1e
 28719 c642 7F       		.uleb128 0x7f
 28720 c643 08       		.byte	0x8
 28721 c644 1E5F0000 		.long	0x5f1e
 28722 c648 7E       		.uleb128 0x7e
 28723 c649 08       		.byte	0x8
 28724 c64a 6E5F0000 		.long	0x5f6e
 28725 c64e 7F       		.uleb128 0x7f
 28726 c64f 08       		.byte	0x8
 28727 c650 3C600000 		.long	0x603c
 28728 c654 7F       		.uleb128 0x7f
 28729 c655 08       		.byte	0x8
 28730 c656 65530000 		.long	0x5365
 28731 c65a 7F       		.uleb128 0x7f
 28732 c65b 08       		.byte	0x8
 28733 c65c 6E5F0000 		.long	0x5f6e
 28734 c660 7F       		.uleb128 0x7f
 28735 c661 08       		.byte	0x8
 28736 c662 41600000 		.long	0x6041
 28737 c666 7F       		.uleb128 0x7f
 28738 c667 08       		.byte	0x8
 28739 c668 46600000 		.long	0x6046
 28740 c66c 7F       		.uleb128 0x7f
 28741 c66d 08       		.byte	0x8
 28742 c66e DD610000 		.long	0x61dd
 28743 c672 7F       		.uleb128 0x7f
 28744 c673 08       		.byte	0x8
 28745 c674 5F600000 		.long	0x605f
 28746 c678 7F       		.uleb128 0x7f
 28747 c679 08       		.byte	0x8
 28748 c67a CE600000 		.long	0x60ce
 28749 c67e 7E       		.uleb128 0x7e
 28750 c67f 08       		.byte	0x8
 28751 c680 46600000 		.long	0x6046
 28752 c684 8101     		.uleb128 0x81
 28753 c686 08       		.byte	0x8
 28754 c687 46600000 		.long	0x6046
 28755 c68b 7E       		.uleb128 0x7e
 28756 c68c 08       		.byte	0x8
 28757 c68d E2610000 		.long	0x61e2
 28758 c691 7F       		.uleb128 0x7f
 28759 c692 08       		.byte	0x8
 28760 c693 97C60000 		.long	0xc697
 28761 c697 11       		.uleb128 0x11
 28762 c698 67C50000 		.long	0xc567
 28763 c69c 7F       		.uleb128 0x7f
 28764 c69d 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 806


 28765 c69e 67C50000 		.long	0xc567
 28766 c6a2 7F       		.uleb128 0x7f
 28767 c6a3 08       		.byte	0x8
 28768 c6a4 E2610000 		.long	0x61e2
 28769 c6a8 7F       		.uleb128 0x7f
 28770 c6a9 08       		.byte	0x8
 28771 c6aa B6620000 		.long	0x62b6
 28772 c6ae 7F       		.uleb128 0x7f
 28773 c6af 08       		.byte	0x8
 28774 c6b0 BB620000 		.long	0x62bb
 28775 c6b4 7F       		.uleb128 0x7f
 28776 c6b5 08       		.byte	0x8
 28777 c6b6 6B640000 		.long	0x646b
 28778 c6ba 7F       		.uleb128 0x7f
 28779 c6bb 08       		.byte	0x8
 28780 c6bc D4620000 		.long	0x62d4
 28781 c6c0 7F       		.uleb128 0x7f
 28782 c6c1 08       		.byte	0x8
 28783 c6c2 43630000 		.long	0x6343
 28784 c6c6 7E       		.uleb128 0x7e
 28785 c6c7 08       		.byte	0x8
 28786 c6c8 BB620000 		.long	0x62bb
 28787 c6cc 8101     		.uleb128 0x81
 28788 c6ce 08       		.byte	0x8
 28789 c6cf BB620000 		.long	0x62bb
 28790 c6d3 7E       		.uleb128 0x7e
 28791 c6d4 08       		.byte	0x8
 28792 c6d5 70640000 		.long	0x6470
 28793 c6d9 7F       		.uleb128 0x7f
 28794 c6da 08       		.byte	0x8
 28795 c6db 91650000 		.long	0x6591
 28796 c6df 8101     		.uleb128 0x81
 28797 c6e1 08       		.byte	0x8
 28798 c6e2 70640000 		.long	0x6470
 28799 c6e6 7F       		.uleb128 0x7f
 28800 c6e7 08       		.byte	0x8
 28801 c6e8 70640000 		.long	0x6470
 28802 c6ec 7F       		.uleb128 0x7f
 28803 c6ed 08       		.byte	0x8
 28804 c6ee 0EC50000 		.long	0xc50e
 28805 c6f2 7E       		.uleb128 0x7e
 28806 c6f3 08       		.byte	0x8
 28807 c6f4 505C0000 		.long	0x5c50
 28808 c6f8 8101     		.uleb128 0x81
 28809 c6fa 08       		.byte	0x8
 28810 c6fb 435C0000 		.long	0x5c43
 28811 c6ff 8101     		.uleb128 0x81
 28812 c701 08       		.byte	0x8
 28813 c702 505C0000 		.long	0x5c50
 28814 c706 7F       		.uleb128 0x7f
 28815 c707 08       		.byte	0x8
 28816 c708 505C0000 		.long	0x5c50
 28817 c70c 7E       		.uleb128 0x7e
 28818 c70d 08       		.byte	0x8
 28819 c70e D3650000 		.long	0x65d3
 28820 c712 7F       		.uleb128 0x7f
 28821 c713 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 807


 28822 c714 985C0000 		.long	0x5c98
 28823 c718 7F       		.uleb128 0x7f
 28824 c719 08       		.byte	0x8
 28825 c71a 485E0000 		.long	0x5e48
 28826 c71e 7F       		.uleb128 0x7f
 28827 c71f 08       		.byte	0x8
 28828 c720 D3650000 		.long	0x65d3
 28829 c724 7E       		.uleb128 0x7e
 28830 c725 08       		.byte	0x8
 28831 c726 C0680000 		.long	0x68c0
 28832 c72a 7F       		.uleb128 0x7f
 28833 c72b 08       		.byte	0x8
 28834 c72c 8E690000 		.long	0x698e
 28835 c730 7F       		.uleb128 0x7f
 28836 c731 08       		.byte	0x8
 28837 c732 3E530000 		.long	0x533e
 28838 c736 7F       		.uleb128 0x7f
 28839 c737 08       		.byte	0x8
 28840 c738 C0680000 		.long	0x68c0
 28841 c73c 7F       		.uleb128 0x7f
 28842 c73d 08       		.byte	0x8
 28843 c73e 93690000 		.long	0x6993
 28844 c742 7F       		.uleb128 0x7f
 28845 c743 08       		.byte	0x8
 28846 c744 98690000 		.long	0x6998
 28847 c748 7F       		.uleb128 0x7f
 28848 c749 08       		.byte	0x8
 28849 c74a 2F6B0000 		.long	0x6b2f
 28850 c74e 7F       		.uleb128 0x7f
 28851 c74f 08       		.byte	0x8
 28852 c750 B1690000 		.long	0x69b1
 28853 c754 7F       		.uleb128 0x7f
 28854 c755 08       		.byte	0x8
 28855 c756 206A0000 		.long	0x6a20
 28856 c75a 7E       		.uleb128 0x7e
 28857 c75b 08       		.byte	0x8
 28858 c75c 98690000 		.long	0x6998
 28859 c760 8101     		.uleb128 0x81
 28860 c762 08       		.byte	0x8
 28861 c763 98690000 		.long	0x6998
 28862 c767 7E       		.uleb128 0x7e
 28863 c768 08       		.byte	0x8
 28864 c769 346B0000 		.long	0x6b34
 28865 c76d 7F       		.uleb128 0x7f
 28866 c76e 08       		.byte	0x8
 28867 c76f 73C70000 		.long	0xc773
 28868 c773 11       		.uleb128 0x11
 28869 c774 5BC50000 		.long	0xc55b
 28870 c778 7F       		.uleb128 0x7f
 28871 c779 08       		.byte	0x8
 28872 c77a 5BC50000 		.long	0xc55b
 28873 c77e 7F       		.uleb128 0x7f
 28874 c77f 08       		.byte	0x8
 28875 c780 346B0000 		.long	0x6b34
 28876 c784 7F       		.uleb128 0x7f
 28877 c785 08       		.byte	0x8
 28878 c786 086C0000 		.long	0x6c08
GAS LISTING /tmp/ccJUMvuF.s 			page 808


 28879 c78a 7F       		.uleb128 0x7f
 28880 c78b 08       		.byte	0x8
 28881 c78c 0D6C0000 		.long	0x6c0d
 28882 c790 7F       		.uleb128 0x7f
 28883 c791 08       		.byte	0x8
 28884 c792 BD6D0000 		.long	0x6dbd
 28885 c796 7F       		.uleb128 0x7f
 28886 c797 08       		.byte	0x8
 28887 c798 266C0000 		.long	0x6c26
 28888 c79c 7F       		.uleb128 0x7f
 28889 c79d 08       		.byte	0x8
 28890 c79e 956C0000 		.long	0x6c95
 28891 c7a2 7E       		.uleb128 0x7e
 28892 c7a3 08       		.byte	0x8
 28893 c7a4 0D6C0000 		.long	0x6c0d
 28894 c7a8 8101     		.uleb128 0x81
 28895 c7aa 08       		.byte	0x8
 28896 c7ab 0D6C0000 		.long	0x6c0d
 28897 c7af 7E       		.uleb128 0x7e
 28898 c7b0 08       		.byte	0x8
 28899 c7b1 C26D0000 		.long	0x6dc2
 28900 c7b5 7F       		.uleb128 0x7f
 28901 c7b6 08       		.byte	0x8
 28902 c7b7 E36E0000 		.long	0x6ee3
 28903 c7bb 8101     		.uleb128 0x81
 28904 c7bd 08       		.byte	0x8
 28905 c7be C26D0000 		.long	0x6dc2
 28906 c7c2 7F       		.uleb128 0x7f
 28907 c7c3 08       		.byte	0x8
 28908 c7c4 C26D0000 		.long	0x6dc2
 28909 c7c8 7F       		.uleb128 0x7f
 28910 c7c9 08       		.byte	0x8
 28911 c7ca D2C40000 		.long	0xc4d2
 28912 c7ce 7E       		.uleb128 0x7e
 28913 c7cf 08       		.byte	0x8
 28914 c7d0 F2650000 		.long	0x65f2
 28915 c7d4 8101     		.uleb128 0x81
 28916 c7d6 08       		.byte	0x8
 28917 c7d7 E5650000 		.long	0x65e5
 28918 c7db 8101     		.uleb128 0x81
 28919 c7dd 08       		.byte	0x8
 28920 c7de F2650000 		.long	0x65f2
 28921 c7e2 7F       		.uleb128 0x7f
 28922 c7e3 08       		.byte	0x8
 28923 c7e4 F2650000 		.long	0x65f2
 28924 c7e8 7E       		.uleb128 0x7e
 28925 c7e9 08       		.byte	0x8
 28926 c7ea 256F0000 		.long	0x6f25
 28927 c7ee 7F       		.uleb128 0x7f
 28928 c7ef 08       		.byte	0x8
 28929 c7f0 3A660000 		.long	0x663a
 28930 c7f4 7F       		.uleb128 0x7f
 28931 c7f5 08       		.byte	0x8
 28932 c7f6 EA670000 		.long	0x67ea
 28933 c7fa 7F       		.uleb128 0x7f
 28934 c7fb 08       		.byte	0x8
 28935 c7fc 256F0000 		.long	0x6f25
GAS LISTING /tmp/ccJUMvuF.s 			page 809


 28936 c800 7E       		.uleb128 0x7e
 28937 c801 08       		.byte	0x8
 28938 c802 5A930000 		.long	0x935a
 28939 c806 7F       		.uleb128 0x7f
 28940 c807 08       		.byte	0x8
 28941 c808 5A930000 		.long	0x935a
 28942 c80c 7F       		.uleb128 0x7f
 28943 c80d 08       		.byte	0x8
 28944 c80e 45C50000 		.long	0xc545
 28945 c812 7E       		.uleb128 0x7e
 28946 c813 08       		.byte	0x8
 28947 c814 28A80000 		.long	0xa828
 28948 c818 7F       		.uleb128 0x7f
 28949 c819 08       		.byte	0x8
 28950 c81a 69A90000 		.long	0xa969
 28951 c81e 7E       		.uleb128 0x7e
 28952 c81f 08       		.byte	0x8
 28953 c820 69A90000 		.long	0xa969
 28954 c824 7E       		.uleb128 0x7e
 28955 c825 08       		.byte	0x8
 28956 c826 2A6F0000 		.long	0x6f2a
 28957 c82a 7F       		.uleb128 0x7f
 28958 c82b 08       		.byte	0x8
 28959 c82c CC6F0000 		.long	0x6fcc
 28960 c830 7F       		.uleb128 0x7f
 28961 c831 08       		.byte	0x8
 28962 c832 DD6F0000 		.long	0x6fdd
 28963 c836 7E       		.uleb128 0x7e
 28964 c837 08       		.byte	0x8
 28965 c838 64700000 		.long	0x7064
 28966 c83c 7F       		.uleb128 0x7f
 28967 c83d 08       		.byte	0x8
 28968 c83e 2A6F0000 		.long	0x6f2a
 28969 c842 7F       		.uleb128 0x7f
 28970 c843 08       		.byte	0x8
 28971 c844 95A90000 		.long	0xa995
 28972 c848 7F       		.uleb128 0x7f
 28973 c849 08       		.byte	0x8
 28974 c84a C1A90000 		.long	0xa9c1
 28975 c84e 7E       		.uleb128 0x7e
 28976 c84f 08       		.byte	0x8
 28977 c850 5C720000 		.long	0x725c
 28978 c854 7F       		.uleb128 0x7f
 28979 c855 08       		.byte	0x8
 28980 c856 19730000 		.long	0x7319
 28981 c85a 8101     		.uleb128 0x81
 28982 c85c 08       		.byte	0x8
 28983 c85d 1E730000 		.long	0x731e
 28984 c861 7F       		.uleb128 0x7f
 28985 c862 08       		.byte	0x8
 28986 c863 5C720000 		.long	0x725c
 28987 c867 7F       		.uleb128 0x7f
 28988 c868 08       		.byte	0x8
 28989 c869 1E730000 		.long	0x731e
 28990 c86d 7E       		.uleb128 0x7e
 28991 c86e 08       		.byte	0x8
 28992 c86f 50720000 		.long	0x7250
GAS LISTING /tmp/ccJUMvuF.s 			page 810


 28993 c873 7E       		.uleb128 0x7e
 28994 c874 08       		.byte	0x8
 28995 c875 E8740000 		.long	0x74e8
 28996 c879 7F       		.uleb128 0x7f
 28997 c87a 08       		.byte	0x8
 28998 c87b C6730000 		.long	0x73c6
 28999 c87f 8101     		.uleb128 0x81
 29000 c881 08       		.byte	0x8
 29001 c882 50720000 		.long	0x7250
 29002 c886 7E       		.uleb128 0x7e
 29003 c887 08       		.byte	0x8
 29004 c888 ED740000 		.long	0x74ed
 29005 c88c 7F       		.uleb128 0x7f
 29006 c88d 08       		.byte	0x8
 29007 c88e CD750000 		.long	0x75cd
 29008 c892 7F       		.uleb128 0x7f
 29009 c893 08       		.byte	0x8
 29010 c894 19760000 		.long	0x7619
 29011 c898 7F       		.uleb128 0x7f
 29012 c899 08       		.byte	0x8
 29013 c89a B27E0000 		.long	0x7eb2
 29014 c89e 8101     		.uleb128 0x81
 29015 c8a0 08       		.byte	0x8
 29016 c8a1 ED740000 		.long	0x74ed
 29017 c8a5 7F       		.uleb128 0x7f
 29018 c8a6 08       		.byte	0x8
 29019 c8a7 ED740000 		.long	0x74ed
 29020 c8ab 7E       		.uleb128 0x7e
 29021 c8ac 08       		.byte	0x8
 29022 c8ad B27E0000 		.long	0x7eb2
 29023 c8b1 8101     		.uleb128 0x81
 29024 c8b3 08       		.byte	0x8
 29025 c8b4 23750000 		.long	0x7523
 29026 c8b8 7E       		.uleb128 0x7e
 29027 c8b9 08       		.byte	0x8
 29028 c8ba B77E0000 		.long	0x7eb7
 29029 c8be 7E       		.uleb128 0x7e
 29030 c8bf 08       		.byte	0x8
 29031 c8c0 977F0000 		.long	0x7f97
 29032 c8c4 8101     		.uleb128 0x81
 29033 c8c6 08       		.byte	0x8
 29034 c8c7 65530000 		.long	0x5365
 29035 c8cb 8101     		.uleb128 0x81
 29036 c8cd 08       		.byte	0x8
 29037 c8ce 3E530000 		.long	0x533e
 29038 c8d2 7E       		.uleb128 0x7e
 29039 c8d3 08       		.byte	0x8
 29040 c8d4 D3980000 		.long	0x98d3
 29041 c8d8 7F       		.uleb128 0x7f
 29042 c8d9 08       		.byte	0x8
 29043 c8da E2C00000 		.long	0xc0e2
 29044 c8de 7E       		.uleb128 0x7e
 29045 c8df 08       		.byte	0x8
 29046 c8e0 88AA0000 		.long	0xaa88
 29047 c8e4 7F       		.uleb128 0x7f
 29048 c8e5 08       		.byte	0x8
 29049 c8e6 D3980000 		.long	0x98d3
GAS LISTING /tmp/ccJUMvuF.s 			page 811


 29050 c8ea 7E       		.uleb128 0x7e
 29051 c8eb 08       		.byte	0x8
 29052 c8ec B4960000 		.long	0x96b4
 29053 c8f0 7F       		.uleb128 0x7f
 29054 c8f1 08       		.byte	0x8
 29055 c8f2 F6C80000 		.long	0xc8f6
 29056 c8f6 11       		.uleb128 0x11
 29057 c8f7 F0B10000 		.long	0xb1f0
 29058 c8fb 7E       		.uleb128 0x7e
 29059 c8fc 08       		.byte	0x8
 29060 c8fd 8DAA0000 		.long	0xaa8d
 29061 c901 7F       		.uleb128 0x7f
 29062 c902 08       		.byte	0x8
 29063 c903 B4960000 		.long	0x96b4
 29064 c907 9801     		.uleb128 0x98
 29065 c909 6D0C0000 		.long	0xc6d
 29066 c90d 03       		.byte	0x3
 29067 c90e 16C90000 		.long	0xc916
 29068 c912 21C90000 		.long	0xc921
 29069 c916 9901     		.uleb128 0x99
 29070 c918 00000000 		.long	.LASF1661
 29071 c91c 21C90000 		.long	0xc921
 29072 c920 00       		.byte	0
 29073 c921 11       		.uleb128 0x11
 29074 c922 74C00000 		.long	0xc074
 29075 c926 7E       		.uleb128 0x7e
 29076 c927 08       		.byte	0x8
 29077 c928 03840000 		.long	0x8403
 29078 c92c 9801     		.uleb128 0x98
 29079 c92e 83830000 		.long	0x8383
 29080 c932 03       		.byte	0x3
 29081 c933 3BC90000 		.long	0xc93b
 29082 c937 46C90000 		.long	0xc946
 29083 c93b 9901     		.uleb128 0x99
 29084 c93d 00000000 		.long	.LASF1661
 29085 c941 46C90000 		.long	0xc946
 29086 c945 00       		.byte	0
 29087 c946 11       		.uleb128 0x11
 29088 c947 26C90000 		.long	0xc926
 29089 c94b 9A01     		.uleb128 0x9a
 29090 c94d 00000000 		.long	.LASF1662
 29091 c951 4E       		.byte	0x4e
 29092 c952 F7       		.byte	0xf7
 29093 c953 28930000 		.long	0x9328
 29094 c957 03       		.byte	0x3
 29095 c958 6CC90000 		.long	0xc96c
 29096 c95c 9B01     		.uleb128 0x9b
 29097 c95e 9C01     		.uleb128 0x9c
 29098 c960 00000000 		.long	.LASF1665
 29099 c964 4E       		.byte	0x4e
 29100 c965 F9       		.byte	0xf9
 29101 c966 6CC90000 		.long	0xc96c
 29102 c96a 00       		.byte	0
 29103 c96b 00       		.byte	0
 29104 c96c 11       		.uleb128 0x11
 29105 c96d 01930000 		.long	0x9301
 29106 c971 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 812


 29107 c972 08       		.byte	0x8
 29108 c973 77C90000 		.long	0xc977
 29109 c977 77       		.uleb128 0x77
 29110 c978 87B90000 		.long	0xb987
 29111 c97c 9D01     		.uleb128 0x9d
 29112 c97e DAAA0000 		.long	0xaada
 29113 c982 03       		.byte	0x3
 29114 c983 A0C90000 		.long	0xc9a0
 29115 c987 9E01     		.uleb128 0x9e
 29116 c989 00000000 		.long	.LASF1663
 29117 c98d 0F       		.byte	0xf
 29118 c98e 30       		.byte	0x30
 29119 c98f 71C90000 		.long	0xc971
 29120 c993 9E01     		.uleb128 0x9e
 29121 c995 00000000 		.long	.LASF1664
 29122 c999 0F       		.byte	0xf
 29123 c99a 30       		.byte	0x30
 29124 c99b 28930000 		.long	0x9328
 29125 c99f 00       		.byte	0
 29126 c9a0 7E       		.uleb128 0x7e
 29127 c9a1 08       		.byte	0x8
 29128 c9a2 87B90000 		.long	0xb987
 29129 c9a6 9D01     		.uleb128 0x9d
 29130 c9a8 F5AA0000 		.long	0xaaf5
 29131 c9ac 03       		.byte	0x3
 29132 c9ad D9C90000 		.long	0xc9d9
 29133 c9b1 9E01     		.uleb128 0x9e
 29134 c9b3 00000000 		.long	.LASF1663
 29135 c9b7 0F       		.byte	0xf
 29136 c9b8 41       		.byte	0x41
 29137 c9b9 A0C90000 		.long	0xc9a0
 29138 c9bd 9E01     		.uleb128 0x9e
 29139 c9bf 00000000 		.long	.LASF1664
 29140 c9c3 0F       		.byte	0xf
 29141 c9c4 41       		.byte	0x41
 29142 c9c5 28930000 		.long	0x9328
 29143 c9c9 9B01     		.uleb128 0x9b
 29144 c9cb 9C01     		.uleb128 0x9c
 29145 c9cd 00000000 		.long	.LASF1666
 29146 c9d1 0F       		.byte	0xf
 29147 c9d2 43       		.byte	0x43
 29148 c9d3 87B90000 		.long	0xb987
 29149 c9d7 00       		.byte	0
 29150 c9d8 00       		.byte	0
 29151 c9d9 9D01     		.uleb128 0x9d
 29152 c9db EC0A0000 		.long	0xaec
 29153 c9df 03       		.byte	0x3
 29154 c9e0 F4C90000 		.long	0xc9f4
 29155 c9e4 9B01     		.uleb128 0x9b
 29156 c9e6 9F01     		.uleb128 0x9f
 29157 c9e8 5F5F7000 		.string	"__p"
 29158 c9ec 08       		.byte	0x8
 29159 c9ed BA       		.byte	0xba
 29160 c9ee 01930000 		.long	0x9301
 29161 c9f2 00       		.byte	0
 29162 c9f3 00       		.byte	0
 29163 c9f4 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 813


 29164 c9f6 10AB0000 		.long	0xab10
 29165 c9fa 03       		.byte	0x3
 29166 c9fb 18CA0000 		.long	0xca18
 29167 c9ff 9E01     		.uleb128 0x9e
 29168 ca01 00000000 		.long	.LASF1663
 29169 ca05 0F       		.byte	0xf
 29170 ca06 4E       		.byte	0x4e
 29171 ca07 A0C90000 		.long	0xc9a0
 29172 ca0b 9E01     		.uleb128 0x9e
 29173 ca0d 00000000 		.long	.LASF1664
 29174 ca11 0F       		.byte	0xf
 29175 ca12 4E       		.byte	0x4e
 29176 ca13 28930000 		.long	0x9328
 29177 ca17 00       		.byte	0
 29178 ca18 9801     		.uleb128 0x98
 29179 ca1a ED0B0000 		.long	0xbed
 29180 ca1e 03       		.byte	0x3
 29181 ca1f 27CA0000 		.long	0xca27
 29182 ca23 3ECA0000 		.long	0xca3e
 29183 ca27 9901     		.uleb128 0x99
 29184 ca29 00000000 		.long	.LASF1661
 29185 ca2d 3ECA0000 		.long	0xca3e
 29186 ca31 A001     		.uleb128 0xa0
 29187 ca33 5F5F6100 		.string	"__a"
 29188 ca37 08       		.byte	0x8
 29189 ca38 ED       		.byte	0xed
 29190 ca39 43CA0000 		.long	0xca43
 29191 ca3d 00       		.byte	0
 29192 ca3e 11       		.uleb128 0x11
 29193 ca3f 80C00000 		.long	0xc080
 29194 ca43 11       		.uleb128 0x11
 29195 ca44 F5B70000 		.long	0xb7f5
 29196 ca48 9D01     		.uleb128 0x9d
 29197 ca4a 65940000 		.long	0x9465
 29198 ca4e 03       		.byte	0x3
 29199 ca4f 59CA0000 		.long	0xca59
 29200 ca53 09       		.uleb128 0x9
 29201 ca54 A8930000 		.long	0x93a8
 29202 ca58 00       		.byte	0
 29203 ca59 9D01     		.uleb128 0x9d
 29204 ca5b 7A940000 		.long	0x947a
 29205 ca5f 03       		.byte	0x3
 29206 ca60 6ACA0000 		.long	0xca6a
 29207 ca64 09       		.uleb128 0x9
 29208 ca65 A8930000 		.long	0x93a8
 29209 ca69 00       		.byte	0
 29210 ca6a 9D01     		.uleb128 0x9d
 29211 ca6c 08840000 		.long	0x8408
 29212 ca70 03       		.byte	0x3
 29213 ca71 8ECA0000 		.long	0xca8e
 29214 ca75 A001     		.uleb128 0xa0
 29215 ca77 5F5F6100 		.string	"__a"
 29216 ca7b 15       		.byte	0x15
 29217 ca7c 4F       		.byte	0x4f
 29218 ca7d C1240000 		.long	0x24c1
 29219 ca81 A001     		.uleb128 0xa0
 29220 ca83 5F5F6200 		.string	"__b"
GAS LISTING /tmp/ccJUMvuF.s 			page 814


 29221 ca87 15       		.byte	0x15
 29222 ca88 4F       		.byte	0x4f
 29223 ca89 C1240000 		.long	0x24c1
 29224 ca8d 00       		.byte	0
 29225 ca8e 9D01     		.uleb128 0x9d
 29226 ca90 22840000 		.long	0x8422
 29227 ca94 03       		.byte	0x3
 29228 ca95 B2CA0000 		.long	0xcab2
 29229 ca99 A001     		.uleb128 0xa0
 29230 ca9b 5F5F6100 		.string	"__a"
 29231 ca9f 15       		.byte	0x15
 29232 caa0 4B       		.byte	0x4b
 29233 caa1 C1240000 		.long	0x24c1
 29234 caa5 A001     		.uleb128 0xa0
 29235 caa7 5F5F6200 		.string	"__b"
 29236 caab 15       		.byte	0x15
 29237 caac 4B       		.byte	0x4b
 29238 caad C1240000 		.long	0x24c1
 29239 cab1 00       		.byte	0
 29240 cab2 9D01     		.uleb128 0x9d
 29241 cab4 3C840000 		.long	0x843c
 29242 cab8 03       		.byte	0x3
 29243 cab9 D6CA0000 		.long	0xcad6
 29244 cabd A001     		.uleb128 0xa0
 29245 cabf 5F5F6100 		.string	"__a"
 29246 cac3 15       		.byte	0x15
 29247 cac4 9D       		.byte	0x9d
 29248 cac5 89250000 		.long	0x2589
 29249 cac9 A001     		.uleb128 0xa0
 29250 cacb 5F5F6200 		.string	"__b"
 29251 cacf 15       		.byte	0x15
 29252 cad0 9D       		.byte	0x9d
 29253 cad1 89250000 		.long	0x2589
 29254 cad5 00       		.byte	0
 29255 cad6 7E       		.uleb128 0x7e
 29256 cad7 08       		.byte	0x8
 29257 cad8 7A830000 		.long	0x837a
 29258 cadc 9801     		.uleb128 0x98
 29259 cade A1830000 		.long	0x83a1
 29260 cae2 03       		.byte	0x3
 29261 cae3 EBCA0000 		.long	0xcaeb
 29262 cae7 02CB0000 		.long	0xcb02
 29263 caeb 9901     		.uleb128 0x99
 29264 caed 00000000 		.long	.LASF1661
 29265 caf1 02CB0000 		.long	0xcb02
 29266 caf5 9E01     		.uleb128 0x9e
 29267 caf7 00000000 		.long	.LASF1605
 29268 cafb 0E       		.byte	0xe
 29269 cafc 97       		.byte	0x97
 29270 cafd 3C260000 		.long	0x263c
 29271 cb01 00       		.byte	0
 29272 cb02 11       		.uleb128 0x11
 29273 cb03 D6CA0000 		.long	0xcad6
 29274 cb07 9D01     		.uleb128 0x9d
 29275 cb09 5C050000 		.long	0x55c
 29276 cb0d 03       		.byte	0x3
 29277 cb0e 20CB0000 		.long	0xcb20
GAS LISTING /tmp/ccJUMvuF.s 			page 815


 29278 cb12 A101     		.uleb128 0xa1
 29279 cb14 5F5F7300 		.string	"__s"
 29280 cb18 1F       		.byte	0x1f
 29281 cb19 0601     		.value	0x106
 29282 cb1b 75B60000 		.long	0xb675
 29283 cb1f 00       		.byte	0
 29284 cb20 9D01     		.uleb128 0x9d
 29285 cb22 56840000 		.long	0x8456
 29286 cb26 03       		.byte	0x3
 29287 cb27 4FCB0000 		.long	0xcb4f
 29288 cb2b 35       		.uleb128 0x35
 29289 cb2c 00000000 		.long	.LASF302
 29290 cb30 BD040000 		.long	0x4bd
 29291 cb34 A201     		.uleb128 0xa2
 29292 cb36 00000000 		.long	.LASF1667
 29293 cb3a 09       		.byte	0x9
 29294 cb3b 1202     		.value	0x212
 29295 cb3d 4FCB0000 		.long	0xcb4f
 29296 cb41 A101     		.uleb128 0xa1
 29297 cb43 5F5F7300 		.string	"__s"
 29298 cb47 09       		.byte	0x9
 29299 cb48 1202     		.value	0x212
 29300 cb4a CEAE0000 		.long	0xaece
 29301 cb4e 00       		.byte	0
 29302 cb4f 11       		.uleb128 0x11
 29303 cb50 72C10000 		.long	0xc172
 29304 cb54 9D01     		.uleb128 0x9d
 29305 cb56 7A840000 		.long	0x847a
 29306 cb5a 03       		.byte	0x3
 29307 cb5b 6CCB0000 		.long	0xcb6c
 29308 cb5f A001     		.uleb128 0xa0
 29309 cb61 5F5F6100 		.string	"__a"
 29310 cb65 15       		.byte	0x15
 29311 cb66 57       		.byte	0x57
 29312 cb67 C1240000 		.long	0x24c1
 29313 cb6b 00       		.byte	0
 29314 cb6c 7F       		.uleb128 0x7f
 29315 cb6d 08       		.byte	0x8
 29316 cb6e A9840000 		.long	0x84a9
 29317 cb72 7F       		.uleb128 0x7f
 29318 cb73 08       		.byte	0x8
 29319 cb74 C1240000 		.long	0x24c1
 29320 cb78 9D01     		.uleb128 0x9d
 29321 cb7a 8F840000 		.long	0x848f
 29322 cb7e 03       		.byte	0x3
 29323 cb7f 9CCB0000 		.long	0xcb9c
 29324 cb83 A001     		.uleb128 0xa0
 29325 cb85 5F5F6100 		.string	"__a"
 29326 cb89 15       		.byte	0x15
 29327 cb8a 5F       		.byte	0x5f
 29328 cb8b 9CCB0000 		.long	0xcb9c
 29329 cb8f A001     		.uleb128 0xa0
 29330 cb91 5F5F6200 		.string	"__b"
 29331 cb95 15       		.byte	0x15
 29332 cb96 5F       		.byte	0x5f
 29333 cb97 C1240000 		.long	0x24c1
 29334 cb9b 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 816


 29335 cb9c 11       		.uleb128 0x11
 29336 cb9d 72CB0000 		.long	0xcb72
 29337 cba1 9D01     		.uleb128 0x9d
 29338 cba3 AE840000 		.long	0x84ae
 29339 cba7 03       		.byte	0x3
 29340 cba8 C5CB0000 		.long	0xcbc5
 29341 cbac A001     		.uleb128 0xa0
 29342 cbae 5F5F6100 		.string	"__a"
 29343 cbb2 15       		.byte	0x15
 29344 cbb3 5B       		.byte	0x5b
 29345 cbb4 C5CB0000 		.long	0xcbc5
 29346 cbb8 A001     		.uleb128 0xa0
 29347 cbba 5F5F6200 		.string	"__b"
 29348 cbbe 15       		.byte	0x15
 29349 cbbf 5B       		.byte	0x5b
 29350 cbc0 C1240000 		.long	0x24c1
 29351 cbc4 00       		.byte	0
 29352 cbc5 11       		.uleb128 0x11
 29353 cbc6 72CB0000 		.long	0xcb72
 29354 cbca 7E       		.uleb128 0x7e
 29355 cbcb 08       		.byte	0x8
 29356 cbcc DD250000 		.long	0x25dd
 29357 cbd0 9801     		.uleb128 0x98
 29358 cbd2 49260000 		.long	0x2649
 29359 cbd6 03       		.byte	0x3
 29360 cbd7 DFCB0000 		.long	0xcbdf
 29361 cbdb 14CC0000 		.long	0xcc14
 29362 cbdf 9901     		.uleb128 0x99
 29363 cbe1 00000000 		.long	.LASF1661
 29364 cbe5 14CC0000 		.long	0xcc14
 29365 cbe9 A201     		.uleb128 0xa2
 29366 cbeb 00000000 		.long	.LASF1668
 29367 cbef 15       		.byte	0x15
 29368 cbf0 5302     		.value	0x253
 29369 cbf2 72260000 		.long	0x2672
 29370 cbf6 A201     		.uleb128 0xa2
 29371 cbf8 00000000 		.long	.LASF1669
 29372 cbfc 15       		.byte	0x15
 29373 cbfd 5302     		.value	0x253
 29374 cbff 72260000 		.long	0x2672
 29375 cc03 9B01     		.uleb128 0x9b
 29376 cc05 A301     		.uleb128 0xa3
 29377 cc07 00000000 		.long	.LASF1670
 29378 cc0b 15       		.byte	0x15
 29379 cc0c 5502     		.value	0x255
 29380 cc0e 72260000 		.long	0x2672
 29381 cc12 00       		.byte	0
 29382 cc13 00       		.byte	0
 29383 cc14 11       		.uleb128 0x11
 29384 cc15 CACB0000 		.long	0xcbca
 29385 cc19 7E       		.uleb128 0x7e
 29386 cc1a 08       		.byte	0x8
 29387 cc1b C8840000 		.long	0x84c8
 29388 cc1f 9801     		.uleb128 0x98
 29389 cc21 F9290000 		.long	0x29f9
 29390 cc25 03       		.byte	0x3
 29391 cc26 2ECC0000 		.long	0xcc2e
GAS LISTING /tmp/ccJUMvuF.s 			page 817


 29392 cc2a 46CC0000 		.long	0xcc46
 29393 cc2e 9901     		.uleb128 0x99
 29394 cc30 00000000 		.long	.LASF1661
 29395 cc34 46CC0000 		.long	0xcc46
 29396 cc38 A101     		.uleb128 0xa1
 29397 cc3a 5F5F6300 		.string	"__c"
 29398 cc3e 01       		.byte	0x1
 29399 cc3f 6103     		.value	0x361
 29400 cc41 ACAE0000 		.long	0xaeac
 29401 cc45 00       		.byte	0
 29402 cc46 11       		.uleb128 0x11
 29403 cc47 19CC0000 		.long	0xcc19
 29404 cc4b 7F       		.uleb128 0x7f
 29405 cc4c 08       		.byte	0x8
 29406 cc4d C3280000 		.long	0x28c3
 29407 cc51 7E       		.uleb128 0x7e
 29408 cc52 08       		.byte	0x8
 29409 cc53 97280000 		.long	0x2897
 29410 cc57 9801     		.uleb128 0x98
 29411 cc59 A0280000 		.long	0x28a0
 29412 cc5d 03       		.byte	0x3
 29413 cc5e 66CC0000 		.long	0xcc66
 29414 cc62 7DCC0000 		.long	0xcc7d
 29415 cc66 9901     		.uleb128 0x99
 29416 cc68 00000000 		.long	.LASF1661
 29417 cc6c 7DCC0000 		.long	0xcc7d
 29418 cc70 A001     		.uleb128 0xa0
 29419 cc72 5F5F6600 		.string	"__f"
 29420 cc76 09       		.byte	0x9
 29421 cc77 DC       		.byte	0xdc
 29422 cc78 29000000 		.long	0x29
 29423 cc7c 00       		.byte	0
 29424 cc7d 11       		.uleb128 0x11
 29425 cc7e 51CC0000 		.long	0xcc51
 29426 cc82 7E       		.uleb128 0x7e
 29427 cc83 08       		.byte	0x8
 29428 cc84 88CC0000 		.long	0xcc88
 29429 cc88 9201     		.uleb128 0x92
 29430 cc8a 4BCC0000 		.long	0xcc4b
 29431 cc8e 98CC0000 		.long	0xcc98
 29432 cc92 09       		.uleb128 0x9
 29433 cc93 4BCC0000 		.long	0xcc4b
 29434 cc97 00       		.byte	0
 29435 cc98 9801     		.uleb128 0x98
 29436 cc9a CF280000 		.long	0x28cf
 29437 cc9e 03       		.byte	0x3
 29438 cc9f A7CC0000 		.long	0xcca7
 29439 cca3 BECC0000 		.long	0xccbe
 29440 cca7 9901     		.uleb128 0x99
 29441 cca9 00000000 		.long	.LASF1661
 29442 ccad 7DCC0000 		.long	0xcc7d
 29443 ccb1 9E01     		.uleb128 0x9e
 29444 ccb3 00000000 		.long	.LASF1671
 29445 ccb7 09       		.byte	0x9
 29446 ccb8 6C       		.byte	0x6c
 29447 ccb9 82CC0000 		.long	0xcc82
 29448 ccbd 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 818


 29449 ccbe 9801     		.uleb128 0x98
 29450 ccc0 4A530000 		.long	0x534a
 29451 ccc4 03       		.byte	0x3
 29452 ccc5 CDCC0000 		.long	0xcccd
 29453 ccc9 E2CC0000 		.long	0xcce2
 29454 cccd 9901     		.uleb128 0x99
 29455 cccf 00000000 		.long	.LASF1661
 29456 ccd3 E2CC0000 		.long	0xcce2
 29457 ccd7 A001     		.uleb128 0xa0
 29458 ccd9 7000     		.string	"p"
 29459 ccdb 05       		.byte	0x5
 29460 ccdc 29       		.byte	0x29
 29461 ccdd 5BC50000 		.long	0xc55b
 29462 cce1 00       		.byte	0
 29463 cce2 11       		.uleb128 0x11
 29464 cce3 55C50000 		.long	0xc555
 29465 cce7 9801     		.uleb128 0x98
 29466 cce9 71530000 		.long	0x5371
 29467 cced 03       		.byte	0x3
 29468 ccee F6CC0000 		.long	0xccf6
 29469 ccf2 0BCD0000 		.long	0xcd0b
 29470 ccf6 9901     		.uleb128 0x99
 29471 ccf8 00000000 		.long	.LASF1661
 29472 ccfc 0BCD0000 		.long	0xcd0b
 29473 cd00 A001     		.uleb128 0xa0
 29474 cd02 7000     		.string	"p"
 29475 cd04 05       		.byte	0x5
 29476 cd05 2D       		.byte	0x2d
 29477 cd06 67C50000 		.long	0xc567
 29478 cd0a 00       		.byte	0
 29479 cd0b 11       		.uleb128 0x11
 29480 cd0c 61C50000 		.long	0xc561
 29481 cd10 9801     		.uleb128 0x98
 29482 cd12 823B0000 		.long	0x3b82
 29483 cd16 03       		.byte	0x3
 29484 cd17 1FCD0000 		.long	0xcd1f
 29485 cd1b 2ACD0000 		.long	0xcd2a
 29486 cd1f 9901     		.uleb128 0x99
 29487 cd21 00000000 		.long	.LASF1661
 29488 cd25 2ACD0000 		.long	0xcd2a
 29489 cd29 00       		.byte	0
 29490 cd2a 11       		.uleb128 0x11
 29491 cd2b 7FC20000 		.long	0xc27f
 29492 cd2f 9801     		.uleb128 0x98
 29493 cd31 7D3C0000 		.long	0x3c7d
 29494 cd35 03       		.byte	0x3
 29495 cd36 3ECD0000 		.long	0xcd3e
 29496 cd3a 56CD0000 		.long	0xcd56
 29497 cd3e 9901     		.uleb128 0x99
 29498 cd40 00000000 		.long	.LASF1661
 29499 cd44 56CD0000 		.long	0xcd56
 29500 cd48 A101     		.uleb128 0xa1
 29501 cd4a 5F5F6E00 		.string	"__n"
 29502 cd4e 06       		.byte	0x6
 29503 cd4f 0B03     		.value	0x30b
 29504 cd51 0C380000 		.long	0x380c
 29505 cd55 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 819


 29506 cd56 11       		.uleb128 0x11
 29507 cd57 5AC20000 		.long	0xc25a
 29508 cd5b 7E       		.uleb128 0x7e
 29509 cd5c 08       		.byte	0x8
 29510 cd5d AC570000 		.long	0x57ac
 29511 cd61 A401     		.uleb128 0xa4
 29512 cd63 B8570000 		.long	0x57b8
 29513 cd67 0A       		.byte	0xa
 29514 cd68 4E       		.byte	0x4e
 29515 cd69 03       		.byte	0x3
 29516 cd6a 72CD0000 		.long	0xcd72
 29517 cd6e 7DCD0000 		.long	0xcd7d
 29518 cd72 9901     		.uleb128 0x99
 29519 cd74 00000000 		.long	.LASF1661
 29520 cd78 7DCD0000 		.long	0xcd7d
 29521 cd7c 00       		.byte	0
 29522 cd7d 11       		.uleb128 0x11
 29523 cd7e 5BCD0000 		.long	0xcd5b
 29524 cd82 7E       		.uleb128 0x7e
 29525 cd83 08       		.byte	0x8
 29526 cd84 DF570000 		.long	0x57df
 29527 cd88 A401     		.uleb128 0xa4
 29528 cd8a F1570000 		.long	0x57f1
 29529 cd8e 0A       		.byte	0xa
 29530 cd8f 56       		.byte	0x56
 29531 cd90 03       		.byte	0x3
 29532 cd91 99CD0000 		.long	0xcd99
 29533 cd95 A4CD0000 		.long	0xcda4
 29534 cd99 9901     		.uleb128 0x99
 29535 cd9b 00000000 		.long	.LASF1661
 29536 cd9f A4CD0000 		.long	0xcda4
 29537 cda3 00       		.byte	0
 29538 cda4 11       		.uleb128 0x11
 29539 cda5 82CD0000 		.long	0xcd82
 29540 cda9 9D01     		.uleb128 0x9d
 29541 cdab FD580000 		.long	0x58fd
 29542 cdaf 03       		.byte	0x3
 29543 cdb0 C1CD0000 		.long	0xcdc1
 29544 cdb4 A001     		.uleb128 0xa0
 29545 cdb6 5F5F6200 		.string	"__b"
 29546 cdba 0B       		.byte	0xb
 29547 cdbb A7       		.byte	0xa7
 29548 cdbc C1CD0000 		.long	0xcdc1
 29549 cdc0 00       		.byte	0
 29550 cdc1 11       		.uleb128 0x11
 29551 cdc2 DFC50000 		.long	0xc5df
 29552 cdc6 7F       		.uleb128 0x7f
 29553 cdc7 08       		.byte	0x8
 29554 cdc8 435C0000 		.long	0x5c43
 29555 cdcc 9D01     		.uleb128 0x9d
 29556 cdce CD840000 		.long	0x84cd
 29557 cdd2 03       		.byte	0x3
 29558 cdd3 EDCD0000 		.long	0xcded
 29559 cdd7 18       		.uleb128 0x18
 29560 cdd8 5F547000 		.string	"_Tp"
 29561 cddc 65530000 		.long	0x5365
 29562 cde0 A001     		.uleb128 0xa0
GAS LISTING /tmp/ccJUMvuF.s 			page 820


 29563 cde2 5F5F7400 		.string	"__t"
 29564 cde6 12       		.byte	0x12
 29565 cde7 4C       		.byte	0x4c
 29566 cde8 EDCD0000 		.long	0xcded
 29567 cdec 00       		.byte	0
 29568 cded 11       		.uleb128 0x11
 29569 cdee C6CD0000 		.long	0xcdc6
 29570 cdf2 9801     		.uleb128 0x98
 29571 cdf4 2A5F0000 		.long	0x5f2a
 29572 cdf8 03       		.byte	0x3
 29573 cdf9 01CE0000 		.long	0xce01
 29574 cdfd 0CCE0000 		.long	0xce0c
 29575 ce01 9901     		.uleb128 0x99
 29576 ce03 00000000 		.long	.LASF1661
 29577 ce07 0CCE0000 		.long	0xce0c
 29578 ce0b 00       		.byte	0
 29579 ce0c 11       		.uleb128 0x11
 29580 ce0d 3CC60000 		.long	0xc63c
 29581 ce11 9801     		.uleb128 0x98
 29582 ce13 FB5F0000 		.long	0x5ffb
 29583 ce17 03       		.byte	0x3
 29584 ce18 29CE0000 		.long	0xce29
 29585 ce1c 40CE0000 		.long	0xce40
 29586 ce20 35       		.uleb128 0x35
 29587 ce21 00000000 		.long	.LASF812
 29588 ce25 65530000 		.long	0x5365
 29589 ce29 9901     		.uleb128 0x99
 29590 ce2b 00000000 		.long	.LASF1661
 29591 ce2f 40CE0000 		.long	0xce40
 29592 ce33 A001     		.uleb128 0xa0
 29593 ce35 5F5F6800 		.string	"__h"
 29594 ce39 0B       		.byte	0xb
 29595 ce3a 5E       		.byte	0x5e
 29596 ce3b 45CE0000 		.long	0xce45
 29597 ce3f 00       		.byte	0
 29598 ce40 11       		.uleb128 0x11
 29599 ce41 48C60000 		.long	0xc648
 29600 ce45 11       		.uleb128 0x11
 29601 ce46 C4C80000 		.long	0xc8c4
 29602 ce4a 7F       		.uleb128 0x7f
 29603 ce4b 08       		.byte	0x8
 29604 ce4c 0B800000 		.long	0x800b
 29605 ce50 9D01     		.uleb128 0x9d
 29606 ce52 EB840000 		.long	0x84eb
 29607 ce56 03       		.byte	0x3
 29608 ce57 71CE0000 		.long	0xce71
 29609 ce5b 18       		.uleb128 0x18
 29610 ce5c 5F547000 		.string	"_Tp"
 29611 ce60 9CC60000 		.long	0xc69c
 29612 ce64 A001     		.uleb128 0xa0
 29613 ce66 5F5F7400 		.string	"__t"
 29614 ce6a 12       		.byte	0x12
 29615 ce6b 4C       		.byte	0x4c
 29616 ce6c 71CE0000 		.long	0xce71
 29617 ce70 00       		.byte	0
 29618 ce71 11       		.uleb128 0x11
 29619 ce72 4ACE0000 		.long	0xce4a
GAS LISTING /tmp/ccJUMvuF.s 			page 821


 29620 ce76 9801     		.uleb128 0x98
 29621 ce78 9E610000 		.long	0x619e
 29622 ce7c 03       		.byte	0x3
 29623 ce7d 93CE0000 		.long	0xce93
 29624 ce81 B0CE0000 		.long	0xceb0
 29625 ce85 35       		.uleb128 0x35
 29626 ce86 00000000 		.long	.LASF812
 29627 ce8a 65530000 		.long	0x5365
 29628 ce8e 6B       		.uleb128 0x6b
 29629 ce8f 00000000 		.long	.LASF826
 29630 ce93 9901     		.uleb128 0x99
 29631 ce95 00000000 		.long	.LASF1661
 29632 ce99 B0CE0000 		.long	0xceb0
 29633 ce9d A201     		.uleb128 0xa2
 29634 ce9f 00000000 		.long	.LASF1672
 29635 cea3 0B       		.byte	0xb
 29636 cea4 0401     		.value	0x104
 29637 cea6 B5CE0000 		.long	0xceb5
 29638 ceaa A501     		.uleb128 0xa5
 29639 ceac 0B       		.byte	0xb
 29640 cead 0401     		.value	0x104
 29641 ceaf 00       		.byte	0
 29642 ceb0 11       		.uleb128 0x11
 29643 ceb1 7EC60000 		.long	0xc67e
 29644 ceb5 11       		.uleb128 0x11
 29645 ceb6 C4C80000 		.long	0xc8c4
 29646 ceba 9801     		.uleb128 0x98
 29647 cebc 75620000 		.long	0x6275
 29648 cec0 03       		.byte	0x3
 29649 cec1 D2CE0000 		.long	0xced2
 29650 cec5 E9CE0000 		.long	0xcee9
 29651 cec9 35       		.uleb128 0x35
 29652 ceca 00000000 		.long	.LASF812
 29653 cece 9CC60000 		.long	0xc69c
 29654 ced2 9901     		.uleb128 0x99
 29655 ced4 00000000 		.long	.LASF1661
 29656 ced8 E9CE0000 		.long	0xcee9
 29657 cedc A001     		.uleb128 0xa0
 29658 cede 5F5F6800 		.string	"__h"
 29659 cee2 0B       		.byte	0xb
 29660 cee3 8B       		.byte	0x8b
 29661 cee4 EECE0000 		.long	0xceee
 29662 cee8 00       		.byte	0
 29663 cee9 11       		.uleb128 0x11
 29664 ceea 8BC60000 		.long	0xc68b
 29665 ceee 11       		.uleb128 0x11
 29666 ceef 9CC60000 		.long	0xc69c
 29667 cef3 9801     		.uleb128 0x98
 29668 cef5 18640000 		.long	0x6418
 29669 cef9 03       		.byte	0x3
 29670 cefa 1ACF0000 		.long	0xcf1a
 29671 cefe 3DCF0000 		.long	0xcf3d
 29672 cf02 35       		.uleb128 0x35
 29673 cf03 00000000 		.long	.LASF812
 29674 cf07 9CC60000 		.long	0xc69c
 29675 cf0b 6A       		.uleb128 0x6a
 29676 cf0c 00000000 		.long	.LASF826
GAS LISTING /tmp/ccJUMvuF.s 			page 822


 29677 cf10 1ACF0000 		.long	0xcf1a
 29678 cf14 68       		.uleb128 0x68
 29679 cf15 65530000 		.long	0x5365
 29680 cf19 00       		.byte	0
 29681 cf1a 9901     		.uleb128 0x99
 29682 cf1c 00000000 		.long	.LASF1661
 29683 cf20 3DCF0000 		.long	0xcf3d
 29684 cf24 A201     		.uleb128 0xa2
 29685 cf26 00000000 		.long	.LASF1672
 29686 cf2a 0B       		.byte	0xb
 29687 cf2b 0401     		.value	0x104
 29688 cf2d 42CF0000 		.long	0xcf42
 29689 cf31 A601     		.uleb128 0xa6
 29690 cf33 0B       		.byte	0xb
 29691 cf34 0401     		.value	0x104
 29692 cf36 09       		.uleb128 0x9
 29693 cf37 47CF0000 		.long	0xcf47
 29694 cf3b 00       		.byte	0
 29695 cf3c 00       		.byte	0
 29696 cf3d 11       		.uleb128 0x11
 29697 cf3e C6C60000 		.long	0xc6c6
 29698 cf42 11       		.uleb128 0x11
 29699 cf43 9CC60000 		.long	0xc69c
 29700 cf47 11       		.uleb128 0x11
 29701 cf48 C4C80000 		.long	0xc8c4
 29702 cf4c 9801     		.uleb128 0x98
 29703 cf4e 5C650000 		.long	0x655c
 29704 cf52 03       		.byte	0x3
 29705 cf53 6DCF0000 		.long	0xcf6d
 29706 cf57 92CF0000 		.long	0xcf92
 29707 cf5b 18       		.uleb128 0x18
 29708 cf5c 5F553100 		.string	"_U1"
 29709 cf60 9CC60000 		.long	0xc69c
 29710 cf64 18       		.uleb128 0x18
 29711 cf65 5F553200 		.string	"_U2"
 29712 cf69 65530000 		.long	0x5365
 29713 cf6d 9901     		.uleb128 0x99
 29714 cf6f 00000000 		.long	.LASF1661
 29715 cf73 92CF0000 		.long	0xcf92
 29716 cf77 A201     		.uleb128 0xa2
 29717 cf79 00000000 		.long	.LASF1673
 29718 cf7d 0B       		.byte	0xb
 29719 cf7e 1902     		.value	0x219
 29720 cf80 97CF0000 		.long	0xcf97
 29721 cf84 A201     		.uleb128 0xa2
 29722 cf86 00000000 		.long	.LASF1674
 29723 cf8a 0B       		.byte	0xb
 29724 cf8b 1902     		.value	0x219
 29725 cf8d 9CCF0000 		.long	0xcf9c
 29726 cf91 00       		.byte	0
 29727 cf92 11       		.uleb128 0x11
 29728 cf93 D3C60000 		.long	0xc6d3
 29729 cf97 11       		.uleb128 0x11
 29730 cf98 9CC60000 		.long	0xc69c
 29731 cf9c 11       		.uleb128 0x11
 29732 cf9d C4C80000 		.long	0xc8c4
 29733 cfa1 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 823


 29734 cfa3 43620000 		.long	0x6243
 29735 cfa7 03       		.byte	0x3
 29736 cfa8 B9CF0000 		.long	0xcfb9
 29737 cfac A001     		.uleb128 0xa0
 29738 cfae 5F5F6200 		.string	"__b"
 29739 cfb2 0B       		.byte	0xb
 29740 cfb3 A7       		.byte	0xa7
 29741 cfb4 B9CF0000 		.long	0xcfb9
 29742 cfb8 00       		.byte	0
 29743 cfb9 11       		.uleb128 0x11
 29744 cfba A2C60000 		.long	0xc6a2
 29745 cfbe 9D01     		.uleb128 0x9d
 29746 cfc0 DF620000 		.long	0x62df
 29747 cfc4 03       		.byte	0x3
 29748 cfc5 D6CF0000 		.long	0xcfd6
 29749 cfc9 A001     		.uleb128 0xa0
 29750 cfcb 5F5F7400 		.string	"__t"
 29751 cfcf 0B       		.byte	0xb
 29752 cfd0 EF       		.byte	0xef
 29753 cfd1 D6CF0000 		.long	0xcfd6
 29754 cfd5 00       		.byte	0
 29755 cfd6 11       		.uleb128 0x11
 29756 cfd7 AEC60000 		.long	0xc6ae
 29757 cfdb 9D01     		.uleb128 0x9d
 29758 cfdd 09850000 		.long	0x8509
 29759 cfe1 03       		.byte	0x3
 29760 cfe2 16D00000 		.long	0xd016
 29761 cfe6 19       		.uleb128 0x19
 29762 cfe7 5F5F6900 		.string	"__i"
 29763 cfeb 53930000 		.long	0x9353
 29764 cfef 00       		.byte	0
 29765 cff0 35       		.uleb128 0x35
 29766 cff1 00000000 		.long	.LASF813
 29767 cff5 67C50000 		.long	0xc567
 29768 cff9 6A       		.uleb128 0x6a
 29769 cffa 00000000 		.long	.LASF1089
 29770 cffe 08D00000 		.long	0xd008
 29771 d002 68       		.uleb128 0x68
 29772 d003 65530000 		.long	0x5365
 29773 d007 00       		.byte	0
 29774 d008 A101     		.uleb128 0xa1
 29775 d00a 5F5F7400 		.string	"__t"
 29776 d00e 0B       		.byte	0xb
 29777 d00f E702     		.value	0x2e7
 29778 d011 16D00000 		.long	0xd016
 29779 d015 00       		.byte	0
 29780 d016 11       		.uleb128 0x11
 29781 d017 AEC60000 		.long	0xc6ae
 29782 d01b 7F       		.uleb128 0x7f
 29783 d01c 08       		.byte	0x8
 29784 d01d E5650000 		.long	0x65e5
 29785 d021 9D01     		.uleb128 0x9d
 29786 d023 41850000 		.long	0x8541
 29787 d027 03       		.byte	0x3
 29788 d028 42D00000 		.long	0xd042
 29789 d02c 18       		.uleb128 0x18
 29790 d02d 5F547000 		.string	"_Tp"
GAS LISTING /tmp/ccJUMvuF.s 			page 824


 29791 d031 3E530000 		.long	0x533e
 29792 d035 A001     		.uleb128 0xa0
 29793 d037 5F5F7400 		.string	"__t"
 29794 d03b 12       		.byte	0x12
 29795 d03c 4C       		.byte	0x4c
 29796 d03d 42D00000 		.long	0xd042
 29797 d041 00       		.byte	0
 29798 d042 11       		.uleb128 0x11
 29799 d043 1BD00000 		.long	0xd01b
 29800 d047 9801     		.uleb128 0x98
 29801 d049 4D690000 		.long	0x694d
 29802 d04d 03       		.byte	0x3
 29803 d04e 5FD00000 		.long	0xd05f
 29804 d052 76D00000 		.long	0xd076
 29805 d056 35       		.uleb128 0x35
 29806 d057 00000000 		.long	.LASF812
 29807 d05b 3E530000 		.long	0x533e
 29808 d05f 9901     		.uleb128 0x99
 29809 d061 00000000 		.long	.LASF1661
 29810 d065 76D00000 		.long	0xd076
 29811 d069 A001     		.uleb128 0xa0
 29812 d06b 5F5F6800 		.string	"__h"
 29813 d06f 0B       		.byte	0xb
 29814 d070 5E       		.byte	0x5e
 29815 d071 7BD00000 		.long	0xd07b
 29816 d075 00       		.byte	0
 29817 d076 11       		.uleb128 0x11
 29818 d077 24C70000 		.long	0xc724
 29819 d07b 11       		.uleb128 0x11
 29820 d07c CBC80000 		.long	0xc8cb
 29821 d080 7F       		.uleb128 0x7f
 29822 d081 08       		.byte	0x8
 29823 d082 67800000 		.long	0x8067
 29824 d086 9D01     		.uleb128 0x9d
 29825 d088 5F850000 		.long	0x855f
 29826 d08c 03       		.byte	0x3
 29827 d08d A7D00000 		.long	0xd0a7
 29828 d091 18       		.uleb128 0x18
 29829 d092 5F547000 		.string	"_Tp"
 29830 d096 78C70000 		.long	0xc778
 29831 d09a A001     		.uleb128 0xa0
 29832 d09c 5F5F7400 		.string	"__t"
 29833 d0a0 12       		.byte	0x12
 29834 d0a1 4C       		.byte	0x4c
 29835 d0a2 A7D00000 		.long	0xd0a7
 29836 d0a6 00       		.byte	0
 29837 d0a7 11       		.uleb128 0x11
 29838 d0a8 80D00000 		.long	0xd080
 29839 d0ac 9801     		.uleb128 0x98
 29840 d0ae F06A0000 		.long	0x6af0
 29841 d0b2 03       		.byte	0x3
 29842 d0b3 C9D00000 		.long	0xd0c9
 29843 d0b7 E6D00000 		.long	0xd0e6
 29844 d0bb 35       		.uleb128 0x35
 29845 d0bc 00000000 		.long	.LASF812
 29846 d0c0 3E530000 		.long	0x533e
 29847 d0c4 6B       		.uleb128 0x6b
GAS LISTING /tmp/ccJUMvuF.s 			page 825


 29848 d0c5 00000000 		.long	.LASF826
 29849 d0c9 9901     		.uleb128 0x99
 29850 d0cb 00000000 		.long	.LASF1661
 29851 d0cf E6D00000 		.long	0xd0e6
 29852 d0d3 A201     		.uleb128 0xa2
 29853 d0d5 00000000 		.long	.LASF1672
 29854 d0d9 0B       		.byte	0xb
 29855 d0da 0401     		.value	0x104
 29856 d0dc EBD00000 		.long	0xd0eb
 29857 d0e0 A501     		.uleb128 0xa5
 29858 d0e2 0B       		.byte	0xb
 29859 d0e3 0401     		.value	0x104
 29860 d0e5 00       		.byte	0
 29861 d0e6 11       		.uleb128 0x11
 29862 d0e7 5AC70000 		.long	0xc75a
 29863 d0eb 11       		.uleb128 0x11
 29864 d0ec CBC80000 		.long	0xc8cb
 29865 d0f0 9801     		.uleb128 0x98
 29866 d0f2 C76B0000 		.long	0x6bc7
 29867 d0f6 03       		.byte	0x3
 29868 d0f7 08D10000 		.long	0xd108
 29869 d0fb 1FD10000 		.long	0xd11f
 29870 d0ff 35       		.uleb128 0x35
 29871 d100 00000000 		.long	.LASF812
 29872 d104 78C70000 		.long	0xc778
 29873 d108 9901     		.uleb128 0x99
 29874 d10a 00000000 		.long	.LASF1661
 29875 d10e 1FD10000 		.long	0xd11f
 29876 d112 A001     		.uleb128 0xa0
 29877 d114 5F5F6800 		.string	"__h"
 29878 d118 0B       		.byte	0xb
 29879 d119 8B       		.byte	0x8b
 29880 d11a 24D10000 		.long	0xd124
 29881 d11e 00       		.byte	0
 29882 d11f 11       		.uleb128 0x11
 29883 d120 67C70000 		.long	0xc767
 29884 d124 11       		.uleb128 0x11
 29885 d125 78C70000 		.long	0xc778
 29886 d129 9801     		.uleb128 0x98
 29887 d12b 6A6D0000 		.long	0x6d6a
 29888 d12f 03       		.byte	0x3
 29889 d130 50D10000 		.long	0xd150
 29890 d134 73D10000 		.long	0xd173
 29891 d138 35       		.uleb128 0x35
 29892 d139 00000000 		.long	.LASF812
 29893 d13d 78C70000 		.long	0xc778
 29894 d141 6A       		.uleb128 0x6a
 29895 d142 00000000 		.long	.LASF826
 29896 d146 50D10000 		.long	0xd150
 29897 d14a 68       		.uleb128 0x68
 29898 d14b 3E530000 		.long	0x533e
 29899 d14f 00       		.byte	0
 29900 d150 9901     		.uleb128 0x99
 29901 d152 00000000 		.long	.LASF1661
 29902 d156 73D10000 		.long	0xd173
 29903 d15a A201     		.uleb128 0xa2
 29904 d15c 00000000 		.long	.LASF1672
GAS LISTING /tmp/ccJUMvuF.s 			page 826


 29905 d160 0B       		.byte	0xb
 29906 d161 0401     		.value	0x104
 29907 d163 78D10000 		.long	0xd178
 29908 d167 A601     		.uleb128 0xa6
 29909 d169 0B       		.byte	0xb
 29910 d16a 0401     		.value	0x104
 29911 d16c 09       		.uleb128 0x9
 29912 d16d 7DD10000 		.long	0xd17d
 29913 d171 00       		.byte	0
 29914 d172 00       		.byte	0
 29915 d173 11       		.uleb128 0x11
 29916 d174 A2C70000 		.long	0xc7a2
 29917 d178 11       		.uleb128 0x11
 29918 d179 78C70000 		.long	0xc778
 29919 d17d 11       		.uleb128 0x11
 29920 d17e CBC80000 		.long	0xc8cb
 29921 d182 9801     		.uleb128 0x98
 29922 d184 AE6E0000 		.long	0x6eae
 29923 d188 03       		.byte	0x3
 29924 d189 A3D10000 		.long	0xd1a3
 29925 d18d C8D10000 		.long	0xd1c8
 29926 d191 18       		.uleb128 0x18
 29927 d192 5F553100 		.string	"_U1"
 29928 d196 78C70000 		.long	0xc778
 29929 d19a 18       		.uleb128 0x18
 29930 d19b 5F553200 		.string	"_U2"
 29931 d19f 3E530000 		.long	0x533e
 29932 d1a3 9901     		.uleb128 0x99
 29933 d1a5 00000000 		.long	.LASF1661
 29934 d1a9 C8D10000 		.long	0xd1c8
 29935 d1ad A201     		.uleb128 0xa2
 29936 d1af 00000000 		.long	.LASF1673
 29937 d1b3 0B       		.byte	0xb
 29938 d1b4 1902     		.value	0x219
 29939 d1b6 CDD10000 		.long	0xd1cd
 29940 d1ba A201     		.uleb128 0xa2
 29941 d1bc 00000000 		.long	.LASF1674
 29942 d1c0 0B       		.byte	0xb
 29943 d1c1 1902     		.value	0x219
 29944 d1c3 D2D10000 		.long	0xd1d2
 29945 d1c7 00       		.byte	0
 29946 d1c8 11       		.uleb128 0x11
 29947 d1c9 AFC70000 		.long	0xc7af
 29948 d1cd 11       		.uleb128 0x11
 29949 d1ce 78C70000 		.long	0xc778
 29950 d1d2 11       		.uleb128 0x11
 29951 d1d3 CBC80000 		.long	0xc8cb
 29952 d1d7 9D01     		.uleb128 0x9d
 29953 d1d9 956B0000 		.long	0x6b95
 29954 d1dd 03       		.byte	0x3
 29955 d1de EFD10000 		.long	0xd1ef
 29956 d1e2 A001     		.uleb128 0xa0
 29957 d1e4 5F5F6200 		.string	"__b"
 29958 d1e8 0B       		.byte	0xb
 29959 d1e9 A7       		.byte	0xa7
 29960 d1ea EFD10000 		.long	0xd1ef
 29961 d1ee 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 827


 29962 d1ef 11       		.uleb128 0x11
 29963 d1f0 7EC70000 		.long	0xc77e
 29964 d1f4 9D01     		.uleb128 0x9d
 29965 d1f6 316C0000 		.long	0x6c31
 29966 d1fa 03       		.byte	0x3
 29967 d1fb 0CD20000 		.long	0xd20c
 29968 d1ff A001     		.uleb128 0xa0
 29969 d201 5F5F7400 		.string	"__t"
 29970 d205 0B       		.byte	0xb
 29971 d206 EF       		.byte	0xef
 29972 d207 0CD20000 		.long	0xd20c
 29973 d20b 00       		.byte	0
 29974 d20c 11       		.uleb128 0x11
 29975 d20d 8AC70000 		.long	0xc78a
 29976 d211 9D01     		.uleb128 0x9d
 29977 d213 7D850000 		.long	0x857d
 29978 d217 03       		.byte	0x3
 29979 d218 4CD20000 		.long	0xd24c
 29980 d21c 19       		.uleb128 0x19
 29981 d21d 5F5F6900 		.string	"__i"
 29982 d221 53930000 		.long	0x9353
 29983 d225 00       		.byte	0
 29984 d226 35       		.uleb128 0x35
 29985 d227 00000000 		.long	.LASF813
 29986 d22b 5BC50000 		.long	0xc55b
 29987 d22f 6A       		.uleb128 0x6a
 29988 d230 00000000 		.long	.LASF1089
 29989 d234 3ED20000 		.long	0xd23e
 29990 d238 68       		.uleb128 0x68
 29991 d239 3E530000 		.long	0x533e
 29992 d23d 00       		.byte	0
 29993 d23e A101     		.uleb128 0xa1
 29994 d240 5F5F7400 		.string	"__t"
 29995 d244 0B       		.byte	0xb
 29996 d245 E702     		.value	0x2e7
 29997 d247 4CD20000 		.long	0xd24c
 29998 d24b 00       		.byte	0
 29999 d24c 11       		.uleb128 0x11
 30000 d24d 8AC70000 		.long	0xc78a
 30001 d251 9D01     		.uleb128 0x9d
 30002 d253 AE6B0000 		.long	0x6bae
 30003 d257 03       		.byte	0x3
 30004 d258 69D20000 		.long	0xd269
 30005 d25c A001     		.uleb128 0xa0
 30006 d25e 5F5F6200 		.string	"__b"
 30007 d262 0B       		.byte	0xb
 30008 d263 AA       		.byte	0xaa
 30009 d264 69D20000 		.long	0xd269
 30010 d268 00       		.byte	0
 30011 d269 11       		.uleb128 0x11
 30012 d26a 84C70000 		.long	0xc784
 30013 d26e 9D01     		.uleb128 0x9d
 30014 d270 4A6C0000 		.long	0x6c4a
 30015 d274 03       		.byte	0x3
 30016 d275 86D20000 		.long	0xd286
 30017 d279 A001     		.uleb128 0xa0
 30018 d27b 5F5F7400 		.string	"__t"
GAS LISTING /tmp/ccJUMvuF.s 			page 828


 30019 d27f 0B       		.byte	0xb
 30020 d280 F2       		.byte	0xf2
 30021 d281 86D20000 		.long	0xd286
 30022 d285 00       		.byte	0
 30023 d286 11       		.uleb128 0x11
 30024 d287 90C70000 		.long	0xc790
 30025 d28b 9D01     		.uleb128 0x9d
 30026 d28d B5850000 		.long	0x85b5
 30027 d291 03       		.byte	0x3
 30028 d292 C6D20000 		.long	0xd2c6
 30029 d296 19       		.uleb128 0x19
 30030 d297 5F5F6900 		.string	"__i"
 30031 d29b 53930000 		.long	0x9353
 30032 d29f 00       		.byte	0
 30033 d2a0 35       		.uleb128 0x35
 30034 d2a1 00000000 		.long	.LASF813
 30035 d2a5 5BC50000 		.long	0xc55b
 30036 d2a9 6A       		.uleb128 0x6a
 30037 d2aa 00000000 		.long	.LASF1089
 30038 d2ae B8D20000 		.long	0xd2b8
 30039 d2b2 68       		.uleb128 0x68
 30040 d2b3 3E530000 		.long	0x533e
 30041 d2b7 00       		.byte	0
 30042 d2b8 A101     		.uleb128 0xa1
 30043 d2ba 5F5F7400 		.string	"__t"
 30044 d2be 0B       		.byte	0xb
 30045 d2bf EC02     		.value	0x2ec
 30046 d2c1 C6D20000 		.long	0xd2c6
 30047 d2c5 00       		.byte	0
 30048 d2c6 11       		.uleb128 0x11
 30049 d2c7 90C70000 		.long	0xc790
 30050 d2cb 9D01     		.uleb128 0x9d
 30051 d2cd ED850000 		.long	0x85ed
 30052 d2d1 03       		.byte	0x3
 30053 d2d2 02D30000 		.long	0xd302
 30054 d2d6 19       		.uleb128 0x19
 30055 d2d7 5F5F6900 		.string	"__i"
 30056 d2db 53930000 		.long	0x9353
 30057 d2df 00       		.byte	0
 30058 d2e0 6A       		.uleb128 0x6a
 30059 d2e1 00000000 		.long	.LASF804
 30060 d2e5 F4D20000 		.long	0xd2f4
 30061 d2e9 68       		.uleb128 0x68
 30062 d2ea 5BC50000 		.long	0xc55b
 30063 d2ee 68       		.uleb128 0x68
 30064 d2ef 3E530000 		.long	0x533e
 30065 d2f3 00       		.byte	0
 30066 d2f4 A101     		.uleb128 0xa1
 30067 d2f6 5F5F7400 		.string	"__t"
 30068 d2fa 0B       		.byte	0xb
 30069 d2fb FC02     		.value	0x2fc
 30070 d2fd 02D30000 		.long	0xd302
 30071 d301 00       		.byte	0
 30072 d302 11       		.uleb128 0x11
 30073 d303 B5C70000 		.long	0xc7b5
 30074 d307 9801     		.uleb128 0x98
 30075 d309 EF4C0000 		.long	0x4cef
GAS LISTING /tmp/ccJUMvuF.s 			page 829


 30076 d30d 03       		.byte	0x3
 30077 d30e 16D30000 		.long	0xd316
 30078 d312 2ED30000 		.long	0xd32e
 30079 d316 9901     		.uleb128 0x99
 30080 d318 00000000 		.long	.LASF1661
 30081 d31c 2ED30000 		.long	0xd32e
 30082 d320 A101     		.uleb128 0xa1
 30083 d322 5F5F6E00 		.string	"__n"
 30084 d326 06       		.byte	0x6
 30085 d327 0B03     		.value	0x30b
 30086 d329 7E480000 		.long	0x487e
 30087 d32d 00       		.byte	0
 30088 d32e 11       		.uleb128 0x11
 30089 d32f 29C30000 		.long	0xc329
 30090 d333 9D01     		.uleb128 0x9d
 30091 d335 5C620000 		.long	0x625c
 30092 d339 03       		.byte	0x3
 30093 d33a 4BD30000 		.long	0xd34b
 30094 d33e A001     		.uleb128 0xa0
 30095 d340 5F5F6200 		.string	"__b"
 30096 d344 0B       		.byte	0xb
 30097 d345 AA       		.byte	0xaa
 30098 d346 4BD30000 		.long	0xd34b
 30099 d34a 00       		.byte	0
 30100 d34b 11       		.uleb128 0x11
 30101 d34c A8C60000 		.long	0xc6a8
 30102 d350 9D01     		.uleb128 0x9d
 30103 d352 F8620000 		.long	0x62f8
 30104 d356 03       		.byte	0x3
 30105 d357 68D30000 		.long	0xd368
 30106 d35b A001     		.uleb128 0xa0
 30107 d35d 5F5F7400 		.string	"__t"
 30108 d361 0B       		.byte	0xb
 30109 d362 F2       		.byte	0xf2
 30110 d363 68D30000 		.long	0xd368
 30111 d367 00       		.byte	0
 30112 d368 11       		.uleb128 0x11
 30113 d369 B4C60000 		.long	0xc6b4
 30114 d36d 9D01     		.uleb128 0x9d
 30115 d36f 21860000 		.long	0x8621
 30116 d373 03       		.byte	0x3
 30117 d374 A8D30000 		.long	0xd3a8
 30118 d378 19       		.uleb128 0x19
 30119 d379 5F5F6900 		.string	"__i"
 30120 d37d 53930000 		.long	0x9353
 30121 d381 00       		.byte	0
 30122 d382 35       		.uleb128 0x35
 30123 d383 00000000 		.long	.LASF813
 30124 d387 67C50000 		.long	0xc567
 30125 d38b 6A       		.uleb128 0x6a
 30126 d38c 00000000 		.long	.LASF1089
 30127 d390 9AD30000 		.long	0xd39a
 30128 d394 68       		.uleb128 0x68
 30129 d395 65530000 		.long	0x5365
 30130 d399 00       		.byte	0
 30131 d39a A101     		.uleb128 0xa1
 30132 d39c 5F5F7400 		.string	"__t"
GAS LISTING /tmp/ccJUMvuF.s 			page 830


 30133 d3a0 0B       		.byte	0xb
 30134 d3a1 EC02     		.value	0x2ec
 30135 d3a3 A8D30000 		.long	0xd3a8
 30136 d3a7 00       		.byte	0
 30137 d3a8 11       		.uleb128 0x11
 30138 d3a9 B4C60000 		.long	0xc6b4
 30139 d3ad 9D01     		.uleb128 0x9d
 30140 d3af 59860000 		.long	0x8659
 30141 d3b3 03       		.byte	0x3
 30142 d3b4 E4D30000 		.long	0xd3e4
 30143 d3b8 19       		.uleb128 0x19
 30144 d3b9 5F5F6900 		.string	"__i"
 30145 d3bd 53930000 		.long	0x9353
 30146 d3c1 00       		.byte	0
 30147 d3c2 6A       		.uleb128 0x6a
 30148 d3c3 00000000 		.long	.LASF804
 30149 d3c7 D6D30000 		.long	0xd3d6
 30150 d3cb 68       		.uleb128 0x68
 30151 d3cc 67C50000 		.long	0xc567
 30152 d3d0 68       		.uleb128 0x68
 30153 d3d1 65530000 		.long	0x5365
 30154 d3d5 00       		.byte	0
 30155 d3d6 A101     		.uleb128 0xa1
 30156 d3d8 5F5F7400 		.string	"__t"
 30157 d3dc 0B       		.byte	0xb
 30158 d3dd FC02     		.value	0x2fc
 30159 d3df E4D30000 		.long	0xd3e4
 30160 d3e3 00       		.byte	0
 30161 d3e4 11       		.uleb128 0x11
 30162 d3e5 D9C60000 		.long	0xc6d9
 30163 d3e9 9801     		.uleb128 0x98
 30164 d3eb F4790000 		.long	0x79f4
 30165 d3ef 03       		.byte	0x3
 30166 d3f0 F8D30000 		.long	0xd3f8
 30167 d3f4 10D40000 		.long	0xd410
 30168 d3f8 9901     		.uleb128 0x99
 30169 d3fa 00000000 		.long	.LASF1661
 30170 d3fe 10D40000 		.long	0xd410
 30171 d402 A101     		.uleb128 0xa1
 30172 d404 5F5F6E00 		.string	"__n"
 30173 d408 06       		.byte	0x6
 30174 d409 0B03     		.value	0x30b
 30175 d40b 83750000 		.long	0x7583
 30176 d40f 00       		.byte	0
 30177 d410 11       		.uleb128 0x11
 30178 d411 86C80000 		.long	0xc886
 30179 d415 9801     		.uleb128 0x98
 30180 d417 899F0000 		.long	0x9f89
 30181 d41b 03       		.byte	0x3
 30182 d41c 24D40000 		.long	0xd424
 30183 d420 3CD40000 		.long	0xd43c
 30184 d424 9901     		.uleb128 0x99
 30185 d426 00000000 		.long	.LASF1661
 30186 d42a 3CD40000 		.long	0xd43c
 30187 d42e A101     		.uleb128 0xa1
 30188 d430 5F5F6900 		.string	"__i"
 30189 d434 0C       		.byte	0xc
GAS LISTING /tmp/ccJUMvuF.s 			page 831


 30190 d435 D802     		.value	0x2d8
 30191 d437 41D40000 		.long	0xd441
 30192 d43b 00       		.byte	0
 30193 d43c 11       		.uleb128 0x11
 30194 d43d 5BC30000 		.long	0xc35b
 30195 d441 11       		.uleb128 0x11
 30196 d442 61C30000 		.long	0xc361
 30197 d446 9801     		.uleb128 0x98
 30198 d448 02A00000 		.long	0xa002
 30199 d44c 03       		.byte	0x3
 30200 d44d 55D40000 		.long	0xd455
 30201 d451 65D40000 		.long	0xd465
 30202 d455 9901     		.uleb128 0x99
 30203 d457 00000000 		.long	.LASF1661
 30204 d45b 3CD40000 		.long	0xd43c
 30205 d45f 09       		.uleb128 0x9
 30206 d460 28930000 		.long	0x9328
 30207 d464 00       		.byte	0
 30208 d465 9801     		.uleb128 0x98
 30209 d467 039D0000 		.long	0x9d03
 30210 d46b 03       		.byte	0x3
 30211 d46c 74D40000 		.long	0xd474
 30212 d470 7FD40000 		.long	0xd47f
 30213 d474 9901     		.uleb128 0x99
 30214 d476 00000000 		.long	.LASF1661
 30215 d47a 7FD40000 		.long	0xd47f
 30216 d47e 00       		.byte	0
 30217 d47f 11       		.uleb128 0x11
 30218 d480 E6C10000 		.long	0xc1e6
 30219 d484 9801     		.uleb128 0x98
 30220 d486 329D0000 		.long	0x9d32
 30221 d48a 03       		.byte	0x3
 30222 d48b 93D40000 		.long	0xd493
 30223 d48f A8D40000 		.long	0xd4a8
 30224 d493 9901     		.uleb128 0x99
 30225 d495 00000000 		.long	.LASF1661
 30226 d499 7FD40000 		.long	0xd47f
 30227 d49d 9901     		.uleb128 0x99
 30228 d49f 00000000 		.long	.LASF1675
 30229 d4a3 C9AE0000 		.long	0xaec9
 30230 d4a7 00       		.byte	0
 30231 d4a8 9801     		.uleb128 0x98
 30232 d4aa 3D310000 		.long	0x313d
 30233 d4ae 03       		.byte	0x3
 30234 d4af B7D40000 		.long	0xd4b7
 30235 d4b3 CCD40000 		.long	0xd4cc
 30236 d4b7 9901     		.uleb128 0x99
 30237 d4b9 00000000 		.long	.LASF1661
 30238 d4bd CCD40000 		.long	0xd4cc
 30239 d4c1 9901     		.uleb128 0x99
 30240 d4c3 00000000 		.long	.LASF1675
 30241 d4c7 C9AE0000 		.long	0xaec9
 30242 d4cb 00       		.byte	0
 30243 d4cc 11       		.uleb128 0x11
 30244 d4cd F8C10000 		.long	0xc1f8
 30245 d4d1 9801     		.uleb128 0x98
 30246 d4d3 1DA10000 		.long	0xa11d
GAS LISTING /tmp/ccJUMvuF.s 			page 832


 30247 d4d7 03       		.byte	0x3
 30248 d4d8 E0D40000 		.long	0xd4e0
 30249 d4dc EBD40000 		.long	0xd4eb
 30250 d4e0 9901     		.uleb128 0x99
 30251 d4e2 00000000 		.long	.LASF1661
 30252 d4e6 EBD40000 		.long	0xd4eb
 30253 d4ea 00       		.byte	0
 30254 d4eb 11       		.uleb128 0x11
 30255 d4ec 6CC30000 		.long	0xc36c
 30256 d4f0 9801     		.uleb128 0x98
 30257 d4f2 A59F0000 		.long	0x9fa5
 30258 d4f6 03       		.byte	0x3
 30259 d4f7 FFD40000 		.long	0xd4ff
 30260 d4fb 0AD50000 		.long	0xd50a
 30261 d4ff 9901     		.uleb128 0x99
 30262 d501 00000000 		.long	.LASF1661
 30263 d505 EBD40000 		.long	0xd4eb
 30264 d509 00       		.byte	0
 30265 d50a 9801     		.uleb128 0x98
 30266 d50c 4C3A0000 		.long	0x3a4c
 30267 d510 03       		.byte	0x3
 30268 d511 19D50000 		.long	0xd519
 30269 d515 24D50000 		.long	0xd524
 30270 d519 9901     		.uleb128 0x99
 30271 d51b 00000000 		.long	.LASF1661
 30272 d51f 56CD0000 		.long	0xcd56
 30273 d523 00       		.byte	0
 30274 d524 7F       		.uleb128 0x7f
 30275 d525 08       		.byte	0x8
 30276 d526 E8A70000 		.long	0xa7e8
 30277 d52a 9D01     		.uleb128 0x9d
 30278 d52c 2BAB0000 		.long	0xab2b
 30279 d530 03       		.byte	0x3
 30280 d531 62D50000 		.long	0xd562
 30281 d535 35       		.uleb128 0x35
 30282 d536 00000000 		.long	.LASF745
 30283 d53a C9C10000 		.long	0xc1c9
 30284 d53e 35       		.uleb128 0x35
 30285 d53f 00000000 		.long	.LASF1248
 30286 d543 76370000 		.long	0x3776
 30287 d547 A201     		.uleb128 0xa2
 30288 d549 00000000 		.long	.LASF1676
 30289 d54d 0C       		.byte	0xc
 30290 d54e 3D03     		.value	0x33d
 30291 d550 62D50000 		.long	0xd562
 30292 d554 A201     		.uleb128 0xa2
 30293 d556 00000000 		.long	.LASF1677
 30294 d55a 0C       		.byte	0xc
 30295 d55b 3E03     		.value	0x33e
 30296 d55d 67D50000 		.long	0xd567
 30297 d561 00       		.byte	0
 30298 d562 11       		.uleb128 0x11
 30299 d563 24D50000 		.long	0xd524
 30300 d567 11       		.uleb128 0x11
 30301 d568 24D50000 		.long	0xd524
 30302 d56c 9801     		.uleb128 0x98
 30303 d56e A8A10000 		.long	0xa1a8
GAS LISTING /tmp/ccJUMvuF.s 			page 833


 30304 d572 03       		.byte	0x3
 30305 d573 7BD50000 		.long	0xd57b
 30306 d577 93D50000 		.long	0xd593
 30307 d57b 9901     		.uleb128 0x99
 30308 d57d 00000000 		.long	.LASF1661
 30309 d581 93D50000 		.long	0xd593
 30310 d585 A101     		.uleb128 0xa1
 30311 d587 5F5F6900 		.string	"__i"
 30312 d58b 0C       		.byte	0xc
 30313 d58c D802     		.value	0x2d8
 30314 d58e 98D50000 		.long	0xd598
 30315 d592 00       		.byte	0
 30316 d593 11       		.uleb128 0x11
 30317 d594 71C40000 		.long	0xc471
 30318 d598 11       		.uleb128 0x11
 30319 d599 77C40000 		.long	0xc477
 30320 d59d 9801     		.uleb128 0x98
 30321 d59f 6B3A0000 		.long	0x3a6b
 30322 d5a3 03       		.byte	0x3
 30323 d5a4 ACD50000 		.long	0xd5ac
 30324 d5a8 B7D50000 		.long	0xd5b7
 30325 d5ac 9901     		.uleb128 0x99
 30326 d5ae 00000000 		.long	.LASF1661
 30327 d5b2 2ACD0000 		.long	0xcd2a
 30328 d5b6 00       		.byte	0
 30329 d5b7 9801     		.uleb128 0x98
 30330 d5b9 3CA30000 		.long	0xa33c
 30331 d5bd 03       		.byte	0x3
 30332 d5be C6D50000 		.long	0xd5c6
 30333 d5c2 D1D50000 		.long	0xd5d1
 30334 d5c6 9901     		.uleb128 0x99
 30335 d5c8 00000000 		.long	.LASF1661
 30336 d5cc D1D50000 		.long	0xd5d1
 30337 d5d0 00       		.byte	0
 30338 d5d1 11       		.uleb128 0x11
 30339 d5d2 82C40000 		.long	0xc482
 30340 d5d6 7F       		.uleb128 0x7f
 30341 d5d7 08       		.byte	0x8
 30342 d5d8 1EA80000 		.long	0xa81e
 30343 d5dc 9D01     		.uleb128 0x9d
 30344 d5de 58AB0000 		.long	0xab58
 30345 d5e2 03       		.byte	0x3
 30346 d5e3 1DD60000 		.long	0xd61d
 30347 d5e7 35       		.uleb128 0x35
 30348 d5e8 00000000 		.long	.LASF1381
 30349 d5ec C9C10000 		.long	0xc1c9
 30350 d5f0 35       		.uleb128 0x35
 30351 d5f1 00000000 		.long	.LASF1382
 30352 d5f5 CFC10000 		.long	0xc1cf
 30353 d5f9 35       		.uleb128 0x35
 30354 d5fa 00000000 		.long	.LASF1248
 30355 d5fe 76370000 		.long	0x3776
 30356 d602 A201     		.uleb128 0xa2
 30357 d604 00000000 		.long	.LASF1676
 30358 d608 0C       		.byte	0xc
 30359 d609 3603     		.value	0x336
 30360 d60b 1DD60000 		.long	0xd61d
GAS LISTING /tmp/ccJUMvuF.s 			page 834


 30361 d60f A201     		.uleb128 0xa2
 30362 d611 00000000 		.long	.LASF1677
 30363 d615 0C       		.byte	0xc
 30364 d616 3703     		.value	0x337
 30365 d618 22D60000 		.long	0xd622
 30366 d61c 00       		.byte	0
 30367 d61d 11       		.uleb128 0x11
 30368 d61e 24D50000 		.long	0xd524
 30369 d622 11       		.uleb128 0x11
 30370 d623 D6D50000 		.long	0xd5d6
 30371 d627 9801     		.uleb128 0x98
 30372 d629 E39F0000 		.long	0x9fe3
 30373 d62d 03       		.byte	0x3
 30374 d62e 36D60000 		.long	0xd636
 30375 d632 41D60000 		.long	0xd641
 30376 d636 9901     		.uleb128 0x99
 30377 d638 00000000 		.long	.LASF1661
 30378 d63c 3CD40000 		.long	0xd43c
 30379 d640 00       		.byte	0
 30380 d641 9801     		.uleb128 0x98
 30381 d643 B1A30000 		.long	0xa3b1
 30382 d647 03       		.byte	0x3
 30383 d648 50D60000 		.long	0xd650
 30384 d64c 5BD60000 		.long	0xd65b
 30385 d650 9901     		.uleb128 0x99
 30386 d652 00000000 		.long	.LASF1661
 30387 d656 5BD60000 		.long	0xd65b
 30388 d65a 00       		.byte	0
 30389 d65b 11       		.uleb128 0x11
 30390 d65c B5C20000 		.long	0xc2b5
 30391 d660 9801     		.uleb128 0x98
 30392 d662 E0A30000 		.long	0xa3e0
 30393 d666 03       		.byte	0x3
 30394 d667 6FD60000 		.long	0xd66f
 30395 d66b 84D60000 		.long	0xd684
 30396 d66f 9901     		.uleb128 0x99
 30397 d671 00000000 		.long	.LASF1661
 30398 d675 5BD60000 		.long	0xd65b
 30399 d679 9901     		.uleb128 0x99
 30400 d67b 00000000 		.long	.LASF1675
 30401 d67f C9AE0000 		.long	0xaec9
 30402 d683 00       		.byte	0
 30403 d684 9801     		.uleb128 0x98
 30404 d686 8D420000 		.long	0x428d
 30405 d68a 03       		.byte	0x3
 30406 d68b 93D60000 		.long	0xd693
 30407 d68f A8D60000 		.long	0xd6a8
 30408 d693 9901     		.uleb128 0x99
 30409 d695 00000000 		.long	.LASF1661
 30410 d699 A8D60000 		.long	0xd6a8
 30411 d69d 9901     		.uleb128 0x99
 30412 d69f 00000000 		.long	.LASF1675
 30413 d6a3 C9AE0000 		.long	0xaec9
 30414 d6a7 00       		.byte	0
 30415 d6a8 11       		.uleb128 0x11
 30416 d6a9 C7C20000 		.long	0xc2c7
 30417 d6ad 9801     		.uleb128 0x98
GAS LISTING /tmp/ccJUMvuF.s 			page 835


 30418 d6af 18950000 		.long	0x9518
 30419 d6b3 03       		.byte	0x3
 30420 d6b4 BCD60000 		.long	0xd6bc
 30421 d6b8 C7D60000 		.long	0xd6c7
 30422 d6bc 9901     		.uleb128 0x99
 30423 d6be 00000000 		.long	.LASF1661
 30424 d6c2 C7D60000 		.long	0xd6c7
 30425 d6c6 00       		.byte	0
 30426 d6c7 11       		.uleb128 0x11
 30427 d6c8 DDB70000 		.long	0xb7dd
 30428 d6cc 9801     		.uleb128 0x98
 30429 d6ce A1070000 		.long	0x7a1
 30430 d6d2 03       		.byte	0x3
 30431 d6d3 DBD60000 		.long	0xd6db
 30432 d6d7 E6D60000 		.long	0xd6e6
 30433 d6db 9901     		.uleb128 0x99
 30434 d6dd 00000000 		.long	.LASF1661
 30435 d6e1 E6D60000 		.long	0xd6e6
 30436 d6e5 00       		.byte	0
 30437 d6e6 11       		.uleb128 0x11
 30438 d6e7 EFB70000 		.long	0xb7ef
 30439 d6eb 9801     		.uleb128 0x98
 30440 d6ed 49950000 		.long	0x9549
 30441 d6f1 03       		.byte	0x3
 30442 d6f2 FAD60000 		.long	0xd6fa
 30443 d6f6 0FD70000 		.long	0xd70f
 30444 d6fa 9901     		.uleb128 0x99
 30445 d6fc 00000000 		.long	.LASF1661
 30446 d700 C7D60000 		.long	0xd6c7
 30447 d704 9901     		.uleb128 0x99
 30448 d706 00000000 		.long	.LASF1675
 30449 d70a C9AE0000 		.long	0xaec9
 30450 d70e 00       		.byte	0
 30451 d70f 9801     		.uleb128 0x98
 30452 d711 D2070000 		.long	0x7d2
 30453 d715 03       		.byte	0x3
 30454 d716 1ED70000 		.long	0xd71e
 30455 d71a 33D70000 		.long	0xd733
 30456 d71e 9901     		.uleb128 0x99
 30457 d720 00000000 		.long	.LASF1661
 30458 d724 E6D60000 		.long	0xd6e6
 30459 d728 9901     		.uleb128 0x99
 30460 d72a 00000000 		.long	.LASF1675
 30461 d72e C9AE0000 		.long	0xaec9
 30462 d732 00       		.byte	0
 30463 d733 9801     		.uleb128 0x98
 30464 d735 C8530000 		.long	0x53c8
 30465 d739 03       		.byte	0x3
 30466 d73a 42D70000 		.long	0xd742
 30467 d73e 67D70000 		.long	0xd767
 30468 d742 9901     		.uleb128 0x99
 30469 d744 00000000 		.long	.LASF1661
 30470 d748 67D70000 		.long	0xd767
 30471 d74c A101     		.uleb128 0xa1
 30472 d74e 5F5F6100 		.string	"__a"
 30473 d752 04       		.byte	0x4
 30474 d753 9206     		.value	0x692
GAS LISTING /tmp/ccJUMvuF.s 			page 836


 30475 d755 28930000 		.long	0x9328
 30476 d759 A101     		.uleb128 0xa1
 30477 d75b 5F5F6200 		.string	"__b"
 30478 d75f 04       		.byte	0x4
 30479 d760 9306     		.value	0x693
 30480 d762 28930000 		.long	0x9328
 30481 d766 00       		.byte	0
 30482 d767 11       		.uleb128 0x11
 30483 d768 79C50000 		.long	0xc579
 30484 d76c 9801     		.uleb128 0x98
 30485 d76e 1DA60000 		.long	0xa61d
 30486 d772 03       		.byte	0x3
 30487 d773 7BD70000 		.long	0xd77b
 30488 d777 93D70000 		.long	0xd793
 30489 d77b 9901     		.uleb128 0x99
 30490 d77d 00000000 		.long	.LASF1661
 30491 d781 93D70000 		.long	0xd793
 30492 d785 A101     		.uleb128 0xa1
 30493 d787 5F5F6900 		.string	"__i"
 30494 d78b 0C       		.byte	0xc
 30495 d78c D802     		.value	0x2d8
 30496 d78e 98D70000 		.long	0xd798
 30497 d792 00       		.byte	0
 30498 d793 11       		.uleb128 0x11
 30499 d794 97C50000 		.long	0xc597
 30500 d798 11       		.uleb128 0x11
 30501 d799 9DC50000 		.long	0xc59d
 30502 d79d 7F       		.uleb128 0x7f
 30503 d79e 08       		.byte	0x8
 30504 d79f 5A560000 		.long	0x565a
 30505 d7a3 9D01     		.uleb128 0x9d
 30506 d7a5 8D860000 		.long	0x868d
 30507 d7a9 03       		.byte	0x3
 30508 d7aa C4D70000 		.long	0xd7c4
 30509 d7ae 18       		.uleb128 0x18
 30510 d7af 5F547000 		.string	"_Tp"
 30511 d7b3 D9C50000 		.long	0xc5d9
 30512 d7b7 A001     		.uleb128 0xa0
 30513 d7b9 5F5F7400 		.string	"__t"
 30514 d7bd 12       		.byte	0x12
 30515 d7be 4C       		.byte	0x4c
 30516 d7bf C4D70000 		.long	0xd7c4
 30517 d7c3 00       		.byte	0
 30518 d7c4 11       		.uleb128 0x11
 30519 d7c5 9DD70000 		.long	0xd79d
 30520 d7c9 9801     		.uleb128 0x98
 30521 d7cb 57580000 		.long	0x5857
 30522 d7cf 03       		.byte	0x3
 30523 d7d0 D8D70000 		.long	0xd7d8
 30524 d7d4 E3D70000 		.long	0xd7e3
 30525 d7d8 9901     		.uleb128 0x99
 30526 d7da 00000000 		.long	.LASF1661
 30527 d7de E3D70000 		.long	0xd7e3
 30528 d7e2 00       		.byte	0
 30529 d7e3 11       		.uleb128 0x11
 30530 d7e4 C1C50000 		.long	0xc5c1
 30531 d7e8 9801     		.uleb128 0x98
GAS LISTING /tmp/ccJUMvuF.s 			page 837


 30532 d7ea 2F590000 		.long	0x592f
 30533 d7ee 03       		.byte	0x3
 30534 d7ef 00D80000 		.long	0xd800
 30535 d7f3 17D80000 		.long	0xd817
 30536 d7f7 35       		.uleb128 0x35
 30537 d7f8 00000000 		.long	.LASF812
 30538 d7fc D9C50000 		.long	0xc5d9
 30539 d800 9901     		.uleb128 0x99
 30540 d802 00000000 		.long	.LASF1661
 30541 d806 17D80000 		.long	0xd817
 30542 d80a A001     		.uleb128 0xa0
 30543 d80c 5F5F6800 		.string	"__h"
 30544 d810 0B       		.byte	0xb
 30545 d811 8B       		.byte	0x8b
 30546 d812 1CD80000 		.long	0xd81c
 30547 d816 00       		.byte	0
 30548 d817 11       		.uleb128 0x11
 30549 d818 CDC50000 		.long	0xc5cd
 30550 d81c 11       		.uleb128 0x11
 30551 d81d D9C50000 		.long	0xc5d9
 30552 d821 9801     		.uleb128 0x98
 30553 d823 D35A0000 		.long	0x5ad3
 30554 d827 03       		.byte	0x3
 30555 d828 3ED80000 		.long	0xd83e
 30556 d82c 5BD80000 		.long	0xd85b
 30557 d830 35       		.uleb128 0x35
 30558 d831 00000000 		.long	.LASF812
 30559 d835 D9C50000 		.long	0xc5d9
 30560 d839 6B       		.uleb128 0x6b
 30561 d83a 00000000 		.long	.LASF826
 30562 d83e 9901     		.uleb128 0x99
 30563 d840 00000000 		.long	.LASF1661
 30564 d844 5BD80000 		.long	0xd85b
 30565 d848 A201     		.uleb128 0xa2
 30566 d84a 00000000 		.long	.LASF1672
 30567 d84e 0B       		.byte	0xb
 30568 d84f 0401     		.value	0x104
 30569 d851 60D80000 		.long	0xd860
 30570 d855 A501     		.uleb128 0xa5
 30571 d857 0B       		.byte	0xb
 30572 d858 0401     		.value	0x104
 30573 d85a 00       		.byte	0
 30574 d85b 11       		.uleb128 0x11
 30575 d85c 03C60000 		.long	0xc603
 30576 d860 11       		.uleb128 0x11
 30577 d861 D9C50000 		.long	0xc5d9
 30578 d865 7E       		.uleb128 0x7e
 30579 d866 08       		.byte	0x8
 30580 d867 0E580000 		.long	0x580e
 30581 d86b A401     		.uleb128 0xa4
 30582 d86d 20580000 		.long	0x5820
 30583 d871 0A       		.byte	0xa
 30584 d872 B8       		.byte	0xb8
 30585 d873 03       		.byte	0x3
 30586 d874 7CD80000 		.long	0xd87c
 30587 d878 87D80000 		.long	0xd887
 30588 d87c 9901     		.uleb128 0x99
GAS LISTING /tmp/ccJUMvuF.s 			page 838


 30589 d87e 00000000 		.long	.LASF1661
 30590 d882 87D80000 		.long	0xd887
 30591 d886 00       		.byte	0
 30592 d887 11       		.uleb128 0x11
 30593 d888 65D80000 		.long	0xd865
 30594 d88c 9801     		.uleb128 0x98
 30595 d88e FF5B0000 		.long	0x5bff
 30596 d892 03       		.byte	0x3
 30597 d893 AAD80000 		.long	0xd8aa
 30598 d897 C0D80000 		.long	0xd8c0
 30599 d89b 6A       		.uleb128 0x6a
 30600 d89c 00000000 		.long	.LASF834
 30601 d8a0 AAD80000 		.long	0xd8aa
 30602 d8a4 68       		.uleb128 0x68
 30603 d8a5 D9C50000 		.long	0xc5d9
 30604 d8a9 00       		.byte	0
 30605 d8aa 9901     		.uleb128 0x99
 30606 d8ac 00000000 		.long	.LASF1661
 30607 d8b0 C0D80000 		.long	0xd8c0
 30608 d8b4 A601     		.uleb128 0xa6
 30609 d8b6 0B       		.byte	0xb
 30610 d8b7 9401     		.value	0x194
 30611 d8b9 09       		.uleb128 0x9
 30612 d8ba C5D80000 		.long	0xd8c5
 30613 d8be 00       		.byte	0
 30614 d8bf 00       		.byte	0
 30615 d8c0 11       		.uleb128 0x11
 30616 d8c1 10C60000 		.long	0xc610
 30617 d8c5 11       		.uleb128 0x11
 30618 d8c6 D9C50000 		.long	0xc5d9
 30619 d8ca 7F       		.uleb128 0x7f
 30620 d8cb 08       		.byte	0x8
 30621 d8cc 91530000 		.long	0x5391
 30622 d8d0 7F       		.uleb128 0x7f
 30623 d8d1 08       		.byte	0x8
 30624 d8d2 F5550000 		.long	0x55f5
 30625 d8d6 9D01     		.uleb128 0x9d
 30626 d8d8 AB860000 		.long	0x86ab
 30627 d8dc 03       		.byte	0x3
 30628 d8dd F7D80000 		.long	0xd8f7
 30629 d8e1 18       		.uleb128 0x18
 30630 d8e2 5F547000 		.string	"_Tp"
 30631 d8e6 CAD80000 		.long	0xd8ca
 30632 d8ea A001     		.uleb128 0xa0
 30633 d8ec 5F5F7400 		.string	"__t"
 30634 d8f0 12       		.byte	0x12
 30635 d8f1 4C       		.byte	0x4c
 30636 d8f2 F7D80000 		.long	0xd8f7
 30637 d8f6 00       		.byte	0
 30638 d8f7 11       		.uleb128 0x11
 30639 d8f8 D0D80000 		.long	0xd8d0
 30640 d8fc 9D01     		.uleb128 0x9d
 30641 d8fe 0F560000 		.long	0x560f
 30642 d902 03       		.byte	0x3
 30643 d903 15D90000 		.long	0xd915
 30644 d907 A101     		.uleb128 0xa1
 30645 d909 5F5F7800 		.string	"__x"
GAS LISTING /tmp/ccJUMvuF.s 			page 839


 30646 d90d 0A       		.byte	0xa
 30647 d90e AC04     		.value	0x4ac
 30648 d910 15D90000 		.long	0xd915
 30649 d914 00       		.byte	0
 30650 d915 11       		.uleb128 0x11
 30651 d916 B4C50000 		.long	0xc5b4
 30652 d91a 9801     		.uleb128 0x98
 30653 d91c 05570000 		.long	0x5705
 30654 d920 03       		.byte	0x3
 30655 d921 38D90000 		.long	0xd938
 30656 d925 5BD90000 		.long	0xd95b
 30657 d929 6A       		.uleb128 0x6a
 30658 d92a 00000000 		.long	.LASF788
 30659 d92e 38D90000 		.long	0xd938
 30660 d932 68       		.uleb128 0x68
 30661 d933 D9C50000 		.long	0xc5d9
 30662 d937 00       		.byte	0
 30663 d938 9901     		.uleb128 0x99
 30664 d93a 00000000 		.long	.LASF1661
 30665 d93e 5BD90000 		.long	0xd95b
 30666 d942 A101     		.uleb128 0xa1
 30667 d944 5F5F6600 		.string	"__f"
 30668 d948 0A       		.byte	0xa
 30669 d949 1205     		.value	0x512
 30670 d94b 60D90000 		.long	0xd960
 30671 d94f A601     		.uleb128 0xa6
 30672 d951 0A       		.byte	0xa
 30673 d952 1205     		.value	0x512
 30674 d954 09       		.uleb128 0x9
 30675 d955 65D90000 		.long	0xd965
 30676 d959 00       		.byte	0
 30677 d95a 00       		.byte	0
 30678 d95b 11       		.uleb128 0x11
 30679 d95c 29C60000 		.long	0xc629
 30680 d960 11       		.uleb128 0x11
 30681 d961 B4C50000 		.long	0xc5b4
 30682 d965 11       		.uleb128 0x11
 30683 d966 D9C50000 		.long	0xc5d9
 30684 d96a 9D01     		.uleb128 0x9d
 30685 d96c C95F0000 		.long	0x5fc9
 30686 d970 03       		.byte	0x3
 30687 d971 82D90000 		.long	0xd982
 30688 d975 A001     		.uleb128 0xa0
 30689 d977 5F5F6200 		.string	"__b"
 30690 d97b 0B       		.byte	0xb
 30691 d97c 79       		.byte	0x79
 30692 d97d 82D90000 		.long	0xd982
 30693 d981 00       		.byte	0
 30694 d982 11       		.uleb128 0x11
 30695 d983 5AC60000 		.long	0xc65a
 30696 d987 9D01     		.uleb128 0x9d
 30697 d989 6A600000 		.long	0x606a
 30698 d98d 03       		.byte	0x3
 30699 d98e 9FD90000 		.long	0xd99f
 30700 d992 A001     		.uleb128 0xa0
 30701 d994 5F5F7400 		.string	"__t"
 30702 d998 0B       		.byte	0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 840


 30703 d999 EF       		.byte	0xef
 30704 d99a 9FD90000 		.long	0xd99f
 30705 d99e 00       		.byte	0
 30706 d99f 11       		.uleb128 0x11
 30707 d9a0 66C60000 		.long	0xc666
 30708 d9a4 9D01     		.uleb128 0x9d
 30709 d9a6 C9860000 		.long	0x86c9
 30710 d9aa 03       		.byte	0x3
 30711 d9ab D5D90000 		.long	0xd9d5
 30712 d9af 19       		.uleb128 0x19
 30713 d9b0 5F5F6900 		.string	"__i"
 30714 d9b4 53930000 		.long	0x9353
 30715 d9b8 01       		.byte	0x1
 30716 d9b9 35       		.uleb128 0x35
 30717 d9ba 00000000 		.long	.LASF813
 30718 d9be 65530000 		.long	0x5365
 30719 d9c2 6B       		.uleb128 0x6b
 30720 d9c3 00000000 		.long	.LASF1089
 30721 d9c7 A101     		.uleb128 0xa1
 30722 d9c9 5F5F7400 		.string	"__t"
 30723 d9cd 0B       		.byte	0xb
 30724 d9ce E702     		.value	0x2e7
 30725 d9d0 D5D90000 		.long	0xd9d5
 30726 d9d4 00       		.byte	0
 30727 d9d5 11       		.uleb128 0x11
 30728 d9d6 66C60000 		.long	0xc666
 30729 d9da 9D01     		.uleb128 0x9d
 30730 d9dc F7860000 		.long	0x86f7
 30731 d9e0 03       		.byte	0x3
 30732 d9e1 11DA0000 		.long	0xda11
 30733 d9e5 19       		.uleb128 0x19
 30734 d9e6 5F5F6900 		.string	"__i"
 30735 d9ea 53930000 		.long	0x9353
 30736 d9ee 01       		.byte	0x1
 30737 d9ef 6A       		.uleb128 0x6a
 30738 d9f0 00000000 		.long	.LASF804
 30739 d9f4 03DA0000 		.long	0xda03
 30740 d9f8 68       		.uleb128 0x68
 30741 d9f9 67C50000 		.long	0xc567
 30742 d9fd 68       		.uleb128 0x68
 30743 d9fe 65530000 		.long	0x5365
 30744 da02 00       		.byte	0
 30745 da03 A101     		.uleb128 0xa1
 30746 da05 5F5F7400 		.string	"__t"
 30747 da09 0B       		.byte	0xb
 30748 da0a F402     		.value	0x2f4
 30749 da0c 11DA0000 		.long	0xda11
 30750 da10 00       		.byte	0
 30751 da11 11       		.uleb128 0x11
 30752 da12 E6C60000 		.long	0xc6e6
 30753 da16 9D01     		.uleb128 0x9d
 30754 da18 2B870000 		.long	0x872b
 30755 da1c 03       		.byte	0x3
 30756 da1d 4DDA0000 		.long	0xda4d
 30757 da21 19       		.uleb128 0x19
 30758 da22 5F5F6900 		.string	"__i"
 30759 da26 53930000 		.long	0x9353
GAS LISTING /tmp/ccJUMvuF.s 			page 841


 30760 da2a 00       		.byte	0
 30761 da2b 6A       		.uleb128 0x6a
 30762 da2c 00000000 		.long	.LASF804
 30763 da30 3FDA0000 		.long	0xda3f
 30764 da34 68       		.uleb128 0x68
 30765 da35 67C50000 		.long	0xc567
 30766 da39 68       		.uleb128 0x68
 30767 da3a 65530000 		.long	0x5365
 30768 da3e 00       		.byte	0
 30769 da3f A101     		.uleb128 0xa1
 30770 da41 5F5F7400 		.string	"__t"
 30771 da45 0B       		.byte	0xb
 30772 da46 F402     		.value	0x2f4
 30773 da48 4DDA0000 		.long	0xda4d
 30774 da4c 00       		.byte	0
 30775 da4d 11       		.uleb128 0x11
 30776 da4e E6C60000 		.long	0xc6e6
 30777 da52 9801     		.uleb128 0x98
 30778 da54 0A5E0000 		.long	0x5e0a
 30779 da58 03       		.byte	0x3
 30780 da59 61DA0000 		.long	0xda61
 30781 da5d 6CDA0000 		.long	0xda6c
 30782 da61 9901     		.uleb128 0x99
 30783 da63 00000000 		.long	.LASF1661
 30784 da67 6CDA0000 		.long	0xda6c
 30785 da6b 00       		.byte	0
 30786 da6c 11       		.uleb128 0x11
 30787 da6d F2C60000 		.long	0xc6f2
 30788 da71 9D01     		.uleb128 0x9d
 30789 da73 1B690000 		.long	0x691b
 30790 da77 03       		.byte	0x3
 30791 da78 89DA0000 		.long	0xda89
 30792 da7c A001     		.uleb128 0xa0
 30793 da7e 5F5F6200 		.string	"__b"
 30794 da82 0B       		.byte	0xb
 30795 da83 79       		.byte	0x79
 30796 da84 89DA0000 		.long	0xda89
 30797 da88 00       		.byte	0
 30798 da89 11       		.uleb128 0x11
 30799 da8a 36C70000 		.long	0xc736
 30800 da8e 9D01     		.uleb128 0x9d
 30801 da90 BC690000 		.long	0x69bc
 30802 da94 03       		.byte	0x3
 30803 da95 A6DA0000 		.long	0xdaa6
 30804 da99 A001     		.uleb128 0xa0
 30805 da9b 5F5F7400 		.string	"__t"
 30806 da9f 0B       		.byte	0xb
 30807 daa0 EF       		.byte	0xef
 30808 daa1 A6DA0000 		.long	0xdaa6
 30809 daa5 00       		.byte	0
 30810 daa6 11       		.uleb128 0x11
 30811 daa7 42C70000 		.long	0xc742
 30812 daab 9D01     		.uleb128 0x9d
 30813 daad 5F870000 		.long	0x875f
 30814 dab1 03       		.byte	0x3
 30815 dab2 DCDA0000 		.long	0xdadc
 30816 dab6 19       		.uleb128 0x19
GAS LISTING /tmp/ccJUMvuF.s 			page 842


 30817 dab7 5F5F6900 		.string	"__i"
 30818 dabb 53930000 		.long	0x9353
 30819 dabf 01       		.byte	0x1
 30820 dac0 35       		.uleb128 0x35
 30821 dac1 00000000 		.long	.LASF813
 30822 dac5 3E530000 		.long	0x533e
 30823 dac9 6B       		.uleb128 0x6b
 30824 daca 00000000 		.long	.LASF1089
 30825 dace A101     		.uleb128 0xa1
 30826 dad0 5F5F7400 		.string	"__t"
 30827 dad4 0B       		.byte	0xb
 30828 dad5 E702     		.value	0x2e7
 30829 dad7 DCDA0000 		.long	0xdadc
 30830 dadb 00       		.byte	0
 30831 dadc 11       		.uleb128 0x11
 30832 dadd 42C70000 		.long	0xc742
 30833 dae1 9D01     		.uleb128 0x9d
 30834 dae3 8D870000 		.long	0x878d
 30835 dae7 03       		.byte	0x3
 30836 dae8 18DB0000 		.long	0xdb18
 30837 daec 19       		.uleb128 0x19
 30838 daed 5F5F6900 		.string	"__i"
 30839 daf1 53930000 		.long	0x9353
 30840 daf5 01       		.byte	0x1
 30841 daf6 6A       		.uleb128 0x6a
 30842 daf7 00000000 		.long	.LASF804
 30843 dafb 0ADB0000 		.long	0xdb0a
 30844 daff 68       		.uleb128 0x68
 30845 db00 5BC50000 		.long	0xc55b
 30846 db04 68       		.uleb128 0x68
 30847 db05 3E530000 		.long	0x533e
 30848 db09 00       		.byte	0
 30849 db0a A101     		.uleb128 0xa1
 30850 db0c 5F5F7400 		.string	"__t"
 30851 db10 0B       		.byte	0xb
 30852 db11 F402     		.value	0x2f4
 30853 db13 18DB0000 		.long	0xdb18
 30854 db17 00       		.byte	0
 30855 db18 11       		.uleb128 0x11
 30856 db19 C2C70000 		.long	0xc7c2
 30857 db1d 9D01     		.uleb128 0x9d
 30858 db1f C1870000 		.long	0x87c1
 30859 db23 03       		.byte	0x3
 30860 db24 54DB0000 		.long	0xdb54
 30861 db28 19       		.uleb128 0x19
 30862 db29 5F5F6900 		.string	"__i"
 30863 db2d 53930000 		.long	0x9353
 30864 db31 00       		.byte	0
 30865 db32 6A       		.uleb128 0x6a
 30866 db33 00000000 		.long	.LASF804
 30867 db37 46DB0000 		.long	0xdb46
 30868 db3b 68       		.uleb128 0x68
 30869 db3c 5BC50000 		.long	0xc55b
 30870 db40 68       		.uleb128 0x68
 30871 db41 3E530000 		.long	0x533e
 30872 db45 00       		.byte	0
 30873 db46 A101     		.uleb128 0xa1
GAS LISTING /tmp/ccJUMvuF.s 			page 843


 30874 db48 5F5F7400 		.string	"__t"
 30875 db4c 0B       		.byte	0xb
 30876 db4d F402     		.value	0x2f4
 30877 db4f 54DB0000 		.long	0xdb54
 30878 db53 00       		.byte	0
 30879 db54 11       		.uleb128 0x11
 30880 db55 C2C70000 		.long	0xc7c2
 30881 db59 9801     		.uleb128 0x98
 30882 db5b AC670000 		.long	0x67ac
 30883 db5f 03       		.byte	0x3
 30884 db60 68DB0000 		.long	0xdb68
 30885 db64 73DB0000 		.long	0xdb73
 30886 db68 9901     		.uleb128 0x99
 30887 db6a 00000000 		.long	.LASF1661
 30888 db6e 73DB0000 		.long	0xdb73
 30889 db72 00       		.byte	0
 30890 db73 11       		.uleb128 0x11
 30891 db74 CEC70000 		.long	0xc7ce
 30892 db78 9801     		.uleb128 0x98
 30893 db7a 6BA80000 		.long	0xa86b
 30894 db7e 03       		.byte	0x3
 30895 db7f 87DB0000 		.long	0xdb87
 30896 db83 92DB0000 		.long	0xdb92
 30897 db87 9901     		.uleb128 0x99
 30898 db89 00000000 		.long	.LASF1661
 30899 db8d 92DB0000 		.long	0xdb92
 30900 db91 00       		.byte	0
 30901 db92 11       		.uleb128 0x11
 30902 db93 12C80000 		.long	0xc812
 30903 db97 9801     		.uleb128 0x98
 30904 db99 9AA80000 		.long	0xa89a
 30905 db9d 03       		.byte	0x3
 30906 db9e A6DB0000 		.long	0xdba6
 30907 dba2 BBDB0000 		.long	0xdbbb
 30908 dba6 9901     		.uleb128 0x99
 30909 dba8 00000000 		.long	.LASF1661
 30910 dbac 92DB0000 		.long	0xdb92
 30911 dbb0 9901     		.uleb128 0x99
 30912 dbb2 00000000 		.long	.LASF1675
 30913 dbb6 C9AE0000 		.long	0xaec9
 30914 dbba 00       		.byte	0
 30915 dbbb 9801     		.uleb128 0x98
 30916 dbbd 926F0000 		.long	0x6f92
 30917 dbc1 03       		.byte	0x3
 30918 dbc2 CADB0000 		.long	0xdbca
 30919 dbc6 DFDB0000 		.long	0xdbdf
 30920 dbca 9901     		.uleb128 0x99
 30921 dbcc 00000000 		.long	.LASF1661
 30922 dbd0 DFDB0000 		.long	0xdbdf
 30923 dbd4 9901     		.uleb128 0x99
 30924 dbd6 00000000 		.long	.LASF1675
 30925 dbda C9AE0000 		.long	0xaec9
 30926 dbde 00       		.byte	0
 30927 dbdf 11       		.uleb128 0x11
 30928 dbe0 24C80000 		.long	0xc824
 30929 dbe4 9801     		.uleb128 0x98
 30930 dbe6 2E950000 		.long	0x952e
GAS LISTING /tmp/ccJUMvuF.s 			page 844


 30931 dbea 03       		.byte	0x3
 30932 dbeb F3DB0000 		.long	0xdbf3
 30933 dbef 03DC0000 		.long	0xdc03
 30934 dbf3 9901     		.uleb128 0x99
 30935 dbf5 00000000 		.long	.LASF1661
 30936 dbf9 C7D60000 		.long	0xd6c7
 30937 dbfd 09       		.uleb128 0x9
 30938 dbfe 03DC0000 		.long	0xdc03
 30939 dc02 00       		.byte	0
 30940 dc03 11       		.uleb128 0x11
 30941 dc04 E3B70000 		.long	0xb7e3
 30942 dc08 9801     		.uleb128 0x98
 30943 dc0a B7070000 		.long	0x7b7
 30944 dc0e 03       		.byte	0x3
 30945 dc0f 17DC0000 		.long	0xdc17
 30946 dc13 2EDC0000 		.long	0xdc2e
 30947 dc17 9901     		.uleb128 0x99
 30948 dc19 00000000 		.long	.LASF1661
 30949 dc1d E6D60000 		.long	0xd6e6
 30950 dc21 A001     		.uleb128 0xa0
 30951 dc23 5F5F6100 		.string	"__a"
 30952 dc27 21       		.byte	0x21
 30953 dc28 73       		.byte	0x73
 30954 dc29 2EDC0000 		.long	0xdc2e
 30955 dc2d 00       		.byte	0
 30956 dc2e 11       		.uleb128 0x11
 30957 dc2f F5B70000 		.long	0xb7f5
 30958 dc33 9801     		.uleb128 0x98
 30959 dc35 621D0000 		.long	0x1d62
 30960 dc39 03       		.byte	0x3
 30961 dc3a 42DC0000 		.long	0xdc42
 30962 dc3e 4DDC0000 		.long	0xdc4d
 30963 dc42 9901     		.uleb128 0x99
 30964 dc44 00000000 		.long	.LASF1661
 30965 dc48 21C90000 		.long	0xc921
 30966 dc4c 00       		.byte	0
 30967 dc4d 9801     		.uleb128 0x98
 30968 dc4f AE0C0000 		.long	0xcae
 30969 dc53 03       		.byte	0x3
 30970 dc54 5CDC0000 		.long	0xdc5c
 30971 dc58 67DC0000 		.long	0xdc67
 30972 dc5c 9901     		.uleb128 0x99
 30973 dc5e 00000000 		.long	.LASF1661
 30974 dc62 21C90000 		.long	0xc921
 30975 dc66 00       		.byte	0
 30976 dc67 A701     		.uleb128 0xa7
 30977 dc69 F4090000 		.long	0x9f4
 30978 dc6d 08       		.byte	0x8
 30979 dc6e 1001     		.value	0x110
 30980 dc70 03       		.byte	0x3
 30981 dc71 79DC0000 		.long	0xdc79
 30982 dc75 8EDC0000 		.long	0xdc8e
 30983 dc79 9901     		.uleb128 0x99
 30984 dc7b 00000000 		.long	.LASF1661
 30985 dc7f 8EDC0000 		.long	0xdc8e
 30986 dc83 9901     		.uleb128 0x99
 30987 dc85 00000000 		.long	.LASF1675
GAS LISTING /tmp/ccJUMvuF.s 			page 845


 30988 dc89 C9AE0000 		.long	0xaec9
 30989 dc8d 00       		.byte	0
 30990 dc8e 11       		.uleb128 0x11
 30991 dc8f 6EC00000 		.long	0xc06e
 30992 dc93 7F       		.uleb128 0x7f
 30993 dc94 08       		.byte	0x8
 30994 dc95 C8840000 		.long	0x84c8
 30995 dc99 9D01     		.uleb128 0x9d
 30996 dc9b F5870000 		.long	0x87f5
 30997 dc9f 03       		.byte	0x3
 30998 dca0 BADC0000 		.long	0xdcba
 30999 dca4 35       		.uleb128 0x35
 31000 dca5 00000000 		.long	.LASF1102
 31001 dca9 F0290000 		.long	0x29f0
 31002 dcad A001     		.uleb128 0xa0
 31003 dcaf 5F5F6600 		.string	"__f"
 31004 dcb3 0E       		.byte	0xe
 31005 dcb4 2E       		.byte	0x2e
 31006 dcb5 19CC0000 		.long	0xcc19
 31007 dcb9 00       		.byte	0
 31008 dcba 9D01     		.uleb128 0x9d
 31009 dcbc 13880000 		.long	0x8813
 31010 dcc0 03       		.byte	0x3
 31011 dcc1 E5DC0000 		.long	0xdce5
 31012 dcc5 35       		.uleb128 0x35
 31013 dcc6 00000000 		.long	.LASF301
 31014 dcca ACAE0000 		.long	0xaeac
 31015 dcce 35       		.uleb128 0x35
 31016 dccf 00000000 		.long	.LASF302
 31017 dcd3 BD040000 		.long	0x4bd
 31018 dcd7 A201     		.uleb128 0xa2
 31019 dcd9 00000000 		.long	.LASF1678
 31020 dcdd 09       		.byte	0x9
 31021 dcde 4A02     		.value	0x24a
 31022 dce0 E5DC0000 		.long	0xdce5
 31023 dce4 00       		.byte	0
 31024 dce5 11       		.uleb128 0x11
 31025 dce6 72C10000 		.long	0xc172
 31026 dcea 9801     		.uleb128 0x98
 31027 dcec B1A70000 		.long	0xa7b1
 31028 dcf0 03       		.byte	0x3
 31029 dcf1 F9DC0000 		.long	0xdcf9
 31030 dcf5 04DD0000 		.long	0xdd04
 31031 dcf9 9901     		.uleb128 0x99
 31032 dcfb 00000000 		.long	.LASF1661
 31033 dcff 04DD0000 		.long	0xdd04
 31034 dd03 00       		.byte	0
 31035 dd04 11       		.uleb128 0x11
 31036 dd05 A8C50000 		.long	0xc5a8
 31037 dd09 9D01     		.uleb128 0x9d
 31038 dd0b 9F590000 		.long	0x599f
 31039 dd0f 03       		.byte	0x3
 31040 dd10 21DD0000 		.long	0xdd21
 31041 dd14 A001     		.uleb128 0xa0
 31042 dd16 5F5F7400 		.string	"__t"
 31043 dd1a 0B       		.byte	0xb
 31044 dd1b EF       		.byte	0xef
GAS LISTING /tmp/ccJUMvuF.s 			page 846


 31045 dd1c 21DD0000 		.long	0xdd21
 31046 dd20 00       		.byte	0
 31047 dd21 11       		.uleb128 0x11
 31048 dd22 EBC50000 		.long	0xc5eb
 31049 dd26 9D01     		.uleb128 0x9d
 31050 dd28 3B880000 		.long	0x883b
 31051 dd2c 03       		.byte	0x3
 31052 dd2d 57DD0000 		.long	0xdd57
 31053 dd31 19       		.uleb128 0x19
 31054 dd32 5F5F6900 		.string	"__i"
 31055 dd36 53930000 		.long	0x9353
 31056 dd3a 00       		.byte	0
 31057 dd3b 35       		.uleb128 0x35
 31058 dd3c 00000000 		.long	.LASF813
 31059 dd40 C92C0000 		.long	0x2cc9
 31060 dd44 6B       		.uleb128 0x6b
 31061 dd45 00000000 		.long	.LASF1089
 31062 dd49 A101     		.uleb128 0xa1
 31063 dd4b 5F5F7400 		.string	"__t"
 31064 dd4f 0B       		.byte	0xb
 31065 dd50 E702     		.value	0x2e7
 31066 dd52 57DD0000 		.long	0xdd57
 31067 dd56 00       		.byte	0
 31068 dd57 11       		.uleb128 0x11
 31069 dd58 EBC50000 		.long	0xc5eb
 31070 dd5c 9D01     		.uleb128 0x9d
 31071 dd5e 982A0000 		.long	0x2a98
 31072 dd62 03       		.byte	0x3
 31073 dd63 7BDD0000 		.long	0xdd7b
 31074 dd67 35       		.uleb128 0x35
 31075 dd68 00000000 		.long	.LASF421
 31076 dd6c 98C20000 		.long	0xc298
 31077 dd70 09       		.uleb128 0x9
 31078 dd71 98C20000 		.long	0xc298
 31079 dd75 09       		.uleb128 0x9
 31080 dd76 98C20000 		.long	0xc298
 31081 dd7a 00       		.byte	0
 31082 dd7b 9D01     		.uleb128 0x9d
 31083 dd7d 69880000 		.long	0x8869
 31084 dd81 03       		.byte	0x3
 31085 dd82 A8DD0000 		.long	0xdda8
 31086 dd86 35       		.uleb128 0x35
 31087 dd87 00000000 		.long	.LASF421
 31088 dd8b 98C20000 		.long	0xc298
 31089 dd8f 9E01     		.uleb128 0x9e
 31090 dd91 00000000 		.long	.LASF1679
 31091 dd95 2C       		.byte	0x2c
 31092 dd96 7A       		.byte	0x7a
 31093 dd97 98C20000 		.long	0xc298
 31094 dd9b 9E01     		.uleb128 0x9e
 31095 dd9d 00000000 		.long	.LASF1680
 31096 dda1 2C       		.byte	0x2c
 31097 dda2 7A       		.byte	0x7a
 31098 dda3 98C20000 		.long	0xc298
 31099 dda7 00       		.byte	0
 31100 dda8 9D01     		.uleb128 0x9d
 31101 ddaa 88880000 		.long	0x8888
GAS LISTING /tmp/ccJUMvuF.s 			page 847


 31102 ddae 03       		.byte	0x3
 31103 ddaf E3DD0000 		.long	0xdde3
 31104 ddb3 35       		.uleb128 0x35
 31105 ddb4 00000000 		.long	.LASF421
 31106 ddb8 98C20000 		.long	0xc298
 31107 ddbc 18       		.uleb128 0x18
 31108 ddbd 5F547000 		.string	"_Tp"
 31109 ddc1 68930000 		.long	0x9368
 31110 ddc5 9E01     		.uleb128 0x9e
 31111 ddc7 00000000 		.long	.LASF1679
 31112 ddcb 2C       		.byte	0x2c
 31113 ddcc 94       		.byte	0x94
 31114 ddcd 98C20000 		.long	0xc298
 31115 ddd1 9E01     		.uleb128 0x9e
 31116 ddd3 00000000 		.long	.LASF1680
 31117 ddd7 2C       		.byte	0x2c
 31118 ddd8 94       		.byte	0x94
 31119 ddd9 98C20000 		.long	0xc298
 31120 dddd 09       		.uleb128 0x9
 31121 ddde E3DD0000 		.long	0xdde3
 31122 dde2 00       		.byte	0
 31123 dde3 11       		.uleb128 0x11
 31124 dde4 DFC20000 		.long	0xc2df
 31125 dde8 9D01     		.uleb128 0x9d
 31126 ddea B72A0000 		.long	0x2ab7
 31127 ddee 03       		.byte	0x3
 31128 ddef 07DE0000 		.long	0xde07
 31129 ddf3 35       		.uleb128 0x35
 31130 ddf4 00000000 		.long	.LASF421
 31131 ddf8 C9C10000 		.long	0xc1c9
 31132 ddfc 09       		.uleb128 0x9
 31133 ddfd C9C10000 		.long	0xc1c9
 31134 de01 09       		.uleb128 0x9
 31135 de02 C9C10000 		.long	0xc1c9
 31136 de06 00       		.byte	0
 31137 de07 9D01     		.uleb128 0x9d
 31138 de09 B5880000 		.long	0x88b5
 31139 de0d 03       		.byte	0x3
 31140 de0e 34DE0000 		.long	0xde34
 31141 de12 35       		.uleb128 0x35
 31142 de13 00000000 		.long	.LASF421
 31143 de17 C9C10000 		.long	0xc1c9
 31144 de1b 9E01     		.uleb128 0x9e
 31145 de1d 00000000 		.long	.LASF1679
 31146 de21 2C       		.byte	0x2c
 31147 de22 7A       		.byte	0x7a
 31148 de23 C9C10000 		.long	0xc1c9
 31149 de27 9E01     		.uleb128 0x9e
 31150 de29 00000000 		.long	.LASF1680
 31151 de2d 2C       		.byte	0x2c
 31152 de2e 7A       		.byte	0x7a
 31153 de2f C9C10000 		.long	0xc1c9
 31154 de33 00       		.byte	0
 31155 de34 9D01     		.uleb128 0x9d
 31156 de36 D4880000 		.long	0x88d4
 31157 de3a 03       		.byte	0x3
 31158 de3b 6FDE0000 		.long	0xde6f
GAS LISTING /tmp/ccJUMvuF.s 			page 848


 31159 de3f 35       		.uleb128 0x35
 31160 de40 00000000 		.long	.LASF421
 31161 de44 C9C10000 		.long	0xc1c9
 31162 de48 18       		.uleb128 0x18
 31163 de49 5F547000 		.string	"_Tp"
 31164 de4d 29000000 		.long	0x29
 31165 de51 9E01     		.uleb128 0x9e
 31166 de53 00000000 		.long	.LASF1679
 31167 de57 2C       		.byte	0x2c
 31168 de58 94       		.byte	0x94
 31169 de59 C9C10000 		.long	0xc1c9
 31170 de5d 9E01     		.uleb128 0x9e
 31171 de5f 00000000 		.long	.LASF1680
 31172 de63 2C       		.byte	0x2c
 31173 de64 94       		.byte	0x94
 31174 de65 C9C10000 		.long	0xc1c9
 31175 de69 09       		.uleb128 0x9
 31176 de6a 6FDE0000 		.long	0xde6f
 31177 de6e 00       		.byte	0
 31178 de6f 11       		.uleb128 0x11
 31179 de70 10C20000 		.long	0xc210
 31180 de74 9D01     		.uleb128 0x9d
 31181 de76 8E2B0000 		.long	0x2b8e
 31182 de7a 03       		.byte	0x3
 31183 de7b 9BDE0000 		.long	0xde9b
 31184 de7f A001     		.uleb128 0xa0
 31185 de81 5F5F7800 		.string	"__x"
 31186 de85 04       		.byte	0x4
 31187 de86 8A       		.byte	0x8a
 31188 de87 53930000 		.long	0x9353
 31189 de8b 9B01     		.uleb128 0x9b
 31190 de8d 9C01     		.uleb128 0x9c
 31191 de8f 00000000 		.long	.LASF1681
 31192 de93 04       		.byte	0x4
 31193 de94 8C       		.byte	0x8c
 31194 de95 53930000 		.long	0x9353
 31195 de99 00       		.byte	0
 31196 de9a 00       		.byte	0
 31197 de9b 9D01     		.uleb128 0x9d
 31198 de9d F62B0000 		.long	0x2bf6
 31199 dea1 03       		.byte	0x3
 31200 dea2 C2DE0000 		.long	0xdec2
 31201 dea6 A001     		.uleb128 0xa0
 31202 dea8 5F5F7800 		.string	"__x"
 31203 deac 04       		.byte	0x4
 31204 dead 8A       		.byte	0x8a
 31205 deae 53930000 		.long	0x9353
 31206 deb2 9B01     		.uleb128 0x9b
 31207 deb4 9C01     		.uleb128 0x9c
 31208 deb6 00000000 		.long	.LASF1681
 31209 deba 04       		.byte	0x4
 31210 debb 8C       		.byte	0x8c
 31211 debc 53930000 		.long	0x9353
 31212 dec0 00       		.byte	0
 31213 dec1 00       		.byte	0
 31214 dec2 9D01     		.uleb128 0x9d
 31215 dec4 4C2C0000 		.long	0x2c4c
GAS LISTING /tmp/ccJUMvuF.s 			page 849


 31216 dec8 03       		.byte	0x3
 31217 dec9 08DF0000 		.long	0xdf08
 31218 decd 18       		.uleb128 0x18
 31219 dece 5F547000 		.string	"_Tp"
 31220 ded2 53930000 		.long	0x9353
 31221 ded6 4F       		.uleb128 0x4f
 31222 ded7 5F5F6D00 		.string	"__m"
 31223 dedb 53930000 		.long	0x9353
 31224 dedf 00000000 		.quad	0x100000000
 31224      01000000 
 31225 dee7 19       		.uleb128 0x19
 31226 dee8 5F5F6100 		.string	"__a"
 31227 deec 53930000 		.long	0x9353
 31228 def0 01       		.byte	0x1
 31229 def1 19       		.uleb128 0x19
 31230 def2 5F5F6300 		.string	"__c"
 31231 def6 53930000 		.long	0x9353
 31232 defa 00       		.byte	0
 31233 defb A001     		.uleb128 0xa0
 31234 defd 5F5F7800 		.string	"__x"
 31235 df01 04       		.byte	0x4
 31236 df02 95       		.byte	0x95
 31237 df03 53930000 		.long	0x9353
 31238 df07 00       		.byte	0
 31239 df08 9D01     		.uleb128 0x9d
 31240 df0a 8F2C0000 		.long	0x2c8f
 31241 df0e 03       		.byte	0x3
 31242 df0f 48DF0000 		.long	0xdf48
 31243 df13 18       		.uleb128 0x18
 31244 df14 5F547000 		.string	"_Tp"
 31245 df18 53930000 		.long	0x9353
 31246 df1c 51       		.uleb128 0x51
 31247 df1d 5F5F6D00 		.string	"__m"
 31248 df21 53930000 		.long	0x9353
 31249 df25 7002     		.value	0x270
 31250 df27 19       		.uleb128 0x19
 31251 df28 5F5F6100 		.string	"__a"
 31252 df2c 53930000 		.long	0x9353
 31253 df30 01       		.byte	0x1
 31254 df31 19       		.uleb128 0x19
 31255 df32 5F5F6300 		.string	"__c"
 31256 df36 53930000 		.long	0x9353
 31257 df3a 00       		.byte	0
 31258 df3b A001     		.uleb128 0xa0
 31259 df3d 5F5F7800 		.string	"__x"
 31260 df41 04       		.byte	0x4
 31261 df42 95       		.byte	0x95
 31262 df43 53930000 		.long	0x9353
 31263 df47 00       		.byte	0
 31264 df48 A701     		.uleb128 0xa7
 31265 df4a D82D0000 		.long	0x2dd8
 31266 df4e 03       		.byte	0x3
 31267 df4f 4701     		.value	0x147
 31268 df51 01       		.byte	0x1
 31269 df52 5ADF0000 		.long	0xdf5a
 31270 df56 92DF0000 		.long	0xdf92
 31271 df5a 9901     		.uleb128 0x99
GAS LISTING /tmp/ccJUMvuF.s 			page 850


 31272 df5c 00000000 		.long	.LASF1661
 31273 df60 92DF0000 		.long	0xdf92
 31274 df64 A201     		.uleb128 0xa2
 31275 df66 00000000 		.long	.LASF1682
 31276 df6a 04       		.byte	0x4
 31277 df6b 0702     		.value	0x207
 31278 df6d 0D2D0000 		.long	0x2d0d
 31279 df71 9B01     		.uleb128 0x9b
 31280 df73 A801     		.uleb128 0xa8
 31281 df75 5F5F6900 		.string	"__i"
 31282 df79 03       		.byte	0x3
 31283 df7a 4E01     		.value	0x14e
 31284 df7c 85060000 		.long	0x685
 31285 df80 9B01     		.uleb128 0x9b
 31286 df82 A801     		.uleb128 0xa8
 31287 df84 5F5F7800 		.string	"__x"
 31288 df88 03       		.byte	0x3
 31289 df89 5001     		.value	0x150
 31290 df8b 53930000 		.long	0x9353
 31291 df8f 00       		.byte	0
 31292 df90 00       		.byte	0
 31293 df91 00       		.byte	0
 31294 df92 11       		.uleb128 0x11
 31295 df93 ABC10000 		.long	0xc1ab
 31296 df97 9D01     		.uleb128 0x9d
 31297 df99 D62A0000 		.long	0x2ad6
 31298 df9d 03       		.byte	0x3
 31299 df9e B6DF0000 		.long	0xdfb6
 31300 dfa2 35       		.uleb128 0x35
 31301 dfa3 00000000 		.long	.LASF421
 31302 dfa7 00C80000 		.long	0xc800
 31303 dfab 09       		.uleb128 0x9
 31304 dfac 00C80000 		.long	0xc800
 31305 dfb0 09       		.uleb128 0x9
 31306 dfb1 00C80000 		.long	0xc800
 31307 dfb5 00       		.byte	0
 31308 dfb6 9D01     		.uleb128 0x9d
 31309 dfb8 01890000 		.long	0x8901
 31310 dfbc 03       		.byte	0x3
 31311 dfbd E3DF0000 		.long	0xdfe3
 31312 dfc1 35       		.uleb128 0x35
 31313 dfc2 00000000 		.long	.LASF421
 31314 dfc6 00C80000 		.long	0xc800
 31315 dfca 9E01     		.uleb128 0x9e
 31316 dfcc 00000000 		.long	.LASF1679
 31317 dfd0 2C       		.byte	0x2c
 31318 dfd1 7A       		.byte	0x7a
 31319 dfd2 00C80000 		.long	0xc800
 31320 dfd6 9E01     		.uleb128 0x9e
 31321 dfd8 00000000 		.long	.LASF1680
 31322 dfdc 2C       		.byte	0x2c
 31323 dfdd 7A       		.byte	0x7a
 31324 dfde 00C80000 		.long	0xc800
 31325 dfe2 00       		.byte	0
 31326 dfe3 9D01     		.uleb128 0x9d
 31327 dfe5 20890000 		.long	0x8920
 31328 dfe9 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 851


 31329 dfea 1EE00000 		.long	0xe01e
 31330 dfee 35       		.uleb128 0x35
 31331 dfef 00000000 		.long	.LASF421
 31332 dff3 00C80000 		.long	0xc800
 31333 dff7 18       		.uleb128 0x18
 31334 dff8 5F547000 		.string	"_Tp"
 31335 dffc 5A930000 		.long	0x935a
 31336 e000 9E01     		.uleb128 0x9e
 31337 e002 00000000 		.long	.LASF1679
 31338 e006 2C       		.byte	0x2c
 31339 e007 94       		.byte	0x94
 31340 e008 00C80000 		.long	0xc800
 31341 e00c 9E01     		.uleb128 0x9e
 31342 e00e 00000000 		.long	.LASF1680
 31343 e012 2C       		.byte	0x2c
 31344 e013 94       		.byte	0x94
 31345 e014 00C80000 		.long	0xc800
 31346 e018 09       		.uleb128 0x9
 31347 e019 1EE00000 		.long	0xe01e
 31348 e01d 00       		.byte	0
 31349 e01e 11       		.uleb128 0x11
 31350 e01f 3CC80000 		.long	0xc83c
 31351 e023 9801     		.uleb128 0x98
 31352 e025 65A40000 		.long	0xa465
 31353 e029 03       		.byte	0x3
 31354 e02a 32E00000 		.long	0xe032
 31355 e02e 4EE00000 		.long	0xe04e
 31356 e032 9901     		.uleb128 0x99
 31357 e034 00000000 		.long	.LASF1661
 31358 e038 5BD60000 		.long	0xd65b
 31359 e03c A001     		.uleb128 0xa0
 31360 e03e 5F5F7000 		.string	"__p"
 31361 e042 07       		.byte	0x7
 31362 e043 6D       		.byte	0x6d
 31363 e044 85A30000 		.long	0xa385
 31364 e048 09       		.uleb128 0x9
 31365 e049 7AA30000 		.long	0xa37a
 31366 e04d 00       		.byte	0
 31367 e04e 9D01     		.uleb128 0x9d
 31368 e050 B8440000 		.long	0x44b8
 31369 e054 03       		.byte	0x3
 31370 e055 81E00000 		.long	0xe081
 31371 e059 A101     		.uleb128 0xa1
 31372 e05b 5F5F6100 		.string	"__a"
 31373 e05f 2F       		.byte	0x2f
 31374 e060 7E01     		.value	0x17e
 31375 e062 81E00000 		.long	0xe081
 31376 e066 A101     		.uleb128 0xa1
 31377 e068 5F5F7000 		.string	"__p"
 31378 e06c 2F       		.byte	0x2f
 31379 e06d 7E01     		.value	0x17e
 31380 e06f 76430000 		.long	0x4376
 31381 e073 A101     		.uleb128 0xa1
 31382 e075 5F5F6E00 		.string	"__n"
 31383 e079 2F       		.byte	0x2f
 31384 e07a 7E01     		.value	0x17e
 31385 e07c A4430000 		.long	0x43a4
GAS LISTING /tmp/ccJUMvuF.s 			page 852


 31386 e080 00       		.byte	0
 31387 e081 11       		.uleb128 0x11
 31388 e082 DFC20000 		.long	0xc2df
 31389 e086 9801     		.uleb128 0x98
 31390 e088 8E470000 		.long	0x478e
 31391 e08c 03       		.byte	0x3
 31392 e08d 95E00000 		.long	0xe095
 31393 e091 BAE00000 		.long	0xe0ba
 31394 e095 9901     		.uleb128 0x99
 31395 e097 00000000 		.long	.LASF1661
 31396 e09b BAE00000 		.long	0xe0ba
 31397 e09f A001     		.uleb128 0xa0
 31398 e0a1 5F5F7000 		.string	"__p"
 31399 e0a5 06       		.byte	0x6
 31400 e0a6 AE       		.byte	0xae
 31401 e0a7 09460000 		.long	0x4609
 31402 e0ab A001     		.uleb128 0xa0
 31403 e0ad 5F5F6E00 		.string	"__n"
 31404 e0b1 06       		.byte	0x6
 31405 e0b2 AE       		.byte	0xae
 31406 e0b3 85060000 		.long	0x685
 31407 e0b7 A901     		.uleb128 0xa9
 31408 e0b9 00       		.byte	0
 31409 e0ba 11       		.uleb128 0x11
 31410 e0bb 10C30000 		.long	0xc310
 31411 e0bf A401     		.uleb128 0xa4
 31412 e0c1 F4450000 		.long	0x45f4
 31413 e0c5 06       		.byte	0x6
 31414 e0c6 4F       		.byte	0x4f
 31415 e0c7 03       		.byte	0x3
 31416 e0c8 D0E00000 		.long	0xe0d0
 31417 e0cc E5E00000 		.long	0xe0e5
 31418 e0d0 9901     		.uleb128 0x99
 31419 e0d2 00000000 		.long	.LASF1661
 31420 e0d6 E5E00000 		.long	0xe0e5
 31421 e0da 9901     		.uleb128 0x99
 31422 e0dc 00000000 		.long	.LASF1675
 31423 e0e0 C9AE0000 		.long	0xaec9
 31424 e0e4 00       		.byte	0
 31425 e0e5 11       		.uleb128 0x11
 31426 e0e6 F1C20000 		.long	0xc2f1
 31427 e0ea 9801     		.uleb128 0x98
 31428 e0ec 3B460000 		.long	0x463b
 31429 e0f0 03       		.byte	0x3
 31430 e0f1 F9E00000 		.long	0xe0f9
 31431 e0f5 04E10000 		.long	0xe104
 31432 e0f9 9901     		.uleb128 0x99
 31433 e0fb 00000000 		.long	.LASF1661
 31434 e0ff BAE00000 		.long	0xe0ba
 31435 e103 00       		.byte	0
 31436 e104 9801     		.uleb128 0x98
 31437 e106 52470000 		.long	0x4752
 31438 e10a 03       		.byte	0x3
 31439 e10b 13E10000 		.long	0xe113
 31440 e10f 28E10000 		.long	0xe128
 31441 e113 9901     		.uleb128 0x99
 31442 e115 00000000 		.long	.LASF1661
GAS LISTING /tmp/ccJUMvuF.s 			page 853


 31443 e119 BAE00000 		.long	0xe0ba
 31444 e11d 9901     		.uleb128 0x99
 31445 e11f 00000000 		.long	.LASF1675
 31446 e123 C9AE0000 		.long	0xaec9
 31447 e127 00       		.byte	0
 31448 e128 9801     		.uleb128 0x98
 31449 e12a 189D0000 		.long	0x9d18
 31450 e12e 03       		.byte	0x3
 31451 e12f 37E10000 		.long	0xe137
 31452 e133 47E10000 		.long	0xe147
 31453 e137 9901     		.uleb128 0x99
 31454 e139 00000000 		.long	.LASF1661
 31455 e13d 7FD40000 		.long	0xd47f
 31456 e141 09       		.uleb128 0x9
 31457 e142 47E10000 		.long	0xe147
 31458 e146 00       		.byte	0
 31459 e147 11       		.uleb128 0x11
 31460 e148 ECC10000 		.long	0xc1ec
 31461 e14c 9801     		.uleb128 0x98
 31462 e14e 22310000 		.long	0x3122
 31463 e152 03       		.byte	0x3
 31464 e153 5BE10000 		.long	0xe15b
 31465 e157 72E10000 		.long	0xe172
 31466 e15b 9901     		.uleb128 0x99
 31467 e15d 00000000 		.long	.LASF1661
 31468 e161 CCD40000 		.long	0xd4cc
 31469 e165 A001     		.uleb128 0xa0
 31470 e167 5F5F6100 		.string	"__a"
 31471 e16b 21       		.byte	0x21
 31472 e16c 73       		.byte	0x73
 31473 e16d 72E10000 		.long	0xe172
 31474 e171 00       		.byte	0
 31475 e172 11       		.uleb128 0x11
 31476 e173 FEC10000 		.long	0xc1fe
 31477 e177 9801     		.uleb128 0x98
 31478 e179 B79D0000 		.long	0x9db7
 31479 e17d 03       		.byte	0x3
 31480 e17e 86E10000 		.long	0xe186
 31481 e182 A2E10000 		.long	0xe1a2
 31482 e186 9901     		.uleb128 0x99
 31483 e188 00000000 		.long	.LASF1661
 31484 e18c 7FD40000 		.long	0xd47f
 31485 e190 A001     		.uleb128 0xa0
 31486 e192 5F5F7000 		.string	"__p"
 31487 e196 07       		.byte	0x7
 31488 e197 6D       		.byte	0x6d
 31489 e198 D79C0000 		.long	0x9cd7
 31490 e19c 09       		.uleb128 0x9
 31491 e19d CC9C0000 		.long	0x9ccc
 31492 e1a1 00       		.byte	0
 31493 e1a2 9D01     		.uleb128 0x9d
 31494 e1a4 3B340000 		.long	0x343b
 31495 e1a8 03       		.byte	0x3
 31496 e1a9 D5E10000 		.long	0xe1d5
 31497 e1ad A101     		.uleb128 0xa1
 31498 e1af 5F5F6100 		.string	"__a"
 31499 e1b3 2F       		.byte	0x2f
GAS LISTING /tmp/ccJUMvuF.s 			page 854


 31500 e1b4 7E01     		.value	0x17e
 31501 e1b6 D5E10000 		.long	0xe1d5
 31502 e1ba A101     		.uleb128 0xa1
 31503 e1bc 5F5F7000 		.string	"__p"
 31504 e1c0 2F       		.byte	0x2f
 31505 e1c1 7E01     		.value	0x17e
 31506 e1c3 F9320000 		.long	0x32f9
 31507 e1c7 A101     		.uleb128 0xa1
 31508 e1c9 5F5F6E00 		.string	"__n"
 31509 e1cd 2F       		.byte	0x2f
 31510 e1ce 7E01     		.value	0x17e
 31511 e1d0 27330000 		.long	0x3327
 31512 e1d4 00       		.byte	0
 31513 e1d5 11       		.uleb128 0x11
 31514 e1d6 10C20000 		.long	0xc210
 31515 e1da 9801     		.uleb128 0x98
 31516 e1dc 1C370000 		.long	0x371c
 31517 e1e0 03       		.byte	0x3
 31518 e1e1 E9E10000 		.long	0xe1e9
 31519 e1e5 0EE20000 		.long	0xe20e
 31520 e1e9 9901     		.uleb128 0x99
 31521 e1eb 00000000 		.long	.LASF1661
 31522 e1ef 0EE20000 		.long	0xe20e
 31523 e1f3 A001     		.uleb128 0xa0
 31524 e1f5 5F5F7000 		.string	"__p"
 31525 e1f9 06       		.byte	0x6
 31526 e1fa AE       		.byte	0xae
 31527 e1fb 97350000 		.long	0x3597
 31528 e1ff A001     		.uleb128 0xa0
 31529 e201 5F5F6E00 		.string	"__n"
 31530 e205 06       		.byte	0x6
 31531 e206 AE       		.byte	0xae
 31532 e207 85060000 		.long	0x685
 31533 e20b A901     		.uleb128 0xa9
 31534 e20d 00       		.byte	0
 31535 e20e 11       		.uleb128 0x11
 31536 e20f 41C20000 		.long	0xc241
 31537 e213 A401     		.uleb128 0xa4
 31538 e215 82350000 		.long	0x3582
 31539 e219 06       		.byte	0x6
 31540 e21a 4F       		.byte	0x4f
 31541 e21b 03       		.byte	0x3
 31542 e21c 24E20000 		.long	0xe224
 31543 e220 39E20000 		.long	0xe239
 31544 e224 9901     		.uleb128 0x99
 31545 e226 00000000 		.long	.LASF1661
 31546 e22a 39E20000 		.long	0xe239
 31547 e22e 9901     		.uleb128 0x99
 31548 e230 00000000 		.long	.LASF1675
 31549 e234 C9AE0000 		.long	0xaec9
 31550 e238 00       		.byte	0
 31551 e239 11       		.uleb128 0x11
 31552 e23a 22C20000 		.long	0xc222
 31553 e23e 9801     		.uleb128 0x98
 31554 e240 C9350000 		.long	0x35c9
 31555 e244 03       		.byte	0x3
 31556 e245 4DE20000 		.long	0xe24d
GAS LISTING /tmp/ccJUMvuF.s 			page 855


 31557 e249 58E20000 		.long	0xe258
 31558 e24d 9901     		.uleb128 0x99
 31559 e24f 00000000 		.long	.LASF1661
 31560 e253 0EE20000 		.long	0xe20e
 31561 e257 00       		.byte	0
 31562 e258 9801     		.uleb128 0x98
 31563 e25a E0360000 		.long	0x36e0
 31564 e25e 03       		.byte	0x3
 31565 e25f 67E20000 		.long	0xe267
 31566 e263 7CE20000 		.long	0xe27c
 31567 e267 9901     		.uleb128 0x99
 31568 e269 00000000 		.long	.LASF1661
 31569 e26d 0EE20000 		.long	0xe20e
 31570 e271 9901     		.uleb128 0x99
 31571 e273 00000000 		.long	.LASF1675
 31572 e277 C9AE0000 		.long	0xaec9
 31573 e27b 00       		.byte	0
 31574 e27c 7E       		.uleb128 0x7e
 31575 e27d 08       		.byte	0x8
 31576 e27e 8F940000 		.long	0x948f
 31577 e282 9801     		.uleb128 0x98
 31578 e284 B4930000 		.long	0x93b4
 31579 e288 03       		.byte	0x3
 31580 e289 A3E20000 		.long	0xe2a3
 31581 e28d C6E20000 		.long	0xe2c6
 31582 e291 35       		.uleb128 0x35
 31583 e292 00000000 		.long	.LASF1200
 31584 e296 169F0000 		.long	0x9f16
 31585 e29a 35       		.uleb128 0x35
 31586 e29b 00000000 		.long	.LASF1201
 31587 e29f 169F0000 		.long	0x9f16
 31588 e2a3 9901     		.uleb128 0x99
 31589 e2a5 00000000 		.long	.LASF1661
 31590 e2a9 C6E20000 		.long	0xe2c6
 31591 e2ad 9E01     		.uleb128 0x9e
 31592 e2af 00000000 		.long	.LASF1683
 31593 e2b3 11       		.byte	0x11
 31594 e2b4 29       		.byte	0x29
 31595 e2b5 169F0000 		.long	0x9f16
 31596 e2b9 9E01     		.uleb128 0x9e
 31597 e2bb 00000000 		.long	.LASF1684
 31598 e2bf 11       		.byte	0x11
 31599 e2c0 29       		.byte	0x29
 31600 e2c1 169F0000 		.long	0x9f16
 31601 e2c5 00       		.byte	0
 31602 e2c6 11       		.uleb128 0x11
 31603 e2c7 7CE20000 		.long	0xe27c
 31604 e2cb 9801     		.uleb128 0x98
 31605 e2cd C6A30000 		.long	0xa3c6
 31606 e2d1 03       		.byte	0x3
 31607 e2d2 DAE20000 		.long	0xe2da
 31608 e2d6 EAE20000 		.long	0xe2ea
 31609 e2da 9901     		.uleb128 0x99
 31610 e2dc 00000000 		.long	.LASF1661
 31611 e2e0 5BD60000 		.long	0xd65b
 31612 e2e4 09       		.uleb128 0x9
 31613 e2e5 EAE20000 		.long	0xe2ea
GAS LISTING /tmp/ccJUMvuF.s 			page 856


 31614 e2e9 00       		.byte	0
 31615 e2ea 11       		.uleb128 0x11
 31616 e2eb BBC20000 		.long	0xc2bb
 31617 e2ef 9801     		.uleb128 0x98
 31618 e2f1 72420000 		.long	0x4272
 31619 e2f5 03       		.byte	0x3
 31620 e2f6 FEE20000 		.long	0xe2fe
 31621 e2fa 15E30000 		.long	0xe315
 31622 e2fe 9901     		.uleb128 0x99
 31623 e300 00000000 		.long	.LASF1661
 31624 e304 A8D60000 		.long	0xd6a8
 31625 e308 A001     		.uleb128 0xa0
 31626 e30a 5F5F6100 		.string	"__a"
 31627 e30e 21       		.byte	0x21
 31628 e30f 73       		.byte	0x73
 31629 e310 15E30000 		.long	0xe315
 31630 e314 00       		.byte	0
 31631 e315 11       		.uleb128 0x11
 31632 e316 CDC20000 		.long	0xc2cd
 31633 e31a 9801     		.uleb128 0x98
 31634 e31c 80A80000 		.long	0xa880
 31635 e320 03       		.byte	0x3
 31636 e321 29E30000 		.long	0xe329
 31637 e325 39E30000 		.long	0xe339
 31638 e329 9901     		.uleb128 0x99
 31639 e32b 00000000 		.long	.LASF1661
 31640 e32f 92DB0000 		.long	0xdb92
 31641 e333 09       		.uleb128 0x9
 31642 e334 39E30000 		.long	0xe339
 31643 e338 00       		.byte	0
 31644 e339 11       		.uleb128 0x11
 31645 e33a 18C80000 		.long	0xc818
 31646 e33e 9801     		.uleb128 0x98
 31647 e340 776F0000 		.long	0x6f77
 31648 e344 03       		.byte	0x3
 31649 e345 4DE30000 		.long	0xe34d
 31650 e349 64E30000 		.long	0xe364
 31651 e34d 9901     		.uleb128 0x99
 31652 e34f 00000000 		.long	.LASF1661
 31653 e353 DFDB0000 		.long	0xdbdf
 31654 e357 A001     		.uleb128 0xa0
 31655 e359 5F5F6100 		.string	"__a"
 31656 e35d 21       		.byte	0x21
 31657 e35e 73       		.byte	0x73
 31658 e35f 64E30000 		.long	0xe364
 31659 e363 00       		.byte	0
 31660 e364 11       		.uleb128 0x11
 31661 e365 2AC80000 		.long	0xc82a
 31662 e369 9801     		.uleb128 0x98
 31663 e36b 1FA90000 		.long	0xa91f
 31664 e36f 03       		.byte	0x3
 31665 e370 78E30000 		.long	0xe378
 31666 e374 94E30000 		.long	0xe394
 31667 e378 9901     		.uleb128 0x99
 31668 e37a 00000000 		.long	.LASF1661
 31669 e37e 92DB0000 		.long	0xdb92
 31670 e382 A001     		.uleb128 0xa0
GAS LISTING /tmp/ccJUMvuF.s 			page 857


 31671 e384 5F5F7000 		.string	"__p"
 31672 e388 07       		.byte	0x7
 31673 e389 6D       		.byte	0x6d
 31674 e38a 3FA80000 		.long	0xa83f
 31675 e38e 09       		.uleb128 0x9
 31676 e38f 34A80000 		.long	0xa834
 31677 e393 00       		.byte	0
 31678 e394 9D01     		.uleb128 0x9d
 31679 e396 BD710000 		.long	0x71bd
 31680 e39a 03       		.byte	0x3
 31681 e39b C7E30000 		.long	0xe3c7
 31682 e39f A101     		.uleb128 0xa1
 31683 e3a1 5F5F6100 		.string	"__a"
 31684 e3a5 2F       		.byte	0x2f
 31685 e3a6 7E01     		.value	0x17e
 31686 e3a8 C7E30000 		.long	0xe3c7
 31687 e3ac A101     		.uleb128 0xa1
 31688 e3ae 5F5F7000 		.string	"__p"
 31689 e3b2 2F       		.byte	0x2f
 31690 e3b3 7E01     		.value	0x17e
 31691 e3b5 7B700000 		.long	0x707b
 31692 e3b9 A101     		.uleb128 0xa1
 31693 e3bb 5F5F6E00 		.string	"__n"
 31694 e3bf 2F       		.byte	0x2f
 31695 e3c0 7E01     		.value	0x17e
 31696 e3c2 A9700000 		.long	0x70a9
 31697 e3c6 00       		.byte	0
 31698 e3c7 11       		.uleb128 0x11
 31699 e3c8 3CC80000 		.long	0xc83c
 31700 e3cc 9801     		.uleb128 0x98
 31701 e3ce 93740000 		.long	0x7493
 31702 e3d2 03       		.byte	0x3
 31703 e3d3 DBE30000 		.long	0xe3db
 31704 e3d7 00E40000 		.long	0xe400
 31705 e3db 9901     		.uleb128 0x99
 31706 e3dd 00000000 		.long	.LASF1661
 31707 e3e1 00E40000 		.long	0xe400
 31708 e3e5 A001     		.uleb128 0xa0
 31709 e3e7 5F5F7000 		.string	"__p"
 31710 e3eb 06       		.byte	0x6
 31711 e3ec AE       		.byte	0xae
 31712 e3ed 0E730000 		.long	0x730e
 31713 e3f1 A001     		.uleb128 0xa0
 31714 e3f3 5F5F6E00 		.string	"__n"
 31715 e3f7 06       		.byte	0x6
 31716 e3f8 AE       		.byte	0xae
 31717 e3f9 85060000 		.long	0x685
 31718 e3fd A901     		.uleb128 0xa9
 31719 e3ff 00       		.byte	0
 31720 e400 11       		.uleb128 0x11
 31721 e401 6DC80000 		.long	0xc86d
 31722 e405 A401     		.uleb128 0xa4
 31723 e407 F9720000 		.long	0x72f9
 31724 e40b 06       		.byte	0x6
 31725 e40c 4F       		.byte	0x4f
 31726 e40d 03       		.byte	0x3
 31727 e40e 16E40000 		.long	0xe416
GAS LISTING /tmp/ccJUMvuF.s 			page 858


 31728 e412 2BE40000 		.long	0xe42b
 31729 e416 9901     		.uleb128 0x99
 31730 e418 00000000 		.long	.LASF1661
 31731 e41c 2BE40000 		.long	0xe42b
 31732 e420 9901     		.uleb128 0x99
 31733 e422 00000000 		.long	.LASF1675
 31734 e426 C9AE0000 		.long	0xaec9
 31735 e42a 00       		.byte	0
 31736 e42b 11       		.uleb128 0x11
 31737 e42c 4EC80000 		.long	0xc84e
 31738 e430 9801     		.uleb128 0x98
 31739 e432 40730000 		.long	0x7340
 31740 e436 03       		.byte	0x3
 31741 e437 3FE40000 		.long	0xe43f
 31742 e43b 4AE40000 		.long	0xe44a
 31743 e43f 9901     		.uleb128 0x99
 31744 e441 00000000 		.long	.LASF1661
 31745 e445 00E40000 		.long	0xe400
 31746 e449 00       		.byte	0
 31747 e44a 9801     		.uleb128 0x98
 31748 e44c 57740000 		.long	0x7457
 31749 e450 03       		.byte	0x3
 31750 e451 59E40000 		.long	0xe459
 31751 e455 6EE40000 		.long	0xe46e
 31752 e459 9901     		.uleb128 0x99
 31753 e45b 00000000 		.long	.LASF1661
 31754 e45f 00E40000 		.long	0xe400
 31755 e463 9901     		.uleb128 0x99
 31756 e465 00000000 		.long	.LASF1675
 31757 e469 C9AE0000 		.long	0xaec9
 31758 e46d 00       		.byte	0
 31759 e46e 7E       		.uleb128 0x7e
 31760 e46f 08       		.byte	0x8
 31761 e470 94940000 		.long	0x9494
 31762 e474 9801     		.uleb128 0x98
 31763 e476 32940000 		.long	0x9432
 31764 e47a 03       		.byte	0x3
 31765 e47b 95E40000 		.long	0xe495
 31766 e47f B8E40000 		.long	0xe4b8
 31767 e483 35       		.uleb128 0x35
 31768 e484 00000000 		.long	.LASF1204
 31769 e488 29000000 		.long	0x29
 31770 e48c 35       		.uleb128 0x35
 31771 e48d 00000000 		.long	.LASF745
 31772 e491 169F0000 		.long	0x9f16
 31773 e495 9901     		.uleb128 0x99
 31774 e497 00000000 		.long	.LASF1661
 31775 e49b B8E40000 		.long	0xe4b8
 31776 e49f 9E01     		.uleb128 0x9e
 31777 e4a1 00000000 		.long	.LASF1664
 31778 e4a5 11       		.byte	0x11
 31779 e4a6 45       		.byte	0x45
 31780 e4a7 BDE40000 		.long	0xe4bd
 31781 e4ab 9E01     		.uleb128 0x9e
 31782 e4ad 00000000 		.long	.LASF1685
 31783 e4b1 11       		.byte	0x11
 31784 e4b2 45       		.byte	0x45
GAS LISTING /tmp/ccJUMvuF.s 			page 859


 31785 e4b3 169F0000 		.long	0x9f16
 31786 e4b7 00       		.byte	0
 31787 e4b8 11       		.uleb128 0x11
 31788 e4b9 6EE40000 		.long	0xe46e
 31789 e4bd 11       		.uleb128 0x11
 31790 e4be DAC10000 		.long	0xc1da
 31791 e4c2 8101     		.uleb128 0x81
 31792 e4c4 08       		.byte	0x8
 31793 e4c5 89810000 		.long	0x8189
 31794 e4c9 9D01     		.uleb128 0x9d
 31795 e4cb 4D890000 		.long	0x894d
 31796 e4cf 03       		.byte	0x3
 31797 e4d0 EAE40000 		.long	0xe4ea
 31798 e4d4 18       		.uleb128 0x18
 31799 e4d5 5F547000 		.string	"_Tp"
 31800 e4d9 DAC10000 		.long	0xc1da
 31801 e4dd A001     		.uleb128 0xa0
 31802 e4df 5F5F7400 		.string	"__t"
 31803 e4e3 12       		.byte	0x12
 31804 e4e4 65       		.byte	0x65
 31805 e4e5 EAE40000 		.long	0xe4ea
 31806 e4e9 00       		.byte	0
 31807 e4ea 11       		.uleb128 0x11
 31808 e4eb DAC10000 		.long	0xc1da
 31809 e4ef 9801     		.uleb128 0x98
 31810 e4f1 26A00000 		.long	0xa026
 31811 e4f5 03       		.byte	0x3
 31812 e4f6 FEE40000 		.long	0xe4fe
 31813 e4fa 09E50000 		.long	0xe509
 31814 e4fe 9901     		.uleb128 0x99
 31815 e500 00000000 		.long	.LASF1661
 31816 e504 3CD40000 		.long	0xd43c
 31817 e508 00       		.byte	0
 31818 e509 9D01     		.uleb128 0x9d
 31819 e50b 6B890000 		.long	0x896b
 31820 e50f 01       		.byte	0x1
 31821 e510 5EE50000 		.long	0xe55e
 31822 e514 35       		.uleb128 0x35
 31823 e515 00000000 		.long	.LASF1113
 31824 e519 169F0000 		.long	0x9f16
 31825 e51d 35       		.uleb128 0x35
 31826 e51e 00000000 		.long	.LASF1114
 31827 e522 26940000 		.long	0x9426
 31828 e526 A201     		.uleb128 0xa2
 31829 e528 00000000 		.long	.LASF1680
 31830 e52c 0D       		.byte	0xd
 31831 e52d 1C07     		.value	0x71c
 31832 e52f 169F0000 		.long	0x9f16
 31833 e533 A201     		.uleb128 0xa2
 31834 e535 00000000 		.long	.LASF1686
 31835 e539 0D       		.byte	0xd
 31836 e53a 1D07     		.value	0x71d
 31837 e53c 26940000 		.long	0x9426
 31838 e540 9B01     		.uleb128 0x9b
 31839 e542 A301     		.uleb128 0xa3
 31840 e544 00000000 		.long	.LASF1664
 31841 e548 0D       		.byte	0xd
GAS LISTING /tmp/ccJUMvuF.s 			page 860


 31842 e549 2007     		.value	0x720
 31843 e54b 5C810000 		.long	0x815c
 31844 e54f A301     		.uleb128 0xa3
 31845 e551 00000000 		.long	.LASF1687
 31846 e555 0D       		.byte	0xd
 31847 e556 2107     		.value	0x721
 31848 e558 169F0000 		.long	0x9f16
 31849 e55c 00       		.byte	0
 31850 e55d 00       		.byte	0
 31851 e55e 9D01     		.uleb128 0x9d
 31852 e560 94890000 		.long	0x8994
 31853 e564 03       		.byte	0x3
 31854 e565 B3E50000 		.long	0xe5b3
 31855 e569 35       		.uleb128 0x35
 31856 e56a 00000000 		.long	.LASF1113
 31857 e56e 169F0000 		.long	0x9f16
 31858 e572 35       		.uleb128 0x35
 31859 e573 00000000 		.long	.LASF1114
 31860 e577 A8930000 		.long	0x93a8
 31861 e57b A201     		.uleb128 0xa2
 31862 e57d 00000000 		.long	.LASF1679
 31863 e581 0D       		.byte	0xd
 31864 e582 4607     		.value	0x746
 31865 e584 169F0000 		.long	0x9f16
 31866 e588 A201     		.uleb128 0xa2
 31867 e58a 00000000 		.long	.LASF1680
 31868 e58e 0D       		.byte	0xd
 31869 e58f 4707     		.value	0x747
 31870 e591 169F0000 		.long	0x9f16
 31871 e595 A201     		.uleb128 0xa2
 31872 e597 00000000 		.long	.LASF1686
 31873 e59b 0D       		.byte	0xd
 31874 e59c 4707     		.value	0x747
 31875 e59e A8930000 		.long	0x93a8
 31876 e5a2 9B01     		.uleb128 0x9b
 31877 e5a4 A801     		.uleb128 0xa8
 31878 e5a6 5F5F6900 		.string	"__i"
 31879 e5aa 0D       		.byte	0xd
 31880 e5ab 4907     		.value	0x749
 31881 e5ad 169F0000 		.long	0x9f16
 31882 e5b1 00       		.byte	0
 31883 e5b2 00       		.byte	0
 31884 e5b3 9801     		.uleb128 0x98
 31885 e5b5 E8530000 		.long	0x53e8
 31886 e5b9 03       		.byte	0x3
 31887 e5ba C2E50000 		.long	0xe5c2
 31888 e5be CDE50000 		.long	0xe5cd
 31889 e5c2 9901     		.uleb128 0x99
 31890 e5c4 00000000 		.long	.LASF1661
 31891 e5c8 CDE50000 		.long	0xe5cd
 31892 e5cc 00       		.byte	0
 31893 e5cd 11       		.uleb128 0x11
 31894 e5ce 7FC50000 		.long	0xc57f
 31895 e5d2 9801     		.uleb128 0x98
 31896 e5d4 04540000 		.long	0x5404
 31897 e5d8 03       		.byte	0x3
 31898 e5d9 E1E50000 		.long	0xe5e1
GAS LISTING /tmp/ccJUMvuF.s 			page 861


 31899 e5dd ECE50000 		.long	0xe5ec
 31900 e5e1 9901     		.uleb128 0x99
 31901 e5e3 00000000 		.long	.LASF1661
 31902 e5e7 CDE50000 		.long	0xe5cd
 31903 e5eb 00       		.byte	0
 31904 e5ec 9801     		.uleb128 0x98
 31905 e5ee DA9D0000 		.long	0x9dda
 31906 e5f2 03       		.byte	0x3
 31907 e5f3 FBE50000 		.long	0xe5fb
 31908 e5f7 06E60000 		.long	0xe606
 31909 e5fb 9901     		.uleb128 0x99
 31910 e5fd 00000000 		.long	.LASF1661
 31911 e601 06E60000 		.long	0xe606
 31912 e605 00       		.byte	0
 31913 e606 11       		.uleb128 0x11
 31914 e607 F2C10000 		.long	0xc1f2
 31915 e60b 9801     		.uleb128 0x98
 31916 e60d 909D0000 		.long	0x9d90
 31917 e611 03       		.byte	0x3
 31918 e612 1AE60000 		.long	0xe61a
 31919 e616 36E60000 		.long	0xe636
 31920 e61a 9901     		.uleb128 0x99
 31921 e61c 00000000 		.long	.LASF1661
 31922 e620 7FD40000 		.long	0xd47f
 31923 e624 A001     		.uleb128 0xa0
 31924 e626 5F5F6E00 		.string	"__n"
 31925 e62a 07       		.byte	0x7
 31926 e62b 63       		.byte	0x63
 31927 e62c CC9C0000 		.long	0x9ccc
 31928 e630 09       		.uleb128 0x9
 31929 e631 C9B70000 		.long	0xb7c9
 31930 e635 00       		.byte	0
 31931 e636 9D01     		.uleb128 0x9d
 31932 e638 F8330000 		.long	0x33f8
 31933 e63c 03       		.byte	0x3
 31934 e63d 5CE60000 		.long	0xe65c
 31935 e641 A101     		.uleb128 0xa1
 31936 e643 5F5F6100 		.string	"__a"
 31937 e647 2F       		.byte	0x2f
 31938 e648 6401     		.value	0x164
 31939 e64a 5CE60000 		.long	0xe65c
 31940 e64e A101     		.uleb128 0xa1
 31941 e650 5F5F6E00 		.string	"__n"
 31942 e654 2F       		.byte	0x2f
 31943 e655 6401     		.value	0x164
 31944 e657 27330000 		.long	0x3327
 31945 e65b 00       		.byte	0
 31946 e65c 11       		.uleb128 0x11
 31947 e65d 10C20000 		.long	0xc210
 31948 e661 9801     		.uleb128 0x98
 31949 e663 FA360000 		.long	0x36fa
 31950 e667 03       		.byte	0x3
 31951 e668 70E60000 		.long	0xe670
 31952 e66c 89E60000 		.long	0xe689
 31953 e670 9901     		.uleb128 0x99
 31954 e672 00000000 		.long	.LASF1661
 31955 e676 0EE20000 		.long	0xe20e
GAS LISTING /tmp/ccJUMvuF.s 			page 862


 31956 e67a A001     		.uleb128 0xa0
 31957 e67c 5F5F6E00 		.string	"__n"
 31958 e680 06       		.byte	0x6
 31959 e681 A7       		.byte	0xa7
 31960 e682 85060000 		.long	0x685
 31961 e686 A901     		.uleb128 0xa9
 31962 e688 00       		.byte	0
 31963 e689 9801     		.uleb128 0x98
 31964 e68b 30350000 		.long	0x3530
 31965 e68f 03       		.byte	0x3
 31966 e690 98E60000 		.long	0xe698
 31967 e694 AFE60000 		.long	0xe6af
 31968 e698 9901     		.uleb128 0x99
 31969 e69a 00000000 		.long	.LASF1661
 31970 e69e 39E20000 		.long	0xe239
 31971 e6a2 A001     		.uleb128 0xa0
 31972 e6a4 5F5F6100 		.string	"__a"
 31973 e6a8 06       		.byte	0x6
 31974 e6a9 5A       		.byte	0x5a
 31975 e6aa AFE60000 		.long	0xe6af
 31976 e6ae 00       		.byte	0
 31977 e6af 11       		.uleb128 0x11
 31978 e6b0 28C20000 		.long	0xc228
 31979 e6b4 9D01     		.uleb128 0x9d
 31980 e6b6 C2890000 		.long	0x89c2
 31981 e6ba 03       		.byte	0x3
 31982 e6bb 22E70000 		.long	0xe722
 31983 e6bf 35       		.uleb128 0x35
 31984 e6c0 00000000 		.long	.LASF1117
 31985 e6c4 C9C10000 		.long	0xc1c9
 31986 e6c8 35       		.uleb128 0x35
 31987 e6c9 00000000 		.long	.LASF426
 31988 e6cd 53930000 		.long	0x9353
 31989 e6d1 18       		.uleb128 0x18
 31990 e6d2 5F547000 		.string	"_Tp"
 31991 e6d6 29000000 		.long	0x29
 31992 e6da A201     		.uleb128 0xa2
 31993 e6dc 00000000 		.long	.LASF1679
 31994 e6e0 14       		.byte	0x14
 31995 e6e1 F502     		.value	0x2f5
 31996 e6e3 C9C10000 		.long	0xc1c9
 31997 e6e7 A101     		.uleb128 0xa1
 31998 e6e9 5F5F6E00 		.string	"__n"
 31999 e6ed 14       		.byte	0x14
 32000 e6ee F502     		.value	0x2f5
 32001 e6f0 53930000 		.long	0x9353
 32002 e6f4 A201     		.uleb128 0xa2
 32003 e6f6 00000000 		.long	.LASF1431
 32004 e6fa 14       		.byte	0x14
 32005 e6fb F502     		.value	0x2f5
 32006 e6fd 22E70000 		.long	0xe722
 32007 e701 9B01     		.uleb128 0x9b
 32008 e703 A301     		.uleb128 0xa3
 32009 e705 00000000 		.long	.LASF1688
 32010 e709 14       		.byte	0x14
 32011 e70a F702     		.value	0x2f7
 32012 e70c D5C10000 		.long	0xc1d5
GAS LISTING /tmp/ccJUMvuF.s 			page 863


 32013 e710 9B01     		.uleb128 0x9b
 32014 e712 A301     		.uleb128 0xa3
 32015 e714 00000000 		.long	.LASF1689
 32016 e718 14       		.byte	0x14
 32017 e719 F802     		.value	0x2f8
 32018 e71b 53930000 		.long	0x9353
 32019 e71f 00       		.byte	0
 32020 e720 00       		.byte	0
 32021 e721 00       		.byte	0
 32022 e722 11       		.uleb128 0x11
 32023 e723 E0C10000 		.long	0xc1e0
 32024 e727 9D01     		.uleb128 0x9d
 32025 e729 FD890000 		.long	0x89fd
 32026 e72d 03       		.byte	0x3
 32027 e72e 63E70000 		.long	0xe763
 32028 e732 18       		.uleb128 0x18
 32029 e733 5F547000 		.string	"_Tp"
 32030 e737 29000000 		.long	0x29
 32031 e73b A001     		.uleb128 0xa0
 32032 e73d 5F5F6100 		.string	"__a"
 32033 e741 12       		.byte	0x12
 32034 e742 A6       		.byte	0xa6
 32035 e743 63E70000 		.long	0xe763
 32036 e747 A001     		.uleb128 0xa0
 32037 e749 5F5F6200 		.string	"__b"
 32038 e74d 12       		.byte	0x12
 32039 e74e A6       		.byte	0xa6
 32040 e74f 68E70000 		.long	0xe768
 32041 e753 9B01     		.uleb128 0x9b
 32042 e755 9C01     		.uleb128 0x9c
 32043 e757 00000000 		.long	.LASF1688
 32044 e75b 12       		.byte	0x12
 32045 e75c AF       		.byte	0xaf
 32046 e75d 29000000 		.long	0x29
 32047 e761 00       		.byte	0
 32048 e762 00       		.byte	0
 32049 e763 11       		.uleb128 0x11
 32050 e764 DAC10000 		.long	0xc1da
 32051 e768 11       		.uleb128 0x11
 32052 e769 DAC10000 		.long	0xc1da
 32053 e76d 9D01     		.uleb128 0x9d
 32054 e76f 1C8A0000 		.long	0x8a1c
 32055 e773 03       		.byte	0x3
 32056 e774 A3E70000 		.long	0xe7a3
 32057 e778 35       		.uleb128 0x35
 32058 e779 00000000 		.long	.LASF1120
 32059 e77d 169F0000 		.long	0x9f16
 32060 e781 35       		.uleb128 0x35
 32061 e782 00000000 		.long	.LASF1121
 32062 e786 169F0000 		.long	0x9f16
 32063 e78a A001     		.uleb128 0xa0
 32064 e78c 5F5F6100 		.string	"__a"
 32065 e790 14       		.byte	0x14
 32066 e791 78       		.byte	0x78
 32067 e792 169F0000 		.long	0x9f16
 32068 e796 A001     		.uleb128 0xa0
 32069 e798 5F5F6200 		.string	"__b"
GAS LISTING /tmp/ccJUMvuF.s 			page 864


 32070 e79c 14       		.byte	0x14
 32071 e79d 78       		.byte	0x78
 32072 e79e 169F0000 		.long	0x9f16
 32073 e7a2 00       		.byte	0
 32074 e7a3 9D01     		.uleb128 0x9d
 32075 e7a5 8EAB0000 		.long	0xab8e
 32076 e7a9 03       		.byte	0x3
 32077 e7aa DBE70000 		.long	0xe7db
 32078 e7ae 35       		.uleb128 0x35
 32079 e7af 00000000 		.long	.LASF745
 32080 e7b3 C9C10000 		.long	0xc1c9
 32081 e7b7 35       		.uleb128 0x35
 32082 e7b8 00000000 		.long	.LASF1248
 32083 e7bc 76370000 		.long	0x3776
 32084 e7c0 A201     		.uleb128 0xa2
 32085 e7c2 00000000 		.long	.LASF1676
 32086 e7c6 0C       		.byte	0xc
 32087 e7c7 4C03     		.value	0x34c
 32088 e7c9 DBE70000 		.long	0xe7db
 32089 e7cd A201     		.uleb128 0xa2
 32090 e7cf 00000000 		.long	.LASF1677
 32091 e7d3 0C       		.byte	0xc
 32092 e7d4 4D03     		.value	0x34d
 32093 e7d6 E0E70000 		.long	0xe7e0
 32094 e7da 00       		.byte	0
 32095 e7db 11       		.uleb128 0x11
 32096 e7dc 24D50000 		.long	0xd524
 32097 e7e0 11       		.uleb128 0x11
 32098 e7e1 24D50000 		.long	0xd524
 32099 e7e5 9D01     		.uleb128 0x9d
 32100 e7e7 448A0000 		.long	0x8a44
 32101 e7eb 01       		.byte	0x1
 32102 e7ec 37E80000 		.long	0xe837
 32103 e7f0 35       		.uleb128 0x35
 32104 e7f1 00000000 		.long	.LASF1113
 32105 e7f5 169F0000 		.long	0x9f16
 32106 e7f9 35       		.uleb128 0x35
 32107 e7fa 00000000 		.long	.LASF1114
 32108 e7fe A8930000 		.long	0x93a8
 32109 e802 A201     		.uleb128 0xa2
 32110 e804 00000000 		.long	.LASF1679
 32111 e808 0D       		.byte	0xd
 32112 e809 6707     		.value	0x767
 32113 e80b 169F0000 		.long	0x9f16
 32114 e80f A201     		.uleb128 0xa2
 32115 e811 00000000 		.long	.LASF1680
 32116 e815 0D       		.byte	0xd
 32117 e816 6807     		.value	0x768
 32118 e818 169F0000 		.long	0x9f16
 32119 e81c A201     		.uleb128 0xa2
 32120 e81e 00000000 		.long	.LASF1690
 32121 e822 0D       		.byte	0xd
 32122 e823 6907     		.value	0x769
 32123 e825 169F0000 		.long	0x9f16
 32124 e829 A201     		.uleb128 0xa2
 32125 e82b 00000000 		.long	.LASF1686
 32126 e82f 0D       		.byte	0xd
GAS LISTING /tmp/ccJUMvuF.s 			page 865


 32127 e830 6907     		.value	0x769
 32128 e832 A8930000 		.long	0x93a8
 32129 e836 00       		.byte	0
 32130 e837 9D01     		.uleb128 0x9d
 32131 e839 BBAB0000 		.long	0xabbb
 32132 e83d 03       		.byte	0x3
 32133 e83e 6FE80000 		.long	0xe86f
 32134 e842 35       		.uleb128 0x35
 32135 e843 00000000 		.long	.LASF745
 32136 e847 C9C10000 		.long	0xc1c9
 32137 e84b 35       		.uleb128 0x35
 32138 e84c 00000000 		.long	.LASF1248
 32139 e850 76370000 		.long	0x3776
 32140 e854 A201     		.uleb128 0xa2
 32141 e856 00000000 		.long	.LASF1676
 32142 e85a 0C       		.byte	0xc
 32143 e85b 8F03     		.value	0x38f
 32144 e85d 6FE80000 		.long	0xe86f
 32145 e861 A201     		.uleb128 0xa2
 32146 e863 00000000 		.long	.LASF1677
 32147 e867 0C       		.byte	0xc
 32148 e868 9003     		.value	0x390
 32149 e86a 74E80000 		.long	0xe874
 32150 e86e 00       		.byte	0
 32151 e86f 11       		.uleb128 0x11
 32152 e870 24D50000 		.long	0xd524
 32153 e874 11       		.uleb128 0x11
 32154 e875 24D50000 		.long	0xd524
 32155 e879 9801     		.uleb128 0x98
 32156 e87b B1A00000 		.long	0xa0b1
 32157 e87f 03       		.byte	0x3
 32158 e880 88E80000 		.long	0xe888
 32159 e884 A0E80000 		.long	0xe8a0
 32160 e888 9901     		.uleb128 0x99
 32161 e88a 00000000 		.long	.LASF1661
 32162 e88e EBD40000 		.long	0xd4eb
 32163 e892 A101     		.uleb128 0xa1
 32164 e894 5F5F6E00 		.string	"__n"
 32165 e898 0C       		.byte	0xc
 32166 e899 0D03     		.value	0x30d
 32167 e89b 4B9F0000 		.long	0x9f4b
 32168 e89f 00       		.byte	0
 32169 e8a0 9801     		.uleb128 0x98
 32170 e8a2 F9A00000 		.long	0xa0f9
 32171 e8a6 03       		.byte	0x3
 32172 e8a7 AFE80000 		.long	0xe8af
 32173 e8ab C7E80000 		.long	0xe8c7
 32174 e8af 9901     		.uleb128 0x99
 32175 e8b1 00000000 		.long	.LASF1661
 32176 e8b5 EBD40000 		.long	0xd4eb
 32177 e8b9 A101     		.uleb128 0xa1
 32178 e8bb 5F5F6E00 		.string	"__n"
 32179 e8bf 0C       		.byte	0xc
 32180 e8c0 1503     		.value	0x315
 32181 e8c2 4B9F0000 		.long	0x9f4b
 32182 e8c6 00       		.byte	0
 32183 e8c7 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 866


 32184 e8c9 E4810000 		.long	0x81e4
 32185 e8cd 03       		.byte	0x3
 32186 e8ce DFE80000 		.long	0xe8df
 32187 e8d2 9E01     		.uleb128 0x9e
 32188 e8d4 00000000 		.long	.LASF1685
 32189 e8d8 31       		.byte	0x31
 32190 e8d9 D4       		.byte	0xd4
 32191 e8da 169F0000 		.long	0x9f16
 32192 e8de 00       		.byte	0
 32193 e8df 9801     		.uleb128 0x98
 32194 e8e1 88A40000 		.long	0xa488
 32195 e8e5 03       		.byte	0x3
 32196 e8e6 EEE80000 		.long	0xe8ee
 32197 e8ea F9E80000 		.long	0xe8f9
 32198 e8ee 9901     		.uleb128 0x99
 32199 e8f0 00000000 		.long	.LASF1661
 32200 e8f4 F9E80000 		.long	0xe8f9
 32201 e8f8 00       		.byte	0
 32202 e8f9 11       		.uleb128 0x11
 32203 e8fa C1C20000 		.long	0xc2c1
 32204 e8fe 9801     		.uleb128 0x98
 32205 e900 3EA40000 		.long	0xa43e
 32206 e904 03       		.byte	0x3
 32207 e905 0DE90000 		.long	0xe90d
 32208 e909 29E90000 		.long	0xe929
 32209 e90d 9901     		.uleb128 0x99
 32210 e90f 00000000 		.long	.LASF1661
 32211 e913 5BD60000 		.long	0xd65b
 32212 e917 A001     		.uleb128 0xa0
 32213 e919 5F5F6E00 		.string	"__n"
 32214 e91d 07       		.byte	0x7
 32215 e91e 63       		.byte	0x63
 32216 e91f 7AA30000 		.long	0xa37a
 32217 e923 09       		.uleb128 0x9
 32218 e924 C9B70000 		.long	0xb7c9
 32219 e928 00       		.byte	0
 32220 e929 9D01     		.uleb128 0x9d
 32221 e92b 75440000 		.long	0x4475
 32222 e92f 03       		.byte	0x3
 32223 e930 4FE90000 		.long	0xe94f
 32224 e934 A101     		.uleb128 0xa1
 32225 e936 5F5F6100 		.string	"__a"
 32226 e93a 2F       		.byte	0x2f
 32227 e93b 6401     		.value	0x164
 32228 e93d 4FE90000 		.long	0xe94f
 32229 e941 A101     		.uleb128 0xa1
 32230 e943 5F5F6E00 		.string	"__n"
 32231 e947 2F       		.byte	0x2f
 32232 e948 6401     		.value	0x164
 32233 e94a A4430000 		.long	0x43a4
 32234 e94e 00       		.byte	0
 32235 e94f 11       		.uleb128 0x11
 32236 e950 DFC20000 		.long	0xc2df
 32237 e954 9801     		.uleb128 0x98
 32238 e956 6C470000 		.long	0x476c
 32239 e95a 03       		.byte	0x3
 32240 e95b 63E90000 		.long	0xe963
GAS LISTING /tmp/ccJUMvuF.s 			page 867


 32241 e95f 7CE90000 		.long	0xe97c
 32242 e963 9901     		.uleb128 0x99
 32243 e965 00000000 		.long	.LASF1661
 32244 e969 BAE00000 		.long	0xe0ba
 32245 e96d A001     		.uleb128 0xa0
 32246 e96f 5F5F6E00 		.string	"__n"
 32247 e973 06       		.byte	0x6
 32248 e974 A7       		.byte	0xa7
 32249 e975 85060000 		.long	0x685
 32250 e979 A901     		.uleb128 0xa9
 32251 e97b 00       		.byte	0
 32252 e97c 9801     		.uleb128 0x98
 32253 e97e A2450000 		.long	0x45a2
 32254 e982 03       		.byte	0x3
 32255 e983 8BE90000 		.long	0xe98b
 32256 e987 A2E90000 		.long	0xe9a2
 32257 e98b 9901     		.uleb128 0x99
 32258 e98d 00000000 		.long	.LASF1661
 32259 e991 E5E00000 		.long	0xe0e5
 32260 e995 A001     		.uleb128 0xa0
 32261 e997 5F5F6100 		.string	"__a"
 32262 e99b 06       		.byte	0x6
 32263 e99c 5A       		.byte	0x5a
 32264 e99d A2E90000 		.long	0xe9a2
 32265 e9a1 00       		.byte	0
 32266 e9a2 11       		.uleb128 0x11
 32267 e9a3 F7C20000 		.long	0xc2f7
 32268 e9a7 9D01     		.uleb128 0x9d
 32269 e9a9 7B8A0000 		.long	0x8a7b
 32270 e9ad 03       		.byte	0x3
 32271 e9ae 15EA0000 		.long	0xea15
 32272 e9b2 35       		.uleb128 0x35
 32273 e9b3 00000000 		.long	.LASF1117
 32274 e9b7 98C20000 		.long	0xc298
 32275 e9bb 35       		.uleb128 0x35
 32276 e9bc 00000000 		.long	.LASF426
 32277 e9c0 53930000 		.long	0x9353
 32278 e9c4 18       		.uleb128 0x18
 32279 e9c5 5F547000 		.string	"_Tp"
 32280 e9c9 68930000 		.long	0x9368
 32281 e9cd A201     		.uleb128 0xa2
 32282 e9cf 00000000 		.long	.LASF1679
 32283 e9d3 14       		.byte	0x14
 32284 e9d4 F502     		.value	0x2f5
 32285 e9d6 98C20000 		.long	0xc298
 32286 e9da A101     		.uleb128 0xa1
 32287 e9dc 5F5F6E00 		.string	"__n"
 32288 e9e0 14       		.byte	0x14
 32289 e9e1 F502     		.value	0x2f5
 32290 e9e3 53930000 		.long	0x9353
 32291 e9e7 A201     		.uleb128 0xa2
 32292 e9e9 00000000 		.long	.LASF1431
 32293 e9ed 14       		.byte	0x14
 32294 e9ee F502     		.value	0x2f5
 32295 e9f0 15EA0000 		.long	0xea15
 32296 e9f4 9B01     		.uleb128 0x9b
 32297 e9f6 A301     		.uleb128 0xa3
GAS LISTING /tmp/ccJUMvuF.s 			page 868


 32298 e9f8 00000000 		.long	.LASF1688
 32299 e9fc 14       		.byte	0x14
 32300 e9fd F702     		.value	0x2f7
 32301 e9ff A4C20000 		.long	0xc2a4
 32302 ea03 9B01     		.uleb128 0x9b
 32303 ea05 A301     		.uleb128 0xa3
 32304 ea07 00000000 		.long	.LASF1689
 32305 ea0b 14       		.byte	0x14
 32306 ea0c F802     		.value	0x2f8
 32307 ea0e 53930000 		.long	0x9353
 32308 ea12 00       		.byte	0
 32309 ea13 00       		.byte	0
 32310 ea14 00       		.byte	0
 32311 ea15 11       		.uleb128 0x11
 32312 ea16 AFC20000 		.long	0xc2af
 32313 ea1a 9D01     		.uleb128 0x9d
 32314 ea1c B68A0000 		.long	0x8ab6
 32315 ea20 03       		.byte	0x3
 32316 ea21 4CEA0000 		.long	0xea4c
 32317 ea25 19       		.uleb128 0x19
 32318 ea26 5F5F6900 		.string	"__i"
 32319 ea2a 53930000 		.long	0x9353
 32320 ea2e 00       		.byte	0
 32321 ea2f 6A       		.uleb128 0x6a
 32322 ea30 00000000 		.long	.LASF804
 32323 ea34 3EEA0000 		.long	0xea3e
 32324 ea38 68       		.uleb128 0x68
 32325 ea39 C92C0000 		.long	0x2cc9
 32326 ea3d 00       		.byte	0
 32327 ea3e A101     		.uleb128 0xa1
 32328 ea40 5F5F7400 		.string	"__t"
 32329 ea44 0B       		.byte	0xb
 32330 ea45 F402     		.value	0x2f4
 32331 ea47 4CEA0000 		.long	0xea4c
 32332 ea4b 00       		.byte	0
 32333 ea4c 11       		.uleb128 0x11
 32334 ea4d 23C60000 		.long	0xc623
 32335 ea51 7E       		.uleb128 0x7e
 32336 ea52 08       		.byte	0x8
 32337 ea53 E58A0000 		.long	0x8ae5
 32338 ea57 9801     		.uleb128 0x98
 32339 ea59 A97F0000 		.long	0x7fa9
 32340 ea5d 03       		.byte	0x3
 32341 ea5e 78EA0000 		.long	0xea78
 32342 ea62 95EA0000 		.long	0xea95
 32343 ea66 35       		.uleb128 0x35
 32344 ea67 00000000 		.long	.LASF1039
 32345 ea6b D9C50000 		.long	0xc5d9
 32346 ea6f 35       		.uleb128 0x35
 32347 ea70 00000000 		.long	.LASF1040
 32348 ea74 31240000 		.long	0x2431
 32349 ea78 9901     		.uleb128 0x99
 32350 ea7a 00000000 		.long	.LASF1661
 32351 ea7e 95EA0000 		.long	0xea95
 32352 ea82 A201     		.uleb128 0xa2
 32353 ea84 00000000 		.long	.LASF1691
 32354 ea88 0A       		.byte	0xa
GAS LISTING /tmp/ccJUMvuF.s 			page 869


 32355 ea89 9D04     		.value	0x49d
 32356 ea8b 9AEA0000 		.long	0xea9a
 32357 ea8f 09       		.uleb128 0x9
 32358 ea90 9FEA0000 		.long	0xea9f
 32359 ea94 00       		.byte	0
 32360 ea95 11       		.uleb128 0x11
 32361 ea96 51EA0000 		.long	0xea51
 32362 ea9a 11       		.uleb128 0x11
 32363 ea9b D9C50000 		.long	0xc5d9
 32364 ea9f 11       		.uleb128 0x11
 32365 eaa0 D6C00000 		.long	0xc0d6
 32366 eaa4 9801     		.uleb128 0x98
 32367 eaa6 4B550000 		.long	0x554b
 32368 eaaa 03       		.byte	0x3
 32369 eaab BCEA0000 		.long	0xeabc
 32370 eaaf D4EA0000 		.long	0xead4
 32371 eab3 35       		.uleb128 0x35
 32372 eab4 00000000 		.long	.LASF768
 32373 eab8 C92C0000 		.long	0x2cc9
 32374 eabc 9901     		.uleb128 0x99
 32375 eabe 00000000 		.long	.LASF1661
 32376 eac2 D4EA0000 		.long	0xead4
 32377 eac6 A201     		.uleb128 0xa2
 32378 eac8 00000000 		.long	.LASF1692
 32379 eacc 04       		.byte	0x4
 32380 eacd EB06     		.value	0x6eb
 32381 eacf D9EA0000 		.long	0xead9
 32382 ead3 00       		.byte	0
 32383 ead4 11       		.uleb128 0x11
 32384 ead5 85C50000 		.long	0xc585
 32385 ead9 11       		.uleb128 0x11
 32386 eada D9C50000 		.long	0xc5d9
 32387 eade 9D01     		.uleb128 0x9d
 32388 eae0 EF8A0000 		.long	0x8aef
 32389 eae4 01       		.byte	0x1
 32390 eae5 F4EA0000 		.long	0xeaf4
 32391 eae9 6B       		.uleb128 0x6b
 32392 eaea 00000000 		.long	.LASF804
 32393 eaee A501     		.uleb128 0xa5
 32394 eaf0 0B       		.byte	0xb
 32395 eaf1 8603     		.value	0x386
 32396 eaf3 00       		.byte	0
 32397 eaf4 8101     		.uleb128 0x81
 32398 eaf6 08       		.byte	0x8
 32399 eaf7 31240000 		.long	0x2431
 32400 eafb 9801     		.uleb128 0x98
 32401 eafd 34570000 		.long	0x5734
 32402 eb01 03       		.byte	0x3
 32403 eb02 2BEB0000 		.long	0xeb2b
 32404 eb06 48EB0000 		.long	0xeb48
 32405 eb0a 35       		.uleb128 0x35
 32406 eb0b 00000000 		.long	.LASF786
 32407 eb0f 28930000 		.long	0x9328
 32408 eb13 6B       		.uleb128 0x6b
 32409 eb14 00000000 		.long	.LASF788
 32410 eb18 6C       		.uleb128 0x6c
 32411 eb19 00000000 		.long	.LASF1693
GAS LISTING /tmp/ccJUMvuF.s 			page 870


 32412 eb1d 0A       		.byte	0xa
 32413 eb1e EB04     		.value	0x4eb
 32414 eb20 2BEB0000 		.long	0xeb2b
 32415 eb24 6D       		.uleb128 0x6d
 32416 eb25 53930000 		.long	0x9353
 32417 eb29 00       		.byte	0
 32418 eb2a 00       		.byte	0
 32419 eb2b 9901     		.uleb128 0x99
 32420 eb2d 00000000 		.long	.LASF1661
 32421 eb31 5BD90000 		.long	0xd95b
 32422 eb35 A201     		.uleb128 0xa2
 32423 eb37 00000000 		.long	.LASF1694
 32424 eb3b 0A       		.byte	0xa
 32425 eb3c ED04     		.value	0x4ed
 32426 eb3e 48EB0000 		.long	0xeb48
 32427 eb42 09       		.uleb128 0x9
 32428 eb43 3D580000 		.long	0x583d
 32429 eb47 00       		.byte	0
 32430 eb48 11       		.uleb128 0x11
 32431 eb49 F4EA0000 		.long	0xeaf4
 32432 eb4d 9801     		.uleb128 0x98
 32433 eb4f 39A60000 		.long	0xa639
 32434 eb53 03       		.byte	0x3
 32435 eb54 5CEB0000 		.long	0xeb5c
 32436 eb58 67EB0000 		.long	0xeb67
 32437 eb5c 9901     		.uleb128 0x99
 32438 eb5e 00000000 		.long	.LASF1661
 32439 eb62 04DD0000 		.long	0xdd04
 32440 eb66 00       		.byte	0
 32441 eb67 9801     		.uleb128 0x98
 32442 eb69 7A570000 		.long	0x577a
 32443 eb6d 03       		.byte	0x3
 32444 eb6e 84EB0000 		.long	0xeb84
 32445 eb72 94EB0000 		.long	0xeb94
 32446 eb76 6B       		.uleb128 0x6b
 32447 eb77 00000000 		.long	.LASF788
 32448 eb7b 35       		.uleb128 0x35
 32449 eb7c 00000000 		.long	.LASF786
 32450 eb80 28930000 		.long	0x9328
 32451 eb84 9901     		.uleb128 0x99
 32452 eb86 00000000 		.long	.LASF1661
 32453 eb8a 5BD90000 		.long	0xd95b
 32454 eb8e A501     		.uleb128 0xa5
 32455 eb90 0A       		.byte	0xa
 32456 eb91 2705     		.value	0x527
 32457 eb93 00       		.byte	0
 32458 eb94 9801     		.uleb128 0x98
 32459 eb96 77A60000 		.long	0xa677
 32460 eb9a 03       		.byte	0x3
 32461 eb9b A3EB0000 		.long	0xeba3
 32462 eb9f AEEB0000 		.long	0xebae
 32463 eba3 9901     		.uleb128 0x99
 32464 eba5 00000000 		.long	.LASF1661
 32465 eba9 93D70000 		.long	0xd793
 32466 ebad 00       		.byte	0
 32467 ebae 7F       		.uleb128 0x7f
 32468 ebaf 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 871


 32469 ebb0 23A80000 		.long	0xa823
 32470 ebb4 9D01     		.uleb128 0x9d
 32471 ebb6 E8AB0000 		.long	0xabe8
 32472 ebba 03       		.byte	0x3
 32473 ebbb ECEB0000 		.long	0xebec
 32474 ebbf 35       		.uleb128 0x35
 32475 ebc0 00000000 		.long	.LASF745
 32476 ebc4 98C20000 		.long	0xc298
 32477 ebc8 35       		.uleb128 0x35
 32478 ebc9 00000000 		.long	.LASF1248
 32479 ebcd E8470000 		.long	0x47e8
 32480 ebd1 A201     		.uleb128 0xa2
 32481 ebd3 00000000 		.long	.LASF1676
 32482 ebd7 0C       		.byte	0xc
 32483 ebd8 3D03     		.value	0x33d
 32484 ebda ECEB0000 		.long	0xebec
 32485 ebde A201     		.uleb128 0xa2
 32486 ebe0 00000000 		.long	.LASF1677
 32487 ebe4 0C       		.byte	0xc
 32488 ebe5 3E03     		.value	0x33e
 32489 ebe7 F1EB0000 		.long	0xebf1
 32490 ebeb 00       		.byte	0
 32491 ebec 11       		.uleb128 0x11
 32492 ebed AEEB0000 		.long	0xebae
 32493 ebf1 11       		.uleb128 0x11
 32494 ebf2 AEEB0000 		.long	0xebae
 32495 ebf6 9801     		.uleb128 0x98
 32496 ebf8 42A90000 		.long	0xa942
 32497 ebfc 03       		.byte	0x3
 32498 ebfd 05EC0000 		.long	0xec05
 32499 ec01 10EC0000 		.long	0xec10
 32500 ec05 9901     		.uleb128 0x99
 32501 ec07 00000000 		.long	.LASF1661
 32502 ec0b 10EC0000 		.long	0xec10
 32503 ec0f 00       		.byte	0
 32504 ec10 11       		.uleb128 0x11
 32505 ec11 1EC80000 		.long	0xc81e
 32506 ec15 9801     		.uleb128 0x98
 32507 ec17 F8A80000 		.long	0xa8f8
 32508 ec1b 03       		.byte	0x3
 32509 ec1c 24EC0000 		.long	0xec24
 32510 ec20 40EC0000 		.long	0xec40
 32511 ec24 9901     		.uleb128 0x99
 32512 ec26 00000000 		.long	.LASF1661
 32513 ec2a 92DB0000 		.long	0xdb92
 32514 ec2e A001     		.uleb128 0xa0
 32515 ec30 5F5F6E00 		.string	"__n"
 32516 ec34 07       		.byte	0x7
 32517 ec35 63       		.byte	0x63
 32518 ec36 34A80000 		.long	0xa834
 32519 ec3a 09       		.uleb128 0x9
 32520 ec3b C9B70000 		.long	0xb7c9
 32521 ec3f 00       		.byte	0
 32522 ec40 9D01     		.uleb128 0x9d
 32523 ec42 7A710000 		.long	0x717a
 32524 ec46 03       		.byte	0x3
 32525 ec47 66EC0000 		.long	0xec66
GAS LISTING /tmp/ccJUMvuF.s 			page 872


 32526 ec4b A101     		.uleb128 0xa1
 32527 ec4d 5F5F6100 		.string	"__a"
 32528 ec51 2F       		.byte	0x2f
 32529 ec52 6401     		.value	0x164
 32530 ec54 66EC0000 		.long	0xec66
 32531 ec58 A101     		.uleb128 0xa1
 32532 ec5a 5F5F6E00 		.string	"__n"
 32533 ec5e 2F       		.byte	0x2f
 32534 ec5f 6401     		.value	0x164
 32535 ec61 A9700000 		.long	0x70a9
 32536 ec65 00       		.byte	0
 32537 ec66 11       		.uleb128 0x11
 32538 ec67 3CC80000 		.long	0xc83c
 32539 ec6b 9801     		.uleb128 0x98
 32540 ec6d 71740000 		.long	0x7471
 32541 ec71 03       		.byte	0x3
 32542 ec72 7AEC0000 		.long	0xec7a
 32543 ec76 93EC0000 		.long	0xec93
 32544 ec7a 9901     		.uleb128 0x99
 32545 ec7c 00000000 		.long	.LASF1661
 32546 ec80 00E40000 		.long	0xe400
 32547 ec84 A001     		.uleb128 0xa0
 32548 ec86 5F5F6E00 		.string	"__n"
 32549 ec8a 06       		.byte	0x6
 32550 ec8b A7       		.byte	0xa7
 32551 ec8c 85060000 		.long	0x685
 32552 ec90 A901     		.uleb128 0xa9
 32553 ec92 00       		.byte	0
 32554 ec93 9801     		.uleb128 0x98
 32555 ec95 A7720000 		.long	0x72a7
 32556 ec99 03       		.byte	0x3
 32557 ec9a A2EC0000 		.long	0xeca2
 32558 ec9e B9EC0000 		.long	0xecb9
 32559 eca2 9901     		.uleb128 0x99
 32560 eca4 00000000 		.long	.LASF1661
 32561 eca8 2BE40000 		.long	0xe42b
 32562 ecac A001     		.uleb128 0xa0
 32563 ecae 5F5F6100 		.string	"__a"
 32564 ecb2 06       		.byte	0x6
 32565 ecb3 5A       		.byte	0x5a
 32566 ecb4 B9EC0000 		.long	0xecb9
 32567 ecb8 00       		.byte	0
 32568 ecb9 11       		.uleb128 0x11
 32569 ecba 54C80000 		.long	0xc854
 32570 ecbe 9801     		.uleb128 0x98
 32571 ecc0 B6740000 		.long	0x74b6
 32572 ecc4 03       		.byte	0x3
 32573 ecc5 CDEC0000 		.long	0xeccd
 32574 ecc9 E4EC0000 		.long	0xece4
 32575 eccd 9901     		.uleb128 0x99
 32576 eccf 00000000 		.long	.LASF1661
 32577 ecd3 00E40000 		.long	0xe400
 32578 ecd7 A001     		.uleb128 0xa0
 32579 ecd9 5F5F6E00 		.string	"__n"
 32580 ecdd 06       		.byte	0x6
 32581 ecde B7       		.byte	0xb7
 32582 ecdf 85060000 		.long	0x685
GAS LISTING /tmp/ccJUMvuF.s 			page 873


 32583 ece3 00       		.byte	0
 32584 ece4 9D01     		.uleb128 0x9d
 32585 ece6 49820000 		.long	0x8249
 32586 ecea 03       		.byte	0x3
 32587 eceb FCEC0000 		.long	0xecfc
 32588 ecef 9E01     		.uleb128 0x9e
 32589 ecf1 00000000 		.long	.LASF1685
 32590 ecf5 31       		.byte	0x31
 32591 ecf6 D4       		.byte	0xd4
 32592 ecf7 C9C10000 		.long	0xc1c9
 32593 ecfb 00       		.byte	0
 32594 ecfc 9D01     		.uleb128 0x9d
 32595 ecfe 058B0000 		.long	0x8b05
 32596 ed02 03       		.byte	0x3
 32597 ed03 1EED0000 		.long	0xed1e
 32598 ed07 35       		.uleb128 0x35
 32599 ed08 00000000 		.long	.LASF745
 32600 ed0c C9C10000 		.long	0xc1c9
 32601 ed10 A201     		.uleb128 0xa2
 32602 ed12 00000000 		.long	.LASF1685
 32603 ed16 14       		.byte	0x14
 32604 ed17 1601     		.value	0x116
 32605 ed19 C9C10000 		.long	0xc1c9
 32606 ed1d 00       		.byte	0
 32607 ed1e 9D01     		.uleb128 0x9d
 32608 ed20 248B0000 		.long	0x8b24
 32609 ed24 03       		.byte	0x3
 32610 ed25 6CED0000 		.long	0xed6c
 32611 ed29 18       		.uleb128 0x18
 32612 ed2a 5F4F4900 		.string	"_OI"
 32613 ed2e C9C10000 		.long	0xc1c9
 32614 ed32 35       		.uleb128 0x35
 32615 ed33 00000000 		.long	.LASF426
 32616 ed37 53930000 		.long	0x9353
 32617 ed3b 18       		.uleb128 0x18
 32618 ed3c 5F547000 		.string	"_Tp"
 32619 ed40 29000000 		.long	0x29
 32620 ed44 A201     		.uleb128 0xa2
 32621 ed46 00000000 		.long	.LASF1679
 32622 ed4a 14       		.byte	0x14
 32623 ed4b 1803     		.value	0x318
 32624 ed4d C9C10000 		.long	0xc1c9
 32625 ed51 A101     		.uleb128 0xa1
 32626 ed53 5F5F6E00 		.string	"__n"
 32627 ed57 14       		.byte	0x14
 32628 ed58 1803     		.value	0x318
 32629 ed5a 53930000 		.long	0x9353
 32630 ed5e A201     		.uleb128 0xa2
 32631 ed60 00000000 		.long	.LASF1431
 32632 ed64 14       		.byte	0x14
 32633 ed65 1803     		.value	0x318
 32634 ed67 6CED0000 		.long	0xed6c
 32635 ed6b 00       		.byte	0
 32636 ed6c 11       		.uleb128 0x11
 32637 ed6d E0C10000 		.long	0xc1e0
 32638 ed71 9D01     		.uleb128 0x9d
 32639 ed73 FF2A0000 		.long	0x2aff
GAS LISTING /tmp/ccJUMvuF.s 			page 874


 32640 ed77 03       		.byte	0x3
 32641 ed78 ABED0000 		.long	0xedab
 32642 ed7c 35       		.uleb128 0x35
 32643 ed7d 00000000 		.long	.LASF421
 32644 ed81 C9C10000 		.long	0xc1c9
 32645 ed85 35       		.uleb128 0x35
 32646 ed86 00000000 		.long	.LASF426
 32647 ed8a 53930000 		.long	0x9353
 32648 ed8e A201     		.uleb128 0xa2
 32649 ed90 00000000 		.long	.LASF1679
 32650 ed94 2D       		.byte	0x2d
 32651 ed95 1202     		.value	0x212
 32652 ed97 C9C10000 		.long	0xc1c9
 32653 ed9b A101     		.uleb128 0xa1
 32654 ed9d 5F5F6E00 		.string	"__n"
 32655 eda1 2D       		.byte	0x2d
 32656 eda2 1202     		.value	0x212
 32657 eda4 53930000 		.long	0x9353
 32658 eda8 A901     		.uleb128 0xa9
 32659 edaa 00       		.byte	0
 32660 edab 9D01     		.uleb128 0x9d
 32661 edad 5F8B0000 		.long	0x8b5f
 32662 edb1 03       		.byte	0x3
 32663 edb2 F3ED0000 		.long	0xedf3
 32664 edb6 35       		.uleb128 0x35
 32665 edb7 00000000 		.long	.LASF421
 32666 edbb C9C10000 		.long	0xc1c9
 32667 edbf 35       		.uleb128 0x35
 32668 edc0 00000000 		.long	.LASF426
 32669 edc4 53930000 		.long	0x9353
 32670 edc8 A201     		.uleb128 0xa2
 32671 edca 00000000 		.long	.LASF1679
 32672 edce 2D       		.byte	0x2d
 32673 edcf 3102     		.value	0x231
 32674 edd1 C9C10000 		.long	0xc1c9
 32675 edd5 A101     		.uleb128 0xa1
 32676 edd7 5F5F6E00 		.string	"__n"
 32677 eddb 2D       		.byte	0x2d
 32678 eddc 3102     		.value	0x231
 32679 edde 53930000 		.long	0x9353
 32680 ede2 9B01     		.uleb128 0x9b
 32681 ede4 A301     		.uleb128 0xa3
 32682 ede6 00000000 		.long	.LASF1695
 32683 edea 2D       		.byte	0x2d
 32684 edeb 3602     		.value	0x236
 32685 eded 3D930000 		.long	0x933d
 32686 edf1 00       		.byte	0
 32687 edf2 00       		.byte	0
 32688 edf3 9D01     		.uleb128 0x9d
 32689 edf5 888B0000 		.long	0x8b88
 32690 edf9 03       		.byte	0x3
 32691 edfa 39EE0000 		.long	0xee39
 32692 edfe 35       		.uleb128 0x35
 32693 edff 00000000 		.long	.LASF421
 32694 ee03 C9C10000 		.long	0xc1c9
 32695 ee07 35       		.uleb128 0x35
 32696 ee08 00000000 		.long	.LASF426
GAS LISTING /tmp/ccJUMvuF.s 			page 875


 32697 ee0c 53930000 		.long	0x9353
 32698 ee10 18       		.uleb128 0x18
 32699 ee11 5F547000 		.string	"_Tp"
 32700 ee15 29000000 		.long	0x29
 32701 ee19 A201     		.uleb128 0xa2
 32702 ee1b 00000000 		.long	.LASF1679
 32703 ee1f 2D       		.byte	0x2d
 32704 ee20 7502     		.value	0x275
 32705 ee22 C9C10000 		.long	0xc1c9
 32706 ee26 A101     		.uleb128 0xa1
 32707 ee28 5F5F6E00 		.string	"__n"
 32708 ee2c 2D       		.byte	0x2d
 32709 ee2d 7502     		.value	0x275
 32710 ee2f 53930000 		.long	0x9353
 32711 ee33 09       		.uleb128 0x9
 32712 ee34 39EE0000 		.long	0xee39
 32713 ee38 00       		.byte	0
 32714 ee39 11       		.uleb128 0x11
 32715 ee3a 10C20000 		.long	0xc210
 32716 ee3e 9801     		.uleb128 0x98
 32717 ee40 6E360000 		.long	0x366e
 32718 ee44 03       		.byte	0x3
 32719 ee45 4DEE0000 		.long	0xee4d
 32720 ee49 70EE0000 		.long	0xee70
 32721 ee4d 9901     		.uleb128 0x99
 32722 ee4f 00000000 		.long	.LASF1661
 32723 ee53 0EE20000 		.long	0xe20e
 32724 ee57 A001     		.uleb128 0xa0
 32725 ee59 5F5F6E00 		.string	"__n"
 32726 ee5d 06       		.byte	0x6
 32727 ee5e 86       		.byte	0x86
 32728 ee5f 85060000 		.long	0x685
 32729 ee63 A001     		.uleb128 0xa0
 32730 ee65 5F5F6100 		.string	"__a"
 32731 ee69 06       		.byte	0x6
 32732 ee6a 86       		.byte	0x86
 32733 ee6b 70EE0000 		.long	0xee70
 32734 ee6f 00       		.byte	0
 32735 ee70 11       		.uleb128 0x11
 32736 ee71 4DC20000 		.long	0xc24d
 32737 ee75 9801     		.uleb128 0x98
 32738 ee77 953F0000 		.long	0x3f95
 32739 ee7b 03       		.byte	0x3
 32740 ee7c 84EE0000 		.long	0xee84
 32741 ee80 9CEE0000 		.long	0xee9c
 32742 ee84 9901     		.uleb128 0x99
 32743 ee86 00000000 		.long	.LASF1661
 32744 ee8a 56CD0000 		.long	0xcd56
 32745 ee8e A101     		.uleb128 0xa1
 32746 ee90 5F5F6E00 		.string	"__n"
 32747 ee94 06       		.byte	0x6
 32748 ee95 1C05     		.value	0x51c
 32749 ee97 0C380000 		.long	0x380c
 32750 ee9b 00       		.byte	0
 32751 ee9c 9801     		.uleb128 0x98
 32752 ee9e 0C310000 		.long	0x310c
 32753 eea2 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 876


 32754 eea3 ABEE0000 		.long	0xeeab
 32755 eea7 B6EE0000 		.long	0xeeb6
 32756 eeab 9901     		.uleb128 0x99
 32757 eead 00000000 		.long	.LASF1661
 32758 eeb1 CCD40000 		.long	0xd4cc
 32759 eeb5 00       		.byte	0
 32760 eeb6 9801     		.uleb128 0x98
 32761 eeb8 0E3A0000 		.long	0x3a0e
 32762 eebc 03       		.byte	0x3
 32763 eebd C5EE0000 		.long	0xeec5
 32764 eec1 D0EE0000 		.long	0xeed0
 32765 eec5 9901     		.uleb128 0x99
 32766 eec7 00000000 		.long	.LASF1661
 32767 eecb 56CD0000 		.long	0xcd56
 32768 eecf 00       		.byte	0
 32769 eed0 9D01     		.uleb128 0x9d
 32770 eed2 8D820000 		.long	0x828d
 32771 eed6 03       		.byte	0x3
 32772 eed7 E8EE0000 		.long	0xeee8
 32773 eedb 9E01     		.uleb128 0x9e
 32774 eedd 00000000 		.long	.LASF1685
 32775 eee1 31       		.byte	0x31
 32776 eee2 DC       		.byte	0xdc
 32777 eee3 169F0000 		.long	0x9f16
 32778 eee7 00       		.byte	0
 32779 eee8 9D01     		.uleb128 0x9d
 32780 eeea BF8B0000 		.long	0x8bbf
 32781 eeee 03       		.byte	0x3
 32782 eeef 0AEF0000 		.long	0xef0a
 32783 eef3 35       		.uleb128 0x35
 32784 eef4 00000000 		.long	.LASF745
 32785 eef8 169F0000 		.long	0x9f16
 32786 eefc A201     		.uleb128 0xa2
 32787 eefe 00000000 		.long	.LASF1685
 32788 ef02 14       		.byte	0x14
 32789 ef03 1601     		.value	0x116
 32790 ef05 169F0000 		.long	0x9f16
 32791 ef09 00       		.byte	0
 32792 ef0a 9D01     		.uleb128 0x9d
 32793 ef0c DE8B0000 		.long	0x8bde
 32794 ef10 03       		.byte	0x3
 32795 ef11 69EF0000 		.long	0xef69
 32796 ef15 50       		.uleb128 0x50
 32797 ef16 00000000 		.long	.LASF1132
 32798 ef1a 30930000 		.long	0x9330
 32799 ef1e 01       		.byte	0x1
 32800 ef1f 35       		.uleb128 0x35
 32801 ef20 00000000 		.long	.LASF1133
 32802 ef24 C9C10000 		.long	0xc1c9
 32803 ef28 35       		.uleb128 0x35
 32804 ef29 00000000 		.long	.LASF1134
 32805 ef2d C9C10000 		.long	0xc1c9
 32806 ef31 A201     		.uleb128 0xa2
 32807 ef33 00000000 		.long	.LASF1679
 32808 ef37 14       		.byte	0x14
 32809 ef38 4902     		.value	0x249
 32810 ef3a C9C10000 		.long	0xc1c9
GAS LISTING /tmp/ccJUMvuF.s 			page 877


 32811 ef3e A201     		.uleb128 0xa2
 32812 ef40 00000000 		.long	.LASF1680
 32813 ef44 14       		.byte	0x14
 32814 ef45 4902     		.value	0x249
 32815 ef47 C9C10000 		.long	0xc1c9
 32816 ef4b A201     		.uleb128 0xa2
 32817 ef4d 00000000 		.long	.LASF1666
 32818 ef51 14       		.byte	0x14
 32819 ef52 4902     		.value	0x249
 32820 ef54 C9C10000 		.long	0xc1c9
 32821 ef58 9B01     		.uleb128 0x9b
 32822 ef5a A301     		.uleb128 0xa3
 32823 ef5c 00000000 		.long	.LASF1696
 32824 ef60 14       		.byte	0x14
 32825 ef61 4E02     		.value	0x24e
 32826 ef63 3D930000 		.long	0x933d
 32827 ef67 00       		.byte	0
 32828 ef68 00       		.byte	0
 32829 ef69 9D01     		.uleb128 0x9d
 32830 ef6b 1A8C0000 		.long	0x8c1a
 32831 ef6f 03       		.byte	0x3
 32832 ef70 8BEF0000 		.long	0xef8b
 32833 ef74 35       		.uleb128 0x35
 32834 ef75 00000000 		.long	.LASF745
 32835 ef79 169F0000 		.long	0x9f16
 32836 ef7d A201     		.uleb128 0xa2
 32837 ef7f 00000000 		.long	.LASF1685
 32838 ef83 14       		.byte	0x14
 32839 ef84 2101     		.value	0x121
 32840 ef86 169F0000 		.long	0x9f16
 32841 ef8a 00       		.byte	0
 32842 ef8b 9D01     		.uleb128 0x9d
 32843 ef8d 398C0000 		.long	0x8c39
 32844 ef91 03       		.byte	0x3
 32845 ef92 DAEF0000 		.long	0xefda
 32846 ef96 50       		.uleb128 0x50
 32847 ef97 00000000 		.long	.LASF1132
 32848 ef9b 30930000 		.long	0x9330
 32849 ef9f 01       		.byte	0x1
 32850 efa0 35       		.uleb128 0x35
 32851 efa1 00000000 		.long	.LASF1133
 32852 efa5 169F0000 		.long	0x9f16
 32853 efa9 35       		.uleb128 0x35
 32854 efaa 00000000 		.long	.LASF1134
 32855 efae 169F0000 		.long	0x9f16
 32856 efb2 A201     		.uleb128 0xa2
 32857 efb4 00000000 		.long	.LASF1679
 32858 efb8 14       		.byte	0x14
 32859 efb9 5B02     		.value	0x25b
 32860 efbb 169F0000 		.long	0x9f16
 32861 efbf A201     		.uleb128 0xa2
 32862 efc1 00000000 		.long	.LASF1680
 32863 efc5 14       		.byte	0x14
 32864 efc6 5B02     		.value	0x25b
 32865 efc8 169F0000 		.long	0x9f16
 32866 efcc A201     		.uleb128 0xa2
 32867 efce 00000000 		.long	.LASF1666
GAS LISTING /tmp/ccJUMvuF.s 			page 878


 32868 efd2 14       		.byte	0x14
 32869 efd3 5B02     		.value	0x25b
 32870 efd5 169F0000 		.long	0x9f16
 32871 efd9 00       		.byte	0
 32872 efda 9D01     		.uleb128 0x9d
 32873 efdc 15AC0000 		.long	0xac15
 32874 efe0 03       		.byte	0x3
 32875 efe1 12F00000 		.long	0xf012
 32876 efe5 35       		.uleb128 0x35
 32877 efe6 00000000 		.long	.LASF745
 32878 efea C9C10000 		.long	0xc1c9
 32879 efee 35       		.uleb128 0x35
 32880 efef 00000000 		.long	.LASF1248
 32881 eff3 76370000 		.long	0x3776
 32882 eff7 A201     		.uleb128 0xa2
 32883 eff9 00000000 		.long	.LASF1676
 32884 effd 0C       		.byte	0xc
 32885 effe 2F03     		.value	0x32f
 32886 f000 12F00000 		.long	0xf012
 32887 f004 A201     		.uleb128 0xa2
 32888 f006 00000000 		.long	.LASF1677
 32889 f00a 0C       		.byte	0xc
 32890 f00b 3003     		.value	0x330
 32891 f00d 17F00000 		.long	0xf017
 32892 f011 00       		.byte	0
 32893 f012 11       		.uleb128 0x11
 32894 f013 24D50000 		.long	0xd524
 32895 f017 11       		.uleb128 0x11
 32896 f018 24D50000 		.long	0xd524
 32897 f01c 9D01     		.uleb128 0x9d
 32898 f01e 758C0000 		.long	0x8c75
 32899 f022 03       		.byte	0x3
 32900 f023 61F00000 		.long	0xf061
 32901 f027 35       		.uleb128 0x35
 32902 f028 00000000 		.long	.LASF1133
 32903 f02c 169F0000 		.long	0x9f16
 32904 f030 35       		.uleb128 0x35
 32905 f031 00000000 		.long	.LASF1134
 32906 f035 169F0000 		.long	0x9f16
 32907 f039 A201     		.uleb128 0xa2
 32908 f03b 00000000 		.long	.LASF1679
 32909 f03f 14       		.byte	0x14
 32910 f040 9A02     		.value	0x29a
 32911 f042 169F0000 		.long	0x9f16
 32912 f046 A201     		.uleb128 0xa2
 32913 f048 00000000 		.long	.LASF1680
 32914 f04c 14       		.byte	0x14
 32915 f04d 9A02     		.value	0x29a
 32916 f04f 169F0000 		.long	0x9f16
 32917 f053 A201     		.uleb128 0xa2
 32918 f055 00000000 		.long	.LASF1666
 32919 f059 14       		.byte	0x14
 32920 f05a 9A02     		.value	0x29a
 32921 f05c 169F0000 		.long	0x9f16
 32922 f060 00       		.byte	0
 32923 f061 9D01     		.uleb128 0x9d
 32924 f063 A78C0000 		.long	0x8ca7
GAS LISTING /tmp/ccJUMvuF.s 			page 879


 32925 f067 01       		.byte	0x1
 32926 f068 A6F00000 		.long	0xf0a6
 32927 f06c 35       		.uleb128 0x35
 32928 f06d 00000000 		.long	.LASF1113
 32929 f071 169F0000 		.long	0x9f16
 32930 f075 35       		.uleb128 0x35
 32931 f076 00000000 		.long	.LASF1114
 32932 f07a A8930000 		.long	0x93a8
 32933 f07e A201     		.uleb128 0xa2
 32934 f080 00000000 		.long	.LASF1679
 32935 f084 0D       		.byte	0xd
 32936 f085 5707     		.value	0x757
 32937 f087 169F0000 		.long	0x9f16
 32938 f08b A201     		.uleb128 0xa2
 32939 f08d 00000000 		.long	.LASF1680
 32940 f091 0D       		.byte	0xd
 32941 f092 5807     		.value	0x758
 32942 f094 169F0000 		.long	0x9f16
 32943 f098 A201     		.uleb128 0xa2
 32944 f09a 00000000 		.long	.LASF1686
 32945 f09e 0D       		.byte	0xd
 32946 f09f 5807     		.value	0x758
 32947 f0a1 A8930000 		.long	0x93a8
 32948 f0a5 00       		.byte	0
 32949 f0a6 9D01     		.uleb128 0x9d
 32950 f0a8 D1820000 		.long	0x82d1
 32951 f0ac 03       		.byte	0x3
 32952 f0ad BEF00000 		.long	0xf0be
 32953 f0b1 9E01     		.uleb128 0x9e
 32954 f0b3 00000000 		.long	.LASF1685
 32955 f0b7 31       		.byte	0x31
 32956 f0b8 D4       		.byte	0xd4
 32957 f0b9 98C20000 		.long	0xc298
 32958 f0bd 00       		.byte	0
 32959 f0be 9D01     		.uleb128 0x9d
 32960 f0c0 D58C0000 		.long	0x8cd5
 32961 f0c4 03       		.byte	0x3
 32962 f0c5 E0F00000 		.long	0xf0e0
 32963 f0c9 35       		.uleb128 0x35
 32964 f0ca 00000000 		.long	.LASF745
 32965 f0ce 98C20000 		.long	0xc298
 32966 f0d2 A201     		.uleb128 0xa2
 32967 f0d4 00000000 		.long	.LASF1685
 32968 f0d8 14       		.byte	0x14
 32969 f0d9 1601     		.value	0x116
 32970 f0db 98C20000 		.long	0xc298
 32971 f0df 00       		.byte	0
 32972 f0e0 9D01     		.uleb128 0x9d
 32973 f0e2 F48C0000 		.long	0x8cf4
 32974 f0e6 03       		.byte	0x3
 32975 f0e7 2EF10000 		.long	0xf12e
 32976 f0eb 18       		.uleb128 0x18
 32977 f0ec 5F4F4900 		.string	"_OI"
 32978 f0f0 98C20000 		.long	0xc298
 32979 f0f4 35       		.uleb128 0x35
 32980 f0f5 00000000 		.long	.LASF426
 32981 f0f9 53930000 		.long	0x9353
GAS LISTING /tmp/ccJUMvuF.s 			page 880


 32982 f0fd 18       		.uleb128 0x18
 32983 f0fe 5F547000 		.string	"_Tp"
 32984 f102 68930000 		.long	0x9368
 32985 f106 A201     		.uleb128 0xa2
 32986 f108 00000000 		.long	.LASF1679
 32987 f10c 14       		.byte	0x14
 32988 f10d 1803     		.value	0x318
 32989 f10f 98C20000 		.long	0xc298
 32990 f113 A101     		.uleb128 0xa1
 32991 f115 5F5F6E00 		.string	"__n"
 32992 f119 14       		.byte	0x14
 32993 f11a 1803     		.value	0x318
 32994 f11c 53930000 		.long	0x9353
 32995 f120 A201     		.uleb128 0xa2
 32996 f122 00000000 		.long	.LASF1431
 32997 f126 14       		.byte	0x14
 32998 f127 1803     		.value	0x318
 32999 f129 2EF10000 		.long	0xf12e
 33000 f12d 00       		.byte	0
 33001 f12e 11       		.uleb128 0x11
 33002 f12f AFC20000 		.long	0xc2af
 33003 f133 9D01     		.uleb128 0x9d
 33004 f135 282B0000 		.long	0x2b28
 33005 f139 03       		.byte	0x3
 33006 f13a 6DF10000 		.long	0xf16d
 33007 f13e 35       		.uleb128 0x35
 33008 f13f 00000000 		.long	.LASF421
 33009 f143 98C20000 		.long	0xc298
 33010 f147 35       		.uleb128 0x35
 33011 f148 00000000 		.long	.LASF426
 33012 f14c 53930000 		.long	0x9353
 33013 f150 A201     		.uleb128 0xa2
 33014 f152 00000000 		.long	.LASF1679
 33015 f156 2D       		.byte	0x2d
 33016 f157 1202     		.value	0x212
 33017 f159 98C20000 		.long	0xc298
 33018 f15d A101     		.uleb128 0xa1
 33019 f15f 5F5F6E00 		.string	"__n"
 33020 f163 2D       		.byte	0x2d
 33021 f164 1202     		.value	0x212
 33022 f166 53930000 		.long	0x9353
 33023 f16a A901     		.uleb128 0xa9
 33024 f16c 00       		.byte	0
 33025 f16d 9D01     		.uleb128 0x9d
 33026 f16f 2F8D0000 		.long	0x8d2f
 33027 f173 03       		.byte	0x3
 33028 f174 B5F10000 		.long	0xf1b5
 33029 f178 35       		.uleb128 0x35
 33030 f179 00000000 		.long	.LASF421
 33031 f17d 98C20000 		.long	0xc298
 33032 f181 35       		.uleb128 0x35
 33033 f182 00000000 		.long	.LASF426
 33034 f186 53930000 		.long	0x9353
 33035 f18a A201     		.uleb128 0xa2
 33036 f18c 00000000 		.long	.LASF1679
 33037 f190 2D       		.byte	0x2d
 33038 f191 3102     		.value	0x231
GAS LISTING /tmp/ccJUMvuF.s 			page 881


 33039 f193 98C20000 		.long	0xc298
 33040 f197 A101     		.uleb128 0xa1
 33041 f199 5F5F6E00 		.string	"__n"
 33042 f19d 2D       		.byte	0x2d
 33043 f19e 3102     		.value	0x231
 33044 f1a0 53930000 		.long	0x9353
 33045 f1a4 9B01     		.uleb128 0x9b
 33046 f1a6 A301     		.uleb128 0xa3
 33047 f1a8 00000000 		.long	.LASF1695
 33048 f1ac 2D       		.byte	0x2d
 33049 f1ad 3602     		.value	0x236
 33050 f1af 3D930000 		.long	0x933d
 33051 f1b3 00       		.byte	0
 33052 f1b4 00       		.byte	0
 33053 f1b5 9D01     		.uleb128 0x9d
 33054 f1b7 588D0000 		.long	0x8d58
 33055 f1bb 03       		.byte	0x3
 33056 f1bc FBF10000 		.long	0xf1fb
 33057 f1c0 35       		.uleb128 0x35
 33058 f1c1 00000000 		.long	.LASF421
 33059 f1c5 98C20000 		.long	0xc298
 33060 f1c9 35       		.uleb128 0x35
 33061 f1ca 00000000 		.long	.LASF426
 33062 f1ce 53930000 		.long	0x9353
 33063 f1d2 18       		.uleb128 0x18
 33064 f1d3 5F547000 		.string	"_Tp"
 33065 f1d7 68930000 		.long	0x9368
 33066 f1db A201     		.uleb128 0xa2
 33067 f1dd 00000000 		.long	.LASF1679
 33068 f1e1 2D       		.byte	0x2d
 33069 f1e2 7502     		.value	0x275
 33070 f1e4 98C20000 		.long	0xc298
 33071 f1e8 A101     		.uleb128 0xa1
 33072 f1ea 5F5F6E00 		.string	"__n"
 33073 f1ee 2D       		.byte	0x2d
 33074 f1ef 7502     		.value	0x275
 33075 f1f1 53930000 		.long	0x9353
 33076 f1f5 09       		.uleb128 0x9
 33077 f1f6 FBF10000 		.long	0xf1fb
 33078 f1fa 00       		.byte	0
 33079 f1fb 11       		.uleb128 0x11
 33080 f1fc DFC20000 		.long	0xc2df
 33081 f200 9801     		.uleb128 0x98
 33082 f202 E0460000 		.long	0x46e0
 33083 f206 03       		.byte	0x3
 33084 f207 0FF20000 		.long	0xf20f
 33085 f20b 32F20000 		.long	0xf232
 33086 f20f 9901     		.uleb128 0x99
 33087 f211 00000000 		.long	.LASF1661
 33088 f215 BAE00000 		.long	0xe0ba
 33089 f219 A001     		.uleb128 0xa0
 33090 f21b 5F5F6E00 		.string	"__n"
 33091 f21f 06       		.byte	0x6
 33092 f220 86       		.byte	0x86
 33093 f221 85060000 		.long	0x685
 33094 f225 A001     		.uleb128 0xa0
 33095 f227 5F5F6100 		.string	"__a"
GAS LISTING /tmp/ccJUMvuF.s 			page 882


 33096 f22b 06       		.byte	0x6
 33097 f22c 86       		.byte	0x86
 33098 f22d 32F20000 		.long	0xf232
 33099 f231 00       		.byte	0
 33100 f232 11       		.uleb128 0x11
 33101 f233 1CC30000 		.long	0xc31c
 33102 f237 9801     		.uleb128 0x98
 33103 f239 07500000 		.long	0x5007
 33104 f23d 03       		.byte	0x3
 33105 f23e 46F20000 		.long	0xf246
 33106 f242 5EF20000 		.long	0xf25e
 33107 f246 9901     		.uleb128 0x99
 33108 f248 00000000 		.long	.LASF1661
 33109 f24c 2ED30000 		.long	0xd32e
 33110 f250 A101     		.uleb128 0xa1
 33111 f252 5F5F6E00 		.string	"__n"
 33112 f256 06       		.byte	0x6
 33113 f257 1C05     		.value	0x51c
 33114 f259 7E480000 		.long	0x487e
 33115 f25d 00       		.byte	0
 33116 f25e 9801     		.uleb128 0x98
 33117 f260 5C420000 		.long	0x425c
 33118 f264 03       		.byte	0x3
 33119 f265 6DF20000 		.long	0xf26d
 33120 f269 78F20000 		.long	0xf278
 33121 f26d 9901     		.uleb128 0x99
 33122 f26f 00000000 		.long	.LASF1661
 33123 f273 A8D60000 		.long	0xd6a8
 33124 f277 00       		.byte	0
 33125 f278 9801     		.uleb128 0x98
 33126 f27a 5F2F0000 		.long	0x2f5f
 33127 f27e 03       		.byte	0x3
 33128 f27f 87F20000 		.long	0xf287
 33129 f283 9FF20000 		.long	0xf29f
 33130 f287 9901     		.uleb128 0x99
 33131 f289 00000000 		.long	.LASF1661
 33132 f28d 9FF20000 		.long	0xf29f
 33133 f291 A201     		.uleb128 0xa2
 33134 f293 00000000 		.long	.LASF1697
 33135 f297 04       		.byte	0x4
 33136 f298 3406     		.value	0x634
 33137 f29a A4F20000 		.long	0xf2a4
 33138 f29e 00       		.byte	0
 33139 f29f 11       		.uleb128 0x11
 33140 f2a0 B7C10000 		.long	0xc1b7
 33141 f2a4 11       		.uleb128 0x11
 33142 f2a5 ABC00000 		.long	0xc0ab
 33143 f2a9 9801     		.uleb128 0x98
 33144 f2ab 5A100000 		.long	0x105a
 33145 f2af 03       		.byte	0x3
 33146 f2b0 B8F20000 		.long	0xf2b8
 33147 f2b4 CDF20000 		.long	0xf2cd
 33148 f2b8 9901     		.uleb128 0x99
 33149 f2ba 00000000 		.long	.LASF1661
 33150 f2be CDF20000 		.long	0xf2cd
 33151 f2c2 9901     		.uleb128 0x99
 33152 f2c4 00000000 		.long	.LASF1675
GAS LISTING /tmp/ccJUMvuF.s 			page 883


 33153 f2c8 C9AE0000 		.long	0xaec9
 33154 f2cc 00       		.byte	0
 33155 f2cd 11       		.uleb128 0x11
 33156 f2ce 7AC00000 		.long	0xc07a
 33157 f2d2 9801     		.uleb128 0x98
 33158 f2d4 D82F0000 		.long	0x2fd8
 33159 f2d8 03       		.byte	0x3
 33160 f2d9 E1F20000 		.long	0xf2e1
 33161 f2dd ECF20000 		.long	0xf2ec
 33162 f2e1 9901     		.uleb128 0x99
 33163 f2e3 00000000 		.long	.LASF1661
 33164 f2e7 9FF20000 		.long	0xf29f
 33165 f2eb 00       		.byte	0
 33166 f2ec 9801     		.uleb128 0x98
 33167 f2ee BC2D0000 		.long	0x2dbc
 33168 f2f2 03       		.byte	0x3
 33169 f2f3 FBF20000 		.long	0xf2fb
 33170 f2f7 13F30000 		.long	0xf313
 33171 f2fb 9901     		.uleb128 0x99
 33172 f2fd 00000000 		.long	.LASF1661
 33173 f301 92DF0000 		.long	0xdf92
 33174 f305 A201     		.uleb128 0xa2
 33175 f307 00000000 		.long	.LASF1682
 33176 f30b 04       		.byte	0x4
 33177 f30c F601     		.value	0x1f6
 33178 f30e 0D2D0000 		.long	0x2d0d
 33179 f312 00       		.byte	0
 33180 f313 9801     		.uleb128 0x98
 33181 f315 3C540000 		.long	0x543c
 33182 f319 03       		.byte	0x3
 33183 f31a 22F30000 		.long	0xf322
 33184 f31e 47F30000 		.long	0xf347
 33185 f322 9901     		.uleb128 0x99
 33186 f324 00000000 		.long	.LASF1661
 33187 f328 D4EA0000 		.long	0xead4
 33188 f32c A101     		.uleb128 0xa1
 33189 f32e 5F5F6100 		.string	"__a"
 33190 f332 04       		.byte	0x4
 33191 f333 AF06     		.value	0x6af
 33192 f335 28930000 		.long	0x9328
 33193 f339 A101     		.uleb128 0xa1
 33194 f33b 5F5F6200 		.string	"__b"
 33195 f33f 04       		.byte	0x4
 33196 f340 B006     		.value	0x6b0
 33197 f342 28930000 		.long	0x9328
 33198 f346 00       		.byte	0
 33199 f347 9801     		.uleb128 0x98
 33200 f349 F2280000 		.long	0x28f2
 33201 f34d 03       		.byte	0x3
 33202 f34e 56F30000 		.long	0xf356
 33203 f352 6DF30000 		.long	0xf36d
 33204 f356 9901     		.uleb128 0x99
 33205 f358 00000000 		.long	.LASF1661
 33206 f35c 7DCC0000 		.long	0xcc7d
 33207 f360 A001     		.uleb128 0xa0
 33208 f362 5F5F6E00 		.string	"__n"
 33209 f366 09       		.byte	0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 884


 33210 f367 AA       		.byte	0xaa
 33211 f368 53930000 		.long	0x9353
 33212 f36c 00       		.byte	0
 33213 f36d 9801     		.uleb128 0x98
 33214 f36f 91C30000 		.long	0xc391
 33215 f373 03       		.byte	0x3
 33216 f374 7CF30000 		.long	0xf37c
 33217 f378 87F30000 		.long	0xf387
 33218 f37c 9901     		.uleb128 0x99
 33219 f37e 00000000 		.long	.LASF1661
 33220 f382 87F30000 		.long	0xf387
 33221 f386 00       		.byte	0
 33222 f387 11       		.uleb128 0x11
 33223 f388 BDC30000 		.long	0xc3bd
 33224 f38c 9D01     		.uleb128 0x9d
 33225 f38e 8F8D0000 		.long	0x8d8f
 33226 f392 03       		.byte	0x3
 33227 f393 CEF30000 		.long	0xf3ce
 33228 f397 35       		.uleb128 0x35
 33229 f398 00000000 		.long	.LASF779
 33230 f39c CAD80000 		.long	0xd8ca
 33231 f3a0 6A       		.uleb128 0x6a
 33232 f3a1 00000000 		.long	.LASF827
 33233 f3a5 AFF30000 		.long	0xf3af
 33234 f3a9 68       		.uleb128 0x68
 33235 f3aa D9C50000 		.long	0xc5d9
 33236 f3ae 00       		.byte	0
 33237 f3af A101     		.uleb128 0xa1
 33238 f3b1 5F5F6600 		.string	"__f"
 33239 f3b5 0A       		.byte	0xa
 33240 f3b6 5706     		.value	0x657
 33241 f3b8 CEF30000 		.long	0xf3ce
 33242 f3bc AA01     		.uleb128 0xaa
 33243 f3be 0A       		.byte	0xa
 33244 f3bf 5706     		.value	0x657
 33245 f3c1 CBF30000 		.long	0xf3cb
 33246 f3c5 09       		.uleb128 0x9
 33247 f3c6 D3F30000 		.long	0xf3d3
 33248 f3ca 00       		.byte	0
 33249 f3cb A901     		.uleb128 0xa9
 33250 f3cd 00       		.byte	0
 33251 f3ce 11       		.uleb128 0x11
 33252 f3cf CAD80000 		.long	0xd8ca
 33253 f3d3 11       		.uleb128 0x11
 33254 f3d4 D9C50000 		.long	0xc5d9
 33255 f3d8 9801     		.uleb128 0x98
 33256 f3da BE4A0000 		.long	0x4abe
 33257 f3de 03       		.byte	0x3
 33258 f3df E7F30000 		.long	0xf3e7
 33259 f3e3 F2F30000 		.long	0xf3f2
 33260 f3e7 9901     		.uleb128 0x99
 33261 f3e9 00000000 		.long	.LASF1661
 33262 f3ed 2ED30000 		.long	0xd32e
 33263 f3f1 00       		.byte	0
 33264 f3f2 9801     		.uleb128 0x98
 33265 f3f4 804A0000 		.long	0x4a80
 33266 f3f8 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 885


 33267 f3f9 01F40000 		.long	0xf401
 33268 f3fd 0CF40000 		.long	0xf40c
 33269 f401 9901     		.uleb128 0x99
 33270 f403 00000000 		.long	.LASF1661
 33271 f407 2ED30000 		.long	0xd32e
 33272 f40b 00       		.byte	0
 33273 f40c 9D01     		.uleb128 0x9d
 33274 f40e C28D0000 		.long	0x8dc2
 33275 f412 01       		.byte	0x1
 33276 f413 51F40000 		.long	0xf451
 33277 f417 35       		.uleb128 0x35
 33278 f418 00000000 		.long	.LASF1145
 33279 f41c C4A50000 		.long	0xa5c4
 33280 f420 35       		.uleb128 0x35
 33281 f421 00000000 		.long	.LASF1146
 33282 f425 9F560000 		.long	0x569f
 33283 f429 A201     		.uleb128 0xa2
 33284 f42b 00000000 		.long	.LASF1679
 33285 f42f 0D       		.byte	0xd
 33286 f430 BD10     		.value	0x10bd
 33287 f432 C4A50000 		.long	0xa5c4
 33288 f436 A201     		.uleb128 0xa2
 33289 f438 00000000 		.long	.LASF1680
 33290 f43c 0D       		.byte	0xd
 33291 f43d BD10     		.value	0x10bd
 33292 f43f C4A50000 		.long	0xa5c4
 33293 f443 A201     		.uleb128 0xa2
 33294 f445 00000000 		.long	.LASF1698
 33295 f449 0D       		.byte	0xd
 33296 f44a BE10     		.value	0x10be
 33297 f44c 9F560000 		.long	0x569f
 33298 f450 00       		.byte	0
 33299 f451 9801     		.uleb128 0x98
 33300 f453 7B2F0000 		.long	0x2f7b
 33301 f457 03       		.byte	0x3
 33302 f458 60F40000 		.long	0xf460
 33303 f45c 75F40000 		.long	0xf475
 33304 f460 9901     		.uleb128 0x99
 33305 f462 00000000 		.long	.LASF1661
 33306 f466 9FF20000 		.long	0xf29f
 33307 f46a 9901     		.uleb128 0x99
 33308 f46c 00000000 		.long	.LASF1675
 33309 f470 C9AE0000 		.long	0xaec9
 33310 f474 00       		.byte	0
 33311 f475 9801     		.uleb128 0x98
 33312 f477 B4490000 		.long	0x49b4
 33313 f47b 03       		.byte	0x3
 33314 f47c 84F40000 		.long	0xf484
 33315 f480 99F40000 		.long	0xf499
 33316 f484 9901     		.uleb128 0x99
 33317 f486 00000000 		.long	.LASF1661
 33318 f48a 2ED30000 		.long	0xd32e
 33319 f48e 9901     		.uleb128 0x99
 33320 f490 00000000 		.long	.LASF1675
 33321 f494 C9AE0000 		.long	0xaec9
 33322 f498 00       		.byte	0
 33323 f499 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 886


 33324 f49b 15830000 		.long	0x8315
 33325 f49f 03       		.byte	0x3
 33326 f4a0 B1F40000 		.long	0xf4b1
 33327 f4a4 9E01     		.uleb128 0x9e
 33328 f4a6 00000000 		.long	.LASF1685
 33329 f4aa 31       		.byte	0x31
 33330 f4ab D4       		.byte	0xd4
 33331 f4ac 00C80000 		.long	0xc800
 33332 f4b0 00       		.byte	0
 33333 f4b1 9D01     		.uleb128 0x9d
 33334 f4b3 F08D0000 		.long	0x8df0
 33335 f4b7 03       		.byte	0x3
 33336 f4b8 FDF40000 		.long	0xf4fd
 33337 f4bc 18       		.uleb128 0x18
 33338 f4bd 5F547000 		.string	"_Tp"
 33339 f4c1 5A930000 		.long	0x935a
 33340 f4c5 A201     		.uleb128 0xa2
 33341 f4c7 00000000 		.long	.LASF1679
 33342 f4cb 14       		.byte	0x14
 33343 f4cc C702     		.value	0x2c7
 33344 f4ce 00C80000 		.long	0xc800
 33345 f4d2 A201     		.uleb128 0xa2
 33346 f4d4 00000000 		.long	.LASF1680
 33347 f4d8 14       		.byte	0x14
 33348 f4d9 C702     		.value	0x2c7
 33349 f4db 00C80000 		.long	0xc800
 33350 f4df A101     		.uleb128 0xa1
 33351 f4e1 5F5F6300 		.string	"__c"
 33352 f4e5 14       		.byte	0x14
 33353 f4e6 C702     		.value	0x2c7
 33354 f4e8 FDF40000 		.long	0xf4fd
 33355 f4ec 9B01     		.uleb128 0x9b
 33356 f4ee A301     		.uleb128 0xa3
 33357 f4f0 00000000 		.long	.LASF1688
 33358 f4f4 14       		.byte	0x14
 33359 f4f5 C902     		.value	0x2c9
 33360 f4f7 45C50000 		.long	0xc545
 33361 f4fb 00       		.byte	0
 33362 f4fc 00       		.byte	0
 33363 f4fd 11       		.uleb128 0x11
 33364 f4fe 0CC80000 		.long	0xc80c
 33365 f502 9D01     		.uleb128 0x9d
 33366 f504 158E0000 		.long	0x8e15
 33367 f508 03       		.byte	0x3
 33368 f509 47F50000 		.long	0xf547
 33369 f50d 35       		.uleb128 0x35
 33370 f50e 00000000 		.long	.LASF426
 33371 f512 53930000 		.long	0x9353
 33372 f516 18       		.uleb128 0x18
 33373 f517 5F547000 		.string	"_Tp"
 33374 f51b 5A930000 		.long	0x935a
 33375 f51f A201     		.uleb128 0xa2
 33376 f521 00000000 		.long	.LASF1679
 33377 f525 14       		.byte	0x14
 33378 f526 0103     		.value	0x301
 33379 f528 00C80000 		.long	0xc800
 33380 f52c A101     		.uleb128 0xa1
GAS LISTING /tmp/ccJUMvuF.s 			page 887


 33381 f52e 5F5F6E00 		.string	"__n"
 33382 f532 14       		.byte	0x14
 33383 f533 0103     		.value	0x301
 33384 f535 53930000 		.long	0x9353
 33385 f539 A101     		.uleb128 0xa1
 33386 f53b 5F5F6300 		.string	"__c"
 33387 f53f 14       		.byte	0x14
 33388 f540 0103     		.value	0x301
 33389 f542 47F50000 		.long	0xf547
 33390 f546 00       		.byte	0
 33391 f547 11       		.uleb128 0x11
 33392 f548 0CC80000 		.long	0xc80c
 33393 f54c 9D01     		.uleb128 0x9d
 33394 f54e 478E0000 		.long	0x8e47
 33395 f552 03       		.byte	0x3
 33396 f553 6EF50000 		.long	0xf56e
 33397 f557 35       		.uleb128 0x35
 33398 f558 00000000 		.long	.LASF745
 33399 f55c 00C80000 		.long	0xc800
 33400 f560 A201     		.uleb128 0xa2
 33401 f562 00000000 		.long	.LASF1685
 33402 f566 14       		.byte	0x14
 33403 f567 1601     		.value	0x116
 33404 f569 00C80000 		.long	0xc800
 33405 f56d 00       		.byte	0
 33406 f56e 9D01     		.uleb128 0x9d
 33407 f570 668E0000 		.long	0x8e66
 33408 f574 03       		.byte	0x3
 33409 f575 BCF50000 		.long	0xf5bc
 33410 f579 18       		.uleb128 0x18
 33411 f57a 5F4F4900 		.string	"_OI"
 33412 f57e 00C80000 		.long	0xc800
 33413 f582 35       		.uleb128 0x35
 33414 f583 00000000 		.long	.LASF426
 33415 f587 53930000 		.long	0x9353
 33416 f58b 18       		.uleb128 0x18
 33417 f58c 5F547000 		.string	"_Tp"
 33418 f590 5A930000 		.long	0x935a
 33419 f594 A201     		.uleb128 0xa2
 33420 f596 00000000 		.long	.LASF1679
 33421 f59a 14       		.byte	0x14
 33422 f59b 1803     		.value	0x318
 33423 f59d 00C80000 		.long	0xc800
 33424 f5a1 A101     		.uleb128 0xa1
 33425 f5a3 5F5F6E00 		.string	"__n"
 33426 f5a7 14       		.byte	0x14
 33427 f5a8 1803     		.value	0x318
 33428 f5aa 53930000 		.long	0x9353
 33429 f5ae A201     		.uleb128 0xa2
 33430 f5b0 00000000 		.long	.LASF1431
 33431 f5b4 14       		.byte	0x14
 33432 f5b5 1803     		.value	0x318
 33433 f5b7 BCF50000 		.long	0xf5bc
 33434 f5bb 00       		.byte	0
 33435 f5bc 11       		.uleb128 0x11
 33436 f5bd 0CC80000 		.long	0xc80c
 33437 f5c1 9D01     		.uleb128 0x9d
GAS LISTING /tmp/ccJUMvuF.s 			page 888


 33438 f5c3 512B0000 		.long	0x2b51
 33439 f5c7 03       		.byte	0x3
 33440 f5c8 FBF50000 		.long	0xf5fb
 33441 f5cc 35       		.uleb128 0x35
 33442 f5cd 00000000 		.long	.LASF421
 33443 f5d1 00C80000 		.long	0xc800
 33444 f5d5 35       		.uleb128 0x35
 33445 f5d6 00000000 		.long	.LASF426
 33446 f5da 53930000 		.long	0x9353
 33447 f5de A201     		.uleb128 0xa2
 33448 f5e0 00000000 		.long	.LASF1679
 33449 f5e4 2D       		.byte	0x2d
 33450 f5e5 1202     		.value	0x212
 33451 f5e7 00C80000 		.long	0xc800
 33452 f5eb A101     		.uleb128 0xa1
 33453 f5ed 5F5F6E00 		.string	"__n"
 33454 f5f1 2D       		.byte	0x2d
 33455 f5f2 1202     		.value	0x212
 33456 f5f4 53930000 		.long	0x9353
 33457 f5f8 A901     		.uleb128 0xa9
 33458 f5fa 00       		.byte	0
 33459 f5fb 9D01     		.uleb128 0x9d
 33460 f5fd A18E0000 		.long	0x8ea1
 33461 f601 03       		.byte	0x3
 33462 f602 43F60000 		.long	0xf643
 33463 f606 35       		.uleb128 0x35
 33464 f607 00000000 		.long	.LASF421
 33465 f60b 00C80000 		.long	0xc800
 33466 f60f 35       		.uleb128 0x35
 33467 f610 00000000 		.long	.LASF426
 33468 f614 53930000 		.long	0x9353
 33469 f618 A201     		.uleb128 0xa2
 33470 f61a 00000000 		.long	.LASF1679
 33471 f61e 2D       		.byte	0x2d
 33472 f61f 3102     		.value	0x231
 33473 f621 00C80000 		.long	0xc800
 33474 f625 A101     		.uleb128 0xa1
 33475 f627 5F5F6E00 		.string	"__n"
 33476 f62b 2D       		.byte	0x2d
 33477 f62c 3102     		.value	0x231
 33478 f62e 53930000 		.long	0x9353
 33479 f632 9B01     		.uleb128 0x9b
 33480 f634 A301     		.uleb128 0xa3
 33481 f636 00000000 		.long	.LASF1695
 33482 f63a 2D       		.byte	0x2d
 33483 f63b 3602     		.value	0x236
 33484 f63d 3D930000 		.long	0x933d
 33485 f641 00       		.byte	0
 33486 f642 00       		.byte	0
 33487 f643 9D01     		.uleb128 0x9d
 33488 f645 CA8E0000 		.long	0x8eca
 33489 f649 03       		.byte	0x3
 33490 f64a 89F60000 		.long	0xf689
 33491 f64e 35       		.uleb128 0x35
 33492 f64f 00000000 		.long	.LASF421
 33493 f653 00C80000 		.long	0xc800
 33494 f657 35       		.uleb128 0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 889


 33495 f658 00000000 		.long	.LASF426
 33496 f65c 53930000 		.long	0x9353
 33497 f660 18       		.uleb128 0x18
 33498 f661 5F547000 		.string	"_Tp"
 33499 f665 5A930000 		.long	0x935a
 33500 f669 A201     		.uleb128 0xa2
 33501 f66b 00000000 		.long	.LASF1679
 33502 f66f 2D       		.byte	0x2d
 33503 f670 7502     		.value	0x275
 33504 f672 00C80000 		.long	0xc800
 33505 f676 A101     		.uleb128 0xa1
 33506 f678 5F5F6E00 		.string	"__n"
 33507 f67c 2D       		.byte	0x2d
 33508 f67d 7502     		.value	0x275
 33509 f67f 53930000 		.long	0x9353
 33510 f683 09       		.uleb128 0x9
 33511 f684 89F60000 		.long	0xf689
 33512 f688 00       		.byte	0
 33513 f689 11       		.uleb128 0x11
 33514 f68a 3CC80000 		.long	0xc83c
 33515 f68e 9801     		.uleb128 0x98
 33516 f690 E5730000 		.long	0x73e5
 33517 f694 03       		.byte	0x3
 33518 f695 9DF60000 		.long	0xf69d
 33519 f699 C0F60000 		.long	0xf6c0
 33520 f69d 9901     		.uleb128 0x99
 33521 f69f 00000000 		.long	.LASF1661
 33522 f6a3 00E40000 		.long	0xe400
 33523 f6a7 A001     		.uleb128 0xa0
 33524 f6a9 5F5F6E00 		.string	"__n"
 33525 f6ad 06       		.byte	0x6
 33526 f6ae 86       		.byte	0x86
 33527 f6af 85060000 		.long	0x685
 33528 f6b3 A001     		.uleb128 0xa0
 33529 f6b5 5F5F6100 		.string	"__a"
 33530 f6b9 06       		.byte	0x6
 33531 f6ba 86       		.byte	0x86
 33532 f6bb C0F60000 		.long	0xf6c0
 33533 f6bf 00       		.byte	0
 33534 f6c0 11       		.uleb128 0x11
 33535 f6c1 79C80000 		.long	0xc879
 33536 f6c5 9801     		.uleb128 0x98
 33537 f6c7 0C7D0000 		.long	0x7d0c
 33538 f6cb 03       		.byte	0x3
 33539 f6cc D4F60000 		.long	0xf6d4
 33540 f6d0 ECF60000 		.long	0xf6ec
 33541 f6d4 9901     		.uleb128 0x99
 33542 f6d6 00000000 		.long	.LASF1661
 33543 f6da 10D40000 		.long	0xd410
 33544 f6de A101     		.uleb128 0xa1
 33545 f6e0 5F5F6E00 		.string	"__n"
 33546 f6e4 06       		.byte	0x6
 33547 f6e5 1C05     		.value	0x51c
 33548 f6e7 83750000 		.long	0x7583
 33549 f6eb 00       		.byte	0
 33550 f6ec 7E       		.uleb128 0x7e
 33551 f6ed 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 890


 33552 f6ee 99940000 		.long	0x9499
 33553 f6f2 9801     		.uleb128 0x98
 33554 f6f4 F3930000 		.long	0x93f3
 33555 f6f8 03       		.byte	0x3
 33556 f6f9 13F70000 		.long	0xf713
 33557 f6fd 36F70000 		.long	0xf736
 33558 f701 35       		.uleb128 0x35
 33559 f702 00000000 		.long	.LASF745
 33560 f706 169F0000 		.long	0x9f16
 33561 f70a 35       		.uleb128 0x35
 33562 f70b 00000000 		.long	.LASF1204
 33563 f70f 29000000 		.long	0x29
 33564 f713 9901     		.uleb128 0x99
 33565 f715 00000000 		.long	.LASF1661
 33566 f719 36F70000 		.long	0xf736
 33567 f71d 9E01     		.uleb128 0x9e
 33568 f71f 00000000 		.long	.LASF1685
 33569 f723 11       		.byte	0x11
 33570 f724 35       		.byte	0x35
 33571 f725 169F0000 		.long	0x9f16
 33572 f729 9E01     		.uleb128 0x9e
 33573 f72b 00000000 		.long	.LASF1664
 33574 f72f 11       		.byte	0x11
 33575 f730 35       		.byte	0x35
 33576 f731 3BF70000 		.long	0xf73b
 33577 f735 00       		.byte	0
 33578 f736 11       		.uleb128 0x11
 33579 f737 ECF60000 		.long	0xf6ec
 33580 f73b 11       		.uleb128 0x11
 33581 f73c DAC10000 		.long	0xc1da
 33582 f740 9D01     		.uleb128 0x9d
 33583 f742 018F0000 		.long	0x8f01
 33584 f746 01       		.byte	0x1
 33585 f747 BBF70000 		.long	0xf7bb
 33586 f74b 35       		.uleb128 0x35
 33587 f74c 00000000 		.long	.LASF1113
 33588 f750 169F0000 		.long	0x9f16
 33589 f754 35       		.uleb128 0x35
 33590 f755 00000000 		.long	.LASF1154
 33591 f759 84930000 		.long	0x9384
 33592 f75d 18       		.uleb128 0x18
 33593 f75e 5F547000 		.string	"_Tp"
 33594 f762 29000000 		.long	0x29
 33595 f766 35       		.uleb128 0x35
 33596 f767 00000000 		.long	.LASF1114
 33597 f76b E7930000 		.long	0x93e7
 33598 f76f 9E01     		.uleb128 0x9e
 33599 f771 00000000 		.long	.LASF1679
 33600 f775 10       		.byte	0x10
 33601 f776 7C       		.byte	0x7c
 33602 f777 169F0000 		.long	0x9f16
 33603 f77b 9E01     		.uleb128 0x9e
 33604 f77d 00000000 		.long	.LASF1699
 33605 f781 10       		.byte	0x10
 33606 f782 7D       		.byte	0x7d
 33607 f783 84930000 		.long	0x9384
 33608 f787 9E01     		.uleb128 0x9e
GAS LISTING /tmp/ccJUMvuF.s 			page 891


 33609 f789 00000000 		.long	.LASF1700
 33610 f78d 10       		.byte	0x10
 33611 f78e 7D       		.byte	0x7d
 33612 f78f 84930000 		.long	0x9384
 33613 f793 9E01     		.uleb128 0x9e
 33614 f795 00000000 		.long	.LASF1431
 33615 f799 10       		.byte	0x10
 33616 f79a 7D       		.byte	0x7d
 33617 f79b 29000000 		.long	0x29
 33618 f79f 9E01     		.uleb128 0x9e
 33619 f7a1 00000000 		.long	.LASF1686
 33620 f7a5 10       		.byte	0x10
 33621 f7a6 7E       		.byte	0x7e
 33622 f7a7 E7930000 		.long	0x93e7
 33623 f7ab 9B01     		.uleb128 0x9b
 33624 f7ad 9C01     		.uleb128 0x9c
 33625 f7af 00000000 		.long	.LASF1701
 33626 f7b3 10       		.byte	0x10
 33627 f7b4 80       		.byte	0x80
 33628 f7b5 84930000 		.long	0x9384
 33629 f7b9 00       		.byte	0
 33630 f7ba 00       		.byte	0
 33631 f7bb 9D01     		.uleb128 0x9d
 33632 f7bd 4A8F0000 		.long	0x8f4a
 33633 f7c1 01       		.byte	0x1
 33634 f7c2 4AF80000 		.long	0xf84a
 33635 f7c6 35       		.uleb128 0x35
 33636 f7c7 00000000 		.long	.LASF1113
 33637 f7cb 169F0000 		.long	0x9f16
 33638 f7cf 35       		.uleb128 0x35
 33639 f7d0 00000000 		.long	.LASF1114
 33640 f7d4 A8930000 		.long	0x93a8
 33641 f7d8 A201     		.uleb128 0xa2
 33642 f7da 00000000 		.long	.LASF1679
 33643 f7de 10       		.byte	0x10
 33644 f7df 3D01     		.value	0x13d
 33645 f7e1 169F0000 		.long	0x9f16
 33646 f7e5 A201     		.uleb128 0xa2
 33647 f7e7 00000000 		.long	.LASF1680
 33648 f7eb 10       		.byte	0x10
 33649 f7ec 3D01     		.value	0x13d
 33650 f7ee 169F0000 		.long	0x9f16
 33651 f7f2 A201     		.uleb128 0xa2
 33652 f7f4 00000000 		.long	.LASF1686
 33653 f7f8 10       		.byte	0x10
 33654 f7f9 3E01     		.value	0x13e
 33655 f7fb A8930000 		.long	0x93a8
 33656 f7ff 9B01     		.uleb128 0x9b
 33657 f801 5C       		.uleb128 0x5c
 33658 f802 00000000 		.long	.LASF1702
 33659 f806 10       		.byte	0x10
 33660 f807 4101     		.value	0x141
 33661 f809 5C810000 		.long	0x815c
 33662 f80d 5C       		.uleb128 0x5c
 33663 f80e 00000000 		.long	.LASF1703
 33664 f812 10       		.byte	0x10
 33665 f813 4301     		.value	0x143
GAS LISTING /tmp/ccJUMvuF.s 			page 892


 33666 f815 67810000 		.long	0x8167
 33667 f819 A301     		.uleb128 0xa3
 33668 f81b 00000000 		.long	.LASF1704
 33669 f81f 10       		.byte	0x10
 33670 f820 4801     		.value	0x148
 33671 f822 26F80000 		.long	0xf826
 33672 f826 11       		.uleb128 0x11
 33673 f827 0DF80000 		.long	0xf80d
 33674 f82b A301     		.uleb128 0xa3
 33675 f82d 00000000 		.long	.LASF1701
 33676 f831 10       		.byte	0x10
 33677 f832 4901     		.value	0x149
 33678 f834 0DF80000 		.long	0xf80d
 33679 f838 9B01     		.uleb128 0x9b
 33680 f83a A301     		.uleb128 0xa3
 33681 f83c 00000000 		.long	.LASF1431
 33682 f840 10       		.byte	0x10
 33683 f841 4C01     		.value	0x14c
 33684 f843 01F80000 		.long	0xf801
 33685 f847 00       		.byte	0
 33686 f848 00       		.byte	0
 33687 f849 00       		.byte	0
 33688 f84a 9D01     		.uleb128 0x9d
 33689 f84c 788F0000 		.long	0x8f78
 33690 f850 03       		.byte	0x3
 33691 f851 B2F80000 		.long	0xf8b2
 33692 f855 35       		.uleb128 0x35
 33693 f856 00000000 		.long	.LASF1113
 33694 f85a 169F0000 		.long	0x9f16
 33695 f85e 35       		.uleb128 0x35
 33696 f85f 00000000 		.long	.LASF1114
 33697 f863 A8930000 		.long	0x93a8
 33698 f867 9E01     		.uleb128 0x9e
 33699 f869 00000000 		.long	.LASF1679
 33700 f86d 10       		.byte	0x10
 33701 f86e EB       		.byte	0xeb
 33702 f86f 169F0000 		.long	0x9f16
 33703 f873 9E01     		.uleb128 0x9e
 33704 f875 00000000 		.long	.LASF1680
 33705 f879 10       		.byte	0x10
 33706 f87a EB       		.byte	0xeb
 33707 f87b 169F0000 		.long	0x9f16
 33708 f87f 9E01     		.uleb128 0x9e
 33709 f881 00000000 		.long	.LASF1666
 33710 f885 10       		.byte	0x10
 33711 f886 EC       		.byte	0xec
 33712 f887 169F0000 		.long	0x9f16
 33713 f88b 9E01     		.uleb128 0x9e
 33714 f88d 00000000 		.long	.LASF1686
 33715 f891 10       		.byte	0x10
 33716 f892 EC       		.byte	0xec
 33717 f893 A8930000 		.long	0x93a8
 33718 f897 9B01     		.uleb128 0x9b
 33719 f899 13       		.uleb128 0x13
 33720 f89a 00000000 		.long	.LASF1702
 33721 f89e 10       		.byte	0x10
 33722 f89f EF       		.byte	0xef
GAS LISTING /tmp/ccJUMvuF.s 			page 893


 33723 f8a0 5C810000 		.long	0x815c
 33724 f8a4 9C01     		.uleb128 0x9c
 33725 f8a6 00000000 		.long	.LASF1431
 33726 f8aa 10       		.byte	0x10
 33727 f8ab F3       		.byte	0xf3
 33728 f8ac 99F80000 		.long	0xf899
 33729 f8b0 00       		.byte	0
 33730 f8b1 00       		.byte	0
 33731 f8b2 9D01     		.uleb128 0x9d
 33732 f8b4 AA8F0000 		.long	0x8faa
 33733 f8b8 01       		.byte	0x1
 33734 f8b9 14F90000 		.long	0xf914
 33735 f8bd 35       		.uleb128 0x35
 33736 f8be 00000000 		.long	.LASF1113
 33737 f8c2 169F0000 		.long	0x9f16
 33738 f8c6 35       		.uleb128 0x35
 33739 f8c7 00000000 		.long	.LASF1114
 33740 f8cb A8930000 		.long	0x93a8
 33741 f8cf A201     		.uleb128 0xa2
 33742 f8d1 00000000 		.long	.LASF1679
 33743 f8d5 0D       		.byte	0xd
 33744 f8d6 8506     		.value	0x685
 33745 f8d8 169F0000 		.long	0x9f16
 33746 f8dc A201     		.uleb128 0xa2
 33747 f8de 00000000 		.long	.LASF1705
 33748 f8e2 0D       		.byte	0xd
 33749 f8e3 8606     		.value	0x686
 33750 f8e5 169F0000 		.long	0x9f16
 33751 f8e9 A201     		.uleb128 0xa2
 33752 f8eb 00000000 		.long	.LASF1680
 33753 f8ef 0D       		.byte	0xd
 33754 f8f0 8706     		.value	0x687
 33755 f8f2 169F0000 		.long	0x9f16
 33756 f8f6 A201     		.uleb128 0xa2
 33757 f8f8 00000000 		.long	.LASF1686
 33758 f8fc 0D       		.byte	0xd
 33759 f8fd 8706     		.value	0x687
 33760 f8ff A8930000 		.long	0x93a8
 33761 f903 9B01     		.uleb128 0x9b
 33762 f905 A801     		.uleb128 0xa8
 33763 f907 5F5F6900 		.string	"__i"
 33764 f90b 0D       		.byte	0xd
 33765 f90c 8A06     		.value	0x68a
 33766 f90e 169F0000 		.long	0x9f16
 33767 f912 00       		.byte	0
 33768 f913 00       		.byte	0
 33769 f914 9D01     		.uleb128 0x9d
 33770 f916 DD8F0000 		.long	0x8fdd
 33771 f91a 01       		.byte	0x1
 33772 f91b 59F90000 		.long	0xf959
 33773 f91f 35       		.uleb128 0x35
 33774 f920 00000000 		.long	.LASF1113
 33775 f924 169F0000 		.long	0x9f16
 33776 f928 35       		.uleb128 0x35
 33777 f929 00000000 		.long	.LASF1114
 33778 f92d A8930000 		.long	0x93a8
 33779 f931 A201     		.uleb128 0xa2
GAS LISTING /tmp/ccJUMvuF.s 			page 894


 33780 f933 00000000 		.long	.LASF1679
 33781 f937 10       		.byte	0x10
 33782 f938 8601     		.value	0x186
 33783 f93a 169F0000 		.long	0x9f16
 33784 f93e A201     		.uleb128 0xa2
 33785 f940 00000000 		.long	.LASF1680
 33786 f944 10       		.byte	0x10
 33787 f945 8601     		.value	0x186
 33788 f947 169F0000 		.long	0x9f16
 33789 f94b A201     		.uleb128 0xa2
 33790 f94d 00000000 		.long	.LASF1686
 33791 f951 10       		.byte	0x10
 33792 f952 8701     		.value	0x187
 33793 f954 A8930000 		.long	0x93a8
 33794 f958 00       		.byte	0
 33795 f959 9D01     		.uleb128 0x9d
 33796 f95b 0B900000 		.long	0x900b
 33797 f95f 03       		.byte	0x3
 33798 f960 ABF90000 		.long	0xf9ab
 33799 f964 35       		.uleb128 0x35
 33800 f965 00000000 		.long	.LASF1113
 33801 f969 169F0000 		.long	0x9f16
 33802 f96d 35       		.uleb128 0x35
 33803 f96e 00000000 		.long	.LASF1114
 33804 f972 A8930000 		.long	0x93a8
 33805 f976 A201     		.uleb128 0xa2
 33806 f978 00000000 		.long	.LASF1679
 33807 f97c 0D       		.byte	0xd
 33808 f97d 8707     		.value	0x787
 33809 f97f 169F0000 		.long	0x9f16
 33810 f983 A201     		.uleb128 0xa2
 33811 f985 00000000 		.long	.LASF1705
 33812 f989 0D       		.byte	0xd
 33813 f98a 8807     		.value	0x788
 33814 f98c 169F0000 		.long	0x9f16
 33815 f990 A201     		.uleb128 0xa2
 33816 f992 00000000 		.long	.LASF1680
 33817 f996 0D       		.byte	0xd
 33818 f997 8907     		.value	0x789
 33819 f999 169F0000 		.long	0x9f16
 33820 f99d A201     		.uleb128 0xa2
 33821 f99f 00000000 		.long	.LASF1686
 33822 f9a3 0D       		.byte	0xd
 33823 f9a4 8A07     		.value	0x78a
 33824 f9a6 A8930000 		.long	0x93a8
 33825 f9aa 00       		.byte	0
 33826 f9ab 9D01     		.uleb128 0x9d
 33827 f9ad 3E900000 		.long	0x903e
 33828 f9b1 01       		.byte	0x1
 33829 f9b2 16FA0000 		.long	0xfa16
 33830 f9b6 35       		.uleb128 0x35
 33831 f9b7 00000000 		.long	.LASF1113
 33832 f9bb 169F0000 		.long	0x9f16
 33833 f9bf 35       		.uleb128 0x35
 33834 f9c0 00000000 		.long	.LASF426
 33835 f9c4 84930000 		.long	0x9384
 33836 f9c8 35       		.uleb128 0x35
GAS LISTING /tmp/ccJUMvuF.s 			page 895


 33837 f9c9 00000000 		.long	.LASF1114
 33838 f9cd A8930000 		.long	0x93a8
 33839 f9d1 A201     		.uleb128 0xa2
 33840 f9d3 00000000 		.long	.LASF1679
 33841 f9d7 0D       		.byte	0xd
 33842 f9d8 9307     		.value	0x793
 33843 f9da 169F0000 		.long	0x9f16
 33844 f9de A201     		.uleb128 0xa2
 33845 f9e0 00000000 		.long	.LASF1680
 33846 f9e4 0D       		.byte	0xd
 33847 f9e5 9407     		.value	0x794
 33848 f9e7 169F0000 		.long	0x9f16
 33849 f9eb A201     		.uleb128 0xa2
 33850 f9ed 00000000 		.long	.LASF1706
 33851 f9f1 0D       		.byte	0xd
 33852 f9f2 9507     		.value	0x795
 33853 f9f4 84930000 		.long	0x9384
 33854 f9f8 A201     		.uleb128 0xa2
 33855 f9fa 00000000 		.long	.LASF1686
 33856 f9fe 0D       		.byte	0xd
 33857 f9ff 9507     		.value	0x795
 33858 fa01 A8930000 		.long	0x93a8
 33859 fa05 9B01     		.uleb128 0x9b
 33860 fa07 A301     		.uleb128 0xa3
 33861 fa09 00000000 		.long	.LASF1707
 33862 fa0d 0D       		.byte	0xd
 33863 fa0e 9F07     		.value	0x79f
 33864 fa10 169F0000 		.long	0x9f16
 33865 fa14 00       		.byte	0
 33866 fa15 00       		.byte	0
 33867 fa16 9D01     		.uleb128 0x9d
 33868 fa18 7A900000 		.long	0x907a
 33869 fa1c 03       		.byte	0x3
 33870 fa1d 2FFA0000 		.long	0xfa2f
 33871 fa21 A101     		.uleb128 0xa1
 33872 fa23 5F5F6E00 		.string	"__n"
 33873 fa27 14       		.byte	0x14
 33874 fa28 F603     		.value	0x3f6
 33875 fa2a 84930000 		.long	0x9384
 33876 fa2e 00       		.byte	0
 33877 fa2f 9D01     		.uleb128 0x9d
 33878 fa31 90900000 		.long	0x9090
 33879 fa35 03       		.byte	0x3
 33880 fa36 74FA0000 		.long	0xfa74
 33881 fa3a 35       		.uleb128 0x35
 33882 fa3b 00000000 		.long	.LASF1113
 33883 fa3f 169F0000 		.long	0x9f16
 33884 fa43 35       		.uleb128 0x35
 33885 fa44 00000000 		.long	.LASF1114
 33886 fa48 A8930000 		.long	0x93a8
 33887 fa4c A201     		.uleb128 0xa2
 33888 fa4e 00000000 		.long	.LASF1679
 33889 fa52 0D       		.byte	0xd
 33890 fa53 AA07     		.value	0x7aa
 33891 fa55 169F0000 		.long	0x9f16
 33892 fa59 A201     		.uleb128 0xa2
 33893 fa5b 00000000 		.long	.LASF1680
GAS LISTING /tmp/ccJUMvuF.s 			page 896


 33894 fa5f 0D       		.byte	0xd
 33895 fa60 AA07     		.value	0x7aa
 33896 fa62 169F0000 		.long	0x9f16
 33897 fa66 A201     		.uleb128 0xa2
 33898 fa68 00000000 		.long	.LASF1686
 33899 fa6c 0D       		.byte	0xd
 33900 fa6d AB07     		.value	0x7ab
 33901 fa6f A8930000 		.long	0x93a8
 33902 fa73 00       		.byte	0
 33903 fa74 AB01     		.uleb128 0xab
 33904 fa76 9E940000 		.long	0x949e
 33905 fa7a 03       		.byte	0x3
 33906 fa7b 9D01     		.uleb128 0x9d
 33907 fa7d BE900000 		.long	0x90be
 33908 fa81 03       		.byte	0x3
 33909 fa82 BDFA0000 		.long	0xfabd
 33910 fa86 35       		.uleb128 0x35
 33911 fa87 00000000 		.long	.LASF1164
 33912 fa8b 169F0000 		.long	0x9f16
 33913 fa8f 18       		.uleb128 0x18
 33914 fa90 5F547000 		.string	"_Tp"
 33915 fa94 29000000 		.long	0x29
 33916 fa98 9E01     		.uleb128 0x9e
 33917 fa9a 00000000 		.long	.LASF1679
 33918 fa9e 13       		.byte	0x13
 33919 fa9f 78       		.byte	0x78
 33920 faa0 169F0000 		.long	0x9f16
 33921 faa4 9E01     		.uleb128 0x9e
 33922 faa6 00000000 		.long	.LASF1680
 33923 faaa 13       		.byte	0x13
 33924 faab 78       		.byte	0x78
 33925 faac 169F0000 		.long	0x9f16
 33926 fab0 9E01     		.uleb128 0x9e
 33927 fab2 00000000 		.long	.LASF1708
 33928 fab6 13       		.byte	0x13
 33929 fab7 78       		.byte	0x78
 33930 fab8 29000000 		.long	0x29
 33931 fabc 00       		.byte	0
 33932 fabd 9D01     		.uleb128 0x9d
 33933 fabf EF900000 		.long	0x90ef
 33934 fac3 03       		.byte	0x3
 33935 fac4 ECFA0000 		.long	0xfaec
 33936 fac8 35       		.uleb128 0x35
 33937 fac9 00000000 		.long	.LASF1166
 33938 facd 169F0000 		.long	0x9f16
 33939 fad1 A201     		.uleb128 0xa2
 33940 fad3 00000000 		.long	.LASF1679
 33941 fad7 0D       		.byte	0xd
 33942 fad8 4412     		.value	0x1244
 33943 fada 169F0000 		.long	0x9f16
 33944 fade A201     		.uleb128 0xa2
 33945 fae0 00000000 		.long	.LASF1680
 33946 fae4 0D       		.byte	0xd
 33947 fae5 4412     		.value	0x1244
 33948 fae7 169F0000 		.long	0x9f16
 33949 faeb 00       		.byte	0
 33950 faec 7E       		.uleb128 0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 897


 33951 faed 08       		.byte	0x8
 33952 faee F2FA0000 		.long	0xfaf2
 33953 faf2 9201     		.uleb128 0x92
 33954 faf4 E7C00000 		.long	0xc0e7
 33955 faf8 02FB0000 		.long	0xfb02
 33956 fafc 09       		.uleb128 0x9
 33957 fafd E7C00000 		.long	0xc0e7
 33958 fb01 00       		.byte	0
 33959 fb02 9801     		.uleb128 0x98
 33960 fb04 15290000 		.long	0x2915
 33961 fb08 03       		.byte	0x3
 33962 fb09 11FB0000 		.long	0xfb11
 33963 fb0d 28FB0000 		.long	0xfb28
 33964 fb11 9901     		.uleb128 0x99
 33965 fb13 00000000 		.long	.LASF1661
 33966 fb17 7DCC0000 		.long	0xcc7d
 33967 fb1b 9E01     		.uleb128 0x9e
 33968 fb1d 00000000 		.long	.LASF1671
 33969 fb21 09       		.byte	0x9
 33970 fb22 7F       		.byte	0x7f
 33971 fb23 ECFA0000 		.long	0xfaec
 33972 fb27 00       		.byte	0
 33973 fb28 9801     		.uleb128 0x98
 33974 fb2a 42390000 		.long	0x3942
 33975 fb2e 03       		.byte	0x3
 33976 fb2f 37FB0000 		.long	0xfb37
 33977 fb33 4CFB0000 		.long	0xfb4c
 33978 fb37 9901     		.uleb128 0x99
 33979 fb39 00000000 		.long	.LASF1661
 33980 fb3d 56CD0000 		.long	0xcd56
 33981 fb41 9901     		.uleb128 0x99
 33982 fb43 00000000 		.long	.LASF1675
 33983 fb47 C9AE0000 		.long	0xaec9
 33984 fb4b 00       		.byte	0
 33985 fb4c 9801     		.uleb128 0x98
 33986 fb4e BA5C0000 		.long	0x5cba
 33987 fb52 03       		.byte	0x3
 33988 fb53 5BFB0000 		.long	0xfb5b
 33989 fb57 72FB0000 		.long	0xfb72
 33990 fb5b 9901     		.uleb128 0x99
 33991 fb5d 00000000 		.long	.LASF1661
 33992 fb61 6CDA0000 		.long	0xda6c
 33993 fb65 A001     		.uleb128 0xa0
 33994 fb67 5F5F7000 		.string	"__p"
 33995 fb6b 17       		.byte	0x17
 33996 fb6c A9       		.byte	0xa9
 33997 fb6d 8C5C0000 		.long	0x5c8c
 33998 fb71 00       		.byte	0
 33999 fb72 9801     		.uleb128 0x98
 34000 fb74 5C660000 		.long	0x665c
 34001 fb78 03       		.byte	0x3
 34002 fb79 81FB0000 		.long	0xfb81
 34003 fb7d 98FB0000 		.long	0xfb98
 34004 fb81 9901     		.uleb128 0x99
 34005 fb83 00000000 		.long	.LASF1661
 34006 fb87 73DB0000 		.long	0xdb73
 34007 fb8b A001     		.uleb128 0xa0
GAS LISTING /tmp/ccJUMvuF.s 			page 898


 34008 fb8d 5F5F7000 		.string	"__p"
 34009 fb91 17       		.byte	0x17
 34010 fb92 A9       		.byte	0xa9
 34011 fb93 2E660000 		.long	0x662e
 34012 fb97 00       		.byte	0
 34013 fb98 9801     		.uleb128 0x98
 34014 fb9a EB5D0000 		.long	0x5deb
 34015 fb9e 03       		.byte	0x3
 34016 fb9f A7FB0000 		.long	0xfba7
 34017 fba3 B2FB0000 		.long	0xfbb2
 34018 fba7 9901     		.uleb128 0x99
 34019 fba9 00000000 		.long	.LASF1661
 34020 fbad B2FB0000 		.long	0xfbb2
 34021 fbb1 00       		.byte	0
 34022 fbb2 11       		.uleb128 0x11
 34023 fbb3 0CC70000 		.long	0xc70c
 34024 fbb7 9801     		.uleb128 0x98
 34025 fbb9 8D670000 		.long	0x678d
 34026 fbbd 03       		.byte	0x3
 34027 fbbe C6FB0000 		.long	0xfbc6
 34028 fbc2 D1FB0000 		.long	0xfbd1
 34029 fbc6 9901     		.uleb128 0x99
 34030 fbc8 00000000 		.long	.LASF1661
 34031 fbcc D1FB0000 		.long	0xfbd1
 34032 fbd0 00       		.byte	0
 34033 fbd1 11       		.uleb128 0x11
 34034 fbd2 E8C70000 		.long	0xc7e8
 34035 fbd6 9801     		.uleb128 0x98
 34036 fbd8 616F0000 		.long	0x6f61
 34037 fbdc 03       		.byte	0x3
 34038 fbdd E5FB0000 		.long	0xfbe5
 34039 fbe1 F0FB0000 		.long	0xfbf0
 34040 fbe5 9901     		.uleb128 0x99
 34041 fbe7 00000000 		.long	.LASF1661
 34042 fbeb DFDB0000 		.long	0xdbdf
 34043 fbef 00       		.byte	0
 34044 fbf0 9801     		.uleb128 0x98
 34045 fbf2 2CC40000 		.long	0xc42c
 34046 fbf6 03       		.byte	0x3
 34047 fbf7 FFFB0000 		.long	0xfbff
 34048 fbfb 0AFC0000 		.long	0xfc0a
 34049 fbff 9901     		.uleb128 0x99
 34050 fc01 00000000 		.long	.LASF1661
 34051 fc05 0AFC0000 		.long	0xfc0a
 34052 fc09 00       		.byte	0
 34053 fc0a 11       		.uleb128 0x11
 34054 fc0b 66C40000 		.long	0xc466
 34055 fc0f 9801     		.uleb128 0x98
 34056 fc11 B9760000 		.long	0x76b9
 34057 fc15 03       		.byte	0x3
 34058 fc16 1EFC0000 		.long	0xfc1e
 34059 fc1a 33FC0000 		.long	0xfc33
 34060 fc1e 9901     		.uleb128 0x99
 34061 fc20 00000000 		.long	.LASF1661
 34062 fc24 10D40000 		.long	0xd410
 34063 fc28 9901     		.uleb128 0x99
 34064 fc2a 00000000 		.long	.LASF1675
GAS LISTING /tmp/ccJUMvuF.s 			page 899


 34065 fc2e C9AE0000 		.long	0xaec9
 34066 fc32 00       		.byte	0
 34067 fc33 9801     		.uleb128 0x98
 34068 fc35 ED660000 		.long	0x66ed
 34069 fc39 03       		.byte	0x3
 34070 fc3a 42FC0000 		.long	0xfc42
 34071 fc3e 66FC0000 		.long	0xfc66
 34072 fc42 9901     		.uleb128 0x99
 34073 fc44 00000000 		.long	.LASF1661
 34074 fc48 73DB0000 		.long	0xdb73
 34075 fc4c 9901     		.uleb128 0x99
 34076 fc4e 00000000 		.long	.LASF1675
 34077 fc52 C9AE0000 		.long	0xaec9
 34078 fc56 9B01     		.uleb128 0x9b
 34079 fc58 9C01     		.uleb128 0x9c
 34080 fc5a 00000000 		.long	.LASF1709
 34081 fc5e 17       		.byte	0x17
 34082 fc5f EA       		.byte	0xea
 34083 fc60 66FC0000 		.long	0xfc66
 34084 fc64 00       		.byte	0
 34085 fc65 00       		.byte	0
 34086 fc66 11       		.uleb128 0x11
 34087 fc67 78C70000 		.long	0xc778
 34088 fc6b 9801     		.uleb128 0x98
 34089 fc6d 4B5D0000 		.long	0x5d4b
 34090 fc71 03       		.byte	0x3
 34091 fc72 7AFC0000 		.long	0xfc7a
 34092 fc76 9EFC0000 		.long	0xfc9e
 34093 fc7a 9901     		.uleb128 0x99
 34094 fc7c 00000000 		.long	.LASF1661
 34095 fc80 6CDA0000 		.long	0xda6c
 34096 fc84 9901     		.uleb128 0x99
 34097 fc86 00000000 		.long	.LASF1675
 34098 fc8a C9AE0000 		.long	0xaec9
 34099 fc8e 9B01     		.uleb128 0x9b
 34100 fc90 9C01     		.uleb128 0x9c
 34101 fc92 00000000 		.long	.LASF1709
 34102 fc96 17       		.byte	0x17
 34103 fc97 EA       		.byte	0xea
 34104 fc98 9EFC0000 		.long	0xfc9e
 34105 fc9c 00       		.byte	0
 34106 fc9d 00       		.byte	0
 34107 fc9e 11       		.uleb128 0x11
 34108 fc9f 9CC60000 		.long	0xc69c
 34109 fca3 9801     		.uleb128 0x98
 34110 fca5 C0830000 		.long	0x83c0
 34111 fca9 03       		.byte	0x3
 34112 fcaa B2FC0000 		.long	0xfcb2
 34113 fcae CAFC0000 		.long	0xfcca
 34114 fcb2 9901     		.uleb128 0x99
 34115 fcb4 00000000 		.long	.LASF1661
 34116 fcb8 46C90000 		.long	0xc946
 34117 fcbc A101     		.uleb128 0xa1
 34118 fcbe 5F5F6300 		.string	"__c"
 34119 fcc2 0E       		.byte	0xe
 34120 fcc3 BB01     		.value	0x1bb
 34121 fcc5 ACAE0000 		.long	0xaeac
GAS LISTING /tmp/ccJUMvuF.s 			page 900


 34122 fcc9 00       		.byte	0
 34123 fcca 9801     		.uleb128 0x98
 34124 fccc F5C30000 		.long	0xc3f5
 34125 fcd0 02       		.byte	0x2
 34126 fcd1 D9FC0000 		.long	0xfcd9
 34127 fcd5 F0FC0000 		.long	0xfcf0
 34128 fcd9 9901     		.uleb128 0x99
 34129 fcdb 00000000 		.long	.LASF1661
 34130 fcdf F0FC0000 		.long	0xfcf0
 34131 fce3 9E01     		.uleb128 0x9e
 34132 fce5 00000000 		.long	.LASF1710
 34133 fce9 02       		.byte	0x2
 34134 fcea 37       		.byte	0x37
 34135 fceb 28930000 		.long	0x9328
 34136 fcef 00       		.byte	0
 34137 fcf0 11       		.uleb128 0x11
 34138 fcf1 60C40000 		.long	0xc460
 34139 fcf5 9801     		.uleb128 0x98
 34140 fcf7 B1470000 		.long	0x47b1
 34141 fcfb 03       		.byte	0x3
 34142 fcfc 04FD0000 		.long	0xfd04
 34143 fd00 1BFD0000 		.long	0xfd1b
 34144 fd04 9901     		.uleb128 0x99
 34145 fd06 00000000 		.long	.LASF1661
 34146 fd0a BAE00000 		.long	0xe0ba
 34147 fd0e A001     		.uleb128 0xa0
 34148 fd10 5F5F6E00 		.string	"__n"
 34149 fd14 06       		.byte	0x6
 34150 fd15 B7       		.byte	0xb7
 34151 fd16 85060000 		.long	0x685
 34152 fd1a 00       		.byte	0
 34153 fd1b 9801     		.uleb128 0x98
 34154 fd1d CD480000 		.long	0x48cd
 34155 fd21 02       		.byte	0x2
 34156 fd22 2AFD0000 		.long	0xfd2a
 34157 fd26 4FFD0000 		.long	0xfd4f
 34158 fd2a 9901     		.uleb128 0x99
 34159 fd2c 00000000 		.long	.LASF1661
 34160 fd30 2ED30000 		.long	0xd32e
 34161 fd34 A101     		.uleb128 0xa1
 34162 fd36 5F5F6E00 		.string	"__n"
 34163 fd3a 06       		.byte	0x6
 34164 fd3b 1501     		.value	0x115
 34165 fd3d 7E480000 		.long	0x487e
 34166 fd41 A101     		.uleb128 0xa1
 34167 fd43 5F5F6100 		.string	"__a"
 34168 fd47 06       		.byte	0x6
 34169 fd48 1501     		.value	0x115
 34170 fd4a 4FFD0000 		.long	0xfd4f
 34171 fd4e 00       		.byte	0
 34172 fd4f 11       		.uleb128 0x11
 34173 fd50 2FC30000 		.long	0xc32f
 34174 fd54 AC01     		.uleb128 0xac
 34175 fd56 00000000 		.long	.LASF1711
 34176 fd5a 05       		.byte	0x5
 34177 fd5b 31       		.byte	0x31
 34178 fd5c E8470000 		.long	0x47e8
GAS LISTING /tmp/ccJUMvuF.s 			page 901


 34179 fd60 03       		.byte	0x3
 34180 fd61 F1FD0000 		.long	0xfdf1
 34181 fd65 9E01     		.uleb128 0x9e
 34182 fd67 00000000 		.long	.LASF1712
 34183 fd6b 05       		.byte	0x5
 34184 fd6c 31       		.byte	0x31
 34185 fd6d 3BAE0000 		.long	0xae3b
 34186 fd71 9E01     		.uleb128 0x9e
 34187 fd73 00000000 		.long	.LASF1713
 34188 fd77 05       		.byte	0x5
 34189 fd78 31       		.byte	0x31
 34190 fd79 68930000 		.long	0x9368
 34191 fd7d 9B01     		.uleb128 0x9b
 34192 fd7f 9C01     		.uleb128 0x9c
 34193 fd81 00000000 		.long	.LASF1714
 34194 fd85 05       		.byte	0x5
 34195 fd86 33       		.byte	0x33
 34196 fd87 E8470000 		.long	0x47e8
 34197 fd8b 9F01     		.uleb128 0x9f
 34198 fd8d 726400   		.string	"rd"
 34199 fd90 05       		.byte	0x5
 34200 fd91 35       		.byte	0x35
 34201 fd92 102F0000 		.long	0x2f10
 34202 fd96 9C01     		.uleb128 0x9c
 34203 fd98 00000000 		.long	.LASF1715
 34204 fd9c 05       		.byte	0x5
 34205 fd9d 36       		.byte	0x36
 34206 fd9e C4300000 		.long	0x30c4
 34207 fda2 9C01     		.uleb128 0x9c
 34208 fda4 00000000 		.long	.LASF1716
 34209 fda8 05       		.byte	0x5
 34210 fda9 37       		.byte	0x37
 34211 fdaa 91530000 		.long	0x5391
 34212 fdae AD01     		.uleb128 0xad
 34213 fdb0 BBFD0000 		.long	0xfdbb
 34214 fdb4 AE01     		.uleb128 0xae
 34215 fdb6 84F40000 		.long	0xf484
 34216 fdba 00       		.byte	0
 34217 fdbb AD01     		.uleb128 0xad
 34218 fdbd C8FD0000 		.long	0xfdc8
 34219 fdc1 AE01     		.uleb128 0xae
 34220 fdc3 1ED70000 		.long	0xd71e
 34221 fdc7 00       		.byte	0
 34222 fdc8 AD01     		.uleb128 0xad
 34223 fdca D5FD0000 		.long	0xfdd5
 34224 fdce AE01     		.uleb128 0xae
 34225 fdd0 B8F20000 		.long	0xf2b8
 34226 fdd4 00       		.byte	0
 34227 fdd5 AD01     		.uleb128 0xad
 34228 fdd7 E2FD0000 		.long	0xfde2
 34229 fddb AE01     		.uleb128 0xae
 34230 fddd B8F20000 		.long	0xf2b8
 34231 fde1 00       		.byte	0
 34232 fde2 9B01     		.uleb128 0x9b
 34233 fde4 9F01     		.uleb128 0x9f
 34234 fde6 7400     		.string	"t"
 34235 fde8 05       		.byte	0x5
GAS LISTING /tmp/ccJUMvuF.s 			page 902


 34236 fde9 3A       		.byte	0x3a
 34237 fdea 78C30000 		.long	0xc378
 34238 fdee 00       		.byte	0
 34239 fdef 00       		.byte	0
 34240 fdf0 00       		.byte	0
 34241 fdf1 AF01     		.uleb128 0xaf
 34242 fdf3 00000000 		.long	.LASF1799
 34243 fdf7 01       		.byte	0x1
 34244 fdf8 15FE0000 		.long	0xfe15
 34245 fdfc 9E01     		.uleb128 0x9e
 34246 fdfe 00000000 		.long	.LASF1717
 34247 fe02 16       		.byte	0x16
 34248 fe03 4E       		.byte	0x4e
 34249 fe04 28930000 		.long	0x9328
 34250 fe08 9E01     		.uleb128 0x9e
 34251 fe0a 00000000 		.long	.LASF1718
 34252 fe0e 16       		.byte	0x16
 34253 fe0f 4E       		.byte	0x4e
 34254 fe10 28930000 		.long	0x9328
 34255 fe14 00       		.byte	0
 34256 fe15 9801     		.uleb128 0x98
 34257 fe17 A6C30000 		.long	0xc3a6
 34258 fe1b 02       		.byte	0x2
 34259 fe1c 24FE0000 		.long	0xfe24
 34260 fe20 47FE0000 		.long	0xfe47
 34261 fe24 9901     		.uleb128 0x99
 34262 fe26 00000000 		.long	.LASF1661
 34263 fe2a 87F30000 		.long	0xf387
 34264 fe2e 9901     		.uleb128 0x99
 34265 fe30 00000000 		.long	.LASF1675
 34266 fe34 C9AE0000 		.long	0xaec9
 34267 fe38 9B01     		.uleb128 0x9b
 34268 fe3a 9F01     		.uleb128 0x9f
 34269 fe3c 743100   		.string	"t1"
 34270 fe3f 02       		.byte	0x2
 34271 fe40 30       		.byte	0x30
 34272 fe41 29000000 		.long	0x29
 34273 fe45 00       		.byte	0
 34274 fe46 00       		.byte	0
 34275 fe47 9D01     		.uleb128 0x9d
 34276 fe49 0F910000 		.long	0x910f
 34277 fe4d 03       		.byte	0x3
 34278 fe4e 72FE0000 		.long	0xfe72
 34279 fe52 35       		.uleb128 0x35
 34280 fe53 00000000 		.long	.LASF301
 34281 fe57 ACAE0000 		.long	0xaeac
 34282 fe5b 35       		.uleb128 0x35
 34283 fe5c 00000000 		.long	.LASF302
 34284 fe60 BD040000 		.long	0x4bd
 34285 fe64 A201     		.uleb128 0xa2
 34286 fe66 00000000 		.long	.LASF1678
 34287 fe6a 09       		.byte	0x9
 34288 fe6b 3402     		.value	0x234
 34289 fe6d 72FE0000 		.long	0xfe72
 34290 fe71 00       		.byte	0
 34291 fe72 11       		.uleb128 0x11
 34292 fe73 72C10000 		.long	0xc172
GAS LISTING /tmp/ccJUMvuF.s 			page 903


 34293 fe77 9801     		.uleb128 0x98
 34294 fe79 2A2A0000 		.long	0x2a2a
 34295 fe7d 03       		.byte	0x3
 34296 fe7e 86FE0000 		.long	0xfe86
 34297 fe82 9EFE0000 		.long	0xfe9e
 34298 fe86 9901     		.uleb128 0x99
 34299 fe88 00000000 		.long	.LASF1661
 34300 fe8c 46CC0000 		.long	0xcc46
 34301 fe90 A101     		.uleb128 0xa1
 34302 fe92 5F5F6300 		.string	"__c"
 34303 fe96 01       		.byte	0x1
 34304 fe97 3304     		.value	0x433
 34305 fe99 ACAE0000 		.long	0xaeac
 34306 fe9d 00       		.byte	0
 34307 fe9e 9D01     		.uleb128 0x9d
 34308 fea0 37910000 		.long	0x9137
 34309 fea4 03       		.byte	0x3
 34310 fea5 F3FE0000 		.long	0xfef3
 34311 fea9 35       		.uleb128 0x35
 34312 feaa 00000000 		.long	.LASF1113
 34313 feae 169F0000 		.long	0x9f16
 34314 feb2 35       		.uleb128 0x35
 34315 feb3 00000000 		.long	.LASF1114
 34316 feb7 A8930000 		.long	0x93a8
 34317 febb A201     		.uleb128 0xa2
 34318 febd 00000000 		.long	.LASF1679
 34319 fec1 0D       		.byte	0xd
 34320 fec2 7C07     		.value	0x77c
 34321 fec4 169F0000 		.long	0x9f16
 34322 fec8 A201     		.uleb128 0xa2
 34323 feca 00000000 		.long	.LASF1680
 34324 fece 0D       		.byte	0xd
 34325 fecf 7D07     		.value	0x77d
 34326 fed1 169F0000 		.long	0x9f16
 34327 fed5 A201     		.uleb128 0xa2
 34328 fed7 00000000 		.long	.LASF1686
 34329 fedb 0D       		.byte	0xd
 34330 fedc 7D07     		.value	0x77d
 34331 fede A8930000 		.long	0x93a8
 34332 fee2 9B01     		.uleb128 0x9b
 34333 fee4 A301     		.uleb128 0xa3
 34334 fee6 00000000 		.long	.LASF1719
 34335 feea 0D       		.byte	0xd
 34336 feeb 7F07     		.value	0x77f
 34337 feed 169F0000 		.long	0x9f16
 34338 fef1 00       		.byte	0
 34339 fef2 00       		.byte	0
 34340 fef3 9D01     		.uleb128 0x9d
 34341 fef5 69910000 		.long	0x9169
 34342 fef9 01       		.byte	0x1
 34343 fefa 4DFF0000 		.long	0xff4d
 34344 fefe 35       		.uleb128 0x35
 34345 feff 00000000 		.long	.LASF745
 34346 ff03 169F0000 		.long	0x9f16
 34347 ff07 35       		.uleb128 0x35
 34348 ff08 00000000 		.long	.LASF1114
 34349 ff0c A8930000 		.long	0x93a8
GAS LISTING /tmp/ccJUMvuF.s 			page 904


 34350 ff10 9E01     		.uleb128 0x9e
 34351 ff12 00000000 		.long	.LASF1666
 34352 ff16 0D       		.byte	0xd
 34353 ff17 4E       		.byte	0x4e
 34354 ff18 169F0000 		.long	0x9f16
 34355 ff1c A001     		.uleb128 0xa0
 34356 ff1e 5F5F6100 		.string	"__a"
 34357 ff22 0D       		.byte	0xd
 34358 ff23 4E       		.byte	0x4e
 34359 ff24 169F0000 		.long	0x9f16
 34360 ff28 A001     		.uleb128 0xa0
 34361 ff2a 5F5F6200 		.string	"__b"
 34362 ff2e 0D       		.byte	0xd
 34363 ff2f 4E       		.byte	0x4e
 34364 ff30 169F0000 		.long	0x9f16
 34365 ff34 A001     		.uleb128 0xa0
 34366 ff36 5F5F6300 		.string	"__c"
 34367 ff3a 0D       		.byte	0xd
 34368 ff3b 4F       		.byte	0x4f
 34369 ff3c 169F0000 		.long	0x9f16
 34370 ff40 9E01     		.uleb128 0x9e
 34371 ff42 00000000 		.long	.LASF1686
 34372 ff46 0D       		.byte	0xd
 34373 ff47 4F       		.byte	0x4f
 34374 ff48 A8930000 		.long	0x93a8
 34375 ff4c 00       		.byte	0
 34376 ff4d A701     		.uleb128 0xa7
 34377 ff4f 592E0000 		.long	0x2e59
 34378 ff53 03       		.byte	0x3
 34379 ff54 8D01     		.value	0x18d
 34380 ff56 01       		.byte	0x1
 34381 ff57 5FFF0000 		.long	0xff5f
 34382 ff5b D8FF0000 		.long	0xffd8
 34383 ff5f 9901     		.uleb128 0x99
 34384 ff61 00000000 		.long	.LASF1661
 34385 ff65 92DF0000 		.long	0xdf92
 34386 ff69 9B01     		.uleb128 0x9b
 34387 ff6b A301     		.uleb128 0xa3
 34388 ff6d 00000000 		.long	.LASF1720
 34389 ff71 03       		.byte	0x3
 34390 ff72 9101     		.value	0x191
 34391 ff74 4E930000 		.long	0x934e
 34392 ff78 A301     		.uleb128 0xa3
 34393 ff7a 00000000 		.long	.LASF1721
 34394 ff7e 03       		.byte	0x3
 34395 ff7f 9201     		.value	0x192
 34396 ff81 4E930000 		.long	0x934e
 34397 ff85 A801     		.uleb128 0xa8
 34398 ff87 5F5F7900 		.string	"__y"
 34399 ff8b 03       		.byte	0x3
 34400 ff8c A401     		.value	0x1a4
 34401 ff8e 53930000 		.long	0x9353
 34402 ff92 AD01     		.uleb128 0xad
 34403 ff94 B6FF0000 		.long	0xffb6
 34404 ff98 A801     		.uleb128 0xa8
 34405 ff9a 5F5F6B00 		.string	"__k"
 34406 ff9e 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 905


 34407 ff9f 9401     		.value	0x194
 34408 ffa1 85060000 		.long	0x685
 34409 ffa5 9B01     		.uleb128 0x9b
 34410 ffa7 A801     		.uleb128 0xa8
 34411 ffa9 5F5F7900 		.string	"__y"
 34412 ffad 03       		.byte	0x3
 34413 ffae 9601     		.value	0x196
 34414 ffb0 53930000 		.long	0x9353
 34415 ffb4 00       		.byte	0
 34416 ffb5 00       		.byte	0
 34417 ffb6 9B01     		.uleb128 0x9b
 34418 ffb8 A801     		.uleb128 0xa8
 34419 ffba 5F5F6B00 		.string	"__k"
 34420 ffbe 03       		.byte	0x3
 34421 ffbf 9C01     		.value	0x19c
 34422 ffc1 85060000 		.long	0x685
 34423 ffc5 9B01     		.uleb128 0x9b
 34424 ffc7 A801     		.uleb128 0xa8
 34425 ffc9 5F5F7900 		.string	"__y"
 34426 ffcd 03       		.byte	0x3
 34427 ffce 9E01     		.value	0x19e
 34428 ffd0 53930000 		.long	0x9353
 34429 ffd4 00       		.byte	0
 34430 ffd5 00       		.byte	0
 34431 ffd6 00       		.byte	0
 34432 ffd7 00       		.byte	0
 34433 ffd8 9801     		.uleb128 0x98
 34434 ffda 74550000 		.long	0x5574
 34435 ffde 01       		.byte	0x1
 34436 ffdf F0FF0000 		.long	0xfff0
 34437 ffe3 C5000100 		.long	0x100c5
 34438 ffe7 35       		.uleb128 0x35
 34439 ffe8 00000000 		.long	.LASF768
 34440 ffec C92C0000 		.long	0x2cc9
 34441 fff0 9901     		.uleb128 0x99
 34442 fff2 00000000 		.long	.LASF1661
 34443 fff6 D4EA0000 		.long	0xead4
 34444 fffa A201     		.uleb128 0xa2
 34445 fffc 00000000 		.long	.LASF1692
 34446 10000 03       		.byte	0x3
 34447 10001 6F03     		.value	0x36f
 34448 10003 C5000100 		.long	0x100c5
 34449 10007 A201     		.uleb128 0xa2
 34450 10009 00000000 		.long	.LASF1722
 34451 1000d 03       		.byte	0x3
 34452 1000e 7003     		.value	0x370
 34453 10010 CA000100 		.long	0x100ca
 34454 10014 AD01     		.uleb128 0xad
 34455 10016 BB000100 		.long	0x100bb
 34456 1001a 5C       		.uleb128 0x5c
 34457 1001b 00000000 		.long	.LASF1723
 34458 1001f 03       		.byte	0x3
 34459 10020 7603     		.value	0x376
 34460 10022 1D820000 		.long	0x821d
 34461 10026 A301     		.uleb128 0xa3
 34462 10028 00000000 		.long	.LASF1724
 34463 1002c 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 906


 34464 1002d 7803     		.value	0x378
 34465 1002f 33000100 		.long	0x10033
 34466 10033 11       		.uleb128 0x11
 34467 10034 1A000100 		.long	0x1001a
 34468 10038 A301     		.uleb128 0xa3
 34469 1003a 00000000 		.long	.LASF1725
 34470 1003e 03       		.byte	0x3
 34471 1003f 7903     		.value	0x379
 34472 10041 33000100 		.long	0x10033
 34473 10045 A301     		.uleb128 0xa3
 34474 10047 00000000 		.long	.LASF1726
 34475 1004b 03       		.byte	0x3
 34476 1004c 7A03     		.value	0x37a
 34477 1004e 33000100 		.long	0x10033
 34478 10052 A301     		.uleb128 0xa3
 34479 10054 00000000 		.long	.LASF1727
 34480 10058 03       		.byte	0x3
 34481 10059 7B03     		.value	0x37b
 34482 1005b 33000100 		.long	0x10033
 34483 1005f A301     		.uleb128 0xa3
 34484 10061 00000000 		.long	.LASF1728
 34485 10065 03       		.byte	0x3
 34486 10066 7E03     		.value	0x37e
 34487 10068 1A000100 		.long	0x1001a
 34488 1006c AD01     		.uleb128 0xad
 34489 1006e 9A000100 		.long	0x1009a
 34490 10072 A301     		.uleb128 0xa3
 34491 10074 00000000 		.long	.LASF1729
 34492 10078 03       		.byte	0x3
 34493 10079 8303     		.value	0x383
 34494 1007b 33000100 		.long	0x10033
 34495 1007f A301     		.uleb128 0xa3
 34496 10081 00000000 		.long	.LASF1730
 34497 10085 03       		.byte	0x3
 34498 10086 8403     		.value	0x384
 34499 10088 33000100 		.long	0x10033
 34500 1008c A301     		.uleb128 0xa3
 34501 1008e 00000000 		.long	.LASF1731
 34502 10092 03       		.byte	0x3
 34503 10093 8503     		.value	0x385
 34504 10095 33000100 		.long	0x10033
 34505 10099 00       		.byte	0
 34506 1009a 9B01     		.uleb128 0x9b
 34507 1009c A301     		.uleb128 0xa3
 34508 1009e 00000000 		.long	.LASF1688
 34509 100a2 03       		.byte	0x3
 34510 100a3 9C03     		.value	0x39c
 34511 100a5 1A000100 		.long	0x1001a
 34512 100a9 9B01     		.uleb128 0x9b
 34513 100ab A301     		.uleb128 0xa3
 34514 100ad 00000000 		.long	.LASF1732
 34515 100b1 03       		.byte	0x3
 34516 100b2 9F03     		.value	0x39f
 34517 100b4 33000100 		.long	0x10033
 34518 100b8 00       		.byte	0
 34519 100b9 00       		.byte	0
 34520 100ba 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 907


 34521 100bb 35       		.uleb128 0x35
 34522 100bc 00000000 		.long	.LASF768
 34523 100c0 C92C0000 		.long	0x2cc9
 34524 100c4 00       		.byte	0
 34525 100c5 11       		.uleb128 0x11
 34526 100c6 D9C50000 		.long	0xc5d9
 34527 100ca 11       		.uleb128 0x11
 34528 100cb 8BC50000 		.long	0xc58b
 34529 100cf 9801     		.uleb128 0x98
 34530 100d1 D2750000 		.long	0x75d2
 34531 100d5 02       		.byte	0x2
 34532 100d6 DE000100 		.long	0x100de
 34533 100da 03010100 		.long	0x10103
 34534 100de 9901     		.uleb128 0x99
 34535 100e0 00000000 		.long	.LASF1661
 34536 100e4 10D40000 		.long	0xd410
 34537 100e8 A101     		.uleb128 0xa1
 34538 100ea 5F5F6E00 		.string	"__n"
 34539 100ee 06       		.byte	0x6
 34540 100ef 1501     		.value	0x115
 34541 100f1 83750000 		.long	0x7583
 34542 100f5 A101     		.uleb128 0xa1
 34543 100f7 5F5F6100 		.string	"__a"
 34544 100fb 06       		.byte	0x6
 34545 100fc 1501     		.value	0x115
 34546 100fe 03010100 		.long	0x10103
 34547 10102 00       		.byte	0
 34548 10103 11       		.uleb128 0x11
 34549 10104 8CC80000 		.long	0xc88c
 34550 10108 9801     		.uleb128 0x98
 34551 1010a 5B380000 		.long	0x385b
 34552 1010e 02       		.byte	0x2
 34553 1010f 17010100 		.long	0x10117
 34554 10113 3C010100 		.long	0x1013c
 34555 10117 9901     		.uleb128 0x99
 34556 10119 00000000 		.long	.LASF1661
 34557 1011d 56CD0000 		.long	0xcd56
 34558 10121 A101     		.uleb128 0xa1
 34559 10123 5F5F6E00 		.string	"__n"
 34560 10127 06       		.byte	0x6
 34561 10128 1501     		.value	0x115
 34562 1012a 0C380000 		.long	0x380c
 34563 1012e A101     		.uleb128 0xa1
 34564 10130 5F5F6100 		.string	"__a"
 34565 10134 06       		.byte	0x6
 34566 10135 1501     		.value	0x115
 34567 10137 3C010100 		.long	0x1013c
 34568 1013b 00       		.byte	0
 34569 1013c 11       		.uleb128 0x11
 34570 1013d 60C20000 		.long	0xc260
 34571 10141 9801     		.uleb128 0x98
 34572 10143 3F370000 		.long	0x373f
 34573 10147 03       		.byte	0x3
 34574 10148 50010100 		.long	0x10150
 34575 1014c 67010100 		.long	0x10167
 34576 10150 9901     		.uleb128 0x99
 34577 10152 00000000 		.long	.LASF1661
GAS LISTING /tmp/ccJUMvuF.s 			page 908


 34578 10156 0EE20000 		.long	0xe20e
 34579 1015a A001     		.uleb128 0xa0
 34580 1015c 5F5F6E00 		.string	"__n"
 34581 10160 06       		.byte	0x6
 34582 10161 B7       		.byte	0xb7
 34583 10162 85060000 		.long	0x685
 34584 10166 00       		.byte	0
 34585 10167 9801     		.uleb128 0x98
 34586 10169 0FC40000 		.long	0xc40f
 34587 1016d 03       		.byte	0x3
 34588 1016e 76010100 		.long	0x10176
 34589 10172 90010100 		.long	0x10190
 34590 10176 9901     		.uleb128 0x99
 34591 10178 00000000 		.long	.LASF1661
 34592 1017c F0FC0000 		.long	0xfcf0
 34593 10180 9B01     		.uleb128 0x9b
 34594 10182 9C01     		.uleb128 0x9c
 34595 10184 00000000 		.long	.LASF1733
 34596 10188 02       		.byte	0x2
 34597 10189 3A       		.byte	0x3a
 34598 1018a 30930000 		.long	0x9330
 34599 1018e 00       		.byte	0
 34600 1018f 00       		.byte	0
 34601 10190 9801     		.uleb128 0x98
 34602 10192 49C40000 		.long	0xc449
 34603 10196 02       		.byte	0x2
 34604 10197 9F010100 		.long	0x1019f
 34605 1019b CF010100 		.long	0x101cf
 34606 1019f 9901     		.uleb128 0x99
 34607 101a1 00000000 		.long	.LASF1661
 34608 101a5 F0FC0000 		.long	0xfcf0
 34609 101a9 9901     		.uleb128 0x99
 34610 101ab 00000000 		.long	.LASF1675
 34611 101af C9AE0000 		.long	0xaec9
 34612 101b3 9B01     		.uleb128 0x9b
 34613 101b5 9F01     		.uleb128 0x9f
 34614 101b7 61766700 		.string	"avg"
 34615 101bb 02       		.byte	0x2
 34616 101bc 42       		.byte	0x42
 34617 101bd 29000000 		.long	0x29
 34618 101c1 9F01     		.uleb128 0x9f
 34619 101c3 6D656400 		.string	"med"
 34620 101c7 02       		.byte	0x2
 34621 101c8 46       		.byte	0x46
 34622 101c9 29000000 		.long	0x29
 34623 101cd 00       		.byte	0
 34624 101ce 00       		.byte	0
 34625 101cf 9D01     		.uleb128 0x9d
 34626 101d1 A0910000 		.long	0x91a0
 34627 101d5 01       		.byte	0x1
 34628 101d6 34020100 		.long	0x10234
 34629 101da 35       		.uleb128 0x35
 34630 101db 00000000 		.long	.LASF1113
 34631 101df 169F0000 		.long	0x9f16
 34632 101e3 35       		.uleb128 0x35
 34633 101e4 00000000 		.long	.LASF1114
 34634 101e8 A8930000 		.long	0x93a8
GAS LISTING /tmp/ccJUMvuF.s 			page 909


 34635 101ec A201     		.uleb128 0xa2
 34636 101ee 00000000 		.long	.LASF1679
 34637 101f2 0D       		.byte	0xd
 34638 101f3 2F07     		.value	0x72f
 34639 101f5 169F0000 		.long	0x9f16
 34640 101f9 A201     		.uleb128 0xa2
 34641 101fb 00000000 		.long	.LASF1680
 34642 101ff 0D       		.byte	0xd
 34643 10200 3007     		.value	0x730
 34644 10202 169F0000 		.long	0x9f16
 34645 10206 A201     		.uleb128 0xa2
 34646 10208 00000000 		.long	.LASF1686
 34647 1020c 0D       		.byte	0xd
 34648 1020d 3007     		.value	0x730
 34649 1020f A8930000 		.long	0x93a8
 34650 10213 9B01     		.uleb128 0x9b
 34651 10215 A801     		.uleb128 0xa8
 34652 10217 5F5F6900 		.string	"__i"
 34653 1021b 0D       		.byte	0xd
 34654 1021c 3407     		.value	0x734
 34655 1021e 169F0000 		.long	0x9f16
 34656 10222 9B01     		.uleb128 0x9b
 34657 10224 A301     		.uleb128 0xa3
 34658 10226 00000000 		.long	.LASF1664
 34659 1022a 0D       		.byte	0xd
 34660 1022b 3907     		.value	0x739
 34661 1022d 5C810000 		.long	0x815c
 34662 10231 00       		.byte	0
 34663 10232 00       		.byte	0
 34664 10233 00       		.byte	0
 34665 10234 9D01     		.uleb128 0x9d
 34666 10236 4F830000 		.long	0x834f
 34667 1023a 03       		.byte	0x3
 34668 1023b 80020100 		.long	0x10280
 34669 1023f 18       		.uleb128 0x18
 34670 10240 5F547000 		.string	"_Tp"
 34671 10244 29000000 		.long	0x29
 34672 10248 A201     		.uleb128 0xa2
 34673 1024a 00000000 		.long	.LASF1679
 34674 1024e 14       		.byte	0x14
 34675 1024f 3902     		.value	0x239
 34676 10251 CFC10000 		.long	0xc1cf
 34677 10255 A201     		.uleb128 0xa2
 34678 10257 00000000 		.long	.LASF1680
 34679 1025b 14       		.byte	0x14
 34680 1025c 3902     		.value	0x239
 34681 1025e CFC10000 		.long	0xc1cf
 34682 10262 A201     		.uleb128 0xa2
 34683 10264 00000000 		.long	.LASF1666
 34684 10268 14       		.byte	0x14
 34685 10269 3902     		.value	0x239
 34686 1026b C9C10000 		.long	0xc1c9
 34687 1026f 9B01     		.uleb128 0x9b
 34688 10271 A301     		.uleb128 0xa3
 34689 10273 00000000 		.long	.LASF1734
 34690 10277 14       		.byte	0x14
 34691 10278 4002     		.value	0x240
GAS LISTING /tmp/ccJUMvuF.s 			page 910


 34692 1027a CE910000 		.long	0x91ce
 34693 1027e 00       		.byte	0
 34694 1027f 00       		.byte	0
 34695 10280 9D01     		.uleb128 0x9d
 34696 10282 D3910000 		.long	0x91d3
 34697 10286 03       		.byte	0x3
 34698 10287 99020100 		.long	0x10299
 34699 1028b A201     		.uleb128 0xa2
 34700 1028d 00000000 		.long	.LASF1735
 34701 10291 15       		.byte	0x15
 34702 10292 BE03     		.value	0x3be
 34703 10294 99020100 		.long	0x10299
 34704 10298 00       		.byte	0
 34705 10299 11       		.uleb128 0x11
 34706 1029a E7C00000 		.long	0xc0e7
 34707 1029e B001     		.uleb128 0xb0
 34708 102a0 77FE0000 		.long	0xfe77
 34709 102a4 00000000 		.long	.LASF1740
 34710 102a8 00000000 		.quad	.LFB1390
 34710      00000000 
 34711 102b0 03000000 		.quad	.LFE1390-.LFB1390
 34711      00000000 
 34712 102b8 01       		.uleb128 0x1
 34713 102b9 9C       		.byte	0x9c
 34714 102ba C2020100 		.long	0x102c2
 34715 102be D3020100 		.long	0x102d3
 34716 102c2 B101     		.uleb128 0xb1
 34717 102c4 86FE0000 		.long	0xfe86
 34718 102c8 01       		.uleb128 0x1
 34719 102c9 55       		.byte	0x55
 34720 102ca B101     		.uleb128 0xb1
 34721 102cc 90FE0000 		.long	0xfe90
 34722 102d0 01       		.uleb128 0x1
 34723 102d1 54       		.byte	0x54
 34724 102d2 00       		.byte	0
 34725 102d3 B201     		.uleb128 0xb2
 34726 102d5 00000000 		.long	.LASF1736
 34727 102d9 02       		.byte	0x2
 34728 102da 22       		.byte	0x22
 34729 102db 00000000 		.long	.LASF1738
 34730 102df 29000000 		.long	0x29
 34731 102e3 00000000 		.quad	.LFB6033
 34731      00000000 
 34732 102eb 05000000 		.quad	.LFE6033-.LFB6033
 34732      00000000 
 34733 102f3 01       		.uleb128 0x1
 34734 102f4 9C       		.byte	0x9c
 34735 102f5 08030100 		.long	0x10308
 34736 102f9 B301     		.uleb128 0xb3
 34737 102fb 00000000 		.quad	.LVL1
 34737      00000000 
 34738 10303 C86B0100 		.long	0x16bc8
 34739 10307 00       		.byte	0
 34740 10308 B401     		.uleb128 0xb4
 34741 1030a 3A2E0000 		.long	0x2e3a
 34742 1030e 03       		.byte	0x3
 34743 1030f C501     		.value	0x1c5
GAS LISTING /tmp/ccJUMvuF.s 			page 911


 34744 10311 00000000 		.quad	.LFB6598
 34744      00000000 
 34745 10319 4D010000 		.quad	.LFE6598-.LFB6598
 34745      00000000 
 34746 10321 01       		.uleb128 0x1
 34747 10322 9C       		.byte	0x9c
 34748 10323 2B030100 		.long	0x1032b
 34749 10327 05040100 		.long	0x10405
 34750 1032b B501     		.uleb128 0xb5
 34751 1032d 00000000 		.long	.LASF1661
 34752 10331 92DF0000 		.long	0xdf92
 34753 10335 01       		.uleb128 0x1
 34754 10336 55       		.byte	0x55
 34755 10337 B601     		.uleb128 0xb6
 34756 10339 00000000 		.long	.Ldebug_ranges0+0
 34757 1033d B701     		.uleb128 0xb7
 34758 1033f 5F5F7A00 		.string	"__z"
 34759 10343 03       		.byte	0x3
 34760 10344 CE01     		.value	0x1ce
 34761 10346 0D2D0000 		.long	0x2d0d
 34762 1034a 00000000 		.long	.LLST0
 34763 1034e B801     		.uleb128 0xb8
 34764 10350 4DFF0000 		.long	0xff4d
 34765 10354 00000000 		.quad	.LBB3497
 34765      00000000 
 34766 1035c DD000000 		.quad	.LBE3497-.LBB3497
 34766      00000000 
 34767 10364 03       		.byte	0x3
 34768 10365 CB01     		.value	0x1cb
 34769 10367 AE01     		.uleb128 0xae
 34770 10369 5FFF0000 		.long	0xff5f
 34771 1036d B901     		.uleb128 0xb9
 34772 1036f 00000000 		.quad	.LBB3498
 34772      00000000 
 34773 10377 DD000000 		.quad	.LBE3498-.LBB3498
 34773      00000000 
 34774 1037f BA01     		.uleb128 0xba
 34775 10381 6BFF0000 		.long	0xff6b
 34776 10385 BA01     		.uleb128 0xba
 34777 10387 78FF0000 		.long	0xff78
 34778 1038b BB01     		.uleb128 0xbb
 34779 1038d 85FF0000 		.long	0xff85
 34780 10391 00000000 		.long	.LLST1
 34781 10395 BC01     		.uleb128 0xbc
 34782 10397 00000000 		.quad	.LBB3499
 34782      00000000 
 34783 1039f 58000000 		.quad	.LBE3499-.LBB3499
 34783      00000000 
 34784 103a7 CD030100 		.long	0x103cd
 34785 103ab BA01     		.uleb128 0xba
 34786 103ad 98FF0000 		.long	0xff98
 34787 103b1 B901     		.uleb128 0xb9
 34788 103b3 00000000 		.quad	.LBB3500
 34788      00000000 
 34789 103bb 36000000 		.quad	.LBE3500-.LBB3500
 34789      00000000 
 34790 103c3 BD01     		.uleb128 0xbd
GAS LISTING /tmp/ccJUMvuF.s 			page 912


 34791 103c5 A7FF0000 		.long	0xffa7
 34792 103c9 01       		.uleb128 0x1
 34793 103ca 50       		.byte	0x50
 34794 103cb 00       		.byte	0
 34795 103cc 00       		.byte	0
 34796 103cd B901     		.uleb128 0xb9
 34797 103cf 00000000 		.quad	.LBB3501
 34797      00000000 
 34798 103d7 3B000000 		.quad	.LBE3501-.LBB3501
 34798      00000000 
 34799 103df BA01     		.uleb128 0xba
 34800 103e1 B8FF0000 		.long	0xffb8
 34801 103e5 B901     		.uleb128 0xb9
 34802 103e7 00000000 		.quad	.LBB3502
 34802      00000000 
 34803 103ef 36000000 		.quad	.LBE3502-.LBB3502
 34803      00000000 
 34804 103f7 BD01     		.uleb128 0xbd
 34805 103f9 C7FF0000 		.long	0xffc7
 34806 103fd 01       		.uleb128 0x1
 34807 103fe 50       		.byte	0x50
 34808 103ff 00       		.byte	0
 34809 10400 00       		.byte	0
 34810 10401 00       		.byte	0
 34811 10402 00       		.byte	0
 34812 10403 00       		.byte	0
 34813 10404 00       		.byte	0
 34814 10405 B001     		.uleb128 0xb0
 34815 10407 D8FF0000 		.long	0xffd8
 34816 1040b 00000000 		.long	.LASF1741
 34817 1040f 00000000 		.quad	.LFB6565
 34817      00000000 
 34818 10417 31040000 		.quad	.LFE6565-.LFB6565
 34818      00000000 
 34819 1041f 01       		.uleb128 0x1
 34820 10420 9C       		.byte	0x9c
 34821 10421 29040100 		.long	0x10429
 34822 10425 CF0C0100 		.long	0x10ccf
 34823 10429 BE01     		.uleb128 0xbe
 34824 1042b F0FF0000 		.long	0xfff0
 34825 1042f 00000000 		.long	.LLST2
 34826 10433 BE01     		.uleb128 0xbe
 34827 10435 FAFF0000 		.long	0xfffa
 34828 10439 00000000 		.long	.LLST3
 34829 1043d BE01     		.uleb128 0xbe
 34830 1043f 07000100 		.long	0x10007
 34831 10443 00000000 		.long	.LLST4
 34832 10447 B601     		.uleb128 0xb6
 34833 10449 00000000 		.long	.Ldebug_ranges0+0x30
 34834 1044d BF01     		.uleb128 0xbf
 34835 1044f 26000100 		.long	0x10026
 34836 10453 00       		.byte	0
 34837 10454 C001     		.uleb128 0xc0
 34838 10456 38000100 		.long	0x10038
 34839 1045a FFFFFFFF 		.long	0xffffffff
 34840 1045e C001     		.uleb128 0xc0
 34841 10460 45000100 		.long	0x10045
GAS LISTING /tmp/ccJUMvuF.s 			page 913


 34842 10464 FFFFFFFF 		.long	0xffffffff
 34843 10468 BB01     		.uleb128 0xbb
 34844 1046a 52000100 		.long	0x10052
 34845 1046e 00000000 		.long	.LLST5
 34846 10472 BB01     		.uleb128 0xbb
 34847 10474 5F000100 		.long	0x1005f
 34848 10478 00000000 		.long	.LLST6
 34849 1047c BC01     		.uleb128 0xbc
 34850 1047e 00000000 		.quad	.LBB3506
 34850      00000000 
 34851 10486 2A000000 		.quad	.LBE3506-.LBB3506
 34851      00000000 
 34852 1048e C7040100 		.long	0x104c7
 34853 10492 BB01     		.uleb128 0xbb
 34854 10494 72000100 		.long	0x10072
 34855 10498 00000000 		.long	.LLST7
 34856 1049c BB01     		.uleb128 0xbb
 34857 1049e 7F000100 		.long	0x1007f
 34858 104a2 00000000 		.long	.LLST8
 34859 104a6 BB01     		.uleb128 0xbb
 34860 104a8 8C000100 		.long	0x1008c
 34861 104ac 00000000 		.long	.LLST9
 34862 104b0 C101     		.uleb128 0xc1
 34863 104b2 00000000 		.quad	.LVL23
 34863      00000000 
 34864 104ba 08030100 		.long	0x10308
 34865 104be C201     		.uleb128 0xc2
 34866 104c0 01       		.uleb128 0x1
 34867 104c1 55       		.byte	0x55
 34868 104c2 02       		.uleb128 0x2
 34869 104c3 73       		.byte	0x73
 34870 104c4 00       		.sleb128 0
 34871 104c5 00       		.byte	0
 34872 104c6 00       		.byte	0
 34873 104c7 BC01     		.uleb128 0xbc
 34874 104c9 00000000 		.quad	.LBB3508
 34874      00000000 
 34875 104d1 54030000 		.quad	.LBE3508-.LBB3508
 34875      00000000 
 34876 104d9 B70C0100 		.long	0x10cb7
 34877 104dd BB01     		.uleb128 0xbb
 34878 104df 9C000100 		.long	0x1009c
 34879 104e3 00000000 		.long	.LLST10
 34880 104e7 B601     		.uleb128 0xb6
 34881 104e9 00000000 		.long	.Ldebug_ranges0+0x70
 34882 104ed BB01     		.uleb128 0xbb
 34883 104ef AB000100 		.long	0x100ab
 34884 104f3 00000000 		.long	.LLST11
 34885 104f7 C301     		.uleb128 0xc3
 34886 104f9 D8FF0000 		.long	0xffd8
 34887 104fd 00000000 		.quad	.LBB3510
 34887      00000000 
 34888 10505 00000000 		.long	.Ldebug_ranges0+0xa0
 34889 10509 03       		.byte	0x3
 34890 1050a A103     		.value	0x3a1
 34891 1050c 9F0C0100 		.long	0x10c9f
 34892 10510 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 914


 34893 10512 07000100 		.long	0x10007
 34894 10516 BE01     		.uleb128 0xbe
 34895 10518 FAFF0000 		.long	0xfffa
 34896 1051c 00000000 		.long	.LLST13
 34897 10520 BE01     		.uleb128 0xbe
 34898 10522 F0FF0000 		.long	0xfff0
 34899 10526 00000000 		.long	.LLST14
 34900 1052a B601     		.uleb128 0xb6
 34901 1052c 00000000 		.long	.Ldebug_ranges0+0xa0
 34902 10530 BB01     		.uleb128 0xbb
 34903 10532 26000100 		.long	0x10026
 34904 10536 00000000 		.long	.LLST15
 34905 1053a BB01     		.uleb128 0xbb
 34906 1053c 38000100 		.long	0x10038
 34907 10540 00000000 		.long	.LLST16
 34908 10544 BB01     		.uleb128 0xbb
 34909 10546 45000100 		.long	0x10045
 34910 1054a 00000000 		.long	.LLST16
 34911 1054e BB01     		.uleb128 0xbb
 34912 10550 52000100 		.long	0x10052
 34913 10554 00000000 		.long	.LLST18
 34914 10558 BB01     		.uleb128 0xbb
 34915 1055a 5F000100 		.long	0x1005f
 34916 1055e 00000000 		.long	.LLST19
 34917 10562 C401     		.uleb128 0xc4
 34918 10564 00000000 		.long	.Ldebug_ranges0+0xd0
 34919 10568 A1050100 		.long	0x105a1
 34920 1056c BB01     		.uleb128 0xbb
 34921 1056e 72000100 		.long	0x10072
 34922 10572 00000000 		.long	.LLST20
 34923 10576 BB01     		.uleb128 0xbb
 34924 10578 7F000100 		.long	0x1007f
 34925 1057c 00000000 		.long	.LLST21
 34926 10580 BB01     		.uleb128 0xbb
 34927 10582 8C000100 		.long	0x1008c
 34928 10586 00000000 		.long	.LLST22
 34929 1058a C101     		.uleb128 0xc1
 34930 1058c 00000000 		.quad	.LVL33
 34930      00000000 
 34931 10594 08030100 		.long	0x10308
 34932 10598 C201     		.uleb128 0xc2
 34933 1059a 01       		.uleb128 0x1
 34934 1059b 55       		.byte	0x55
 34935 1059c 02       		.uleb128 0x2
 34936 1059d 73       		.byte	0x73
 34937 1059e 00       		.sleb128 0
 34938 1059f 00       		.byte	0
 34939 105a0 00       		.byte	0
 34940 105a1 B601     		.uleb128 0xb6
 34941 105a3 00000000 		.long	.Ldebug_ranges0+0x100
 34942 105a7 BB01     		.uleb128 0xbb
 34943 105a9 9C000100 		.long	0x1009c
 34944 105ad 00000000 		.long	.LLST23
 34945 105b1 B601     		.uleb128 0xb6
 34946 105b3 00000000 		.long	.Ldebug_ranges0+0x130
 34947 105b7 BB01     		.uleb128 0xbb
 34948 105b9 AB000100 		.long	0x100ab
GAS LISTING /tmp/ccJUMvuF.s 			page 915


 34949 105bd 00000000 		.long	.LLST24
 34950 105c1 C301     		.uleb128 0xc3
 34951 105c3 D8FF0000 		.long	0xffd8
 34952 105c7 00000000 		.quad	.LBB3517
 34952      00000000 
 34953 105cf 00000000 		.long	.Ldebug_ranges0+0x170
 34954 105d3 03       		.byte	0x3
 34955 105d4 A103     		.value	0x3a1
 34956 105d6 850C0100 		.long	0x10c85
 34957 105da AE01     		.uleb128 0xae
 34958 105dc 07000100 		.long	0x10007
 34959 105e0 BE01     		.uleb128 0xbe
 34960 105e2 FAFF0000 		.long	0xfffa
 34961 105e6 00000000 		.long	.LLST26
 34962 105ea BE01     		.uleb128 0xbe
 34963 105ec F0FF0000 		.long	0xfff0
 34964 105f0 00000000 		.long	.LLST27
 34965 105f4 B601     		.uleb128 0xb6
 34966 105f6 00000000 		.long	.Ldebug_ranges0+0x170
 34967 105fa BB01     		.uleb128 0xbb
 34968 105fc 26000100 		.long	0x10026
 34969 10600 00000000 		.long	.LLST28
 34970 10604 BB01     		.uleb128 0xbb
 34971 10606 38000100 		.long	0x10038
 34972 1060a 00000000 		.long	.LLST29
 34973 1060e BB01     		.uleb128 0xbb
 34974 10610 45000100 		.long	0x10045
 34975 10614 00000000 		.long	.LLST29
 34976 10618 BB01     		.uleb128 0xbb
 34977 1061a 52000100 		.long	0x10052
 34978 1061e 00000000 		.long	.LLST31
 34979 10622 BB01     		.uleb128 0xbb
 34980 10624 5F000100 		.long	0x1005f
 34981 10628 00000000 		.long	.LLST32
 34982 1062c C401     		.uleb128 0xc4
 34983 1062e 00000000 		.long	.Ldebug_ranges0+0x1b0
 34984 10632 3C0C0100 		.long	0x10c3c
 34985 10636 BB01     		.uleb128 0xbb
 34986 10638 9C000100 		.long	0x1009c
 34987 1063c 00000000 		.long	.LLST33
 34988 10640 B601     		.uleb128 0xb6
 34989 10642 00000000 		.long	.Ldebug_ranges0+0x1f0
 34990 10646 BB01     		.uleb128 0xbb
 34991 10648 AB000100 		.long	0x100ab
 34992 1064c 00000000 		.long	.LLST34
 34993 10650 C301     		.uleb128 0xc3
 34994 10652 D8FF0000 		.long	0xffd8
 34995 10656 00000000 		.quad	.LBB3522
 34995      00000000 
 34996 1065e 00000000 		.long	.Ldebug_ranges0+0x240
 34997 10662 03       		.byte	0x3
 34998 10663 A103     		.value	0x3a1
 34999 10665 240C0100 		.long	0x10c24
 35000 10669 AE01     		.uleb128 0xae
 35001 1066b 07000100 		.long	0x10007
 35002 1066f BE01     		.uleb128 0xbe
 35003 10671 FAFF0000 		.long	0xfffa
GAS LISTING /tmp/ccJUMvuF.s 			page 916


 35004 10675 00000000 		.long	.LLST36
 35005 10679 BE01     		.uleb128 0xbe
 35006 1067b F0FF0000 		.long	0xfff0
 35007 1067f 00000000 		.long	.LLST37
 35008 10683 B601     		.uleb128 0xb6
 35009 10685 00000000 		.long	.Ldebug_ranges0+0x240
 35010 10689 BB01     		.uleb128 0xbb
 35011 1068b 26000100 		.long	0x10026
 35012 1068f 00000000 		.long	.LLST38
 35013 10693 BB01     		.uleb128 0xbb
 35014 10695 38000100 		.long	0x10038
 35015 10699 00000000 		.long	.LLST39
 35016 1069d BB01     		.uleb128 0xbb
 35017 1069f 45000100 		.long	0x10045
 35018 106a3 00000000 		.long	.LLST39
 35019 106a7 BB01     		.uleb128 0xbb
 35020 106a9 52000100 		.long	0x10052
 35021 106ad 00000000 		.long	.LLST41
 35022 106b1 BB01     		.uleb128 0xbb
 35023 106b3 5F000100 		.long	0x1005f
 35024 106b7 00000000 		.long	.LLST42
 35025 106bb C401     		.uleb128 0xc4
 35026 106bd 00000000 		.long	.Ldebug_ranges0+0x290
 35027 106c1 E70B0100 		.long	0x10be7
 35028 106c5 BB01     		.uleb128 0xbb
 35029 106c7 9C000100 		.long	0x1009c
 35030 106cb 00000000 		.long	.LLST43
 35031 106cf B601     		.uleb128 0xb6
 35032 106d1 00000000 		.long	.Ldebug_ranges0+0x2d0
 35033 106d5 BB01     		.uleb128 0xbb
 35034 106d7 AB000100 		.long	0x100ab
 35035 106db 00000000 		.long	.LLST44
 35036 106df C301     		.uleb128 0xc3
 35037 106e1 D8FF0000 		.long	0xffd8
 35038 106e5 00000000 		.quad	.LBB3527
 35038      00000000 
 35039 106ed 00000000 		.long	.Ldebug_ranges0+0x320
 35040 106f1 03       		.byte	0x3
 35041 106f2 A103     		.value	0x3a1
 35042 106f4 CF0B0100 		.long	0x10bcf
 35043 106f8 AE01     		.uleb128 0xae
 35044 106fa 07000100 		.long	0x10007
 35045 106fe BE01     		.uleb128 0xbe
 35046 10700 FAFF0000 		.long	0xfffa
 35047 10704 00000000 		.long	.LLST46
 35048 10708 BE01     		.uleb128 0xbe
 35049 1070a F0FF0000 		.long	0xfff0
 35050 1070e 00000000 		.long	.LLST47
 35051 10712 B601     		.uleb128 0xb6
 35052 10714 00000000 		.long	.Ldebug_ranges0+0x320
 35053 10718 BB01     		.uleb128 0xbb
 35054 1071a 26000100 		.long	0x10026
 35055 1071e 00000000 		.long	.LLST48
 35056 10722 BB01     		.uleb128 0xbb
 35057 10724 38000100 		.long	0x10038
 35058 10728 00000000 		.long	.LLST49
 35059 1072c BB01     		.uleb128 0xbb
GAS LISTING /tmp/ccJUMvuF.s 			page 917


 35060 1072e 45000100 		.long	0x10045
 35061 10732 00000000 		.long	.LLST49
 35062 10736 BB01     		.uleb128 0xbb
 35063 10738 52000100 		.long	0x10052
 35064 1073c 00000000 		.long	.LLST51
 35065 10740 BB01     		.uleb128 0xbb
 35066 10742 5F000100 		.long	0x1005f
 35067 10746 00000000 		.long	.LLST52
 35068 1074a C401     		.uleb128 0xc4
 35069 1074c 00000000 		.long	.Ldebug_ranges0+0x370
 35070 10750 920B0100 		.long	0x10b92
 35071 10754 BB01     		.uleb128 0xbb
 35072 10756 9C000100 		.long	0x1009c
 35073 1075a 00000000 		.long	.LLST53
 35074 1075e B601     		.uleb128 0xb6
 35075 10760 00000000 		.long	.Ldebug_ranges0+0x3b0
 35076 10764 BB01     		.uleb128 0xbb
 35077 10766 AB000100 		.long	0x100ab
 35078 1076a 00000000 		.long	.LLST54
 35079 1076e C301     		.uleb128 0xc3
 35080 10770 D8FF0000 		.long	0xffd8
 35081 10774 00000000 		.quad	.LBB3532
 35081      00000000 
 35082 1077c 00000000 		.long	.Ldebug_ranges0+0x400
 35083 10780 03       		.byte	0x3
 35084 10781 A103     		.value	0x3a1
 35085 10783 7A0B0100 		.long	0x10b7a
 35086 10787 AE01     		.uleb128 0xae
 35087 10789 07000100 		.long	0x10007
 35088 1078d BE01     		.uleb128 0xbe
 35089 1078f FAFF0000 		.long	0xfffa
 35090 10793 00000000 		.long	.LLST56
 35091 10797 BE01     		.uleb128 0xbe
 35092 10799 F0FF0000 		.long	0xfff0
 35093 1079d 00000000 		.long	.LLST57
 35094 107a1 B601     		.uleb128 0xb6
 35095 107a3 00000000 		.long	.Ldebug_ranges0+0x400
 35096 107a7 BB01     		.uleb128 0xbb
 35097 107a9 26000100 		.long	0x10026
 35098 107ad 00000000 		.long	.LLST58
 35099 107b1 BB01     		.uleb128 0xbb
 35100 107b3 38000100 		.long	0x10038
 35101 107b7 00000000 		.long	.LLST59
 35102 107bb BB01     		.uleb128 0xbb
 35103 107bd 45000100 		.long	0x10045
 35104 107c1 00000000 		.long	.LLST59
 35105 107c5 BB01     		.uleb128 0xbb
 35106 107c7 52000100 		.long	0x10052
 35107 107cb 00000000 		.long	.LLST61
 35108 107cf BB01     		.uleb128 0xbb
 35109 107d1 5F000100 		.long	0x1005f
 35110 107d5 00000000 		.long	.LLST62
 35111 107d9 C401     		.uleb128 0xc4
 35112 107db 00000000 		.long	.Ldebug_ranges0+0x450
 35113 107df 3D0B0100 		.long	0x10b3d
 35114 107e3 BB01     		.uleb128 0xbb
 35115 107e5 9C000100 		.long	0x1009c
GAS LISTING /tmp/ccJUMvuF.s 			page 918


 35116 107e9 00000000 		.long	.LLST63
 35117 107ed B601     		.uleb128 0xb6
 35118 107ef 00000000 		.long	.Ldebug_ranges0+0x490
 35119 107f3 BB01     		.uleb128 0xbb
 35120 107f5 AB000100 		.long	0x100ab
 35121 107f9 00000000 		.long	.LLST64
 35122 107fd C301     		.uleb128 0xc3
 35123 107ff D8FF0000 		.long	0xffd8
 35124 10803 00000000 		.quad	.LBB3537
 35124      00000000 
 35125 1080b 00000000 		.long	.Ldebug_ranges0+0x4e0
 35126 1080f 03       		.byte	0x3
 35127 10810 A103     		.value	0x3a1
 35128 10812 250B0100 		.long	0x10b25
 35129 10816 AE01     		.uleb128 0xae
 35130 10818 07000100 		.long	0x10007
 35131 1081c BE01     		.uleb128 0xbe
 35132 1081e FAFF0000 		.long	0xfffa
 35133 10822 00000000 		.long	.LLST66
 35134 10826 BE01     		.uleb128 0xbe
 35135 10828 F0FF0000 		.long	0xfff0
 35136 1082c 00000000 		.long	.LLST67
 35137 10830 B601     		.uleb128 0xb6
 35138 10832 00000000 		.long	.Ldebug_ranges0+0x4e0
 35139 10836 BB01     		.uleb128 0xbb
 35140 10838 26000100 		.long	0x10026
 35141 1083c 00000000 		.long	.LLST68
 35142 10840 BB01     		.uleb128 0xbb
 35143 10842 38000100 		.long	0x10038
 35144 10846 00000000 		.long	.LLST69
 35145 1084a BB01     		.uleb128 0xbb
 35146 1084c 45000100 		.long	0x10045
 35147 10850 00000000 		.long	.LLST69
 35148 10854 BB01     		.uleb128 0xbb
 35149 10856 52000100 		.long	0x10052
 35150 1085a 00000000 		.long	.LLST71
 35151 1085e BB01     		.uleb128 0xbb
 35152 10860 5F000100 		.long	0x1005f
 35153 10864 00000000 		.long	.LLST72
 35154 10868 C401     		.uleb128 0xc4
 35155 1086a 00000000 		.long	.Ldebug_ranges0+0x530
 35156 1086e E80A0100 		.long	0x10ae8
 35157 10872 BB01     		.uleb128 0xbb
 35158 10874 9C000100 		.long	0x1009c
 35159 10878 00000000 		.long	.LLST73
 35160 1087c B601     		.uleb128 0xb6
 35161 1087e 00000000 		.long	.Ldebug_ranges0+0x560
 35162 10882 BB01     		.uleb128 0xbb
 35163 10884 AB000100 		.long	0x100ab
 35164 10888 00000000 		.long	.LLST74
 35165 1088c C301     		.uleb128 0xc3
 35166 1088e D8FF0000 		.long	0xffd8
 35167 10892 00000000 		.quad	.LBB3542
 35167      00000000 
 35168 1089a 00000000 		.long	.Ldebug_ranges0+0x5a0
 35169 1089e 03       		.byte	0x3
 35170 1089f A103     		.value	0x3a1
GAS LISTING /tmp/ccJUMvuF.s 			page 919


 35171 108a1 D00A0100 		.long	0x10ad0
 35172 108a5 AE01     		.uleb128 0xae
 35173 108a7 07000100 		.long	0x10007
 35174 108ab BE01     		.uleb128 0xbe
 35175 108ad FAFF0000 		.long	0xfffa
 35176 108b1 00000000 		.long	.LLST76
 35177 108b5 BE01     		.uleb128 0xbe
 35178 108b7 F0FF0000 		.long	0xfff0
 35179 108bb 00000000 		.long	.LLST77
 35180 108bf B601     		.uleb128 0xb6
 35181 108c1 00000000 		.long	.Ldebug_ranges0+0x5a0
 35182 108c5 BB01     		.uleb128 0xbb
 35183 108c7 26000100 		.long	0x10026
 35184 108cb 00000000 		.long	.LLST78
 35185 108cf BB01     		.uleb128 0xbb
 35186 108d1 38000100 		.long	0x10038
 35187 108d5 00000000 		.long	.LLST79
 35188 108d9 BB01     		.uleb128 0xbb
 35189 108db 45000100 		.long	0x10045
 35190 108df 00000000 		.long	.LLST79
 35191 108e3 BB01     		.uleb128 0xbb
 35192 108e5 52000100 		.long	0x10052
 35193 108e9 00000000 		.long	.LLST81
 35194 108ed BB01     		.uleb128 0xbb
 35195 108ef 5F000100 		.long	0x1005f
 35196 108f3 00000000 		.long	.LLST82
 35197 108f7 C401     		.uleb128 0xc4
 35198 108f9 00000000 		.long	.Ldebug_ranges0+0x5e0
 35199 108fd 930A0100 		.long	0x10a93
 35200 10901 BB01     		.uleb128 0xbb
 35201 10903 9C000100 		.long	0x1009c
 35202 10907 00000000 		.long	.LLST83
 35203 1090b B601     		.uleb128 0xb6
 35204 1090d 00000000 		.long	.Ldebug_ranges0+0x610
 35205 10911 BB01     		.uleb128 0xbb
 35206 10913 AB000100 		.long	0x100ab
 35207 10917 00000000 		.long	.LLST84
 35208 1091b C301     		.uleb128 0xc3
 35209 1091d D8FF0000 		.long	0xffd8
 35210 10921 00000000 		.quad	.LBB3547
 35210      00000000 
 35211 10929 00000000 		.long	.Ldebug_ranges0+0x650
 35212 1092d 03       		.byte	0x3
 35213 1092e A103     		.value	0x3a1
 35214 10930 7B0A0100 		.long	0x10a7b
 35215 10934 AE01     		.uleb128 0xae
 35216 10936 07000100 		.long	0x10007
 35217 1093a BE01     		.uleb128 0xbe
 35218 1093c FAFF0000 		.long	0xfffa
 35219 10940 00000000 		.long	.LLST86
 35220 10944 BE01     		.uleb128 0xbe
 35221 10946 F0FF0000 		.long	0xfff0
 35222 1094a 00000000 		.long	.LLST87
 35223 1094e B601     		.uleb128 0xb6
 35224 10950 00000000 		.long	.Ldebug_ranges0+0x650
 35225 10954 BB01     		.uleb128 0xbb
 35226 10956 26000100 		.long	0x10026
GAS LISTING /tmp/ccJUMvuF.s 			page 920


 35227 1095a 00000000 		.long	.LLST88
 35228 1095e BB01     		.uleb128 0xbb
 35229 10960 38000100 		.long	0x10038
 35230 10964 00000000 		.long	.LLST89
 35231 10968 BB01     		.uleb128 0xbb
 35232 1096a 45000100 		.long	0x10045
 35233 1096e 00000000 		.long	.LLST89
 35234 10972 BB01     		.uleb128 0xbb
 35235 10974 52000100 		.long	0x10052
 35236 10978 00000000 		.long	.LLST91
 35237 1097c BB01     		.uleb128 0xbb
 35238 1097e 5F000100 		.long	0x1005f
 35239 10982 00000000 		.long	.LLST92
 35240 10986 C401     		.uleb128 0xc4
 35241 10988 00000000 		.long	.Ldebug_ranges0+0x690
 35242 1098c C5090100 		.long	0x109c5
 35243 10990 BB01     		.uleb128 0xbb
 35244 10992 72000100 		.long	0x10072
 35245 10996 00000000 		.long	.LLST93
 35246 1099a BB01     		.uleb128 0xbb
 35247 1099c 7F000100 		.long	0x1007f
 35248 109a0 00000000 		.long	.LLST94
 35249 109a4 BB01     		.uleb128 0xbb
 35250 109a6 8C000100 		.long	0x1008c
 35251 109aa 00000000 		.long	.LLST95
 35252 109ae C101     		.uleb128 0xc1
 35253 109b0 00000000 		.quad	.LVL110
 35253      00000000 
 35254 109b8 08030100 		.long	0x10308
 35255 109bc C201     		.uleb128 0xc2
 35256 109be 01       		.uleb128 0x1
 35257 109bf 55       		.byte	0x55
 35258 109c0 02       		.uleb128 0x2
 35259 109c1 73       		.byte	0x73
 35260 109c2 00       		.sleb128 0
 35261 109c3 00       		.byte	0
 35262 109c4 00       		.byte	0
 35263 109c5 B901     		.uleb128 0xb9
 35264 109c7 00000000 		.quad	.LBB3552
 35264      00000000 
 35265 109cf 3C000000 		.quad	.LBE3552-.LBB3552
 35265      00000000 
 35266 109d7 BB01     		.uleb128 0xbb
 35267 109d9 9C000100 		.long	0x1009c
 35268 109dd 00000000 		.long	.LLST96
 35269 109e1 B901     		.uleb128 0xb9
 35270 109e3 00000000 		.quad	.LBB3553
 35270      00000000 
 35271 109eb 30000000 		.quad	.LBE3553-.LBB3553
 35271      00000000 
 35272 109f3 BB01     		.uleb128 0xbb
 35273 109f5 AB000100 		.long	0x100ab
 35274 109f9 00000000 		.long	.LLST97
 35275 109fd C501     		.uleb128 0xc5
 35276 109ff 33D70000 		.long	0xd733
 35277 10a03 00000000 		.quad	.LBB3554
 35277      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 921


 35278 10a0b 13000000 		.quad	.LBE3554-.LBB3554
 35278      00000000 
 35279 10a13 03       		.byte	0x3
 35280 10a14 A103     		.value	0x3a1
 35281 10a16 390A0100 		.long	0x10a39
 35282 10a1a BE01     		.uleb128 0xbe
 35283 10a1c 59D70000 		.long	0xd759
 35284 10a20 00000000 		.long	.LLST98
 35285 10a24 BE01     		.uleb128 0xbe
 35286 10a26 4CD70000 		.long	0xd74c
 35287 10a2a 00000000 		.long	.LLST99
 35288 10a2e BE01     		.uleb128 0xbe
 35289 10a30 42D70000 		.long	0xd742
 35290 10a34 00000000 		.long	.LLST100
 35291 10a38 00       		.byte	0
 35292 10a39 C601     		.uleb128 0xc6
 35293 10a3b 00000000 		.quad	.LVL117
 35293      00000000 
 35294 10a43 D8FF0000 		.long	0xffd8
 35295 10a47 610A0100 		.long	0x10a61
 35296 10a4b C201     		.uleb128 0xc2
 35297 10a4d 01       		.uleb128 0x1
 35298 10a4e 55       		.byte	0x55
 35299 10a4f 02       		.uleb128 0x2
 35300 10a50 7E       		.byte	0x7e
 35301 10a51 00       		.sleb128 0
 35302 10a52 C201     		.uleb128 0xc2
 35303 10a54 01       		.uleb128 0x1
 35304 10a55 54       		.byte	0x54
 35305 10a56 02       		.uleb128 0x2
 35306 10a57 73       		.byte	0x73
 35307 10a58 00       		.sleb128 0
 35308 10a59 C201     		.uleb128 0xc2
 35309 10a5b 01       		.uleb128 0x1
 35310 10a5c 51       		.byte	0x51
 35311 10a5d 02       		.uleb128 0x2
 35312 10a5e 7F       		.byte	0x7f
 35313 10a5f 00       		.sleb128 0
 35314 10a60 00       		.byte	0
 35315 10a61 C101     		.uleb128 0xc1
 35316 10a63 00000000 		.quad	.LVL119
 35316      00000000 
 35317 10a6b 08030100 		.long	0x10308
 35318 10a6f C201     		.uleb128 0xc2
 35319 10a71 01       		.uleb128 0x1
 35320 10a72 55       		.byte	0x55
 35321 10a73 02       		.uleb128 0x2
 35322 10a74 73       		.byte	0x73
 35323 10a75 00       		.sleb128 0
 35324 10a76 00       		.byte	0
 35325 10a77 00       		.byte	0
 35326 10a78 00       		.byte	0
 35327 10a79 00       		.byte	0
 35328 10a7a 00       		.byte	0
 35329 10a7b C101     		.uleb128 0xc1
 35330 10a7d 00000000 		.quad	.LVL114
 35330      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 922


 35331 10a85 08030100 		.long	0x10308
 35332 10a89 C201     		.uleb128 0xc2
 35333 10a8b 01       		.uleb128 0x1
 35334 10a8c 55       		.byte	0x55
 35335 10a8d 02       		.uleb128 0x2
 35336 10a8e 73       		.byte	0x73
 35337 10a8f 00       		.sleb128 0
 35338 10a90 00       		.byte	0
 35339 10a91 00       		.byte	0
 35340 10a92 00       		.byte	0
 35341 10a93 B601     		.uleb128 0xb6
 35342 10a95 00000000 		.long	.Ldebug_ranges0+0x6c0
 35343 10a99 BB01     		.uleb128 0xbb
 35344 10a9b 72000100 		.long	0x10072
 35345 10a9f 00000000 		.long	.LLST101
 35346 10aa3 BB01     		.uleb128 0xbb
 35347 10aa5 7F000100 		.long	0x1007f
 35348 10aa9 00000000 		.long	.LLST102
 35349 10aad BB01     		.uleb128 0xbb
 35350 10aaf 8C000100 		.long	0x1008c
 35351 10ab3 00000000 		.long	.LLST103
 35352 10ab7 C101     		.uleb128 0xc1
 35353 10ab9 00000000 		.quad	.LVL99
 35353      00000000 
 35354 10ac1 08030100 		.long	0x10308
 35355 10ac5 C201     		.uleb128 0xc2
 35356 10ac7 01       		.uleb128 0x1
 35357 10ac8 55       		.byte	0x55
 35358 10ac9 02       		.uleb128 0x2
 35359 10aca 73       		.byte	0x73
 35360 10acb 00       		.sleb128 0
 35361 10acc 00       		.byte	0
 35362 10acd 00       		.byte	0
 35363 10ace 00       		.byte	0
 35364 10acf 00       		.byte	0
 35365 10ad0 C101     		.uleb128 0xc1
 35366 10ad2 00000000 		.quad	.LVL103
 35366      00000000 
 35367 10ada 08030100 		.long	0x10308
 35368 10ade C201     		.uleb128 0xc2
 35369 10ae0 01       		.uleb128 0x1
 35370 10ae1 55       		.byte	0x55
 35371 10ae2 02       		.uleb128 0x2
 35372 10ae3 73       		.byte	0x73
 35373 10ae4 00       		.sleb128 0
 35374 10ae5 00       		.byte	0
 35375 10ae6 00       		.byte	0
 35376 10ae7 00       		.byte	0
 35377 10ae8 B601     		.uleb128 0xb6
 35378 10aea 00000000 		.long	.Ldebug_ranges0+0x6f0
 35379 10aee BB01     		.uleb128 0xbb
 35380 10af0 72000100 		.long	0x10072
 35381 10af4 00000000 		.long	.LLST104
 35382 10af8 BB01     		.uleb128 0xbb
 35383 10afa 7F000100 		.long	0x1007f
 35384 10afe 00000000 		.long	.LLST105
 35385 10b02 BB01     		.uleb128 0xbb
GAS LISTING /tmp/ccJUMvuF.s 			page 923


 35386 10b04 8C000100 		.long	0x1008c
 35387 10b08 00000000 		.long	.LLST106
 35388 10b0c C101     		.uleb128 0xc1
 35389 10b0e 00000000 		.quad	.LVL92
 35389      00000000 
 35390 10b16 08030100 		.long	0x10308
 35391 10b1a C201     		.uleb128 0xc2
 35392 10b1c 01       		.uleb128 0x1
 35393 10b1d 55       		.byte	0x55
 35394 10b1e 02       		.uleb128 0x2
 35395 10b1f 73       		.byte	0x73
 35396 10b20 00       		.sleb128 0
 35397 10b21 00       		.byte	0
 35398 10b22 00       		.byte	0
 35399 10b23 00       		.byte	0
 35400 10b24 00       		.byte	0
 35401 10b25 C101     		.uleb128 0xc1
 35402 10b27 00000000 		.quad	.LVL87
 35402      00000000 
 35403 10b2f 08030100 		.long	0x10308
 35404 10b33 C201     		.uleb128 0xc2
 35405 10b35 01       		.uleb128 0x1
 35406 10b36 55       		.byte	0x55
 35407 10b37 02       		.uleb128 0x2
 35408 10b38 73       		.byte	0x73
 35409 10b39 00       		.sleb128 0
 35410 10b3a 00       		.byte	0
 35411 10b3b 00       		.byte	0
 35412 10b3c 00       		.byte	0
 35413 10b3d B601     		.uleb128 0xb6
 35414 10b3f 00000000 		.long	.Ldebug_ranges0+0x730
 35415 10b43 BB01     		.uleb128 0xbb
 35416 10b45 72000100 		.long	0x10072
 35417 10b49 00000000 		.long	.LLST107
 35418 10b4d BB01     		.uleb128 0xbb
 35419 10b4f 7F000100 		.long	0x1007f
 35420 10b53 00000000 		.long	.LLST108
 35421 10b57 BB01     		.uleb128 0xbb
 35422 10b59 8C000100 		.long	0x1008c
 35423 10b5d 00000000 		.long	.LLST109
 35424 10b61 C101     		.uleb128 0xc1
 35425 10b63 00000000 		.quad	.LVL82
 35425      00000000 
 35426 10b6b 08030100 		.long	0x10308
 35427 10b6f C201     		.uleb128 0xc2
 35428 10b71 01       		.uleb128 0x1
 35429 10b72 55       		.byte	0x55
 35430 10b73 02       		.uleb128 0x2
 35431 10b74 73       		.byte	0x73
 35432 10b75 00       		.sleb128 0
 35433 10b76 00       		.byte	0
 35434 10b77 00       		.byte	0
 35435 10b78 00       		.byte	0
 35436 10b79 00       		.byte	0
 35437 10b7a C101     		.uleb128 0xc1
 35438 10b7c 00000000 		.quad	.LVL76
 35438      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 924


 35439 10b84 08030100 		.long	0x10308
 35440 10b88 C201     		.uleb128 0xc2
 35441 10b8a 01       		.uleb128 0x1
 35442 10b8b 55       		.byte	0x55
 35443 10b8c 02       		.uleb128 0x2
 35444 10b8d 73       		.byte	0x73
 35445 10b8e 00       		.sleb128 0
 35446 10b8f 00       		.byte	0
 35447 10b90 00       		.byte	0
 35448 10b91 00       		.byte	0
 35449 10b92 B601     		.uleb128 0xb6
 35450 10b94 00000000 		.long	.Ldebug_ranges0+0x760
 35451 10b98 BB01     		.uleb128 0xbb
 35452 10b9a 72000100 		.long	0x10072
 35453 10b9e 00000000 		.long	.LLST110
 35454 10ba2 BB01     		.uleb128 0xbb
 35455 10ba4 7F000100 		.long	0x1007f
 35456 10ba8 00000000 		.long	.LLST111
 35457 10bac BB01     		.uleb128 0xbb
 35458 10bae 8C000100 		.long	0x1008c
 35459 10bb2 00000000 		.long	.LLST112
 35460 10bb6 C101     		.uleb128 0xc1
 35461 10bb8 00000000 		.quad	.LVL71
 35461      00000000 
 35462 10bc0 08030100 		.long	0x10308
 35463 10bc4 C201     		.uleb128 0xc2
 35464 10bc6 01       		.uleb128 0x1
 35465 10bc7 55       		.byte	0x55
 35466 10bc8 02       		.uleb128 0x2
 35467 10bc9 73       		.byte	0x73
 35468 10bca 00       		.sleb128 0
 35469 10bcb 00       		.byte	0
 35470 10bcc 00       		.byte	0
 35471 10bcd 00       		.byte	0
 35472 10bce 00       		.byte	0
 35473 10bcf C101     		.uleb128 0xc1
 35474 10bd1 00000000 		.quad	.LVL65
 35474      00000000 
 35475 10bd9 08030100 		.long	0x10308
 35476 10bdd C201     		.uleb128 0xc2
 35477 10bdf 01       		.uleb128 0x1
 35478 10be0 55       		.byte	0x55
 35479 10be1 02       		.uleb128 0x2
 35480 10be2 73       		.byte	0x73
 35481 10be3 00       		.sleb128 0
 35482 10be4 00       		.byte	0
 35483 10be5 00       		.byte	0
 35484 10be6 00       		.byte	0
 35485 10be7 B601     		.uleb128 0xb6
 35486 10be9 00000000 		.long	.Ldebug_ranges0+0x790
 35487 10bed BB01     		.uleb128 0xbb
 35488 10bef 72000100 		.long	0x10072
 35489 10bf3 00000000 		.long	.LLST113
 35490 10bf7 BB01     		.uleb128 0xbb
 35491 10bf9 7F000100 		.long	0x1007f
 35492 10bfd 00000000 		.long	.LLST114
 35493 10c01 BB01     		.uleb128 0xbb
GAS LISTING /tmp/ccJUMvuF.s 			page 925


 35494 10c03 8C000100 		.long	0x1008c
 35495 10c07 00000000 		.long	.LLST115
 35496 10c0b C101     		.uleb128 0xc1
 35497 10c0d 00000000 		.quad	.LVL60
 35497      00000000 
 35498 10c15 08030100 		.long	0x10308
 35499 10c19 C201     		.uleb128 0xc2
 35500 10c1b 01       		.uleb128 0x1
 35501 10c1c 55       		.byte	0x55
 35502 10c1d 02       		.uleb128 0x2
 35503 10c1e 73       		.byte	0x73
 35504 10c1f 00       		.sleb128 0
 35505 10c20 00       		.byte	0
 35506 10c21 00       		.byte	0
 35507 10c22 00       		.byte	0
 35508 10c23 00       		.byte	0
 35509 10c24 C101     		.uleb128 0xc1
 35510 10c26 00000000 		.quad	.LVL54
 35510      00000000 
 35511 10c2e 08030100 		.long	0x10308
 35512 10c32 C201     		.uleb128 0xc2
 35513 10c34 01       		.uleb128 0x1
 35514 10c35 55       		.byte	0x55
 35515 10c36 02       		.uleb128 0x2
 35516 10c37 73       		.byte	0x73
 35517 10c38 00       		.sleb128 0
 35518 10c39 00       		.byte	0
 35519 10c3a 00       		.byte	0
 35520 10c3b 00       		.byte	0
 35521 10c3c B901     		.uleb128 0xb9
 35522 10c3e 00000000 		.quad	.LBB3640
 35522      00000000 
 35523 10c46 2C000000 		.quad	.LBE3640-.LBB3640
 35523      00000000 
 35524 10c4e BB01     		.uleb128 0xbb
 35525 10c50 72000100 		.long	0x10072
 35526 10c54 00000000 		.long	.LLST116
 35527 10c58 BB01     		.uleb128 0xbb
 35528 10c5a 7F000100 		.long	0x1007f
 35529 10c5e 00000000 		.long	.LLST117
 35530 10c62 BB01     		.uleb128 0xbb
 35531 10c64 8C000100 		.long	0x1008c
 35532 10c68 00000000 		.long	.LLST118
 35533 10c6c C101     		.uleb128 0xc1
 35534 10c6e 00000000 		.quad	.LVL44
 35534      00000000 
 35535 10c76 08030100 		.long	0x10308
 35536 10c7a C201     		.uleb128 0xc2
 35537 10c7c 01       		.uleb128 0x1
 35538 10c7d 55       		.byte	0x55
 35539 10c7e 02       		.uleb128 0x2
 35540 10c7f 73       		.byte	0x73
 35541 10c80 00       		.sleb128 0
 35542 10c81 00       		.byte	0
 35543 10c82 00       		.byte	0
 35544 10c83 00       		.byte	0
 35545 10c84 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 926


 35546 10c85 C101     		.uleb128 0xc1
 35547 10c87 00000000 		.quad	.LVL48
 35547      00000000 
 35548 10c8f 08030100 		.long	0x10308
 35549 10c93 C201     		.uleb128 0xc2
 35550 10c95 01       		.uleb128 0x1
 35551 10c96 55       		.byte	0x55
 35552 10c97 02       		.uleb128 0x2
 35553 10c98 73       		.byte	0x73
 35554 10c99 00       		.sleb128 0
 35555 10c9a 00       		.byte	0
 35556 10c9b 00       		.byte	0
 35557 10c9c 00       		.byte	0
 35558 10c9d 00       		.byte	0
 35559 10c9e 00       		.byte	0
 35560 10c9f C101     		.uleb128 0xc1
 35561 10ca1 00000000 		.quad	.LVL37
 35561      00000000 
 35562 10ca9 08030100 		.long	0x10308
 35563 10cad C201     		.uleb128 0xc2
 35564 10caf 01       		.uleb128 0x1
 35565 10cb0 55       		.byte	0x55
 35566 10cb1 02       		.uleb128 0x2
 35567 10cb2 73       		.byte	0x73
 35568 10cb3 00       		.sleb128 0
 35569 10cb4 00       		.byte	0
 35570 10cb5 00       		.byte	0
 35571 10cb6 00       		.byte	0
 35572 10cb7 C101     		.uleb128 0xc1
 35573 10cb9 00000000 		.quad	.LVL123
 35573      00000000 
 35574 10cc1 08030100 		.long	0x10308
 35575 10cc5 C201     		.uleb128 0xc2
 35576 10cc7 01       		.uleb128 0x1
 35577 10cc8 55       		.byte	0x55
 35578 10cc9 02       		.uleb128 0x2
 35579 10cca 73       		.byte	0x73
 35580 10ccb 00       		.sleb128 0
 35581 10ccc 00       		.byte	0
 35582 10ccd 00       		.byte	0
 35583 10cce 00       		.byte	0
 35584 10ccf C701     		.uleb128 0xc7
 35585 10cd1 54FD0000 		.long	0xfd54
 35586 10cd5 00000000 		.quad	.LFB6730
 35586      00000000 
 35587 10cdd 6A030000 		.quad	.LFE6730-.LFB6730
 35587      00000000 
 35588 10ce5 01       		.uleb128 0x1
 35589 10ce6 9C       		.byte	0x9c
 35590 10ce7 DD1B0100 		.long	0x11bdd
 35591 10ceb BE01     		.uleb128 0xbe
 35592 10ced 71FD0000 		.long	0xfd71
 35593 10cf1 00000000 		.long	.LLST119
 35594 10cf5 C801     		.uleb128 0xc8
 35595 10cf7 65FD0000 		.long	0xfd65
 35596 10cfb E803     		.value	0x3e8
 35597 10cfd C401     		.uleb128 0xc4
GAS LISTING /tmp/ccJUMvuF.s 			page 927


 35598 10cff 00000000 		.long	.Ldebug_ranges0+0x7c0
 35599 10d03 C61B0100 		.long	0x11bc6
 35600 10d07 BB01     		.uleb128 0xbb
 35601 10d09 7FFD0000 		.long	0xfd7f
 35602 10d0d 00000000 		.long	.LLST120
 35603 10d11 BD01     		.uleb128 0xbd
 35604 10d13 8BFD0000 		.long	0xfd8b
 35605 10d17 04       		.uleb128 0x4
 35606 10d18 91       		.byte	0x91
 35607 10d19 908A7F   		.sleb128 -15088
 35608 10d1c BD01     		.uleb128 0xbd
 35609 10d1e 96FD0000 		.long	0xfd96
 35610 10d22 04       		.uleb128 0x4
 35611 10d23 91       		.byte	0x91
 35612 10d24 A0B17F   		.sleb128 -10080
 35613 10d27 BA01     		.uleb128 0xba
 35614 10d29 A2FD0000 		.long	0xfda2
 35615 10d2d C901     		.uleb128 0xc9
 35616 10d2f 1BFD0000 		.long	0xfd1b
 35617 10d33 00000000 		.quad	.LBB3662
 35617      00000000 
 35618 10d3b 00000000 		.long	.Ldebug_ranges0+0x7f0
 35619 10d3f 05       		.byte	0x5
 35620 10d40 33       		.byte	0x33
 35621 10d41 9F0E0100 		.long	0x10e9f
 35622 10d45 C801     		.uleb128 0xc8
 35623 10d47 34FD0000 		.long	0xfd34
 35624 10d4b D007     		.value	0x7d0
 35625 10d4d AE01     		.uleb128 0xae
 35626 10d4f 41FD0000 		.long	0xfd41
 35627 10d53 BE01     		.uleb128 0xbe
 35628 10d55 2AFD0000 		.long	0xfd2a
 35629 10d59 00000000 		.long	.LLST121
 35630 10d5d C301     		.uleb128 0xc3
 35631 10d5f 00F20000 		.long	0xf200
 35632 10d63 00000000 		.quad	.LBB3663
 35632      00000000 
 35633 10d6b 00000000 		.long	.Ldebug_ranges0+0x830
 35634 10d6f 06       		.byte	0x6
 35635 10d70 1601     		.value	0x116
 35636 10d72 720E0100 		.long	0x10e72
 35637 10d76 AE01     		.uleb128 0xae
 35638 10d78 25F20000 		.long	0xf225
 35639 10d7c C801     		.uleb128 0xc8
 35640 10d7e 19F20000 		.long	0xf219
 35641 10d82 D007     		.value	0x7d0
 35642 10d84 BE01     		.uleb128 0xbe
 35643 10d86 0FF20000 		.long	0xf20f
 35644 10d8a 00000000 		.long	.LLST121
 35645 10d8e CA01     		.uleb128 0xca
 35646 10d90 7CE90000 		.long	0xe97c
 35647 10d94 00000000 		.quad	.LBB3664
 35647      00000000 
 35648 10d9c 17000000 		.quad	.LBE3664-.LBB3664
 35648      00000000 
 35649 10da4 06       		.byte	0x6
 35650 10da5 87       		.byte	0x87
GAS LISTING /tmp/ccJUMvuF.s 			page 928


 35651 10da6 BB0D0100 		.long	0x10dbb
 35652 10daa AE01     		.uleb128 0xae
 35653 10dac 95E90000 		.long	0xe995
 35654 10db0 BE01     		.uleb128 0xbe
 35655 10db2 8BE90000 		.long	0xe98b
 35656 10db6 00000000 		.long	.LLST121
 35657 10dba 00       		.byte	0
 35658 10dbb CB01     		.uleb128 0xcb
 35659 10dbd F5FC0000 		.long	0xfcf5
 35660 10dc1 00000000 		.quad	.LBB3666
 35660      00000000 
 35661 10dc9 00000000 		.long	.Ldebug_ranges0+0x870
 35662 10dcd 06       		.byte	0x6
 35663 10dce 88       		.byte	0x88
 35664 10dcf C801     		.uleb128 0xc8
 35665 10dd1 0EFD0000 		.long	0xfd0e
 35666 10dd5 D007     		.value	0x7d0
 35667 10dd7 BE01     		.uleb128 0xbe
 35668 10dd9 04FD0000 		.long	0xfd04
 35669 10ddd 00000000 		.long	.LLST124
 35670 10de1 CB01     		.uleb128 0xcb
 35671 10de3 54E90000 		.long	0xe954
 35672 10de7 00000000 		.quad	.LBB3668
 35672      00000000 
 35673 10def 00000000 		.long	.Ldebug_ranges0+0x8b0
 35674 10df3 06       		.byte	0x6
 35675 10df4 B9       		.byte	0xb9
 35676 10df5 AE01     		.uleb128 0xae
 35677 10df7 63E90000 		.long	0xe963
 35678 10dfb C801     		.uleb128 0xc8
 35679 10dfd 6DE90000 		.long	0xe96d
 35680 10e01 D007     		.value	0x7d0
 35681 10e03 B601     		.uleb128 0xb6
 35682 10e05 00000000 		.long	.Ldebug_ranges0+0x8b0
 35683 10e09 CB01     		.uleb128 0xcb
 35684 10e0b 29E90000 		.long	0xe929
 35685 10e0f 00000000 		.quad	.LBB3670
 35685      00000000 
 35686 10e17 00000000 		.long	.Ldebug_ranges0+0x8b0
 35687 10e1b 06       		.byte	0x6
 35688 10e1c AA       		.byte	0xaa
 35689 10e1d AE01     		.uleb128 0xae
 35690 10e1f 34E90000 		.long	0xe934
 35691 10e23 C801     		.uleb128 0xc8
 35692 10e25 41E90000 		.long	0xe941
 35693 10e29 D007     		.value	0x7d0
 35694 10e2b CC01     		.uleb128 0xcc
 35695 10e2d FEE80000 		.long	0xe8fe
 35696 10e31 00000000 		.quad	.LBB3671
 35696      00000000 
 35697 10e39 00000000 		.long	.Ldebug_ranges0+0x8b0
 35698 10e3d 2F       		.byte	0x2f
 35699 10e3e 6501     		.value	0x165
 35700 10e40 AE01     		.uleb128 0xae
 35701 10e42 0DE90000 		.long	0xe90d
 35702 10e46 CD01     		.uleb128 0xcd
 35703 10e48 23E90000 		.long	0xe923
GAS LISTING /tmp/ccJUMvuF.s 			page 929


 35704 10e4c 00       		.byte	0
 35705 10e4d C801     		.uleb128 0xc8
 35706 10e4f 17E90000 		.long	0xe917
 35707 10e53 D007     		.value	0x7d0
 35708 10e55 C101     		.uleb128 0xc1
 35709 10e57 00000000 		.quad	.LVL127
 35709      00000000 
 35710 10e5f D46B0100 		.long	0x16bd4
 35711 10e63 C201     		.uleb128 0xc2
 35712 10e65 01       		.uleb128 0x1
 35713 10e66 55       		.byte	0x55
 35714 10e67 03       		.uleb128 0x3
 35715 10e68 0A       		.byte	0xa
 35716 10e69 401F     		.value	0x1f40
 35717 10e6b 00       		.byte	0
 35718 10e6c 00       		.byte	0
 35719 10e6d 00       		.byte	0
 35720 10e6e 00       		.byte	0
 35721 10e6f 00       		.byte	0
 35722 10e70 00       		.byte	0
 35723 10e71 00       		.byte	0
 35724 10e72 B801     		.uleb128 0xb8
 35725 10e74 37F20000 		.long	0xf237
 35726 10e78 00000000 		.quad	.LBB3684
 35726      00000000 
 35727 10e80 05000000 		.quad	.LBE3684-.LBB3684
 35727      00000000 
 35728 10e88 06       		.byte	0x6
 35729 10e89 1701     		.value	0x117
 35730 10e8b C801     		.uleb128 0xc8
 35731 10e8d 50F20000 		.long	0xf250
 35732 10e91 D007     		.value	0x7d0
 35733 10e93 BE01     		.uleb128 0xbe
 35734 10e95 46F20000 		.long	0xf246
 35735 10e99 00000000 		.long	.LLST125
 35736 10e9d 00       		.byte	0
 35737 10e9e 00       		.byte	0
 35738 10e9f CA01     		.uleb128 0xca
 35739 10ea1 78F20000 		.long	0xf278
 35740 10ea5 00000000 		.quad	.LBB3688
 35740      00000000 
 35741 10ead 10000000 		.quad	.LBE3688-.LBB3688
 35741      00000000 
 35742 10eb5 05       		.byte	0x5
 35743 10eb6 35       		.byte	0x35
 35744 10eb7 ED0E0100 		.long	0x10eed
 35745 10ebb BE01     		.uleb128 0xbe
 35746 10ebd 91F20000 		.long	0xf291
 35747 10ec1 00000000 		.long	.LLST126
 35748 10ec5 BE01     		.uleb128 0xbe
 35749 10ec7 87F20000 		.long	0xf287
 35750 10ecb 00000000 		.long	.LLST127
 35751 10ecf C101     		.uleb128 0xc1
 35752 10ed1 00000000 		.quad	.LVL134
 35752      00000000 
 35753 10ed9 33300000 		.long	0x3033
 35754 10edd C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 930


 35755 10edf 01       		.uleb128 0x1
 35756 10ee0 55       		.byte	0x55
 35757 10ee1 02       		.uleb128 0x2
 35758 10ee2 7D       		.byte	0x7d
 35759 10ee3 00       		.sleb128 0
 35760 10ee4 C201     		.uleb128 0xc2
 35761 10ee6 01       		.uleb128 0x1
 35762 10ee7 54       		.byte	0x54
 35763 10ee8 02       		.uleb128 0x2
 35764 10ee9 76       		.byte	0x76
 35765 10eea 00       		.sleb128 0
 35766 10eeb 00       		.byte	0
 35767 10eec 00       		.byte	0
 35768 10eed C401     		.uleb128 0xc4
 35769 10eef 00000000 		.long	.Ldebug_ranges0+0x8e0
 35770 10ef3 5F100100 		.long	0x1105f
 35771 10ef7 BE01     		.uleb128 0xbe
 35772 10ef9 B8F20000 		.long	0xf2b8
 35773 10efd 00000000 		.long	.LLST128
 35774 10f01 C501     		.uleb128 0xc5
 35775 10f03 4DDC0000 		.long	0xdc4d
 35776 10f07 00000000 		.quad	.LBB3692
 35776      00000000 
 35777 10f0f 0C000000 		.quad	.LBE3692-.LBB3692
 35777      00000000 
 35778 10f17 08       		.byte	0x8
 35779 10f18 2302     		.value	0x223
 35780 10f1a 4D0F0100 		.long	0x10f4d
 35781 10f1e BE01     		.uleb128 0xbe
 35782 10f20 5CDC0000 		.long	0xdc5c
 35783 10f24 00000000 		.long	.LLST128
 35784 10f28 B801     		.uleb128 0xb8
 35785 10f2a 07C90000 		.long	0xc907
 35786 10f2e 00000000 		.quad	.LBB3694
 35786      00000000 
 35787 10f36 08000000 		.quad	.LBE3694-.LBB3694
 35787      00000000 
 35788 10f3e 08       		.byte	0x8
 35789 10f3f 2D01     		.value	0x12d
 35790 10f41 BE01     		.uleb128 0xbe
 35791 10f43 16C90000 		.long	0xc916
 35792 10f47 00000000 		.long	.LLST128
 35793 10f4b 00       		.byte	0
 35794 10f4c 00       		.byte	0
 35795 10f4d CC01     		.uleb128 0xcc
 35796 10f4f 18CA0000 		.long	0xca18
 35797 10f53 00000000 		.quad	.LBB3696
 35797      00000000 
 35798 10f5b 00000000 		.long	.Ldebug_ranges0+0x910
 35799 10f5f 08       		.byte	0x8
 35800 10f60 2302     		.value	0x223
 35801 10f62 BE01     		.uleb128 0xbe
 35802 10f64 31CA0000 		.long	0xca31
 35803 10f68 00000000 		.long	.LLST131
 35804 10f6c BE01     		.uleb128 0xbe
 35805 10f6e 27CA0000 		.long	0xca27
 35806 10f72 00000000 		.long	.LLST132
GAS LISTING /tmp/ccJUMvuF.s 			page 931


 35807 10f76 B901     		.uleb128 0xb9
 35808 10f78 00000000 		.quad	.LBB3698
 35808      00000000 
 35809 10f80 3A000000 		.quad	.LBE3698-.LBB3698
 35809      00000000 
 35810 10f88 BE01     		.uleb128 0xbe
 35811 10f8a 31CA0000 		.long	0xca31
 35812 10f8e 00000000 		.long	.LLST133
 35813 10f92 BE01     		.uleb128 0xbe
 35814 10f94 27CA0000 		.long	0xca27
 35815 10f98 00000000 		.long	.LLST134
 35816 10f9c C901     		.uleb128 0xc9
 35817 10f9e F4C90000 		.long	0xc9f4
 35818 10fa2 00000000 		.quad	.LBB3700
 35818      00000000 
 35819 10faa 00000000 		.long	.Ldebug_ranges0+0x940
 35820 10fae 08       		.byte	0x8
 35821 10faf F6       		.byte	0xf6
 35822 10fb0 44100100 		.long	0x11044
 35823 10fb4 BE01     		.uleb128 0xbe
 35824 10fb6 0BCA0000 		.long	0xca0b
 35825 10fba 00000000 		.long	.LLST135
 35826 10fbe BE01     		.uleb128 0xbe
 35827 10fc0 FFC90000 		.long	0xc9ff
 35828 10fc4 00000000 		.long	.LLST136
 35829 10fc8 CA01     		.uleb128 0xca
 35830 10fca 7CC90000 		.long	0xc97c
 35831 10fce 00000000 		.quad	.LBB3702
 35831      00000000 
 35832 10fd6 0C000000 		.quad	.LBE3702-.LBB3702
 35832      00000000 
 35833 10fde 0F       		.byte	0xf
 35834 10fdf 52       		.byte	0x52
 35835 10fe0 F90F0100 		.long	0x10ff9
 35836 10fe4 BE01     		.uleb128 0xbe
 35837 10fe6 93C90000 		.long	0xc993
 35838 10fea 00000000 		.long	.LLST137
 35839 10fee BE01     		.uleb128 0xbe
 35840 10ff0 87C90000 		.long	0xc987
 35841 10ff4 00000000 		.long	.LLST138
 35842 10ff8 00       		.byte	0
 35843 10ff9 CE01     		.uleb128 0xce
 35844 10ffb A6C90000 		.long	0xc9a6
 35845 10fff 00000000 		.quad	.LBB3704
 35845      00000000 
 35846 11007 09000000 		.quad	.LBE3704-.LBB3704
 35846      00000000 
 35847 1100f 0F       		.byte	0xf
 35848 11010 54       		.byte	0x54
 35849 11011 BE01     		.uleb128 0xbe
 35850 11013 BDC90000 		.long	0xc9bd
 35851 11017 00000000 		.long	.LLST139
 35852 1101b BE01     		.uleb128 0xbe
 35853 1101d B1C90000 		.long	0xc9b1
 35854 11021 00000000 		.long	.LLST140
 35855 11025 B901     		.uleb128 0xb9
 35856 11027 00000000 		.quad	.LBB3705
GAS LISTING /tmp/ccJUMvuF.s 			page 932


 35856      00000000 
 35857 1102f 09000000 		.quad	.LBE3705-.LBB3705
 35857      00000000 
 35858 11037 BB01     		.uleb128 0xbb
 35859 11039 CBC90000 		.long	0xc9cb
 35860 1103d 00000000 		.long	.LLST141
 35861 11041 00       		.byte	0
 35862 11042 00       		.byte	0
 35863 11043 00       		.byte	0
 35864 11044 C101     		.uleb128 0xc1
 35865 11046 00000000 		.quad	.LVL189
 35865      00000000 
 35866 1104e 0B0C0000 		.long	0xc0b
 35867 11052 C201     		.uleb128 0xc2
 35868 11054 01       		.uleb128 0x1
 35869 11055 54       		.byte	0x54
 35870 11056 04       		.uleb128 0x4
 35871 11057 91       		.byte	0x91
 35872 11058 8F8A7F   		.sleb128 -15089
 35873 1105b 00       		.byte	0
 35874 1105c 00       		.byte	0
 35875 1105d 00       		.byte	0
 35876 1105e 00       		.byte	0
 35877 1105f CA01     		.uleb128 0xca
 35878 11061 D2F20000 		.long	0xf2d2
 35879 11065 00000000 		.quad	.LBB3711
 35879      00000000 
 35880 1106d 08000000 		.quad	.LBE3711-.LBB3711
 35880      00000000 
 35881 11075 05       		.byte	0x5
 35882 11076 36       		.byte	0x36
 35883 11077 9C100100 		.long	0x1109c
 35884 1107b BE01     		.uleb128 0xbe
 35885 1107d E1F20000 		.long	0xf2e1
 35886 11081 00000000 		.long	.LLST142
 35887 11085 C101     		.uleb128 0xc1
 35888 11087 00000000 		.quad	.LVL137
 35888      00000000 
 35889 1108f 8B300000 		.long	0x308b
 35890 11093 C201     		.uleb128 0xc2
 35891 11095 01       		.uleb128 0x1
 35892 11096 55       		.byte	0x55
 35893 11097 02       		.uleb128 0x2
 35894 11098 7D       		.byte	0x7d
 35895 11099 00       		.sleb128 0
 35896 1109a 00       		.byte	0
 35897 1109b 00       		.byte	0
 35898 1109c CA01     		.uleb128 0xca
 35899 1109e ECF20000 		.long	0xf2ec
 35900 110a2 00000000 		.quad	.LBB3713
 35900      00000000 
 35901 110aa 66000000 		.quad	.LBE3713-.LBB3713
 35901      00000000 
 35902 110b2 05       		.byte	0x5
 35903 110b3 36       		.byte	0x36
 35904 110b4 35120100 		.long	0x11235
 35905 110b8 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 933


 35906 110ba 05F30000 		.long	0xf305
 35907 110be 00000000 		.long	.LLST143
 35908 110c2 BE01     		.uleb128 0xbe
 35909 110c4 FBF20000 		.long	0xf2fb
 35910 110c8 00000000 		.long	.LLST144
 35911 110cc B801     		.uleb128 0xb8
 35912 110ce 48DF0000 		.long	0xdf48
 35913 110d2 00000000 		.quad	.LBB3714
 35913      00000000 
 35914 110da 66000000 		.quad	.LBE3714-.LBB3714
 35914      00000000 
 35915 110e2 04       		.byte	0x4
 35916 110e3 F701     		.value	0x1f7
 35917 110e5 BE01     		.uleb128 0xbe
 35918 110e7 64DF0000 		.long	0xdf64
 35919 110eb 00000000 		.long	.LLST143
 35920 110ef BE01     		.uleb128 0xbe
 35921 110f1 5ADF0000 		.long	0xdf5a
 35922 110f5 00000000 		.long	.LLST144
 35923 110f9 C301     		.uleb128 0xc3
 35924 110fb C2DE0000 		.long	0xdec2
 35925 110ff 00000000 		.quad	.LBB3716
 35925      00000000 
 35926 11107 00000000 		.long	.Ldebug_ranges0+0x970
 35927 1110b 03       		.byte	0x3
 35928 1110c 4C01     		.value	0x14c
 35929 1110e 4D110100 		.long	0x1114d
 35930 11112 BE01     		.uleb128 0xbe
 35931 11114 FBDE0000 		.long	0xdefb
 35932 11118 00000000 		.long	.LLST143
 35933 1111c CB01     		.uleb128 0xcb
 35934 1111e 74DE0000 		.long	0xde74
 35935 11122 00000000 		.quad	.LBB3717
 35935      00000000 
 35936 1112a 00000000 		.long	.Ldebug_ranges0+0x970
 35937 1112e 04       		.byte	0x4
 35938 1112f 96       		.byte	0x96
 35939 11130 BE01     		.uleb128 0xbe
 35940 11132 7FDE0000 		.long	0xde7f
 35941 11136 00000000 		.long	.LLST143
 35942 1113a B601     		.uleb128 0xb6
 35943 1113c 00000000 		.long	.Ldebug_ranges0+0x970
 35944 11140 BB01     		.uleb128 0xbb
 35945 11142 8DDE0000 		.long	0xde8d
 35946 11146 00000000 		.long	.LLST143
 35947 1114a 00       		.byte	0
 35948 1114b 00       		.byte	0
 35949 1114c 00       		.byte	0
 35950 1114d B601     		.uleb128 0xb6
 35951 1114f 00000000 		.long	.Ldebug_ranges0+0x9a0
 35952 11153 BB01     		.uleb128 0xbb
 35953 11155 73DF0000 		.long	0xdf73
 35954 11159 00000000 		.long	.LLST150
 35955 1115d B901     		.uleb128 0xb9
 35956 1115f 00000000 		.quad	.LBB3722
 35956      00000000 
 35957 11167 48000000 		.quad	.LBE3722-.LBB3722
GAS LISTING /tmp/ccJUMvuF.s 			page 934


 35957      00000000 
 35958 1116f BB01     		.uleb128 0xbb
 35959 11171 82DF0000 		.long	0xdf82
 35960 11175 00000000 		.long	.LLST151
 35961 11179 C301     		.uleb128 0xc3
 35962 1117b 08DF0000 		.long	0xdf08
 35963 1117f 00000000 		.quad	.LBB3723
 35963      00000000 
 35964 11187 00000000 		.long	.Ldebug_ranges0+0x9d0
 35965 1118b 03       		.byte	0x3
 35966 1118c 5301     		.value	0x153
 35967 1118e CD110100 		.long	0x111cd
 35968 11192 BE01     		.uleb128 0xbe
 35969 11194 3BDF0000 		.long	0xdf3b
 35970 11198 00000000 		.long	.LLST152
 35971 1119c CB01     		.uleb128 0xcb
 35972 1119e 9BDE0000 		.long	0xde9b
 35973 111a2 00000000 		.quad	.LBB3724
 35973      00000000 
 35974 111aa 00000000 		.long	.Ldebug_ranges0+0x9d0
 35975 111ae 04       		.byte	0x4
 35976 111af 96       		.byte	0x96
 35977 111b0 BE01     		.uleb128 0xbe
 35978 111b2 A6DE0000 		.long	0xdea6
 35979 111b6 00000000 		.long	.LLST152
 35980 111ba B601     		.uleb128 0xb6
 35981 111bc 00000000 		.long	.Ldebug_ranges0+0x9d0
 35982 111c0 BB01     		.uleb128 0xbb
 35983 111c2 B4DE0000 		.long	0xdeb4
 35984 111c6 00000000 		.long	.LLST154
 35985 111ca 00       		.byte	0
 35986 111cb 00       		.byte	0
 35987 111cc 00       		.byte	0
 35988 111cd B801     		.uleb128 0xb8
 35989 111cf C2DE0000 		.long	0xdec2
 35990 111d3 00000000 		.quad	.LBB3735
 35990      00000000 
 35991 111db 02000000 		.quad	.LBE3735-.LBB3735
 35991      00000000 
 35992 111e3 03       		.byte	0x3
 35993 111e4 5501     		.value	0x155
 35994 111e6 BE01     		.uleb128 0xbe
 35995 111e8 FBDE0000 		.long	0xdefb
 35996 111ec 00000000 		.long	.LLST155
 35997 111f0 CE01     		.uleb128 0xce
 35998 111f2 74DE0000 		.long	0xde74
 35999 111f6 00000000 		.quad	.LBB3736
 35999      00000000 
 36000 111fe 02000000 		.quad	.LBE3736-.LBB3736
 36000      00000000 
 36001 11206 04       		.byte	0x4
 36002 11207 96       		.byte	0x96
 36003 11208 BE01     		.uleb128 0xbe
 36004 1120a 7FDE0000 		.long	0xde7f
 36005 1120e 00000000 		.long	.LLST155
 36006 11212 B901     		.uleb128 0xb9
 36007 11214 00000000 		.quad	.LBB3737
GAS LISTING /tmp/ccJUMvuF.s 			page 935


 36007      00000000 
 36008 1121c 02000000 		.quad	.LBE3737-.LBB3737
 36008      00000000 
 36009 11224 BB01     		.uleb128 0xbb
 36010 11226 8DDE0000 		.long	0xde8d
 36011 1122a 00000000 		.long	.LLST157
 36012 1122e 00       		.byte	0
 36013 1122f 00       		.byte	0
 36014 11230 00       		.byte	0
 36015 11231 00       		.byte	0
 36016 11232 00       		.byte	0
 36017 11233 00       		.byte	0
 36018 11234 00       		.byte	0
 36019 11235 CA01     		.uleb128 0xca
 36020 11237 20CB0000 		.long	0xcb20
 36021 1123b 00000000 		.quad	.LBB3740
 36021      00000000 
 36022 11243 18000000 		.quad	.LBE3740-.LBB3740
 36022      00000000 
 36023 1124b 05       		.byte	0x5
 36024 1124c 39       		.byte	0x39
 36025 1124d 85120100 		.long	0x11285
 36026 11251 AE01     		.uleb128 0xae
 36027 11253 34CB0000 		.long	0xcb34
 36028 11257 BE01     		.uleb128 0xbe
 36029 11259 41CB0000 		.long	0xcb41
 36030 1125d 00000000 		.long	.LLST158
 36031 11261 C101     		.uleb128 0xc1
 36032 11263 00000000 		.quad	.LVL147
 36032      00000000 
 36033 1126b B5920000 		.long	0x92b5
 36034 1126f C201     		.uleb128 0xc2
 36035 11271 01       		.uleb128 0x1
 36036 11272 54       		.byte	0x54
 36037 11273 09       		.uleb128 0x9
 36038 11274 03       		.byte	0x3
 36039 11275 00000000 		.quad	.LC5
 36039      00000000 
 36040 1127d C201     		.uleb128 0xc2
 36041 1127f 01       		.uleb128 0x1
 36042 11280 51       		.byte	0x51
 36043 11281 01       		.uleb128 0x1
 36044 11282 3B       		.byte	0x3b
 36045 11283 00       		.byte	0
 36046 11284 00       		.byte	0
 36047 11285 C901     		.uleb128 0xc9
 36048 11287 47F30000 		.long	0xf347
 36049 1128b 00000000 		.quad	.LBB3742
 36049      00000000 
 36050 11293 00000000 		.long	.Ldebug_ranges0+0xa20
 36051 11297 05       		.byte	0x5
 36052 11298 39       		.byte	0x39
 36053 11299 C5120100 		.long	0x112c5
 36054 1129d BE01     		.uleb128 0xbe
 36055 1129f 60F30000 		.long	0xf360
 36056 112a3 00000000 		.long	.LLST159
 36057 112a7 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 936


 36058 112a9 56F30000 		.long	0xf356
 36059 112ad C101     		.uleb128 0xc1
 36060 112af 00000000 		.quad	.LVL148
 36060      00000000 
 36061 112b7 4A290000 		.long	0x294a
 36062 112bb C201     		.uleb128 0xc2
 36063 112bd 01       		.uleb128 0x1
 36064 112be 54       		.byte	0x54
 36065 112bf 03       		.uleb128 0x3
 36066 112c0 0A       		.byte	0xa
 36067 112c1 E803     		.value	0x3e8
 36068 112c3 00       		.byte	0
 36069 112c4 00       		.byte	0
 36070 112c5 C901     		.uleb128 0xc9
 36071 112c7 20CB0000 		.long	0xcb20
 36072 112cb 00000000 		.quad	.LBB3745
 36072      00000000 
 36073 112d3 00000000 		.long	.Ldebug_ranges0+0xa50
 36074 112d7 05       		.byte	0x5
 36075 112d8 39       		.byte	0x39
 36076 112d9 1C130100 		.long	0x1131c
 36077 112dd BE01     		.uleb128 0xbe
 36078 112df 41CB0000 		.long	0xcb41
 36079 112e3 00000000 		.long	.LLST160
 36080 112e7 BE01     		.uleb128 0xbe
 36081 112e9 34CB0000 		.long	0xcb34
 36082 112ed 00000000 		.long	.LLST161
 36083 112f1 C101     		.uleb128 0xc1
 36084 112f3 00000000 		.quad	.LVL150
 36084      00000000 
 36085 112fb B5920000 		.long	0x92b5
 36086 112ff C201     		.uleb128 0xc2
 36087 11301 01       		.uleb128 0x1
 36088 11302 55       		.byte	0x55
 36089 11303 02       		.uleb128 0x2
 36090 11304 7E       		.byte	0x7e
 36091 11305 00       		.sleb128 0
 36092 11306 C201     		.uleb128 0xc2
 36093 11308 01       		.uleb128 0x1
 36094 11309 54       		.byte	0x54
 36095 1130a 09       		.uleb128 0x9
 36096 1130b 03       		.byte	0x3
 36097 1130c 00000000 		.quad	.LC6
 36097      00000000 
 36098 11314 C201     		.uleb128 0xc2
 36099 11316 01       		.uleb128 0x1
 36100 11317 51       		.byte	0x51
 36101 11318 01       		.uleb128 0x1
 36102 11319 42       		.byte	0x42
 36103 1131a 00       		.byte	0
 36104 1131b 00       		.byte	0
 36105 1131c CA01     		.uleb128 0xca
 36106 1131e 98CC0000 		.long	0xcc98
 36107 11322 00000000 		.quad	.LBB3750
 36107      00000000 
 36108 1132a 08000000 		.quad	.LBE3750-.LBB3750
 36108      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 937


 36109 11332 05       		.byte	0x5
 36110 11333 39       		.byte	0x39
 36111 11334 7E130100 		.long	0x1137e
 36112 11338 AE01     		.uleb128 0xae
 36113 1133a B1CC0000 		.long	0xccb1
 36114 1133e AE01     		.uleb128 0xae
 36115 11340 A7CC0000 		.long	0xcca7
 36116 11344 CE01     		.uleb128 0xce
 36117 11346 BADC0000 		.long	0xdcba
 36118 1134a 00000000 		.quad	.LBB3751
 36118      00000000 
 36119 11352 08000000 		.quad	.LBE3751-.LBB3751
 36119      00000000 
 36120 1135a 09       		.byte	0x9
 36121 1135b 71       		.byte	0x71
 36122 1135c BE01     		.uleb128 0xbe
 36123 1135e D7DC0000 		.long	0xdcd7
 36124 11362 00000000 		.long	.LLST162
 36125 11366 C101     		.uleb128 0xc1
 36126 11368 00000000 		.quad	.LVL151
 36126      00000000 
 36127 11370 76290000 		.long	0x2976
 36128 11374 C201     		.uleb128 0xc2
 36129 11376 01       		.uleb128 0x1
 36130 11377 55       		.byte	0x55
 36131 11378 02       		.uleb128 0x2
 36132 11379 7E       		.byte	0x7e
 36133 1137a 00       		.sleb128 0
 36134 1137b 00       		.byte	0
 36135 1137c 00       		.byte	0
 36136 1137d 00       		.byte	0
 36137 1137e C401     		.uleb128 0xc4
 36138 11380 00000000 		.long	.Ldebug_ranges0+0xa80
 36139 11384 C3180100 		.long	0x118c3
 36140 11388 BA01     		.uleb128 0xba
 36141 1138a E4FD0000 		.long	0xfde4
 36142 1138e C901     		.uleb128 0xc9
 36143 11390 6DF30000 		.long	0xf36d
 36144 11394 00000000 		.quad	.LBB3754
 36144      00000000 
 36145 1139c 00000000 		.long	.Ldebug_ranges0+0xac0
 36146 113a0 05       		.byte	0x5
 36147 113a1 3A       		.byte	0x3a
 36148 113a2 BF130100 		.long	0x113bf
 36149 113a6 BE01     		.uleb128 0xbe
 36150 113a8 7CF30000 		.long	0xf37c
 36151 113ac 00000000 		.long	.LLST163
 36152 113b0 CF01     		.uleb128 0xcf
 36153 113b2 00000000 		.quad	.LVL152
 36153      00000000 
 36154 113ba D3020100 		.long	0x102d3
 36155 113be 00       		.byte	0
 36156 113bf C901     		.uleb128 0xc9
 36157 113c1 8CF30000 		.long	0xf38c
 36158 113c5 00000000 		.quad	.LBB3757
 36158      00000000 
 36159 113cd 00000000 		.long	.Ldebug_ranges0+0xaf0
GAS LISTING /tmp/ccJUMvuF.s 			page 938


 36160 113d1 05       		.byte	0x5
 36161 113d2 3B       		.byte	0x3b
 36162 113d3 A5140100 		.long	0x114a5
 36163 113d7 BE01     		.uleb128 0xbe
 36164 113d9 C5F30000 		.long	0xf3c5
 36165 113dd 00000000 		.long	.LLST164
 36166 113e1 BE01     		.uleb128 0xbe
 36167 113e3 AFF30000 		.long	0xf3af
 36168 113e7 00000000 		.long	.LLST165
 36169 113eb B601     		.uleb128 0xb6
 36170 113ed 00000000 		.long	.Ldebug_ranges0+0xaf0
 36171 113f1 CC01     		.uleb128 0xcc
 36172 113f3 1AD90000 		.long	0xd91a
 36173 113f7 00000000 		.quad	.LBB3759
 36173      00000000 
 36174 113ff 00000000 		.long	.Ldebug_ranges0+0xaf0
 36175 11403 0A       		.byte	0xa
 36176 11404 5D06     		.value	0x65d
 36177 11406 BE01     		.uleb128 0xbe
 36178 11408 54D90000 		.long	0xd954
 36179 1140c 00000000 		.long	.LLST164
 36180 11410 BE01     		.uleb128 0xbe
 36181 11412 42D90000 		.long	0xd942
 36182 11416 00000000 		.long	.LLST165
 36183 1141a BE01     		.uleb128 0xbe
 36184 1141c 38D90000 		.long	0xd938
 36185 11420 00000000 		.long	.LLST168
 36186 11424 CC01     		.uleb128 0xcc
 36187 11426 8CD80000 		.long	0xd88c
 36188 1142a 00000000 		.quad	.LBB3761
 36188      00000000 
 36189 11432 00000000 		.long	.Ldebug_ranges0+0xb30
 36190 11436 0A       		.byte	0xa
 36191 11437 1305     		.value	0x513
 36192 11439 BE01     		.uleb128 0xbe
 36193 1143b B9D80000 		.long	0xd8b9
 36194 1143f 00000000 		.long	.LLST164
 36195 11443 BE01     		.uleb128 0xbe
 36196 11445 AAD80000 		.long	0xd8aa
 36197 11449 00000000 		.long	.LLST170
 36198 1144d CC01     		.uleb128 0xcc
 36199 1144f 21D80000 		.long	0xd821
 36200 11453 00000000 		.quad	.LBB3762
 36200      00000000 
 36201 1145b 00000000 		.long	.Ldebug_ranges0+0xb30
 36202 1145f 0B       		.byte	0xb
 36203 11460 9501     		.value	0x195
 36204 11462 BE01     		.uleb128 0xbe
 36205 11464 48D80000 		.long	0xd848
 36206 11468 00000000 		.long	.LLST164
 36207 1146c BE01     		.uleb128 0xbe
 36208 1146e 3ED80000 		.long	0xd83e
 36209 11472 00000000 		.long	.LLST170
 36210 11476 CC01     		.uleb128 0xcc
 36211 11478 E8D70000 		.long	0xd7e8
 36212 1147c 00000000 		.quad	.LBB3763
 36212      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 939


 36213 11484 00000000 		.long	.Ldebug_ranges0+0xb30
 36214 11488 0B       		.byte	0xb
 36215 11489 0601     		.value	0x106
 36216 1148b BE01     		.uleb128 0xbe
 36217 1148d 0AD80000 		.long	0xd80a
 36218 11491 00000000 		.long	.LLST164
 36219 11495 BE01     		.uleb128 0xbe
 36220 11497 00D80000 		.long	0xd800
 36221 1149b 00000000 		.long	.LLST170
 36222 1149f 00       		.byte	0
 36223 114a0 00       		.byte	0
 36224 114a1 00       		.byte	0
 36225 114a2 00       		.byte	0
 36226 114a3 00       		.byte	0
 36227 114a4 00       		.byte	0
 36228 114a5 CA01     		.uleb128 0xca
 36229 114a7 F2F30000 		.long	0xf3f2
 36230 114ab 00000000 		.quad	.LBB3779
 36230      00000000 
 36231 114b3 04000000 		.quad	.LBE3779-.LBB3779
 36231      00000000 
 36232 114bb 05       		.byte	0x5
 36233 114bc 3B       		.byte	0x3b
 36234 114bd F6140100 		.long	0x114f6
 36235 114c1 BE01     		.uleb128 0xbe
 36236 114c3 01F40000 		.long	0xf401
 36237 114c7 00000000 		.long	.LLST175
 36238 114cb B801     		.uleb128 0xb8
 36239 114cd 6CD70000 		.long	0xd76c
 36240 114d1 00000000 		.quad	.LBB3780
 36240      00000000 
 36241 114d9 04000000 		.quad	.LBE3780-.LBB3780
 36241      00000000 
 36242 114e1 06       		.byte	0x6
 36243 114e2 2402     		.value	0x224
 36244 114e4 BE01     		.uleb128 0xbe
 36245 114e6 85D70000 		.long	0xd785
 36246 114ea 00000000 		.long	.LLST175
 36247 114ee AE01     		.uleb128 0xae
 36248 114f0 7BD70000 		.long	0xd77b
 36249 114f4 00       		.byte	0
 36250 114f5 00       		.byte	0
 36251 114f6 CA01     		.uleb128 0xca
 36252 114f8 D8F30000 		.long	0xf3d8
 36253 114fc 00000000 		.quad	.LBB3782
 36253      00000000 
 36254 11504 05000000 		.quad	.LBE3782-.LBB3782
 36254      00000000 
 36255 1150c 05       		.byte	0x5
 36256 1150d 3B       		.byte	0x3b
 36257 1150e 47150100 		.long	0x11547
 36258 11512 BE01     		.uleb128 0xbe
 36259 11514 E7F30000 		.long	0xf3e7
 36260 11518 00000000 		.long	.LLST175
 36261 1151c B801     		.uleb128 0xb8
 36262 1151e 6CD70000 		.long	0xd76c
 36263 11522 00000000 		.quad	.LBB3783
GAS LISTING /tmp/ccJUMvuF.s 			page 940


 36263      00000000 
 36264 1152a 05000000 		.quad	.LBE3783-.LBB3783
 36264      00000000 
 36265 11532 06       		.byte	0x6
 36266 11533 3602     		.value	0x236
 36267 11535 BE01     		.uleb128 0xbe
 36268 11537 85D70000 		.long	0xd785
 36269 1153b 00000000 		.long	.LLST178
 36270 1153f AE01     		.uleb128 0xae
 36271 11541 7BD70000 		.long	0xd77b
 36272 11545 00       		.byte	0
 36273 11546 00       		.byte	0
 36274 11547 CA01     		.uleb128 0xca
 36275 11549 0CF40000 		.long	0xf40c
 36276 1154d 00000000 		.quad	.LBB3788
 36276      00000000 
 36277 11555 2D000000 		.quad	.LBE3788-.LBB3788
 36277      00000000 
 36278 1155d 05       		.byte	0x5
 36279 1155e 3B       		.byte	0x3b
 36280 1155f 18160100 		.long	0x11618
 36281 11563 BE01     		.uleb128 0xbe
 36282 11565 43F40000 		.long	0xf443
 36283 11569 00000000 		.long	.LLST179
 36284 1156d AE01     		.uleb128 0xae
 36285 1156f 36F40000 		.long	0xf436
 36286 11573 BE01     		.uleb128 0xbe
 36287 11575 29F40000 		.long	0xf429
 36288 11579 00000000 		.long	.LLST180
 36289 1157d CC01     		.uleb128 0xcc
 36290 1157f 67EB0000 		.long	0xeb67
 36291 11583 00000000 		.quad	.LBB3790
 36291      00000000 
 36292 1158b 00000000 		.long	.Ldebug_ranges0+0xb70
 36293 1158f 0D       		.byte	0xd
 36294 11590 C710     		.value	0x10c7
 36295 11592 BE01     		.uleb128 0xbe
 36296 11594 84EB0000 		.long	0xeb84
 36297 11598 00000000 		.long	.LLST181
 36298 1159c CC01     		.uleb128 0xcc
 36299 1159e FBEA0000 		.long	0xeafb
 36300 115a2 00000000 		.quad	.LBB3791
 36300      00000000 
 36301 115aa 00000000 		.long	.Ldebug_ranges0+0xb70
 36302 115ae 0A       		.byte	0xa
 36303 115af 2B05     		.value	0x52b
 36304 115b1 AE01     		.uleb128 0xae
 36305 115b3 42EB0000 		.long	0xeb42
 36306 115b7 AE01     		.uleb128 0xae
 36307 115b9 35EB0000 		.long	0xeb35
 36308 115bd BE01     		.uleb128 0xbe
 36309 115bf 2BEB0000 		.long	0xeb2b
 36310 115c3 00000000 		.long	.LLST181
 36311 115c7 CC01     		.uleb128 0xcc
 36312 115c9 A4EA0000 		.long	0xeaa4
 36313 115cd 00000000 		.quad	.LBB3793
 36313      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 941


 36314 115d5 00000000 		.long	.Ldebug_ranges0+0xba0
 36315 115d9 0A       		.byte	0xa
 36316 115da F004     		.value	0x4f0
 36317 115dc BE01     		.uleb128 0xbe
 36318 115de C6EA0000 		.long	0xeac6
 36319 115e2 00000000 		.long	.LLST183
 36320 115e6 BE01     		.uleb128 0xbe
 36321 115e8 BCEA0000 		.long	0xeabc
 36322 115ec 00000000 		.long	.LLST181
 36323 115f0 C101     		.uleb128 0xc1
 36324 115f2 00000000 		.quad	.LVL159
 36324      00000000 
 36325 115fa D8FF0000 		.long	0xffd8
 36326 115fe C201     		.uleb128 0xc2
 36327 11600 01       		.uleb128 0x1
 36328 11601 55       		.byte	0x55
 36329 11602 02       		.uleb128 0x2
 36330 11603 76       		.byte	0x76
 36331 11604 00       		.sleb128 0
 36332 11605 C201     		.uleb128 0xc2
 36333 11607 01       		.uleb128 0x1
 36334 11608 54       		.byte	0x54
 36335 11609 02       		.uleb128 0x2
 36336 1160a 7E       		.byte	0x7e
 36337 1160b 00       		.sleb128 0
 36338 1160c C201     		.uleb128 0xc2
 36339 1160e 01       		.uleb128 0x1
 36340 1160f 51       		.byte	0x51
 36341 11610 02       		.uleb128 0x2
 36342 11611 76       		.byte	0x76
 36343 11612 00       		.sleb128 0
 36344 11613 00       		.byte	0
 36345 11614 00       		.byte	0
 36346 11615 00       		.byte	0
 36347 11616 00       		.byte	0
 36348 11617 00       		.byte	0
 36349 11618 CB01     		.uleb128 0xcb
 36350 1161a 15FE0000 		.long	0xfe15
 36351 1161e 00000000 		.quad	.LBB3800
 36351      00000000 
 36352 11626 00000000 		.long	.Ldebug_ranges0+0xbd0
 36353 1162a 05       		.byte	0x5
 36354 1162b 3B       		.byte	0x3b
 36355 1162c BE01     		.uleb128 0xbe
 36356 1162e 24FE0000 		.long	0xfe24
 36357 11632 00000000 		.long	.LLST185
 36358 11636 B601     		.uleb128 0xb6
 36359 11638 00000000 		.long	.Ldebug_ranges0+0xbd0
 36360 1163c BB01     		.uleb128 0xbb
 36361 1163e 3AFE0000 		.long	0xfe3a
 36362 11642 00000000 		.long	.LLST186
 36363 11646 C901     		.uleb128 0xc9
 36364 11648 20CB0000 		.long	0xcb20
 36365 1164c 00000000 		.quad	.LBB3802
 36365      00000000 
 36366 11654 00000000 		.long	.Ldebug_ranges0+0xc10
 36367 11658 02       		.byte	0x2
GAS LISTING /tmp/ccJUMvuF.s 			page 942


 36368 11659 31       		.byte	0x31
 36369 1165a 92160100 		.long	0x11692
 36370 1165e AE01     		.uleb128 0xae
 36371 11660 34CB0000 		.long	0xcb34
 36372 11664 BE01     		.uleb128 0xbe
 36373 11666 41CB0000 		.long	0xcb41
 36374 1166a 00000000 		.long	.LLST187
 36375 1166e C101     		.uleb128 0xc1
 36376 11670 00000000 		.quad	.LVL165
 36376      00000000 
 36377 11678 B5920000 		.long	0x92b5
 36378 1167c C201     		.uleb128 0xc2
 36379 1167e 01       		.uleb128 0x1
 36380 1167f 54       		.byte	0x54
 36381 11680 09       		.uleb128 0x9
 36382 11681 03       		.byte	0x3
 36383 11682 00000000 		.quad	.LC7
 36383      00000000 
 36384 1168a C201     		.uleb128 0xc2
 36385 1168c 01       		.uleb128 0x1
 36386 1168d 51       		.byte	0x51
 36387 1168e 01       		.uleb128 0x1
 36388 1168f 38       		.byte	0x38
 36389 11690 00       		.byte	0
 36390 11691 00       		.byte	0
 36391 11692 C901     		.uleb128 0xc9
 36392 11694 57CC0000 		.long	0xcc57
 36393 11698 00000000 		.quad	.LBB3806
 36393      00000000 
 36394 116a0 00000000 		.long	.Ldebug_ranges0+0xc40
 36395 116a4 02       		.byte	0x2
 36396 116a5 31       		.byte	0x31
 36397 116a6 E8160100 		.long	0x116e8
 36398 116aa BE01     		.uleb128 0xbe
 36399 116ac 70CC0000 		.long	0xcc70
 36400 116b0 00000000 		.long	.LLST188
 36401 116b4 AE01     		.uleb128 0xae
 36402 116b6 66CC0000 		.long	0xcc66
 36403 116ba C101     		.uleb128 0xc1
 36404 116bc 00000000 		.quad	.LVL167
 36404      00000000 
 36405 116c4 94290000 		.long	0x2994
 36406 116c8 C201     		.uleb128 0xc2
 36407 116ca 01       		.uleb128 0x1
 36408 116cb 61       		.byte	0x61
 36409 116cc 19       		.uleb128 0x19
 36410 116cd 91       		.byte	0x91
 36411 116ce F8897F   		.sleb128 -15112
 36412 116d1 F6       		.byte	0xf6
 36413 116d2 08       		.byte	0x8
 36414 116d3 29       		.uleb128 0x29
 36415 116d4 77       		.byte	0x77
 36416 116d5 00       		.sleb128 0
 36417 116d6 F6       		.byte	0xf6
 36418 116d7 08       		.byte	0x8
 36419 116d8 29       		.uleb128 0x29
 36420 116d9 1C       		.byte	0x1c
GAS LISTING /tmp/ccJUMvuF.s 			page 943


 36421 116da F4       		.byte	0xf4
 36422 116db 29       		.uleb128 0x29
 36423 116dc 08       		.byte	0x8
 36424 116dd 00000000 		.long	0
 36425 116e1 00408F40 		.long	0x408f4000
 36426 116e5 1E       		.byte	0x1e
 36427 116e6 00       		.byte	0
 36428 116e7 00       		.byte	0
 36429 116e8 C901     		.uleb128 0xc9
 36430 116ea 20CB0000 		.long	0xcb20
 36431 116ee 00000000 		.quad	.LBB3811
 36431      00000000 
 36432 116f6 00000000 		.long	.Ldebug_ranges0+0xc80
 36433 116fa 02       		.byte	0x2
 36434 116fb 31       		.byte	0x31
 36435 116fc 3F170100 		.long	0x1173f
 36436 11700 BE01     		.uleb128 0xbe
 36437 11702 41CB0000 		.long	0xcb41
 36438 11706 00000000 		.long	.LLST189
 36439 1170a BE01     		.uleb128 0xbe
 36440 1170c 34CB0000 		.long	0xcb34
 36441 11710 00000000 		.long	.LLST190
 36442 11714 C101     		.uleb128 0xc1
 36443 11716 00000000 		.quad	.LVL169
 36443      00000000 
 36444 1171e B5920000 		.long	0x92b5
 36445 11722 C201     		.uleb128 0xc2
 36446 11724 01       		.uleb128 0x1
 36447 11725 55       		.byte	0x55
 36448 11726 02       		.uleb128 0x2
 36449 11727 73       		.byte	0x73
 36450 11728 00       		.sleb128 0
 36451 11729 C201     		.uleb128 0xc2
 36452 1172b 01       		.uleb128 0x1
 36453 1172c 54       		.byte	0x54
 36454 1172d 09       		.uleb128 0x9
 36455 1172e 03       		.byte	0x3
 36456 1172f 00000000 		.quad	.LC9
 36456      00000000 
 36457 11737 C201     		.uleb128 0xc2
 36458 11739 01       		.uleb128 0x1
 36459 1173a 51       		.byte	0x51
 36460 1173b 01       		.uleb128 0x1
 36461 1173c 32       		.byte	0x32
 36462 1173d 00       		.byte	0
 36463 1173e 00       		.byte	0
 36464 1173f C901     		.uleb128 0xc9
 36465 11741 98CC0000 		.long	0xcc98
 36466 11745 00000000 		.quad	.LBB3816
 36466      00000000 
 36467 1174d 00000000 		.long	.Ldebug_ranges0+0xcb0
 36468 11751 02       		.byte	0x2
 36469 11752 31       		.byte	0x31
 36470 11753 B2180100 		.long	0x118b2
 36471 11757 AE01     		.uleb128 0xae
 36472 11759 B1CC0000 		.long	0xccb1
 36473 1175d AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 944


 36474 1175f A7CC0000 		.long	0xcca7
 36475 11763 CB01     		.uleb128 0xcb
 36476 11765 47FE0000 		.long	0xfe47
 36477 11769 00000000 		.quad	.LBB3817
 36477      00000000 
 36478 11771 00000000 		.long	.Ldebug_ranges0+0xcb0
 36479 11775 09       		.byte	0x9
 36480 11776 71       		.byte	0x71
 36481 11777 BE01     		.uleb128 0xbe
 36482 11779 64FE0000 		.long	0xfe64
 36483 1177d 00000000 		.long	.LLST191
 36484 11781 C301     		.uleb128 0xc3
 36485 11783 A3FC0000 		.long	0xfca3
 36486 11787 00000000 		.quad	.LBB3819
 36486      00000000 
 36487 1178f 00000000 		.long	.Ldebug_ranges0+0xcf0
 36488 11793 09       		.byte	0x9
 36489 11794 3502     		.value	0x235
 36490 11796 64180100 		.long	0x11864
 36491 1179a BE01     		.uleb128 0xbe
 36492 1179c BCFC0000 		.long	0xfcbc
 36493 117a0 00000000 		.long	.LLST192
 36494 117a4 BE01     		.uleb128 0xbe
 36495 117a6 B2FC0000 		.long	0xfcb2
 36496 117aa 00000000 		.long	.LLST193
 36497 117ae C301     		.uleb128 0xc3
 36498 117b0 99DC0000 		.long	0xdc99
 36499 117b4 00000000 		.quad	.LBB3821
 36499      00000000 
 36500 117bc 00000000 		.long	.Ldebug_ranges0+0xd30
 36501 117c0 0E       		.byte	0xe
 36502 117c1 BC01     		.value	0x1bc
 36503 117c3 E0170100 		.long	0x117e0
 36504 117c7 BE01     		.uleb128 0xbe
 36505 117c9 ADDC0000 		.long	0xdcad
 36506 117cd 00000000 		.long	.LLST194
 36507 117d1 CF01     		.uleb128 0xcf
 36508 117d3 00000000 		.quad	.LVL209
 36508      00000000 
 36509 117db F5920000 		.long	0x92f5
 36510 117df 00       		.byte	0
 36511 117e0 CC01     		.uleb128 0xcc
 36512 117e2 1FCC0000 		.long	0xcc1f
 36513 117e6 00000000 		.quad	.LBB3824
 36513      00000000 
 36514 117ee 00000000 		.long	.Ldebug_ranges0+0xd60
 36515 117f2 0E       		.byte	0xe
 36516 117f3 BC01     		.value	0x1bc
 36517 117f5 BE01     		.uleb128 0xbe
 36518 117f7 38CC0000 		.long	0xcc38
 36519 117fb 00000000 		.long	.LLST195
 36520 117ff BE01     		.uleb128 0xbe
 36521 11801 2ECC0000 		.long	0xcc2e
 36522 11805 00000000 		.long	.LLST196
 36523 11809 B901     		.uleb128 0xb9
 36524 1180b 00000000 		.quad	.LBB3826
 36524      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 945


 36525 11813 28000000 		.quad	.LBE3826-.LBB3826
 36525      00000000 
 36526 1181b BE01     		.uleb128 0xbe
 36527 1181d 38CC0000 		.long	0xcc38
 36528 11821 00000000 		.long	.LLST197
 36529 11825 BE01     		.uleb128 0xbe
 36530 11827 2ECC0000 		.long	0xcc2e
 36531 1182b 00000000 		.long	.LLST198
 36532 1182f C601     		.uleb128 0xc6
 36533 11831 00000000 		.quad	.LVL183
 36533      00000000 
 36534 11839 652A0000 		.long	0x2a65
 36535 1183d 49180100 		.long	0x11849
 36536 11841 C201     		.uleb128 0xc2
 36537 11843 01       		.uleb128 0x1
 36538 11844 55       		.byte	0x55
 36539 11845 02       		.uleb128 0x2
 36540 11846 76       		.byte	0x76
 36541 11847 00       		.sleb128 0
 36542 11848 00       		.byte	0
 36543 11849 D001     		.uleb128 0xd0
 36544 1184b 00000000 		.quad	.LVL184
 36544      00000000 
 36545 11853 C201     		.uleb128 0xc2
 36546 11855 01       		.uleb128 0x1
 36547 11856 55       		.byte	0x55
 36548 11857 02       		.uleb128 0x2
 36549 11858 76       		.byte	0x76
 36550 11859 00       		.sleb128 0
 36551 1185a C201     		.uleb128 0xc2
 36552 1185c 01       		.uleb128 0x1
 36553 1185d 54       		.byte	0x54
 36554 1185e 01       		.uleb128 0x1
 36555 1185f 3A       		.byte	0x3a
 36556 11860 00       		.byte	0
 36557 11861 00       		.byte	0
 36558 11862 00       		.byte	0
 36559 11863 00       		.byte	0
 36560 11864 C501     		.uleb128 0xc5
 36561 11866 BADC0000 		.long	0xdcba
 36562 1186a 00000000 		.quad	.LBB3833
 36562      00000000 
 36563 11872 08000000 		.quad	.LBE3833-.LBB3833
 36563      00000000 
 36564 1187a 09       		.byte	0x9
 36565 1187b 3502     		.value	0x235
 36566 1187d 9A180100 		.long	0x1189a
 36567 11881 BE01     		.uleb128 0xbe
 36568 11883 D7DC0000 		.long	0xdcd7
 36569 11887 00000000 		.long	.LLST199
 36570 1188b CF01     		.uleb128 0xcf
 36571 1188d 00000000 		.quad	.LVL174
 36571      00000000 
 36572 11895 76290000 		.long	0x2976
 36573 11899 00       		.byte	0
 36574 1189a C101     		.uleb128 0xc1
 36575 1189c 00000000 		.quad	.LVL173
GAS LISTING /tmp/ccJUMvuF.s 			page 946


 36575      00000000 
 36576 118a4 C0290000 		.long	0x29c0
 36577 118a8 C201     		.uleb128 0xc2
 36578 118aa 01       		.uleb128 0x1
 36579 118ab 55       		.byte	0x55
 36580 118ac 02       		.uleb128 0x2
 36581 118ad 73       		.byte	0x73
 36582 118ae 00       		.sleb128 0
 36583 118af 00       		.byte	0
 36584 118b0 00       		.byte	0
 36585 118b1 00       		.byte	0
 36586 118b2 CF01     		.uleb128 0xcf
 36587 118b4 00000000 		.quad	.LVL163
 36587      00000000 
 36588 118bc D3020100 		.long	0x102d3
 36589 118c0 00       		.byte	0
 36590 118c1 00       		.byte	0
 36591 118c2 00       		.byte	0
 36592 118c3 CA01     		.uleb128 0xca
 36593 118c5 51F40000 		.long	0xf451
 36594 118c9 00000000 		.quad	.LBB3847
 36594      00000000 
 36595 118d1 08000000 		.quad	.LBE3847-.LBB3847
 36595      00000000 
 36596 118d9 05       		.byte	0x5
 36597 118da 35       		.byte	0x35
 36598 118db 00190100 		.long	0x11900
 36599 118df BE01     		.uleb128 0xbe
 36600 118e1 60F40000 		.long	0xf460
 36601 118e5 00000000 		.long	.LLST200
 36602 118e9 C101     		.uleb128 0xc1
 36603 118eb 00000000 		.quad	.LVL175
 36603      00000000 
 36604 118f3 71300000 		.long	0x3071
 36605 118f7 C201     		.uleb128 0xc2
 36606 118f9 01       		.uleb128 0x1
 36607 118fa 55       		.byte	0x55
 36608 118fb 02       		.uleb128 0x2
 36609 118fc 7D       		.byte	0x7d
 36610 118fd 00       		.sleb128 0
 36611 118fe 00       		.byte	0
 36612 118ff 00       		.byte	0
 36613 11900 CA01     		.uleb128 0xca
 36614 11902 51F40000 		.long	0xf451
 36615 11906 00000000 		.quad	.LBB3851
 36615      00000000 
 36616 1190e 0B000000 		.quad	.LBE3851-.LBB3851
 36616      00000000 
 36617 11916 05       		.byte	0x5
 36618 11917 35       		.byte	0x35
 36619 11918 3D190100 		.long	0x1193d
 36620 1191c BE01     		.uleb128 0xbe
 36621 1191e 60F40000 		.long	0xf460
 36622 11922 00000000 		.long	.LLST201
 36623 11926 C101     		.uleb128 0xc1
 36624 11928 00000000 		.quad	.LVL195
 36624      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 947


 36625 11930 71300000 		.long	0x3071
 36626 11934 C201     		.uleb128 0xc2
 36627 11936 01       		.uleb128 0x1
 36628 11937 55       		.byte	0x55
 36629 11938 02       		.uleb128 0x2
 36630 11939 7D       		.byte	0x7d
 36631 1193a 00       		.sleb128 0
 36632 1193b 00       		.byte	0
 36633 1193c 00       		.byte	0
 36634 1193d BC01     		.uleb128 0xbc
 36635 1193f 00000000 		.quad	.LBB3853
 36635      00000000 
 36636 11947 16000000 		.quad	.LBE3853-.LBB3853
 36636      00000000 
 36637 1194f 3D1A0100 		.long	0x11a3d
 36638 11953 BE01     		.uleb128 0xbe
 36639 11955 84F40000 		.long	0xf484
 36640 11959 00000000 		.long	.LLST202
 36641 1195d B801     		.uleb128 0xb8
 36642 1195f 04E10000 		.long	0xe104
 36643 11963 00000000 		.quad	.LBB3854
 36643      00000000 
 36644 1196b 16000000 		.quad	.LBE3854-.LBB3854
 36644      00000000 
 36645 11973 06       		.byte	0x6
 36646 11974 A901     		.value	0x1a9
 36647 11976 BE01     		.uleb128 0xbe
 36648 11978 13E10000 		.long	0xe113
 36649 1197c 00000000 		.long	.LLST202
 36650 11980 CE01     		.uleb128 0xce
 36651 11982 86E00000 		.long	0xe086
 36652 11986 00000000 		.quad	.LBB3856
 36652      00000000 
 36653 1198e 12000000 		.quad	.LBE3856-.LBB3856
 36653      00000000 
 36654 11996 06       		.byte	0x6
 36655 11997 A0       		.byte	0xa0
 36656 11998 AE01     		.uleb128 0xae
 36657 1199a 95E00000 		.long	0xe095
 36658 1199e BE01     		.uleb128 0xbe
 36659 119a0 ABE00000 		.long	0xe0ab
 36660 119a4 00000000 		.long	.LLST204
 36661 119a8 BE01     		.uleb128 0xbe
 36662 119aa 9FE00000 		.long	0xe09f
 36663 119ae 00000000 		.long	.LLST205
 36664 119b2 B901     		.uleb128 0xb9
 36665 119b4 00000000 		.quad	.LBB3857
 36665      00000000 
 36666 119bc 12000000 		.quad	.LBE3857-.LBB3857
 36666      00000000 
 36667 119c4 CE01     		.uleb128 0xce
 36668 119c6 4EE00000 		.long	0xe04e
 36669 119ca 00000000 		.quad	.LBB3858
 36669      00000000 
 36670 119d2 0D000000 		.quad	.LBE3858-.LBB3858
 36670      00000000 
 36671 119da 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 948


 36672 119db B2       		.byte	0xb2
 36673 119dc AE01     		.uleb128 0xae
 36674 119de 59E00000 		.long	0xe059
 36675 119e2 BE01     		.uleb128 0xbe
 36676 119e4 73E00000 		.long	0xe073
 36677 119e8 00000000 		.long	.LLST206
 36678 119ec BE01     		.uleb128 0xbe
 36679 119ee 66E00000 		.long	0xe066
 36680 119f2 00000000 		.long	.LLST207
 36681 119f6 B801     		.uleb128 0xb8
 36682 119f8 23E00000 		.long	0xe023
 36683 119fc 00000000 		.quad	.LBB3859
 36683      00000000 
 36684 11a04 0D000000 		.quad	.LBE3859-.LBB3859
 36684      00000000 
 36685 11a0c 2F       		.byte	0x2f
 36686 11a0d 7F01     		.value	0x17f
 36687 11a0f AE01     		.uleb128 0xae
 36688 11a11 32E00000 		.long	0xe032
 36689 11a15 BE01     		.uleb128 0xbe
 36690 11a17 48E00000 		.long	0xe048
 36691 11a1b 00000000 		.long	.LLST206
 36692 11a1f BE01     		.uleb128 0xbe
 36693 11a21 3CE00000 		.long	0xe03c
 36694 11a25 00000000 		.long	.LLST207
 36695 11a29 CF01     		.uleb128 0xcf
 36696 11a2b 00000000 		.quad	.LVL198
 36696      00000000 
 36697 11a33 ED6B0100 		.long	0x16bed
 36698 11a37 00       		.byte	0
 36699 11a38 00       		.byte	0
 36700 11a39 00       		.byte	0
 36701 11a3a 00       		.byte	0
 36702 11a3b 00       		.byte	0
 36703 11a3c 00       		.byte	0
 36704 11a3d C401     		.uleb128 0xc4
 36705 11a3f 00000000 		.long	.Ldebug_ranges0+0xd90
 36706 11a43 9E1B0100 		.long	0x11b9e
 36707 11a47 BE01     		.uleb128 0xbe
 36708 11a49 B8F20000 		.long	0xf2b8
 36709 11a4d 00000000 		.long	.LLST210
 36710 11a51 C501     		.uleb128 0xc5
 36711 11a53 4DDC0000 		.long	0xdc4d
 36712 11a57 00000000 		.quad	.LBB3863
 36712      00000000 
 36713 11a5f 0F000000 		.quad	.LBE3863-.LBB3863
 36713      00000000 
 36714 11a67 08       		.byte	0x8
 36715 11a68 2302     		.value	0x223
 36716 11a6a 9D1A0100 		.long	0x11a9d
 36717 11a6e BE01     		.uleb128 0xbe
 36718 11a70 5CDC0000 		.long	0xdc5c
 36719 11a74 00000000 		.long	.LLST210
 36720 11a78 B801     		.uleb128 0xb8
 36721 11a7a 07C90000 		.long	0xc907
 36722 11a7e 00000000 		.quad	.LBB3865
 36722      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 949


 36723 11a86 0B000000 		.quad	.LBE3865-.LBB3865
 36723      00000000 
 36724 11a8e 08       		.byte	0x8
 36725 11a8f 2D01     		.value	0x12d
 36726 11a91 BE01     		.uleb128 0xbe
 36727 11a93 16C90000 		.long	0xc916
 36728 11a97 00000000 		.long	.LLST210
 36729 11a9b 00       		.byte	0
 36730 11a9c 00       		.byte	0
 36731 11a9d CC01     		.uleb128 0xcc
 36732 11a9f 18CA0000 		.long	0xca18
 36733 11aa3 00000000 		.quad	.LBB3867
 36733      00000000 
 36734 11aab 00000000 		.long	.Ldebug_ranges0+0xdc0
 36735 11aaf 08       		.byte	0x8
 36736 11ab0 2302     		.value	0x223
 36737 11ab2 BE01     		.uleb128 0xbe
 36738 11ab4 31CA0000 		.long	0xca31
 36739 11ab8 00000000 		.long	.LLST213
 36740 11abc BE01     		.uleb128 0xbe
 36741 11abe 27CA0000 		.long	0xca27
 36742 11ac2 00000000 		.long	.LLST214
 36743 11ac6 B601     		.uleb128 0xb6
 36744 11ac8 00000000 		.long	.Ldebug_ranges0+0xdf0
 36745 11acc BE01     		.uleb128 0xbe
 36746 11ace 31CA0000 		.long	0xca31
 36747 11ad2 00000000 		.long	.LLST215
 36748 11ad6 BE01     		.uleb128 0xbe
 36749 11ad8 27CA0000 		.long	0xca27
 36750 11adc 00000000 		.long	.LLST216
 36751 11ae0 C901     		.uleb128 0xc9
 36752 11ae2 F4C90000 		.long	0xc9f4
 36753 11ae6 00000000 		.quad	.LBB3871
 36753      00000000 
 36754 11aee 00000000 		.long	.Ldebug_ranges0+0xe20
 36755 11af2 08       		.byte	0x8
 36756 11af3 F6       		.byte	0xf6
 36757 11af4 831B0100 		.long	0x11b83
 36758 11af8 BE01     		.uleb128 0xbe
 36759 11afa 0BCA0000 		.long	0xca0b
 36760 11afe 00000000 		.long	.LLST217
 36761 11b02 BE01     		.uleb128 0xbe
 36762 11b04 FFC90000 		.long	0xc9ff
 36763 11b08 00000000 		.long	.LLST218
 36764 11b0c CA01     		.uleb128 0xca
 36765 11b0e 7CC90000 		.long	0xc97c
 36766 11b12 00000000 		.quad	.LBB3873
 36766      00000000 
 36767 11b1a 09000000 		.quad	.LBE3873-.LBB3873
 36767      00000000 
 36768 11b22 0F       		.byte	0xf
 36769 11b23 52       		.byte	0x52
 36770 11b24 3D1B0100 		.long	0x11b3d
 36771 11b28 BE01     		.uleb128 0xbe
 36772 11b2a 93C90000 		.long	0xc993
 36773 11b2e 00000000 		.long	.LLST219
 36774 11b32 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 950


 36775 11b34 87C90000 		.long	0xc987
 36776 11b38 00000000 		.long	.LLST220
 36777 11b3c 00       		.byte	0
 36778 11b3d CE01     		.uleb128 0xce
 36779 11b3f A6C90000 		.long	0xc9a6
 36780 11b43 00000000 		.quad	.LBB3875
 36780      00000000 
 36781 11b4b 0B000000 		.quad	.LBE3875-.LBB3875
 36781      00000000 
 36782 11b53 0F       		.byte	0xf
 36783 11b54 54       		.byte	0x54
 36784 11b55 D101     		.uleb128 0xd1
 36785 11b57 BDC90000 		.long	0xc9bd
 36786 11b5b 7F       		.sleb128 -1
 36787 11b5c BE01     		.uleb128 0xbe
 36788 11b5e B1C90000 		.long	0xc9b1
 36789 11b62 00000000 		.long	.LLST221
 36790 11b66 B901     		.uleb128 0xb9
 36791 11b68 00000000 		.quad	.LBB3876
 36791      00000000 
 36792 11b70 0B000000 		.quad	.LBE3876-.LBB3876
 36792      00000000 
 36793 11b78 BD01     		.uleb128 0xbd
 36794 11b7a CBC90000 		.long	0xc9cb
 36795 11b7e 01       		.uleb128 0x1
 36796 11b7f 50       		.byte	0x50
 36797 11b80 00       		.byte	0
 36798 11b81 00       		.byte	0
 36799 11b82 00       		.byte	0
 36800 11b83 C101     		.uleb128 0xc1
 36801 11b85 00000000 		.quad	.LVL207
 36801      00000000 
 36802 11b8d 0B0C0000 		.long	0xc0b
 36803 11b91 C201     		.uleb128 0xc2
 36804 11b93 01       		.uleb128 0x1
 36805 11b94 54       		.byte	0x54
 36806 11b95 04       		.uleb128 0x4
 36807 11b96 91       		.byte	0x91
 36808 11b97 8F8A7F   		.sleb128 -15089
 36809 11b9a 00       		.byte	0
 36810 11b9b 00       		.byte	0
 36811 11b9c 00       		.byte	0
 36812 11b9d 00       		.byte	0
 36813 11b9e D001     		.uleb128 0xd0
 36814 11ba0 00000000 		.quad	.LVL132
 36814      00000000 
 36815 11ba8 C201     		.uleb128 0xc2
 36816 11baa 01       		.uleb128 0x1
 36817 11bab 55       		.byte	0x55
 36818 11bac 02       		.uleb128 0x2
 36819 11bad 76       		.byte	0x76
 36820 11bae 00       		.sleb128 0
 36821 11baf C201     		.uleb128 0xc2
 36822 11bb1 01       		.uleb128 0x1
 36823 11bb2 54       		.byte	0x54
 36824 11bb3 09       		.uleb128 0x9
 36825 11bb4 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 951


 36826 11bb5 00000000 		.quad	.LC4
 36826      00000000 
 36827 11bbd C201     		.uleb128 0xc2
 36828 11bbf 01       		.uleb128 0x1
 36829 11bc0 51       		.byte	0x51
 36830 11bc1 02       		.uleb128 0x2
 36831 11bc2 73       		.byte	0x73
 36832 11bc3 00       		.sleb128 0
 36833 11bc4 00       		.byte	0
 36834 11bc5 00       		.byte	0
 36835 11bc6 C101     		.uleb128 0xc1
 36836 11bc8 00000000 		.quad	.LVL199
 36836      00000000 
 36837 11bd0 026C0100 		.long	0x16c02
 36838 11bd4 C201     		.uleb128 0xc2
 36839 11bd6 01       		.uleb128 0x1
 36840 11bd7 55       		.byte	0x55
 36841 11bd8 02       		.uleb128 0x2
 36842 11bd9 73       		.byte	0x73
 36843 11bda 00       		.sleb128 0
 36844 11bdb 00       		.byte	0
 36845 11bdc 00       		.byte	0
 36846 11bdd D201     		.uleb128 0xd2
 36847 11bdf E9910000 		.long	0x91e9
 36848 11be3 00000000 		.quad	.LFB6612
 36848      00000000 
 36849 11beb 08010000 		.quad	.LFE6612-.LFB6612
 36849      00000000 
 36850 11bf3 01       		.uleb128 0x1
 36851 11bf4 9C       		.byte	0x9c
 36852 11bf5 041E0100 		.long	0x11e04
 36853 11bf9 35       		.uleb128 0x35
 36854 11bfa 00000000 		.long	.LASF1113
 36855 11bfe 169F0000 		.long	0x9f16
 36856 11c02 35       		.uleb128 0x35
 36857 11c03 00000000 		.long	.LASF1154
 36858 11c07 84930000 		.long	0x9384
 36859 11c0b 18       		.uleb128 0x18
 36860 11c0c 5F547000 		.string	"_Tp"
 36861 11c10 29000000 		.long	0x29
 36862 11c14 35       		.uleb128 0x35
 36863 11c15 00000000 		.long	.LASF1114
 36864 11c19 A8930000 		.long	0x93a8
 36865 11c1d D301     		.uleb128 0xd3
 36866 11c1f 00000000 		.long	.LASF1679
 36867 11c23 10       		.byte	0x10
 36868 11c24 CF       		.byte	0xcf
 36869 11c25 169F0000 		.long	0x9f16
 36870 11c29 01       		.uleb128 0x1
 36871 11c2a 55       		.byte	0x55
 36872 11c2b D401     		.uleb128 0xd4
 36873 11c2d 00000000 		.long	.LASF1699
 36874 11c31 10       		.byte	0x10
 36875 11c32 CF       		.byte	0xcf
 36876 11c33 84930000 		.long	0x9384
 36877 11c37 00000000 		.long	.LLST222
 36878 11c3b D401     		.uleb128 0xd4
GAS LISTING /tmp/ccJUMvuF.s 			page 952


 36879 11c3d 00000000 		.long	.LASF1704
 36880 11c41 10       		.byte	0x10
 36881 11c42 D0       		.byte	0xd0
 36882 11c43 84930000 		.long	0x9384
 36883 11c47 00000000 		.long	.LLST223
 36884 11c4b D301     		.uleb128 0xd3
 36885 11c4d 00000000 		.long	.LASF1431
 36886 11c51 10       		.byte	0x10
 36887 11c52 D0       		.byte	0xd0
 36888 11c53 29000000 		.long	0x29
 36889 11c57 01       		.uleb128 0x1
 36890 11c58 61       		.byte	0x61
 36891 11c59 D301     		.uleb128 0xd3
 36892 11c5b 00000000 		.long	.LASF1686
 36893 11c5f 10       		.byte	0x10
 36894 11c60 D0       		.byte	0xd0
 36895 11c61 A8930000 		.long	0x93a8
 36896 11c65 02       		.uleb128 0x2
 36897 11c66 91       		.byte	0x91
 36898 11c67 00       		.sleb128 0
 36899 11c68 B901     		.uleb128 0xb9
 36900 11c6a 00000000 		.quad	.LBB3889
 36900      00000000 
 36901 11c72 08010000 		.quad	.LBE3889-.LBB3889
 36901      00000000 
 36902 11c7a D501     		.uleb128 0xd5
 36903 11c7c 00000000 		.long	.LASF1700
 36904 11c80 10       		.byte	0x10
 36905 11c81 D2       		.byte	0xd2
 36906 11c82 7DC10000 		.long	0xc17d
 36907 11c86 00000000 		.long	.LLST224
 36908 11c8a D501     		.uleb128 0xd5
 36909 11c8c 00000000 		.long	.LASF1742
 36910 11c90 10       		.byte	0x10
 36911 11c91 D3       		.byte	0xd3
 36912 11c92 84930000 		.long	0x9384
 36913 11c96 00000000 		.long	.LLST225
 36914 11c9a CA01     		.uleb128 0xca
 36915 11c9c 79E80000 		.long	0xe879
 36916 11ca0 00000000 		.quad	.LBB3890
 36916      00000000 
 36917 11ca8 07000000 		.quad	.LBE3890-.LBB3890
 36917      00000000 
 36918 11cb0 10       		.byte	0x10
 36919 11cb1 D8       		.byte	0xd8
 36920 11cb2 C31C0100 		.long	0x11cc3
 36921 11cb6 AE01     		.uleb128 0xae
 36922 11cb8 92E80000 		.long	0xe892
 36923 11cbc AE01     		.uleb128 0xae
 36924 11cbe 88E80000 		.long	0xe888
 36925 11cc2 00       		.byte	0
 36926 11cc3 C901     		.uleb128 0xc9
 36927 11cc5 82E20000 		.long	0xe282
 36928 11cc9 00000000 		.quad	.LBB3892
 36928      00000000 
 36929 11cd1 00000000 		.long	.Ldebug_ranges0+0xe60
 36930 11cd5 10       		.byte	0x10
GAS LISTING /tmp/ccJUMvuF.s 			page 953


 36931 11cd6 D7       		.byte	0xd7
 36932 11cd7 EE1C0100 		.long	0x11cee
 36933 11cdb AE01     		.uleb128 0xae
 36934 11cdd A3E20000 		.long	0xe2a3
 36935 11ce1 AE01     		.uleb128 0xae
 36936 11ce3 B9E20000 		.long	0xe2b9
 36937 11ce7 AE01     		.uleb128 0xae
 36938 11ce9 ADE20000 		.long	0xe2ad
 36939 11ced 00       		.byte	0
 36940 11cee CA01     		.uleb128 0xca
 36941 11cf0 79E80000 		.long	0xe879
 36942 11cf4 00000000 		.quad	.LBB3895
 36942      00000000 
 36943 11cfc 04000000 		.quad	.LBE3895-.LBB3895
 36943      00000000 
 36944 11d04 10       		.byte	0x10
 36945 11d05 D8       		.byte	0xd8
 36946 11d06 171D0100 		.long	0x11d17
 36947 11d0a AE01     		.uleb128 0xae
 36948 11d0c 92E80000 		.long	0xe892
 36949 11d10 AE01     		.uleb128 0xae
 36950 11d12 88E80000 		.long	0xe888
 36951 11d16 00       		.byte	0
 36952 11d17 CA01     		.uleb128 0xca
 36953 11d19 40F70000 		.long	0xf740
 36954 11d1d 00000000 		.quad	.LBB3898
 36954      00000000 
 36955 11d25 67000000 		.quad	.LBE3898-.LBB3898
 36955      00000000 
 36956 11d2d 10       		.byte	0x10
 36957 11d2e E4       		.byte	0xe4
 36958 11d2f D51D0100 		.long	0x11dd5
 36959 11d33 BE01     		.uleb128 0xbe
 36960 11d35 93F70000 		.long	0xf793
 36961 11d39 00000000 		.long	.LLST226
 36962 11d3d BE01     		.uleb128 0xbe
 36963 11d3f 87F70000 		.long	0xf787
 36964 11d43 00000000 		.long	.LLST227
 36965 11d47 BE01     		.uleb128 0xbe
 36966 11d49 7BF70000 		.long	0xf77b
 36967 11d4d 00000000 		.long	.LLST228
 36968 11d51 BE01     		.uleb128 0xbe
 36969 11d53 6FF70000 		.long	0xf76f
 36970 11d57 00000000 		.long	.LLST229
 36971 11d5b B901     		.uleb128 0xb9
 36972 11d5d 00000000 		.quad	.LBB3899
 36972      00000000 
 36973 11d65 67000000 		.quad	.LBE3899-.LBB3899
 36973      00000000 
 36974 11d6d BB01     		.uleb128 0xbb
 36975 11d6f ADF70000 		.long	0xf7ad
 36976 11d73 00000000 		.long	.LLST230
 36977 11d77 C901     		.uleb128 0xc9
 36978 11d79 F2F60000 		.long	0xf6f2
 36979 11d7d 00000000 		.quad	.LBB3900
 36979      00000000 
 36980 11d85 00000000 		.long	.Ldebug_ranges0+0xe90
GAS LISTING /tmp/ccJUMvuF.s 			page 954


 36981 11d89 10       		.byte	0x10
 36982 11d8a 81       		.byte	0x81
 36983 11d8b A61D0100 		.long	0x11da6
 36984 11d8f AE01     		.uleb128 0xae
 36985 11d91 13F70000 		.long	0xf713
 36986 11d95 BE01     		.uleb128 0xbe
 36987 11d97 29F70000 		.long	0xf729
 36988 11d9b 00000000 		.long	.LLST231
 36989 11d9f AE01     		.uleb128 0xae
 36990 11da1 1DF70000 		.long	0xf71d
 36991 11da5 00       		.byte	0
 36992 11da6 CE01     		.uleb128 0xce
 36993 11da8 79E80000 		.long	0xe879
 36994 11dac 00000000 		.quad	.LBB3903
 36994      00000000 
 36995 11db4 04000000 		.quad	.LBE3903-.LBB3903
 36995      00000000 
 36996 11dbc 10       		.byte	0x10
 36997 11dbd 83       		.byte	0x83
 36998 11dbe BE01     		.uleb128 0xbe
 36999 11dc0 92E80000 		.long	0xe892
 37000 11dc4 00000000 		.long	.LLST232
 37001 11dc8 BE01     		.uleb128 0xbe
 37002 11dca 88E80000 		.long	0xe888
 37003 11dce 00000000 		.long	.LLST233
 37004 11dd2 00       		.byte	0
 37005 11dd3 00       		.byte	0
 37006 11dd4 00       		.byte	0
 37007 11dd5 CE01     		.uleb128 0xce
 37008 11dd7 79E80000 		.long	0xe879
 37009 11ddb 00000000 		.quad	.LBB3906
 37009      00000000 
 37010 11de3 04000000 		.quad	.LBE3906-.LBB3906
 37010      00000000 
 37011 11deb 10       		.byte	0x10
 37012 11dec E0       		.byte	0xe0
 37013 11ded BE01     		.uleb128 0xbe
 37014 11def 92E80000 		.long	0xe892
 37015 11df3 00000000 		.long	.LLST234
 37016 11df7 BE01     		.uleb128 0xbe
 37017 11df9 88E80000 		.long	0xe888
 37018 11dfd 00000000 		.long	.LLST235
 37019 11e01 00       		.byte	0
 37020 11e02 00       		.byte	0
 37021 11e03 00       		.byte	0
 37022 11e04 D601     		.uleb128 0xd6
 37023 11e06 ABF90000 		.long	0xf9ab
 37024 11e0a 00000000 		.quad	.LFB6722
 37024      00000000 
 37025 11e12 1F020000 		.quad	.LFE6722-.LFB6722
 37025      00000000 
 37026 11e1a 01       		.uleb128 0x1
 37027 11e1b 9C       		.byte	0x9c
 37028 11e1c AE230100 		.long	0x123ae
 37029 11e20 B101     		.uleb128 0xb1
 37030 11e22 D1F90000 		.long	0xf9d1
 37031 11e26 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 955


 37032 11e27 5C       		.byte	0x5c
 37033 11e28 B101     		.uleb128 0xb1
 37034 11e2a DEF90000 		.long	0xf9de
 37035 11e2e 01       		.uleb128 0x1
 37036 11e2f 53       		.byte	0x53
 37037 11e30 B101     		.uleb128 0xb1
 37038 11e32 EBF90000 		.long	0xf9eb
 37039 11e36 01       		.uleb128 0x1
 37040 11e37 5D       		.byte	0x5d
 37041 11e38 C301     		.uleb128 0xc3
 37042 11e3a 37E80000 		.long	0xe837
 37043 11e3e 00000000 		.quad	.LBB3909
 37043      00000000 
 37044 11e46 00000000 		.long	.Ldebug_ranges0+0xec0
 37045 11e4a 0D       		.byte	0xd
 37046 11e4b 9707     		.value	0x797
 37047 11e4d 5E1E0100 		.long	0x11e5e
 37048 11e51 AE01     		.uleb128 0xae
 37049 11e53 61E80000 		.long	0xe861
 37050 11e57 AE01     		.uleb128 0xae
 37051 11e59 54E80000 		.long	0xe854
 37052 11e5d 00       		.byte	0
 37053 11e5e B601     		.uleb128 0xb6
 37054 11e60 00000000 		.long	.Ldebug_ranges0+0xf00
 37055 11e64 BA01     		.uleb128 0xba
 37056 11e66 07FA0000 		.long	0xfa07
 37057 11e6a C301     		.uleb128 0xc3
 37058 11e6c 9EFE0000 		.long	0xfe9e
 37059 11e70 00000000 		.quad	.LBB3915
 37059      00000000 
 37060 11e78 00000000 		.long	.Ldebug_ranges0+0xf30
 37061 11e7c 0D       		.byte	0xd
 37062 11e7d A007     		.value	0x7a0
 37063 11e7f 1A220100 		.long	0x1221a
 37064 11e83 AE01     		.uleb128 0xae
 37065 11e85 D5FE0000 		.long	0xfed5
 37066 11e89 AE01     		.uleb128 0xae
 37067 11e8b C8FE0000 		.long	0xfec8
 37068 11e8f AE01     		.uleb128 0xae
 37069 11e91 BBFE0000 		.long	0xfebb
 37070 11e95 B601     		.uleb128 0xb6
 37071 11e97 00000000 		.long	.Ldebug_ranges0+0xf30
 37072 11e9b BA01     		.uleb128 0xba
 37073 11e9d E4FE0000 		.long	0xfee4
 37074 11ea1 C301     		.uleb128 0xc3
 37075 11ea3 37E80000 		.long	0xe837
 37076 11ea7 00000000 		.quad	.LBB3917
 37076      00000000 
 37077 11eaf 00000000 		.long	.Ldebug_ranges0+0xf80
 37078 11eb3 0D       		.byte	0xd
 37079 11eb4 7F07     		.value	0x77f
 37080 11eb6 C71E0100 		.long	0x11ec7
 37081 11eba AE01     		.uleb128 0xae
 37082 11ebc 61E80000 		.long	0xe861
 37083 11ec0 AE01     		.uleb128 0xae
 37084 11ec2 54E80000 		.long	0xe854
 37085 11ec6 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 956


 37086 11ec7 C301     		.uleb128 0xc3
 37087 11ec9 F3FE0000 		.long	0xfef3
 37088 11ecd 00000000 		.quad	.LBB3920
 37088      00000000 
 37089 11ed5 00000000 		.long	.Ldebug_ranges0+0xfb0
 37090 11ed9 0D       		.byte	0xd
 37091 11eda 8007     		.value	0x780
 37092 11edc 8A200100 		.long	0x1208a
 37093 11ee0 AE01     		.uleb128 0xae
 37094 11ee2 40FF0000 		.long	0xff40
 37095 11ee6 AE01     		.uleb128 0xae
 37096 11ee8 34FF0000 		.long	0xff34
 37097 11eec AE01     		.uleb128 0xae
 37098 11eee 28FF0000 		.long	0xff28
 37099 11ef2 AE01     		.uleb128 0xae
 37100 11ef4 1CFF0000 		.long	0xff1c
 37101 11ef8 AE01     		.uleb128 0xae
 37102 11efa 10FF0000 		.long	0xff10
 37103 11efe C901     		.uleb128 0xc9
 37104 11f00 82E20000 		.long	0xe282
 37105 11f04 00000000 		.quad	.LBB3922
 37105      00000000 
 37106 11f0c 00000000 		.long	.Ldebug_ranges0+0x1000
 37107 11f10 0D       		.byte	0xd
 37108 11f11 51       		.byte	0x51
 37109 11f12 291F0100 		.long	0x11f29
 37110 11f16 AE01     		.uleb128 0xae
 37111 11f18 A3E20000 		.long	0xe2a3
 37112 11f1c AE01     		.uleb128 0xae
 37113 11f1e B9E20000 		.long	0xe2b9
 37114 11f22 AE01     		.uleb128 0xae
 37115 11f24 ADE20000 		.long	0xe2ad
 37116 11f28 00       		.byte	0
 37117 11f29 CA01     		.uleb128 0xca
 37118 11f2b 82E20000 		.long	0xe282
 37119 11f2f 00000000 		.quad	.LBB3925
 37119      00000000 
 37120 11f37 05000000 		.quad	.LBE3925-.LBB3925
 37120      00000000 
 37121 11f3f 0D       		.byte	0xd
 37122 11f40 53       		.byte	0x53
 37123 11f41 581F0100 		.long	0x11f58
 37124 11f45 AE01     		.uleb128 0xae
 37125 11f47 A3E20000 		.long	0xe2a3
 37126 11f4b AE01     		.uleb128 0xae
 37127 11f4d B9E20000 		.long	0xe2b9
 37128 11f51 AE01     		.uleb128 0xae
 37129 11f53 ADE20000 		.long	0xe2ad
 37130 11f57 00       		.byte	0
 37131 11f58 CA01     		.uleb128 0xca
 37132 11f5a 6DE70000 		.long	0xe76d
 37133 11f5e 00000000 		.quad	.LBB3928
 37133      00000000 
 37134 11f66 1E000000 		.quad	.LBE3928-.LBB3928
 37134      00000000 
 37135 11f6e 0D       		.byte	0xd
 37136 11f6f 5D       		.byte	0x5d
GAS LISTING /tmp/ccJUMvuF.s 			page 957


 37137 11f70 BF1F0100 		.long	0x11fbf
 37138 11f74 AE01     		.uleb128 0xae
 37139 11f76 96E70000 		.long	0xe796
 37140 11f7a AE01     		.uleb128 0xae
 37141 11f7c 8AE70000 		.long	0xe78a
 37142 11f80 CE01     		.uleb128 0xce
 37143 11f82 27E70000 		.long	0xe727
 37144 11f86 00000000 		.quad	.LBB3929
 37144      00000000 
 37145 11f8e 1E000000 		.quad	.LBE3929-.LBB3929
 37145      00000000 
 37146 11f96 14       		.byte	0x14
 37147 11f97 94       		.byte	0x94
 37148 11f98 AE01     		.uleb128 0xae
 37149 11f9a 47E70000 		.long	0xe747
 37150 11f9e AE01     		.uleb128 0xae
 37151 11fa0 3BE70000 		.long	0xe73b
 37152 11fa4 B901     		.uleb128 0xb9
 37153 11fa6 00000000 		.quad	.LBB3930
 37153      00000000 
 37154 11fae 1E000000 		.quad	.LBE3930-.LBB3930
 37154      00000000 
 37155 11fb6 BA01     		.uleb128 0xba
 37156 11fb8 55E70000 		.long	0xe755
 37157 11fbc 00       		.byte	0
 37158 11fbd 00       		.byte	0
 37159 11fbe 00       		.byte	0
 37160 11fbf CA01     		.uleb128 0xca
 37161 11fc1 6DE70000 		.long	0xe76d
 37162 11fc5 00000000 		.quad	.LBB3931
 37162      00000000 
 37163 11fcd 27000000 		.quad	.LBE3931-.LBB3931
 37163      00000000 
 37164 11fd5 0D       		.byte	0xd
 37165 11fd6 54       		.byte	0x54
 37166 11fd7 26200100 		.long	0x12026
 37167 11fdb AE01     		.uleb128 0xae
 37168 11fdd 96E70000 		.long	0xe796
 37169 11fe1 AE01     		.uleb128 0xae
 37170 11fe3 8AE70000 		.long	0xe78a
 37171 11fe7 CE01     		.uleb128 0xce
 37172 11fe9 27E70000 		.long	0xe727
 37173 11fed 00000000 		.quad	.LBB3932
 37173      00000000 
 37174 11ff5 27000000 		.quad	.LBE3932-.LBB3932
 37174      00000000 
 37175 11ffd 14       		.byte	0x14
 37176 11ffe 94       		.byte	0x94
 37177 11fff AE01     		.uleb128 0xae
 37178 12001 47E70000 		.long	0xe747
 37179 12005 AE01     		.uleb128 0xae
 37180 12007 3BE70000 		.long	0xe73b
 37181 1200b B901     		.uleb128 0xb9
 37182 1200d 00000000 		.quad	.LBB3933
 37182      00000000 
 37183 12015 27000000 		.quad	.LBE3933-.LBB3933
 37183      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 958


 37184 1201d BA01     		.uleb128 0xba
 37185 1201f 55E70000 		.long	0xe755
 37186 12023 00       		.byte	0
 37187 12024 00       		.byte	0
 37188 12025 00       		.byte	0
 37189 12026 CE01     		.uleb128 0xce
 37190 12028 6DE70000 		.long	0xe76d
 37191 1202c 00000000 		.quad	.LBB3934
 37191      00000000 
 37192 12034 1D000000 		.quad	.LBE3934-.LBB3934
 37192      00000000 
 37193 1203c 0D       		.byte	0xd
 37194 1203d 5B       		.byte	0x5b
 37195 1203e AE01     		.uleb128 0xae
 37196 12040 96E70000 		.long	0xe796
 37197 12044 AE01     		.uleb128 0xae
 37198 12046 8AE70000 		.long	0xe78a
 37199 1204a CE01     		.uleb128 0xce
 37200 1204c 27E70000 		.long	0xe727
 37201 12050 00000000 		.quad	.LBB3935
 37201      00000000 
 37202 12058 1D000000 		.quad	.LBE3935-.LBB3935
 37202      00000000 
 37203 12060 14       		.byte	0x14
 37204 12061 94       		.byte	0x94
 37205 12062 AE01     		.uleb128 0xae
 37206 12064 47E70000 		.long	0xe747
 37207 12068 AE01     		.uleb128 0xae
 37208 1206a 3BE70000 		.long	0xe73b
 37209 1206e B901     		.uleb128 0xb9
 37210 12070 00000000 		.quad	.LBB3936
 37210      00000000 
 37211 12078 1D000000 		.quad	.LBE3936-.LBB3936
 37211      00000000 
 37212 12080 BA01     		.uleb128 0xba
 37213 12082 55E70000 		.long	0xe755
 37214 12086 00       		.byte	0
 37215 12087 00       		.byte	0
 37216 12088 00       		.byte	0
 37217 12089 00       		.byte	0
 37218 1208a C501     		.uleb128 0xc5
 37219 1208c 79E80000 		.long	0xe879
 37220 12090 00000000 		.quad	.LBB3942
 37220      00000000 
 37221 12098 04000000 		.quad	.LBE3942-.LBB3942
 37221      00000000 
 37222 120a0 0D       		.byte	0xd
 37223 120a1 7F07     		.value	0x77f
 37224 120a3 B4200100 		.long	0x120b4
 37225 120a7 AE01     		.uleb128 0xae
 37226 120a9 92E80000 		.long	0xe892
 37227 120ad AE01     		.uleb128 0xae
 37228 120af 88E80000 		.long	0xe888
 37229 120b3 00       		.byte	0
 37230 120b4 CC01     		.uleb128 0xcc
 37231 120b6 E5E70000 		.long	0xe7e5
 37232 120ba 00000000 		.quad	.LBB3945
GAS LISTING /tmp/ccJUMvuF.s 			page 959


 37232      00000000 
 37233 120c2 00000000 		.long	.Ldebug_ranges0+0x1030
 37234 120c6 0D       		.byte	0xd
 37235 120c7 8207     		.value	0x782
 37236 120c9 AE01     		.uleb128 0xae
 37237 120cb 1CE80000 		.long	0xe81c
 37238 120cf AE01     		.uleb128 0xae
 37239 120d1 0FE80000 		.long	0xe80f
 37240 120d5 AE01     		.uleb128 0xae
 37241 120d7 02E80000 		.long	0xe802
 37242 120db C501     		.uleb128 0xc5
 37243 120dd 27D60000 		.long	0xd627
 37244 120e1 00000000 		.quad	.LBB3947
 37244      00000000 
 37245 120e9 07000000 		.quad	.LBE3947-.LBB3947
 37245      00000000 
 37246 120f1 0D       		.byte	0xd
 37247 120f2 6E07     		.value	0x76e
 37248 120f4 FF200100 		.long	0x120ff
 37249 120f8 AE01     		.uleb128 0xae
 37250 120fa 36D60000 		.long	0xd636
 37251 120fe 00       		.byte	0
 37252 120ff C501     		.uleb128 0xc5
 37253 12101 82E20000 		.long	0xe282
 37254 12105 00000000 		.quad	.LBB3949
 37254      00000000 
 37255 1210d 05000000 		.quad	.LBE3949-.LBB3949
 37255      00000000 
 37256 12115 0D       		.byte	0xd
 37257 12116 6D07     		.value	0x76d
 37258 12118 2F210100 		.long	0x1212f
 37259 1211c AE01     		.uleb128 0xae
 37260 1211e A3E20000 		.long	0xe2a3
 37261 12122 AE01     		.uleb128 0xae
 37262 12124 B9E20000 		.long	0xe2b9
 37263 12128 AE01     		.uleb128 0xae
 37264 1212a ADE20000 		.long	0xe2ad
 37265 1212e 00       		.byte	0
 37266 1212f C301     		.uleb128 0xc3
 37267 12131 EFE40000 		.long	0xe4ef
 37268 12135 00000000 		.quad	.LBB3951
 37268      00000000 
 37269 1213d 00000000 		.long	.Ldebug_ranges0+0x1060
 37270 12141 0D       		.byte	0xd
 37271 12142 6F07     		.value	0x76f
 37272 12144 4F210100 		.long	0x1214f
 37273 12148 AE01     		.uleb128 0xae
 37274 1214a FEE40000 		.long	0xe4fe
 37275 1214e 00       		.byte	0
 37276 1214f C501     		.uleb128 0xc5
 37277 12151 EFE40000 		.long	0xe4ef
 37278 12155 00000000 		.quad	.LBB3955
 37278      00000000 
 37279 1215d 07000000 		.quad	.LBE3955-.LBB3955
 37279      00000000 
 37280 12165 0D       		.byte	0xd
 37281 12166 7107     		.value	0x771
GAS LISTING /tmp/ccJUMvuF.s 			page 960


 37282 12168 73210100 		.long	0x12173
 37283 1216c AE01     		.uleb128 0xae
 37284 1216e FEE40000 		.long	0xe4fe
 37285 12172 00       		.byte	0
 37286 12173 C501     		.uleb128 0xc5
 37287 12175 82E20000 		.long	0xe282
 37288 12179 00000000 		.quad	.LBB3957
 37288      00000000 
 37289 12181 05000000 		.quad	.LBE3957-.LBB3957
 37289      00000000 
 37290 12189 0D       		.byte	0xd
 37291 1218a 7007     		.value	0x770
 37292 1218c A3210100 		.long	0x121a3
 37293 12190 AE01     		.uleb128 0xae
 37294 12192 A3E20000 		.long	0xe2a3
 37295 12196 AE01     		.uleb128 0xae
 37296 12198 B9E20000 		.long	0xe2b9
 37297 1219c AE01     		.uleb128 0xae
 37298 1219e ADE20000 		.long	0xe2ad
 37299 121a2 00       		.byte	0
 37300 121a3 C301     		.uleb128 0xc3
 37301 121a5 6DE70000 		.long	0xe76d
 37302 121a9 00000000 		.quad	.LBB3959
 37302      00000000 
 37303 121b1 00000000 		.long	.Ldebug_ranges0+0x10a0
 37304 121b5 0D       		.byte	0xd
 37305 121b6 7407     		.value	0x774
 37306 121b8 F7210100 		.long	0x121f7
 37307 121bc AE01     		.uleb128 0xae
 37308 121be 96E70000 		.long	0xe796
 37309 121c2 AE01     		.uleb128 0xae
 37310 121c4 8AE70000 		.long	0xe78a
 37311 121c8 CB01     		.uleb128 0xcb
 37312 121ca 27E70000 		.long	0xe727
 37313 121ce 00000000 		.quad	.LBB3960
 37313      00000000 
 37314 121d6 00000000 		.long	.Ldebug_ranges0+0x10a0
 37315 121da 14       		.byte	0x14
 37316 121db 94       		.byte	0x94
 37317 121dc AE01     		.uleb128 0xae
 37318 121de 47E70000 		.long	0xe747
 37319 121e2 AE01     		.uleb128 0xae
 37320 121e4 3BE70000 		.long	0xe73b
 37321 121e8 B601     		.uleb128 0xb6
 37322 121ea 00000000 		.long	.Ldebug_ranges0+0x10a0
 37323 121ee BA01     		.uleb128 0xba
 37324 121f0 55E70000 		.long	0xe755
 37325 121f4 00       		.byte	0
 37326 121f5 00       		.byte	0
 37327 121f6 00       		.byte	0
 37328 121f7 B801     		.uleb128 0xb8
 37329 121f9 27D60000 		.long	0xd627
 37330 121fd 00000000 		.quad	.LBB3964
 37330      00000000 
 37331 12205 04000000 		.quad	.LBE3964-.LBB3964
 37331      00000000 
 37332 1220d 0D       		.byte	0xd
GAS LISTING /tmp/ccJUMvuF.s 			page 961


 37333 1220e 7507     		.value	0x775
 37334 12210 AE01     		.uleb128 0xae
 37335 12212 36D60000 		.long	0xd636
 37336 12216 00       		.byte	0
 37337 12217 00       		.byte	0
 37338 12218 00       		.byte	0
 37339 12219 00       		.byte	0
 37340 1221a B801     		.uleb128 0xb8
 37341 1221c 59F90000 		.long	0xf959
 37342 12220 00000000 		.quad	.LBB3978
 37342      00000000 
 37343 12228 6C000000 		.quad	.LBE3978-.LBB3978
 37343      00000000 
 37344 12230 0D       		.byte	0xd
 37345 12231 9B07     		.value	0x79b
 37346 12233 AE01     		.uleb128 0xae
 37347 12235 90F90000 		.long	0xf990
 37348 12239 AE01     		.uleb128 0xae
 37349 1223b 83F90000 		.long	0xf983
 37350 1223f AE01     		.uleb128 0xae
 37351 12241 76F90000 		.long	0xf976
 37352 12245 C501     		.uleb128 0xc5
 37353 12247 B2F80000 		.long	0xf8b2
 37354 1224b 00000000 		.quad	.LBB3979
 37354      00000000 
 37355 12253 35000000 		.quad	.LBE3979-.LBB3979
 37355      00000000 
 37356 1225b 0D       		.byte	0xd
 37357 1225c 8C07     		.value	0x78c
 37358 1225e FB220100 		.long	0x122fb
 37359 12262 AE01     		.uleb128 0xae
 37360 12264 E9F80000 		.long	0xf8e9
 37361 12268 AE01     		.uleb128 0xae
 37362 1226a DCF80000 		.long	0xf8dc
 37363 1226e AE01     		.uleb128 0xae
 37364 12270 CFF80000 		.long	0xf8cf
 37365 12274 B801     		.uleb128 0xb8
 37366 12276 BBF70000 		.long	0xf7bb
 37367 1227a 00000000 		.quad	.LBB3980
 37367      00000000 
 37368 12282 35000000 		.quad	.LBE3980-.LBB3980
 37368      00000000 
 37369 1228a 0D       		.byte	0xd
 37370 1228b 8906     		.value	0x689
 37371 1228d AE01     		.uleb128 0xae
 37372 1228f E5F70000 		.long	0xf7e5
 37373 12293 AE01     		.uleb128 0xae
 37374 12295 D8F70000 		.long	0xf7d8
 37375 12299 B901     		.uleb128 0xb9
 37376 1229b 00000000 		.quad	.LBB3981
 37376      00000000 
 37377 122a3 35000000 		.quad	.LBE3981-.LBB3981
 37377      00000000 
 37378 122ab BA01     		.uleb128 0xba
 37379 122ad 19F80000 		.long	0xf819
 37380 122b1 BD01     		.uleb128 0xbd
 37381 122b3 2BF80000 		.long	0xf82b
GAS LISTING /tmp/ccJUMvuF.s 			page 962


 37382 122b7 01       		.uleb128 0x1
 37383 122b8 5D       		.byte	0x5d
 37384 122b9 C301     		.uleb128 0xc3
 37385 122bb 37E80000 		.long	0xe837
 37386 122bf 00000000 		.quad	.LBB3982
 37386      00000000 
 37387 122c7 00000000 		.long	.Ldebug_ranges0+0x10d0
 37388 122cb 10       		.byte	0x10
 37389 122cc 4801     		.value	0x148
 37390 122ce DF220100 		.long	0x122df
 37391 122d2 AE01     		.uleb128 0xae
 37392 122d4 61E80000 		.long	0xe861
 37393 122d8 AE01     		.uleb128 0xae
 37394 122da 54E80000 		.long	0xe854
 37395 122de 00       		.byte	0
 37396 122df B901     		.uleb128 0xb9
 37397 122e1 00000000 		.quad	.LBB3986
 37397      00000000 
 37398 122e9 25000000 		.quad	.LBE3986-.LBB3986
 37398      00000000 
 37399 122f1 BA01     		.uleb128 0xba
 37400 122f3 3AF80000 		.long	0xf83a
 37401 122f7 00       		.byte	0
 37402 122f8 00       		.byte	0
 37403 122f9 00       		.byte	0
 37404 122fa 00       		.byte	0
 37405 122fb B801     		.uleb128 0xb8
 37406 122fd 14F90000 		.long	0xf914
 37407 12301 00000000 		.quad	.LBB3987
 37407      00000000 
 37408 12309 37000000 		.quad	.LBE3987-.LBB3987
 37408      00000000 
 37409 12311 0D       		.byte	0xd
 37410 12312 8D07     		.value	0x78d
 37411 12314 AE01     		.uleb128 0xae
 37412 12316 3EF90000 		.long	0xf93e
 37413 1231a AE01     		.uleb128 0xae
 37414 1231c 31F90000 		.long	0xf931
 37415 12320 C501     		.uleb128 0xc5
 37416 12322 EFE40000 		.long	0xe4ef
 37417 12326 00000000 		.quad	.LBB3989
 37417      00000000 
 37418 1232e 04000000 		.quad	.LBE3989-.LBB3989
 37418      00000000 
 37419 12336 10       		.byte	0x10
 37420 12337 8B01     		.value	0x18b
 37421 12339 44230100 		.long	0x12344
 37422 1233d AE01     		.uleb128 0xae
 37423 1233f FEE40000 		.long	0xe4fe
 37424 12343 00       		.byte	0
 37425 12344 B801     		.uleb128 0xb8
 37426 12346 4AF80000 		.long	0xf84a
 37427 1234a 00000000 		.quad	.LBB3991
 37427      00000000 
 37428 12352 2B000000 		.quad	.LBE3991-.LBB3991
 37428      00000000 
 37429 1235a 10       		.byte	0x10
GAS LISTING /tmp/ccJUMvuF.s 			page 963


 37430 1235b 8C01     		.value	0x18c
 37431 1235d AE01     		.uleb128 0xae
 37432 1235f 7FF80000 		.long	0xf87f
 37433 12363 AE01     		.uleb128 0xae
 37434 12365 73F80000 		.long	0xf873
 37435 12369 AE01     		.uleb128 0xae
 37436 1236b 67F80000 		.long	0xf867
 37437 1236f B901     		.uleb128 0xb9
 37438 12371 00000000 		.quad	.LBB3992
 37438      00000000 
 37439 12379 2B000000 		.quad	.LBE3992-.LBB3992
 37439      00000000 
 37440 12381 BA01     		.uleb128 0xba
 37441 12383 A4F80000 		.long	0xf8a4
 37442 12387 CB01     		.uleb128 0xcb
 37443 12389 37E80000 		.long	0xe837
 37444 1238d 00000000 		.quad	.LBB3993
 37444      00000000 
 37445 12395 00000000 		.long	.Ldebug_ranges0+0x1100
 37446 12399 10       		.byte	0x10
 37447 1239a F7       		.byte	0xf7
 37448 1239b AE01     		.uleb128 0xae
 37449 1239d 61E80000 		.long	0xe861
 37450 123a1 AE01     		.uleb128 0xae
 37451 123a3 54E80000 		.long	0xe854
 37452 123a7 00       		.byte	0
 37453 123a8 00       		.byte	0
 37454 123a9 00       		.byte	0
 37455 123aa 00       		.byte	0
 37456 123ab 00       		.byte	0
 37457 123ac 00       		.byte	0
 37458 123ad 00       		.byte	0
 37459 123ae B001     		.uleb128 0xb0
 37460 123b0 90010100 		.long	0x10190
 37461 123b4 00000000 		.long	.LASF1743
 37462 123b8 00000000 		.quad	.LFB6046
 37462      00000000 
 37463 123c0 40040000 		.quad	.LFE6046-.LFB6046
 37463      00000000 
 37464 123c8 01       		.uleb128 0x1
 37465 123c9 9C       		.byte	0x9c
 37466 123ca D2230100 		.long	0x123d2
 37467 123ce BD320100 		.long	0x132bd
 37468 123d2 BE01     		.uleb128 0xbe
 37469 123d4 9F010100 		.long	0x1019f
 37470 123d8 00000000 		.long	.LLST236
 37471 123dc C401     		.uleb128 0xc4
 37472 123de 00000000 		.long	.Ldebug_ranges0+0x1150
 37473 123e2 D2310100 		.long	0x131d2
 37474 123e6 BB01     		.uleb128 0xbb
 37475 123e8 B5010100 		.long	0x101b5
 37476 123ec 00000000 		.long	.LLST237
 37477 123f0 BB01     		.uleb128 0xbb
 37478 123f2 C1010100 		.long	0x101c1
 37479 123f6 00000000 		.long	.LLST238
 37480 123fa CA01     		.uleb128 0xca
 37481 123fc 0AD50000 		.long	0xd50a
GAS LISTING /tmp/ccJUMvuF.s 			page 964


 37482 12400 00000000 		.quad	.LBB4006
 37482      00000000 
 37483 12408 04000000 		.quad	.LBE4006-.LBB4006
 37483      00000000 
 37484 12410 02       		.byte	0x2
 37485 12411 42       		.byte	0x42
 37486 12412 4B240100 		.long	0x1244b
 37487 12416 BE01     		.uleb128 0xbe
 37488 12418 19D50000 		.long	0xd519
 37489 1241c 00000000 		.long	.LLST239
 37490 12420 B801     		.uleb128 0xb8
 37491 12422 15D40000 		.long	0xd415
 37492 12426 00000000 		.quad	.LBB4007
 37492      00000000 
 37493 1242e 04000000 		.quad	.LBE4007-.LBB4007
 37493      00000000 
 37494 12436 06       		.byte	0x6
 37495 12437 3602     		.value	0x236
 37496 12439 BE01     		.uleb128 0xbe
 37497 1243b 2ED40000 		.long	0xd42e
 37498 1243f 00000000 		.long	.LLST240
 37499 12443 AE01     		.uleb128 0xae
 37500 12445 24D40000 		.long	0xd424
 37501 12449 00       		.byte	0
 37502 1244a 00       		.byte	0
 37503 1244b CA01     		.uleb128 0xca
 37504 1244d B6EE0000 		.long	0xeeb6
 37505 12451 00000000 		.quad	.LBB4009
 37505      00000000 
 37506 12459 04000000 		.quad	.LBE4009-.LBB4009
 37506      00000000 
 37507 12461 02       		.byte	0x2
 37508 12462 42       		.byte	0x42
 37509 12463 9C240100 		.long	0x1249c
 37510 12467 BE01     		.uleb128 0xbe
 37511 12469 C5EE0000 		.long	0xeec5
 37512 1246d 00000000 		.long	.LLST241
 37513 12471 B801     		.uleb128 0xb8
 37514 12473 15D40000 		.long	0xd415
 37515 12477 00000000 		.quad	.LBB4010
 37515      00000000 
 37516 1247f 04000000 		.quad	.LBE4010-.LBB4010
 37516      00000000 
 37517 12487 06       		.byte	0x6
 37518 12488 2402     		.value	0x224
 37519 1248a BE01     		.uleb128 0xbe
 37520 1248c 2ED40000 		.long	0xd42e
 37521 12490 00000000 		.long	.LLST242
 37522 12494 AE01     		.uleb128 0xae
 37523 12496 24D40000 		.long	0xd424
 37524 1249a 00       		.byte	0
 37525 1249b 00       		.byte	0
 37526 1249c CA01     		.uleb128 0xca
 37527 1249e 7BFA0000 		.long	0xfa7b
 37528 124a2 00000000 		.quad	.LBB4012
 37528      00000000 
 37529 124aa 24000000 		.quad	.LBE4012-.LBB4012
GAS LISTING /tmp/ccJUMvuF.s 			page 965


 37529      00000000 
 37530 124b2 02       		.byte	0x2
 37531 124b3 42       		.byte	0x42
 37532 124b4 D7240100 		.long	0x124d7
 37533 124b8 BE01     		.uleb128 0xbe
 37534 124ba B0FA0000 		.long	0xfab0
 37535 124be 00000000 		.long	.LLST243
 37536 124c2 BE01     		.uleb128 0xbe
 37537 124c4 A4FA0000 		.long	0xfaa4
 37538 124c8 00000000 		.long	.LLST244
 37539 124cc BE01     		.uleb128 0xbe
 37540 124ce 98FA0000 		.long	0xfa98
 37541 124d2 00000000 		.long	.LLST245
 37542 124d6 00       		.byte	0
 37543 124d7 CA01     		.uleb128 0xca
 37544 124d9 10CD0000 		.long	0xcd10
 37545 124dd 00000000 		.quad	.LBB4014
 37545      00000000 
 37546 124e5 0D000000 		.quad	.LBE4014-.LBB4014
 37546      00000000 
 37547 124ed 02       		.byte	0x2
 37548 124ee 42       		.byte	0x42
 37549 124ef 08250100 		.long	0x12508
 37550 124f3 BE01     		.uleb128 0xbe
 37551 124f5 1FCD0000 		.long	0xcd1f
 37552 124f9 00000000 		.long	.LLST246
 37553 124fd BE01     		.uleb128 0xbe
 37554 124ff 1FCD0000 		.long	0xcd1f
 37555 12503 00000000 		.long	.LLST246
 37556 12507 00       		.byte	0
 37557 12508 C901     		.uleb128 0xc9
 37558 1250a BDFA0000 		.long	0xfabd
 37559 1250e 00000000 		.quad	.LBB4016
 37559      00000000 
 37560 12516 00000000 		.long	.Ldebug_ranges0+0x1190
 37561 1251a 02       		.byte	0x2
 37562 1251b 45       		.byte	0x45
 37563 1251c C62B0100 		.long	0x12bc6
 37564 12520 BE01     		.uleb128 0xbe
 37565 12522 DEFA0000 		.long	0xfade
 37566 12526 00000000 		.long	.LLST248
 37567 1252a BE01     		.uleb128 0xbe
 37568 1252c D1FA0000 		.long	0xfad1
 37569 12530 00000000 		.long	.LLST249
 37570 12534 CC01     		.uleb128 0xcc
 37571 12536 2FFA0000 		.long	0xfa2f
 37572 1253a 00000000 		.quad	.LBB4017
 37572      00000000 
 37573 12542 00000000 		.long	.Ldebug_ranges0+0x1190
 37574 12546 0D       		.byte	0xd
 37575 12547 4D12     		.value	0x124d
 37576 12549 BE01     		.uleb128 0xbe
 37577 1254b 59FA0000 		.long	0xfa59
 37578 1254f 00000000 		.long	.LLST248
 37579 12553 BE01     		.uleb128 0xbe
 37580 12555 4CFA0000 		.long	0xfa4c
 37581 12559 00000000 		.long	.LLST249
GAS LISTING /tmp/ccJUMvuF.s 			page 966


 37582 1255d C301     		.uleb128 0xc3
 37583 1255f 16FA0000 		.long	0xfa16
 37584 12563 00000000 		.quad	.LBB4019
 37584      00000000 
 37585 1256b 00000000 		.long	.Ldebug_ranges0+0x11e0
 37586 1256f 0D       		.byte	0xd
 37587 12570 B007     		.value	0x7b0
 37588 12572 81250100 		.long	0x12581
 37589 12576 BE01     		.uleb128 0xbe
 37590 12578 21FA0000 		.long	0xfa21
 37591 1257c 00000000 		.long	.LLST252
 37592 12580 00       		.byte	0
 37593 12581 C301     		.uleb128 0xc3
 37594 12583 61F00000 		.long	0xf061
 37595 12587 00000000 		.quad	.LBB4023
 37595      00000000 
 37596 1258f 00000000 		.long	.Ldebug_ranges0+0x1210
 37597 12593 0D       		.byte	0xd
 37598 12594 B207     		.value	0x7b2
 37599 12596 682B0100 		.long	0x12b68
 37600 1259a AE01     		.uleb128 0xae
 37601 1259c 8BF00000 		.long	0xf08b
 37602 125a0 BE01     		.uleb128 0xbe
 37603 125a2 7EF00000 		.long	0xf07e
 37604 125a6 00000000 		.long	.LLST253
 37605 125aa C301     		.uleb128 0xc3
 37606 125ac CF010100 		.long	0x101cf
 37607 125b0 00000000 		.quad	.LBB4025
 37607      00000000 
 37608 125b8 00000000 		.long	.Ldebug_ranges0+0x1250
 37609 125bc 0D       		.byte	0xd
 37610 125bd 5C07     		.value	0x75c
 37611 125bf 2A280100 		.long	0x1282a
 37612 125c3 AE01     		.uleb128 0xae
 37613 125c5 06020100 		.long	0x10206
 37614 125c9 BE01     		.uleb128 0xbe
 37615 125cb F9010100 		.long	0x101f9
 37616 125cf 00000000 		.long	.LLST254
 37617 125d3 BE01     		.uleb128 0xbe
 37618 125d5 EC010100 		.long	0x101ec
 37619 125d9 00000000 		.long	.LLST255
 37620 125dd B601     		.uleb128 0xb6
 37621 125df 00000000 		.long	.Ldebug_ranges0+0x1250
 37622 125e3 BB01     		.uleb128 0xbb
 37623 125e5 15020100 		.long	0x10215
 37624 125e9 00000000 		.long	.LLST256
 37625 125ed C501     		.uleb128 0xc5
 37626 125ef 79E80000 		.long	0xe879
 37627 125f3 00000000 		.quad	.LBB4027
 37627      00000000 
 37628 125fb 07000000 		.quad	.LBE4027-.LBB4027
 37628      00000000 
 37629 12603 0D       		.byte	0xd
 37630 12604 3407     		.value	0x734
 37631 12606 1F260100 		.long	0x1261f
 37632 1260a BE01     		.uleb128 0xbe
 37633 1260c 92E80000 		.long	0xe892
GAS LISTING /tmp/ccJUMvuF.s 			page 967


 37634 12610 00000000 		.long	.LLST257
 37635 12614 BE01     		.uleb128 0xbe
 37636 12616 88E80000 		.long	0xe888
 37637 1261a 00000000 		.long	.LLST258
 37638 1261e 00       		.byte	0
 37639 1261f C501     		.uleb128 0xc5
 37640 12621 82E20000 		.long	0xe282
 37641 12625 00000000 		.quad	.LBB4030
 37641      00000000 
 37642 1262d 05000000 		.quad	.LBE4030-.LBB4030
 37642      00000000 
 37643 12635 0D       		.byte	0xd
 37644 12636 3607     		.value	0x736
 37645 12638 53260100 		.long	0x12653
 37646 1263c BE01     		.uleb128 0xbe
 37647 1263e A3E20000 		.long	0xe2a3
 37648 12642 00000000 		.long	.LLST259
 37649 12646 AE01     		.uleb128 0xae
 37650 12648 B9E20000 		.long	0xe2b9
 37651 1264c AE01     		.uleb128 0xae
 37652 1264e ADE20000 		.long	0xe2ad
 37653 12652 00       		.byte	0
 37654 12653 C301     		.uleb128 0xc3
 37655 12655 09E50000 		.long	0xe509
 37656 12659 00000000 		.quad	.LBB4032
 37656      00000000 
 37657 12661 00000000 		.long	.Ldebug_ranges0+0x1290
 37658 12665 0D       		.byte	0xd
 37659 12666 3E07     		.value	0x73e
 37660 12668 E2260100 		.long	0x126e2
 37661 1266c BE01     		.uleb128 0xbe
 37662 1266e 26E50000 		.long	0xe526
 37663 12672 00000000 		.long	.LLST260
 37664 12676 B601     		.uleb128 0xb6
 37665 12678 00000000 		.long	.Ldebug_ranges0+0x1290
 37666 1267c BB01     		.uleb128 0xbb
 37667 1267e 42E50000 		.long	0xe542
 37668 12682 00000000 		.long	.LLST261
 37669 12686 BA01     		.uleb128 0xba
 37670 12688 4FE50000 		.long	0xe54f
 37671 1268c C301     		.uleb128 0xc3
 37672 1268e 74E40000 		.long	0xe474
 37673 12692 00000000 		.quad	.LBB4034
 37673      00000000 
 37674 1269a 00000000 		.long	.Ldebug_ranges0+0x12c0
 37675 1269e 0D       		.byte	0xd
 37676 1269f 2307     		.value	0x723
 37677 126a1 BC260100 		.long	0x126bc
 37678 126a5 AE01     		.uleb128 0xae
 37679 126a7 95E40000 		.long	0xe495
 37680 126ab BE01     		.uleb128 0xbe
 37681 126ad 9FE40000 		.long	0xe49f
 37682 126b1 00000000 		.long	.LLST262
 37683 126b5 AE01     		.uleb128 0xae
 37684 126b7 ABE40000 		.long	0xe4ab
 37685 126bb 00       		.byte	0
 37686 126bc B801     		.uleb128 0xb8
GAS LISTING /tmp/ccJUMvuF.s 			page 968


 37687 126be EFE40000 		.long	0xe4ef
 37688 126c2 00000000 		.quad	.LBB4037
 37688      00000000 
 37689 126ca 04000000 		.quad	.LBE4037-.LBB4037
 37689      00000000 
 37690 126d2 0D       		.byte	0xd
 37691 126d3 2707     		.value	0x727
 37692 126d5 BE01     		.uleb128 0xbe
 37693 126d7 FEE40000 		.long	0xe4fe
 37694 126db 00000000 		.long	.LLST263
 37695 126df 00       		.byte	0
 37696 126e0 00       		.byte	0
 37697 126e1 00       		.byte	0
 37698 126e2 B901     		.uleb128 0xb9
 37699 126e4 00000000 		.quad	.LBB4041
 37699      00000000 
 37700 126ec 3B000000 		.quad	.LBE4041-.LBB4041
 37700      00000000 
 37701 126f4 BB01     		.uleb128 0xbb
 37702 126f6 24020100 		.long	0x10224
 37703 126fa 00000000 		.long	.LLST264
 37704 126fe B801     		.uleb128 0xb8
 37705 12700 1CF00000 		.long	0xf01c
 37706 12704 00000000 		.quad	.LBB4042
 37706      00000000 
 37707 1270c 31000000 		.quad	.LBE4042-.LBB4042
 37707      00000000 
 37708 12714 0D       		.byte	0xd
 37709 12715 3A07     		.value	0x73a
 37710 12717 AE01     		.uleb128 0xae
 37711 12719 53F00000 		.long	0xf053
 37712 1271d AE01     		.uleb128 0xae
 37713 1271f 46F00000 		.long	0xf046
 37714 12723 AE01     		.uleb128 0xae
 37715 12725 39F00000 		.long	0xf039
 37716 12729 B801     		.uleb128 0xb8
 37717 1272b 8BEF0000 		.long	0xef8b
 37718 1272f 00000000 		.quad	.LBB4043
 37718      00000000 
 37719 12737 31000000 		.quad	.LBE4043-.LBB4043
 37719      00000000 
 37720 1273f 14       		.byte	0x14
 37721 12740 A602     		.value	0x2a6
 37722 12742 AE01     		.uleb128 0xae
 37723 12744 CCEF0000 		.long	0xefcc
 37724 12748 AE01     		.uleb128 0xae
 37725 1274a BFEF0000 		.long	0xefbf
 37726 1274e AE01     		.uleb128 0xae
 37727 12750 B2EF0000 		.long	0xefb2
 37728 12754 B801     		.uleb128 0xb8
 37729 12756 0AEF0000 		.long	0xef0a
 37730 1275a 00000000 		.quad	.LBB4044
 37730      00000000 
 37731 12762 31000000 		.quad	.LBE4044-.LBB4044
 37731      00000000 
 37732 1276a 14       		.byte	0x14
 37733 1276b 5F02     		.value	0x25f
GAS LISTING /tmp/ccJUMvuF.s 			page 969


 37734 1276d BE01     		.uleb128 0xbe
 37735 1276f 4BEF0000 		.long	0xef4b
 37736 12773 00000000 		.long	.LLST265
 37737 12777 BE01     		.uleb128 0xbe
 37738 12779 3EEF0000 		.long	0xef3e
 37739 1277d 00000000 		.long	.LLST266
 37740 12781 BE01     		.uleb128 0xbe
 37741 12783 31EF0000 		.long	0xef31
 37742 12787 00000000 		.long	.LLST267
 37743 1278b B901     		.uleb128 0xb9
 37744 1278d 00000000 		.quad	.LBB4045
 37744      00000000 
 37745 12795 31000000 		.quad	.LBE4045-.LBB4045
 37745      00000000 
 37746 1279d BB01     		.uleb128 0xbb
 37747 1279f 5AEF0000 		.long	0xef5a
 37748 127a3 00000000 		.long	.LLST268
 37749 127a7 B801     		.uleb128 0xb8
 37750 127a9 34020100 		.long	0x10234
 37751 127ad 00000000 		.quad	.LBB4046
 37751      00000000 
 37752 127b5 31000000 		.quad	.LBE4046-.LBB4046
 37752      00000000 
 37753 127bd 14       		.byte	0x14
 37754 127be 5602     		.value	0x256
 37755 127c0 BE01     		.uleb128 0xbe
 37756 127c2 62020100 		.long	0x10262
 37757 127c6 00000000 		.long	.LLST265
 37758 127ca BE01     		.uleb128 0xbe
 37759 127cc 55020100 		.long	0x10255
 37760 127d0 00000000 		.long	.LLST266
 37761 127d4 BE01     		.uleb128 0xbe
 37762 127d6 48020100 		.long	0x10248
 37763 127da 00000000 		.long	.LLST267
 37764 127de B901     		.uleb128 0xb9
 37765 127e0 00000000 		.quad	.LBB4047
 37765      00000000 
 37766 127e8 31000000 		.quad	.LBE4047-.LBB4047
 37766      00000000 
 37767 127f0 BB01     		.uleb128 0xbb
 37768 127f2 71020100 		.long	0x10271
 37769 127f6 00000000 		.long	.LLST272
 37770 127fa C101     		.uleb128 0xc1
 37771 127fc 00000000 		.quad	.LVL329
 37771      00000000 
 37772 12804 166C0100 		.long	0x16c16
 37773 12808 C201     		.uleb128 0xc2
 37774 1280a 01       		.uleb128 0x1
 37775 1280b 55       		.byte	0x55
 37776 1280c 02       		.uleb128 0x2
 37777 1280d 7E       		.byte	0x7e
 37778 1280e 08       		.sleb128 8
 37779 1280f C201     		.uleb128 0xc2
 37780 12811 01       		.uleb128 0x1
 37781 12812 54       		.byte	0x54
 37782 12813 02       		.uleb128 0x2
 37783 12814 7E       		.byte	0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 970


 37784 12815 00       		.sleb128 0
 37785 12816 C201     		.uleb128 0xc2
 37786 12818 01       		.uleb128 0x1
 37787 12819 51       		.byte	0x51
 37788 1281a 05       		.uleb128 0x5
 37789 1281b 7F       		.byte	0x7f
 37790 1281c 00       		.sleb128 0
 37791 1281d 7E       		.byte	0x7e
 37792 1281e 00       		.sleb128 0
 37793 1281f 1C       		.byte	0x1c
 37794 12820 00       		.byte	0
 37795 12821 00       		.byte	0
 37796 12822 00       		.byte	0
 37797 12823 00       		.byte	0
 37798 12824 00       		.byte	0
 37799 12825 00       		.byte	0
 37800 12826 00       		.byte	0
 37801 12827 00       		.byte	0
 37802 12828 00       		.byte	0
 37803 12829 00       		.byte	0
 37804 1282a C301     		.uleb128 0xc3
 37805 1282c 5EE50000 		.long	0xe55e
 37806 12830 00000000 		.quad	.LBB4053
 37806      00000000 
 37807 12838 00000000 		.long	.Ldebug_ranges0+0x12f0
 37808 1283c 0D       		.byte	0xd
 37809 1283d 5D07     		.value	0x75d
 37810 1283f E8280100 		.long	0x128e8
 37811 12843 AE01     		.uleb128 0xae
 37812 12845 88E50000 		.long	0xe588
 37813 12849 AE01     		.uleb128 0xae
 37814 1284b 7BE50000 		.long	0xe57b
 37815 1284f B601     		.uleb128 0xb6
 37816 12851 00000000 		.long	.Ldebug_ranges0+0x12f0
 37817 12855 BA01     		.uleb128 0xba
 37818 12857 A4E50000 		.long	0xe5a4
 37819 1285b CC01     		.uleb128 0xcc
 37820 1285d 09E50000 		.long	0xe509
 37821 12861 00000000 		.quad	.LBB4055
 37821      00000000 
 37822 12869 00000000 		.long	.Ldebug_ranges0+0x1320
 37823 1286d 0D       		.byte	0xd
 37824 1286e 4A07     		.value	0x74a
 37825 12870 BE01     		.uleb128 0xbe
 37826 12872 26E50000 		.long	0xe526
 37827 12876 00000000 		.long	.LLST273
 37828 1287a B601     		.uleb128 0xb6
 37829 1287c 00000000 		.long	.Ldebug_ranges0+0x1320
 37830 12880 BB01     		.uleb128 0xbb
 37831 12882 42E50000 		.long	0xe542
 37832 12886 00000000 		.long	.LLST274
 37833 1288a BA01     		.uleb128 0xba
 37834 1288c 4FE50000 		.long	0xe54f
 37835 12890 C301     		.uleb128 0xc3
 37836 12892 74E40000 		.long	0xe474
 37837 12896 00000000 		.quad	.LBB4057
 37837      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 971


 37838 1289e 00000000 		.long	.Ldebug_ranges0+0x1360
 37839 128a2 0D       		.byte	0xd
 37840 128a3 2307     		.value	0x723
 37841 128a5 C0280100 		.long	0x128c0
 37842 128a9 AE01     		.uleb128 0xae
 37843 128ab 95E40000 		.long	0xe495
 37844 128af BE01     		.uleb128 0xbe
 37845 128b1 9FE40000 		.long	0xe49f
 37846 128b5 00000000 		.long	.LLST275
 37847 128b9 AE01     		.uleb128 0xae
 37848 128bb ABE40000 		.long	0xe4ab
 37849 128bf 00       		.byte	0
 37850 128c0 B801     		.uleb128 0xb8
 37851 128c2 EFE40000 		.long	0xe4ef
 37852 128c6 00000000 		.quad	.LBB4060
 37852      00000000 
 37853 128ce 04000000 		.quad	.LBE4060-.LBB4060
 37853      00000000 
 37854 128d6 0D       		.byte	0xd
 37855 128d7 2707     		.value	0x727
 37856 128d9 BE01     		.uleb128 0xbe
 37857 128db FEE40000 		.long	0xe4fe
 37858 128df 00000000 		.long	.LLST276
 37859 128e3 00       		.byte	0
 37860 128e4 00       		.byte	0
 37861 128e5 00       		.byte	0
 37862 128e6 00       		.byte	0
 37863 128e7 00       		.byte	0
 37864 128e8 CC01     		.uleb128 0xcc
 37865 128ea CF010100 		.long	0x101cf
 37866 128ee 00000000 		.quad	.LBB4068
 37866      00000000 
 37867 128f6 00000000 		.long	.Ldebug_ranges0+0x1390
 37868 128fa 0D       		.byte	0xd
 37869 128fb 6107     		.value	0x761
 37870 128fd AE01     		.uleb128 0xae
 37871 128ff 06020100 		.long	0x10206
 37872 12903 BE01     		.uleb128 0xbe
 37873 12905 F9010100 		.long	0x101f9
 37874 12909 00000000 		.long	.LLST277
 37875 1290d BE01     		.uleb128 0xbe
 37876 1290f EC010100 		.long	0x101ec
 37877 12913 00000000 		.long	.LLST278
 37878 12917 B601     		.uleb128 0xb6
 37879 12919 00000000 		.long	.Ldebug_ranges0+0x1390
 37880 1291d BB01     		.uleb128 0xbb
 37881 1291f 15020100 		.long	0x10215
 37882 12923 00000000 		.long	.LLST279
 37883 12927 C501     		.uleb128 0xc5
 37884 12929 79E80000 		.long	0xe879
 37885 1292d 00000000 		.quad	.LBB4070
 37885      00000000 
 37886 12935 09000000 		.quad	.LBE4070-.LBB4070
 37886      00000000 
 37887 1293d 0D       		.byte	0xd
 37888 1293e 3407     		.value	0x734
 37889 12940 59290100 		.long	0x12959
GAS LISTING /tmp/ccJUMvuF.s 			page 972


 37890 12944 BE01     		.uleb128 0xbe
 37891 12946 92E80000 		.long	0xe892
 37892 1294a 00000000 		.long	.LLST280
 37893 1294e BE01     		.uleb128 0xbe
 37894 12950 88E80000 		.long	0xe888
 37895 12954 00000000 		.long	.LLST281
 37896 12958 00       		.byte	0
 37897 12959 C501     		.uleb128 0xc5
 37898 1295b 82E20000 		.long	0xe282
 37899 1295f 00000000 		.quad	.LBB4073
 37899      00000000 
 37900 12967 06000000 		.quad	.LBE4073-.LBB4073
 37900      00000000 
 37901 1296f 0D       		.byte	0xd
 37902 12970 3607     		.value	0x736
 37903 12972 8D290100 		.long	0x1298d
 37904 12976 BE01     		.uleb128 0xbe
 37905 12978 A3E20000 		.long	0xe2a3
 37906 1297c 00000000 		.long	.LLST282
 37907 12980 AE01     		.uleb128 0xae
 37908 12982 B9E20000 		.long	0xe2b9
 37909 12986 AE01     		.uleb128 0xae
 37910 12988 ADE20000 		.long	0xe2ad
 37911 1298c 00       		.byte	0
 37912 1298d C301     		.uleb128 0xc3
 37913 1298f 09E50000 		.long	0xe509
 37914 12993 00000000 		.quad	.LBB4075
 37914      00000000 
 37915 1299b 00000000 		.long	.Ldebug_ranges0+0x13c0
 37916 1299f 0D       		.byte	0xd
 37917 129a0 3E07     		.value	0x73e
 37918 129a2 1C2A0100 		.long	0x12a1c
 37919 129a6 BE01     		.uleb128 0xbe
 37920 129a8 26E50000 		.long	0xe526
 37921 129ac 00000000 		.long	.LLST283
 37922 129b0 B601     		.uleb128 0xb6
 37923 129b2 00000000 		.long	.Ldebug_ranges0+0x13c0
 37924 129b6 BB01     		.uleb128 0xbb
 37925 129b8 42E50000 		.long	0xe542
 37926 129bc 00000000 		.long	.LLST284
 37927 129c0 BA01     		.uleb128 0xba
 37928 129c2 4FE50000 		.long	0xe54f
 37929 129c6 C301     		.uleb128 0xc3
 37930 129c8 74E40000 		.long	0xe474
 37931 129cc 00000000 		.quad	.LBB4077
 37931      00000000 
 37932 129d4 00000000 		.long	.Ldebug_ranges0+0x13f0
 37933 129d8 0D       		.byte	0xd
 37934 129d9 2307     		.value	0x723
 37935 129db F6290100 		.long	0x129f6
 37936 129df AE01     		.uleb128 0xae
 37937 129e1 95E40000 		.long	0xe495
 37938 129e5 BE01     		.uleb128 0xbe
 37939 129e7 9FE40000 		.long	0xe49f
 37940 129eb 00000000 		.long	.LLST285
 37941 129ef AE01     		.uleb128 0xae
 37942 129f1 ABE40000 		.long	0xe4ab
GAS LISTING /tmp/ccJUMvuF.s 			page 973


 37943 129f5 00       		.byte	0
 37944 129f6 B801     		.uleb128 0xb8
 37945 129f8 EFE40000 		.long	0xe4ef
 37946 129fc 00000000 		.quad	.LBB4080
 37946      00000000 
 37947 12a04 04000000 		.quad	.LBE4080-.LBB4080
 37947      00000000 
 37948 12a0c 0D       		.byte	0xd
 37949 12a0d 2707     		.value	0x727
 37950 12a0f BE01     		.uleb128 0xbe
 37951 12a11 FEE40000 		.long	0xe4fe
 37952 12a15 00000000 		.long	.LLST286
 37953 12a19 00       		.byte	0
 37954 12a1a 00       		.byte	0
 37955 12a1b 00       		.byte	0
 37956 12a1c B901     		.uleb128 0xb9
 37957 12a1e 00000000 		.quad	.LBB4084
 37957      00000000 
 37958 12a26 40000000 		.quad	.LBE4084-.LBB4084
 37958      00000000 
 37959 12a2e BB01     		.uleb128 0xbb
 37960 12a30 24020100 		.long	0x10224
 37961 12a34 00000000 		.long	.LLST287
 37962 12a38 B801     		.uleb128 0xb8
 37963 12a3a 1CF00000 		.long	0xf01c
 37964 12a3e 00000000 		.quad	.LBB4085
 37964      00000000 
 37965 12a46 2F000000 		.quad	.LBE4085-.LBB4085
 37965      00000000 
 37966 12a4e 0D       		.byte	0xd
 37967 12a4f 3A07     		.value	0x73a
 37968 12a51 AE01     		.uleb128 0xae
 37969 12a53 53F00000 		.long	0xf053
 37970 12a57 AE01     		.uleb128 0xae
 37971 12a59 46F00000 		.long	0xf046
 37972 12a5d AE01     		.uleb128 0xae
 37973 12a5f 39F00000 		.long	0xf039
 37974 12a63 B801     		.uleb128 0xb8
 37975 12a65 8BEF0000 		.long	0xef8b
 37976 12a69 00000000 		.quad	.LBB4086
 37976      00000000 
 37977 12a71 2F000000 		.quad	.LBE4086-.LBB4086
 37977      00000000 
 37978 12a79 14       		.byte	0x14
 37979 12a7a A602     		.value	0x2a6
 37980 12a7c AE01     		.uleb128 0xae
 37981 12a7e CCEF0000 		.long	0xefcc
 37982 12a82 AE01     		.uleb128 0xae
 37983 12a84 BFEF0000 		.long	0xefbf
 37984 12a88 AE01     		.uleb128 0xae
 37985 12a8a B2EF0000 		.long	0xefb2
 37986 12a8e B801     		.uleb128 0xb8
 37987 12a90 0AEF0000 		.long	0xef0a
 37988 12a94 00000000 		.quad	.LBB4087
 37988      00000000 
 37989 12a9c 2F000000 		.quad	.LBE4087-.LBB4087
 37989      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 974


 37990 12aa4 14       		.byte	0x14
 37991 12aa5 5F02     		.value	0x25f
 37992 12aa7 BE01     		.uleb128 0xbe
 37993 12aa9 4BEF0000 		.long	0xef4b
 37994 12aad 00000000 		.long	.LLST288
 37995 12ab1 BE01     		.uleb128 0xbe
 37996 12ab3 3EEF0000 		.long	0xef3e
 37997 12ab7 00000000 		.long	.LLST289
 37998 12abb BE01     		.uleb128 0xbe
 37999 12abd 31EF0000 		.long	0xef31
 38000 12ac1 00000000 		.long	.LLST290
 38001 12ac5 B901     		.uleb128 0xb9
 38002 12ac7 00000000 		.quad	.LBB4088
 38002      00000000 
 38003 12acf 2F000000 		.quad	.LBE4088-.LBB4088
 38003      00000000 
 38004 12ad7 BB01     		.uleb128 0xbb
 38005 12ad9 5AEF0000 		.long	0xef5a
 38006 12add 00000000 		.long	.LLST291
 38007 12ae1 B801     		.uleb128 0xb8
 38008 12ae3 34020100 		.long	0x10234
 38009 12ae7 00000000 		.quad	.LBB4089
 38009      00000000 
 38010 12aef 2F000000 		.quad	.LBE4089-.LBB4089
 38010      00000000 
 38011 12af7 14       		.byte	0x14
 38012 12af8 5602     		.value	0x256
 38013 12afa BE01     		.uleb128 0xbe
 38014 12afc 62020100 		.long	0x10262
 38015 12b00 00000000 		.long	.LLST288
 38016 12b04 BE01     		.uleb128 0xbe
 38017 12b06 55020100 		.long	0x10255
 38018 12b0a 00000000 		.long	.LLST289
 38019 12b0e BE01     		.uleb128 0xbe
 38020 12b10 48020100 		.long	0x10248
 38021 12b14 00000000 		.long	.LLST290
 38022 12b18 B901     		.uleb128 0xb9
 38023 12b1a 00000000 		.quad	.LBB4090
 38023      00000000 
 38024 12b22 2F000000 		.quad	.LBE4090-.LBB4090
 38024      00000000 
 38025 12b2a BB01     		.uleb128 0xbb
 38026 12b2c 71020100 		.long	0x10271
 38027 12b30 00000000 		.long	.LLST295
 38028 12b34 C101     		.uleb128 0xc1
 38029 12b36 00000000 		.quad	.LVL325
 38029      00000000 
 38030 12b3e 166C0100 		.long	0x16c16
 38031 12b42 C201     		.uleb128 0xc2
 38032 12b44 01       		.uleb128 0x1
 38033 12b45 55       		.byte	0x55
 38034 12b46 05       		.uleb128 0x5
 38035 12b47 7E       		.byte	0x7e
 38036 12b48 00       		.sleb128 0
 38037 12b49 76       		.byte	0x76
 38038 12b4a 00       		.sleb128 0
 38039 12b4b 22       		.byte	0x22
GAS LISTING /tmp/ccJUMvuF.s 			page 975


 38040 12b4c C201     		.uleb128 0xc2
 38041 12b4e 01       		.uleb128 0x1
 38042 12b4f 54       		.byte	0x54
 38043 12b50 02       		.uleb128 0x2
 38044 12b51 7E       		.byte	0x7e
 38045 12b52 00       		.sleb128 0
 38046 12b53 C201     		.uleb128 0xc2
 38047 12b55 01       		.uleb128 0x1
 38048 12b56 51       		.byte	0x51
 38049 12b57 05       		.uleb128 0x5
 38050 12b58 7D       		.byte	0x7d
 38051 12b59 00       		.sleb128 0
 38052 12b5a 7E       		.byte	0x7e
 38053 12b5b 00       		.sleb128 0
 38054 12b5c 1C       		.byte	0x1c
 38055 12b5d 00       		.byte	0
 38056 12b5e 00       		.byte	0
 38057 12b5f 00       		.byte	0
 38058 12b60 00       		.byte	0
 38059 12b61 00       		.byte	0
 38060 12b62 00       		.byte	0
 38061 12b63 00       		.byte	0
 38062 12b64 00       		.byte	0
 38063 12b65 00       		.byte	0
 38064 12b66 00       		.byte	0
 38065 12b67 00       		.byte	0
 38066 12b68 C101     		.uleb128 0xc1
 38067 12b6a 00000000 		.quad	.LVL249
 38067      00000000 
 38068 12b72 041E0100 		.long	0x11e04
 38069 12b76 C201     		.uleb128 0xc2
 38070 12b78 01       		.uleb128 0x1
 38071 12b79 55       		.byte	0x55
 38072 12b7a 02       		.uleb128 0x2
 38073 12b7b 7E       		.byte	0x7e
 38074 12b7c 00       		.sleb128 0
 38075 12b7d C201     		.uleb128 0xc2
 38076 12b7f 01       		.uleb128 0x1
 38077 12b80 54       		.byte	0x54
 38078 12b81 02       		.uleb128 0x2
 38079 12b82 7C       		.byte	0x7c
 38080 12b83 00       		.sleb128 0
 38081 12b84 C201     		.uleb128 0xc2
 38082 12b86 01       		.uleb128 0x1
 38083 12b87 51       		.byte	0x51
 38084 12b88 3A       		.uleb128 0x3a
 38085 12b89 08       		.byte	0x8
 38086 12b8a 3F       		.byte	0x3f
 38087 12b8b 08       		.byte	0x8
 38088 12b8c 3F       		.byte	0x3f
 38089 12b8d 76       		.byte	0x76
 38090 12b8e 00       		.sleb128 0
 38091 12b8f 33       		.byte	0x33
 38092 12b90 26       		.byte	0x26
 38093 12b91 12       		.byte	0x12
 38094 12b92 28       		.byte	0x28
 38095 12b93 0600     		.value	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 976


 38096 12b95 13       		.byte	0x13
 38097 12b96 08       		.byte	0x8
 38098 12b97 40       		.byte	0x40
 38099 12b98 2F       		.byte	0x2f
 38100 12b99 1A00     		.value	0x1a
 38101 12b9b 30       		.byte	0x30
 38102 12b9c 16       		.byte	0x16
 38103 12b9d 12       		.byte	0x12
 38104 12b9e 0E       		.byte	0xe
 38105 12b9f 00000000 		.quad	0x8000000000000000
 38105      00000080 
 38106 12ba7 1A       		.byte	0x1a
 38107 12ba8 28       		.byte	0x28
 38108 12ba9 0900     		.value	0x9
 38109 12bab 31       		.byte	0x31
 38110 12bac 24       		.byte	0x24
 38111 12bad 16       		.byte	0x16
 38112 12bae 23       		.byte	0x23
 38113 12baf 01       		.uleb128 0x1
 38114 12bb0 16       		.byte	0x16
 38115 12bb1 2F       		.byte	0x2f
 38116 12bb2 E9FF     		.value	0xffe9
 38117 12bb4 13       		.byte	0x13
 38118 12bb5 96       		.byte	0x96
 38119 12bb6 1C       		.byte	0x1c
 38120 12bb7 08       		.byte	0x8
 38121 12bb8 3F       		.byte	0x3f
 38122 12bb9 27       		.byte	0x27
 38123 12bba 08       		.byte	0x8
 38124 12bbb 20       		.byte	0x20
 38125 12bbc 24       		.byte	0x24
 38126 12bbd 08       		.byte	0x8
 38127 12bbe 20       		.byte	0x20
 38128 12bbf 26       		.byte	0x26
 38129 12bc0 1C       		.byte	0x1c
 38130 12bc1 31       		.byte	0x31
 38131 12bc2 24       		.byte	0x24
 38132 12bc3 00       		.byte	0
 38133 12bc4 00       		.byte	0
 38134 12bc5 00       		.byte	0
 38135 12bc6 C901     		.uleb128 0xc9
 38136 12bc8 20CB0000 		.long	0xcb20
 38137 12bcc 00000000 		.quad	.LBB4110
 38137      00000000 
 38138 12bd4 00000000 		.long	.Ldebug_ranges0+0x1420
 38139 12bd8 02       		.byte	0x2
 38140 12bd9 47       		.byte	0x47
 38141 12bda 192C0100 		.long	0x12c19
 38142 12bde AE01     		.uleb128 0xae
 38143 12be0 34CB0000 		.long	0xcb34
 38144 12be4 BE01     		.uleb128 0xbe
 38145 12be6 41CB0000 		.long	0xcb41
 38146 12bea 00000000 		.long	.LLST296
 38147 12bee C101     		.uleb128 0xc1
 38148 12bf0 00000000 		.quad	.LVL278
 38148      00000000 
 38149 12bf8 B5920000 		.long	0x92b5
GAS LISTING /tmp/ccJUMvuF.s 			page 977


 38150 12bfc C201     		.uleb128 0xc2
 38151 12bfe 01       		.uleb128 0x1
 38152 12bff 55       		.byte	0x55
 38153 12c00 02       		.uleb128 0x2
 38154 12c01 76       		.byte	0x76
 38155 12c02 00       		.sleb128 0
 38156 12c03 C201     		.uleb128 0xc2
 38157 12c05 01       		.uleb128 0x1
 38158 12c06 54       		.byte	0x54
 38159 12c07 09       		.uleb128 0x9
 38160 12c08 03       		.byte	0x3
 38161 12c09 00000000 		.quad	.LC14
 38161      00000000 
 38162 12c11 C201     		.uleb128 0xc2
 38163 12c13 01       		.uleb128 0x1
 38164 12c14 51       		.byte	0x51
 38165 12c15 01       		.uleb128 0x1
 38166 12c16 44       		.byte	0x44
 38167 12c17 00       		.byte	0
 38168 12c18 00       		.byte	0
 38169 12c19 C901     		.uleb128 0xc9
 38170 12c1b 02FB0000 		.long	0xfb02
 38171 12c1f 00000000 		.quad	.LBB4118
 38171      00000000 
 38172 12c27 00000000 		.long	.Ldebug_ranges0+0x1470
 38173 12c2b 02       		.byte	0x2
 38174 12c2c 47       		.byte	0x47
 38175 12c2d 702D0100 		.long	0x12d70
 38176 12c31 AE01     		.uleb128 0xae
 38177 12c33 1BFB0000 		.long	0xfb1b
 38178 12c37 AE01     		.uleb128 0xae
 38179 12c39 11FB0000 		.long	0xfb11
 38180 12c3d CE01     		.uleb128 0xce
 38181 12c3f 80020100 		.long	0x10280
 38182 12c43 00000000 		.quad	.LBB4120
 38182      00000000 
 38183 12c4b 0E000000 		.quad	.LBE4120-.LBB4120
 38183      00000000 
 38184 12c53 09       		.byte	0x9
 38185 12c54 84       		.byte	0x84
 38186 12c55 BE01     		.uleb128 0xbe
 38187 12c57 8B020100 		.long	0x1028b
 38188 12c5b 00000000 		.long	.LLST297
 38189 12c5f B801     		.uleb128 0xb8
 38190 12c61 D0CB0000 		.long	0xcbd0
 38191 12c65 00000000 		.quad	.LBB4121
 38191      00000000 
 38192 12c6d 0E000000 		.quad	.LBE4121-.LBB4121
 38192      00000000 
 38193 12c75 15       		.byte	0x15
 38194 12c76 C003     		.value	0x3c0
 38195 12c78 BE01     		.uleb128 0xbe
 38196 12c7a F6CB0000 		.long	0xcbf6
 38197 12c7e 00000000 		.long	.LLST298
 38198 12c82 BE01     		.uleb128 0xbe
 38199 12c84 E9CB0000 		.long	0xcbe9
 38200 12c88 00000000 		.long	.LLST299
GAS LISTING /tmp/ccJUMvuF.s 			page 978


 38201 12c8c BE01     		.uleb128 0xbe
 38202 12c8e DFCB0000 		.long	0xcbdf
 38203 12c92 00000000 		.long	.LLST297
 38204 12c96 B901     		.uleb128 0xb9
 38205 12c98 00000000 		.quad	.LBB4122
 38205      00000000 
 38206 12ca0 0E000000 		.quad	.LBE4122-.LBB4122
 38206      00000000 
 38207 12ca8 BB01     		.uleb128 0xbb
 38208 12caa 05CC0000 		.long	0xcc05
 38209 12cae 00000000 		.long	.LLST301
 38210 12cb2 C501     		.uleb128 0xc5
 38211 12cb4 78CB0000 		.long	0xcb78
 38212 12cb8 00000000 		.quad	.LBB4123
 38212      00000000 
 38213 12cc0 08000000 		.quad	.LBE4123-.LBB4123
 38213      00000000 
 38214 12cc8 15       		.byte	0x15
 38215 12cc9 5602     		.value	0x256
 38216 12ccb 112D0100 		.long	0x12d11
 38217 12ccf BE01     		.uleb128 0xbe
 38218 12cd1 8FCB0000 		.long	0xcb8f
 38219 12cd5 00000000 		.long	.LLST302
 38220 12cd9 BE01     		.uleb128 0xbe
 38221 12cdb 83CB0000 		.long	0xcb83
 38222 12cdf 00000000 		.long	.LLST303
 38223 12ce3 CE01     		.uleb128 0xce
 38224 12ce5 8ECA0000 		.long	0xca8e
 38225 12ce9 00000000 		.quad	.LBB4124
 38225      00000000 
 38226 12cf1 08000000 		.quad	.LBE4124-.LBB4124
 38226      00000000 
 38227 12cf9 15       		.byte	0x15
 38228 12cfa 60       		.byte	0x60
 38229 12cfb BE01     		.uleb128 0xbe
 38230 12cfd A5CA0000 		.long	0xcaa5
 38231 12d01 00000000 		.long	.LLST302
 38232 12d05 BE01     		.uleb128 0xbe
 38233 12d07 99CA0000 		.long	0xca99
 38234 12d0b 00000000 		.long	.LLST301
 38235 12d0f 00       		.byte	0
 38236 12d10 00       		.byte	0
 38237 12d11 B801     		.uleb128 0xb8
 38238 12d13 A1CB0000 		.long	0xcba1
 38239 12d17 00000000 		.quad	.LBB4126
 38239      00000000 
 38240 12d1f 06000000 		.quad	.LBE4126-.LBB4126
 38240      00000000 
 38241 12d27 15       		.byte	0x15
 38242 12d28 5702     		.value	0x257
 38243 12d2a BE01     		.uleb128 0xbe
 38244 12d2c B8CB0000 		.long	0xcbb8
 38245 12d30 00000000 		.long	.LLST299
 38246 12d34 BE01     		.uleb128 0xbe
 38247 12d36 ACCB0000 		.long	0xcbac
 38248 12d3a 00000000 		.long	.LLST303
 38249 12d3e CE01     		.uleb128 0xce
GAS LISTING /tmp/ccJUMvuF.s 			page 979


 38250 12d40 6ACA0000 		.long	0xca6a
 38251 12d44 00000000 		.quad	.LBB4128
 38251      00000000 
 38252 12d4c 06000000 		.quad	.LBE4128-.LBB4128
 38252      00000000 
 38253 12d54 15       		.byte	0x15
 38254 12d55 5C       		.byte	0x5c
 38255 12d56 BE01     		.uleb128 0xbe
 38256 12d58 81CA0000 		.long	0xca81
 38257 12d5c 00000000 		.long	.LLST299
 38258 12d60 BE01     		.uleb128 0xbe
 38259 12d62 75CA0000 		.long	0xca75
 38260 12d66 00000000 		.long	.LLST309
 38261 12d6a 00       		.byte	0
 38262 12d6b 00       		.byte	0
 38263 12d6c 00       		.byte	0
 38264 12d6d 00       		.byte	0
 38265 12d6e 00       		.byte	0
 38266 12d6f 00       		.byte	0
 38267 12d70 C901     		.uleb128 0xc9
 38268 12d72 57CC0000 		.long	0xcc57
 38269 12d76 00000000 		.quad	.LBB4132
 38269      00000000 
 38270 12d7e 00000000 		.long	.Ldebug_ranges0+0x14b0
 38271 12d82 02       		.byte	0x2
 38272 12d83 47       		.byte	0x47
 38273 12d84 C62D0100 		.long	0x12dc6
 38274 12d88 BE01     		.uleb128 0xbe
 38275 12d8a 70CC0000 		.long	0xcc70
 38276 12d8e 00000000 		.long	.LLST310
 38277 12d92 AE01     		.uleb128 0xae
 38278 12d94 66CC0000 		.long	0xcc66
 38279 12d98 C101     		.uleb128 0xc1
 38280 12d9a 00000000 		.quad	.LVL283
 38280      00000000 
 38281 12da2 94290000 		.long	0x2994
 38282 12da6 C201     		.uleb128 0xc2
 38283 12da8 01       		.uleb128 0x1
 38284 12da9 55       		.byte	0x55
 38285 12daa 02       		.uleb128 0x2
 38286 12dab 76       		.byte	0x76
 38287 12dac 00       		.sleb128 0
 38288 12dad C201     		.uleb128 0xc2
 38289 12daf 01       		.uleb128 0x1
 38290 12db0 61       		.byte	0x61
 38291 12db1 12       		.uleb128 0x12
 38292 12db2 91       		.byte	0x91
 38293 12db3 B87F     		.sleb128 -72
 38294 12db5 F6       		.byte	0xf6
 38295 12db6 08       		.byte	0x8
 38296 12db7 29       		.uleb128 0x29
 38297 12db8 F4       		.byte	0xf4
 38298 12db9 29       		.uleb128 0x29
 38299 12dba 08       		.byte	0x8
 38300 12dbb 00000000 		.long	0
 38301 12dbf 00408F40 		.long	0x408f4000
 38302 12dc3 1E       		.byte	0x1e
GAS LISTING /tmp/ccJUMvuF.s 			page 980


 38303 12dc4 00       		.byte	0
 38304 12dc5 00       		.byte	0
 38305 12dc6 C901     		.uleb128 0xc9
 38306 12dc8 20CB0000 		.long	0xcb20
 38307 12dcc 00000000 		.quad	.LBB4139
 38307      00000000 
 38308 12dd4 00000000 		.long	.Ldebug_ranges0+0x14f0
 38309 12dd8 02       		.byte	0x2
 38310 12dd9 47       		.byte	0x47
 38311 12dda 1D2E0100 		.long	0x12e1d
 38312 12dde BE01     		.uleb128 0xbe
 38313 12de0 41CB0000 		.long	0xcb41
 38314 12de4 00000000 		.long	.LLST311
 38315 12de8 BE01     		.uleb128 0xbe
 38316 12dea 34CB0000 		.long	0xcb34
 38317 12dee 00000000 		.long	.LLST312
 38318 12df2 C101     		.uleb128 0xc1
 38319 12df4 00000000 		.quad	.LVL285
 38319      00000000 
 38320 12dfc B5920000 		.long	0x92b5
 38321 12e00 C201     		.uleb128 0xc2
 38322 12e02 01       		.uleb128 0x1
 38323 12e03 55       		.byte	0x55
 38324 12e04 02       		.uleb128 0x2
 38325 12e05 76       		.byte	0x76
 38326 12e06 00       		.sleb128 0
 38327 12e07 C201     		.uleb128 0xc2
 38328 12e09 01       		.uleb128 0x1
 38329 12e0a 54       		.byte	0x54
 38330 12e0b 09       		.uleb128 0x9
 38331 12e0c 03       		.byte	0x3
 38332 12e0d 00000000 		.quad	.LC15
 38332      00000000 
 38333 12e15 C201     		.uleb128 0xc2
 38334 12e17 01       		.uleb128 0x1
 38335 12e18 51       		.byte	0x51
 38336 12e19 01       		.uleb128 0x1
 38337 12e1a 3B       		.byte	0x3b
 38338 12e1b 00       		.byte	0
 38339 12e1c 00       		.byte	0
 38340 12e1d C901     		.uleb128 0xc9
 38341 12e1f 57CC0000 		.long	0xcc57
 38342 12e23 00000000 		.quad	.LBB4144
 38342      00000000 
 38343 12e2b 00000000 		.long	.Ldebug_ranges0+0x1520
 38344 12e2f 02       		.byte	0x2
 38345 12e30 47       		.byte	0x47
 38346 12e31 722E0100 		.long	0x12e72
 38347 12e35 BE01     		.uleb128 0xbe
 38348 12e37 70CC0000 		.long	0xcc70
 38349 12e3b 00000000 		.long	.LLST313
 38350 12e3f AE01     		.uleb128 0xae
 38351 12e41 66CC0000 		.long	0xcc66
 38352 12e45 C101     		.uleb128 0xc1
 38353 12e47 00000000 		.quad	.LVL288
 38353      00000000 
 38354 12e4f 94290000 		.long	0x2994
GAS LISTING /tmp/ccJUMvuF.s 			page 981


 38355 12e53 C201     		.uleb128 0xc2
 38356 12e55 01       		.uleb128 0x1
 38357 12e56 55       		.byte	0x55
 38358 12e57 02       		.uleb128 0x2
 38359 12e58 76       		.byte	0x76
 38360 12e59 00       		.sleb128 0
 38361 12e5a C201     		.uleb128 0xc2
 38362 12e5c 01       		.uleb128 0x1
 38363 12e5d 61       		.byte	0x61
 38364 12e5e 11       		.uleb128 0x11
 38365 12e5f 77       		.byte	0x77
 38366 12e60 00       		.sleb128 0
 38367 12e61 F6       		.byte	0xf6
 38368 12e62 08       		.byte	0x8
 38369 12e63 29       		.uleb128 0x29
 38370 12e64 F4       		.byte	0xf4
 38371 12e65 29       		.uleb128 0x29
 38372 12e66 08       		.byte	0x8
 38373 12e67 00000000 		.long	0
 38374 12e6b 00408F40 		.long	0x408f4000
 38375 12e6f 1E       		.byte	0x1e
 38376 12e70 00       		.byte	0
 38377 12e71 00       		.byte	0
 38378 12e72 C901     		.uleb128 0xc9
 38379 12e74 20CB0000 		.long	0xcb20
 38380 12e78 00000000 		.quad	.LBB4149
 38380      00000000 
 38381 12e80 00000000 		.long	.Ldebug_ranges0+0x1560
 38382 12e84 02       		.byte	0x2
 38383 12e85 47       		.byte	0x47
 38384 12e86 C92E0100 		.long	0x12ec9
 38385 12e8a BE01     		.uleb128 0xbe
 38386 12e8c 41CB0000 		.long	0xcb41
 38387 12e90 00000000 		.long	.LLST314
 38388 12e94 BE01     		.uleb128 0xbe
 38389 12e96 34CB0000 		.long	0xcb34
 38390 12e9a 00000000 		.long	.LLST315
 38391 12e9e C101     		.uleb128 0xc1
 38392 12ea0 00000000 		.quad	.LVL290
 38392      00000000 
 38393 12ea8 B5920000 		.long	0x92b5
 38394 12eac C201     		.uleb128 0xc2
 38395 12eae 01       		.uleb128 0x1
 38396 12eaf 55       		.byte	0x55
 38397 12eb0 02       		.uleb128 0x2
 38398 12eb1 76       		.byte	0x76
 38399 12eb2 00       		.sleb128 0
 38400 12eb3 C201     		.uleb128 0xc2
 38401 12eb5 01       		.uleb128 0x1
 38402 12eb6 54       		.byte	0x54
 38403 12eb7 09       		.uleb128 0x9
 38404 12eb8 03       		.byte	0x3
 38405 12eb9 00000000 		.quad	.LC16
 38405      00000000 
 38406 12ec1 C201     		.uleb128 0xc2
 38407 12ec3 01       		.uleb128 0x1
 38408 12ec4 51       		.byte	0x51
GAS LISTING /tmp/ccJUMvuF.s 			page 982


 38409 12ec5 01       		.uleb128 0x1
 38410 12ec6 31       		.byte	0x31
 38411 12ec7 00       		.byte	0
 38412 12ec8 00       		.byte	0
 38413 12ec9 C901     		.uleb128 0xc9
 38414 12ecb 98CC0000 		.long	0xcc98
 38415 12ecf 00000000 		.quad	.LBB4154
 38415      00000000 
 38416 12ed7 00000000 		.long	.Ldebug_ranges0+0x1590
 38417 12edb 02       		.byte	0x2
 38418 12edc 47       		.byte	0x47
 38419 12edd 3C300100 		.long	0x1303c
 38420 12ee1 AE01     		.uleb128 0xae
 38421 12ee3 B1CC0000 		.long	0xccb1
 38422 12ee7 AE01     		.uleb128 0xae
 38423 12ee9 A7CC0000 		.long	0xcca7
 38424 12eed CB01     		.uleb128 0xcb
 38425 12eef 47FE0000 		.long	0xfe47
 38426 12ef3 00000000 		.quad	.LBB4155
 38426      00000000 
 38427 12efb 00000000 		.long	.Ldebug_ranges0+0x1590
 38428 12eff 09       		.byte	0x9
 38429 12f00 71       		.byte	0x71
 38430 12f01 BE01     		.uleb128 0xbe
 38431 12f03 64FE0000 		.long	0xfe64
 38432 12f07 00000000 		.long	.LLST316
 38433 12f0b C301     		.uleb128 0xc3
 38434 12f0d A3FC0000 		.long	0xfca3
 38435 12f11 00000000 		.quad	.LBB4157
 38435      00000000 
 38436 12f19 00000000 		.long	.Ldebug_ranges0+0x15d0
 38437 12f1d 09       		.byte	0x9
 38438 12f1e 3502     		.value	0x235
 38439 12f20 EE2F0100 		.long	0x12fee
 38440 12f24 BE01     		.uleb128 0xbe
 38441 12f26 BCFC0000 		.long	0xfcbc
 38442 12f2a 00000000 		.long	.LLST317
 38443 12f2e BE01     		.uleb128 0xbe
 38444 12f30 B2FC0000 		.long	0xfcb2
 38445 12f34 00000000 		.long	.LLST318
 38446 12f38 C301     		.uleb128 0xc3
 38447 12f3a 99DC0000 		.long	0xdc99
 38448 12f3e 00000000 		.quad	.LBB4159
 38448      00000000 
 38449 12f46 00000000 		.long	.Ldebug_ranges0+0x1610
 38450 12f4a 0E       		.byte	0xe
 38451 12f4b BC01     		.value	0x1bc
 38452 12f4d 6A2F0100 		.long	0x12f6a
 38453 12f51 BE01     		.uleb128 0xbe
 38454 12f53 ADDC0000 		.long	0xdcad
 38455 12f57 00000000 		.long	.LLST319
 38456 12f5b CF01     		.uleb128 0xcf
 38457 12f5d 00000000 		.quad	.LVL351
 38457      00000000 
 38458 12f65 F5920000 		.long	0x92f5
 38459 12f69 00       		.byte	0
 38460 12f6a CC01     		.uleb128 0xcc
GAS LISTING /tmp/ccJUMvuF.s 			page 983


 38461 12f6c 1FCC0000 		.long	0xcc1f
 38462 12f70 00000000 		.quad	.LBB4162
 38462      00000000 
 38463 12f78 00000000 		.long	.Ldebug_ranges0+0x1640
 38464 12f7c 0E       		.byte	0xe
 38465 12f7d BC01     		.value	0x1bc
 38466 12f7f BE01     		.uleb128 0xbe
 38467 12f81 38CC0000 		.long	0xcc38
 38468 12f85 00000000 		.long	.LLST320
 38469 12f89 BE01     		.uleb128 0xbe
 38470 12f8b 2ECC0000 		.long	0xcc2e
 38471 12f8f 00000000 		.long	.LLST321
 38472 12f93 B901     		.uleb128 0xb9
 38473 12f95 00000000 		.quad	.LBB4164
 38473      00000000 
 38474 12f9d 2F000000 		.quad	.LBE4164-.LBB4164
 38474      00000000 
 38475 12fa5 BE01     		.uleb128 0xbe
 38476 12fa7 38CC0000 		.long	0xcc38
 38477 12fab 00000000 		.long	.LLST322
 38478 12faf BE01     		.uleb128 0xbe
 38479 12fb1 2ECC0000 		.long	0xcc2e
 38480 12fb5 00000000 		.long	.LLST323
 38481 12fb9 C601     		.uleb128 0xc6
 38482 12fbb 00000000 		.quad	.LVL332
 38482      00000000 
 38483 12fc3 652A0000 		.long	0x2a65
 38484 12fc7 D32F0100 		.long	0x12fd3
 38485 12fcb C201     		.uleb128 0xc2
 38486 12fcd 01       		.uleb128 0x1
 38487 12fce 55       		.byte	0x55
 38488 12fcf 02       		.uleb128 0x2
 38489 12fd0 7C       		.byte	0x7c
 38490 12fd1 00       		.sleb128 0
 38491 12fd2 00       		.byte	0
 38492 12fd3 D001     		.uleb128 0xd0
 38493 12fd5 00000000 		.quad	.LVL333
 38493      00000000 
 38494 12fdd C201     		.uleb128 0xc2
 38495 12fdf 01       		.uleb128 0x1
 38496 12fe0 55       		.byte	0x55
 38497 12fe1 02       		.uleb128 0x2
 38498 12fe2 7C       		.byte	0x7c
 38499 12fe3 00       		.sleb128 0
 38500 12fe4 C201     		.uleb128 0xc2
 38501 12fe6 01       		.uleb128 0x1
 38502 12fe7 54       		.byte	0x54
 38503 12fe8 01       		.uleb128 0x1
 38504 12fe9 3A       		.byte	0x3a
 38505 12fea 00       		.byte	0
 38506 12feb 00       		.byte	0
 38507 12fec 00       		.byte	0
 38508 12fed 00       		.byte	0
 38509 12fee C501     		.uleb128 0xc5
 38510 12ff0 BADC0000 		.long	0xdcba
 38511 12ff4 00000000 		.quad	.LBB4171
 38511      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 984


 38512 12ffc 08000000 		.quad	.LBE4171-.LBB4171
 38512      00000000 
 38513 13004 09       		.byte	0x9
 38514 13005 3502     		.value	0x235
 38515 13007 24300100 		.long	0x13024
 38516 1300b BE01     		.uleb128 0xbe
 38517 1300d D7DC0000 		.long	0xdcd7
 38518 13011 00000000 		.long	.LLST324
 38519 13015 CF01     		.uleb128 0xcf
 38520 13017 00000000 		.quad	.LVL295
 38520      00000000 
 38521 1301f 76290000 		.long	0x2976
 38522 13023 00       		.byte	0
 38523 13024 C101     		.uleb128 0xc1
 38524 13026 00000000 		.quad	.LVL294
 38524      00000000 
 38525 1302e C0290000 		.long	0x29c0
 38526 13032 C201     		.uleb128 0xc2
 38527 13034 01       		.uleb128 0x1
 38528 13035 55       		.byte	0x55
 38529 13036 02       		.uleb128 0x2
 38530 13037 76       		.byte	0x76
 38531 13038 00       		.sleb128 0
 38532 13039 00       		.byte	0
 38533 1303a 00       		.byte	0
 38534 1303b 00       		.byte	0
 38535 1303c CA01     		.uleb128 0xca
 38536 1303e 20CB0000 		.long	0xcb20
 38537 13042 00000000 		.quad	.LBB4179
 38537      00000000 
 38538 1304a 1B000000 		.quad	.LBE4179-.LBB4179
 38538      00000000 
 38539 13052 02       		.byte	0x2
 38540 13053 48       		.byte	0x48
 38541 13054 93300100 		.long	0x13093
 38542 13058 AE01     		.uleb128 0xae
 38543 1305a 34CB0000 		.long	0xcb34
 38544 1305e BE01     		.uleb128 0xbe
 38545 13060 41CB0000 		.long	0xcb41
 38546 13064 00000000 		.long	.LLST325
 38547 13068 C101     		.uleb128 0xc1
 38548 1306a 00000000 		.quad	.LVL297
 38548      00000000 
 38549 13072 B5920000 		.long	0x92b5
 38550 13076 C201     		.uleb128 0xc2
 38551 13078 01       		.uleb128 0x1
 38552 13079 55       		.byte	0x55
 38553 1307a 02       		.uleb128 0x2
 38554 1307b 76       		.byte	0x76
 38555 1307c 00       		.sleb128 0
 38556 1307d C201     		.uleb128 0xc2
 38557 1307f 01       		.uleb128 0x1
 38558 13080 54       		.byte	0x54
 38559 13081 09       		.uleb128 0x9
 38560 13082 03       		.byte	0x3
 38561 13083 00000000 		.quad	.LC17
 38561      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 985


 38562 1308b C201     		.uleb128 0xc2
 38563 1308d 01       		.uleb128 0x1
 38564 1308e 51       		.byte	0x51
 38565 1308f 01       		.uleb128 0x1
 38566 13090 38       		.byte	0x38
 38567 13091 00       		.byte	0
 38568 13092 00       		.byte	0
 38569 13093 C901     		.uleb128 0xc9
 38570 13095 57CC0000 		.long	0xcc57
 38571 13099 00000000 		.quad	.LBB4181
 38571      00000000 
 38572 130a1 00000000 		.long	.Ldebug_ranges0+0x1670
 38573 130a5 02       		.byte	0x2
 38574 130a6 48       		.byte	0x48
 38575 130a7 DD300100 		.long	0x130dd
 38576 130ab BE01     		.uleb128 0xbe
 38577 130ad 70CC0000 		.long	0xcc70
 38578 130b1 00000000 		.long	.LLST326
 38579 130b5 AE01     		.uleb128 0xae
 38580 130b7 66CC0000 		.long	0xcc66
 38581 130bb C101     		.uleb128 0xc1
 38582 130bd 00000000 		.quad	.LVL298
 38582      00000000 
 38583 130c5 94290000 		.long	0x2994
 38584 130c9 C201     		.uleb128 0xc2
 38585 130cb 01       		.uleb128 0x1
 38586 130cc 55       		.byte	0x55
 38587 130cd 02       		.uleb128 0x2
 38588 130ce 76       		.byte	0x76
 38589 130cf 00       		.sleb128 0
 38590 130d0 C201     		.uleb128 0xc2
 38591 130d2 01       		.uleb128 0x1
 38592 130d3 61       		.byte	0x61
 38593 130d4 06       		.uleb128 0x6
 38594 130d5 91       		.byte	0x91
 38595 130d6 B87F     		.sleb128 -72
 38596 130d8 F6       		.byte	0xf6
 38597 130d9 08       		.byte	0x8
 38598 130da 29       		.uleb128 0x29
 38599 130db 00       		.byte	0
 38600 130dc 00       		.byte	0
 38601 130dd C901     		.uleb128 0xc9
 38602 130df 20CB0000 		.long	0xcb20
 38603 130e3 00000000 		.quad	.LBB4184
 38603      00000000 
 38604 130eb 00000000 		.long	.Ldebug_ranges0+0x16a0
 38605 130ef 02       		.byte	0x2
 38606 130f0 48       		.byte	0x48
 38607 130f1 34310100 		.long	0x13134
 38608 130f5 BE01     		.uleb128 0xbe
 38609 130f7 41CB0000 		.long	0xcb41
 38610 130fb 00000000 		.long	.LLST327
 38611 130ff BE01     		.uleb128 0xbe
 38612 13101 34CB0000 		.long	0xcb34
 38613 13105 00000000 		.long	.LLST328
 38614 13109 C101     		.uleb128 0xc1
 38615 1310b 00000000 		.quad	.LVL300
GAS LISTING /tmp/ccJUMvuF.s 			page 986


 38615      00000000 
 38616 13113 B5920000 		.long	0x92b5
 38617 13117 C201     		.uleb128 0xc2
 38618 13119 01       		.uleb128 0x1
 38619 1311a 55       		.byte	0x55
 38620 1311b 02       		.uleb128 0x2
 38621 1311c 76       		.byte	0x76
 38622 1311d 00       		.sleb128 0
 38623 1311e C201     		.uleb128 0xc2
 38624 13120 01       		.uleb128 0x1
 38625 13121 54       		.byte	0x54
 38626 13122 09       		.uleb128 0x9
 38627 13123 03       		.byte	0x3
 38628 13124 00000000 		.quad	.LC18
 38628      00000000 
 38629 1312c C201     		.uleb128 0xc2
 38630 1312e 01       		.uleb128 0x1
 38631 1312f 51       		.byte	0x51
 38632 13130 01       		.uleb128 0x1
 38633 13131 3A       		.byte	0x3a
 38634 13132 00       		.byte	0
 38635 13133 00       		.byte	0
 38636 13134 CA01     		.uleb128 0xca
 38637 13136 57CC0000 		.long	0xcc57
 38638 1313a 00000000 		.quad	.LBB4189
 38638      00000000 
 38639 13142 0D000000 		.quad	.LBE4189-.LBB4189
 38639      00000000 
 38640 1314a 02       		.byte	0x2
 38641 1314b 48       		.byte	0x48
 38642 1314c 81310100 		.long	0x13181
 38643 13150 BE01     		.uleb128 0xbe
 38644 13152 70CC0000 		.long	0xcc70
 38645 13156 00000000 		.long	.LLST329
 38646 1315a AE01     		.uleb128 0xae
 38647 1315c 66CC0000 		.long	0xcc66
 38648 13160 C101     		.uleb128 0xc1
 38649 13162 00000000 		.quad	.LVL301
 38649      00000000 
 38650 1316a 94290000 		.long	0x2994
 38651 1316e C201     		.uleb128 0xc2
 38652 13170 01       		.uleb128 0x1
 38653 13171 55       		.byte	0x55
 38654 13172 02       		.uleb128 0x2
 38655 13173 76       		.byte	0x76
 38656 13174 00       		.sleb128 0
 38657 13175 C201     		.uleb128 0xc2
 38658 13177 01       		.uleb128 0x1
 38659 13178 61       		.byte	0x61
 38660 13179 05       		.uleb128 0x5
 38661 1317a 77       		.byte	0x77
 38662 1317b 00       		.sleb128 0
 38663 1317c F6       		.byte	0xf6
 38664 1317d 08       		.byte	0x8
 38665 1317e 29       		.uleb128 0x29
 38666 1317f 00       		.byte	0
 38667 13180 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 987


 38668 13181 CE01     		.uleb128 0xce
 38669 13183 20CB0000 		.long	0xcb20
 38670 13187 00000000 		.quad	.LBB4191
 38670      00000000 
 38671 1318f 14000000 		.quad	.LBE4191-.LBB4191
 38671      00000000 
 38672 13197 02       		.byte	0x2
 38673 13198 48       		.byte	0x48
 38674 13199 BE01     		.uleb128 0xbe
 38675 1319b 41CB0000 		.long	0xcb41
 38676 1319f 00000000 		.long	.LLST330
 38677 131a3 BE01     		.uleb128 0xbe
 38678 131a5 34CB0000 		.long	0xcb34
 38679 131a9 00000000 		.long	.LLST331
 38680 131ad C101     		.uleb128 0xc1
 38681 131af 00000000 		.quad	.LVL302
 38681      00000000 
 38682 131b7 B5920000 		.long	0x92b5
 38683 131bb C201     		.uleb128 0xc2
 38684 131bd 01       		.uleb128 0x1
 38685 131be 54       		.byte	0x54
 38686 131bf 09       		.uleb128 0x9
 38687 131c0 03       		.byte	0x3
 38688 131c1 00000000 		.quad	.LC19
 38688      00000000 
 38689 131c9 C201     		.uleb128 0xc2
 38690 131cb 01       		.uleb128 0x1
 38691 131cc 51       		.byte	0x51
 38692 131cd 01       		.uleb128 0x1
 38693 131ce 31       		.byte	0x31
 38694 131cf 00       		.byte	0
 38695 131d0 00       		.byte	0
 38696 131d1 00       		.byte	0
 38697 131d2 CB01     		.uleb128 0xcb
 38698 131d4 28FB0000 		.long	0xfb28
 38699 131d8 00000000 		.quad	.LBB4197
 38699      00000000 
 38700 131e0 00000000 		.long	.Ldebug_ranges0+0x16d0
 38701 131e4 02       		.byte	0x2
 38702 131e5 41       		.byte	0x41
 38703 131e6 BE01     		.uleb128 0xbe
 38704 131e8 37FB0000 		.long	0xfb37
 38705 131ec 00000000 		.long	.LLST332
 38706 131f0 CC01     		.uleb128 0xcc
 38707 131f2 58E20000 		.long	0xe258
 38708 131f6 00000000 		.quad	.LBB4198
 38708      00000000 
 38709 131fe 00000000 		.long	.Ldebug_ranges0+0x16d0
 38710 13202 06       		.byte	0x6
 38711 13203 A901     		.value	0x1a9
 38712 13205 BE01     		.uleb128 0xbe
 38713 13207 67E20000 		.long	0xe267
 38714 1320b 00000000 		.long	.LLST332
 38715 1320f CB01     		.uleb128 0xcb
 38716 13211 DAE10000 		.long	0xe1da
 38717 13215 00000000 		.quad	.LBB4200
 38717      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 988


 38718 1321d 00000000 		.long	.Ldebug_ranges0+0x1700
 38719 13221 06       		.byte	0x6
 38720 13222 A0       		.byte	0xa0
 38721 13223 AE01     		.uleb128 0xae
 38722 13225 E9E10000 		.long	0xe1e9
 38723 13229 BE01     		.uleb128 0xbe
 38724 1322b FFE10000 		.long	0xe1ff
 38725 1322f 00000000 		.long	.LLST334
 38726 13233 BE01     		.uleb128 0xbe
 38727 13235 F3E10000 		.long	0xe1f3
 38728 13239 00000000 		.long	.LLST335
 38729 1323d B601     		.uleb128 0xb6
 38730 1323f 00000000 		.long	.Ldebug_ranges0+0x1700
 38731 13243 CE01     		.uleb128 0xce
 38732 13245 A2E10000 		.long	0xe1a2
 38733 13249 00000000 		.quad	.LBB4202
 38733      00000000 
 38734 13251 0A000000 		.quad	.LBE4202-.LBB4202
 38734      00000000 
 38735 13259 06       		.byte	0x6
 38736 1325a B2       		.byte	0xb2
 38737 1325b AE01     		.uleb128 0xae
 38738 1325d ADE10000 		.long	0xe1ad
 38739 13261 BE01     		.uleb128 0xbe
 38740 13263 C7E10000 		.long	0xe1c7
 38741 13267 00000000 		.long	.LLST336
 38742 1326b BE01     		.uleb128 0xbe
 38743 1326d BAE10000 		.long	0xe1ba
 38744 13271 00000000 		.long	.LLST337
 38745 13275 B801     		.uleb128 0xb8
 38746 13277 77E10000 		.long	0xe177
 38747 1327b 00000000 		.quad	.LBB4203
 38747      00000000 
 38748 13283 0A000000 		.quad	.LBE4203-.LBB4203
 38748      00000000 
 38749 1328b 2F       		.byte	0x2f
 38750 1328c 7F01     		.value	0x17f
 38751 1328e AE01     		.uleb128 0xae
 38752 13290 86E10000 		.long	0xe186
 38753 13294 BE01     		.uleb128 0xbe
 38754 13296 9CE10000 		.long	0xe19c
 38755 1329a 00000000 		.long	.LLST336
 38756 1329e BE01     		.uleb128 0xbe
 38757 132a0 90E10000 		.long	0xe190
 38758 132a4 00000000 		.long	.LLST337
 38759 132a8 B301     		.uleb128 0xb3
 38760 132aa 00000000 		.quad	.LVL309
 38760      00000000 
 38761 132b2 ED6B0100 		.long	0x16bed
 38762 132b6 00       		.byte	0
 38763 132b7 00       		.byte	0
 38764 132b8 00       		.byte	0
 38765 132b9 00       		.byte	0
 38766 132ba 00       		.byte	0
 38767 132bb 00       		.byte	0
 38768 132bc 00       		.byte	0
 38769 132bd D701     		.uleb128 0xd7
GAS LISTING /tmp/ccJUMvuF.s 			page 989


 38770 132bf 00000000 		.long	.LASF1744
 38771 132c3 16       		.byte	0x16
 38772 132c4 25       		.byte	0x25
 38773 132c5 28930000 		.long	0x9328
 38774 132c9 00000000 		.quad	.LFB6051
 38774      00000000 
 38775 132d1 8C0E0000 		.quad	.LFE6051-.LFB6051
 38775      00000000 
 38776 132d9 01       		.uleb128 0x1
 38777 132da 9C       		.byte	0x9c
 38778 132db 066A0100 		.long	0x16a06
 38779 132df C401     		.uleb128 0xc4
 38780 132e1 00000000 		.long	.Ldebug_ranges0+0x1730
 38781 132e5 EF690100 		.long	0x169ef
 38782 132e9 D801     		.uleb128 0xd8
 38783 132eb 72657400 		.string	"ret"
 38784 132ef 16       		.byte	0x16
 38785 132f0 29       		.byte	0x29
 38786 132f1 28930000 		.long	0x9328
 38787 132f5 00000000 		.long	.LLST340
 38788 132f9 D501     		.uleb128 0xd5
 38789 132fb 00000000 		.long	.LASF1745
 38790 132ff 16       		.byte	0x16
 38791 13300 2B       		.byte	0x2b
 38792 13301 505C0000 		.long	0x5c50
 38793 13305 00000000 		.long	.LLST341
 38794 13309 C901     		.uleb128 0xc9
 38795 1330b 20CB0000 		.long	0xcb20
 38796 1330f 00000000 		.quad	.LBB4213
 38796      00000000 
 38797 13317 00000000 		.long	.Ldebug_ranges0+0x1770
 38798 1331b 16       		.byte	0x16
 38799 1331c 2D       		.byte	0x2d
 38800 1331d 63330100 		.long	0x13363
 38801 13321 AE01     		.uleb128 0xae
 38802 13323 34CB0000 		.long	0xcb34
 38803 13327 B101     		.uleb128 0xb1
 38804 13329 41CB0000 		.long	0xcb41
 38805 1332d 0A       		.uleb128 0xa
 38806 1332e 03       		.byte	0x3
 38807 1332f 00000000 		.quad	.LC21
 38807      00000000 
 38808 13337 9F       		.byte	0x9f
 38809 13338 C101     		.uleb128 0xc1
 38810 1333a 00000000 		.quad	.LVL355
 38810      00000000 
 38811 13342 B5920000 		.long	0x92b5
 38812 13346 C201     		.uleb128 0xc2
 38813 13348 01       		.uleb128 0x1
 38814 13349 55       		.byte	0x55
 38815 1334a 02       		.uleb128 0x2
 38816 1334b 7F       		.byte	0x7f
 38817 1334c 00       		.sleb128 0
 38818 1334d C201     		.uleb128 0xc2
 38819 1334f 01       		.uleb128 0x1
 38820 13350 54       		.byte	0x54
 38821 13351 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 990


 38822 13352 03       		.byte	0x3
 38823 13353 00000000 		.quad	.LC21
 38823      00000000 
 38824 1335b C201     		.uleb128 0xc2
 38825 1335d 01       		.uleb128 0x1
 38826 1335e 51       		.byte	0x51
 38827 1335f 01       		.uleb128 0x1
 38828 13360 31       		.byte	0x31
 38829 13361 00       		.byte	0
 38830 13362 00       		.byte	0
 38831 13363 CA01     		.uleb128 0xca
 38832 13365 98CC0000 		.long	0xcc98
 38833 13369 00000000 		.quad	.LBB4217
 38833      00000000 
 38834 13371 27000000 		.quad	.LBE4217-.LBB4217
 38834      00000000 
 38835 13379 16       		.byte	0x16
 38836 1337a 2D       		.byte	0x2d
 38837 1337b A2330100 		.long	0x133a2
 38838 1337f AE01     		.uleb128 0xae
 38839 13381 B1CC0000 		.long	0xccb1
 38840 13385 AE01     		.uleb128 0xae
 38841 13387 A7CC0000 		.long	0xcca7
 38842 1338b C101     		.uleb128 0xc1
 38843 1338d 00000000 		.quad	.LVL356
 38843      00000000 
 38844 13395 47FE0000 		.long	0xfe47
 38845 13399 C201     		.uleb128 0xc2
 38846 1339b 01       		.uleb128 0x1
 38847 1339c 55       		.byte	0x55
 38848 1339d 02       		.uleb128 0x2
 38849 1339e 7F       		.byte	0x7f
 38850 1339f 00       		.sleb128 0
 38851 133a0 00       		.byte	0
 38852 133a1 00       		.byte	0
 38853 133a2 C401     		.uleb128 0xc4
 38854 133a4 00000000 		.long	.Ldebug_ranges0+0x17a0
 38855 133a8 3F680100 		.long	0x1683f
 38856 133ac D501     		.uleb128 0xd5
 38857 133ae 00000000 		.long	.LASF1746
 38858 133b2 16       		.byte	0x16
 38859 133b3 2E       		.byte	0x2e
 38860 133b4 3BAE0000 		.long	0xae3b
 38861 133b8 00000000 		.long	.LLST342
 38862 133bc B601     		.uleb128 0xb6
 38863 133be 00000000 		.long	.Ldebug_ranges0+0x17e0
 38864 133c2 D801     		.uleb128 0xd8
 38865 133c4 686D00   		.string	"hm"
 38866 133c7 16       		.byte	0x16
 38867 133c8 30       		.byte	0x30
 38868 133c9 F2650000 		.long	0x65f2
 38869 133cd 00000000 		.long	.LLST343
 38870 133d1 D901     		.uleb128 0xd9
 38871 133d3 00000000 		.long	.LASF1714
 38872 133d7 16       		.byte	0x16
 38873 133d8 31       		.byte	0x31
 38874 133d9 E8470000 		.long	0x47e8
GAS LISTING /tmp/ccJUMvuF.s 			page 991


 38875 133dd 03       		.uleb128 0x3
 38876 133de 91       		.byte	0x91
 38877 133df C07E     		.sleb128 -192
 38878 133e1 D501     		.uleb128 0xd5
 38879 133e3 00000000 		.long	.LASF1747
 38880 133e7 16       		.byte	0x16
 38881 133e8 36       		.byte	0x36
 38882 133e9 ED740000 		.long	0x74ed
 38883 133ed 00000000 		.long	.LLST344
 38884 133f1 BC01     		.uleb128 0xbc
 38885 133f3 00000000 		.quad	.LBB4221
 38885      00000000 
 38886 133fb 21000000 		.quad	.LBE4221-.LBB4221
 38886      00000000 
 38887 13403 2F340100 		.long	0x1342f
 38888 13407 9F01     		.uleb128 0x9f
 38889 13409 6900     		.string	"i"
 38890 1340b 16       		.byte	0x16
 38891 1340c 33       		.byte	0x33
 38892 1340d 3BAE0000 		.long	0xae3b
 38893 13411 C101     		.uleb128 0xc1
 38894 13413 00000000 		.quad	.LVL363
 38894      00000000 
 38895 1341b 386C0100 		.long	0x16c38
 38896 1341f C201     		.uleb128 0xc2
 38897 13421 01       		.uleb128 0x1
 38898 13422 55       		.byte	0x55
 38899 13423 02       		.uleb128 0x2
 38900 13424 73       		.byte	0x73
 38901 13425 00       		.sleb128 0
 38902 13426 C201     		.uleb128 0xc2
 38903 13428 01       		.uleb128 0x1
 38904 13429 52       		.byte	0x52
 38905 1342a 02       		.uleb128 0x2
 38906 1342b 76       		.byte	0x76
 38907 1342c 00       		.sleb128 0
 38908 1342d 00       		.byte	0
 38909 1342e 00       		.byte	0
 38910 1342f CA01     		.uleb128 0xca
 38911 13431 CF000100 		.long	0x100cf
 38912 13435 00000000 		.quad	.LBB4222
 38912      00000000 
 38913 1343d 18000000 		.quad	.LBE4222-.LBB4222
 38913      00000000 
 38914 13445 16       		.byte	0x16
 38915 13446 36       		.byte	0x36
 38916 13447 E4360100 		.long	0x136e4
 38917 1344b AE01     		.uleb128 0xae
 38918 1344d F5000100 		.long	0x100f5
 38919 13451 BE01     		.uleb128 0xbe
 38920 13453 E8000100 		.long	0x100e8
 38921 13457 00000000 		.long	.LLST346
 38922 1345b BE01     		.uleb128 0xbe
 38923 1345d DE000100 		.long	0x100de
 38924 13461 00000000 		.long	.LLST347
 38925 13465 C301     		.uleb128 0xc3
 38926 13467 8EF60000 		.long	0xf68e
GAS LISTING /tmp/ccJUMvuF.s 			page 992


 38927 1346b 00000000 		.quad	.LBB4223
 38927      00000000 
 38928 13473 00000000 		.long	.Ldebug_ranges0+0x1820
 38929 13477 06       		.byte	0x6
 38930 13478 1601     		.value	0x116
 38931 1347a 59350100 		.long	0x13559
 38932 1347e AE01     		.uleb128 0xae
 38933 13480 B3F60000 		.long	0xf6b3
 38934 13484 BE01     		.uleb128 0xbe
 38935 13486 A7F60000 		.long	0xf6a7
 38936 1348a 00000000 		.long	.LLST346
 38937 1348e BE01     		.uleb128 0xbe
 38938 13490 9DF60000 		.long	0xf69d
 38939 13494 00000000 		.long	.LLST347
 38940 13498 CB01     		.uleb128 0xcb
 38941 1349a BEEC0000 		.long	0xecbe
 38942 1349e 00000000 		.quad	.LBB4224
 38942      00000000 
 38943 134a6 00000000 		.long	.Ldebug_ranges0+0x1820
 38944 134aa 06       		.byte	0x6
 38945 134ab 88       		.byte	0x88
 38946 134ac BE01     		.uleb128 0xbe
 38947 134ae D7EC0000 		.long	0xecd7
 38948 134b2 00000000 		.long	.LLST346
 38949 134b6 BE01     		.uleb128 0xbe
 38950 134b8 CDEC0000 		.long	0xeccd
 38951 134bc 00000000 		.long	.LLST347
 38952 134c0 CB01     		.uleb128 0xcb
 38953 134c2 6BEC0000 		.long	0xec6b
 38954 134c6 00000000 		.quad	.LBB4225
 38954      00000000 
 38955 134ce 00000000 		.long	.Ldebug_ranges0+0x1820
 38956 134d2 06       		.byte	0x6
 38957 134d3 B9       		.byte	0xb9
 38958 134d4 AE01     		.uleb128 0xae
 38959 134d6 7AEC0000 		.long	0xec7a
 38960 134da BE01     		.uleb128 0xbe
 38961 134dc 84EC0000 		.long	0xec84
 38962 134e0 00000000 		.long	.LLST346
 38963 134e4 B601     		.uleb128 0xb6
 38964 134e6 00000000 		.long	.Ldebug_ranges0+0x1820
 38965 134ea CB01     		.uleb128 0xcb
 38966 134ec 40EC0000 		.long	0xec40
 38967 134f0 00000000 		.quad	.LBB4227
 38967      00000000 
 38968 134f8 00000000 		.long	.Ldebug_ranges0+0x1820
 38969 134fc 06       		.byte	0x6
 38970 134fd AA       		.byte	0xaa
 38971 134fe AE01     		.uleb128 0xae
 38972 13500 4BEC0000 		.long	0xec4b
 38973 13504 BE01     		.uleb128 0xbe
 38974 13506 58EC0000 		.long	0xec58
 38975 1350a 00000000 		.long	.LLST346
 38976 1350e CC01     		.uleb128 0xcc
 38977 13510 15EC0000 		.long	0xec15
 38978 13514 00000000 		.quad	.LBB4228
 38978      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 993


 38979 1351c 00000000 		.long	.Ldebug_ranges0+0x1820
 38980 13520 2F       		.byte	0x2f
 38981 13521 6501     		.value	0x165
 38982 13523 AE01     		.uleb128 0xae
 38983 13525 24EC0000 		.long	0xec24
 38984 13529 BE01     		.uleb128 0xbe
 38985 1352b 3AEC0000 		.long	0xec3a
 38986 1352f 00000000 		.long	.LLST355
 38987 13533 BE01     		.uleb128 0xbe
 38988 13535 2EEC0000 		.long	0xec2e
 38989 13539 00000000 		.long	.LLST346
 38990 1353d C101     		.uleb128 0xc1
 38991 1353f 00000000 		.quad	.LVL366
 38991      00000000 
 38992 13547 D46B0100 		.long	0x16bd4
 38993 1354b C201     		.uleb128 0xc2
 38994 1354d 01       		.uleb128 0x1
 38995 1354e 55       		.byte	0x55
 38996 1354f 02       		.uleb128 0x2
 38997 13550 7C       		.byte	0x7c
 38998 13551 00       		.sleb128 0
 38999 13552 00       		.byte	0
 39000 13553 00       		.byte	0
 39001 13554 00       		.byte	0
 39002 13555 00       		.byte	0
 39003 13556 00       		.byte	0
 39004 13557 00       		.byte	0
 39005 13558 00       		.byte	0
 39006 13559 CC01     		.uleb128 0xcc
 39007 1355b C5F60000 		.long	0xf6c5
 39008 1355f 00000000 		.quad	.LBB4236
 39008      00000000 
 39009 13567 00000000 		.long	.Ldebug_ranges0+0x1850
 39010 1356b 06       		.byte	0x6
 39011 1356c 1701     		.value	0x117
 39012 1356e BE01     		.uleb128 0xbe
 39013 13570 DEF60000 		.long	0xf6de
 39014 13574 00000000 		.long	.LLST357
 39015 13578 BE01     		.uleb128 0xbe
 39016 1357a D4F60000 		.long	0xf6d4
 39017 1357e 00000000 		.long	.LLST358
 39018 13582 CC01     		.uleb128 0xcc
 39019 13584 43F60000 		.long	0xf643
 39020 13588 00000000 		.quad	.LBB4237
 39020      00000000 
 39021 13590 00000000 		.long	.Ldebug_ranges0+0x1850
 39022 13594 06       		.byte	0x6
 39023 13595 1E05     		.value	0x51e
 39024 13597 AE01     		.uleb128 0xae
 39025 13599 83F60000 		.long	0xf683
 39026 1359d BE01     		.uleb128 0xbe
 39027 1359f 76F60000 		.long	0xf676
 39028 135a3 00000000 		.long	.LLST357
 39029 135a7 BE01     		.uleb128 0xbe
 39030 135a9 69F60000 		.long	0xf669
 39031 135ad 00000000 		.long	.LLST360
 39032 135b1 CC01     		.uleb128 0xcc
GAS LISTING /tmp/ccJUMvuF.s 			page 994


 39033 135b3 FBF50000 		.long	0xf5fb
 39034 135b7 00000000 		.quad	.LBB4238
 39034      00000000 
 39035 135bf 00000000 		.long	.Ldebug_ranges0+0x1850
 39036 135c3 2D       		.byte	0x2d
 39037 135c4 7702     		.value	0x277
 39038 135c6 BE01     		.uleb128 0xbe
 39039 135c8 25F60000 		.long	0xf625
 39040 135cc 00000000 		.long	.LLST357
 39041 135d0 BE01     		.uleb128 0xbe
 39042 135d2 18F60000 		.long	0xf618
 39043 135d6 00000000 		.long	.LLST360
 39044 135da B601     		.uleb128 0xb6
 39045 135dc 00000000 		.long	.Ldebug_ranges0+0x1850
 39046 135e0 BB01     		.uleb128 0xbb
 39047 135e2 34F60000 		.long	0xf634
 39048 135e6 00000000 		.long	.LLST363
 39049 135ea CC01     		.uleb128 0xcc
 39050 135ec C1F50000 		.long	0xf5c1
 39051 135f0 00000000 		.quad	.LBB4240
 39051      00000000 
 39052 135f8 00000000 		.long	.Ldebug_ranges0+0x1850
 39053 135fc 2D       		.byte	0x2d
 39054 135fd 3802     		.value	0x238
 39055 135ff BE01     		.uleb128 0xbe
 39056 13601 EBF50000 		.long	0xf5eb
 39057 13605 00000000 		.long	.LLST357
 39058 13609 BE01     		.uleb128 0xbe
 39059 1360b DEF50000 		.long	0xf5de
 39060 1360f 00000000 		.long	.LLST360
 39061 13613 B601     		.uleb128 0xb6
 39062 13615 00000000 		.long	.Ldebug_ranges0+0x1850
 39063 13619 CC01     		.uleb128 0xcc
 39064 1361b 6EF50000 		.long	0xf56e
 39065 1361f 00000000 		.quad	.LBB4242
 39065      00000000 
 39066 13627 00000000 		.long	.Ldebug_ranges0+0x1850
 39067 1362b 2D       		.byte	0x2d
 39068 1362c 1702     		.value	0x217
 39069 1362e AE01     		.uleb128 0xae
 39070 13630 AEF50000 		.long	0xf5ae
 39071 13634 BE01     		.uleb128 0xbe
 39072 13636 A1F50000 		.long	0xf5a1
 39073 1363a 00000000 		.long	.LLST357
 39074 1363e BE01     		.uleb128 0xbe
 39075 13640 94F50000 		.long	0xf594
 39076 13644 00000000 		.long	.LLST360
 39077 13648 CC01     		.uleb128 0xcc
 39078 1364a 02F50000 		.long	0xf502
 39079 1364e 00000000 		.quad	.LBB4243
 39079      00000000 
 39080 13656 00000000 		.long	.Ldebug_ranges0+0x1850
 39081 1365a 14       		.byte	0x14
 39082 1365b 1D03     		.value	0x31d
 39083 1365d AE01     		.uleb128 0xae
 39084 1365f 39F50000 		.long	0xf539
 39085 13663 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 995


 39086 13665 2CF50000 		.long	0xf52c
 39087 13669 00000000 		.long	.LLST357
 39088 1366d BE01     		.uleb128 0xbe
 39089 1366f 1FF50000 		.long	0xf51f
 39090 13673 00000000 		.long	.LLST360
 39091 13677 CC01     		.uleb128 0xcc
 39092 13679 B1F40000 		.long	0xf4b1
 39093 1367d 00000000 		.quad	.LBB4244
 39093      00000000 
 39094 13685 00000000 		.long	.Ldebug_ranges0+0x1850
 39095 13689 14       		.byte	0x14
 39096 1368a 0303     		.value	0x303
 39097 1368c AE01     		.uleb128 0xae
 39098 1368e DFF40000 		.long	0xf4df
 39099 13692 BE01     		.uleb128 0xbe
 39100 13694 D2F40000 		.long	0xf4d2
 39101 13698 00000000 		.long	.LLST370
 39102 1369c BE01     		.uleb128 0xbe
 39103 1369e C5F40000 		.long	0xf4c5
 39104 136a2 00000000 		.long	.LLST360
 39105 136a6 B601     		.uleb128 0xb6
 39106 136a8 00000000 		.long	.Ldebug_ranges0+0x1850
 39107 136ac BB01     		.uleb128 0xbb
 39108 136ae EEF40000 		.long	0xf4ee
 39109 136b2 00000000 		.long	.LLST372
 39110 136b6 C101     		.uleb128 0xc1
 39111 136b8 00000000 		.quad	.LVL368
 39111      00000000 
 39112 136c0 636C0100 		.long	0x16c63
 39113 136c4 C201     		.uleb128 0xc2
 39114 136c6 01       		.uleb128 0x1
 39115 136c7 55       		.byte	0x55
 39116 136c8 02       		.uleb128 0x2
 39117 136c9 7D       		.byte	0x7d
 39118 136ca 00       		.sleb128 0
 39119 136cb C201     		.uleb128 0xc2
 39120 136cd 01       		.uleb128 0x1
 39121 136ce 54       		.byte	0x54
 39122 136cf 01       		.uleb128 0x1
 39123 136d0 30       		.byte	0x30
 39124 136d1 C201     		.uleb128 0xc2
 39125 136d3 01       		.uleb128 0x1
 39126 136d4 51       		.byte	0x51
 39127 136d5 02       		.uleb128 0x2
 39128 136d6 7C       		.byte	0x7c
 39129 136d7 00       		.sleb128 0
 39130 136d8 00       		.byte	0
 39131 136d9 00       		.byte	0
 39132 136da 00       		.byte	0
 39133 136db 00       		.byte	0
 39134 136dc 00       		.byte	0
 39135 136dd 00       		.byte	0
 39136 136de 00       		.byte	0
 39137 136df 00       		.byte	0
 39138 136e0 00       		.byte	0
 39139 136e1 00       		.byte	0
 39140 136e2 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 996


 39141 136e3 00       		.byte	0
 39142 136e4 CA01     		.uleb128 0xca
 39143 136e6 20CB0000 		.long	0xcb20
 39144 136ea 00000000 		.quad	.LBB4257
 39144      00000000 
 39145 136f2 14000000 		.quad	.LBE4257-.LBB4257
 39145      00000000 
 39146 136fa 16       		.byte	0x16
 39147 136fb 39       		.byte	0x39
 39148 136fc 3B370100 		.long	0x1373b
 39149 13700 AE01     		.uleb128 0xae
 39150 13702 34CB0000 		.long	0xcb34
 39151 13706 BE01     		.uleb128 0xbe
 39152 13708 41CB0000 		.long	0xcb41
 39153 1370c 00000000 		.long	.LLST373
 39154 13710 C101     		.uleb128 0xc1
 39155 13712 00000000 		.quad	.LVL369
 39155      00000000 
 39156 1371a B5920000 		.long	0x92b5
 39157 1371e C201     		.uleb128 0xc2
 39158 13720 01       		.uleb128 0x1
 39159 13721 55       		.byte	0x55
 39160 13722 02       		.uleb128 0x2
 39161 13723 7F       		.byte	0x7f
 39162 13724 00       		.sleb128 0
 39163 13725 C201     		.uleb128 0xc2
 39164 13727 01       		.uleb128 0x1
 39165 13728 54       		.byte	0x54
 39166 13729 09       		.uleb128 0x9
 39167 1372a 03       		.byte	0x3
 39168 1372b 00000000 		.quad	.LC22
 39168      00000000 
 39169 13733 C201     		.uleb128 0xc2
 39170 13735 01       		.uleb128 0x1
 39171 13736 51       		.byte	0x51
 39172 13737 01       		.uleb128 0x1
 39173 13738 3C       		.byte	0x3c
 39174 13739 00       		.byte	0
 39175 1373a 00       		.byte	0
 39176 1373b CA01     		.uleb128 0xca
 39177 1373d 47F30000 		.long	0xf347
 39178 13741 00000000 		.quad	.LBB4259
 39178      00000000 
 39179 13749 0B000000 		.quad	.LBE4259-.LBB4259
 39179      00000000 
 39180 13751 16       		.byte	0x16
 39181 13752 39       		.byte	0x39
 39182 13753 85370100 		.long	0x13785
 39183 13757 BE01     		.uleb128 0xbe
 39184 13759 60F30000 		.long	0xf360
 39185 1375d 00000000 		.long	.LLST374
 39186 13761 AE01     		.uleb128 0xae
 39187 13763 56F30000 		.long	0xf356
 39188 13767 C101     		.uleb128 0xc1
 39189 13769 00000000 		.quad	.LVL370
 39189      00000000 
 39190 13771 4A290000 		.long	0x294a
GAS LISTING /tmp/ccJUMvuF.s 			page 997


 39191 13775 C201     		.uleb128 0xc2
 39192 13777 01       		.uleb128 0x1
 39193 13778 55       		.byte	0x55
 39194 13779 02       		.uleb128 0x2
 39195 1377a 7F       		.byte	0x7f
 39196 1377b 00       		.sleb128 0
 39197 1377c C201     		.uleb128 0xc2
 39198 1377e 01       		.uleb128 0x1
 39199 1377f 54       		.byte	0x54
 39200 13780 02       		.uleb128 0x2
 39201 13781 7E       		.byte	0x7e
 39202 13782 00       		.sleb128 0
 39203 13783 00       		.byte	0
 39204 13784 00       		.byte	0
 39205 13785 CA01     		.uleb128 0xca
 39206 13787 20CB0000 		.long	0xcb20
 39207 1378b 00000000 		.quad	.LBB4261
 39207      00000000 
 39208 13793 14000000 		.quad	.LBE4261-.LBB4261
 39208      00000000 
 39209 1379b 16       		.byte	0x16
 39210 1379c 39       		.byte	0x39
 39211 1379d D9370100 		.long	0x137d9
 39212 137a1 BE01     		.uleb128 0xbe
 39213 137a3 41CB0000 		.long	0xcb41
 39214 137a7 00000000 		.long	.LLST375
 39215 137ab BE01     		.uleb128 0xbe
 39216 137ad 34CB0000 		.long	0xcb34
 39217 137b1 00000000 		.long	.LLST376
 39218 137b5 C101     		.uleb128 0xc1
 39219 137b7 00000000 		.quad	.LVL371
 39219      00000000 
 39220 137bf B5920000 		.long	0x92b5
 39221 137c3 C201     		.uleb128 0xc2
 39222 137c5 01       		.uleb128 0x1
 39223 137c6 54       		.byte	0x54
 39224 137c7 09       		.uleb128 0x9
 39225 137c8 03       		.byte	0x3
 39226 137c9 00000000 		.quad	.LC23
 39226      00000000 
 39227 137d1 C201     		.uleb128 0xc2
 39228 137d3 01       		.uleb128 0x1
 39229 137d4 51       		.byte	0x51
 39230 137d5 01       		.uleb128 0x1
 39231 137d6 47       		.byte	0x47
 39232 137d7 00       		.byte	0
 39233 137d8 00       		.byte	0
 39234 137d9 CA01     		.uleb128 0xca
 39235 137db 20CB0000 		.long	0xcb20
 39236 137df 00000000 		.quad	.LBB4263
 39236      00000000 
 39237 137e7 18000000 		.quad	.LBE4263-.LBB4263
 39237      00000000 
 39238 137ef 16       		.byte	0x16
 39239 137f0 3A       		.byte	0x3a
 39240 137f1 29380100 		.long	0x13829
 39241 137f5 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 998


 39242 137f7 34CB0000 		.long	0xcb34
 39243 137fb BE01     		.uleb128 0xbe
 39244 137fd 41CB0000 		.long	0xcb41
 39245 13801 00000000 		.long	.LLST377
 39246 13805 C101     		.uleb128 0xc1
 39247 13807 00000000 		.quad	.LVL372
 39247      00000000 
 39248 1380f B5920000 		.long	0x92b5
 39249 13813 C201     		.uleb128 0xc2
 39250 13815 01       		.uleb128 0x1
 39251 13816 54       		.byte	0x54
 39252 13817 09       		.uleb128 0x9
 39253 13818 03       		.byte	0x3
 39254 13819 00000000 		.quad	.LC24
 39254      00000000 
 39255 13821 C201     		.uleb128 0xc2
 39256 13823 01       		.uleb128 0x1
 39257 13824 51       		.byte	0x51
 39258 13825 01       		.uleb128 0x1
 39259 13826 3C       		.byte	0x3c
 39260 13827 00       		.byte	0
 39261 13828 00       		.byte	0
 39262 13829 C901     		.uleb128 0xc9
 39263 1382b 47F30000 		.long	0xf347
 39264 1382f 00000000 		.quad	.LBB4265
 39264      00000000 
 39265 13837 00000000 		.long	.Ldebug_ranges0+0x1880
 39266 1383b 16       		.byte	0x16
 39267 1383c 3A       		.byte	0x3a
 39268 1383d 68380100 		.long	0x13868
 39269 13841 BE01     		.uleb128 0xbe
 39270 13843 60F30000 		.long	0xf360
 39271 13847 00000000 		.long	.LLST378
 39272 1384b AE01     		.uleb128 0xae
 39273 1384d 56F30000 		.long	0xf356
 39274 13851 C101     		.uleb128 0xc1
 39275 13853 00000000 		.quad	.LVL373
 39275      00000000 
 39276 1385b 4A290000 		.long	0x294a
 39277 1385f C201     		.uleb128 0xc2
 39278 13861 01       		.uleb128 0x1
 39279 13862 54       		.byte	0x54
 39280 13863 02       		.uleb128 0x2
 39281 13864 7E       		.byte	0x7e
 39282 13865 00       		.sleb128 0
 39283 13866 00       		.byte	0
 39284 13867 00       		.byte	0
 39285 13868 C901     		.uleb128 0xc9
 39286 1386a 20CB0000 		.long	0xcb20
 39287 1386e 00000000 		.quad	.LBB4268
 39287      00000000 
 39288 13876 00000000 		.long	.Ldebug_ranges0+0x18b0
 39289 1387a 16       		.byte	0x16
 39290 1387b 3A       		.byte	0x3a
 39291 1387c BF380100 		.long	0x138bf
 39292 13880 BE01     		.uleb128 0xbe
 39293 13882 41CB0000 		.long	0xcb41
GAS LISTING /tmp/ccJUMvuF.s 			page 999


 39294 13886 00000000 		.long	.LLST379
 39295 1388a BE01     		.uleb128 0xbe
 39296 1388c 34CB0000 		.long	0xcb34
 39297 13890 00000000 		.long	.LLST380
 39298 13894 C101     		.uleb128 0xc1
 39299 13896 00000000 		.quad	.LVL375
 39299      00000000 
 39300 1389e B5920000 		.long	0x92b5
 39301 138a2 C201     		.uleb128 0xc2
 39302 138a4 01       		.uleb128 0x1
 39303 138a5 55       		.byte	0x55
 39304 138a6 02       		.uleb128 0x2
 39305 138a7 7C       		.byte	0x7c
 39306 138a8 00       		.sleb128 0
 39307 138a9 C201     		.uleb128 0xc2
 39308 138ab 01       		.uleb128 0x1
 39309 138ac 54       		.byte	0x54
 39310 138ad 09       		.uleb128 0x9
 39311 138ae 03       		.byte	0x3
 39312 138af 00000000 		.quad	.LC25
 39312      00000000 
 39313 138b7 C201     		.uleb128 0xc2
 39314 138b9 01       		.uleb128 0x1
 39315 138ba 51       		.byte	0x51
 39316 138bb 01       		.uleb128 0x1
 39317 138bc 4D       		.byte	0x4d
 39318 138bd 00       		.byte	0
 39319 138be 00       		.byte	0
 39320 138bf CA01     		.uleb128 0xca
 39321 138c1 98CC0000 		.long	0xcc98
 39322 138c5 00000000 		.quad	.LBB4273
 39322      00000000 
 39323 138cd 08000000 		.quad	.LBE4273-.LBB4273
 39323      00000000 
 39324 138d5 16       		.byte	0x16
 39325 138d6 3A       		.byte	0x3a
 39326 138d7 21390100 		.long	0x13921
 39327 138db AE01     		.uleb128 0xae
 39328 138dd B1CC0000 		.long	0xccb1
 39329 138e1 AE01     		.uleb128 0xae
 39330 138e3 A7CC0000 		.long	0xcca7
 39331 138e7 CE01     		.uleb128 0xce
 39332 138e9 BADC0000 		.long	0xdcba
 39333 138ed 00000000 		.quad	.LBB4274
 39333      00000000 
 39334 138f5 08000000 		.quad	.LBE4274-.LBB4274
 39334      00000000 
 39335 138fd 09       		.byte	0x9
 39336 138fe 71       		.byte	0x71
 39337 138ff BE01     		.uleb128 0xbe
 39338 13901 D7DC0000 		.long	0xdcd7
 39339 13905 00000000 		.long	.LLST381
 39340 13909 C101     		.uleb128 0xc1
 39341 1390b 00000000 		.quad	.LVL376
 39341      00000000 
 39342 13913 76290000 		.long	0x2976
 39343 13917 C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 1000


 39344 13919 01       		.uleb128 0x1
 39345 1391a 55       		.byte	0x55
 39346 1391b 02       		.uleb128 0x2
 39347 1391c 7C       		.byte	0x7c
 39348 1391d 00       		.sleb128 0
 39349 1391e 00       		.byte	0
 39350 1391f 00       		.byte	0
 39351 13920 00       		.byte	0
 39352 13921 C401     		.uleb128 0xc4
 39353 13923 00000000 		.long	.Ldebug_ranges0+0x18e0
 39354 13927 104B0100 		.long	0x14b10
 39355 1392b DA01     		.uleb128 0xda
 39356 1392d 7400     		.string	"t"
 39357 1392f 16       		.byte	0x16
 39358 13930 3B       		.byte	0x3b
 39359 13931 C3C30000 		.long	0xc3c3
 39360 13935 03       		.uleb128 0x3
 39361 13936 91       		.byte	0x91
 39362 13937 E07E     		.sleb128 -160
 39363 13939 CA01     		.uleb128 0xca
 39364 1393b CAFC0000 		.long	0xfcca
 39365 1393f 00000000 		.quad	.LBB4277
 39365      00000000 
 39366 13947 89000000 		.quad	.LBE4277-.LBB4277
 39366      00000000 
 39367 1394f 16       		.byte	0x16
 39368 13950 3B       		.byte	0x3b
 39369 13951 F03B0100 		.long	0x13bf0
 39370 13955 BE01     		.uleb128 0xbe
 39371 13957 E3FC0000 		.long	0xfce3
 39372 1395b 00000000 		.long	.LLST382
 39373 1395f BE01     		.uleb128 0xbe
 39374 13961 D9FC0000 		.long	0xfcd9
 39375 13965 00000000 		.long	.LLST383
 39376 13969 C901     		.uleb128 0xc9
 39377 1396b 08010100 		.long	0x10108
 39378 1396f 00000000 		.quad	.LBB4279
 39378      00000000 
 39379 13977 00000000 		.long	.Ldebug_ranges0+0x1960
 39380 1397b 02       		.byte	0x2
 39381 1397c 37       		.byte	0x37
 39382 1397d E13B0100 		.long	0x13be1
 39383 13981 AE01     		.uleb128 0xae
 39384 13983 2E010100 		.long	0x1012e
 39385 13987 BE01     		.uleb128 0xbe
 39386 13989 21010100 		.long	0x10121
 39387 1398d 00000000 		.long	.LLST385
 39388 13991 BE01     		.uleb128 0xbe
 39389 13993 17010100 		.long	0x10117
 39390 13997 00000000 		.long	.LLST386
 39391 1399b C301     		.uleb128 0xc3
 39392 1399d 3EEE0000 		.long	0xee3e
 39393 139a1 00000000 		.quad	.LBB4280
 39393      00000000 
 39394 139a9 00000000 		.long	.Ldebug_ranges0+0x1990
 39395 139ad 06       		.byte	0x6
 39396 139ae 1601     		.value	0x116
GAS LISTING /tmp/ccJUMvuF.s 			page 1001


 39397 139b0 BC3A0100 		.long	0x13abc
 39398 139b4 AE01     		.uleb128 0xae
 39399 139b6 63EE0000 		.long	0xee63
 39400 139ba BE01     		.uleb128 0xbe
 39401 139bc 57EE0000 		.long	0xee57
 39402 139c0 00000000 		.long	.LLST385
 39403 139c4 BE01     		.uleb128 0xbe
 39404 139c6 4DEE0000 		.long	0xee4d
 39405 139ca 00000000 		.long	.LLST386
 39406 139ce C901     		.uleb128 0xc9
 39407 139d0 41010100 		.long	0x10141
 39408 139d4 00000000 		.quad	.LBB4281
 39408      00000000 
 39409 139dc 00000000 		.long	.Ldebug_ranges0+0x19d0
 39410 139e0 06       		.byte	0x6
 39411 139e1 88       		.byte	0x88
 39412 139e2 923A0100 		.long	0x13a92
 39413 139e6 BE01     		.uleb128 0xbe
 39414 139e8 5A010100 		.long	0x1015a
 39415 139ec 00000000 		.long	.LLST390
 39416 139f0 BE01     		.uleb128 0xbe
 39417 139f2 50010100 		.long	0x10150
 39418 139f6 00000000 		.long	.LLST391
 39419 139fa CB01     		.uleb128 0xcb
 39420 139fc 61E60000 		.long	0xe661
 39421 13a00 00000000 		.quad	.LBB4283
 39421      00000000 
 39422 13a08 00000000 		.long	.Ldebug_ranges0+0x1a10
 39423 13a0c 06       		.byte	0x6
 39424 13a0d B9       		.byte	0xb9
 39425 13a0e AE01     		.uleb128 0xae
 39426 13a10 70E60000 		.long	0xe670
 39427 13a14 BE01     		.uleb128 0xbe
 39428 13a16 7AE60000 		.long	0xe67a
 39429 13a1a 00000000 		.long	.LLST390
 39430 13a1e B601     		.uleb128 0xb6
 39431 13a20 00000000 		.long	.Ldebug_ranges0+0x1a10
 39432 13a24 CB01     		.uleb128 0xcb
 39433 13a26 36E60000 		.long	0xe636
 39434 13a2a 00000000 		.quad	.LBB4285
 39434      00000000 
 39435 13a32 00000000 		.long	.Ldebug_ranges0+0x1a10
 39436 13a36 06       		.byte	0x6
 39437 13a37 AA       		.byte	0xaa
 39438 13a38 AE01     		.uleb128 0xae
 39439 13a3a 41E60000 		.long	0xe641
 39440 13a3e BE01     		.uleb128 0xbe
 39441 13a40 4EE60000 		.long	0xe64e
 39442 13a44 00000000 		.long	.LLST390
 39443 13a48 CC01     		.uleb128 0xcc
 39444 13a4a 0BE60000 		.long	0xe60b
 39445 13a4e 00000000 		.quad	.LBB4286
 39445      00000000 
 39446 13a56 00000000 		.long	.Ldebug_ranges0+0x1a10
 39447 13a5a 2F       		.byte	0x2f
 39448 13a5b 6501     		.value	0x165
 39449 13a5d AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1002


 39450 13a5f 1AE60000 		.long	0xe61a
 39451 13a63 BE01     		.uleb128 0xbe
 39452 13a65 30E60000 		.long	0xe630
 39453 13a69 00000000 		.long	.LLST394
 39454 13a6d BE01     		.uleb128 0xbe
 39455 13a6f 24E60000 		.long	0xe624
 39456 13a73 00000000 		.long	.LLST390
 39457 13a77 C101     		.uleb128 0xc1
 39458 13a79 00000000 		.quad	.LVL380
 39458      00000000 
 39459 13a81 D46B0100 		.long	0x16bd4
 39460 13a85 C201     		.uleb128 0xc2
 39461 13a87 01       		.uleb128 0x1
 39462 13a88 55       		.byte	0x55
 39463 13a89 02       		.uleb128 0x2
 39464 13a8a 08       		.byte	0x8
 39465 13a8b 28       		.byte	0x28
 39466 13a8c 00       		.byte	0
 39467 13a8d 00       		.byte	0
 39468 13a8e 00       		.byte	0
 39469 13a8f 00       		.byte	0
 39470 13a90 00       		.byte	0
 39471 13a91 00       		.byte	0
 39472 13a92 CE01     		.uleb128 0xce
 39473 13a94 89E60000 		.long	0xe689
 39474 13a98 00000000 		.quad	.LBB4295
 39474      00000000 
 39475 13aa0 21000000 		.quad	.LBE4295-.LBB4295
 39475      00000000 
 39476 13aa8 06       		.byte	0x6
 39477 13aa9 87       		.byte	0x87
 39478 13aaa AE01     		.uleb128 0xae
 39479 13aac A2E60000 		.long	0xe6a2
 39480 13ab0 BE01     		.uleb128 0xbe
 39481 13ab2 98E60000 		.long	0xe698
 39482 13ab6 00000000 		.long	.LLST397
 39483 13aba 00       		.byte	0
 39484 13abb 00       		.byte	0
 39485 13abc CC01     		.uleb128 0xcc
 39486 13abe 75EE0000 		.long	0xee75
 39487 13ac2 00000000 		.quad	.LBB4300
 39487      00000000 
 39488 13aca 00000000 		.long	.Ldebug_ranges0+0x1a40
 39489 13ace 06       		.byte	0x6
 39490 13acf 1701     		.value	0x117
 39491 13ad1 BE01     		.uleb128 0xbe
 39492 13ad3 8EEE0000 		.long	0xee8e
 39493 13ad7 00000000 		.long	.LLST398
 39494 13adb BE01     		.uleb128 0xbe
 39495 13add 84EE0000 		.long	0xee84
 39496 13ae1 00000000 		.long	.LLST399
 39497 13ae5 CC01     		.uleb128 0xcc
 39498 13ae7 F3ED0000 		.long	0xedf3
 39499 13aeb 00000000 		.quad	.LBB4302
 39499      00000000 
 39500 13af3 00000000 		.long	.Ldebug_ranges0+0x1a70
 39501 13af7 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1003


 39502 13af8 1E05     		.value	0x51e
 39503 13afa AE01     		.uleb128 0xae
 39504 13afc 33EE0000 		.long	0xee33
 39505 13b00 BE01     		.uleb128 0xbe
 39506 13b02 26EE0000 		.long	0xee26
 39507 13b06 00000000 		.long	.LLST398
 39508 13b0a BE01     		.uleb128 0xbe
 39509 13b0c 19EE0000 		.long	0xee19
 39510 13b10 00000000 		.long	.LLST401
 39511 13b14 CC01     		.uleb128 0xcc
 39512 13b16 ABED0000 		.long	0xedab
 39513 13b1a 00000000 		.quad	.LBB4303
 39513      00000000 
 39514 13b22 00000000 		.long	.Ldebug_ranges0+0x1a70
 39515 13b26 2D       		.byte	0x2d
 39516 13b27 7702     		.value	0x277
 39517 13b29 AE01     		.uleb128 0xae
 39518 13b2b D5ED0000 		.long	0xedd5
 39519 13b2f AE01     		.uleb128 0xae
 39520 13b31 C8ED0000 		.long	0xedc8
 39521 13b35 B601     		.uleb128 0xb6
 39522 13b37 00000000 		.long	.Ldebug_ranges0+0x1a70
 39523 13b3b BA01     		.uleb128 0xba
 39524 13b3d E4ED0000 		.long	0xede4
 39525 13b41 CC01     		.uleb128 0xcc
 39526 13b43 71ED0000 		.long	0xed71
 39527 13b47 00000000 		.quad	.LBB4305
 39527      00000000 
 39528 13b4f 00000000 		.long	.Ldebug_ranges0+0x1a70
 39529 13b53 2D       		.byte	0x2d
 39530 13b54 3802     		.value	0x238
 39531 13b56 AE01     		.uleb128 0xae
 39532 13b58 9BED0000 		.long	0xed9b
 39533 13b5c AE01     		.uleb128 0xae
 39534 13b5e 8EED0000 		.long	0xed8e
 39535 13b62 B601     		.uleb128 0xb6
 39536 13b64 00000000 		.long	.Ldebug_ranges0+0x1a70
 39537 13b68 CC01     		.uleb128 0xcc
 39538 13b6a 1EED0000 		.long	0xed1e
 39539 13b6e 00000000 		.quad	.LBB4307
 39539      00000000 
 39540 13b76 00000000 		.long	.Ldebug_ranges0+0x1a70
 39541 13b7a 2D       		.byte	0x2d
 39542 13b7b 1702     		.value	0x217
 39543 13b7d AE01     		.uleb128 0xae
 39544 13b7f 5EED0000 		.long	0xed5e
 39545 13b83 AE01     		.uleb128 0xae
 39546 13b85 51ED0000 		.long	0xed51
 39547 13b89 AE01     		.uleb128 0xae
 39548 13b8b 44ED0000 		.long	0xed44
 39549 13b8f CC01     		.uleb128 0xcc
 39550 13b91 B4E60000 		.long	0xe6b4
 39551 13b95 00000000 		.quad	.LBB4308
 39551      00000000 
 39552 13b9d 00000000 		.long	.Ldebug_ranges0+0x1a70
 39553 13ba1 14       		.byte	0x14
 39554 13ba2 1D03     		.value	0x31d
GAS LISTING /tmp/ccJUMvuF.s 			page 1004


 39555 13ba4 AE01     		.uleb128 0xae
 39556 13ba6 F4E60000 		.long	0xe6f4
 39557 13baa AE01     		.uleb128 0xae
 39558 13bac E7E60000 		.long	0xe6e7
 39559 13bb0 BE01     		.uleb128 0xbe
 39560 13bb2 DAE60000 		.long	0xe6da
 39561 13bb6 00000000 		.long	.LLST402
 39562 13bba B601     		.uleb128 0xb6
 39563 13bbc 00000000 		.long	.Ldebug_ranges0+0x1a70
 39564 13bc0 BA01     		.uleb128 0xba
 39565 13bc2 03E70000 		.long	0xe703
 39566 13bc6 B601     		.uleb128 0xb6
 39567 13bc8 00000000 		.long	.Ldebug_ranges0+0x1a70
 39568 13bcc BB01     		.uleb128 0xbb
 39569 13bce 12E70000 		.long	0xe712
 39570 13bd2 00000000 		.long	.LLST403
 39571 13bd6 00       		.byte	0
 39572 13bd7 00       		.byte	0
 39573 13bd8 00       		.byte	0
 39574 13bd9 00       		.byte	0
 39575 13bda 00       		.byte	0
 39576 13bdb 00       		.byte	0
 39577 13bdc 00       		.byte	0
 39578 13bdd 00       		.byte	0
 39579 13bde 00       		.byte	0
 39580 13bdf 00       		.byte	0
 39581 13be0 00       		.byte	0
 39582 13be1 CF01     		.uleb128 0xcf
 39583 13be3 00000000 		.quad	.LVL377
 39583      00000000 
 39584 13beb D3020100 		.long	0x102d3
 39585 13bef 00       		.byte	0
 39586 13bf0 C901     		.uleb128 0xc9
 39587 13bf2 67010100 		.long	0x10167
 39588 13bf6 00000000 		.quad	.LBB4324
 39588      00000000 
 39589 13bfe 00000000 		.long	.Ldebug_ranges0+0x1aa0
 39590 13c02 16       		.byte	0x16
 39591 13c03 3B       		.byte	0x3b
 39592 13c04 6D3C0100 		.long	0x13c6d
 39593 13c08 BE01     		.uleb128 0xbe
 39594 13c0a 76010100 		.long	0x10176
 39595 13c0e 00000000 		.long	.LLST404
 39596 13c12 B601     		.uleb128 0xb6
 39597 13c14 00000000 		.long	.Ldebug_ranges0+0x1aa0
 39598 13c18 BA01     		.uleb128 0xba
 39599 13c1a 82010100 		.long	0x10182
 39600 13c1e CA01     		.uleb128 0xca
 39601 13c20 46D40000 		.long	0xd446
 39602 13c24 00000000 		.quad	.LBB4326
 39602      00000000 
 39603 13c2c 15000000 		.quad	.LBE4326-.LBB4326
 39603      00000000 
 39604 13c34 02       		.byte	0x2
 39605 13c35 39       		.byte	0x39
 39606 13c36 4F3C0100 		.long	0x13c4f
 39607 13c3a BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1005


 39608 13c3c 5FD40000 		.long	0xd45f
 39609 13c40 00000000 		.long	.LLST405
 39610 13c44 BE01     		.uleb128 0xbe
 39611 13c46 55D40000 		.long	0xd455
 39612 13c4a 00000000 		.long	.LLST406
 39613 13c4e 00       		.byte	0
 39614 13c4f CF01     		.uleb128 0xcf
 39615 13c51 00000000 		.quad	.LVL390
 39615      00000000 
 39616 13c59 D3020100 		.long	0x102d3
 39617 13c5d CF01     		.uleb128 0xcf
 39618 13c5f 00000000 		.quad	.LVL392
 39618      00000000 
 39619 13c67 D3020100 		.long	0x102d3
 39620 13c6b 00       		.byte	0
 39621 13c6c 00       		.byte	0
 39622 13c6d C901     		.uleb128 0xc9
 39623 13c6f 90010100 		.long	0x10190
 39624 13c73 00000000 		.quad	.LBB4330
 39624      00000000 
 39625 13c7b 00000000 		.long	.Ldebug_ranges0+0x1ad0
 39626 13c7f 16       		.byte	0x16
 39627 13c80 3D       		.byte	0x3d
 39628 13c81 DB4A0100 		.long	0x14adb
 39629 13c85 BE01     		.uleb128 0xbe
 39630 13c87 9F010100 		.long	0x1019f
 39631 13c8b 00000000 		.long	.LLST407
 39632 13c8f C401     		.uleb128 0xc4
 39633 13c91 00000000 		.long	.Ldebug_ranges0+0x1b50
 39634 13c95 D8490100 		.long	0x149d8
 39635 13c99 BB01     		.uleb128 0xbb
 39636 13c9b B5010100 		.long	0x101b5
 39637 13c9f 00000000 		.long	.LLST408
 39638 13ca3 BB01     		.uleb128 0xbb
 39639 13ca5 C1010100 		.long	0x101c1
 39640 13ca9 00000000 		.long	.LLST409
 39641 13cad CA01     		.uleb128 0xca
 39642 13caf 7BFA0000 		.long	0xfa7b
 39643 13cb3 00000000 		.quad	.LBB4333
 39643      00000000 
 39644 13cbb 30000000 		.quad	.LBE4333-.LBB4333
 39644      00000000 
 39645 13cc3 02       		.byte	0x2
 39646 13cc4 42       		.byte	0x42
 39647 13cc5 E43C0100 		.long	0x13ce4
 39648 13cc9 BE01     		.uleb128 0xbe
 39649 13ccb B0FA0000 		.long	0xfab0
 39650 13ccf 00000000 		.long	.LLST410
 39651 13cd3 AE01     		.uleb128 0xae
 39652 13cd5 A4FA0000 		.long	0xfaa4
 39653 13cd9 BE01     		.uleb128 0xbe
 39654 13cdb 98FA0000 		.long	0xfa98
 39655 13cdf 00000000 		.long	.LLST411
 39656 13ce3 00       		.byte	0
 39657 13ce4 C901     		.uleb128 0xc9
 39658 13ce6 BDFA0000 		.long	0xfabd
 39659 13cea 00000000 		.quad	.LBB4335
GAS LISTING /tmp/ccJUMvuF.s 			page 1006


 39659      00000000 
 39660 13cf2 00000000 		.long	.Ldebug_ranges0+0x1bd0
 39661 13cf6 02       		.byte	0x2
 39662 13cf7 45       		.byte	0x45
 39663 13cf8 A7430100 		.long	0x143a7
 39664 13cfc BE01     		.uleb128 0xbe
 39665 13cfe DEFA0000 		.long	0xfade
 39666 13d02 00000000 		.long	.LLST412
 39667 13d06 BE01     		.uleb128 0xbe
 39668 13d08 D1FA0000 		.long	0xfad1
 39669 13d0c 00000000 		.long	.LLST413
 39670 13d10 CC01     		.uleb128 0xcc
 39671 13d12 2FFA0000 		.long	0xfa2f
 39672 13d16 00000000 		.quad	.LBB4336
 39672      00000000 
 39673 13d1e 00000000 		.long	.Ldebug_ranges0+0x1bd0
 39674 13d22 0D       		.byte	0xd
 39675 13d23 4D12     		.value	0x124d
 39676 13d25 BE01     		.uleb128 0xbe
 39677 13d27 59FA0000 		.long	0xfa59
 39678 13d2b 00000000 		.long	.LLST412
 39679 13d2f BE01     		.uleb128 0xbe
 39680 13d31 4CFA0000 		.long	0xfa4c
 39681 13d35 00000000 		.long	.LLST413
 39682 13d39 C301     		.uleb128 0xc3
 39683 13d3b 16FA0000 		.long	0xfa16
 39684 13d3f 00000000 		.quad	.LBB4338
 39684      00000000 
 39685 13d47 00000000 		.long	.Ldebug_ranges0+0x1c40
 39686 13d4b 0D       		.byte	0xd
 39687 13d4c B007     		.value	0x7b0
 39688 13d4e 593D0100 		.long	0x13d59
 39689 13d52 AE01     		.uleb128 0xae
 39690 13d54 21FA0000 		.long	0xfa21
 39691 13d58 00       		.byte	0
 39692 13d59 C301     		.uleb128 0xc3
 39693 13d5b 61F00000 		.long	0xf061
 39694 13d5f 00000000 		.quad	.LBB4344
 39694      00000000 
 39695 13d67 00000000 		.long	.Ldebug_ranges0+0x1c80
 39696 13d6b 0D       		.byte	0xd
 39697 13d6c B207     		.value	0x7b2
 39698 13d6e 45430100 		.long	0x14345
 39699 13d72 AE01     		.uleb128 0xae
 39700 13d74 8BF00000 		.long	0xf08b
 39701 13d78 BE01     		.uleb128 0xbe
 39702 13d7a 7EF00000 		.long	0xf07e
 39703 13d7e 00000000 		.long	.LLST416
 39704 13d82 C301     		.uleb128 0xc3
 39705 13d84 CF010100 		.long	0x101cf
 39706 13d88 00000000 		.quad	.LBB4346
 39706      00000000 
 39707 13d90 00000000 		.long	.Ldebug_ranges0+0x1ce0
 39708 13d94 0D       		.byte	0xd
 39709 13d95 5C07     		.value	0x75c
 39710 13d97 0A400100 		.long	0x1400a
 39711 13d9b AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1007


 39712 13d9d 06020100 		.long	0x10206
 39713 13da1 BE01     		.uleb128 0xbe
 39714 13da3 F9010100 		.long	0x101f9
 39715 13da7 00000000 		.long	.LLST417
 39716 13dab BE01     		.uleb128 0xbe
 39717 13dad EC010100 		.long	0x101ec
 39718 13db1 00000000 		.long	.LLST418
 39719 13db5 B601     		.uleb128 0xb6
 39720 13db7 00000000 		.long	.Ldebug_ranges0+0x1ce0
 39721 13dbb BB01     		.uleb128 0xbb
 39722 13dbd 15020100 		.long	0x10215
 39723 13dc1 00000000 		.long	.LLST419
 39724 13dc5 C501     		.uleb128 0xc5
 39725 13dc7 79E80000 		.long	0xe879
 39726 13dcb 00000000 		.quad	.LBB4348
 39726      00000000 
 39727 13dd3 24000000 		.quad	.LBE4348-.LBB4348
 39727      00000000 
 39728 13ddb 0D       		.byte	0xd
 39729 13ddc 3407     		.value	0x734
 39730 13dde F73D0100 		.long	0x13df7
 39731 13de2 BE01     		.uleb128 0xbe
 39732 13de4 92E80000 		.long	0xe892
 39733 13de8 00000000 		.long	.LLST420
 39734 13dec BE01     		.uleb128 0xbe
 39735 13dee 88E80000 		.long	0xe888
 39736 13df2 00000000 		.long	.LLST421
 39737 13df6 00       		.byte	0
 39738 13df7 C501     		.uleb128 0xc5
 39739 13df9 82E20000 		.long	0xe282
 39740 13dfd 00000000 		.quad	.LBB4351
 39740      00000000 
 39741 13e05 04000000 		.quad	.LBE4351-.LBB4351
 39741      00000000 
 39742 13e0d 0D       		.byte	0xd
 39743 13e0e 3607     		.value	0x736
 39744 13e10 2B3E0100 		.long	0x13e2b
 39745 13e14 BE01     		.uleb128 0xbe
 39746 13e16 A3E20000 		.long	0xe2a3
 39747 13e1a 00000000 		.long	.LLST422
 39748 13e1e AE01     		.uleb128 0xae
 39749 13e20 B9E20000 		.long	0xe2b9
 39750 13e24 AE01     		.uleb128 0xae
 39751 13e26 ADE20000 		.long	0xe2ad
 39752 13e2a 00       		.byte	0
 39753 13e2b C301     		.uleb128 0xc3
 39754 13e2d 09E50000 		.long	0xe509
 39755 13e31 00000000 		.quad	.LBB4353
 39755      00000000 
 39756 13e39 00000000 		.long	.Ldebug_ranges0+0x1d20
 39757 13e3d 0D       		.byte	0xd
 39758 13e3e 3E07     		.value	0x73e
 39759 13e40 BA3E0100 		.long	0x13eba
 39760 13e44 BE01     		.uleb128 0xbe
 39761 13e46 26E50000 		.long	0xe526
 39762 13e4a 00000000 		.long	.LLST423
 39763 13e4e B601     		.uleb128 0xb6
GAS LISTING /tmp/ccJUMvuF.s 			page 1008


 39764 13e50 00000000 		.long	.Ldebug_ranges0+0x1d20
 39765 13e54 BB01     		.uleb128 0xbb
 39766 13e56 42E50000 		.long	0xe542
 39767 13e5a 00000000 		.long	.LLST424
 39768 13e5e BA01     		.uleb128 0xba
 39769 13e60 4FE50000 		.long	0xe54f
 39770 13e64 C301     		.uleb128 0xc3
 39771 13e66 74E40000 		.long	0xe474
 39772 13e6a 00000000 		.quad	.LBB4355
 39772      00000000 
 39773 13e72 00000000 		.long	.Ldebug_ranges0+0x1d50
 39774 13e76 0D       		.byte	0xd
 39775 13e77 2307     		.value	0x723
 39776 13e79 943E0100 		.long	0x13e94
 39777 13e7d AE01     		.uleb128 0xae
 39778 13e7f 95E40000 		.long	0xe495
 39779 13e83 BE01     		.uleb128 0xbe
 39780 13e85 9FE40000 		.long	0xe49f
 39781 13e89 00000000 		.long	.LLST425
 39782 13e8d AE01     		.uleb128 0xae
 39783 13e8f ABE40000 		.long	0xe4ab
 39784 13e93 00       		.byte	0
 39785 13e94 B801     		.uleb128 0xb8
 39786 13e96 EFE40000 		.long	0xe4ef
 39787 13e9a 00000000 		.quad	.LBB4358
 39787      00000000 
 39788 13ea2 04000000 		.quad	.LBE4358-.LBB4358
 39788      00000000 
 39789 13eaa 0D       		.byte	0xd
 39790 13eab 2707     		.value	0x727
 39791 13ead BE01     		.uleb128 0xbe
 39792 13eaf FEE40000 		.long	0xe4fe
 39793 13eb3 00000000 		.long	.LLST426
 39794 13eb7 00       		.byte	0
 39795 13eb8 00       		.byte	0
 39796 13eb9 00       		.byte	0
 39797 13eba B901     		.uleb128 0xb9
 39798 13ebc 00000000 		.quad	.LBB4362
 39798      00000000 
 39799 13ec4 45000000 		.quad	.LBE4362-.LBB4362
 39799      00000000 
 39800 13ecc BB01     		.uleb128 0xbb
 39801 13ece 24020100 		.long	0x10224
 39802 13ed2 00000000 		.long	.LLST427
 39803 13ed6 B801     		.uleb128 0xb8
 39804 13ed8 1CF00000 		.long	0xf01c
 39805 13edc 00000000 		.quad	.LBB4363
 39805      00000000 
 39806 13ee4 3B000000 		.quad	.LBE4363-.LBB4363
 39806      00000000 
 39807 13eec 0D       		.byte	0xd
 39808 13eed 3A07     		.value	0x73a
 39809 13eef AE01     		.uleb128 0xae
 39810 13ef1 53F00000 		.long	0xf053
 39811 13ef5 AE01     		.uleb128 0xae
 39812 13ef7 46F00000 		.long	0xf046
 39813 13efb AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1009


 39814 13efd 39F00000 		.long	0xf039
 39815 13f01 B801     		.uleb128 0xb8
 39816 13f03 8BEF0000 		.long	0xef8b
 39817 13f07 00000000 		.quad	.LBB4364
 39817      00000000 
 39818 13f0f 3B000000 		.quad	.LBE4364-.LBB4364
 39818      00000000 
 39819 13f17 14       		.byte	0x14
 39820 13f18 A602     		.value	0x2a6
 39821 13f1a AE01     		.uleb128 0xae
 39822 13f1c CCEF0000 		.long	0xefcc
 39823 13f20 AE01     		.uleb128 0xae
 39824 13f22 BFEF0000 		.long	0xefbf
 39825 13f26 AE01     		.uleb128 0xae
 39826 13f28 B2EF0000 		.long	0xefb2
 39827 13f2c B801     		.uleb128 0xb8
 39828 13f2e 0AEF0000 		.long	0xef0a
 39829 13f32 00000000 		.quad	.LBB4365
 39829      00000000 
 39830 13f3a 3B000000 		.quad	.LBE4365-.LBB4365
 39830      00000000 
 39831 13f42 14       		.byte	0x14
 39832 13f43 5F02     		.value	0x25f
 39833 13f45 BE01     		.uleb128 0xbe
 39834 13f47 4BEF0000 		.long	0xef4b
 39835 13f4b 00000000 		.long	.LLST428
 39836 13f4f BE01     		.uleb128 0xbe
 39837 13f51 3EEF0000 		.long	0xef3e
 39838 13f55 00000000 		.long	.LLST429
 39839 13f59 BE01     		.uleb128 0xbe
 39840 13f5b 31EF0000 		.long	0xef31
 39841 13f5f 00000000 		.long	.LLST430
 39842 13f63 B901     		.uleb128 0xb9
 39843 13f65 00000000 		.quad	.LBB4366
 39843      00000000 
 39844 13f6d 3B000000 		.quad	.LBE4366-.LBB4366
 39844      00000000 
 39845 13f75 BB01     		.uleb128 0xbb
 39846 13f77 5AEF0000 		.long	0xef5a
 39847 13f7b 00000000 		.long	.LLST431
 39848 13f7f B801     		.uleb128 0xb8
 39849 13f81 34020100 		.long	0x10234
 39850 13f85 00000000 		.quad	.LBB4367
 39850      00000000 
 39851 13f8d 3B000000 		.quad	.LBE4367-.LBB4367
 39851      00000000 
 39852 13f95 14       		.byte	0x14
 39853 13f96 5602     		.value	0x256
 39854 13f98 BE01     		.uleb128 0xbe
 39855 13f9a 62020100 		.long	0x10262
 39856 13f9e 00000000 		.long	.LLST428
 39857 13fa2 BE01     		.uleb128 0xbe
 39858 13fa4 55020100 		.long	0x10255
 39859 13fa8 00000000 		.long	.LLST429
 39860 13fac BE01     		.uleb128 0xbe
 39861 13fae 48020100 		.long	0x10248
 39862 13fb2 00000000 		.long	.LLST430
GAS LISTING /tmp/ccJUMvuF.s 			page 1010


 39863 13fb6 B901     		.uleb128 0xb9
 39864 13fb8 00000000 		.quad	.LBB4368
 39864      00000000 
 39865 13fc0 3B000000 		.quad	.LBE4368-.LBB4368
 39865      00000000 
 39866 13fc8 BB01     		.uleb128 0xbb
 39867 13fca 71020100 		.long	0x10271
 39868 13fce 00000000 		.long	.LLST435
 39869 13fd2 C101     		.uleb128 0xc1
 39870 13fd4 00000000 		.quad	.LVL580
 39870      00000000 
 39871 13fdc 166C0100 		.long	0x16c16
 39872 13fe0 C201     		.uleb128 0xc2
 39873 13fe2 01       		.uleb128 0x1
 39874 13fe3 55       		.byte	0x55
 39875 13fe4 06       		.uleb128 0x6
 39876 13fe5 91       		.byte	0x91
 39877 13fe6 807E     		.sleb128 -256
 39878 13fe8 06       		.byte	0x6
 39879 13fe9 23       		.byte	0x23
 39880 13fea 08       		.uleb128 0x8
 39881 13feb C201     		.uleb128 0xc2
 39882 13fed 01       		.uleb128 0x1
 39883 13fee 54       		.byte	0x54
 39884 13fef 04       		.uleb128 0x4
 39885 13ff0 91       		.byte	0x91
 39886 13ff1 807E     		.sleb128 -256
 39887 13ff3 06       		.byte	0x6
 39888 13ff4 C201     		.uleb128 0xc2
 39889 13ff6 01       		.uleb128 0x1
 39890 13ff7 51       		.byte	0x51
 39891 13ff8 07       		.uleb128 0x7
 39892 13ff9 73       		.byte	0x73
 39893 13ffa 00       		.sleb128 0
 39894 13ffb 91       		.byte	0x91
 39895 13ffc 807E     		.sleb128 -256
 39896 13ffe 06       		.byte	0x6
 39897 13fff 1C       		.byte	0x1c
 39898 14000 00       		.byte	0
 39899 14001 00       		.byte	0
 39900 14002 00       		.byte	0
 39901 14003 00       		.byte	0
 39902 14004 00       		.byte	0
 39903 14005 00       		.byte	0
 39904 14006 00       		.byte	0
 39905 14007 00       		.byte	0
 39906 14008 00       		.byte	0
 39907 14009 00       		.byte	0
 39908 1400a C301     		.uleb128 0xc3
 39909 1400c 5EE50000 		.long	0xe55e
 39910 14010 00000000 		.quad	.LBB4374
 39910      00000000 
 39911 14018 00000000 		.long	.Ldebug_ranges0+0x1d80
 39912 1401c 0D       		.byte	0xd
 39913 1401d 5D07     		.value	0x75d
 39914 1401f C8400100 		.long	0x140c8
 39915 14023 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1011


 39916 14025 88E50000 		.long	0xe588
 39917 14029 AE01     		.uleb128 0xae
 39918 1402b 7BE50000 		.long	0xe57b
 39919 1402f B601     		.uleb128 0xb6
 39920 14031 00000000 		.long	.Ldebug_ranges0+0x1d80
 39921 14035 BA01     		.uleb128 0xba
 39922 14037 A4E50000 		.long	0xe5a4
 39923 1403b CC01     		.uleb128 0xcc
 39924 1403d 09E50000 		.long	0xe509
 39925 14041 00000000 		.quad	.LBB4376
 39925      00000000 
 39926 14049 00000000 		.long	.Ldebug_ranges0+0x1db0
 39927 1404d 0D       		.byte	0xd
 39928 1404e 4A07     		.value	0x74a
 39929 14050 BE01     		.uleb128 0xbe
 39930 14052 26E50000 		.long	0xe526
 39931 14056 00000000 		.long	.LLST436
 39932 1405a B601     		.uleb128 0xb6
 39933 1405c 00000000 		.long	.Ldebug_ranges0+0x1db0
 39934 14060 BB01     		.uleb128 0xbb
 39935 14062 42E50000 		.long	0xe542
 39936 14066 00000000 		.long	.LLST437
 39937 1406a BA01     		.uleb128 0xba
 39938 1406c 4FE50000 		.long	0xe54f
 39939 14070 C301     		.uleb128 0xc3
 39940 14072 74E40000 		.long	0xe474
 39941 14076 00000000 		.quad	.LBB4378
 39941      00000000 
 39942 1407e 00000000 		.long	.Ldebug_ranges0+0x1df0
 39943 14082 0D       		.byte	0xd
 39944 14083 2307     		.value	0x723
 39945 14085 A0400100 		.long	0x140a0
 39946 14089 AE01     		.uleb128 0xae
 39947 1408b 95E40000 		.long	0xe495
 39948 1408f BE01     		.uleb128 0xbe
 39949 14091 9FE40000 		.long	0xe49f
 39950 14095 00000000 		.long	.LLST438
 39951 14099 AE01     		.uleb128 0xae
 39952 1409b ABE40000 		.long	0xe4ab
 39953 1409f 00       		.byte	0
 39954 140a0 B801     		.uleb128 0xb8
 39955 140a2 EFE40000 		.long	0xe4ef
 39956 140a6 00000000 		.quad	.LBB4381
 39956      00000000 
 39957 140ae 04000000 		.quad	.LBE4381-.LBB4381
 39957      00000000 
 39958 140b6 0D       		.byte	0xd
 39959 140b7 2707     		.value	0x727
 39960 140b9 BE01     		.uleb128 0xbe
 39961 140bb FEE40000 		.long	0xe4fe
 39962 140bf 00000000 		.long	.LLST439
 39963 140c3 00       		.byte	0
 39964 140c4 00       		.byte	0
 39965 140c5 00       		.byte	0
 39966 140c6 00       		.byte	0
 39967 140c7 00       		.byte	0
 39968 140c8 CC01     		.uleb128 0xcc
GAS LISTING /tmp/ccJUMvuF.s 			page 1012


 39969 140ca CF010100 		.long	0x101cf
 39970 140ce 00000000 		.quad	.LBB4390
 39970      00000000 
 39971 140d6 00000000 		.long	.Ldebug_ranges0+0x1e20
 39972 140da 0D       		.byte	0xd
 39973 140db 6107     		.value	0x761
 39974 140dd AE01     		.uleb128 0xae
 39975 140df 06020100 		.long	0x10206
 39976 140e3 BE01     		.uleb128 0xbe
 39977 140e5 F9010100 		.long	0x101f9
 39978 140e9 00000000 		.long	.LLST440
 39979 140ed BE01     		.uleb128 0xbe
 39980 140ef EC010100 		.long	0x101ec
 39981 140f3 00000000 		.long	.LLST441
 39982 140f7 B601     		.uleb128 0xb6
 39983 140f9 00000000 		.long	.Ldebug_ranges0+0x1e20
 39984 140fd BB01     		.uleb128 0xbb
 39985 140ff 15020100 		.long	0x10215
 39986 14103 00000000 		.long	.LLST442
 39987 14107 C501     		.uleb128 0xc5
 39988 14109 79E80000 		.long	0xe879
 39989 1410d 00000000 		.quad	.LBB4392
 39989      00000000 
 39990 14115 05000000 		.quad	.LBE4392-.LBB4392
 39990      00000000 
 39991 1411d 0D       		.byte	0xd
 39992 1411e 3407     		.value	0x734
 39993 14120 39410100 		.long	0x14139
 39994 14124 BE01     		.uleb128 0xbe
 39995 14126 92E80000 		.long	0xe892
 39996 1412a 00000000 		.long	.LLST443
 39997 1412e BE01     		.uleb128 0xbe
 39998 14130 88E80000 		.long	0xe888
 39999 14134 00000000 		.long	.LLST444
 40000 14138 00       		.byte	0
 40001 14139 C501     		.uleb128 0xc5
 40002 1413b 82E20000 		.long	0xe282
 40003 1413f 00000000 		.quad	.LBB4395
 40003      00000000 
 40004 14147 06000000 		.quad	.LBE4395-.LBB4395
 40004      00000000 
 40005 1414f 0D       		.byte	0xd
 40006 14150 3607     		.value	0x736
 40007 14152 6D410100 		.long	0x1416d
 40008 14156 BE01     		.uleb128 0xbe
 40009 14158 A3E20000 		.long	0xe2a3
 40010 1415c 00000000 		.long	.LLST445
 40011 14160 AE01     		.uleb128 0xae
 40012 14162 B9E20000 		.long	0xe2b9
 40013 14166 AE01     		.uleb128 0xae
 40014 14168 ADE20000 		.long	0xe2ad
 40015 1416c 00       		.byte	0
 40016 1416d C301     		.uleb128 0xc3
 40017 1416f 09E50000 		.long	0xe509
 40018 14173 00000000 		.quad	.LBB4397
 40018      00000000 
 40019 1417b 00000000 		.long	.Ldebug_ranges0+0x1e50
GAS LISTING /tmp/ccJUMvuF.s 			page 1013


 40020 1417f 0D       		.byte	0xd
 40021 14180 3E07     		.value	0x73e
 40022 14182 FC410100 		.long	0x141fc
 40023 14186 BE01     		.uleb128 0xbe
 40024 14188 26E50000 		.long	0xe526
 40025 1418c 00000000 		.long	.LLST446
 40026 14190 B601     		.uleb128 0xb6
 40027 14192 00000000 		.long	.Ldebug_ranges0+0x1e50
 40028 14196 BB01     		.uleb128 0xbb
 40029 14198 42E50000 		.long	0xe542
 40030 1419c 00000000 		.long	.LLST447
 40031 141a0 BA01     		.uleb128 0xba
 40032 141a2 4FE50000 		.long	0xe54f
 40033 141a6 C301     		.uleb128 0xc3
 40034 141a8 74E40000 		.long	0xe474
 40035 141ac 00000000 		.quad	.LBB4399
 40035      00000000 
 40036 141b4 00000000 		.long	.Ldebug_ranges0+0x1e80
 40037 141b8 0D       		.byte	0xd
 40038 141b9 2307     		.value	0x723
 40039 141bb D6410100 		.long	0x141d6
 40040 141bf AE01     		.uleb128 0xae
 40041 141c1 95E40000 		.long	0xe495
 40042 141c5 BE01     		.uleb128 0xbe
 40043 141c7 9FE40000 		.long	0xe49f
 40044 141cb 00000000 		.long	.LLST448
 40045 141cf AE01     		.uleb128 0xae
 40046 141d1 ABE40000 		.long	0xe4ab
 40047 141d5 00       		.byte	0
 40048 141d6 B801     		.uleb128 0xb8
 40049 141d8 EFE40000 		.long	0xe4ef
 40050 141dc 00000000 		.quad	.LBB4402
 40050      00000000 
 40051 141e4 04000000 		.quad	.LBE4402-.LBB4402
 40051      00000000 
 40052 141ec 0D       		.byte	0xd
 40053 141ed 2707     		.value	0x727
 40054 141ef BE01     		.uleb128 0xbe
 40055 141f1 FEE40000 		.long	0xe4fe
 40056 141f5 00000000 		.long	.LLST449
 40057 141f9 00       		.byte	0
 40058 141fa 00       		.byte	0
 40059 141fb 00       		.byte	0
 40060 141fc B901     		.uleb128 0xb9
 40061 141fe 00000000 		.quad	.LBB4406
 40061      00000000 
 40062 14206 37000000 		.quad	.LBE4406-.LBB4406
 40062      00000000 
 40063 1420e BB01     		.uleb128 0xbb
 40064 14210 24020100 		.long	0x10224
 40065 14214 00000000 		.long	.LLST450
 40066 14218 B801     		.uleb128 0xb8
 40067 1421a 1CF00000 		.long	0xf01c
 40068 1421e 00000000 		.quad	.LBB4407
 40068      00000000 
 40069 14226 31000000 		.quad	.LBE4407-.LBB4407
 40069      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1014


 40070 1422e 0D       		.byte	0xd
 40071 1422f 3A07     		.value	0x73a
 40072 14231 AE01     		.uleb128 0xae
 40073 14233 53F00000 		.long	0xf053
 40074 14237 AE01     		.uleb128 0xae
 40075 14239 46F00000 		.long	0xf046
 40076 1423d AE01     		.uleb128 0xae
 40077 1423f 39F00000 		.long	0xf039
 40078 14243 B801     		.uleb128 0xb8
 40079 14245 8BEF0000 		.long	0xef8b
 40080 14249 00000000 		.quad	.LBB4408
 40080      00000000 
 40081 14251 31000000 		.quad	.LBE4408-.LBB4408
 40081      00000000 
 40082 14259 14       		.byte	0x14
 40083 1425a A602     		.value	0x2a6
 40084 1425c AE01     		.uleb128 0xae
 40085 1425e CCEF0000 		.long	0xefcc
 40086 14262 AE01     		.uleb128 0xae
 40087 14264 BFEF0000 		.long	0xefbf
 40088 14268 AE01     		.uleb128 0xae
 40089 1426a B2EF0000 		.long	0xefb2
 40090 1426e B801     		.uleb128 0xb8
 40091 14270 0AEF0000 		.long	0xef0a
 40092 14274 00000000 		.quad	.LBB4409
 40092      00000000 
 40093 1427c 31000000 		.quad	.LBE4409-.LBB4409
 40093      00000000 
 40094 14284 14       		.byte	0x14
 40095 14285 5F02     		.value	0x25f
 40096 14287 BE01     		.uleb128 0xbe
 40097 14289 4BEF0000 		.long	0xef4b
 40098 1428d 00000000 		.long	.LLST451
 40099 14291 BE01     		.uleb128 0xbe
 40100 14293 3EEF0000 		.long	0xef3e
 40101 14297 00000000 		.long	.LLST452
 40102 1429b BE01     		.uleb128 0xbe
 40103 1429d 31EF0000 		.long	0xef31
 40104 142a1 00000000 		.long	.LLST453
 40105 142a5 B901     		.uleb128 0xb9
 40106 142a7 00000000 		.quad	.LBB4410
 40106      00000000 
 40107 142af 31000000 		.quad	.LBE4410-.LBB4410
 40107      00000000 
 40108 142b7 BB01     		.uleb128 0xbb
 40109 142b9 5AEF0000 		.long	0xef5a
 40110 142bd 00000000 		.long	.LLST454
 40111 142c1 B801     		.uleb128 0xb8
 40112 142c3 34020100 		.long	0x10234
 40113 142c7 00000000 		.quad	.LBB4411
 40113      00000000 
 40114 142cf 31000000 		.quad	.LBE4411-.LBB4411
 40114      00000000 
 40115 142d7 14       		.byte	0x14
 40116 142d8 5602     		.value	0x256
 40117 142da BE01     		.uleb128 0xbe
 40118 142dc 62020100 		.long	0x10262
GAS LISTING /tmp/ccJUMvuF.s 			page 1015


 40119 142e0 00000000 		.long	.LLST451
 40120 142e4 BE01     		.uleb128 0xbe
 40121 142e6 55020100 		.long	0x10255
 40122 142ea 00000000 		.long	.LLST452
 40123 142ee BE01     		.uleb128 0xbe
 40124 142f0 48020100 		.long	0x10248
 40125 142f4 00000000 		.long	.LLST453
 40126 142f8 B901     		.uleb128 0xb9
 40127 142fa 00000000 		.quad	.LBB4412
 40127      00000000 
 40128 14302 31000000 		.quad	.LBE4412-.LBB4412
 40128      00000000 
 40129 1430a BB01     		.uleb128 0xbb
 40130 1430c 71020100 		.long	0x10271
 40131 14310 00000000 		.long	.LLST458
 40132 14314 C101     		.uleb128 0xc1
 40133 14316 00000000 		.quad	.LVL621
 40133      00000000 
 40134 1431e 166C0100 		.long	0x16c16
 40135 14322 C201     		.uleb128 0xc2
 40136 14324 01       		.uleb128 0x1
 40137 14325 55       		.byte	0x55
 40138 14326 02       		.uleb128 0x2
 40139 14327 73       		.byte	0x73
 40140 14328 08       		.sleb128 8
 40141 14329 C201     		.uleb128 0xc2
 40142 1432b 01       		.uleb128 0x1
 40143 1432c 54       		.byte	0x54
 40144 1432d 02       		.uleb128 0x2
 40145 1432e 73       		.byte	0x73
 40146 1432f 00       		.sleb128 0
 40147 14330 C201     		.uleb128 0xc2
 40148 14332 01       		.uleb128 0x1
 40149 14333 51       		.byte	0x51
 40150 14334 05       		.uleb128 0x5
 40151 14335 7C       		.byte	0x7c
 40152 14336 00       		.sleb128 0
 40153 14337 73       		.byte	0x73
 40154 14338 00       		.sleb128 0
 40155 14339 1C       		.byte	0x1c
 40156 1433a 00       		.byte	0
 40157 1433b 00       		.byte	0
 40158 1433c 00       		.byte	0
 40159 1433d 00       		.byte	0
 40160 1433e 00       		.byte	0
 40161 1433f 00       		.byte	0
 40162 14340 00       		.byte	0
 40163 14341 00       		.byte	0
 40164 14342 00       		.byte	0
 40165 14343 00       		.byte	0
 40166 14344 00       		.byte	0
 40167 14345 C101     		.uleb128 0xc1
 40168 14347 00000000 		.quad	.LVL402
 40168      00000000 
 40169 1434f 041E0100 		.long	0x11e04
 40170 14353 C201     		.uleb128 0xc2
 40171 14355 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1016


 40172 14356 55       		.byte	0x55
 40173 14357 02       		.uleb128 0x2
 40174 14358 7C       		.byte	0x7c
 40175 14359 00       		.sleb128 0
 40176 1435a C201     		.uleb128 0xc2
 40177 1435c 01       		.uleb128 0x1
 40178 1435d 54       		.byte	0x54
 40179 1435e 04       		.uleb128 0x4
 40180 1435f 91       		.byte	0x91
 40181 14360 807E     		.sleb128 -256
 40182 14362 06       		.byte	0x6
 40183 14363 C201     		.uleb128 0xc2
 40184 14365 01       		.uleb128 0x1
 40185 14366 51       		.byte	0x51
 40186 14367 3C       		.uleb128 0x3c
 40187 14368 08       		.byte	0x8
 40188 14369 3F       		.byte	0x3f
 40189 1436a 08       		.byte	0x8
 40190 1436b 3F       		.byte	0x3f
 40191 1436c 91       		.byte	0x91
 40192 1436d 987E     		.sleb128 -232
 40193 1436f 06       		.byte	0x6
 40194 14370 33       		.byte	0x33
 40195 14371 26       		.byte	0x26
 40196 14372 12       		.byte	0x12
 40197 14373 28       		.byte	0x28
 40198 14374 0600     		.value	0x6
 40199 14376 13       		.byte	0x13
 40200 14377 08       		.byte	0x8
 40201 14378 40       		.byte	0x40
 40202 14379 2F       		.byte	0x2f
 40203 1437a 1A00     		.value	0x1a
 40204 1437c 30       		.byte	0x30
 40205 1437d 16       		.byte	0x16
 40206 1437e 12       		.byte	0x12
 40207 1437f 0E       		.byte	0xe
 40208 14380 00000000 		.quad	0x8000000000000000
 40208      00000080 
 40209 14388 1A       		.byte	0x1a
 40210 14389 28       		.byte	0x28
 40211 1438a 0900     		.value	0x9
 40212 1438c 31       		.byte	0x31
 40213 1438d 24       		.byte	0x24
 40214 1438e 16       		.byte	0x16
 40215 1438f 23       		.byte	0x23
 40216 14390 01       		.uleb128 0x1
 40217 14391 16       		.byte	0x16
 40218 14392 2F       		.byte	0x2f
 40219 14393 E9FF     		.value	0xffe9
 40220 14395 13       		.byte	0x13
 40221 14396 96       		.byte	0x96
 40222 14397 1C       		.byte	0x1c
 40223 14398 08       		.byte	0x8
 40224 14399 3F       		.byte	0x3f
 40225 1439a 27       		.byte	0x27
 40226 1439b 08       		.byte	0x8
 40227 1439c 20       		.byte	0x20
GAS LISTING /tmp/ccJUMvuF.s 			page 1017


 40228 1439d 24       		.byte	0x24
 40229 1439e 08       		.byte	0x8
 40230 1439f 20       		.byte	0x20
 40231 143a0 26       		.byte	0x26
 40232 143a1 1C       		.byte	0x1c
 40233 143a2 31       		.byte	0x31
 40234 143a3 24       		.byte	0x24
 40235 143a4 00       		.byte	0
 40236 143a5 00       		.byte	0
 40237 143a6 00       		.byte	0
 40238 143a7 C901     		.uleb128 0xc9
 40239 143a9 10CD0000 		.long	0xcd10
 40240 143ad 00000000 		.quad	.LBB4439
 40240      00000000 
 40241 143b5 00000000 		.long	.Ldebug_ranges0+0x1eb0
 40242 143b9 02       		.byte	0x2
 40243 143ba 46       		.byte	0x46
 40244 143bb D4430100 		.long	0x143d4
 40245 143bf BE01     		.uleb128 0xbe
 40246 143c1 1FCD0000 		.long	0xcd1f
 40247 143c5 00000000 		.long	.LLST459
 40248 143c9 BE01     		.uleb128 0xbe
 40249 143cb 1FCD0000 		.long	0xcd1f
 40250 143cf 00000000 		.long	.LLST459
 40251 143d3 00       		.byte	0
 40252 143d4 C901     		.uleb128 0xc9
 40253 143d6 20CB0000 		.long	0xcb20
 40254 143da 00000000 		.quad	.LBB4442
 40254      00000000 
 40255 143e2 00000000 		.long	.Ldebug_ranges0+0x1ee0
 40256 143e6 02       		.byte	0x2
 40257 143e7 47       		.byte	0x47
 40258 143e8 20440100 		.long	0x14420
 40259 143ec AE01     		.uleb128 0xae
 40260 143ee 34CB0000 		.long	0xcb34
 40261 143f2 BE01     		.uleb128 0xbe
 40262 143f4 41CB0000 		.long	0xcb41
 40263 143f8 00000000 		.long	.LLST461
 40264 143fc C101     		.uleb128 0xc1
 40265 143fe 00000000 		.quad	.LVL433
 40265      00000000 
 40266 14406 B5920000 		.long	0x92b5
 40267 1440a C201     		.uleb128 0xc2
 40268 1440c 01       		.uleb128 0x1
 40269 1440d 54       		.byte	0x54
 40270 1440e 09       		.uleb128 0x9
 40271 1440f 03       		.byte	0x3
 40272 14410 00000000 		.quad	.LC14
 40272      00000000 
 40273 14418 C201     		.uleb128 0xc2
 40274 1441a 01       		.uleb128 0x1
 40275 1441b 51       		.byte	0x51
 40276 1441c 01       		.uleb128 0x1
 40277 1441d 44       		.byte	0x44
 40278 1441e 00       		.byte	0
 40279 1441f 00       		.byte	0
 40280 14420 C901     		.uleb128 0xc9
GAS LISTING /tmp/ccJUMvuF.s 			page 1018


 40281 14422 02FB0000 		.long	0xfb02
 40282 14426 00000000 		.quad	.LBB4449
 40282      00000000 
 40283 1442e 00000000 		.long	.Ldebug_ranges0+0x1f20
 40284 14432 02       		.byte	0x2
 40285 14433 47       		.byte	0x47
 40286 14434 77450100 		.long	0x14577
 40287 14438 AE01     		.uleb128 0xae
 40288 1443a 1BFB0000 		.long	0xfb1b
 40289 1443e AE01     		.uleb128 0xae
 40290 14440 11FB0000 		.long	0xfb11
 40291 14444 CE01     		.uleb128 0xce
 40292 14446 80020100 		.long	0x10280
 40293 1444a 00000000 		.quad	.LBB4451
 40293      00000000 
 40294 14452 0E000000 		.quad	.LBE4451-.LBB4451
 40294      00000000 
 40295 1445a 09       		.byte	0x9
 40296 1445b 84       		.byte	0x84
 40297 1445c BE01     		.uleb128 0xbe
 40298 1445e 8B020100 		.long	0x1028b
 40299 14462 00000000 		.long	.LLST462
 40300 14466 B801     		.uleb128 0xb8
 40301 14468 D0CB0000 		.long	0xcbd0
 40302 1446c 00000000 		.quad	.LBB4452
 40302      00000000 
 40303 14474 0E000000 		.quad	.LBE4452-.LBB4452
 40303      00000000 
 40304 1447c 15       		.byte	0x15
 40305 1447d C003     		.value	0x3c0
 40306 1447f BE01     		.uleb128 0xbe
 40307 14481 F6CB0000 		.long	0xcbf6
 40308 14485 00000000 		.long	.LLST463
 40309 14489 BE01     		.uleb128 0xbe
 40310 1448b E9CB0000 		.long	0xcbe9
 40311 1448f 00000000 		.long	.LLST464
 40312 14493 BE01     		.uleb128 0xbe
 40313 14495 DFCB0000 		.long	0xcbdf
 40314 14499 00000000 		.long	.LLST462
 40315 1449d B901     		.uleb128 0xb9
 40316 1449f 00000000 		.quad	.LBB4453
 40316      00000000 
 40317 144a7 0E000000 		.quad	.LBE4453-.LBB4453
 40317      00000000 
 40318 144af BB01     		.uleb128 0xbb
 40319 144b1 05CC0000 		.long	0xcc05
 40320 144b5 00000000 		.long	.LLST466
 40321 144b9 C501     		.uleb128 0xc5
 40322 144bb 78CB0000 		.long	0xcb78
 40323 144bf 00000000 		.quad	.LBB4454
 40323      00000000 
 40324 144c7 08000000 		.quad	.LBE4454-.LBB4454
 40324      00000000 
 40325 144cf 15       		.byte	0x15
 40326 144d0 5602     		.value	0x256
 40327 144d2 18450100 		.long	0x14518
 40328 144d6 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1019


 40329 144d8 8FCB0000 		.long	0xcb8f
 40330 144dc 00000000 		.long	.LLST467
 40331 144e0 BE01     		.uleb128 0xbe
 40332 144e2 83CB0000 		.long	0xcb83
 40333 144e6 00000000 		.long	.LLST468
 40334 144ea CE01     		.uleb128 0xce
 40335 144ec 8ECA0000 		.long	0xca8e
 40336 144f0 00000000 		.quad	.LBB4455
 40336      00000000 
 40337 144f8 08000000 		.quad	.LBE4455-.LBB4455
 40337      00000000 
 40338 14500 15       		.byte	0x15
 40339 14501 60       		.byte	0x60
 40340 14502 BE01     		.uleb128 0xbe
 40341 14504 A5CA0000 		.long	0xcaa5
 40342 14508 00000000 		.long	.LLST467
 40343 1450c BE01     		.uleb128 0xbe
 40344 1450e 99CA0000 		.long	0xca99
 40345 14512 00000000 		.long	.LLST466
 40346 14516 00       		.byte	0
 40347 14517 00       		.byte	0
 40348 14518 B801     		.uleb128 0xb8
 40349 1451a A1CB0000 		.long	0xcba1
 40350 1451e 00000000 		.quad	.LBB4457
 40350      00000000 
 40351 14526 06000000 		.quad	.LBE4457-.LBB4457
 40351      00000000 
 40352 1452e 15       		.byte	0x15
 40353 1452f 5702     		.value	0x257
 40354 14531 BE01     		.uleb128 0xbe
 40355 14533 B8CB0000 		.long	0xcbb8
 40356 14537 00000000 		.long	.LLST464
 40357 1453b BE01     		.uleb128 0xbe
 40358 1453d ACCB0000 		.long	0xcbac
 40359 14541 00000000 		.long	.LLST468
 40360 14545 CE01     		.uleb128 0xce
 40361 14547 6ACA0000 		.long	0xca6a
 40362 1454b 00000000 		.quad	.LBB4459
 40362      00000000 
 40363 14553 06000000 		.quad	.LBE4459-.LBB4459
 40363      00000000 
 40364 1455b 15       		.byte	0x15
 40365 1455c 5C       		.byte	0x5c
 40366 1455d BE01     		.uleb128 0xbe
 40367 1455f 81CA0000 		.long	0xca81
 40368 14563 00000000 		.long	.LLST464
 40369 14567 BE01     		.uleb128 0xbe
 40370 14569 75CA0000 		.long	0xca75
 40371 1456d 00000000 		.long	.LLST474
 40372 14571 00       		.byte	0
 40373 14572 00       		.byte	0
 40374 14573 00       		.byte	0
 40375 14574 00       		.byte	0
 40376 14575 00       		.byte	0
 40377 14576 00       		.byte	0
 40378 14577 C901     		.uleb128 0xc9
 40379 14579 57CC0000 		.long	0xcc57
GAS LISTING /tmp/ccJUMvuF.s 			page 1020


 40380 1457d 00000000 		.quad	.LBB4463
 40380      00000000 
 40381 14585 00000000 		.long	.Ldebug_ranges0+0x1f60
 40382 14589 02       		.byte	0x2
 40383 1458a 47       		.byte	0x47
 40384 1458b C6450100 		.long	0x145c6
 40385 1458f BE01     		.uleb128 0xbe
 40386 14591 70CC0000 		.long	0xcc70
 40387 14595 00000000 		.long	.LLST475
 40388 14599 AE01     		.uleb128 0xae
 40389 1459b 66CC0000 		.long	0xcc66
 40390 1459f C101     		.uleb128 0xc1
 40391 145a1 00000000 		.quad	.LVL438
 40391      00000000 
 40392 145a9 94290000 		.long	0x2994
 40393 145ad C201     		.uleb128 0xc2
 40394 145af 01       		.uleb128 0x1
 40395 145b0 61       		.byte	0x61
 40396 145b1 12       		.uleb128 0x12
 40397 145b2 91       		.byte	0x91
 40398 145b3 807E     		.sleb128 -256
 40399 145b5 F6       		.byte	0xf6
 40400 145b6 08       		.byte	0x8
 40401 145b7 29       		.uleb128 0x29
 40402 145b8 F4       		.byte	0xf4
 40403 145b9 29       		.uleb128 0x29
 40404 145ba 08       		.byte	0x8
 40405 145bb 00000000 		.long	0
 40406 145bf 00408F40 		.long	0x408f4000
 40407 145c3 1E       		.byte	0x1e
 40408 145c4 00       		.byte	0
 40409 145c5 00       		.byte	0
 40410 145c6 C901     		.uleb128 0xc9
 40411 145c8 20CB0000 		.long	0xcb20
 40412 145cc 00000000 		.quad	.LBB4470
 40412      00000000 
 40413 145d4 00000000 		.long	.Ldebug_ranges0+0x1fa0
 40414 145d8 02       		.byte	0x2
 40415 145d9 47       		.byte	0x47
 40416 145da 1D460100 		.long	0x1461d
 40417 145de BE01     		.uleb128 0xbe
 40418 145e0 41CB0000 		.long	0xcb41
 40419 145e4 00000000 		.long	.LLST476
 40420 145e8 BE01     		.uleb128 0xbe
 40421 145ea 34CB0000 		.long	0xcb34
 40422 145ee 00000000 		.long	.LLST477
 40423 145f2 C101     		.uleb128 0xc1
 40424 145f4 00000000 		.quad	.LVL440
 40424      00000000 
 40425 145fc B5920000 		.long	0x92b5
 40426 14600 C201     		.uleb128 0xc2
 40427 14602 01       		.uleb128 0x1
 40428 14603 55       		.byte	0x55
 40429 14604 02       		.uleb128 0x2
 40430 14605 7C       		.byte	0x7c
 40431 14606 00       		.sleb128 0
 40432 14607 C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 1021


 40433 14609 01       		.uleb128 0x1
 40434 1460a 54       		.byte	0x54
 40435 1460b 09       		.uleb128 0x9
 40436 1460c 03       		.byte	0x3
 40437 1460d 00000000 		.quad	.LC15
 40437      00000000 
 40438 14615 C201     		.uleb128 0xc2
 40439 14617 01       		.uleb128 0x1
 40440 14618 51       		.byte	0x51
 40441 14619 01       		.uleb128 0x1
 40442 1461a 3B       		.byte	0x3b
 40443 1461b 00       		.byte	0
 40444 1461c 00       		.byte	0
 40445 1461d C901     		.uleb128 0xc9
 40446 1461f 57CC0000 		.long	0xcc57
 40447 14623 00000000 		.quad	.LBB4475
 40447      00000000 
 40448 1462b 00000000 		.long	.Ldebug_ranges0+0x1fd0
 40449 1462f 02       		.byte	0x2
 40450 14630 47       		.byte	0x47
 40451 14631 73460100 		.long	0x14673
 40452 14635 BE01     		.uleb128 0xbe
 40453 14637 70CC0000 		.long	0xcc70
 40454 1463b 00000000 		.long	.LLST478
 40455 1463f AE01     		.uleb128 0xae
 40456 14641 66CC0000 		.long	0xcc66
 40457 14645 C101     		.uleb128 0xc1
 40458 14647 00000000 		.quad	.LVL443
 40458      00000000 
 40459 1464f 94290000 		.long	0x2994
 40460 14653 C201     		.uleb128 0xc2
 40461 14655 01       		.uleb128 0x1
 40462 14656 55       		.byte	0x55
 40463 14657 02       		.uleb128 0x2
 40464 14658 7C       		.byte	0x7c
 40465 14659 00       		.sleb128 0
 40466 1465a C201     		.uleb128 0xc2
 40467 1465c 01       		.uleb128 0x1
 40468 1465d 61       		.byte	0x61
 40469 1465e 12       		.uleb128 0x12
 40470 1465f 91       		.byte	0x91
 40471 14660 887E     		.sleb128 -248
 40472 14662 F6       		.byte	0xf6
 40473 14663 08       		.byte	0x8
 40474 14664 29       		.uleb128 0x29
 40475 14665 F4       		.byte	0xf4
 40476 14666 29       		.uleb128 0x29
 40477 14667 08       		.byte	0x8
 40478 14668 00000000 		.long	0
 40479 1466c 00408F40 		.long	0x408f4000
 40480 14670 1E       		.byte	0x1e
 40481 14671 00       		.byte	0
 40482 14672 00       		.byte	0
 40483 14673 C901     		.uleb128 0xc9
 40484 14675 20CB0000 		.long	0xcb20
 40485 14679 00000000 		.quad	.LBB4480
 40485      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1022


 40486 14681 00000000 		.long	.Ldebug_ranges0+0x2010
 40487 14685 02       		.byte	0x2
 40488 14686 47       		.byte	0x47
 40489 14687 CA460100 		.long	0x146ca
 40490 1468b BE01     		.uleb128 0xbe
 40491 1468d 41CB0000 		.long	0xcb41
 40492 14691 00000000 		.long	.LLST479
 40493 14695 BE01     		.uleb128 0xbe
 40494 14697 34CB0000 		.long	0xcb34
 40495 1469b 00000000 		.long	.LLST480
 40496 1469f C101     		.uleb128 0xc1
 40497 146a1 00000000 		.quad	.LVL445
 40497      00000000 
 40498 146a9 B5920000 		.long	0x92b5
 40499 146ad C201     		.uleb128 0xc2
 40500 146af 01       		.uleb128 0x1
 40501 146b0 55       		.byte	0x55
 40502 146b1 02       		.uleb128 0x2
 40503 146b2 7C       		.byte	0x7c
 40504 146b3 00       		.sleb128 0
 40505 146b4 C201     		.uleb128 0xc2
 40506 146b6 01       		.uleb128 0x1
 40507 146b7 54       		.byte	0x54
 40508 146b8 09       		.uleb128 0x9
 40509 146b9 03       		.byte	0x3
 40510 146ba 00000000 		.quad	.LC16
 40510      00000000 
 40511 146c2 C201     		.uleb128 0xc2
 40512 146c4 01       		.uleb128 0x1
 40513 146c5 51       		.byte	0x51
 40514 146c6 01       		.uleb128 0x1
 40515 146c7 31       		.byte	0x31
 40516 146c8 00       		.byte	0
 40517 146c9 00       		.byte	0
 40518 146ca C901     		.uleb128 0xc9
 40519 146cc 98CC0000 		.long	0xcc98
 40520 146d0 00000000 		.quad	.LBB4485
 40520      00000000 
 40521 146d8 00000000 		.long	.Ldebug_ranges0+0x2040
 40522 146dc 02       		.byte	0x2
 40523 146dd 47       		.byte	0x47
 40524 146de 41480100 		.long	0x14841
 40525 146e2 AE01     		.uleb128 0xae
 40526 146e4 B1CC0000 		.long	0xccb1
 40527 146e8 AE01     		.uleb128 0xae
 40528 146ea A7CC0000 		.long	0xcca7
 40529 146ee CB01     		.uleb128 0xcb
 40530 146f0 47FE0000 		.long	0xfe47
 40531 146f4 00000000 		.quad	.LBB4486
 40531      00000000 
 40532 146fc 00000000 		.long	.Ldebug_ranges0+0x2040
 40533 14700 09       		.byte	0x9
 40534 14701 71       		.byte	0x71
 40535 14702 BE01     		.uleb128 0xbe
 40536 14704 64FE0000 		.long	0xfe64
 40537 14708 00000000 		.long	.LLST481
 40538 1470c C301     		.uleb128 0xc3
GAS LISTING /tmp/ccJUMvuF.s 			page 1023


 40539 1470e A3FC0000 		.long	0xfca3
 40540 14712 00000000 		.quad	.LBB4488
 40540      00000000 
 40541 1471a 00000000 		.long	.Ldebug_ranges0+0x2080
 40542 1471e 09       		.byte	0x9
 40543 1471f 3502     		.value	0x235
 40544 14721 F3470100 		.long	0x147f3
 40545 14725 BE01     		.uleb128 0xbe
 40546 14727 BCFC0000 		.long	0xfcbc
 40547 1472b 00000000 		.long	.LLST482
 40548 1472f BE01     		.uleb128 0xbe
 40549 14731 B2FC0000 		.long	0xfcb2
 40550 14735 00000000 		.long	.LLST483
 40551 14739 C301     		.uleb128 0xc3
 40552 1473b 99DC0000 		.long	0xdc99
 40553 1473f 00000000 		.quad	.LBB4490
 40553      00000000 
 40554 14747 00000000 		.long	.Ldebug_ranges0+0x20c0
 40555 1474b 0E       		.byte	0xe
 40556 1474c BC01     		.value	0x1bc
 40557 1474e 6B470100 		.long	0x1476b
 40558 14752 BE01     		.uleb128 0xbe
 40559 14754 ADDC0000 		.long	0xdcad
 40560 14758 00000000 		.long	.LLST484
 40561 1475c CF01     		.uleb128 0xcf
 40562 1475e 00000000 		.quad	.LVL679
 40562      00000000 
 40563 14766 F5920000 		.long	0x92f5
 40564 1476a 00       		.byte	0
 40565 1476b CC01     		.uleb128 0xcc
 40566 1476d 1FCC0000 		.long	0xcc1f
 40567 14771 00000000 		.quad	.LBB4493
 40567      00000000 
 40568 14779 00000000 		.long	.Ldebug_ranges0+0x20f0
 40569 1477d 0E       		.byte	0xe
 40570 1477e BC01     		.value	0x1bc
 40571 14780 BE01     		.uleb128 0xbe
 40572 14782 38CC0000 		.long	0xcc38
 40573 14786 00000000 		.long	.LLST485
 40574 1478a BE01     		.uleb128 0xbe
 40575 1478c 2ECC0000 		.long	0xcc2e
 40576 14790 00000000 		.long	.LLST486
 40577 14794 B901     		.uleb128 0xb9
 40578 14796 00000000 		.quad	.LBB4495
 40578      00000000 
 40579 1479e 38000000 		.quad	.LBE4495-.LBB4495
 40579      00000000 
 40580 147a6 BE01     		.uleb128 0xbe
 40581 147a8 38CC0000 		.long	0xcc38
 40582 147ac 00000000 		.long	.LLST487
 40583 147b0 BE01     		.uleb128 0xbe
 40584 147b2 2ECC0000 		.long	0xcc2e
 40585 147b6 00000000 		.long	.LLST488
 40586 147ba C601     		.uleb128 0xc6
 40587 147bc 00000000 		.quad	.LVL627
 40587      00000000 
 40588 147c4 652A0000 		.long	0x2a65
GAS LISTING /tmp/ccJUMvuF.s 			page 1024


 40589 147c8 D6470100 		.long	0x147d6
 40590 147cc C201     		.uleb128 0xc2
 40591 147ce 01       		.uleb128 0x1
 40592 147cf 55       		.byte	0x55
 40593 147d0 04       		.uleb128 0x4
 40594 147d1 91       		.byte	0x91
 40595 147d2 987E     		.sleb128 -232
 40596 147d4 06       		.byte	0x6
 40597 147d5 00       		.byte	0
 40598 147d6 D001     		.uleb128 0xd0
 40599 147d8 00000000 		.quad	.LVL628
 40599      00000000 
 40600 147e0 C201     		.uleb128 0xc2
 40601 147e2 01       		.uleb128 0x1
 40602 147e3 55       		.byte	0x55
 40603 147e4 04       		.uleb128 0x4
 40604 147e5 91       		.byte	0x91
 40605 147e6 987E     		.sleb128 -232
 40606 147e8 06       		.byte	0x6
 40607 147e9 C201     		.uleb128 0xc2
 40608 147eb 01       		.uleb128 0x1
 40609 147ec 54       		.byte	0x54
 40610 147ed 01       		.uleb128 0x1
 40611 147ee 3A       		.byte	0x3a
 40612 147ef 00       		.byte	0
 40613 147f0 00       		.byte	0
 40614 147f1 00       		.byte	0
 40615 147f2 00       		.byte	0
 40616 147f3 C501     		.uleb128 0xc5
 40617 147f5 BADC0000 		.long	0xdcba
 40618 147f9 00000000 		.quad	.LBB4502
 40618      00000000 
 40619 14801 08000000 		.quad	.LBE4502-.LBB4502
 40619      00000000 
 40620 14809 09       		.byte	0x9
 40621 1480a 3502     		.value	0x235
 40622 1480c 29480100 		.long	0x14829
 40623 14810 BE01     		.uleb128 0xbe
 40624 14812 D7DC0000 		.long	0xdcd7
 40625 14816 00000000 		.long	.LLST489
 40626 1481a CF01     		.uleb128 0xcf
 40627 1481c 00000000 		.quad	.LVL450
 40627      00000000 
 40628 14824 76290000 		.long	0x2976
 40629 14828 00       		.byte	0
 40630 14829 C101     		.uleb128 0xc1
 40631 1482b 00000000 		.quad	.LVL449
 40631      00000000 
 40632 14833 C0290000 		.long	0x29c0
 40633 14837 C201     		.uleb128 0xc2
 40634 14839 01       		.uleb128 0x1
 40635 1483a 55       		.byte	0x55
 40636 1483b 02       		.uleb128 0x2
 40637 1483c 7C       		.byte	0x7c
 40638 1483d 00       		.sleb128 0
 40639 1483e 00       		.byte	0
 40640 1483f 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1025


 40641 14840 00       		.byte	0
 40642 14841 CA01     		.uleb128 0xca
 40643 14843 20CB0000 		.long	0xcb20
 40644 14847 00000000 		.quad	.LBB4510
 40644      00000000 
 40645 1484f 14000000 		.quad	.LBE4510-.LBB4510
 40645      00000000 
 40646 14857 02       		.byte	0x2
 40647 14858 48       		.byte	0x48
 40648 14859 98480100 		.long	0x14898
 40649 1485d AE01     		.uleb128 0xae
 40650 1485f 34CB0000 		.long	0xcb34
 40651 14863 BE01     		.uleb128 0xbe
 40652 14865 41CB0000 		.long	0xcb41
 40653 14869 00000000 		.long	.LLST490
 40654 1486d C101     		.uleb128 0xc1
 40655 1486f 00000000 		.quad	.LVL451
 40655      00000000 
 40656 14877 B5920000 		.long	0x92b5
 40657 1487b C201     		.uleb128 0xc2
 40658 1487d 01       		.uleb128 0x1
 40659 1487e 55       		.byte	0x55
 40660 1487f 02       		.uleb128 0x2
 40661 14880 7F       		.byte	0x7f
 40662 14881 00       		.sleb128 0
 40663 14882 C201     		.uleb128 0xc2
 40664 14884 01       		.uleb128 0x1
 40665 14885 54       		.byte	0x54
 40666 14886 09       		.uleb128 0x9
 40667 14887 03       		.byte	0x3
 40668 14888 00000000 		.quad	.LC17
 40668      00000000 
 40669 14890 C201     		.uleb128 0xc2
 40670 14892 01       		.uleb128 0x1
 40671 14893 51       		.byte	0x51
 40672 14894 01       		.uleb128 0x1
 40673 14895 38       		.byte	0x38
 40674 14896 00       		.byte	0
 40675 14897 00       		.byte	0
 40676 14898 C901     		.uleb128 0xc9
 40677 1489a 57CC0000 		.long	0xcc57
 40678 1489e 00000000 		.quad	.LBB4512
 40678      00000000 
 40679 148a6 00000000 		.long	.Ldebug_ranges0+0x2120
 40680 148aa 02       		.byte	0x2
 40681 148ab 48       		.byte	0x48
 40682 148ac E2480100 		.long	0x148e2
 40683 148b0 BE01     		.uleb128 0xbe
 40684 148b2 70CC0000 		.long	0xcc70
 40685 148b6 00000000 		.long	.LLST491
 40686 148ba AE01     		.uleb128 0xae
 40687 148bc 66CC0000 		.long	0xcc66
 40688 148c0 C101     		.uleb128 0xc1
 40689 148c2 00000000 		.quad	.LVL452
 40689      00000000 
 40690 148ca 94290000 		.long	0x2994
 40691 148ce C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 1026


 40692 148d0 01       		.uleb128 0x1
 40693 148d1 55       		.byte	0x55
 40694 148d2 02       		.uleb128 0x2
 40695 148d3 7F       		.byte	0x7f
 40696 148d4 00       		.sleb128 0
 40697 148d5 C201     		.uleb128 0xc2
 40698 148d7 01       		.uleb128 0x1
 40699 148d8 61       		.byte	0x61
 40700 148d9 06       		.uleb128 0x6
 40701 148da 91       		.byte	0x91
 40702 148db 807E     		.sleb128 -256
 40703 148dd F6       		.byte	0xf6
 40704 148de 08       		.byte	0x8
 40705 148df 29       		.uleb128 0x29
 40706 148e0 00       		.byte	0
 40707 148e1 00       		.byte	0
 40708 148e2 C901     		.uleb128 0xc9
 40709 148e4 20CB0000 		.long	0xcb20
 40710 148e8 00000000 		.quad	.LBB4515
 40710      00000000 
 40711 148f0 00000000 		.long	.Ldebug_ranges0+0x2150
 40712 148f4 02       		.byte	0x2
 40713 148f5 48       		.byte	0x48
 40714 148f6 39490100 		.long	0x14939
 40715 148fa BE01     		.uleb128 0xbe
 40716 148fc 41CB0000 		.long	0xcb41
 40717 14900 00000000 		.long	.LLST492
 40718 14904 BE01     		.uleb128 0xbe
 40719 14906 34CB0000 		.long	0xcb34
 40720 1490a 00000000 		.long	.LLST493
 40721 1490e C101     		.uleb128 0xc1
 40722 14910 00000000 		.quad	.LVL454
 40722      00000000 
 40723 14918 B5920000 		.long	0x92b5
 40724 1491c C201     		.uleb128 0xc2
 40725 1491e 01       		.uleb128 0x1
 40726 1491f 55       		.byte	0x55
 40727 14920 02       		.uleb128 0x2
 40728 14921 7C       		.byte	0x7c
 40729 14922 00       		.sleb128 0
 40730 14923 C201     		.uleb128 0xc2
 40731 14925 01       		.uleb128 0x1
 40732 14926 54       		.byte	0x54
 40733 14927 09       		.uleb128 0x9
 40734 14928 03       		.byte	0x3
 40735 14929 00000000 		.quad	.LC18
 40735      00000000 
 40736 14931 C201     		.uleb128 0xc2
 40737 14933 01       		.uleb128 0x1
 40738 14934 51       		.byte	0x51
 40739 14935 01       		.uleb128 0x1
 40740 14936 3A       		.byte	0x3a
 40741 14937 00       		.byte	0
 40742 14938 00       		.byte	0
 40743 14939 CA01     		.uleb128 0xca
 40744 1493b 57CC0000 		.long	0xcc57
 40745 1493f 00000000 		.quad	.LBB4520
GAS LISTING /tmp/ccJUMvuF.s 			page 1027


 40745      00000000 
 40746 14947 0E000000 		.quad	.LBE4520-.LBB4520
 40746      00000000 
 40747 1494f 02       		.byte	0x2
 40748 14950 48       		.byte	0x48
 40749 14951 87490100 		.long	0x14987
 40750 14955 BE01     		.uleb128 0xbe
 40751 14957 70CC0000 		.long	0xcc70
 40752 1495b 00000000 		.long	.LLST494
 40753 1495f AE01     		.uleb128 0xae
 40754 14961 66CC0000 		.long	0xcc66
 40755 14965 C101     		.uleb128 0xc1
 40756 14967 00000000 		.quad	.LVL455
 40756      00000000 
 40757 1496f 94290000 		.long	0x2994
 40758 14973 C201     		.uleb128 0xc2
 40759 14975 01       		.uleb128 0x1
 40760 14976 55       		.byte	0x55
 40761 14977 02       		.uleb128 0x2
 40762 14978 7C       		.byte	0x7c
 40763 14979 00       		.sleb128 0
 40764 1497a C201     		.uleb128 0xc2
 40765 1497c 01       		.uleb128 0x1
 40766 1497d 61       		.byte	0x61
 40767 1497e 06       		.uleb128 0x6
 40768 1497f 91       		.byte	0x91
 40769 14980 887E     		.sleb128 -248
 40770 14982 F6       		.byte	0xf6
 40771 14983 08       		.byte	0x8
 40772 14984 29       		.uleb128 0x29
 40773 14985 00       		.byte	0
 40774 14986 00       		.byte	0
 40775 14987 CE01     		.uleb128 0xce
 40776 14989 20CB0000 		.long	0xcb20
 40777 1498d 00000000 		.quad	.LBB4522
 40777      00000000 
 40778 14995 14000000 		.quad	.LBE4522-.LBB4522
 40778      00000000 
 40779 1499d 02       		.byte	0x2
 40780 1499e 48       		.byte	0x48
 40781 1499f BE01     		.uleb128 0xbe
 40782 149a1 41CB0000 		.long	0xcb41
 40783 149a5 00000000 		.long	.LLST495
 40784 149a9 BE01     		.uleb128 0xbe
 40785 149ab 34CB0000 		.long	0xcb34
 40786 149af 00000000 		.long	.LLST496
 40787 149b3 C101     		.uleb128 0xc1
 40788 149b5 00000000 		.quad	.LVL456
 40788      00000000 
 40789 149bd B5920000 		.long	0x92b5
 40790 149c1 C201     		.uleb128 0xc2
 40791 149c3 01       		.uleb128 0x1
 40792 149c4 54       		.byte	0x54
 40793 149c5 09       		.uleb128 0x9
 40794 149c6 03       		.byte	0x3
 40795 149c7 00000000 		.quad	.LC19
 40795      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1028


 40796 149cf C201     		.uleb128 0xc2
 40797 149d1 01       		.uleb128 0x1
 40798 149d2 51       		.byte	0x51
 40799 149d3 01       		.uleb128 0x1
 40800 149d4 31       		.byte	0x31
 40801 149d5 00       		.byte	0
 40802 149d6 00       		.byte	0
 40803 149d7 00       		.byte	0
 40804 149d8 CE01     		.uleb128 0xce
 40805 149da 28FB0000 		.long	0xfb28
 40806 149de 00000000 		.quad	.LBB4530
 40806      00000000 
 40807 149e6 0F000000 		.quad	.LBE4530-.LBB4530
 40807      00000000 
 40808 149ee 02       		.byte	0x2
 40809 149ef 41       		.byte	0x41
 40810 149f0 BE01     		.uleb128 0xbe
 40811 149f2 37FB0000 		.long	0xfb37
 40812 149f6 00000000 		.long	.LLST497
 40813 149fa B801     		.uleb128 0xb8
 40814 149fc 58E20000 		.long	0xe258
 40815 14a00 00000000 		.quad	.LBB4531
 40815      00000000 
 40816 14a08 0F000000 		.quad	.LBE4531-.LBB4531
 40816      00000000 
 40817 14a10 06       		.byte	0x6
 40818 14a11 A901     		.value	0x1a9
 40819 14a13 BE01     		.uleb128 0xbe
 40820 14a15 67E20000 		.long	0xe267
 40821 14a19 00000000 		.long	.LLST497
 40822 14a1d CE01     		.uleb128 0xce
 40823 14a1f DAE10000 		.long	0xe1da
 40824 14a23 00000000 		.quad	.LBB4533
 40824      00000000 
 40825 14a2b 0A000000 		.quad	.LBE4533-.LBB4533
 40825      00000000 
 40826 14a33 06       		.byte	0x6
 40827 14a34 A0       		.byte	0xa0
 40828 14a35 AE01     		.uleb128 0xae
 40829 14a37 E9E10000 		.long	0xe1e9
 40830 14a3b BE01     		.uleb128 0xbe
 40831 14a3d FFE10000 		.long	0xe1ff
 40832 14a41 00000000 		.long	.LLST499
 40833 14a45 BE01     		.uleb128 0xbe
 40834 14a47 F3E10000 		.long	0xe1f3
 40835 14a4b 00000000 		.long	.LLST500
 40836 14a4f B901     		.uleb128 0xb9
 40837 14a51 00000000 		.quad	.LBB4534
 40837      00000000 
 40838 14a59 0A000000 		.quad	.LBE4534-.LBB4534
 40838      00000000 
 40839 14a61 CE01     		.uleb128 0xce
 40840 14a63 A2E10000 		.long	0xe1a2
 40841 14a67 00000000 		.quad	.LBB4535
 40841      00000000 
 40842 14a6f 05000000 		.quad	.LBE4535-.LBB4535
 40842      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1029


 40843 14a77 06       		.byte	0x6
 40844 14a78 B2       		.byte	0xb2
 40845 14a79 AE01     		.uleb128 0xae
 40846 14a7b ADE10000 		.long	0xe1ad
 40847 14a7f BE01     		.uleb128 0xbe
 40848 14a81 C7E10000 		.long	0xe1c7
 40849 14a85 00000000 		.long	.LLST501
 40850 14a89 BE01     		.uleb128 0xbe
 40851 14a8b BAE10000 		.long	0xe1ba
 40852 14a8f 00000000 		.long	.LLST502
 40853 14a93 B801     		.uleb128 0xb8
 40854 14a95 77E10000 		.long	0xe177
 40855 14a99 00000000 		.quad	.LBB4536
 40855      00000000 
 40856 14aa1 05000000 		.quad	.LBE4536-.LBB4536
 40856      00000000 
 40857 14aa9 2F       		.byte	0x2f
 40858 14aaa 7F01     		.value	0x17f
 40859 14aac AE01     		.uleb128 0xae
 40860 14aae 86E10000 		.long	0xe186
 40861 14ab2 BE01     		.uleb128 0xbe
 40862 14ab4 9CE10000 		.long	0xe19c
 40863 14ab8 00000000 		.long	.LLST501
 40864 14abc BE01     		.uleb128 0xbe
 40865 14abe 90E10000 		.long	0xe190
 40866 14ac2 00000000 		.long	.LLST502
 40867 14ac6 CF01     		.uleb128 0xcf
 40868 14ac8 00000000 		.quad	.LVL459
 40868      00000000 
 40869 14ad0 ED6B0100 		.long	0x16bed
 40870 14ad4 00       		.byte	0
 40871 14ad5 00       		.byte	0
 40872 14ad6 00       		.byte	0
 40873 14ad7 00       		.byte	0
 40874 14ad8 00       		.byte	0
 40875 14ad9 00       		.byte	0
 40876 14ada 00       		.byte	0
 40877 14adb C601     		.uleb128 0xc6
 40878 14add 00000000 		.quad	.LVL389
 40878      00000000 
 40879 14ae5 816C0100 		.long	0x16c81
 40880 14ae9 FC4A0100 		.long	0x14afc
 40881 14aed C201     		.uleb128 0xc2
 40882 14aef 01       		.uleb128 0x1
 40883 14af0 55       		.byte	0x55
 40884 14af1 02       		.uleb128 0x2
 40885 14af2 73       		.byte	0x73
 40886 14af3 00       		.sleb128 0
 40887 14af4 C201     		.uleb128 0xc2
 40888 14af6 01       		.uleb128 0x1
 40889 14af7 51       		.byte	0x51
 40890 14af8 02       		.uleb128 0x2
 40891 14af9 7D       		.byte	0x7d
 40892 14afa 00       		.sleb128 0
 40893 14afb 00       		.byte	0
 40894 14afc D001     		.uleb128 0xd0
 40895 14afe 00000000 		.quad	.LVL681
GAS LISTING /tmp/ccJUMvuF.s 			page 1030


 40895      00000000 
 40896 14b06 C201     		.uleb128 0xc2
 40897 14b08 01       		.uleb128 0x1
 40898 14b09 55       		.byte	0x55
 40899 14b0a 03       		.uleb128 0x3
 40900 14b0b 91       		.byte	0x91
 40901 14b0c E07E     		.sleb128 -160
 40902 14b0e 00       		.byte	0
 40903 14b0f 00       		.byte	0
 40904 14b10 C901     		.uleb128 0xc9
 40905 14b12 20CB0000 		.long	0xcb20
 40906 14b16 00000000 		.quad	.LBB4556
 40906      00000000 
 40907 14b1e 00000000 		.long	.Ldebug_ranges0+0x2180
 40908 14b22 16       		.byte	0x16
 40909 14b23 3F       		.byte	0x3f
 40910 14b24 634B0100 		.long	0x14b63
 40911 14b28 AE01     		.uleb128 0xae
 40912 14b2a 34CB0000 		.long	0xcb34
 40913 14b2e BE01     		.uleb128 0xbe
 40914 14b30 41CB0000 		.long	0xcb41
 40915 14b34 00000000 		.long	.LLST505
 40916 14b38 C101     		.uleb128 0xc1
 40917 14b3a 00000000 		.quad	.LVL461
 40917      00000000 
 40918 14b42 B5920000 		.long	0x92b5
 40919 14b46 C201     		.uleb128 0xc2
 40920 14b48 01       		.uleb128 0x1
 40921 14b49 55       		.byte	0x55
 40922 14b4a 02       		.uleb128 0x2
 40923 14b4b 7F       		.byte	0x7f
 40924 14b4c 00       		.sleb128 0
 40925 14b4d C201     		.uleb128 0xc2
 40926 14b4f 01       		.uleb128 0x1
 40927 14b50 54       		.byte	0x54
 40928 14b51 09       		.uleb128 0x9
 40929 14b52 03       		.byte	0x3
 40930 14b53 00000000 		.quad	.LC26
 40930      00000000 
 40931 14b5b C201     		.uleb128 0xc2
 40932 14b5d 01       		.uleb128 0x1
 40933 14b5e 51       		.byte	0x51
 40934 14b5f 01       		.uleb128 0x1
 40935 14b60 31       		.byte	0x31
 40936 14b61 00       		.byte	0
 40937 14b62 00       		.byte	0
 40938 14b63 C901     		.uleb128 0xc9
 40939 14b65 98CC0000 		.long	0xcc98
 40940 14b69 00000000 		.quad	.LBB4562
 40940      00000000 
 40941 14b71 00000000 		.long	.Ldebug_ranges0+0x21c0
 40942 14b75 16       		.byte	0x16
 40943 14b76 3F       		.byte	0x3f
 40944 14b77 CE4C0100 		.long	0x14cce
 40945 14b7b AE01     		.uleb128 0xae
 40946 14b7d B1CC0000 		.long	0xccb1
 40947 14b81 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1031


 40948 14b83 A7CC0000 		.long	0xcca7
 40949 14b87 CB01     		.uleb128 0xcb
 40950 14b89 47FE0000 		.long	0xfe47
 40951 14b8d 00000000 		.quad	.LBB4563
 40951      00000000 
 40952 14b95 00000000 		.long	.Ldebug_ranges0+0x21c0
 40953 14b99 09       		.byte	0x9
 40954 14b9a 71       		.byte	0x71
 40955 14b9b AE01     		.uleb128 0xae
 40956 14b9d 64FE0000 		.long	0xfe64
 40957 14ba1 C301     		.uleb128 0xc3
 40958 14ba3 A3FC0000 		.long	0xfca3
 40959 14ba7 00000000 		.quad	.LBB4565
 40959      00000000 
 40960 14baf 00000000 		.long	.Ldebug_ranges0+0x2200
 40961 14bb3 09       		.byte	0x9
 40962 14bb4 3502     		.value	0x235
 40963 14bb6 804C0100 		.long	0x14c80
 40964 14bba BE01     		.uleb128 0xbe
 40965 14bbc BCFC0000 		.long	0xfcbc
 40966 14bc0 00000000 		.long	.LLST506
 40967 14bc4 AE01     		.uleb128 0xae
 40968 14bc6 B2FC0000 		.long	0xfcb2
 40969 14bca C301     		.uleb128 0xc3
 40970 14bcc 99DC0000 		.long	0xdc99
 40971 14bd0 00000000 		.quad	.LBB4567
 40971      00000000 
 40972 14bd8 00000000 		.long	.Ldebug_ranges0+0x2240
 40973 14bdc 0E       		.byte	0xe
 40974 14bdd BC01     		.value	0x1bc
 40975 14bdf FC4B0100 		.long	0x14bfc
 40976 14be3 BE01     		.uleb128 0xbe
 40977 14be5 ADDC0000 		.long	0xdcad
 40978 14be9 00000000 		.long	.LLST507
 40979 14bed CF01     		.uleb128 0xcf
 40980 14bef 00000000 		.quad	.LVL678
 40980      00000000 
 40981 14bf7 F5920000 		.long	0x92f5
 40982 14bfb 00       		.byte	0
 40983 14bfc CC01     		.uleb128 0xcc
 40984 14bfe 1FCC0000 		.long	0xcc1f
 40985 14c02 00000000 		.quad	.LBB4570
 40985      00000000 
 40986 14c0a 00000000 		.long	.Ldebug_ranges0+0x2270
 40987 14c0e 0E       		.byte	0xe
 40988 14c0f BC01     		.value	0x1bc
 40989 14c11 BE01     		.uleb128 0xbe
 40990 14c13 38CC0000 		.long	0xcc38
 40991 14c17 00000000 		.long	.LLST508
 40992 14c1b BE01     		.uleb128 0xbe
 40993 14c1d 2ECC0000 		.long	0xcc2e
 40994 14c21 00000000 		.long	.LLST509
 40995 14c25 B901     		.uleb128 0xb9
 40996 14c27 00000000 		.quad	.LBB4572
 40996      00000000 
 40997 14c2f 2F000000 		.quad	.LBE4572-.LBB4572
 40997      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1032


 40998 14c37 BE01     		.uleb128 0xbe
 40999 14c39 38CC0000 		.long	0xcc38
 41000 14c3d 00000000 		.long	.LLST510
 41001 14c41 BE01     		.uleb128 0xbe
 41002 14c43 2ECC0000 		.long	0xcc2e
 41003 14c47 00000000 		.long	.LLST511
 41004 14c4b C601     		.uleb128 0xc6
 41005 14c4d 00000000 		.quad	.LVL624
 41005      00000000 
 41006 14c55 652A0000 		.long	0x2a65
 41007 14c59 654C0100 		.long	0x14c65
 41008 14c5d C201     		.uleb128 0xc2
 41009 14c5f 01       		.uleb128 0x1
 41010 14c60 55       		.byte	0x55
 41011 14c61 02       		.uleb128 0x2
 41012 14c62 7C       		.byte	0x7c
 41013 14c63 00       		.sleb128 0
 41014 14c64 00       		.byte	0
 41015 14c65 D001     		.uleb128 0xd0
 41016 14c67 00000000 		.quad	.LVL625
 41016      00000000 
 41017 14c6f C201     		.uleb128 0xc2
 41018 14c71 01       		.uleb128 0x1
 41019 14c72 55       		.byte	0x55
 41020 14c73 02       		.uleb128 0x2
 41021 14c74 7C       		.byte	0x7c
 41022 14c75 00       		.sleb128 0
 41023 14c76 C201     		.uleb128 0xc2
 41024 14c78 01       		.uleb128 0x1
 41025 14c79 54       		.byte	0x54
 41026 14c7a 01       		.uleb128 0x1
 41027 14c7b 3A       		.byte	0x3a
 41028 14c7c 00       		.byte	0
 41029 14c7d 00       		.byte	0
 41030 14c7e 00       		.byte	0
 41031 14c7f 00       		.byte	0
 41032 14c80 C501     		.uleb128 0xc5
 41033 14c82 BADC0000 		.long	0xdcba
 41034 14c86 00000000 		.quad	.LBB4579
 41034      00000000 
 41035 14c8e 08000000 		.quad	.LBE4579-.LBB4579
 41035      00000000 
 41036 14c96 09       		.byte	0x9
 41037 14c97 3502     		.value	0x235
 41038 14c99 B64C0100 		.long	0x14cb6
 41039 14c9d BE01     		.uleb128 0xbe
 41040 14c9f D7DC0000 		.long	0xdcd7
 41041 14ca3 00000000 		.long	.LLST512
 41042 14ca7 CF01     		.uleb128 0xcf
 41043 14ca9 00000000 		.quad	.LVL466
 41043      00000000 
 41044 14cb1 76290000 		.long	0x2976
 41045 14cb5 00       		.byte	0
 41046 14cb6 C101     		.uleb128 0xc1
 41047 14cb8 00000000 		.quad	.LVL465
 41047      00000000 
 41048 14cc0 C0290000 		.long	0x29c0
GAS LISTING /tmp/ccJUMvuF.s 			page 1033


 41049 14cc4 C201     		.uleb128 0xc2
 41050 14cc6 01       		.uleb128 0x1
 41051 14cc7 55       		.byte	0x55
 41052 14cc8 02       		.uleb128 0x2
 41053 14cc9 7F       		.byte	0x7f
 41054 14cca 00       		.sleb128 0
 41055 14ccb 00       		.byte	0
 41056 14ccc 00       		.byte	0
 41057 14ccd 00       		.byte	0
 41058 14cce CA01     		.uleb128 0xca
 41059 14cd0 20CB0000 		.long	0xcb20
 41060 14cd4 00000000 		.quad	.LBB4587
 41060      00000000 
 41061 14cdc 14000000 		.quad	.LBE4587-.LBB4587
 41061      00000000 
 41062 14ce4 16       		.byte	0x16
 41063 14ce5 41       		.byte	0x41
 41064 14ce6 254D0100 		.long	0x14d25
 41065 14cea AE01     		.uleb128 0xae
 41066 14cec 34CB0000 		.long	0xcb34
 41067 14cf0 BE01     		.uleb128 0xbe
 41068 14cf2 41CB0000 		.long	0xcb41
 41069 14cf6 00000000 		.long	.LLST513
 41070 14cfa C101     		.uleb128 0xc1
 41071 14cfc 00000000 		.quad	.LVL467
 41071      00000000 
 41072 14d04 B5920000 		.long	0x92b5
 41073 14d08 C201     		.uleb128 0xc2
 41074 14d0a 01       		.uleb128 0x1
 41075 14d0b 55       		.byte	0x55
 41076 14d0c 02       		.uleb128 0x2
 41077 14d0d 7F       		.byte	0x7f
 41078 14d0e 00       		.sleb128 0
 41079 14d0f C201     		.uleb128 0xc2
 41080 14d11 01       		.uleb128 0x1
 41081 14d12 54       		.byte	0x54
 41082 14d13 09       		.uleb128 0x9
 41083 14d14 03       		.byte	0x3
 41084 14d15 00000000 		.quad	.LC22
 41084      00000000 
 41085 14d1d C201     		.uleb128 0xc2
 41086 14d1f 01       		.uleb128 0x1
 41087 14d20 51       		.byte	0x51
 41088 14d21 01       		.uleb128 0x1
 41089 14d22 3C       		.byte	0x3c
 41090 14d23 00       		.byte	0
 41091 14d24 00       		.byte	0
 41092 14d25 CA01     		.uleb128 0xca
 41093 14d27 47F30000 		.long	0xf347
 41094 14d2b 00000000 		.quad	.LBB4589
 41094      00000000 
 41095 14d33 10000000 		.quad	.LBE4589-.LBB4589
 41095      00000000 
 41096 14d3b 16       		.byte	0x16
 41097 14d3c 41       		.byte	0x41
 41098 14d3d 714D0100 		.long	0x14d71
 41099 14d41 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1034


 41100 14d43 60F30000 		.long	0xf360
 41101 14d47 00000000 		.long	.LLST514
 41102 14d4b AE01     		.uleb128 0xae
 41103 14d4d 56F30000 		.long	0xf356
 41104 14d51 C101     		.uleb128 0xc1
 41105 14d53 00000000 		.quad	.LVL469
 41105      00000000 
 41106 14d5b 4A290000 		.long	0x294a
 41107 14d5f C201     		.uleb128 0xc2
 41108 14d61 01       		.uleb128 0x1
 41109 14d62 55       		.byte	0x55
 41110 14d63 02       		.uleb128 0x2
 41111 14d64 7F       		.byte	0x7f
 41112 14d65 00       		.sleb128 0
 41113 14d66 C201     		.uleb128 0xc2
 41114 14d68 01       		.uleb128 0x1
 41115 14d69 54       		.byte	0x54
 41116 14d6a 04       		.uleb128 0x4
 41117 14d6b 91       		.byte	0x91
 41118 14d6c F87D     		.sleb128 -264
 41119 14d6e 06       		.byte	0x6
 41120 14d6f 00       		.byte	0
 41121 14d70 00       		.byte	0
 41122 14d71 CA01     		.uleb128 0xca
 41123 14d73 20CB0000 		.long	0xcb20
 41124 14d77 00000000 		.quad	.LBB4591
 41124      00000000 
 41125 14d7f 14000000 		.quad	.LBE4591-.LBB4591
 41125      00000000 
 41126 14d87 16       		.byte	0x16
 41127 14d88 41       		.byte	0x41
 41128 14d89 C54D0100 		.long	0x14dc5
 41129 14d8d BE01     		.uleb128 0xbe
 41130 14d8f 41CB0000 		.long	0xcb41
 41131 14d93 00000000 		.long	.LLST515
 41132 14d97 BE01     		.uleb128 0xbe
 41133 14d99 34CB0000 		.long	0xcb34
 41134 14d9d 00000000 		.long	.LLST516
 41135 14da1 C101     		.uleb128 0xc1
 41136 14da3 00000000 		.quad	.LVL470
 41136      00000000 
 41137 14dab B5920000 		.long	0x92b5
 41138 14daf C201     		.uleb128 0xc2
 41139 14db1 01       		.uleb128 0x1
 41140 14db2 54       		.byte	0x54
 41141 14db3 09       		.uleb128 0x9
 41142 14db4 03       		.byte	0x3
 41143 14db5 00000000 		.quad	.LC27
 41143      00000000 
 41144 14dbd C201     		.uleb128 0xc2
 41145 14dbf 01       		.uleb128 0x1
 41146 14dc0 51       		.byte	0x51
 41147 14dc1 01       		.uleb128 0x1
 41148 14dc2 46       		.byte	0x46
 41149 14dc3 00       		.byte	0
 41150 14dc4 00       		.byte	0
 41151 14dc5 CA01     		.uleb128 0xca
GAS LISTING /tmp/ccJUMvuF.s 			page 1035


 41152 14dc7 20CB0000 		.long	0xcb20
 41153 14dcb 00000000 		.quad	.LBB4593
 41153      00000000 
 41154 14dd3 18000000 		.quad	.LBE4593-.LBB4593
 41154      00000000 
 41155 14ddb 16       		.byte	0x16
 41156 14ddc 42       		.byte	0x42
 41157 14ddd 154E0100 		.long	0x14e15
 41158 14de1 AE01     		.uleb128 0xae
 41159 14de3 34CB0000 		.long	0xcb34
 41160 14de7 BE01     		.uleb128 0xbe
 41161 14de9 41CB0000 		.long	0xcb41
 41162 14ded 00000000 		.long	.LLST517
 41163 14df1 C101     		.uleb128 0xc1
 41164 14df3 00000000 		.quad	.LVL471
 41164      00000000 
 41165 14dfb B5920000 		.long	0x92b5
 41166 14dff C201     		.uleb128 0xc2
 41167 14e01 01       		.uleb128 0x1
 41168 14e02 54       		.byte	0x54
 41169 14e03 09       		.uleb128 0x9
 41170 14e04 03       		.byte	0x3
 41171 14e05 00000000 		.quad	.LC24
 41171      00000000 
 41172 14e0d C201     		.uleb128 0xc2
 41173 14e0f 01       		.uleb128 0x1
 41174 14e10 51       		.byte	0x51
 41175 14e11 01       		.uleb128 0x1
 41176 14e12 3C       		.byte	0x3c
 41177 14e13 00       		.byte	0
 41178 14e14 00       		.byte	0
 41179 14e15 C901     		.uleb128 0xc9
 41180 14e17 47F30000 		.long	0xf347
 41181 14e1b 00000000 		.quad	.LBB4595
 41181      00000000 
 41182 14e23 00000000 		.long	.Ldebug_ranges0+0x22a0
 41183 14e27 16       		.byte	0x16
 41184 14e28 42       		.byte	0x42
 41185 14e29 564E0100 		.long	0x14e56
 41186 14e2d BE01     		.uleb128 0xbe
 41187 14e2f 60F30000 		.long	0xf360
 41188 14e33 00000000 		.long	.LLST518
 41189 14e37 AE01     		.uleb128 0xae
 41190 14e39 56F30000 		.long	0xf356
 41191 14e3d C101     		.uleb128 0xc1
 41192 14e3f 00000000 		.quad	.LVL472
 41192      00000000 
 41193 14e47 4A290000 		.long	0x294a
 41194 14e4b C201     		.uleb128 0xc2
 41195 14e4d 01       		.uleb128 0x1
 41196 14e4e 54       		.byte	0x54
 41197 14e4f 04       		.uleb128 0x4
 41198 14e50 91       		.byte	0x91
 41199 14e51 F87D     		.sleb128 -264
 41200 14e53 06       		.byte	0x6
 41201 14e54 00       		.byte	0
 41202 14e55 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1036


 41203 14e56 C901     		.uleb128 0xc9
 41204 14e58 20CB0000 		.long	0xcb20
 41205 14e5c 00000000 		.quad	.LBB4598
 41205      00000000 
 41206 14e64 00000000 		.long	.Ldebug_ranges0+0x22d0
 41207 14e68 16       		.byte	0x16
 41208 14e69 42       		.byte	0x42
 41209 14e6a AD4E0100 		.long	0x14ead
 41210 14e6e BE01     		.uleb128 0xbe
 41211 14e70 41CB0000 		.long	0xcb41
 41212 14e74 00000000 		.long	.LLST519
 41213 14e78 BE01     		.uleb128 0xbe
 41214 14e7a 34CB0000 		.long	0xcb34
 41215 14e7e 00000000 		.long	.LLST520
 41216 14e82 C101     		.uleb128 0xc1
 41217 14e84 00000000 		.quad	.LVL474
 41217      00000000 
 41218 14e8c B5920000 		.long	0x92b5
 41219 14e90 C201     		.uleb128 0xc2
 41220 14e92 01       		.uleb128 0x1
 41221 14e93 55       		.byte	0x55
 41222 14e94 02       		.uleb128 0x2
 41223 14e95 7C       		.byte	0x7c
 41224 14e96 00       		.sleb128 0
 41225 14e97 C201     		.uleb128 0xc2
 41226 14e99 01       		.uleb128 0x1
 41227 14e9a 54       		.byte	0x54
 41228 14e9b 09       		.uleb128 0x9
 41229 14e9c 03       		.byte	0x3
 41230 14e9d 00000000 		.quad	.LC28
 41230      00000000 
 41231 14ea5 C201     		.uleb128 0xc2
 41232 14ea7 01       		.uleb128 0x1
 41233 14ea8 51       		.byte	0x51
 41234 14ea9 01       		.uleb128 0x1
 41235 14eaa 4A       		.byte	0x4a
 41236 14eab 00       		.byte	0
 41237 14eac 00       		.byte	0
 41238 14ead CA01     		.uleb128 0xca
 41239 14eaf 98CC0000 		.long	0xcc98
 41240 14eb3 00000000 		.quad	.LBB4603
 41240      00000000 
 41241 14ebb 08000000 		.quad	.LBE4603-.LBB4603
 41241      00000000 
 41242 14ec3 16       		.byte	0x16
 41243 14ec4 42       		.byte	0x42
 41244 14ec5 0F4F0100 		.long	0x14f0f
 41245 14ec9 AE01     		.uleb128 0xae
 41246 14ecb B1CC0000 		.long	0xccb1
 41247 14ecf AE01     		.uleb128 0xae
 41248 14ed1 A7CC0000 		.long	0xcca7
 41249 14ed5 CE01     		.uleb128 0xce
 41250 14ed7 BADC0000 		.long	0xdcba
 41251 14edb 00000000 		.quad	.LBB4604
 41251      00000000 
 41252 14ee3 08000000 		.quad	.LBE4604-.LBB4604
 41252      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1037


 41253 14eeb 09       		.byte	0x9
 41254 14eec 71       		.byte	0x71
 41255 14eed BE01     		.uleb128 0xbe
 41256 14eef D7DC0000 		.long	0xdcd7
 41257 14ef3 00000000 		.long	.LLST521
 41258 14ef7 C101     		.uleb128 0xc1
 41259 14ef9 00000000 		.quad	.LVL475
 41259      00000000 
 41260 14f01 76290000 		.long	0x2976
 41261 14f05 C201     		.uleb128 0xc2
 41262 14f07 01       		.uleb128 0x1
 41263 14f08 55       		.byte	0x55
 41264 14f09 02       		.uleb128 0x2
 41265 14f0a 7C       		.byte	0x7c
 41266 14f0b 00       		.sleb128 0
 41267 14f0c 00       		.byte	0
 41268 14f0d 00       		.byte	0
 41269 14f0e 00       		.byte	0
 41270 14f0f C401     		.uleb128 0xc4
 41271 14f11 00000000 		.long	.Ldebug_ranges0+0x2300
 41272 14f15 2E610100 		.long	0x1612e
 41273 14f19 DA01     		.uleb128 0xda
 41274 14f1b 7400     		.string	"t"
 41275 14f1d 16       		.byte	0x16
 41276 14f1e 43       		.byte	0x43
 41277 14f1f C3C30000 		.long	0xc3c3
 41278 14f23 03       		.uleb128 0x3
 41279 14f24 91       		.byte	0x91
 41280 14f25 907F     		.sleb128 -112
 41281 14f27 CA01     		.uleb128 0xca
 41282 14f29 CAFC0000 		.long	0xfcca
 41283 14f2d 00000000 		.quad	.LBB4607
 41283      00000000 
 41284 14f35 8E000000 		.quad	.LBE4607-.LBB4607
 41284      00000000 
 41285 14f3d 16       		.byte	0x16
 41286 14f3e 43       		.byte	0x43
 41287 14f3f DE510100 		.long	0x151de
 41288 14f43 BE01     		.uleb128 0xbe
 41289 14f45 E3FC0000 		.long	0xfce3
 41290 14f49 00000000 		.long	.LLST522
 41291 14f4d BE01     		.uleb128 0xbe
 41292 14f4f D9FC0000 		.long	0xfcd9
 41293 14f53 00000000 		.long	.LLST523
 41294 14f57 C901     		.uleb128 0xc9
 41295 14f59 08010100 		.long	0x10108
 41296 14f5d 00000000 		.quad	.LBB4609
 41296      00000000 
 41297 14f65 00000000 		.long	.Ldebug_ranges0+0x2380
 41298 14f69 02       		.byte	0x2
 41299 14f6a 37       		.byte	0x37
 41300 14f6b CF510100 		.long	0x151cf
 41301 14f6f AE01     		.uleb128 0xae
 41302 14f71 2E010100 		.long	0x1012e
 41303 14f75 BE01     		.uleb128 0xbe
 41304 14f77 21010100 		.long	0x10121
 41305 14f7b 00000000 		.long	.LLST525
GAS LISTING /tmp/ccJUMvuF.s 			page 1038


 41306 14f7f BE01     		.uleb128 0xbe
 41307 14f81 17010100 		.long	0x10117
 41308 14f85 00000000 		.long	.LLST526
 41309 14f89 C301     		.uleb128 0xc3
 41310 14f8b 3EEE0000 		.long	0xee3e
 41311 14f8f 00000000 		.quad	.LBB4610
 41311      00000000 
 41312 14f97 00000000 		.long	.Ldebug_ranges0+0x23b0
 41313 14f9b 06       		.byte	0x6
 41314 14f9c 1601     		.value	0x116
 41315 14f9e AA500100 		.long	0x150aa
 41316 14fa2 AE01     		.uleb128 0xae
 41317 14fa4 63EE0000 		.long	0xee63
 41318 14fa8 BE01     		.uleb128 0xbe
 41319 14faa 57EE0000 		.long	0xee57
 41320 14fae 00000000 		.long	.LLST525
 41321 14fb2 BE01     		.uleb128 0xbe
 41322 14fb4 4DEE0000 		.long	0xee4d
 41323 14fb8 00000000 		.long	.LLST526
 41324 14fbc C901     		.uleb128 0xc9
 41325 14fbe 41010100 		.long	0x10141
 41326 14fc2 00000000 		.quad	.LBB4611
 41326      00000000 
 41327 14fca 00000000 		.long	.Ldebug_ranges0+0x23f0
 41328 14fce 06       		.byte	0x6
 41329 14fcf 88       		.byte	0x88
 41330 14fd0 80500100 		.long	0x15080
 41331 14fd4 BE01     		.uleb128 0xbe
 41332 14fd6 5A010100 		.long	0x1015a
 41333 14fda 00000000 		.long	.LLST530
 41334 14fde BE01     		.uleb128 0xbe
 41335 14fe0 50010100 		.long	0x10150
 41336 14fe4 00000000 		.long	.LLST531
 41337 14fe8 CB01     		.uleb128 0xcb
 41338 14fea 61E60000 		.long	0xe661
 41339 14fee 00000000 		.quad	.LBB4613
 41339      00000000 
 41340 14ff6 00000000 		.long	.Ldebug_ranges0+0x2430
 41341 14ffa 06       		.byte	0x6
 41342 14ffb B9       		.byte	0xb9
 41343 14ffc AE01     		.uleb128 0xae
 41344 14ffe 70E60000 		.long	0xe670
 41345 15002 BE01     		.uleb128 0xbe
 41346 15004 7AE60000 		.long	0xe67a
 41347 15008 00000000 		.long	.LLST530
 41348 1500c B601     		.uleb128 0xb6
 41349 1500e 00000000 		.long	.Ldebug_ranges0+0x2430
 41350 15012 CB01     		.uleb128 0xcb
 41351 15014 36E60000 		.long	0xe636
 41352 15018 00000000 		.quad	.LBB4615
 41352      00000000 
 41353 15020 00000000 		.long	.Ldebug_ranges0+0x2430
 41354 15024 06       		.byte	0x6
 41355 15025 AA       		.byte	0xaa
 41356 15026 AE01     		.uleb128 0xae
 41357 15028 41E60000 		.long	0xe641
 41358 1502c BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1039


 41359 1502e 4EE60000 		.long	0xe64e
 41360 15032 00000000 		.long	.LLST530
 41361 15036 CC01     		.uleb128 0xcc
 41362 15038 0BE60000 		.long	0xe60b
 41363 1503c 00000000 		.quad	.LBB4616
 41363      00000000 
 41364 15044 00000000 		.long	.Ldebug_ranges0+0x2430
 41365 15048 2F       		.byte	0x2f
 41366 15049 6501     		.value	0x165
 41367 1504b AE01     		.uleb128 0xae
 41368 1504d 1AE60000 		.long	0xe61a
 41369 15051 BE01     		.uleb128 0xbe
 41370 15053 30E60000 		.long	0xe630
 41371 15057 00000000 		.long	.LLST534
 41372 1505b BE01     		.uleb128 0xbe
 41373 1505d 24E60000 		.long	0xe624
 41374 15061 00000000 		.long	.LLST530
 41375 15065 C101     		.uleb128 0xc1
 41376 15067 00000000 		.quad	.LVL479
 41376      00000000 
 41377 1506f D46B0100 		.long	0x16bd4
 41378 15073 C201     		.uleb128 0xc2
 41379 15075 01       		.uleb128 0x1
 41380 15076 55       		.byte	0x55
 41381 15077 02       		.uleb128 0x2
 41382 15078 08       		.byte	0x8
 41383 15079 28       		.byte	0x28
 41384 1507a 00       		.byte	0
 41385 1507b 00       		.byte	0
 41386 1507c 00       		.byte	0
 41387 1507d 00       		.byte	0
 41388 1507e 00       		.byte	0
 41389 1507f 00       		.byte	0
 41390 15080 CE01     		.uleb128 0xce
 41391 15082 89E60000 		.long	0xe689
 41392 15086 00000000 		.quad	.LBB4625
 41392      00000000 
 41393 1508e 24000000 		.quad	.LBE4625-.LBB4625
 41393      00000000 
 41394 15096 06       		.byte	0x6
 41395 15097 87       		.byte	0x87
 41396 15098 AE01     		.uleb128 0xae
 41397 1509a A2E60000 		.long	0xe6a2
 41398 1509e BE01     		.uleb128 0xbe
 41399 150a0 98E60000 		.long	0xe698
 41400 150a4 00000000 		.long	.LLST526
 41401 150a8 00       		.byte	0
 41402 150a9 00       		.byte	0
 41403 150aa CC01     		.uleb128 0xcc
 41404 150ac 75EE0000 		.long	0xee75
 41405 150b0 00000000 		.quad	.LBB4630
 41405      00000000 
 41406 150b8 00000000 		.long	.Ldebug_ranges0+0x2460
 41407 150bc 06       		.byte	0x6
 41408 150bd 1701     		.value	0x117
 41409 150bf BE01     		.uleb128 0xbe
 41410 150c1 8EEE0000 		.long	0xee8e
GAS LISTING /tmp/ccJUMvuF.s 			page 1040


 41411 150c5 00000000 		.long	.LLST538
 41412 150c9 BE01     		.uleb128 0xbe
 41413 150cb 84EE0000 		.long	0xee84
 41414 150cf 00000000 		.long	.LLST539
 41415 150d3 CC01     		.uleb128 0xcc
 41416 150d5 F3ED0000 		.long	0xedf3
 41417 150d9 00000000 		.quad	.LBB4632
 41417      00000000 
 41418 150e1 00000000 		.long	.Ldebug_ranges0+0x2490
 41419 150e5 06       		.byte	0x6
 41420 150e6 1E05     		.value	0x51e
 41421 150e8 AE01     		.uleb128 0xae
 41422 150ea 33EE0000 		.long	0xee33
 41423 150ee BE01     		.uleb128 0xbe
 41424 150f0 26EE0000 		.long	0xee26
 41425 150f4 00000000 		.long	.LLST538
 41426 150f8 BE01     		.uleb128 0xbe
 41427 150fa 19EE0000 		.long	0xee19
 41428 150fe 00000000 		.long	.LLST541
 41429 15102 CC01     		.uleb128 0xcc
 41430 15104 ABED0000 		.long	0xedab
 41431 15108 00000000 		.quad	.LBB4633
 41431      00000000 
 41432 15110 00000000 		.long	.Ldebug_ranges0+0x2490
 41433 15114 2D       		.byte	0x2d
 41434 15115 7702     		.value	0x277
 41435 15117 AE01     		.uleb128 0xae
 41436 15119 D5ED0000 		.long	0xedd5
 41437 1511d AE01     		.uleb128 0xae
 41438 1511f C8ED0000 		.long	0xedc8
 41439 15123 B601     		.uleb128 0xb6
 41440 15125 00000000 		.long	.Ldebug_ranges0+0x2490
 41441 15129 BA01     		.uleb128 0xba
 41442 1512b E4ED0000 		.long	0xede4
 41443 1512f CC01     		.uleb128 0xcc
 41444 15131 71ED0000 		.long	0xed71
 41445 15135 00000000 		.quad	.LBB4635
 41445      00000000 
 41446 1513d 00000000 		.long	.Ldebug_ranges0+0x2490
 41447 15141 2D       		.byte	0x2d
 41448 15142 3802     		.value	0x238
 41449 15144 AE01     		.uleb128 0xae
 41450 15146 9BED0000 		.long	0xed9b
 41451 1514a AE01     		.uleb128 0xae
 41452 1514c 8EED0000 		.long	0xed8e
 41453 15150 B601     		.uleb128 0xb6
 41454 15152 00000000 		.long	.Ldebug_ranges0+0x2490
 41455 15156 CC01     		.uleb128 0xcc
 41456 15158 1EED0000 		.long	0xed1e
 41457 1515c 00000000 		.quad	.LBB4637
 41457      00000000 
 41458 15164 00000000 		.long	.Ldebug_ranges0+0x2490
 41459 15168 2D       		.byte	0x2d
 41460 15169 1702     		.value	0x217
 41461 1516b AE01     		.uleb128 0xae
 41462 1516d 5EED0000 		.long	0xed5e
 41463 15171 AE01     		.uleb128 0xae
GAS LISTING /tmp/ccJUMvuF.s 			page 1041


 41464 15173 51ED0000 		.long	0xed51
 41465 15177 AE01     		.uleb128 0xae
 41466 15179 44ED0000 		.long	0xed44
 41467 1517d CC01     		.uleb128 0xcc
 41468 1517f B4E60000 		.long	0xe6b4
 41469 15183 00000000 		.quad	.LBB4638
 41469      00000000 
 41470 1518b 00000000 		.long	.Ldebug_ranges0+0x2490
 41471 1518f 14       		.byte	0x14
 41472 15190 1D03     		.value	0x31d
 41473 15192 AE01     		.uleb128 0xae
 41474 15194 F4E60000 		.long	0xe6f4
 41475 15198 AE01     		.uleb128 0xae
 41476 1519a E7E60000 		.long	0xe6e7
 41477 1519e BE01     		.uleb128 0xbe
 41478 151a0 DAE60000 		.long	0xe6da
 41479 151a4 00000000 		.long	.LLST542
 41480 151a8 B601     		.uleb128 0xb6
 41481 151aa 00000000 		.long	.Ldebug_ranges0+0x2490
 41482 151ae BA01     		.uleb128 0xba
 41483 151b0 03E70000 		.long	0xe703
 41484 151b4 B601     		.uleb128 0xb6
 41485 151b6 00000000 		.long	.Ldebug_ranges0+0x2490
 41486 151ba BB01     		.uleb128 0xbb
 41487 151bc 12E70000 		.long	0xe712
 41488 151c0 00000000 		.long	.LLST543
 41489 151c4 00       		.byte	0
 41490 151c5 00       		.byte	0
 41491 151c6 00       		.byte	0
 41492 151c7 00       		.byte	0
 41493 151c8 00       		.byte	0
 41494 151c9 00       		.byte	0
 41495 151ca 00       		.byte	0
 41496 151cb 00       		.byte	0
 41497 151cc 00       		.byte	0
 41498 151cd 00       		.byte	0
 41499 151ce 00       		.byte	0
 41500 151cf CF01     		.uleb128 0xcf
 41501 151d1 00000000 		.quad	.LVL476
 41501      00000000 
 41502 151d9 D3020100 		.long	0x102d3
 41503 151dd 00       		.byte	0
 41504 151de C901     		.uleb128 0xc9
 41505 151e0 67010100 		.long	0x10167
 41506 151e4 00000000 		.quad	.LBB4654
 41506      00000000 
 41507 151ec 00000000 		.long	.Ldebug_ranges0+0x24c0
 41508 151f0 16       		.byte	0x16
 41509 151f1 43       		.byte	0x43
 41510 151f2 5B520100 		.long	0x1525b
 41511 151f6 BE01     		.uleb128 0xbe
 41512 151f8 76010100 		.long	0x10176
 41513 151fc 00000000 		.long	.LLST544
 41514 15200 B601     		.uleb128 0xb6
 41515 15202 00000000 		.long	.Ldebug_ranges0+0x24c0
 41516 15206 BA01     		.uleb128 0xba
 41517 15208 82010100 		.long	0x10182
GAS LISTING /tmp/ccJUMvuF.s 			page 1042


 41518 1520c CA01     		.uleb128 0xca
 41519 1520e 46D40000 		.long	0xd446
 41520 15212 00000000 		.quad	.LBB4656
 41520      00000000 
 41521 1521a 15000000 		.quad	.LBE4656-.LBB4656
 41521      00000000 
 41522 15222 02       		.byte	0x2
 41523 15223 39       		.byte	0x39
 41524 15224 3D520100 		.long	0x1523d
 41525 15228 BE01     		.uleb128 0xbe
 41526 1522a 5FD40000 		.long	0xd45f
 41527 1522e 00000000 		.long	.LLST545
 41528 15232 BE01     		.uleb128 0xbe
 41529 15234 55D40000 		.long	0xd455
 41530 15238 00000000 		.long	.LLST546
 41531 1523c 00       		.byte	0
 41532 1523d CF01     		.uleb128 0xcf
 41533 1523f 00000000 		.quad	.LVL488
 41533      00000000 
 41534 15247 D3020100 		.long	0x102d3
 41535 1524b CF01     		.uleb128 0xcf
 41536 1524d 00000000 		.quad	.LVL490
 41536      00000000 
 41537 15255 D3020100 		.long	0x102d3
 41538 15259 00       		.byte	0
 41539 1525a 00       		.byte	0
 41540 1525b C901     		.uleb128 0xc9
 41541 1525d 90010100 		.long	0x10190
 41542 15261 00000000 		.quad	.LBB4660
 41542      00000000 
 41543 15269 00000000 		.long	.Ldebug_ranges0+0x24f0
 41544 1526d 16       		.byte	0x16
 41545 1526e 45       		.byte	0x45
 41546 1526f 9D600100 		.long	0x1609d
 41547 15273 BE01     		.uleb128 0xbe
 41548 15275 9F010100 		.long	0x1019f
 41549 15279 00000000 		.long	.LLST547
 41550 1527d C401     		.uleb128 0xc4
 41551 1527f 00000000 		.long	.Ldebug_ranges0+0x2570
 41552 15283 9A5F0100 		.long	0x15f9a
 41553 15287 BB01     		.uleb128 0xbb
 41554 15289 B5010100 		.long	0x101b5
 41555 1528d 00000000 		.long	.LLST548
 41556 15291 BB01     		.uleb128 0xbb
 41557 15293 C1010100 		.long	0x101c1
 41558 15297 00000000 		.long	.LLST549
 41559 1529b C901     		.uleb128 0xc9
 41560 1529d 7BFA0000 		.long	0xfa7b
 41561 152a1 00000000 		.quad	.LBB4663
 41561      00000000 
 41562 152a9 00000000 		.long	.Ldebug_ranges0+0x25f0
 41563 152ad 02       		.byte	0x2
 41564 152ae 42       		.byte	0x42
 41565 152af CE520100 		.long	0x152ce
 41566 152b3 BE01     		.uleb128 0xbe
 41567 152b5 B0FA0000 		.long	0xfab0
 41568 152b9 00000000 		.long	.LLST550
GAS LISTING /tmp/ccJUMvuF.s 			page 1043


 41569 152bd AE01     		.uleb128 0xae
 41570 152bf A4FA0000 		.long	0xfaa4
 41571 152c3 BE01     		.uleb128 0xbe
 41572 152c5 98FA0000 		.long	0xfa98
 41573 152c9 00000000 		.long	.LLST551
 41574 152cd 00       		.byte	0
 41575 152ce C901     		.uleb128 0xc9
 41576 152d0 BDFA0000 		.long	0xfabd
 41577 152d4 00000000 		.quad	.LBB4666
 41577      00000000 
 41578 152dc 00000000 		.long	.Ldebug_ranges0+0x2620
 41579 152e0 02       		.byte	0x2
 41580 152e1 45       		.byte	0x45
 41581 152e2 77590100 		.long	0x15977
 41582 152e6 BE01     		.uleb128 0xbe
 41583 152e8 DEFA0000 		.long	0xfade
 41584 152ec 00000000 		.long	.LLST552
 41585 152f0 BE01     		.uleb128 0xbe
 41586 152f2 D1FA0000 		.long	0xfad1
 41587 152f6 00000000 		.long	.LLST553
 41588 152fa CC01     		.uleb128 0xcc
 41589 152fc 2FFA0000 		.long	0xfa2f
 41590 15300 00000000 		.quad	.LBB4667
 41590      00000000 
 41591 15308 00000000 		.long	.Ldebug_ranges0+0x2620
 41592 1530c 0D       		.byte	0xd
 41593 1530d 4D12     		.value	0x124d
 41594 1530f BE01     		.uleb128 0xbe
 41595 15311 59FA0000 		.long	0xfa59
 41596 15315 00000000 		.long	.LLST552
 41597 15319 BE01     		.uleb128 0xbe
 41598 1531b 4CFA0000 		.long	0xfa4c
 41599 1531f 00000000 		.long	.LLST553
 41600 15323 C301     		.uleb128 0xc3
 41601 15325 16FA0000 		.long	0xfa16
 41602 15329 00000000 		.quad	.LBB4669
 41602      00000000 
 41603 15331 00000000 		.long	.Ldebug_ranges0+0x26a0
 41604 15335 0D       		.byte	0xd
 41605 15336 B007     		.value	0x7b0
 41606 15338 43530100 		.long	0x15343
 41607 1533c AE01     		.uleb128 0xae
 41608 1533e 21FA0000 		.long	0xfa21
 41609 15342 00       		.byte	0
 41610 15343 C301     		.uleb128 0xc3
 41611 15345 61F00000 		.long	0xf061
 41612 15349 00000000 		.quad	.LBB4675
 41612      00000000 
 41613 15351 00000000 		.long	.Ldebug_ranges0+0x26e0
 41614 15355 0D       		.byte	0xd
 41615 15356 B207     		.value	0x7b2
 41616 15358 17590100 		.long	0x15917
 41617 1535c AE01     		.uleb128 0xae
 41618 1535e 8BF00000 		.long	0xf08b
 41619 15362 BE01     		.uleb128 0xbe
 41620 15364 7EF00000 		.long	0xf07e
 41621 15368 00000000 		.long	.LLST556
GAS LISTING /tmp/ccJUMvuF.s 			page 1044


 41622 1536c C301     		.uleb128 0xc3
 41623 1536e CF010100 		.long	0x101cf
 41624 15372 00000000 		.quad	.LBB4677
 41624      00000000 
 41625 1537a 00000000 		.long	.Ldebug_ranges0+0x2750
 41626 1537e 0D       		.byte	0xd
 41627 1537f 5C07     		.value	0x75c
 41628 15381 E4550100 		.long	0x155e4
 41629 15385 AE01     		.uleb128 0xae
 41630 15387 06020100 		.long	0x10206
 41631 1538b BE01     		.uleb128 0xbe
 41632 1538d F9010100 		.long	0x101f9
 41633 15391 00000000 		.long	.LLST557
 41634 15395 BE01     		.uleb128 0xbe
 41635 15397 EC010100 		.long	0x101ec
 41636 1539b 00000000 		.long	.LLST558
 41637 1539f B601     		.uleb128 0xb6
 41638 153a1 00000000 		.long	.Ldebug_ranges0+0x2750
 41639 153a5 BB01     		.uleb128 0xbb
 41640 153a7 15020100 		.long	0x10215
 41641 153ab 00000000 		.long	.LLST559
 41642 153af C501     		.uleb128 0xc5
 41643 153b1 79E80000 		.long	0xe879
 41644 153b5 00000000 		.quad	.LBB4679
 41644      00000000 
 41645 153bd 1F000000 		.quad	.LBE4679-.LBB4679
 41645      00000000 
 41646 153c5 0D       		.byte	0xd
 41647 153c6 3407     		.value	0x734
 41648 153c8 E1530100 		.long	0x153e1
 41649 153cc BE01     		.uleb128 0xbe
 41650 153ce 92E80000 		.long	0xe892
 41651 153d2 00000000 		.long	.LLST560
 41652 153d6 BE01     		.uleb128 0xbe
 41653 153d8 88E80000 		.long	0xe888
 41654 153dc 00000000 		.long	.LLST561
 41655 153e0 00       		.byte	0
 41656 153e1 C501     		.uleb128 0xc5
 41657 153e3 82E20000 		.long	0xe282
 41658 153e7 00000000 		.quad	.LBB4682
 41658      00000000 
 41659 153ef 04000000 		.quad	.LBE4682-.LBB4682
 41659      00000000 
 41660 153f7 0D       		.byte	0xd
 41661 153f8 3607     		.value	0x736
 41662 153fa 15540100 		.long	0x15415
 41663 153fe BE01     		.uleb128 0xbe
 41664 15400 A3E20000 		.long	0xe2a3
 41665 15404 00000000 		.long	.LLST562
 41666 15408 AE01     		.uleb128 0xae
 41667 1540a B9E20000 		.long	0xe2b9
 41668 1540e AE01     		.uleb128 0xae
 41669 15410 ADE20000 		.long	0xe2ad
 41670 15414 00       		.byte	0
 41671 15415 C301     		.uleb128 0xc3
 41672 15417 09E50000 		.long	0xe509
 41673 1541b 00000000 		.quad	.LBB4684
GAS LISTING /tmp/ccJUMvuF.s 			page 1045


 41673      00000000 
 41674 15423 00000000 		.long	.Ldebug_ranges0+0x2790
 41675 15427 0D       		.byte	0xd
 41676 15428 3E07     		.value	0x73e
 41677 1542a A4540100 		.long	0x154a4
 41678 1542e BE01     		.uleb128 0xbe
 41679 15430 26E50000 		.long	0xe526
 41680 15434 00000000 		.long	.LLST563
 41681 15438 B601     		.uleb128 0xb6
 41682 1543a 00000000 		.long	.Ldebug_ranges0+0x2790
 41683 1543e BB01     		.uleb128 0xbb
 41684 15440 42E50000 		.long	0xe542
 41685 15444 00000000 		.long	.LLST564
 41686 15448 BA01     		.uleb128 0xba
 41687 1544a 4FE50000 		.long	0xe54f
 41688 1544e C301     		.uleb128 0xc3
 41689 15450 74E40000 		.long	0xe474
 41690 15454 00000000 		.quad	.LBB4686
 41690      00000000 
 41691 1545c 00000000 		.long	.Ldebug_ranges0+0x27c0
 41692 15460 0D       		.byte	0xd
 41693 15461 2307     		.value	0x723
 41694 15463 7E540100 		.long	0x1547e
 41695 15467 AE01     		.uleb128 0xae
 41696 15469 95E40000 		.long	0xe495
 41697 1546d BE01     		.uleb128 0xbe
 41698 1546f 9FE40000 		.long	0xe49f
 41699 15473 00000000 		.long	.LLST565
 41700 15477 AE01     		.uleb128 0xae
 41701 15479 ABE40000 		.long	0xe4ab
 41702 1547d 00       		.byte	0
 41703 1547e B801     		.uleb128 0xb8
 41704 15480 EFE40000 		.long	0xe4ef
 41705 15484 00000000 		.quad	.LBB4689
 41705      00000000 
 41706 1548c 04000000 		.quad	.LBE4689-.LBB4689
 41706      00000000 
 41707 15494 0D       		.byte	0xd
 41708 15495 2707     		.value	0x727
 41709 15497 BE01     		.uleb128 0xbe
 41710 15499 FEE40000 		.long	0xe4fe
 41711 1549d 00000000 		.long	.LLST566
 41712 154a1 00       		.byte	0
 41713 154a2 00       		.byte	0
 41714 154a3 00       		.byte	0
 41715 154a4 B901     		.uleb128 0xb9
 41716 154a6 00000000 		.quad	.LBB4693
 41716      00000000 
 41717 154ae 40000000 		.quad	.LBE4693-.LBB4693
 41717      00000000 
 41718 154b6 BB01     		.uleb128 0xbb
 41719 154b8 24020100 		.long	0x10224
 41720 154bc 00000000 		.long	.LLST567
 41721 154c0 B801     		.uleb128 0xb8
 41722 154c2 1CF00000 		.long	0xf01c
 41723 154c6 00000000 		.quad	.LBB4694
 41723      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1046


 41724 154ce 31000000 		.quad	.LBE4694-.LBB4694
 41724      00000000 
 41725 154d6 0D       		.byte	0xd
 41726 154d7 3A07     		.value	0x73a
 41727 154d9 AE01     		.uleb128 0xae
 41728 154db 53F00000 		.long	0xf053
 41729 154df AE01     		.uleb128 0xae
 41730 154e1 46F00000 		.long	0xf046
 41731 154e5 AE01     		.uleb128 0xae
 41732 154e7 39F00000 		.long	0xf039
 41733 154eb B801     		.uleb128 0xb8
 41734 154ed 8BEF0000 		.long	0xef8b
 41735 154f1 00000000 		.quad	.LBB4695
 41735      00000000 
 41736 154f9 31000000 		.quad	.LBE4695-.LBB4695
 41736      00000000 
 41737 15501 14       		.byte	0x14
 41738 15502 A602     		.value	0x2a6
 41739 15504 AE01     		.uleb128 0xae
 41740 15506 CCEF0000 		.long	0xefcc
 41741 1550a AE01     		.uleb128 0xae
 41742 1550c BFEF0000 		.long	0xefbf
 41743 15510 AE01     		.uleb128 0xae
 41744 15512 B2EF0000 		.long	0xefb2
 41745 15516 B801     		.uleb128 0xb8
 41746 15518 0AEF0000 		.long	0xef0a
 41747 1551c 00000000 		.quad	.LBB4696
 41747      00000000 
 41748 15524 31000000 		.quad	.LBE4696-.LBB4696
 41748      00000000 
 41749 1552c 14       		.byte	0x14
 41750 1552d 5F02     		.value	0x25f
 41751 1552f BE01     		.uleb128 0xbe
 41752 15531 4BEF0000 		.long	0xef4b
 41753 15535 00000000 		.long	.LLST568
 41754 15539 BE01     		.uleb128 0xbe
 41755 1553b 3EEF0000 		.long	0xef3e
 41756 1553f 00000000 		.long	.LLST569
 41757 15543 AE01     		.uleb128 0xae
 41758 15545 31EF0000 		.long	0xef31
 41759 15549 B901     		.uleb128 0xb9
 41760 1554b 00000000 		.quad	.LBB4697
 41760      00000000 
 41761 15553 31000000 		.quad	.LBE4697-.LBB4697
 41761      00000000 
 41762 1555b BB01     		.uleb128 0xbb
 41763 1555d 5AEF0000 		.long	0xef5a
 41764 15561 00000000 		.long	.LLST570
 41765 15565 B801     		.uleb128 0xb8
 41766 15567 34020100 		.long	0x10234
 41767 1556b 00000000 		.quad	.LBB4698
 41767      00000000 
 41768 15573 31000000 		.quad	.LBE4698-.LBB4698
 41768      00000000 
 41769 1557b 14       		.byte	0x14
 41770 1557c 5602     		.value	0x256
 41771 1557e BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1047


 41772 15580 62020100 		.long	0x10262
 41773 15584 00000000 		.long	.LLST568
 41774 15588 BE01     		.uleb128 0xbe
 41775 1558a 55020100 		.long	0x10255
 41776 1558e 00000000 		.long	.LLST569
 41777 15592 AE01     		.uleb128 0xae
 41778 15594 48020100 		.long	0x10248
 41779 15598 B901     		.uleb128 0xb9
 41780 1559a 00000000 		.quad	.LBB4699
 41780      00000000 
 41781 155a2 31000000 		.quad	.LBE4699-.LBB4699
 41781      00000000 
 41782 155aa BB01     		.uleb128 0xbb
 41783 155ac 71020100 		.long	0x10271
 41784 155b0 00000000 		.long	.LLST573
 41785 155b4 C101     		.uleb128 0xc1
 41786 155b6 00000000 		.quad	.LVL576
 41786      00000000 
 41787 155be 166C0100 		.long	0x16c16
 41788 155c2 C201     		.uleb128 0xc2
 41789 155c4 01       		.uleb128 0x1
 41790 155c5 55       		.byte	0x55
 41791 155c6 02       		.uleb128 0x2
 41792 155c7 76       		.byte	0x76
 41793 155c8 08       		.sleb128 8
 41794 155c9 C201     		.uleb128 0xc2
 41795 155cb 01       		.uleb128 0x1
 41796 155cc 54       		.byte	0x54
 41797 155cd 02       		.uleb128 0x2
 41798 155ce 76       		.byte	0x76
 41799 155cf 00       		.sleb128 0
 41800 155d0 C201     		.uleb128 0xc2
 41801 155d2 01       		.uleb128 0x1
 41802 155d3 51       		.byte	0x51
 41803 155d4 05       		.uleb128 0x5
 41804 155d5 73       		.byte	0x73
 41805 155d6 00       		.sleb128 0
 41806 155d7 76       		.byte	0x76
 41807 155d8 00       		.sleb128 0
 41808 155d9 1C       		.byte	0x1c
 41809 155da 00       		.byte	0
 41810 155db 00       		.byte	0
 41811 155dc 00       		.byte	0
 41812 155dd 00       		.byte	0
 41813 155de 00       		.byte	0
 41814 155df 00       		.byte	0
 41815 155e0 00       		.byte	0
 41816 155e1 00       		.byte	0
 41817 155e2 00       		.byte	0
 41818 155e3 00       		.byte	0
 41819 155e4 C301     		.uleb128 0xc3
 41820 155e6 5EE50000 		.long	0xe55e
 41821 155ea 00000000 		.quad	.LBB4705
 41821      00000000 
 41822 155f2 00000000 		.long	.Ldebug_ranges0+0x27f0
 41823 155f6 0D       		.byte	0xd
 41824 155f7 5D07     		.value	0x75d
GAS LISTING /tmp/ccJUMvuF.s 			page 1048


 41825 155f9 A2560100 		.long	0x156a2
 41826 155fd AE01     		.uleb128 0xae
 41827 155ff 88E50000 		.long	0xe588
 41828 15603 AE01     		.uleb128 0xae
 41829 15605 7BE50000 		.long	0xe57b
 41830 15609 B601     		.uleb128 0xb6
 41831 1560b 00000000 		.long	.Ldebug_ranges0+0x27f0
 41832 1560f BA01     		.uleb128 0xba
 41833 15611 A4E50000 		.long	0xe5a4
 41834 15615 CC01     		.uleb128 0xcc
 41835 15617 09E50000 		.long	0xe509
 41836 1561b 00000000 		.quad	.LBB4707
 41836      00000000 
 41837 15623 00000000 		.long	.Ldebug_ranges0+0x2820
 41838 15627 0D       		.byte	0xd
 41839 15628 4A07     		.value	0x74a
 41840 1562a BE01     		.uleb128 0xbe
 41841 1562c 26E50000 		.long	0xe526
 41842 15630 00000000 		.long	.LLST574
 41843 15634 B601     		.uleb128 0xb6
 41844 15636 00000000 		.long	.Ldebug_ranges0+0x2820
 41845 1563a BB01     		.uleb128 0xbb
 41846 1563c 42E50000 		.long	0xe542
 41847 15640 00000000 		.long	.LLST575
 41848 15644 BA01     		.uleb128 0xba
 41849 15646 4FE50000 		.long	0xe54f
 41850 1564a C301     		.uleb128 0xc3
 41851 1564c 74E40000 		.long	0xe474
 41852 15650 00000000 		.quad	.LBB4709
 41852      00000000 
 41853 15658 00000000 		.long	.Ldebug_ranges0+0x2860
 41854 1565c 0D       		.byte	0xd
 41855 1565d 2307     		.value	0x723
 41856 1565f 7A560100 		.long	0x1567a
 41857 15663 AE01     		.uleb128 0xae
 41858 15665 95E40000 		.long	0xe495
 41859 15669 BE01     		.uleb128 0xbe
 41860 1566b 9FE40000 		.long	0xe49f
 41861 1566f 00000000 		.long	.LLST576
 41862 15673 AE01     		.uleb128 0xae
 41863 15675 ABE40000 		.long	0xe4ab
 41864 15679 00       		.byte	0
 41865 1567a B801     		.uleb128 0xb8
 41866 1567c EFE40000 		.long	0xe4ef
 41867 15680 00000000 		.quad	.LBB4712
 41867      00000000 
 41868 15688 04000000 		.quad	.LBE4712-.LBB4712
 41868      00000000 
 41869 15690 0D       		.byte	0xd
 41870 15691 2707     		.value	0x727
 41871 15693 BE01     		.uleb128 0xbe
 41872 15695 FEE40000 		.long	0xe4fe
 41873 15699 00000000 		.long	.LLST577
 41874 1569d 00       		.byte	0
 41875 1569e 00       		.byte	0
 41876 1569f 00       		.byte	0
 41877 156a0 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1049


 41878 156a1 00       		.byte	0
 41879 156a2 CC01     		.uleb128 0xcc
 41880 156a4 CF010100 		.long	0x101cf
 41881 156a8 00000000 		.quad	.LBB4721
 41881      00000000 
 41882 156b0 00000000 		.long	.Ldebug_ranges0+0x2890
 41883 156b4 0D       		.byte	0xd
 41884 156b5 6107     		.value	0x761
 41885 156b7 AE01     		.uleb128 0xae
 41886 156b9 06020100 		.long	0x10206
 41887 156bd BE01     		.uleb128 0xbe
 41888 156bf F9010100 		.long	0x101f9
 41889 156c3 00000000 		.long	.LLST578
 41890 156c7 BE01     		.uleb128 0xbe
 41891 156c9 EC010100 		.long	0x101ec
 41892 156cd 00000000 		.long	.LLST579
 41893 156d1 B601     		.uleb128 0xb6
 41894 156d3 00000000 		.long	.Ldebug_ranges0+0x2890
 41895 156d7 BB01     		.uleb128 0xbb
 41896 156d9 15020100 		.long	0x10215
 41897 156dd 00000000 		.long	.LLST580
 41898 156e1 C501     		.uleb128 0xc5
 41899 156e3 79E80000 		.long	0xe879
 41900 156e7 00000000 		.quad	.LBB4723
 41900      00000000 
 41901 156ef 04000000 		.quad	.LBE4723-.LBB4723
 41901      00000000 
 41902 156f7 0D       		.byte	0xd
 41903 156f8 3407     		.value	0x734
 41904 156fa 13570100 		.long	0x15713
 41905 156fe BE01     		.uleb128 0xbe
 41906 15700 92E80000 		.long	0xe892
 41907 15704 00000000 		.long	.LLST581
 41908 15708 BE01     		.uleb128 0xbe
 41909 1570a 88E80000 		.long	0xe888
 41910 1570e 00000000 		.long	.LLST582
 41911 15712 00       		.byte	0
 41912 15713 C501     		.uleb128 0xc5
 41913 15715 82E20000 		.long	0xe282
 41914 15719 00000000 		.quad	.LBB4726
 41914      00000000 
 41915 15721 05000000 		.quad	.LBE4726-.LBB4726
 41915      00000000 
 41916 15729 0D       		.byte	0xd
 41917 1572a 3607     		.value	0x736
 41918 1572c 47570100 		.long	0x15747
 41919 15730 BE01     		.uleb128 0xbe
 41920 15732 A3E20000 		.long	0xe2a3
 41921 15736 00000000 		.long	.LLST583
 41922 1573a AE01     		.uleb128 0xae
 41923 1573c B9E20000 		.long	0xe2b9
 41924 15740 AE01     		.uleb128 0xae
 41925 15742 ADE20000 		.long	0xe2ad
 41926 15746 00       		.byte	0
 41927 15747 C301     		.uleb128 0xc3
 41928 15749 09E50000 		.long	0xe509
 41929 1574d 00000000 		.quad	.LBB4728
GAS LISTING /tmp/ccJUMvuF.s 			page 1050


 41929      00000000 
 41930 15755 00000000 		.long	.Ldebug_ranges0+0x28c0
 41931 15759 0D       		.byte	0xd
 41932 1575a 3E07     		.value	0x73e
 41933 1575c D6570100 		.long	0x157d6
 41934 15760 BE01     		.uleb128 0xbe
 41935 15762 26E50000 		.long	0xe526
 41936 15766 00000000 		.long	.LLST584
 41937 1576a B601     		.uleb128 0xb6
 41938 1576c 00000000 		.long	.Ldebug_ranges0+0x28c0
 41939 15770 BB01     		.uleb128 0xbb
 41940 15772 42E50000 		.long	0xe542
 41941 15776 00000000 		.long	.LLST585
 41942 1577a BA01     		.uleb128 0xba
 41943 1577c 4FE50000 		.long	0xe54f
 41944 15780 C301     		.uleb128 0xc3
 41945 15782 74E40000 		.long	0xe474
 41946 15786 00000000 		.quad	.LBB4730
 41946      00000000 
 41947 1578e 00000000 		.long	.Ldebug_ranges0+0x28f0
 41948 15792 0D       		.byte	0xd
 41949 15793 2307     		.value	0x723
 41950 15795 B0570100 		.long	0x157b0
 41951 15799 AE01     		.uleb128 0xae
 41952 1579b 95E40000 		.long	0xe495
 41953 1579f BE01     		.uleb128 0xbe
 41954 157a1 9FE40000 		.long	0xe49f
 41955 157a5 00000000 		.long	.LLST586
 41956 157a9 AE01     		.uleb128 0xae
 41957 157ab ABE40000 		.long	0xe4ab
 41958 157af 00       		.byte	0
 41959 157b0 B801     		.uleb128 0xb8
 41960 157b2 EFE40000 		.long	0xe4ef
 41961 157b6 00000000 		.quad	.LBB4733
 41961      00000000 
 41962 157be 04000000 		.quad	.LBE4733-.LBB4733
 41962      00000000 
 41963 157c6 0D       		.byte	0xd
 41964 157c7 2707     		.value	0x727
 41965 157c9 BE01     		.uleb128 0xbe
 41966 157cb FEE40000 		.long	0xe4fe
 41967 157cf 00000000 		.long	.LLST587
 41968 157d3 00       		.byte	0
 41969 157d4 00       		.byte	0
 41970 157d5 00       		.byte	0
 41971 157d6 B901     		.uleb128 0xb9
 41972 157d8 00000000 		.quad	.LBB4737
 41972      00000000 
 41973 157e0 39000000 		.quad	.LBE4737-.LBB4737
 41973      00000000 
 41974 157e8 BB01     		.uleb128 0xbb
 41975 157ea 24020100 		.long	0x10224
 41976 157ee 00000000 		.long	.LLST588
 41977 157f2 B801     		.uleb128 0xb8
 41978 157f4 1CF00000 		.long	0xf01c
 41979 157f8 00000000 		.quad	.LBB4738
 41979      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1051


 41980 15800 31000000 		.quad	.LBE4738-.LBB4738
 41980      00000000 
 41981 15808 0D       		.byte	0xd
 41982 15809 3A07     		.value	0x73a
 41983 1580b AE01     		.uleb128 0xae
 41984 1580d 53F00000 		.long	0xf053
 41985 15811 AE01     		.uleb128 0xae
 41986 15813 46F00000 		.long	0xf046
 41987 15817 AE01     		.uleb128 0xae
 41988 15819 39F00000 		.long	0xf039
 41989 1581d B801     		.uleb128 0xb8
 41990 1581f 8BEF0000 		.long	0xef8b
 41991 15823 00000000 		.quad	.LBB4739
 41991      00000000 
 41992 1582b 31000000 		.quad	.LBE4739-.LBB4739
 41992      00000000 
 41993 15833 14       		.byte	0x14
 41994 15834 A602     		.value	0x2a6
 41995 15836 AE01     		.uleb128 0xae
 41996 15838 CCEF0000 		.long	0xefcc
 41997 1583c AE01     		.uleb128 0xae
 41998 1583e BFEF0000 		.long	0xefbf
 41999 15842 AE01     		.uleb128 0xae
 42000 15844 B2EF0000 		.long	0xefb2
 42001 15848 B801     		.uleb128 0xb8
 42002 1584a 0AEF0000 		.long	0xef0a
 42003 1584e 00000000 		.quad	.LBB4740
 42003      00000000 
 42004 15856 31000000 		.quad	.LBE4740-.LBB4740
 42004      00000000 
 42005 1585e 14       		.byte	0x14
 42006 1585f 5F02     		.value	0x25f
 42007 15861 BE01     		.uleb128 0xbe
 42008 15863 4BEF0000 		.long	0xef4b
 42009 15867 00000000 		.long	.LLST589
 42010 1586b BE01     		.uleb128 0xbe
 42011 1586d 3EEF0000 		.long	0xef3e
 42012 15871 00000000 		.long	.LLST590
 42013 15875 AE01     		.uleb128 0xae
 42014 15877 31EF0000 		.long	0xef31
 42015 1587b B901     		.uleb128 0xb9
 42016 1587d 00000000 		.quad	.LBB4741
 42016      00000000 
 42017 15885 31000000 		.quad	.LBE4741-.LBB4741
 42017      00000000 
 42018 1588d BB01     		.uleb128 0xbb
 42019 1588f 5AEF0000 		.long	0xef5a
 42020 15893 00000000 		.long	.LLST591
 42021 15897 B801     		.uleb128 0xb8
 42022 15899 34020100 		.long	0x10234
 42023 1589d 00000000 		.quad	.LBB4742
 42023      00000000 
 42024 158a5 31000000 		.quad	.LBE4742-.LBB4742
 42024      00000000 
 42025 158ad 14       		.byte	0x14
 42026 158ae 5602     		.value	0x256
 42027 158b0 BE01     		.uleb128 0xbe
GAS LISTING /tmp/ccJUMvuF.s 			page 1052


 42028 158b2 62020100 		.long	0x10262
 42029 158b6 00000000 		.long	.LLST589
 42030 158ba BE01     		.uleb128 0xbe
 42031 158bc 55020100 		.long	0x10255
 42032 158c0 00000000 		.long	.LLST590
 42033 158c4 AE01     		.uleb128 0xae
 42034 158c6 48020100 		.long	0x10248
 42035 158ca B901     		.uleb128 0xb9
 42036 158cc 00000000 		.quad	.LBB4743
 42036      00000000 
 42037 158d4 31000000 		.quad	.LBE4743-.LBB4743
 42037      00000000 
 42038 158dc BB01     		.uleb128 0xbb
 42039 158de 71020100 		.long	0x10271
 42040 158e2 00000000 		.long	.LLST594
 42041 158e6 C101     		.uleb128 0xc1
 42042 158e8 00000000 		.quad	.LVL601
 42042      00000000 
 42043 158f0 166C0100 		.long	0x16c16
 42044 158f4 C201     		.uleb128 0xc2
 42045 158f6 01       		.uleb128 0x1
 42046 158f7 55       		.byte	0x55
 42047 158f8 02       		.uleb128 0x2
 42048 158f9 7C       		.byte	0x7c
 42049 158fa 08       		.sleb128 8
 42050 158fb C201     		.uleb128 0xc2
 42051 158fd 01       		.uleb128 0x1
 42052 158fe 54       		.byte	0x54
 42053 158ff 02       		.uleb128 0x2
 42054 15900 7C       		.byte	0x7c
 42055 15901 00       		.sleb128 0
 42056 15902 C201     		.uleb128 0xc2
 42057 15904 01       		.uleb128 0x1
 42058 15905 51       		.byte	0x51
 42059 15906 05       		.uleb128 0x5
 42060 15907 7E       		.byte	0x7e
 42061 15908 00       		.sleb128 0
 42062 15909 7C       		.byte	0x7c
 42063 1590a 00       		.sleb128 0
 42064 1590b 1C       		.byte	0x1c
 42065 1590c 00       		.byte	0
 42066 1590d 00       		.byte	0
 42067 1590e 00       		.byte	0
 42068 1590f 00       		.byte	0
 42069 15910 00       		.byte	0
 42070 15911 00       		.byte	0
 42071 15912 00       		.byte	0
 42072 15913 00       		.byte	0
 42073 15914 00       		.byte	0
 42074 15915 00       		.byte	0
 42075 15916 00       		.byte	0
 42076 15917 C101     		.uleb128 0xc1
 42077 15919 00000000 		.quad	.LVL502
 42077      00000000 
 42078 15921 041E0100 		.long	0x11e04
 42079 15925 C201     		.uleb128 0xc2
 42080 15927 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1053


 42081 15928 55       		.byte	0x55
 42082 15929 04       		.uleb128 0x4
 42083 1592a 91       		.byte	0x91
 42084 1592b 887E     		.sleb128 -248
 42085 1592d 06       		.byte	0x6
 42086 1592e C201     		.uleb128 0xc2
 42087 15930 01       		.uleb128 0x1
 42088 15931 54       		.byte	0x54
 42089 15932 02       		.uleb128 0x2
 42090 15933 7C       		.byte	0x7c
 42091 15934 00       		.sleb128 0
 42092 15935 C201     		.uleb128 0xc2
 42093 15937 01       		.uleb128 0x1
 42094 15938 51       		.byte	0x51
 42095 15939 3A       		.uleb128 0x3a
 42096 1593a 08       		.byte	0x8
 42097 1593b 3F       		.byte	0x3f
 42098 1593c 08       		.byte	0x8
 42099 1593d 3F       		.byte	0x3f
 42100 1593e 7E       		.byte	0x7e
 42101 1593f 00       		.sleb128 0
 42102 15940 33       		.byte	0x33
 42103 15941 26       		.byte	0x26
 42104 15942 12       		.byte	0x12
 42105 15943 28       		.byte	0x28
 42106 15944 0600     		.value	0x6
 42107 15946 13       		.byte	0x13
 42108 15947 08       		.byte	0x8
 42109 15948 40       		.byte	0x40
 42110 15949 2F       		.byte	0x2f
 42111 1594a 1A00     		.value	0x1a
 42112 1594c 30       		.byte	0x30
 42113 1594d 16       		.byte	0x16
 42114 1594e 12       		.byte	0x12
 42115 1594f 0E       		.byte	0xe
 42116 15950 00000000 		.quad	0x8000000000000000
 42116      00000080 
 42117 15958 1A       		.byte	0x1a
 42118 15959 28       		.byte	0x28
 42119 1595a 0900     		.value	0x9
 42120 1595c 31       		.byte	0x31
 42121 1595d 24       		.byte	0x24
 42122 1595e 16       		.byte	0x16
 42123 1595f 23       		.byte	0x23
 42124 15960 01       		.uleb128 0x1
 42125 15961 16       		.byte	0x16
 42126 15962 2F       		.byte	0x2f
 42127 15963 E9FF     		.value	0xffe9
 42128 15965 13       		.byte	0x13
 42129 15966 96       		.byte	0x96
 42130 15967 1C       		.byte	0x1c
 42131 15968 08       		.byte	0x8
 42132 15969 3F       		.byte	0x3f
 42133 1596a 27       		.byte	0x27
 42134 1596b 08       		.byte	0x8
 42135 1596c 20       		.byte	0x20
 42136 1596d 24       		.byte	0x24
GAS LISTING /tmp/ccJUMvuF.s 			page 1054


 42137 1596e 08       		.byte	0x8
 42138 1596f 20       		.byte	0x20
 42139 15970 26       		.byte	0x26
 42140 15971 1C       		.byte	0x1c
 42141 15972 31       		.byte	0x31
 42142 15973 24       		.byte	0x24
 42143 15974 00       		.byte	0
 42144 15975 00       		.byte	0
 42145 15976 00       		.byte	0
 42146 15977 C901     		.uleb128 0xc9
 42147 15979 10CD0000 		.long	0xcd10
 42148 1597d 00000000 		.quad	.LBB4774
 42148      00000000 
 42149 15985 00000000 		.long	.Ldebug_ranges0+0x2920
 42150 15989 02       		.byte	0x2
 42151 1598a 46       		.byte	0x46
 42152 1598b A4590100 		.long	0x159a4
 42153 1598f BE01     		.uleb128 0xbe
 42154 15991 1FCD0000 		.long	0xcd1f
 42155 15995 00000000 		.long	.LLST595
 42156 15999 BE01     		.uleb128 0xbe
 42157 1599b 1FCD0000 		.long	0xcd1f
 42158 1599f 00000000 		.long	.LLST595
 42159 159a3 00       		.byte	0
 42160 159a4 C901     		.uleb128 0xc9
 42161 159a6 20CB0000 		.long	0xcb20
 42162 159aa 00000000 		.quad	.LBB4777
 42162      00000000 
 42163 159b2 00000000 		.long	.Ldebug_ranges0+0x2950
 42164 159b6 02       		.byte	0x2
 42165 159b7 47       		.byte	0x47
 42166 159b8 F0590100 		.long	0x159f0
 42167 159bc AE01     		.uleb128 0xae
 42168 159be 34CB0000 		.long	0xcb34
 42169 159c2 BE01     		.uleb128 0xbe
 42170 159c4 41CB0000 		.long	0xcb41
 42171 159c8 00000000 		.long	.LLST597
 42172 159cc C101     		.uleb128 0xc1
 42173 159ce 00000000 		.quad	.LVL530
 42173      00000000 
 42174 159d6 B5920000 		.long	0x92b5
 42175 159da C201     		.uleb128 0xc2
 42176 159dc 01       		.uleb128 0x1
 42177 159dd 54       		.byte	0x54
 42178 159de 09       		.uleb128 0x9
 42179 159df 03       		.byte	0x3
 42180 159e0 00000000 		.quad	.LC14
 42180      00000000 
 42181 159e8 C201     		.uleb128 0xc2
 42182 159ea 01       		.uleb128 0x1
 42183 159eb 51       		.byte	0x51
 42184 159ec 01       		.uleb128 0x1
 42185 159ed 44       		.byte	0x44
 42186 159ee 00       		.byte	0
 42187 159ef 00       		.byte	0
 42188 159f0 C901     		.uleb128 0xc9
 42189 159f2 02FB0000 		.long	0xfb02
GAS LISTING /tmp/ccJUMvuF.s 			page 1055


 42190 159f6 00000000 		.quad	.LBB4784
 42190      00000000 
 42191 159fe 00000000 		.long	.Ldebug_ranges0+0x2990
 42192 15a02 02       		.byte	0x2
 42193 15a03 47       		.byte	0x47
 42194 15a04 475B0100 		.long	0x15b47
 42195 15a08 AE01     		.uleb128 0xae
 42196 15a0a 1BFB0000 		.long	0xfb1b
 42197 15a0e AE01     		.uleb128 0xae
 42198 15a10 11FB0000 		.long	0xfb11
 42199 15a14 CE01     		.uleb128 0xce
 42200 15a16 80020100 		.long	0x10280
 42201 15a1a 00000000 		.quad	.LBB4786
 42201      00000000 
 42202 15a22 0E000000 		.quad	.LBE4786-.LBB4786
 42202      00000000 
 42203 15a2a 09       		.byte	0x9
 42204 15a2b 84       		.byte	0x84
 42205 15a2c BE01     		.uleb128 0xbe
 42206 15a2e 8B020100 		.long	0x1028b
 42207 15a32 00000000 		.long	.LLST598
 42208 15a36 B801     		.uleb128 0xb8
 42209 15a38 D0CB0000 		.long	0xcbd0
 42210 15a3c 00000000 		.quad	.LBB4787
 42210      00000000 
 42211 15a44 0E000000 		.quad	.LBE4787-.LBB4787
 42211      00000000 
 42212 15a4c 15       		.byte	0x15
 42213 15a4d C003     		.value	0x3c0
 42214 15a4f BE01     		.uleb128 0xbe
 42215 15a51 F6CB0000 		.long	0xcbf6
 42216 15a55 00000000 		.long	.LLST599
 42217 15a59 BE01     		.uleb128 0xbe
 42218 15a5b E9CB0000 		.long	0xcbe9
 42219 15a5f 00000000 		.long	.LLST600
 42220 15a63 BE01     		.uleb128 0xbe
 42221 15a65 DFCB0000 		.long	0xcbdf
 42222 15a69 00000000 		.long	.LLST598
 42223 15a6d B901     		.uleb128 0xb9
 42224 15a6f 00000000 		.quad	.LBB4788
 42224      00000000 
 42225 15a77 0E000000 		.quad	.LBE4788-.LBB4788
 42225      00000000 
 42226 15a7f BB01     		.uleb128 0xbb
 42227 15a81 05CC0000 		.long	0xcc05
 42228 15a85 00000000 		.long	.LLST602
 42229 15a89 C501     		.uleb128 0xc5
 42230 15a8b 78CB0000 		.long	0xcb78
 42231 15a8f 00000000 		.quad	.LBB4789
 42231      00000000 
 42232 15a97 08000000 		.quad	.LBE4789-.LBB4789
 42232      00000000 
 42233 15a9f 15       		.byte	0x15
 42234 15aa0 5602     		.value	0x256
 42235 15aa2 E85A0100 		.long	0x15ae8
 42236 15aa6 BE01     		.uleb128 0xbe
 42237 15aa8 8FCB0000 		.long	0xcb8f
GAS LISTING /tmp/ccJUMvuF.s 			page 1056


 42238 15aac 00000000 		.long	.LLST603
 42239 15ab0 BE01     		.uleb128 0xbe
 42240 15ab2 83CB0000 		.long	0xcb83
 42241 15ab6 00000000 		.long	.LLST604
 42242 15aba CE01     		.uleb128 0xce
 42243 15abc 8ECA0000 		.long	0xca8e
 42244 15ac0 00000000 		.quad	.LBB4790
 42244      00000000 
 42245 15ac8 08000000 		.quad	.LBE4790-.LBB4790
 42245      00000000 
 42246 15ad0 15       		.byte	0x15
 42247 15ad1 60       		.byte	0x60
 42248 15ad2 BE01     		.uleb128 0xbe
 42249 15ad4 A5CA0000 		.long	0xcaa5
 42250 15ad8 00000000 		.long	.LLST603
 42251 15adc BE01     		.uleb128 0xbe
 42252 15ade 99CA0000 		.long	0xca99
 42253 15ae2 00000000 		.long	.LLST602
 42254 15ae6 00       		.byte	0
 42255 15ae7 00       		.byte	0
 42256 15ae8 B801     		.uleb128 0xb8
 42257 15aea A1CB0000 		.long	0xcba1
 42258 15aee 00000000 		.quad	.LBB4792
 42258      00000000 
 42259 15af6 06000000 		.quad	.LBE4792-.LBB4792
 42259      00000000 
 42260 15afe 15       		.byte	0x15
 42261 15aff 5702     		.value	0x257
 42262 15b01 BE01     		.uleb128 0xbe
 42263 15b03 B8CB0000 		.long	0xcbb8
 42264 15b07 00000000 		.long	.LLST600
 42265 15b0b BE01     		.uleb128 0xbe
 42266 15b0d ACCB0000 		.long	0xcbac
 42267 15b11 00000000 		.long	.LLST604
 42268 15b15 CE01     		.uleb128 0xce
 42269 15b17 6ACA0000 		.long	0xca6a
 42270 15b1b 00000000 		.quad	.LBB4794
 42270      00000000 
 42271 15b23 06000000 		.quad	.LBE4794-.LBB4794
 42271      00000000 
 42272 15b2b 15       		.byte	0x15
 42273 15b2c 5C       		.byte	0x5c
 42274 15b2d BE01     		.uleb128 0xbe
 42275 15b2f 81CA0000 		.long	0xca81
 42276 15b33 00000000 		.long	.LLST600
 42277 15b37 BE01     		.uleb128 0xbe
 42278 15b39 75CA0000 		.long	0xca75
 42279 15b3d 00000000 		.long	.LLST610
 42280 15b41 00       		.byte	0
 42281 15b42 00       		.byte	0
 42282 15b43 00       		.byte	0
 42283 15b44 00       		.byte	0
 42284 15b45 00       		.byte	0
 42285 15b46 00       		.byte	0
 42286 15b47 C901     		.uleb128 0xc9
 42287 15b49 57CC0000 		.long	0xcc57
 42288 15b4d 00000000 		.quad	.LBB4798
GAS LISTING /tmp/ccJUMvuF.s 			page 1057


 42288      00000000 
 42289 15b55 00000000 		.long	.Ldebug_ranges0+0x29d0
 42290 15b59 02       		.byte	0x2
 42291 15b5a 47       		.byte	0x47
 42292 15b5b 965B0100 		.long	0x15b96
 42293 15b5f BE01     		.uleb128 0xbe
 42294 15b61 70CC0000 		.long	0xcc70
 42295 15b65 00000000 		.long	.LLST611
 42296 15b69 AE01     		.uleb128 0xae
 42297 15b6b 66CC0000 		.long	0xcc66
 42298 15b6f C101     		.uleb128 0xc1
 42299 15b71 00000000 		.quad	.LVL535
 42299      00000000 
 42300 15b79 94290000 		.long	0x2994
 42301 15b7d C201     		.uleb128 0xc2
 42302 15b7f 01       		.uleb128 0x1
 42303 15b80 61       		.byte	0x61
 42304 15b81 12       		.uleb128 0x12
 42305 15b82 91       		.byte	0x91
 42306 15b83 887E     		.sleb128 -248
 42307 15b85 F6       		.byte	0xf6
 42308 15b86 08       		.byte	0x8
 42309 15b87 29       		.uleb128 0x29
 42310 15b88 F4       		.byte	0xf4
 42311 15b89 29       		.uleb128 0x29
 42312 15b8a 08       		.byte	0x8
 42313 15b8b 00000000 		.long	0
 42314 15b8f 00408F40 		.long	0x408f4000
 42315 15b93 1E       		.byte	0x1e
 42316 15b94 00       		.byte	0
 42317 15b95 00       		.byte	0
 42318 15b96 C901     		.uleb128 0xc9
 42319 15b98 20CB0000 		.long	0xcb20
 42320 15b9c 00000000 		.quad	.LBB4805
 42320      00000000 
 42321 15ba4 00000000 		.long	.Ldebug_ranges0+0x2a10
 42322 15ba8 02       		.byte	0x2
 42323 15ba9 47       		.byte	0x47
 42324 15baa ED5B0100 		.long	0x15bed
 42325 15bae BE01     		.uleb128 0xbe
 42326 15bb0 41CB0000 		.long	0xcb41
 42327 15bb4 00000000 		.long	.LLST612
 42328 15bb8 BE01     		.uleb128 0xbe
 42329 15bba 34CB0000 		.long	0xcb34
 42330 15bbe 00000000 		.long	.LLST613
 42331 15bc2 C101     		.uleb128 0xc1
 42332 15bc4 00000000 		.quad	.LVL537
 42332      00000000 
 42333 15bcc B5920000 		.long	0x92b5
 42334 15bd0 C201     		.uleb128 0xc2
 42335 15bd2 01       		.uleb128 0x1
 42336 15bd3 55       		.byte	0x55
 42337 15bd4 02       		.uleb128 0x2
 42338 15bd5 7C       		.byte	0x7c
 42339 15bd6 00       		.sleb128 0
 42340 15bd7 C201     		.uleb128 0xc2
 42341 15bd9 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1058


 42342 15bda 54       		.byte	0x54
 42343 15bdb 09       		.uleb128 0x9
 42344 15bdc 03       		.byte	0x3
 42345 15bdd 00000000 		.quad	.LC15
 42345      00000000 
 42346 15be5 C201     		.uleb128 0xc2
 42347 15be7 01       		.uleb128 0x1
 42348 15be8 51       		.byte	0x51
 42349 15be9 01       		.uleb128 0x1
 42350 15bea 3B       		.byte	0x3b
 42351 15beb 00       		.byte	0
 42352 15bec 00       		.byte	0
 42353 15bed C901     		.uleb128 0xc9
 42354 15bef 57CC0000 		.long	0xcc57
 42355 15bf3 00000000 		.quad	.LBB4810
 42355      00000000 
 42356 15bfb 00000000 		.long	.Ldebug_ranges0+0x2a40
 42357 15bff 02       		.byte	0x2
 42358 15c00 47       		.byte	0x47
 42359 15c01 435C0100 		.long	0x15c43
 42360 15c05 BE01     		.uleb128 0xbe
 42361 15c07 70CC0000 		.long	0xcc70
 42362 15c0b 00000000 		.long	.LLST614
 42363 15c0f AE01     		.uleb128 0xae
 42364 15c11 66CC0000 		.long	0xcc66
 42365 15c15 C101     		.uleb128 0xc1
 42366 15c17 00000000 		.quad	.LVL540
 42366      00000000 
 42367 15c1f 94290000 		.long	0x2994
 42368 15c23 C201     		.uleb128 0xc2
 42369 15c25 01       		.uleb128 0x1
 42370 15c26 55       		.byte	0x55
 42371 15c27 02       		.uleb128 0x2
 42372 15c28 7C       		.byte	0x7c
 42373 15c29 00       		.sleb128 0
 42374 15c2a C201     		.uleb128 0xc2
 42375 15c2c 01       		.uleb128 0x1
 42376 15c2d 61       		.byte	0x61
 42377 15c2e 12       		.uleb128 0x12
 42378 15c2f 91       		.byte	0x91
 42379 15c30 807E     		.sleb128 -256
 42380 15c32 F6       		.byte	0xf6
 42381 15c33 08       		.byte	0x8
 42382 15c34 29       		.uleb128 0x29
 42383 15c35 F4       		.byte	0xf4
 42384 15c36 29       		.uleb128 0x29
 42385 15c37 08       		.byte	0x8
 42386 15c38 00000000 		.long	0
 42387 15c3c 00408F40 		.long	0x408f4000
 42388 15c40 1E       		.byte	0x1e
 42389 15c41 00       		.byte	0
 42390 15c42 00       		.byte	0
 42391 15c43 C901     		.uleb128 0xc9
 42392 15c45 20CB0000 		.long	0xcb20
 42393 15c49 00000000 		.quad	.LBB4815
 42393      00000000 
 42394 15c51 00000000 		.long	.Ldebug_ranges0+0x2a80
GAS LISTING /tmp/ccJUMvuF.s 			page 1059


 42395 15c55 02       		.byte	0x2
 42396 15c56 47       		.byte	0x47
 42397 15c57 9A5C0100 		.long	0x15c9a
 42398 15c5b BE01     		.uleb128 0xbe
 42399 15c5d 41CB0000 		.long	0xcb41
 42400 15c61 00000000 		.long	.LLST615
 42401 15c65 BE01     		.uleb128 0xbe
 42402 15c67 34CB0000 		.long	0xcb34
 42403 15c6b 00000000 		.long	.LLST616
 42404 15c6f C101     		.uleb128 0xc1
 42405 15c71 00000000 		.quad	.LVL542
 42405      00000000 
 42406 15c79 B5920000 		.long	0x92b5
 42407 15c7d C201     		.uleb128 0xc2
 42408 15c7f 01       		.uleb128 0x1
 42409 15c80 55       		.byte	0x55
 42410 15c81 02       		.uleb128 0x2
 42411 15c82 7C       		.byte	0x7c
 42412 15c83 00       		.sleb128 0
 42413 15c84 C201     		.uleb128 0xc2
 42414 15c86 01       		.uleb128 0x1
 42415 15c87 54       		.byte	0x54
 42416 15c88 09       		.uleb128 0x9
 42417 15c89 03       		.byte	0x3
 42418 15c8a 00000000 		.quad	.LC16
 42418      00000000 
 42419 15c92 C201     		.uleb128 0xc2
 42420 15c94 01       		.uleb128 0x1
 42421 15c95 51       		.byte	0x51
 42422 15c96 01       		.uleb128 0x1
 42423 15c97 31       		.byte	0x31
 42424 15c98 00       		.byte	0
 42425 15c99 00       		.byte	0
 42426 15c9a C901     		.uleb128 0xc9
 42427 15c9c 98CC0000 		.long	0xcc98
 42428 15ca0 00000000 		.quad	.LBB4820
 42428      00000000 
 42429 15ca8 00000000 		.long	.Ldebug_ranges0+0x2ab0
 42430 15cac 02       		.byte	0x2
 42431 15cad 47       		.byte	0x47
 42432 15cae 035E0100 		.long	0x15e03
 42433 15cb2 AE01     		.uleb128 0xae
 42434 15cb4 B1CC0000 		.long	0xccb1
 42435 15cb8 AE01     		.uleb128 0xae
 42436 15cba A7CC0000 		.long	0xcca7
 42437 15cbe CB01     		.uleb128 0xcb
 42438 15cc0 47FE0000 		.long	0xfe47
 42439 15cc4 00000000 		.quad	.LBB4821
 42439      00000000 
 42440 15ccc 00000000 		.long	.Ldebug_ranges0+0x2ab0
 42441 15cd0 09       		.byte	0x9
 42442 15cd1 71       		.byte	0x71
 42443 15cd2 BE01     		.uleb128 0xbe
 42444 15cd4 64FE0000 		.long	0xfe64
 42445 15cd8 00000000 		.long	.LLST617
 42446 15cdc C301     		.uleb128 0xc3
 42447 15cde A3FC0000 		.long	0xfca3
GAS LISTING /tmp/ccJUMvuF.s 			page 1060


 42448 15ce2 00000000 		.quad	.LBB4823
 42448      00000000 
 42449 15cea 00000000 		.long	.Ldebug_ranges0+0x2ae0
 42450 15cee 09       		.byte	0x9
 42451 15cef 3502     		.value	0x235
 42452 15cf1 B55D0100 		.long	0x15db5
 42453 15cf5 BE01     		.uleb128 0xbe
 42454 15cf7 BCFC0000 		.long	0xfcbc
 42455 15cfb 00000000 		.long	.LLST618
 42456 15cff BE01     		.uleb128 0xbe
 42457 15d01 B2FC0000 		.long	0xfcb2
 42458 15d05 00000000 		.long	.LLST619
 42459 15d09 C501     		.uleb128 0xc5
 42460 15d0b 99DC0000 		.long	0xdc99
 42461 15d0f 00000000 		.quad	.LBB4825
 42461      00000000 
 42462 15d17 09000000 		.quad	.LBE4825-.LBB4825
 42462      00000000 
 42463 15d1f 0E       		.byte	0xe
 42464 15d20 BC01     		.value	0x1bc
 42465 15d22 315D0100 		.long	0x15d31
 42466 15d26 BE01     		.uleb128 0xbe
 42467 15d28 ADDC0000 		.long	0xdcad
 42468 15d2c 00000000 		.long	.LLST620
 42469 15d30 00       		.byte	0
 42470 15d31 CC01     		.uleb128 0xcc
 42471 15d33 1FCC0000 		.long	0xcc1f
 42472 15d37 00000000 		.quad	.LBB4827
 42472      00000000 
 42473 15d3f 00000000 		.long	.Ldebug_ranges0+0x2b10
 42474 15d43 0E       		.byte	0xe
 42475 15d44 BC01     		.value	0x1bc
 42476 15d46 BE01     		.uleb128 0xbe
 42477 15d48 38CC0000 		.long	0xcc38
 42478 15d4c 00000000 		.long	.LLST621
 42479 15d50 BE01     		.uleb128 0xbe
 42480 15d52 2ECC0000 		.long	0xcc2e
 42481 15d56 00000000 		.long	.LLST622
 42482 15d5a B901     		.uleb128 0xb9
 42483 15d5c 00000000 		.quad	.LBB4829
 42483      00000000 
 42484 15d64 2E000000 		.quad	.LBE4829-.LBB4829
 42484      00000000 
 42485 15d6c BE01     		.uleb128 0xbe
 42486 15d6e 38CC0000 		.long	0xcc38
 42487 15d72 00000000 		.long	.LLST623
 42488 15d76 BE01     		.uleb128 0xbe
 42489 15d78 2ECC0000 		.long	0xcc2e
 42490 15d7c 00000000 		.long	.LLST624
 42491 15d80 C601     		.uleb128 0xc6
 42492 15d82 00000000 		.quad	.LVL583
 42492      00000000 
 42493 15d8a 652A0000 		.long	0x2a65
 42494 15d8e 9A5D0100 		.long	0x15d9a
 42495 15d92 C201     		.uleb128 0xc2
 42496 15d94 01       		.uleb128 0x1
 42497 15d95 55       		.byte	0x55
GAS LISTING /tmp/ccJUMvuF.s 			page 1061


 42498 15d96 02       		.uleb128 0x2
 42499 15d97 7E       		.byte	0x7e
 42500 15d98 00       		.sleb128 0
 42501 15d99 00       		.byte	0
 42502 15d9a D001     		.uleb128 0xd0
 42503 15d9c 00000000 		.quad	.LVL584
 42503      00000000 
 42504 15da4 C201     		.uleb128 0xc2
 42505 15da6 01       		.uleb128 0x1
 42506 15da7 55       		.byte	0x55
 42507 15da8 02       		.uleb128 0x2
 42508 15da9 7E       		.byte	0x7e
 42509 15daa 00       		.sleb128 0
 42510 15dab C201     		.uleb128 0xc2
 42511 15dad 01       		.uleb128 0x1
 42512 15dae 54       		.byte	0x54
 42513 15daf 01       		.uleb128 0x1
 42514 15db0 3A       		.byte	0x3a
 42515 15db1 00       		.byte	0
 42516 15db2 00       		.byte	0
 42517 15db3 00       		.byte	0
 42518 15db4 00       		.byte	0
 42519 15db5 C501     		.uleb128 0xc5
 42520 15db7 BADC0000 		.long	0xdcba
 42521 15dbb 00000000 		.quad	.LBB4834
 42521      00000000 
 42522 15dc3 08000000 		.quad	.LBE4834-.LBB4834
 42522      00000000 
 42523 15dcb 09       		.byte	0x9
 42524 15dcc 3502     		.value	0x235
 42525 15dce EB5D0100 		.long	0x15deb
 42526 15dd2 BE01     		.uleb128 0xbe
 42527 15dd4 D7DC0000 		.long	0xdcd7
 42528 15dd8 00000000 		.long	.LLST625
 42529 15ddc CF01     		.uleb128 0xcf
 42530 15dde 00000000 		.quad	.LVL547
 42530      00000000 
 42531 15de6 76290000 		.long	0x2976
 42532 15dea 00       		.byte	0
 42533 15deb C101     		.uleb128 0xc1
 42534 15ded 00000000 		.quad	.LVL546
 42534      00000000 
 42535 15df5 C0290000 		.long	0x29c0
 42536 15df9 C201     		.uleb128 0xc2
 42537 15dfb 01       		.uleb128 0x1
 42538 15dfc 55       		.byte	0x55
 42539 15dfd 02       		.uleb128 0x2
 42540 15dfe 7C       		.byte	0x7c
 42541 15dff 00       		.sleb128 0
 42542 15e00 00       		.byte	0
 42543 15e01 00       		.byte	0
 42544 15e02 00       		.byte	0
 42545 15e03 CA01     		.uleb128 0xca
 42546 15e05 20CB0000 		.long	0xcb20
 42547 15e09 00000000 		.quad	.LBB4839
 42547      00000000 
 42548 15e11 14000000 		.quad	.LBE4839-.LBB4839
GAS LISTING /tmp/ccJUMvuF.s 			page 1062


 42548      00000000 
 42549 15e19 02       		.byte	0x2
 42550 15e1a 48       		.byte	0x48
 42551 15e1b 5A5E0100 		.long	0x15e5a
 42552 15e1f AE01     		.uleb128 0xae
 42553 15e21 34CB0000 		.long	0xcb34
 42554 15e25 BE01     		.uleb128 0xbe
 42555 15e27 41CB0000 		.long	0xcb41
 42556 15e2b 00000000 		.long	.LLST626
 42557 15e2f C101     		.uleb128 0xc1
 42558 15e31 00000000 		.quad	.LVL548
 42558      00000000 
 42559 15e39 B5920000 		.long	0x92b5
 42560 15e3d C201     		.uleb128 0xc2
 42561 15e3f 01       		.uleb128 0x1
 42562 15e40 55       		.byte	0x55
 42563 15e41 02       		.uleb128 0x2
 42564 15e42 7F       		.byte	0x7f
 42565 15e43 00       		.sleb128 0
 42566 15e44 C201     		.uleb128 0xc2
 42567 15e46 01       		.uleb128 0x1
 42568 15e47 54       		.byte	0x54
 42569 15e48 09       		.uleb128 0x9
 42570 15e49 03       		.byte	0x3
 42571 15e4a 00000000 		.quad	.LC17
 42571      00000000 
 42572 15e52 C201     		.uleb128 0xc2
 42573 15e54 01       		.uleb128 0x1
 42574 15e55 51       		.byte	0x51
 42575 15e56 01       		.uleb128 0x1
 42576 15e57 38       		.byte	0x38
 42577 15e58 00       		.byte	0
 42578 15e59 00       		.byte	0
 42579 15e5a C901     		.uleb128 0xc9
 42580 15e5c 57CC0000 		.long	0xcc57
 42581 15e60 00000000 		.quad	.LBB4841
 42581      00000000 
 42582 15e68 00000000 		.long	.Ldebug_ranges0+0x2b40
 42583 15e6c 02       		.byte	0x2
 42584 15e6d 48       		.byte	0x48
 42585 15e6e A45E0100 		.long	0x15ea4
 42586 15e72 BE01     		.uleb128 0xbe
 42587 15e74 70CC0000 		.long	0xcc70
 42588 15e78 00000000 		.long	.LLST627
 42589 15e7c AE01     		.uleb128 0xae
 42590 15e7e 66CC0000 		.long	0xcc66
 42591 15e82 C101     		.uleb128 0xc1
 42592 15e84 00000000 		.quad	.LVL549
 42592      00000000 
 42593 15e8c 94290000 		.long	0x2994
 42594 15e90 C201     		.uleb128 0xc2
 42595 15e92 01       		.uleb128 0x1
 42596 15e93 55       		.byte	0x55
 42597 15e94 02       		.uleb128 0x2
 42598 15e95 7F       		.byte	0x7f
 42599 15e96 00       		.sleb128 0
 42600 15e97 C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 1063


 42601 15e99 01       		.uleb128 0x1
 42602 15e9a 61       		.byte	0x61
 42603 15e9b 06       		.uleb128 0x6
 42604 15e9c 91       		.byte	0x91
 42605 15e9d 887E     		.sleb128 -248
 42606 15e9f F6       		.byte	0xf6
 42607 15ea0 08       		.byte	0x8
 42608 15ea1 29       		.uleb128 0x29
 42609 15ea2 00       		.byte	0
 42610 15ea3 00       		.byte	0
 42611 15ea4 C901     		.uleb128 0xc9
 42612 15ea6 20CB0000 		.long	0xcb20
 42613 15eaa 00000000 		.quad	.LBB4844
 42613      00000000 
 42614 15eb2 00000000 		.long	.Ldebug_ranges0+0x2b70
 42615 15eb6 02       		.byte	0x2
 42616 15eb7 48       		.byte	0x48
 42617 15eb8 FB5E0100 		.long	0x15efb
 42618 15ebc BE01     		.uleb128 0xbe
 42619 15ebe 41CB0000 		.long	0xcb41
 42620 15ec2 00000000 		.long	.LLST628
 42621 15ec6 BE01     		.uleb128 0xbe
 42622 15ec8 34CB0000 		.long	0xcb34
 42623 15ecc 00000000 		.long	.LLST629
 42624 15ed0 C101     		.uleb128 0xc1
 42625 15ed2 00000000 		.quad	.LVL551
 42625      00000000 
 42626 15eda B5920000 		.long	0x92b5
 42627 15ede C201     		.uleb128 0xc2
 42628 15ee0 01       		.uleb128 0x1
 42629 15ee1 55       		.byte	0x55
 42630 15ee2 02       		.uleb128 0x2
 42631 15ee3 7C       		.byte	0x7c
 42632 15ee4 00       		.sleb128 0
 42633 15ee5 C201     		.uleb128 0xc2
 42634 15ee7 01       		.uleb128 0x1
 42635 15ee8 54       		.byte	0x54
 42636 15ee9 09       		.uleb128 0x9
 42637 15eea 03       		.byte	0x3
 42638 15eeb 00000000 		.quad	.LC18
 42638      00000000 
 42639 15ef3 C201     		.uleb128 0xc2
 42640 15ef5 01       		.uleb128 0x1
 42641 15ef6 51       		.byte	0x51
 42642 15ef7 01       		.uleb128 0x1
 42643 15ef8 3A       		.byte	0x3a
 42644 15ef9 00       		.byte	0
 42645 15efa 00       		.byte	0
 42646 15efb CA01     		.uleb128 0xca
 42647 15efd 57CC0000 		.long	0xcc57
 42648 15f01 00000000 		.quad	.LBB4849
 42648      00000000 
 42649 15f09 0E000000 		.quad	.LBE4849-.LBB4849
 42649      00000000 
 42650 15f11 02       		.byte	0x2
 42651 15f12 48       		.byte	0x48
 42652 15f13 495F0100 		.long	0x15f49
GAS LISTING /tmp/ccJUMvuF.s 			page 1064


 42653 15f17 BE01     		.uleb128 0xbe
 42654 15f19 70CC0000 		.long	0xcc70
 42655 15f1d 00000000 		.long	.LLST630
 42656 15f21 AE01     		.uleb128 0xae
 42657 15f23 66CC0000 		.long	0xcc66
 42658 15f27 C101     		.uleb128 0xc1
 42659 15f29 00000000 		.quad	.LVL552
 42659      00000000 
 42660 15f31 94290000 		.long	0x2994
 42661 15f35 C201     		.uleb128 0xc2
 42662 15f37 01       		.uleb128 0x1
 42663 15f38 55       		.byte	0x55
 42664 15f39 02       		.uleb128 0x2
 42665 15f3a 7C       		.byte	0x7c
 42666 15f3b 00       		.sleb128 0
 42667 15f3c C201     		.uleb128 0xc2
 42668 15f3e 01       		.uleb128 0x1
 42669 15f3f 61       		.byte	0x61
 42670 15f40 06       		.uleb128 0x6
 42671 15f41 91       		.byte	0x91
 42672 15f42 807E     		.sleb128 -256
 42673 15f44 F6       		.byte	0xf6
 42674 15f45 08       		.byte	0x8
 42675 15f46 29       		.uleb128 0x29
 42676 15f47 00       		.byte	0
 42677 15f48 00       		.byte	0
 42678 15f49 CE01     		.uleb128 0xce
 42679 15f4b 20CB0000 		.long	0xcb20
 42680 15f4f 00000000 		.quad	.LBB4851
 42680      00000000 
 42681 15f57 14000000 		.quad	.LBE4851-.LBB4851
 42681      00000000 
 42682 15f5f 02       		.byte	0x2
 42683 15f60 48       		.byte	0x48
 42684 15f61 BE01     		.uleb128 0xbe
 42685 15f63 41CB0000 		.long	0xcb41
 42686 15f67 00000000 		.long	.LLST631
 42687 15f6b BE01     		.uleb128 0xbe
 42688 15f6d 34CB0000 		.long	0xcb34
 42689 15f71 00000000 		.long	.LLST632
 42690 15f75 C101     		.uleb128 0xc1
 42691 15f77 00000000 		.quad	.LVL553
 42691      00000000 
 42692 15f7f B5920000 		.long	0x92b5
 42693 15f83 C201     		.uleb128 0xc2
 42694 15f85 01       		.uleb128 0x1
 42695 15f86 54       		.byte	0x54
 42696 15f87 09       		.uleb128 0x9
 42697 15f88 03       		.byte	0x3
 42698 15f89 00000000 		.quad	.LC19
 42698      00000000 
 42699 15f91 C201     		.uleb128 0xc2
 42700 15f93 01       		.uleb128 0x1
 42701 15f94 51       		.byte	0x51
 42702 15f95 01       		.uleb128 0x1
 42703 15f96 31       		.byte	0x31
 42704 15f97 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1065


 42705 15f98 00       		.byte	0
 42706 15f99 00       		.byte	0
 42707 15f9a CE01     		.uleb128 0xce
 42708 15f9c 28FB0000 		.long	0xfb28
 42709 15fa0 00000000 		.quad	.LBB4860
 42709      00000000 
 42710 15fa8 12000000 		.quad	.LBE4860-.LBB4860
 42710      00000000 
 42711 15fb0 02       		.byte	0x2
 42712 15fb1 41       		.byte	0x41
 42713 15fb2 BE01     		.uleb128 0xbe
 42714 15fb4 37FB0000 		.long	0xfb37
 42715 15fb8 00000000 		.long	.LLST633
 42716 15fbc B801     		.uleb128 0xb8
 42717 15fbe 58E20000 		.long	0xe258
 42718 15fc2 00000000 		.quad	.LBB4861
 42718      00000000 
 42719 15fca 12000000 		.quad	.LBE4861-.LBB4861
 42719      00000000 
 42720 15fd2 06       		.byte	0x6
 42721 15fd3 A901     		.value	0x1a9
 42722 15fd5 BE01     		.uleb128 0xbe
 42723 15fd7 67E20000 		.long	0xe267
 42724 15fdb 00000000 		.long	.LLST633
 42725 15fdf CE01     		.uleb128 0xce
 42726 15fe1 DAE10000 		.long	0xe1da
 42727 15fe5 00000000 		.quad	.LBB4863
 42727      00000000 
 42728 15fed 0A000000 		.quad	.LBE4863-.LBB4863
 42728      00000000 
 42729 15ff5 06       		.byte	0x6
 42730 15ff6 A0       		.byte	0xa0
 42731 15ff7 AE01     		.uleb128 0xae
 42732 15ff9 E9E10000 		.long	0xe1e9
 42733 15ffd BE01     		.uleb128 0xbe
 42734 15fff FFE10000 		.long	0xe1ff
 42735 16003 00000000 		.long	.LLST635
 42736 16007 BE01     		.uleb128 0xbe
 42737 16009 F3E10000 		.long	0xe1f3
 42738 1600d 00000000 		.long	.LLST636
 42739 16011 B901     		.uleb128 0xb9
 42740 16013 00000000 		.quad	.LBB4864
 42740      00000000 
 42741 1601b 0A000000 		.quad	.LBE4864-.LBB4864
 42741      00000000 
 42742 16023 CE01     		.uleb128 0xce
 42743 16025 A2E10000 		.long	0xe1a2
 42744 16029 00000000 		.quad	.LBB4865
 42744      00000000 
 42745 16031 05000000 		.quad	.LBE4865-.LBB4865
 42745      00000000 
 42746 16039 06       		.byte	0x6
 42747 1603a B2       		.byte	0xb2
 42748 1603b AE01     		.uleb128 0xae
 42749 1603d ADE10000 		.long	0xe1ad
 42750 16041 BE01     		.uleb128 0xbe
 42751 16043 C7E10000 		.long	0xe1c7
GAS LISTING /tmp/ccJUMvuF.s 			page 1066


 42752 16047 00000000 		.long	.LLST637
 42753 1604b BE01     		.uleb128 0xbe
 42754 1604d BAE10000 		.long	0xe1ba
 42755 16051 00000000 		.long	.LLST638
 42756 16055 B801     		.uleb128 0xb8
 42757 16057 77E10000 		.long	0xe177
 42758 1605b 00000000 		.quad	.LBB4866
 42758      00000000 
 42759 16063 05000000 		.quad	.LBE4866-.LBB4866
 42759      00000000 
 42760 1606b 2F       		.byte	0x2f
 42761 1606c 7F01     		.value	0x17f
 42762 1606e AE01     		.uleb128 0xae
 42763 16070 86E10000 		.long	0xe186
 42764 16074 BE01     		.uleb128 0xbe
 42765 16076 9CE10000 		.long	0xe19c
 42766 1607a 00000000 		.long	.LLST637
 42767 1607e BE01     		.uleb128 0xbe
 42768 16080 90E10000 		.long	0xe190
 42769 16084 00000000 		.long	.LLST638
 42770 16088 CF01     		.uleb128 0xcf
 42771 1608a 00000000 		.quad	.LVL556
 42771      00000000 
 42772 16092 ED6B0100 		.long	0x16bed
 42773 16096 00       		.byte	0
 42774 16097 00       		.byte	0
 42775 16098 00       		.byte	0
 42776 16099 00       		.byte	0
 42777 1609a 00       		.byte	0
 42778 1609b 00       		.byte	0
 42779 1609c 00       		.byte	0
 42780 1609d CA01     		.uleb128 0xca
 42781 1609f F0FB0000 		.long	0xfbf0
 42782 160a3 00000000 		.quad	.LBB4885
 42782      00000000 
 42783 160ab 03000000 		.quad	.LBE4885-.LBB4885
 42783      00000000 
 42784 160b3 16       		.byte	0x16
 42785 160b4 43       		.byte	0x43
 42786 160b5 ED600100 		.long	0x160ed
 42787 160b9 BE01     		.uleb128 0xbe
 42788 160bb FFFB0000 		.long	0xfbff
 42789 160bf 00000000 		.long	.LLST641
 42790 160c3 CE01     		.uleb128 0xce
 42791 160c5 DCD50000 		.long	0xd5dc
 42792 160c9 00000000 		.quad	.LBB4886
 42792      00000000 
 42793 160d1 03000000 		.quad	.LBE4886-.LBB4886
 42793      00000000 
 42794 160d9 02       		.byte	0x2
 42795 160da 3F       		.byte	0x3f
 42796 160db AE01     		.uleb128 0xae
 42797 160dd 0FD60000 		.long	0xd60f
 42798 160e1 BE01     		.uleb128 0xbe
 42799 160e3 02D60000 		.long	0xd602
 42800 160e7 00000000 		.long	.LLST642
 42801 160eb 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1067


 42802 160ec 00       		.byte	0
 42803 160ed C601     		.uleb128 0xc6
 42804 160ef 00000000 		.quad	.LVL487
 42804      00000000 
 42805 160f7 AB6C0100 		.long	0x16cab
 42806 160fb 1A610100 		.long	0x1611a
 42807 160ff C201     		.uleb128 0xc2
 42808 16101 01       		.uleb128 0x1
 42809 16102 55       		.byte	0x55
 42810 16103 02       		.uleb128 0x2
 42811 16104 73       		.byte	0x73
 42812 16105 00       		.sleb128 0
 42813 16106 C201     		.uleb128 0xc2
 42814 16108 01       		.uleb128 0x1
 42815 16109 61       		.byte	0x61
 42816 1610a 07       		.uleb128 0x7
 42817 1610b F4       		.byte	0xf4
 42818 1610c 30       		.uleb128 0x30
 42819 1610d 04       		.byte	0x4
 42820 1610e 0000003F 		.long	0x3f000000
 42821 16112 C201     		.uleb128 0xc2
 42822 16114 01       		.uleb128 0x1
 42823 16115 51       		.byte	0x51
 42824 16116 02       		.uleb128 0x2
 42825 16117 7D       		.byte	0x7d
 42826 16118 00       		.sleb128 0
 42827 16119 00       		.byte	0
 42828 1611a D001     		.uleb128 0xd0
 42829 1611c 00000000 		.quad	.LVL670
 42829      00000000 
 42830 16124 C201     		.uleb128 0xc2
 42831 16126 01       		.uleb128 0x1
 42832 16127 55       		.byte	0x55
 42833 16128 03       		.uleb128 0x3
 42834 16129 91       		.byte	0x91
 42835 1612a 907F     		.sleb128 -112
 42836 1612c 00       		.byte	0
 42837 1612d 00       		.byte	0
 42838 1612e CA01     		.uleb128 0xca
 42839 16130 0FFC0000 		.long	0xfc0f
 42840 16134 00000000 		.quad	.LBB4889
 42840      00000000 
 42841 1613c 08000000 		.quad	.LBE4889-.LBB4889
 42841      00000000 
 42842 16144 16       		.byte	0x16
 42843 16145 36       		.byte	0x36
 42844 16146 30620100 		.long	0x16230
 42845 1614a BE01     		.uleb128 0xbe
 42846 1614c 1EFC0000 		.long	0xfc1e
 42847 16150 00000000 		.long	.LLST643
 42848 16154 B801     		.uleb128 0xb8
 42849 16156 4AE40000 		.long	0xe44a
 42850 1615a 00000000 		.quad	.LBB4890
 42850      00000000 
 42851 16162 08000000 		.quad	.LBE4890-.LBB4890
 42851      00000000 
 42852 1616a 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1068


 42853 1616b A901     		.value	0x1a9
 42854 1616d BE01     		.uleb128 0xbe
 42855 1616f 59E40000 		.long	0xe459
 42856 16173 00000000 		.long	.LLST643
 42857 16177 CE01     		.uleb128 0xce
 42858 16179 CCE30000 		.long	0xe3cc
 42859 1617d 00000000 		.quad	.LBB4891
 42859      00000000 
 42860 16185 08000000 		.quad	.LBE4891-.LBB4891
 42860      00000000 
 42861 1618d 06       		.byte	0x6
 42862 1618e A0       		.byte	0xa0
 42863 1618f AE01     		.uleb128 0xae
 42864 16191 DBE30000 		.long	0xe3db
 42865 16195 AE01     		.uleb128 0xae
 42866 16197 F1E30000 		.long	0xe3f1
 42867 1619b BE01     		.uleb128 0xbe
 42868 1619d E5E30000 		.long	0xe3e5
 42869 161a1 00000000 		.long	.LLST645
 42870 161a5 B901     		.uleb128 0xb9
 42871 161a7 00000000 		.quad	.LBB4892
 42871      00000000 
 42872 161af 08000000 		.quad	.LBE4892-.LBB4892
 42872      00000000 
 42873 161b7 CE01     		.uleb128 0xce
 42874 161b9 94E30000 		.long	0xe394
 42875 161bd 00000000 		.quad	.LBB4893
 42875      00000000 
 42876 161c5 08000000 		.quad	.LBE4893-.LBB4893
 42876      00000000 
 42877 161cd 06       		.byte	0x6
 42878 161ce B2       		.byte	0xb2
 42879 161cf AE01     		.uleb128 0xae
 42880 161d1 9FE30000 		.long	0xe39f
 42881 161d5 AE01     		.uleb128 0xae
 42882 161d7 B9E30000 		.long	0xe3b9
 42883 161db BE01     		.uleb128 0xbe
 42884 161dd ACE30000 		.long	0xe3ac
 42885 161e1 00000000 		.long	.LLST645
 42886 161e5 B801     		.uleb128 0xb8
 42887 161e7 69E30000 		.long	0xe369
 42888 161eb 00000000 		.quad	.LBB4894
 42888      00000000 
 42889 161f3 08000000 		.quad	.LBE4894-.LBB4894
 42889      00000000 
 42890 161fb 2F       		.byte	0x2f
 42891 161fc 7F01     		.value	0x17f
 42892 161fe AE01     		.uleb128 0xae
 42893 16200 78E30000 		.long	0xe378
 42894 16204 AE01     		.uleb128 0xae
 42895 16206 8EE30000 		.long	0xe38e
 42896 1620a BE01     		.uleb128 0xbe
 42897 1620c 82E30000 		.long	0xe382
 42898 16210 00000000 		.long	.LLST645
 42899 16214 C101     		.uleb128 0xc1
 42900 16216 00000000 		.quad	.LVL559
 42900      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1069


 42901 1621e ED6B0100 		.long	0x16bed
 42902 16222 C201     		.uleb128 0xc2
 42903 16224 01       		.uleb128 0x1
 42904 16225 55       		.byte	0x55
 42905 16226 02       		.uleb128 0x2
 42906 16227 7D       		.byte	0x7d
 42907 16228 00       		.sleb128 0
 42908 16229 00       		.byte	0
 42909 1622a 00       		.byte	0
 42910 1622b 00       		.byte	0
 42911 1622c 00       		.byte	0
 42912 1622d 00       		.byte	0
 42913 1622e 00       		.byte	0
 42914 1622f 00       		.byte	0
 42915 16230 CA01     		.uleb128 0xca
 42916 16232 75F40000 		.long	0xf475
 42917 16236 00000000 		.quad	.LBB4896
 42917      00000000 
 42918 1623e 0F000000 		.quad	.LBE4896-.LBB4896
 42918      00000000 
 42919 16246 16       		.byte	0x16
 42920 16247 31       		.byte	0x31
 42921 16248 36630100 		.long	0x16336
 42922 1624c BE01     		.uleb128 0xbe
 42923 1624e 84F40000 		.long	0xf484
 42924 16252 00000000 		.long	.LLST648
 42925 16256 B801     		.uleb128 0xb8
 42926 16258 04E10000 		.long	0xe104
 42927 1625c 00000000 		.quad	.LBB4898
 42927      00000000 
 42928 16264 0F000000 		.quad	.LBE4898-.LBB4898
 42928      00000000 
 42929 1626c 06       		.byte	0x6
 42930 1626d A901     		.value	0x1a9
 42931 1626f BE01     		.uleb128 0xbe
 42932 16271 13E10000 		.long	0xe113
 42933 16275 00000000 		.long	.LLST648
 42934 16279 CE01     		.uleb128 0xce
 42935 1627b 86E00000 		.long	0xe086
 42936 1627f 00000000 		.quad	.LBB4900
 42936      00000000 
 42937 16287 0A000000 		.quad	.LBE4900-.LBB4900
 42937      00000000 
 42938 1628f 06       		.byte	0x6
 42939 16290 A0       		.byte	0xa0
 42940 16291 AE01     		.uleb128 0xae
 42941 16293 95E00000 		.long	0xe095
 42942 16297 BE01     		.uleb128 0xbe
 42943 16299 ABE00000 		.long	0xe0ab
 42944 1629d 00000000 		.long	.LLST650
 42945 162a1 BE01     		.uleb128 0xbe
 42946 162a3 9FE00000 		.long	0xe09f
 42947 162a7 00000000 		.long	.LLST651
 42948 162ab B901     		.uleb128 0xb9
 42949 162ad 00000000 		.quad	.LBB4901
 42949      00000000 
 42950 162b5 0A000000 		.quad	.LBE4901-.LBB4901
GAS LISTING /tmp/ccJUMvuF.s 			page 1070


 42950      00000000 
 42951 162bd CE01     		.uleb128 0xce
 42952 162bf 4EE00000 		.long	0xe04e
 42953 162c3 00000000 		.quad	.LBB4902
 42953      00000000 
 42954 162cb 05000000 		.quad	.LBE4902-.LBB4902
 42954      00000000 
 42955 162d3 06       		.byte	0x6
 42956 162d4 B2       		.byte	0xb2
 42957 162d5 AE01     		.uleb128 0xae
 42958 162d7 59E00000 		.long	0xe059
 42959 162db BE01     		.uleb128 0xbe
 42960 162dd 73E00000 		.long	0xe073
 42961 162e1 00000000 		.long	.LLST652
 42962 162e5 BE01     		.uleb128 0xbe
 42963 162e7 66E00000 		.long	0xe066
 42964 162eb 00000000 		.long	.LLST653
 42965 162ef B801     		.uleb128 0xb8
 42966 162f1 23E00000 		.long	0xe023
 42967 162f5 00000000 		.quad	.LBB4903
 42967      00000000 
 42968 162fd 05000000 		.quad	.LBE4903-.LBB4903
 42968      00000000 
 42969 16305 2F       		.byte	0x2f
 42970 16306 7F01     		.value	0x17f
 42971 16308 AE01     		.uleb128 0xae
 42972 1630a 32E00000 		.long	0xe032
 42973 1630e BE01     		.uleb128 0xbe
 42974 16310 48E00000 		.long	0xe048
 42975 16314 00000000 		.long	.LLST652
 42976 16318 BE01     		.uleb128 0xbe
 42977 1631a 3CE00000 		.long	0xe03c
 42978 1631e 00000000 		.long	.LLST653
 42979 16322 CF01     		.uleb128 0xcf
 42980 16324 00000000 		.quad	.LVL562
 42980      00000000 
 42981 1632c ED6B0100 		.long	0x16bed
 42982 16330 00       		.byte	0
 42983 16331 00       		.byte	0
 42984 16332 00       		.byte	0
 42985 16333 00       		.byte	0
 42986 16334 00       		.byte	0
 42987 16335 00       		.byte	0
 42988 16336 CA01     		.uleb128 0xca
 42989 16338 33FC0000 		.long	0xfc33
 42990 1633c 00000000 		.quad	.LBB4905
 42990      00000000 
 42991 16344 0D000000 		.quad	.LBE4905-.LBB4905
 42991      00000000 
 42992 1634c 16       		.byte	0x16
 42993 1634d 4A       		.byte	0x4a
 42994 1634e B5630100 		.long	0x163b5
 42995 16352 BE01     		.uleb128 0xbe
 42996 16354 42FC0000 		.long	0xfc42
 42997 16358 00000000 		.long	.LLST656
 42998 1635c B901     		.uleb128 0xb9
 42999 1635e 00000000 		.quad	.LBB4906
GAS LISTING /tmp/ccJUMvuF.s 			page 1071


 42999      00000000 
 43000 16366 0D000000 		.quad	.LBE4906-.LBB4906
 43000      00000000 
 43001 1636e BA01     		.uleb128 0xba
 43002 16370 58FC0000 		.long	0xfc58
 43003 16374 CE01     		.uleb128 0xce
 43004 16376 BECC0000 		.long	0xccbe
 43005 1637a 00000000 		.quad	.LBB4907
 43005      00000000 
 43006 16382 08000000 		.quad	.LBE4907-.LBB4907
 43006      00000000 
 43007 1638a 17       		.byte	0x17
 43008 1638b EC       		.byte	0xec
 43009 1638c AE01     		.uleb128 0xae
 43010 1638e CDCC0000 		.long	0xcccd
 43011 16392 BE01     		.uleb128 0xbe
 43012 16394 D7CC0000 		.long	0xccd7
 43013 16398 00000000 		.long	.LLST657
 43014 1639c C101     		.uleb128 0xc1
 43015 1639e 00000000 		.quad	.LVL564
 43015      00000000 
 43016 163a6 CF6C0100 		.long	0x16ccf
 43017 163aa C201     		.uleb128 0xc2
 43018 163ac 01       		.uleb128 0x1
 43019 163ad 55       		.byte	0x55
 43020 163ae 02       		.uleb128 0x2
 43021 163af 73       		.byte	0x73
 43022 163b0 00       		.sleb128 0
 43023 163b1 00       		.byte	0
 43024 163b2 00       		.byte	0
 43025 163b3 00       		.byte	0
 43026 163b4 00       		.byte	0
 43027 163b5 CA01     		.uleb128 0xca
 43028 163b7 20CB0000 		.long	0xcb20
 43029 163bb 00000000 		.quad	.LBB4916
 43029      00000000 
 43030 163c3 14000000 		.quad	.LBE4916-.LBB4916
 43030      00000000 
 43031 163cb 16       		.byte	0x16
 43032 163cc 49       		.byte	0x49
 43033 163cd 0C640100 		.long	0x1640c
 43034 163d1 AE01     		.uleb128 0xae
 43035 163d3 34CB0000 		.long	0xcb34
 43036 163d7 BE01     		.uleb128 0xbe
 43037 163d9 41CB0000 		.long	0xcb41
 43038 163dd 00000000 		.long	.LLST658
 43039 163e1 C101     		.uleb128 0xc1
 43040 163e3 00000000 		.quad	.LVL638
 43040      00000000 
 43041 163eb B5920000 		.long	0x92b5
 43042 163ef C201     		.uleb128 0xc2
 43043 163f1 01       		.uleb128 0x1
 43044 163f2 55       		.byte	0x55
 43045 163f3 02       		.uleb128 0x2
 43046 163f4 7F       		.byte	0x7f
 43047 163f5 00       		.sleb128 0
 43048 163f6 C201     		.uleb128 0xc2
GAS LISTING /tmp/ccJUMvuF.s 			page 1072


 43049 163f8 01       		.uleb128 0x1
 43050 163f9 54       		.byte	0x54
 43051 163fa 09       		.uleb128 0x9
 43052 163fb 03       		.byte	0x3
 43053 163fc 00000000 		.quad	.LC26
 43053      00000000 
 43054 16404 C201     		.uleb128 0xc2
 43055 16406 01       		.uleb128 0x1
 43056 16407 51       		.byte	0x51
 43057 16408 01       		.uleb128 0x1
 43058 16409 31       		.byte	0x31
 43059 1640a 00       		.byte	0
 43060 1640b 00       		.byte	0
 43061 1640c C901     		.uleb128 0xc9
 43062 1640e 98CC0000 		.long	0xcc98
 43063 16412 00000000 		.quad	.LBB4918
 43063      00000000 
 43064 1641a 00000000 		.long	.Ldebug_ranges0+0x2ba0
 43065 1641e 16       		.byte	0x16
 43066 1641f 49       		.byte	0x49
 43067 16420 77650100 		.long	0x16577
 43068 16424 AE01     		.uleb128 0xae
 43069 16426 B1CC0000 		.long	0xccb1
 43070 1642a AE01     		.uleb128 0xae
 43071 1642c A7CC0000 		.long	0xcca7
 43072 16430 CB01     		.uleb128 0xcb
 43073 16432 47FE0000 		.long	0xfe47
 43074 16436 00000000 		.quad	.LBB4919
 43074      00000000 
 43075 1643e 00000000 		.long	.Ldebug_ranges0+0x2ba0
 43076 16442 09       		.byte	0x9
 43077 16443 71       		.byte	0x71
 43078 16444 AE01     		.uleb128 0xae
 43079 16446 64FE0000 		.long	0xfe64
 43080 1644a C301     		.uleb128 0xc3
 43081 1644c A3FC0000 		.long	0xfca3
 43082 16450 00000000 		.quad	.LBB4921
 43082      00000000 
 43083 16458 00000000 		.long	.Ldebug_ranges0+0x2be0
 43084 1645c 09       		.byte	0x9
 43085 1645d 3502     		.value	0x235
 43086 1645f 29650100 		.long	0x16529
 43087 16463 BE01     		.uleb128 0xbe
 43088 16465 BCFC0000 		.long	0xfcbc
 43089 16469 00000000 		.long	.LLST659
 43090 1646d AE01     		.uleb128 0xae
 43091 1646f B2FC0000 		.long	0xfcb2
 43092 16473 C301     		.uleb128 0xc3
 43093 16475 99DC0000 		.long	0xdc99
 43094 16479 00000000 		.quad	.LBB4923
 43094      00000000 
 43095 16481 00000000 		.long	.Ldebug_ranges0+0x2c20
 43096 16485 0E       		.byte	0xe
 43097 16486 BC01     		.value	0x1bc
 43098 16488 A5640100 		.long	0x164a5
 43099 1648c BE01     		.uleb128 0xbe
 43100 1648e ADDC0000 		.long	0xdcad
GAS LISTING /tmp/ccJUMvuF.s 			page 1073


 43101 16492 00000000 		.long	.LLST660
 43102 16496 CF01     		.uleb128 0xcf
 43103 16498 00000000 		.quad	.LVL668
 43103      00000000 
 43104 164a0 F5920000 		.long	0x92f5
 43105 164a4 00       		.byte	0
 43106 164a5 CC01     		.uleb128 0xcc
 43107 164a7 1FCC0000 		.long	0xcc1f
 43108 164ab 00000000 		.quad	.LBB4926
 43108      00000000 
 43109 164b3 00000000 		.long	.Ldebug_ranges0+0x2c50
 43110 164b7 0E       		.byte	0xe
 43111 164b8 BC01     		.value	0x1bc
 43112 164ba BE01     		.uleb128 0xbe
 43113 164bc 38CC0000 		.long	0xcc38
 43114 164c0 00000000 		.long	.LLST661
 43115 164c4 BE01     		.uleb128 0xbe
 43116 164c6 2ECC0000 		.long	0xcc2e
 43117 164ca 00000000 		.long	.LLST662
 43118 164ce B901     		.uleb128 0xb9
 43119 164d0 00000000 		.quad	.LBB4928
 43119      00000000 
 43120 164d8 2F000000 		.quad	.LBE4928-.LBB4928
 43120      00000000 
 43121 164e0 BE01     		.uleb128 0xbe
 43122 164e2 38CC0000 		.long	0xcc38
 43123 164e6 00000000 		.long	.LLST663
 43124 164ea BE01     		.uleb128 0xbe
 43125 164ec 2ECC0000 		.long	0xcc2e
 43126 164f0 00000000 		.long	.LLST664
 43127 164f4 C601     		.uleb128 0xc6
 43128 164f6 00000000 		.quad	.LVL659
 43128      00000000 
 43129 164fe 652A0000 		.long	0x2a65
 43130 16502 0E650100 		.long	0x1650e
 43131 16506 C201     		.uleb128 0xc2
 43132 16508 01       		.uleb128 0x1
 43133 16509 55       		.byte	0x55
 43134 1650a 02       		.uleb128 0x2
 43135 1650b 7C       		.byte	0x7c
 43136 1650c 00       		.sleb128 0
 43137 1650d 00       		.byte	0
 43138 1650e D001     		.uleb128 0xd0
 43139 16510 00000000 		.quad	.LVL660
 43139      00000000 
 43140 16518 C201     		.uleb128 0xc2
 43141 1651a 01       		.uleb128 0x1
 43142 1651b 55       		.byte	0x55
 43143 1651c 02       		.uleb128 0x2
 43144 1651d 7C       		.byte	0x7c
 43145 1651e 00       		.sleb128 0
 43146 1651f C201     		.uleb128 0xc2
 43147 16521 01       		.uleb128 0x1
 43148 16522 54       		.byte	0x54
 43149 16523 01       		.uleb128 0x1
 43150 16524 3A       		.byte	0x3a
 43151 16525 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1074


 43152 16526 00       		.byte	0
 43153 16527 00       		.byte	0
 43154 16528 00       		.byte	0
 43155 16529 C501     		.uleb128 0xc5
 43156 1652b BADC0000 		.long	0xdcba
 43157 1652f 00000000 		.quad	.LBB4935
 43157      00000000 
 43158 16537 0D000000 		.quad	.LBE4935-.LBB4935
 43158      00000000 
 43159 1653f 09       		.byte	0x9
 43160 16540 3502     		.value	0x235
 43161 16542 5F650100 		.long	0x1655f
 43162 16546 BE01     		.uleb128 0xbe
 43163 16548 D7DC0000 		.long	0xdcd7
 43164 1654c 00000000 		.long	.LLST665
 43165 16550 CF01     		.uleb128 0xcf
 43166 16552 00000000 		.quad	.LVL643
 43166      00000000 
 43167 1655a 76290000 		.long	0x2976
 43168 1655e 00       		.byte	0
 43169 1655f C101     		.uleb128 0xc1
 43170 16561 00000000 		.quad	.LVL642
 43170      00000000 
 43171 16569 C0290000 		.long	0x29c0
 43172 1656d C201     		.uleb128 0xc2
 43173 1656f 01       		.uleb128 0x1
 43174 16570 55       		.byte	0x55
 43175 16571 02       		.uleb128 0x2
 43176 16572 7F       		.byte	0x7f
 43177 16573 00       		.sleb128 0
 43178 16574 00       		.byte	0
 43179 16575 00       		.byte	0
 43180 16576 00       		.byte	0
 43181 16577 CA01     		.uleb128 0xca
 43182 16579 0FFC0000 		.long	0xfc0f
 43183 1657d 00000000 		.quad	.LBB4950
 43183      00000000 
 43184 16585 08000000 		.quad	.LBE4950-.LBB4950
 43184      00000000 
 43185 1658d 16       		.byte	0x16
 43186 1658e 36       		.byte	0x36
 43187 1658f 79660100 		.long	0x16679
 43188 16593 BE01     		.uleb128 0xbe
 43189 16595 1EFC0000 		.long	0xfc1e
 43190 16599 00000000 		.long	.LLST666
 43191 1659d B801     		.uleb128 0xb8
 43192 1659f 4AE40000 		.long	0xe44a
 43193 165a3 00000000 		.quad	.LBB4951
 43193      00000000 
 43194 165ab 08000000 		.quad	.LBE4951-.LBB4951
 43194      00000000 
 43195 165b3 06       		.byte	0x6
 43196 165b4 A901     		.value	0x1a9
 43197 165b6 BE01     		.uleb128 0xbe
 43198 165b8 59E40000 		.long	0xe459
 43199 165bc 00000000 		.long	.LLST666
 43200 165c0 CE01     		.uleb128 0xce
GAS LISTING /tmp/ccJUMvuF.s 			page 1075


 43201 165c2 CCE30000 		.long	0xe3cc
 43202 165c6 00000000 		.quad	.LBB4952
 43202      00000000 
 43203 165ce 08000000 		.quad	.LBE4952-.LBB4952
 43203      00000000 
 43204 165d6 06       		.byte	0x6
 43205 165d7 A0       		.byte	0xa0
 43206 165d8 AE01     		.uleb128 0xae
 43207 165da DBE30000 		.long	0xe3db
 43208 165de AE01     		.uleb128 0xae
 43209 165e0 F1E30000 		.long	0xe3f1
 43210 165e4 BE01     		.uleb128 0xbe
 43211 165e6 E5E30000 		.long	0xe3e5
 43212 165ea 00000000 		.long	.LLST668
 43213 165ee B901     		.uleb128 0xb9
 43214 165f0 00000000 		.quad	.LBB4953
 43214      00000000 
 43215 165f8 08000000 		.quad	.LBE4953-.LBB4953
 43215      00000000 
 43216 16600 CE01     		.uleb128 0xce
 43217 16602 94E30000 		.long	0xe394
 43218 16606 00000000 		.quad	.LBB4954
 43218      00000000 
 43219 1660e 08000000 		.quad	.LBE4954-.LBB4954
 43219      00000000 
 43220 16616 06       		.byte	0x6
 43221 16617 B2       		.byte	0xb2
 43222 16618 AE01     		.uleb128 0xae
 43223 1661a 9FE30000 		.long	0xe39f
 43224 1661e AE01     		.uleb128 0xae
 43225 16620 B9E30000 		.long	0xe3b9
 43226 16624 BE01     		.uleb128 0xbe
 43227 16626 ACE30000 		.long	0xe3ac
 43228 1662a 00000000 		.long	.LLST668
 43229 1662e B801     		.uleb128 0xb8
 43230 16630 69E30000 		.long	0xe369
 43231 16634 00000000 		.quad	.LBB4955
 43231      00000000 
 43232 1663c 08000000 		.quad	.LBE4955-.LBB4955
 43232      00000000 
 43233 16644 2F       		.byte	0x2f
 43234 16645 7F01     		.value	0x17f
 43235 16647 AE01     		.uleb128 0xae
 43236 16649 78E30000 		.long	0xe378
 43237 1664d AE01     		.uleb128 0xae
 43238 1664f 8EE30000 		.long	0xe38e
 43239 16653 BE01     		.uleb128 0xbe
 43240 16655 82E30000 		.long	0xe382
 43241 16659 00000000 		.long	.LLST668
 43242 1665d C101     		.uleb128 0xc1
 43243 1665f 00000000 		.quad	.LVL671
 43243      00000000 
 43244 16667 ED6B0100 		.long	0x16bed
 43245 1666b C201     		.uleb128 0xc2
 43246 1666d 01       		.uleb128 0x1
 43247 1666e 55       		.byte	0x55
 43248 1666f 02       		.uleb128 0x2
GAS LISTING /tmp/ccJUMvuF.s 			page 1076


 43249 16670 7D       		.byte	0x7d
 43250 16671 00       		.sleb128 0
 43251 16672 00       		.byte	0
 43252 16673 00       		.byte	0
 43253 16674 00       		.byte	0
 43254 16675 00       		.byte	0
 43255 16676 00       		.byte	0
 43256 16677 00       		.byte	0
 43257 16678 00       		.byte	0
 43258 16679 CA01     		.uleb128 0xca
 43259 1667b 75F40000 		.long	0xf475
 43260 1667f 00000000 		.quad	.LBB4957
 43260      00000000 
 43261 16687 0F000000 		.quad	.LBE4957-.LBB4957
 43261      00000000 
 43262 1668f 16       		.byte	0x16
 43263 16690 31       		.byte	0x31
 43264 16691 7F670100 		.long	0x1677f
 43265 16695 BE01     		.uleb128 0xbe
 43266 16697 84F40000 		.long	0xf484
 43267 1669b 00000000 		.long	.LLST671
 43268 1669f B801     		.uleb128 0xb8
 43269 166a1 04E10000 		.long	0xe104
 43270 166a5 00000000 		.quad	.LBB4959
 43270      00000000 
 43271 166ad 0F000000 		.quad	.LBE4959-.LBB4959
 43271      00000000 
 43272 166b5 06       		.byte	0x6
 43273 166b6 A901     		.value	0x1a9
 43274 166b8 BE01     		.uleb128 0xbe
 43275 166ba 13E10000 		.long	0xe113
 43276 166be 00000000 		.long	.LLST671
 43277 166c2 CE01     		.uleb128 0xce
 43278 166c4 86E00000 		.long	0xe086
 43279 166c8 00000000 		.quad	.LBB4961
 43279      00000000 
 43280 166d0 0A000000 		.quad	.LBE4961-.LBB4961
 43280      00000000 
 43281 166d8 06       		.byte	0x6
 43282 166d9 A0       		.byte	0xa0
 43283 166da AE01     		.uleb128 0xae
 43284 166dc 95E00000 		.long	0xe095
 43285 166e0 BE01     		.uleb128 0xbe
 43286 166e2 ABE00000 		.long	0xe0ab
 43287 166e6 00000000 		.long	.LLST673
 43288 166ea BE01     		.uleb128 0xbe
 43289 166ec 9FE00000 		.long	0xe09f
 43290 166f0 00000000 		.long	.LLST674
 43291 166f4 B901     		.uleb128 0xb9
 43292 166f6 00000000 		.quad	.LBB4962
 43292      00000000 
 43293 166fe 0A000000 		.quad	.LBE4962-.LBB4962
 43293      00000000 
 43294 16706 CE01     		.uleb128 0xce
 43295 16708 4EE00000 		.long	0xe04e
 43296 1670c 00000000 		.quad	.LBB4963
 43296      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1077


 43297 16714 05000000 		.quad	.LBE4963-.LBB4963
 43297      00000000 
 43298 1671c 06       		.byte	0x6
 43299 1671d B2       		.byte	0xb2
 43300 1671e AE01     		.uleb128 0xae
 43301 16720 59E00000 		.long	0xe059
 43302 16724 BE01     		.uleb128 0xbe
 43303 16726 73E00000 		.long	0xe073
 43304 1672a 00000000 		.long	.LLST675
 43305 1672e BE01     		.uleb128 0xbe
 43306 16730 66E00000 		.long	0xe066
 43307 16734 00000000 		.long	.LLST676
 43308 16738 B801     		.uleb128 0xb8
 43309 1673a 23E00000 		.long	0xe023
 43310 1673e 00000000 		.quad	.LBB4964
 43310      00000000 
 43311 16746 05000000 		.quad	.LBE4964-.LBB4964
 43311      00000000 
 43312 1674e 2F       		.byte	0x2f
 43313 1674f 7F01     		.value	0x17f
 43314 16751 AE01     		.uleb128 0xae
 43315 16753 32E00000 		.long	0xe032
 43316 16757 BE01     		.uleb128 0xbe
 43317 16759 48E00000 		.long	0xe048
 43318 1675d 00000000 		.long	.LLST675
 43319 16761 BE01     		.uleb128 0xbe
 43320 16763 3CE00000 		.long	0xe03c
 43321 16767 00000000 		.long	.LLST676
 43322 1676b CF01     		.uleb128 0xcf
 43323 1676d 00000000 		.quad	.LVL674
 43323      00000000 
 43324 16775 ED6B0100 		.long	0x16bed
 43325 16779 00       		.byte	0
 43326 1677a 00       		.byte	0
 43327 1677b 00       		.byte	0
 43328 1677c 00       		.byte	0
 43329 1677d 00       		.byte	0
 43330 1677e 00       		.byte	0
 43331 1677f CA01     		.uleb128 0xca
 43332 16781 33FC0000 		.long	0xfc33
 43333 16785 00000000 		.quad	.LBB4966
 43333      00000000 
 43334 1678d 12000000 		.quad	.LBE4966-.LBB4966
 43334      00000000 
 43335 16795 16       		.byte	0x16
 43336 16796 4A       		.byte	0x4a
 43337 16797 FE670100 		.long	0x167fe
 43338 1679b BE01     		.uleb128 0xbe
 43339 1679d 42FC0000 		.long	0xfc42
 43340 167a1 00000000 		.long	.LLST679
 43341 167a5 B901     		.uleb128 0xb9
 43342 167a7 00000000 		.quad	.LBB4967
 43342      00000000 
 43343 167af 12000000 		.quad	.LBE4967-.LBB4967
 43343      00000000 
 43344 167b7 BA01     		.uleb128 0xba
 43345 167b9 58FC0000 		.long	0xfc58
GAS LISTING /tmp/ccJUMvuF.s 			page 1078


 43346 167bd CE01     		.uleb128 0xce
 43347 167bf BECC0000 		.long	0xccbe
 43348 167c3 00000000 		.quad	.LBB4968
 43348      00000000 
 43349 167cb 0D000000 		.quad	.LBE4968-.LBB4968
 43349      00000000 
 43350 167d3 17       		.byte	0x17
 43351 167d4 EC       		.byte	0xec
 43352 167d5 AE01     		.uleb128 0xae
 43353 167d7 CDCC0000 		.long	0xcccd
 43354 167db BE01     		.uleb128 0xbe
 43355 167dd D7CC0000 		.long	0xccd7
 43356 167e1 00000000 		.long	.LLST680
 43357 167e5 C101     		.uleb128 0xc1
 43358 167e7 00000000 		.quad	.LVL676
 43358      00000000 
 43359 167ef CF6C0100 		.long	0x16ccf
 43360 167f3 C201     		.uleb128 0xc2
 43361 167f5 01       		.uleb128 0x1
 43362 167f6 55       		.byte	0x55
 43363 167f7 02       		.uleb128 0x2
 43364 167f8 73       		.byte	0x73
 43365 167f9 00       		.sleb128 0
 43366 167fa 00       		.byte	0
 43367 167fb 00       		.byte	0
 43368 167fc 00       		.byte	0
 43369 167fd 00       		.byte	0
 43370 167fe C601     		.uleb128 0xc6
 43371 16800 00000000 		.quad	.LVL358
 43371      00000000 
 43372 16808 E06C0100 		.long	0x16ce0
 43373 1680c 1F680100 		.long	0x1681f
 43374 16810 C201     		.uleb128 0xc2
 43375 16812 01       		.uleb128 0x1
 43376 16813 55       		.byte	0x55
 43377 16814 02       		.uleb128 0x2
 43378 16815 7E       		.byte	0x7e
 43379 16816 00       		.sleb128 0
 43380 16817 C201     		.uleb128 0xc2
 43381 16819 01       		.uleb128 0x1
 43382 1681a 54       		.byte	0x54
 43383 1681b 02       		.uleb128 0x2
 43384 1681c 7E       		.byte	0x7e
 43385 1681d 00       		.sleb128 0
 43386 1681e 00       		.byte	0
 43387 1681f C101     		.uleb128 0xc1
 43388 16821 00000000 		.quad	.LVL360
 43388      00000000 
 43389 16829 CF0C0100 		.long	0x10ccf
 43390 1682d C201     		.uleb128 0xc2
 43391 1682f 01       		.uleb128 0x1
 43392 16830 55       		.byte	0x55
 43393 16831 03       		.uleb128 0x3
 43394 16832 91       		.byte	0x91
 43395 16833 C07E     		.sleb128 -192
 43396 16835 C201     		.uleb128 0xc2
 43397 16837 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1079


 43398 16838 54       		.byte	0x54
 43399 16839 02       		.uleb128 0x2
 43400 1683a 7E       		.byte	0x7e
 43401 1683b 00       		.sleb128 0
 43402 1683c 00       		.byte	0
 43403 1683d 00       		.byte	0
 43404 1683e 00       		.byte	0
 43405 1683f CA01     		.uleb128 0xca
 43406 16841 98CC0000 		.long	0xcc98
 43407 16845 00000000 		.quad	.LBB4974
 43407      00000000 
 43408 1684d 08000000 		.quad	.LBE4974-.LBB4974
 43408      00000000 
 43409 16855 16       		.byte	0x16
 43410 16856 4B       		.byte	0x4b
 43411 16857 7E680100 		.long	0x1687e
 43412 1685b AE01     		.uleb128 0xae
 43413 1685d B1CC0000 		.long	0xccb1
 43414 16861 AE01     		.uleb128 0xae
 43415 16863 A7CC0000 		.long	0xcca7
 43416 16867 C101     		.uleb128 0xc1
 43417 16869 00000000 		.quad	.LVL567
 43417      00000000 
 43418 16871 47FE0000 		.long	0xfe47
 43419 16875 C201     		.uleb128 0xc2
 43420 16877 01       		.uleb128 0x1
 43421 16878 55       		.byte	0x55
 43422 16879 02       		.uleb128 0x2
 43423 1687a 7F       		.byte	0x7f
 43424 1687b 00       		.sleb128 0
 43425 1687c 00       		.byte	0
 43426 1687d 00       		.byte	0
 43427 1687e CA01     		.uleb128 0xca
 43428 16880 98CC0000 		.long	0xcc98
 43429 16884 00000000 		.quad	.LBB4976
 43429      00000000 
 43430 1688c 08000000 		.quad	.LBE4976-.LBB4976
 43430      00000000 
 43431 16894 16       		.byte	0x16
 43432 16895 4B       		.byte	0x4b
 43433 16896 B9680100 		.long	0x168b9
 43434 1689a AE01     		.uleb128 0xae
 43435 1689c B1CC0000 		.long	0xccb1
 43436 168a0 BE01     		.uleb128 0xbe
 43437 168a2 A7CC0000 		.long	0xcca7
 43438 168a6 00000000 		.long	.LLST681
 43439 168aa CF01     		.uleb128 0xcf
 43440 168ac 00000000 		.quad	.LVL569
 43440      00000000 
 43441 168b4 47FE0000 		.long	0xfe47
 43442 168b8 00       		.byte	0
 43443 168b9 CA01     		.uleb128 0xca
 43444 168bb 6BFC0000 		.long	0xfc6b
 43445 168bf 00000000 		.quad	.LBB4978
 43445      00000000 
 43446 168c7 0D000000 		.quad	.LBE4978-.LBB4978
 43446      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1080


 43447 168cf 16       		.byte	0x16
 43448 168d0 4D       		.byte	0x4d
 43449 168d1 38690100 		.long	0x16938
 43450 168d5 BE01     		.uleb128 0xbe
 43451 168d7 7AFC0000 		.long	0xfc7a
 43452 168db 00000000 		.long	.LLST682
 43453 168df B901     		.uleb128 0xb9
 43454 168e1 00000000 		.quad	.LBB4979
 43454      00000000 
 43455 168e9 0D000000 		.quad	.LBE4979-.LBB4979
 43455      00000000 
 43456 168f1 BA01     		.uleb128 0xba
 43457 168f3 90FC0000 		.long	0xfc90
 43458 168f7 CE01     		.uleb128 0xce
 43459 168f9 E7CC0000 		.long	0xcce7
 43460 168fd 00000000 		.quad	.LBB4980
 43460      00000000 
 43461 16905 08000000 		.quad	.LBE4980-.LBB4980
 43461      00000000 
 43462 1690d 17       		.byte	0x17
 43463 1690e EC       		.byte	0xec
 43464 1690f AE01     		.uleb128 0xae
 43465 16911 F6CC0000 		.long	0xccf6
 43466 16915 BE01     		.uleb128 0xbe
 43467 16917 00CD0000 		.long	0xcd00
 43468 1691b 00000000 		.long	.LLST683
 43469 1691f C101     		.uleb128 0xc1
 43470 16921 00000000 		.quad	.LVL571
 43470      00000000 
 43471 16929 FA6C0100 		.long	0x16cfa
 43472 1692d C201     		.uleb128 0xc2
 43473 1692f 01       		.uleb128 0x1
 43474 16930 55       		.byte	0x55
 43475 16931 02       		.uleb128 0x2
 43476 16932 76       		.byte	0x76
 43477 16933 00       		.sleb128 0
 43478 16934 00       		.byte	0
 43479 16935 00       		.byte	0
 43480 16936 00       		.byte	0
 43481 16937 00       		.byte	0
 43482 16938 CA01     		.uleb128 0xca
 43483 1693a 6BFC0000 		.long	0xfc6b
 43484 1693e 00000000 		.quad	.LBB4983
 43484      00000000 
 43485 16946 15000000 		.quad	.LBE4983-.LBB4983
 43485      00000000 
 43486 1694e 16       		.byte	0x16
 43487 1694f 4D       		.byte	0x4d
 43488 16950 B7690100 		.long	0x169b7
 43489 16954 BE01     		.uleb128 0xbe
 43490 16956 7AFC0000 		.long	0xfc7a
 43491 1695a 00000000 		.long	.LLST684
 43492 1695e B901     		.uleb128 0xb9
 43493 16960 00000000 		.quad	.LBB4984
 43493      00000000 
 43494 16968 15000000 		.quad	.LBE4984-.LBB4984
 43494      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1081


 43495 16970 BA01     		.uleb128 0xba
 43496 16972 90FC0000 		.long	0xfc90
 43497 16976 CE01     		.uleb128 0xce
 43498 16978 E7CC0000 		.long	0xcce7
 43499 1697c 00000000 		.quad	.LBB4985
 43499      00000000 
 43500 16984 10000000 		.quad	.LBE4985-.LBB4985
 43500      00000000 
 43501 1698c 17       		.byte	0x17
 43502 1698d EC       		.byte	0xec
 43503 1698e AE01     		.uleb128 0xae
 43504 16990 F6CC0000 		.long	0xccf6
 43505 16994 BE01     		.uleb128 0xbe
 43506 16996 00CD0000 		.long	0xcd00
 43507 1699a 00000000 		.long	.LLST685
 43508 1699e C101     		.uleb128 0xc1
 43509 169a0 00000000 		.quad	.LVL666
 43509      00000000 
 43510 169a8 FA6C0100 		.long	0x16cfa
 43511 169ac C201     		.uleb128 0xc2
 43512 169ae 01       		.uleb128 0x1
 43513 169af 55       		.byte	0x55
 43514 169b0 02       		.uleb128 0x2
 43515 169b1 76       		.byte	0x76
 43516 169b2 00       		.sleb128 0
 43517 169b3 00       		.byte	0
 43518 169b4 00       		.byte	0
 43519 169b5 00       		.byte	0
 43520 169b6 00       		.byte	0
 43521 169b7 C601     		.uleb128 0xc6
 43522 169b9 00000000 		.quad	.LVL353
 43522      00000000 
 43523 169c1 0B6D0100 		.long	0x16d0b
 43524 169c5 D1690100 		.long	0x169d1
 43525 169c9 C201     		.uleb128 0xc2
 43526 169cb 01       		.uleb128 0x1
 43527 169cc 55       		.byte	0x55
 43528 169cd 02       		.uleb128 0x2
 43529 169ce 08       		.byte	0x8
 43530 169cf 80       		.byte	0x80
 43531 169d0 00       		.byte	0
 43532 169d1 C101     		.uleb128 0xc1
 43533 169d3 00000000 		.quad	.LVL568
 43533      00000000 
 43534 169db 20CB0000 		.long	0xcb20
 43535 169df C201     		.uleb128 0xc2
 43536 169e1 01       		.uleb128 0x1
 43537 169e2 54       		.byte	0x54
 43538 169e3 09       		.uleb128 0x9
 43539 169e4 03       		.byte	0x3
 43540 169e5 00000000 		.quad	.LC30
 43540      00000000 
 43541 169ed 00       		.byte	0
 43542 169ee 00       		.byte	0
 43543 169ef C101     		.uleb128 0xc1
 43544 169f1 00000000 		.quad	.LVL667
 43544      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1082


 43545 169f9 026C0100 		.long	0x16c02
 43546 169fd C201     		.uleb128 0xc2
 43547 169ff 01       		.uleb128 0x1
 43548 16a00 55       		.byte	0x55
 43549 16a01 02       		.uleb128 0x2
 43550 16a02 73       		.byte	0x73
 43551 16a03 00       		.sleb128 0
 43552 16a04 00       		.byte	0
 43553 16a05 00       		.byte	0
 43554 16a06 DB01     		.uleb128 0xdb
 43555 16a08 00000000 		.long	.LASF1800
 43556 16a0c 00000000 		.quad	.LFB6649
 43556      00000000 
 43557 16a14 2E000000 		.quad	.LFE6649-.LFB6649
 43557      00000000 
 43558 16a1c 01       		.uleb128 0x1
 43559 16a1d 9C       		.byte	0x9c
 43560 16a1e 856A0100 		.long	0x16a85
 43561 16a22 CB01     		.uleb128 0xcb
 43562 16a24 F1FD0000 		.long	0xfdf1
 43563 16a28 00000000 		.quad	.LBB4990
 43563      00000000 
 43564 16a30 00000000 		.long	.Ldebug_ranges0+0x2c80
 43565 16a34 16       		.byte	0x16
 43566 16a35 4E       		.byte	0x4e
 43567 16a36 CD01     		.uleb128 0xcd
 43568 16a38 FCFD0000 		.long	0xfdfc
 43569 16a3c 01       		.byte	0x1
 43570 16a3d C801     		.uleb128 0xc8
 43571 16a3f 08FE0000 		.long	0xfe08
 43572 16a43 FFFF     		.value	0xffff
 43573 16a45 DC01     		.uleb128 0xdc
 43574 16a47 00000000 		.quad	.LVL686
 43574      00000000 
 43575 16a4f 626A0100 		.long	0x16a62
 43576 16a53 C201     		.uleb128 0xc2
 43577 16a55 01       		.uleb128 0x1
 43578 16a56 55       		.byte	0x55
 43579 16a57 09       		.uleb128 0x9
 43580 16a58 03       		.byte	0x3
 43581 16a59 00000000 		.quad	_ZStL8__ioinit
 43581      00000000 
 43582 16a61 00       		.byte	0
 43583 16a62 DD01     		.uleb128 0xdd
 43584 16a64 00000000 		.quad	.LVL687
 43584      00000000 
 43585 16a6c 206D0100 		.long	0x16d20
 43586 16a70 C201     		.uleb128 0xc2
 43587 16a72 01       		.uleb128 0x1
 43588 16a73 54       		.byte	0x54
 43589 16a74 09       		.uleb128 0x9
 43590 16a75 03       		.byte	0x3
 43591 16a76 00000000 		.quad	_ZStL8__ioinit
 43591      00000000 
 43592 16a7e DE01     		.uleb128 0xde
 43593 16a80 01       		.uleb128 0x1
 43594 16a81 51       		.byte	0x51
GAS LISTING /tmp/ccJUMvuF.s 			page 1083


 43595 16a82 00       		.byte	0
 43596 16a83 00       		.byte	0
 43597 16a84 00       		.byte	0
 43598 16a85 DF01     		.uleb128 0xdf
 43599 16a87 00000000 		.long	.LASF1748
 43600 16a8b 3E       		.byte	0x3e
 43601 16a8c A5       		.byte	0xa5
 43602 16a8d AFBD0000 		.long	0xbdaf
 43603 16a91 DF01     		.uleb128 0xdf
 43604 16a93 00000000 		.long	.LASF1749
 43605 16a97 3E       		.byte	0x3e
 43606 16a98 A6       		.byte	0xa6
 43607 16a99 AFBD0000 		.long	0xbdaf
 43608 16a9d DF01     		.uleb128 0xdf
 43609 16a9f 00000000 		.long	.LASF1750
 43610 16aa3 4D       		.byte	0x4d
 43611 16aa4 B1       		.byte	0xb1
 43612 16aa5 A96A0100 		.long	0x16aa9
 43613 16aa9 7E       		.uleb128 0x7e
 43614 16aaa 08       		.byte	0x8
 43615 16aab AF6A0100 		.long	0x16aaf
 43616 16aaf 11       		.uleb128 0x11
 43617 16ab0 4AC50000 		.long	0xc54a
 43618 16ab4 E001     		.uleb128 0xe0
 43619 16ab6 00000000 		.long	.LASF1751
 43620 16aba 16       		.byte	0x16
 43621 16abb 20       		.byte	0x20
 43622 16abc C16A0100 		.long	0x16ac1
 43623 16ac0 80       		.byte	0x80
 43624 16ac1 11       		.uleb128 0x11
 43625 16ac2 3BAE0000 		.long	0xae3b
 43626 16ac6 E101     		.uleb128 0xe1
 43627 16ac8 00000000 		.long	.LASF1752
 43628 16acc 16       		.byte	0x16
 43629 16acd 21       		.byte	0x21
 43630 16ace C16A0100 		.long	0x16ac1
 43631 16ad2 0040     		.value	0x4000
 43632 16ad4 E101     		.uleb128 0xe1
 43633 16ad6 00000000 		.long	.LASF1753
 43634 16ada 16       		.byte	0x16
 43635 16adb 22       		.byte	0x22
 43636 16adc C16A0100 		.long	0x16ac1
 43637 16ae0 E803     		.value	0x3e8
 43638 16ae2 E001     		.uleb128 0xe0
 43639 16ae4 00000000 		.long	.LASF1754
 43640 16ae8 16       		.byte	0x16
 43641 16ae9 23       		.byte	0x23
 43642 16aea C16A0100 		.long	0x16ac1
 43643 16aee 80       		.byte	0x80
 43644 16aef E201     		.uleb128 0xe2
 43645 16af1 00000000 		.long	.LASF1755
 43646 16af5 01930000 		.long	0x9301
 43647 16af9 E301     		.uleb128 0xe3
 43648 16afb 0CA80000 		.long	0xa80c
 43649 16aff 02       		.byte	0x2
 43650 16b00 E401     		.uleb128 0xe4
 43651 16b02 4A920000 		.long	0x924a
GAS LISTING /tmp/ccJUMvuF.s 			page 1084


 43652 16b06 E401     		.uleb128 0xe4
 43653 16b08 5C920000 		.long	0x925c
 43654 16b0c E401     		.uleb128 0xe4
 43655 16b0e 6E920000 		.long	0x926e
 43656 16b12 E501     		.uleb128 0xe5
 43657 16b14 AA920000 		.long	0x92aa
 43658 16b18 09       		.uleb128 0x9
 43659 16b19 03       		.byte	0x3
 43660 16b1a 00000000 		.quad	_ZStL8__ioinit
 43660      00000000 
 43661 16b22 E601     		.uleb128 0xe6
 43662 16b24 24020000 		.long	0x224
 43663 16b28 00000000 		.long	.LASF1756
 43664 16b2c E601     		.uleb128 0xe6
 43665 16b2e 7C020000 		.long	0x27c
 43666 16b32 00000000 		.long	.LASF1757
 43667 16b36 E601     		.uleb128 0xe6
 43668 16b38 2F960000 		.long	0x962f
 43669 16b3c 00000000 		.long	.LASF1758
 43670 16b40 E601     		.uleb128 0xe6
 43671 16b42 3A960000 		.long	0x963a
 43672 16b46 00000000 		.long	.LASF1759
 43673 16b4a E601     		.uleb128 0xe6
 43674 16b4c 1F9B0000 		.long	0x9b1f
 43675 16b50 00000000 		.long	.LASF1760
 43676 16b54 E601     		.uleb128 0xe6
 43677 16b56 619B0000 		.long	0x9b61
 43678 16b5a 00000000 		.long	.LASF1761
 43679 16b5e E601     		.uleb128 0xe6
 43680 16b60 A39B0000 		.long	0x9ba3
 43681 16b64 00000000 		.long	.LASF1762
 43682 16b68 E601     		.uleb128 0xe6
 43683 16b6a 70240000 		.long	0x2470
 43684 16b6e 00000000 		.long	.LASF1763
 43685 16b72 E601     		.uleb128 0xe6
 43686 16b74 E59B0000 		.long	0x9be5
 43687 16b78 00000000 		.long	.LASF1764
 43688 16b7c E601     		.uleb128 0xe6
 43689 16b7e 119C0000 		.long	0x9c11
 43690 16b82 00000000 		.long	.LASF1765
 43691 16b86 E601     		.uleb128 0xe6
 43692 16b88 489C0000 		.long	0x9c48
 43693 16b8c 00000000 		.long	.LASF1766
 43694 16b90 E601     		.uleb128 0xe6
 43695 16b92 539C0000 		.long	0x9c53
 43696 16b96 00000000 		.long	.LASF1767
 43697 16b9a E601     		.uleb128 0xe6
 43698 16b9c 8A9C0000 		.long	0x9c8a
 43699 16ba0 00000000 		.long	.LASF1768
 43700 16ba4 E601     		.uleb128 0xe6
 43701 16ba6 959C0000 		.long	0x9c95
 43702 16baa 00000000 		.long	.LASF1769
 43703 16bae E601     		.uleb128 0xe6
 43704 16bb0 E42C0000 		.long	0x2ce4
 43705 16bb4 00000000 		.long	.LASF1770
 43706 16bb8 9201     		.uleb128 0x92
 43707 16bba 91530000 		.long	0x5391
GAS LISTING /tmp/ccJUMvuF.s 			page 1085


 43708 16bbe C86B0100 		.long	0x16bc8
 43709 16bc2 09       		.uleb128 0x9
 43710 16bc3 C92C0000 		.long	0x2cc9
 43711 16bc7 00       		.byte	0
 43712 16bc8 8401     		.uleb128 0x84
 43713 16bca 00000000 		.long	.LASF1771
 43714 16bce 4F       		.byte	0x4f
 43715 16bcf 61       		.byte	0x61
 43716 16bd0 29000000 		.long	0x29
 43717 16bd4 4E       		.uleb128 0x4e
 43718 16bd5 00000000 		.long	.LASF1772
 43719 16bd9 1C       		.byte	0x1c
 43720 16bda 80       		.byte	0x80
 43721 16bdb 00000000 		.long	.LASF1773
 43722 16bdf 01930000 		.long	0x9301
 43723 16be3 ED6B0100 		.long	0x16bed
 43724 16be7 09       		.uleb128 0x9
 43725 16be8 85060000 		.long	0x685
 43726 16bec 00       		.byte	0
 43727 16bed 1C       		.uleb128 0x1c
 43728 16bee 00000000 		.long	.LASF1774
 43729 16bf2 1C       		.byte	0x1c
 43730 16bf3 84       		.byte	0x84
 43731 16bf4 00000000 		.long	.LASF1775
 43732 16bf8 026C0100 		.long	0x16c02
 43733 16bfc 09       		.uleb128 0x9
 43734 16bfd 01930000 		.long	0x9301
 43735 16c01 00       		.byte	0
 43736 16c02 E701     		.uleb128 0xe7
 43737 16c04 00000000 		.long	.LASF1776
 43738 16c08 00000000 		.long	.LASF1801
 43739 16c0c 166C0100 		.long	0x16c16
 43740 16c10 09       		.uleb128 0x9
 43741 16c11 01930000 		.long	0x9301
 43742 16c15 00       		.byte	0
 43743 16c16 E801     		.uleb128 0xe8
 43744 16c18 00000000 		.long	.LASF1777
 43745 16c1c 00000000 		.long	.LASF1802
 43746 16c20 01930000 		.long	0x9301
 43747 16c24 386C0100 		.long	0x16c38
 43748 16c28 09       		.uleb128 0x9
 43749 16c29 01930000 		.long	0x9301
 43750 16c2d 09       		.uleb128 0x9
 43751 16c2e C9B70000 		.long	0xb7c9
 43752 16c32 09       		.uleb128 0x9
 43753 16c33 53930000 		.long	0x9353
 43754 16c37 00       		.byte	0
 43755 16c38 4A       		.uleb128 0x4a
 43756 16c39 00000000 		.long	.LASF1778
 43757 16c3d 4D       		.byte	0x4d
 43758 16c3e 51       		.byte	0x51
 43759 16c3f 586C0100 		.long	0x16c58
 43760 16c43 09       		.uleb128 0x9
 43761 16c44 5BC50000 		.long	0xc55b
 43762 16c48 09       		.uleb128 0x9
 43763 16c49 68930000 		.long	0x9368
 43764 16c4d 09       		.uleb128 0x9
GAS LISTING /tmp/ccJUMvuF.s 			page 1086


 43765 16c4e 68930000 		.long	0x9368
 43766 16c52 09       		.uleb128 0x9
 43767 16c53 586C0100 		.long	0x16c58
 43768 16c57 00       		.byte	0
 43769 16c58 7E       		.uleb128 0x7e
 43770 16c59 08       		.byte	0x8
 43771 16c5a 5E6C0100 		.long	0x16c5e
 43772 16c5e 11       		.uleb128 0x11
 43773 16c5f 0EC50000 		.long	0xc50e
 43774 16c63 E901     		.uleb128 0xe9
 43775 16c65 00000000 		.long	.LASF1779
 43776 16c69 01930000 		.long	0x9301
 43777 16c6d 816C0100 		.long	0x16c81
 43778 16c71 09       		.uleb128 0x9
 43779 16c72 01930000 		.long	0x9301
 43780 16c76 09       		.uleb128 0x9
 43781 16c77 28930000 		.long	0x9328
 43782 16c7b 09       		.uleb128 0x9
 43783 16c7c F7AD0000 		.long	0xadf7
 43784 16c80 00       		.byte	0
 43785 16c81 52       		.uleb128 0x52
 43786 16c82 00000000 		.long	.LASF1780
 43787 16c86 4D       		.byte	0x4d
 43788 16c87 73       		.byte	0x73
 43789 16c88 00C80000 		.long	0xc800
 43790 16c8c A06C0100 		.long	0x16ca0
 43791 16c90 09       		.uleb128 0x9
 43792 16c91 A06C0100 		.long	0x16ca0
 43793 16c95 09       		.uleb128 0x9
 43794 16c96 A96A0100 		.long	0x16aa9
 43795 16c9a 09       		.uleb128 0x9
 43796 16c9b 00C80000 		.long	0xc800
 43797 16c9f 00       		.byte	0
 43798 16ca0 7E       		.uleb128 0x7e
 43799 16ca1 08       		.byte	0x8
 43800 16ca2 A66C0100 		.long	0x16ca6
 43801 16ca6 11       		.uleb128 0x11
 43802 16ca7 D2C40000 		.long	0xc4d2
 43803 16cab 52       		.uleb128 0x52
 43804 16cac 00000000 		.long	.LASF1781
 43805 16cb0 4D       		.byte	0x4d
 43806 16cb1 81       		.byte	0x81
 43807 16cb2 00C80000 		.long	0xc800
 43808 16cb6 CF6C0100 		.long	0x16ccf
 43809 16cba 09       		.uleb128 0x9
 43810 16cbb A06C0100 		.long	0x16ca0
 43811 16cbf 09       		.uleb128 0x9
 43812 16cc0 A96A0100 		.long	0x16aa9
 43813 16cc4 09       		.uleb128 0x9
 43814 16cc5 30000000 		.long	0x30
 43815 16cc9 09       		.uleb128 0x9
 43816 16cca 00C80000 		.long	0xc800
 43817 16cce 00       		.byte	0
 43818 16ccf 4A       		.uleb128 0x4a
 43819 16cd0 00000000 		.long	.LASF1782
 43820 16cd4 4D       		.byte	0x4d
 43821 16cd5 47       		.byte	0x47
GAS LISTING /tmp/ccJUMvuF.s 			page 1087


 43822 16cd6 E06C0100 		.long	0x16ce0
 43823 16cda 09       		.uleb128 0x9
 43824 16cdb 5BC50000 		.long	0xc55b
 43825 16cdf 00       		.byte	0
 43826 16ce0 52       		.uleb128 0x52
 43827 16ce1 00000000 		.long	.LASF1783
 43828 16ce5 4D       		.byte	0x4d
 43829 16ce6 45       		.byte	0x45
 43830 16ce7 5BC50000 		.long	0xc55b
 43831 16ceb FA6C0100 		.long	0x16cfa
 43832 16cef 09       		.uleb128 0x9
 43833 16cf0 68930000 		.long	0x9368
 43834 16cf4 09       		.uleb128 0x9
 43835 16cf5 68930000 		.long	0x9368
 43836 16cf9 00       		.byte	0
 43837 16cfa 4A       		.uleb128 0x4a
 43838 16cfb 00000000 		.long	.LASF1784
 43839 16cff 4D       		.byte	0x4d
 43840 16d00 A3       		.byte	0xa3
 43841 16d01 0B6D0100 		.long	0x16d0b
 43842 16d05 09       		.uleb128 0x9
 43843 16d06 67C50000 		.long	0xc567
 43844 16d0a 00       		.byte	0
 43845 16d0b 52       		.uleb128 0x52
 43846 16d0c 00000000 		.long	.LASF1785
 43847 16d10 4D       		.byte	0x4d
 43848 16d11 93       		.byte	0x93
 43849 16d12 67C50000 		.long	0xc567
 43850 16d16 206D0100 		.long	0x16d20
 43851 16d1a 09       		.uleb128 0x9
 43852 16d1b 68930000 		.long	0x9368
 43853 16d1f 00       		.byte	0
 43854 16d20 EA01     		.uleb128 0xea
 43855 16d22 00000000 		.long	.LASF1786
 43856 16d26 28930000 		.long	0x9328
 43857 16d2a 09       		.uleb128 0x9
 43858 16d2b 81B90000 		.long	0xb981
 43859 16d2f 09       		.uleb128 0x9
 43860 16d30 01930000 		.long	0x9301
 43861 16d34 09       		.uleb128 0x9
 43862 16d35 01930000 		.long	0x9301
 43863 16d39 00       		.byte	0
 43864 16d3a 00       		.byte	0
 43865              		.section	.debug_abbrev,"",@progbits
 43866              	.Ldebug_abbrev0:
 43867 0000 01       		.uleb128 0x1
 43868 0001 11       		.uleb128 0x11
 43869 0002 01       		.byte	0x1
 43870 0003 25       		.uleb128 0x25
 43871 0004 0E       		.uleb128 0xe
 43872 0005 13       		.uleb128 0x13
 43873 0006 0B       		.uleb128 0xb
 43874 0007 03       		.uleb128 0x3
 43875 0008 0E       		.uleb128 0xe
 43876 0009 1B       		.uleb128 0x1b
 43877 000a 0E       		.uleb128 0xe
 43878 000b 55       		.uleb128 0x55
GAS LISTING /tmp/ccJUMvuF.s 			page 1088


 43879 000c 17       		.uleb128 0x17
 43880 000d 11       		.uleb128 0x11
 43881 000e 01       		.uleb128 0x1
 43882 000f 10       		.uleb128 0x10
 43883 0010 17       		.uleb128 0x17
 43884 0011 00       		.byte	0
 43885 0012 00       		.byte	0
 43886 0013 02       		.uleb128 0x2
 43887 0014 24       		.uleb128 0x24
 43888 0015 00       		.byte	0
 43889 0016 0B       		.uleb128 0xb
 43890 0017 0B       		.uleb128 0xb
 43891 0018 3E       		.uleb128 0x3e
 43892 0019 0B       		.uleb128 0xb
 43893 001a 03       		.uleb128 0x3
 43894 001b 0E       		.uleb128 0xe
 43895 001c 00       		.byte	0
 43896 001d 00       		.byte	0
 43897 001e 03       		.uleb128 0x3
 43898 001f 39       		.uleb128 0x39
 43899 0020 01       		.byte	0x1
 43900 0021 03       		.uleb128 0x3
 43901 0022 08       		.uleb128 0x8
 43902 0023 3A       		.uleb128 0x3a
 43903 0024 0B       		.uleb128 0xb
 43904 0025 3B       		.uleb128 0x3b
 43905 0026 0B       		.uleb128 0xb
 43906 0027 01       		.uleb128 0x1
 43907 0028 13       		.uleb128 0x13
 43908 0029 00       		.byte	0
 43909 002a 00       		.byte	0
 43910 002b 04       		.uleb128 0x4
 43911 002c 39       		.uleb128 0x39
 43912 002d 01       		.byte	0x1
 43913 002e 03       		.uleb128 0x3
 43914 002f 0E       		.uleb128 0xe
 43915 0030 3A       		.uleb128 0x3a
 43916 0031 0B       		.uleb128 0xb
 43917 0032 3B       		.uleb128 0x3b
 43918 0033 0B       		.uleb128 0xb
 43919 0034 01       		.uleb128 0x1
 43920 0035 13       		.uleb128 0x13
 43921 0036 00       		.byte	0
 43922 0037 00       		.byte	0
 43923 0038 05       		.uleb128 0x5
 43924 0039 02       		.uleb128 0x2
 43925 003a 01       		.byte	0x1
 43926 003b 03       		.uleb128 0x3
 43927 003c 0E       		.uleb128 0xe
 43928 003d 0B       		.uleb128 0xb
 43929 003e 0B       		.uleb128 0xb
 43930 003f 3A       		.uleb128 0x3a
 43931 0040 0B       		.uleb128 0xb
 43932 0041 3B       		.uleb128 0x3b
 43933 0042 0B       		.uleb128 0xb
 43934 0043 01       		.uleb128 0x1
 43935 0044 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1089


 43936 0045 00       		.byte	0
 43937 0046 00       		.byte	0
 43938 0047 06       		.uleb128 0x6
 43939 0048 0D       		.uleb128 0xd
 43940 0049 00       		.byte	0
 43941 004a 03       		.uleb128 0x3
 43942 004b 0E       		.uleb128 0xe
 43943 004c 3A       		.uleb128 0x3a
 43944 004d 0B       		.uleb128 0xb
 43945 004e 3B       		.uleb128 0x3b
 43946 004f 0B       		.uleb128 0xb
 43947 0050 49       		.uleb128 0x49
 43948 0051 13       		.uleb128 0x13
 43949 0052 38       		.uleb128 0x38
 43950 0053 0B       		.uleb128 0xb
 43951 0054 00       		.byte	0
 43952 0055 00       		.byte	0
 43953 0056 07       		.uleb128 0x7
 43954 0057 2E       		.uleb128 0x2e
 43955 0058 01       		.byte	0x1
 43956 0059 3F       		.uleb128 0x3f
 43957 005a 19       		.uleb128 0x19
 43958 005b 03       		.uleb128 0x3
 43959 005c 0E       		.uleb128 0xe
 43960 005d 3A       		.uleb128 0x3a
 43961 005e 0B       		.uleb128 0xb
 43962 005f 3B       		.uleb128 0x3b
 43963 0060 0B       		.uleb128 0xb
 43964 0061 3C       		.uleb128 0x3c
 43965 0062 19       		.uleb128 0x19
 43966 0063 63       		.uleb128 0x63
 43967 0064 19       		.uleb128 0x19
 43968 0065 64       		.uleb128 0x64
 43969 0066 13       		.uleb128 0x13
 43970 0067 01       		.uleb128 0x1
 43971 0068 13       		.uleb128 0x13
 43972 0069 00       		.byte	0
 43973 006a 00       		.byte	0
 43974 006b 08       		.uleb128 0x8
 43975 006c 05       		.uleb128 0x5
 43976 006d 00       		.byte	0
 43977 006e 49       		.uleb128 0x49
 43978 006f 13       		.uleb128 0x13
 43979 0070 34       		.uleb128 0x34
 43980 0071 19       		.uleb128 0x19
 43981 0072 00       		.byte	0
 43982 0073 00       		.byte	0
 43983 0074 09       		.uleb128 0x9
 43984 0075 05       		.uleb128 0x5
 43985 0076 00       		.byte	0
 43986 0077 49       		.uleb128 0x49
 43987 0078 13       		.uleb128 0x13
 43988 0079 00       		.byte	0
 43989 007a 00       		.byte	0
 43990 007b 0A       		.uleb128 0xa
 43991 007c 2E       		.uleb128 0x2e
 43992 007d 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1090


 43993 007e 3F       		.uleb128 0x3f
 43994 007f 19       		.uleb128 0x19
 43995 0080 03       		.uleb128 0x3
 43996 0081 0E       		.uleb128 0xe
 43997 0082 3A       		.uleb128 0x3a
 43998 0083 0B       		.uleb128 0xb
 43999 0084 3B       		.uleb128 0x3b
 44000 0085 0B       		.uleb128 0xb
 44001 0086 6E       		.uleb128 0x6e
 44002 0087 0E       		.uleb128 0xe
 44003 0088 3C       		.uleb128 0x3c
 44004 0089 19       		.uleb128 0x19
 44005 008a 64       		.uleb128 0x64
 44006 008b 13       		.uleb128 0x13
 44007 008c 01       		.uleb128 0x1
 44008 008d 13       		.uleb128 0x13
 44009 008e 00       		.byte	0
 44010 008f 00       		.byte	0
 44011 0090 0B       		.uleb128 0xb
 44012 0091 2E       		.uleb128 0x2e
 44013 0092 01       		.byte	0x1
 44014 0093 3F       		.uleb128 0x3f
 44015 0094 19       		.uleb128 0x19
 44016 0095 03       		.uleb128 0x3
 44017 0096 0E       		.uleb128 0xe
 44018 0097 3A       		.uleb128 0x3a
 44019 0098 0B       		.uleb128 0xb
 44020 0099 3B       		.uleb128 0x3b
 44021 009a 0B       		.uleb128 0xb
 44022 009b 6E       		.uleb128 0x6e
 44023 009c 0E       		.uleb128 0xe
 44024 009d 49       		.uleb128 0x49
 44025 009e 13       		.uleb128 0x13
 44026 009f 3C       		.uleb128 0x3c
 44027 00a0 19       		.uleb128 0x19
 44028 00a1 64       		.uleb128 0x64
 44029 00a2 13       		.uleb128 0x13
 44030 00a3 01       		.uleb128 0x1
 44031 00a4 13       		.uleb128 0x13
 44032 00a5 00       		.byte	0
 44033 00a6 00       		.byte	0
 44034 00a7 0C       		.uleb128 0xc
 44035 00a8 2E       		.uleb128 0x2e
 44036 00a9 01       		.byte	0x1
 44037 00aa 3F       		.uleb128 0x3f
 44038 00ab 19       		.uleb128 0x19
 44039 00ac 03       		.uleb128 0x3
 44040 00ad 0E       		.uleb128 0xe
 44041 00ae 3A       		.uleb128 0x3a
 44042 00af 0B       		.uleb128 0xb
 44043 00b0 3B       		.uleb128 0x3b
 44044 00b1 0B       		.uleb128 0xb
 44045 00b2 32       		.uleb128 0x32
 44046 00b3 0B       		.uleb128 0xb
 44047 00b4 3C       		.uleb128 0x3c
 44048 00b5 19       		.uleb128 0x19
 44049 00b6 64       		.uleb128 0x64
GAS LISTING /tmp/ccJUMvuF.s 			page 1091


 44050 00b7 13       		.uleb128 0x13
 44051 00b8 01       		.uleb128 0x1
 44052 00b9 13       		.uleb128 0x13
 44053 00ba 00       		.byte	0
 44054 00bb 00       		.byte	0
 44055 00bc 0D       		.uleb128 0xd
 44056 00bd 2E       		.uleb128 0x2e
 44057 00be 01       		.byte	0x1
 44058 00bf 3F       		.uleb128 0x3f
 44059 00c0 19       		.uleb128 0x19
 44060 00c1 03       		.uleb128 0x3
 44061 00c2 0E       		.uleb128 0xe
 44062 00c3 3A       		.uleb128 0x3a
 44063 00c4 0B       		.uleb128 0xb
 44064 00c5 3B       		.uleb128 0x3b
 44065 00c6 0B       		.uleb128 0xb
 44066 00c7 6E       		.uleb128 0x6e
 44067 00c8 0E       		.uleb128 0xe
 44068 00c9 49       		.uleb128 0x49
 44069 00ca 13       		.uleb128 0x13
 44070 00cb 32       		.uleb128 0x32
 44071 00cc 0B       		.uleb128 0xb
 44072 00cd 3C       		.uleb128 0x3c
 44073 00ce 19       		.uleb128 0x19
 44074 00cf 64       		.uleb128 0x64
 44075 00d0 13       		.uleb128 0x13
 44076 00d1 01       		.uleb128 0x1
 44077 00d2 13       		.uleb128 0x13
 44078 00d3 00       		.byte	0
 44079 00d4 00       		.byte	0
 44080 00d5 0E       		.uleb128 0xe
 44081 00d6 2E       		.uleb128 0x2e
 44082 00d7 01       		.byte	0x1
 44083 00d8 3F       		.uleb128 0x3f
 44084 00d9 19       		.uleb128 0x19
 44085 00da 03       		.uleb128 0x3
 44086 00db 0E       		.uleb128 0xe
 44087 00dc 3A       		.uleb128 0x3a
 44088 00dd 0B       		.uleb128 0xb
 44089 00de 3B       		.uleb128 0x3b
 44090 00df 0B       		.uleb128 0xb
 44091 00e0 6E       		.uleb128 0x6e
 44092 00e1 0E       		.uleb128 0xe
 44093 00e2 32       		.uleb128 0x32
 44094 00e3 0B       		.uleb128 0xb
 44095 00e4 3C       		.uleb128 0x3c
 44096 00e5 19       		.uleb128 0x19
 44097 00e6 64       		.uleb128 0x64
 44098 00e7 13       		.uleb128 0x13
 44099 00e8 01       		.uleb128 0x1
 44100 00e9 13       		.uleb128 0x13
 44101 00ea 00       		.byte	0
 44102 00eb 00       		.byte	0
 44103 00ec 0F       		.uleb128 0xf
 44104 00ed 2E       		.uleb128 0x2e
 44105 00ee 01       		.byte	0x1
 44106 00ef 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccJUMvuF.s 			page 1092


 44107 00f0 19       		.uleb128 0x19
 44108 00f1 03       		.uleb128 0x3
 44109 00f2 0E       		.uleb128 0xe
 44110 00f3 3A       		.uleb128 0x3a
 44111 00f4 0B       		.uleb128 0xb
 44112 00f5 3B       		.uleb128 0x3b
 44113 00f6 0B       		.uleb128 0xb
 44114 00f7 6E       		.uleb128 0x6e
 44115 00f8 0E       		.uleb128 0xe
 44116 00f9 49       		.uleb128 0x49
 44117 00fa 13       		.uleb128 0x13
 44118 00fb 32       		.uleb128 0x32
 44119 00fc 0B       		.uleb128 0xb
 44120 00fd 3C       		.uleb128 0x3c
 44121 00fe 19       		.uleb128 0x19
 44122 00ff 63       		.uleb128 0x63
 44123 0100 19       		.uleb128 0x19
 44124 0101 64       		.uleb128 0x64
 44125 0102 13       		.uleb128 0x13
 44126 0103 01       		.uleb128 0x1
 44127 0104 13       		.uleb128 0x13
 44128 0105 00       		.byte	0
 44129 0106 00       		.byte	0
 44130 0107 10       		.uleb128 0x10
 44131 0108 2E       		.uleb128 0x2e
 44132 0109 01       		.byte	0x1
 44133 010a 3F       		.uleb128 0x3f
 44134 010b 19       		.uleb128 0x19
 44135 010c 03       		.uleb128 0x3
 44136 010d 0E       		.uleb128 0xe
 44137 010e 3A       		.uleb128 0x3a
 44138 010f 0B       		.uleb128 0xb
 44139 0110 3B       		.uleb128 0x3b
 44140 0111 0B       		.uleb128 0xb
 44141 0112 6E       		.uleb128 0x6e
 44142 0113 0E       		.uleb128 0xe
 44143 0114 49       		.uleb128 0x49
 44144 0115 13       		.uleb128 0x13
 44145 0116 32       		.uleb128 0x32
 44146 0117 0B       		.uleb128 0xb
 44147 0118 3C       		.uleb128 0x3c
 44148 0119 19       		.uleb128 0x19
 44149 011a 64       		.uleb128 0x64
 44150 011b 13       		.uleb128 0x13
 44151 011c 00       		.byte	0
 44152 011d 00       		.byte	0
 44153 011e 11       		.uleb128 0x11
 44154 011f 26       		.uleb128 0x26
 44155 0120 00       		.byte	0
 44156 0121 49       		.uleb128 0x49
 44157 0122 13       		.uleb128 0x13
 44158 0123 00       		.byte	0
 44159 0124 00       		.byte	0
 44160 0125 12       		.uleb128 0x12
 44161 0126 08       		.uleb128 0x8
 44162 0127 00       		.byte	0
 44163 0128 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 1093


 44164 0129 0B       		.uleb128 0xb
 44165 012a 3B       		.uleb128 0x3b
 44166 012b 0B       		.uleb128 0xb
 44167 012c 18       		.uleb128 0x18
 44168 012d 13       		.uleb128 0x13
 44169 012e 00       		.byte	0
 44170 012f 00       		.byte	0
 44171 0130 13       		.uleb128 0x13
 44172 0131 16       		.uleb128 0x16
 44173 0132 00       		.byte	0
 44174 0133 03       		.uleb128 0x3
 44175 0134 0E       		.uleb128 0xe
 44176 0135 3A       		.uleb128 0x3a
 44177 0136 0B       		.uleb128 0xb
 44178 0137 3B       		.uleb128 0x3b
 44179 0138 0B       		.uleb128 0xb
 44180 0139 49       		.uleb128 0x49
 44181 013a 13       		.uleb128 0x13
 44182 013b 00       		.byte	0
 44183 013c 00       		.byte	0
 44184 013d 14       		.uleb128 0x14
 44185 013e 02       		.uleb128 0x2
 44186 013f 00       		.byte	0
 44187 0140 03       		.uleb128 0x3
 44188 0141 0E       		.uleb128 0xe
 44189 0142 3C       		.uleb128 0x3c
 44190 0143 19       		.uleb128 0x19
 44191 0144 00       		.byte	0
 44192 0145 00       		.byte	0
 44193 0146 15       		.uleb128 0x15
 44194 0147 13       		.uleb128 0x13
 44195 0148 00       		.byte	0
 44196 0149 03       		.uleb128 0x3
 44197 014a 0E       		.uleb128 0xe
 44198 014b 0B       		.uleb128 0xb
 44199 014c 0B       		.uleb128 0xb
 44200 014d 3A       		.uleb128 0x3a
 44201 014e 0B       		.uleb128 0xb
 44202 014f 3B       		.uleb128 0x3b
 44203 0150 0B       		.uleb128 0xb
 44204 0151 00       		.byte	0
 44205 0152 00       		.byte	0
 44206 0153 16       		.uleb128 0x16
 44207 0154 13       		.uleb128 0x13
 44208 0155 01       		.byte	0x1
 44209 0156 03       		.uleb128 0x3
 44210 0157 0E       		.uleb128 0xe
 44211 0158 0B       		.uleb128 0xb
 44212 0159 0B       		.uleb128 0xb
 44213 015a 3A       		.uleb128 0x3a
 44214 015b 0B       		.uleb128 0xb
 44215 015c 3B       		.uleb128 0x3b
 44216 015d 0B       		.uleb128 0xb
 44217 015e 01       		.uleb128 0x1
 44218 015f 13       		.uleb128 0x13
 44219 0160 00       		.byte	0
 44220 0161 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1094


 44221 0162 17       		.uleb128 0x17
 44222 0163 0D       		.uleb128 0xd
 44223 0164 00       		.byte	0
 44224 0165 03       		.uleb128 0x3
 44225 0166 0E       		.uleb128 0xe
 44226 0167 3A       		.uleb128 0x3a
 44227 0168 0B       		.uleb128 0xb
 44228 0169 3B       		.uleb128 0x3b
 44229 016a 0B       		.uleb128 0xb
 44230 016b 49       		.uleb128 0x49
 44231 016c 13       		.uleb128 0x13
 44232 016d 3F       		.uleb128 0x3f
 44233 016e 19       		.uleb128 0x19
 44234 016f 3C       		.uleb128 0x3c
 44235 0170 19       		.uleb128 0x19
 44236 0171 00       		.byte	0
 44237 0172 00       		.byte	0
 44238 0173 18       		.uleb128 0x18
 44239 0174 2F       		.uleb128 0x2f
 44240 0175 00       		.byte	0
 44241 0176 03       		.uleb128 0x3
 44242 0177 08       		.uleb128 0x8
 44243 0178 49       		.uleb128 0x49
 44244 0179 13       		.uleb128 0x13
 44245 017a 00       		.byte	0
 44246 017b 00       		.byte	0
 44247 017c 19       		.uleb128 0x19
 44248 017d 30       		.uleb128 0x30
 44249 017e 00       		.byte	0
 44250 017f 03       		.uleb128 0x3
 44251 0180 08       		.uleb128 0x8
 44252 0181 49       		.uleb128 0x49
 44253 0182 13       		.uleb128 0x13
 44254 0183 1C       		.uleb128 0x1c
 44255 0184 0B       		.uleb128 0xb
 44256 0185 00       		.byte	0
 44257 0186 00       		.byte	0
 44258 0187 1A       		.uleb128 0x1a
 44259 0188 39       		.uleb128 0x39
 44260 0189 00       		.byte	0
 44261 018a 03       		.uleb128 0x3
 44262 018b 0E       		.uleb128 0xe
 44263 018c 3A       		.uleb128 0x3a
 44264 018d 0B       		.uleb128 0xb
 44265 018e 3B       		.uleb128 0x3b
 44266 018f 0B       		.uleb128 0xb
 44267 0190 00       		.byte	0
 44268 0191 00       		.byte	0
 44269 0192 1B       		.uleb128 0x1b
 44270 0193 08       		.uleb128 0x8
 44271 0194 00       		.byte	0
 44272 0195 3A       		.uleb128 0x3a
 44273 0196 0B       		.uleb128 0xb
 44274 0197 3B       		.uleb128 0x3b
 44275 0198 05       		.uleb128 0x5
 44276 0199 18       		.uleb128 0x18
 44277 019a 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1095


 44278 019b 00       		.byte	0
 44279 019c 00       		.byte	0
 44280 019d 1C       		.uleb128 0x1c
 44281 019e 2E       		.uleb128 0x2e
 44282 019f 01       		.byte	0x1
 44283 01a0 3F       		.uleb128 0x3f
 44284 01a1 19       		.uleb128 0x19
 44285 01a2 03       		.uleb128 0x3
 44286 01a3 0E       		.uleb128 0xe
 44287 01a4 3A       		.uleb128 0x3a
 44288 01a5 0B       		.uleb128 0xb
 44289 01a6 3B       		.uleb128 0x3b
 44290 01a7 0B       		.uleb128 0xb
 44291 01a8 6E       		.uleb128 0x6e
 44292 01a9 0E       		.uleb128 0xe
 44293 01aa 3C       		.uleb128 0x3c
 44294 01ab 19       		.uleb128 0x19
 44295 01ac 01       		.uleb128 0x1
 44296 01ad 13       		.uleb128 0x13
 44297 01ae 00       		.byte	0
 44298 01af 00       		.byte	0
 44299 01b0 1D       		.uleb128 0x1d
 44300 01b1 2E       		.uleb128 0x2e
 44301 01b2 01       		.byte	0x1
 44302 01b3 3F       		.uleb128 0x3f
 44303 01b4 19       		.uleb128 0x19
 44304 01b5 03       		.uleb128 0x3
 44305 01b6 08       		.uleb128 0x8
 44306 01b7 3A       		.uleb128 0x3a
 44307 01b8 0B       		.uleb128 0xb
 44308 01b9 3B       		.uleb128 0x3b
 44309 01ba 0B       		.uleb128 0xb
 44310 01bb 6E       		.uleb128 0x6e
 44311 01bc 0E       		.uleb128 0xe
 44312 01bd 49       		.uleb128 0x49
 44313 01be 13       		.uleb128 0x13
 44314 01bf 3C       		.uleb128 0x3c
 44315 01c0 19       		.uleb128 0x19
 44316 01c1 01       		.uleb128 0x1
 44317 01c2 13       		.uleb128 0x13
 44318 01c3 00       		.byte	0
 44319 01c4 00       		.byte	0
 44320 01c5 1E       		.uleb128 0x1e
 44321 01c6 2E       		.uleb128 0x2e
 44322 01c7 01       		.byte	0x1
 44323 01c8 3F       		.uleb128 0x3f
 44324 01c9 19       		.uleb128 0x19
 44325 01ca 03       		.uleb128 0x3
 44326 01cb 0E       		.uleb128 0xe
 44327 01cc 3A       		.uleb128 0x3a
 44328 01cd 0B       		.uleb128 0xb
 44329 01ce 3B       		.uleb128 0x3b
 44330 01cf 05       		.uleb128 0x5
 44331 01d0 6E       		.uleb128 0x6e
 44332 01d1 0E       		.uleb128 0xe
 44333 01d2 49       		.uleb128 0x49
 44334 01d3 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1096


 44335 01d4 3C       		.uleb128 0x3c
 44336 01d5 19       		.uleb128 0x19
 44337 01d6 01       		.uleb128 0x1
 44338 01d7 13       		.uleb128 0x13
 44339 01d8 00       		.byte	0
 44340 01d9 00       		.byte	0
 44341 01da 1F       		.uleb128 0x1f
 44342 01db 2E       		.uleb128 0x2e
 44343 01dc 00       		.byte	0
 44344 01dd 3F       		.uleb128 0x3f
 44345 01de 19       		.uleb128 0x19
 44346 01df 03       		.uleb128 0x3
 44347 01e0 08       		.uleb128 0x8
 44348 01e1 3A       		.uleb128 0x3a
 44349 01e2 0B       		.uleb128 0xb
 44350 01e3 3B       		.uleb128 0x3b
 44351 01e4 05       		.uleb128 0x5
 44352 01e5 6E       		.uleb128 0x6e
 44353 01e6 0E       		.uleb128 0xe
 44354 01e7 49       		.uleb128 0x49
 44355 01e8 13       		.uleb128 0x13
 44356 01e9 3C       		.uleb128 0x3c
 44357 01ea 19       		.uleb128 0x19
 44358 01eb 00       		.byte	0
 44359 01ec 00       		.byte	0
 44360 01ed 20       		.uleb128 0x20
 44361 01ee 2E       		.uleb128 0x2e
 44362 01ef 01       		.byte	0x1
 44363 01f0 3F       		.uleb128 0x3f
 44364 01f1 19       		.uleb128 0x19
 44365 01f2 03       		.uleb128 0x3
 44366 01f3 0E       		.uleb128 0xe
 44367 01f4 3A       		.uleb128 0x3a
 44368 01f5 0B       		.uleb128 0xb
 44369 01f6 3B       		.uleb128 0x3b
 44370 01f7 05       		.uleb128 0x5
 44371 01f8 6E       		.uleb128 0x6e
 44372 01f9 0E       		.uleb128 0xe
 44373 01fa 49       		.uleb128 0x49
 44374 01fb 13       		.uleb128 0x13
 44375 01fc 3C       		.uleb128 0x3c
 44376 01fd 19       		.uleb128 0x19
 44377 01fe 00       		.byte	0
 44378 01ff 00       		.byte	0
 44379 0200 21       		.uleb128 0x21
 44380 0201 1C       		.uleb128 0x1c
 44381 0202 00       		.byte	0
 44382 0203 49       		.uleb128 0x49
 44383 0204 13       		.uleb128 0x13
 44384 0205 38       		.uleb128 0x38
 44385 0206 0B       		.uleb128 0xb
 44386 0207 32       		.uleb128 0x32
 44387 0208 0B       		.uleb128 0xb
 44388 0209 00       		.byte	0
 44389 020a 00       		.byte	0
 44390 020b 22       		.uleb128 0x22
 44391 020c 16       		.uleb128 0x16
GAS LISTING /tmp/ccJUMvuF.s 			page 1097


 44392 020d 00       		.byte	0
 44393 020e 03       		.uleb128 0x3
 44394 020f 0E       		.uleb128 0xe
 44395 0210 3A       		.uleb128 0x3a
 44396 0211 0B       		.uleb128 0xb
 44397 0212 3B       		.uleb128 0x3b
 44398 0213 0B       		.uleb128 0xb
 44399 0214 49       		.uleb128 0x49
 44400 0215 13       		.uleb128 0x13
 44401 0216 32       		.uleb128 0x32
 44402 0217 0B       		.uleb128 0xb
 44403 0218 00       		.byte	0
 44404 0219 00       		.byte	0
 44405 021a 23       		.uleb128 0x23
 44406 021b 2E       		.uleb128 0x2e
 44407 021c 01       		.byte	0x1
 44408 021d 3F       		.uleb128 0x3f
 44409 021e 19       		.uleb128 0x19
 44410 021f 03       		.uleb128 0x3
 44411 0220 0E       		.uleb128 0xe
 44412 0221 3A       		.uleb128 0x3a
 44413 0222 0B       		.uleb128 0xb
 44414 0223 3B       		.uleb128 0x3b
 44415 0224 0B       		.uleb128 0xb
 44416 0225 32       		.uleb128 0x32
 44417 0226 0B       		.uleb128 0xb
 44418 0227 3C       		.uleb128 0x3c
 44419 0228 19       		.uleb128 0x19
 44420 0229 64       		.uleb128 0x64
 44421 022a 13       		.uleb128 0x13
 44422 022b 00       		.byte	0
 44423 022c 00       		.byte	0
 44424 022d 24       		.uleb128 0x24
 44425 022e 13       		.uleb128 0x13
 44426 022f 01       		.byte	0x1
 44427 0230 03       		.uleb128 0x3
 44428 0231 0E       		.uleb128 0xe
 44429 0232 0B       		.uleb128 0xb
 44430 0233 0B       		.uleb128 0xb
 44431 0234 3A       		.uleb128 0x3a
 44432 0235 0B       		.uleb128 0xb
 44433 0236 3B       		.uleb128 0x3b
 44434 0237 05       		.uleb128 0x5
 44435 0238 01       		.uleb128 0x1
 44436 0239 13       		.uleb128 0x13
 44437 023a 00       		.byte	0
 44438 023b 00       		.byte	0
 44439 023c 25       		.uleb128 0x25
 44440 023d 1C       		.uleb128 0x1c
 44441 023e 00       		.byte	0
 44442 023f 49       		.uleb128 0x49
 44443 0240 13       		.uleb128 0x13
 44444 0241 38       		.uleb128 0x38
 44445 0242 0B       		.uleb128 0xb
 44446 0243 00       		.byte	0
 44447 0244 00       		.byte	0
 44448 0245 26       		.uleb128 0x26
GAS LISTING /tmp/ccJUMvuF.s 			page 1098


 44449 0246 0D       		.uleb128 0xd
 44450 0247 00       		.byte	0
 44451 0248 03       		.uleb128 0x3
 44452 0249 0E       		.uleb128 0xe
 44453 024a 3A       		.uleb128 0x3a
 44454 024b 0B       		.uleb128 0xb
 44455 024c 3B       		.uleb128 0x3b
 44456 024d 05       		.uleb128 0x5
 44457 024e 49       		.uleb128 0x49
 44458 024f 13       		.uleb128 0x13
 44459 0250 38       		.uleb128 0x38
 44460 0251 0B       		.uleb128 0xb
 44461 0252 00       		.byte	0
 44462 0253 00       		.byte	0
 44463 0254 27       		.uleb128 0x27
 44464 0255 2E       		.uleb128 0x2e
 44465 0256 01       		.byte	0x1
 44466 0257 3F       		.uleb128 0x3f
 44467 0258 19       		.uleb128 0x19
 44468 0259 03       		.uleb128 0x3
 44469 025a 0E       		.uleb128 0xe
 44470 025b 3A       		.uleb128 0x3a
 44471 025c 0B       		.uleb128 0xb
 44472 025d 3B       		.uleb128 0x3b
 44473 025e 05       		.uleb128 0x5
 44474 025f 3C       		.uleb128 0x3c
 44475 0260 19       		.uleb128 0x19
 44476 0261 64       		.uleb128 0x64
 44477 0262 13       		.uleb128 0x13
 44478 0263 01       		.uleb128 0x1
 44479 0264 13       		.uleb128 0x13
 44480 0265 00       		.byte	0
 44481 0266 00       		.byte	0
 44482 0267 28       		.uleb128 0x28
 44483 0268 2E       		.uleb128 0x2e
 44484 0269 01       		.byte	0x1
 44485 026a 3F       		.uleb128 0x3f
 44486 026b 19       		.uleb128 0x19
 44487 026c 03       		.uleb128 0x3
 44488 026d 0E       		.uleb128 0xe
 44489 026e 34       		.uleb128 0x34
 44490 026f 19       		.uleb128 0x19
 44491 0270 3C       		.uleb128 0x3c
 44492 0271 19       		.uleb128 0x19
 44493 0272 64       		.uleb128 0x64
 44494 0273 13       		.uleb128 0x13
 44495 0274 00       		.byte	0
 44496 0275 00       		.byte	0
 44497 0276 29       		.uleb128 0x29
 44498 0277 0D       		.uleb128 0xd
 44499 0278 00       		.byte	0
 44500 0279 03       		.uleb128 0x3
 44501 027a 0E       		.uleb128 0xe
 44502 027b 3A       		.uleb128 0x3a
 44503 027c 0B       		.uleb128 0xb
 44504 027d 3B       		.uleb128 0x3b
 44505 027e 05       		.uleb128 0x5
GAS LISTING /tmp/ccJUMvuF.s 			page 1099


 44506 027f 49       		.uleb128 0x49
 44507 0280 13       		.uleb128 0x13
 44508 0281 3F       		.uleb128 0x3f
 44509 0282 19       		.uleb128 0x19
 44510 0283 32       		.uleb128 0x32
 44511 0284 0B       		.uleb128 0xb
 44512 0285 3C       		.uleb128 0x3c
 44513 0286 19       		.uleb128 0x19
 44514 0287 00       		.byte	0
 44515 0288 00       		.byte	0
 44516 0289 2A       		.uleb128 0x2a
 44517 028a 2E       		.uleb128 0x2e
 44518 028b 00       		.byte	0
 44519 028c 3F       		.uleb128 0x3f
 44520 028d 19       		.uleb128 0x19
 44521 028e 03       		.uleb128 0x3
 44522 028f 0E       		.uleb128 0xe
 44523 0290 3A       		.uleb128 0x3a
 44524 0291 0B       		.uleb128 0xb
 44525 0292 3B       		.uleb128 0x3b
 44526 0293 0B       		.uleb128 0xb
 44527 0294 6E       		.uleb128 0x6e
 44528 0295 0E       		.uleb128 0xe
 44529 0296 49       		.uleb128 0x49
 44530 0297 13       		.uleb128 0x13
 44531 0298 3C       		.uleb128 0x3c
 44532 0299 19       		.uleb128 0x19
 44533 029a 00       		.byte	0
 44534 029b 00       		.byte	0
 44535 029c 2B       		.uleb128 0x2b
 44536 029d 2E       		.uleb128 0x2e
 44537 029e 01       		.byte	0x1
 44538 029f 3F       		.uleb128 0x3f
 44539 02a0 19       		.uleb128 0x19
 44540 02a1 03       		.uleb128 0x3
 44541 02a2 0E       		.uleb128 0xe
 44542 02a3 3A       		.uleb128 0x3a
 44543 02a4 0B       		.uleb128 0xb
 44544 02a5 3B       		.uleb128 0x3b
 44545 02a6 05       		.uleb128 0x5
 44546 02a7 6E       		.uleb128 0x6e
 44547 02a8 0E       		.uleb128 0xe
 44548 02a9 3C       		.uleb128 0x3c
 44549 02aa 19       		.uleb128 0x19
 44550 02ab 64       		.uleb128 0x64
 44551 02ac 13       		.uleb128 0x13
 44552 02ad 01       		.uleb128 0x1
 44553 02ae 13       		.uleb128 0x13
 44554 02af 00       		.byte	0
 44555 02b0 00       		.byte	0
 44556 02b1 2C       		.uleb128 0x2c
 44557 02b2 2E       		.uleb128 0x2e
 44558 02b3 01       		.byte	0x1
 44559 02b4 3F       		.uleb128 0x3f
 44560 02b5 19       		.uleb128 0x19
 44561 02b6 03       		.uleb128 0x3
 44562 02b7 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 1100


 44563 02b8 3A       		.uleb128 0x3a
 44564 02b9 0B       		.uleb128 0xb
 44565 02ba 3B       		.uleb128 0x3b
 44566 02bb 05       		.uleb128 0x5
 44567 02bc 6E       		.uleb128 0x6e
 44568 02bd 0E       		.uleb128 0xe
 44569 02be 49       		.uleb128 0x49
 44570 02bf 13       		.uleb128 0x13
 44571 02c0 3C       		.uleb128 0x3c
 44572 02c1 19       		.uleb128 0x19
 44573 02c2 64       		.uleb128 0x64
 44574 02c3 13       		.uleb128 0x13
 44575 02c4 01       		.uleb128 0x1
 44576 02c5 13       		.uleb128 0x13
 44577 02c6 00       		.byte	0
 44578 02c7 00       		.byte	0
 44579 02c8 2D       		.uleb128 0x2d
 44580 02c9 2E       		.uleb128 0x2e
 44581 02ca 01       		.byte	0x1
 44582 02cb 3F       		.uleb128 0x3f
 44583 02cc 19       		.uleb128 0x19
 44584 02cd 03       		.uleb128 0x3
 44585 02ce 0E       		.uleb128 0xe
 44586 02cf 3A       		.uleb128 0x3a
 44587 02d0 0B       		.uleb128 0xb
 44588 02d1 3B       		.uleb128 0x3b
 44589 02d2 05       		.uleb128 0x5
 44590 02d3 6E       		.uleb128 0x6e
 44591 02d4 0E       		.uleb128 0xe
 44592 02d5 49       		.uleb128 0x49
 44593 02d6 13       		.uleb128 0x13
 44594 02d7 3C       		.uleb128 0x3c
 44595 02d8 19       		.uleb128 0x19
 44596 02d9 64       		.uleb128 0x64
 44597 02da 13       		.uleb128 0x13
 44598 02db 00       		.byte	0
 44599 02dc 00       		.byte	0
 44600 02dd 2E       		.uleb128 0x2e
 44601 02de 2E       		.uleb128 0x2e
 44602 02df 01       		.byte	0x1
 44603 02e0 3F       		.uleb128 0x3f
 44604 02e1 19       		.uleb128 0x19
 44605 02e2 03       		.uleb128 0x3
 44606 02e3 0E       		.uleb128 0xe
 44607 02e4 3A       		.uleb128 0x3a
 44608 02e5 0B       		.uleb128 0xb
 44609 02e6 3B       		.uleb128 0x3b
 44610 02e7 05       		.uleb128 0x5
 44611 02e8 6E       		.uleb128 0x6e
 44612 02e9 0E       		.uleb128 0xe
 44613 02ea 3C       		.uleb128 0x3c
 44614 02eb 19       		.uleb128 0x19
 44615 02ec 01       		.uleb128 0x1
 44616 02ed 13       		.uleb128 0x13
 44617 02ee 00       		.byte	0
 44618 02ef 00       		.byte	0
 44619 02f0 2F       		.uleb128 0x2f
GAS LISTING /tmp/ccJUMvuF.s 			page 1101


 44620 02f1 2E       		.uleb128 0x2e
 44621 02f2 00       		.byte	0
 44622 02f3 3F       		.uleb128 0x3f
 44623 02f4 19       		.uleb128 0x19
 44624 02f5 03       		.uleb128 0x3
 44625 02f6 0E       		.uleb128 0xe
 44626 02f7 3A       		.uleb128 0x3a
 44627 02f8 0B       		.uleb128 0xb
 44628 02f9 3B       		.uleb128 0x3b
 44629 02fa 05       		.uleb128 0x5
 44630 02fb 6E       		.uleb128 0x6e
 44631 02fc 0E       		.uleb128 0xe
 44632 02fd 49       		.uleb128 0x49
 44633 02fe 13       		.uleb128 0x13
 44634 02ff 3C       		.uleb128 0x3c
 44635 0300 19       		.uleb128 0x19
 44636 0301 00       		.byte	0
 44637 0302 00       		.byte	0
 44638 0303 30       		.uleb128 0x30
 44639 0304 2E       		.uleb128 0x2e
 44640 0305 01       		.byte	0x1
 44641 0306 3F       		.uleb128 0x3f
 44642 0307 19       		.uleb128 0x19
 44643 0308 03       		.uleb128 0x3
 44644 0309 0E       		.uleb128 0xe
 44645 030a 3A       		.uleb128 0x3a
 44646 030b 0B       		.uleb128 0xb
 44647 030c 3B       		.uleb128 0x3b
 44648 030d 05       		.uleb128 0x5
 44649 030e 32       		.uleb128 0x32
 44650 030f 0B       		.uleb128 0xb
 44651 0310 3C       		.uleb128 0x3c
 44652 0311 19       		.uleb128 0x19
 44653 0312 64       		.uleb128 0x64
 44654 0313 13       		.uleb128 0x13
 44655 0314 01       		.uleb128 0x1
 44656 0315 13       		.uleb128 0x13
 44657 0316 00       		.byte	0
 44658 0317 00       		.byte	0
 44659 0318 31       		.uleb128 0x31
 44660 0319 2E       		.uleb128 0x2e
 44661 031a 01       		.byte	0x1
 44662 031b 3F       		.uleb128 0x3f
 44663 031c 19       		.uleb128 0x19
 44664 031d 03       		.uleb128 0x3
 44665 031e 0E       		.uleb128 0xe
 44666 031f 3A       		.uleb128 0x3a
 44667 0320 0B       		.uleb128 0xb
 44668 0321 3B       		.uleb128 0x3b
 44669 0322 05       		.uleb128 0x5
 44670 0323 32       		.uleb128 0x32
 44671 0324 0B       		.uleb128 0xb
 44672 0325 3C       		.uleb128 0x3c
 44673 0326 19       		.uleb128 0x19
 44674 0327 63       		.uleb128 0x63
 44675 0328 19       		.uleb128 0x19
 44676 0329 64       		.uleb128 0x64
GAS LISTING /tmp/ccJUMvuF.s 			page 1102


 44677 032a 13       		.uleb128 0x13
 44678 032b 01       		.uleb128 0x1
 44679 032c 13       		.uleb128 0x13
 44680 032d 00       		.byte	0
 44681 032e 00       		.byte	0
 44682 032f 32       		.uleb128 0x32
 44683 0330 2E       		.uleb128 0x2e
 44684 0331 01       		.byte	0x1
 44685 0332 3F       		.uleb128 0x3f
 44686 0333 19       		.uleb128 0x19
 44687 0334 03       		.uleb128 0x3
 44688 0335 0E       		.uleb128 0xe
 44689 0336 3A       		.uleb128 0x3a
 44690 0337 0B       		.uleb128 0xb
 44691 0338 3B       		.uleb128 0x3b
 44692 0339 05       		.uleb128 0x5
 44693 033a 6E       		.uleb128 0x6e
 44694 033b 0E       		.uleb128 0xe
 44695 033c 49       		.uleb128 0x49
 44696 033d 13       		.uleb128 0x13
 44697 033e 32       		.uleb128 0x32
 44698 033f 0B       		.uleb128 0xb
 44699 0340 3C       		.uleb128 0x3c
 44700 0341 19       		.uleb128 0x19
 44701 0342 64       		.uleb128 0x64
 44702 0343 13       		.uleb128 0x13
 44703 0344 01       		.uleb128 0x1
 44704 0345 13       		.uleb128 0x13
 44705 0346 00       		.byte	0
 44706 0347 00       		.byte	0
 44707 0348 33       		.uleb128 0x33
 44708 0349 2E       		.uleb128 0x2e
 44709 034a 01       		.byte	0x1
 44710 034b 3F       		.uleb128 0x3f
 44711 034c 19       		.uleb128 0x19
 44712 034d 03       		.uleb128 0x3
 44713 034e 08       		.uleb128 0x8
 44714 034f 3A       		.uleb128 0x3a
 44715 0350 0B       		.uleb128 0xb
 44716 0351 3B       		.uleb128 0x3b
 44717 0352 05       		.uleb128 0x5
 44718 0353 6E       		.uleb128 0x6e
 44719 0354 0E       		.uleb128 0xe
 44720 0355 49       		.uleb128 0x49
 44721 0356 13       		.uleb128 0x13
 44722 0357 32       		.uleb128 0x32
 44723 0358 0B       		.uleb128 0xb
 44724 0359 3C       		.uleb128 0x3c
 44725 035a 19       		.uleb128 0x19
 44726 035b 64       		.uleb128 0x64
 44727 035c 13       		.uleb128 0x13
 44728 035d 01       		.uleb128 0x1
 44729 035e 13       		.uleb128 0x13
 44730 035f 00       		.byte	0
 44731 0360 00       		.byte	0
 44732 0361 34       		.uleb128 0x34
 44733 0362 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccJUMvuF.s 			page 1103


 44734 0363 01       		.byte	0x1
 44735 0364 3F       		.uleb128 0x3f
 44736 0365 19       		.uleb128 0x19
 44737 0366 03       		.uleb128 0x3
 44738 0367 0E       		.uleb128 0xe
 44739 0368 3A       		.uleb128 0x3a
 44740 0369 0B       		.uleb128 0xb
 44741 036a 3B       		.uleb128 0x3b
 44742 036b 05       		.uleb128 0x5
 44743 036c 6E       		.uleb128 0x6e
 44744 036d 0E       		.uleb128 0xe
 44745 036e 32       		.uleb128 0x32
 44746 036f 0B       		.uleb128 0xb
 44747 0370 3C       		.uleb128 0x3c
 44748 0371 19       		.uleb128 0x19
 44749 0372 64       		.uleb128 0x64
 44750 0373 13       		.uleb128 0x13
 44751 0374 01       		.uleb128 0x1
 44752 0375 13       		.uleb128 0x13
 44753 0376 00       		.byte	0
 44754 0377 00       		.byte	0
 44755 0378 35       		.uleb128 0x35
 44756 0379 2F       		.uleb128 0x2f
 44757 037a 00       		.byte	0
 44758 037b 03       		.uleb128 0x3
 44759 037c 0E       		.uleb128 0xe
 44760 037d 49       		.uleb128 0x49
 44761 037e 13       		.uleb128 0x13
 44762 037f 00       		.byte	0
 44763 0380 00       		.byte	0
 44764 0381 36       		.uleb128 0x36
 44765 0382 2F       		.uleb128 0x2f
 44766 0383 00       		.byte	0
 44767 0384 03       		.uleb128 0x3
 44768 0385 0E       		.uleb128 0xe
 44769 0386 49       		.uleb128 0x49
 44770 0387 13       		.uleb128 0x13
 44771 0388 1E       		.uleb128 0x1e
 44772 0389 19       		.uleb128 0x19
 44773 038a 00       		.byte	0
 44774 038b 00       		.byte	0
 44775 038c 37       		.uleb128 0x37
 44776 038d 2E       		.uleb128 0x2e
 44777 038e 01       		.byte	0x1
 44778 038f 3F       		.uleb128 0x3f
 44779 0390 19       		.uleb128 0x19
 44780 0391 03       		.uleb128 0x3
 44781 0392 0E       		.uleb128 0xe
 44782 0393 3A       		.uleb128 0x3a
 44783 0394 0B       		.uleb128 0xb
 44784 0395 3B       		.uleb128 0x3b
 44785 0396 0B       		.uleb128 0xb
 44786 0397 3C       		.uleb128 0x3c
 44787 0398 19       		.uleb128 0x19
 44788 0399 64       		.uleb128 0x64
 44789 039a 13       		.uleb128 0x13
 44790 039b 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1104


 44791 039c 13       		.uleb128 0x13
 44792 039d 00       		.byte	0
 44793 039e 00       		.byte	0
 44794 039f 38       		.uleb128 0x38
 44795 03a0 2E       		.uleb128 0x2e
 44796 03a1 01       		.byte	0x1
 44797 03a2 3F       		.uleb128 0x3f
 44798 03a3 19       		.uleb128 0x19
 44799 03a4 03       		.uleb128 0x3
 44800 03a5 08       		.uleb128 0x8
 44801 03a6 3A       		.uleb128 0x3a
 44802 03a7 0B       		.uleb128 0xb
 44803 03a8 3B       		.uleb128 0x3b
 44804 03a9 0B       		.uleb128 0xb
 44805 03aa 6E       		.uleb128 0x6e
 44806 03ab 0E       		.uleb128 0xe
 44807 03ac 49       		.uleb128 0x49
 44808 03ad 13       		.uleb128 0x13
 44809 03ae 32       		.uleb128 0x32
 44810 03af 0B       		.uleb128 0xb
 44811 03b0 3C       		.uleb128 0x3c
 44812 03b1 19       		.uleb128 0x19
 44813 03b2 64       		.uleb128 0x64
 44814 03b3 13       		.uleb128 0x13
 44815 03b4 01       		.uleb128 0x1
 44816 03b5 13       		.uleb128 0x13
 44817 03b6 00       		.byte	0
 44818 03b7 00       		.byte	0
 44819 03b8 39       		.uleb128 0x39
 44820 03b9 2E       		.uleb128 0x2e
 44821 03ba 01       		.byte	0x1
 44822 03bb 3F       		.uleb128 0x3f
 44823 03bc 19       		.uleb128 0x19
 44824 03bd 03       		.uleb128 0x3
 44825 03be 0E       		.uleb128 0xe
 44826 03bf 3A       		.uleb128 0x3a
 44827 03c0 0B       		.uleb128 0xb
 44828 03c1 3B       		.uleb128 0x3b
 44829 03c2 0B       		.uleb128 0xb
 44830 03c3 3C       		.uleb128 0x3c
 44831 03c4 19       		.uleb128 0x19
 44832 03c5 64       		.uleb128 0x64
 44833 03c6 13       		.uleb128 0x13
 44834 03c7 00       		.byte	0
 44835 03c8 00       		.byte	0
 44836 03c9 3A       		.uleb128 0x3a
 44837 03ca 18       		.uleb128 0x18
 44838 03cb 00       		.byte	0
 44839 03cc 00       		.byte	0
 44840 03cd 00       		.byte	0
 44841 03ce 3B       		.uleb128 0x3b
 44842 03cf 02       		.uleb128 0x2
 44843 03d0 01       		.byte	0x1
 44844 03d1 03       		.uleb128 0x3
 44845 03d2 0E       		.uleb128 0xe
 44846 03d3 0B       		.uleb128 0xb
 44847 03d4 0B       		.uleb128 0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 1105


 44848 03d5 3A       		.uleb128 0x3a
 44849 03d6 0B       		.uleb128 0xb
 44850 03d7 3B       		.uleb128 0x3b
 44851 03d8 05       		.uleb128 0x5
 44852 03d9 01       		.uleb128 0x1
 44853 03da 13       		.uleb128 0x13
 44854 03db 00       		.byte	0
 44855 03dc 00       		.byte	0
 44856 03dd 3C       		.uleb128 0x3c
 44857 03de 2E       		.uleb128 0x2e
 44858 03df 01       		.byte	0x1
 44859 03e0 3F       		.uleb128 0x3f
 44860 03e1 19       		.uleb128 0x19
 44861 03e2 03       		.uleb128 0x3
 44862 03e3 0E       		.uleb128 0xe
 44863 03e4 3A       		.uleb128 0x3a
 44864 03e5 0B       		.uleb128 0xb
 44865 03e6 3B       		.uleb128 0x3b
 44866 03e7 05       		.uleb128 0x5
 44867 03e8 6E       		.uleb128 0x6e
 44868 03e9 0E       		.uleb128 0xe
 44869 03ea 32       		.uleb128 0x32
 44870 03eb 0B       		.uleb128 0xb
 44871 03ec 3C       		.uleb128 0x3c
 44872 03ed 19       		.uleb128 0x19
 44873 03ee 64       		.uleb128 0x64
 44874 03ef 13       		.uleb128 0x13
 44875 03f0 00       		.byte	0
 44876 03f1 00       		.byte	0
 44877 03f2 3D       		.uleb128 0x3d
 44878 03f3 13       		.uleb128 0x13
 44879 03f4 00       		.byte	0
 44880 03f5 03       		.uleb128 0x3
 44881 03f6 0E       		.uleb128 0xe
 44882 03f7 0B       		.uleb128 0xb
 44883 03f8 0B       		.uleb128 0xb
 44884 03f9 3A       		.uleb128 0x3a
 44885 03fa 0B       		.uleb128 0xb
 44886 03fb 3B       		.uleb128 0x3b
 44887 03fc 05       		.uleb128 0x5
 44888 03fd 00       		.byte	0
 44889 03fe 00       		.byte	0
 44890 03ff 3E       		.uleb128 0x3e
 44891 0400 04       		.uleb128 0x4
 44892 0401 01       		.byte	0x1
 44893 0402 03       		.uleb128 0x3
 44894 0403 0E       		.uleb128 0xe
 44895 0404 0B       		.uleb128 0xb
 44896 0405 0B       		.uleb128 0xb
 44897 0406 3A       		.uleb128 0x3a
 44898 0407 0B       		.uleb128 0xb
 44899 0408 3B       		.uleb128 0x3b
 44900 0409 0B       		.uleb128 0xb
 44901 040a 01       		.uleb128 0x1
 44902 040b 13       		.uleb128 0x13
 44903 040c 00       		.byte	0
 44904 040d 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1106


 44905 040e 3F       		.uleb128 0x3f
 44906 040f 28       		.uleb128 0x28
 44907 0410 00       		.byte	0
 44908 0411 03       		.uleb128 0x3
 44909 0412 0E       		.uleb128 0xe
 44910 0413 1C       		.uleb128 0x1c
 44911 0414 0D       		.uleb128 0xd
 44912 0415 00       		.byte	0
 44913 0416 00       		.byte	0
 44914 0417 40       		.uleb128 0x40
 44915 0418 02       		.uleb128 0x2
 44916 0419 01       		.byte	0x1
 44917 041a 03       		.uleb128 0x3
 44918 041b 0E       		.uleb128 0xe
 44919 041c 3C       		.uleb128 0x3c
 44920 041d 19       		.uleb128 0x19
 44921 041e 01       		.uleb128 0x1
 44922 041f 13       		.uleb128 0x13
 44923 0420 00       		.byte	0
 44924 0421 00       		.byte	0
 44925 0422 41       		.uleb128 0x41
 44926 0423 02       		.uleb128 0x2
 44927 0424 01       		.byte	0x1
 44928 0425 03       		.uleb128 0x3
 44929 0426 0E       		.uleb128 0xe
 44930 0427 0B       		.uleb128 0xb
 44931 0428 0B       		.uleb128 0xb
 44932 0429 3A       		.uleb128 0x3a
 44933 042a 0B       		.uleb128 0xb
 44934 042b 3B       		.uleb128 0x3b
 44935 042c 05       		.uleb128 0x5
 44936 042d 32       		.uleb128 0x32
 44937 042e 0B       		.uleb128 0xb
 44938 042f 01       		.uleb128 0x1
 44939 0430 13       		.uleb128 0x13
 44940 0431 00       		.byte	0
 44941 0432 00       		.byte	0
 44942 0433 42       		.uleb128 0x42
 44943 0434 0D       		.uleb128 0xd
 44944 0435 00       		.byte	0
 44945 0436 03       		.uleb128 0x3
 44946 0437 0E       		.uleb128 0xe
 44947 0438 3A       		.uleb128 0x3a
 44948 0439 0B       		.uleb128 0xb
 44949 043a 3B       		.uleb128 0x3b
 44950 043b 05       		.uleb128 0x5
 44951 043c 49       		.uleb128 0x49
 44952 043d 13       		.uleb128 0x13
 44953 043e 3F       		.uleb128 0x3f
 44954 043f 19       		.uleb128 0x19
 44955 0440 3C       		.uleb128 0x3c
 44956 0441 19       		.uleb128 0x19
 44957 0442 00       		.byte	0
 44958 0443 00       		.byte	0
 44959 0444 43       		.uleb128 0x43
 44960 0445 2E       		.uleb128 0x2e
 44961 0446 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1107


 44962 0447 3F       		.uleb128 0x3f
 44963 0448 19       		.uleb128 0x19
 44964 0449 03       		.uleb128 0x3
 44965 044a 0E       		.uleb128 0xe
 44966 044b 3A       		.uleb128 0x3a
 44967 044c 0B       		.uleb128 0xb
 44968 044d 3B       		.uleb128 0x3b
 44969 044e 05       		.uleb128 0x5
 44970 044f 32       		.uleb128 0x32
 44971 0450 0B       		.uleb128 0xb
 44972 0451 3C       		.uleb128 0x3c
 44973 0452 19       		.uleb128 0x19
 44974 0453 64       		.uleb128 0x64
 44975 0454 13       		.uleb128 0x13
 44976 0455 00       		.byte	0
 44977 0456 00       		.byte	0
 44978 0457 44       		.uleb128 0x44
 44979 0458 16       		.uleb128 0x16
 44980 0459 00       		.byte	0
 44981 045a 03       		.uleb128 0x3
 44982 045b 0E       		.uleb128 0xe
 44983 045c 3A       		.uleb128 0x3a
 44984 045d 0B       		.uleb128 0xb
 44985 045e 3B       		.uleb128 0x3b
 44986 045f 05       		.uleb128 0x5
 44987 0460 49       		.uleb128 0x49
 44988 0461 13       		.uleb128 0x13
 44989 0462 32       		.uleb128 0x32
 44990 0463 0B       		.uleb128 0xb
 44991 0464 00       		.byte	0
 44992 0465 00       		.byte	0
 44993 0466 45       		.uleb128 0x45
 44994 0467 0D       		.uleb128 0xd
 44995 0468 00       		.byte	0
 44996 0469 03       		.uleb128 0x3
 44997 046a 0E       		.uleb128 0xe
 44998 046b 3A       		.uleb128 0x3a
 44999 046c 0B       		.uleb128 0xb
 45000 046d 3B       		.uleb128 0x3b
 45001 046e 05       		.uleb128 0x5
 45002 046f 49       		.uleb128 0x49
 45003 0470 13       		.uleb128 0x13
 45004 0471 3F       		.uleb128 0x3f
 45005 0472 19       		.uleb128 0x19
 45006 0473 32       		.uleb128 0x32
 45007 0474 0B       		.uleb128 0xb
 45008 0475 3C       		.uleb128 0x3c
 45009 0476 19       		.uleb128 0x19
 45010 0477 1C       		.uleb128 0x1c
 45011 0478 0B       		.uleb128 0xb
 45012 0479 00       		.byte	0
 45013 047a 00       		.byte	0
 45014 047b 46       		.uleb128 0x46
 45015 047c 0D       		.uleb128 0xd
 45016 047d 00       		.byte	0
 45017 047e 03       		.uleb128 0x3
 45018 047f 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1108


 45019 0480 3A       		.uleb128 0x3a
 45020 0481 0B       		.uleb128 0xb
 45021 0482 3B       		.uleb128 0x3b
 45022 0483 05       		.uleb128 0x5
 45023 0484 49       		.uleb128 0x49
 45024 0485 13       		.uleb128 0x13
 45025 0486 3F       		.uleb128 0x3f
 45026 0487 19       		.uleb128 0x19
 45027 0488 32       		.uleb128 0x32
 45028 0489 0B       		.uleb128 0xb
 45029 048a 3C       		.uleb128 0x3c
 45030 048b 19       		.uleb128 0x19
 45031 048c 1C       		.uleb128 0x1c
 45032 048d 0B       		.uleb128 0xb
 45033 048e 00       		.byte	0
 45034 048f 00       		.byte	0
 45035 0490 47       		.uleb128 0x47
 45036 0491 0D       		.uleb128 0xd
 45037 0492 00       		.byte	0
 45038 0493 03       		.uleb128 0x3
 45039 0494 0E       		.uleb128 0xe
 45040 0495 3A       		.uleb128 0x3a
 45041 0496 0B       		.uleb128 0xb
 45042 0497 3B       		.uleb128 0x3b
 45043 0498 05       		.uleb128 0x5
 45044 0499 49       		.uleb128 0x49
 45045 049a 13       		.uleb128 0x13
 45046 049b 3F       		.uleb128 0x3f
 45047 049c 19       		.uleb128 0x19
 45048 049d 32       		.uleb128 0x32
 45049 049e 0B       		.uleb128 0xb
 45050 049f 3C       		.uleb128 0x3c
 45051 04a0 19       		.uleb128 0x19
 45052 04a1 1C       		.uleb128 0x1c
 45053 04a2 05       		.uleb128 0x5
 45054 04a3 00       		.byte	0
 45055 04a4 00       		.byte	0
 45056 04a5 48       		.uleb128 0x48
 45057 04a6 2E       		.uleb128 0x2e
 45058 04a7 01       		.byte	0x1
 45059 04a8 3F       		.uleb128 0x3f
 45060 04a9 19       		.uleb128 0x19
 45061 04aa 03       		.uleb128 0x3
 45062 04ab 0E       		.uleb128 0xe
 45063 04ac 3A       		.uleb128 0x3a
 45064 04ad 0B       		.uleb128 0xb
 45065 04ae 3B       		.uleb128 0x3b
 45066 04af 05       		.uleb128 0x5
 45067 04b0 6E       		.uleb128 0x6e
 45068 04b1 0E       		.uleb128 0xe
 45069 04b2 49       		.uleb128 0x49
 45070 04b3 13       		.uleb128 0x13
 45071 04b4 4C       		.uleb128 0x4c
 45072 04b5 0B       		.uleb128 0xb
 45073 04b6 4D       		.uleb128 0x4d
 45074 04b7 18       		.uleb128 0x18
 45075 04b8 1D       		.uleb128 0x1d
GAS LISTING /tmp/ccJUMvuF.s 			page 1109


 45076 04b9 13       		.uleb128 0x13
 45077 04ba 32       		.uleb128 0x32
 45078 04bb 0B       		.uleb128 0xb
 45079 04bc 3C       		.uleb128 0x3c
 45080 04bd 19       		.uleb128 0x19
 45081 04be 64       		.uleb128 0x64
 45082 04bf 13       		.uleb128 0x13
 45083 04c0 01       		.uleb128 0x1
 45084 04c1 13       		.uleb128 0x13
 45085 04c2 00       		.byte	0
 45086 04c3 00       		.byte	0
 45087 04c4 49       		.uleb128 0x49
 45088 04c5 2E       		.uleb128 0x2e
 45089 04c6 01       		.byte	0x1
 45090 04c7 3F       		.uleb128 0x3f
 45091 04c8 19       		.uleb128 0x19
 45092 04c9 03       		.uleb128 0x3
 45093 04ca 0E       		.uleb128 0xe
 45094 04cb 3A       		.uleb128 0x3a
 45095 04cc 0B       		.uleb128 0xb
 45096 04cd 3B       		.uleb128 0x3b
 45097 04ce 05       		.uleb128 0x5
 45098 04cf 6E       		.uleb128 0x6e
 45099 04d0 0E       		.uleb128 0xe
 45100 04d1 3C       		.uleb128 0x3c
 45101 04d2 19       		.uleb128 0x19
 45102 04d3 64       		.uleb128 0x64
 45103 04d4 13       		.uleb128 0x13
 45104 04d5 00       		.byte	0
 45105 04d6 00       		.byte	0
 45106 04d7 4A       		.uleb128 0x4a
 45107 04d8 2E       		.uleb128 0x2e
 45108 04d9 01       		.byte	0x1
 45109 04da 3F       		.uleb128 0x3f
 45110 04db 19       		.uleb128 0x19
 45111 04dc 03       		.uleb128 0x3
 45112 04dd 0E       		.uleb128 0xe
 45113 04de 3A       		.uleb128 0x3a
 45114 04df 0B       		.uleb128 0xb
 45115 04e0 3B       		.uleb128 0x3b
 45116 04e1 0B       		.uleb128 0xb
 45117 04e2 3C       		.uleb128 0x3c
 45118 04e3 19       		.uleb128 0x19
 45119 04e4 01       		.uleb128 0x1
 45120 04e5 13       		.uleb128 0x13
 45121 04e6 00       		.byte	0
 45122 04e7 00       		.byte	0
 45123 04e8 4B       		.uleb128 0x4b
 45124 04e9 2E       		.uleb128 0x2e
 45125 04ea 01       		.byte	0x1
 45126 04eb 3F       		.uleb128 0x3f
 45127 04ec 19       		.uleb128 0x19
 45128 04ed 03       		.uleb128 0x3
 45129 04ee 0E       		.uleb128 0xe
 45130 04ef 3A       		.uleb128 0x3a
 45131 04f0 0B       		.uleb128 0xb
 45132 04f1 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccJUMvuF.s 			page 1110


 45133 04f2 0B       		.uleb128 0xb
 45134 04f3 3C       		.uleb128 0x3c
 45135 04f4 19       		.uleb128 0x19
 45136 04f5 00       		.byte	0
 45137 04f6 00       		.byte	0
 45138 04f7 4C       		.uleb128 0x4c
 45139 04f8 2E       		.uleb128 0x2e
 45140 04f9 01       		.byte	0x1
 45141 04fa 3F       		.uleb128 0x3f
 45142 04fb 19       		.uleb128 0x19
 45143 04fc 03       		.uleb128 0x3
 45144 04fd 0E       		.uleb128 0xe
 45145 04fe 3A       		.uleb128 0x3a
 45146 04ff 0B       		.uleb128 0xb
 45147 0500 3B       		.uleb128 0x3b
 45148 0501 05       		.uleb128 0x5
 45149 0502 3C       		.uleb128 0x3c
 45150 0503 19       		.uleb128 0x19
 45151 0504 01       		.uleb128 0x1
 45152 0505 13       		.uleb128 0x13
 45153 0506 00       		.byte	0
 45154 0507 00       		.byte	0
 45155 0508 4D       		.uleb128 0x4d
 45156 0509 2E       		.uleb128 0x2e
 45157 050a 01       		.byte	0x1
 45158 050b 3F       		.uleb128 0x3f
 45159 050c 19       		.uleb128 0x19
 45160 050d 03       		.uleb128 0x3
 45161 050e 0E       		.uleb128 0xe
 45162 050f 3A       		.uleb128 0x3a
 45163 0510 0B       		.uleb128 0xb
 45164 0511 3B       		.uleb128 0x3b
 45165 0512 05       		.uleb128 0x5
 45166 0513 3C       		.uleb128 0x3c
 45167 0514 19       		.uleb128 0x19
 45168 0515 00       		.byte	0
 45169 0516 00       		.byte	0
 45170 0517 4E       		.uleb128 0x4e
 45171 0518 2E       		.uleb128 0x2e
 45172 0519 01       		.byte	0x1
 45173 051a 3F       		.uleb128 0x3f
 45174 051b 19       		.uleb128 0x19
 45175 051c 03       		.uleb128 0x3
 45176 051d 0E       		.uleb128 0xe
 45177 051e 3A       		.uleb128 0x3a
 45178 051f 0B       		.uleb128 0xb
 45179 0520 3B       		.uleb128 0x3b
 45180 0521 0B       		.uleb128 0xb
 45181 0522 6E       		.uleb128 0x6e
 45182 0523 0E       		.uleb128 0xe
 45183 0524 49       		.uleb128 0x49
 45184 0525 13       		.uleb128 0x13
 45185 0526 3C       		.uleb128 0x3c
 45186 0527 19       		.uleb128 0x19
 45187 0528 01       		.uleb128 0x1
 45188 0529 13       		.uleb128 0x13
 45189 052a 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1111


 45190 052b 00       		.byte	0
 45191 052c 4F       		.uleb128 0x4f
 45192 052d 30       		.uleb128 0x30
 45193 052e 00       		.byte	0
 45194 052f 03       		.uleb128 0x3
 45195 0530 08       		.uleb128 0x8
 45196 0531 49       		.uleb128 0x49
 45197 0532 13       		.uleb128 0x13
 45198 0533 1C       		.uleb128 0x1c
 45199 0534 07       		.uleb128 0x7
 45200 0535 00       		.byte	0
 45201 0536 00       		.byte	0
 45202 0537 50       		.uleb128 0x50
 45203 0538 30       		.uleb128 0x30
 45204 0539 00       		.byte	0
 45205 053a 03       		.uleb128 0x3
 45206 053b 0E       		.uleb128 0xe
 45207 053c 49       		.uleb128 0x49
 45208 053d 13       		.uleb128 0x13
 45209 053e 1C       		.uleb128 0x1c
 45210 053f 0B       		.uleb128 0xb
 45211 0540 00       		.byte	0
 45212 0541 00       		.byte	0
 45213 0542 51       		.uleb128 0x51
 45214 0543 30       		.uleb128 0x30
 45215 0544 00       		.byte	0
 45216 0545 03       		.uleb128 0x3
 45217 0546 08       		.uleb128 0x8
 45218 0547 49       		.uleb128 0x49
 45219 0548 13       		.uleb128 0x13
 45220 0549 1C       		.uleb128 0x1c
 45221 054a 05       		.uleb128 0x5
 45222 054b 00       		.byte	0
 45223 054c 00       		.byte	0
 45224 054d 52       		.uleb128 0x52
 45225 054e 2E       		.uleb128 0x2e
 45226 054f 01       		.byte	0x1
 45227 0550 3F       		.uleb128 0x3f
 45228 0551 19       		.uleb128 0x19
 45229 0552 03       		.uleb128 0x3
 45230 0553 0E       		.uleb128 0xe
 45231 0554 3A       		.uleb128 0x3a
 45232 0555 0B       		.uleb128 0xb
 45233 0556 3B       		.uleb128 0x3b
 45234 0557 0B       		.uleb128 0xb
 45235 0558 49       		.uleb128 0x49
 45236 0559 13       		.uleb128 0x13
 45237 055a 3C       		.uleb128 0x3c
 45238 055b 19       		.uleb128 0x19
 45239 055c 01       		.uleb128 0x1
 45240 055d 13       		.uleb128 0x13
 45241 055e 00       		.byte	0
 45242 055f 00       		.byte	0
 45243 0560 53       		.uleb128 0x53
 45244 0561 2E       		.uleb128 0x2e
 45245 0562 01       		.byte	0x1
 45246 0563 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccJUMvuF.s 			page 1112


 45247 0564 19       		.uleb128 0x19
 45248 0565 03       		.uleb128 0x3
 45249 0566 0E       		.uleb128 0xe
 45250 0567 3A       		.uleb128 0x3a
 45251 0568 0B       		.uleb128 0xb
 45252 0569 3B       		.uleb128 0x3b
 45253 056a 0B       		.uleb128 0xb
 45254 056b 49       		.uleb128 0x49
 45255 056c 13       		.uleb128 0x13
 45256 056d 3C       		.uleb128 0x3c
 45257 056e 19       		.uleb128 0x19
 45258 056f 00       		.byte	0
 45259 0570 00       		.byte	0
 45260 0571 54       		.uleb128 0x54
 45261 0572 02       		.uleb128 0x2
 45262 0573 01       		.byte	0x1
 45263 0574 03       		.uleb128 0x3
 45264 0575 0E       		.uleb128 0xe
 45265 0576 0B       		.uleb128 0xb
 45266 0577 05       		.uleb128 0x5
 45267 0578 3A       		.uleb128 0x3a
 45268 0579 0B       		.uleb128 0xb
 45269 057a 3B       		.uleb128 0x3b
 45270 057b 05       		.uleb128 0x5
 45271 057c 01       		.uleb128 0x1
 45272 057d 13       		.uleb128 0x13
 45273 057e 00       		.byte	0
 45274 057f 00       		.byte	0
 45275 0580 55       		.uleb128 0x55
 45276 0581 0D       		.uleb128 0xd
 45277 0582 00       		.byte	0
 45278 0583 03       		.uleb128 0x3
 45279 0584 0E       		.uleb128 0xe
 45280 0585 3A       		.uleb128 0x3a
 45281 0586 0B       		.uleb128 0xb
 45282 0587 3B       		.uleb128 0x3b
 45283 0588 05       		.uleb128 0x5
 45284 0589 49       		.uleb128 0x49
 45285 058a 13       		.uleb128 0x13
 45286 058b 38       		.uleb128 0x38
 45287 058c 05       		.uleb128 0x5
 45288 058d 00       		.byte	0
 45289 058e 00       		.byte	0
 45290 058f 56       		.uleb128 0x56
 45291 0590 2E       		.uleb128 0x2e
 45292 0591 00       		.byte	0
 45293 0592 3F       		.uleb128 0x3f
 45294 0593 19       		.uleb128 0x19
 45295 0594 03       		.uleb128 0x3
 45296 0595 08       		.uleb128 0x8
 45297 0596 3A       		.uleb128 0x3a
 45298 0597 0B       		.uleb128 0xb
 45299 0598 3B       		.uleb128 0x3b
 45300 0599 05       		.uleb128 0x5
 45301 059a 6E       		.uleb128 0x6e
 45302 059b 0E       		.uleb128 0xe
 45303 059c 49       		.uleb128 0x49
GAS LISTING /tmp/ccJUMvuF.s 			page 1113


 45304 059d 13       		.uleb128 0x13
 45305 059e 32       		.uleb128 0x32
 45306 059f 0B       		.uleb128 0xb
 45307 05a0 3C       		.uleb128 0x3c
 45308 05a1 19       		.uleb128 0x19
 45309 05a2 00       		.byte	0
 45310 05a3 00       		.byte	0
 45311 05a4 57       		.uleb128 0x57
 45312 05a5 30       		.uleb128 0x30
 45313 05a6 00       		.byte	0
 45314 05a7 03       		.uleb128 0x3
 45315 05a8 08       		.uleb128 0x8
 45316 05a9 49       		.uleb128 0x49
 45317 05aa 13       		.uleb128 0x13
 45318 05ab 1C       		.uleb128 0x1c
 45319 05ac 06       		.uleb128 0x6
 45320 05ad 00       		.byte	0
 45321 05ae 00       		.byte	0
 45322 05af 58       		.uleb128 0x58
 45323 05b0 17       		.uleb128 0x17
 45324 05b1 01       		.byte	0x1
 45325 05b2 0B       		.uleb128 0xb
 45326 05b3 05       		.uleb128 0x5
 45327 05b4 3A       		.uleb128 0x3a
 45328 05b5 0B       		.uleb128 0xb
 45329 05b6 3B       		.uleb128 0x3b
 45330 05b7 05       		.uleb128 0x5
 45331 05b8 01       		.uleb128 0x1
 45332 05b9 13       		.uleb128 0x13
 45333 05ba 00       		.byte	0
 45334 05bb 00       		.byte	0
 45335 05bc 59       		.uleb128 0x59
 45336 05bd 0D       		.uleb128 0xd
 45337 05be 00       		.byte	0
 45338 05bf 03       		.uleb128 0x3
 45339 05c0 0E       		.uleb128 0xe
 45340 05c1 3A       		.uleb128 0x3a
 45341 05c2 0B       		.uleb128 0xb
 45342 05c3 3B       		.uleb128 0x3b
 45343 05c4 05       		.uleb128 0x5
 45344 05c5 49       		.uleb128 0x49
 45345 05c6 13       		.uleb128 0x13
 45346 05c7 00       		.byte	0
 45347 05c8 00       		.byte	0
 45348 05c9 5A       		.uleb128 0x5a
 45349 05ca 2E       		.uleb128 0x2e
 45350 05cb 01       		.byte	0x1
 45351 05cc 3F       		.uleb128 0x3f
 45352 05cd 19       		.uleb128 0x19
 45353 05ce 34       		.uleb128 0x34
 45354 05cf 19       		.uleb128 0x19
 45355 05d0 3C       		.uleb128 0x3c
 45356 05d1 19       		.uleb128 0x19
 45357 05d2 64       		.uleb128 0x64
 45358 05d3 13       		.uleb128 0x13
 45359 05d4 00       		.byte	0
 45360 05d5 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1114


 45361 05d6 5B       		.uleb128 0x5b
 45362 05d7 0D       		.uleb128 0xd
 45363 05d8 00       		.byte	0
 45364 05d9 49       		.uleb128 0x49
 45365 05da 13       		.uleb128 0x13
 45366 05db 38       		.uleb128 0x38
 45367 05dc 0B       		.uleb128 0xb
 45368 05dd 00       		.byte	0
 45369 05de 00       		.byte	0
 45370 05df 5C       		.uleb128 0x5c
 45371 05e0 16       		.uleb128 0x16
 45372 05e1 00       		.byte	0
 45373 05e2 03       		.uleb128 0x3
 45374 05e3 0E       		.uleb128 0xe
 45375 05e4 3A       		.uleb128 0x3a
 45376 05e5 0B       		.uleb128 0xb
 45377 05e6 3B       		.uleb128 0x3b
 45378 05e7 05       		.uleb128 0x5
 45379 05e8 49       		.uleb128 0x49
 45380 05e9 13       		.uleb128 0x13
 45381 05ea 00       		.byte	0
 45382 05eb 00       		.byte	0
 45383 05ec 5D       		.uleb128 0x5d
 45384 05ed 13       		.uleb128 0x13
 45385 05ee 01       		.byte	0x1
 45386 05ef 03       		.uleb128 0x3
 45387 05f0 0E       		.uleb128 0xe
 45388 05f1 0B       		.uleb128 0xb
 45389 05f2 0B       		.uleb128 0xb
 45390 05f3 3A       		.uleb128 0x3a
 45391 05f4 0B       		.uleb128 0xb
 45392 05f5 3B       		.uleb128 0x3b
 45393 05f6 0B       		.uleb128 0xb
 45394 05f7 32       		.uleb128 0x32
 45395 05f8 0B       		.uleb128 0xb
 45396 05f9 00       		.byte	0
 45397 05fa 00       		.byte	0
 45398 05fb 5E       		.uleb128 0x5e
 45399 05fc 2E       		.uleb128 0x2e
 45400 05fd 01       		.byte	0x1
 45401 05fe 3F       		.uleb128 0x3f
 45402 05ff 19       		.uleb128 0x19
 45403 0600 03       		.uleb128 0x3
 45404 0601 0E       		.uleb128 0xe
 45405 0602 3A       		.uleb128 0x3a
 45406 0603 0B       		.uleb128 0xb
 45407 0604 3B       		.uleb128 0x3b
 45408 0605 0B       		.uleb128 0xb
 45409 0606 6E       		.uleb128 0x6e
 45410 0607 0E       		.uleb128 0xe
 45411 0608 49       		.uleb128 0x49
 45412 0609 13       		.uleb128 0x13
 45413 060a 32       		.uleb128 0x32
 45414 060b 0B       		.uleb128 0xb
 45415 060c 3C       		.uleb128 0x3c
 45416 060d 19       		.uleb128 0x19
 45417 060e 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1115


 45418 060f 13       		.uleb128 0x13
 45419 0610 00       		.byte	0
 45420 0611 00       		.byte	0
 45421 0612 5F       		.uleb128 0x5f
 45422 0613 04       		.uleb128 0x4
 45423 0614 01       		.byte	0x1
 45424 0615 0B       		.uleb128 0xb
 45425 0616 0B       		.uleb128 0xb
 45426 0617 3A       		.uleb128 0x3a
 45427 0618 0B       		.uleb128 0xb
 45428 0619 3B       		.uleb128 0x3b
 45429 061a 05       		.uleb128 0x5
 45430 061b 01       		.uleb128 0x1
 45431 061c 13       		.uleb128 0x13
 45432 061d 00       		.byte	0
 45433 061e 00       		.byte	0
 45434 061f 60       		.uleb128 0x60
 45435 0620 2E       		.uleb128 0x2e
 45436 0621 01       		.byte	0x1
 45437 0622 3F       		.uleb128 0x3f
 45438 0623 19       		.uleb128 0x19
 45439 0624 03       		.uleb128 0x3
 45440 0625 0E       		.uleb128 0xe
 45441 0626 3A       		.uleb128 0x3a
 45442 0627 0B       		.uleb128 0xb
 45443 0628 3B       		.uleb128 0x3b
 45444 0629 0B       		.uleb128 0xb
 45445 062a 6E       		.uleb128 0x6e
 45446 062b 0E       		.uleb128 0xe
 45447 062c 3C       		.uleb128 0x3c
 45448 062d 19       		.uleb128 0x19
 45449 062e 64       		.uleb128 0x64
 45450 062f 13       		.uleb128 0x13
 45451 0630 00       		.byte	0
 45452 0631 00       		.byte	0
 45453 0632 61       		.uleb128 0x61
 45454 0633 13       		.uleb128 0x13
 45455 0634 01       		.byte	0x1
 45456 0635 03       		.uleb128 0x3
 45457 0636 0E       		.uleb128 0xe
 45458 0637 0B       		.uleb128 0xb
 45459 0638 0B       		.uleb128 0xb
 45460 0639 3A       		.uleb128 0x3a
 45461 063a 0B       		.uleb128 0xb
 45462 063b 3B       		.uleb128 0x3b
 45463 063c 05       		.uleb128 0x5
 45464 063d 32       		.uleb128 0x32
 45465 063e 0B       		.uleb128 0xb
 45466 063f 01       		.uleb128 0x1
 45467 0640 13       		.uleb128 0x13
 45468 0641 00       		.byte	0
 45469 0642 00       		.byte	0
 45470 0643 62       		.uleb128 0x62
 45471 0644 0D       		.uleb128 0xd
 45472 0645 00       		.byte	0
 45473 0646 03       		.uleb128 0x3
 45474 0647 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 1116


 45475 0648 3A       		.uleb128 0x3a
 45476 0649 0B       		.uleb128 0xb
 45477 064a 3B       		.uleb128 0x3b
 45478 064b 05       		.uleb128 0x5
 45479 064c 49       		.uleb128 0x49
 45480 064d 13       		.uleb128 0x13
 45481 064e 38       		.uleb128 0x38
 45482 064f 0B       		.uleb128 0xb
 45483 0650 32       		.uleb128 0x32
 45484 0651 0B       		.uleb128 0xb
 45485 0652 00       		.byte	0
 45486 0653 00       		.byte	0
 45487 0654 63       		.uleb128 0x63
 45488 0655 2E       		.uleb128 0x2e
 45489 0656 01       		.byte	0x1
 45490 0657 3F       		.uleb128 0x3f
 45491 0658 19       		.uleb128 0x19
 45492 0659 03       		.uleb128 0x3
 45493 065a 0E       		.uleb128 0xe
 45494 065b 3A       		.uleb128 0x3a
 45495 065c 0B       		.uleb128 0xb
 45496 065d 3B       		.uleb128 0x3b
 45497 065e 05       		.uleb128 0x5
 45498 065f 3C       		.uleb128 0x3c
 45499 0660 19       		.uleb128 0x19
 45500 0661 63       		.uleb128 0x63
 45501 0662 19       		.uleb128 0x19
 45502 0663 64       		.uleb128 0x64
 45503 0664 13       		.uleb128 0x13
 45504 0665 01       		.uleb128 0x1
 45505 0666 13       		.uleb128 0x13
 45506 0667 00       		.byte	0
 45507 0668 00       		.byte	0
 45508 0669 64       		.uleb128 0x64
 45509 066a 2E       		.uleb128 0x2e
 45510 066b 01       		.byte	0x1
 45511 066c 3F       		.uleb128 0x3f
 45512 066d 19       		.uleb128 0x19
 45513 066e 03       		.uleb128 0x3
 45514 066f 08       		.uleb128 0x8
 45515 0670 3A       		.uleb128 0x3a
 45516 0671 0B       		.uleb128 0xb
 45517 0672 3B       		.uleb128 0x3b
 45518 0673 05       		.uleb128 0x5
 45519 0674 6E       		.uleb128 0x6e
 45520 0675 0E       		.uleb128 0xe
 45521 0676 49       		.uleb128 0x49
 45522 0677 13       		.uleb128 0x13
 45523 0678 3C       		.uleb128 0x3c
 45524 0679 19       		.uleb128 0x19
 45525 067a 64       		.uleb128 0x64
 45526 067b 13       		.uleb128 0x13
 45527 067c 01       		.uleb128 0x1
 45528 067d 13       		.uleb128 0x13
 45529 067e 00       		.byte	0
 45530 067f 00       		.byte	0
 45531 0680 65       		.uleb128 0x65
GAS LISTING /tmp/ccJUMvuF.s 			page 1117


 45532 0681 2E       		.uleb128 0x2e
 45533 0682 01       		.byte	0x1
 45534 0683 3F       		.uleb128 0x3f
 45535 0684 19       		.uleb128 0x19
 45536 0685 03       		.uleb128 0x3
 45537 0686 08       		.uleb128 0x8
 45538 0687 3A       		.uleb128 0x3a
 45539 0688 0B       		.uleb128 0xb
 45540 0689 3B       		.uleb128 0x3b
 45541 068a 05       		.uleb128 0x5
 45542 068b 6E       		.uleb128 0x6e
 45543 068c 0E       		.uleb128 0xe
 45544 068d 49       		.uleb128 0x49
 45545 068e 13       		.uleb128 0x13
 45546 068f 3C       		.uleb128 0x3c
 45547 0690 19       		.uleb128 0x19
 45548 0691 64       		.uleb128 0x64
 45549 0692 13       		.uleb128 0x13
 45550 0693 00       		.byte	0
 45551 0694 00       		.byte	0
 45552 0695 66       		.uleb128 0x66
 45553 0696 2E       		.uleb128 0x2e
 45554 0697 01       		.byte	0x1
 45555 0698 3F       		.uleb128 0x3f
 45556 0699 19       		.uleb128 0x19
 45557 069a 03       		.uleb128 0x3
 45558 069b 0E       		.uleb128 0xe
 45559 069c 3A       		.uleb128 0x3a
 45560 069d 0B       		.uleb128 0xb
 45561 069e 3B       		.uleb128 0x3b
 45562 069f 05       		.uleb128 0x5
 45563 06a0 49       		.uleb128 0x49
 45564 06a1 13       		.uleb128 0x13
 45565 06a2 32       		.uleb128 0x32
 45566 06a3 0B       		.uleb128 0xb
 45567 06a4 3C       		.uleb128 0x3c
 45568 06a5 19       		.uleb128 0x19
 45569 06a6 64       		.uleb128 0x64
 45570 06a7 13       		.uleb128 0x13
 45571 06a8 01       		.uleb128 0x1
 45572 06a9 13       		.uleb128 0x13
 45573 06aa 00       		.byte	0
 45574 06ab 00       		.byte	0
 45575 06ac 67       		.uleb128 0x67
 45576 06ad 878201   		.uleb128 0x4107
 45577 06b0 01       		.byte	0x1
 45578 06b1 03       		.uleb128 0x3
 45579 06b2 0E       		.uleb128 0xe
 45580 06b3 00       		.byte	0
 45581 06b4 00       		.byte	0
 45582 06b5 68       		.uleb128 0x68
 45583 06b6 2F       		.uleb128 0x2f
 45584 06b7 00       		.byte	0
 45585 06b8 49       		.uleb128 0x49
 45586 06b9 13       		.uleb128 0x13
 45587 06ba 00       		.byte	0
 45588 06bb 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1118


 45589 06bc 69       		.uleb128 0x69
 45590 06bd 13       		.uleb128 0x13
 45591 06be 01       		.byte	0x1
 45592 06bf 03       		.uleb128 0x3
 45593 06c0 0E       		.uleb128 0xe
 45594 06c1 0B       		.uleb128 0xb
 45595 06c2 05       		.uleb128 0x5
 45596 06c3 3A       		.uleb128 0x3a
 45597 06c4 0B       		.uleb128 0xb
 45598 06c5 3B       		.uleb128 0x3b
 45599 06c6 05       		.uleb128 0x5
 45600 06c7 01       		.uleb128 0x1
 45601 06c8 13       		.uleb128 0x13
 45602 06c9 00       		.byte	0
 45603 06ca 00       		.byte	0
 45604 06cb 6A       		.uleb128 0x6a
 45605 06cc 878201   		.uleb128 0x4107
 45606 06cf 01       		.byte	0x1
 45607 06d0 03       		.uleb128 0x3
 45608 06d1 0E       		.uleb128 0xe
 45609 06d2 01       		.uleb128 0x1
 45610 06d3 13       		.uleb128 0x13
 45611 06d4 00       		.byte	0
 45612 06d5 00       		.byte	0
 45613 06d6 6B       		.uleb128 0x6b
 45614 06d7 878201   		.uleb128 0x4107
 45615 06da 00       		.byte	0
 45616 06db 03       		.uleb128 0x3
 45617 06dc 0E       		.uleb128 0xe
 45618 06dd 00       		.byte	0
 45619 06de 00       		.byte	0
 45620 06df 6C       		.uleb128 0x6c
 45621 06e0 878201   		.uleb128 0x4107
 45622 06e3 01       		.byte	0x1
 45623 06e4 03       		.uleb128 0x3
 45624 06e5 0E       		.uleb128 0xe
 45625 06e6 3A       		.uleb128 0x3a
 45626 06e7 0B       		.uleb128 0xb
 45627 06e8 3B       		.uleb128 0x3b
 45628 06e9 05       		.uleb128 0x5
 45629 06ea 01       		.uleb128 0x1
 45630 06eb 13       		.uleb128 0x13
 45631 06ec 00       		.byte	0
 45632 06ed 00       		.byte	0
 45633 06ee 6D       		.uleb128 0x6d
 45634 06ef 30       		.uleb128 0x30
 45635 06f0 00       		.byte	0
 45636 06f1 49       		.uleb128 0x49
 45637 06f2 13       		.uleb128 0x13
 45638 06f3 1C       		.uleb128 0x1c
 45639 06f4 0B       		.uleb128 0xb
 45640 06f5 00       		.byte	0
 45641 06f6 00       		.byte	0
 45642 06f7 6E       		.uleb128 0x6e
 45643 06f8 2E       		.uleb128 0x2e
 45644 06f9 01       		.byte	0x1
 45645 06fa 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccJUMvuF.s 			page 1119


 45646 06fb 19       		.uleb128 0x19
 45647 06fc 03       		.uleb128 0x3
 45648 06fd 0E       		.uleb128 0xe
 45649 06fe 3A       		.uleb128 0x3a
 45650 06ff 0B       		.uleb128 0xb
 45651 0700 3B       		.uleb128 0x3b
 45652 0701 05       		.uleb128 0x5
 45653 0702 49       		.uleb128 0x49
 45654 0703 13       		.uleb128 0x13
 45655 0704 3C       		.uleb128 0x3c
 45656 0705 19       		.uleb128 0x19
 45657 0706 64       		.uleb128 0x64
 45658 0707 13       		.uleb128 0x13
 45659 0708 01       		.uleb128 0x1
 45660 0709 13       		.uleb128 0x13
 45661 070a 00       		.byte	0
 45662 070b 00       		.byte	0
 45663 070c 6F       		.uleb128 0x6f
 45664 070d 2E       		.uleb128 0x2e
 45665 070e 01       		.byte	0x1
 45666 070f 3F       		.uleb128 0x3f
 45667 0710 19       		.uleb128 0x19
 45668 0711 03       		.uleb128 0x3
 45669 0712 0E       		.uleb128 0xe
 45670 0713 34       		.uleb128 0x34
 45671 0714 19       		.uleb128 0x19
 45672 0715 3C       		.uleb128 0x3c
 45673 0716 19       		.uleb128 0x19
 45674 0717 64       		.uleb128 0x64
 45675 0718 13       		.uleb128 0x13
 45676 0719 01       		.uleb128 0x1
 45677 071a 13       		.uleb128 0x13
 45678 071b 00       		.byte	0
 45679 071c 00       		.byte	0
 45680 071d 70       		.uleb128 0x70
 45681 071e 878201   		.uleb128 0x4107
 45682 0721 00       		.byte	0
 45683 0722 00       		.byte	0
 45684 0723 00       		.byte	0
 45685 0724 71       		.uleb128 0x71
 45686 0725 13       		.uleb128 0x13
 45687 0726 01       		.byte	0x1
 45688 0727 03       		.uleb128 0x3
 45689 0728 0E       		.uleb128 0xe
 45690 0729 0B       		.uleb128 0xb
 45691 072a 05       		.uleb128 0x5
 45692 072b 3A       		.uleb128 0x3a
 45693 072c 0B       		.uleb128 0xb
 45694 072d 3B       		.uleb128 0x3b
 45695 072e 0B       		.uleb128 0xb
 45696 072f 01       		.uleb128 0x1
 45697 0730 13       		.uleb128 0x13
 45698 0731 00       		.byte	0
 45699 0732 00       		.byte	0
 45700 0733 72       		.uleb128 0x72
 45701 0734 2E       		.uleb128 0x2e
 45702 0735 01       		.byte	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1120


 45703 0736 3F       		.uleb128 0x3f
 45704 0737 19       		.uleb128 0x19
 45705 0738 03       		.uleb128 0x3
 45706 0739 0E       		.uleb128 0xe
 45707 073a 3A       		.uleb128 0x3a
 45708 073b 0B       		.uleb128 0xb
 45709 073c 3B       		.uleb128 0x3b
 45710 073d 0B       		.uleb128 0xb
 45711 073e 32       		.uleb128 0x32
 45712 073f 0B       		.uleb128 0xb
 45713 0740 3C       		.uleb128 0x3c
 45714 0741 19       		.uleb128 0x19
 45715 0742 63       		.uleb128 0x63
 45716 0743 19       		.uleb128 0x19
 45717 0744 64       		.uleb128 0x64
 45718 0745 13       		.uleb128 0x13
 45719 0746 01       		.uleb128 0x1
 45720 0747 13       		.uleb128 0x13
 45721 0748 00       		.byte	0
 45722 0749 00       		.byte	0
 45723 074a 73       		.uleb128 0x73
 45724 074b 2E       		.uleb128 0x2e
 45725 074c 01       		.byte	0x1
 45726 074d 3F       		.uleb128 0x3f
 45727 074e 19       		.uleb128 0x19
 45728 074f 03       		.uleb128 0x3
 45729 0750 0E       		.uleb128 0xe
 45730 0751 3A       		.uleb128 0x3a
 45731 0752 0B       		.uleb128 0xb
 45732 0753 3B       		.uleb128 0x3b
 45733 0754 05       		.uleb128 0x5
 45734 0755 6E       		.uleb128 0x6e
 45735 0756 0E       		.uleb128 0xe
 45736 0757 49       		.uleb128 0x49
 45737 0758 13       		.uleb128 0x13
 45738 0759 32       		.uleb128 0x32
 45739 075a 0B       		.uleb128 0xb
 45740 075b 3C       		.uleb128 0x3c
 45741 075c 19       		.uleb128 0x19
 45742 075d 63       		.uleb128 0x63
 45743 075e 19       		.uleb128 0x19
 45744 075f 64       		.uleb128 0x64
 45745 0760 13       		.uleb128 0x13
 45746 0761 01       		.uleb128 0x1
 45747 0762 13       		.uleb128 0x13
 45748 0763 00       		.byte	0
 45749 0764 00       		.byte	0
 45750 0765 74       		.uleb128 0x74
 45751 0766 2F       		.uleb128 0x2f
 45752 0767 00       		.byte	0
 45753 0768 03       		.uleb128 0x3
 45754 0769 08       		.uleb128 0x8
 45755 076a 49       		.uleb128 0x49
 45756 076b 13       		.uleb128 0x13
 45757 076c 1E       		.uleb128 0x1e
 45758 076d 19       		.uleb128 0x19
 45759 076e 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1121


 45760 076f 00       		.byte	0
 45761 0770 75       		.uleb128 0x75
 45762 0771 2E       		.uleb128 0x2e
 45763 0772 01       		.byte	0x1
 45764 0773 3F       		.uleb128 0x3f
 45765 0774 19       		.uleb128 0x19
 45766 0775 03       		.uleb128 0x3
 45767 0776 0E       		.uleb128 0xe
 45768 0777 3A       		.uleb128 0x3a
 45769 0778 0B       		.uleb128 0xb
 45770 0779 3B       		.uleb128 0x3b
 45771 077a 05       		.uleb128 0x5
 45772 077b 49       		.uleb128 0x49
 45773 077c 13       		.uleb128 0x13
 45774 077d 3C       		.uleb128 0x3c
 45775 077e 19       		.uleb128 0x19
 45776 077f 00       		.byte	0
 45777 0780 00       		.byte	0
 45778 0781 76       		.uleb128 0x76
 45779 0782 2E       		.uleb128 0x2e
 45780 0783 01       		.byte	0x1
 45781 0784 3F       		.uleb128 0x3f
 45782 0785 19       		.uleb128 0x19
 45783 0786 03       		.uleb128 0x3
 45784 0787 0E       		.uleb128 0xe
 45785 0788 3A       		.uleb128 0x3a
 45786 0789 0B       		.uleb128 0xb
 45787 078a 3B       		.uleb128 0x3b
 45788 078b 05       		.uleb128 0x5
 45789 078c 49       		.uleb128 0x49
 45790 078d 13       		.uleb128 0x13
 45791 078e 3C       		.uleb128 0x3c
 45792 078f 19       		.uleb128 0x19
 45793 0790 01       		.uleb128 0x1
 45794 0791 13       		.uleb128 0x13
 45795 0792 00       		.byte	0
 45796 0793 00       		.byte	0
 45797 0794 77       		.uleb128 0x77
 45798 0795 35       		.uleb128 0x35
 45799 0796 00       		.byte	0
 45800 0797 49       		.uleb128 0x49
 45801 0798 13       		.uleb128 0x13
 45802 0799 00       		.byte	0
 45803 079a 00       		.byte	0
 45804 079b 78       		.uleb128 0x78
 45805 079c 34       		.uleb128 0x34
 45806 079d 00       		.byte	0
 45807 079e 03       		.uleb128 0x3
 45808 079f 0E       		.uleb128 0xe
 45809 07a0 3A       		.uleb128 0x3a
 45810 07a1 0B       		.uleb128 0xb
 45811 07a2 3B       		.uleb128 0x3b
 45812 07a3 0B       		.uleb128 0xb
 45813 07a4 6E       		.uleb128 0x6e
 45814 07a5 0E       		.uleb128 0xe
 45815 07a6 49       		.uleb128 0x49
 45816 07a7 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1122


 45817 07a8 3F       		.uleb128 0x3f
 45818 07a9 19       		.uleb128 0x19
 45819 07aa 3C       		.uleb128 0x3c
 45820 07ab 19       		.uleb128 0x19
 45821 07ac 00       		.byte	0
 45822 07ad 00       		.byte	0
 45823 07ae 79       		.uleb128 0x79
 45824 07af 34       		.uleb128 0x34
 45825 07b0 00       		.byte	0
 45826 07b1 03       		.uleb128 0x3
 45827 07b2 0E       		.uleb128 0xe
 45828 07b3 3A       		.uleb128 0x3a
 45829 07b4 0B       		.uleb128 0xb
 45830 07b5 3B       		.uleb128 0x3b
 45831 07b6 0B       		.uleb128 0xb
 45832 07b7 49       		.uleb128 0x49
 45833 07b8 13       		.uleb128 0x13
 45834 07b9 3C       		.uleb128 0x3c
 45835 07ba 19       		.uleb128 0x19
 45836 07bb 1C       		.uleb128 0x1c
 45837 07bc 0A       		.uleb128 0xa
 45838 07bd 00       		.byte	0
 45839 07be 00       		.byte	0
 45840 07bf 7A       		.uleb128 0x7a
 45841 07c0 34       		.uleb128 0x34
 45842 07c1 00       		.byte	0
 45843 07c2 03       		.uleb128 0x3
 45844 07c3 0E       		.uleb128 0xe
 45845 07c4 3A       		.uleb128 0x3a
 45846 07c5 0B       		.uleb128 0xb
 45847 07c6 3B       		.uleb128 0x3b
 45848 07c7 05       		.uleb128 0x5
 45849 07c8 49       		.uleb128 0x49
 45850 07c9 13       		.uleb128 0x13
 45851 07ca 3C       		.uleb128 0x3c
 45852 07cb 19       		.uleb128 0x19
 45853 07cc 1C       		.uleb128 0x1c
 45854 07cd 0A       		.uleb128 0xa
 45855 07ce 00       		.byte	0
 45856 07cf 00       		.byte	0
 45857 07d0 7B       		.uleb128 0x7b
 45858 07d1 34       		.uleb128 0x34
 45859 07d2 00       		.byte	0
 45860 07d3 03       		.uleb128 0x3
 45861 07d4 0E       		.uleb128 0xe
 45862 07d5 3A       		.uleb128 0x3a
 45863 07d6 0B       		.uleb128 0xb
 45864 07d7 3B       		.uleb128 0x3b
 45865 07d8 0B       		.uleb128 0xb
 45866 07d9 49       		.uleb128 0x49
 45867 07da 13       		.uleb128 0x13
 45868 07db 3C       		.uleb128 0x3c
 45869 07dc 19       		.uleb128 0x19
 45870 07dd 00       		.byte	0
 45871 07de 00       		.byte	0
 45872 07df 7C       		.uleb128 0x7c
 45873 07e0 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccJUMvuF.s 			page 1123


 45874 07e1 00       		.byte	0
 45875 07e2 3F       		.uleb128 0x3f
 45876 07e3 19       		.uleb128 0x19
 45877 07e4 03       		.uleb128 0x3
 45878 07e5 0E       		.uleb128 0xe
 45879 07e6 3A       		.uleb128 0x3a
 45880 07e7 0B       		.uleb128 0xb
 45881 07e8 3B       		.uleb128 0x3b
 45882 07e9 0B       		.uleb128 0xb
 45883 07ea 6E       		.uleb128 0x6e
 45884 07eb 0E       		.uleb128 0xe
 45885 07ec 3C       		.uleb128 0x3c
 45886 07ed 19       		.uleb128 0x19
 45887 07ee 00       		.byte	0
 45888 07ef 00       		.byte	0
 45889 07f0 7D       		.uleb128 0x7d
 45890 07f1 0F       		.uleb128 0xf
 45891 07f2 00       		.byte	0
 45892 07f3 0B       		.uleb128 0xb
 45893 07f4 0B       		.uleb128 0xb
 45894 07f5 00       		.byte	0
 45895 07f6 00       		.byte	0
 45896 07f7 7E       		.uleb128 0x7e
 45897 07f8 0F       		.uleb128 0xf
 45898 07f9 00       		.byte	0
 45899 07fa 0B       		.uleb128 0xb
 45900 07fb 0B       		.uleb128 0xb
 45901 07fc 49       		.uleb128 0x49
 45902 07fd 13       		.uleb128 0x13
 45903 07fe 00       		.byte	0
 45904 07ff 00       		.byte	0
 45905 0800 7F       		.uleb128 0x7f
 45906 0801 10       		.uleb128 0x10
 45907 0802 00       		.byte	0
 45908 0803 0B       		.uleb128 0xb
 45909 0804 0B       		.uleb128 0xb
 45910 0805 49       		.uleb128 0x49
 45911 0806 13       		.uleb128 0x13
 45912 0807 00       		.byte	0
 45913 0808 00       		.byte	0
 45914 0809 8001     		.uleb128 0x80
 45915 080b 3B       		.uleb128 0x3b
 45916 080c 00       		.byte	0
 45917 080d 03       		.uleb128 0x3
 45918 080e 0E       		.uleb128 0xe
 45919 080f 00       		.byte	0
 45920 0810 00       		.byte	0
 45921 0811 8101     		.uleb128 0x81
 45922 0813 42       		.uleb128 0x42
 45923 0814 00       		.byte	0
 45924 0815 0B       		.uleb128 0xb
 45925 0816 0B       		.uleb128 0xb
 45926 0817 49       		.uleb128 0x49
 45927 0818 13       		.uleb128 0x13
 45928 0819 00       		.byte	0
 45929 081a 00       		.byte	0
 45930 081b 8201     		.uleb128 0x82
GAS LISTING /tmp/ccJUMvuF.s 			page 1124


 45931 081d 24       		.uleb128 0x24
 45932 081e 00       		.byte	0
 45933 081f 0B       		.uleb128 0xb
 45934 0820 0B       		.uleb128 0xb
 45935 0821 3E       		.uleb128 0x3e
 45936 0822 0B       		.uleb128 0xb
 45937 0823 03       		.uleb128 0x3
 45938 0824 08       		.uleb128 0x8
 45939 0825 00       		.byte	0
 45940 0826 00       		.byte	0
 45941 0827 8301     		.uleb128 0x83
 45942 0829 2E       		.uleb128 0x2e
 45943 082a 01       		.byte	0x1
 45944 082b 3F       		.uleb128 0x3f
 45945 082c 19       		.uleb128 0x19
 45946 082d 03       		.uleb128 0x3
 45947 082e 0E       		.uleb128 0xe
 45948 082f 3A       		.uleb128 0x3a
 45949 0830 0B       		.uleb128 0xb
 45950 0831 3B       		.uleb128 0x3b
 45951 0832 0B       		.uleb128 0xb
 45952 0833 49       		.uleb128 0x49
 45953 0834 13       		.uleb128 0x13
 45954 0835 3C       		.uleb128 0x3c
 45955 0836 19       		.uleb128 0x19
 45956 0837 64       		.uleb128 0x64
 45957 0838 13       		.uleb128 0x13
 45958 0839 00       		.byte	0
 45959 083a 00       		.byte	0
 45960 083b 8401     		.uleb128 0x84
 45961 083d 2E       		.uleb128 0x2e
 45962 083e 00       		.byte	0
 45963 083f 3F       		.uleb128 0x3f
 45964 0840 19       		.uleb128 0x19
 45965 0841 03       		.uleb128 0x3
 45966 0842 0E       		.uleb128 0xe
 45967 0843 3A       		.uleb128 0x3a
 45968 0844 0B       		.uleb128 0xb
 45969 0845 3B       		.uleb128 0x3b
 45970 0846 0B       		.uleb128 0xb
 45971 0847 49       		.uleb128 0x49
 45972 0848 13       		.uleb128 0x13
 45973 0849 3C       		.uleb128 0x3c
 45974 084a 19       		.uleb128 0x19
 45975 084b 00       		.byte	0
 45976 084c 00       		.byte	0
 45977 084d 8501     		.uleb128 0x85
 45978 084f 34       		.uleb128 0x34
 45979 0850 00       		.byte	0
 45980 0851 03       		.uleb128 0x3
 45981 0852 0E       		.uleb128 0xe
 45982 0853 3A       		.uleb128 0x3a
 45983 0854 0B       		.uleb128 0xb
 45984 0855 3B       		.uleb128 0x3b
 45985 0856 0B       		.uleb128 0xb
 45986 0857 49       		.uleb128 0x49
 45987 0858 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1125


 45988 0859 3C       		.uleb128 0x3c
 45989 085a 19       		.uleb128 0x19
 45990 085b 1C       		.uleb128 0x1c
 45991 085c 0B       		.uleb128 0xb
 45992 085d 00       		.byte	0
 45993 085e 00       		.byte	0
 45994 085f 8601     		.uleb128 0x86
 45995 0861 2E       		.uleb128 0x2e
 45996 0862 01       		.byte	0x1
 45997 0863 03       		.uleb128 0x3
 45998 0864 0E       		.uleb128 0xe
 45999 0865 3A       		.uleb128 0x3a
 46000 0866 0B       		.uleb128 0xb
 46001 0867 3B       		.uleb128 0x3b
 46002 0868 0B       		.uleb128 0xb
 46003 0869 49       		.uleb128 0x49
 46004 086a 13       		.uleb128 0x13
 46005 086b 3C       		.uleb128 0x3c
 46006 086c 19       		.uleb128 0x19
 46007 086d 01       		.uleb128 0x1
 46008 086e 13       		.uleb128 0x13
 46009 086f 00       		.byte	0
 46010 0870 00       		.byte	0
 46011 0871 8701     		.uleb128 0x87
 46012 0873 3A       		.uleb128 0x3a
 46013 0874 00       		.byte	0
 46014 0875 3A       		.uleb128 0x3a
 46015 0876 0B       		.uleb128 0xb
 46016 0877 3B       		.uleb128 0x3b
 46017 0878 0B       		.uleb128 0xb
 46018 0879 18       		.uleb128 0x18
 46019 087a 13       		.uleb128 0x13
 46020 087b 00       		.byte	0
 46021 087c 00       		.byte	0
 46022 087d 8801     		.uleb128 0x88
 46023 087f 13       		.uleb128 0x13
 46024 0880 01       		.byte	0x1
 46025 0881 0B       		.uleb128 0xb
 46026 0882 0B       		.uleb128 0xb
 46027 0883 3A       		.uleb128 0x3a
 46028 0884 0B       		.uleb128 0xb
 46029 0885 3B       		.uleb128 0x3b
 46030 0886 0B       		.uleb128 0xb
 46031 0887 6E       		.uleb128 0x6e
 46032 0888 0E       		.uleb128 0xe
 46033 0889 01       		.uleb128 0x1
 46034 088a 13       		.uleb128 0x13
 46035 088b 00       		.byte	0
 46036 088c 00       		.byte	0
 46037 088d 8901     		.uleb128 0x89
 46038 088f 17       		.uleb128 0x17
 46039 0890 01       		.byte	0x1
 46040 0891 0B       		.uleb128 0xb
 46041 0892 0B       		.uleb128 0xb
 46042 0893 3A       		.uleb128 0x3a
 46043 0894 0B       		.uleb128 0xb
 46044 0895 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccJUMvuF.s 			page 1126


 46045 0896 0B       		.uleb128 0xb
 46046 0897 01       		.uleb128 0x1
 46047 0898 13       		.uleb128 0x13
 46048 0899 00       		.byte	0
 46049 089a 00       		.byte	0
 46050 089b 8A01     		.uleb128 0x8a
 46051 089d 0D       		.uleb128 0xd
 46052 089e 00       		.byte	0
 46053 089f 03       		.uleb128 0x3
 46054 08a0 0E       		.uleb128 0xe
 46055 08a1 3A       		.uleb128 0x3a
 46056 08a2 0B       		.uleb128 0xb
 46057 08a3 3B       		.uleb128 0x3b
 46058 08a4 0B       		.uleb128 0xb
 46059 08a5 49       		.uleb128 0x49
 46060 08a6 13       		.uleb128 0x13
 46061 08a7 00       		.byte	0
 46062 08a8 00       		.byte	0
 46063 08a9 8B01     		.uleb128 0x8b
 46064 08ab 01       		.uleb128 0x1
 46065 08ac 01       		.byte	0x1
 46066 08ad 49       		.uleb128 0x49
 46067 08ae 13       		.uleb128 0x13
 46068 08af 01       		.uleb128 0x1
 46069 08b0 13       		.uleb128 0x13
 46070 08b1 00       		.byte	0
 46071 08b2 00       		.byte	0
 46072 08b3 8C01     		.uleb128 0x8c
 46073 08b5 21       		.uleb128 0x21
 46074 08b6 00       		.byte	0
 46075 08b7 49       		.uleb128 0x49
 46076 08b8 13       		.uleb128 0x13
 46077 08b9 2F       		.uleb128 0x2f
 46078 08ba 0B       		.uleb128 0xb
 46079 08bb 00       		.byte	0
 46080 08bc 00       		.byte	0
 46081 08bd 8D01     		.uleb128 0x8d
 46082 08bf 2E       		.uleb128 0x2e
 46083 08c0 00       		.byte	0
 46084 08c1 3F       		.uleb128 0x3f
 46085 08c2 19       		.uleb128 0x19
 46086 08c3 03       		.uleb128 0x3
 46087 08c4 0E       		.uleb128 0xe
 46088 08c5 3A       		.uleb128 0x3a
 46089 08c6 0B       		.uleb128 0xb
 46090 08c7 3B       		.uleb128 0x3b
 46091 08c8 05       		.uleb128 0x5
 46092 08c9 49       		.uleb128 0x49
 46093 08ca 13       		.uleb128 0x13
 46094 08cb 3C       		.uleb128 0x3c
 46095 08cc 19       		.uleb128 0x19
 46096 08cd 00       		.byte	0
 46097 08ce 00       		.byte	0
 46098 08cf 8E01     		.uleb128 0x8e
 46099 08d1 13       		.uleb128 0x13
 46100 08d2 01       		.byte	0x1
 46101 08d3 03       		.uleb128 0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1127


 46102 08d4 08       		.uleb128 0x8
 46103 08d5 0B       		.uleb128 0xb
 46104 08d6 0B       		.uleb128 0xb
 46105 08d7 3A       		.uleb128 0x3a
 46106 08d8 0B       		.uleb128 0xb
 46107 08d9 3B       		.uleb128 0x3b
 46108 08da 0B       		.uleb128 0xb
 46109 08db 01       		.uleb128 0x1
 46110 08dc 13       		.uleb128 0x13
 46111 08dd 00       		.byte	0
 46112 08de 00       		.byte	0
 46113 08df 8F01     		.uleb128 0x8f
 46114 08e1 26       		.uleb128 0x26
 46115 08e2 00       		.byte	0
 46116 08e3 00       		.byte	0
 46117 08e4 00       		.byte	0
 46118 08e5 9001     		.uleb128 0x90
 46119 08e7 15       		.uleb128 0x15
 46120 08e8 01       		.byte	0x1
 46121 08e9 01       		.uleb128 0x1
 46122 08ea 13       		.uleb128 0x13
 46123 08eb 00       		.byte	0
 46124 08ec 00       		.byte	0
 46125 08ed 9101     		.uleb128 0x91
 46126 08ef 0D       		.uleb128 0xd
 46127 08f0 00       		.byte	0
 46128 08f1 03       		.uleb128 0x3
 46129 08f2 08       		.uleb128 0x8
 46130 08f3 3A       		.uleb128 0x3a
 46131 08f4 0B       		.uleb128 0xb
 46132 08f5 3B       		.uleb128 0x3b
 46133 08f6 0B       		.uleb128 0xb
 46134 08f7 49       		.uleb128 0x49
 46135 08f8 13       		.uleb128 0x13
 46136 08f9 38       		.uleb128 0x38
 46137 08fa 0B       		.uleb128 0xb
 46138 08fb 00       		.byte	0
 46139 08fc 00       		.byte	0
 46140 08fd 9201     		.uleb128 0x92
 46141 08ff 15       		.uleb128 0x15
 46142 0900 01       		.byte	0x1
 46143 0901 49       		.uleb128 0x49
 46144 0902 13       		.uleb128 0x13
 46145 0903 01       		.uleb128 0x1
 46146 0904 13       		.uleb128 0x13
 46147 0905 00       		.byte	0
 46148 0906 00       		.byte	0
 46149 0907 9301     		.uleb128 0x93
 46150 0909 15       		.uleb128 0x15
 46151 090a 00       		.byte	0
 46152 090b 00       		.byte	0
 46153 090c 00       		.byte	0
 46154 090d 9401     		.uleb128 0x94
 46155 090f 2E       		.uleb128 0x2e
 46156 0910 01       		.byte	0x1
 46157 0911 3F       		.uleb128 0x3f
 46158 0912 19       		.uleb128 0x19
GAS LISTING /tmp/ccJUMvuF.s 			page 1128


 46159 0913 03       		.uleb128 0x3
 46160 0914 08       		.uleb128 0x8
 46161 0915 3A       		.uleb128 0x3a
 46162 0916 0B       		.uleb128 0xb
 46163 0917 3B       		.uleb128 0x3b
 46164 0918 05       		.uleb128 0x5
 46165 0919 49       		.uleb128 0x49
 46166 091a 13       		.uleb128 0x13
 46167 091b 3C       		.uleb128 0x3c
 46168 091c 19       		.uleb128 0x19
 46169 091d 01       		.uleb128 0x1
 46170 091e 13       		.uleb128 0x13
 46171 091f 00       		.byte	0
 46172 0920 00       		.byte	0
 46173 0921 9501     		.uleb128 0x95
 46174 0923 16       		.uleb128 0x16
 46175 0924 00       		.byte	0
 46176 0925 03       		.uleb128 0x3
 46177 0926 0E       		.uleb128 0xe
 46178 0927 3A       		.uleb128 0x3a
 46179 0928 0B       		.uleb128 0xb
 46180 0929 3B       		.uleb128 0x3b
 46181 092a 0B       		.uleb128 0xb
 46182 092b 00       		.byte	0
 46183 092c 00       		.byte	0
 46184 092d 9601     		.uleb128 0x96
 46185 092f 21       		.uleb128 0x21
 46186 0930 00       		.byte	0
 46187 0931 00       		.byte	0
 46188 0932 00       		.byte	0
 46189 0933 9701     		.uleb128 0x97
 46190 0935 21       		.uleb128 0x21
 46191 0936 00       		.byte	0
 46192 0937 49       		.uleb128 0x49
 46193 0938 13       		.uleb128 0x13
 46194 0939 2F       		.uleb128 0x2f
 46195 093a 05       		.uleb128 0x5
 46196 093b 00       		.byte	0
 46197 093c 00       		.byte	0
 46198 093d 9801     		.uleb128 0x98
 46199 093f 2E       		.uleb128 0x2e
 46200 0940 01       		.byte	0x1
 46201 0941 47       		.uleb128 0x47
 46202 0942 13       		.uleb128 0x13
 46203 0943 20       		.uleb128 0x20
 46204 0944 0B       		.uleb128 0xb
 46205 0945 64       		.uleb128 0x64
 46206 0946 13       		.uleb128 0x13
 46207 0947 01       		.uleb128 0x1
 46208 0948 13       		.uleb128 0x13
 46209 0949 00       		.byte	0
 46210 094a 00       		.byte	0
 46211 094b 9901     		.uleb128 0x99
 46212 094d 05       		.uleb128 0x5
 46213 094e 00       		.byte	0
 46214 094f 03       		.uleb128 0x3
 46215 0950 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 1129


 46216 0951 49       		.uleb128 0x49
 46217 0952 13       		.uleb128 0x13
 46218 0953 34       		.uleb128 0x34
 46219 0954 19       		.uleb128 0x19
 46220 0955 00       		.byte	0
 46221 0956 00       		.byte	0
 46222 0957 9A01     		.uleb128 0x9a
 46223 0959 2E       		.uleb128 0x2e
 46224 095a 01       		.byte	0x1
 46225 095b 03       		.uleb128 0x3
 46226 095c 0E       		.uleb128 0xe
 46227 095d 3A       		.uleb128 0x3a
 46228 095e 0B       		.uleb128 0xb
 46229 095f 3B       		.uleb128 0x3b
 46230 0960 0B       		.uleb128 0xb
 46231 0961 49       		.uleb128 0x49
 46232 0962 13       		.uleb128 0x13
 46233 0963 20       		.uleb128 0x20
 46234 0964 0B       		.uleb128 0xb
 46235 0965 01       		.uleb128 0x1
 46236 0966 13       		.uleb128 0x13
 46237 0967 00       		.byte	0
 46238 0968 00       		.byte	0
 46239 0969 9B01     		.uleb128 0x9b
 46240 096b 0B       		.uleb128 0xb
 46241 096c 01       		.byte	0x1
 46242 096d 00       		.byte	0
 46243 096e 00       		.byte	0
 46244 096f 9C01     		.uleb128 0x9c
 46245 0971 34       		.uleb128 0x34
 46246 0972 00       		.byte	0
 46247 0973 03       		.uleb128 0x3
 46248 0974 0E       		.uleb128 0xe
 46249 0975 3A       		.uleb128 0x3a
 46250 0976 0B       		.uleb128 0xb
 46251 0977 3B       		.uleb128 0x3b
 46252 0978 0B       		.uleb128 0xb
 46253 0979 49       		.uleb128 0x49
 46254 097a 13       		.uleb128 0x13
 46255 097b 00       		.byte	0
 46256 097c 00       		.byte	0
 46257 097d 9D01     		.uleb128 0x9d
 46258 097f 2E       		.uleb128 0x2e
 46259 0980 01       		.byte	0x1
 46260 0981 47       		.uleb128 0x47
 46261 0982 13       		.uleb128 0x13
 46262 0983 20       		.uleb128 0x20
 46263 0984 0B       		.uleb128 0xb
 46264 0985 01       		.uleb128 0x1
 46265 0986 13       		.uleb128 0x13
 46266 0987 00       		.byte	0
 46267 0988 00       		.byte	0
 46268 0989 9E01     		.uleb128 0x9e
 46269 098b 05       		.uleb128 0x5
 46270 098c 00       		.byte	0
 46271 098d 03       		.uleb128 0x3
 46272 098e 0E       		.uleb128 0xe
GAS LISTING /tmp/ccJUMvuF.s 			page 1130


 46273 098f 3A       		.uleb128 0x3a
 46274 0990 0B       		.uleb128 0xb
 46275 0991 3B       		.uleb128 0x3b
 46276 0992 0B       		.uleb128 0xb
 46277 0993 49       		.uleb128 0x49
 46278 0994 13       		.uleb128 0x13
 46279 0995 00       		.byte	0
 46280 0996 00       		.byte	0
 46281 0997 9F01     		.uleb128 0x9f
 46282 0999 34       		.uleb128 0x34
 46283 099a 00       		.byte	0
 46284 099b 03       		.uleb128 0x3
 46285 099c 08       		.uleb128 0x8
 46286 099d 3A       		.uleb128 0x3a
 46287 099e 0B       		.uleb128 0xb
 46288 099f 3B       		.uleb128 0x3b
 46289 09a0 0B       		.uleb128 0xb
 46290 09a1 49       		.uleb128 0x49
 46291 09a2 13       		.uleb128 0x13
 46292 09a3 00       		.byte	0
 46293 09a4 00       		.byte	0
 46294 09a5 A001     		.uleb128 0xa0
 46295 09a7 05       		.uleb128 0x5
 46296 09a8 00       		.byte	0
 46297 09a9 03       		.uleb128 0x3
 46298 09aa 08       		.uleb128 0x8
 46299 09ab 3A       		.uleb128 0x3a
 46300 09ac 0B       		.uleb128 0xb
 46301 09ad 3B       		.uleb128 0x3b
 46302 09ae 0B       		.uleb128 0xb
 46303 09af 49       		.uleb128 0x49
 46304 09b0 13       		.uleb128 0x13
 46305 09b1 00       		.byte	0
 46306 09b2 00       		.byte	0
 46307 09b3 A101     		.uleb128 0xa1
 46308 09b5 05       		.uleb128 0x5
 46309 09b6 00       		.byte	0
 46310 09b7 03       		.uleb128 0x3
 46311 09b8 08       		.uleb128 0x8
 46312 09b9 3A       		.uleb128 0x3a
 46313 09ba 0B       		.uleb128 0xb
 46314 09bb 3B       		.uleb128 0x3b
 46315 09bc 05       		.uleb128 0x5
 46316 09bd 49       		.uleb128 0x49
 46317 09be 13       		.uleb128 0x13
 46318 09bf 00       		.byte	0
 46319 09c0 00       		.byte	0
 46320 09c1 A201     		.uleb128 0xa2
 46321 09c3 05       		.uleb128 0x5
 46322 09c4 00       		.byte	0
 46323 09c5 03       		.uleb128 0x3
 46324 09c6 0E       		.uleb128 0xe
 46325 09c7 3A       		.uleb128 0x3a
 46326 09c8 0B       		.uleb128 0xb
 46327 09c9 3B       		.uleb128 0x3b
 46328 09ca 05       		.uleb128 0x5
 46329 09cb 49       		.uleb128 0x49
GAS LISTING /tmp/ccJUMvuF.s 			page 1131


 46330 09cc 13       		.uleb128 0x13
 46331 09cd 00       		.byte	0
 46332 09ce 00       		.byte	0
 46333 09cf A301     		.uleb128 0xa3
 46334 09d1 34       		.uleb128 0x34
 46335 09d2 00       		.byte	0
 46336 09d3 03       		.uleb128 0x3
 46337 09d4 0E       		.uleb128 0xe
 46338 09d5 3A       		.uleb128 0x3a
 46339 09d6 0B       		.uleb128 0xb
 46340 09d7 3B       		.uleb128 0x3b
 46341 09d8 05       		.uleb128 0x5
 46342 09d9 49       		.uleb128 0x49
 46343 09da 13       		.uleb128 0x13
 46344 09db 00       		.byte	0
 46345 09dc 00       		.byte	0
 46346 09dd A401     		.uleb128 0xa4
 46347 09df 2E       		.uleb128 0x2e
 46348 09e0 01       		.byte	0x1
 46349 09e1 47       		.uleb128 0x47
 46350 09e2 13       		.uleb128 0x13
 46351 09e3 3A       		.uleb128 0x3a
 46352 09e4 0B       		.uleb128 0xb
 46353 09e5 3B       		.uleb128 0x3b
 46354 09e6 0B       		.uleb128 0xb
 46355 09e7 20       		.uleb128 0x20
 46356 09e8 0B       		.uleb128 0xb
 46357 09e9 64       		.uleb128 0x64
 46358 09ea 13       		.uleb128 0x13
 46359 09eb 01       		.uleb128 0x1
 46360 09ec 13       		.uleb128 0x13
 46361 09ed 00       		.byte	0
 46362 09ee 00       		.byte	0
 46363 09ef A501     		.uleb128 0xa5
 46364 09f1 888201   		.uleb128 0x4108
 46365 09f4 00       		.byte	0
 46366 09f5 3A       		.uleb128 0x3a
 46367 09f6 0B       		.uleb128 0xb
 46368 09f7 3B       		.uleb128 0x3b
 46369 09f8 05       		.uleb128 0x5
 46370 09f9 00       		.byte	0
 46371 09fa 00       		.byte	0
 46372 09fb A601     		.uleb128 0xa6
 46373 09fd 888201   		.uleb128 0x4108
 46374 0a00 01       		.byte	0x1
 46375 0a01 3A       		.uleb128 0x3a
 46376 0a02 0B       		.uleb128 0xb
 46377 0a03 3B       		.uleb128 0x3b
 46378 0a04 05       		.uleb128 0x5
 46379 0a05 00       		.byte	0
 46380 0a06 00       		.byte	0
 46381 0a07 A701     		.uleb128 0xa7
 46382 0a09 2E       		.uleb128 0x2e
 46383 0a0a 01       		.byte	0x1
 46384 0a0b 47       		.uleb128 0x47
 46385 0a0c 13       		.uleb128 0x13
 46386 0a0d 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 1132


 46387 0a0e 0B       		.uleb128 0xb
 46388 0a0f 3B       		.uleb128 0x3b
 46389 0a10 05       		.uleb128 0x5
 46390 0a11 20       		.uleb128 0x20
 46391 0a12 0B       		.uleb128 0xb
 46392 0a13 64       		.uleb128 0x64
 46393 0a14 13       		.uleb128 0x13
 46394 0a15 01       		.uleb128 0x1
 46395 0a16 13       		.uleb128 0x13
 46396 0a17 00       		.byte	0
 46397 0a18 00       		.byte	0
 46398 0a19 A801     		.uleb128 0xa8
 46399 0a1b 34       		.uleb128 0x34
 46400 0a1c 00       		.byte	0
 46401 0a1d 03       		.uleb128 0x3
 46402 0a1e 08       		.uleb128 0x8
 46403 0a1f 3A       		.uleb128 0x3a
 46404 0a20 0B       		.uleb128 0xb
 46405 0a21 3B       		.uleb128 0x3b
 46406 0a22 05       		.uleb128 0x5
 46407 0a23 49       		.uleb128 0x49
 46408 0a24 13       		.uleb128 0x13
 46409 0a25 00       		.byte	0
 46410 0a26 00       		.byte	0
 46411 0a27 A901     		.uleb128 0xa9
 46412 0a29 0B       		.uleb128 0xb
 46413 0a2a 00       		.byte	0
 46414 0a2b 00       		.byte	0
 46415 0a2c 00       		.byte	0
 46416 0a2d AA01     		.uleb128 0xaa
 46417 0a2f 888201   		.uleb128 0x4108
 46418 0a32 01       		.byte	0x1
 46419 0a33 3A       		.uleb128 0x3a
 46420 0a34 0B       		.uleb128 0xb
 46421 0a35 3B       		.uleb128 0x3b
 46422 0a36 05       		.uleb128 0x5
 46423 0a37 01       		.uleb128 0x1
 46424 0a38 13       		.uleb128 0x13
 46425 0a39 00       		.byte	0
 46426 0a3a 00       		.byte	0
 46427 0a3b AB01     		.uleb128 0xab
 46428 0a3d 2E       		.uleb128 0x2e
 46429 0a3e 00       		.byte	0
 46430 0a3f 47       		.uleb128 0x47
 46431 0a40 13       		.uleb128 0x13
 46432 0a41 20       		.uleb128 0x20
 46433 0a42 0B       		.uleb128 0xb
 46434 0a43 00       		.byte	0
 46435 0a44 00       		.byte	0
 46436 0a45 AC01     		.uleb128 0xac
 46437 0a47 2E       		.uleb128 0x2e
 46438 0a48 01       		.byte	0x1
 46439 0a49 3F       		.uleb128 0x3f
 46440 0a4a 19       		.uleb128 0x19
 46441 0a4b 03       		.uleb128 0x3
 46442 0a4c 0E       		.uleb128 0xe
 46443 0a4d 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 1133


 46444 0a4e 0B       		.uleb128 0xb
 46445 0a4f 3B       		.uleb128 0x3b
 46446 0a50 0B       		.uleb128 0xb
 46447 0a51 49       		.uleb128 0x49
 46448 0a52 13       		.uleb128 0x13
 46449 0a53 20       		.uleb128 0x20
 46450 0a54 0B       		.uleb128 0xb
 46451 0a55 01       		.uleb128 0x1
 46452 0a56 13       		.uleb128 0x13
 46453 0a57 00       		.byte	0
 46454 0a58 00       		.byte	0
 46455 0a59 AD01     		.uleb128 0xad
 46456 0a5b 0B       		.uleb128 0xb
 46457 0a5c 01       		.byte	0x1
 46458 0a5d 01       		.uleb128 0x1
 46459 0a5e 13       		.uleb128 0x13
 46460 0a5f 00       		.byte	0
 46461 0a60 00       		.byte	0
 46462 0a61 AE01     		.uleb128 0xae
 46463 0a63 05       		.uleb128 0x5
 46464 0a64 00       		.byte	0
 46465 0a65 31       		.uleb128 0x31
 46466 0a66 13       		.uleb128 0x13
 46467 0a67 00       		.byte	0
 46468 0a68 00       		.byte	0
 46469 0a69 AF01     		.uleb128 0xaf
 46470 0a6b 2E       		.uleb128 0x2e
 46471 0a6c 01       		.byte	0x1
 46472 0a6d 03       		.uleb128 0x3
 46473 0a6e 0E       		.uleb128 0xe
 46474 0a6f 34       		.uleb128 0x34
 46475 0a70 19       		.uleb128 0x19
 46476 0a71 20       		.uleb128 0x20
 46477 0a72 0B       		.uleb128 0xb
 46478 0a73 01       		.uleb128 0x1
 46479 0a74 13       		.uleb128 0x13
 46480 0a75 00       		.byte	0
 46481 0a76 00       		.byte	0
 46482 0a77 B001     		.uleb128 0xb0
 46483 0a79 2E       		.uleb128 0x2e
 46484 0a7a 01       		.byte	0x1
 46485 0a7b 31       		.uleb128 0x31
 46486 0a7c 13       		.uleb128 0x13
 46487 0a7d 6E       		.uleb128 0x6e
 46488 0a7e 0E       		.uleb128 0xe
 46489 0a7f 11       		.uleb128 0x11
 46490 0a80 01       		.uleb128 0x1
 46491 0a81 12       		.uleb128 0x12
 46492 0a82 07       		.uleb128 0x7
 46493 0a83 40       		.uleb128 0x40
 46494 0a84 18       		.uleb128 0x18
 46495 0a85 64       		.uleb128 0x64
 46496 0a86 13       		.uleb128 0x13
 46497 0a87 9742     		.uleb128 0x2117
 46498 0a89 19       		.uleb128 0x19
 46499 0a8a 01       		.uleb128 0x1
 46500 0a8b 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1134


 46501 0a8c 00       		.byte	0
 46502 0a8d 00       		.byte	0
 46503 0a8e B101     		.uleb128 0xb1
 46504 0a90 05       		.uleb128 0x5
 46505 0a91 00       		.byte	0
 46506 0a92 31       		.uleb128 0x31
 46507 0a93 13       		.uleb128 0x13
 46508 0a94 02       		.uleb128 0x2
 46509 0a95 18       		.uleb128 0x18
 46510 0a96 00       		.byte	0
 46511 0a97 00       		.byte	0
 46512 0a98 B201     		.uleb128 0xb2
 46513 0a9a 2E       		.uleb128 0x2e
 46514 0a9b 01       		.byte	0x1
 46515 0a9c 3F       		.uleb128 0x3f
 46516 0a9d 19       		.uleb128 0x19
 46517 0a9e 03       		.uleb128 0x3
 46518 0a9f 0E       		.uleb128 0xe
 46519 0aa0 3A       		.uleb128 0x3a
 46520 0aa1 0B       		.uleb128 0xb
 46521 0aa2 3B       		.uleb128 0x3b
 46522 0aa3 0B       		.uleb128 0xb
 46523 0aa4 6E       		.uleb128 0x6e
 46524 0aa5 0E       		.uleb128 0xe
 46525 0aa6 49       		.uleb128 0x49
 46526 0aa7 13       		.uleb128 0x13
 46527 0aa8 11       		.uleb128 0x11
 46528 0aa9 01       		.uleb128 0x1
 46529 0aaa 12       		.uleb128 0x12
 46530 0aab 07       		.uleb128 0x7
 46531 0aac 40       		.uleb128 0x40
 46532 0aad 18       		.uleb128 0x18
 46533 0aae 9742     		.uleb128 0x2117
 46534 0ab0 19       		.uleb128 0x19
 46535 0ab1 01       		.uleb128 0x1
 46536 0ab2 13       		.uleb128 0x13
 46537 0ab3 00       		.byte	0
 46538 0ab4 00       		.byte	0
 46539 0ab5 B301     		.uleb128 0xb3
 46540 0ab7 898201   		.uleb128 0x4109
 46541 0aba 00       		.byte	0
 46542 0abb 11       		.uleb128 0x11
 46543 0abc 01       		.uleb128 0x1
 46544 0abd 9542     		.uleb128 0x2115
 46545 0abf 19       		.uleb128 0x19
 46546 0ac0 31       		.uleb128 0x31
 46547 0ac1 13       		.uleb128 0x13
 46548 0ac2 00       		.byte	0
 46549 0ac3 00       		.byte	0
 46550 0ac4 B401     		.uleb128 0xb4
 46551 0ac6 2E       		.uleb128 0x2e
 46552 0ac7 01       		.byte	0x1
 46553 0ac8 47       		.uleb128 0x47
 46554 0ac9 13       		.uleb128 0x13
 46555 0aca 3A       		.uleb128 0x3a
 46556 0acb 0B       		.uleb128 0xb
 46557 0acc 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccJUMvuF.s 			page 1135


 46558 0acd 05       		.uleb128 0x5
 46559 0ace 11       		.uleb128 0x11
 46560 0acf 01       		.uleb128 0x1
 46561 0ad0 12       		.uleb128 0x12
 46562 0ad1 07       		.uleb128 0x7
 46563 0ad2 40       		.uleb128 0x40
 46564 0ad3 18       		.uleb128 0x18
 46565 0ad4 64       		.uleb128 0x64
 46566 0ad5 13       		.uleb128 0x13
 46567 0ad6 9742     		.uleb128 0x2117
 46568 0ad8 19       		.uleb128 0x19
 46569 0ad9 01       		.uleb128 0x1
 46570 0ada 13       		.uleb128 0x13
 46571 0adb 00       		.byte	0
 46572 0adc 00       		.byte	0
 46573 0add B501     		.uleb128 0xb5
 46574 0adf 05       		.uleb128 0x5
 46575 0ae0 00       		.byte	0
 46576 0ae1 03       		.uleb128 0x3
 46577 0ae2 0E       		.uleb128 0xe
 46578 0ae3 49       		.uleb128 0x49
 46579 0ae4 13       		.uleb128 0x13
 46580 0ae5 34       		.uleb128 0x34
 46581 0ae6 19       		.uleb128 0x19
 46582 0ae7 02       		.uleb128 0x2
 46583 0ae8 18       		.uleb128 0x18
 46584 0ae9 00       		.byte	0
 46585 0aea 00       		.byte	0
 46586 0aeb B601     		.uleb128 0xb6
 46587 0aed 0B       		.uleb128 0xb
 46588 0aee 01       		.byte	0x1
 46589 0aef 55       		.uleb128 0x55
 46590 0af0 17       		.uleb128 0x17
 46591 0af1 00       		.byte	0
 46592 0af2 00       		.byte	0
 46593 0af3 B701     		.uleb128 0xb7
 46594 0af5 34       		.uleb128 0x34
 46595 0af6 00       		.byte	0
 46596 0af7 03       		.uleb128 0x3
 46597 0af8 08       		.uleb128 0x8
 46598 0af9 3A       		.uleb128 0x3a
 46599 0afa 0B       		.uleb128 0xb
 46600 0afb 3B       		.uleb128 0x3b
 46601 0afc 05       		.uleb128 0x5
 46602 0afd 49       		.uleb128 0x49
 46603 0afe 13       		.uleb128 0x13
 46604 0aff 02       		.uleb128 0x2
 46605 0b00 17       		.uleb128 0x17
 46606 0b01 00       		.byte	0
 46607 0b02 00       		.byte	0
 46608 0b03 B801     		.uleb128 0xb8
 46609 0b05 1D       		.uleb128 0x1d
 46610 0b06 01       		.byte	0x1
 46611 0b07 31       		.uleb128 0x31
 46612 0b08 13       		.uleb128 0x13
 46613 0b09 11       		.uleb128 0x11
 46614 0b0a 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1136


 46615 0b0b 12       		.uleb128 0x12
 46616 0b0c 07       		.uleb128 0x7
 46617 0b0d 58       		.uleb128 0x58
 46618 0b0e 0B       		.uleb128 0xb
 46619 0b0f 59       		.uleb128 0x59
 46620 0b10 05       		.uleb128 0x5
 46621 0b11 00       		.byte	0
 46622 0b12 00       		.byte	0
 46623 0b13 B901     		.uleb128 0xb9
 46624 0b15 0B       		.uleb128 0xb
 46625 0b16 01       		.byte	0x1
 46626 0b17 11       		.uleb128 0x11
 46627 0b18 01       		.uleb128 0x1
 46628 0b19 12       		.uleb128 0x12
 46629 0b1a 07       		.uleb128 0x7
 46630 0b1b 00       		.byte	0
 46631 0b1c 00       		.byte	0
 46632 0b1d BA01     		.uleb128 0xba
 46633 0b1f 34       		.uleb128 0x34
 46634 0b20 00       		.byte	0
 46635 0b21 31       		.uleb128 0x31
 46636 0b22 13       		.uleb128 0x13
 46637 0b23 00       		.byte	0
 46638 0b24 00       		.byte	0
 46639 0b25 BB01     		.uleb128 0xbb
 46640 0b27 34       		.uleb128 0x34
 46641 0b28 00       		.byte	0
 46642 0b29 31       		.uleb128 0x31
 46643 0b2a 13       		.uleb128 0x13
 46644 0b2b 02       		.uleb128 0x2
 46645 0b2c 17       		.uleb128 0x17
 46646 0b2d 00       		.byte	0
 46647 0b2e 00       		.byte	0
 46648 0b2f BC01     		.uleb128 0xbc
 46649 0b31 0B       		.uleb128 0xb
 46650 0b32 01       		.byte	0x1
 46651 0b33 11       		.uleb128 0x11
 46652 0b34 01       		.uleb128 0x1
 46653 0b35 12       		.uleb128 0x12
 46654 0b36 07       		.uleb128 0x7
 46655 0b37 01       		.uleb128 0x1
 46656 0b38 13       		.uleb128 0x13
 46657 0b39 00       		.byte	0
 46658 0b3a 00       		.byte	0
 46659 0b3b BD01     		.uleb128 0xbd
 46660 0b3d 34       		.uleb128 0x34
 46661 0b3e 00       		.byte	0
 46662 0b3f 31       		.uleb128 0x31
 46663 0b40 13       		.uleb128 0x13
 46664 0b41 02       		.uleb128 0x2
 46665 0b42 18       		.uleb128 0x18
 46666 0b43 00       		.byte	0
 46667 0b44 00       		.byte	0
 46668 0b45 BE01     		.uleb128 0xbe
 46669 0b47 05       		.uleb128 0x5
 46670 0b48 00       		.byte	0
 46671 0b49 31       		.uleb128 0x31
GAS LISTING /tmp/ccJUMvuF.s 			page 1137


 46672 0b4a 13       		.uleb128 0x13
 46673 0b4b 02       		.uleb128 0x2
 46674 0b4c 17       		.uleb128 0x17
 46675 0b4d 00       		.byte	0
 46676 0b4e 00       		.byte	0
 46677 0b4f BF01     		.uleb128 0xbf
 46678 0b51 34       		.uleb128 0x34
 46679 0b52 00       		.byte	0
 46680 0b53 31       		.uleb128 0x31
 46681 0b54 13       		.uleb128 0x13
 46682 0b55 1C       		.uleb128 0x1c
 46683 0b56 0B       		.uleb128 0xb
 46684 0b57 00       		.byte	0
 46685 0b58 00       		.byte	0
 46686 0b59 C001     		.uleb128 0xc0
 46687 0b5b 34       		.uleb128 0x34
 46688 0b5c 00       		.byte	0
 46689 0b5d 31       		.uleb128 0x31
 46690 0b5e 13       		.uleb128 0x13
 46691 0b5f 1C       		.uleb128 0x1c
 46692 0b60 06       		.uleb128 0x6
 46693 0b61 00       		.byte	0
 46694 0b62 00       		.byte	0
 46695 0b63 C101     		.uleb128 0xc1
 46696 0b65 898201   		.uleb128 0x4109
 46697 0b68 01       		.byte	0x1
 46698 0b69 11       		.uleb128 0x11
 46699 0b6a 01       		.uleb128 0x1
 46700 0b6b 31       		.uleb128 0x31
 46701 0b6c 13       		.uleb128 0x13
 46702 0b6d 00       		.byte	0
 46703 0b6e 00       		.byte	0
 46704 0b6f C201     		.uleb128 0xc2
 46705 0b71 8A8201   		.uleb128 0x410a
 46706 0b74 00       		.byte	0
 46707 0b75 02       		.uleb128 0x2
 46708 0b76 18       		.uleb128 0x18
 46709 0b77 9142     		.uleb128 0x2111
 46710 0b79 18       		.uleb128 0x18
 46711 0b7a 00       		.byte	0
 46712 0b7b 00       		.byte	0
 46713 0b7c C301     		.uleb128 0xc3
 46714 0b7e 1D       		.uleb128 0x1d
 46715 0b7f 01       		.byte	0x1
 46716 0b80 31       		.uleb128 0x31
 46717 0b81 13       		.uleb128 0x13
 46718 0b82 52       		.uleb128 0x52
 46719 0b83 01       		.uleb128 0x1
 46720 0b84 55       		.uleb128 0x55
 46721 0b85 17       		.uleb128 0x17
 46722 0b86 58       		.uleb128 0x58
 46723 0b87 0B       		.uleb128 0xb
 46724 0b88 59       		.uleb128 0x59
 46725 0b89 05       		.uleb128 0x5
 46726 0b8a 01       		.uleb128 0x1
 46727 0b8b 13       		.uleb128 0x13
 46728 0b8c 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1138


 46729 0b8d 00       		.byte	0
 46730 0b8e C401     		.uleb128 0xc4
 46731 0b90 0B       		.uleb128 0xb
 46732 0b91 01       		.byte	0x1
 46733 0b92 55       		.uleb128 0x55
 46734 0b93 17       		.uleb128 0x17
 46735 0b94 01       		.uleb128 0x1
 46736 0b95 13       		.uleb128 0x13
 46737 0b96 00       		.byte	0
 46738 0b97 00       		.byte	0
 46739 0b98 C501     		.uleb128 0xc5
 46740 0b9a 1D       		.uleb128 0x1d
 46741 0b9b 01       		.byte	0x1
 46742 0b9c 31       		.uleb128 0x31
 46743 0b9d 13       		.uleb128 0x13
 46744 0b9e 11       		.uleb128 0x11
 46745 0b9f 01       		.uleb128 0x1
 46746 0ba0 12       		.uleb128 0x12
 46747 0ba1 07       		.uleb128 0x7
 46748 0ba2 58       		.uleb128 0x58
 46749 0ba3 0B       		.uleb128 0xb
 46750 0ba4 59       		.uleb128 0x59
 46751 0ba5 05       		.uleb128 0x5
 46752 0ba6 01       		.uleb128 0x1
 46753 0ba7 13       		.uleb128 0x13
 46754 0ba8 00       		.byte	0
 46755 0ba9 00       		.byte	0
 46756 0baa C601     		.uleb128 0xc6
 46757 0bac 898201   		.uleb128 0x4109
 46758 0baf 01       		.byte	0x1
 46759 0bb0 11       		.uleb128 0x11
 46760 0bb1 01       		.uleb128 0x1
 46761 0bb2 31       		.uleb128 0x31
 46762 0bb3 13       		.uleb128 0x13
 46763 0bb4 01       		.uleb128 0x1
 46764 0bb5 13       		.uleb128 0x13
 46765 0bb6 00       		.byte	0
 46766 0bb7 00       		.byte	0
 46767 0bb8 C701     		.uleb128 0xc7
 46768 0bba 2E       		.uleb128 0x2e
 46769 0bbb 01       		.byte	0x1
 46770 0bbc 31       		.uleb128 0x31
 46771 0bbd 13       		.uleb128 0x13
 46772 0bbe 11       		.uleb128 0x11
 46773 0bbf 01       		.uleb128 0x1
 46774 0bc0 12       		.uleb128 0x12
 46775 0bc1 07       		.uleb128 0x7
 46776 0bc2 40       		.uleb128 0x40
 46777 0bc3 18       		.uleb128 0x18
 46778 0bc4 9742     		.uleb128 0x2117
 46779 0bc6 19       		.uleb128 0x19
 46780 0bc7 01       		.uleb128 0x1
 46781 0bc8 13       		.uleb128 0x13
 46782 0bc9 00       		.byte	0
 46783 0bca 00       		.byte	0
 46784 0bcb C801     		.uleb128 0xc8
 46785 0bcd 05       		.uleb128 0x5
GAS LISTING /tmp/ccJUMvuF.s 			page 1139


 46786 0bce 00       		.byte	0
 46787 0bcf 31       		.uleb128 0x31
 46788 0bd0 13       		.uleb128 0x13
 46789 0bd1 1C       		.uleb128 0x1c
 46790 0bd2 05       		.uleb128 0x5
 46791 0bd3 00       		.byte	0
 46792 0bd4 00       		.byte	0
 46793 0bd5 C901     		.uleb128 0xc9
 46794 0bd7 1D       		.uleb128 0x1d
 46795 0bd8 01       		.byte	0x1
 46796 0bd9 31       		.uleb128 0x31
 46797 0bda 13       		.uleb128 0x13
 46798 0bdb 52       		.uleb128 0x52
 46799 0bdc 01       		.uleb128 0x1
 46800 0bdd 55       		.uleb128 0x55
 46801 0bde 17       		.uleb128 0x17
 46802 0bdf 58       		.uleb128 0x58
 46803 0be0 0B       		.uleb128 0xb
 46804 0be1 59       		.uleb128 0x59
 46805 0be2 0B       		.uleb128 0xb
 46806 0be3 01       		.uleb128 0x1
 46807 0be4 13       		.uleb128 0x13
 46808 0be5 00       		.byte	0
 46809 0be6 00       		.byte	0
 46810 0be7 CA01     		.uleb128 0xca
 46811 0be9 1D       		.uleb128 0x1d
 46812 0bea 01       		.byte	0x1
 46813 0beb 31       		.uleb128 0x31
 46814 0bec 13       		.uleb128 0x13
 46815 0bed 11       		.uleb128 0x11
 46816 0bee 01       		.uleb128 0x1
 46817 0bef 12       		.uleb128 0x12
 46818 0bf0 07       		.uleb128 0x7
 46819 0bf1 58       		.uleb128 0x58
 46820 0bf2 0B       		.uleb128 0xb
 46821 0bf3 59       		.uleb128 0x59
 46822 0bf4 0B       		.uleb128 0xb
 46823 0bf5 01       		.uleb128 0x1
 46824 0bf6 13       		.uleb128 0x13
 46825 0bf7 00       		.byte	0
 46826 0bf8 00       		.byte	0
 46827 0bf9 CB01     		.uleb128 0xcb
 46828 0bfb 1D       		.uleb128 0x1d
 46829 0bfc 01       		.byte	0x1
 46830 0bfd 31       		.uleb128 0x31
 46831 0bfe 13       		.uleb128 0x13
 46832 0bff 52       		.uleb128 0x52
 46833 0c00 01       		.uleb128 0x1
 46834 0c01 55       		.uleb128 0x55
 46835 0c02 17       		.uleb128 0x17
 46836 0c03 58       		.uleb128 0x58
 46837 0c04 0B       		.uleb128 0xb
 46838 0c05 59       		.uleb128 0x59
 46839 0c06 0B       		.uleb128 0xb
 46840 0c07 00       		.byte	0
 46841 0c08 00       		.byte	0
 46842 0c09 CC01     		.uleb128 0xcc
GAS LISTING /tmp/ccJUMvuF.s 			page 1140


 46843 0c0b 1D       		.uleb128 0x1d
 46844 0c0c 01       		.byte	0x1
 46845 0c0d 31       		.uleb128 0x31
 46846 0c0e 13       		.uleb128 0x13
 46847 0c0f 52       		.uleb128 0x52
 46848 0c10 01       		.uleb128 0x1
 46849 0c11 55       		.uleb128 0x55
 46850 0c12 17       		.uleb128 0x17
 46851 0c13 58       		.uleb128 0x58
 46852 0c14 0B       		.uleb128 0xb
 46853 0c15 59       		.uleb128 0x59
 46854 0c16 05       		.uleb128 0x5
 46855 0c17 00       		.byte	0
 46856 0c18 00       		.byte	0
 46857 0c19 CD01     		.uleb128 0xcd
 46858 0c1b 05       		.uleb128 0x5
 46859 0c1c 00       		.byte	0
 46860 0c1d 31       		.uleb128 0x31
 46861 0c1e 13       		.uleb128 0x13
 46862 0c1f 1C       		.uleb128 0x1c
 46863 0c20 0B       		.uleb128 0xb
 46864 0c21 00       		.byte	0
 46865 0c22 00       		.byte	0
 46866 0c23 CE01     		.uleb128 0xce
 46867 0c25 1D       		.uleb128 0x1d
 46868 0c26 01       		.byte	0x1
 46869 0c27 31       		.uleb128 0x31
 46870 0c28 13       		.uleb128 0x13
 46871 0c29 11       		.uleb128 0x11
 46872 0c2a 01       		.uleb128 0x1
 46873 0c2b 12       		.uleb128 0x12
 46874 0c2c 07       		.uleb128 0x7
 46875 0c2d 58       		.uleb128 0x58
 46876 0c2e 0B       		.uleb128 0xb
 46877 0c2f 59       		.uleb128 0x59
 46878 0c30 0B       		.uleb128 0xb
 46879 0c31 00       		.byte	0
 46880 0c32 00       		.byte	0
 46881 0c33 CF01     		.uleb128 0xcf
 46882 0c35 898201   		.uleb128 0x4109
 46883 0c38 00       		.byte	0
 46884 0c39 11       		.uleb128 0x11
 46885 0c3a 01       		.uleb128 0x1
 46886 0c3b 31       		.uleb128 0x31
 46887 0c3c 13       		.uleb128 0x13
 46888 0c3d 00       		.byte	0
 46889 0c3e 00       		.byte	0
 46890 0c3f D001     		.uleb128 0xd0
 46891 0c41 898201   		.uleb128 0x4109
 46892 0c44 01       		.byte	0x1
 46893 0c45 11       		.uleb128 0x11
 46894 0c46 01       		.uleb128 0x1
 46895 0c47 00       		.byte	0
 46896 0c48 00       		.byte	0
 46897 0c49 D101     		.uleb128 0xd1
 46898 0c4b 05       		.uleb128 0x5
 46899 0c4c 00       		.byte	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1141


 46900 0c4d 31       		.uleb128 0x31
 46901 0c4e 13       		.uleb128 0x13
 46902 0c4f 1C       		.uleb128 0x1c
 46903 0c50 0D       		.uleb128 0xd
 46904 0c51 00       		.byte	0
 46905 0c52 00       		.byte	0
 46906 0c53 D201     		.uleb128 0xd2
 46907 0c55 2E       		.uleb128 0x2e
 46908 0c56 01       		.byte	0x1
 46909 0c57 47       		.uleb128 0x47
 46910 0c58 13       		.uleb128 0x13
 46911 0c59 11       		.uleb128 0x11
 46912 0c5a 01       		.uleb128 0x1
 46913 0c5b 12       		.uleb128 0x12
 46914 0c5c 07       		.uleb128 0x7
 46915 0c5d 40       		.uleb128 0x40
 46916 0c5e 18       		.uleb128 0x18
 46917 0c5f 9742     		.uleb128 0x2117
 46918 0c61 19       		.uleb128 0x19
 46919 0c62 01       		.uleb128 0x1
 46920 0c63 13       		.uleb128 0x13
 46921 0c64 00       		.byte	0
 46922 0c65 00       		.byte	0
 46923 0c66 D301     		.uleb128 0xd3
 46924 0c68 05       		.uleb128 0x5
 46925 0c69 00       		.byte	0
 46926 0c6a 03       		.uleb128 0x3
 46927 0c6b 0E       		.uleb128 0xe
 46928 0c6c 3A       		.uleb128 0x3a
 46929 0c6d 0B       		.uleb128 0xb
 46930 0c6e 3B       		.uleb128 0x3b
 46931 0c6f 0B       		.uleb128 0xb
 46932 0c70 49       		.uleb128 0x49
 46933 0c71 13       		.uleb128 0x13
 46934 0c72 02       		.uleb128 0x2
 46935 0c73 18       		.uleb128 0x18
 46936 0c74 00       		.byte	0
 46937 0c75 00       		.byte	0
 46938 0c76 D401     		.uleb128 0xd4
 46939 0c78 05       		.uleb128 0x5
 46940 0c79 00       		.byte	0
 46941 0c7a 03       		.uleb128 0x3
 46942 0c7b 0E       		.uleb128 0xe
 46943 0c7c 3A       		.uleb128 0x3a
 46944 0c7d 0B       		.uleb128 0xb
 46945 0c7e 3B       		.uleb128 0x3b
 46946 0c7f 0B       		.uleb128 0xb
 46947 0c80 49       		.uleb128 0x49
 46948 0c81 13       		.uleb128 0x13
 46949 0c82 02       		.uleb128 0x2
 46950 0c83 17       		.uleb128 0x17
 46951 0c84 00       		.byte	0
 46952 0c85 00       		.byte	0
 46953 0c86 D501     		.uleb128 0xd5
 46954 0c88 34       		.uleb128 0x34
 46955 0c89 00       		.byte	0
 46956 0c8a 03       		.uleb128 0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1142


 46957 0c8b 0E       		.uleb128 0xe
 46958 0c8c 3A       		.uleb128 0x3a
 46959 0c8d 0B       		.uleb128 0xb
 46960 0c8e 3B       		.uleb128 0x3b
 46961 0c8f 0B       		.uleb128 0xb
 46962 0c90 49       		.uleb128 0x49
 46963 0c91 13       		.uleb128 0x13
 46964 0c92 02       		.uleb128 0x2
 46965 0c93 17       		.uleb128 0x17
 46966 0c94 00       		.byte	0
 46967 0c95 00       		.byte	0
 46968 0c96 D601     		.uleb128 0xd6
 46969 0c98 2E       		.uleb128 0x2e
 46970 0c99 01       		.byte	0x1
 46971 0c9a 31       		.uleb128 0x31
 46972 0c9b 13       		.uleb128 0x13
 46973 0c9c 11       		.uleb128 0x11
 46974 0c9d 01       		.uleb128 0x1
 46975 0c9e 12       		.uleb128 0x12
 46976 0c9f 07       		.uleb128 0x7
 46977 0ca0 40       		.uleb128 0x40
 46978 0ca1 18       		.uleb128 0x18
 46979 0ca2 9642     		.uleb128 0x2116
 46980 0ca4 19       		.uleb128 0x19
 46981 0ca5 01       		.uleb128 0x1
 46982 0ca6 13       		.uleb128 0x13
 46983 0ca7 00       		.byte	0
 46984 0ca8 00       		.byte	0
 46985 0ca9 D701     		.uleb128 0xd7
 46986 0cab 2E       		.uleb128 0x2e
 46987 0cac 01       		.byte	0x1
 46988 0cad 3F       		.uleb128 0x3f
 46989 0cae 19       		.uleb128 0x19
 46990 0caf 03       		.uleb128 0x3
 46991 0cb0 0E       		.uleb128 0xe
 46992 0cb1 3A       		.uleb128 0x3a
 46993 0cb2 0B       		.uleb128 0xb
 46994 0cb3 3B       		.uleb128 0x3b
 46995 0cb4 0B       		.uleb128 0xb
 46996 0cb5 49       		.uleb128 0x49
 46997 0cb6 13       		.uleb128 0x13
 46998 0cb7 11       		.uleb128 0x11
 46999 0cb8 01       		.uleb128 0x1
 47000 0cb9 12       		.uleb128 0x12
 47001 0cba 07       		.uleb128 0x7
 47002 0cbb 40       		.uleb128 0x40
 47003 0cbc 18       		.uleb128 0x18
 47004 0cbd 9742     		.uleb128 0x2117
 47005 0cbf 19       		.uleb128 0x19
 47006 0cc0 01       		.uleb128 0x1
 47007 0cc1 13       		.uleb128 0x13
 47008 0cc2 00       		.byte	0
 47009 0cc3 00       		.byte	0
 47010 0cc4 D801     		.uleb128 0xd8
 47011 0cc6 34       		.uleb128 0x34
 47012 0cc7 00       		.byte	0
 47013 0cc8 03       		.uleb128 0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1143


 47014 0cc9 08       		.uleb128 0x8
 47015 0cca 3A       		.uleb128 0x3a
 47016 0ccb 0B       		.uleb128 0xb
 47017 0ccc 3B       		.uleb128 0x3b
 47018 0ccd 0B       		.uleb128 0xb
 47019 0cce 49       		.uleb128 0x49
 47020 0ccf 13       		.uleb128 0x13
 47021 0cd0 02       		.uleb128 0x2
 47022 0cd1 17       		.uleb128 0x17
 47023 0cd2 00       		.byte	0
 47024 0cd3 00       		.byte	0
 47025 0cd4 D901     		.uleb128 0xd9
 47026 0cd6 34       		.uleb128 0x34
 47027 0cd7 00       		.byte	0
 47028 0cd8 03       		.uleb128 0x3
 47029 0cd9 0E       		.uleb128 0xe
 47030 0cda 3A       		.uleb128 0x3a
 47031 0cdb 0B       		.uleb128 0xb
 47032 0cdc 3B       		.uleb128 0x3b
 47033 0cdd 0B       		.uleb128 0xb
 47034 0cde 49       		.uleb128 0x49
 47035 0cdf 13       		.uleb128 0x13
 47036 0ce0 02       		.uleb128 0x2
 47037 0ce1 18       		.uleb128 0x18
 47038 0ce2 00       		.byte	0
 47039 0ce3 00       		.byte	0
 47040 0ce4 DA01     		.uleb128 0xda
 47041 0ce6 34       		.uleb128 0x34
 47042 0ce7 00       		.byte	0
 47043 0ce8 03       		.uleb128 0x3
 47044 0ce9 08       		.uleb128 0x8
 47045 0cea 3A       		.uleb128 0x3a
 47046 0ceb 0B       		.uleb128 0xb
 47047 0cec 3B       		.uleb128 0x3b
 47048 0ced 0B       		.uleb128 0xb
 47049 0cee 49       		.uleb128 0x49
 47050 0cef 13       		.uleb128 0x13
 47051 0cf0 02       		.uleb128 0x2
 47052 0cf1 18       		.uleb128 0x18
 47053 0cf2 00       		.byte	0
 47054 0cf3 00       		.byte	0
 47055 0cf4 DB01     		.uleb128 0xdb
 47056 0cf6 2E       		.uleb128 0x2e
 47057 0cf7 01       		.byte	0x1
 47058 0cf8 03       		.uleb128 0x3
 47059 0cf9 0E       		.uleb128 0xe
 47060 0cfa 34       		.uleb128 0x34
 47061 0cfb 19       		.uleb128 0x19
 47062 0cfc 11       		.uleb128 0x11
 47063 0cfd 01       		.uleb128 0x1
 47064 0cfe 12       		.uleb128 0x12
 47065 0cff 07       		.uleb128 0x7
 47066 0d00 40       		.uleb128 0x40
 47067 0d01 18       		.uleb128 0x18
 47068 0d02 9742     		.uleb128 0x2117
 47069 0d04 19       		.uleb128 0x19
 47070 0d05 01       		.uleb128 0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1144


 47071 0d06 13       		.uleb128 0x13
 47072 0d07 00       		.byte	0
 47073 0d08 00       		.byte	0
 47074 0d09 DC01     		.uleb128 0xdc
 47075 0d0b 898201   		.uleb128 0x4109
 47076 0d0e 01       		.byte	0x1
 47077 0d0f 11       		.uleb128 0x11
 47078 0d10 01       		.uleb128 0x1
 47079 0d11 01       		.uleb128 0x1
 47080 0d12 13       		.uleb128 0x13
 47081 0d13 00       		.byte	0
 47082 0d14 00       		.byte	0
 47083 0d15 DD01     		.uleb128 0xdd
 47084 0d17 898201   		.uleb128 0x4109
 47085 0d1a 01       		.byte	0x1
 47086 0d1b 11       		.uleb128 0x11
 47087 0d1c 01       		.uleb128 0x1
 47088 0d1d 9542     		.uleb128 0x2115
 47089 0d1f 19       		.uleb128 0x19
 47090 0d20 31       		.uleb128 0x31
 47091 0d21 13       		.uleb128 0x13
 47092 0d22 00       		.byte	0
 47093 0d23 00       		.byte	0
 47094 0d24 DE01     		.uleb128 0xde
 47095 0d26 8A8201   		.uleb128 0x410a
 47096 0d29 00       		.byte	0
 47097 0d2a 02       		.uleb128 0x2
 47098 0d2b 18       		.uleb128 0x18
 47099 0d2c 00       		.byte	0
 47100 0d2d 00       		.byte	0
 47101 0d2e DF01     		.uleb128 0xdf
 47102 0d30 34       		.uleb128 0x34
 47103 0d31 00       		.byte	0
 47104 0d32 03       		.uleb128 0x3
 47105 0d33 0E       		.uleb128 0xe
 47106 0d34 3A       		.uleb128 0x3a
 47107 0d35 0B       		.uleb128 0xb
 47108 0d36 3B       		.uleb128 0x3b
 47109 0d37 0B       		.uleb128 0xb
 47110 0d38 49       		.uleb128 0x49
 47111 0d39 13       		.uleb128 0x13
 47112 0d3a 3F       		.uleb128 0x3f
 47113 0d3b 19       		.uleb128 0x19
 47114 0d3c 3C       		.uleb128 0x3c
 47115 0d3d 19       		.uleb128 0x19
 47116 0d3e 00       		.byte	0
 47117 0d3f 00       		.byte	0
 47118 0d40 E001     		.uleb128 0xe0
 47119 0d42 34       		.uleb128 0x34
 47120 0d43 00       		.byte	0
 47121 0d44 03       		.uleb128 0x3
 47122 0d45 0E       		.uleb128 0xe
 47123 0d46 3A       		.uleb128 0x3a
 47124 0d47 0B       		.uleb128 0xb
 47125 0d48 3B       		.uleb128 0x3b
 47126 0d49 0B       		.uleb128 0xb
 47127 0d4a 49       		.uleb128 0x49
GAS LISTING /tmp/ccJUMvuF.s 			page 1145


 47128 0d4b 13       		.uleb128 0x13
 47129 0d4c 1C       		.uleb128 0x1c
 47130 0d4d 0B       		.uleb128 0xb
 47131 0d4e 00       		.byte	0
 47132 0d4f 00       		.byte	0
 47133 0d50 E101     		.uleb128 0xe1
 47134 0d52 34       		.uleb128 0x34
 47135 0d53 00       		.byte	0
 47136 0d54 03       		.uleb128 0x3
 47137 0d55 0E       		.uleb128 0xe
 47138 0d56 3A       		.uleb128 0x3a
 47139 0d57 0B       		.uleb128 0xb
 47140 0d58 3B       		.uleb128 0x3b
 47141 0d59 0B       		.uleb128 0xb
 47142 0d5a 49       		.uleb128 0x49
 47143 0d5b 13       		.uleb128 0x13
 47144 0d5c 1C       		.uleb128 0x1c
 47145 0d5d 05       		.uleb128 0x5
 47146 0d5e 00       		.byte	0
 47147 0d5f 00       		.byte	0
 47148 0d60 E201     		.uleb128 0xe2
 47149 0d62 34       		.uleb128 0x34
 47150 0d63 00       		.byte	0
 47151 0d64 03       		.uleb128 0x3
 47152 0d65 0E       		.uleb128 0xe
 47153 0d66 49       		.uleb128 0x49
 47154 0d67 13       		.uleb128 0x13
 47155 0d68 3F       		.uleb128 0x3f
 47156 0d69 19       		.uleb128 0x19
 47157 0d6a 34       		.uleb128 0x34
 47158 0d6b 19       		.uleb128 0x19
 47159 0d6c 3C       		.uleb128 0x3c
 47160 0d6d 19       		.uleb128 0x19
 47161 0d6e 00       		.byte	0
 47162 0d6f 00       		.byte	0
 47163 0d70 E301     		.uleb128 0xe3
 47164 0d72 34       		.uleb128 0x34
 47165 0d73 00       		.byte	0
 47166 0d74 47       		.uleb128 0x47
 47167 0d75 13       		.uleb128 0x13
 47168 0d76 1C       		.uleb128 0x1c
 47169 0d77 0B       		.uleb128 0xb
 47170 0d78 00       		.byte	0
 47171 0d79 00       		.byte	0
 47172 0d7a E401     		.uleb128 0xe4
 47173 0d7c 34       		.uleb128 0x34
 47174 0d7d 00       		.byte	0
 47175 0d7e 47       		.uleb128 0x47
 47176 0d7f 13       		.uleb128 0x13
 47177 0d80 00       		.byte	0
 47178 0d81 00       		.byte	0
 47179 0d82 E501     		.uleb128 0xe5
 47180 0d84 34       		.uleb128 0x34
 47181 0d85 00       		.byte	0
 47182 0d86 47       		.uleb128 0x47
 47183 0d87 13       		.uleb128 0x13
 47184 0d88 02       		.uleb128 0x2
GAS LISTING /tmp/ccJUMvuF.s 			page 1146


 47185 0d89 18       		.uleb128 0x18
 47186 0d8a 00       		.byte	0
 47187 0d8b 00       		.byte	0
 47188 0d8c E601     		.uleb128 0xe6
 47189 0d8e 34       		.uleb128 0x34
 47190 0d8f 00       		.byte	0
 47191 0d90 47       		.uleb128 0x47
 47192 0d91 13       		.uleb128 0x13
 47193 0d92 6E       		.uleb128 0x6e
 47194 0d93 0E       		.uleb128 0xe
 47195 0d94 00       		.byte	0
 47196 0d95 00       		.byte	0
 47197 0d96 E701     		.uleb128 0xe7
 47198 0d98 2E       		.uleb128 0x2e
 47199 0d99 01       		.byte	0x1
 47200 0d9a 3F       		.uleb128 0x3f
 47201 0d9b 19       		.uleb128 0x19
 47202 0d9c 03       		.uleb128 0x3
 47203 0d9d 0E       		.uleb128 0xe
 47204 0d9e 6E       		.uleb128 0x6e
 47205 0d9f 0E       		.uleb128 0xe
 47206 0da0 34       		.uleb128 0x34
 47207 0da1 19       		.uleb128 0x19
 47208 0da2 3C       		.uleb128 0x3c
 47209 0da3 19       		.uleb128 0x19
 47210 0da4 01       		.uleb128 0x1
 47211 0da5 13       		.uleb128 0x13
 47212 0da6 00       		.byte	0
 47213 0da7 00       		.byte	0
 47214 0da8 E801     		.uleb128 0xe8
 47215 0daa 2E       		.uleb128 0x2e
 47216 0dab 01       		.byte	0x1
 47217 0dac 3F       		.uleb128 0x3f
 47218 0dad 19       		.uleb128 0x19
 47219 0dae 03       		.uleb128 0x3
 47220 0daf 0E       		.uleb128 0xe
 47221 0db0 6E       		.uleb128 0x6e
 47222 0db1 0E       		.uleb128 0xe
 47223 0db2 49       		.uleb128 0x49
 47224 0db3 13       		.uleb128 0x13
 47225 0db4 34       		.uleb128 0x34
 47226 0db5 19       		.uleb128 0x19
 47227 0db6 3C       		.uleb128 0x3c
 47228 0db7 19       		.uleb128 0x19
 47229 0db8 01       		.uleb128 0x1
 47230 0db9 13       		.uleb128 0x13
 47231 0dba 00       		.byte	0
 47232 0dbb 00       		.byte	0
 47233 0dbc E901     		.uleb128 0xe9
 47234 0dbe 2E       		.uleb128 0x2e
 47235 0dbf 01       		.byte	0x1
 47236 0dc0 3F       		.uleb128 0x3f
 47237 0dc1 19       		.uleb128 0x19
 47238 0dc2 03       		.uleb128 0x3
 47239 0dc3 0E       		.uleb128 0xe
 47240 0dc4 49       		.uleb128 0x49
 47241 0dc5 13       		.uleb128 0x13
GAS LISTING /tmp/ccJUMvuF.s 			page 1147


 47242 0dc6 34       		.uleb128 0x34
 47243 0dc7 19       		.uleb128 0x19
 47244 0dc8 3C       		.uleb128 0x3c
 47245 0dc9 19       		.uleb128 0x19
 47246 0dca 01       		.uleb128 0x1
 47247 0dcb 13       		.uleb128 0x13
 47248 0dcc 00       		.byte	0
 47249 0dcd 00       		.byte	0
 47250 0dce EA01     		.uleb128 0xea
 47251 0dd0 2E       		.uleb128 0x2e
 47252 0dd1 01       		.byte	0x1
 47253 0dd2 3F       		.uleb128 0x3f
 47254 0dd3 19       		.uleb128 0x19
 47255 0dd4 03       		.uleb128 0x3
 47256 0dd5 0E       		.uleb128 0xe
 47257 0dd6 49       		.uleb128 0x49
 47258 0dd7 13       		.uleb128 0x13
 47259 0dd8 34       		.uleb128 0x34
 47260 0dd9 19       		.uleb128 0x19
 47261 0dda 3C       		.uleb128 0x3c
 47262 0ddb 19       		.uleb128 0x19
 47263 0ddc 00       		.byte	0
 47264 0ddd 00       		.byte	0
 47265 0dde 00       		.byte	0
 47266              		.section	.debug_loc,"",@progbits
 47267              	.Ldebug_loc0:
 47268              	.LLST0:
 47269 0000 00000000 		.quad	.LVL3
 47269      00000000 
 47270 0008 00000000 		.quad	.LVL5
 47270      00000000 
 47271 0010 0100     		.value	0x1
 47272 0012 50       		.byte	0x50
 47273 0013 00000000 		.quad	.LVL5
 47273      00000000 
 47274 001b 00000000 		.quad	.LVL6
 47274      00000000 
 47275 0023 0100     		.value	0x1
 47276 0025 51       		.byte	0x51
 47277 0026 00000000 		.quad	.LVL6
 47277      00000000 
 47278 002e 00000000 		.quad	.LVL7
 47278      00000000 
 47279 0036 0100     		.value	0x1
 47280 0038 50       		.byte	0x50
 47281 0039 00000000 		.quad	.LVL7
 47281      00000000 
 47282 0041 00000000 		.quad	.LVL8
 47282      00000000 
 47283 0049 0600     		.value	0x6
 47284 004b 71       		.byte	0x71
 47285 004c 00       		.sleb128 0
 47286 004d 70       		.byte	0x70
 47287 004e 00       		.sleb128 0
 47288 004f 27       		.byte	0x27
 47289 0050 9F       		.byte	0x9f
 47290 0051 00000000 		.quad	.LVL8
GAS LISTING /tmp/ccJUMvuF.s 			page 1148


 47290      00000000 
 47291 0059 00000000 		.quad	.LVL9
 47291      00000000 
 47292 0061 0100     		.value	0x1
 47293 0063 50       		.byte	0x50
 47294 0064 00000000 		.quad	0
 47294      00000000 
 47295 006c 00000000 		.quad	0
 47295      00000000 
 47296              	.LLST1:
 47297 0074 00000000 		.quad	.LVL12
 47297      00000000 
 47298 007c 00000000 		.quad	.LVL13
 47298      00000000 
 47299 0084 0100     		.value	0x1
 47300 0086 51       		.byte	0x51
 47301 0087 00000000 		.quad	.LVL13
 47301      00000000 
 47302 008f 00000000 		.quad	.LVL14
 47302      00000000 
 47303 0097 1300     		.value	0x13
 47304 0099 75       		.byte	0x75
 47305 009a F826     		.sleb128 4984
 47306 009c 06       		.byte	0x6
 47307 009d 40       		.byte	0x40
 47308 009e 4B       		.byte	0x4b
 47309 009f 24       		.byte	0x24
 47310 00a0 1F       		.byte	0x1f
 47311 00a1 1A       		.byte	0x1a
 47312 00a2 70       		.byte	0x70
 47313 00a3 00       		.sleb128 0
 47314 00a4 0C       		.byte	0xc
 47315 00a5 FFFFFF7F 		.long	0x7fffffff
 47316 00a9 1A       		.byte	0x1a
 47317 00aa 21       		.byte	0x21
 47318 00ab 9F       		.byte	0x9f
 47319 00ac 00000000 		.quad	0
 47319      00000000 
 47320 00b4 00000000 		.quad	0
 47320      00000000 
 47321              	.LLST2:
 47322 00bc 00000000 		.quad	.LVL15
 47322      00000000 
 47323 00c4 00000000 		.quad	.LVL22
 47323      00000000 
 47324 00cc 0100     		.value	0x1
 47325 00ce 55       		.byte	0x55
 47326 00cf 00000000 		.quad	.LVL22
 47326      00000000 
 47327 00d7 00000000 		.quad	.LVL27
 47327      00000000 
 47328 00df 0400     		.value	0x4
 47329 00e1 F3       		.byte	0xf3
 47330 00e2 01       		.uleb128 0x1
 47331 00e3 55       		.byte	0x55
 47332 00e4 9F       		.byte	0x9f
 47333 00e5 00000000 		.quad	.LVL27
GAS LISTING /tmp/ccJUMvuF.s 			page 1149


 47333      00000000 
 47334 00ed 00000000 		.quad	.LVL28
 47334      00000000 
 47335 00f5 0100     		.value	0x1
 47336 00f7 55       		.byte	0x55
 47337 00f8 00000000 		.quad	.LVL28
 47337      00000000 
 47338 0100 00000000 		.quad	.LVL121
 47338      00000000 
 47339 0108 0100     		.value	0x1
 47340 010a 5E       		.byte	0x5e
 47341 010b 00000000 		.quad	.LVL121
 47341      00000000 
 47342 0113 00000000 		.quad	.LVL122
 47342      00000000 
 47343 011b 0100     		.value	0x1
 47344 011d 55       		.byte	0x55
 47345 011e 00000000 		.quad	.LVL122
 47345      00000000 
 47346 0126 00000000 		.quad	.LFE6565
 47346      00000000 
 47347 012e 0400     		.value	0x4
 47348 0130 F3       		.byte	0xf3
 47349 0131 01       		.uleb128 0x1
 47350 0132 55       		.byte	0x55
 47351 0133 9F       		.byte	0x9f
 47352 0134 00000000 		.quad	0
 47352      00000000 
 47353 013c 00000000 		.quad	0
 47353      00000000 
 47354              	.LLST3:
 47355 0144 00000000 		.quad	.LVL15
 47355      00000000 
 47356 014c 00000000 		.quad	.LVL22
 47356      00000000 
 47357 0154 0100     		.value	0x1
 47358 0156 54       		.byte	0x54
 47359 0157 00000000 		.quad	.LVL22
 47359      00000000 
 47360 015f 00000000 		.quad	.LVL26
 47360      00000000 
 47361 0167 0100     		.value	0x1
 47362 0169 53       		.byte	0x53
 47363 016a 00000000 		.quad	.LVL26
 47363      00000000 
 47364 0172 00000000 		.quad	.LVL27
 47364      00000000 
 47365 017a 0400     		.value	0x4
 47366 017c F3       		.byte	0xf3
 47367 017d 01       		.uleb128 0x1
 47368 017e 54       		.byte	0x54
 47369 017f 9F       		.byte	0x9f
 47370 0180 00000000 		.quad	.LVL27
 47370      00000000 
 47371 0188 00000000 		.quad	.LFE6565
 47371      00000000 
 47372 0190 0100     		.value	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1150


 47373 0192 53       		.byte	0x53
 47374 0193 00000000 		.quad	0
 47374      00000000 
 47375 019b 00000000 		.quad	0
 47375      00000000 
 47376              	.LLST4:
 47377 01a3 00000000 		.quad	.LVL15
 47377      00000000 
 47378 01ab 00000000 		.quad	.LVL16
 47378      00000000 
 47379 01b3 0100     		.value	0x1
 47380 01b5 51       		.byte	0x51
 47381 01b6 00000000 		.quad	.LVL16
 47381      00000000 
 47382 01be 00000000 		.quad	.LFE6565
 47382      00000000 
 47383 01c6 0300     		.value	0x3
 47384 01c8 91       		.byte	0x91
 47385 01c9 A07F     		.sleb128 -96
 47386 01cb 00000000 		.quad	0
 47386      00000000 
 47387 01d3 00000000 		.quad	0
 47387      00000000 
 47388              	.LLST5:
 47389 01db 00000000 		.quad	.LVL17
 47389      00000000 
 47390 01e3 00000000 		.quad	.LVL18
 47390      00000000 
 47391 01eb 0100     		.value	0x1
 47392 01ed 51       		.byte	0x51
 47393 01ee 00000000 		.quad	.LVL18
 47393      00000000 
 47394 01f6 00000000 		.quad	.LVL19
 47394      00000000 
 47395 01fe 0100     		.value	0x1
 47396 0200 52       		.byte	0x52
 47397 0201 00000000 		.quad	.LVL19
 47397      00000000 
 47398 0209 00000000 		.quad	.LVL27
 47398      00000000 
 47399 0211 0300     		.value	0x3
 47400 0213 91       		.byte	0x91
 47401 0214 F87E     		.sleb128 -136
 47402 0216 00000000 		.quad	.LVL27
 47402      00000000 
 47403 021e 00000000 		.quad	.LVL29
 47403      00000000 
 47404 0226 0100     		.value	0x1
 47405 0228 51       		.byte	0x51
 47406 0229 00000000 		.quad	.LVL29
 47406      00000000 
 47407 0231 00000000 		.quad	.LVL121
 47407      00000000 
 47408 0239 0300     		.value	0x3
 47409 023b 91       		.byte	0x91
 47410 023c F87E     		.sleb128 -136
 47411 023e 00000000 		.quad	.LVL121
GAS LISTING /tmp/ccJUMvuF.s 			page 1151


 47411      00000000 
 47412 0246 00000000 		.quad	.LVL123-1
 47412      00000000 
 47413 024e 0100     		.value	0x1
 47414 0250 51       		.byte	0x51
 47415 0251 00000000 		.quad	.LVL123-1
 47415      00000000 
 47416 0259 00000000 		.quad	.LFE6565
 47416      00000000 
 47417 0261 0300     		.value	0x3
 47418 0263 91       		.byte	0x91
 47419 0264 F87E     		.sleb128 -136
 47420 0266 00000000 		.quad	0
 47420      00000000 
 47421 026e 00000000 		.quad	0
 47421      00000000 
 47422              	.LLST6:
 47423 0276 00000000 		.quad	.LVL23
 47423      00000000 
 47424 027e 00000000 		.quad	.LVL25
 47424      00000000 
 47425 0286 0100     		.value	0x1
 47426 0288 50       		.byte	0x50
 47427 0289 00000000 		.quad	.LVL37
 47427      00000000 
 47428 0291 00000000 		.quad	.LVL38
 47428      00000000 
 47429 0299 0600     		.value	0x6
 47430 029b 76       		.byte	0x76
 47431 029c 00       		.sleb128 0
 47432 029d 70       		.byte	0x70
 47433 029e 00       		.sleb128 0
 47434 029f 22       		.byte	0x22
 47435 02a0 9F       		.byte	0x9f
 47436 02a1 00000000 		.quad	.LVL38
 47436      00000000 
 47437 02a9 00000000 		.quad	.LVL39
 47437      00000000 
 47438 02b1 0100     		.value	0x1
 47439 02b3 50       		.byte	0x50
 47440 02b4 00000000 		.quad	.LVL123
 47440      00000000 
 47441 02bc 00000000 		.quad	.LFE6565
 47441      00000000 
 47442 02c4 0100     		.value	0x1
 47443 02c6 50       		.byte	0x50
 47444 02c7 00000000 		.quad	0
 47444      00000000 
 47445 02cf 00000000 		.quad	0
 47445      00000000 
 47446              	.LLST7:
 47447 02d7 00000000 		.quad	.LVL19
 47447      00000000 
 47448 02df 00000000 		.quad	.LVL20
 47448      00000000 
 47449 02e7 0100     		.value	0x1
 47450 02e9 52       		.byte	0x52
GAS LISTING /tmp/ccJUMvuF.s 			page 1152


 47451 02ea 00000000 		.quad	.LVL20
 47451      00000000 
 47452 02f2 00000000 		.quad	.LVL24
 47452      00000000 
 47453 02fa 0700     		.value	0x7
 47454 02fc 91       		.byte	0x91
 47455 02fd F87E     		.sleb128 -136
 47456 02ff 06       		.byte	0x6
 47457 0300 23       		.byte	0x23
 47458 0301 01       		.uleb128 0x1
 47459 0302 9F       		.byte	0x9f
 47460 0303 00000000 		.quad	0
 47460      00000000 
 47461 030b 00000000 		.quad	0
 47461      00000000 
 47462              	.LLST8:
 47463 0313 00000000 		.quad	.LVL21
 47463      00000000 
 47464 031b 00000000 		.quad	.LVL22
 47464      00000000 
 47465 0323 0100     		.value	0x1
 47466 0325 50       		.byte	0x50
 47467 0326 00000000 		.quad	.LVL22
 47467      00000000 
 47468 032e 00000000 		.quad	.LVL24
 47468      00000000 
 47469 0336 0100     		.value	0x1
 47470 0338 5C       		.byte	0x5c
 47471 0339 00000000 		.quad	0
 47471      00000000 
 47472 0341 00000000 		.quad	0
 47472      00000000 
 47473              	.LLST9:
 47474 0349 00000000 		.quad	.LVL22
 47474      00000000 
 47475 0351 00000000 		.quad	.LVL24
 47475      00000000 
 47476 0359 0100     		.value	0x1
 47477 035b 5D       		.byte	0x5d
 47478 035c 00000000 		.quad	0
 47478      00000000 
 47479 0364 00000000 		.quad	0
 47479      00000000 
 47480              	.LLST10:
 47481 036c 00000000 		.quad	.LVL36
 47481      00000000 
 47482 0374 00000000 		.quad	.LVL37-1
 47482      00000000 
 47483 037c 0100     		.value	0x1
 47484 037e 50       		.byte	0x50
 47485 037f 00000000 		.quad	.LVL37-1
 47485      00000000 
 47486 0387 00000000 		.quad	.LVL39
 47486      00000000 
 47487 038f 0100     		.value	0x1
 47488 0391 56       		.byte	0x56
 47489 0392 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1153


 47489      00000000 
 47490 039a 00000000 		.quad	0
 47490      00000000 
 47491              	.LLST11:
 47492 03a2 00000000 		.quad	.LVL29
 47492      00000000 
 47493 03aa 00000000 		.quad	.LVL121
 47493      00000000 
 47494 03b2 0400     		.value	0x4
 47495 03b4 40       		.byte	0x40
 47496 03b5 4C       		.byte	0x4c
 47497 03b6 24       		.byte	0x24
 47498 03b7 9F       		.byte	0x9f
 47499 03b8 00000000 		.quad	0
 47499      00000000 
 47500 03c0 00000000 		.quad	0
 47500      00000000 
 47501              	.LLST13:
 47502 03c8 00000000 		.quad	.LVL29
 47502      00000000 
 47503 03d0 00000000 		.quad	.LVL121
 47503      00000000 
 47504 03d8 0100     		.value	0x1
 47505 03da 53       		.byte	0x53
 47506 03db 00000000 		.quad	0
 47506      00000000 
 47507 03e3 00000000 		.quad	0
 47507      00000000 
 47508              	.LLST14:
 47509 03eb 00000000 		.quad	.LVL29
 47509      00000000 
 47510 03f3 00000000 		.quad	.LVL121
 47510      00000000 
 47511 03fb 0100     		.value	0x1
 47512 03fd 5E       		.byte	0x5e
 47513 03fe 00000000 		.quad	0
 47513      00000000 
 47514 0406 00000000 		.quad	0
 47514      00000000 
 47515              	.LLST15:
 47516 040e 00000000 		.quad	.LVL29
 47516      00000000 
 47517 0416 00000000 		.quad	.LVL121
 47517      00000000 
 47518 041e 0200     		.value	0x2
 47519 0420 30       		.byte	0x30
 47520 0421 9F       		.byte	0x9f
 47521 0422 00000000 		.quad	0
 47521      00000000 
 47522 042a 00000000 		.quad	0
 47522      00000000 
 47523              	.LLST16:
 47524 0432 00000000 		.quad	.LVL29
 47524      00000000 
 47525 043a 00000000 		.quad	.LVL121
 47525      00000000 
 47526 0442 0600     		.value	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1154


 47527 0444 0C       		.byte	0xc
 47528 0445 FFFFFFFF 		.long	0xffffffff
 47529 0449 9F       		.byte	0x9f
 47530 044a 00000000 		.quad	0
 47530      00000000 
 47531 0452 00000000 		.quad	0
 47531      00000000 
 47532              	.LLST18:
 47533 045a 00000000 		.quad	.LVL29
 47533      00000000 
 47534 0462 00000000 		.quad	.LVL121
 47534      00000000 
 47535 046a 0300     		.value	0x3
 47536 046c 91       		.byte	0x91
 47537 046d 987F     		.sleb128 -104
 47538 046f 00000000 		.quad	0
 47538      00000000 
 47539 0477 00000000 		.quad	0
 47539      00000000 
 47540              	.LLST19:
 47541 047f 00000000 		.quad	.LVL33
 47541      00000000 
 47542 0487 00000000 		.quad	.LVL35
 47542      00000000 
 47543 048f 0100     		.value	0x1
 47544 0491 50       		.byte	0x50
 47545 0492 00000000 		.quad	.LVL48
 47545      00000000 
 47546 049a 00000000 		.quad	.LVL49
 47546      00000000 
 47547 04a2 0600     		.value	0x6
 47548 04a4 76       		.byte	0x76
 47549 04a5 00       		.sleb128 0
 47550 04a6 70       		.byte	0x70
 47551 04a7 00       		.sleb128 0
 47552 04a8 22       		.byte	0x22
 47553 04a9 9F       		.byte	0x9f
 47554 04aa 00000000 		.quad	.LVL49
 47554      00000000 
 47555 04b2 00000000 		.quad	.LVL50
 47555      00000000 
 47556 04ba 0100     		.value	0x1
 47557 04bc 50       		.byte	0x50
 47558 04bd 00000000 		.quad	0
 47558      00000000 
 47559 04c5 00000000 		.quad	0
 47559      00000000 
 47560              	.LLST20:
 47561 04cd 00000000 		.quad	.LVL30
 47561      00000000 
 47562 04d5 00000000 		.quad	.LVL34
 47562      00000000 
 47563 04dd 0300     		.value	0x3
 47564 04df 91       		.byte	0x91
 47565 04e0 A87F     		.sleb128 -88
 47566 04e2 00000000 		.quad	0
 47566      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1155


 47567 04ea 00000000 		.quad	0
 47567      00000000 
 47568              	.LLST21:
 47569 04f2 00000000 		.quad	.LVL31
 47569      00000000 
 47570 04fa 00000000 		.quad	.LVL32
 47570      00000000 
 47571 0502 0100     		.value	0x1
 47572 0504 50       		.byte	0x50
 47573 0505 00000000 		.quad	.LVL32
 47573      00000000 
 47574 050d 00000000 		.quad	.LVL34
 47574      00000000 
 47575 0515 0100     		.value	0x1
 47576 0517 5C       		.byte	0x5c
 47577 0518 00000000 		.quad	0
 47577      00000000 
 47578 0520 00000000 		.quad	0
 47578      00000000 
 47579              	.LLST22:
 47580 0528 00000000 		.quad	.LVL32
 47580      00000000 
 47581 0530 00000000 		.quad	.LVL34
 47581      00000000 
 47582 0538 0100     		.value	0x1
 47583 053a 56       		.byte	0x56
 47584 053b 00000000 		.quad	0
 47584      00000000 
 47585 0543 00000000 		.quad	0
 47585      00000000 
 47586              	.LLST23:
 47587 054b 00000000 		.quad	.LVL47
 47587      00000000 
 47588 0553 00000000 		.quad	.LVL48-1
 47588      00000000 
 47589 055b 0100     		.value	0x1
 47590 055d 50       		.byte	0x50
 47591 055e 00000000 		.quad	.LVL48-1
 47591      00000000 
 47592 0566 00000000 		.quad	.LVL50
 47592      00000000 
 47593 056e 0100     		.value	0x1
 47594 0570 56       		.byte	0x56
 47595 0571 00000000 		.quad	0
 47595      00000000 
 47596 0579 00000000 		.quad	0
 47596      00000000 
 47597              	.LLST24:
 47598 0581 00000000 		.quad	.LVL40
 47598      00000000 
 47599 0589 00000000 		.quad	.LVL121
 47599      00000000 
 47600 0591 0400     		.value	0x4
 47601 0593 40       		.byte	0x40
 47602 0594 4C       		.byte	0x4c
 47603 0595 24       		.byte	0x24
 47604 0596 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1156


 47605 0597 00000000 		.quad	0
 47605      00000000 
 47606 059f 00000000 		.quad	0
 47606      00000000 
 47607              	.LLST26:
 47608 05a7 00000000 		.quad	.LVL40
 47608      00000000 
 47609 05af 00000000 		.quad	.LVL121
 47609      00000000 
 47610 05b7 0100     		.value	0x1
 47611 05b9 53       		.byte	0x53
 47612 05ba 00000000 		.quad	0
 47612      00000000 
 47613 05c2 00000000 		.quad	0
 47613      00000000 
 47614              	.LLST27:
 47615 05ca 00000000 		.quad	.LVL40
 47615      00000000 
 47616 05d2 00000000 		.quad	.LVL121
 47616      00000000 
 47617 05da 0100     		.value	0x1
 47618 05dc 5E       		.byte	0x5e
 47619 05dd 00000000 		.quad	0
 47619      00000000 
 47620 05e5 00000000 		.quad	0
 47620      00000000 
 47621              	.LLST28:
 47622 05ed 00000000 		.quad	.LVL40
 47622      00000000 
 47623 05f5 00000000 		.quad	.LVL121
 47623      00000000 
 47624 05fd 0200     		.value	0x2
 47625 05ff 30       		.byte	0x30
 47626 0600 9F       		.byte	0x9f
 47627 0601 00000000 		.quad	0
 47627      00000000 
 47628 0609 00000000 		.quad	0
 47628      00000000 
 47629              	.LLST29:
 47630 0611 00000000 		.quad	.LVL40
 47630      00000000 
 47631 0619 00000000 		.quad	.LVL121
 47631      00000000 
 47632 0621 0600     		.value	0x6
 47633 0623 0C       		.byte	0xc
 47634 0624 FFFFFFFF 		.long	0xffffffff
 47635 0628 9F       		.byte	0x9f
 47636 0629 00000000 		.quad	0
 47636      00000000 
 47637 0631 00000000 		.quad	0
 47637      00000000 
 47638              	.LLST31:
 47639 0639 00000000 		.quad	.LVL40
 47639      00000000 
 47640 0641 00000000 		.quad	.LVL121
 47640      00000000 
 47641 0649 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1157


 47642 064b 91       		.byte	0x91
 47643 064c 887F     		.sleb128 -120
 47644 064e 00000000 		.quad	0
 47644      00000000 
 47645 0656 00000000 		.quad	0
 47645      00000000 
 47646              	.LLST32:
 47647 065e 00000000 		.quad	.LVL44
 47647      00000000 
 47648 0666 00000000 		.quad	.LVL46
 47648      00000000 
 47649 066e 0100     		.value	0x1
 47650 0670 50       		.byte	0x50
 47651 0671 00000000 		.quad	.LVL54
 47651      00000000 
 47652 0679 00000000 		.quad	.LVL55
 47652      00000000 
 47653 0681 0600     		.value	0x6
 47654 0683 76       		.byte	0x76
 47655 0684 00       		.sleb128 0
 47656 0685 70       		.byte	0x70
 47657 0686 00       		.sleb128 0
 47658 0687 22       		.byte	0x22
 47659 0688 9F       		.byte	0x9f
 47660 0689 00000000 		.quad	.LVL55
 47660      00000000 
 47661 0691 00000000 		.quad	.LVL56
 47661      00000000 
 47662 0699 0100     		.value	0x1
 47663 069b 50       		.byte	0x50
 47664 069c 00000000 		.quad	0
 47664      00000000 
 47665 06a4 00000000 		.quad	0
 47665      00000000 
 47666              	.LLST33:
 47667 06ac 00000000 		.quad	.LVL53
 47667      00000000 
 47668 06b4 00000000 		.quad	.LVL54-1
 47668      00000000 
 47669 06bc 0100     		.value	0x1
 47670 06be 50       		.byte	0x50
 47671 06bf 00000000 		.quad	.LVL54-1
 47671      00000000 
 47672 06c7 00000000 		.quad	.LVL56
 47672      00000000 
 47673 06cf 0100     		.value	0x1
 47674 06d1 56       		.byte	0x56
 47675 06d2 00000000 		.quad	0
 47675      00000000 
 47676 06da 00000000 		.quad	0
 47676      00000000 
 47677              	.LLST34:
 47678 06e2 00000000 		.quad	.LVL50
 47678      00000000 
 47679 06ea 00000000 		.quad	.LVL121
 47679      00000000 
 47680 06f2 0400     		.value	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 1158


 47681 06f4 40       		.byte	0x40
 47682 06f5 4C       		.byte	0x4c
 47683 06f6 24       		.byte	0x24
 47684 06f7 9F       		.byte	0x9f
 47685 06f8 00000000 		.quad	0
 47685      00000000 
 47686 0700 00000000 		.quad	0
 47686      00000000 
 47687              	.LLST36:
 47688 0708 00000000 		.quad	.LVL50
 47688      00000000 
 47689 0710 00000000 		.quad	.LVL121
 47689      00000000 
 47690 0718 0100     		.value	0x1
 47691 071a 53       		.byte	0x53
 47692 071b 00000000 		.quad	0
 47692      00000000 
 47693 0723 00000000 		.quad	0
 47693      00000000 
 47694              	.LLST37:
 47695 072b 00000000 		.quad	.LVL50
 47695      00000000 
 47696 0733 00000000 		.quad	.LVL121
 47696      00000000 
 47697 073b 0100     		.value	0x1
 47698 073d 5E       		.byte	0x5e
 47699 073e 00000000 		.quad	0
 47699      00000000 
 47700 0746 00000000 		.quad	0
 47700      00000000 
 47701              	.LLST38:
 47702 074e 00000000 		.quad	.LVL50
 47702      00000000 
 47703 0756 00000000 		.quad	.LVL121
 47703      00000000 
 47704 075e 0200     		.value	0x2
 47705 0760 30       		.byte	0x30
 47706 0761 9F       		.byte	0x9f
 47707 0762 00000000 		.quad	0
 47707      00000000 
 47708 076a 00000000 		.quad	0
 47708      00000000 
 47709              	.LLST39:
 47710 0772 00000000 		.quad	.LVL50
 47710      00000000 
 47711 077a 00000000 		.quad	.LVL121
 47711      00000000 
 47712 0782 0600     		.value	0x6
 47713 0784 0C       		.byte	0xc
 47714 0785 FFFFFFFF 		.long	0xffffffff
 47715 0789 9F       		.byte	0x9f
 47716 078a 00000000 		.quad	0
 47716      00000000 
 47717 0792 00000000 		.quad	0
 47717      00000000 
 47718              	.LLST41:
 47719 079a 00000000 		.quad	.LVL50
GAS LISTING /tmp/ccJUMvuF.s 			page 1159


 47719      00000000 
 47720 07a2 00000000 		.quad	.LVL121
 47720      00000000 
 47721 07aa 0300     		.value	0x3
 47722 07ac 91       		.byte	0x91
 47723 07ad 807F     		.sleb128 -128
 47724 07af 00000000 		.quad	0
 47724      00000000 
 47725 07b7 00000000 		.quad	0
 47725      00000000 
 47726              	.LLST42:
 47727 07bf 00000000 		.quad	.LVL50
 47727      00000000 
 47728 07c7 00000000 		.quad	.LVL52
 47728      00000000 
 47729 07cf 0100     		.value	0x1
 47730 07d1 50       		.byte	0x50
 47731 07d2 00000000 		.quad	.LVL60
 47731      00000000 
 47732 07da 00000000 		.quad	.LVL61
 47732      00000000 
 47733 07e2 0100     		.value	0x1
 47734 07e4 50       		.byte	0x50
 47735 07e5 00000000 		.quad	.LVL65
 47735      00000000 
 47736 07ed 00000000 		.quad	.LVL66
 47736      00000000 
 47737 07f5 0600     		.value	0x6
 47738 07f7 76       		.byte	0x76
 47739 07f8 00       		.sleb128 0
 47740 07f9 70       		.byte	0x70
 47741 07fa 00       		.sleb128 0
 47742 07fb 22       		.byte	0x22
 47743 07fc 9F       		.byte	0x9f
 47744 07fd 00000000 		.quad	.LVL66
 47744      00000000 
 47745 0805 00000000 		.quad	.LVL67
 47745      00000000 
 47746 080d 0100     		.value	0x1
 47747 080f 50       		.byte	0x50
 47748 0810 00000000 		.quad	0
 47748      00000000 
 47749 0818 00000000 		.quad	0
 47749      00000000 
 47750              	.LLST43:
 47751 0820 00000000 		.quad	.LVL64
 47751      00000000 
 47752 0828 00000000 		.quad	.LVL65-1
 47752      00000000 
 47753 0830 0100     		.value	0x1
 47754 0832 50       		.byte	0x50
 47755 0833 00000000 		.quad	.LVL65-1
 47755      00000000 
 47756 083b 00000000 		.quad	.LVL67
 47756      00000000 
 47757 0843 0100     		.value	0x1
 47758 0845 56       		.byte	0x56
GAS LISTING /tmp/ccJUMvuF.s 			page 1160


 47759 0846 00000000 		.quad	0
 47759      00000000 
 47760 084e 00000000 		.quad	0
 47760      00000000 
 47761              	.LLST44:
 47762 0856 00000000 		.quad	.LVL61
 47762      00000000 
 47763 085e 00000000 		.quad	.LVL121
 47763      00000000 
 47764 0866 0400     		.value	0x4
 47765 0868 40       		.byte	0x40
 47766 0869 4C       		.byte	0x4c
 47767 086a 24       		.byte	0x24
 47768 086b 9F       		.byte	0x9f
 47769 086c 00000000 		.quad	0
 47769      00000000 
 47770 0874 00000000 		.quad	0
 47770      00000000 
 47771              	.LLST46:
 47772 087c 00000000 		.quad	.LVL61
 47772      00000000 
 47773 0884 00000000 		.quad	.LVL121
 47773      00000000 
 47774 088c 0100     		.value	0x1
 47775 088e 53       		.byte	0x53
 47776 088f 00000000 		.quad	0
 47776      00000000 
 47777 0897 00000000 		.quad	0
 47777      00000000 
 47778              	.LLST47:
 47779 089f 00000000 		.quad	.LVL61
 47779      00000000 
 47780 08a7 00000000 		.quad	.LVL121
 47780      00000000 
 47781 08af 0100     		.value	0x1
 47782 08b1 5E       		.byte	0x5e
 47783 08b2 00000000 		.quad	0
 47783      00000000 
 47784 08ba 00000000 		.quad	0
 47784      00000000 
 47785              	.LLST48:
 47786 08c2 00000000 		.quad	.LVL61
 47786      00000000 
 47787 08ca 00000000 		.quad	.LVL121
 47787      00000000 
 47788 08d2 0200     		.value	0x2
 47789 08d4 30       		.byte	0x30
 47790 08d5 9F       		.byte	0x9f
 47791 08d6 00000000 		.quad	0
 47791      00000000 
 47792 08de 00000000 		.quad	0
 47792      00000000 
 47793              	.LLST49:
 47794 08e6 00000000 		.quad	.LVL61
 47794      00000000 
 47795 08ee 00000000 		.quad	.LVL121
 47795      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1161


 47796 08f6 0600     		.value	0x6
 47797 08f8 0C       		.byte	0xc
 47798 08f9 FFFFFFFF 		.long	0xffffffff
 47799 08fd 9F       		.byte	0x9f
 47800 08fe 00000000 		.quad	0
 47800      00000000 
 47801 0906 00000000 		.quad	0
 47801      00000000 
 47802              	.LLST51:
 47803 090e 00000000 		.quad	.LVL61
 47803      00000000 
 47804 0916 00000000 		.quad	.LVL121
 47804      00000000 
 47805 091e 0300     		.value	0x3
 47806 0920 91       		.byte	0x91
 47807 0921 907F     		.sleb128 -112
 47808 0923 00000000 		.quad	0
 47808      00000000 
 47809 092b 00000000 		.quad	0
 47809      00000000 
 47810              	.LLST52:
 47811 0933 00000000 		.quad	.LVL61
 47811      00000000 
 47812 093b 00000000 		.quad	.LVL63
 47812      00000000 
 47813 0943 0100     		.value	0x1
 47814 0945 50       		.byte	0x50
 47815 0946 00000000 		.quad	.LVL71
 47815      00000000 
 47816 094e 00000000 		.quad	.LVL72
 47816      00000000 
 47817 0956 0100     		.value	0x1
 47818 0958 50       		.byte	0x50
 47819 0959 00000000 		.quad	.LVL76
 47819      00000000 
 47820 0961 00000000 		.quad	.LVL77
 47820      00000000 
 47821 0969 0600     		.value	0x6
 47822 096b 76       		.byte	0x76
 47823 096c 00       		.sleb128 0
 47824 096d 70       		.byte	0x70
 47825 096e 00       		.sleb128 0
 47826 096f 22       		.byte	0x22
 47827 0970 9F       		.byte	0x9f
 47828 0971 00000000 		.quad	.LVL77
 47828      00000000 
 47829 0979 00000000 		.quad	.LVL78
 47829      00000000 
 47830 0981 0100     		.value	0x1
 47831 0983 50       		.byte	0x50
 47832 0984 00000000 		.quad	0
 47832      00000000 
 47833 098c 00000000 		.quad	0
 47833      00000000 
 47834              	.LLST53:
 47835 0994 00000000 		.quad	.LVL75
 47835      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1162


 47836 099c 00000000 		.quad	.LVL76-1
 47836      00000000 
 47837 09a4 0100     		.value	0x1
 47838 09a6 50       		.byte	0x50
 47839 09a7 00000000 		.quad	.LVL76-1
 47839      00000000 
 47840 09af 00000000 		.quad	.LVL78
 47840      00000000 
 47841 09b7 0100     		.value	0x1
 47842 09b9 56       		.byte	0x56
 47843 09ba 00000000 		.quad	0
 47843      00000000 
 47844 09c2 00000000 		.quad	0
 47844      00000000 
 47845              	.LLST54:
 47846 09ca 00000000 		.quad	.LVL72
 47846      00000000 
 47847 09d2 00000000 		.quad	.LVL121
 47847      00000000 
 47848 09da 0400     		.value	0x4
 47849 09dc 40       		.byte	0x40
 47850 09dd 4C       		.byte	0x4c
 47851 09de 24       		.byte	0x24
 47852 09df 9F       		.byte	0x9f
 47853 09e0 00000000 		.quad	0
 47853      00000000 
 47854 09e8 00000000 		.quad	0
 47854      00000000 
 47855              	.LLST56:
 47856 09f0 00000000 		.quad	.LVL72
 47856      00000000 
 47857 09f8 00000000 		.quad	.LVL121
 47857      00000000 
 47858 0a00 0100     		.value	0x1
 47859 0a02 53       		.byte	0x53
 47860 0a03 00000000 		.quad	0
 47860      00000000 
 47861 0a0b 00000000 		.quad	0
 47861      00000000 
 47862              	.LLST57:
 47863 0a13 00000000 		.quad	.LVL72
 47863      00000000 
 47864 0a1b 00000000 		.quad	.LVL121
 47864      00000000 
 47865 0a23 0100     		.value	0x1
 47866 0a25 5E       		.byte	0x5e
 47867 0a26 00000000 		.quad	0
 47867      00000000 
 47868 0a2e 00000000 		.quad	0
 47868      00000000 
 47869              	.LLST58:
 47870 0a36 00000000 		.quad	.LVL72
 47870      00000000 
 47871 0a3e 00000000 		.quad	.LVL121
 47871      00000000 
 47872 0a46 0200     		.value	0x2
 47873 0a48 30       		.byte	0x30
GAS LISTING /tmp/ccJUMvuF.s 			page 1163


 47874 0a49 9F       		.byte	0x9f
 47875 0a4a 00000000 		.quad	0
 47875      00000000 
 47876 0a52 00000000 		.quad	0
 47876      00000000 
 47877              	.LLST59:
 47878 0a5a 00000000 		.quad	.LVL72
 47878      00000000 
 47879 0a62 00000000 		.quad	.LVL121
 47879      00000000 
 47880 0a6a 0600     		.value	0x6
 47881 0a6c 0C       		.byte	0xc
 47882 0a6d FFFFFFFF 		.long	0xffffffff
 47883 0a71 9F       		.byte	0x9f
 47884 0a72 00000000 		.quad	0
 47884      00000000 
 47885 0a7a 00000000 		.quad	0
 47885      00000000 
 47886              	.LLST61:
 47887 0a82 00000000 		.quad	.LVL72
 47887      00000000 
 47888 0a8a 00000000 		.quad	.LVL121
 47888      00000000 
 47889 0a92 0300     		.value	0x3
 47890 0a94 91       		.byte	0x91
 47891 0a95 E07E     		.sleb128 -160
 47892 0a97 00000000 		.quad	0
 47892      00000000 
 47893 0a9f 00000000 		.quad	0
 47893      00000000 
 47894              	.LLST62:
 47895 0aa7 00000000 		.quad	.LVL72
 47895      00000000 
 47896 0aaf 00000000 		.quad	.LVL74
 47896      00000000 
 47897 0ab7 0100     		.value	0x1
 47898 0ab9 50       		.byte	0x50
 47899 0aba 00000000 		.quad	.LVL82
 47899      00000000 
 47900 0ac2 00000000 		.quad	.LVL83
 47900      00000000 
 47901 0aca 0100     		.value	0x1
 47902 0acc 50       		.byte	0x50
 47903 0acd 00000000 		.quad	.LVL87
 47903      00000000 
 47904 0ad5 00000000 		.quad	.LVL88
 47904      00000000 
 47905 0add 0600     		.value	0x6
 47906 0adf 76       		.byte	0x76
 47907 0ae0 00       		.sleb128 0
 47908 0ae1 70       		.byte	0x70
 47909 0ae2 00       		.sleb128 0
 47910 0ae3 22       		.byte	0x22
 47911 0ae4 9F       		.byte	0x9f
 47912 0ae5 00000000 		.quad	.LVL88
 47912      00000000 
 47913 0aed 00000000 		.quad	.LVL89
GAS LISTING /tmp/ccJUMvuF.s 			page 1164


 47913      00000000 
 47914 0af5 0100     		.value	0x1
 47915 0af7 50       		.byte	0x50
 47916 0af8 00000000 		.quad	0
 47916      00000000 
 47917 0b00 00000000 		.quad	0
 47917      00000000 
 47918              	.LLST63:
 47919 0b08 00000000 		.quad	.LVL86
 47919      00000000 
 47920 0b10 00000000 		.quad	.LVL87-1
 47920      00000000 
 47921 0b18 0100     		.value	0x1
 47922 0b1a 50       		.byte	0x50
 47923 0b1b 00000000 		.quad	.LVL87-1
 47923      00000000 
 47924 0b23 00000000 		.quad	.LVL89
 47924      00000000 
 47925 0b2b 0100     		.value	0x1
 47926 0b2d 56       		.byte	0x56
 47927 0b2e 00000000 		.quad	0
 47927      00000000 
 47928 0b36 00000000 		.quad	0
 47928      00000000 
 47929              	.LLST64:
 47930 0b3e 00000000 		.quad	.LVL83
 47930      00000000 
 47931 0b46 00000000 		.quad	.LVL121
 47931      00000000 
 47932 0b4e 0400     		.value	0x4
 47933 0b50 40       		.byte	0x40
 47934 0b51 4C       		.byte	0x4c
 47935 0b52 24       		.byte	0x24
 47936 0b53 9F       		.byte	0x9f
 47937 0b54 00000000 		.quad	0
 47937      00000000 
 47938 0b5c 00000000 		.quad	0
 47938      00000000 
 47939              	.LLST66:
 47940 0b64 00000000 		.quad	.LVL83
 47940      00000000 
 47941 0b6c 00000000 		.quad	.LVL121
 47941      00000000 
 47942 0b74 0100     		.value	0x1
 47943 0b76 53       		.byte	0x53
 47944 0b77 00000000 		.quad	0
 47944      00000000 
 47945 0b7f 00000000 		.quad	0
 47945      00000000 
 47946              	.LLST67:
 47947 0b87 00000000 		.quad	.LVL83
 47947      00000000 
 47948 0b8f 00000000 		.quad	.LVL121
 47948      00000000 
 47949 0b97 0100     		.value	0x1
 47950 0b99 5E       		.byte	0x5e
 47951 0b9a 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1165


 47951      00000000 
 47952 0ba2 00000000 		.quad	0
 47952      00000000 
 47953              	.LLST68:
 47954 0baa 00000000 		.quad	.LVL83
 47954      00000000 
 47955 0bb2 00000000 		.quad	.LVL121
 47955      00000000 
 47956 0bba 0200     		.value	0x2
 47957 0bbc 30       		.byte	0x30
 47958 0bbd 9F       		.byte	0x9f
 47959 0bbe 00000000 		.quad	0
 47959      00000000 
 47960 0bc6 00000000 		.quad	0
 47960      00000000 
 47961              	.LLST69:
 47962 0bce 00000000 		.quad	.LVL83
 47962      00000000 
 47963 0bd6 00000000 		.quad	.LVL121
 47963      00000000 
 47964 0bde 0600     		.value	0x6
 47965 0be0 0C       		.byte	0xc
 47966 0be1 FFFFFFFF 		.long	0xffffffff
 47967 0be5 9F       		.byte	0x9f
 47968 0be6 00000000 		.quad	0
 47968      00000000 
 47969 0bee 00000000 		.quad	0
 47969      00000000 
 47970              	.LLST71:
 47971 0bf6 00000000 		.quad	.LVL83
 47971      00000000 
 47972 0bfe 00000000 		.quad	.LVL121
 47972      00000000 
 47973 0c06 0300     		.value	0x3
 47974 0c08 91       		.byte	0x91
 47975 0c09 D07E     		.sleb128 -176
 47976 0c0b 00000000 		.quad	0
 47976      00000000 
 47977 0c13 00000000 		.quad	0
 47977      00000000 
 47978              	.LLST72:
 47979 0c1b 00000000 		.quad	.LVL83
 47979      00000000 
 47980 0c23 00000000 		.quad	.LVL85
 47980      00000000 
 47981 0c2b 0100     		.value	0x1
 47982 0c2d 50       		.byte	0x50
 47983 0c2e 00000000 		.quad	.LVL92
 47983      00000000 
 47984 0c36 00000000 		.quad	.LVL93
 47984      00000000 
 47985 0c3e 0100     		.value	0x1
 47986 0c40 50       		.byte	0x50
 47987 0c41 00000000 		.quad	.LVL103
 47987      00000000 
 47988 0c49 00000000 		.quad	.LVL104
 47988      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1166


 47989 0c51 0600     		.value	0x6
 47990 0c53 76       		.byte	0x76
 47991 0c54 00       		.sleb128 0
 47992 0c55 70       		.byte	0x70
 47993 0c56 00       		.sleb128 0
 47994 0c57 22       		.byte	0x22
 47995 0c58 9F       		.byte	0x9f
 47996 0c59 00000000 		.quad	.LVL104
 47996      00000000 
 47997 0c61 00000000 		.quad	.LVL105
 47997      00000000 
 47998 0c69 0100     		.value	0x1
 47999 0c6b 50       		.byte	0x50
 48000 0c6c 00000000 		.quad	0
 48000      00000000 
 48001 0c74 00000000 		.quad	0
 48001      00000000 
 48002              	.LLST73:
 48003 0c7c 00000000 		.quad	.LVL102
 48003      00000000 
 48004 0c84 00000000 		.quad	.LVL103-1
 48004      00000000 
 48005 0c8c 0100     		.value	0x1
 48006 0c8e 50       		.byte	0x50
 48007 0c8f 00000000 		.quad	.LVL103-1
 48007      00000000 
 48008 0c97 00000000 		.quad	.LVL105
 48008      00000000 
 48009 0c9f 0100     		.value	0x1
 48010 0ca1 56       		.byte	0x56
 48011 0ca2 00000000 		.quad	0
 48011      00000000 
 48012 0caa 00000000 		.quad	0
 48012      00000000 
 48013              	.LLST74:
 48014 0cb2 00000000 		.quad	.LVL94
 48014      00000000 
 48015 0cba 00000000 		.quad	.LVL121
 48015      00000000 
 48016 0cc2 0400     		.value	0x4
 48017 0cc4 40       		.byte	0x40
 48018 0cc5 4C       		.byte	0x4c
 48019 0cc6 24       		.byte	0x24
 48020 0cc7 9F       		.byte	0x9f
 48021 0cc8 00000000 		.quad	0
 48021      00000000 
 48022 0cd0 00000000 		.quad	0
 48022      00000000 
 48023              	.LLST76:
 48024 0cd8 00000000 		.quad	.LVL94
 48024      00000000 
 48025 0ce0 00000000 		.quad	.LVL121
 48025      00000000 
 48026 0ce8 0100     		.value	0x1
 48027 0cea 53       		.byte	0x53
 48028 0ceb 00000000 		.quad	0
 48028      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1167


 48029 0cf3 00000000 		.quad	0
 48029      00000000 
 48030              	.LLST77:
 48031 0cfb 00000000 		.quad	.LVL94
 48031      00000000 
 48032 0d03 00000000 		.quad	.LVL121
 48032      00000000 
 48033 0d0b 0100     		.value	0x1
 48034 0d0d 5E       		.byte	0x5e
 48035 0d0e 00000000 		.quad	0
 48035      00000000 
 48036 0d16 00000000 		.quad	0
 48036      00000000 
 48037              	.LLST78:
 48038 0d1e 00000000 		.quad	.LVL94
 48038      00000000 
 48039 0d26 00000000 		.quad	.LVL121
 48039      00000000 
 48040 0d2e 0200     		.value	0x2
 48041 0d30 30       		.byte	0x30
 48042 0d31 9F       		.byte	0x9f
 48043 0d32 00000000 		.quad	0
 48043      00000000 
 48044 0d3a 00000000 		.quad	0
 48044      00000000 
 48045              	.LLST79:
 48046 0d42 00000000 		.quad	.LVL94
 48046      00000000 
 48047 0d4a 00000000 		.quad	.LVL121
 48047      00000000 
 48048 0d52 0600     		.value	0x6
 48049 0d54 0C       		.byte	0xc
 48050 0d55 FFFFFFFF 		.long	0xffffffff
 48051 0d59 9F       		.byte	0x9f
 48052 0d5a 00000000 		.quad	0
 48052      00000000 
 48053 0d62 00000000 		.quad	0
 48053      00000000 
 48054              	.LLST81:
 48055 0d6a 00000000 		.quad	.LVL94
 48055      00000000 
 48056 0d72 00000000 		.quad	.LVL121
 48056      00000000 
 48057 0d7a 0300     		.value	0x3
 48058 0d7c 91       		.byte	0x91
 48059 0d7d C07E     		.sleb128 -192
 48060 0d7f 00000000 		.quad	0
 48060      00000000 
 48061 0d87 00000000 		.quad	0
 48061      00000000 
 48062              	.LLST82:
 48063 0d8f 00000000 		.quad	.LVL99
 48063      00000000 
 48064 0d97 00000000 		.quad	.LVL101
 48064      00000000 
 48065 0d9f 0100     		.value	0x1
 48066 0da1 50       		.byte	0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 1168


 48067 0da2 00000000 		.quad	.LVL114
 48067      00000000 
 48068 0daa 00000000 		.quad	.LVL115
 48068      00000000 
 48069 0db2 0600     		.value	0x6
 48070 0db4 76       		.byte	0x76
 48071 0db5 00       		.sleb128 0
 48072 0db6 70       		.byte	0x70
 48073 0db7 00       		.sleb128 0
 48074 0db8 22       		.byte	0x22
 48075 0db9 9F       		.byte	0x9f
 48076 0dba 00000000 		.quad	.LVL115
 48076      00000000 
 48077 0dc2 00000000 		.quad	.LVL116
 48077      00000000 
 48078 0dca 0100     		.value	0x1
 48079 0dcc 50       		.byte	0x50
 48080 0dcd 00000000 		.quad	0
 48080      00000000 
 48081 0dd5 00000000 		.quad	0
 48081      00000000 
 48082              	.LLST83:
 48083 0ddd 00000000 		.quad	.LVL113
 48083      00000000 
 48084 0de5 00000000 		.quad	.LVL114-1
 48084      00000000 
 48085 0ded 0100     		.value	0x1
 48086 0def 50       		.byte	0x50
 48087 0df0 00000000 		.quad	.LVL114-1
 48087      00000000 
 48088 0df8 00000000 		.quad	.LVL116
 48088      00000000 
 48089 0e00 0100     		.value	0x1
 48090 0e02 56       		.byte	0x56
 48091 0e03 00000000 		.quad	0
 48091      00000000 
 48092 0e0b 00000000 		.quad	0
 48092      00000000 
 48093              	.LLST84:
 48094 0e13 00000000 		.quad	.LVL105
 48094      00000000 
 48095 0e1b 00000000 		.quad	.LVL121
 48095      00000000 
 48096 0e23 0400     		.value	0x4
 48097 0e25 40       		.byte	0x40
 48098 0e26 4C       		.byte	0x4c
 48099 0e27 24       		.byte	0x24
 48100 0e28 9F       		.byte	0x9f
 48101 0e29 00000000 		.quad	0
 48101      00000000 
 48102 0e31 00000000 		.quad	0
 48102      00000000 
 48103              	.LLST86:
 48104 0e39 00000000 		.quad	.LVL105
 48104      00000000 
 48105 0e41 00000000 		.quad	.LVL121
 48105      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1169


 48106 0e49 0100     		.value	0x1
 48107 0e4b 53       		.byte	0x53
 48108 0e4c 00000000 		.quad	0
 48108      00000000 
 48109 0e54 00000000 		.quad	0
 48109      00000000 
 48110              	.LLST87:
 48111 0e5c 00000000 		.quad	.LVL105
 48111      00000000 
 48112 0e64 00000000 		.quad	.LVL121
 48112      00000000 
 48113 0e6c 0100     		.value	0x1
 48114 0e6e 5E       		.byte	0x5e
 48115 0e6f 00000000 		.quad	0
 48115      00000000 
 48116 0e77 00000000 		.quad	0
 48116      00000000 
 48117              	.LLST88:
 48118 0e7f 00000000 		.quad	.LVL105
 48118      00000000 
 48119 0e87 00000000 		.quad	.LVL121
 48119      00000000 
 48120 0e8f 0200     		.value	0x2
 48121 0e91 30       		.byte	0x30
 48122 0e92 9F       		.byte	0x9f
 48123 0e93 00000000 		.quad	0
 48123      00000000 
 48124 0e9b 00000000 		.quad	0
 48124      00000000 
 48125              	.LLST89:
 48126 0ea3 00000000 		.quad	.LVL105
 48126      00000000 
 48127 0eab 00000000 		.quad	.LVL121
 48127      00000000 
 48128 0eb3 0600     		.value	0x6
 48129 0eb5 0C       		.byte	0xc
 48130 0eb6 FFFFFFFF 		.long	0xffffffff
 48131 0eba 9F       		.byte	0x9f
 48132 0ebb 00000000 		.quad	0
 48132      00000000 
 48133 0ec3 00000000 		.quad	0
 48133      00000000 
 48134              	.LLST91:
 48135 0ecb 00000000 		.quad	.LVL105
 48135      00000000 
 48136 0ed3 00000000 		.quad	.LVL121
 48136      00000000 
 48137 0edb 0100     		.value	0x1
 48138 0edd 5C       		.byte	0x5c
 48139 0ede 00000000 		.quad	0
 48139      00000000 
 48140 0ee6 00000000 		.quad	0
 48140      00000000 
 48141              	.LLST92:
 48142 0eee 00000000 		.quad	.LVL110
 48142      00000000 
 48143 0ef6 00000000 		.quad	.LVL112
GAS LISTING /tmp/ccJUMvuF.s 			page 1170


 48143      00000000 
 48144 0efe 0100     		.value	0x1
 48145 0f00 50       		.byte	0x50
 48146 0f01 00000000 		.quad	.LVL119
 48146      00000000 
 48147 0f09 00000000 		.quad	.LVL120
 48147      00000000 
 48148 0f11 0600     		.value	0x6
 48149 0f13 76       		.byte	0x76
 48150 0f14 00       		.sleb128 0
 48151 0f15 70       		.byte	0x70
 48152 0f16 00       		.sleb128 0
 48153 0f17 22       		.byte	0x22
 48154 0f18 9F       		.byte	0x9f
 48155 0f19 00000000 		.quad	.LVL120
 48155      00000000 
 48156 0f21 00000000 		.quad	.LVL121
 48156      00000000 
 48157 0f29 0100     		.value	0x1
 48158 0f2b 50       		.byte	0x50
 48159 0f2c 00000000 		.quad	0
 48159      00000000 
 48160 0f34 00000000 		.quad	0
 48160      00000000 
 48161              	.LLST93:
 48162 0f3c 00000000 		.quad	.LVL106
 48162      00000000 
 48163 0f44 00000000 		.quad	.LVL111
 48163      00000000 
 48164 0f4c 0300     		.value	0x3
 48165 0f4e 91       		.byte	0x91
 48166 0f4f C87E     		.sleb128 -184
 48167 0f51 00000000 		.quad	0
 48167      00000000 
 48168 0f59 00000000 		.quad	0
 48168      00000000 
 48169              	.LLST94:
 48170 0f61 00000000 		.quad	.LVL107
 48170      00000000 
 48171 0f69 00000000 		.quad	.LVL108
 48171      00000000 
 48172 0f71 0100     		.value	0x1
 48173 0f73 50       		.byte	0x50
 48174 0f74 00000000 		.quad	.LVL108
 48174      00000000 
 48175 0f7c 00000000 		.quad	.LVL111
 48175      00000000 
 48176 0f84 0300     		.value	0x3
 48177 0f86 91       		.byte	0x91
 48178 0f87 B87E     		.sleb128 -200
 48179 0f89 00000000 		.quad	0
 48179      00000000 
 48180 0f91 00000000 		.quad	0
 48180      00000000 
 48181              	.LLST95:
 48182 0f99 00000000 		.quad	.LVL109
 48182      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1171


 48183 0fa1 00000000 		.quad	.LVL111
 48183      00000000 
 48184 0fa9 0100     		.value	0x1
 48185 0fab 56       		.byte	0x56
 48186 0fac 00000000 		.quad	0
 48186      00000000 
 48187 0fb4 00000000 		.quad	0
 48187      00000000 
 48188              	.LLST96:
 48189 0fbc 00000000 		.quad	.LVL118
 48189      00000000 
 48190 0fc4 00000000 		.quad	.LVL121
 48190      00000000 
 48191 0fcc 0100     		.value	0x1
 48192 0fce 56       		.byte	0x56
 48193 0fcf 00000000 		.quad	0
 48193      00000000 
 48194 0fd7 00000000 		.quad	0
 48194      00000000 
 48195              	.LLST97:
 48196 0fdf 00000000 		.quad	.LVL116
 48196      00000000 
 48197 0fe7 00000000 		.quad	.LVL121
 48197      00000000 
 48198 0fef 0400     		.value	0x4
 48199 0ff1 40       		.byte	0x40
 48200 0ff2 4C       		.byte	0x4c
 48201 0ff3 24       		.byte	0x24
 48202 0ff4 9F       		.byte	0x9f
 48203 0ff5 00000000 		.quad	0
 48203      00000000 
 48204 0ffd 00000000 		.quad	0
 48204      00000000 
 48205              	.LLST98:
 48206 1005 00000000 		.quad	.LVL116
 48206      00000000 
 48207 100d 00000000 		.quad	.LVL121
 48207      00000000 
 48208 1015 0100     		.value	0x1
 48209 1017 5D       		.byte	0x5d
 48210 1018 00000000 		.quad	0
 48210      00000000 
 48211 1020 00000000 		.quad	0
 48211      00000000 
 48212              	.LLST99:
 48213 1028 00000000 		.quad	.LVL116
 48213      00000000 
 48214 1030 00000000 		.quad	.LVL121
 48214      00000000 
 48215 1038 0200     		.value	0x2
 48216 103a 30       		.byte	0x30
 48217 103b 9F       		.byte	0x9f
 48218 103c 00000000 		.quad	0
 48218      00000000 
 48219 1044 00000000 		.quad	0
 48219      00000000 
 48220              	.LLST100:
GAS LISTING /tmp/ccJUMvuF.s 			page 1172


 48221 104c 00000000 		.quad	.LVL116
 48221      00000000 
 48222 1054 00000000 		.quad	.LVL121
 48222      00000000 
 48223 105c 0100     		.value	0x1
 48224 105e 5F       		.byte	0x5f
 48225 105f 00000000 		.quad	0
 48225      00000000 
 48226 1067 00000000 		.quad	0
 48226      00000000 
 48227              	.LLST101:
 48228 106f 00000000 		.quad	.LVL95
 48228      00000000 
 48229 1077 00000000 		.quad	.LVL100
 48229      00000000 
 48230 107f 0300     		.value	0x3
 48231 1081 91       		.byte	0x91
 48232 1082 D87E     		.sleb128 -168
 48233 1084 00000000 		.quad	0
 48233      00000000 
 48234 108c 00000000 		.quad	0
 48234      00000000 
 48235              	.LLST102:
 48236 1094 00000000 		.quad	.LVL96
 48236      00000000 
 48237 109c 00000000 		.quad	.LVL97
 48237      00000000 
 48238 10a4 0100     		.value	0x1
 48239 10a6 50       		.byte	0x50
 48240 10a7 00000000 		.quad	.LVL97
 48240      00000000 
 48241 10af 00000000 		.quad	.LVL100
 48241      00000000 
 48242 10b7 0300     		.value	0x3
 48243 10b9 91       		.byte	0x91
 48244 10ba B87E     		.sleb128 -200
 48245 10bc 00000000 		.quad	0
 48245      00000000 
 48246 10c4 00000000 		.quad	0
 48246      00000000 
 48247              	.LLST103:
 48248 10cc 00000000 		.quad	.LVL98
 48248      00000000 
 48249 10d4 00000000 		.quad	.LVL100
 48249      00000000 
 48250 10dc 0100     		.value	0x1
 48251 10de 56       		.byte	0x56
 48252 10df 00000000 		.quad	0
 48252      00000000 
 48253 10e7 00000000 		.quad	0
 48253      00000000 
 48254              	.LLST104:
 48255 10ef 00000000 		.quad	.LVL83
 48255      00000000 
 48256 10f7 00000000 		.quad	.LVL84
 48256      00000000 
 48257 10ff 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1173


 48258 1101 91       		.byte	0x91
 48259 1102 F07E     		.sleb128 -144
 48260 1104 00000000 		.quad	.LVL90
 48260      00000000 
 48261 110c 00000000 		.quad	.LVL93
 48261      00000000 
 48262 1114 0300     		.value	0x3
 48263 1116 91       		.byte	0x91
 48264 1117 F07E     		.sleb128 -144
 48265 1119 00000000 		.quad	0
 48265      00000000 
 48266 1121 00000000 		.quad	0
 48266      00000000 
 48267              	.LLST105:
 48268 1129 00000000 		.quad	.LVL83
 48268      00000000 
 48269 1131 00000000 		.quad	.LVL84
 48269      00000000 
 48270 1139 0100     		.value	0x1
 48271 113b 56       		.byte	0x56
 48272 113c 00000000 		.quad	.LVL91
 48272      00000000 
 48273 1144 00000000 		.quad	.LVL93
 48273      00000000 
 48274 114c 0100     		.value	0x1
 48275 114e 56       		.byte	0x56
 48276 114f 00000000 		.quad	0
 48276      00000000 
 48277 1157 00000000 		.quad	0
 48277      00000000 
 48278              	.LLST106:
 48279 115f 00000000 		.quad	.LVL83
 48279      00000000 
 48280 1167 00000000 		.quad	.LVL84
 48280      00000000 
 48281 116f 0100     		.value	0x1
 48282 1171 5C       		.byte	0x5c
 48283 1172 00000000 		.quad	.LVL91
 48283      00000000 
 48284 117a 00000000 		.quad	.LVL93
 48284      00000000 
 48285 1182 0100     		.value	0x1
 48286 1184 5C       		.byte	0x5c
 48287 1185 00000000 		.quad	0
 48287      00000000 
 48288 118d 00000000 		.quad	0
 48288      00000000 
 48289              	.LLST107:
 48290 1195 00000000 		.quad	.LVL72
 48290      00000000 
 48291 119d 00000000 		.quad	.LVL73
 48291      00000000 
 48292 11a5 0700     		.value	0x7
 48293 11a7 91       		.byte	0x91
 48294 11a8 E07E     		.sleb128 -160
 48295 11aa 06       		.byte	0x6
 48296 11ab 23       		.byte	0x23
GAS LISTING /tmp/ccJUMvuF.s 			page 1174


 48297 11ac 01       		.uleb128 0x1
 48298 11ad 9F       		.byte	0x9f
 48299 11ae 00000000 		.quad	.LVL79
 48299      00000000 
 48300 11b6 00000000 		.quad	.LVL80
 48300      00000000 
 48301 11be 0100     		.value	0x1
 48302 11c0 56       		.byte	0x56
 48303 11c1 00000000 		.quad	.LVL80
 48303      00000000 
 48304 11c9 00000000 		.quad	.LVL83
 48304      00000000 
 48305 11d1 0700     		.value	0x7
 48306 11d3 91       		.byte	0x91
 48307 11d4 E07E     		.sleb128 -160
 48308 11d6 06       		.byte	0x6
 48309 11d7 23       		.byte	0x23
 48310 11d8 01       		.uleb128 0x1
 48311 11d9 9F       		.byte	0x9f
 48312 11da 00000000 		.quad	0
 48312      00000000 
 48313 11e2 00000000 		.quad	0
 48313      00000000 
 48314              	.LLST108:
 48315 11ea 00000000 		.quad	.LVL72
 48315      00000000 
 48316 11f2 00000000 		.quad	.LVL73
 48316      00000000 
 48317 11fa 0100     		.value	0x1
 48318 11fc 5C       		.byte	0x5c
 48319 11fd 00000000 		.quad	.LVL81
 48319      00000000 
 48320 1205 00000000 		.quad	.LVL83
 48320      00000000 
 48321 120d 0100     		.value	0x1
 48322 120f 5C       		.byte	0x5c
 48323 1210 00000000 		.quad	0
 48323      00000000 
 48324 1218 00000000 		.quad	0
 48324      00000000 
 48325              	.LLST109:
 48326 1220 00000000 		.quad	.LVL72
 48326      00000000 
 48327 1228 00000000 		.quad	.LVL73
 48327      00000000 
 48328 1230 0100     		.value	0x1
 48329 1232 56       		.byte	0x56
 48330 1233 00000000 		.quad	.LVL81
 48330      00000000 
 48331 123b 00000000 		.quad	.LVL83
 48331      00000000 
 48332 1243 0100     		.value	0x1
 48333 1245 56       		.byte	0x56
 48334 1246 00000000 		.quad	0
 48334      00000000 
 48335 124e 00000000 		.quad	0
 48335      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1175


 48336              	.LLST110:
 48337 1256 00000000 		.quad	.LVL61
 48337      00000000 
 48338 125e 00000000 		.quad	.LVL62
 48338      00000000 
 48339 1266 0700     		.value	0x7
 48340 1268 91       		.byte	0x91
 48341 1269 907F     		.sleb128 -112
 48342 126b 06       		.byte	0x6
 48343 126c 23       		.byte	0x23
 48344 126d 01       		.uleb128 0x1
 48345 126e 9F       		.byte	0x9f
 48346 126f 00000000 		.quad	.LVL68
 48346      00000000 
 48347 1277 00000000 		.quad	.LVL69
 48347      00000000 
 48348 127f 0100     		.value	0x1
 48349 1281 56       		.byte	0x56
 48350 1282 00000000 		.quad	.LVL69
 48350      00000000 
 48351 128a 00000000 		.quad	.LVL72
 48351      00000000 
 48352 1292 0700     		.value	0x7
 48353 1294 91       		.byte	0x91
 48354 1295 907F     		.sleb128 -112
 48355 1297 06       		.byte	0x6
 48356 1298 23       		.byte	0x23
 48357 1299 01       		.uleb128 0x1
 48358 129a 9F       		.byte	0x9f
 48359 129b 00000000 		.quad	0
 48359      00000000 
 48360 12a3 00000000 		.quad	0
 48360      00000000 
 48361              	.LLST111:
 48362 12ab 00000000 		.quad	.LVL61
 48362      00000000 
 48363 12b3 00000000 		.quad	.LVL62
 48363      00000000 
 48364 12bb 0100     		.value	0x1
 48365 12bd 5C       		.byte	0x5c
 48366 12be 00000000 		.quad	.LVL70
 48366      00000000 
 48367 12c6 00000000 		.quad	.LVL72
 48367      00000000 
 48368 12ce 0100     		.value	0x1
 48369 12d0 5C       		.byte	0x5c
 48370 12d1 00000000 		.quad	0
 48370      00000000 
 48371 12d9 00000000 		.quad	0
 48371      00000000 
 48372              	.LLST112:
 48373 12e1 00000000 		.quad	.LVL61
 48373      00000000 
 48374 12e9 00000000 		.quad	.LVL62
 48374      00000000 
 48375 12f1 0100     		.value	0x1
 48376 12f3 56       		.byte	0x56
GAS LISTING /tmp/ccJUMvuF.s 			page 1176


 48377 12f4 00000000 		.quad	.LVL70
 48377      00000000 
 48378 12fc 00000000 		.quad	.LVL72
 48378      00000000 
 48379 1304 0100     		.value	0x1
 48380 1306 56       		.byte	0x56
 48381 1307 00000000 		.quad	0
 48381      00000000 
 48382 130f 00000000 		.quad	0
 48382      00000000 
 48383              	.LLST113:
 48384 1317 00000000 		.quad	.LVL50
 48384      00000000 
 48385 131f 00000000 		.quad	.LVL51
 48385      00000000 
 48386 1327 0700     		.value	0x7
 48387 1329 91       		.byte	0x91
 48388 132a 807F     		.sleb128 -128
 48389 132c 06       		.byte	0x6
 48390 132d 23       		.byte	0x23
 48391 132e 01       		.uleb128 0x1
 48392 132f 9F       		.byte	0x9f
 48393 1330 00000000 		.quad	.LVL57
 48393      00000000 
 48394 1338 00000000 		.quad	.LVL58
 48394      00000000 
 48395 1340 0100     		.value	0x1
 48396 1342 56       		.byte	0x56
 48397 1343 00000000 		.quad	.LVL58
 48397      00000000 
 48398 134b 00000000 		.quad	.LVL61
 48398      00000000 
 48399 1353 0700     		.value	0x7
 48400 1355 91       		.byte	0x91
 48401 1356 807F     		.sleb128 -128
 48402 1358 06       		.byte	0x6
 48403 1359 23       		.byte	0x23
 48404 135a 01       		.uleb128 0x1
 48405 135b 9F       		.byte	0x9f
 48406 135c 00000000 		.quad	0
 48406      00000000 
 48407 1364 00000000 		.quad	0
 48407      00000000 
 48408              	.LLST114:
 48409 136c 00000000 		.quad	.LVL50
 48409      00000000 
 48410 1374 00000000 		.quad	.LVL51
 48410      00000000 
 48411 137c 0100     		.value	0x1
 48412 137e 5C       		.byte	0x5c
 48413 137f 00000000 		.quad	.LVL59
 48413      00000000 
 48414 1387 00000000 		.quad	.LVL61
 48414      00000000 
 48415 138f 0100     		.value	0x1
 48416 1391 5C       		.byte	0x5c
 48417 1392 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1177


 48417      00000000 
 48418 139a 00000000 		.quad	0
 48418      00000000 
 48419              	.LLST115:
 48420 13a2 00000000 		.quad	.LVL50
 48420      00000000 
 48421 13aa 00000000 		.quad	.LVL51
 48421      00000000 
 48422 13b2 0100     		.value	0x1
 48423 13b4 56       		.byte	0x56
 48424 13b5 00000000 		.quad	.LVL59
 48424      00000000 
 48425 13bd 00000000 		.quad	.LVL61
 48425      00000000 
 48426 13c5 0100     		.value	0x1
 48427 13c7 56       		.byte	0x56
 48428 13c8 00000000 		.quad	0
 48428      00000000 
 48429 13d0 00000000 		.quad	0
 48429      00000000 
 48430              	.LLST116:
 48431 13d8 00000000 		.quad	.LVL41
 48431      00000000 
 48432 13e0 00000000 		.quad	.LVL42
 48432      00000000 
 48433 13e8 0100     		.value	0x1
 48434 13ea 56       		.byte	0x56
 48435 13eb 00000000 		.quad	.LVL42
 48435      00000000 
 48436 13f3 00000000 		.quad	.LVL45
 48436      00000000 
 48437 13fb 0700     		.value	0x7
 48438 13fd 91       		.byte	0x91
 48439 13fe 887F     		.sleb128 -120
 48440 1400 06       		.byte	0x6
 48441 1401 23       		.byte	0x23
 48442 1402 01       		.uleb128 0x1
 48443 1403 9F       		.byte	0x9f
 48444 1404 00000000 		.quad	0
 48444      00000000 
 48445 140c 00000000 		.quad	0
 48445      00000000 
 48446              	.LLST117:
 48447 1414 00000000 		.quad	.LVL43
 48447      00000000 
 48448 141c 00000000 		.quad	.LVL45
 48448      00000000 
 48449 1424 0100     		.value	0x1
 48450 1426 5C       		.byte	0x5c
 48451 1427 00000000 		.quad	0
 48451      00000000 
 48452 142f 00000000 		.quad	0
 48452      00000000 
 48453              	.LLST118:
 48454 1437 00000000 		.quad	.LVL43
 48454      00000000 
 48455 143f 00000000 		.quad	.LVL45
GAS LISTING /tmp/ccJUMvuF.s 			page 1178


 48455      00000000 
 48456 1447 0100     		.value	0x1
 48457 1449 56       		.byte	0x56
 48458 144a 00000000 		.quad	0
 48458      00000000 
 48459 1452 00000000 		.quad	0
 48459      00000000 
 48460              	.LLST119:
 48461 145a 00000000 		.quad	.LVL124
 48461      00000000 
 48462 1462 00000000 		.quad	.LVL127-1
 48462      00000000 
 48463 146a 0100     		.value	0x1
 48464 146c 54       		.byte	0x54
 48465 146d 00000000 		.quad	.LVL127-1
 48465      00000000 
 48466 1475 00000000 		.quad	.LVL153
 48466      00000000 
 48467 147d 0100     		.value	0x1
 48468 147f 5F       		.byte	0x5f
 48469 1480 00000000 		.quad	.LVL153
 48469      00000000 
 48470 1488 00000000 		.quad	.LVL158
 48470      00000000 
 48471 1490 0300     		.value	0x3
 48472 1492 91       		.byte	0x91
 48473 1493 B458     		.sleb128 -5068
 48474 1495 00000000 		.quad	.LVL158
 48474      00000000 
 48475 149d 00000000 		.quad	.LVL185
 48475      00000000 
 48476 14a5 0400     		.value	0x4
 48477 14a7 F3       		.byte	0xf3
 48478 14a8 01       		.uleb128 0x1
 48479 14a9 54       		.byte	0x54
 48480 14aa 9F       		.byte	0x9f
 48481 14ab 00000000 		.quad	.LVL185
 48481      00000000 
 48482 14b3 00000000 		.quad	.LVL208
 48482      00000000 
 48483 14bb 0100     		.value	0x1
 48484 14bd 5F       		.byte	0x5f
 48485 14be 00000000 		.quad	.LVL208
 48485      00000000 
 48486 14c6 00000000 		.quad	.LVL209
 48486      00000000 
 48487 14ce 0400     		.value	0x4
 48488 14d0 F3       		.byte	0xf3
 48489 14d1 01       		.uleb128 0x1
 48490 14d2 54       		.byte	0x54
 48491 14d3 9F       		.byte	0x9f
 48492 14d4 00000000 		.quad	.LVL209
 48492      00000000 
 48493 14dc 00000000 		.quad	.LFE6730
 48493      00000000 
 48494 14e4 0100     		.value	0x1
 48495 14e6 5F       		.byte	0x5f
GAS LISTING /tmp/ccJUMvuF.s 			page 1179


 48496 14e7 00000000 		.quad	0
 48496      00000000 
 48497 14ef 00000000 		.quad	0
 48497      00000000 
 48498              	.LLST120:
 48499 14f7 00000000 		.quad	.LVL124
 48499      00000000 
 48500 14ff 00000000 		.quad	.LVL126
 48500      00000000 
 48501 1507 0200     		.value	0x2
 48502 1509 75       		.byte	0x75
 48503 150a 00       		.sleb128 0
 48504 150b 00000000 		.quad	.LVL126
 48504      00000000 
 48505 1513 00000000 		.quad	.LVL179
 48505      00000000 
 48506 151b 0200     		.value	0x2
 48507 151d 7C       		.byte	0x7c
 48508 151e 00       		.sleb128 0
 48509 151f 00000000 		.quad	.LVL179
 48509      00000000 
 48510 1527 00000000 		.quad	.LVL182
 48510      00000000 
 48511 152f 0200     		.value	0x2
 48512 1531 70       		.byte	0x70
 48513 1532 00       		.sleb128 0
 48514 1533 00000000 		.quad	.LVL182
 48514      00000000 
 48515 153b 00000000 		.quad	.LFE6730
 48515      00000000 
 48516 1543 0200     		.value	0x2
 48517 1545 7C       		.byte	0x7c
 48518 1546 00       		.sleb128 0
 48519 1547 00000000 		.quad	0
 48519      00000000 
 48520 154f 00000000 		.quad	0
 48520      00000000 
 48521              	.LLST121:
 48522 1557 00000000 		.quad	.LVL124
 48522      00000000 
 48523 155f 00000000 		.quad	.LVL126
 48523      00000000 
 48524 1567 0100     		.value	0x1
 48525 1569 55       		.byte	0x55
 48526 156a 00000000 		.quad	.LVL126
 48526      00000000 
 48527 1572 00000000 		.quad	.LVL179
 48527      00000000 
 48528 157a 0100     		.value	0x1
 48529 157c 5C       		.byte	0x5c
 48530 157d 00000000 		.quad	.LVL179
 48530      00000000 
 48531 1585 00000000 		.quad	.LVL182
 48531      00000000 
 48532 158d 0100     		.value	0x1
 48533 158f 50       		.byte	0x50
 48534 1590 00000000 		.quad	.LVL182
GAS LISTING /tmp/ccJUMvuF.s 			page 1180


 48534      00000000 
 48535 1598 00000000 		.quad	.LFE6730
 48535      00000000 
 48536 15a0 0100     		.value	0x1
 48537 15a2 5C       		.byte	0x5c
 48538 15a3 00000000 		.quad	0
 48538      00000000 
 48539 15ab 00000000 		.quad	0
 48539      00000000 
 48540              	.LLST124:
 48541 15b3 00000000 		.quad	.LVL125
 48541      00000000 
 48542 15bb 00000000 		.quad	.LVL126
 48542      00000000 
 48543 15c3 0100     		.value	0x1
 48544 15c5 55       		.byte	0x55
 48545 15c6 00000000 		.quad	.LVL126
 48545      00000000 
 48546 15ce 00000000 		.quad	.LVL179
 48546      00000000 
 48547 15d6 0100     		.value	0x1
 48548 15d8 5C       		.byte	0x5c
 48549 15d9 00000000 		.quad	.LVL179
 48549      00000000 
 48550 15e1 00000000 		.quad	.LVL182
 48550      00000000 
 48551 15e9 0100     		.value	0x1
 48552 15eb 50       		.byte	0x50
 48553 15ec 00000000 		.quad	.LVL182
 48553      00000000 
 48554 15f4 00000000 		.quad	.LFE6730
 48554      00000000 
 48555 15fc 0100     		.value	0x1
 48556 15fe 5C       		.byte	0x5c
 48557 15ff 00000000 		.quad	0
 48557      00000000 
 48558 1607 00000000 		.quad	0
 48558      00000000 
 48559              	.LLST125:
 48560 160f 00000000 		.quad	.LVL128
 48560      00000000 
 48561 1617 00000000 		.quad	.LVL179
 48561      00000000 
 48562 161f 0100     		.value	0x1
 48563 1621 5C       		.byte	0x5c
 48564 1622 00000000 		.quad	.LVL179
 48564      00000000 
 48565 162a 00000000 		.quad	.LVL182
 48565      00000000 
 48566 1632 0100     		.value	0x1
 48567 1634 50       		.byte	0x50
 48568 1635 00000000 		.quad	.LVL182
 48568      00000000 
 48569 163d 00000000 		.quad	.LFE6730
 48569      00000000 
 48570 1645 0100     		.value	0x1
 48571 1647 5C       		.byte	0x5c
GAS LISTING /tmp/ccJUMvuF.s 			page 1181


 48572 1648 00000000 		.quad	0
 48572      00000000 
 48573 1650 00000000 		.quad	0
 48573      00000000 
 48574              	.LLST126:
 48575 1658 00000000 		.quad	.LVL132
 48575      00000000 
 48576 1660 00000000 		.quad	.LVL170
 48576      00000000 
 48577 1668 0100     		.value	0x1
 48578 166a 56       		.byte	0x56
 48579 166b 00000000 		.quad	.LVL170
 48579      00000000 
 48580 1673 00000000 		.quad	.LVL181
 48580      00000000 
 48581 167b 0300     		.value	0x3
 48582 167d 7E       		.byte	0x7e
 48583 167e 78       		.sleb128 -8
 48584 167f 9F       		.byte	0x9f
 48585 1680 00000000 		.quad	.LVL181
 48585      00000000 
 48586 1688 00000000 		.quad	.LVL185
 48586      00000000 
 48587 1690 0400     		.value	0x4
 48588 1692 91       		.byte	0x91
 48589 1693 B058     		.sleb128 -5072
 48590 1695 9F       		.byte	0x9f
 48591 1696 00000000 		.quad	.LVL185
 48591      00000000 
 48592 169e 00000000 		.quad	.LVL195
 48592      00000000 
 48593 16a6 0100     		.value	0x1
 48594 16a8 56       		.byte	0x56
 48595 16a9 00000000 		.quad	.LVL199
 48595      00000000 
 48596 16b1 00000000 		.quad	.LVL208
 48596      00000000 
 48597 16b9 0100     		.value	0x1
 48598 16bb 56       		.byte	0x56
 48599 16bc 00000000 		.quad	.LVL208
 48599      00000000 
 48600 16c4 00000000 		.quad	.LVL209
 48600      00000000 
 48601 16cc 0300     		.value	0x3
 48602 16ce 7E       		.byte	0x7e
 48603 16cf 78       		.sleb128 -8
 48604 16d0 9F       		.byte	0x9f
 48605 16d1 00000000 		.quad	.LVL211
 48605      00000000 
 48606 16d9 00000000 		.quad	.LFE6730
 48606      00000000 
 48607 16e1 0100     		.value	0x1
 48608 16e3 56       		.byte	0x56
 48609 16e4 00000000 		.quad	0
 48609      00000000 
 48610 16ec 00000000 		.quad	0
 48610      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1182


 48611              	.LLST127:
 48612 16f4 00000000 		.quad	.LVL132
 48612      00000000 
 48613 16fc 00000000 		.quad	.LVL133
 48613      00000000 
 48614 1704 0500     		.value	0x5
 48615 1706 91       		.byte	0x91
 48616 1707 908A7F   		.sleb128 -15088
 48617 170a 9F       		.byte	0x9f
 48618 170b 00000000 		.quad	.LVL133
 48618      00000000 
 48619 1713 00000000 		.quad	.LVL180
 48619      00000000 
 48620 171b 0100     		.value	0x1
 48621 171d 5D       		.byte	0x5d
 48622 171e 00000000 		.quad	.LVL180
 48622      00000000 
 48623 1726 00000000 		.quad	.LVL182
 48623      00000000 
 48624 172e 0500     		.value	0x5
 48625 1730 91       		.byte	0x91
 48626 1731 908A7F   		.sleb128 -15088
 48627 1734 9F       		.byte	0x9f
 48628 1735 00000000 		.quad	.LVL182
 48628      00000000 
 48629 173d 00000000 		.quad	.LVL195
 48629      00000000 
 48630 1745 0100     		.value	0x1
 48631 1747 5D       		.byte	0x5d
 48632 1748 00000000 		.quad	.LVL199
 48632      00000000 
 48633 1750 00000000 		.quad	.LVL209
 48633      00000000 
 48634 1758 0100     		.value	0x1
 48635 175a 5D       		.byte	0x5d
 48636 175b 00000000 		.quad	.LVL211
 48636      00000000 
 48637 1763 00000000 		.quad	.LFE6730
 48637      00000000 
 48638 176b 0100     		.value	0x1
 48639 176d 5D       		.byte	0x5d
 48640 176e 00000000 		.quad	0
 48640      00000000 
 48641 1776 00000000 		.quad	0
 48641      00000000 
 48642              	.LLST128:
 48643 177e 00000000 		.quad	.LVL134
 48643      00000000 
 48644 1786 00000000 		.quad	.LVL170
 48644      00000000 
 48645 178e 0100     		.value	0x1
 48646 1790 56       		.byte	0x56
 48647 1791 00000000 		.quad	.LVL170
 48647      00000000 
 48648 1799 00000000 		.quad	.LVL181
 48648      00000000 
 48649 17a1 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1183


 48650 17a3 7E       		.byte	0x7e
 48651 17a4 78       		.sleb128 -8
 48652 17a5 9F       		.byte	0x9f
 48653 17a6 00000000 		.quad	.LVL181
 48653      00000000 
 48654 17ae 00000000 		.quad	.LVL185
 48654      00000000 
 48655 17b6 0400     		.value	0x4
 48656 17b8 91       		.byte	0x91
 48657 17b9 B058     		.sleb128 -5072
 48658 17bb 9F       		.byte	0x9f
 48659 17bc 00000000 		.quad	.LVL185
 48659      00000000 
 48660 17c4 00000000 		.quad	.LVL195
 48660      00000000 
 48661 17cc 0100     		.value	0x1
 48662 17ce 56       		.byte	0x56
 48663 17cf 00000000 		.quad	.LVL208
 48663      00000000 
 48664 17d7 00000000 		.quad	.LVL209
 48664      00000000 
 48665 17df 0300     		.value	0x3
 48666 17e1 7E       		.byte	0x7e
 48667 17e2 78       		.sleb128 -8
 48668 17e3 9F       		.byte	0x9f
 48669 17e4 00000000 		.quad	0
 48669      00000000 
 48670 17ec 00000000 		.quad	0
 48670      00000000 
 48671              	.LLST131:
 48672 17f4 00000000 		.quad	.LVL135
 48672      00000000 
 48673 17fc 00000000 		.quad	.LVL188
 48673      00000000 
 48674 1804 0500     		.value	0x5
 48675 1806 91       		.byte	0x91
 48676 1807 8F8A7F   		.sleb128 -15089
 48677 180a 9F       		.byte	0x9f
 48678 180b 00000000 		.quad	.LVL188
 48678      00000000 
 48679 1813 00000000 		.quad	.LVL189-1
 48679      00000000 
 48680 181b 0100     		.value	0x1
 48681 181d 54       		.byte	0x54
 48682 181e 00000000 		.quad	.LVL189-1
 48682      00000000 
 48683 1826 00000000 		.quad	.LVL195
 48683      00000000 
 48684 182e 0500     		.value	0x5
 48685 1830 91       		.byte	0x91
 48686 1831 8F8A7F   		.sleb128 -15089
 48687 1834 9F       		.byte	0x9f
 48688 1835 00000000 		.quad	.LVL208
 48688      00000000 
 48689 183d 00000000 		.quad	.LVL209
 48689      00000000 
 48690 1845 0500     		.value	0x5
GAS LISTING /tmp/ccJUMvuF.s 			page 1184


 48691 1847 91       		.byte	0x91
 48692 1848 8F8A7F   		.sleb128 -15089
 48693 184b 9F       		.byte	0x9f
 48694 184c 00000000 		.quad	0
 48694      00000000 
 48695 1854 00000000 		.quad	0
 48695      00000000 
 48696              	.LLST132:
 48697 185c 00000000 		.quad	.LVL135
 48697      00000000 
 48698 1864 00000000 		.quad	.LVL136
 48698      00000000 
 48699 186c 0100     		.value	0x1
 48700 186e 55       		.byte	0x55
 48701 186f 00000000 		.quad	.LVL185
 48701      00000000 
 48702 1877 00000000 		.quad	.LVL189-1
 48702      00000000 
 48703 187f 0100     		.value	0x1
 48704 1881 55       		.byte	0x55
 48705 1882 00000000 		.quad	.LVL190
 48705      00000000 
 48706 188a 00000000 		.quad	.LVL193
 48706      00000000 
 48707 1892 0100     		.value	0x1
 48708 1894 55       		.byte	0x55
 48709 1895 00000000 		.quad	0
 48709      00000000 
 48710 189d 00000000 		.quad	0
 48710      00000000 
 48711              	.LLST133:
 48712 18a5 00000000 		.quad	.LVL185
 48712      00000000 
 48713 18ad 00000000 		.quad	.LVL188
 48713      00000000 
 48714 18b5 0500     		.value	0x5
 48715 18b7 91       		.byte	0x91
 48716 18b8 8F8A7F   		.sleb128 -15089
 48717 18bb 9F       		.byte	0x9f
 48718 18bc 00000000 		.quad	.LVL188
 48718      00000000 
 48719 18c4 00000000 		.quad	.LVL189-1
 48719      00000000 
 48720 18cc 0100     		.value	0x1
 48721 18ce 54       		.byte	0x54
 48722 18cf 00000000 		.quad	.LVL189-1
 48722      00000000 
 48723 18d7 00000000 		.quad	.LVL193
 48723      00000000 
 48724 18df 0500     		.value	0x5
 48725 18e1 91       		.byte	0x91
 48726 18e2 8F8A7F   		.sleb128 -15089
 48727 18e5 9F       		.byte	0x9f
 48728 18e6 00000000 		.quad	0
 48728      00000000 
 48729 18ee 00000000 		.quad	0
 48729      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1185


 48730              	.LLST134:
 48731 18f6 00000000 		.quad	.LVL185
 48731      00000000 
 48732 18fe 00000000 		.quad	.LVL189-1
 48732      00000000 
 48733 1906 0100     		.value	0x1
 48734 1908 55       		.byte	0x55
 48735 1909 00000000 		.quad	.LVL190
 48735      00000000 
 48736 1911 00000000 		.quad	.LVL193
 48736      00000000 
 48737 1919 0100     		.value	0x1
 48738 191b 55       		.byte	0x55
 48739 191c 00000000 		.quad	0
 48739      00000000 
 48740 1924 00000000 		.quad	0
 48740      00000000 
 48741              	.LLST135:
 48742 192c 00000000 		.quad	.LVL185
 48742      00000000 
 48743 1934 00000000 		.quad	.LVL193
 48743      00000000 
 48744 193c 0300     		.value	0x3
 48745 193e 09       		.byte	0x9
 48746 193f FF       		.byte	0xff
 48747 1940 9F       		.byte	0x9f
 48748 1941 00000000 		.quad	0
 48748      00000000 
 48749 1949 00000000 		.quad	0
 48749      00000000 
 48750              	.LLST136:
 48751 1951 00000000 		.quad	.LVL185
 48751      00000000 
 48752 1959 00000000 		.quad	.LVL187
 48752      00000000 
 48753 1961 0300     		.value	0x3
 48754 1963 70       		.byte	0x70
 48755 1964 78       		.sleb128 -8
 48756 1965 9F       		.byte	0x9f
 48757 1966 00000000 		.quad	.LVL187
 48757      00000000 
 48758 196e 00000000 		.quad	.LVL189-1
 48758      00000000 
 48759 1976 0600     		.value	0x6
 48760 1978 76       		.byte	0x76
 48761 1979 00       		.sleb128 0
 48762 197a 06       		.byte	0x6
 48763 197b 38       		.byte	0x38
 48764 197c 1C       		.byte	0x1c
 48765 197d 9F       		.byte	0x9f
 48766 197e 00000000 		.quad	.LVL190
 48766      00000000 
 48767 1986 00000000 		.quad	.LVL192
 48767      00000000 
 48768 198e 0300     		.value	0x3
 48769 1990 70       		.byte	0x70
 48770 1991 78       		.sleb128 -8
GAS LISTING /tmp/ccJUMvuF.s 			page 1186


 48771 1992 9F       		.byte	0x9f
 48772 1993 00000000 		.quad	.LVL192
 48772      00000000 
 48773 199b 00000000 		.quad	.LVL193
 48773      00000000 
 48774 19a3 0600     		.value	0x6
 48775 19a5 76       		.byte	0x76
 48776 19a6 00       		.sleb128 0
 48777 19a7 06       		.byte	0x6
 48778 19a8 38       		.byte	0x38
 48779 19a9 1C       		.byte	0x1c
 48780 19aa 9F       		.byte	0x9f
 48781 19ab 00000000 		.quad	0
 48781      00000000 
 48782 19b3 00000000 		.quad	0
 48782      00000000 
 48783              	.LLST137:
 48784 19bb 00000000 		.quad	.LVL186
 48784      00000000 
 48785 19c3 00000000 		.quad	.LVL187
 48785      00000000 
 48786 19cb 0300     		.value	0x3
 48787 19cd 09       		.byte	0x9
 48788 19ce FF       		.byte	0xff
 48789 19cf 9F       		.byte	0x9f
 48790 19d0 00000000 		.quad	0
 48790      00000000 
 48791 19d8 00000000 		.quad	0
 48791      00000000 
 48792              	.LLST138:
 48793 19e0 00000000 		.quad	.LVL186
 48793      00000000 
 48794 19e8 00000000 		.quad	.LVL187
 48794      00000000 
 48795 19f0 0300     		.value	0x3
 48796 19f2 70       		.byte	0x70
 48797 19f3 78       		.sleb128 -8
 48798 19f4 9F       		.byte	0x9f
 48799 19f5 00000000 		.quad	0
 48799      00000000 
 48800 19fd 00000000 		.quad	0
 48800      00000000 
 48801              	.LLST139:
 48802 1a05 00000000 		.quad	.LVL190
 48802      00000000 
 48803 1a0d 00000000 		.quad	.LVL193
 48803      00000000 
 48804 1a15 0300     		.value	0x3
 48805 1a17 09       		.byte	0x9
 48806 1a18 FF       		.byte	0xff
 48807 1a19 9F       		.byte	0x9f
 48808 1a1a 00000000 		.quad	0
 48808      00000000 
 48809 1a22 00000000 		.quad	0
 48809      00000000 
 48810              	.LLST140:
 48811 1a2a 00000000 		.quad	.LVL190
GAS LISTING /tmp/ccJUMvuF.s 			page 1187


 48811      00000000 
 48812 1a32 00000000 		.quad	.LVL192
 48812      00000000 
 48813 1a3a 0300     		.value	0x3
 48814 1a3c 70       		.byte	0x70
 48815 1a3d 78       		.sleb128 -8
 48816 1a3e 9F       		.byte	0x9f
 48817 1a3f 00000000 		.quad	.LVL192
 48817      00000000 
 48818 1a47 00000000 		.quad	.LVL193
 48818      00000000 
 48819 1a4f 0600     		.value	0x6
 48820 1a51 76       		.byte	0x76
 48821 1a52 00       		.sleb128 0
 48822 1a53 06       		.byte	0x6
 48823 1a54 38       		.byte	0x38
 48824 1a55 1C       		.byte	0x1c
 48825 1a56 9F       		.byte	0x9f
 48826 1a57 00000000 		.quad	0
 48826      00000000 
 48827 1a5f 00000000 		.quad	0
 48827      00000000 
 48828              	.LLST141:
 48829 1a67 00000000 		.quad	.LVL191
 48829      00000000 
 48830 1a6f 00000000 		.quad	.LVL193
 48830      00000000 
 48831 1a77 0100     		.value	0x1
 48832 1a79 51       		.byte	0x51
 48833 1a7a 00000000 		.quad	0
 48833      00000000 
 48834 1a82 00000000 		.quad	0
 48834      00000000 
 48835              	.LLST142:
 48836 1a8a 00000000 		.quad	.LVL136
 48836      00000000 
 48837 1a92 00000000 		.quad	.LVL180
 48837      00000000 
 48838 1a9a 0100     		.value	0x1
 48839 1a9c 5D       		.byte	0x5d
 48840 1a9d 00000000 		.quad	.LVL180
 48840      00000000 
 48841 1aa5 00000000 		.quad	.LVL182
 48841      00000000 
 48842 1aad 0500     		.value	0x5
 48843 1aaf 91       		.byte	0x91
 48844 1ab0 908A7F   		.sleb128 -15088
 48845 1ab3 9F       		.byte	0x9f
 48846 1ab4 00000000 		.quad	.LVL182
 48846      00000000 
 48847 1abc 00000000 		.quad	.LVL185
 48847      00000000 
 48848 1ac4 0100     		.value	0x1
 48849 1ac6 5D       		.byte	0x5d
 48850 1ac7 00000000 		.quad	.LVL193
 48850      00000000 
 48851 1acf 00000000 		.quad	.LVL195
GAS LISTING /tmp/ccJUMvuF.s 			page 1188


 48851      00000000 
 48852 1ad7 0100     		.value	0x1
 48853 1ad9 5D       		.byte	0x5d
 48854 1ada 00000000 		.quad	.LVL208
 48854      00000000 
 48855 1ae2 00000000 		.quad	.LVL209
 48855      00000000 
 48856 1aea 0100     		.value	0x1
 48857 1aec 5D       		.byte	0x5d
 48858 1aed 00000000 		.quad	0
 48858      00000000 
 48859 1af5 00000000 		.quad	0
 48859      00000000 
 48860              	.LLST143:
 48861 1afd 00000000 		.quad	.LVL137
 48861      00000000 
 48862 1b05 00000000 		.quad	.LVL138
 48862      00000000 
 48863 1b0d 0900     		.value	0x9
 48864 1b0f 70       		.byte	0x70
 48865 1b10 00       		.sleb128 0
 48866 1b11 0C       		.byte	0xc
 48867 1b12 FFFFFFFF 		.long	0xffffffff
 48868 1b16 1A       		.byte	0x1a
 48869 1b17 9F       		.byte	0x9f
 48870 1b18 00000000 		.quad	.LVL138
 48870      00000000 
 48871 1b20 00000000 		.quad	.LVL140
 48871      00000000 
 48872 1b28 0100     		.value	0x1
 48873 1b2a 55       		.byte	0x55
 48874 1b2b 00000000 		.quad	0
 48874      00000000 
 48875 1b33 00000000 		.quad	0
 48875      00000000 
 48876              	.LLST144:
 48877 1b3b 00000000 		.quad	.LVL137
 48877      00000000 
 48878 1b43 00000000 		.quad	.LVL154
 48878      00000000 
 48879 1b4b 0100     		.value	0x1
 48880 1b4d 53       		.byte	0x53
 48881 1b4e 00000000 		.quad	.LVL154
 48881      00000000 
 48882 1b56 00000000 		.quad	.LVL156
 48882      00000000 
 48883 1b5e 0100     		.value	0x1
 48884 1b60 54       		.byte	0x54
 48885 1b61 00000000 		.quad	.LVL156
 48885      00000000 
 48886 1b69 00000000 		.quad	.LVL185
 48886      00000000 
 48887 1b71 0500     		.value	0x5
 48888 1b73 91       		.byte	0x91
 48889 1b74 A0B17F   		.sleb128 -10080
 48890 1b77 9F       		.byte	0x9f
 48891 1b78 00000000 		.quad	.LVL208
GAS LISTING /tmp/ccJUMvuF.s 			page 1189


 48891      00000000 
 48892 1b80 00000000 		.quad	.LVL209
 48892      00000000 
 48893 1b88 0500     		.value	0x5
 48894 1b8a 91       		.byte	0x91
 48895 1b8b A0B17F   		.sleb128 -10080
 48896 1b8e 9F       		.byte	0x9f
 48897 1b8f 00000000 		.quad	0
 48897      00000000 
 48898 1b97 00000000 		.quad	0
 48898      00000000 
 48899              	.LLST150:
 48900 1b9f 00000000 		.quad	.LVL139
 48900      00000000 
 48901 1ba7 00000000 		.quad	.LVL140
 48901      00000000 
 48902 1baf 0200     		.value	0x2
 48903 1bb1 31       		.byte	0x31
 48904 1bb2 9F       		.byte	0x9f
 48905 1bb3 00000000 		.quad	.LVL140
 48905      00000000 
 48906 1bbb 00000000 		.quad	.LVL146
 48906      00000000 
 48907 1bc3 0100     		.value	0x1
 48908 1bc5 54       		.byte	0x54
 48909 1bc6 00000000 		.quad	0
 48909      00000000 
 48910 1bce 00000000 		.quad	0
 48910      00000000 
 48911              	.LLST151:
 48912 1bd6 00000000 		.quad	.LVL140
 48912      00000000 
 48913 1bde 00000000 		.quad	.LVL142
 48913      00000000 
 48914 1be6 0100     		.value	0x1
 48915 1be8 50       		.byte	0x50
 48916 1be9 00000000 		.quad	.LVL142
 48916      00000000 
 48917 1bf1 00000000 		.quad	.LVL144
 48917      00000000 
 48918 1bf9 0A00     		.value	0xa
 48919 1bfb 74       		.byte	0x74
 48920 1bfc 00       		.sleb128 0
 48921 1bfd 0A       		.byte	0xa
 48922 1bfe 7002     		.value	0x270
 48923 1c00 1D       		.byte	0x1d
 48924 1c01 72       		.byte	0x72
 48925 1c02 00       		.sleb128 0
 48926 1c03 22       		.byte	0x22
 48927 1c04 9F       		.byte	0x9f
 48928 1c05 00000000 		.quad	.LVL144
 48928      00000000 
 48929 1c0d 00000000 		.quad	.LVL146
 48929      00000000 
 48930 1c15 0A00     		.value	0xa
 48931 1c17 74       		.byte	0x74
 48932 1c18 7F       		.sleb128 -1
GAS LISTING /tmp/ccJUMvuF.s 			page 1190


 48933 1c19 0A       		.byte	0xa
 48934 1c1a 7002     		.value	0x270
 48935 1c1c 1D       		.byte	0x1d
 48936 1c1d 72       		.byte	0x72
 48937 1c1e 00       		.sleb128 0
 48938 1c1f 22       		.byte	0x22
 48939 1c20 9F       		.byte	0x9f
 48940 1c21 00000000 		.quad	0
 48940      00000000 
 48941 1c29 00000000 		.quad	0
 48941      00000000 
 48942              	.LLST152:
 48943 1c31 00000000 		.quad	.LVL142
 48943      00000000 
 48944 1c39 00000000 		.quad	.LVL144
 48944      00000000 
 48945 1c41 0100     		.value	0x1
 48946 1c43 54       		.byte	0x54
 48947 1c44 00000000 		.quad	.LVL144
 48947      00000000 
 48948 1c4c 00000000 		.quad	.LVL146
 48948      00000000 
 48949 1c54 0300     		.value	0x3
 48950 1c56 74       		.byte	0x74
 48951 1c57 7F       		.sleb128 -1
 48952 1c58 9F       		.byte	0x9f
 48953 1c59 00000000 		.quad	0
 48953      00000000 
 48954 1c61 00000000 		.quad	0
 48954      00000000 
 48955              	.LLST154:
 48956 1c69 00000000 		.quad	.LVL142
 48956      00000000 
 48957 1c71 00000000 		.quad	.LVL144
 48957      00000000 
 48958 1c79 0700     		.value	0x7
 48959 1c7b 74       		.byte	0x74
 48960 1c7c 00       		.sleb128 0
 48961 1c7d 0A       		.byte	0xa
 48962 1c7e 7002     		.value	0x270
 48963 1c80 1D       		.byte	0x1d
 48964 1c81 9F       		.byte	0x9f
 48965 1c82 00000000 		.quad	.LVL144
 48965      00000000 
 48966 1c8a 00000000 		.quad	.LVL146
 48966      00000000 
 48967 1c92 0700     		.value	0x7
 48968 1c94 74       		.byte	0x74
 48969 1c95 7F       		.sleb128 -1
 48970 1c96 0A       		.byte	0xa
 48971 1c97 7002     		.value	0x270
 48972 1c99 1D       		.byte	0x1d
 48973 1c9a 9F       		.byte	0x9f
 48974 1c9b 00000000 		.quad	0
 48974      00000000 
 48975 1ca3 00000000 		.quad	0
 48975      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1191


 48976              	.LLST155:
 48977 1cab 00000000 		.quad	.LVL142
 48977      00000000 
 48978 1cb3 00000000 		.quad	.LVL144
 48978      00000000 
 48979 1cbb 0A00     		.value	0xa
 48980 1cbd 74       		.byte	0x74
 48981 1cbe 00       		.sleb128 0
 48982 1cbf 0A       		.byte	0xa
 48983 1cc0 7002     		.value	0x270
 48984 1cc2 1D       		.byte	0x1d
 48985 1cc3 72       		.byte	0x72
 48986 1cc4 00       		.sleb128 0
 48987 1cc5 22       		.byte	0x22
 48988 1cc6 9F       		.byte	0x9f
 48989 1cc7 00000000 		.quad	.LVL144
 48989      00000000 
 48990 1ccf 00000000 		.quad	.LVL146
 48990      00000000 
 48991 1cd7 0A00     		.value	0xa
 48992 1cd9 74       		.byte	0x74
 48993 1cda 7F       		.sleb128 -1
 48994 1cdb 0A       		.byte	0xa
 48995 1cdc 7002     		.value	0x270
 48996 1cde 1D       		.byte	0x1d
 48997 1cdf 72       		.byte	0x72
 48998 1ce0 00       		.sleb128 0
 48999 1ce1 22       		.byte	0x22
 49000 1ce2 9F       		.byte	0x9f
 49001 1ce3 00000000 		.quad	0
 49001      00000000 
 49002 1ceb 00000000 		.quad	0
 49002      00000000 
 49003              	.LLST157:
 49004 1cf3 00000000 		.quad	.LVL142
 49004      00000000 
 49005 1cfb 00000000 		.quad	.LVL143
 49005      00000000 
 49006 1d03 0A00     		.value	0xa
 49007 1d05 74       		.byte	0x74
 49008 1d06 00       		.sleb128 0
 49009 1d07 0A       		.byte	0xa
 49010 1d08 7002     		.value	0x270
 49011 1d0a 1D       		.byte	0x1d
 49012 1d0b 72       		.byte	0x72
 49013 1d0c 00       		.sleb128 0
 49014 1d0d 22       		.byte	0x22
 49015 1d0e 9F       		.byte	0x9f
 49016 1d0f 00000000 		.quad	.LVL143
 49016      00000000 
 49017 1d17 00000000 		.quad	.LVL147-1
 49017      00000000 
 49018 1d1f 0100     		.value	0x1
 49019 1d21 50       		.byte	0x50
 49020 1d22 00000000 		.quad	0
 49020      00000000 
 49021 1d2a 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1192


 49021      00000000 
 49022              	.LLST158:
 49023 1d32 00000000 		.quad	.LVL145
 49023      00000000 
 49024 1d3a 00000000 		.quad	.LVL185
 49024      00000000 
 49025 1d42 0A00     		.value	0xa
 49026 1d44 03       		.byte	0x3
 49027 1d45 00000000 		.quad	.LC5
 49027      00000000 
 49028 1d4d 9F       		.byte	0x9f
 49029 1d4e 00000000 		.quad	.LVL208
 49029      00000000 
 49030 1d56 00000000 		.quad	.LVL209
 49030      00000000 
 49031 1d5e 0A00     		.value	0xa
 49032 1d60 03       		.byte	0x3
 49033 1d61 00000000 		.quad	.LC5
 49033      00000000 
 49034 1d69 9F       		.byte	0x9f
 49035 1d6a 00000000 		.quad	0
 49035      00000000 
 49036 1d72 00000000 		.quad	0
 49036      00000000 
 49037              	.LLST159:
 49038 1d7a 00000000 		.quad	.LVL147
 49038      00000000 
 49039 1d82 00000000 		.quad	.LVL185
 49039      00000000 
 49040 1d8a 0400     		.value	0x4
 49041 1d8c 0A       		.byte	0xa
 49042 1d8d E803     		.value	0x3e8
 49043 1d8f 9F       		.byte	0x9f
 49044 1d90 00000000 		.quad	.LVL208
 49044      00000000 
 49045 1d98 00000000 		.quad	.LVL209
 49045      00000000 
 49046 1da0 0400     		.value	0x4
 49047 1da2 0A       		.byte	0xa
 49048 1da3 E803     		.value	0x3e8
 49049 1da5 9F       		.byte	0x9f
 49050 1da6 00000000 		.quad	0
 49050      00000000 
 49051 1dae 00000000 		.quad	0
 49051      00000000 
 49052              	.LLST160:
 49053 1db6 00000000 		.quad	.LVL149
 49053      00000000 
 49054 1dbe 00000000 		.quad	.LVL185
 49054      00000000 
 49055 1dc6 0A00     		.value	0xa
 49056 1dc8 03       		.byte	0x3
 49057 1dc9 00000000 		.quad	.LC6
 49057      00000000 
 49058 1dd1 9F       		.byte	0x9f
 49059 1dd2 00000000 		.quad	.LVL208
 49059      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1193


 49060 1dda 00000000 		.quad	.LVL209
 49060      00000000 
 49061 1de2 0A00     		.value	0xa
 49062 1de4 03       		.byte	0x3
 49063 1de5 00000000 		.quad	.LC6
 49063      00000000 
 49064 1ded 9F       		.byte	0x9f
 49065 1dee 00000000 		.quad	0
 49065      00000000 
 49066 1df6 00000000 		.quad	0
 49066      00000000 
 49067              	.LLST161:
 49068 1dfe 00000000 		.quad	.LVL149
 49068      00000000 
 49069 1e06 00000000 		.quad	.LVL150-1
 49069      00000000 
 49070 1e0e 0100     		.value	0x1
 49071 1e10 50       		.byte	0x50
 49072 1e11 00000000 		.quad	.LVL150-1
 49072      00000000 
 49073 1e19 00000000 		.quad	.LVL157
 49073      00000000 
 49074 1e21 0100     		.value	0x1
 49075 1e23 5E       		.byte	0x5e
 49076 1e24 00000000 		.quad	0
 49076      00000000 
 49077 1e2c 00000000 		.quad	0
 49077      00000000 
 49078              	.LLST162:
 49079 1e34 00000000 		.quad	.LVL150
 49079      00000000 
 49080 1e3c 00000000 		.quad	.LVL157
 49080      00000000 
 49081 1e44 0100     		.value	0x1
 49082 1e46 5E       		.byte	0x5e
 49083 1e47 00000000 		.quad	0
 49083      00000000 
 49084 1e4f 00000000 		.quad	0
 49084      00000000 
 49085              	.LLST163:
 49086 1e57 00000000 		.quad	.LVL151
 49086      00000000 
 49087 1e5f 00000000 		.quad	.LVL185
 49087      00000000 
 49088 1e67 0600     		.value	0x6
 49089 1e69 F2       		.byte	0xf2
 49090 1e6a 00000000 		.long	.Ldebug_info0+70536
 49091 1e6e 00       		.sleb128 0
 49092 1e6f 00000000 		.quad	.LVL208
 49092      00000000 
 49093 1e77 00000000 		.quad	.LVL209
 49093      00000000 
 49094 1e7f 0600     		.value	0x6
 49095 1e81 F2       		.byte	0xf2
 49096 1e82 00000000 		.long	.Ldebug_info0+70536
 49097 1e86 00       		.sleb128 0
 49098 1e87 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1194


 49098      00000000 
 49099 1e8f 00000000 		.quad	0
 49099      00000000 
 49100              	.LLST164:
 49101 1e97 00000000 		.quad	.LVL155
 49101      00000000 
 49102 1e9f 00000000 		.quad	.LVL156
 49102      00000000 
 49103 1ea7 0100     		.value	0x1
 49104 1ea9 54       		.byte	0x54
 49105 1eaa 00000000 		.quad	.LVL156
 49105      00000000 
 49106 1eb2 00000000 		.quad	.LVL185
 49106      00000000 
 49107 1eba 0500     		.value	0x5
 49108 1ebc 91       		.byte	0x91
 49109 1ebd A0B17F   		.sleb128 -10080
 49110 1ec0 9F       		.byte	0x9f
 49111 1ec1 00000000 		.quad	.LVL208
 49111      00000000 
 49112 1ec9 00000000 		.quad	.LVL209
 49112      00000000 
 49113 1ed1 0500     		.value	0x5
 49114 1ed3 91       		.byte	0x91
 49115 1ed4 A0B17F   		.sleb128 -10080
 49116 1ed7 9F       		.byte	0x9f
 49117 1ed8 00000000 		.quad	0
 49117      00000000 
 49118 1ee0 00000000 		.quad	0
 49118      00000000 
 49119              	.LLST165:
 49120 1ee8 00000000 		.quad	.LVL155
 49120      00000000 
 49121 1ef0 00000000 		.quad	.LVL185
 49121      00000000 
 49122 1ef8 0600     		.value	0x6
 49123 1efa F2       		.byte	0xf2
 49124 1efb 00000000 		.long	.Ldebug_info0+68903
 49125 1eff 00       		.sleb128 0
 49126 1f00 00000000 		.quad	.LVL208
 49126      00000000 
 49127 1f08 00000000 		.quad	.LVL209
 49127      00000000 
 49128 1f10 0600     		.value	0x6
 49129 1f12 F2       		.byte	0xf2
 49130 1f13 00000000 		.long	.Ldebug_info0+68903
 49131 1f17 00       		.sleb128 0
 49132 1f18 00000000 		.quad	0
 49132      00000000 
 49133 1f20 00000000 		.quad	0
 49133      00000000 
 49134              	.LLST168:
 49135 1f28 00000000 		.quad	.LVL155
 49135      00000000 
 49136 1f30 00000000 		.quad	.LVL170
 49136      00000000 
 49137 1f38 0100     		.value	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1195


 49138 1f3a 56       		.byte	0x56
 49139 1f3b 00000000 		.quad	.LVL170
 49139      00000000 
 49140 1f43 00000000 		.quad	.LVL181
 49140      00000000 
 49141 1f4b 0300     		.value	0x3
 49142 1f4d 7E       		.byte	0x7e
 49143 1f4e 78       		.sleb128 -8
 49144 1f4f 9F       		.byte	0x9f
 49145 1f50 00000000 		.quad	.LVL181
 49145      00000000 
 49146 1f58 00000000 		.quad	.LVL185
 49146      00000000 
 49147 1f60 0400     		.value	0x4
 49148 1f62 91       		.byte	0x91
 49149 1f63 B058     		.sleb128 -5072
 49150 1f65 9F       		.byte	0x9f
 49151 1f66 00000000 		.quad	.LVL208
 49151      00000000 
 49152 1f6e 00000000 		.quad	.LVL209
 49152      00000000 
 49153 1f76 0300     		.value	0x3
 49154 1f78 7E       		.byte	0x7e
 49155 1f79 78       		.sleb128 -8
 49156 1f7a 9F       		.byte	0x9f
 49157 1f7b 00000000 		.quad	0
 49157      00000000 
 49158 1f83 00000000 		.quad	0
 49158      00000000 
 49159              	.LLST170:
 49160 1f8b 00000000 		.quad	.LVL155
 49160      00000000 
 49161 1f93 00000000 		.quad	.LVL156
 49161      00000000 
 49162 1f9b 0100     		.value	0x1
 49163 1f9d 55       		.byte	0x55
 49164 1f9e 00000000 		.quad	.LVL156
 49164      00000000 
 49165 1fa6 00000000 		.quad	.LVL185
 49165      00000000 
 49166 1fae 0400     		.value	0x4
 49167 1fb0 91       		.byte	0x91
 49168 1fb1 B858     		.sleb128 -5064
 49169 1fb3 9F       		.byte	0x9f
 49170 1fb4 00000000 		.quad	.LVL208
 49170      00000000 
 49171 1fbc 00000000 		.quad	.LVL209
 49171      00000000 
 49172 1fc4 0400     		.value	0x4
 49173 1fc6 91       		.byte	0x91
 49174 1fc7 B858     		.sleb128 -5064
 49175 1fc9 9F       		.byte	0x9f
 49176 1fca 00000000 		.quad	0
 49176      00000000 
 49177 1fd2 00000000 		.quad	0
 49177      00000000 
 49178              	.LLST175:
GAS LISTING /tmp/ccJUMvuF.s 			page 1196


 49179 1fda 00000000 		.quad	.LVL156
 49179      00000000 
 49180 1fe2 00000000 		.quad	.LVL179
 49180      00000000 
 49181 1fea 0100     		.value	0x1
 49182 1fec 5C       		.byte	0x5c
 49183 1fed 00000000 		.quad	.LVL179
 49183      00000000 
 49184 1ff5 00000000 		.quad	.LVL182
 49184      00000000 
 49185 1ffd 0100     		.value	0x1
 49186 1fff 50       		.byte	0x50
 49187 2000 00000000 		.quad	.LVL182
 49187      00000000 
 49188 2008 00000000 		.quad	.LVL185
 49188      00000000 
 49189 2010 0100     		.value	0x1
 49190 2012 5C       		.byte	0x5c
 49191 2013 00000000 		.quad	.LVL208
 49191      00000000 
 49192 201b 00000000 		.quad	.LVL209
 49192      00000000 
 49193 2023 0100     		.value	0x1
 49194 2025 5C       		.byte	0x5c
 49195 2026 00000000 		.quad	0
 49195      00000000 
 49196 202e 00000000 		.quad	0
 49196      00000000 
 49197              	.LLST178:
 49198 2036 00000000 		.quad	.LVL156
 49198      00000000 
 49199 203e 00000000 		.quad	.LVL179
 49199      00000000 
 49200 2046 0300     		.value	0x3
 49201 2048 7C       		.byte	0x7c
 49202 2049 08       		.sleb128 8
 49203 204a 9F       		.byte	0x9f
 49204 204b 00000000 		.quad	.LVL179
 49204      00000000 
 49205 2053 00000000 		.quad	.LVL182
 49205      00000000 
 49206 205b 0300     		.value	0x3
 49207 205d 70       		.byte	0x70
 49208 205e 08       		.sleb128 8
 49209 205f 9F       		.byte	0x9f
 49210 2060 00000000 		.quad	.LVL182
 49210      00000000 
 49211 2068 00000000 		.quad	.LVL185
 49211      00000000 
 49212 2070 0300     		.value	0x3
 49213 2072 7C       		.byte	0x7c
 49214 2073 08       		.sleb128 8
 49215 2074 9F       		.byte	0x9f
 49216 2075 00000000 		.quad	.LVL208
 49216      00000000 
 49217 207d 00000000 		.quad	.LVL209
 49217      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1197


 49218 2085 0300     		.value	0x3
 49219 2087 7C       		.byte	0x7c
 49220 2088 08       		.sleb128 8
 49221 2089 9F       		.byte	0x9f
 49222 208a 00000000 		.quad	0
 49222      00000000 
 49223 2092 00000000 		.quad	0
 49223      00000000 
 49224              	.LLST179:
 49225 209a 00000000 		.quad	.LVL156
 49225      00000000 
 49226 20a2 00000000 		.quad	.LVL170
 49226      00000000 
 49227 20aa 0100     		.value	0x1
 49228 20ac 56       		.byte	0x56
 49229 20ad 00000000 		.quad	.LVL170
 49229      00000000 
 49230 20b5 00000000 		.quad	.LVL181
 49230      00000000 
 49231 20bd 0300     		.value	0x3
 49232 20bf 7E       		.byte	0x7e
 49233 20c0 78       		.sleb128 -8
 49234 20c1 9F       		.byte	0x9f
 49235 20c2 00000000 		.quad	.LVL181
 49235      00000000 
 49236 20ca 00000000 		.quad	.LVL185
 49236      00000000 
 49237 20d2 0400     		.value	0x4
 49238 20d4 91       		.byte	0x91
 49239 20d5 B058     		.sleb128 -5072
 49240 20d7 9F       		.byte	0x9f
 49241 20d8 00000000 		.quad	.LVL208
 49241      00000000 
 49242 20e0 00000000 		.quad	.LVL209
 49242      00000000 
 49243 20e8 0300     		.value	0x3
 49244 20ea 7E       		.byte	0x7e
 49245 20eb 78       		.sleb128 -8
 49246 20ec 9F       		.byte	0x9f
 49247 20ed 00000000 		.quad	0
 49247      00000000 
 49248 20f5 00000000 		.quad	0
 49248      00000000 
 49249              	.LLST180:
 49250 20fd 00000000 		.quad	.LVL156
 49250      00000000 
 49251 2105 00000000 		.quad	.LVL158
 49251      00000000 
 49252 210d 0300     		.value	0x3
 49253 210f 5F       		.byte	0x5f
 49254 2110 93       		.byte	0x93
 49255 2111 08       		.uleb128 0x8
 49256 2112 00000000 		.quad	.LVL158
 49256      00000000 
 49257 211a 00000000 		.quad	.LVL160
 49257      00000000 
 49258 2122 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1198


 49259 2124 5F       		.byte	0x5f
 49260 2125 93       		.byte	0x93
 49261 2126 08       		.uleb128 0x8
 49262 2127 00000000 		.quad	.LVL160
 49262      00000000 
 49263 212f 00000000 		.quad	.LVL161
 49263      00000000 
 49264 2137 0500     		.value	0x5
 49265 2139 7F       		.byte	0x7f
 49266 213a 7C       		.sleb128 -4
 49267 213b 9F       		.byte	0x9f
 49268 213c 93       		.byte	0x93
 49269 213d 08       		.uleb128 0x8
 49270 213e 00000000 		.quad	0
 49270      00000000 
 49271 2146 00000000 		.quad	0
 49271      00000000 
 49272              	.LLST181:
 49273 214e 00000000 		.quad	.LVL158
 49273      00000000 
 49274 2156 00000000 		.quad	.LVL162
 49274      00000000 
 49275 215e 0100     		.value	0x1
 49276 2160 56       		.byte	0x56
 49277 2161 00000000 		.quad	0
 49277      00000000 
 49278 2169 00000000 		.quad	0
 49278      00000000 
 49279              	.LLST183:
 49280 2171 00000000 		.quad	.LVL158
 49280      00000000 
 49281 2179 00000000 		.quad	.LVL162
 49281      00000000 
 49282 2181 0400     		.value	0x4
 49283 2183 91       		.byte	0x91
 49284 2184 B858     		.sleb128 -5064
 49285 2186 9F       		.byte	0x9f
 49286 2187 00000000 		.quad	0
 49286      00000000 
 49287 218f 00000000 		.quad	0
 49287      00000000 
 49288              	.LLST185:
 49289 2197 00000000 		.quad	.LVL162
 49289      00000000 
 49290 219f 00000000 		.quad	.LVL185
 49290      00000000 
 49291 21a7 0600     		.value	0x6
 49292 21a9 F2       		.byte	0xf2
 49293 21aa 00000000 		.long	.Ldebug_info0+70536
 49294 21ae 00       		.sleb128 0
 49295 21af 00000000 		.quad	.LVL208
 49295      00000000 
 49296 21b7 00000000 		.quad	.LVL209
 49296      00000000 
 49297 21bf 0600     		.value	0x6
 49298 21c1 F2       		.byte	0xf2
 49299 21c2 00000000 		.long	.Ldebug_info0+70536
GAS LISTING /tmp/ccJUMvuF.s 			page 1199


 49300 21c6 00       		.sleb128 0
 49301 21c7 00000000 		.quad	0
 49301      00000000 
 49302 21cf 00000000 		.quad	0
 49302      00000000 
 49303              	.LLST186:
 49304 21d7 00000000 		.quad	.LVL164
 49304      00000000 
 49305 21df 00000000 		.quad	.LVL165-1
 49305      00000000 
 49306 21e7 0100     		.value	0x1
 49307 21e9 61       		.byte	0x61
 49308 21ea 00000000 		.quad	.LVL165-1
 49308      00000000 
 49309 21f2 00000000 		.quad	.LVL185
 49309      00000000 
 49310 21fa 0400     		.value	0x4
 49311 21fc 91       		.byte	0x91
 49312 21fd F8897F   		.sleb128 -15112
 49313 2200 00000000 		.quad	.LVL208
 49313      00000000 
 49314 2208 00000000 		.quad	.LVL209
 49314      00000000 
 49315 2210 0400     		.value	0x4
 49316 2212 91       		.byte	0x91
 49317 2213 F8897F   		.sleb128 -15112
 49318 2216 00000000 		.quad	0
 49318      00000000 
 49319 221e 00000000 		.quad	0
 49319      00000000 
 49320              	.LLST187:
 49321 2226 00000000 		.quad	.LVL164
 49321      00000000 
 49322 222e 00000000 		.quad	.LVL185
 49322      00000000 
 49323 2236 0A00     		.value	0xa
 49324 2238 03       		.byte	0x3
 49325 2239 00000000 		.quad	.LC7
 49325      00000000 
 49326 2241 9F       		.byte	0x9f
 49327 2242 00000000 		.quad	.LVL208
 49327      00000000 
 49328 224a 00000000 		.quad	.LVL209
 49328      00000000 
 49329 2252 0A00     		.value	0xa
 49330 2254 03       		.byte	0x3
 49331 2255 00000000 		.quad	.LC7
 49331      00000000 
 49332 225d 9F       		.byte	0x9f
 49333 225e 00000000 		.quad	0
 49333      00000000 
 49334 2266 00000000 		.quad	0
 49334      00000000 
 49335              	.LLST188:
 49336 226e 00000000 		.quad	.LVL165
 49336      00000000 
 49337 2276 00000000 		.quad	.LVL166
GAS LISTING /tmp/ccJUMvuF.s 			page 1200


 49337      00000000 
 49338 227e 1A00     		.value	0x1a
 49339 2280 91       		.byte	0x91
 49340 2281 F8897F   		.sleb128 -15112
 49341 2284 F6       		.byte	0xf6
 49342 2285 08       		.byte	0x8
 49343 2286 29       		.uleb128 0x29
 49344 2287 77       		.byte	0x77
 49345 2288 00       		.sleb128 0
 49346 2289 F6       		.byte	0xf6
 49347 228a 08       		.byte	0x8
 49348 228b 29       		.uleb128 0x29
 49349 228c 1C       		.byte	0x1c
 49350 228d F4       		.byte	0xf4
 49351 228e 29       		.uleb128 0x29
 49352 228f 08       		.byte	0x8
 49353 2290 00000000 		.long	0
 49354 2294 00408F40 		.long	0x408f4000
 49355 2298 1E       		.byte	0x1e
 49356 2299 9F       		.byte	0x9f
 49357 229a 00000000 		.quad	.LVL166
 49357      00000000 
 49358 22a2 00000000 		.quad	.LVL167-1
 49358      00000000 
 49359 22aa 0100     		.value	0x1
 49360 22ac 61       		.byte	0x61
 49361 22ad 00000000 		.quad	.LVL167-1
 49361      00000000 
 49362 22b5 00000000 		.quad	.LVL176
 49362      00000000 
 49363 22bd 1A00     		.value	0x1a
 49364 22bf 91       		.byte	0x91
 49365 22c0 F8897F   		.sleb128 -15112
 49366 22c3 F6       		.byte	0xf6
 49367 22c4 08       		.byte	0x8
 49368 22c5 29       		.uleb128 0x29
 49369 22c6 77       		.byte	0x77
 49370 22c7 00       		.sleb128 0
 49371 22c8 F6       		.byte	0xf6
 49372 22c9 08       		.byte	0x8
 49373 22ca 29       		.uleb128 0x29
 49374 22cb 1C       		.byte	0x1c
 49375 22cc F4       		.byte	0xf4
 49376 22cd 29       		.uleb128 0x29
 49377 22ce 08       		.byte	0x8
 49378 22cf 00000000 		.long	0
 49379 22d3 00408F40 		.long	0x408f4000
 49380 22d7 1E       		.byte	0x1e
 49381 22d8 9F       		.byte	0x9f
 49382 22d9 00000000 		.quad	.LVL176
 49382      00000000 
 49383 22e1 00000000 		.quad	.LVL182
 49383      00000000 
 49384 22e9 1C00     		.value	0x1c
 49385 22eb 91       		.byte	0x91
 49386 22ec F8897F   		.sleb128 -15112
 49387 22ef F6       		.byte	0xf6
GAS LISTING /tmp/ccJUMvuF.s 			page 1201


 49388 22f0 08       		.byte	0x8
 49389 22f1 29       		.uleb128 0x29
 49390 22f2 91       		.byte	0x91
 49391 22f3 F0897F   		.sleb128 -15120
 49392 22f6 F6       		.byte	0xf6
 49393 22f7 08       		.byte	0x8
 49394 22f8 29       		.uleb128 0x29
 49395 22f9 1C       		.byte	0x1c
 49396 22fa F4       		.byte	0xf4
 49397 22fb 29       		.uleb128 0x29
 49398 22fc 08       		.byte	0x8
 49399 22fd 00000000 		.long	0
 49400 2301 00408F40 		.long	0x408f4000
 49401 2305 1E       		.byte	0x1e
 49402 2306 9F       		.byte	0x9f
 49403 2307 00000000 		.quad	.LVL182
 49403      00000000 
 49404 230f 00000000 		.quad	.LVL185
 49404      00000000 
 49405 2317 1A00     		.value	0x1a
 49406 2319 91       		.byte	0x91
 49407 231a F8897F   		.sleb128 -15112
 49408 231d F6       		.byte	0xf6
 49409 231e 08       		.byte	0x8
 49410 231f 29       		.uleb128 0x29
 49411 2320 77       		.byte	0x77
 49412 2321 00       		.sleb128 0
 49413 2322 F6       		.byte	0xf6
 49414 2323 08       		.byte	0x8
 49415 2324 29       		.uleb128 0x29
 49416 2325 1C       		.byte	0x1c
 49417 2326 F4       		.byte	0xf4
 49418 2327 29       		.uleb128 0x29
 49419 2328 08       		.byte	0x8
 49420 2329 00000000 		.long	0
 49421 232d 00408F40 		.long	0x408f4000
 49422 2331 1E       		.byte	0x1e
 49423 2332 9F       		.byte	0x9f
 49424 2333 00000000 		.quad	.LVL208
 49424      00000000 
 49425 233b 00000000 		.quad	.LVL209
 49425      00000000 
 49426 2343 1A00     		.value	0x1a
 49427 2345 91       		.byte	0x91
 49428 2346 F8897F   		.sleb128 -15112
 49429 2349 F6       		.byte	0xf6
 49430 234a 08       		.byte	0x8
 49431 234b 29       		.uleb128 0x29
 49432 234c 77       		.byte	0x77
 49433 234d 00       		.sleb128 0
 49434 234e F6       		.byte	0xf6
 49435 234f 08       		.byte	0x8
 49436 2350 29       		.uleb128 0x29
 49437 2351 1C       		.byte	0x1c
 49438 2352 F4       		.byte	0xf4
 49439 2353 29       		.uleb128 0x29
 49440 2354 08       		.byte	0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1202


 49441 2355 00000000 		.long	0
 49442 2359 00408F40 		.long	0x408f4000
 49443 235d 1E       		.byte	0x1e
 49444 235e 9F       		.byte	0x9f
 49445 235f 00000000 		.quad	0
 49445      00000000 
 49446 2367 00000000 		.quad	0
 49446      00000000 
 49447              	.LLST189:
 49448 236f 00000000 		.quad	.LVL168
 49448      00000000 
 49449 2377 00000000 		.quad	.LVL185
 49449      00000000 
 49450 237f 0A00     		.value	0xa
 49451 2381 03       		.byte	0x3
 49452 2382 00000000 		.quad	.LC9
 49452      00000000 
 49453 238a 9F       		.byte	0x9f
 49454 238b 00000000 		.quad	.LVL208
 49454      00000000 
 49455 2393 00000000 		.quad	.LVL209
 49455      00000000 
 49456 239b 0A00     		.value	0xa
 49457 239d 03       		.byte	0x3
 49458 239e 00000000 		.quad	.LC9
 49458      00000000 
 49459 23a6 9F       		.byte	0x9f
 49460 23a7 00000000 		.quad	0
 49460      00000000 
 49461 23af 00000000 		.quad	0
 49461      00000000 
 49462              	.LLST190:
 49463 23b7 00000000 		.quad	.LVL168
 49463      00000000 
 49464 23bf 00000000 		.quad	.LVL169-1
 49464      00000000 
 49465 23c7 0100     		.value	0x1
 49466 23c9 50       		.byte	0x50
 49467 23ca 00000000 		.quad	.LVL169-1
 49467      00000000 
 49468 23d2 00000000 		.quad	.LVL177
 49468      00000000 
 49469 23da 0100     		.value	0x1
 49470 23dc 53       		.byte	0x53
 49471 23dd 00000000 		.quad	.LVL182
 49471      00000000 
 49472 23e5 00000000 		.quad	.LVL185
 49472      00000000 
 49473 23ed 0100     		.value	0x1
 49474 23ef 53       		.byte	0x53
 49475 23f0 00000000 		.quad	.LVL208
 49475      00000000 
 49476 23f8 00000000 		.quad	.LVL209
 49476      00000000 
 49477 2400 0100     		.value	0x1
 49478 2402 53       		.byte	0x53
 49479 2403 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1203


 49479      00000000 
 49480 240b 00000000 		.quad	0
 49480      00000000 
 49481              	.LLST191:
 49482 2413 00000000 		.quad	.LVL169
 49482      00000000 
 49483 241b 00000000 		.quad	.LVL177
 49483      00000000 
 49484 2423 0100     		.value	0x1
 49485 2425 53       		.byte	0x53
 49486 2426 00000000 		.quad	.LVL182
 49486      00000000 
 49487 242e 00000000 		.quad	.LVL185
 49487      00000000 
 49488 2436 0100     		.value	0x1
 49489 2438 53       		.byte	0x53
 49490 2439 00000000 		.quad	.LVL208
 49490      00000000 
 49491 2441 00000000 		.quad	.LVL209
 49491      00000000 
 49492 2449 0100     		.value	0x1
 49493 244b 53       		.byte	0x53
 49494 244c 00000000 		.quad	0
 49494      00000000 
 49495 2454 00000000 		.quad	0
 49495      00000000 
 49496              	.LLST192:
 49497 245c 00000000 		.quad	.LVL169
 49497      00000000 
 49498 2464 00000000 		.quad	.LVL185
 49498      00000000 
 49499 246c 0200     		.value	0x2
 49500 246e 3A       		.byte	0x3a
 49501 246f 9F       		.byte	0x9f
 49502 2470 00000000 		.quad	.LVL208
 49502      00000000 
 49503 2478 00000000 		.quad	.LVL209
 49503      00000000 
 49504 2480 0200     		.value	0x2
 49505 2482 3A       		.byte	0x3a
 49506 2483 9F       		.byte	0x9f
 49507 2484 00000000 		.quad	0
 49507      00000000 
 49508 248c 00000000 		.quad	0
 49508      00000000 
 49509              	.LLST193:
 49510 2494 00000000 		.quad	.LVL169
 49510      00000000 
 49511 249c 00000000 		.quad	.LVL172
 49511      00000000 
 49512 24a4 0A00     		.value	0xa
 49513 24a6 73       		.byte	0x73
 49514 24a7 00       		.sleb128 0
 49515 24a8 73       		.byte	0x73
 49516 24a9 00       		.sleb128 0
 49517 24aa 06       		.byte	0x6
 49518 24ab 48       		.byte	0x48
GAS LISTING /tmp/ccJUMvuF.s 			page 1204


 49519 24ac 1C       		.byte	0x1c
 49520 24ad 06       		.byte	0x6
 49521 24ae 22       		.byte	0x22
 49522 24af 9F       		.byte	0x9f
 49523 24b0 00000000 		.quad	.LVL182
 49523      00000000 
 49524 24b8 00000000 		.quad	.LVL183-1
 49524      00000000 
 49525 24c0 0600     		.value	0x6
 49526 24c2 73       		.byte	0x73
 49527 24c3 00       		.sleb128 0
 49528 24c4 70       		.byte	0x70
 49529 24c5 00       		.sleb128 0
 49530 24c6 22       		.byte	0x22
 49531 24c7 9F       		.byte	0x9f
 49532 24c8 00000000 		.quad	.LVL208
 49532      00000000 
 49533 24d0 00000000 		.quad	.LVL209-1
 49533      00000000 
 49534 24d8 0600     		.value	0x6
 49535 24da 73       		.byte	0x73
 49536 24db 00       		.sleb128 0
 49537 24dc 70       		.byte	0x70
 49538 24dd 00       		.sleb128 0
 49539 24de 22       		.byte	0x22
 49540 24df 9F       		.byte	0x9f
 49541 24e0 00000000 		.quad	0
 49541      00000000 
 49542 24e8 00000000 		.quad	0
 49542      00000000 
 49543              	.LLST194:
 49544 24f0 00000000 		.quad	.LVL170
 49544      00000000 
 49545 24f8 00000000 		.quad	.LVL178
 49545      00000000 
 49546 2500 0100     		.value	0x1
 49547 2502 56       		.byte	0x56
 49548 2503 00000000 		.quad	.LVL182
 49548      00000000 
 49549 250b 00000000 		.quad	.LVL185
 49549      00000000 
 49550 2513 0100     		.value	0x1
 49551 2515 56       		.byte	0x56
 49552 2516 00000000 		.quad	.LVL208
 49552      00000000 
 49553 251e 00000000 		.quad	.LVL209
 49553      00000000 
 49554 2526 0100     		.value	0x1
 49555 2528 56       		.byte	0x56
 49556 2529 00000000 		.quad	0
 49556      00000000 
 49557 2531 00000000 		.quad	0
 49557      00000000 
 49558              	.LLST195:
 49559 2539 00000000 		.quad	.LVL171
 49559      00000000 
 49560 2541 00000000 		.quad	.LVL185
GAS LISTING /tmp/ccJUMvuF.s 			page 1205


 49560      00000000 
 49561 2549 0200     		.value	0x2
 49562 254b 3A       		.byte	0x3a
 49563 254c 9F       		.byte	0x9f
 49564 254d 00000000 		.quad	0
 49564      00000000 
 49565 2555 00000000 		.quad	0
 49565      00000000 
 49566              	.LLST196:
 49567 255d 00000000 		.quad	.LVL171
 49567      00000000 
 49568 2565 00000000 		.quad	.LVL178
 49568      00000000 
 49569 256d 0100     		.value	0x1
 49570 256f 56       		.byte	0x56
 49571 2570 00000000 		.quad	.LVL182
 49571      00000000 
 49572 2578 00000000 		.quad	.LVL185
 49572      00000000 
 49573 2580 0100     		.value	0x1
 49574 2582 56       		.byte	0x56
 49575 2583 00000000 		.quad	0
 49575      00000000 
 49576 258b 00000000 		.quad	0
 49576      00000000 
 49577              	.LLST197:
 49578 2593 00000000 		.quad	.LVL182
 49578      00000000 
 49579 259b 00000000 		.quad	.LVL185
 49579      00000000 
 49580 25a3 0200     		.value	0x2
 49581 25a5 3A       		.byte	0x3a
 49582 25a6 9F       		.byte	0x9f
 49583 25a7 00000000 		.quad	0
 49583      00000000 
 49584 25af 00000000 		.quad	0
 49584      00000000 
 49585              	.LLST198:
 49586 25b7 00000000 		.quad	.LVL182
 49586      00000000 
 49587 25bf 00000000 		.quad	.LVL185
 49587      00000000 
 49588 25c7 0100     		.value	0x1
 49589 25c9 56       		.byte	0x56
 49590 25ca 00000000 		.quad	0
 49590      00000000 
 49591 25d2 00000000 		.quad	0
 49591      00000000 
 49592              	.LLST199:
 49593 25da 00000000 		.quad	.LVL173
 49593      00000000 
 49594 25e2 00000000 		.quad	.LVL174-1
 49594      00000000 
 49595 25ea 0100     		.value	0x1
 49596 25ec 50       		.byte	0x50
 49597 25ed 00000000 		.quad	0
 49597      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1206


 49598 25f5 00000000 		.quad	0
 49598      00000000 
 49599              	.LLST200:
 49600 25fd 00000000 		.quad	.LVL174
 49600      00000000 
 49601 2605 00000000 		.quad	.LVL180
 49601      00000000 
 49602 260d 0100     		.value	0x1
 49603 260f 5D       		.byte	0x5d
 49604 2610 00000000 		.quad	.LVL180
 49604      00000000 
 49605 2618 00000000 		.quad	.LVL182
 49605      00000000 
 49606 2620 0500     		.value	0x5
 49607 2622 91       		.byte	0x91
 49608 2623 908A7F   		.sleb128 -15088
 49609 2626 9F       		.byte	0x9f
 49610 2627 00000000 		.quad	0
 49610      00000000 
 49611 262f 00000000 		.quad	0
 49611      00000000 
 49612              	.LLST201:
 49613 2637 00000000 		.quad	.LVL194
 49613      00000000 
 49614 263f 00000000 		.quad	.LVL195
 49614      00000000 
 49615 2647 0100     		.value	0x1
 49616 2649 5D       		.byte	0x5d
 49617 264a 00000000 		.quad	0
 49617      00000000 
 49618 2652 00000000 		.quad	0
 49618      00000000 
 49619              	.LLST202:
 49620 265a 00000000 		.quad	.LVL195
 49620      00000000 
 49621 2662 00000000 		.quad	.LVL199
 49621      00000000 
 49622 266a 0100     		.value	0x1
 49623 266c 5C       		.byte	0x5c
 49624 266d 00000000 		.quad	0
 49624      00000000 
 49625 2675 00000000 		.quad	0
 49625      00000000 
 49626              	.LLST204:
 49627 267d 00000000 		.quad	.LVL196
 49627      00000000 
 49628 2685 00000000 		.quad	.LVL198-1
 49628      00000000 
 49629 268d 0A00     		.value	0xa
 49630 268f 7C       		.byte	0x7c
 49631 2690 10       		.sleb128 16
 49632 2691 06       		.byte	0x6
 49633 2692 7C       		.byte	0x7c
 49634 2693 00       		.sleb128 0
 49635 2694 06       		.byte	0x6
 49636 2695 1C       		.byte	0x1c
 49637 2696 34       		.byte	0x34
GAS LISTING /tmp/ccJUMvuF.s 			page 1207


 49638 2697 1B       		.byte	0x1b
 49639 2698 9F       		.byte	0x9f
 49640 2699 00000000 		.quad	0
 49640      00000000 
 49641 26a1 00000000 		.quad	0
 49641      00000000 
 49642              	.LLST205:
 49643 26a9 00000000 		.quad	.LVL196
 49643      00000000 
 49644 26b1 00000000 		.quad	.LVL198-1
 49644      00000000 
 49645 26b9 0200     		.value	0x2
 49646 26bb 7C       		.byte	0x7c
 49647 26bc 00       		.sleb128 0
 49648 26bd 00000000 		.quad	0
 49648      00000000 
 49649 26c5 00000000 		.quad	0
 49649      00000000 
 49650              	.LLST206:
 49651 26cd 00000000 		.quad	.LVL197
 49651      00000000 
 49652 26d5 00000000 		.quad	.LVL198-1
 49652      00000000 
 49653 26dd 0A00     		.value	0xa
 49654 26df 7C       		.byte	0x7c
 49655 26e0 10       		.sleb128 16
 49656 26e1 06       		.byte	0x6
 49657 26e2 7C       		.byte	0x7c
 49658 26e3 00       		.sleb128 0
 49659 26e4 06       		.byte	0x6
 49660 26e5 1C       		.byte	0x1c
 49661 26e6 34       		.byte	0x34
 49662 26e7 1B       		.byte	0x1b
 49663 26e8 9F       		.byte	0x9f
 49664 26e9 00000000 		.quad	0
 49664      00000000 
 49665 26f1 00000000 		.quad	0
 49665      00000000 
 49666              	.LLST207:
 49667 26f9 00000000 		.quad	.LVL197
 49667      00000000 
 49668 2701 00000000 		.quad	.LVL198-1
 49668      00000000 
 49669 2709 0200     		.value	0x2
 49670 270b 7C       		.byte	0x7c
 49671 270c 00       		.sleb128 0
 49672 270d 00000000 		.quad	0
 49672      00000000 
 49673 2715 00000000 		.quad	0
 49673      00000000 
 49674              	.LLST210:
 49675 271d 00000000 		.quad	.LVL200
 49675      00000000 
 49676 2725 00000000 		.quad	.LVL208
 49676      00000000 
 49677 272d 0100     		.value	0x1
 49678 272f 56       		.byte	0x56
GAS LISTING /tmp/ccJUMvuF.s 			page 1208


 49679 2730 00000000 		.quad	.LVL211
 49679      00000000 
 49680 2738 00000000 		.quad	.LFE6730
 49680      00000000 
 49681 2740 0100     		.value	0x1
 49682 2742 56       		.byte	0x56
 49683 2743 00000000 		.quad	0
 49683      00000000 
 49684 274b 00000000 		.quad	0
 49684      00000000 
 49685              	.LLST213:
 49686 2753 00000000 		.quad	.LVL201
 49686      00000000 
 49687 275b 00000000 		.quad	.LVL206
 49687      00000000 
 49688 2763 0500     		.value	0x5
 49689 2765 91       		.byte	0x91
 49690 2766 8F8A7F   		.sleb128 -15089
 49691 2769 9F       		.byte	0x9f
 49692 276a 00000000 		.quad	.LVL206
 49692      00000000 
 49693 2772 00000000 		.quad	.LVL207-1
 49693      00000000 
 49694 277a 0100     		.value	0x1
 49695 277c 54       		.byte	0x54
 49696 277d 00000000 		.quad	.LVL207-1
 49696      00000000 
 49697 2785 00000000 		.quad	.LVL208
 49697      00000000 
 49698 278d 0500     		.value	0x5
 49699 278f 91       		.byte	0x91
 49700 2790 8F8A7F   		.sleb128 -15089
 49701 2793 9F       		.byte	0x9f
 49702 2794 00000000 		.quad	.LVL211
 49702      00000000 
 49703 279c 00000000 		.quad	.LFE6730
 49703      00000000 
 49704 27a4 0500     		.value	0x5
 49705 27a6 91       		.byte	0x91
 49706 27a7 8F8A7F   		.sleb128 -15089
 49707 27aa 9F       		.byte	0x9f
 49708 27ab 00000000 		.quad	0
 49708      00000000 
 49709 27b3 00000000 		.quad	0
 49709      00000000 
 49710              	.LLST214:
 49711 27bb 00000000 		.quad	.LVL201
 49711      00000000 
 49712 27c3 00000000 		.quad	.LVL207-1
 49712      00000000 
 49713 27cb 0100     		.value	0x1
 49714 27cd 55       		.byte	0x55
 49715 27ce 00000000 		.quad	.LVL211
 49715      00000000 
 49716 27d6 00000000 		.quad	.LFE6730
 49716      00000000 
 49717 27de 0100     		.value	0x1
GAS LISTING /tmp/ccJUMvuF.s 			page 1209


 49718 27e0 55       		.byte	0x55
 49719 27e1 00000000 		.quad	0
 49719      00000000 
 49720 27e9 00000000 		.quad	0
 49720      00000000 
 49721              	.LLST215:
 49722 27f1 00000000 		.quad	.LVL202
 49722      00000000 
 49723 27f9 00000000 		.quad	.LVL206
 49723      00000000 
 49724 2801 0500     		.value	0x5
 49725 2803 91       		.byte	0x91
 49726 2804 8F8A7F   		.sleb128 -15089
 49727 2807 9F       		.byte	0x9f
 49728 2808 00000000 		.quad	.LVL206
 49728      00000000 
 49729 2810 00000000 		.quad	.LVL207-1
 49729      00000000 
 49730 2818 0100     		.value	0x1
 49731 281a 54       		.byte	0x54
 49732 281b 00000000 		.quad	.LVL207-1
 49732      00000000 
 49733 2823 00000000 		.quad	.LVL208
 49733      00000000 
 49734 282b 0500     		.value	0x5
 49735 282d 91       		.byte	0x91
 49736 282e 8F8A7F   		.sleb128 -15089
 49737 2831 9F       		.byte	0x9f
 49738 2832 00000000 		.quad	.LVL211
 49738      00000000 
 49739 283a 00000000 		.quad	.LFE6730
 49739      00000000 
 49740 2842 0500     		.value	0x5
 49741 2844 91       		.byte	0x91
 49742 2845 8F8A7F   		.sleb128 -15089
 49743 2848 9F       		.byte	0x9f
 49744 2849 00000000 		.quad	0
 49744      00000000 
 49745 2851 00000000 		.quad	0
 49745      00000000 
 49746              	.LLST216:
 49747 2859 00000000 		.quad	.LVL202
 49747      00000000 
 49748 2861 00000000 		.quad	.LVL207-1
 49748      00000000 
 49749 2869 0100     		.value	0x1
 49750 286b 55       		.byte	0x55
 49751 286c 00000000 		.quad	.LVL211
 49751      00000000 
 49752 2874 00000000 		.quad	.LFE6730
 49752      00000000 
 49753 287c 0100     		.value	0x1
 49754 287e 55       		.byte	0x55
 49755 287f 00000000 		.quad	0
 49755      00000000 
 49756 2887 00000000 		.quad	0
 49756      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1210


 49757              	.LLST217:
 49758 288f 00000000 		.quad	.LVL203
 49758      00000000 
 49759 2897 00000000 		.quad	.LVL208
 49759      00000000 
 49760 289f 0300     		.value	0x3
 49761 28a1 09       		.byte	0x9
 49762 28a2 FF       		.byte	0xff
 49763 28a3 9F       		.byte	0x9f
 49764 28a4 00000000 		.quad	.LVL211
 49764      00000000 
 49765 28ac 00000000 		.quad	.LFE6730
 49765      00000000 
 49766 28b4 0300     		.value	0x3
 49767 28b6 09       		.byte	0x9
 49768 28b7 FF       		.byte	0xff
 49769 28b8 9F       		.byte	0x9f
 49770 28b9 00000000 		.quad	0
 49770      00000000 
 49771 28c1 00000000 		.quad	0
 49771      00000000 
 49772              	.LLST218:
 49773 28c9 00000000 		.quad	.LVL203
 49773      00000000 
 49774 28d1 00000000 		.quad	.LVL205
 49774      00000000 
 49775 28d9 0100     		.value	0x1
 49776 28db 52       		.byte	0x52
 49777 28dc 00000000 		.quad	.LVL205
 49777      00000000 
 49778 28e4 00000000 		.quad	.LVL207-1
 49778      00000000 
 49779 28ec 0300     		.value	0x3
 49780 28ee 75       		.byte	0x75
 49781 28ef 10       		.sleb128 16
 49782 28f0 9F       		.byte	0x9f
 49783 28f1 00000000 		.quad	.LVL211
 49783      00000000 
 49784 28f9 00000000 		.quad	.LVL213
 49784      00000000 
 49785 2901 0100     		.value	0x1
 49786 2903 52       		.byte	0x52
 49787 2904 00000000 		.quad	.LVL213
 49787      00000000 
 49788 290c 00000000 		.quad	.LFE6730
 49788      00000000 
 49789 2914 0300     		.value	0x3
 49790 2916 75       		.byte	0x75
 49791 2917 10       		.sleb128 16
 49792 2918 9F       		.byte	0x9f
 49793 2919 00000000 		.quad	0
 49793      00000000 
 49794 2921 00000000 		.quad	0
 49794      00000000 
 49795              	.LLST219:
 49796 2929 00000000 		.quad	.LVL204
 49796      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1211


 49797 2931 00000000 		.quad	.LVL205
 49797      00000000 
 49798 2939 0300     		.value	0x3
 49799 293b 09       		.byte	0x9
 49800 293c FF       		.byte	0xff
 49801 293d 9F       		.byte	0x9f
 49802 293e 00000000 		.quad	0
 49802      00000000 
 49803 2946 00000000 		.quad	0
 49803      00000000 
 49804              	.LLST220:
 49805 294e 00000000 		.quad	.LVL204
 49805      00000000 
 49806 2956 00000000 		.quad	.LVL205
 49806      00000000 
 49807 295e 0100     		.value	0x1
 49808 2960 52       		.byte	0x52
 49809 2961 00000000 		.quad	0
 49809      00000000 
 49810 2969 00000000 		.quad	0
 49810      00000000 
 49811              	.LLST221:
 49812 2971 00000000 		.quad	.LVL211
 49812      00000000 
 49813 2979 00000000 		.quad	.LVL213
 49813      00000000 
 49814 2981 0100     		.value	0x1
 49815 2983 52       		.byte	0x52
 49816 2984 00000000 		.quad	.LVL213
 49816      00000000 
 49817 298c 00000000 		.quad	.LFE6730
 49817      00000000 
 49818 2994 0300     		.value	0x3
 49819 2996 75       		.byte	0x75
 49820 2997 10       		.sleb128 16
 49821 2998 9F       		.byte	0x9f
 49822 2999 00000000 		.quad	0
 49822      00000000 
 49823 29a1 00000000 		.quad	0
 49823      00000000 
 49824              	.LLST222:
 49825 29a9 00000000 		.quad	.LVL214
 49825      00000000 
 49826 29b1 00000000 		.quad	.LVL215
 49826      00000000 
 49827 29b9 0100     		.value	0x1
 49828 29bb 54       		.byte	0x54
 49829 29bc 00000000 		.quad	.LVL217
 49829      00000000 
 49830 29c4 00000000 		.quad	.LVL219
 49830      00000000 
 49831 29cc 0100     		.value	0x1
 49832 29ce 52       		.byte	0x52
 49833 29cf 00000000 		.quad	.LVL225
 49833      00000000 
 49834 29d7 00000000 		.quad	.LVL226
 49834      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1212


 49835 29df 0100     		.value	0x1
 49836 29e1 52       		.byte	0x52
 49837 29e2 00000000 		.quad	.LVL230
 49837      00000000 
 49838 29ea 00000000 		.quad	.LVL232
 49838      00000000 
 49839 29f2 0100     		.value	0x1
 49840 29f4 58       		.byte	0x58
 49841 29f5 00000000 		.quad	.LVL235
 49841      00000000 
 49842 29fd 00000000 		.quad	.LVL236
 49842      00000000 
 49843 2a05 0100     		.value	0x1
 49844 2a07 52       		.byte	0x52
 49845 2a08 00000000 		.quad	.LVL236
 49845      00000000 
 49846 2a10 00000000 		.quad	.LVL237
 49846      00000000 
 49847 2a18 0100     		.value	0x1
 49848 2a1a 54       		.byte	0x54
 49849 2a1b 00000000 		.quad	.LVL237
 49849      00000000 
 49850 2a23 00000000 		.quad	.LFE6612
 49850      00000000 
 49851 2a2b 0100     		.value	0x1
 49852 2a2d 52       		.byte	0x52
 49853 2a2e 00000000 		.quad	0
 49853      00000000 
 49854 2a36 00000000 		.quad	0
 49854      00000000 
 49855              	.LLST223:
 49856 2a3e 00000000 		.quad	.LVL214
 49856      00000000 
 49857 2a46 00000000 		.quad	.LVL220
 49857      00000000 
 49858 2a4e 0100     		.value	0x1
 49859 2a50 51       		.byte	0x51
 49860 2a51 00000000 		.quad	.LVL220
 49860      00000000 
 49861 2a59 00000000 		.quad	.LVL221
 49861      00000000 
 49862 2a61 0300     		.value	0x3
 49863 2a63 71       		.byte	0x71
 49864 2a64 02       		.sleb128 2
 49865 2a65 9F       		.byte	0x9f
 49866 2a66 00000000 		.quad	.LVL221
 49866      00000000 
 49867 2a6e 00000000 		.quad	.LVL236
 49867      00000000 
 49868 2a76 0400     		.value	0x4
 49869 2a78 F3       		.byte	0xf3
 49870 2a79 01       		.uleb128 0x1
 49871 2a7a 51       		.byte	0x51
 49872 2a7b 9F       		.byte	0x9f
 49873 2a7c 00000000 		.quad	.LVL236
 49873      00000000 
 49874 2a84 00000000 		.quad	.LFE6612
GAS LISTING /tmp/ccJUMvuF.s 			page 1213


 49874      00000000 
 49875 2a8c 0100     		.value	0x1
 49876 2a8e 51       		.byte	0x51
 49877 2a8f 00000000 		.quad	0
 49877      00000000 
 49878 2a97 00000000 		.quad	0
 49878      00000000 
 49879              	.LLST224:
 49880 2a9f 00000000 		.quad	.LVL214
 49880      00000000 
 49881 2aa7 00000000 		.quad	.LVL237
 49881      00000000 
 49882 2aaf 0100     		.value	0x1
 49883 2ab1 54       		.byte	0x54
 49884 2ab2 00000000 		.quad	.LVL237
 49884      00000000 
 49885 2aba 00000000 		.quad	.LFE6612
 49885      00000000 
 49886 2ac2 0100     		.value	0x1
 49887 2ac4 52       		.byte	0x52
 49888 2ac5 00000000 		.quad	0
 49888      00000000 
 49889 2acd 00000000 		.quad	0
 49889      00000000 
 49890              	.LLST225:
 49891 2ad5 00000000 		.quad	.LVL214
 49891      00000000 
 49892 2add 00000000 		.quad	.LVL215
 49892      00000000 
 49893 2ae5 0100     		.value	0x1
 49894 2ae7 54       		.byte	0x54
 49895 2ae8 00000000 		.quad	.LVL216
 49895      00000000 
 49896 2af0 00000000 		.quad	.LVL219
 49896      00000000 
 49897 2af8 0100     		.value	0x1
 49898 2afa 52       		.byte	0x52
 49899 2afb 00000000 		.quad	.LVL232
 49899      00000000 
 49900 2b03 00000000 		.quad	.LVL233
 49900      00000000 
 49901 2b0b 0700     		.value	0x7
 49902 2b0d 72       		.byte	0x72
 49903 2b0e 00       		.sleb128 0
 49904 2b0f 31       		.byte	0x31
 49905 2b10 24       		.byte	0x24
 49906 2b11 23       		.byte	0x23
 49907 2b12 02       		.uleb128 0x2
 49908 2b13 9F       		.byte	0x9f
 49909 2b14 00000000 		.quad	.LVL236
 49909      00000000 
 49910 2b1c 00000000 		.quad	.LVL237
 49910      00000000 
 49911 2b24 0100     		.value	0x1
 49912 2b26 54       		.byte	0x54
 49913 2b27 00000000 		.quad	.LVL237
 49913      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1214


 49914 2b2f 00000000 		.quad	.LFE6612
 49914      00000000 
 49915 2b37 0100     		.value	0x1
 49916 2b39 52       		.byte	0x52
 49917 2b3a 00000000 		.quad	0
 49917      00000000 
 49918 2b42 00000000 		.quad	0
 49918      00000000 
 49919              	.LLST226:
 49920 2b4a 00000000 		.quad	.LVL222
 49920      00000000 
 49921 2b52 00000000 		.quad	.LVL224
 49921      00000000 
 49922 2b5a 0100     		.value	0x1
 49923 2b5c 61       		.byte	0x61
 49924 2b5d 00000000 		.quad	.LVL225
 49924      00000000 
 49925 2b65 00000000 		.quad	.LVL232
 49925      00000000 
 49926 2b6d 0100     		.value	0x1
 49927 2b6f 61       		.byte	0x61
 49928 2b70 00000000 		.quad	0
 49928      00000000 
 49929 2b78 00000000 		.quad	0
 49929      00000000 
 49930              	.LLST227:
 49931 2b80 00000000 		.quad	.LVL222
 49931      00000000 
 49932 2b88 00000000 		.quad	.LVL224
 49932      00000000 
 49933 2b90 0100     		.value	0x1
 49934 2b92 54       		.byte	0x54
 49935 2b93 00000000 		.quad	.LVL225
 49935      00000000 
 49936 2b9b 00000000 		.quad	.LVL232
 49936      00000000 
 49937 2ba3 0100     		.value	0x1
 49938 2ba5 54       		.byte	0x54
 49939 2ba6 00000000 		.quad	0
 49939      00000000 
 49940 2bae 00000000 		.quad	0
 49940      00000000 
 49941              	.LLST228:
 49942 2bb6 00000000 		.quad	.LVL225
 49942      00000000 
 49943 2bbe 00000000 		.quad	.LVL226
 49943      00000000 
 49944 2bc6 0100     		.value	0x1
 49945 2bc8 52       		.byte	0x52
 49946 2bc9 00000000 		.quad	.LVL227
 49946      00000000 
 49947 2bd1 00000000 		.quad	.LVL232
 49947      00000000 
 49948 2bd9 0100     		.value	0x1
 49949 2bdb 58       		.byte	0x58
 49950 2bdc 00000000 		.quad	0
 49950      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1215


 49951 2be4 00000000 		.quad	0
 49951      00000000 
 49952              	.LLST229:
 49953 2bec 00000000 		.quad	.LVL222
 49953      00000000 
 49954 2bf4 00000000 		.quad	.LVL224
 49954      00000000 
 49955 2bfc 0300     		.value	0x3
 49956 2bfe 55       		.byte	0x55
 49957 2bff 93       		.byte	0x93
 49958 2c00 08       		.uleb128 0x8
 49959 2c01 00000000 		.quad	.LVL225
 49959      00000000 
 49960 2c09 00000000 		.quad	.LVL232
 49960      00000000 
 49961 2c11 0300     		.value	0x3
 49962 2c13 55       		.byte	0x55
 49963 2c14 93       		.byte	0x93
 49964 2c15 08       		.uleb128 0x8
 49965 2c16 00000000 		.quad	0
 49965      00000000 
 49966 2c1e 00000000 		.quad	0
 49966      00000000 
 49967              	.LLST230:
 49968 2c26 00000000 		.quad	.LVL225
 49968      00000000 
 49969 2c2e 00000000 		.quad	.LVL226
 49969      00000000 
 49970 2c36 0100     		.value	0x1
 49971 2c38 51       		.byte	0x51
 49972 2c39 00000000 		.quad	.LVL226
 49972      00000000 
 49973 2c41 00000000 		.quad	.LVL228
 49973      00000000 
 49974 2c49 0100     		.value	0x1
 49975 2c4b 58       		.byte	0x58
 49976 2c4c 00000000 		.quad	.LVL228
 49976      00000000 
 49977 2c54 00000000 		.quad	.LVL232
 49977      00000000 
 49978 2c5c 0100     		.value	0x1
 49979 2c5e 51       		.byte	0x51
 49980 2c5f 00000000 		.quad	0
 49980      00000000 
 49981 2c67 00000000 		.quad	0
 49981      00000000 
 49982              	.LLST231:
 49983 2c6f 00000000 		.quad	.LVL223
 49983      00000000 
 49984 2c77 00000000 		.quad	.LVL224
 49984      00000000 
 49985 2c7f 0600     		.value	0x6
 49986 2c81 F2       		.byte	0xf2
 49987 2c82 00000000 		.long	.Ldebug_info0+73011
 49988 2c86 00       		.sleb128 0
 49989 2c87 00000000 		.quad	.LVL225
 49989      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1216


 49990 2c8f 00000000 		.quad	.LVL232
 49990      00000000 
 49991 2c97 0600     		.value	0x6
 49992 2c99 F2       		.byte	0xf2
 49993 2c9a 00000000 		.long	.Ldebug_info0+73011
 49994 2c9e 00       		.sleb128 0
 49995 2c9f 00000000 		.quad	0
 49995      00000000 
 49996 2ca7 00000000 		.quad	0
 49996      00000000 
 49997              	.LLST232:
 49998 2caf 00000000 		.quad	.LVL225
 49998      00000000 
 49999 2cb7 00000000 		.quad	.LVL226
 49999      00000000 
 50000 2cbf 0100     		.value	0x1
 50001 2cc1 52       		.byte	0x52
 50002 2cc2 00000000 		.quad	.LVL226
 50002      00000000 
 50003 2cca 00000000 		.quad	.LVL232
 50003      00000000 
 50004 2cd2 0100     		.value	0x1
 50005 2cd4 58       		.byte	0x58
 50006 2cd5 00000000 		.quad	0
 50006      00000000 
 50007 2cdd 00000000 		.quad	0
 50007      00000000 
 50008              	.LLST233:
 50009 2ce5 00000000 		.quad	.LVL225
 50009      00000000 
 50010 2ced 00000000 		.quad	.LVL232
 50010      00000000 
 50011 2cf5 0600     		.value	0x6
 50012 2cf7 F2       		.byte	0xf2
 50013 2cf8 00000000 		.long	.Ldebug_info0+73041
 50014 2cfc 00       		.sleb128 0
 50015 2cfd 00000000 		.quad	0
 50015      00000000 
 50016 2d05 00000000 		.quad	0
 50016      00000000 
 50017              	.LLST234:
 50018 2d0d 00000000 		.quad	.LVL233
 50018      00000000 
 50019 2d15 00000000 		.quad	.LVL236
 50019      00000000 
 50020 2d1d 0100     		.value	0x1
 50021 2d1f 52       		.byte	0x52
 50022 2d20 00000000 		.quad	0
 50022      00000000 
 50023 2d28 00000000 		.quad	0
 50023      00000000 
 50024              	.LLST235:
 50025 2d30 00000000 		.quad	.LVL233
 50025      00000000 
 50026 2d38 00000000 		.quad	.LVL236
 50026      00000000 
 50027 2d40 0600     		.value	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1217


 50028 2d42 F2       		.byte	0xf2
 50029 2d43 00000000 		.long	.Ldebug_info0+72733
 50030 2d47 00       		.sleb128 0
 50031 2d48 00000000 		.quad	0
 50031      00000000 
 50032 2d50 00000000 		.quad	0
 50032      00000000 
 50033              	.LLST236:
 50034 2d58 00000000 		.quad	.LVL238
 50034      00000000 
 50035 2d60 00000000 		.quad	.LVL247
 50035      00000000 
 50036 2d68 0100     		.value	0x1
 50037 2d6a 55       		.byte	0x55
 50038 2d6b 00000000 		.quad	.LVL247
 50038      00000000 
 50039 2d73 00000000 		.quad	.LVL306
 50039      00000000 
 50040 2d7b 0100     		.value	0x1
 50041 2d7d 53       		.byte	0x53
 50042 2d7e 00000000 		.quad	.LVL306
 50042      00000000 
 50043 2d86 00000000 		.quad	.LVL309
 50043      00000000 
 50044 2d8e 0400     		.value	0x4
 50045 2d90 F3       		.byte	0xf3
 50046 2d91 01       		.uleb128 0x1
 50047 2d92 55       		.byte	0x55
 50048 2d93 9F       		.byte	0x9f
 50049 2d94 00000000 		.quad	.LVL309
 50049      00000000 
 50050 2d9c 00000000 		.quad	.LVL344
 50050      00000000 
 50051 2da4 0100     		.value	0x1
 50052 2da6 53       		.byte	0x53
 50053 2da7 00000000 		.quad	.LVL344
 50053      00000000 
 50054 2daf 00000000 		.quad	.LVL347
 50054      00000000 
 50055 2db7 0400     		.value	0x4
 50056 2db9 F3       		.byte	0xf3
 50057 2dba 01       		.uleb128 0x1
 50058 2dbb 55       		.byte	0x55
 50059 2dbc 9F       		.byte	0x9f
 50060 2dbd 00000000 		.quad	.LVL347
 50060      00000000 
 50061 2dc5 00000000 		.quad	.LFE6046
 50061      00000000 
 50062 2dcd 0100     		.value	0x1
 50063 2dcf 53       		.byte	0x53
 50064 2dd0 00000000 		.quad	0
 50064      00000000 
 50065 2dd8 00000000 		.quad	0
 50065      00000000 
 50066              	.LLST237:
 50067 2de0 00000000 		.quad	.LVL248
 50067      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1218


 50068 2de8 00000000 		.quad	.LVL249-1
 50068      00000000 
 50069 2df0 0100     		.value	0x1
 50070 2df2 61       		.byte	0x61
 50071 2df3 00000000 		.quad	.LVL249-1
 50071      00000000 
 50072 2dfb 00000000 		.quad	.LVL305
 50072      00000000 
 50073 2e03 0200     		.value	0x2
 50074 2e05 77       		.byte	0x77
 50075 2e06 00       		.sleb128 0
 50076 2e07 00000000 		.quad	.LVL305
 50076      00000000 
 50077 2e0f 00000000 		.quad	.LVL309
 50077      00000000 
 50078 2e17 0300     		.value	0x3
 50079 2e19 91       		.byte	0x91
 50080 2e1a B07F     		.sleb128 -80
 50081 2e1c 00000000 		.quad	.LVL309
 50081      00000000 
 50082 2e24 00000000 		.quad	.LVL343
 50082      00000000 
 50083 2e2c 0200     		.value	0x2
 50084 2e2e 77       		.byte	0x77
 50085 2e2f 00       		.sleb128 0
 50086 2e30 00000000 		.quad	.LVL343
 50086      00000000 
 50087 2e38 00000000 		.quad	.LVL347
 50087      00000000 
 50088 2e40 0300     		.value	0x3
 50089 2e42 91       		.byte	0x91
 50090 2e43 B07F     		.sleb128 -80
 50091 2e45 00000000 		.quad	.LVL349
 50091      00000000 
 50092 2e4d 00000000 		.quad	.LVL350
 50092      00000000 
 50093 2e55 0100     		.value	0x1
 50094 2e57 65       		.byte	0x65
 50095 2e58 00000000 		.quad	.LVL350
 50095      00000000 
 50096 2e60 00000000 		.quad	.LFE6046
 50096      00000000 
 50097 2e68 0200     		.value	0x2
 50098 2e6a 77       		.byte	0x77
 50099 2e6b 00       		.sleb128 0
 50100 2e6c 00000000 		.quad	0
 50100      00000000 
 50101 2e74 00000000 		.quad	0
 50101      00000000 
 50102              	.LLST238:
 50103 2e7c 00000000 		.quad	.LVL275
 50103      00000000 
 50104 2e84 00000000 		.quad	.LVL277
 50104      00000000 
 50105 2e8c 0300     		.value	0x3
 50106 2e8e 91       		.byte	0x91
 50107 2e8f B87F     		.sleb128 -72
GAS LISTING /tmp/ccJUMvuF.s 			page 1219


 50108 2e91 00000000 		.quad	0
 50108      00000000 
 50109 2e99 00000000 		.quad	0
 50109      00000000 
 50110              	.LLST239:
 50111 2ea1 00000000 		.quad	.LVL238
 50111      00000000 
 50112 2ea9 00000000 		.quad	.LVL247
 50112      00000000 
 50113 2eb1 0300     		.value	0x3
 50114 2eb3 75       		.byte	0x75
 50115 2eb4 08       		.sleb128 8
 50116 2eb5 9F       		.byte	0x9f
 50117 2eb6 00000000 		.quad	.LVL247
 50117      00000000 
 50118 2ebe 00000000 		.quad	.LVL306
 50118      00000000 
 50119 2ec6 0300     		.value	0x3
 50120 2ec8 73       		.byte	0x73
 50121 2ec9 08       		.sleb128 8
 50122 2eca 9F       		.byte	0x9f
 50123 2ecb 00000000 		.quad	.LVL306
 50123      00000000 
 50124 2ed3 00000000 		.quad	.LVL309
 50124      00000000 
 50125 2edb 0600     		.value	0x6
 50126 2edd F3       		.byte	0xf3
 50127 2ede 01       		.uleb128 0x1
 50128 2edf 55       		.byte	0x55
 50129 2ee0 23       		.byte	0x23
 50130 2ee1 08       		.uleb128 0x8
 50131 2ee2 9F       		.byte	0x9f
 50132 2ee3 00000000 		.quad	.LVL309
 50132      00000000 
 50133 2eeb 00000000 		.quad	.LVL344
 50133      00000000 
 50134 2ef3 0300     		.value	0x3
 50135 2ef5 73       		.byte	0x73
 50136 2ef6 08       		.sleb128 8
 50137 2ef7 9F       		.byte	0x9f
 50138 2ef8 00000000 		.quad	.LVL344
 50138      00000000 
 50139 2f00 00000000 		.quad	.LVL347
 50139      00000000 
 50140 2f08 0600     		.value	0x6
 50141 2f0a F3       		.byte	0xf3
 50142 2f0b 01       		.uleb128 0x1
 50143 2f0c 55       		.byte	0x55
 50144 2f0d 23       		.byte	0x23
 50145 2f0e 08       		.uleb128 0x8
 50146 2f0f 9F       		.byte	0x9f
 50147 2f10 00000000 		.quad	.LVL347
 50147      00000000 
 50148 2f18 00000000 		.quad	.LFE6046
 50148      00000000 
 50149 2f20 0300     		.value	0x3
 50150 2f22 73       		.byte	0x73
GAS LISTING /tmp/ccJUMvuF.s 			page 1220


 50151 2f23 08       		.sleb128 8
 50152 2f24 9F       		.byte	0x9f
 50153 2f25 00000000 		.quad	0
 50153      00000000 
 50154 2f2d 00000000 		.quad	0
 50154      00000000 
 50155              	.LLST240:
 50156 2f35 00000000 		.quad	.LVL238
 50156      00000000 
 50157 2f3d 00000000 		.quad	.LVL247
 50157      00000000 
 50158 2f45 0300     		.value	0x3
 50159 2f47 75       		.byte	0x75
 50160 2f48 10       		.sleb128 16
 50161 2f49 9F       		.byte	0x9f
 50162 2f4a 00000000 		.quad	.LVL247
 50162      00000000 
 50163 2f52 00000000 		.quad	.LVL275
 50163      00000000 
 50164 2f5a 0300     		.value	0x3
 50165 2f5c 73       		.byte	0x73
 50166 2f5d 10       		.sleb128 16
 50167 2f5e 9F       		.byte	0x9f
 50168 2f5f 00000000 		.quad	.LVL309
 50168      00000000 
 50169 2f67 00000000 		.quad	.LVL331
 50169      00000000 
 50170 2f6f 0300     		.value	0x3
 50171 2f71 73       		.byte	0x73
 50172 2f72 10       		.sleb128 16
 50173 2f73 9F       		.byte	0x9f
 50174 2f74 00000000 		.quad	.LVL334
 50174      00000000 
 50175 2f7c 00000000 		.quad	.LVL342
 50175      00000000 
 50176 2f84 0300     		.value	0x3
 50177 2f86 73       		.byte	0x73
 50178 2f87 10       		.sleb128 16
 50179 2f88 9F       		.byte	0x9f
 50180 2f89 00000000 		.quad	.LVL347
 50180      00000000 
 50181 2f91 00000000 		.quad	.LVL350
 50181      00000000 
 50182 2f99 0300     		.value	0x3
 50183 2f9b 73       		.byte	0x73
 50184 2f9c 10       		.sleb128 16
 50185 2f9d 9F       		.byte	0x9f
 50186 2f9e 00000000 		.quad	0
 50186      00000000 
 50187 2fa6 00000000 		.quad	0
 50187      00000000 
 50188              	.LLST241:
 50189 2fae 00000000 		.quad	.LVL239
 50189      00000000 
 50190 2fb6 00000000 		.quad	.LVL247
 50190      00000000 
 50191 2fbe 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1221


 50192 2fc0 75       		.byte	0x75
 50193 2fc1 08       		.sleb128 8
 50194 2fc2 9F       		.byte	0x9f
 50195 2fc3 00000000 		.quad	.LVL247
 50195      00000000 
 50196 2fcb 00000000 		.quad	.LVL306
 50196      00000000 
 50197 2fd3 0300     		.value	0x3
 50198 2fd5 73       		.byte	0x73
 50199 2fd6 08       		.sleb128 8
 50200 2fd7 9F       		.byte	0x9f
 50201 2fd8 00000000 		.quad	.LVL306
 50201      00000000 
 50202 2fe0 00000000 		.quad	.LVL309
 50202      00000000 
 50203 2fe8 0600     		.value	0x6
 50204 2fea F3       		.byte	0xf3
 50205 2feb 01       		.uleb128 0x1
 50206 2fec 55       		.byte	0x55
 50207 2fed 23       		.byte	0x23
 50208 2fee 08       		.uleb128 0x8
 50209 2fef 9F       		.byte	0x9f
 50210 2ff0 00000000 		.quad	.LVL309
 50210      00000000 
 50211 2ff8 00000000 		.quad	.LVL344
 50211      00000000 
 50212 3000 0300     		.value	0x3
 50213 3002 73       		.byte	0x73
 50214 3003 08       		.sleb128 8
 50215 3004 9F       		.byte	0x9f
 50216 3005 00000000 		.quad	.LVL344
 50216      00000000 
 50217 300d 00000000 		.quad	.LVL347
 50217      00000000 
 50218 3015 0600     		.value	0x6
 50219 3017 F3       		.byte	0xf3
 50220 3018 01       		.uleb128 0x1
 50221 3019 55       		.byte	0x55
 50222 301a 23       		.byte	0x23
 50223 301b 08       		.uleb128 0x8
 50224 301c 9F       		.byte	0x9f
 50225 301d 00000000 		.quad	.LVL347
 50225      00000000 
 50226 3025 00000000 		.quad	.LFE6046
 50226      00000000 
 50227 302d 0300     		.value	0x3
 50228 302f 73       		.byte	0x73
 50229 3030 08       		.sleb128 8
 50230 3031 9F       		.byte	0x9f
 50231 3032 00000000 		.quad	0
 50231      00000000 
 50232 303a 00000000 		.quad	0
 50232      00000000 
 50233              	.LLST242:
 50234 3042 00000000 		.quad	.LVL239
 50234      00000000 
 50235 304a 00000000 		.quad	.LVL247
GAS LISTING /tmp/ccJUMvuF.s 			page 1222


 50235      00000000 
 50236 3052 0300     		.value	0x3
 50237 3054 75       		.byte	0x75
 50238 3055 08       		.sleb128 8
 50239 3056 9F       		.byte	0x9f
 50240 3057 00000000 		.quad	.LVL247
 50240      00000000 
 50241 305f 00000000 		.quad	.LVL275
 50241      00000000 
 50242 3067 0300     		.value	0x3
 50243 3069 73       		.byte	0x73
 50244 306a 08       		.sleb128 8
 50245 306b 9F       		.byte	0x9f
 50246 306c 00000000 		.quad	.LVL309
 50246      00000000 
 50247 3074 00000000 		.quad	.LVL331
 50247      00000000 
 50248 307c 0300     		.value	0x3
 50249 307e 73       		.byte	0x73
 50250 307f 08       		.sleb128 8
 50251 3080 9F       		.byte	0x9f
 50252 3081 00000000 		.quad	.LVL334
 50252      00000000 
 50253 3089 00000000 		.quad	.LVL342
 50253      00000000 
 50254 3091 0300     		.value	0x3
 50255 3093 73       		.byte	0x73
 50256 3094 08       		.sleb128 8
 50257 3095 9F       		.byte	0x9f
 50258 3096 00000000 		.quad	.LVL347
 50258      00000000 
 50259 309e 00000000 		.quad	.LVL350
 50259      00000000 
 50260 30a6 0300     		.value	0x3
 50261 30a8 73       		.byte	0x73
 50262 30a9 08       		.sleb128 8
 50263 30aa 9F       		.byte	0x9f
 50264 30ab 00000000 		.quad	0
 50264      00000000 
 50265 30b3 00000000 		.quad	0
 50265      00000000 
 50266              	.LLST243:
 50267 30bb 00000000 		.quad	.LVL240
 50267      00000000 
 50268 30c3 00000000 		.quad	.LVL241
 50268      00000000 
 50269 30cb 0A00     		.value	0xa
 50270 30cd 9E       		.byte	0x9e
 50271 30ce 08       		.uleb128 0x8
 50272 30cf 00000000 		.long	0
 50273 30d3 00000000 		.long	0
 50274 30d7 00000000 		.quad	.LVL241
 50274      00000000 
 50275 30df 00000000 		.quad	.LVL246
 50275      00000000 
 50276 30e7 0100     		.value	0x1
 50277 30e9 61       		.byte	0x61
GAS LISTING /tmp/ccJUMvuF.s 			page 1223


 50278 30ea 00000000 		.quad	.LVL347
 50278      00000000 
 50279 30f2 00000000 		.quad	.LVL348
 50279      00000000 
 50280 30fa 0100     		.value	0x1
 50281 30fc 61       		.byte	0x61
 50282 30fd 00000000 		.quad	.LVL348
 50282      00000000 
 50283 3105 00000000 		.quad	.LVL350
 50283      00000000 
 50284 310d 0A00     		.value	0xa
 50285 310f 9E       		.byte	0x9e
 50286 3110 08       		.uleb128 0x8
 50287 3111 00000000 		.long	0
 50288 3115 00000000 		.long	0
 50289 3119 00000000 		.quad	0
 50289      00000000 
 50290 3121 00000000 		.quad	0
 50290      00000000 
 50291              	.LLST244:
 50292 3129 00000000 		.quad	.LVL240
 50292      00000000 
 50293 3131 00000000 		.quad	.LVL291
 50293      00000000 
 50294 3139 0300     		.value	0x3
 50295 313b 5C       		.byte	0x5c
 50296 313c 93       		.byte	0x93
 50297 313d 08       		.uleb128 0x8
 50298 313e 00000000 		.quad	.LVL309
 50298      00000000 
 50299 3146 00000000 		.quad	.LVL331
 50299      00000000 
 50300 314e 0300     		.value	0x3
 50301 3150 5C       		.byte	0x5c
 50302 3151 93       		.byte	0x93
 50303 3152 08       		.uleb128 0x8
 50304 3153 00000000 		.quad	.LVL334
 50304      00000000 
 50305 315b 00000000 		.quad	.LVL342
 50305      00000000 
 50306 3163 0300     		.value	0x3
 50307 3165 5C       		.byte	0x5c
 50308 3166 93       		.byte	0x93
 50309 3167 08       		.uleb128 0x8
 50310 3168 00000000 		.quad	.LVL347
 50310      00000000 
 50311 3170 00000000 		.quad	.LVL350
 50311      00000000 
 50312 3178 0300     		.value	0x3
 50313 317a 5C       		.byte	0x5c
 50314 317b 93       		.byte	0x93
 50315 317c 08       		.uleb128 0x8
 50316 317d 00000000 		.quad	0
 50316      00000000 
 50317 3185 00000000 		.quad	0
 50317      00000000 
 50318              	.LLST245:
GAS LISTING /tmp/ccJUMvuF.s 			page 1224


 50319 318d 00000000 		.quad	.LVL240
 50319      00000000 
 50320 3195 00000000 		.quad	.LVL241
 50320      00000000 
 50321 319d 0300     		.value	0x3
 50322 319f 5E       		.byte	0x5e
 50323 31a0 93       		.byte	0x93
 50324 31a1 08       		.uleb128 0x8
 50325 31a2 00000000 		.quad	.LVL241
 50325      00000000 
 50326 31aa 00000000 		.quad	.LVL242
 50326      00000000 
 50327 31b2 0300     		.value	0x3
 50328 31b4 50       		.byte	0x50
 50329 31b5 93       		.byte	0x93
 50330 31b6 08       		.uleb128 0x8
 50331 31b7 00000000 		.quad	.LVL242
 50331      00000000 
 50332 31bf 00000000 		.quad	.LVL243
 50332      00000000 
 50333 31c7 0500     		.value	0x5
 50334 31c9 70       		.byte	0x70
 50335 31ca 08       		.sleb128 8
 50336 31cb 9F       		.byte	0x9f
 50337 31cc 93       		.byte	0x93
 50338 31cd 08       		.uleb128 0x8
 50339 31ce 00000000 		.quad	.LVL243
 50339      00000000 
 50340 31d6 00000000 		.quad	.LVL245
 50340      00000000 
 50341 31de 0300     		.value	0x3
 50342 31e0 50       		.byte	0x50
 50343 31e1 93       		.byte	0x93
 50344 31e2 08       		.uleb128 0x8
 50345 31e3 00000000 		.quad	.LVL273
 50345      00000000 
 50346 31eb 00000000 		.quad	.LVL274
 50346      00000000 
 50347 31f3 0300     		.value	0x3
 50348 31f5 5E       		.byte	0x5e
 50349 31f6 93       		.byte	0x93
 50350 31f7 08       		.uleb128 0x8
 50351 31f8 00000000 		.quad	.LVL309
 50351      00000000 
 50352 3200 00000000 		.quad	.LVL331
 50352      00000000 
 50353 3208 0300     		.value	0x3
 50354 320a 5E       		.byte	0x5e
 50355 320b 93       		.byte	0x93
 50356 320c 08       		.uleb128 0x8
 50357 320d 00000000 		.quad	.LVL334
 50357      00000000 
 50358 3215 00000000 		.quad	.LVL342
 50358      00000000 
 50359 321d 0300     		.value	0x3
 50360 321f 5E       		.byte	0x5e
 50361 3220 93       		.byte	0x93
GAS LISTING /tmp/ccJUMvuF.s 			page 1225


 50362 3221 08       		.uleb128 0x8
 50363 3222 00000000 		.quad	.LVL348
 50363      00000000 
 50364 322a 00000000 		.quad	.LVL350
 50364      00000000 
 50365 3232 0300     		.value	0x3
 50366 3234 5E       		.byte	0x5e
 50367 3235 93       		.byte	0x93
 50368 3236 08       		.uleb128 0x8
 50369 3237 00000000 		.quad	0
 50369      00000000 
 50370 323f 00000000 		.quad	0
 50370      00000000 
 50371              	.LLST246:
 50372 3247 00000000 		.quad	.LVL244
 50372      00000000 
 50373 324f 00000000 		.quad	.LVL247
 50373      00000000 
 50374 3257 0300     		.value	0x3
 50375 3259 75       		.byte	0x75
 50376 325a 08       		.sleb128 8
 50377 325b 9F       		.byte	0x9f
 50378 325c 00000000 		.quad	.LVL247
 50378      00000000 
 50379 3264 00000000 		.quad	.LVL306
 50379      00000000 
 50380 326c 0300     		.value	0x3
 50381 326e 73       		.byte	0x73
 50382 326f 08       		.sleb128 8
 50383 3270 9F       		.byte	0x9f
 50384 3271 00000000 		.quad	.LVL306
 50384      00000000 
 50385 3279 00000000 		.quad	.LVL309
 50385      00000000 
 50386 3281 0600     		.value	0x6
 50387 3283 F3       		.byte	0xf3
 50388 3284 01       		.uleb128 0x1
 50389 3285 55       		.byte	0x55
 50390 3286 23       		.byte	0x23
 50391 3287 08       		.uleb128 0x8
 50392 3288 9F       		.byte	0x9f
 50393 3289 00000000 		.quad	.LVL309
 50393      00000000 
 50394 3291 00000000 		.quad	.LVL344
 50394      00000000 
 50395 3299 0300     		.value	0x3
 50396 329b 73       		.byte	0x73
 50397 329c 08       		.sleb128 8
 50398 329d 9F       		.byte	0x9f
 50399 329e 00000000 		.quad	.LVL344
 50399      00000000 
 50400 32a6 00000000 		.quad	.LVL347
 50400      00000000 
 50401 32ae 0600     		.value	0x6
 50402 32b0 F3       		.byte	0xf3
 50403 32b1 01       		.uleb128 0x1
 50404 32b2 55       		.byte	0x55
GAS LISTING /tmp/ccJUMvuF.s 			page 1226


 50405 32b3 23       		.byte	0x23
 50406 32b4 08       		.uleb128 0x8
 50407 32b5 9F       		.byte	0x9f
 50408 32b6 00000000 		.quad	.LVL347
 50408      00000000 
 50409 32be 00000000 		.quad	.LFE6046
 50409      00000000 
 50410 32c6 0300     		.value	0x3
 50411 32c8 73       		.byte	0x73
 50412 32c9 08       		.sleb128 8
 50413 32ca 9F       		.byte	0x9f
 50414 32cb 00000000 		.quad	0
 50414      00000000 
 50415 32d3 00000000 		.quad	0
 50415      00000000 
 50416              	.LLST248:
 50417 32db 00000000 		.quad	.LVL248
 50417      00000000 
 50418 32e3 00000000 		.quad	.LVL249-1
 50418      00000000 
 50419 32eb 0300     		.value	0x3
 50420 32ed 54       		.byte	0x54
 50421 32ee 93       		.byte	0x93
 50422 32ef 08       		.uleb128 0x8
 50423 32f0 00000000 		.quad	.LVL249-1
 50423      00000000 
 50424 32f8 00000000 		.quad	.LVL275
 50424      00000000 
 50425 3300 0300     		.value	0x3
 50426 3302 5C       		.byte	0x5c
 50427 3303 93       		.byte	0x93
 50428 3304 08       		.uleb128 0x8
 50429 3305 00000000 		.quad	.LVL309
 50429      00000000 
 50430 330d 00000000 		.quad	.LVL331
 50430      00000000 
 50431 3315 0300     		.value	0x3
 50432 3317 5C       		.byte	0x5c
 50433 3318 93       		.byte	0x93
 50434 3319 08       		.uleb128 0x8
 50435 331a 00000000 		.quad	.LVL334
 50435      00000000 
 50436 3322 00000000 		.quad	.LVL342
 50436      00000000 
 50437 332a 0300     		.value	0x3
 50438 332c 5C       		.byte	0x5c
 50439 332d 93       		.byte	0x93
 50440 332e 08       		.uleb128 0x8
 50441 332f 00000000 		.quad	.LVL349
 50441      00000000 
 50442 3337 00000000 		.quad	.LVL350
 50442      00000000 
 50443 333f 0300     		.value	0x3
 50444 3341 5E       		.byte	0x5e
 50445 3342 93       		.byte	0x93
 50446 3343 08       		.uleb128 0x8
 50447 3344 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1227


 50447      00000000 
 50448 334c 00000000 		.quad	0
 50448      00000000 
 50449              	.LLST249:
 50450 3354 00000000 		.quad	.LVL248
 50450      00000000 
 50451 335c 00000000 		.quad	.LVL274
 50451      00000000 
 50452 3364 0300     		.value	0x3
 50453 3366 5E       		.byte	0x5e
 50454 3367 93       		.byte	0x93
 50455 3368 08       		.uleb128 0x8
 50456 3369 00000000 		.quad	.LVL309
 50456      00000000 
 50457 3371 00000000 		.quad	.LVL331
 50457      00000000 
 50458 3379 0300     		.value	0x3
 50459 337b 5E       		.byte	0x5e
 50460 337c 93       		.byte	0x93
 50461 337d 08       		.uleb128 0x8
 50462 337e 00000000 		.quad	.LVL334
 50462      00000000 
 50463 3386 00000000 		.quad	.LVL342
 50463      00000000 
 50464 338e 0300     		.value	0x3
 50465 3390 5E       		.byte	0x5e
 50466 3391 93       		.byte	0x93
 50467 3392 08       		.uleb128 0x8
 50468 3393 00000000 		.quad	.LVL349
 50468      00000000 
 50469 339b 00000000 		.quad	.LVL350
 50469      00000000 
 50470 33a3 0300     		.value	0x3
 50471 33a5 5E       		.byte	0x5e
 50472 33a6 93       		.byte	0x93
 50473 33a7 08       		.uleb128 0x8
 50474 33a8 00000000 		.quad	0
 50474      00000000 
 50475 33b0 00000000 		.quad	0
 50475      00000000 
 50476              	.LLST252:
 50477 33b8 00000000 		.quad	.LVL248
 50477      00000000 
 50478 33c0 00000000 		.quad	.LVL251
 50478      00000000 
 50479 33c8 0500     		.value	0x5
 50480 33ca 76       		.byte	0x76
 50481 33cb 00       		.sleb128 0
 50482 33cc 38       		.byte	0x38
 50483 33cd 1B       		.byte	0x1b
 50484 33ce 9F       		.byte	0x9f
 50485 33cf 00000000 		.quad	.LVL251
 50485      00000000 
 50486 33d7 00000000 		.quad	.LVL274
 50486      00000000 
 50487 33df 0800     		.value	0x8
 50488 33e1 7C       		.byte	0x7c
GAS LISTING /tmp/ccJUMvuF.s 			page 1228


 50489 33e2 00       		.sleb128 0
 50490 33e3 7E       		.byte	0x7e
 50491 33e4 00       		.sleb128 0
 50492 33e5 1C       		.byte	0x1c
 50493 33e6 38       		.byte	0x38
 50494 33e7 1B       		.byte	0x1b
 50495 33e8 9F       		.byte	0x9f
 50496 33e9 00000000 		.quad	.LVL309
 50496      00000000 
 50497 33f1 00000000 		.quad	.LVL311
 50497      00000000 
 50498 33f9 0500     		.value	0x5
 50499 33fb 76       		.byte	0x76
 50500 33fc 00       		.sleb128 0
 50501 33fd 38       		.byte	0x38
 50502 33fe 1B       		.byte	0x1b
 50503 33ff 9F       		.byte	0x9f
 50504 3400 00000000 		.quad	.LVL311
 50504      00000000 
 50505 3408 00000000 		.quad	.LVL331
 50505      00000000 
 50506 3410 0800     		.value	0x8
 50507 3412 7C       		.byte	0x7c
 50508 3413 00       		.sleb128 0
 50509 3414 7E       		.byte	0x7e
 50510 3415 00       		.sleb128 0
 50511 3416 1C       		.byte	0x1c
 50512 3417 38       		.byte	0x38
 50513 3418 1B       		.byte	0x1b
 50514 3419 9F       		.byte	0x9f
 50515 341a 00000000 		.quad	.LVL334
 50515      00000000 
 50516 3422 00000000 		.quad	.LVL342
 50516      00000000 
 50517 342a 0800     		.value	0x8
 50518 342c 7C       		.byte	0x7c
 50519 342d 00       		.sleb128 0
 50520 342e 7E       		.byte	0x7e
 50521 342f 00       		.sleb128 0
 50522 3430 1C       		.byte	0x1c
 50523 3431 38       		.byte	0x38
 50524 3432 1B       		.byte	0x1b
 50525 3433 9F       		.byte	0x9f
 50526 3434 00000000 		.quad	0
 50526      00000000 
 50527 343c 00000000 		.quad	0
 50527      00000000 
 50528              	.LLST253:
 50529 3444 00000000 		.quad	.LVL249
 50529      00000000 
 50530 344c 00000000 		.quad	.LVL274
 50530      00000000 
 50531 3454 0300     		.value	0x3
 50532 3456 5E       		.byte	0x5e
 50533 3457 93       		.byte	0x93
 50534 3458 08       		.uleb128 0x8
 50535 3459 00000000 		.quad	.LVL309
GAS LISTING /tmp/ccJUMvuF.s 			page 1229


 50535      00000000 
 50536 3461 00000000 		.quad	.LVL331
 50536      00000000 
 50537 3469 0300     		.value	0x3
 50538 346b 5E       		.byte	0x5e
 50539 346c 93       		.byte	0x93
 50540 346d 08       		.uleb128 0x8
 50541 346e 00000000 		.quad	.LVL334
 50541      00000000 
 50542 3476 00000000 		.quad	.LVL342
 50542      00000000 
 50543 347e 0300     		.value	0x3
 50544 3480 5E       		.byte	0x5e
 50545 3481 93       		.byte	0x93
 50546 3482 08       		.uleb128 0x8
 50547 3483 00000000 		.quad	0
 50547      00000000 
 50548 348b 00000000 		.quad	0
 50548      00000000 
 50549              	.LLST254:
 50550 3493 00000000 		.quad	.LVL250
 50550      00000000 
 50551 349b 00000000 		.quad	.LVL273
 50551      00000000 
 50552 34a3 0600     		.value	0x6
 50553 34a5 7E       		.byte	0x7e
 50554 34a6 8001     		.sleb128 128
 50555 34a8 9F       		.byte	0x9f
 50556 34a9 93       		.byte	0x93
 50557 34aa 08       		.uleb128 0x8
 50558 34ab 00000000 		.quad	.LVL327
 50558      00000000 
 50559 34b3 00000000 		.quad	.LVL331
 50559      00000000 
 50560 34bb 0600     		.value	0x6
 50561 34bd 7E       		.byte	0x7e
 50562 34be 8001     		.sleb128 128
 50563 34c0 9F       		.byte	0x9f
 50564 34c1 93       		.byte	0x93
 50565 34c2 08       		.uleb128 0x8
 50566 34c3 00000000 		.quad	.LVL334
 50566      00000000 
 50567 34cb 00000000 		.quad	.LVL338
 50567      00000000 
 50568 34d3 0600     		.value	0x6
 50569 34d5 7E       		.byte	0x7e
 50570 34d6 8001     		.sleb128 128
 50571 34d8 9F       		.byte	0x9f
 50572 34d9 93       		.byte	0x93
 50573 34da 08       		.uleb128 0x8
 50574 34db 00000000 		.quad	.LVL340
 50574      00000000 
 50575 34e3 00000000 		.quad	.LVL342
 50575      00000000 
 50576 34eb 0600     		.value	0x6
 50577 34ed 7E       		.byte	0x7e
 50578 34ee 8001     		.sleb128 128
GAS LISTING /tmp/ccJUMvuF.s 			page 1230


 50579 34f0 9F       		.byte	0x9f
 50580 34f1 93       		.byte	0x93
 50581 34f2 08       		.uleb128 0x8
 50582 34f3 00000000 		.quad	0
 50582      00000000 
 50583 34fb 00000000 		.quad	0
 50583      00000000 
 50584              	.LLST255:
 50585 3503 00000000 		.quad	.LVL250
 50585      00000000 
 50586 350b 00000000 		.quad	.LVL273
 50586      00000000 
 50587 3513 0300     		.value	0x3
 50588 3515 5E       		.byte	0x5e
 50589 3516 93       		.byte	0x93
 50590 3517 08       		.uleb128 0x8
 50591 3518 00000000 		.quad	.LVL327
 50591      00000000 
 50592 3520 00000000 		.quad	.LVL331
 50592      00000000 
 50593 3528 0300     		.value	0x3
 50594 352a 5E       		.byte	0x5e
 50595 352b 93       		.byte	0x93
 50596 352c 08       		.uleb128 0x8
 50597 352d 00000000 		.quad	.LVL334
 50597      00000000 
 50598 3535 00000000 		.quad	.LVL338
 50598      00000000 
 50599 353d 0300     		.value	0x3
 50600 353f 5E       		.byte	0x5e
 50601 3540 93       		.byte	0x93
 50602 3541 08       		.uleb128 0x8
 50603 3542 00000000 		.quad	.LVL340
 50603      00000000 
 50604 354a 00000000 		.quad	.LVL342
 50604      00000000 
 50605 3552 0300     		.value	0x3
 50606 3554 5E       		.byte	0x5e
 50607 3555 93       		.byte	0x93
 50608 3556 08       		.uleb128 0x8
 50609 3557 00000000 		.quad	0
 50609      00000000 
 50610 355f 00000000 		.quad	0
 50610      00000000 
 50611              	.LLST256:
 50612 3567 00000000 		.quad	.LVL250
 50612      00000000 
 50613 356f 00000000 		.quad	.LVL251
 50613      00000000 
 50614 3577 0500     		.value	0x5
 50615 3579 7E       		.byte	0x7e
 50616 357a 08       		.sleb128 8
 50617 357b 9F       		.byte	0x9f
 50618 357c 93       		.byte	0x93
 50619 357d 08       		.uleb128 0x8
 50620 357e 00000000 		.quad	.LVL251
 50620      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1231


 50621 3586 00000000 		.quad	.LVL260
 50621      00000000 
 50622 358e 0300     		.value	0x3
 50623 3590 5F       		.byte	0x5f
 50624 3591 93       		.byte	0x93
 50625 3592 08       		.uleb128 0x8
 50626 3593 00000000 		.quad	.LVL260
 50626      00000000 
 50627 359b 00000000 		.quad	.LVL261
 50627      00000000 
 50628 35a3 0500     		.value	0x5
 50629 35a5 7F       		.byte	0x7f
 50630 35a6 08       		.sleb128 8
 50631 35a7 9F       		.byte	0x9f
 50632 35a8 93       		.byte	0x93
 50633 35a9 08       		.uleb128 0x8
 50634 35aa 00000000 		.quad	.LVL261
 50634      00000000 
 50635 35b2 00000000 		.quad	.LVL273
 50635      00000000 
 50636 35ba 0300     		.value	0x3
 50637 35bc 5F       		.byte	0x5f
 50638 35bd 93       		.byte	0x93
 50639 35be 08       		.uleb128 0x8
 50640 35bf 00000000 		.quad	.LVL327
 50640      00000000 
 50641 35c7 00000000 		.quad	.LVL331
 50641      00000000 
 50642 35cf 0300     		.value	0x3
 50643 35d1 5F       		.byte	0x5f
 50644 35d2 93       		.byte	0x93
 50645 35d3 08       		.uleb128 0x8
 50646 35d4 00000000 		.quad	.LVL334
 50646      00000000 
 50647 35dc 00000000 		.quad	.LVL338
 50647      00000000 
 50648 35e4 0300     		.value	0x3
 50649 35e6 5F       		.byte	0x5f
 50650 35e7 93       		.byte	0x93
 50651 35e8 08       		.uleb128 0x8
 50652 35e9 00000000 		.quad	.LVL340
 50652      00000000 
 50653 35f1 00000000 		.quad	.LVL342
 50653      00000000 
 50654 35f9 0300     		.value	0x3
 50655 35fb 5F       		.byte	0x5f
 50656 35fc 93       		.byte	0x93
 50657 35fd 08       		.uleb128 0x8
 50658 35fe 00000000 		.quad	0
 50658      00000000 
 50659 3606 00000000 		.quad	0
 50659      00000000 
 50660              	.LLST257:
 50661 360e 00000000 		.quad	.LVL250
 50661      00000000 
 50662 3616 00000000 		.quad	.LVL273
 50662      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1232


 50663 361e 0200     		.value	0x2
 50664 3620 31       		.byte	0x31
 50665 3621 9F       		.byte	0x9f
 50666 3622 00000000 		.quad	.LVL327
 50666      00000000 
 50667 362a 00000000 		.quad	.LVL331
 50667      00000000 
 50668 3632 0200     		.value	0x2
 50669 3634 31       		.byte	0x31
 50670 3635 9F       		.byte	0x9f
 50671 3636 00000000 		.quad	.LVL334
 50671      00000000 
 50672 363e 00000000 		.quad	.LVL338
 50672      00000000 
 50673 3646 0200     		.value	0x2
 50674 3648 31       		.byte	0x31
 50675 3649 9F       		.byte	0x9f
 50676 364a 00000000 		.quad	.LVL340
 50676      00000000 
 50677 3652 00000000 		.quad	.LVL342
 50677      00000000 
 50678 365a 0200     		.value	0x2
 50679 365c 31       		.byte	0x31
 50680 365d 9F       		.byte	0x9f
 50681 365e 00000000 		.quad	0
 50681      00000000 
 50682 3666 00000000 		.quad	0
 50682      00000000 
 50683              	.LLST258:
 50684 366e 00000000 		.quad	.LVL250
 50684      00000000 
 50685 3676 00000000 		.quad	.LVL273
 50685      00000000 
 50686 367e 0600     		.value	0x6
 50687 3680 F2       		.byte	0xf2
 50688 3681 00000000 		.long	.Ldebug_info0+75219
 50689 3685 00       		.sleb128 0
 50690 3686 00000000 		.quad	.LVL327
 50690      00000000 
 50691 368e 00000000 		.quad	.LVL331
 50691      00000000 
 50692 3696 0600     		.value	0x6
 50693 3698 F2       		.byte	0xf2
 50694 3699 00000000 		.long	.Ldebug_info0+75219
 50695 369d 00       		.sleb128 0
 50696 369e 00000000 		.quad	.LVL334
 50696      00000000 
 50697 36a6 00000000 		.quad	.LVL338
 50697      00000000 
 50698 36ae 0600     		.value	0x6
 50699 36b0 F2       		.byte	0xf2
 50700 36b1 00000000 		.long	.Ldebug_info0+75219
 50701 36b5 00       		.sleb128 0
 50702 36b6 00000000 		.quad	.LVL340
 50702      00000000 
 50703 36be 00000000 		.quad	.LVL342
 50703      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1233


 50704 36c6 0600     		.value	0x6
 50705 36c8 F2       		.byte	0xf2
 50706 36c9 00000000 		.long	.Ldebug_info0+75219
 50707 36cd 00       		.sleb128 0
 50708 36ce 00000000 		.quad	0
 50708      00000000 
 50709 36d6 00000000 		.quad	0
 50709      00000000 
 50710              	.LLST259:
 50711 36de 00000000 		.quad	.LVL251
 50711      00000000 
 50712 36e6 00000000 		.quad	.LVL273
 50712      00000000 
 50713 36ee 0600     		.value	0x6
 50714 36f0 F2       		.byte	0xf2
 50715 36f1 00000000 		.long	.Ldebug_info0+75203
 50716 36f5 00       		.sleb128 0
 50717 36f6 00000000 		.quad	.LVL327
 50717      00000000 
 50718 36fe 00000000 		.quad	.LVL331
 50718      00000000 
 50719 3706 0600     		.value	0x6
 50720 3708 F2       		.byte	0xf2
 50721 3709 00000000 		.long	.Ldebug_info0+75203
 50722 370d 00       		.sleb128 0
 50723 370e 00000000 		.quad	.LVL334
 50723      00000000 
 50724 3716 00000000 		.quad	.LVL338
 50724      00000000 
 50725 371e 0600     		.value	0x6
 50726 3720 F2       		.byte	0xf2
 50727 3721 00000000 		.long	.Ldebug_info0+75203
 50728 3725 00       		.sleb128 0
 50729 3726 00000000 		.quad	.LVL340
 50729      00000000 
 50730 372e 00000000 		.quad	.LVL342
 50730      00000000 
 50731 3736 0600     		.value	0x6
 50732 3738 F2       		.byte	0xf2
 50733 3739 00000000 		.long	.Ldebug_info0+75203
 50734 373d 00       		.sleb128 0
 50735 373e 00000000 		.quad	0
 50735      00000000 
 50736 3746 00000000 		.quad	0
 50736      00000000 
 50737              	.LLST260:
 50738 374e 00000000 		.quad	.LVL253
 50738      00000000 
 50739 3756 00000000 		.quad	.LVL255
 50739      00000000 
 50740 375e 0300     		.value	0x3
 50741 3760 5F       		.byte	0x5f
 50742 3761 93       		.byte	0x93
 50743 3762 08       		.uleb128 0x8
 50744 3763 00000000 		.quad	.LVL255
 50744      00000000 
 50745 376b 00000000 		.quad	.LVL256
GAS LISTING /tmp/ccJUMvuF.s 			page 1234


 50745      00000000 
 50746 3773 0300     		.value	0x3
 50747 3775 50       		.byte	0x50
 50748 3776 93       		.byte	0x93
 50749 3777 08       		.uleb128 0x8
 50750 3778 00000000 		.quad	.LVL256
 50750      00000000 
 50751 3780 00000000 		.quad	.LVL257
 50751      00000000 
 50752 3788 0500     		.value	0x5
 50753 378a 70       		.byte	0x70
 50754 378b 08       		.sleb128 8
 50755 378c 9F       		.byte	0x9f
 50756 378d 93       		.byte	0x93
 50757 378e 08       		.uleb128 0x8
 50758 378f 00000000 		.quad	.LVL257
 50758      00000000 
 50759 3797 00000000 		.quad	.LVL259
 50759      00000000 
 50760 379f 0300     		.value	0x3
 50761 37a1 50       		.byte	0x50
 50762 37a2 93       		.byte	0x93
 50763 37a3 08       		.uleb128 0x8
 50764 37a4 00000000 		.quad	.LVL340
 50764      00000000 
 50765 37ac 00000000 		.quad	.LVL342
 50765      00000000 
 50766 37b4 0300     		.value	0x3
 50767 37b6 5F       		.byte	0x5f
 50768 37b7 93       		.byte	0x93
 50769 37b8 08       		.uleb128 0x8
 50770 37b9 00000000 		.quad	0
 50770      00000000 
 50771 37c1 00000000 		.quad	0
 50771      00000000 
 50772              	.LLST261:
 50773 37c9 00000000 		.quad	.LVL253
 50773      00000000 
 50774 37d1 00000000 		.quad	.LVL260
 50774      00000000 
 50775 37d9 0100     		.value	0x1
 50776 37db 62       		.byte	0x62
 50777 37dc 00000000 		.quad	.LVL340
 50777      00000000 
 50778 37e4 00000000 		.quad	.LVL342
 50778      00000000 
 50779 37ec 0100     		.value	0x1
 50780 37ee 62       		.byte	0x62
 50781 37ef 00000000 		.quad	0
 50781      00000000 
 50782 37f7 00000000 		.quad	0
 50782      00000000 
 50783              	.LLST262:
 50784 37ff 00000000 		.quad	.LVL254
 50784      00000000 
 50785 3807 00000000 		.quad	.LVL260
 50785      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1235


 50786 380f 0600     		.value	0x6
 50787 3811 F2       		.byte	0xf2
 50788 3812 00000000 		.long	.Ldebug_info0+75388
 50789 3816 00       		.sleb128 0
 50790 3817 00000000 		.quad	.LVL340
 50790      00000000 
 50791 381f 00000000 		.quad	.LVL342
 50791      00000000 
 50792 3827 0600     		.value	0x6
 50793 3829 F2       		.byte	0xf2
 50794 382a 00000000 		.long	.Ldebug_info0+75388
 50795 382e 00       		.sleb128 0
 50796 382f 00000000 		.quad	0
 50796      00000000 
 50797 3837 00000000 		.quad	0
 50797      00000000 
 50798              	.LLST263:
 50799 383f 00000000 		.quad	.LVL255
 50799      00000000 
 50800 3847 00000000 		.quad	.LVL256
 50800      00000000 
 50801 384f 0600     		.value	0x6
 50802 3851 F2       		.byte	0xf2
 50803 3852 00000000 		.long	.Ldebug_info0+75398
 50804 3856 00       		.sleb128 0
 50805 3857 00000000 		.quad	.LVL257
 50805      00000000 
 50806 385f 00000000 		.quad	.LVL259
 50806      00000000 
 50807 3867 0600     		.value	0x6
 50808 3869 F2       		.byte	0xf2
 50809 386a 00000000 		.long	.Ldebug_info0+75398
 50810 386e 00       		.sleb128 0
 50811 386f 00000000 		.quad	0
 50811      00000000 
 50812 3877 00000000 		.quad	0
 50812      00000000 
 50813              	.LLST264:
 50814 387f 00000000 		.quad	.LVL327
 50814      00000000 
 50815 3887 00000000 		.quad	.LVL329-1
 50815      00000000 
 50816 388f 0100     		.value	0x1
 50817 3891 62       		.byte	0x62
 50818 3892 00000000 		.quad	.LVL329-1
 50818      00000000 
 50819 389a 00000000 		.quad	.LVL330
 50819      00000000 
 50820 38a2 0300     		.value	0x3
 50821 38a4 91       		.byte	0x91
 50822 38a5 B87F     		.sleb128 -72
 50823 38a7 00000000 		.quad	0
 50823      00000000 
 50824 38af 00000000 		.quad	0
 50824      00000000 
 50825              	.LLST265:
 50826 38b7 00000000 		.quad	.LVL327
GAS LISTING /tmp/ccJUMvuF.s 			page 1236


 50826      00000000 
 50827 38bf 00000000 		.quad	.LVL331
 50827      00000000 
 50828 38c7 0300     		.value	0x3
 50829 38c9 7F       		.byte	0x7f
 50830 38ca 08       		.sleb128 8
 50831 38cb 9F       		.byte	0x9f
 50832 38cc 00000000 		.quad	0
 50832      00000000 
 50833 38d4 00000000 		.quad	0
 50833      00000000 
 50834              	.LLST266:
 50835 38dc 00000000 		.quad	.LVL327
 50835      00000000 
 50836 38e4 00000000 		.quad	.LVL331
 50836      00000000 
 50837 38ec 0100     		.value	0x1
 50838 38ee 5F       		.byte	0x5f
 50839 38ef 00000000 		.quad	0
 50839      00000000 
 50840 38f7 00000000 		.quad	0
 50840      00000000 
 50841              	.LLST267:
 50842 38ff 00000000 		.quad	.LVL327
 50842      00000000 
 50843 3907 00000000 		.quad	.LVL331
 50843      00000000 
 50844 390f 0100     		.value	0x1
 50845 3911 5E       		.byte	0x5e
 50846 3912 00000000 		.quad	0
 50846      00000000 
 50847 391a 00000000 		.quad	0
 50847      00000000 
 50848              	.LLST268:
 50849 3922 00000000 		.quad	.LVL327
 50849      00000000 
 50850 392a 00000000 		.quad	.LVL331
 50850      00000000 
 50851 3932 0200     		.value	0x2
 50852 3934 31       		.byte	0x31
 50853 3935 9F       		.byte	0x9f
 50854 3936 00000000 		.quad	0
 50854      00000000 
 50855 393e 00000000 		.quad	0
 50855      00000000 
 50856              	.LLST272:
 50857 3946 00000000 		.quad	.LVL328
 50857      00000000 
 50858 394e 00000000 		.quad	.LVL329-1
 50858      00000000 
 50859 3956 0500     		.value	0x5
 50860 3958 71       		.byte	0x71
 50861 3959 00       		.sleb128 0
 50862 395a 38       		.byte	0x38
 50863 395b 1B       		.byte	0x1b
 50864 395c 9F       		.byte	0x9f
 50865 395d 00000000 		.quad	.LVL329-1
GAS LISTING /tmp/ccJUMvuF.s 			page 1237


 50865      00000000 
 50866 3965 00000000 		.quad	.LVL331
 50866      00000000 
 50867 396d 0800     		.value	0x8
 50868 396f 7F       		.byte	0x7f
 50869 3970 00       		.sleb128 0
 50870 3971 7E       		.byte	0x7e
 50871 3972 00       		.sleb128 0
 50872 3973 1C       		.byte	0x1c
 50873 3974 38       		.byte	0x38
 50874 3975 1B       		.byte	0x1b
 50875 3976 9F       		.byte	0x9f
 50876 3977 00000000 		.quad	0
 50876      00000000 
 50877 397f 00000000 		.quad	0
 50877      00000000 
 50878              	.LLST273:
 50879 3987 00000000 		.quad	.LVL263
 50879      00000000 
 50880 398f 00000000 		.quad	.LVL266
 50880      00000000 
 50881 3997 0300     		.value	0x3
 50882 3999 56       		.byte	0x56
 50883 399a 93       		.byte	0x93
 50884 399b 08       		.uleb128 0x8
 50885 399c 00000000 		.quad	.LVL266
 50885      00000000 
 50886 39a4 00000000 		.quad	.LVL267
 50886      00000000 
 50887 39ac 0300     		.value	0x3
 50888 39ae 50       		.byte	0x50
 50889 39af 93       		.byte	0x93
 50890 39b0 08       		.uleb128 0x8
 50891 39b1 00000000 		.quad	.LVL267
 50891      00000000 
 50892 39b9 00000000 		.quad	.LVL268
 50892      00000000 
 50893 39c1 0500     		.value	0x5
 50894 39c3 70       		.byte	0x70
 50895 39c4 08       		.sleb128 8
 50896 39c5 9F       		.byte	0x9f
 50897 39c6 93       		.byte	0x93
 50898 39c7 08       		.uleb128 0x8
 50899 39c8 00000000 		.quad	.LVL268
 50899      00000000 
 50900 39d0 00000000 		.quad	.LVL273
 50900      00000000 
 50901 39d8 0300     		.value	0x3
 50902 39da 50       		.byte	0x50
 50903 39db 93       		.byte	0x93
 50904 39dc 08       		.uleb128 0x8
 50905 39dd 00000000 		.quad	.LVL334
 50905      00000000 
 50906 39e5 00000000 		.quad	.LVL336
 50906      00000000 
 50907 39ed 0300     		.value	0x3
 50908 39ef 56       		.byte	0x56
GAS LISTING /tmp/ccJUMvuF.s 			page 1238


 50909 39f0 93       		.byte	0x93
 50910 39f1 08       		.uleb128 0x8
 50911 39f2 00000000 		.quad	.LVL336
 50911      00000000 
 50912 39fa 00000000 		.quad	.LVL338
 50912      00000000 
 50913 3a02 0300     		.value	0x3
 50914 3a04 50       		.byte	0x50
 50915 3a05 93       		.byte	0x93
 50916 3a06 08       		.uleb128 0x8
 50917 3a07 00000000 		.quad	0
 50917      00000000 
 50918 3a0f 00000000 		.quad	0
 50918      00000000 
 50919              	.LLST274:
 50920 3a17 00000000 		.quad	.LVL264
 50920      00000000 
 50921 3a1f 00000000 		.quad	.LVL273
 50921      00000000 
 50922 3a27 0100     		.value	0x1
 50923 3a29 62       		.byte	0x62
 50924 3a2a 00000000 		.quad	.LVL334
 50924      00000000 
 50925 3a32 00000000 		.quad	.LVL338
 50925      00000000 
 50926 3a3a 0100     		.value	0x1
 50927 3a3c 62       		.byte	0x62
 50928 3a3d 00000000 		.quad	0
 50928      00000000 
 50929 3a45 00000000 		.quad	0
 50929      00000000 
 50930              	.LLST275:
 50931 3a4d 00000000 		.quad	.LVL265
 50931      00000000 
 50932 3a55 00000000 		.quad	.LVL273
 50932      00000000 
 50933 3a5d 0600     		.value	0x6
 50934 3a5f F2       		.byte	0xf2
 50935 3a60 00000000 		.long	.Ldebug_info0+75904
 50936 3a64 00       		.sleb128 0
 50937 3a65 00000000 		.quad	.LVL334
 50937      00000000 
 50938 3a6d 00000000 		.quad	.LVL338
 50938      00000000 
 50939 3a75 0600     		.value	0x6
 50940 3a77 F2       		.byte	0xf2
 50941 3a78 00000000 		.long	.Ldebug_info0+75904
 50942 3a7c 00       		.sleb128 0
 50943 3a7d 00000000 		.quad	0
 50943      00000000 
 50944 3a85 00000000 		.quad	0
 50944      00000000 
 50945              	.LLST276:
 50946 3a8d 00000000 		.quad	.LVL266
 50946      00000000 
 50947 3a95 00000000 		.quad	.LVL267
 50947      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1239


 50948 3a9d 0600     		.value	0x6
 50949 3a9f F2       		.byte	0xf2
 50950 3aa0 00000000 		.long	.Ldebug_info0+75914
 50951 3aa4 00       		.sleb128 0
 50952 3aa5 00000000 		.quad	.LVL268
 50952      00000000 
 50953 3aad 00000000 		.quad	.LVL273
 50953      00000000 
 50954 3ab5 0600     		.value	0x6
 50955 3ab7 F2       		.byte	0xf2
 50956 3ab8 00000000 		.long	.Ldebug_info0+75914
 50957 3abc 00       		.sleb128 0
 50958 3abd 00000000 		.quad	0
 50958      00000000 
 50959 3ac5 00000000 		.quad	0
 50959      00000000 
 50960              	.LLST277:
 50961 3acd 00000000 		.quad	.LVL309
 50961      00000000 
 50962 3ad5 00000000 		.quad	.LVL327
 50962      00000000 
 50963 3add 0300     		.value	0x3
 50964 3adf 5C       		.byte	0x5c
 50965 3ae0 93       		.byte	0x93
 50966 3ae1 08       		.uleb128 0x8
 50967 3ae2 00000000 		.quad	.LVL338
 50967      00000000 
 50968 3aea 00000000 		.quad	.LVL340
 50968      00000000 
 50969 3af2 0300     		.value	0x3
 50970 3af4 5C       		.byte	0x5c
 50971 3af5 93       		.byte	0x93
 50972 3af6 08       		.uleb128 0x8
 50973 3af7 00000000 		.quad	0
 50973      00000000 
 50974 3aff 00000000 		.quad	0
 50974      00000000 
 50975              	.LLST278:
 50976 3b07 00000000 		.quad	.LVL309
 50976      00000000 
 50977 3b0f 00000000 		.quad	.LVL327
 50977      00000000 
 50978 3b17 0300     		.value	0x3
 50979 3b19 5E       		.byte	0x5e
 50980 3b1a 93       		.byte	0x93
 50981 3b1b 08       		.uleb128 0x8
 50982 3b1c 00000000 		.quad	.LVL338
 50982      00000000 
 50983 3b24 00000000 		.quad	.LVL340
 50983      00000000 
 50984 3b2c 0300     		.value	0x3
 50985 3b2e 5E       		.byte	0x5e
 50986 3b2f 93       		.byte	0x93
 50987 3b30 08       		.uleb128 0x8
 50988 3b31 00000000 		.quad	0
 50988      00000000 
 50989 3b39 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1240


 50989      00000000 
 50990              	.LLST279:
 50991 3b41 00000000 		.quad	.LVL310
 50991      00000000 
 50992 3b49 00000000 		.quad	.LVL312
 50992      00000000 
 50993 3b51 0300     		.value	0x3
 50994 3b53 5D       		.byte	0x5d
 50995 3b54 93       		.byte	0x93
 50996 3b55 08       		.uleb128 0x8
 50997 3b56 00000000 		.quad	.LVL312
 50997      00000000 
 50998 3b5e 00000000 		.quad	.LVL321
 50998      00000000 
 50999 3b66 0300     		.value	0x3
 51000 3b68 5D       		.byte	0x5d
 51001 3b69 93       		.byte	0x93
 51002 3b6a 08       		.uleb128 0x8
 51003 3b6b 00000000 		.quad	.LVL321
 51003      00000000 
 51004 3b73 00000000 		.quad	.LVL322
 51004      00000000 
 51005 3b7b 0500     		.value	0x5
 51006 3b7d 7D       		.byte	0x7d
 51007 3b7e 08       		.sleb128 8
 51008 3b7f 9F       		.byte	0x9f
 51009 3b80 93       		.byte	0x93
 51010 3b81 08       		.uleb128 0x8
 51011 3b82 00000000 		.quad	.LVL322
 51011      00000000 
 51012 3b8a 00000000 		.quad	.LVL327
 51012      00000000 
 51013 3b92 0300     		.value	0x3
 51014 3b94 5D       		.byte	0x5d
 51015 3b95 93       		.byte	0x93
 51016 3b96 08       		.uleb128 0x8
 51017 3b97 00000000 		.quad	.LVL338
 51017      00000000 
 51018 3b9f 00000000 		.quad	.LVL340
 51018      00000000 
 51019 3ba7 0300     		.value	0x3
 51020 3ba9 5D       		.byte	0x5d
 51021 3baa 93       		.byte	0x93
 51022 3bab 08       		.uleb128 0x8
 51023 3bac 00000000 		.quad	0
 51023      00000000 
 51024 3bb4 00000000 		.quad	0
 51024      00000000 
 51025              	.LLST280:
 51026 3bbc 00000000 		.quad	.LVL309
 51026      00000000 
 51027 3bc4 00000000 		.quad	.LVL327
 51027      00000000 
 51028 3bcc 0200     		.value	0x2
 51029 3bce 31       		.byte	0x31
 51030 3bcf 9F       		.byte	0x9f
 51031 3bd0 00000000 		.quad	.LVL338
GAS LISTING /tmp/ccJUMvuF.s 			page 1241


 51031      00000000 
 51032 3bd8 00000000 		.quad	.LVL340
 51032      00000000 
 51033 3be0 0200     		.value	0x2
 51034 3be2 31       		.byte	0x31
 51035 3be3 9F       		.byte	0x9f
 51036 3be4 00000000 		.quad	0
 51036      00000000 
 51037 3bec 00000000 		.quad	0
 51037      00000000 
 51038              	.LLST281:
 51039 3bf4 00000000 		.quad	.LVL309
 51039      00000000 
 51040 3bfc 00000000 		.quad	.LVL327
 51040      00000000 
 51041 3c04 0600     		.value	0x6
 51042 3c06 F2       		.byte	0xf2
 51043 3c07 00000000 		.long	.Ldebug_info0+76045
 51044 3c0b 00       		.sleb128 0
 51045 3c0c 00000000 		.quad	.LVL338
 51045      00000000 
 51046 3c14 00000000 		.quad	.LVL340
 51046      00000000 
 51047 3c1c 0600     		.value	0x6
 51048 3c1e F2       		.byte	0xf2
 51049 3c1f 00000000 		.long	.Ldebug_info0+76045
 51050 3c23 00       		.sleb128 0
 51051 3c24 00000000 		.quad	0
 51051      00000000 
 51052 3c2c 00000000 		.quad	0
 51052      00000000 
 51053              	.LLST282:
 51054 3c34 00000000 		.quad	.LVL312
 51054      00000000 
 51055 3c3c 00000000 		.quad	.LVL327
 51055      00000000 
 51056 3c44 0600     		.value	0x6
 51057 3c46 F2       		.byte	0xf2
 51058 3c47 00000000 		.long	.Ldebug_info0+76029
 51059 3c4b 00       		.sleb128 0
 51060 3c4c 00000000 		.quad	.LVL338
 51060      00000000 
 51061 3c54 00000000 		.quad	.LVL340
 51061      00000000 
 51062 3c5c 0600     		.value	0x6
 51063 3c5e F2       		.byte	0xf2
 51064 3c5f 00000000 		.long	.Ldebug_info0+76029
 51065 3c63 00       		.sleb128 0
 51066 3c64 00000000 		.quad	0
 51066      00000000 
 51067 3c6c 00000000 		.quad	0
 51067      00000000 
 51068              	.LLST283:
 51069 3c74 00000000 		.quad	.LVL314
 51069      00000000 
 51070 3c7c 00000000 		.quad	.LVL316
 51070      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1242


 51071 3c84 0300     		.value	0x3
 51072 3c86 5D       		.byte	0x5d
 51073 3c87 93       		.byte	0x93
 51074 3c88 08       		.uleb128 0x8
 51075 3c89 00000000 		.quad	.LVL316
 51075      00000000 
 51076 3c91 00000000 		.quad	.LVL317
 51076      00000000 
 51077 3c99 0300     		.value	0x3
 51078 3c9b 50       		.byte	0x50
 51079 3c9c 93       		.byte	0x93
 51080 3c9d 08       		.uleb128 0x8
 51081 3c9e 00000000 		.quad	.LVL317
 51081      00000000 
 51082 3ca6 00000000 		.quad	.LVL318
 51082      00000000 
 51083 3cae 0500     		.value	0x5
 51084 3cb0 70       		.byte	0x70
 51085 3cb1 08       		.sleb128 8
 51086 3cb2 9F       		.byte	0x9f
 51087 3cb3 93       		.byte	0x93
 51088 3cb4 08       		.uleb128 0x8
 51089 3cb5 00000000 		.quad	.LVL318
 51089      00000000 
 51090 3cbd 00000000 		.quad	.LVL320
 51090      00000000 
 51091 3cc5 0300     		.value	0x3
 51092 3cc7 50       		.byte	0x50
 51093 3cc8 93       		.byte	0x93
 51094 3cc9 08       		.uleb128 0x8
 51095 3cca 00000000 		.quad	.LVL338
 51095      00000000 
 51096 3cd2 00000000 		.quad	.LVL340
 51096      00000000 
 51097 3cda 0300     		.value	0x3
 51098 3cdc 5D       		.byte	0x5d
 51099 3cdd 93       		.byte	0x93
 51100 3cde 08       		.uleb128 0x8
 51101 3cdf 00000000 		.quad	0
 51101      00000000 
 51102 3ce7 00000000 		.quad	0
 51102      00000000 
 51103              	.LLST284:
 51104 3cef 00000000 		.quad	.LVL314
 51104      00000000 
 51105 3cf7 00000000 		.quad	.LVL321
 51105      00000000 
 51106 3cff 0100     		.value	0x1
 51107 3d01 62       		.byte	0x62
 51108 3d02 00000000 		.quad	.LVL338
 51108      00000000 
 51109 3d0a 00000000 		.quad	.LVL340
 51109      00000000 
 51110 3d12 0100     		.value	0x1
 51111 3d14 62       		.byte	0x62
 51112 3d15 00000000 		.quad	0
 51112      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1243


 51113 3d1d 00000000 		.quad	0
 51113      00000000 
 51114              	.LLST285:
 51115 3d25 00000000 		.quad	.LVL315
 51115      00000000 
 51116 3d2d 00000000 		.quad	.LVL321
 51116      00000000 
 51117 3d35 0600     		.value	0x6
 51118 3d37 F2       		.byte	0xf2
 51119 3d38 00000000 		.long	.Ldebug_info0+76214
 51120 3d3c 00       		.sleb128 0
 51121 3d3d 00000000 		.quad	.LVL338
 51121      00000000 
 51122 3d45 00000000 		.quad	.LVL340
 51122      00000000 
 51123 3d4d 0600     		.value	0x6
 51124 3d4f F2       		.byte	0xf2
 51125 3d50 00000000 		.long	.Ldebug_info0+76214
 51126 3d54 00       		.sleb128 0
 51127 3d55 00000000 		.quad	0
 51127      00000000 
 51128 3d5d 00000000 		.quad	0
 51128      00000000 
 51129              	.LLST286:
 51130 3d65 00000000 		.quad	.LVL316
 51130      00000000 
 51131 3d6d 00000000 		.quad	.LVL317
 51131      00000000 
 51132 3d75 0600     		.value	0x6
 51133 3d77 F2       		.byte	0xf2
 51134 3d78 00000000 		.long	.Ldebug_info0+76224
 51135 3d7c 00       		.sleb128 0
 51136 3d7d 00000000 		.quad	.LVL318
 51136      00000000 
 51137 3d85 00000000 		.quad	.LVL320
 51137      00000000 
 51138 3d8d 0600     		.value	0x6
 51139 3d8f F2       		.byte	0xf2
 51140 3d90 00000000 		.long	.Ldebug_info0+76224
 51141 3d94 00       		.sleb128 0
 51142 3d95 00000000 		.quad	0
 51142      00000000 
 51143 3d9d 00000000 		.quad	0
 51143      00000000 
 51144              	.LLST287:
 51145 3da5 00000000 		.quad	.LVL323
 51145      00000000 
 51146 3dad 00000000 		.quad	.LVL325-1
 51146      00000000 
 51147 3db5 0100     		.value	0x1
 51148 3db7 62       		.byte	0x62
 51149 3db8 00000000 		.quad	.LVL325-1
 51149      00000000 
 51150 3dc0 00000000 		.quad	.LVL326
 51150      00000000 
 51151 3dc8 0300     		.value	0x3
 51152 3dca 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1244


 51153 3dcb B87F     		.sleb128 -72
 51154 3dcd 00000000 		.quad	0
 51154      00000000 
 51155 3dd5 00000000 		.quad	0
 51155      00000000 
 51156              	.LLST288:
 51157 3ddd 00000000 		.quad	.LVL323
 51157      00000000 
 51158 3de5 00000000 		.quad	.LVL327
 51158      00000000 
 51159 3ded 0300     		.value	0x3
 51160 3def 7D       		.byte	0x7d
 51161 3df0 08       		.sleb128 8
 51162 3df1 9F       		.byte	0x9f
 51163 3df2 00000000 		.quad	0
 51163      00000000 
 51164 3dfa 00000000 		.quad	0
 51164      00000000 
 51165              	.LLST289:
 51166 3e02 00000000 		.quad	.LVL323
 51166      00000000 
 51167 3e0a 00000000 		.quad	.LVL327
 51167      00000000 
 51168 3e12 0100     		.value	0x1
 51169 3e14 5D       		.byte	0x5d
 51170 3e15 00000000 		.quad	0
 51170      00000000 
 51171 3e1d 00000000 		.quad	0
 51171      00000000 
 51172              	.LLST290:
 51173 3e25 00000000 		.quad	.LVL323
 51173      00000000 
 51174 3e2d 00000000 		.quad	.LVL327
 51174      00000000 
 51175 3e35 0100     		.value	0x1
 51176 3e37 5E       		.byte	0x5e
 51177 3e38 00000000 		.quad	0
 51177      00000000 
 51178 3e40 00000000 		.quad	0
 51178      00000000 
 51179              	.LLST291:
 51180 3e48 00000000 		.quad	.LVL323
 51180      00000000 
 51181 3e50 00000000 		.quad	.LVL327
 51181      00000000 
 51182 3e58 0200     		.value	0x2
 51183 3e5a 31       		.byte	0x31
 51184 3e5b 9F       		.byte	0x9f
 51185 3e5c 00000000 		.quad	0
 51185      00000000 
 51186 3e64 00000000 		.quad	0
 51186      00000000 
 51187              	.LLST295:
 51188 3e6c 00000000 		.quad	.LVL324
 51188      00000000 
 51189 3e74 00000000 		.quad	.LVL325-1
 51189      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1245


 51190 3e7c 0500     		.value	0x5
 51191 3e7e 71       		.byte	0x71
 51192 3e7f 00       		.sleb128 0
 51193 3e80 38       		.byte	0x38
 51194 3e81 1B       		.byte	0x1b
 51195 3e82 9F       		.byte	0x9f
 51196 3e83 00000000 		.quad	.LVL325-1
 51196      00000000 
 51197 3e8b 00000000 		.quad	.LVL327
 51197      00000000 
 51198 3e93 0800     		.value	0x8
 51199 3e95 7D       		.byte	0x7d
 51200 3e96 00       		.sleb128 0
 51201 3e97 7E       		.byte	0x7e
 51202 3e98 00       		.sleb128 0
 51203 3e99 1C       		.byte	0x1c
 51204 3e9a 38       		.byte	0x38
 51205 3e9b 1B       		.byte	0x1b
 51206 3e9c 9F       		.byte	0x9f
 51207 3e9d 00000000 		.quad	0
 51207      00000000 
 51208 3ea5 00000000 		.quad	0
 51208      00000000 
 51209              	.LLST296:
 51210 3ead 00000000 		.quad	.LVL275
 51210      00000000 
 51211 3eb5 00000000 		.quad	.LVL309
 51211      00000000 
 51212 3ebd 0A00     		.value	0xa
 51213 3ebf 03       		.byte	0x3
 51214 3ec0 00000000 		.quad	.LC14
 51214      00000000 
 51215 3ec8 9F       		.byte	0x9f
 51216 3ec9 00000000 		.quad	.LVL331
 51216      00000000 
 51217 3ed1 00000000 		.quad	.LVL334
 51217      00000000 
 51218 3ed9 0A00     		.value	0xa
 51219 3edb 03       		.byte	0x3
 51220 3edc 00000000 		.quad	.LC14
 51220      00000000 
 51221 3ee4 9F       		.byte	0x9f
 51222 3ee5 00000000 		.quad	.LVL342
 51222      00000000 
 51223 3eed 00000000 		.quad	.LVL347
 51223      00000000 
 51224 3ef5 0A00     		.value	0xa
 51225 3ef7 03       		.byte	0x3
 51226 3ef8 00000000 		.quad	.LC14
 51226      00000000 
 51227 3f00 9F       		.byte	0x9f
 51228 3f01 00000000 		.quad	.LVL350
 51228      00000000 
 51229 3f09 00000000 		.quad	.LFE6046
 51229      00000000 
 51230 3f11 0A00     		.value	0xa
 51231 3f13 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1246


 51232 3f14 00000000 		.quad	.LC14
 51232      00000000 
 51233 3f1c 9F       		.byte	0x9f
 51234 3f1d 00000000 		.quad	0
 51234      00000000 
 51235 3f25 00000000 		.quad	0
 51235      00000000 
 51236              	.LLST297:
 51237 3f2d 00000000 		.quad	.LVL279
 51237      00000000 
 51238 3f35 00000000 		.quad	.LVL283-1
 51238      00000000 
 51239 3f3d 0100     		.value	0x1
 51240 3f3f 51       		.byte	0x51
 51241 3f40 00000000 		.quad	0
 51241      00000000 
 51242 3f48 00000000 		.quad	0
 51242      00000000 
 51243              	.LLST298:
 51244 3f50 00000000 		.quad	.LVL279
 51244      00000000 
 51245 3f58 00000000 		.quad	.LVL309
 51245      00000000 
 51246 3f60 0400     		.value	0x4
 51247 3f62 0A       		.byte	0xa
 51248 3f63 0401     		.value	0x104
 51249 3f65 9F       		.byte	0x9f
 51250 3f66 00000000 		.quad	.LVL331
 51250      00000000 
 51251 3f6e 00000000 		.quad	.LVL334
 51251      00000000 
 51252 3f76 0400     		.value	0x4
 51253 3f78 0A       		.byte	0xa
 51254 3f79 0401     		.value	0x104
 51255 3f7b 9F       		.byte	0x9f
 51256 3f7c 00000000 		.quad	.LVL342
 51256      00000000 
 51257 3f84 00000000 		.quad	.LVL347
 51257      00000000 
 51258 3f8c 0400     		.value	0x4
 51259 3f8e 0A       		.byte	0xa
 51260 3f8f 0401     		.value	0x104
 51261 3f91 9F       		.byte	0x9f
 51262 3f92 00000000 		.quad	.LVL350
 51262      00000000 
 51263 3f9a 00000000 		.quad	.LFE6046
 51263      00000000 
 51264 3fa2 0400     		.value	0x4
 51265 3fa4 0A       		.byte	0xa
 51266 3fa5 0401     		.value	0x104
 51267 3fa7 9F       		.byte	0x9f
 51268 3fa8 00000000 		.quad	0
 51268      00000000 
 51269 3fb0 00000000 		.quad	0
 51269      00000000 
 51270              	.LLST299:
 51271 3fb8 00000000 		.quad	.LVL279
GAS LISTING /tmp/ccJUMvuF.s 			page 1247


 51271      00000000 
 51272 3fc0 00000000 		.quad	.LVL309
 51272      00000000 
 51273 3fc8 0200     		.value	0x2
 51274 3fca 34       		.byte	0x34
 51275 3fcb 9F       		.byte	0x9f
 51276 3fcc 00000000 		.quad	.LVL331
 51276      00000000 
 51277 3fd4 00000000 		.quad	.LVL334
 51277      00000000 
 51278 3fdc 0200     		.value	0x2
 51279 3fde 34       		.byte	0x34
 51280 3fdf 9F       		.byte	0x9f
 51281 3fe0 00000000 		.quad	.LVL342
 51281      00000000 
 51282 3fe8 00000000 		.quad	.LVL347
 51282      00000000 
 51283 3ff0 0200     		.value	0x2
 51284 3ff2 34       		.byte	0x34
 51285 3ff3 9F       		.byte	0x9f
 51286 3ff4 00000000 		.quad	.LVL350
 51286      00000000 
 51287 3ffc 00000000 		.quad	.LFE6046
 51287      00000000 
 51288 4004 0200     		.value	0x2
 51289 4006 34       		.byte	0x34
 51290 4007 9F       		.byte	0x9f
 51291 4008 00000000 		.quad	0
 51291      00000000 
 51292 4010 00000000 		.quad	0
 51292      00000000 
 51293              	.LLST301:
 51294 4018 00000000 		.quad	.LVL279
 51294      00000000 
 51295 4020 00000000 		.quad	.LVL282
 51295      00000000 
 51296 4028 0200     		.value	0x2
 51297 402a 71       		.byte	0x71
 51298 402b 18       		.sleb128 24
 51299 402c 00000000 		.quad	0
 51299      00000000 
 51300 4034 00000000 		.quad	0
 51300      00000000 
 51301              	.LLST302:
 51302 403c 00000000 		.quad	.LVL279
 51302      00000000 
 51303 4044 00000000 		.quad	.LVL309
 51303      00000000 
 51304 404c 0400     		.value	0x4
 51305 404e 0B       		.byte	0xb
 51306 404f FBFE     		.value	0xfefb
 51307 4051 9F       		.byte	0x9f
 51308 4052 00000000 		.quad	.LVL331
 51308      00000000 
 51309 405a 00000000 		.quad	.LVL334
 51309      00000000 
 51310 4062 0400     		.value	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 1248


 51311 4064 0B       		.byte	0xb
 51312 4065 FBFE     		.value	0xfefb
 51313 4067 9F       		.byte	0x9f
 51314 4068 00000000 		.quad	.LVL342
 51314      00000000 
 51315 4070 00000000 		.quad	.LVL347
 51315      00000000 
 51316 4078 0400     		.value	0x4
 51317 407a 0B       		.byte	0xb
 51318 407b FBFE     		.value	0xfefb
 51319 407d 9F       		.byte	0x9f
 51320 407e 00000000 		.quad	.LVL350
 51320      00000000 
 51321 4086 00000000 		.quad	.LFE6046
 51321      00000000 
 51322 408e 0400     		.value	0x4
 51323 4090 0B       		.byte	0xb
 51324 4091 FBFE     		.value	0xfefb
 51325 4093 9F       		.byte	0x9f
 51326 4094 00000000 		.quad	0
 51326      00000000 
 51327 409c 00000000 		.quad	0
 51327      00000000 
 51328              	.LLST303:
 51329 40a4 00000000 		.quad	.LVL279
 51329      00000000 
 51330 40ac 00000000 		.quad	.LVL283-1
 51330      00000000 
 51331 40b4 0300     		.value	0x3
 51332 40b6 71       		.byte	0x71
 51333 40b7 18       		.sleb128 24
 51334 40b8 9F       		.byte	0x9f
 51335 40b9 00000000 		.quad	0
 51335      00000000 
 51336 40c1 00000000 		.quad	0
 51336      00000000 
 51337              	.LLST309:
 51338 40c9 00000000 		.quad	.LVL279
 51338      00000000 
 51339 40d1 00000000 		.quad	.LVL280
 51339      00000000 
 51340 40d9 0900     		.value	0x9
 51341 40db 71       		.byte	0x71
 51342 40dc 18       		.sleb128 24
 51343 40dd 94       		.byte	0x94
 51344 40de 04       		.byte	0x4
 51345 40df 0B       		.byte	0xb
 51346 40e0 FBFE     		.value	0xfefb
 51347 40e2 1A       		.byte	0x1a
 51348 40e3 9F       		.byte	0x9f
 51349 40e4 00000000 		.quad	.LVL280
 51349      00000000 
 51350 40ec 00000000 		.quad	.LVL281
 51350      00000000 
 51351 40f4 0100     		.value	0x1
 51352 40f6 50       		.byte	0x50
 51353 40f7 00000000 		.quad	.LVL281
GAS LISTING /tmp/ccJUMvuF.s 			page 1249


 51353      00000000 
 51354 40ff 00000000 		.quad	.LVL282
 51354      00000000 
 51355 4107 0900     		.value	0x9
 51356 4109 71       		.byte	0x71
 51357 410a 18       		.sleb128 24
 51358 410b 94       		.byte	0x94
 51359 410c 04       		.byte	0x4
 51360 410d 0B       		.byte	0xb
 51361 410e FBFE     		.value	0xfefb
 51362 4110 1A       		.byte	0x1a
 51363 4111 9F       		.byte	0x9f
 51364 4112 00000000 		.quad	0
 51364      00000000 
 51365 411a 00000000 		.quad	0
 51365      00000000 
 51366              	.LLST310:
 51367 4122 00000000 		.quad	.LVL282
 51367      00000000 
 51368 412a 00000000 		.quad	.LVL283-1
 51368      00000000 
 51369 4132 0100     		.value	0x1
 51370 4134 61       		.byte	0x61
 51371 4135 00000000 		.quad	.LVL283-1
 51371      00000000 
 51372 413d 00000000 		.quad	.LVL286
 51372      00000000 
 51373 4145 1300     		.value	0x13
 51374 4147 91       		.byte	0x91
 51375 4148 B87F     		.sleb128 -72
 51376 414a F6       		.byte	0xf6
 51377 414b 08       		.byte	0x8
 51378 414c 29       		.uleb128 0x29
 51379 414d F4       		.byte	0xf4
 51380 414e 29       		.uleb128 0x29
 51381 414f 08       		.byte	0x8
 51382 4150 00000000 		.long	0
 51383 4154 00408F40 		.long	0x408f4000
 51384 4158 1E       		.byte	0x1e
 51385 4159 9F       		.byte	0x9f
 51386 415a 00000000 		.quad	.LVL286
 51386      00000000 
 51387 4162 00000000 		.quad	.LVL287
 51387      00000000 
 51388 416a 0B00     		.value	0xb
 51389 416c F5       		.byte	0xf5
 51390 416d 11       		.uleb128 0x11
 51391 416e 29       		.uleb128 0x29
 51392 416f 91       		.byte	0x91
 51393 4170 B87F     		.sleb128 -72
 51394 4172 F6       		.byte	0xf6
 51395 4173 08       		.byte	0x8
 51396 4174 29       		.uleb128 0x29
 51397 4175 1E       		.byte	0x1e
 51398 4176 9F       		.byte	0x9f
 51399 4177 00000000 		.quad	.LVL287
 51399      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1250


 51400 417f 00000000 		.quad	.LVL309
 51400      00000000 
 51401 4187 1300     		.value	0x13
 51402 4189 91       		.byte	0x91
 51403 418a B87F     		.sleb128 -72
 51404 418c F6       		.byte	0xf6
 51405 418d 08       		.byte	0x8
 51406 418e 29       		.uleb128 0x29
 51407 418f F4       		.byte	0xf4
 51408 4190 29       		.uleb128 0x29
 51409 4191 08       		.byte	0x8
 51410 4192 00000000 		.long	0
 51411 4196 00408F40 		.long	0x408f4000
 51412 419a 1E       		.byte	0x1e
 51413 419b 9F       		.byte	0x9f
 51414 419c 00000000 		.quad	.LVL331
 51414      00000000 
 51415 41a4 00000000 		.quad	.LVL334
 51415      00000000 
 51416 41ac 1300     		.value	0x13
 51417 41ae 91       		.byte	0x91
 51418 41af B87F     		.sleb128 -72
 51419 41b1 F6       		.byte	0xf6
 51420 41b2 08       		.byte	0x8
 51421 41b3 29       		.uleb128 0x29
 51422 41b4 F4       		.byte	0xf4
 51423 41b5 29       		.uleb128 0x29
 51424 41b6 08       		.byte	0x8
 51425 41b7 00000000 		.long	0
 51426 41bb 00408F40 		.long	0x408f4000
 51427 41bf 1E       		.byte	0x1e
 51428 41c0 9F       		.byte	0x9f
 51429 41c1 00000000 		.quad	.LVL342
 51429      00000000 
 51430 41c9 00000000 		.quad	.LVL347
 51430      00000000 
 51431 41d1 1300     		.value	0x13
 51432 41d3 91       		.byte	0x91
 51433 41d4 B87F     		.sleb128 -72
 51434 41d6 F6       		.byte	0xf6
 51435 41d7 08       		.byte	0x8
 51436 41d8 29       		.uleb128 0x29
 51437 41d9 F4       		.byte	0xf4
 51438 41da 29       		.uleb128 0x29
 51439 41db 08       		.byte	0x8
 51440 41dc 00000000 		.long	0
 51441 41e0 00408F40 		.long	0x408f4000
 51442 41e4 1E       		.byte	0x1e
 51443 41e5 9F       		.byte	0x9f
 51444 41e6 00000000 		.quad	.LVL350
 51444      00000000 
 51445 41ee 00000000 		.quad	.LFE6046
 51445      00000000 
 51446 41f6 1300     		.value	0x13
 51447 41f8 91       		.byte	0x91
 51448 41f9 B87F     		.sleb128 -72
 51449 41fb F6       		.byte	0xf6
GAS LISTING /tmp/ccJUMvuF.s 			page 1251


 51450 41fc 08       		.byte	0x8
 51451 41fd 29       		.uleb128 0x29
 51452 41fe F4       		.byte	0xf4
 51453 41ff 29       		.uleb128 0x29
 51454 4200 08       		.byte	0x8
 51455 4201 00000000 		.long	0
 51456 4205 00408F40 		.long	0x408f4000
 51457 4209 1E       		.byte	0x1e
 51458 420a 9F       		.byte	0x9f
 51459 420b 00000000 		.quad	0
 51459      00000000 
 51460 4213 00000000 		.quad	0
 51460      00000000 
 51461              	.LLST311:
 51462 421b 00000000 		.quad	.LVL284
 51462      00000000 
 51463 4223 00000000 		.quad	.LVL309
 51463      00000000 
 51464 422b 0A00     		.value	0xa
 51465 422d 03       		.byte	0x3
 51466 422e 00000000 		.quad	.LC15
 51466      00000000 
 51467 4236 9F       		.byte	0x9f
 51468 4237 00000000 		.quad	.LVL331
 51468      00000000 
 51469 423f 00000000 		.quad	.LVL334
 51469      00000000 
 51470 4247 0A00     		.value	0xa
 51471 4249 03       		.byte	0x3
 51472 424a 00000000 		.quad	.LC15
 51472      00000000 
 51473 4252 9F       		.byte	0x9f
 51474 4253 00000000 		.quad	.LVL342
 51474      00000000 
 51475 425b 00000000 		.quad	.LVL347
 51475      00000000 
 51476 4263 0A00     		.value	0xa
 51477 4265 03       		.byte	0x3
 51478 4266 00000000 		.quad	.LC15
 51478      00000000 
 51479 426e 9F       		.byte	0x9f
 51480 426f 00000000 		.quad	.LVL350
 51480      00000000 
 51481 4277 00000000 		.quad	.LFE6046
 51481      00000000 
 51482 427f 0A00     		.value	0xa
 51483 4281 03       		.byte	0x3
 51484 4282 00000000 		.quad	.LC15
 51484      00000000 
 51485 428a 9F       		.byte	0x9f
 51486 428b 00000000 		.quad	0
 51486      00000000 
 51487 4293 00000000 		.quad	0
 51487      00000000 
 51488              	.LLST312:
 51489 429b 00000000 		.quad	.LVL284
 51489      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1252


 51490 42a3 00000000 		.quad	.LVL285-1
 51490      00000000 
 51491 42ab 0100     		.value	0x1
 51492 42ad 50       		.byte	0x50
 51493 42ae 00000000 		.quad	.LVL285-1
 51493      00000000 
 51494 42b6 00000000 		.quad	.LVL289
 51494      00000000 
 51495 42be 0100     		.value	0x1
 51496 42c0 56       		.byte	0x56
 51497 42c1 00000000 		.quad	0
 51497      00000000 
 51498 42c9 00000000 		.quad	0
 51498      00000000 
 51499              	.LLST313:
 51500 42d1 00000000 		.quad	.LVL285
 51500      00000000 
 51501 42d9 00000000 		.quad	.LVL287
 51501      00000000 
 51502 42e1 1200     		.value	0x12
 51503 42e3 77       		.byte	0x77
 51504 42e4 00       		.sleb128 0
 51505 42e5 F6       		.byte	0xf6
 51506 42e6 08       		.byte	0x8
 51507 42e7 29       		.uleb128 0x29
 51508 42e8 F4       		.byte	0xf4
 51509 42e9 29       		.uleb128 0x29
 51510 42ea 08       		.byte	0x8
 51511 42eb 00000000 		.long	0
 51512 42ef 00408F40 		.long	0x408f4000
 51513 42f3 1E       		.byte	0x1e
 51514 42f4 9F       		.byte	0x9f
 51515 42f5 00000000 		.quad	.LVL287
 51515      00000000 
 51516 42fd 00000000 		.quad	.LVL288-1
 51516      00000000 
 51517 4305 0100     		.value	0x1
 51518 4307 61       		.byte	0x61
 51519 4308 00000000 		.quad	.LVL288-1
 51519      00000000 
 51520 4310 00000000 		.quad	.LVL305
 51520      00000000 
 51521 4318 1200     		.value	0x12
 51522 431a 77       		.byte	0x77
 51523 431b 00       		.sleb128 0
 51524 431c F6       		.byte	0xf6
 51525 431d 08       		.byte	0x8
 51526 431e 29       		.uleb128 0x29
 51527 431f F4       		.byte	0xf4
 51528 4320 29       		.uleb128 0x29
 51529 4321 08       		.byte	0x8
 51530 4322 00000000 		.long	0
 51531 4326 00408F40 		.long	0x408f4000
 51532 432a 1E       		.byte	0x1e
 51533 432b 9F       		.byte	0x9f
 51534 432c 00000000 		.quad	.LVL305
 51534      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1253


 51535 4334 00000000 		.quad	.LVL309
 51535      00000000 
 51536 433c 1300     		.value	0x13
 51537 433e 91       		.byte	0x91
 51538 433f B07F     		.sleb128 -80
 51539 4341 F6       		.byte	0xf6
 51540 4342 08       		.byte	0x8
 51541 4343 29       		.uleb128 0x29
 51542 4344 F4       		.byte	0xf4
 51543 4345 29       		.uleb128 0x29
 51544 4346 08       		.byte	0x8
 51545 4347 00000000 		.long	0
 51546 434b 00408F40 		.long	0x408f4000
 51547 434f 1E       		.byte	0x1e
 51548 4350 9F       		.byte	0x9f
 51549 4351 00000000 		.quad	.LVL331
 51549      00000000 
 51550 4359 00000000 		.quad	.LVL334
 51550      00000000 
 51551 4361 1200     		.value	0x12
 51552 4363 77       		.byte	0x77
 51553 4364 00       		.sleb128 0
 51554 4365 F6       		.byte	0xf6
 51555 4366 08       		.byte	0x8
 51556 4367 29       		.uleb128 0x29
 51557 4368 F4       		.byte	0xf4
 51558 4369 29       		.uleb128 0x29
 51559 436a 08       		.byte	0x8
 51560 436b 00000000 		.long	0
 51561 436f 00408F40 		.long	0x408f4000
 51562 4373 1E       		.byte	0x1e
 51563 4374 9F       		.byte	0x9f
 51564 4375 00000000 		.quad	.LVL342
 51564      00000000 
 51565 437d 00000000 		.quad	.LVL343
 51565      00000000 
 51566 4385 1200     		.value	0x12
 51567 4387 77       		.byte	0x77
 51568 4388 00       		.sleb128 0
 51569 4389 F6       		.byte	0xf6
 51570 438a 08       		.byte	0x8
 51571 438b 29       		.uleb128 0x29
 51572 438c F4       		.byte	0xf4
 51573 438d 29       		.uleb128 0x29
 51574 438e 08       		.byte	0x8
 51575 438f 00000000 		.long	0
 51576 4393 00408F40 		.long	0x408f4000
 51577 4397 1E       		.byte	0x1e
 51578 4398 9F       		.byte	0x9f
 51579 4399 00000000 		.quad	.LVL343
 51579      00000000 
 51580 43a1 00000000 		.quad	.LVL347
 51580      00000000 
 51581 43a9 1300     		.value	0x13
 51582 43ab 91       		.byte	0x91
 51583 43ac B07F     		.sleb128 -80
 51584 43ae F6       		.byte	0xf6
GAS LISTING /tmp/ccJUMvuF.s 			page 1254


 51585 43af 08       		.byte	0x8
 51586 43b0 29       		.uleb128 0x29
 51587 43b1 F4       		.byte	0xf4
 51588 43b2 29       		.uleb128 0x29
 51589 43b3 08       		.byte	0x8
 51590 43b4 00000000 		.long	0
 51591 43b8 00408F40 		.long	0x408f4000
 51592 43bc 1E       		.byte	0x1e
 51593 43bd 9F       		.byte	0x9f
 51594 43be 00000000 		.quad	.LVL350
 51594      00000000 
 51595 43c6 00000000 		.quad	.LFE6046
 51595      00000000 
 51596 43ce 1200     		.value	0x12
 51597 43d0 77       		.byte	0x77
 51598 43d1 00       		.sleb128 0
 51599 43d2 F6       		.byte	0xf6
 51600 43d3 08       		.byte	0x8
 51601 43d4 29       		.uleb128 0x29
 51602 43d5 F4       		.byte	0xf4
 51603 43d6 29       		.uleb128 0x29
 51604 43d7 08       		.byte	0x8
 51605 43d8 00000000 		.long	0
 51606 43dc 00408F40 		.long	0x408f4000
 51607 43e0 1E       		.byte	0x1e
 51608 43e1 9F       		.byte	0x9f
 51609 43e2 00000000 		.quad	0
 51609      00000000 
 51610 43ea 00000000 		.quad	0
 51610      00000000 
 51611              	.LLST314:
 51612 43f2 00000000 		.quad	.LVL289
 51612      00000000 
 51613 43fa 00000000 		.quad	.LVL309
 51613      00000000 
 51614 4402 0A00     		.value	0xa
 51615 4404 03       		.byte	0x3
 51616 4405 00000000 		.quad	.LC16
 51616      00000000 
 51617 440d 9F       		.byte	0x9f
 51618 440e 00000000 		.quad	.LVL331
 51618      00000000 
 51619 4416 00000000 		.quad	.LVL334
 51619      00000000 
 51620 441e 0A00     		.value	0xa
 51621 4420 03       		.byte	0x3
 51622 4421 00000000 		.quad	.LC16
 51622      00000000 
 51623 4429 9F       		.byte	0x9f
 51624 442a 00000000 		.quad	.LVL342
 51624      00000000 
 51625 4432 00000000 		.quad	.LVL347
 51625      00000000 
 51626 443a 0A00     		.value	0xa
 51627 443c 03       		.byte	0x3
 51628 443d 00000000 		.quad	.LC16
 51628      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1255


 51629 4445 9F       		.byte	0x9f
 51630 4446 00000000 		.quad	.LVL350
 51630      00000000 
 51631 444e 00000000 		.quad	.LFE6046
 51631      00000000 
 51632 4456 0A00     		.value	0xa
 51633 4458 03       		.byte	0x3
 51634 4459 00000000 		.quad	.LC16
 51634      00000000 
 51635 4461 9F       		.byte	0x9f
 51636 4462 00000000 		.quad	0
 51636      00000000 
 51637 446a 00000000 		.quad	0
 51637      00000000 
 51638              	.LLST315:
 51639 4472 00000000 		.quad	.LVL289
 51639      00000000 
 51640 447a 00000000 		.quad	.LVL290-1
 51640      00000000 
 51641 4482 0100     		.value	0x1
 51642 4484 50       		.byte	0x50
 51643 4485 00000000 		.quad	.LVL290-1
 51643      00000000 
 51644 448d 00000000 		.quad	.LVL296
 51644      00000000 
 51645 4495 0100     		.value	0x1
 51646 4497 56       		.byte	0x56
 51647 4498 00000000 		.quad	.LVL331
 51647      00000000 
 51648 44a0 00000000 		.quad	.LVL334
 51648      00000000 
 51649 44a8 0100     		.value	0x1
 51650 44aa 56       		.byte	0x56
 51651 44ab 00000000 		.quad	.LVL350
 51651      00000000 
 51652 44b3 00000000 		.quad	.LFE6046
 51652      00000000 
 51653 44bb 0100     		.value	0x1
 51654 44bd 56       		.byte	0x56
 51655 44be 00000000 		.quad	0
 51655      00000000 
 51656 44c6 00000000 		.quad	0
 51656      00000000 
 51657              	.LLST316:
 51658 44ce 00000000 		.quad	.LVL290
 51658      00000000 
 51659 44d6 00000000 		.quad	.LVL296
 51659      00000000 
 51660 44de 0100     		.value	0x1
 51661 44e0 56       		.byte	0x56
 51662 44e1 00000000 		.quad	.LVL331
 51662      00000000 
 51663 44e9 00000000 		.quad	.LVL334
 51663      00000000 
 51664 44f1 0100     		.value	0x1
 51665 44f3 56       		.byte	0x56
 51666 44f4 00000000 		.quad	.LVL350
GAS LISTING /tmp/ccJUMvuF.s 			page 1256


 51666      00000000 
 51667 44fc 00000000 		.quad	.LFE6046
 51667      00000000 
 51668 4504 0100     		.value	0x1
 51669 4506 56       		.byte	0x56
 51670 4507 00000000 		.quad	0
 51670      00000000 
 51671 450f 00000000 		.quad	0
 51671      00000000 
 51672              	.LLST317:
 51673 4517 00000000 		.quad	.LVL290
 51673      00000000 
 51674 451f 00000000 		.quad	.LVL309
 51674      00000000 
 51675 4527 0200     		.value	0x2
 51676 4529 3A       		.byte	0x3a
 51677 452a 9F       		.byte	0x9f
 51678 452b 00000000 		.quad	.LVL331
 51678      00000000 
 51679 4533 00000000 		.quad	.LVL334
 51679      00000000 
 51680 453b 0200     		.value	0x2
 51681 453d 3A       		.byte	0x3a
 51682 453e 9F       		.byte	0x9f
 51683 453f 00000000 		.quad	.LVL342
 51683      00000000 
 51684 4547 00000000 		.quad	.LVL347
 51684      00000000 
 51685 454f 0200     		.value	0x2
 51686 4551 3A       		.byte	0x3a
 51687 4552 9F       		.byte	0x9f
 51688 4553 00000000 		.quad	.LVL350
 51688      00000000 
 51689 455b 00000000 		.quad	.LFE6046
 51689      00000000 
 51690 4563 0200     		.value	0x2
 51691 4565 3A       		.byte	0x3a
 51692 4566 9F       		.byte	0x9f
 51693 4567 00000000 		.quad	0
 51693      00000000 
 51694 456f 00000000 		.quad	0
 51694      00000000 
 51695              	.LLST318:
 51696 4577 00000000 		.quad	.LVL290
 51696      00000000 
 51697 457f 00000000 		.quad	.LVL293
 51697      00000000 
 51698 4587 0A00     		.value	0xa
 51699 4589 76       		.byte	0x76
 51700 458a 00       		.sleb128 0
 51701 458b 76       		.byte	0x76
 51702 458c 00       		.sleb128 0
 51703 458d 06       		.byte	0x6
 51704 458e 48       		.byte	0x48
 51705 458f 1C       		.byte	0x1c
 51706 4590 06       		.byte	0x6
 51707 4591 22       		.byte	0x22
GAS LISTING /tmp/ccJUMvuF.s 			page 1257


 51708 4592 9F       		.byte	0x9f
 51709 4593 00000000 		.quad	.LVL331
 51709      00000000 
 51710 459b 00000000 		.quad	.LVL332-1
 51710      00000000 
 51711 45a3 0600     		.value	0x6
 51712 45a5 76       		.byte	0x76
 51713 45a6 00       		.sleb128 0
 51714 45a7 70       		.byte	0x70
 51715 45a8 00       		.sleb128 0
 51716 45a9 22       		.byte	0x22
 51717 45aa 9F       		.byte	0x9f
 51718 45ab 00000000 		.quad	.LVL350
 51718      00000000 
 51719 45b3 00000000 		.quad	.LVL351-1
 51719      00000000 
 51720 45bb 0600     		.value	0x6
 51721 45bd 76       		.byte	0x76
 51722 45be 00       		.sleb128 0
 51723 45bf 70       		.byte	0x70
 51724 45c0 00       		.sleb128 0
 51725 45c1 22       		.byte	0x22
 51726 45c2 9F       		.byte	0x9f
 51727 45c3 00000000 		.quad	0
 51727      00000000 
 51728 45cb 00000000 		.quad	0
 51728      00000000 
 51729              	.LLST319:
 51730 45d3 00000000 		.quad	.LVL291
 51730      00000000 
 51731 45db 00000000 		.quad	.LVL308
 51731      00000000 
 51732 45e3 0100     		.value	0x1
 51733 45e5 5C       		.byte	0x5c
 51734 45e6 00000000 		.quad	.LVL331
 51734      00000000 
 51735 45ee 00000000 		.quad	.LVL334
 51735      00000000 
 51736 45f6 0100     		.value	0x1
 51737 45f8 5C       		.byte	0x5c
 51738 45f9 00000000 		.quad	.LVL342
 51738      00000000 
 51739 4601 00000000 		.quad	.LVL346
 51739      00000000 
 51740 4609 0100     		.value	0x1
 51741 460b 5C       		.byte	0x5c
 51742 460c 00000000 		.quad	.LVL350
 51742      00000000 
 51743 4614 00000000 		.quad	.LFE6046
 51743      00000000 
 51744 461c 0100     		.value	0x1
 51745 461e 5C       		.byte	0x5c
 51746 461f 00000000 		.quad	0
 51746      00000000 
 51747 4627 00000000 		.quad	0
 51747      00000000 
 51748              	.LLST320:
GAS LISTING /tmp/ccJUMvuF.s 			page 1258


 51749 462f 00000000 		.quad	.LVL292
 51749      00000000 
 51750 4637 00000000 		.quad	.LVL309
 51750      00000000 
 51751 463f 0200     		.value	0x2
 51752 4641 3A       		.byte	0x3a
 51753 4642 9F       		.byte	0x9f
 51754 4643 00000000 		.quad	.LVL331
 51754      00000000 
 51755 464b 00000000 		.quad	.LVL334
 51755      00000000 
 51756 4653 0200     		.value	0x2
 51757 4655 3A       		.byte	0x3a
 51758 4656 9F       		.byte	0x9f
 51759 4657 00000000 		.quad	.LVL342
 51759      00000000 
 51760 465f 00000000 		.quad	.LVL347
 51760      00000000 
 51761 4667 0200     		.value	0x2
 51762 4669 3A       		.byte	0x3a
 51763 466a 9F       		.byte	0x9f
 51764 466b 00000000 		.quad	0
 51764      00000000 
 51765 4673 00000000 		.quad	0
 51765      00000000 
 51766              	.LLST321:
 51767 467b 00000000 		.quad	.LVL292
 51767      00000000 
 51768 4683 00000000 		.quad	.LVL308
 51768      00000000 
 51769 468b 0100     		.value	0x1
 51770 468d 5C       		.byte	0x5c
 51771 468e 00000000 		.quad	.LVL331
 51771      00000000 
 51772 4696 00000000 		.quad	.LVL334
 51772      00000000 
 51773 469e 0100     		.value	0x1
 51774 46a0 5C       		.byte	0x5c
 51775 46a1 00000000 		.quad	.LVL342
 51775      00000000 
 51776 46a9 00000000 		.quad	.LVL346
 51776      00000000 
 51777 46b1 0100     		.value	0x1
 51778 46b3 5C       		.byte	0x5c
 51779 46b4 00000000 		.quad	0
 51779      00000000 
 51780 46bc 00000000 		.quad	0
 51780      00000000 
 51781              	.LLST322:
 51782 46c4 00000000 		.quad	.LVL331
 51782      00000000 
 51783 46cc 00000000 		.quad	.LVL334
 51783      00000000 
 51784 46d4 0200     		.value	0x2
 51785 46d6 3A       		.byte	0x3a
 51786 46d7 9F       		.byte	0x9f
 51787 46d8 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1259


 51787      00000000 
 51788 46e0 00000000 		.quad	0
 51788      00000000 
 51789              	.LLST323:
 51790 46e8 00000000 		.quad	.LVL331
 51790      00000000 
 51791 46f0 00000000 		.quad	.LVL334
 51791      00000000 
 51792 46f8 0100     		.value	0x1
 51793 46fa 5C       		.byte	0x5c
 51794 46fb 00000000 		.quad	0
 51794      00000000 
 51795 4703 00000000 		.quad	0
 51795      00000000 
 51796              	.LLST324:
 51797 470b 00000000 		.quad	.LVL294
 51797      00000000 
 51798 4713 00000000 		.quad	.LVL295-1
 51798      00000000 
 51799 471b 0100     		.value	0x1
 51800 471d 50       		.byte	0x50
 51801 471e 00000000 		.quad	0
 51801      00000000 
 51802 4726 00000000 		.quad	0
 51802      00000000 
 51803              	.LLST325:
 51804 472e 00000000 		.quad	.LVL295
 51804      00000000 
 51805 4736 00000000 		.quad	.LVL309
 51805      00000000 
 51806 473e 0A00     		.value	0xa
 51807 4740 03       		.byte	0x3
 51808 4741 00000000 		.quad	.LC17
 51808      00000000 
 51809 4749 9F       		.byte	0x9f
 51810 474a 00000000 		.quad	.LVL342
 51810      00000000 
 51811 4752 00000000 		.quad	.LVL347
 51811      00000000 
 51812 475a 0A00     		.value	0xa
 51813 475c 03       		.byte	0x3
 51814 475d 00000000 		.quad	.LC17
 51814      00000000 
 51815 4765 9F       		.byte	0x9f
 51816 4766 00000000 		.quad	0
 51816      00000000 
 51817 476e 00000000 		.quad	0
 51817      00000000 
 51818              	.LLST326:
 51819 4776 00000000 		.quad	.LVL297
 51819      00000000 
 51820 477e 00000000 		.quad	.LVL309
 51820      00000000 
 51821 4786 0300     		.value	0x3
 51822 4788 91       		.byte	0x91
 51823 4789 B87F     		.sleb128 -72
 51824 478b 00000000 		.quad	.LVL342
GAS LISTING /tmp/ccJUMvuF.s 			page 1260


 51824      00000000 
 51825 4793 00000000 		.quad	.LVL347
 51825      00000000 
 51826 479b 0300     		.value	0x3
 51827 479d 91       		.byte	0x91
 51828 479e B87F     		.sleb128 -72
 51829 47a0 00000000 		.quad	0
 51829      00000000 
 51830 47a8 00000000 		.quad	0
 51830      00000000 
 51831              	.LLST327:
 51832 47b0 00000000 		.quad	.LVL299
 51832      00000000 
 51833 47b8 00000000 		.quad	.LVL309
 51833      00000000 
 51834 47c0 0A00     		.value	0xa
 51835 47c2 03       		.byte	0x3
 51836 47c3 00000000 		.quad	.LC18
 51836      00000000 
 51837 47cb 9F       		.byte	0x9f
 51838 47cc 00000000 		.quad	.LVL342
 51838      00000000 
 51839 47d4 00000000 		.quad	.LVL347
 51839      00000000 
 51840 47dc 0A00     		.value	0xa
 51841 47de 03       		.byte	0x3
 51842 47df 00000000 		.quad	.LC18
 51842      00000000 
 51843 47e7 9F       		.byte	0x9f
 51844 47e8 00000000 		.quad	0
 51844      00000000 
 51845 47f0 00000000 		.quad	0
 51845      00000000 
 51846              	.LLST328:
 51847 47f8 00000000 		.quad	.LVL299
 51847      00000000 
 51848 4800 00000000 		.quad	.LVL300-1
 51848      00000000 
 51849 4808 0100     		.value	0x1
 51850 480a 50       		.byte	0x50
 51851 480b 00000000 		.quad	.LVL300-1
 51851      00000000 
 51852 4813 00000000 		.quad	.LVL307
 51852      00000000 
 51853 481b 0100     		.value	0x1
 51854 481d 56       		.byte	0x56
 51855 481e 00000000 		.quad	.LVL342
 51855      00000000 
 51856 4826 00000000 		.quad	.LVL345
 51856      00000000 
 51857 482e 0100     		.value	0x1
 51858 4830 56       		.byte	0x56
 51859 4831 00000000 		.quad	0
 51859      00000000 
 51860 4839 00000000 		.quad	0
 51860      00000000 
 51861              	.LLST329:
GAS LISTING /tmp/ccJUMvuF.s 			page 1261


 51862 4841 00000000 		.quad	.LVL300
 51862      00000000 
 51863 4849 00000000 		.quad	.LVL305
 51863      00000000 
 51864 4851 0200     		.value	0x2
 51865 4853 77       		.byte	0x77
 51866 4854 00       		.sleb128 0
 51867 4855 00000000 		.quad	.LVL305
 51867      00000000 
 51868 485d 00000000 		.quad	.LVL309
 51868      00000000 
 51869 4865 0300     		.value	0x3
 51870 4867 91       		.byte	0x91
 51871 4868 B07F     		.sleb128 -80
 51872 486a 00000000 		.quad	.LVL342
 51872      00000000 
 51873 4872 00000000 		.quad	.LVL343
 51873      00000000 
 51874 487a 0200     		.value	0x2
 51875 487c 77       		.byte	0x77
 51876 487d 00       		.sleb128 0
 51877 487e 00000000 		.quad	.LVL343
 51877      00000000 
 51878 4886 00000000 		.quad	.LVL347
 51878      00000000 
 51879 488e 0300     		.value	0x3
 51880 4890 91       		.byte	0x91
 51881 4891 B07F     		.sleb128 -80
 51882 4893 00000000 		.quad	0
 51882      00000000 
 51883 489b 00000000 		.quad	0
 51883      00000000 
 51884              	.LLST330:
 51885 48a3 00000000 		.quad	.LVL301
 51885      00000000 
 51886 48ab 00000000 		.quad	.LVL309
 51886      00000000 
 51887 48b3 0A00     		.value	0xa
 51888 48b5 03       		.byte	0x3
 51889 48b6 00000000 		.quad	.LC19
 51889      00000000 
 51890 48be 9F       		.byte	0x9f
 51891 48bf 00000000 		.quad	.LVL342
 51891      00000000 
 51892 48c7 00000000 		.quad	.LVL347
 51892      00000000 
 51893 48cf 0A00     		.value	0xa
 51894 48d1 03       		.byte	0x3
 51895 48d2 00000000 		.quad	.LC19
 51895      00000000 
 51896 48da 9F       		.byte	0x9f
 51897 48db 00000000 		.quad	0
 51897      00000000 
 51898 48e3 00000000 		.quad	0
 51898      00000000 
 51899              	.LLST331:
 51900 48eb 00000000 		.quad	.LVL301
GAS LISTING /tmp/ccJUMvuF.s 			page 1262


 51900      00000000 
 51901 48f3 00000000 		.quad	.LVL302-1
 51901      00000000 
 51902 48fb 0100     		.value	0x1
 51903 48fd 50       		.byte	0x50
 51904 48fe 00000000 		.quad	0
 51904      00000000 
 51905 4906 00000000 		.quad	0
 51905      00000000 
 51906              	.LLST332:
 51907 490e 00000000 		.quad	.LVL302
 51907      00000000 
 51908 4916 00000000 		.quad	.LVL306
 51908      00000000 
 51909 491e 0300     		.value	0x3
 51910 4920 73       		.byte	0x73
 51911 4921 08       		.sleb128 8
 51912 4922 9F       		.byte	0x9f
 51913 4923 00000000 		.quad	.LVL306
 51913      00000000 
 51914 492b 00000000 		.quad	.LVL309
 51914      00000000 
 51915 4933 0600     		.value	0x6
 51916 4935 F3       		.byte	0xf3
 51917 4936 01       		.uleb128 0x1
 51918 4937 55       		.byte	0x55
 51919 4938 23       		.byte	0x23
 51920 4939 08       		.uleb128 0x8
 51921 493a 9F       		.byte	0x9f
 51922 493b 00000000 		.quad	.LVL342
 51922      00000000 
 51923 4943 00000000 		.quad	.LVL344
 51923      00000000 
 51924 494b 0300     		.value	0x3
 51925 494d 73       		.byte	0x73
 51926 494e 08       		.sleb128 8
 51927 494f 9F       		.byte	0x9f
 51928 4950 00000000 		.quad	.LVL344
 51928      00000000 
 51929 4958 00000000 		.quad	.LVL347
 51929      00000000 
 51930 4960 0600     		.value	0x6
 51931 4962 F3       		.byte	0xf3
 51932 4963 01       		.uleb128 0x1
 51933 4964 55       		.byte	0x55
 51934 4965 23       		.byte	0x23
 51935 4966 08       		.uleb128 0x8
 51936 4967 9F       		.byte	0x9f
 51937 4968 00000000 		.quad	0
 51937      00000000 
 51938 4970 00000000 		.quad	0
 51938      00000000 
 51939              	.LLST334:
 51940 4978 00000000 		.quad	.LVL303
 51940      00000000 
 51941 4980 00000000 		.quad	.LVL306
 51941      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1263


 51942 4988 0A00     		.value	0xa
 51943 498a 73       		.byte	0x73
 51944 498b 18       		.sleb128 24
 51945 498c 06       		.byte	0x6
 51946 498d 73       		.byte	0x73
 51947 498e 08       		.sleb128 8
 51948 498f 06       		.byte	0x6
 51949 4990 1C       		.byte	0x1c
 51950 4991 38       		.byte	0x38
 51951 4992 1B       		.byte	0x1b
 51952 4993 9F       		.byte	0x9f
 51953 4994 00000000 		.quad	.LVL306
 51953      00000000 
 51954 499c 00000000 		.quad	.LVL309-1
 51954      00000000 
 51955 49a4 1000     		.value	0x10
 51956 49a6 F3       		.byte	0xf3
 51957 49a7 01       		.uleb128 0x1
 51958 49a8 55       		.byte	0x55
 51959 49a9 23       		.byte	0x23
 51960 49aa 18       		.uleb128 0x18
 51961 49ab 06       		.byte	0x6
 51962 49ac F3       		.byte	0xf3
 51963 49ad 01       		.uleb128 0x1
 51964 49ae 55       		.byte	0x55
 51965 49af 23       		.byte	0x23
 51966 49b0 08       		.uleb128 0x8
 51967 49b1 06       		.byte	0x6
 51968 49b2 1C       		.byte	0x1c
 51969 49b3 38       		.byte	0x38
 51970 49b4 1B       		.byte	0x1b
 51971 49b5 9F       		.byte	0x9f
 51972 49b6 00000000 		.quad	.LVL342
 51972      00000000 
 51973 49be 00000000 		.quad	.LVL344
 51973      00000000 
 51974 49c6 0A00     		.value	0xa
 51975 49c8 73       		.byte	0x73
 51976 49c9 18       		.sleb128 24
 51977 49ca 06       		.byte	0x6
 51978 49cb 73       		.byte	0x73
 51979 49cc 08       		.sleb128 8
 51980 49cd 06       		.byte	0x6
 51981 49ce 1C       		.byte	0x1c
 51982 49cf 38       		.byte	0x38
 51983 49d0 1B       		.byte	0x1b
 51984 49d1 9F       		.byte	0x9f
 51985 49d2 00000000 		.quad	.LVL344
 51985      00000000 
 51986 49da 00000000 		.quad	.LVL347
 51986      00000000 
 51987 49e2 1000     		.value	0x10
 51988 49e4 F3       		.byte	0xf3
 51989 49e5 01       		.uleb128 0x1
 51990 49e6 55       		.byte	0x55
 51991 49e7 23       		.byte	0x23
 51992 49e8 18       		.uleb128 0x18
GAS LISTING /tmp/ccJUMvuF.s 			page 1264


 51993 49e9 06       		.byte	0x6
 51994 49ea F3       		.byte	0xf3
 51995 49eb 01       		.uleb128 0x1
 51996 49ec 55       		.byte	0x55
 51997 49ed 23       		.byte	0x23
 51998 49ee 08       		.uleb128 0x8
 51999 49ef 06       		.byte	0x6
 52000 49f0 1C       		.byte	0x1c
 52001 49f1 38       		.byte	0x38
 52002 49f2 1B       		.byte	0x1b
 52003 49f3 9F       		.byte	0x9f
 52004 49f4 00000000 		.quad	0
 52004      00000000 
 52005 49fc 00000000 		.quad	0
 52005      00000000 
 52006              	.LLST335:
 52007 4a04 00000000 		.quad	.LVL303
 52007      00000000 
 52008 4a0c 00000000 		.quad	.LVL309-1
 52008      00000000 
 52009 4a14 0100     		.value	0x1
 52010 4a16 55       		.byte	0x55
 52011 4a17 00000000 		.quad	.LVL342
 52011      00000000 
 52012 4a1f 00000000 		.quad	.LVL347
 52012      00000000 
 52013 4a27 0100     		.value	0x1
 52014 4a29 55       		.byte	0x55
 52015 4a2a 00000000 		.quad	0
 52015      00000000 
 52016 4a32 00000000 		.quad	0
 52016      00000000 
 52017              	.LLST336:
 52018 4a3a 00000000 		.quad	.LVL304
 52018      00000000 
 52019 4a42 00000000 		.quad	.LVL306
 52019      00000000 
 52020 4a4a 0A00     		.value	0xa
 52021 4a4c 73       		.byte	0x73
 52022 4a4d 18       		.sleb128 24
 52023 4a4e 06       		.byte	0x6
 52024 4a4f 73       		.byte	0x73
 52025 4a50 08       		.sleb128 8
 52026 4a51 06       		.byte	0x6
 52027 4a52 1C       		.byte	0x1c
 52028 4a53 38       		.byte	0x38
 52029 4a54 1B       		.byte	0x1b
 52030 4a55 9F       		.byte	0x9f
 52031 4a56 00000000 		.quad	.LVL306
 52031      00000000 
 52032 4a5e 00000000 		.quad	.LVL309-1
 52032      00000000 
 52033 4a66 1000     		.value	0x10
 52034 4a68 F3       		.byte	0xf3
 52035 4a69 01       		.uleb128 0x1
 52036 4a6a 55       		.byte	0x55
 52037 4a6b 23       		.byte	0x23
GAS LISTING /tmp/ccJUMvuF.s 			page 1265


 52038 4a6c 18       		.uleb128 0x18
 52039 4a6d 06       		.byte	0x6
 52040 4a6e F3       		.byte	0xf3
 52041 4a6f 01       		.uleb128 0x1
 52042 4a70 55       		.byte	0x55
 52043 4a71 23       		.byte	0x23
 52044 4a72 08       		.uleb128 0x8
 52045 4a73 06       		.byte	0x6
 52046 4a74 1C       		.byte	0x1c
 52047 4a75 38       		.byte	0x38
 52048 4a76 1B       		.byte	0x1b
 52049 4a77 9F       		.byte	0x9f
 52050 4a78 00000000 		.quad	0
 52050      00000000 
 52051 4a80 00000000 		.quad	0
 52051      00000000 
 52052              	.LLST337:
 52053 4a88 00000000 		.quad	.LVL304
 52053      00000000 
 52054 4a90 00000000 		.quad	.LVL309-1
 52054      00000000 
 52055 4a98 0100     		.value	0x1
 52056 4a9a 55       		.byte	0x55
 52057 4a9b 00000000 		.quad	0
 52057      00000000 
 52058 4aa3 00000000 		.quad	0
 52058      00000000 
 52059              	.LLST340:
 52060 4aab 00000000 		.quad	.LVL352
 52060      00000000 
 52061 4ab3 00000000 		.quad	.LVL357
 52061      00000000 
 52062 4abb 0200     		.value	0x2
 52063 4abd 30       		.byte	0x30
 52064 4abe 9F       		.byte	0x9f
 52065 4abf 00000000 		.quad	.LVL357
 52065      00000000 
 52066 4ac7 00000000 		.quad	.LVL460
 52066      00000000 
 52067 4acf 0300     		.value	0x3
 52068 4ad1 91       		.byte	0x91
 52069 4ad2 A07E     		.sleb128 -224
 52070 4ad4 00000000 		.quad	.LVL460
 52070      00000000 
 52071 4adc 00000000 		.quad	.LVL461-1
 52071      00000000 
 52072 4ae4 0100     		.value	0x1
 52073 4ae6 50       		.byte	0x50
 52074 4ae7 00000000 		.quad	.LVL461-1
 52074      00000000 
 52075 4aef 00000000 		.quad	.LVL557
 52075      00000000 
 52076 4af7 0300     		.value	0x3
 52077 4af9 91       		.byte	0x91
 52078 4afa A07E     		.sleb128 -224
 52079 4afc 00000000 		.quad	.LVL557
 52079      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1266


 52080 4b04 00000000 		.quad	.LVL558
 52080      00000000 
 52081 4b0c 0100     		.value	0x1
 52082 4b0e 50       		.byte	0x50
 52083 4b0f 00000000 		.quad	.LVL558
 52083      00000000 
 52084 4b17 00000000 		.quad	.LVL637
 52084      00000000 
 52085 4b1f 0300     		.value	0x3
 52086 4b21 91       		.byte	0x91
 52087 4b22 A07E     		.sleb128 -224
 52088 4b24 00000000 		.quad	.LVL637
 52088      00000000 
 52089 4b2c 00000000 		.quad	.LVL638-1
 52089      00000000 
 52090 4b34 0100     		.value	0x1
 52091 4b36 50       		.byte	0x50
 52092 4b37 00000000 		.quad	.LVL638-1
 52092      00000000 
 52093 4b3f 00000000 		.quad	.LVL663
 52093      00000000 
 52094 4b47 0300     		.value	0x3
 52095 4b49 91       		.byte	0x91
 52096 4b4a A07E     		.sleb128 -224
 52097 4b4c 00000000 		.quad	.LVL667
 52097      00000000 
 52098 4b54 00000000 		.quad	.LFE6051
 52098      00000000 
 52099 4b5c 0300     		.value	0x3
 52100 4b5e 91       		.byte	0x91
 52101 4b5f A07E     		.sleb128 -224
 52102 4b61 00000000 		.quad	0
 52102      00000000 
 52103 4b69 00000000 		.quad	0
 52103      00000000 
 52104              	.LLST341:
 52105 4b71 00000000 		.quad	.LVL354
 52105      00000000 
 52106 4b79 00000000 		.quad	.LVL355-1
 52106      00000000 
 52107 4b81 0300     		.value	0x3
 52108 4b83 50       		.byte	0x50
 52109 4b84 93       		.byte	0x93
 52110 4b85 08       		.uleb128 0x8
 52111 4b86 00000000 		.quad	.LVL355-1
 52111      00000000 
 52112 4b8e 00000000 		.quad	.LVL357
 52112      00000000 
 52113 4b96 0300     		.value	0x3
 52114 4b98 56       		.byte	0x56
 52115 4b99 93       		.byte	0x93
 52116 4b9a 08       		.uleb128 0x8
 52117 4b9b 00000000 		.quad	.LVL666
 52117      00000000 
 52118 4ba3 00000000 		.quad	.LVL667
 52118      00000000 
 52119 4bab 0400     		.value	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 1267


 52120 4bad 30       		.byte	0x30
 52121 4bae 9F       		.byte	0x9f
 52122 4baf 93       		.byte	0x93
 52123 4bb0 08       		.uleb128 0x8
 52124 4bb1 00000000 		.quad	0
 52124      00000000 
 52125 4bb9 00000000 		.quad	0
 52125      00000000 
 52126              	.LLST342:
 52127 4bc1 00000000 		.quad	.LVL357
 52127      00000000 
 52128 4bc9 00000000 		.quad	.LVL565
 52128      00000000 
 52129 4bd1 0300     		.value	0x3
 52130 4bd3 91       		.byte	0x91
 52131 4bd4 F87D     		.sleb128 -264
 52132 4bd6 00000000 		.quad	.LVL574
 52132      00000000 
 52133 4bde 00000000 		.quad	.LVL663
 52133      00000000 
 52134 4be6 0300     		.value	0x3
 52135 4be8 91       		.byte	0x91
 52136 4be9 F87D     		.sleb128 -264
 52137 4beb 00000000 		.quad	.LVL667
 52137      00000000 
 52138 4bf3 00000000 		.quad	.LVL684
 52138      00000000 
 52139 4bfb 0300     		.value	0x3
 52140 4bfd 91       		.byte	0x91
 52141 4bfe F87D     		.sleb128 -264
 52142 4c00 00000000 		.quad	.LVL684
 52142      00000000 
 52143 4c08 00000000 		.quad	.LFE6051
 52143      00000000 
 52144 4c10 0100     		.value	0x1
 52145 4c12 5E       		.byte	0x5e
 52146 4c13 00000000 		.quad	0
 52146      00000000 
 52147 4c1b 00000000 		.quad	0
 52147      00000000 
 52148              	.LLST343:
 52149 4c23 00000000 		.quad	.LVL359
 52149      00000000 
 52150 4c2b 00000000 		.quad	.LVL360-1
 52150      00000000 
 52151 4c33 0300     		.value	0x3
 52152 4c35 50       		.byte	0x50
 52153 4c36 93       		.byte	0x93
 52154 4c37 08       		.uleb128 0x8
 52155 4c38 00000000 		.quad	.LVL360-1
 52155      00000000 
 52156 4c40 00000000 		.quad	.LVL405
 52156      00000000 
 52157 4c48 0300     		.value	0x3
 52158 4c4a 53       		.byte	0x53
 52159 4c4b 93       		.byte	0x93
 52160 4c4c 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1268


 52161 4c4d 00000000 		.quad	.LVL405
 52161      00000000 
 52162 4c55 00000000 		.quad	.LVL429
 52162      00000000 
 52163 4c5d 0500     		.value	0x5
 52164 4c5f 91       		.byte	0x91
 52165 4c60 B07E     		.sleb128 -208
 52166 4c62 93       		.byte	0x93
 52167 4c63 08       		.uleb128 0x8
 52168 4c64 00000000 		.quad	.LVL564
 52168      00000000 
 52169 4c6c 00000000 		.quad	.LVL574
 52169      00000000 
 52170 4c74 0400     		.value	0x4
 52171 4c76 30       		.byte	0x30
 52172 4c77 9F       		.byte	0x9f
 52173 4c78 93       		.byte	0x93
 52174 4c79 08       		.uleb128 0x8
 52175 4c7a 00000000 		.quad	.LVL578
 52175      00000000 
 52176 4c82 00000000 		.quad	.LVL582
 52176      00000000 
 52177 4c8a 0500     		.value	0x5
 52178 4c8c 91       		.byte	0x91
 52179 4c8d B07E     		.sleb128 -208
 52180 4c8f 93       		.byte	0x93
 52181 4c90 08       		.uleb128 0x8
 52182 4c91 00000000 		.quad	.LVL603
 52182      00000000 
 52183 4c99 00000000 		.quad	.LVL605
 52183      00000000 
 52184 4ca1 0300     		.value	0x3
 52185 4ca3 53       		.byte	0x53
 52186 4ca4 93       		.byte	0x93
 52187 4ca5 08       		.uleb128 0x8
 52188 4ca6 00000000 		.quad	.LVL605
 52188      00000000 
 52189 4cae 00000000 		.quad	.LVL623
 52189      00000000 
 52190 4cb6 0500     		.value	0x5
 52191 4cb8 91       		.byte	0x91
 52192 4cb9 A87E     		.sleb128 -216
 52193 4cbb 93       		.byte	0x93
 52194 4cbc 08       		.uleb128 0x8
 52195 4cbd 00000000 		.quad	.LVL629
 52195      00000000 
 52196 4cc5 00000000 		.quad	.LVL633
 52196      00000000 
 52197 4ccd 0500     		.value	0x5
 52198 4ccf 91       		.byte	0x91
 52199 4cd0 B07E     		.sleb128 -208
 52200 4cd2 93       		.byte	0x93
 52201 4cd3 08       		.uleb128 0x8
 52202 4cd4 00000000 		.quad	.LVL646
 52202      00000000 
 52203 4cdc 00000000 		.quad	.LVL648
 52203      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1269


 52204 4ce4 0500     		.value	0x5
 52205 4ce6 91       		.byte	0x91
 52206 4ce7 A87E     		.sleb128 -216
 52207 4ce9 93       		.byte	0x93
 52208 4cea 08       		.uleb128 0x8
 52209 4ceb 00000000 		.quad	.LVL648
 52209      00000000 
 52210 4cf3 00000000 		.quad	.LVL650
 52210      00000000 
 52211 4cfb 0500     		.value	0x5
 52212 4cfd 91       		.byte	0x91
 52213 4cfe B07E     		.sleb128 -208
 52214 4d00 93       		.byte	0x93
 52215 4d01 08       		.uleb128 0x8
 52216 4d02 00000000 		.quad	.LVL657
 52216      00000000 
 52217 4d0a 00000000 		.quad	.LVL658
 52217      00000000 
 52218 4d12 0300     		.value	0x3
 52219 4d14 53       		.byte	0x53
 52220 4d15 93       		.byte	0x93
 52221 4d16 08       		.uleb128 0x8
 52222 4d17 00000000 		.quad	.LVL661
 52222      00000000 
 52223 4d1f 00000000 		.quad	.LVL663
 52223      00000000 
 52224 4d27 0300     		.value	0x3
 52225 4d29 53       		.byte	0x53
 52226 4d2a 93       		.byte	0x93
 52227 4d2b 08       		.uleb128 0x8
 52228 4d2c 00000000 		.quad	.LVL676
 52228      00000000 
 52229 4d34 00000000 		.quad	.LVL677
 52229      00000000 
 52230 4d3c 0400     		.value	0x4
 52231 4d3e 30       		.byte	0x30
 52232 4d3f 9F       		.byte	0x9f
 52233 4d40 93       		.byte	0x93
 52234 4d41 08       		.uleb128 0x8
 52235 4d42 00000000 		.quad	.LVL679
 52235      00000000 
 52236 4d4a 00000000 		.quad	.LVL682
 52236      00000000 
 52237 4d52 0300     		.value	0x3
 52238 4d54 53       		.byte	0x53
 52239 4d55 93       		.byte	0x93
 52240 4d56 08       		.uleb128 0x8
 52241 4d57 00000000 		.quad	.LVL683
 52241      00000000 
 52242 4d5f 00000000 		.quad	.LFE6051
 52242      00000000 
 52243 4d67 0300     		.value	0x3
 52244 4d69 53       		.byte	0x53
 52245 4d6a 93       		.byte	0x93
 52246 4d6b 08       		.uleb128 0x8
 52247 4d6c 00000000 		.quad	0
 52247      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1270


 52248 4d74 00000000 		.quad	0
 52248      00000000 
 52249              	.LLST344:
 52250 4d7c 00000000 		.quad	.LVL367
 52250      00000000 
 52251 4d84 00000000 		.quad	.LVL368-1
 52251      00000000 
 52252 4d8c 0500     		.value	0x5
 52253 4d8e 50       		.byte	0x50
 52254 4d8f 93       		.byte	0x93
 52255 4d90 08       		.uleb128 0x8
 52256 4d91 93       		.byte	0x93
 52257 4d92 10       		.uleb128 0x10
 52258 4d93 00000000 		.quad	.LVL368-1
 52258      00000000 
 52259 4d9b 00000000 		.quad	.LVL572
 52259      00000000 
 52260 4da3 0500     		.value	0x5
 52261 4da5 5D       		.byte	0x5d
 52262 4da6 93       		.byte	0x93
 52263 4da7 08       		.uleb128 0x8
 52264 4da8 93       		.byte	0x93
 52265 4da9 10       		.uleb128 0x10
 52266 4daa 00000000 		.quad	.LVL574
 52266      00000000 
 52267 4db2 00000000 		.quad	.LVL663
 52267      00000000 
 52268 4dba 0500     		.value	0x5
 52269 4dbc 5D       		.byte	0x5d
 52270 4dbd 93       		.byte	0x93
 52271 4dbe 08       		.uleb128 0x8
 52272 4dbf 93       		.byte	0x93
 52273 4dc0 10       		.uleb128 0x10
 52274 4dc1 00000000 		.quad	.LVL667
 52274      00000000 
 52275 4dc9 00000000 		.quad	.LVL671
 52275      00000000 
 52276 4dd1 0500     		.value	0x5
 52277 4dd3 5D       		.byte	0x5d
 52278 4dd4 93       		.byte	0x93
 52279 4dd5 08       		.uleb128 0x8
 52280 4dd6 93       		.byte	0x93
 52281 4dd7 10       		.uleb128 0x10
 52282 4dd8 00000000 		.quad	.LVL677
 52282      00000000 
 52283 4de0 00000000 		.quad	.LVL683
 52283      00000000 
 52284 4de8 0500     		.value	0x5
 52285 4dea 5D       		.byte	0x5d
 52286 4deb 93       		.byte	0x93
 52287 4dec 08       		.uleb128 0x8
 52288 4ded 93       		.byte	0x93
 52289 4dee 10       		.uleb128 0x10
 52290 4def 00000000 		.quad	0
 52290      00000000 
 52291 4df7 00000000 		.quad	0
 52291      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1271


 52292              	.LLST346:
 52293 4dff 00000000 		.quad	.LVL365
 52293      00000000 
 52294 4e07 00000000 		.quad	.LVL374
 52294      00000000 
 52295 4e0f 0100     		.value	0x1
 52296 4e11 5C       		.byte	0x5c
 52297 4e12 00000000 		.quad	.LVL374
 52297      00000000 
 52298 4e1a 00000000 		.quad	.LVL381
 52298      00000000 
 52299 4e22 0800     		.value	0x8
 52300 4e24 7E       		.byte	0x7e
 52301 4e25 00       		.sleb128 0
 52302 4e26 7E       		.byte	0x7e
 52303 4e27 00       		.sleb128 0
 52304 4e28 1E       		.byte	0x1e
 52305 4e29 32       		.byte	0x32
 52306 4e2a 24       		.byte	0x24
 52307 4e2b 9F       		.byte	0x9f
 52308 4e2c 00000000 		.quad	.LVL381
 52308      00000000 
 52309 4e34 00000000 		.quad	.LVL565
 52309      00000000 
 52310 4e3c 0C00     		.value	0xc
 52311 4e3e 91       		.byte	0x91
 52312 4e3f F87D     		.sleb128 -264
 52313 4e41 06       		.byte	0x6
 52314 4e42 91       		.byte	0x91
 52315 4e43 F87D     		.sleb128 -264
 52316 4e45 06       		.byte	0x6
 52317 4e46 1E       		.byte	0x1e
 52318 4e47 32       		.byte	0x32
 52319 4e48 24       		.byte	0x24
 52320 4e49 9F       		.byte	0x9f
 52321 4e4a 00000000 		.quad	.LVL574
 52321      00000000 
 52322 4e52 00000000 		.quad	.LVL663
 52322      00000000 
 52323 4e5a 0C00     		.value	0xc
 52324 4e5c 91       		.byte	0x91
 52325 4e5d F87D     		.sleb128 -264
 52326 4e5f 06       		.byte	0x6
 52327 4e60 91       		.byte	0x91
 52328 4e61 F87D     		.sleb128 -264
 52329 4e63 06       		.byte	0x6
 52330 4e64 1E       		.byte	0x1e
 52331 4e65 32       		.byte	0x32
 52332 4e66 24       		.byte	0x24
 52333 4e67 9F       		.byte	0x9f
 52334 4e68 00000000 		.quad	.LVL667
 52334      00000000 
 52335 4e70 00000000 		.quad	.LVL671
 52335      00000000 
 52336 4e78 0C00     		.value	0xc
 52337 4e7a 91       		.byte	0x91
 52338 4e7b F87D     		.sleb128 -264
GAS LISTING /tmp/ccJUMvuF.s 			page 1272


 52339 4e7d 06       		.byte	0x6
 52340 4e7e 91       		.byte	0x91
 52341 4e7f F87D     		.sleb128 -264
 52342 4e81 06       		.byte	0x6
 52343 4e82 1E       		.byte	0x1e
 52344 4e83 32       		.byte	0x32
 52345 4e84 24       		.byte	0x24
 52346 4e85 9F       		.byte	0x9f
 52347 4e86 00000000 		.quad	.LVL677
 52347      00000000 
 52348 4e8e 00000000 		.quad	.LVL683
 52348      00000000 
 52349 4e96 0C00     		.value	0xc
 52350 4e98 91       		.byte	0x91
 52351 4e99 F87D     		.sleb128 -264
 52352 4e9b 06       		.byte	0x6
 52353 4e9c 91       		.byte	0x91
 52354 4e9d F87D     		.sleb128 -264
 52355 4e9f 06       		.byte	0x6
 52356 4ea0 1E       		.byte	0x1e
 52357 4ea1 32       		.byte	0x32
 52358 4ea2 24       		.byte	0x24
 52359 4ea3 9F       		.byte	0x9f
 52360 4ea4 00000000 		.quad	0
 52360      00000000 
 52361 4eac 00000000 		.quad	0
 52361      00000000 
 52362              	.LLST347:
 52363 4eb4 00000000 		.quad	.LVL365
 52363      00000000 
 52364 4ebc 00000000 		.quad	.LVL663
 52364      00000000 
 52365 4ec4 0600     		.value	0x6
 52366 4ec6 F2       		.byte	0xf2
 52367 4ec7 00000000 		.long	.Ldebug_info0+78817
 52368 4ecb 00       		.sleb128 0
 52369 4ecc 00000000 		.quad	.LVL667
 52369      00000000 
 52370 4ed4 00000000 		.quad	.LVL671
 52370      00000000 
 52371 4edc 0600     		.value	0x6
 52372 4ede F2       		.byte	0xf2
 52373 4edf 00000000 		.long	.Ldebug_info0+78817
 52374 4ee3 00       		.sleb128 0
 52375 4ee4 00000000 		.quad	.LVL677
 52375      00000000 
 52376 4eec 00000000 		.quad	.LVL683
 52376      00000000 
 52377 4ef4 0600     		.value	0x6
 52378 4ef6 F2       		.byte	0xf2
 52379 4ef7 00000000 		.long	.Ldebug_info0+78817
 52380 4efb 00       		.sleb128 0
 52381 4efc 00000000 		.quad	0
 52381      00000000 
 52382 4f04 00000000 		.quad	0
 52382      00000000 
 52383              	.LLST355:
GAS LISTING /tmp/ccJUMvuF.s 			page 1273


 52384 4f0c 00000000 		.quad	.LVL365
 52384      00000000 
 52385 4f14 00000000 		.quad	.LVL663
 52385      00000000 
 52386 4f1c 0200     		.value	0x2
 52387 4f1e 30       		.byte	0x30
 52388 4f1f 9F       		.byte	0x9f
 52389 4f20 00000000 		.quad	.LVL667
 52389      00000000 
 52390 4f28 00000000 		.quad	.LVL671
 52390      00000000 
 52391 4f30 0200     		.value	0x2
 52392 4f32 30       		.byte	0x30
 52393 4f33 9F       		.byte	0x9f
 52394 4f34 00000000 		.quad	.LVL677
 52394      00000000 
 52395 4f3c 00000000 		.quad	.LVL683
 52395      00000000 
 52396 4f44 0200     		.value	0x2
 52397 4f46 30       		.byte	0x30
 52398 4f47 9F       		.byte	0x9f
 52399 4f48 00000000 		.quad	0
 52399      00000000 
 52400 4f50 00000000 		.quad	0
 52400      00000000 
 52401              	.LLST357:
 52402 4f58 00000000 		.quad	.LVL367
 52402      00000000 
 52403 4f60 00000000 		.quad	.LVL374
 52403      00000000 
 52404 4f68 0100     		.value	0x1
 52405 4f6a 5C       		.byte	0x5c
 52406 4f6b 00000000 		.quad	.LVL374
 52406      00000000 
 52407 4f73 00000000 		.quad	.LVL381
 52407      00000000 
 52408 4f7b 0800     		.value	0x8
 52409 4f7d 7E       		.byte	0x7e
 52410 4f7e 00       		.sleb128 0
 52411 4f7f 7E       		.byte	0x7e
 52412 4f80 00       		.sleb128 0
 52413 4f81 1E       		.byte	0x1e
 52414 4f82 32       		.byte	0x32
 52415 4f83 24       		.byte	0x24
 52416 4f84 9F       		.byte	0x9f
 52417 4f85 00000000 		.quad	.LVL381
 52417      00000000 
 52418 4f8d 00000000 		.quad	.LVL565
 52418      00000000 
 52419 4f95 0C00     		.value	0xc
 52420 4f97 91       		.byte	0x91
 52421 4f98 F87D     		.sleb128 -264
 52422 4f9a 06       		.byte	0x6
 52423 4f9b 91       		.byte	0x91
 52424 4f9c F87D     		.sleb128 -264
 52425 4f9e 06       		.byte	0x6
 52426 4f9f 1E       		.byte	0x1e
GAS LISTING /tmp/ccJUMvuF.s 			page 1274


 52427 4fa0 32       		.byte	0x32
 52428 4fa1 24       		.byte	0x24
 52429 4fa2 9F       		.byte	0x9f
 52430 4fa3 00000000 		.quad	.LVL574
 52430      00000000 
 52431 4fab 00000000 		.quad	.LVL663
 52431      00000000 
 52432 4fb3 0C00     		.value	0xc
 52433 4fb5 91       		.byte	0x91
 52434 4fb6 F87D     		.sleb128 -264
 52435 4fb8 06       		.byte	0x6
 52436 4fb9 91       		.byte	0x91
 52437 4fba F87D     		.sleb128 -264
 52438 4fbc 06       		.byte	0x6
 52439 4fbd 1E       		.byte	0x1e
 52440 4fbe 32       		.byte	0x32
 52441 4fbf 24       		.byte	0x24
 52442 4fc0 9F       		.byte	0x9f
 52443 4fc1 00000000 		.quad	.LVL667
 52443      00000000 
 52444 4fc9 00000000 		.quad	.LVL671
 52444      00000000 
 52445 4fd1 0C00     		.value	0xc
 52446 4fd3 91       		.byte	0x91
 52447 4fd4 F87D     		.sleb128 -264
 52448 4fd6 06       		.byte	0x6
 52449 4fd7 91       		.byte	0x91
 52450 4fd8 F87D     		.sleb128 -264
 52451 4fda 06       		.byte	0x6
 52452 4fdb 1E       		.byte	0x1e
 52453 4fdc 32       		.byte	0x32
 52454 4fdd 24       		.byte	0x24
 52455 4fde 9F       		.byte	0x9f
 52456 4fdf 00000000 		.quad	.LVL677
 52456      00000000 
 52457 4fe7 00000000 		.quad	.LVL683
 52457      00000000 
 52458 4fef 0C00     		.value	0xc
 52459 4ff1 91       		.byte	0x91
 52460 4ff2 F87D     		.sleb128 -264
 52461 4ff4 06       		.byte	0x6
 52462 4ff5 91       		.byte	0x91
 52463 4ff6 F87D     		.sleb128 -264
 52464 4ff8 06       		.byte	0x6
 52465 4ff9 1E       		.byte	0x1e
 52466 4ffa 32       		.byte	0x32
 52467 4ffb 24       		.byte	0x24
 52468 4ffc 9F       		.byte	0x9f
 52469 4ffd 00000000 		.quad	0
 52469      00000000 
 52470 5005 00000000 		.quad	0
 52470      00000000 
 52471              	.LLST358:
 52472 500d 00000000 		.quad	.LVL367
 52472      00000000 
 52473 5015 00000000 		.quad	.LVL663
 52473      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1275


 52474 501d 0600     		.value	0x6
 52475 501f F2       		.byte	0xf2
 52476 5020 00000000 		.long	.Ldebug_info0+78817
 52477 5024 00       		.sleb128 0
 52478 5025 00000000 		.quad	.LVL667
 52478      00000000 
 52479 502d 00000000 		.quad	.LVL671
 52479      00000000 
 52480 5035 0600     		.value	0x6
 52481 5037 F2       		.byte	0xf2
 52482 5038 00000000 		.long	.Ldebug_info0+78817
 52483 503c 00       		.sleb128 0
 52484 503d 00000000 		.quad	.LVL677
 52484      00000000 
 52485 5045 00000000 		.quad	.LVL683
 52485      00000000 
 52486 504d 0600     		.value	0x6
 52487 504f F2       		.byte	0xf2
 52488 5050 00000000 		.long	.Ldebug_info0+78817
 52489 5054 00       		.sleb128 0
 52490 5055 00000000 		.quad	0
 52490      00000000 
 52491 505d 00000000 		.quad	0
 52491      00000000 
 52492              	.LLST360:
 52493 5065 00000000 		.quad	.LVL367
 52493      00000000 
 52494 506d 00000000 		.quad	.LVL368-1
 52494      00000000 
 52495 5075 0100     		.value	0x1
 52496 5077 50       		.byte	0x50
 52497 5078 00000000 		.quad	.LVL368-1
 52497      00000000 
 52498 5080 00000000 		.quad	.LVL572
 52498      00000000 
 52499 5088 0100     		.value	0x1
 52500 508a 5D       		.byte	0x5d
 52501 508b 00000000 		.quad	.LVL574
 52501      00000000 
 52502 5093 00000000 		.quad	.LVL663
 52502      00000000 
 52503 509b 0100     		.value	0x1
 52504 509d 5D       		.byte	0x5d
 52505 509e 00000000 		.quad	.LVL667
 52505      00000000 
 52506 50a6 00000000 		.quad	.LVL671
 52506      00000000 
 52507 50ae 0100     		.value	0x1
 52508 50b0 5D       		.byte	0x5d
 52509 50b1 00000000 		.quad	.LVL677
 52509      00000000 
 52510 50b9 00000000 		.quad	.LVL683
 52510      00000000 
 52511 50c1 0100     		.value	0x1
 52512 50c3 5D       		.byte	0x5d
 52513 50c4 00000000 		.quad	0
 52513      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1276


 52514 50cc 00000000 		.quad	0
 52514      00000000 
 52515              	.LLST363:
 52516 50d4 00000000 		.quad	.LVL367
 52516      00000000 
 52517 50dc 00000000 		.quad	.LVL663
 52517      00000000 
 52518 50e4 0200     		.value	0x2
 52519 50e6 31       		.byte	0x31
 52520 50e7 9F       		.byte	0x9f
 52521 50e8 00000000 		.quad	.LVL667
 52521      00000000 
 52522 50f0 00000000 		.quad	.LVL671
 52522      00000000 
 52523 50f8 0200     		.value	0x2
 52524 50fa 31       		.byte	0x31
 52525 50fb 9F       		.byte	0x9f
 52526 50fc 00000000 		.quad	.LVL677
 52526      00000000 
 52527 5104 00000000 		.quad	.LVL683
 52527      00000000 
 52528 510c 0200     		.value	0x2
 52529 510e 31       		.byte	0x31
 52530 510f 9F       		.byte	0x9f
 52531 5110 00000000 		.quad	0
 52531      00000000 
 52532 5118 00000000 		.quad	0
 52532      00000000 
 52533              	.LLST370:
 52534 5120 00000000 		.quad	.LVL367
 52534      00000000 
 52535 5128 00000000 		.quad	.LVL368-1
 52535      00000000 
 52536 5130 0600     		.value	0x6
 52537 5132 70       		.byte	0x70
 52538 5133 00       		.sleb128 0
 52539 5134 7C       		.byte	0x7c
 52540 5135 00       		.sleb128 0
 52541 5136 22       		.byte	0x22
 52542 5137 9F       		.byte	0x9f
 52543 5138 00000000 		.quad	.LVL368-1
 52543      00000000 
 52544 5140 00000000 		.quad	.LVL374
 52544      00000000 
 52545 5148 0600     		.value	0x6
 52546 514a 7D       		.byte	0x7d
 52547 514b 00       		.sleb128 0
 52548 514c 7C       		.byte	0x7c
 52549 514d 00       		.sleb128 0
 52550 514e 22       		.byte	0x22
 52551 514f 9F       		.byte	0x9f
 52552 5150 00000000 		.quad	.LVL374
 52552      00000000 
 52553 5158 00000000 		.quad	.LVL381
 52553      00000000 
 52554 5160 0B00     		.value	0xb
 52555 5162 7E       		.byte	0x7e
GAS LISTING /tmp/ccJUMvuF.s 			page 1277


 52556 5163 00       		.sleb128 0
 52557 5164 7E       		.byte	0x7e
 52558 5165 00       		.sleb128 0
 52559 5166 1E       		.byte	0x1e
 52560 5167 32       		.byte	0x32
 52561 5168 24       		.byte	0x24
 52562 5169 7D       		.byte	0x7d
 52563 516a 00       		.sleb128 0
 52564 516b 22       		.byte	0x22
 52565 516c 9F       		.byte	0x9f
 52566 516d 00000000 		.quad	.LVL381
 52566      00000000 
 52567 5175 00000000 		.quad	.LVL565
 52567      00000000 
 52568 517d 0F00     		.value	0xf
 52569 517f 91       		.byte	0x91
 52570 5180 F87D     		.sleb128 -264
 52571 5182 06       		.byte	0x6
 52572 5183 91       		.byte	0x91
 52573 5184 F87D     		.sleb128 -264
 52574 5186 06       		.byte	0x6
 52575 5187 1E       		.byte	0x1e
 52576 5188 32       		.byte	0x32
 52577 5189 24       		.byte	0x24
 52578 518a 7D       		.byte	0x7d
 52579 518b 00       		.sleb128 0
 52580 518c 22       		.byte	0x22
 52581 518d 9F       		.byte	0x9f
 52582 518e 00000000 		.quad	.LVL574
 52582      00000000 
 52583 5196 00000000 		.quad	.LVL663
 52583      00000000 
 52584 519e 0F00     		.value	0xf
 52585 51a0 91       		.byte	0x91
 52586 51a1 F87D     		.sleb128 -264
 52587 51a3 06       		.byte	0x6
 52588 51a4 91       		.byte	0x91
 52589 51a5 F87D     		.sleb128 -264
 52590 51a7 06       		.byte	0x6
 52591 51a8 1E       		.byte	0x1e
 52592 51a9 32       		.byte	0x32
 52593 51aa 24       		.byte	0x24
 52594 51ab 7D       		.byte	0x7d
 52595 51ac 00       		.sleb128 0
 52596 51ad 22       		.byte	0x22
 52597 51ae 9F       		.byte	0x9f
 52598 51af 00000000 		.quad	.LVL667
 52598      00000000 
 52599 51b7 00000000 		.quad	.LVL671
 52599      00000000 
 52600 51bf 0F00     		.value	0xf
 52601 51c1 91       		.byte	0x91
 52602 51c2 F87D     		.sleb128 -264
 52603 51c4 06       		.byte	0x6
 52604 51c5 91       		.byte	0x91
 52605 51c6 F87D     		.sleb128 -264
 52606 51c8 06       		.byte	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1278


 52607 51c9 1E       		.byte	0x1e
 52608 51ca 32       		.byte	0x32
 52609 51cb 24       		.byte	0x24
 52610 51cc 7D       		.byte	0x7d
 52611 51cd 00       		.sleb128 0
 52612 51ce 22       		.byte	0x22
 52613 51cf 9F       		.byte	0x9f
 52614 51d0 00000000 		.quad	.LVL677
 52614      00000000 
 52615 51d8 00000000 		.quad	.LVL683
 52615      00000000 
 52616 51e0 0F00     		.value	0xf
 52617 51e2 91       		.byte	0x91
 52618 51e3 F87D     		.sleb128 -264
 52619 51e5 06       		.byte	0x6
 52620 51e6 91       		.byte	0x91
 52621 51e7 F87D     		.sleb128 -264
 52622 51e9 06       		.byte	0x6
 52623 51ea 1E       		.byte	0x1e
 52624 51eb 32       		.byte	0x32
 52625 51ec 24       		.byte	0x24
 52626 51ed 7D       		.byte	0x7d
 52627 51ee 00       		.sleb128 0
 52628 51ef 22       		.byte	0x22
 52629 51f0 9F       		.byte	0x9f
 52630 51f1 00000000 		.quad	0
 52630      00000000 
 52631 51f9 00000000 		.quad	0
 52631      00000000 
 52632              	.LLST372:
 52633 5201 00000000 		.quad	.LVL367
 52633      00000000 
 52634 5209 00000000 		.quad	.LVL663
 52634      00000000 
 52635 5211 0200     		.value	0x2
 52636 5213 30       		.byte	0x30
 52637 5214 9F       		.byte	0x9f
 52638 5215 00000000 		.quad	.LVL667
 52638      00000000 
 52639 521d 00000000 		.quad	.LVL671
 52639      00000000 
 52640 5225 0200     		.value	0x2
 52641 5227 30       		.byte	0x30
 52642 5228 9F       		.byte	0x9f
 52643 5229 00000000 		.quad	.LVL677
 52643      00000000 
 52644 5231 00000000 		.quad	.LVL683
 52644      00000000 
 52645 5239 0200     		.value	0x2
 52646 523b 30       		.byte	0x30
 52647 523c 9F       		.byte	0x9f
 52648 523d 00000000 		.quad	0
 52648      00000000 
 52649 5245 00000000 		.quad	0
 52649      00000000 
 52650              	.LLST373:
 52651 524d 00000000 		.quad	.LVL368
GAS LISTING /tmp/ccJUMvuF.s 			page 1279


 52651      00000000 
 52652 5255 00000000 		.quad	.LVL663
 52652      00000000 
 52653 525d 0A00     		.value	0xa
 52654 525f 03       		.byte	0x3
 52655 5260 00000000 		.quad	.LC22
 52655      00000000 
 52656 5268 9F       		.byte	0x9f
 52657 5269 00000000 		.quad	.LVL667
 52657      00000000 
 52658 5271 00000000 		.quad	.LVL671
 52658      00000000 
 52659 5279 0A00     		.value	0xa
 52660 527b 03       		.byte	0x3
 52661 527c 00000000 		.quad	.LC22
 52661      00000000 
 52662 5284 9F       		.byte	0x9f
 52663 5285 00000000 		.quad	.LVL677
 52663      00000000 
 52664 528d 00000000 		.quad	.LVL683
 52664      00000000 
 52665 5295 0A00     		.value	0xa
 52666 5297 03       		.byte	0x3
 52667 5298 00000000 		.quad	.LC22
 52667      00000000 
 52668 52a0 9F       		.byte	0x9f
 52669 52a1 00000000 		.quad	0
 52669      00000000 
 52670 52a9 00000000 		.quad	0
 52670      00000000 
 52671              	.LLST374:
 52672 52b1 00000000 		.quad	.LVL369
 52672      00000000 
 52673 52b9 00000000 		.quad	.LVL381
 52673      00000000 
 52674 52c1 0100     		.value	0x1
 52675 52c3 5E       		.byte	0x5e
 52676 52c4 00000000 		.quad	.LVL381
 52676      00000000 
 52677 52cc 00000000 		.quad	.LVL565
 52677      00000000 
 52678 52d4 0300     		.value	0x3
 52679 52d6 91       		.byte	0x91
 52680 52d7 F87D     		.sleb128 -264
 52681 52d9 00000000 		.quad	.LVL574
 52681      00000000 
 52682 52e1 00000000 		.quad	.LVL663
 52682      00000000 
 52683 52e9 0300     		.value	0x3
 52684 52eb 91       		.byte	0x91
 52685 52ec F87D     		.sleb128 -264
 52686 52ee 00000000 		.quad	.LVL667
 52686      00000000 
 52687 52f6 00000000 		.quad	.LVL670
 52687      00000000 
 52688 52fe 0300     		.value	0x3
 52689 5300 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1280


 52690 5301 F87D     		.sleb128 -264
 52691 5303 00000000 		.quad	.LVL677
 52691      00000000 
 52692 530b 00000000 		.quad	.LVL682
 52692      00000000 
 52693 5313 0300     		.value	0x3
 52694 5315 91       		.byte	0x91
 52695 5316 F87D     		.sleb128 -264
 52696 5318 00000000 		.quad	0
 52696      00000000 
 52697 5320 00000000 		.quad	0
 52697      00000000 
 52698              	.LLST375:
 52699 5328 00000000 		.quad	.LVL370
 52699      00000000 
 52700 5330 00000000 		.quad	.LVL663
 52700      00000000 
 52701 5338 0A00     		.value	0xa
 52702 533a 03       		.byte	0x3
 52703 533b 00000000 		.quad	.LC23
 52703      00000000 
 52704 5343 9F       		.byte	0x9f
 52705 5344 00000000 		.quad	.LVL667
 52705      00000000 
 52706 534c 00000000 		.quad	.LVL670
 52706      00000000 
 52707 5354 0A00     		.value	0xa
 52708 5356 03       		.byte	0x3
 52709 5357 00000000 		.quad	.LC23
 52709      00000000 
 52710 535f 9F       		.byte	0x9f
 52711 5360 00000000 		.quad	.LVL677
 52711      00000000 
 52712 5368 00000000 		.quad	.LVL682
 52712      00000000 
 52713 5370 0A00     		.value	0xa
 52714 5372 03       		.byte	0x3
 52715 5373 00000000 		.quad	.LC23
 52715      00000000 
 52716 537b 9F       		.byte	0x9f
 52717 537c 00000000 		.quad	0
 52717      00000000 
 52718 5384 00000000 		.quad	0
 52718      00000000 
 52719              	.LLST376:
 52720 538c 00000000 		.quad	.LVL370
 52720      00000000 
 52721 5394 00000000 		.quad	.LVL371-1
 52721      00000000 
 52722 539c 0100     		.value	0x1
 52723 539e 50       		.byte	0x50
 52724 539f 00000000 		.quad	0
 52724      00000000 
 52725 53a7 00000000 		.quad	0
 52725      00000000 
 52726              	.LLST377:
 52727 53af 00000000 		.quad	.LVL371
GAS LISTING /tmp/ccJUMvuF.s 			page 1281


 52727      00000000 
 52728 53b7 00000000 		.quad	.LVL663
 52728      00000000 
 52729 53bf 0A00     		.value	0xa
 52730 53c1 03       		.byte	0x3
 52731 53c2 00000000 		.quad	.LC24
 52731      00000000 
 52732 53ca 9F       		.byte	0x9f
 52733 53cb 00000000 		.quad	.LVL667
 52733      00000000 
 52734 53d3 00000000 		.quad	.LVL670
 52734      00000000 
 52735 53db 0A00     		.value	0xa
 52736 53dd 03       		.byte	0x3
 52737 53de 00000000 		.quad	.LC24
 52737      00000000 
 52738 53e6 9F       		.byte	0x9f
 52739 53e7 00000000 		.quad	.LVL677
 52739      00000000 
 52740 53ef 00000000 		.quad	.LVL682
 52740      00000000 
 52741 53f7 0A00     		.value	0xa
 52742 53f9 03       		.byte	0x3
 52743 53fa 00000000 		.quad	.LC24
 52743      00000000 
 52744 5402 9F       		.byte	0x9f
 52745 5403 00000000 		.quad	0
 52745      00000000 
 52746 540b 00000000 		.quad	0
 52746      00000000 
 52747              	.LLST378:
 52748 5413 00000000 		.quad	.LVL372
 52748      00000000 
 52749 541b 00000000 		.quad	.LVL381
 52749      00000000 
 52750 5423 0100     		.value	0x1
 52751 5425 5E       		.byte	0x5e
 52752 5426 00000000 		.quad	.LVL381
 52752      00000000 
 52753 542e 00000000 		.quad	.LVL565
 52753      00000000 
 52754 5436 0300     		.value	0x3
 52755 5438 91       		.byte	0x91
 52756 5439 F87D     		.sleb128 -264
 52757 543b 00000000 		.quad	.LVL574
 52757      00000000 
 52758 5443 00000000 		.quad	.LVL663
 52758      00000000 
 52759 544b 0300     		.value	0x3
 52760 544d 91       		.byte	0x91
 52761 544e F87D     		.sleb128 -264
 52762 5450 00000000 		.quad	.LVL667
 52762      00000000 
 52763 5458 00000000 		.quad	.LVL670
 52763      00000000 
 52764 5460 0300     		.value	0x3
 52765 5462 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1282


 52766 5463 F87D     		.sleb128 -264
 52767 5465 00000000 		.quad	.LVL677
 52767      00000000 
 52768 546d 00000000 		.quad	.LVL682
 52768      00000000 
 52769 5475 0300     		.value	0x3
 52770 5477 91       		.byte	0x91
 52771 5478 F87D     		.sleb128 -264
 52772 547a 00000000 		.quad	0
 52772      00000000 
 52773 5482 00000000 		.quad	0
 52773      00000000 
 52774              	.LLST379:
 52775 548a 00000000 		.quad	.LVL374
 52775      00000000 
 52776 5492 00000000 		.quad	.LVL663
 52776      00000000 
 52777 549a 0A00     		.value	0xa
 52778 549c 03       		.byte	0x3
 52779 549d 00000000 		.quad	.LC25
 52779      00000000 
 52780 54a5 9F       		.byte	0x9f
 52781 54a6 00000000 		.quad	.LVL667
 52781      00000000 
 52782 54ae 00000000 		.quad	.LVL670
 52782      00000000 
 52783 54b6 0A00     		.value	0xa
 52784 54b8 03       		.byte	0x3
 52785 54b9 00000000 		.quad	.LC25
 52785      00000000 
 52786 54c1 9F       		.byte	0x9f
 52787 54c2 00000000 		.quad	.LVL677
 52787      00000000 
 52788 54ca 00000000 		.quad	.LVL682
 52788      00000000 
 52789 54d2 0A00     		.value	0xa
 52790 54d4 03       		.byte	0x3
 52791 54d5 00000000 		.quad	.LC25
 52791      00000000 
 52792 54dd 9F       		.byte	0x9f
 52793 54de 00000000 		.quad	0
 52793      00000000 
 52794 54e6 00000000 		.quad	0
 52794      00000000 
 52795              	.LLST380:
 52796 54ee 00000000 		.quad	.LVL374
 52796      00000000 
 52797 54f6 00000000 		.quad	.LVL375-1
 52797      00000000 
 52798 54fe 0100     		.value	0x1
 52799 5500 50       		.byte	0x50
 52800 5501 00000000 		.quad	.LVL375-1
 52800      00000000 
 52801 5509 00000000 		.quad	.LVL388
 52801      00000000 
 52802 5511 0100     		.value	0x1
 52803 5513 5C       		.byte	0x5c
GAS LISTING /tmp/ccJUMvuF.s 			page 1283


 52804 5514 00000000 		.quad	0
 52804      00000000 
 52805 551c 00000000 		.quad	0
 52805      00000000 
 52806              	.LLST381:
 52807 5524 00000000 		.quad	.LVL375
 52807      00000000 
 52808 552c 00000000 		.quad	.LVL388
 52808      00000000 
 52809 5534 0100     		.value	0x1
 52810 5536 5C       		.byte	0x5c
 52811 5537 00000000 		.quad	0
 52811      00000000 
 52812 553f 00000000 		.quad	0
 52812      00000000 
 52813              	.LLST382:
 52814 5547 00000000 		.quad	.LVL376
 52814      00000000 
 52815 554f 00000000 		.quad	.LVL663
 52815      00000000 
 52816 5557 0200     		.value	0x2
 52817 5559 35       		.byte	0x35
 52818 555a 9F       		.byte	0x9f
 52819 555b 00000000 		.quad	.LVL667
 52819      00000000 
 52820 5563 00000000 		.quad	.LVL670
 52820      00000000 
 52821 556b 0200     		.value	0x2
 52822 556d 35       		.byte	0x35
 52823 556e 9F       		.byte	0x9f
 52824 556f 00000000 		.quad	.LVL677
 52824      00000000 
 52825 5577 00000000 		.quad	.LVL682
 52825      00000000 
 52826 557f 0200     		.value	0x2
 52827 5581 35       		.byte	0x35
 52828 5582 9F       		.byte	0x9f
 52829 5583 00000000 		.quad	0
 52829      00000000 
 52830 558b 00000000 		.quad	0
 52830      00000000 
 52831              	.LLST383:
 52832 5593 00000000 		.quad	.LVL376
 52832      00000000 
 52833 559b 00000000 		.quad	.LVL663
 52833      00000000 
 52834 55a3 0400     		.value	0x4
 52835 55a5 91       		.byte	0x91
 52836 55a6 E07E     		.sleb128 -160
 52837 55a8 9F       		.byte	0x9f
 52838 55a9 00000000 		.quad	.LVL667
 52838      00000000 
 52839 55b1 00000000 		.quad	.LVL670
 52839      00000000 
 52840 55b9 0400     		.value	0x4
 52841 55bb 91       		.byte	0x91
 52842 55bc E07E     		.sleb128 -160
GAS LISTING /tmp/ccJUMvuF.s 			page 1284


 52843 55be 9F       		.byte	0x9f
 52844 55bf 00000000 		.quad	.LVL677
 52844      00000000 
 52845 55c7 00000000 		.quad	.LVL680
 52845      00000000 
 52846 55cf 0400     		.value	0x4
 52847 55d1 91       		.byte	0x91
 52848 55d2 E07E     		.sleb128 -160
 52849 55d4 9F       		.byte	0x9f
 52850 55d5 00000000 		.quad	.LVL680
 52850      00000000 
 52851 55dd 00000000 		.quad	.LVL681-1
 52851      00000000 
 52852 55e5 0100     		.value	0x1
 52853 55e7 55       		.byte	0x55
 52854 55e8 00000000 		.quad	.LVL681-1
 52854      00000000 
 52855 55f0 00000000 		.quad	.LVL682
 52855      00000000 
 52856 55f8 0400     		.value	0x4
 52857 55fa 91       		.byte	0x91
 52858 55fb E07E     		.sleb128 -160
 52859 55fd 9F       		.byte	0x9f
 52860 55fe 00000000 		.quad	0
 52860      00000000 
 52861 5606 00000000 		.quad	0
 52861      00000000 
 52862              	.LLST385:
 52863 560e 00000000 		.quad	.LVL378
 52863      00000000 
 52864 5616 00000000 		.quad	.LVL663
 52864      00000000 
 52865 561e 0200     		.value	0x2
 52866 5620 35       		.byte	0x35
 52867 5621 9F       		.byte	0x9f
 52868 5622 00000000 		.quad	.LVL667
 52868      00000000 
 52869 562a 00000000 		.quad	.LVL670
 52869      00000000 
 52870 5632 0200     		.value	0x2
 52871 5634 35       		.byte	0x35
 52872 5635 9F       		.byte	0x9f
 52873 5636 00000000 		.quad	.LVL677
 52873      00000000 
 52874 563e 00000000 		.quad	.LVL682
 52874      00000000 
 52875 5646 0200     		.value	0x2
 52876 5648 35       		.byte	0x35
 52877 5649 9F       		.byte	0x9f
 52878 564a 00000000 		.quad	0
 52878      00000000 
 52879 5652 00000000 		.quad	0
 52879      00000000 
 52880              	.LLST386:
 52881 565a 00000000 		.quad	.LVL378
 52881      00000000 
 52882 5662 00000000 		.quad	.LVL663
GAS LISTING /tmp/ccJUMvuF.s 			page 1285


 52882      00000000 
 52883 566a 0400     		.value	0x4
 52884 566c 91       		.byte	0x91
 52885 566d E87E     		.sleb128 -152
 52886 566f 9F       		.byte	0x9f
 52887 5670 00000000 		.quad	.LVL667
 52887      00000000 
 52888 5678 00000000 		.quad	.LVL670
 52888      00000000 
 52889 5680 0400     		.value	0x4
 52890 5682 91       		.byte	0x91
 52891 5683 E87E     		.sleb128 -152
 52892 5685 9F       		.byte	0x9f
 52893 5686 00000000 		.quad	.LVL677
 52893      00000000 
 52894 568e 00000000 		.quad	.LVL682
 52894      00000000 
 52895 5696 0400     		.value	0x4
 52896 5698 91       		.byte	0x91
 52897 5699 E87E     		.sleb128 -152
 52898 569b 9F       		.byte	0x9f
 52899 569c 00000000 		.quad	0
 52899      00000000 
 52900 56a4 00000000 		.quad	0
 52900      00000000 
 52901              	.LLST390:
 52902 56ac 00000000 		.quad	.LVL379
 52902      00000000 
 52903 56b4 00000000 		.quad	.LVL663
 52903      00000000 
 52904 56bc 0200     		.value	0x2
 52905 56be 35       		.byte	0x35
 52906 56bf 9F       		.byte	0x9f
 52907 56c0 00000000 		.quad	.LVL667
 52907      00000000 
 52908 56c8 00000000 		.quad	.LVL670
 52908      00000000 
 52909 56d0 0200     		.value	0x2
 52910 56d2 35       		.byte	0x35
 52911 56d3 9F       		.byte	0x9f
 52912 56d4 00000000 		.quad	.LVL677
 52912      00000000 
 52913 56dc 00000000 		.quad	.LVL682
 52913      00000000 
 52914 56e4 0200     		.value	0x2
 52915 56e6 35       		.byte	0x35
 52916 56e7 9F       		.byte	0x9f
 52917 56e8 00000000 		.quad	0
 52917      00000000 
 52918 56f0 00000000 		.quad	0
 52918      00000000 
 52919              	.LLST391:
 52920 56f8 00000000 		.quad	.LVL379
 52920      00000000 
 52921 5700 00000000 		.quad	.LVL663
 52921      00000000 
 52922 5708 0400     		.value	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 1286


 52923 570a 91       		.byte	0x91
 52924 570b E87E     		.sleb128 -152
 52925 570d 9F       		.byte	0x9f
 52926 570e 00000000 		.quad	.LVL667
 52926      00000000 
 52927 5716 00000000 		.quad	.LVL670
 52927      00000000 
 52928 571e 0400     		.value	0x4
 52929 5720 91       		.byte	0x91
 52930 5721 E87E     		.sleb128 -152
 52931 5723 9F       		.byte	0x9f
 52932 5724 00000000 		.quad	.LVL677
 52932      00000000 
 52933 572c 00000000 		.quad	.LVL682
 52933      00000000 
 52934 5734 0400     		.value	0x4
 52935 5736 91       		.byte	0x91
 52936 5737 E87E     		.sleb128 -152
 52937 5739 9F       		.byte	0x9f
 52938 573a 00000000 		.quad	0
 52938      00000000 
 52939 5742 00000000 		.quad	0
 52939      00000000 
 52940              	.LLST394:
 52941 574a 00000000 		.quad	.LVL379
 52941      00000000 
 52942 5752 00000000 		.quad	.LVL663
 52942      00000000 
 52943 575a 0200     		.value	0x2
 52944 575c 30       		.byte	0x30
 52945 575d 9F       		.byte	0x9f
 52946 575e 00000000 		.quad	.LVL667
 52946      00000000 
 52947 5766 00000000 		.quad	.LVL670
 52947      00000000 
 52948 576e 0200     		.value	0x2
 52949 5770 30       		.byte	0x30
 52950 5771 9F       		.byte	0x9f
 52951 5772 00000000 		.quad	.LVL677
 52951      00000000 
 52952 577a 00000000 		.quad	.LVL682
 52952      00000000 
 52953 5782 0200     		.value	0x2
 52954 5784 30       		.byte	0x30
 52955 5785 9F       		.byte	0x9f
 52956 5786 00000000 		.quad	0
 52956      00000000 
 52957 578e 00000000 		.quad	0
 52957      00000000 
 52958              	.LLST397:
 52959 5796 00000000 		.quad	.LVL378
 52959      00000000 
 52960 579e 00000000 		.quad	.LVL477
 52960      00000000 
 52961 57a6 0400     		.value	0x4
 52962 57a8 91       		.byte	0x91
 52963 57a9 E87E     		.sleb128 -152
GAS LISTING /tmp/ccJUMvuF.s 			page 1287


 52964 57ab 9F       		.byte	0x9f
 52965 57ac 00000000 		.quad	.LVL477
 52965      00000000 
 52966 57b4 00000000 		.quad	.LVL578
 52966      00000000 
 52967 57bc 0400     		.value	0x4
 52968 57be 91       		.byte	0x91
 52969 57bf 987F     		.sleb128 -104
 52970 57c1 9F       		.byte	0x9f
 52971 57c2 00000000 		.quad	.LVL578
 52971      00000000 
 52972 57ca 00000000 		.quad	.LVL582
 52972      00000000 
 52973 57d2 0400     		.value	0x4
 52974 57d4 91       		.byte	0x91
 52975 57d5 E87E     		.sleb128 -152
 52976 57d7 9F       		.byte	0x9f
 52977 57d8 00000000 		.quad	.LVL582
 52977      00000000 
 52978 57e0 00000000 		.quad	.LVL603
 52978      00000000 
 52979 57e8 0400     		.value	0x4
 52980 57ea 91       		.byte	0x91
 52981 57eb 987F     		.sleb128 -104
 52982 57ed 9F       		.byte	0x9f
 52983 57ee 00000000 		.quad	.LVL603
 52983      00000000 
 52984 57f6 00000000 		.quad	.LVL633
 52984      00000000 
 52985 57fe 0400     		.value	0x4
 52986 5800 91       		.byte	0x91
 52987 5801 E87E     		.sleb128 -152
 52988 5803 9F       		.byte	0x9f
 52989 5804 00000000 		.quad	.LVL633
 52989      00000000 
 52990 580c 00000000 		.quad	.LVL646
 52990      00000000 
 52991 5814 0400     		.value	0x4
 52992 5816 91       		.byte	0x91
 52993 5817 987F     		.sleb128 -104
 52994 5819 9F       		.byte	0x9f
 52995 581a 00000000 		.quad	.LVL646
 52995      00000000 
 52996 5822 00000000 		.quad	.LVL650
 52996      00000000 
 52997 582a 0400     		.value	0x4
 52998 582c 91       		.byte	0x91
 52999 582d E87E     		.sleb128 -152
 53000 582f 9F       		.byte	0x9f
 53001 5830 00000000 		.quad	.LVL650
 53001      00000000 
 53002 5838 00000000 		.quad	.LVL657
 53002      00000000 
 53003 5840 0400     		.value	0x4
 53004 5842 91       		.byte	0x91
 53005 5843 987F     		.sleb128 -104
 53006 5845 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1288


 53007 5846 00000000 		.quad	.LVL657
 53007      00000000 
 53008 584e 00000000 		.quad	.LVL658
 53008      00000000 
 53009 5856 0400     		.value	0x4
 53010 5858 91       		.byte	0x91
 53011 5859 E87E     		.sleb128 -152
 53012 585b 9F       		.byte	0x9f
 53013 585c 00000000 		.quad	.LVL658
 53013      00000000 
 53014 5864 00000000 		.quad	.LVL661
 53014      00000000 
 53015 586c 0400     		.value	0x4
 53016 586e 91       		.byte	0x91
 53017 586f 987F     		.sleb128 -104
 53018 5871 9F       		.byte	0x9f
 53019 5872 00000000 		.quad	.LVL661
 53019      00000000 
 53020 587a 00000000 		.quad	.LVL663
 53020      00000000 
 53021 5882 0400     		.value	0x4
 53022 5884 91       		.byte	0x91
 53023 5885 E87E     		.sleb128 -152
 53024 5887 9F       		.byte	0x9f
 53025 5888 00000000 		.quad	.LVL667
 53025      00000000 
 53026 5890 00000000 		.quad	.LVL670
 53026      00000000 
 53027 5898 0400     		.value	0x4
 53028 589a 91       		.byte	0x91
 53029 589b 987F     		.sleb128 -104
 53030 589d 9F       		.byte	0x9f
 53031 589e 00000000 		.quad	.LVL677
 53031      00000000 
 53032 58a6 00000000 		.quad	.LVL678
 53032      00000000 
 53033 58ae 0400     		.value	0x4
 53034 58b0 91       		.byte	0x91
 53035 58b1 E87E     		.sleb128 -152
 53036 58b3 9F       		.byte	0x9f
 53037 58b4 00000000 		.quad	.LVL679
 53037      00000000 
 53038 58bc 00000000 		.quad	.LVL682
 53038      00000000 
 53039 58c4 0400     		.value	0x4
 53040 58c6 91       		.byte	0x91
 53041 58c7 E87E     		.sleb128 -152
 53042 58c9 9F       		.byte	0x9f
 53043 58ca 00000000 		.quad	0
 53043      00000000 
 53044 58d2 00000000 		.quad	0
 53044      00000000 
 53045              	.LLST398:
 53046 58da 00000000 		.quad	.LVL382
 53046      00000000 
 53047 58e2 00000000 		.quad	.LVL663
 53047      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1289


 53048 58ea 0200     		.value	0x2
 53049 58ec 35       		.byte	0x35
 53050 58ed 9F       		.byte	0x9f
 53051 58ee 00000000 		.quad	.LVL667
 53051      00000000 
 53052 58f6 00000000 		.quad	.LVL670
 53052      00000000 
 53053 58fe 0200     		.value	0x2
 53054 5900 35       		.byte	0x35
 53055 5901 9F       		.byte	0x9f
 53056 5902 00000000 		.quad	.LVL677
 53056      00000000 
 53057 590a 00000000 		.quad	.LVL682
 53057      00000000 
 53058 5912 0200     		.value	0x2
 53059 5914 35       		.byte	0x35
 53060 5915 9F       		.byte	0x9f
 53061 5916 00000000 		.quad	0
 53061      00000000 
 53062 591e 00000000 		.quad	0
 53062      00000000 
 53063              	.LLST399:
 53064 5926 00000000 		.quad	.LVL382
 53064      00000000 
 53065 592e 00000000 		.quad	.LVL663
 53065      00000000 
 53066 5936 0400     		.value	0x4
 53067 5938 91       		.byte	0x91
 53068 5939 E87E     		.sleb128 -152
 53069 593b 9F       		.byte	0x9f
 53070 593c 00000000 		.quad	.LVL667
 53070      00000000 
 53071 5944 00000000 		.quad	.LVL670
 53071      00000000 
 53072 594c 0400     		.value	0x4
 53073 594e 91       		.byte	0x91
 53074 594f E87E     		.sleb128 -152
 53075 5951 9F       		.byte	0x9f
 53076 5952 00000000 		.quad	.LVL677
 53076      00000000 
 53077 595a 00000000 		.quad	.LVL682
 53077      00000000 
 53078 5962 0400     		.value	0x4
 53079 5964 91       		.byte	0x91
 53080 5965 E87E     		.sleb128 -152
 53081 5967 9F       		.byte	0x9f
 53082 5968 00000000 		.quad	0
 53082      00000000 
 53083 5970 00000000 		.quad	0
 53083      00000000 
 53084              	.LLST401:
 53085 5978 00000000 		.quad	.LVL382
 53085      00000000 
 53086 5980 00000000 		.quad	.LVL388
 53086      00000000 
 53087 5988 0100     		.value	0x1
 53088 598a 50       		.byte	0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 1290


 53089 598b 00000000 		.quad	0
 53089      00000000 
 53090 5993 00000000 		.quad	0
 53090      00000000 
 53091              	.LLST402:
 53092 599b 00000000 		.quad	.LVL382
 53092      00000000 
 53093 59a3 00000000 		.quad	.LVL383
 53093      00000000 
 53094 59ab 0100     		.value	0x1
 53095 59ad 50       		.byte	0x50
 53096 59ae 00000000 		.quad	.LVL383
 53096      00000000 
 53097 59b6 00000000 		.quad	.LVL384
 53097      00000000 
 53098 59be 0300     		.value	0x3
 53099 59c0 70       		.byte	0x70
 53100 59c1 08       		.sleb128 8
 53101 59c2 9F       		.byte	0x9f
 53102 59c3 00000000 		.quad	.LVL384
 53102      00000000 
 53103 59cb 00000000 		.quad	.LVL385
 53103      00000000 
 53104 59d3 0300     		.value	0x3
 53105 59d5 70       		.byte	0x70
 53106 59d6 10       		.sleb128 16
 53107 59d7 9F       		.byte	0x9f
 53108 59d8 00000000 		.quad	.LVL385
 53108      00000000 
 53109 59e0 00000000 		.quad	.LVL386
 53109      00000000 
 53110 59e8 0300     		.value	0x3
 53111 59ea 70       		.byte	0x70
 53112 59eb 18       		.sleb128 24
 53113 59ec 9F       		.byte	0x9f
 53114 59ed 00000000 		.quad	.LVL386
 53114      00000000 
 53115 59f5 00000000 		.quad	.LVL388
 53115      00000000 
 53116 59fd 0300     		.value	0x3
 53117 59ff 70       		.byte	0x70
 53118 5a00 28       		.sleb128 40
 53119 5a01 9F       		.byte	0x9f
 53120 5a02 00000000 		.quad	0
 53120      00000000 
 53121 5a0a 00000000 		.quad	0
 53121      00000000 
 53122              	.LLST403:
 53123 5a12 00000000 		.quad	.LVL382
 53123      00000000 
 53124 5a1a 00000000 		.quad	.LVL383
 53124      00000000 
 53125 5a22 0200     		.value	0x2
 53126 5a24 35       		.byte	0x35
 53127 5a25 9F       		.byte	0x9f
 53128 5a26 00000000 		.quad	.LVL383
 53128      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1291


 53129 5a2e 00000000 		.quad	.LVL384
 53129      00000000 
 53130 5a36 0200     		.value	0x2
 53131 5a38 34       		.byte	0x34
 53132 5a39 9F       		.byte	0x9f
 53133 5a3a 00000000 		.quad	.LVL384
 53133      00000000 
 53134 5a42 00000000 		.quad	.LVL385
 53134      00000000 
 53135 5a4a 0200     		.value	0x2
 53136 5a4c 33       		.byte	0x33
 53137 5a4d 9F       		.byte	0x9f
 53138 5a4e 00000000 		.quad	.LVL385
 53138      00000000 
 53139 5a56 00000000 		.quad	.LVL386
 53139      00000000 
 53140 5a5e 0200     		.value	0x2
 53141 5a60 32       		.byte	0x32
 53142 5a61 9F       		.byte	0x9f
 53143 5a62 00000000 		.quad	.LVL386
 53143      00000000 
 53144 5a6a 00000000 		.quad	.LVL663
 53144      00000000 
 53145 5a72 0200     		.value	0x2
 53146 5a74 30       		.byte	0x30
 53147 5a75 9F       		.byte	0x9f
 53148 5a76 00000000 		.quad	.LVL667
 53148      00000000 
 53149 5a7e 00000000 		.quad	.LVL670
 53149      00000000 
 53150 5a86 0200     		.value	0x2
 53151 5a88 30       		.byte	0x30
 53152 5a89 9F       		.byte	0x9f
 53153 5a8a 00000000 		.quad	.LVL677
 53153      00000000 
 53154 5a92 00000000 		.quad	.LVL682
 53154      00000000 
 53155 5a9a 0200     		.value	0x2
 53156 5a9c 30       		.byte	0x30
 53157 5a9d 9F       		.byte	0x9f
 53158 5a9e 00000000 		.quad	0
 53158      00000000 
 53159 5aa6 00000000 		.quad	0
 53159      00000000 
 53160              	.LLST404:
 53161 5aae 00000000 		.quad	.LVL389
 53161      00000000 
 53162 5ab6 00000000 		.quad	.LVL663
 53162      00000000 
 53163 5abe 0400     		.value	0x4
 53164 5ac0 91       		.byte	0x91
 53165 5ac1 E07E     		.sleb128 -160
 53166 5ac3 9F       		.byte	0x9f
 53167 5ac4 00000000 		.quad	.LVL667
 53167      00000000 
 53168 5acc 00000000 		.quad	.LVL670
 53168      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1292


 53169 5ad4 0400     		.value	0x4
 53170 5ad6 91       		.byte	0x91
 53171 5ad7 E07E     		.sleb128 -160
 53172 5ad9 9F       		.byte	0x9f
 53173 5ada 00000000 		.quad	.LVL677
 53173      00000000 
 53174 5ae2 00000000 		.quad	.LVL679
 53174      00000000 
 53175 5aea 0400     		.value	0x4
 53176 5aec 91       		.byte	0x91
 53177 5aed E07E     		.sleb128 -160
 53178 5aef 9F       		.byte	0x9f
 53179 5af0 00000000 		.quad	0
 53179      00000000 
 53180 5af8 00000000 		.quad	0
 53180      00000000 
 53181              	.LLST405:
 53182 5b00 00000000 		.quad	.LVL389
 53182      00000000 
 53183 5b08 00000000 		.quad	.LVL663
 53183      00000000 
 53184 5b10 0200     		.value	0x2
 53185 5b12 30       		.byte	0x30
 53186 5b13 9F       		.byte	0x9f
 53187 5b14 00000000 		.quad	.LVL667
 53187      00000000 
 53188 5b1c 00000000 		.quad	.LVL670
 53188      00000000 
 53189 5b24 0200     		.value	0x2
 53190 5b26 30       		.byte	0x30
 53191 5b27 9F       		.byte	0x9f
 53192 5b28 00000000 		.quad	.LVL677
 53192      00000000 
 53193 5b30 00000000 		.quad	.LVL679
 53193      00000000 
 53194 5b38 0200     		.value	0x2
 53195 5b3a 30       		.byte	0x30
 53196 5b3b 9F       		.byte	0x9f
 53197 5b3c 00000000 		.quad	0
 53197      00000000 
 53198 5b44 00000000 		.quad	0
 53198      00000000 
 53199              	.LLST406:
 53200 5b4c 00000000 		.quad	.LVL389
 53200      00000000 
 53201 5b54 00000000 		.quad	.LVL486
 53201      00000000 
 53202 5b5c 0400     		.value	0x4
 53203 5b5e 91       		.byte	0x91
 53204 5b5f 807F     		.sleb128 -128
 53205 5b61 9F       		.byte	0x9f
 53206 5b62 00000000 		.quad	.LVL487
 53206      00000000 
 53207 5b6a 00000000 		.quad	.LVL578
 53207      00000000 
 53208 5b72 0400     		.value	0x4
 53209 5b74 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1293


 53210 5b75 B07F     		.sleb128 -80
 53211 5b77 9F       		.byte	0x9f
 53212 5b78 00000000 		.quad	.LVL578
 53212      00000000 
 53213 5b80 00000000 		.quad	.LVL582
 53213      00000000 
 53214 5b88 0400     		.value	0x4
 53215 5b8a 91       		.byte	0x91
 53216 5b8b 807F     		.sleb128 -128
 53217 5b8d 9F       		.byte	0x9f
 53218 5b8e 00000000 		.quad	.LVL582
 53218      00000000 
 53219 5b96 00000000 		.quad	.LVL603
 53219      00000000 
 53220 5b9e 0400     		.value	0x4
 53221 5ba0 91       		.byte	0x91
 53222 5ba1 B07F     		.sleb128 -80
 53223 5ba3 9F       		.byte	0x9f
 53224 5ba4 00000000 		.quad	.LVL603
 53224      00000000 
 53225 5bac 00000000 		.quad	.LVL633
 53225      00000000 
 53226 5bb4 0400     		.value	0x4
 53227 5bb6 91       		.byte	0x91
 53228 5bb7 807F     		.sleb128 -128
 53229 5bb9 9F       		.byte	0x9f
 53230 5bba 00000000 		.quad	.LVL633
 53230      00000000 
 53231 5bc2 00000000 		.quad	.LVL646
 53231      00000000 
 53232 5bca 0400     		.value	0x4
 53233 5bcc 91       		.byte	0x91
 53234 5bcd B07F     		.sleb128 -80
 53235 5bcf 9F       		.byte	0x9f
 53236 5bd0 00000000 		.quad	.LVL646
 53236      00000000 
 53237 5bd8 00000000 		.quad	.LVL650
 53237      00000000 
 53238 5be0 0400     		.value	0x4
 53239 5be2 91       		.byte	0x91
 53240 5be3 807F     		.sleb128 -128
 53241 5be5 9F       		.byte	0x9f
 53242 5be6 00000000 		.quad	.LVL650
 53242      00000000 
 53243 5bee 00000000 		.quad	.LVL657
 53243      00000000 
 53244 5bf6 0400     		.value	0x4
 53245 5bf8 91       		.byte	0x91
 53246 5bf9 B07F     		.sleb128 -80
 53247 5bfb 9F       		.byte	0x9f
 53248 5bfc 00000000 		.quad	.LVL657
 53248      00000000 
 53249 5c04 00000000 		.quad	.LVL658
 53249      00000000 
 53250 5c0c 0400     		.value	0x4
 53251 5c0e 91       		.byte	0x91
 53252 5c0f 807F     		.sleb128 -128
GAS LISTING /tmp/ccJUMvuF.s 			page 1294


 53253 5c11 9F       		.byte	0x9f
 53254 5c12 00000000 		.quad	.LVL658
 53254      00000000 
 53255 5c1a 00000000 		.quad	.LVL661
 53255      00000000 
 53256 5c22 0400     		.value	0x4
 53257 5c24 91       		.byte	0x91
 53258 5c25 B07F     		.sleb128 -80
 53259 5c27 9F       		.byte	0x9f
 53260 5c28 00000000 		.quad	.LVL661
 53260      00000000 
 53261 5c30 00000000 		.quad	.LVL663
 53261      00000000 
 53262 5c38 0400     		.value	0x4
 53263 5c3a 91       		.byte	0x91
 53264 5c3b 807F     		.sleb128 -128
 53265 5c3d 9F       		.byte	0x9f
 53266 5c3e 00000000 		.quad	.LVL667
 53266      00000000 
 53267 5c46 00000000 		.quad	.LVL668
 53267      00000000 
 53268 5c4e 0400     		.value	0x4
 53269 5c50 91       		.byte	0x91
 53270 5c51 B07F     		.sleb128 -80
 53271 5c53 9F       		.byte	0x9f
 53272 5c54 00000000 		.quad	.LVL677
 53272      00000000 
 53273 5c5c 00000000 		.quad	.LVL678
 53273      00000000 
 53274 5c64 0400     		.value	0x4
 53275 5c66 91       		.byte	0x91
 53276 5c67 807F     		.sleb128 -128
 53277 5c69 9F       		.byte	0x9f
 53278 5c6a 00000000 		.quad	0
 53278      00000000 
 53279 5c72 00000000 		.quad	0
 53279      00000000 
 53280              	.LLST407:
 53281 5c7a 00000000 		.quad	.LVL393
 53281      00000000 
 53282 5c82 00000000 		.quad	.LVL657
 53282      00000000 
 53283 5c8a 0400     		.value	0x4
 53284 5c8c 91       		.byte	0x91
 53285 5c8d E07E     		.sleb128 -160
 53286 5c8f 9F       		.byte	0x9f
 53287 5c90 00000000 		.quad	.LVL658
 53287      00000000 
 53288 5c98 00000000 		.quad	.LVL663
 53288      00000000 
 53289 5ca0 0400     		.value	0x4
 53290 5ca2 91       		.byte	0x91
 53291 5ca3 E07E     		.sleb128 -160
 53292 5ca5 9F       		.byte	0x9f
 53293 5ca6 00000000 		.quad	.LVL667
 53293      00000000 
 53294 5cae 00000000 		.quad	.LVL670
GAS LISTING /tmp/ccJUMvuF.s 			page 1295


 53294      00000000 
 53295 5cb6 0400     		.value	0x4
 53296 5cb8 91       		.byte	0x91
 53297 5cb9 E07E     		.sleb128 -160
 53298 5cbb 9F       		.byte	0x9f
 53299 5cbc 00000000 		.quad	.LVL677
 53299      00000000 
 53300 5cc4 00000000 		.quad	.LVL679
 53300      00000000 
 53301 5ccc 0400     		.value	0x4
 53302 5cce 91       		.byte	0x91
 53303 5ccf E07E     		.sleb128 -160
 53304 5cd1 9F       		.byte	0x9f
 53305 5cd2 00000000 		.quad	0
 53305      00000000 
 53306 5cda 00000000 		.quad	0
 53306      00000000 
 53307              	.LLST408:
 53308 5ce2 00000000 		.quad	.LVL401
 53308      00000000 
 53309 5cea 00000000 		.quad	.LVL402-1
 53309      00000000 
 53310 5cf2 0100     		.value	0x1
 53311 5cf4 61       		.byte	0x61
 53312 5cf5 00000000 		.quad	.LVL402-1
 53312      00000000 
 53313 5cfd 00000000 		.quad	.LVL657
 53313      00000000 
 53314 5d05 0300     		.value	0x3
 53315 5d07 91       		.byte	0x91
 53316 5d08 887E     		.sleb128 -248
 53317 5d0a 00000000 		.quad	.LVL658
 53317      00000000 
 53318 5d12 00000000 		.quad	.LVL661
 53318      00000000 
 53319 5d1a 0300     		.value	0x3
 53320 5d1c 91       		.byte	0x91
 53321 5d1d 887E     		.sleb128 -248
 53322 5d1f 00000000 		.quad	.LVL662
 53322      00000000 
 53323 5d27 00000000 		.quad	.LVL663
 53323      00000000 
 53324 5d2f 0100     		.value	0x1
 53325 5d31 67       		.byte	0x67
 53326 5d32 00000000 		.quad	.LVL667
 53326      00000000 
 53327 5d3a 00000000 		.quad	.LVL670
 53327      00000000 
 53328 5d42 0300     		.value	0x3
 53329 5d44 91       		.byte	0x91
 53330 5d45 887E     		.sleb128 -248
 53331 5d47 00000000 		.quad	.LVL677
 53331      00000000 
 53332 5d4f 00000000 		.quad	.LVL679
 53332      00000000 
 53333 5d57 0300     		.value	0x3
 53334 5d59 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1296


 53335 5d5a 887E     		.sleb128 -248
 53336 5d5c 00000000 		.quad	0
 53336      00000000 
 53337 5d64 00000000 		.quad	0
 53337      00000000 
 53338              	.LLST409:
 53339 5d6c 00000000 		.quad	.LVL430
 53339      00000000 
 53340 5d74 00000000 		.quad	.LVL432
 53340      00000000 
 53341 5d7c 0300     		.value	0x3
 53342 5d7e 91       		.byte	0x91
 53343 5d7f 807E     		.sleb128 -256
 53344 5d81 00000000 		.quad	0
 53344      00000000 
 53345 5d89 00000000 		.quad	0
 53345      00000000 
 53346              	.LLST410:
 53347 5d91 00000000 		.quad	.LVL393
 53347      00000000 
 53348 5d99 00000000 		.quad	.LVL395
 53348      00000000 
 53349 5da1 0A00     		.value	0xa
 53350 5da3 9E       		.byte	0x9e
 53351 5da4 08       		.uleb128 0x8
 53352 5da5 00000000 		.long	0
 53353 5da9 00000000 		.long	0
 53354 5dad 00000000 		.quad	.LVL395
 53354      00000000 
 53355 5db5 00000000 		.quad	.LVL398
 53355      00000000 
 53356 5dbd 0100     		.value	0x1
 53357 5dbf 61       		.byte	0x61
 53358 5dc0 00000000 		.quad	.LVL661
 53358      00000000 
 53359 5dc8 00000000 		.quad	.LVL663
 53359      00000000 
 53360 5dd0 0A00     		.value	0xa
 53361 5dd2 9E       		.byte	0x9e
 53362 5dd3 08       		.uleb128 0x8
 53363 5dd4 00000000 		.long	0
 53364 5dd8 00000000 		.long	0
 53365 5ddc 00000000 		.quad	0
 53365      00000000 
 53366 5de4 00000000 		.quad	0
 53366      00000000 
 53367              	.LLST411:
 53368 5dec 00000000 		.quad	.LVL393
 53368      00000000 
 53369 5df4 00000000 		.quad	.LVL394
 53369      00000000 
 53370 5dfc 0300     		.value	0x3
 53371 5dfe 5C       		.byte	0x5c
 53372 5dff 93       		.byte	0x93
 53373 5e00 08       		.uleb128 0x8
 53374 5e01 00000000 		.quad	.LVL394
 53374      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1297


 53375 5e09 00000000 		.quad	.LVL395
 53375      00000000 
 53376 5e11 0300     		.value	0x3
 53377 5e13 50       		.byte	0x50
 53378 5e14 93       		.byte	0x93
 53379 5e15 08       		.uleb128 0x8
 53380 5e16 00000000 		.quad	.LVL395
 53380      00000000 
 53381 5e1e 00000000 		.quad	.LVL396
 53381      00000000 
 53382 5e26 0300     		.value	0x3
 53383 5e28 50       		.byte	0x50
 53384 5e29 93       		.byte	0x93
 53385 5e2a 08       		.uleb128 0x8
 53386 5e2b 00000000 		.quad	.LVL396
 53386      00000000 
 53387 5e33 00000000 		.quad	.LVL397
 53387      00000000 
 53388 5e3b 0500     		.value	0x5
 53389 5e3d 70       		.byte	0x70
 53390 5e3e 08       		.sleb128 8
 53391 5e3f 9F       		.byte	0x9f
 53392 5e40 93       		.byte	0x93
 53393 5e41 08       		.uleb128 0x8
 53394 5e42 00000000 		.quad	.LVL397
 53394      00000000 
 53395 5e4a 00000000 		.quad	.LVL399
 53395      00000000 
 53396 5e52 0300     		.value	0x3
 53397 5e54 50       		.byte	0x50
 53398 5e55 93       		.byte	0x93
 53399 5e56 08       		.uleb128 0x8
 53400 5e57 00000000 		.quad	.LVL661
 53400      00000000 
 53401 5e5f 00000000 		.quad	.LVL663
 53401      00000000 
 53402 5e67 0300     		.value	0x3
 53403 5e69 50       		.byte	0x50
 53404 5e6a 93       		.byte	0x93
 53405 5e6b 08       		.uleb128 0x8
 53406 5e6c 00000000 		.quad	0
 53406      00000000 
 53407 5e74 00000000 		.quad	0
 53407      00000000 
 53408              	.LLST412:
 53409 5e7c 00000000 		.quad	.LVL401
 53409      00000000 
 53410 5e84 00000000 		.quad	.LVL402-1
 53410      00000000 
 53411 5e8c 0300     		.value	0x3
 53412 5e8e 54       		.byte	0x54
 53413 5e8f 93       		.byte	0x93
 53414 5e90 08       		.uleb128 0x8
 53415 5e91 00000000 		.quad	.LVL402-1
 53415      00000000 
 53416 5e99 00000000 		.quad	.LVL406
 53416      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1298


 53417 5ea1 0500     		.value	0x5
 53418 5ea3 91       		.byte	0x91
 53419 5ea4 807E     		.sleb128 -256
 53420 5ea6 93       		.byte	0x93
 53421 5ea7 08       		.uleb128 0x8
 53422 5ea8 00000000 		.quad	.LVL603
 53422      00000000 
 53423 5eb0 00000000 		.quad	.LVL606
 53423      00000000 
 53424 5eb8 0500     		.value	0x5
 53425 5eba 91       		.byte	0x91
 53426 5ebb 807E     		.sleb128 -256
 53427 5ebd 93       		.byte	0x93
 53428 5ebe 08       		.uleb128 0x8
 53429 5ebf 00000000 		.quad	.LVL662
 53429      00000000 
 53430 5ec7 00000000 		.quad	.LVL663
 53430      00000000 
 53431 5ecf 0300     		.value	0x3
 53432 5ed1 50       		.byte	0x50
 53433 5ed2 93       		.byte	0x93
 53434 5ed3 08       		.uleb128 0x8
 53435 5ed4 00000000 		.quad	0
 53435      00000000 
 53436 5edc 00000000 		.quad	0
 53436      00000000 
 53437              	.LLST413:
 53438 5ee4 00000000 		.quad	.LVL401
 53438      00000000 
 53439 5eec 00000000 		.quad	.LVL404
 53439      00000000 
 53440 5ef4 0300     		.value	0x3
 53441 5ef6 5C       		.byte	0x5c
 53442 5ef7 93       		.byte	0x93
 53443 5ef8 08       		.uleb128 0x8
 53444 5ef9 00000000 		.quad	.LVL404
 53444      00000000 
 53445 5f01 00000000 		.quad	.LVL406
 53445      00000000 
 53446 5f09 0300     		.value	0x3
 53447 5f0b 58       		.byte	0x58
 53448 5f0c 93       		.byte	0x93
 53449 5f0d 08       		.uleb128 0x8
 53450 5f0e 00000000 		.quad	.LVL406
 53450      00000000 
 53451 5f16 00000000 		.quad	.LVL417
 53451      00000000 
 53452 5f1e 0600     		.value	0x6
 53453 5f20 76       		.byte	0x76
 53454 5f21 807F     		.sleb128 -128
 53455 5f23 9F       		.byte	0x9f
 53456 5f24 93       		.byte	0x93
 53457 5f25 08       		.uleb128 0x8
 53458 5f26 00000000 		.quad	.LVL417
 53458      00000000 
 53459 5f2e 00000000 		.quad	.LVL429
 53459      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1299


 53460 5f36 0A00     		.value	0xa
 53461 5f38 91       		.byte	0x91
 53462 5f39 B87E     		.sleb128 -200
 53463 5f3b 06       		.byte	0x6
 53464 5f3c 08       		.byte	0x8
 53465 5f3d 80       		.byte	0x80
 53466 5f3e 1C       		.byte	0x1c
 53467 5f3f 9F       		.byte	0x9f
 53468 5f40 93       		.byte	0x93
 53469 5f41 08       		.uleb128 0x8
 53470 5f42 00000000 		.quad	.LVL429
 53470      00000000 
 53471 5f4a 00000000 		.quad	.LVL430
 53471      00000000 
 53472 5f52 0500     		.value	0x5
 53473 5f54 91       		.byte	0x91
 53474 5f55 E87E     		.sleb128 -152
 53475 5f57 93       		.byte	0x93
 53476 5f58 08       		.uleb128 0x8
 53477 5f59 00000000 		.quad	.LVL430
 53477      00000000 
 53478 5f61 00000000 		.quad	.LVL439
 53478      00000000 
 53479 5f69 0300     		.value	0x3
 53480 5f6b 5C       		.byte	0x5c
 53481 5f6c 93       		.byte	0x93
 53482 5f6d 08       		.uleb128 0x8
 53483 5f6e 00000000 		.quad	.LVL578
 53483      00000000 
 53484 5f76 00000000 		.quad	.LVL582
 53484      00000000 
 53485 5f7e 0600     		.value	0x6
 53486 5f80 76       		.byte	0x76
 53487 5f81 807F     		.sleb128 -128
 53488 5f83 9F       		.byte	0x9f
 53489 5f84 93       		.byte	0x93
 53490 5f85 08       		.uleb128 0x8
 53491 5f86 00000000 		.quad	.LVL603
 53491      00000000 
 53492 5f8e 00000000 		.quad	.LVL606
 53492      00000000 
 53493 5f96 0300     		.value	0x3
 53494 5f98 5C       		.byte	0x5c
 53495 5f99 93       		.byte	0x93
 53496 5f9a 08       		.uleb128 0x8
 53497 5f9b 00000000 		.quad	.LVL606
 53497      00000000 
 53498 5fa3 00000000 		.quad	.LVL618
 53498      00000000 
 53499 5fab 0300     		.value	0x3
 53500 5fad 53       		.byte	0x53
 53501 5fae 93       		.byte	0x93
 53502 5faf 08       		.uleb128 0x8
 53503 5fb0 00000000 		.quad	.LVL619
 53503      00000000 
 53504 5fb8 00000000 		.quad	.LVL623
 53504      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1300


 53505 5fc0 0300     		.value	0x3
 53506 5fc2 53       		.byte	0x53
 53507 5fc3 93       		.byte	0x93
 53508 5fc4 08       		.uleb128 0x8
 53509 5fc5 00000000 		.quad	.LVL629
 53509      00000000 
 53510 5fcd 00000000 		.quad	.LVL633
 53510      00000000 
 53511 5fd5 0A00     		.value	0xa
 53512 5fd7 91       		.byte	0x91
 53513 5fd8 B87E     		.sleb128 -200
 53514 5fda 06       		.byte	0x6
 53515 5fdb 08       		.byte	0x8
 53516 5fdc 80       		.byte	0x80
 53517 5fdd 1C       		.byte	0x1c
 53518 5fde 9F       		.byte	0x9f
 53519 5fdf 93       		.byte	0x93
 53520 5fe0 08       		.uleb128 0x8
 53521 5fe1 00000000 		.quad	.LVL646
 53521      00000000 
 53522 5fe9 00000000 		.quad	.LVL648
 53522      00000000 
 53523 5ff1 0300     		.value	0x3
 53524 5ff3 53       		.byte	0x53
 53525 5ff4 93       		.byte	0x93
 53526 5ff5 08       		.uleb128 0x8
 53527 5ff6 00000000 		.quad	.LVL648
 53527      00000000 
 53528 5ffe 00000000 		.quad	.LVL650
 53528      00000000 
 53529 6006 0600     		.value	0x6
 53530 6008 76       		.byte	0x76
 53531 6009 807F     		.sleb128 -128
 53532 600b 9F       		.byte	0x9f
 53533 600c 93       		.byte	0x93
 53534 600d 08       		.uleb128 0x8
 53535 600e 00000000 		.quad	.LVL662
 53535      00000000 
 53536 6016 00000000 		.quad	.LVL663
 53536      00000000 
 53537 601e 0300     		.value	0x3
 53538 6020 50       		.byte	0x50
 53539 6021 93       		.byte	0x93
 53540 6022 08       		.uleb128 0x8
 53541 6023 00000000 		.quad	0
 53541      00000000 
 53542 602b 00000000 		.quad	0
 53542      00000000 
 53543              	.LLST416:
 53544 6033 00000000 		.quad	.LVL402
 53544      00000000 
 53545 603b 00000000 		.quad	.LVL404
 53545      00000000 
 53546 6043 0300     		.value	0x3
 53547 6045 5C       		.byte	0x5c
 53548 6046 93       		.byte	0x93
 53549 6047 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1301


 53550 6048 00000000 		.quad	.LVL404
 53550      00000000 
 53551 6050 00000000 		.quad	.LVL406
 53551      00000000 
 53552 6058 0300     		.value	0x3
 53553 605a 58       		.byte	0x58
 53554 605b 93       		.byte	0x93
 53555 605c 08       		.uleb128 0x8
 53556 605d 00000000 		.quad	.LVL406
 53556      00000000 
 53557 6065 00000000 		.quad	.LVL417
 53557      00000000 
 53558 606d 0600     		.value	0x6
 53559 606f 76       		.byte	0x76
 53560 6070 807F     		.sleb128 -128
 53561 6072 9F       		.byte	0x9f
 53562 6073 93       		.byte	0x93
 53563 6074 08       		.uleb128 0x8
 53564 6075 00000000 		.quad	.LVL417
 53564      00000000 
 53565 607d 00000000 		.quad	.LVL429
 53565      00000000 
 53566 6085 0A00     		.value	0xa
 53567 6087 91       		.byte	0x91
 53568 6088 B87E     		.sleb128 -200
 53569 608a 06       		.byte	0x6
 53570 608b 08       		.byte	0x8
 53571 608c 80       		.byte	0x80
 53572 608d 1C       		.byte	0x1c
 53573 608e 9F       		.byte	0x9f
 53574 608f 93       		.byte	0x93
 53575 6090 08       		.uleb128 0x8
 53576 6091 00000000 		.quad	.LVL429
 53576      00000000 
 53577 6099 00000000 		.quad	.LVL430
 53577      00000000 
 53578 60a1 0500     		.value	0x5
 53579 60a3 91       		.byte	0x91
 53580 60a4 E87E     		.sleb128 -152
 53581 60a6 93       		.byte	0x93
 53582 60a7 08       		.uleb128 0x8
 53583 60a8 00000000 		.quad	.LVL578
 53583      00000000 
 53584 60b0 00000000 		.quad	.LVL582
 53584      00000000 
 53585 60b8 0600     		.value	0x6
 53586 60ba 76       		.byte	0x76
 53587 60bb 807F     		.sleb128 -128
 53588 60bd 9F       		.byte	0x9f
 53589 60be 93       		.byte	0x93
 53590 60bf 08       		.uleb128 0x8
 53591 60c0 00000000 		.quad	.LVL603
 53591      00000000 
 53592 60c8 00000000 		.quad	.LVL606
 53592      00000000 
 53593 60d0 0300     		.value	0x3
 53594 60d2 5C       		.byte	0x5c
GAS LISTING /tmp/ccJUMvuF.s 			page 1302


 53595 60d3 93       		.byte	0x93
 53596 60d4 08       		.uleb128 0x8
 53597 60d5 00000000 		.quad	.LVL606
 53597      00000000 
 53598 60dd 00000000 		.quad	.LVL618
 53598      00000000 
 53599 60e5 0300     		.value	0x3
 53600 60e7 53       		.byte	0x53
 53601 60e8 93       		.byte	0x93
 53602 60e9 08       		.uleb128 0x8
 53603 60ea 00000000 		.quad	.LVL619
 53603      00000000 
 53604 60f2 00000000 		.quad	.LVL623
 53604      00000000 
 53605 60fa 0300     		.value	0x3
 53606 60fc 53       		.byte	0x53
 53607 60fd 93       		.byte	0x93
 53608 60fe 08       		.uleb128 0x8
 53609 60ff 00000000 		.quad	.LVL629
 53609      00000000 
 53610 6107 00000000 		.quad	.LVL633
 53610      00000000 
 53611 610f 0A00     		.value	0xa
 53612 6111 91       		.byte	0x91
 53613 6112 B87E     		.sleb128 -200
 53614 6114 06       		.byte	0x6
 53615 6115 08       		.byte	0x8
 53616 6116 80       		.byte	0x80
 53617 6117 1C       		.byte	0x1c
 53618 6118 9F       		.byte	0x9f
 53619 6119 93       		.byte	0x93
 53620 611a 08       		.uleb128 0x8
 53621 611b 00000000 		.quad	.LVL646
 53621      00000000 
 53622 6123 00000000 		.quad	.LVL648
 53622      00000000 
 53623 612b 0300     		.value	0x3
 53624 612d 53       		.byte	0x53
 53625 612e 93       		.byte	0x93
 53626 612f 08       		.uleb128 0x8
 53627 6130 00000000 		.quad	.LVL648
 53627      00000000 
 53628 6138 00000000 		.quad	.LVL650
 53628      00000000 
 53629 6140 0600     		.value	0x6
 53630 6142 76       		.byte	0x76
 53631 6143 807F     		.sleb128 -128
 53632 6145 9F       		.byte	0x9f
 53633 6146 93       		.byte	0x93
 53634 6147 08       		.uleb128 0x8
 53635 6148 00000000 		.quad	0
 53635      00000000 
 53636 6150 00000000 		.quad	0
 53636      00000000 
 53637              	.LLST417:
 53638 6158 00000000 		.quad	.LVL403
 53638      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1303


 53639 6160 00000000 		.quad	.LVL404
 53639      00000000 
 53640 6168 0600     		.value	0x6
 53641 616a 7C       		.byte	0x7c
 53642 616b 8001     		.sleb128 128
 53643 616d 9F       		.byte	0x9f
 53644 616e 93       		.byte	0x93
 53645 616f 08       		.uleb128 0x8
 53646 6170 00000000 		.quad	.LVL404
 53646      00000000 
 53647 6178 00000000 		.quad	.LVL406
 53647      00000000 
 53648 6180 0600     		.value	0x6
 53649 6182 78       		.byte	0x78
 53650 6183 8001     		.sleb128 128
 53651 6185 9F       		.byte	0x9f
 53652 6186 93       		.byte	0x93
 53653 6187 08       		.uleb128 0x8
 53654 6188 00000000 		.quad	.LVL406
 53654      00000000 
 53655 6190 00000000 		.quad	.LVL417
 53655      00000000 
 53656 6198 0300     		.value	0x3
 53657 619a 56       		.byte	0x56
 53658 619b 93       		.byte	0x93
 53659 619c 08       		.uleb128 0x8
 53660 619d 00000000 		.quad	.LVL417
 53660      00000000 
 53661 61a5 00000000 		.quad	.LVL429
 53661      00000000 
 53662 61ad 0500     		.value	0x5
 53663 61af 91       		.byte	0x91
 53664 61b0 B87E     		.sleb128 -200
 53665 61b2 93       		.byte	0x93
 53666 61b3 08       		.uleb128 0x8
 53667 61b4 00000000 		.quad	.LVL578
 53667      00000000 
 53668 61bc 00000000 		.quad	.LVL582
 53668      00000000 
 53669 61c4 0300     		.value	0x3
 53670 61c6 56       		.byte	0x56
 53671 61c7 93       		.byte	0x93
 53672 61c8 08       		.uleb128 0x8
 53673 61c9 00000000 		.quad	.LVL629
 53673      00000000 
 53674 61d1 00000000 		.quad	.LVL633
 53674      00000000 
 53675 61d9 0500     		.value	0x5
 53676 61db 91       		.byte	0x91
 53677 61dc B87E     		.sleb128 -200
 53678 61de 93       		.byte	0x93
 53679 61df 08       		.uleb128 0x8
 53680 61e0 00000000 		.quad	.LVL648
 53680      00000000 
 53681 61e8 00000000 		.quad	.LVL650
 53681      00000000 
 53682 61f0 0300     		.value	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1304


 53683 61f2 56       		.byte	0x56
 53684 61f3 93       		.byte	0x93
 53685 61f4 08       		.uleb128 0x8
 53686 61f5 00000000 		.quad	0
 53686      00000000 
 53687 61fd 00000000 		.quad	0
 53687      00000000 
 53688              	.LLST418:
 53689 6205 00000000 		.quad	.LVL403
 53689      00000000 
 53690 620d 00000000 		.quad	.LVL404
 53690      00000000 
 53691 6215 0300     		.value	0x3
 53692 6217 5C       		.byte	0x5c
 53693 6218 93       		.byte	0x93
 53694 6219 08       		.uleb128 0x8
 53695 621a 00000000 		.quad	.LVL404
 53695      00000000 
 53696 6222 00000000 		.quad	.LVL406
 53696      00000000 
 53697 622a 0300     		.value	0x3
 53698 622c 58       		.byte	0x58
 53699 622d 93       		.byte	0x93
 53700 622e 08       		.uleb128 0x8
 53701 622f 00000000 		.quad	.LVL406
 53701      00000000 
 53702 6237 00000000 		.quad	.LVL417
 53702      00000000 
 53703 623f 0600     		.value	0x6
 53704 6241 76       		.byte	0x76
 53705 6242 807F     		.sleb128 -128
 53706 6244 9F       		.byte	0x9f
 53707 6245 93       		.byte	0x93
 53708 6246 08       		.uleb128 0x8
 53709 6247 00000000 		.quad	.LVL417
 53709      00000000 
 53710 624f 00000000 		.quad	.LVL429
 53710      00000000 
 53711 6257 0A00     		.value	0xa
 53712 6259 91       		.byte	0x91
 53713 625a B87E     		.sleb128 -200
 53714 625c 06       		.byte	0x6
 53715 625d 08       		.byte	0x8
 53716 625e 80       		.byte	0x80
 53717 625f 1C       		.byte	0x1c
 53718 6260 9F       		.byte	0x9f
 53719 6261 93       		.byte	0x93
 53720 6262 08       		.uleb128 0x8
 53721 6263 00000000 		.quad	.LVL578
 53721      00000000 
 53722 626b 00000000 		.quad	.LVL582
 53722      00000000 
 53723 6273 0600     		.value	0x6
 53724 6275 76       		.byte	0x76
 53725 6276 807F     		.sleb128 -128
 53726 6278 9F       		.byte	0x9f
 53727 6279 93       		.byte	0x93
GAS LISTING /tmp/ccJUMvuF.s 			page 1305


 53728 627a 08       		.uleb128 0x8
 53729 627b 00000000 		.quad	.LVL629
 53729      00000000 
 53730 6283 00000000 		.quad	.LVL633
 53730      00000000 
 53731 628b 0A00     		.value	0xa
 53732 628d 91       		.byte	0x91
 53733 628e B87E     		.sleb128 -200
 53734 6290 06       		.byte	0x6
 53735 6291 08       		.byte	0x8
 53736 6292 80       		.byte	0x80
 53737 6293 1C       		.byte	0x1c
 53738 6294 9F       		.byte	0x9f
 53739 6295 93       		.byte	0x93
 53740 6296 08       		.uleb128 0x8
 53741 6297 00000000 		.quad	.LVL648
 53741      00000000 
 53742 629f 00000000 		.quad	.LVL650
 53742      00000000 
 53743 62a7 0600     		.value	0x6
 53744 62a9 76       		.byte	0x76
 53745 62aa 807F     		.sleb128 -128
 53746 62ac 9F       		.byte	0x9f
 53747 62ad 93       		.byte	0x93
 53748 62ae 08       		.uleb128 0x8
 53749 62af 00000000 		.quad	0
 53749      00000000 
 53750 62b7 00000000 		.quad	0
 53750      00000000 
 53751              	.LLST419:
 53752 62bf 00000000 		.quad	.LVL403
 53752      00000000 
 53753 62c7 00000000 		.quad	.LVL404
 53753      00000000 
 53754 62cf 0500     		.value	0x5
 53755 62d1 7C       		.byte	0x7c
 53756 62d2 08       		.sleb128 8
 53757 62d3 9F       		.byte	0x9f
 53758 62d4 93       		.byte	0x93
 53759 62d5 08       		.uleb128 0x8
 53760 62d6 00000000 		.quad	.LVL404
 53760      00000000 
 53761 62de 00000000 		.quad	.LVL406
 53761      00000000 
 53762 62e6 0500     		.value	0x5
 53763 62e8 78       		.byte	0x78
 53764 62e9 08       		.sleb128 8
 53765 62ea 9F       		.byte	0x9f
 53766 62eb 93       		.byte	0x93
 53767 62ec 08       		.uleb128 0x8
 53768 62ed 00000000 		.quad	.LVL406
 53768      00000000 
 53769 62f5 00000000 		.quad	.LVL415
 53769      00000000 
 53770 62fd 0300     		.value	0x3
 53771 62ff 53       		.byte	0x53
 53772 6300 93       		.byte	0x93
GAS LISTING /tmp/ccJUMvuF.s 			page 1306


 53773 6301 08       		.uleb128 0x8
 53774 6302 00000000 		.quad	.LVL415
 53774      00000000 
 53775 630a 00000000 		.quad	.LVL416
 53775      00000000 
 53776 6312 0500     		.value	0x5
 53777 6314 73       		.byte	0x73
 53778 6315 08       		.sleb128 8
 53779 6316 9F       		.byte	0x9f
 53780 6317 93       		.byte	0x93
 53781 6318 08       		.uleb128 0x8
 53782 6319 00000000 		.quad	.LVL416
 53782      00000000 
 53783 6321 00000000 		.quad	.LVL418
 53783      00000000 
 53784 6329 0300     		.value	0x3
 53785 632b 53       		.byte	0x53
 53786 632c 93       		.byte	0x93
 53787 632d 08       		.uleb128 0x8
 53788 632e 00000000 		.quad	.LVL418
 53788      00000000 
 53789 6336 00000000 		.quad	.LVL429
 53789      00000000 
 53790 633e 0300     		.value	0x3
 53791 6340 59       		.byte	0x59
 53792 6341 93       		.byte	0x93
 53793 6342 08       		.uleb128 0x8
 53794 6343 00000000 		.quad	.LVL578
 53794      00000000 
 53795 634b 00000000 		.quad	.LVL582
 53795      00000000 
 53796 6353 0300     		.value	0x3
 53797 6355 53       		.byte	0x53
 53798 6356 93       		.byte	0x93
 53799 6357 08       		.uleb128 0x8
 53800 6358 00000000 		.quad	.LVL629
 53800      00000000 
 53801 6360 00000000 		.quad	.LVL633
 53801      00000000 
 53802 6368 0300     		.value	0x3
 53803 636a 59       		.byte	0x59
 53804 636b 93       		.byte	0x93
 53805 636c 08       		.uleb128 0x8
 53806 636d 00000000 		.quad	.LVL648
 53806      00000000 
 53807 6375 00000000 		.quad	.LVL650
 53807      00000000 
 53808 637d 0300     		.value	0x3
 53809 637f 53       		.byte	0x53
 53810 6380 93       		.byte	0x93
 53811 6381 08       		.uleb128 0x8
 53812 6382 00000000 		.quad	0
 53812      00000000 
 53813 638a 00000000 		.quad	0
 53813      00000000 
 53814              	.LLST420:
 53815 6392 00000000 		.quad	.LVL403
GAS LISTING /tmp/ccJUMvuF.s 			page 1307


 53815      00000000 
 53816 639a 00000000 		.quad	.LVL429
 53816      00000000 
 53817 63a2 0200     		.value	0x2
 53818 63a4 31       		.byte	0x31
 53819 63a5 9F       		.byte	0x9f
 53820 63a6 00000000 		.quad	.LVL578
 53820      00000000 
 53821 63ae 00000000 		.quad	.LVL582
 53821      00000000 
 53822 63b6 0200     		.value	0x2
 53823 63b8 31       		.byte	0x31
 53824 63b9 9F       		.byte	0x9f
 53825 63ba 00000000 		.quad	.LVL629
 53825      00000000 
 53826 63c2 00000000 		.quad	.LVL633
 53826      00000000 
 53827 63ca 0200     		.value	0x2
 53828 63cc 31       		.byte	0x31
 53829 63cd 9F       		.byte	0x9f
 53830 63ce 00000000 		.quad	.LVL648
 53830      00000000 
 53831 63d6 00000000 		.quad	.LVL650
 53831      00000000 
 53832 63de 0200     		.value	0x2
 53833 63e0 31       		.byte	0x31
 53834 63e1 9F       		.byte	0x9f
 53835 63e2 00000000 		.quad	0
 53835      00000000 
 53836 63ea 00000000 		.quad	0
 53836      00000000 
 53837              	.LLST421:
 53838 63f2 00000000 		.quad	.LVL403
 53838      00000000 
 53839 63fa 00000000 		.quad	.LVL429
 53839      00000000 
 53840 6402 0600     		.value	0x6
 53841 6404 F2       		.byte	0xf2
 53842 6405 00000000 		.long	.Ldebug_info0+81323
 53843 6409 00       		.sleb128 0
 53844 640a 00000000 		.quad	.LVL578
 53844      00000000 
 53845 6412 00000000 		.quad	.LVL582
 53845      00000000 
 53846 641a 0600     		.value	0x6
 53847 641c F2       		.byte	0xf2
 53848 641d 00000000 		.long	.Ldebug_info0+81323
 53849 6421 00       		.sleb128 0
 53850 6422 00000000 		.quad	.LVL629
 53850      00000000 
 53851 642a 00000000 		.quad	.LVL633
 53851      00000000 
 53852 6432 0600     		.value	0x6
 53853 6434 F2       		.byte	0xf2
 53854 6435 00000000 		.long	.Ldebug_info0+81323
 53855 6439 00       		.sleb128 0
 53856 643a 00000000 		.quad	.LVL648
GAS LISTING /tmp/ccJUMvuF.s 			page 1308


 53856      00000000 
 53857 6442 00000000 		.quad	.LVL650
 53857      00000000 
 53858 644a 0600     		.value	0x6
 53859 644c F2       		.byte	0xf2
 53860 644d 00000000 		.long	.Ldebug_info0+81323
 53861 6451 00       		.sleb128 0
 53862 6452 00000000 		.quad	0
 53862      00000000 
 53863 645a 00000000 		.quad	0
 53863      00000000 
 53864              	.LLST422:
 53865 6462 00000000 		.quad	.LVL406
 53865      00000000 
 53866 646a 00000000 		.quad	.LVL429
 53866      00000000 
 53867 6472 0600     		.value	0x6
 53868 6474 F2       		.byte	0xf2
 53869 6475 00000000 		.long	.Ldebug_info0+81307
 53870 6479 00       		.sleb128 0
 53871 647a 00000000 		.quad	.LVL578
 53871      00000000 
 53872 6482 00000000 		.quad	.LVL582
 53872      00000000 
 53873 648a 0600     		.value	0x6
 53874 648c F2       		.byte	0xf2
 53875 648d 00000000 		.long	.Ldebug_info0+81307
 53876 6491 00       		.sleb128 0
 53877 6492 00000000 		.quad	.LVL629
 53877      00000000 
 53878 649a 00000000 		.quad	.LVL633
 53878      00000000 
 53879 64a2 0600     		.value	0x6
 53880 64a4 F2       		.byte	0xf2
 53881 64a5 00000000 		.long	.Ldebug_info0+81307
 53882 64a9 00       		.sleb128 0
 53883 64aa 00000000 		.quad	.LVL648
 53883      00000000 
 53884 64b2 00000000 		.quad	.LVL650
 53884      00000000 
 53885 64ba 0600     		.value	0x6
 53886 64bc F2       		.byte	0xf2
 53887 64bd 00000000 		.long	.Ldebug_info0+81307
 53888 64c1 00       		.sleb128 0
 53889 64c2 00000000 		.quad	0
 53889      00000000 
 53890 64ca 00000000 		.quad	0
 53890      00000000 
 53891              	.LLST423:
 53892 64d2 00000000 		.quad	.LVL408
 53892      00000000 
 53893 64da 00000000 		.quad	.LVL410
 53893      00000000 
 53894 64e2 0300     		.value	0x3
 53895 64e4 53       		.byte	0x53
 53896 64e5 93       		.byte	0x93
 53897 64e6 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1309


 53898 64e7 00000000 		.quad	.LVL410
 53898      00000000 
 53899 64ef 00000000 		.quad	.LVL411
 53899      00000000 
 53900 64f7 0300     		.value	0x3
 53901 64f9 50       		.byte	0x50
 53902 64fa 93       		.byte	0x93
 53903 64fb 08       		.uleb128 0x8
 53904 64fc 00000000 		.quad	.LVL411
 53904      00000000 
 53905 6504 00000000 		.quad	.LVL412
 53905      00000000 
 53906 650c 0500     		.value	0x5
 53907 650e 70       		.byte	0x70
 53908 650f 08       		.sleb128 8
 53909 6510 9F       		.byte	0x9f
 53910 6511 93       		.byte	0x93
 53911 6512 08       		.uleb128 0x8
 53912 6513 00000000 		.quad	.LVL412
 53912      00000000 
 53913 651b 00000000 		.quad	.LVL414
 53913      00000000 
 53914 6523 0300     		.value	0x3
 53915 6525 50       		.byte	0x50
 53916 6526 93       		.byte	0x93
 53917 6527 08       		.uleb128 0x8
 53918 6528 00000000 		.quad	.LVL648
 53918      00000000 
 53919 6530 00000000 		.quad	.LVL650
 53919      00000000 
 53920 6538 0300     		.value	0x3
 53921 653a 53       		.byte	0x53
 53922 653b 93       		.byte	0x93
 53923 653c 08       		.uleb128 0x8
 53924 653d 00000000 		.quad	0
 53924      00000000 
 53925 6545 00000000 		.quad	0
 53925      00000000 
 53926              	.LLST424:
 53927 654d 00000000 		.quad	.LVL408
 53927      00000000 
 53928 6555 00000000 		.quad	.LVL415
 53928      00000000 
 53929 655d 0100     		.value	0x1
 53930 655f 62       		.byte	0x62
 53931 6560 00000000 		.quad	.LVL648
 53931      00000000 
 53932 6568 00000000 		.quad	.LVL650
 53932      00000000 
 53933 6570 0100     		.value	0x1
 53934 6572 62       		.byte	0x62
 53935 6573 00000000 		.quad	0
 53935      00000000 
 53936 657b 00000000 		.quad	0
 53936      00000000 
 53937              	.LLST425:
 53938 6583 00000000 		.quad	.LVL409
GAS LISTING /tmp/ccJUMvuF.s 			page 1310


 53938      00000000 
 53939 658b 00000000 		.quad	.LVL415
 53939      00000000 
 53940 6593 0600     		.value	0x6
 53941 6595 F2       		.byte	0xf2
 53942 6596 00000000 		.long	.Ldebug_info0+81492
 53943 659a 00       		.sleb128 0
 53944 659b 00000000 		.quad	.LVL648
 53944      00000000 
 53945 65a3 00000000 		.quad	.LVL650
 53945      00000000 
 53946 65ab 0600     		.value	0x6
 53947 65ad F2       		.byte	0xf2
 53948 65ae 00000000 		.long	.Ldebug_info0+81492
 53949 65b2 00       		.sleb128 0
 53950 65b3 00000000 		.quad	0
 53950      00000000 
 53951 65bb 00000000 		.quad	0
 53951      00000000 
 53952              	.LLST426:
 53953 65c3 00000000 		.quad	.LVL410
 53953      00000000 
 53954 65cb 00000000 		.quad	.LVL411
 53954      00000000 
 53955 65d3 0600     		.value	0x6
 53956 65d5 F2       		.byte	0xf2
 53957 65d6 00000000 		.long	.Ldebug_info0+81502
 53958 65da 00       		.sleb128 0
 53959 65db 00000000 		.quad	.LVL412
 53959      00000000 
 53960 65e3 00000000 		.quad	.LVL414
 53960      00000000 
 53961 65eb 0600     		.value	0x6
 53962 65ed F2       		.byte	0xf2
 53963 65ee 00000000 		.long	.Ldebug_info0+81502
 53964 65f2 00       		.sleb128 0
 53965 65f3 00000000 		.quad	0
 53965      00000000 
 53966 65fb 00000000 		.quad	0
 53966      00000000 
 53967              	.LLST427:
 53968 6603 00000000 		.quad	.LVL578
 53968      00000000 
 53969 660b 00000000 		.quad	.LVL580-1
 53969      00000000 
 53970 6613 0100     		.value	0x1
 53971 6615 62       		.byte	0x62
 53972 6616 00000000 		.quad	.LVL580-1
 53972      00000000 
 53973 661e 00000000 		.quad	.LVL581
 53973      00000000 
 53974 6626 0300     		.value	0x3
 53975 6628 91       		.byte	0x91
 53976 6629 987E     		.sleb128 -232
 53977 662b 00000000 		.quad	0
 53977      00000000 
 53978 6633 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1311


 53978      00000000 
 53979              	.LLST428:
 53980 663b 00000000 		.quad	.LVL578
 53980      00000000 
 53981 6643 00000000 		.quad	.LVL582
 53981      00000000 
 53982 664b 0300     		.value	0x3
 53983 664d 73       		.byte	0x73
 53984 664e 08       		.sleb128 8
 53985 664f 9F       		.byte	0x9f
 53986 6650 00000000 		.quad	0
 53986      00000000 
 53987 6658 00000000 		.quad	0
 53987      00000000 
 53988              	.LLST429:
 53989 6660 00000000 		.quad	.LVL578
 53989      00000000 
 53990 6668 00000000 		.quad	.LVL582
 53990      00000000 
 53991 6670 0100     		.value	0x1
 53992 6672 53       		.byte	0x53
 53993 6673 00000000 		.quad	0
 53993      00000000 
 53994 667b 00000000 		.quad	0
 53994      00000000 
 53995              	.LLST430:
 53996 6683 00000000 		.quad	.LVL578
 53996      00000000 
 53997 668b 00000000 		.quad	.LVL582
 53997      00000000 
 53998 6693 0400     		.value	0x4
 53999 6695 76       		.byte	0x76
 54000 6696 807F     		.sleb128 -128
 54001 6698 9F       		.byte	0x9f
 54002 6699 00000000 		.quad	0
 54002      00000000 
 54003 66a1 00000000 		.quad	0
 54003      00000000 
 54004              	.LLST431:
 54005 66a9 00000000 		.quad	.LVL578
 54005      00000000 
 54006 66b1 00000000 		.quad	.LVL582
 54006      00000000 
 54007 66b9 0200     		.value	0x2
 54008 66bb 31       		.byte	0x31
 54009 66bc 9F       		.byte	0x9f
 54010 66bd 00000000 		.quad	0
 54010      00000000 
 54011 66c5 00000000 		.quad	0
 54011      00000000 
 54012              	.LLST435:
 54013 66cd 00000000 		.quad	.LVL579
 54013      00000000 
 54014 66d5 00000000 		.quad	.LVL580-1
 54014      00000000 
 54015 66dd 0500     		.value	0x5
 54016 66df 71       		.byte	0x71
GAS LISTING /tmp/ccJUMvuF.s 			page 1312


 54017 66e0 00       		.sleb128 0
 54018 66e1 38       		.byte	0x38
 54019 66e2 1B       		.byte	0x1b
 54020 66e3 9F       		.byte	0x9f
 54021 66e4 00000000 		.quad	.LVL580-1
 54021      00000000 
 54022 66ec 00000000 		.quad	.LVL581
 54022      00000000 
 54023 66f4 0A00     		.value	0xa
 54024 66f6 73       		.byte	0x73
 54025 66f7 00       		.sleb128 0
 54026 66f8 91       		.byte	0x91
 54027 66f9 807E     		.sleb128 -256
 54028 66fb 06       		.byte	0x6
 54029 66fc 1C       		.byte	0x1c
 54030 66fd 38       		.byte	0x38
 54031 66fe 1B       		.byte	0x1b
 54032 66ff 9F       		.byte	0x9f
 54033 6700 00000000 		.quad	0
 54033      00000000 
 54034 6708 00000000 		.quad	0
 54034      00000000 
 54035              	.LLST436:
 54036 6710 00000000 		.quad	.LVL419
 54036      00000000 
 54037 6718 00000000 		.quad	.LVL422
 54037      00000000 
 54038 6720 0300     		.value	0x3
 54039 6722 58       		.byte	0x58
 54040 6723 93       		.byte	0x93
 54041 6724 08       		.uleb128 0x8
 54042 6725 00000000 		.quad	.LVL422
 54042      00000000 
 54043 672d 00000000 		.quad	.LVL423
 54043      00000000 
 54044 6735 0300     		.value	0x3
 54045 6737 50       		.byte	0x50
 54046 6738 93       		.byte	0x93
 54047 6739 08       		.uleb128 0x8
 54048 673a 00000000 		.quad	.LVL423
 54048      00000000 
 54049 6742 00000000 		.quad	.LVL424
 54049      00000000 
 54050 674a 0500     		.value	0x5
 54051 674c 70       		.byte	0x70
 54052 674d 08       		.sleb128 8
 54053 674e 9F       		.byte	0x9f
 54054 674f 93       		.byte	0x93
 54055 6750 08       		.uleb128 0x8
 54056 6751 00000000 		.quad	.LVL424
 54056      00000000 
 54057 6759 00000000 		.quad	.LVL429
 54057      00000000 
 54058 6761 0300     		.value	0x3
 54059 6763 50       		.byte	0x50
 54060 6764 93       		.byte	0x93
 54061 6765 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1313


 54062 6766 00000000 		.quad	.LVL629
 54062      00000000 
 54063 676e 00000000 		.quad	.LVL631
 54063      00000000 
 54064 6776 0300     		.value	0x3
 54065 6778 58       		.byte	0x58
 54066 6779 93       		.byte	0x93
 54067 677a 08       		.uleb128 0x8
 54068 677b 00000000 		.quad	.LVL631
 54068      00000000 
 54069 6783 00000000 		.quad	.LVL633
 54069      00000000 
 54070 678b 0300     		.value	0x3
 54071 678d 50       		.byte	0x50
 54072 678e 93       		.byte	0x93
 54073 678f 08       		.uleb128 0x8
 54074 6790 00000000 		.quad	0
 54074      00000000 
 54075 6798 00000000 		.quad	0
 54075      00000000 
 54076              	.LLST437:
 54077 67a0 00000000 		.quad	.LVL420
 54077      00000000 
 54078 67a8 00000000 		.quad	.LVL429
 54078      00000000 
 54079 67b0 0100     		.value	0x1
 54080 67b2 62       		.byte	0x62
 54081 67b3 00000000 		.quad	.LVL629
 54081      00000000 
 54082 67bb 00000000 		.quad	.LVL633
 54082      00000000 
 54083 67c3 0100     		.value	0x1
 54084 67c5 62       		.byte	0x62
 54085 67c6 00000000 		.quad	0
 54085      00000000 
 54086 67ce 00000000 		.quad	0
 54086      00000000 
 54087              	.LLST438:
 54088 67d6 00000000 		.quad	.LVL421
 54088      00000000 
 54089 67de 00000000 		.quad	.LVL429
 54089      00000000 
 54090 67e6 0600     		.value	0x6
 54091 67e8 F2       		.byte	0xf2
 54092 67e9 00000000 		.long	.Ldebug_info0+82016
 54093 67ed 00       		.sleb128 0
 54094 67ee 00000000 		.quad	.LVL629
 54094      00000000 
 54095 67f6 00000000 		.quad	.LVL633
 54095      00000000 
 54096 67fe 0600     		.value	0x6
 54097 6800 F2       		.byte	0xf2
 54098 6801 00000000 		.long	.Ldebug_info0+82016
 54099 6805 00       		.sleb128 0
 54100 6806 00000000 		.quad	0
 54100      00000000 
 54101 680e 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1314


 54101      00000000 
 54102              	.LLST439:
 54103 6816 00000000 		.quad	.LVL422
 54103      00000000 
 54104 681e 00000000 		.quad	.LVL423
 54104      00000000 
 54105 6826 0600     		.value	0x6
 54106 6828 F2       		.byte	0xf2
 54107 6829 00000000 		.long	.Ldebug_info0+82026
 54108 682d 00       		.sleb128 0
 54109 682e 00000000 		.quad	.LVL424
 54109      00000000 
 54110 6836 00000000 		.quad	.LVL429
 54110      00000000 
 54111 683e 0600     		.value	0x6
 54112 6840 F2       		.byte	0xf2
 54113 6841 00000000 		.long	.Ldebug_info0+82026
 54114 6845 00       		.sleb128 0
 54115 6846 00000000 		.quad	0
 54115      00000000 
 54116 684e 00000000 		.quad	0
 54116      00000000 
 54117              	.LLST440:
 54118 6856 00000000 		.quad	.LVL603
 54118      00000000 
 54119 685e 00000000 		.quad	.LVL606
 54119      00000000 
 54120 6866 0300     		.value	0x3
 54121 6868 52       		.byte	0x52
 54122 6869 93       		.byte	0x93
 54123 686a 08       		.uleb128 0x8
 54124 686b 00000000 		.quad	.LVL606
 54124      00000000 
 54125 6873 00000000 		.quad	.LVL617
 54125      00000000 
 54126 687b 0300     		.value	0x3
 54127 687d 56       		.byte	0x56
 54128 687e 93       		.byte	0x93
 54129 687f 08       		.uleb128 0x8
 54130 6880 00000000 		.quad	.LVL619
 54130      00000000 
 54131 6888 00000000 		.quad	.LVL623
 54131      00000000 
 54132 6890 0300     		.value	0x3
 54133 6892 56       		.byte	0x56
 54134 6893 93       		.byte	0x93
 54135 6894 08       		.uleb128 0x8
 54136 6895 00000000 		.quad	.LVL646
 54136      00000000 
 54137 689d 00000000 		.quad	.LVL648
 54137      00000000 
 54138 68a5 0300     		.value	0x3
 54139 68a7 56       		.byte	0x56
 54140 68a8 93       		.byte	0x93
 54141 68a9 08       		.uleb128 0x8
 54142 68aa 00000000 		.quad	0
 54142      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1315


 54143 68b2 00000000 		.quad	0
 54143      00000000 
 54144              	.LLST441:
 54145 68ba 00000000 		.quad	.LVL603
 54145      00000000 
 54146 68c2 00000000 		.quad	.LVL606
 54146      00000000 
 54147 68ca 0300     		.value	0x3
 54148 68cc 5C       		.byte	0x5c
 54149 68cd 93       		.byte	0x93
 54150 68ce 08       		.uleb128 0x8
 54151 68cf 00000000 		.quad	.LVL606
 54151      00000000 
 54152 68d7 00000000 		.quad	.LVL618
 54152      00000000 
 54153 68df 0300     		.value	0x3
 54154 68e1 53       		.byte	0x53
 54155 68e2 93       		.byte	0x93
 54156 68e3 08       		.uleb128 0x8
 54157 68e4 00000000 		.quad	.LVL619
 54157      00000000 
 54158 68ec 00000000 		.quad	.LVL623
 54158      00000000 
 54159 68f4 0300     		.value	0x3
 54160 68f6 53       		.byte	0x53
 54161 68f7 93       		.byte	0x93
 54162 68f8 08       		.uleb128 0x8
 54163 68f9 00000000 		.quad	.LVL646
 54163      00000000 
 54164 6901 00000000 		.quad	.LVL648
 54164      00000000 
 54165 6909 0300     		.value	0x3
 54166 690b 53       		.byte	0x53
 54167 690c 93       		.byte	0x93
 54168 690d 08       		.uleb128 0x8
 54169 690e 00000000 		.quad	0
 54169      00000000 
 54170 6916 00000000 		.quad	0
 54170      00000000 
 54171              	.LLST442:
 54172 691e 00000000 		.quad	.LVL604
 54172      00000000 
 54173 6926 00000000 		.quad	.LVL606
 54173      00000000 
 54174 692e 0300     		.value	0x3
 54175 6930 58       		.byte	0x58
 54176 6931 93       		.byte	0x93
 54177 6932 08       		.uleb128 0x8
 54178 6933 00000000 		.quad	.LVL606
 54178      00000000 
 54179 693b 00000000 		.quad	.LVL615
 54179      00000000 
 54180 6943 0300     		.value	0x3
 54181 6945 5C       		.byte	0x5c
 54182 6946 93       		.byte	0x93
 54183 6947 08       		.uleb128 0x8
 54184 6948 00000000 		.quad	.LVL615
GAS LISTING /tmp/ccJUMvuF.s 			page 1316


 54184      00000000 
 54185 6950 00000000 		.quad	.LVL616
 54185      00000000 
 54186 6958 0500     		.value	0x5
 54187 695a 7C       		.byte	0x7c
 54188 695b 08       		.sleb128 8
 54189 695c 9F       		.byte	0x9f
 54190 695d 93       		.byte	0x93
 54191 695e 08       		.uleb128 0x8
 54192 695f 00000000 		.quad	.LVL616
 54192      00000000 
 54193 6967 00000000 		.quad	.LVL623
 54193      00000000 
 54194 696f 0300     		.value	0x3
 54195 6971 5C       		.byte	0x5c
 54196 6972 93       		.byte	0x93
 54197 6973 08       		.uleb128 0x8
 54198 6974 00000000 		.quad	.LVL646
 54198      00000000 
 54199 697c 00000000 		.quad	.LVL648
 54199      00000000 
 54200 6984 0300     		.value	0x3
 54201 6986 5C       		.byte	0x5c
 54202 6987 93       		.byte	0x93
 54203 6988 08       		.uleb128 0x8
 54204 6989 00000000 		.quad	0
 54204      00000000 
 54205 6991 00000000 		.quad	0
 54205      00000000 
 54206              	.LLST443:
 54207 6999 00000000 		.quad	.LVL603
 54207      00000000 
 54208 69a1 00000000 		.quad	.LVL623
 54208      00000000 
 54209 69a9 0200     		.value	0x2
 54210 69ab 31       		.byte	0x31
 54211 69ac 9F       		.byte	0x9f
 54212 69ad 00000000 		.quad	.LVL646
 54212      00000000 
 54213 69b5 00000000 		.quad	.LVL648
 54213      00000000 
 54214 69bd 0200     		.value	0x2
 54215 69bf 31       		.byte	0x31
 54216 69c0 9F       		.byte	0x9f
 54217 69c1 00000000 		.quad	0
 54217      00000000 
 54218 69c9 00000000 		.quad	0
 54218      00000000 
 54219              	.LLST444:
 54220 69d1 00000000 		.quad	.LVL603
 54220      00000000 
 54221 69d9 00000000 		.quad	.LVL623
 54221      00000000 
 54222 69e1 0600     		.value	0x6
 54223 69e3 F2       		.byte	0xf2
 54224 69e4 00000000 		.long	.Ldebug_info0+82157
 54225 69e8 00       		.sleb128 0
GAS LISTING /tmp/ccJUMvuF.s 			page 1317


 54226 69e9 00000000 		.quad	.LVL646
 54226      00000000 
 54227 69f1 00000000 		.quad	.LVL648
 54227      00000000 
 54228 69f9 0600     		.value	0x6
 54229 69fb F2       		.byte	0xf2
 54230 69fc 00000000 		.long	.Ldebug_info0+82157
 54231 6a00 00       		.sleb128 0
 54232 6a01 00000000 		.quad	0
 54232      00000000 
 54233 6a09 00000000 		.quad	0
 54233      00000000 
 54234              	.LLST445:
 54235 6a11 00000000 		.quad	.LVL606
 54235      00000000 
 54236 6a19 00000000 		.quad	.LVL623
 54236      00000000 
 54237 6a21 0600     		.value	0x6
 54238 6a23 F2       		.byte	0xf2
 54239 6a24 00000000 		.long	.Ldebug_info0+82141
 54240 6a28 00       		.sleb128 0
 54241 6a29 00000000 		.quad	.LVL646
 54241      00000000 
 54242 6a31 00000000 		.quad	.LVL648
 54242      00000000 
 54243 6a39 0600     		.value	0x6
 54244 6a3b F2       		.byte	0xf2
 54245 6a3c 00000000 		.long	.Ldebug_info0+82141
 54246 6a40 00       		.sleb128 0
 54247 6a41 00000000 		.quad	0
 54247      00000000 
 54248 6a49 00000000 		.quad	0
 54248      00000000 
 54249              	.LLST446:
 54250 6a51 00000000 		.quad	.LVL608
 54250      00000000 
 54251 6a59 00000000 		.quad	.LVL610
 54251      00000000 
 54252 6a61 0300     		.value	0x3
 54253 6a63 5C       		.byte	0x5c
 54254 6a64 93       		.byte	0x93
 54255 6a65 08       		.uleb128 0x8
 54256 6a66 00000000 		.quad	.LVL610
 54256      00000000 
 54257 6a6e 00000000 		.quad	.LVL611
 54257      00000000 
 54258 6a76 0300     		.value	0x3
 54259 6a78 50       		.byte	0x50
 54260 6a79 93       		.byte	0x93
 54261 6a7a 08       		.uleb128 0x8
 54262 6a7b 00000000 		.quad	.LVL611
 54262      00000000 
 54263 6a83 00000000 		.quad	.LVL612
 54263      00000000 
 54264 6a8b 0500     		.value	0x5
 54265 6a8d 70       		.byte	0x70
 54266 6a8e 08       		.sleb128 8
GAS LISTING /tmp/ccJUMvuF.s 			page 1318


 54267 6a8f 9F       		.byte	0x9f
 54268 6a90 93       		.byte	0x93
 54269 6a91 08       		.uleb128 0x8
 54270 6a92 00000000 		.quad	.LVL612
 54270      00000000 
 54271 6a9a 00000000 		.quad	.LVL614
 54271      00000000 
 54272 6aa2 0300     		.value	0x3
 54273 6aa4 50       		.byte	0x50
 54274 6aa5 93       		.byte	0x93
 54275 6aa6 08       		.uleb128 0x8
 54276 6aa7 00000000 		.quad	.LVL646
 54276      00000000 
 54277 6aaf 00000000 		.quad	.LVL648
 54277      00000000 
 54278 6ab7 0300     		.value	0x3
 54279 6ab9 5C       		.byte	0x5c
 54280 6aba 93       		.byte	0x93
 54281 6abb 08       		.uleb128 0x8
 54282 6abc 00000000 		.quad	0
 54282      00000000 
 54283 6ac4 00000000 		.quad	0
 54283      00000000 
 54284              	.LLST447:
 54285 6acc 00000000 		.quad	.LVL608
 54285      00000000 
 54286 6ad4 00000000 		.quad	.LVL615
 54286      00000000 
 54287 6adc 0100     		.value	0x1
 54288 6ade 62       		.byte	0x62
 54289 6adf 00000000 		.quad	.LVL646
 54289      00000000 
 54290 6ae7 00000000 		.quad	.LVL648
 54290      00000000 
 54291 6aef 0100     		.value	0x1
 54292 6af1 62       		.byte	0x62
 54293 6af2 00000000 		.quad	0
 54293      00000000 
 54294 6afa 00000000 		.quad	0
 54294      00000000 
 54295              	.LLST448:
 54296 6b02 00000000 		.quad	.LVL609
 54296      00000000 
 54297 6b0a 00000000 		.quad	.LVL615
 54297      00000000 
 54298 6b12 0600     		.value	0x6
 54299 6b14 F2       		.byte	0xf2
 54300 6b15 00000000 		.long	.Ldebug_info0+82326
 54301 6b19 00       		.sleb128 0
 54302 6b1a 00000000 		.quad	.LVL646
 54302      00000000 
 54303 6b22 00000000 		.quad	.LVL648
 54303      00000000 
 54304 6b2a 0600     		.value	0x6
 54305 6b2c F2       		.byte	0xf2
 54306 6b2d 00000000 		.long	.Ldebug_info0+82326
 54307 6b31 00       		.sleb128 0
GAS LISTING /tmp/ccJUMvuF.s 			page 1319


 54308 6b32 00000000 		.quad	0
 54308      00000000 
 54309 6b3a 00000000 		.quad	0
 54309      00000000 
 54310              	.LLST449:
 54311 6b42 00000000 		.quad	.LVL610
 54311      00000000 
 54312 6b4a 00000000 		.quad	.LVL611
 54312      00000000 
 54313 6b52 0600     		.value	0x6
 54314 6b54 F2       		.byte	0xf2
 54315 6b55 00000000 		.long	.Ldebug_info0+82336
 54316 6b59 00       		.sleb128 0
 54317 6b5a 00000000 		.quad	.LVL612
 54317      00000000 
 54318 6b62 00000000 		.quad	.LVL614
 54318      00000000 
 54319 6b6a 0600     		.value	0x6
 54320 6b6c F2       		.byte	0xf2
 54321 6b6d 00000000 		.long	.Ldebug_info0+82336
 54322 6b71 00       		.sleb128 0
 54323 6b72 00000000 		.quad	0
 54323      00000000 
 54324 6b7a 00000000 		.quad	0
 54324      00000000 
 54325              	.LLST450:
 54326 6b82 00000000 		.quad	.LVL619
 54326      00000000 
 54327 6b8a 00000000 		.quad	.LVL621-1
 54327      00000000 
 54328 6b92 0100     		.value	0x1
 54329 6b94 62       		.byte	0x62
 54330 6b95 00000000 		.quad	.LVL621-1
 54330      00000000 
 54331 6b9d 00000000 		.quad	.LVL622
 54331      00000000 
 54332 6ba5 0300     		.value	0x3
 54333 6ba7 91       		.byte	0x91
 54334 6ba8 807E     		.sleb128 -256
 54335 6baa 00000000 		.quad	0
 54335      00000000 
 54336 6bb2 00000000 		.quad	0
 54336      00000000 
 54337              	.LLST451:
 54338 6bba 00000000 		.quad	.LVL619
 54338      00000000 
 54339 6bc2 00000000 		.quad	.LVL623
 54339      00000000 
 54340 6bca 0300     		.value	0x3
 54341 6bcc 7C       		.byte	0x7c
 54342 6bcd 08       		.sleb128 8
 54343 6bce 9F       		.byte	0x9f
 54344 6bcf 00000000 		.quad	0
 54344      00000000 
 54345 6bd7 00000000 		.quad	0
 54345      00000000 
 54346              	.LLST452:
GAS LISTING /tmp/ccJUMvuF.s 			page 1320


 54347 6bdf 00000000 		.quad	.LVL619
 54347      00000000 
 54348 6be7 00000000 		.quad	.LVL623
 54348      00000000 
 54349 6bef 0100     		.value	0x1
 54350 6bf1 5C       		.byte	0x5c
 54351 6bf2 00000000 		.quad	0
 54351      00000000 
 54352 6bfa 00000000 		.quad	0
 54352      00000000 
 54353              	.LLST453:
 54354 6c02 00000000 		.quad	.LVL619
 54354      00000000 
 54355 6c0a 00000000 		.quad	.LVL623
 54355      00000000 
 54356 6c12 0100     		.value	0x1
 54357 6c14 53       		.byte	0x53
 54358 6c15 00000000 		.quad	0
 54358      00000000 
 54359 6c1d 00000000 		.quad	0
 54359      00000000 
 54360              	.LLST454:
 54361 6c25 00000000 		.quad	.LVL619
 54361      00000000 
 54362 6c2d 00000000 		.quad	.LVL623
 54362      00000000 
 54363 6c35 0200     		.value	0x2
 54364 6c37 31       		.byte	0x31
 54365 6c38 9F       		.byte	0x9f
 54366 6c39 00000000 		.quad	0
 54366      00000000 
 54367 6c41 00000000 		.quad	0
 54367      00000000 
 54368              	.LLST458:
 54369 6c49 00000000 		.quad	.LVL620
 54369      00000000 
 54370 6c51 00000000 		.quad	.LVL621-1
 54370      00000000 
 54371 6c59 0500     		.value	0x5
 54372 6c5b 71       		.byte	0x71
 54373 6c5c 00       		.sleb128 0
 54374 6c5d 38       		.byte	0x38
 54375 6c5e 1B       		.byte	0x1b
 54376 6c5f 9F       		.byte	0x9f
 54377 6c60 00000000 		.quad	.LVL621-1
 54377      00000000 
 54378 6c68 00000000 		.quad	.LVL623
 54378      00000000 
 54379 6c70 0800     		.value	0x8
 54380 6c72 7C       		.byte	0x7c
 54381 6c73 00       		.sleb128 0
 54382 6c74 73       		.byte	0x73
 54383 6c75 00       		.sleb128 0
 54384 6c76 1C       		.byte	0x1c
 54385 6c77 38       		.byte	0x38
 54386 6c78 1B       		.byte	0x1b
 54387 6c79 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1321


 54388 6c7a 00000000 		.quad	0
 54388      00000000 
 54389 6c82 00000000 		.quad	0
 54389      00000000 
 54390              	.LLST459:
 54391 6c8a 00000000 		.quad	.LVL430
 54391      00000000 
 54392 6c92 00000000 		.quad	.LVL496
 54392      00000000 
 54393 6c9a 0400     		.value	0x4
 54394 6c9c 91       		.byte	0x91
 54395 6c9d E87E     		.sleb128 -152
 54396 6c9f 9F       		.byte	0x9f
 54397 6ca0 00000000 		.quad	.LVL496
 54397      00000000 
 54398 6ca8 00000000 		.quad	.LVL578
 54398      00000000 
 54399 6cb0 0400     		.value	0x4
 54400 6cb2 91       		.byte	0x91
 54401 6cb3 987F     		.sleb128 -104
 54402 6cb5 9F       		.byte	0x9f
 54403 6cb6 00000000 		.quad	.LVL582
 54403      00000000 
 54404 6cbe 00000000 		.quad	.LVL603
 54404      00000000 
 54405 6cc6 0400     		.value	0x4
 54406 6cc8 91       		.byte	0x91
 54407 6cc9 987F     		.sleb128 -104
 54408 6ccb 9F       		.byte	0x9f
 54409 6ccc 00000000 		.quad	.LVL623
 54409      00000000 
 54410 6cd4 00000000 		.quad	.LVL629
 54410      00000000 
 54411 6cdc 0400     		.value	0x4
 54412 6cde 91       		.byte	0x91
 54413 6cdf E87E     		.sleb128 -152
 54414 6ce1 9F       		.byte	0x9f
 54415 6ce2 00000000 		.quad	.LVL633
 54415      00000000 
 54416 6cea 00000000 		.quad	.LVL646
 54416      00000000 
 54417 6cf2 0400     		.value	0x4
 54418 6cf4 91       		.byte	0x91
 54419 6cf5 987F     		.sleb128 -104
 54420 6cf7 9F       		.byte	0x9f
 54421 6cf8 00000000 		.quad	.LVL650
 54421      00000000 
 54422 6d00 00000000 		.quad	.LVL652
 54422      00000000 
 54423 6d08 0400     		.value	0x4
 54424 6d0a 91       		.byte	0x91
 54425 6d0b 987F     		.sleb128 -104
 54426 6d0d 9F       		.byte	0x9f
 54427 6d0e 00000000 		.quad	.LVL652
 54427      00000000 
 54428 6d16 00000000 		.quad	.LVL655
 54428      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1322


 54429 6d1e 0400     		.value	0x4
 54430 6d20 91       		.byte	0x91
 54431 6d21 E87E     		.sleb128 -152
 54432 6d23 9F       		.byte	0x9f
 54433 6d24 00000000 		.quad	.LVL655
 54433      00000000 
 54434 6d2c 00000000 		.quad	.LVL657
 54434      00000000 
 54435 6d34 0400     		.value	0x4
 54436 6d36 91       		.byte	0x91
 54437 6d37 987F     		.sleb128 -104
 54438 6d39 9F       		.byte	0x9f
 54439 6d3a 00000000 		.quad	.LVL658
 54439      00000000 
 54440 6d42 00000000 		.quad	.LVL661
 54440      00000000 
 54441 6d4a 0400     		.value	0x4
 54442 6d4c 91       		.byte	0x91
 54443 6d4d 987F     		.sleb128 -104
 54444 6d4f 9F       		.byte	0x9f
 54445 6d50 00000000 		.quad	.LVL667
 54445      00000000 
 54446 6d58 00000000 		.quad	.LVL668
 54446      00000000 
 54447 6d60 0400     		.value	0x4
 54448 6d62 91       		.byte	0x91
 54449 6d63 987F     		.sleb128 -104
 54450 6d65 9F       		.byte	0x9f
 54451 6d66 00000000 		.quad	.LVL668
 54451      00000000 
 54452 6d6e 00000000 		.quad	.LVL670
 54452      00000000 
 54453 6d76 0400     		.value	0x4
 54454 6d78 91       		.byte	0x91
 54455 6d79 E87E     		.sleb128 -152
 54456 6d7b 9F       		.byte	0x9f
 54457 6d7c 00000000 		.quad	.LVL677
 54457      00000000 
 54458 6d84 00000000 		.quad	.LVL678
 54458      00000000 
 54459 6d8c 0400     		.value	0x4
 54460 6d8e 91       		.byte	0x91
 54461 6d8f E87E     		.sleb128 -152
 54462 6d91 9F       		.byte	0x9f
 54463 6d92 00000000 		.quad	0
 54463      00000000 
 54464 6d9a 00000000 		.quad	0
 54464      00000000 
 54465              	.LLST461:
 54466 6da2 00000000 		.quad	.LVL430
 54466      00000000 
 54467 6daa 00000000 		.quad	.LVL578
 54467      00000000 
 54468 6db2 0A00     		.value	0xa
 54469 6db4 03       		.byte	0x3
 54470 6db5 00000000 		.quad	.LC14
 54470      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1323


 54471 6dbd 9F       		.byte	0x9f
 54472 6dbe 00000000 		.quad	.LVL582
 54472      00000000 
 54473 6dc6 00000000 		.quad	.LVL603
 54473      00000000 
 54474 6dce 0A00     		.value	0xa
 54475 6dd0 03       		.byte	0x3
 54476 6dd1 00000000 		.quad	.LC14
 54476      00000000 
 54477 6dd9 9F       		.byte	0x9f
 54478 6dda 00000000 		.quad	.LVL623
 54478      00000000 
 54479 6de2 00000000 		.quad	.LVL629
 54479      00000000 
 54480 6dea 0A00     		.value	0xa
 54481 6dec 03       		.byte	0x3
 54482 6ded 00000000 		.quad	.LC14
 54482      00000000 
 54483 6df5 9F       		.byte	0x9f
 54484 6df6 00000000 		.quad	.LVL633
 54484      00000000 
 54485 6dfe 00000000 		.quad	.LVL646
 54485      00000000 
 54486 6e06 0A00     		.value	0xa
 54487 6e08 03       		.byte	0x3
 54488 6e09 00000000 		.quad	.LC14
 54488      00000000 
 54489 6e11 9F       		.byte	0x9f
 54490 6e12 00000000 		.quad	.LVL650
 54490      00000000 
 54491 6e1a 00000000 		.quad	.LVL657
 54491      00000000 
 54492 6e22 0A00     		.value	0xa
 54493 6e24 03       		.byte	0x3
 54494 6e25 00000000 		.quad	.LC14
 54494      00000000 
 54495 6e2d 9F       		.byte	0x9f
 54496 6e2e 00000000 		.quad	.LVL658
 54496      00000000 
 54497 6e36 00000000 		.quad	.LVL661
 54497      00000000 
 54498 6e3e 0A00     		.value	0xa
 54499 6e40 03       		.byte	0x3
 54500 6e41 00000000 		.quad	.LC14
 54500      00000000 
 54501 6e49 9F       		.byte	0x9f
 54502 6e4a 00000000 		.quad	.LVL667
 54502      00000000 
 54503 6e52 00000000 		.quad	.LVL670
 54503      00000000 
 54504 6e5a 0A00     		.value	0xa
 54505 6e5c 03       		.byte	0x3
 54506 6e5d 00000000 		.quad	.LC14
 54506      00000000 
 54507 6e65 9F       		.byte	0x9f
 54508 6e66 00000000 		.quad	.LVL677
 54508      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1324


 54509 6e6e 00000000 		.quad	.LVL679
 54509      00000000 
 54510 6e76 0A00     		.value	0xa
 54511 6e78 03       		.byte	0x3
 54512 6e79 00000000 		.quad	.LC14
 54512      00000000 
 54513 6e81 9F       		.byte	0x9f
 54514 6e82 00000000 		.quad	0
 54514      00000000 
 54515 6e8a 00000000 		.quad	0
 54515      00000000 
 54516              	.LLST462:
 54517 6e92 00000000 		.quad	.LVL434
 54517      00000000 
 54518 6e9a 00000000 		.quad	.LVL438-1
 54518      00000000 
 54519 6ea2 0100     		.value	0x1
 54520 6ea4 51       		.byte	0x51
 54521 6ea5 00000000 		.quad	0
 54521      00000000 
 54522 6ead 00000000 		.quad	0
 54522      00000000 
 54523              	.LLST463:
 54524 6eb5 00000000 		.quad	.LVL434
 54524      00000000 
 54525 6ebd 00000000 		.quad	.LVL578
 54525      00000000 
 54526 6ec5 0400     		.value	0x4
 54527 6ec7 0A       		.byte	0xa
 54528 6ec8 0401     		.value	0x104
 54529 6eca 9F       		.byte	0x9f
 54530 6ecb 00000000 		.quad	.LVL582
 54530      00000000 
 54531 6ed3 00000000 		.quad	.LVL603
 54531      00000000 
 54532 6edb 0400     		.value	0x4
 54533 6edd 0A       		.byte	0xa
 54534 6ede 0401     		.value	0x104
 54535 6ee0 9F       		.byte	0x9f
 54536 6ee1 00000000 		.quad	.LVL623
 54536      00000000 
 54537 6ee9 00000000 		.quad	.LVL629
 54537      00000000 
 54538 6ef1 0400     		.value	0x4
 54539 6ef3 0A       		.byte	0xa
 54540 6ef4 0401     		.value	0x104
 54541 6ef6 9F       		.byte	0x9f
 54542 6ef7 00000000 		.quad	.LVL633
 54542      00000000 
 54543 6eff 00000000 		.quad	.LVL646
 54543      00000000 
 54544 6f07 0400     		.value	0x4
 54545 6f09 0A       		.byte	0xa
 54546 6f0a 0401     		.value	0x104
 54547 6f0c 9F       		.byte	0x9f
 54548 6f0d 00000000 		.quad	.LVL650
 54548      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1325


 54549 6f15 00000000 		.quad	.LVL657
 54549      00000000 
 54550 6f1d 0400     		.value	0x4
 54551 6f1f 0A       		.byte	0xa
 54552 6f20 0401     		.value	0x104
 54553 6f22 9F       		.byte	0x9f
 54554 6f23 00000000 		.quad	.LVL658
 54554      00000000 
 54555 6f2b 00000000 		.quad	.LVL661
 54555      00000000 
 54556 6f33 0400     		.value	0x4
 54557 6f35 0A       		.byte	0xa
 54558 6f36 0401     		.value	0x104
 54559 6f38 9F       		.byte	0x9f
 54560 6f39 00000000 		.quad	.LVL667
 54560      00000000 
 54561 6f41 00000000 		.quad	.LVL670
 54561      00000000 
 54562 6f49 0400     		.value	0x4
 54563 6f4b 0A       		.byte	0xa
 54564 6f4c 0401     		.value	0x104
 54565 6f4e 9F       		.byte	0x9f
 54566 6f4f 00000000 		.quad	.LVL677
 54566      00000000 
 54567 6f57 00000000 		.quad	.LVL679
 54567      00000000 
 54568 6f5f 0400     		.value	0x4
 54569 6f61 0A       		.byte	0xa
 54570 6f62 0401     		.value	0x104
 54571 6f64 9F       		.byte	0x9f
 54572 6f65 00000000 		.quad	0
 54572      00000000 
 54573 6f6d 00000000 		.quad	0
 54573      00000000 
 54574              	.LLST464:
 54575 6f75 00000000 		.quad	.LVL434
 54575      00000000 
 54576 6f7d 00000000 		.quad	.LVL578
 54576      00000000 
 54577 6f85 0200     		.value	0x2
 54578 6f87 34       		.byte	0x34
 54579 6f88 9F       		.byte	0x9f
 54580 6f89 00000000 		.quad	.LVL582
 54580      00000000 
 54581 6f91 00000000 		.quad	.LVL603
 54581      00000000 
 54582 6f99 0200     		.value	0x2
 54583 6f9b 34       		.byte	0x34
 54584 6f9c 9F       		.byte	0x9f
 54585 6f9d 00000000 		.quad	.LVL623
 54585      00000000 
 54586 6fa5 00000000 		.quad	.LVL629
 54586      00000000 
 54587 6fad 0200     		.value	0x2
 54588 6faf 34       		.byte	0x34
 54589 6fb0 9F       		.byte	0x9f
 54590 6fb1 00000000 		.quad	.LVL633
GAS LISTING /tmp/ccJUMvuF.s 			page 1326


 54590      00000000 
 54591 6fb9 00000000 		.quad	.LVL646
 54591      00000000 
 54592 6fc1 0200     		.value	0x2
 54593 6fc3 34       		.byte	0x34
 54594 6fc4 9F       		.byte	0x9f
 54595 6fc5 00000000 		.quad	.LVL650
 54595      00000000 
 54596 6fcd 00000000 		.quad	.LVL657
 54596      00000000 
 54597 6fd5 0200     		.value	0x2
 54598 6fd7 34       		.byte	0x34
 54599 6fd8 9F       		.byte	0x9f
 54600 6fd9 00000000 		.quad	.LVL658
 54600      00000000 
 54601 6fe1 00000000 		.quad	.LVL661
 54601      00000000 
 54602 6fe9 0200     		.value	0x2
 54603 6feb 34       		.byte	0x34
 54604 6fec 9F       		.byte	0x9f
 54605 6fed 00000000 		.quad	.LVL667
 54605      00000000 
 54606 6ff5 00000000 		.quad	.LVL670
 54606      00000000 
 54607 6ffd 0200     		.value	0x2
 54608 6fff 34       		.byte	0x34
 54609 7000 9F       		.byte	0x9f
 54610 7001 00000000 		.quad	.LVL677
 54610      00000000 
 54611 7009 00000000 		.quad	.LVL679
 54611      00000000 
 54612 7011 0200     		.value	0x2
 54613 7013 34       		.byte	0x34
 54614 7014 9F       		.byte	0x9f
 54615 7015 00000000 		.quad	0
 54615      00000000 
 54616 701d 00000000 		.quad	0
 54616      00000000 
 54617              	.LLST466:
 54618 7025 00000000 		.quad	.LVL434
 54618      00000000 
 54619 702d 00000000 		.quad	.LVL437
 54619      00000000 
 54620 7035 0200     		.value	0x2
 54621 7037 71       		.byte	0x71
 54622 7038 18       		.sleb128 24
 54623 7039 00000000 		.quad	0
 54623      00000000 
 54624 7041 00000000 		.quad	0
 54624      00000000 
 54625              	.LLST467:
 54626 7049 00000000 		.quad	.LVL434
 54626      00000000 
 54627 7051 00000000 		.quad	.LVL578
 54627      00000000 
 54628 7059 0400     		.value	0x4
 54629 705b 0B       		.byte	0xb
GAS LISTING /tmp/ccJUMvuF.s 			page 1327


 54630 705c FBFE     		.value	0xfefb
 54631 705e 9F       		.byte	0x9f
 54632 705f 00000000 		.quad	.LVL582
 54632      00000000 
 54633 7067 00000000 		.quad	.LVL603
 54633      00000000 
 54634 706f 0400     		.value	0x4
 54635 7071 0B       		.byte	0xb
 54636 7072 FBFE     		.value	0xfefb
 54637 7074 9F       		.byte	0x9f
 54638 7075 00000000 		.quad	.LVL623
 54638      00000000 
 54639 707d 00000000 		.quad	.LVL629
 54639      00000000 
 54640 7085 0400     		.value	0x4
 54641 7087 0B       		.byte	0xb
 54642 7088 FBFE     		.value	0xfefb
 54643 708a 9F       		.byte	0x9f
 54644 708b 00000000 		.quad	.LVL633
 54644      00000000 
 54645 7093 00000000 		.quad	.LVL646
 54645      00000000 
 54646 709b 0400     		.value	0x4
 54647 709d 0B       		.byte	0xb
 54648 709e FBFE     		.value	0xfefb
 54649 70a0 9F       		.byte	0x9f
 54650 70a1 00000000 		.quad	.LVL650
 54650      00000000 
 54651 70a9 00000000 		.quad	.LVL657
 54651      00000000 
 54652 70b1 0400     		.value	0x4
 54653 70b3 0B       		.byte	0xb
 54654 70b4 FBFE     		.value	0xfefb
 54655 70b6 9F       		.byte	0x9f
 54656 70b7 00000000 		.quad	.LVL658
 54656      00000000 
 54657 70bf 00000000 		.quad	.LVL661
 54657      00000000 
 54658 70c7 0400     		.value	0x4
 54659 70c9 0B       		.byte	0xb
 54660 70ca FBFE     		.value	0xfefb
 54661 70cc 9F       		.byte	0x9f
 54662 70cd 00000000 		.quad	.LVL667
 54662      00000000 
 54663 70d5 00000000 		.quad	.LVL670
 54663      00000000 
 54664 70dd 0400     		.value	0x4
 54665 70df 0B       		.byte	0xb
 54666 70e0 FBFE     		.value	0xfefb
 54667 70e2 9F       		.byte	0x9f
 54668 70e3 00000000 		.quad	.LVL677
 54668      00000000 
 54669 70eb 00000000 		.quad	.LVL679
 54669      00000000 
 54670 70f3 0400     		.value	0x4
 54671 70f5 0B       		.byte	0xb
 54672 70f6 FBFE     		.value	0xfefb
GAS LISTING /tmp/ccJUMvuF.s 			page 1328


 54673 70f8 9F       		.byte	0x9f
 54674 70f9 00000000 		.quad	0
 54674      00000000 
 54675 7101 00000000 		.quad	0
 54675      00000000 
 54676              	.LLST468:
 54677 7109 00000000 		.quad	.LVL434
 54677      00000000 
 54678 7111 00000000 		.quad	.LVL438-1
 54678      00000000 
 54679 7119 0300     		.value	0x3
 54680 711b 71       		.byte	0x71
 54681 711c 18       		.sleb128 24
 54682 711d 9F       		.byte	0x9f
 54683 711e 00000000 		.quad	.LVL531
 54683      00000000 
 54684 7126 00000000 		.quad	.LVL535-1
 54684      00000000 
 54685 712e 0300     		.value	0x3
 54686 7130 71       		.byte	0x71
 54687 7131 18       		.sleb128 24
 54688 7132 9F       		.byte	0x9f
 54689 7133 00000000 		.quad	0
 54689      00000000 
 54690 713b 00000000 		.quad	0
 54690      00000000 
 54691              	.LLST474:
 54692 7143 00000000 		.quad	.LVL434
 54692      00000000 
 54693 714b 00000000 		.quad	.LVL435
 54693      00000000 
 54694 7153 0900     		.value	0x9
 54695 7155 71       		.byte	0x71
 54696 7156 18       		.sleb128 24
 54697 7157 94       		.byte	0x94
 54698 7158 04       		.byte	0x4
 54699 7159 0B       		.byte	0xb
 54700 715a FBFE     		.value	0xfefb
 54701 715c 1A       		.byte	0x1a
 54702 715d 9F       		.byte	0x9f
 54703 715e 00000000 		.quad	.LVL435
 54703      00000000 
 54704 7166 00000000 		.quad	.LVL436
 54704      00000000 
 54705 716e 0100     		.value	0x1
 54706 7170 50       		.byte	0x50
 54707 7171 00000000 		.quad	.LVL436
 54707      00000000 
 54708 7179 00000000 		.quad	.LVL437
 54708      00000000 
 54709 7181 0900     		.value	0x9
 54710 7183 71       		.byte	0x71
 54711 7184 18       		.sleb128 24
 54712 7185 94       		.byte	0x94
 54713 7186 04       		.byte	0x4
 54714 7187 0B       		.byte	0xb
 54715 7188 FBFE     		.value	0xfefb
GAS LISTING /tmp/ccJUMvuF.s 			page 1329


 54716 718a 1A       		.byte	0x1a
 54717 718b 9F       		.byte	0x9f
 54718 718c 00000000 		.quad	0
 54718      00000000 
 54719 7194 00000000 		.quad	0
 54719      00000000 
 54720              	.LLST475:
 54721 719c 00000000 		.quad	.LVL437
 54721      00000000 
 54722 71a4 00000000 		.quad	.LVL438-1
 54722      00000000 
 54723 71ac 0100     		.value	0x1
 54724 71ae 61       		.byte	0x61
 54725 71af 00000000 		.quad	.LVL438-1
 54725      00000000 
 54726 71b7 00000000 		.quad	.LVL441
 54726      00000000 
 54727 71bf 1300     		.value	0x13
 54728 71c1 91       		.byte	0x91
 54729 71c2 807E     		.sleb128 -256
 54730 71c4 F6       		.byte	0xf6
 54731 71c5 08       		.byte	0x8
 54732 71c6 29       		.uleb128 0x29
 54733 71c7 F4       		.byte	0xf4
 54734 71c8 29       		.uleb128 0x29
 54735 71c9 08       		.byte	0x8
 54736 71ca 00000000 		.long	0
 54737 71ce 00408F40 		.long	0x408f4000
 54738 71d2 1E       		.byte	0x1e
 54739 71d3 9F       		.byte	0x9f
 54740 71d4 00000000 		.quad	.LVL441
 54740      00000000 
 54741 71dc 00000000 		.quad	.LVL442
 54741      00000000 
 54742 71e4 0B00     		.value	0xb
 54743 71e6 F5       		.byte	0xf5
 54744 71e7 11       		.uleb128 0x11
 54745 71e8 29       		.uleb128 0x29
 54746 71e9 91       		.byte	0x91
 54747 71ea 807E     		.sleb128 -256
 54748 71ec F6       		.byte	0xf6
 54749 71ed 08       		.byte	0x8
 54750 71ee 29       		.uleb128 0x29
 54751 71ef 1E       		.byte	0x1e
 54752 71f0 9F       		.byte	0x9f
 54753 71f1 00000000 		.quad	.LVL442
 54753      00000000 
 54754 71f9 00000000 		.quad	.LVL501
 54754      00000000 
 54755 7201 1300     		.value	0x13
 54756 7203 91       		.byte	0x91
 54757 7204 807E     		.sleb128 -256
 54758 7206 F6       		.byte	0xf6
 54759 7207 08       		.byte	0x8
 54760 7208 29       		.uleb128 0x29
 54761 7209 F4       		.byte	0xf4
 54762 720a 29       		.uleb128 0x29
GAS LISTING /tmp/ccJUMvuF.s 			page 1330


 54763 720b 08       		.byte	0x8
 54764 720c 00000000 		.long	0
 54765 7210 00408F40 		.long	0x408f4000
 54766 7214 1E       		.byte	0x1e
 54767 7215 9F       		.byte	0x9f
 54768 7216 00000000 		.quad	.LVL623
 54768      00000000 
 54769 721e 00000000 		.quad	.LVL629
 54769      00000000 
 54770 7226 1300     		.value	0x13
 54771 7228 91       		.byte	0x91
 54772 7229 807E     		.sleb128 -256
 54773 722b F6       		.byte	0xf6
 54774 722c 08       		.byte	0x8
 54775 722d 29       		.uleb128 0x29
 54776 722e F4       		.byte	0xf4
 54777 722f 29       		.uleb128 0x29
 54778 7230 08       		.byte	0x8
 54779 7231 00000000 		.long	0
 54780 7235 00408F40 		.long	0x408f4000
 54781 7239 1E       		.byte	0x1e
 54782 723a 9F       		.byte	0x9f
 54783 723b 00000000 		.quad	.LVL652
 54783      00000000 
 54784 7243 00000000 		.quad	.LVL656
 54784      00000000 
 54785 724b 1300     		.value	0x13
 54786 724d 91       		.byte	0x91
 54787 724e 807E     		.sleb128 -256
 54788 7250 F6       		.byte	0xf6
 54789 7251 08       		.byte	0x8
 54790 7252 29       		.uleb128 0x29
 54791 7253 F4       		.byte	0xf4
 54792 7254 29       		.uleb128 0x29
 54793 7255 08       		.byte	0x8
 54794 7256 00000000 		.long	0
 54795 725a 00408F40 		.long	0x408f4000
 54796 725e 1E       		.byte	0x1e
 54797 725f 9F       		.byte	0x9f
 54798 7260 00000000 		.quad	.LVL668
 54798      00000000 
 54799 7268 00000000 		.quad	.LVL670
 54799      00000000 
 54800 7270 1300     		.value	0x13
 54801 7272 91       		.byte	0x91
 54802 7273 807E     		.sleb128 -256
 54803 7275 F6       		.byte	0xf6
 54804 7276 08       		.byte	0x8
 54805 7277 29       		.uleb128 0x29
 54806 7278 F4       		.byte	0xf4
 54807 7279 29       		.uleb128 0x29
 54808 727a 08       		.byte	0x8
 54809 727b 00000000 		.long	0
 54810 727f 00408F40 		.long	0x408f4000
 54811 7283 1E       		.byte	0x1e
 54812 7284 9F       		.byte	0x9f
 54813 7285 00000000 		.quad	.LVL677
GAS LISTING /tmp/ccJUMvuF.s 			page 1331


 54813      00000000 
 54814 728d 00000000 		.quad	.LVL678
 54814      00000000 
 54815 7295 1300     		.value	0x13
 54816 7297 91       		.byte	0x91
 54817 7298 807E     		.sleb128 -256
 54818 729a F6       		.byte	0xf6
 54819 729b 08       		.byte	0x8
 54820 729c 29       		.uleb128 0x29
 54821 729d F4       		.byte	0xf4
 54822 729e 29       		.uleb128 0x29
 54823 729f 08       		.byte	0x8
 54824 72a0 00000000 		.long	0
 54825 72a4 00408F40 		.long	0x408f4000
 54826 72a8 1E       		.byte	0x1e
 54827 72a9 9F       		.byte	0x9f
 54828 72aa 00000000 		.quad	0
 54828      00000000 
 54829 72b2 00000000 		.quad	0
 54829      00000000 
 54830              	.LLST476:
 54831 72ba 00000000 		.quad	.LVL439
 54831      00000000 
 54832 72c2 00000000 		.quad	.LVL578
 54832      00000000 
 54833 72ca 0A00     		.value	0xa
 54834 72cc 03       		.byte	0x3
 54835 72cd 00000000 		.quad	.LC15
 54835      00000000 
 54836 72d5 9F       		.byte	0x9f
 54837 72d6 00000000 		.quad	.LVL582
 54837      00000000 
 54838 72de 00000000 		.quad	.LVL603
 54838      00000000 
 54839 72e6 0A00     		.value	0xa
 54840 72e8 03       		.byte	0x3
 54841 72e9 00000000 		.quad	.LC15
 54841      00000000 
 54842 72f1 9F       		.byte	0x9f
 54843 72f2 00000000 		.quad	.LVL623
 54843      00000000 
 54844 72fa 00000000 		.quad	.LVL629
 54844      00000000 
 54845 7302 0A00     		.value	0xa
 54846 7304 03       		.byte	0x3
 54847 7305 00000000 		.quad	.LC15
 54847      00000000 
 54848 730d 9F       		.byte	0x9f
 54849 730e 00000000 		.quad	.LVL633
 54849      00000000 
 54850 7316 00000000 		.quad	.LVL646
 54850      00000000 
 54851 731e 0A00     		.value	0xa
 54852 7320 03       		.byte	0x3
 54853 7321 00000000 		.quad	.LC15
 54853      00000000 
 54854 7329 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1332


 54855 732a 00000000 		.quad	.LVL650
 54855      00000000 
 54856 7332 00000000 		.quad	.LVL657
 54856      00000000 
 54857 733a 0A00     		.value	0xa
 54858 733c 03       		.byte	0x3
 54859 733d 00000000 		.quad	.LC15
 54859      00000000 
 54860 7345 9F       		.byte	0x9f
 54861 7346 00000000 		.quad	.LVL658
 54861      00000000 
 54862 734e 00000000 		.quad	.LVL661
 54862      00000000 
 54863 7356 0A00     		.value	0xa
 54864 7358 03       		.byte	0x3
 54865 7359 00000000 		.quad	.LC15
 54865      00000000 
 54866 7361 9F       		.byte	0x9f
 54867 7362 00000000 		.quad	.LVL667
 54867      00000000 
 54868 736a 00000000 		.quad	.LVL670
 54868      00000000 
 54869 7372 0A00     		.value	0xa
 54870 7374 03       		.byte	0x3
 54871 7375 00000000 		.quad	.LC15
 54871      00000000 
 54872 737d 9F       		.byte	0x9f
 54873 737e 00000000 		.quad	.LVL677
 54873      00000000 
 54874 7386 00000000 		.quad	.LVL679
 54874      00000000 
 54875 738e 0A00     		.value	0xa
 54876 7390 03       		.byte	0x3
 54877 7391 00000000 		.quad	.LC15
 54877      00000000 
 54878 7399 9F       		.byte	0x9f
 54879 739a 00000000 		.quad	0
 54879      00000000 
 54880 73a2 00000000 		.quad	0
 54880      00000000 
 54881              	.LLST477:
 54882 73aa 00000000 		.quad	.LVL439
 54882      00000000 
 54883 73b2 00000000 		.quad	.LVL440-1
 54883      00000000 
 54884 73ba 0100     		.value	0x1
 54885 73bc 50       		.byte	0x50
 54886 73bd 00000000 		.quad	.LVL440-1
 54886      00000000 
 54887 73c5 00000000 		.quad	.LVL444
 54887      00000000 
 54888 73cd 0100     		.value	0x1
 54889 73cf 5C       		.byte	0x5c
 54890 73d0 00000000 		.quad	0
 54890      00000000 
 54891 73d8 00000000 		.quad	0
 54891      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1333


 54892              	.LLST478:
 54893 73e0 00000000 		.quad	.LVL440
 54893      00000000 
 54894 73e8 00000000 		.quad	.LVL442
 54894      00000000 
 54895 73f0 1300     		.value	0x13
 54896 73f2 91       		.byte	0x91
 54897 73f3 887E     		.sleb128 -248
 54898 73f5 F6       		.byte	0xf6
 54899 73f6 08       		.byte	0x8
 54900 73f7 29       		.uleb128 0x29
 54901 73f8 F4       		.byte	0xf4
 54902 73f9 29       		.uleb128 0x29
 54903 73fa 08       		.byte	0x8
 54904 73fb 00000000 		.long	0
 54905 73ff 00408F40 		.long	0x408f4000
 54906 7403 1E       		.byte	0x1e
 54907 7404 9F       		.byte	0x9f
 54908 7405 00000000 		.quad	.LVL442
 54908      00000000 
 54909 740d 00000000 		.quad	.LVL443-1
 54909      00000000 
 54910 7415 0100     		.value	0x1
 54911 7417 61       		.byte	0x61
 54912 7418 00000000 		.quad	.LVL443-1
 54912      00000000 
 54913 7420 00000000 		.quad	.LVL500
 54913      00000000 
 54914 7428 1300     		.value	0x13
 54915 742a 91       		.byte	0x91
 54916 742b 887E     		.sleb128 -248
 54917 742d F6       		.byte	0xf6
 54918 742e 08       		.byte	0x8
 54919 742f 29       		.uleb128 0x29
 54920 7430 F4       		.byte	0xf4
 54921 7431 29       		.uleb128 0x29
 54922 7432 08       		.byte	0x8
 54923 7433 00000000 		.long	0
 54924 7437 00408F40 		.long	0x408f4000
 54925 743b 1E       		.byte	0x1e
 54926 743c 9F       		.byte	0x9f
 54927 743d 00000000 		.quad	.LVL623
 54927      00000000 
 54928 7445 00000000 		.quad	.LVL629
 54928      00000000 
 54929 744d 1300     		.value	0x13
 54930 744f 91       		.byte	0x91
 54931 7450 887E     		.sleb128 -248
 54932 7452 F6       		.byte	0xf6
 54933 7453 08       		.byte	0x8
 54934 7454 29       		.uleb128 0x29
 54935 7455 F4       		.byte	0xf4
 54936 7456 29       		.uleb128 0x29
 54937 7457 08       		.byte	0x8
 54938 7458 00000000 		.long	0
 54939 745c 00408F40 		.long	0x408f4000
 54940 7460 1E       		.byte	0x1e
GAS LISTING /tmp/ccJUMvuF.s 			page 1334


 54941 7461 9F       		.byte	0x9f
 54942 7462 00000000 		.quad	.LVL652
 54942      00000000 
 54943 746a 00000000 		.quad	.LVL657
 54943      00000000 
 54944 7472 1300     		.value	0x13
 54945 7474 91       		.byte	0x91
 54946 7475 887E     		.sleb128 -248
 54947 7477 F6       		.byte	0xf6
 54948 7478 08       		.byte	0x8
 54949 7479 29       		.uleb128 0x29
 54950 747a F4       		.byte	0xf4
 54951 747b 29       		.uleb128 0x29
 54952 747c 08       		.byte	0x8
 54953 747d 00000000 		.long	0
 54954 7481 00408F40 		.long	0x408f4000
 54955 7485 1E       		.byte	0x1e
 54956 7486 9F       		.byte	0x9f
 54957 7487 00000000 		.quad	.LVL668
 54957      00000000 
 54958 748f 00000000 		.quad	.LVL670
 54958      00000000 
 54959 7497 1300     		.value	0x13
 54960 7499 91       		.byte	0x91
 54961 749a 887E     		.sleb128 -248
 54962 749c F6       		.byte	0xf6
 54963 749d 08       		.byte	0x8
 54964 749e 29       		.uleb128 0x29
 54965 749f F4       		.byte	0xf4
 54966 74a0 29       		.uleb128 0x29
 54967 74a1 08       		.byte	0x8
 54968 74a2 00000000 		.long	0
 54969 74a6 00408F40 		.long	0x408f4000
 54970 74aa 1E       		.byte	0x1e
 54971 74ab 9F       		.byte	0x9f
 54972 74ac 00000000 		.quad	.LVL677
 54972      00000000 
 54973 74b4 00000000 		.quad	.LVL678
 54973      00000000 
 54974 74bc 1300     		.value	0x13
 54975 74be 91       		.byte	0x91
 54976 74bf 887E     		.sleb128 -248
 54977 74c1 F6       		.byte	0xf6
 54978 74c2 08       		.byte	0x8
 54979 74c3 29       		.uleb128 0x29
 54980 74c4 F4       		.byte	0xf4
 54981 74c5 29       		.uleb128 0x29
 54982 74c6 08       		.byte	0x8
 54983 74c7 00000000 		.long	0
 54984 74cb 00408F40 		.long	0x408f4000
 54985 74cf 1E       		.byte	0x1e
 54986 74d0 9F       		.byte	0x9f
 54987 74d1 00000000 		.quad	0
 54987      00000000 
 54988 74d9 00000000 		.quad	0
 54988      00000000 
 54989              	.LLST479:
GAS LISTING /tmp/ccJUMvuF.s 			page 1335


 54990 74e1 00000000 		.quad	.LVL444
 54990      00000000 
 54991 74e9 00000000 		.quad	.LVL578
 54991      00000000 
 54992 74f1 0A00     		.value	0xa
 54993 74f3 03       		.byte	0x3
 54994 74f4 00000000 		.quad	.LC16
 54994      00000000 
 54995 74fc 9F       		.byte	0x9f
 54996 74fd 00000000 		.quad	.LVL582
 54996      00000000 
 54997 7505 00000000 		.quad	.LVL603
 54997      00000000 
 54998 750d 0A00     		.value	0xa
 54999 750f 03       		.byte	0x3
 55000 7510 00000000 		.quad	.LC16
 55000      00000000 
 55001 7518 9F       		.byte	0x9f
 55002 7519 00000000 		.quad	.LVL623
 55002      00000000 
 55003 7521 00000000 		.quad	.LVL629
 55003      00000000 
 55004 7529 0A00     		.value	0xa
 55005 752b 03       		.byte	0x3
 55006 752c 00000000 		.quad	.LC16
 55006      00000000 
 55007 7534 9F       		.byte	0x9f
 55008 7535 00000000 		.quad	.LVL633
 55008      00000000 
 55009 753d 00000000 		.quad	.LVL646
 55009      00000000 
 55010 7545 0A00     		.value	0xa
 55011 7547 03       		.byte	0x3
 55012 7548 00000000 		.quad	.LC16
 55012      00000000 
 55013 7550 9F       		.byte	0x9f
 55014 7551 00000000 		.quad	.LVL650
 55014      00000000 
 55015 7559 00000000 		.quad	.LVL657
 55015      00000000 
 55016 7561 0A00     		.value	0xa
 55017 7563 03       		.byte	0x3
 55018 7564 00000000 		.quad	.LC16
 55018      00000000 
 55019 756c 9F       		.byte	0x9f
 55020 756d 00000000 		.quad	.LVL658
 55020      00000000 
 55021 7575 00000000 		.quad	.LVL661
 55021      00000000 
 55022 757d 0A00     		.value	0xa
 55023 757f 03       		.byte	0x3
 55024 7580 00000000 		.quad	.LC16
 55024      00000000 
 55025 7588 9F       		.byte	0x9f
 55026 7589 00000000 		.quad	.LVL667
 55026      00000000 
 55027 7591 00000000 		.quad	.LVL670
GAS LISTING /tmp/ccJUMvuF.s 			page 1336


 55027      00000000 
 55028 7599 0A00     		.value	0xa
 55029 759b 03       		.byte	0x3
 55030 759c 00000000 		.quad	.LC16
 55030      00000000 
 55031 75a4 9F       		.byte	0x9f
 55032 75a5 00000000 		.quad	.LVL677
 55032      00000000 
 55033 75ad 00000000 		.quad	.LVL679
 55033      00000000 
 55034 75b5 0A00     		.value	0xa
 55035 75b7 03       		.byte	0x3
 55036 75b8 00000000 		.quad	.LC16
 55036      00000000 
 55037 75c0 9F       		.byte	0x9f
 55038 75c1 00000000 		.quad	0
 55038      00000000 
 55039 75c9 00000000 		.quad	0
 55039      00000000 
 55040              	.LLST480:
 55041 75d1 00000000 		.quad	.LVL444
 55041      00000000 
 55042 75d9 00000000 		.quad	.LVL445-1
 55042      00000000 
 55043 75e1 0100     		.value	0x1
 55044 75e3 50       		.byte	0x50
 55045 75e4 00000000 		.quad	.LVL445-1
 55045      00000000 
 55046 75ec 00000000 		.quad	.LVL453
 55046      00000000 
 55047 75f4 0100     		.value	0x1
 55048 75f6 5C       		.byte	0x5c
 55049 75f7 00000000 		.quad	.LVL626
 55049      00000000 
 55050 75ff 00000000 		.quad	.LVL629
 55050      00000000 
 55051 7607 0100     		.value	0x1
 55052 7609 5C       		.byte	0x5c
 55053 760a 00000000 		.quad	0
 55053      00000000 
 55054 7612 00000000 		.quad	0
 55054      00000000 
 55055              	.LLST481:
 55056 761a 00000000 		.quad	.LVL445
 55056      00000000 
 55057 7622 00000000 		.quad	.LVL453
 55057      00000000 
 55058 762a 0100     		.value	0x1
 55059 762c 5C       		.byte	0x5c
 55060 762d 00000000 		.quad	.LVL626
 55060      00000000 
 55061 7635 00000000 		.quad	.LVL629
 55061      00000000 
 55062 763d 0100     		.value	0x1
 55063 763f 5C       		.byte	0x5c
 55064 7640 00000000 		.quad	0
 55064      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1337


 55065 7648 00000000 		.quad	0
 55065      00000000 
 55066              	.LLST482:
 55067 7650 00000000 		.quad	.LVL445
 55067      00000000 
 55068 7658 00000000 		.quad	.LVL578
 55068      00000000 
 55069 7660 0200     		.value	0x2
 55070 7662 3A       		.byte	0x3a
 55071 7663 9F       		.byte	0x9f
 55072 7664 00000000 		.quad	.LVL582
 55072      00000000 
 55073 766c 00000000 		.quad	.LVL603
 55073      00000000 
 55074 7674 0200     		.value	0x2
 55075 7676 3A       		.byte	0x3a
 55076 7677 9F       		.byte	0x9f
 55077 7678 00000000 		.quad	.LVL623
 55077      00000000 
 55078 7680 00000000 		.quad	.LVL629
 55078      00000000 
 55079 7688 0200     		.value	0x2
 55080 768a 3A       		.byte	0x3a
 55081 768b 9F       		.byte	0x9f
 55082 768c 00000000 		.quad	.LVL633
 55082      00000000 
 55083 7694 00000000 		.quad	.LVL646
 55083      00000000 
 55084 769c 0200     		.value	0x2
 55085 769e 3A       		.byte	0x3a
 55086 769f 9F       		.byte	0x9f
 55087 76a0 00000000 		.quad	.LVL650
 55087      00000000 
 55088 76a8 00000000 		.quad	.LVL657
 55088      00000000 
 55089 76b0 0200     		.value	0x2
 55090 76b2 3A       		.byte	0x3a
 55091 76b3 9F       		.byte	0x9f
 55092 76b4 00000000 		.quad	.LVL658
 55092      00000000 
 55093 76bc 00000000 		.quad	.LVL661
 55093      00000000 
 55094 76c4 0200     		.value	0x2
 55095 76c6 3A       		.byte	0x3a
 55096 76c7 9F       		.byte	0x9f
 55097 76c8 00000000 		.quad	.LVL667
 55097      00000000 
 55098 76d0 00000000 		.quad	.LVL670
 55098      00000000 
 55099 76d8 0200     		.value	0x2
 55100 76da 3A       		.byte	0x3a
 55101 76db 9F       		.byte	0x9f
 55102 76dc 00000000 		.quad	.LVL677
 55102      00000000 
 55103 76e4 00000000 		.quad	.LVL679
 55103      00000000 
 55104 76ec 0200     		.value	0x2
GAS LISTING /tmp/ccJUMvuF.s 			page 1338


 55105 76ee 3A       		.byte	0x3a
 55106 76ef 9F       		.byte	0x9f
 55107 76f0 00000000 		.quad	0
 55107      00000000 
 55108 76f8 00000000 		.quad	0
 55108      00000000 
 55109              	.LLST483:
 55110 7700 00000000 		.quad	.LVL445
 55110      00000000 
 55111 7708 00000000 		.quad	.LVL448
 55111      00000000 
 55112 7710 0A00     		.value	0xa
 55113 7712 7C       		.byte	0x7c
 55114 7713 00       		.sleb128 0
 55115 7714 7C       		.byte	0x7c
 55116 7715 00       		.sleb128 0
 55117 7716 06       		.byte	0x6
 55118 7717 48       		.byte	0x48
 55119 7718 1C       		.byte	0x1c
 55120 7719 06       		.byte	0x6
 55121 771a 22       		.byte	0x22
 55122 771b 9F       		.byte	0x9f
 55123 771c 00000000 		.quad	.LVL626
 55123      00000000 
 55124 7724 00000000 		.quad	.LVL627-1
 55124      00000000 
 55125 772c 0A00     		.value	0xa
 55126 772e 7C       		.byte	0x7c
 55127 772f 00       		.sleb128 0
 55128 7730 7C       		.byte	0x7c
 55129 7731 00       		.sleb128 0
 55130 7732 06       		.byte	0x6
 55131 7733 48       		.byte	0x48
 55132 7734 1C       		.byte	0x1c
 55133 7735 06       		.byte	0x6
 55134 7736 22       		.byte	0x22
 55135 7737 9F       		.byte	0x9f
 55136 7738 00000000 		.quad	0
 55136      00000000 
 55137 7740 00000000 		.quad	0
 55137      00000000 
 55138              	.LLST484:
 55139 7748 00000000 		.quad	.LVL446
 55139      00000000 
 55140 7750 00000000 		.quad	.LVL448
 55140      00000000 
 55141 7758 0100     		.value	0x1
 55142 775a 50       		.byte	0x50
 55143 775b 00000000 		.quad	.LVL626
 55143      00000000 
 55144 7763 00000000 		.quad	.LVL627-1
 55144      00000000 
 55145 776b 0100     		.value	0x1
 55146 776d 50       		.byte	0x50
 55147 776e 00000000 		.quad	.LVL627-1
 55147      00000000 
 55148 7776 00000000 		.quad	.LVL629
GAS LISTING /tmp/ccJUMvuF.s 			page 1339


 55148      00000000 
 55149 777e 0300     		.value	0x3
 55150 7780 91       		.byte	0x91
 55151 7781 987E     		.sleb128 -232
 55152 7783 00000000 		.quad	0
 55152      00000000 
 55153 778b 00000000 		.quad	0
 55153      00000000 
 55154              	.LLST485:
 55155 7793 00000000 		.quad	.LVL447
 55155      00000000 
 55156 779b 00000000 		.quad	.LVL578
 55156      00000000 
 55157 77a3 0200     		.value	0x2
 55158 77a5 3A       		.byte	0x3a
 55159 77a6 9F       		.byte	0x9f
 55160 77a7 00000000 		.quad	.LVL582
 55160      00000000 
 55161 77af 00000000 		.quad	.LVL603
 55161      00000000 
 55162 77b7 0200     		.value	0x2
 55163 77b9 3A       		.byte	0x3a
 55164 77ba 9F       		.byte	0x9f
 55165 77bb 00000000 		.quad	.LVL623
 55165      00000000 
 55166 77c3 00000000 		.quad	.LVL629
 55166      00000000 
 55167 77cb 0200     		.value	0x2
 55168 77cd 3A       		.byte	0x3a
 55169 77ce 9F       		.byte	0x9f
 55170 77cf 00000000 		.quad	.LVL633
 55170      00000000 
 55171 77d7 00000000 		.quad	.LVL646
 55171      00000000 
 55172 77df 0200     		.value	0x2
 55173 77e1 3A       		.byte	0x3a
 55174 77e2 9F       		.byte	0x9f
 55175 77e3 00000000 		.quad	.LVL650
 55175      00000000 
 55176 77eb 00000000 		.quad	.LVL657
 55176      00000000 
 55177 77f3 0200     		.value	0x2
 55178 77f5 3A       		.byte	0x3a
 55179 77f6 9F       		.byte	0x9f
 55180 77f7 00000000 		.quad	.LVL658
 55180      00000000 
 55181 77ff 00000000 		.quad	.LVL661
 55181      00000000 
 55182 7807 0200     		.value	0x2
 55183 7809 3A       		.byte	0x3a
 55184 780a 9F       		.byte	0x9f
 55185 780b 00000000 		.quad	.LVL667
 55185      00000000 
 55186 7813 00000000 		.quad	.LVL670
 55186      00000000 
 55187 781b 0200     		.value	0x2
 55188 781d 3A       		.byte	0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 1340


 55189 781e 9F       		.byte	0x9f
 55190 781f 00000000 		.quad	.LVL677
 55190      00000000 
 55191 7827 00000000 		.quad	.LVL678
 55191      00000000 
 55192 782f 0200     		.value	0x2
 55193 7831 3A       		.byte	0x3a
 55194 7832 9F       		.byte	0x9f
 55195 7833 00000000 		.quad	0
 55195      00000000 
 55196 783b 00000000 		.quad	0
 55196      00000000 
 55197              	.LLST486:
 55198 7843 00000000 		.quad	.LVL447
 55198      00000000 
 55199 784b 00000000 		.quad	.LVL448
 55199      00000000 
 55200 7853 0100     		.value	0x1
 55201 7855 50       		.byte	0x50
 55202 7856 00000000 		.quad	.LVL626
 55202      00000000 
 55203 785e 00000000 		.quad	.LVL627-1
 55203      00000000 
 55204 7866 0100     		.value	0x1
 55205 7868 50       		.byte	0x50
 55206 7869 00000000 		.quad	.LVL627-1
 55206      00000000 
 55207 7871 00000000 		.quad	.LVL629
 55207      00000000 
 55208 7879 0300     		.value	0x3
 55209 787b 91       		.byte	0x91
 55210 787c 987E     		.sleb128 -232
 55211 787e 00000000 		.quad	0
 55211      00000000 
 55212 7886 00000000 		.quad	0
 55212      00000000 
 55213              	.LLST487:
 55214 788e 00000000 		.quad	.LVL626
 55214      00000000 
 55215 7896 00000000 		.quad	.LVL629
 55215      00000000 
 55216 789e 0200     		.value	0x2
 55217 78a0 3A       		.byte	0x3a
 55218 78a1 9F       		.byte	0x9f
 55219 78a2 00000000 		.quad	0
 55219      00000000 
 55220 78aa 00000000 		.quad	0
 55220      00000000 
 55221              	.LLST488:
 55222 78b2 00000000 		.quad	.LVL626
 55222      00000000 
 55223 78ba 00000000 		.quad	.LVL627-1
 55223      00000000 
 55224 78c2 0100     		.value	0x1
 55225 78c4 50       		.byte	0x50
 55226 78c5 00000000 		.quad	.LVL627-1
 55226      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1341


 55227 78cd 00000000 		.quad	.LVL629
 55227      00000000 
 55228 78d5 0300     		.value	0x3
 55229 78d7 91       		.byte	0x91
 55230 78d8 987E     		.sleb128 -232
 55231 78da 00000000 		.quad	0
 55231      00000000 
 55232 78e2 00000000 		.quad	0
 55232      00000000 
 55233              	.LLST489:
 55234 78ea 00000000 		.quad	.LVL449
 55234      00000000 
 55235 78f2 00000000 		.quad	.LVL450-1
 55235      00000000 
 55236 78fa 0100     		.value	0x1
 55237 78fc 50       		.byte	0x50
 55238 78fd 00000000 		.quad	0
 55238      00000000 
 55239 7905 00000000 		.quad	0
 55239      00000000 
 55240              	.LLST490:
 55241 790d 00000000 		.quad	.LVL450
 55241      00000000 
 55242 7915 00000000 		.quad	.LVL578
 55242      00000000 
 55243 791d 0A00     		.value	0xa
 55244 791f 03       		.byte	0x3
 55245 7920 00000000 		.quad	.LC17
 55245      00000000 
 55246 7928 9F       		.byte	0x9f
 55247 7929 00000000 		.quad	.LVL582
 55247      00000000 
 55248 7931 00000000 		.quad	.LVL603
 55248      00000000 
 55249 7939 0A00     		.value	0xa
 55250 793b 03       		.byte	0x3
 55251 793c 00000000 		.quad	.LC17
 55251      00000000 
 55252 7944 9F       		.byte	0x9f
 55253 7945 00000000 		.quad	.LVL623
 55253      00000000 
 55254 794d 00000000 		.quad	.LVL626
 55254      00000000 
 55255 7955 0A00     		.value	0xa
 55256 7957 03       		.byte	0x3
 55257 7958 00000000 		.quad	.LC17
 55257      00000000 
 55258 7960 9F       		.byte	0x9f
 55259 7961 00000000 		.quad	.LVL633
 55259      00000000 
 55260 7969 00000000 		.quad	.LVL646
 55260      00000000 
 55261 7971 0A00     		.value	0xa
 55262 7973 03       		.byte	0x3
 55263 7974 00000000 		.quad	.LC17
 55263      00000000 
 55264 797c 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1342


 55265 797d 00000000 		.quad	.LVL650
 55265      00000000 
 55266 7985 00000000 		.quad	.LVL657
 55266      00000000 
 55267 798d 0A00     		.value	0xa
 55268 798f 03       		.byte	0x3
 55269 7990 00000000 		.quad	.LC17
 55269      00000000 
 55270 7998 9F       		.byte	0x9f
 55271 7999 00000000 		.quad	.LVL658
 55271      00000000 
 55272 79a1 00000000 		.quad	.LVL661
 55272      00000000 
 55273 79a9 0A00     		.value	0xa
 55274 79ab 03       		.byte	0x3
 55275 79ac 00000000 		.quad	.LC17
 55275      00000000 
 55276 79b4 9F       		.byte	0x9f
 55277 79b5 00000000 		.quad	.LVL667
 55277      00000000 
 55278 79bd 00000000 		.quad	.LVL670
 55278      00000000 
 55279 79c5 0A00     		.value	0xa
 55280 79c7 03       		.byte	0x3
 55281 79c8 00000000 		.quad	.LC17
 55281      00000000 
 55282 79d0 9F       		.byte	0x9f
 55283 79d1 00000000 		.quad	.LVL677
 55283      00000000 
 55284 79d9 00000000 		.quad	.LVL678
 55284      00000000 
 55285 79e1 0A00     		.value	0xa
 55286 79e3 03       		.byte	0x3
 55287 79e4 00000000 		.quad	.LC17
 55287      00000000 
 55288 79ec 9F       		.byte	0x9f
 55289 79ed 00000000 		.quad	0
 55289      00000000 
 55290 79f5 00000000 		.quad	0
 55290      00000000 
 55291              	.LLST491:
 55292 79fd 00000000 		.quad	.LVL451
 55292      00000000 
 55293 7a05 00000000 		.quad	.LVL501
 55293      00000000 
 55294 7a0d 0300     		.value	0x3
 55295 7a0f 91       		.byte	0x91
 55296 7a10 807E     		.sleb128 -256
 55297 7a12 00000000 		.quad	.LVL623
 55297      00000000 
 55298 7a1a 00000000 		.quad	.LVL626
 55298      00000000 
 55299 7a22 0300     		.value	0x3
 55300 7a24 91       		.byte	0x91
 55301 7a25 807E     		.sleb128 -256
 55302 7a27 00000000 		.quad	.LVL652
 55302      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1343


 55303 7a2f 00000000 		.quad	.LVL656
 55303      00000000 
 55304 7a37 0300     		.value	0x3
 55305 7a39 91       		.byte	0x91
 55306 7a3a 807E     		.sleb128 -256
 55307 7a3c 00000000 		.quad	.LVL668
 55307      00000000 
 55308 7a44 00000000 		.quad	.LVL670
 55308      00000000 
 55309 7a4c 0300     		.value	0x3
 55310 7a4e 91       		.byte	0x91
 55311 7a4f 807E     		.sleb128 -256
 55312 7a51 00000000 		.quad	.LVL677
 55312      00000000 
 55313 7a59 00000000 		.quad	.LVL678
 55313      00000000 
 55314 7a61 0300     		.value	0x3
 55315 7a63 91       		.byte	0x91
 55316 7a64 807E     		.sleb128 -256
 55317 7a66 00000000 		.quad	0
 55317      00000000 
 55318 7a6e 00000000 		.quad	0
 55318      00000000 
 55319              	.LLST492:
 55320 7a76 00000000 		.quad	.LVL453
 55320      00000000 
 55321 7a7e 00000000 		.quad	.LVL578
 55321      00000000 
 55322 7a86 0A00     		.value	0xa
 55323 7a88 03       		.byte	0x3
 55324 7a89 00000000 		.quad	.LC18
 55324      00000000 
 55325 7a91 9F       		.byte	0x9f
 55326 7a92 00000000 		.quad	.LVL582
 55326      00000000 
 55327 7a9a 00000000 		.quad	.LVL603
 55327      00000000 
 55328 7aa2 0A00     		.value	0xa
 55329 7aa4 03       		.byte	0x3
 55330 7aa5 00000000 		.quad	.LC18
 55330      00000000 
 55331 7aad 9F       		.byte	0x9f
 55332 7aae 00000000 		.quad	.LVL623
 55332      00000000 
 55333 7ab6 00000000 		.quad	.LVL626
 55333      00000000 
 55334 7abe 0A00     		.value	0xa
 55335 7ac0 03       		.byte	0x3
 55336 7ac1 00000000 		.quad	.LC18
 55336      00000000 
 55337 7ac9 9F       		.byte	0x9f
 55338 7aca 00000000 		.quad	.LVL633
 55338      00000000 
 55339 7ad2 00000000 		.quad	.LVL646
 55339      00000000 
 55340 7ada 0A00     		.value	0xa
 55341 7adc 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1344


 55342 7add 00000000 		.quad	.LC18
 55342      00000000 
 55343 7ae5 9F       		.byte	0x9f
 55344 7ae6 00000000 		.quad	.LVL650
 55344      00000000 
 55345 7aee 00000000 		.quad	.LVL657
 55345      00000000 
 55346 7af6 0A00     		.value	0xa
 55347 7af8 03       		.byte	0x3
 55348 7af9 00000000 		.quad	.LC18
 55348      00000000 
 55349 7b01 9F       		.byte	0x9f
 55350 7b02 00000000 		.quad	.LVL658
 55350      00000000 
 55351 7b0a 00000000 		.quad	.LVL661
 55351      00000000 
 55352 7b12 0A00     		.value	0xa
 55353 7b14 03       		.byte	0x3
 55354 7b15 00000000 		.quad	.LC18
 55354      00000000 
 55355 7b1d 9F       		.byte	0x9f
 55356 7b1e 00000000 		.quad	.LVL667
 55356      00000000 
 55357 7b26 00000000 		.quad	.LVL670
 55357      00000000 
 55358 7b2e 0A00     		.value	0xa
 55359 7b30 03       		.byte	0x3
 55360 7b31 00000000 		.quad	.LC18
 55360      00000000 
 55361 7b39 9F       		.byte	0x9f
 55362 7b3a 00000000 		.quad	.LVL677
 55362      00000000 
 55363 7b42 00000000 		.quad	.LVL678
 55363      00000000 
 55364 7b4a 0A00     		.value	0xa
 55365 7b4c 03       		.byte	0x3
 55366 7b4d 00000000 		.quad	.LC18
 55366      00000000 
 55367 7b55 9F       		.byte	0x9f
 55368 7b56 00000000 		.quad	0
 55368      00000000 
 55369 7b5e 00000000 		.quad	0
 55369      00000000 
 55370              	.LLST493:
 55371 7b66 00000000 		.quad	.LVL453
 55371      00000000 
 55372 7b6e 00000000 		.quad	.LVL454-1
 55372      00000000 
 55373 7b76 0100     		.value	0x1
 55374 7b78 50       		.byte	0x50
 55375 7b79 00000000 		.quad	.LVL454-1
 55375      00000000 
 55376 7b81 00000000 		.quad	.LVL462
 55376      00000000 
 55377 7b89 0100     		.value	0x1
 55378 7b8b 5C       		.byte	0x5c
 55379 7b8c 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1345


 55379      00000000 
 55380 7b94 00000000 		.quad	0
 55380      00000000 
 55381              	.LLST494:
 55382 7b9c 00000000 		.quad	.LVL454
 55382      00000000 
 55383 7ba4 00000000 		.quad	.LVL500
 55383      00000000 
 55384 7bac 0300     		.value	0x3
 55385 7bae 91       		.byte	0x91
 55386 7baf 887E     		.sleb128 -248
 55387 7bb1 00000000 		.quad	.LVL623
 55387      00000000 
 55388 7bb9 00000000 		.quad	.LVL626
 55388      00000000 
 55389 7bc1 0300     		.value	0x3
 55390 7bc3 91       		.byte	0x91
 55391 7bc4 887E     		.sleb128 -248
 55392 7bc6 00000000 		.quad	.LVL652
 55392      00000000 
 55393 7bce 00000000 		.quad	.LVL657
 55393      00000000 
 55394 7bd6 0300     		.value	0x3
 55395 7bd8 91       		.byte	0x91
 55396 7bd9 887E     		.sleb128 -248
 55397 7bdb 00000000 		.quad	.LVL668
 55397      00000000 
 55398 7be3 00000000 		.quad	.LVL670
 55398      00000000 
 55399 7beb 0300     		.value	0x3
 55400 7bed 91       		.byte	0x91
 55401 7bee 887E     		.sleb128 -248
 55402 7bf0 00000000 		.quad	.LVL677
 55402      00000000 
 55403 7bf8 00000000 		.quad	.LVL678
 55403      00000000 
 55404 7c00 0300     		.value	0x3
 55405 7c02 91       		.byte	0x91
 55406 7c03 887E     		.sleb128 -248
 55407 7c05 00000000 		.quad	0
 55407      00000000 
 55408 7c0d 00000000 		.quad	0
 55408      00000000 
 55409              	.LLST495:
 55410 7c15 00000000 		.quad	.LVL455
 55410      00000000 
 55411 7c1d 00000000 		.quad	.LVL578
 55411      00000000 
 55412 7c25 0A00     		.value	0xa
 55413 7c27 03       		.byte	0x3
 55414 7c28 00000000 		.quad	.LC19
 55414      00000000 
 55415 7c30 9F       		.byte	0x9f
 55416 7c31 00000000 		.quad	.LVL582
 55416      00000000 
 55417 7c39 00000000 		.quad	.LVL603
 55417      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1346


 55418 7c41 0A00     		.value	0xa
 55419 7c43 03       		.byte	0x3
 55420 7c44 00000000 		.quad	.LC19
 55420      00000000 
 55421 7c4c 9F       		.byte	0x9f
 55422 7c4d 00000000 		.quad	.LVL623
 55422      00000000 
 55423 7c55 00000000 		.quad	.LVL626
 55423      00000000 
 55424 7c5d 0A00     		.value	0xa
 55425 7c5f 03       		.byte	0x3
 55426 7c60 00000000 		.quad	.LC19
 55426      00000000 
 55427 7c68 9F       		.byte	0x9f
 55428 7c69 00000000 		.quad	.LVL633
 55428      00000000 
 55429 7c71 00000000 		.quad	.LVL646
 55429      00000000 
 55430 7c79 0A00     		.value	0xa
 55431 7c7b 03       		.byte	0x3
 55432 7c7c 00000000 		.quad	.LC19
 55432      00000000 
 55433 7c84 9F       		.byte	0x9f
 55434 7c85 00000000 		.quad	.LVL650
 55434      00000000 
 55435 7c8d 00000000 		.quad	.LVL657
 55435      00000000 
 55436 7c95 0A00     		.value	0xa
 55437 7c97 03       		.byte	0x3
 55438 7c98 00000000 		.quad	.LC19
 55438      00000000 
 55439 7ca0 9F       		.byte	0x9f
 55440 7ca1 00000000 		.quad	.LVL658
 55440      00000000 
 55441 7ca9 00000000 		.quad	.LVL661
 55441      00000000 
 55442 7cb1 0A00     		.value	0xa
 55443 7cb3 03       		.byte	0x3
 55444 7cb4 00000000 		.quad	.LC19
 55444      00000000 
 55445 7cbc 9F       		.byte	0x9f
 55446 7cbd 00000000 		.quad	.LVL667
 55446      00000000 
 55447 7cc5 00000000 		.quad	.LVL670
 55447      00000000 
 55448 7ccd 0A00     		.value	0xa
 55449 7ccf 03       		.byte	0x3
 55450 7cd0 00000000 		.quad	.LC19
 55450      00000000 
 55451 7cd8 9F       		.byte	0x9f
 55452 7cd9 00000000 		.quad	.LVL677
 55452      00000000 
 55453 7ce1 00000000 		.quad	.LVL678
 55453      00000000 
 55454 7ce9 0A00     		.value	0xa
 55455 7ceb 03       		.byte	0x3
 55456 7cec 00000000 		.quad	.LC19
GAS LISTING /tmp/ccJUMvuF.s 			page 1347


 55456      00000000 
 55457 7cf4 9F       		.byte	0x9f
 55458 7cf5 00000000 		.quad	0
 55458      00000000 
 55459 7cfd 00000000 		.quad	0
 55459      00000000 
 55460              	.LLST496:
 55461 7d05 00000000 		.quad	.LVL455
 55461      00000000 
 55462 7d0d 00000000 		.quad	.LVL456-1
 55462      00000000 
 55463 7d15 0100     		.value	0x1
 55464 7d17 50       		.byte	0x50
 55465 7d18 00000000 		.quad	0
 55465      00000000 
 55466 7d20 00000000 		.quad	0
 55466      00000000 
 55467              	.LLST497:
 55468 7d28 00000000 		.quad	.LVL456
 55468      00000000 
 55469 7d30 00000000 		.quad	.LVL553
 55469      00000000 
 55470 7d38 0400     		.value	0x4
 55471 7d3a 91       		.byte	0x91
 55472 7d3b E87E     		.sleb128 -152
 55473 7d3d 9F       		.byte	0x9f
 55474 7d3e 00000000 		.quad	.LVL553
 55474      00000000 
 55475 7d46 00000000 		.quad	.LVL574
 55475      00000000 
 55476 7d4e 0400     		.value	0x4
 55477 7d50 91       		.byte	0x91
 55478 7d51 987F     		.sleb128 -104
 55479 7d53 9F       		.byte	0x9f
 55480 7d54 00000000 		.quad	.LVL574
 55480      00000000 
 55481 7d5c 00000000 		.quad	.LVL578
 55481      00000000 
 55482 7d64 0400     		.value	0x4
 55483 7d66 91       		.byte	0x91
 55484 7d67 E87E     		.sleb128 -152
 55485 7d69 9F       		.byte	0x9f
 55486 7d6a 00000000 		.quad	.LVL582
 55486      00000000 
 55487 7d72 00000000 		.quad	.LVL603
 55487      00000000 
 55488 7d7a 0400     		.value	0x4
 55489 7d7c 91       		.byte	0x91
 55490 7d7d E87E     		.sleb128 -152
 55491 7d7f 9F       		.byte	0x9f
 55492 7d80 00000000 		.quad	.LVL623
 55492      00000000 
 55493 7d88 00000000 		.quad	.LVL626
 55493      00000000 
 55494 7d90 0400     		.value	0x4
 55495 7d92 91       		.byte	0x91
 55496 7d93 E87E     		.sleb128 -152
GAS LISTING /tmp/ccJUMvuF.s 			page 1348


 55497 7d95 9F       		.byte	0x9f
 55498 7d96 00000000 		.quad	.LVL633
 55498      00000000 
 55499 7d9e 00000000 		.quad	.LVL637
 55499      00000000 
 55500 7da6 0400     		.value	0x4
 55501 7da8 91       		.byte	0x91
 55502 7da9 E87E     		.sleb128 -152
 55503 7dab 9F       		.byte	0x9f
 55504 7dac 00000000 		.quad	.LVL637
 55504      00000000 
 55505 7db4 00000000 		.quad	.LVL644
 55505      00000000 
 55506 7dbc 0400     		.value	0x4
 55507 7dbe 91       		.byte	0x91
 55508 7dbf 987F     		.sleb128 -104
 55509 7dc1 9F       		.byte	0x9f
 55510 7dc2 00000000 		.quad	.LVL644
 55510      00000000 
 55511 7dca 00000000 		.quad	.LVL646
 55511      00000000 
 55512 7dd2 0400     		.value	0x4
 55513 7dd4 91       		.byte	0x91
 55514 7dd5 E87E     		.sleb128 -152
 55515 7dd7 9F       		.byte	0x9f
 55516 7dd8 00000000 		.quad	.LVL650
 55516      00000000 
 55517 7de0 00000000 		.quad	.LVL657
 55517      00000000 
 55518 7de8 0400     		.value	0x4
 55519 7dea 91       		.byte	0x91
 55520 7deb E87E     		.sleb128 -152
 55521 7ded 9F       		.byte	0x9f
 55522 7dee 00000000 		.quad	.LVL658
 55522      00000000 
 55523 7df6 00000000 		.quad	.LVL661
 55523      00000000 
 55524 7dfe 0400     		.value	0x4
 55525 7e00 91       		.byte	0x91
 55526 7e01 987F     		.sleb128 -104
 55527 7e03 9F       		.byte	0x9f
 55528 7e04 00000000 		.quad	.LVL667
 55528      00000000 
 55529 7e0c 00000000 		.quad	.LVL668
 55529      00000000 
 55530 7e14 0400     		.value	0x4
 55531 7e16 91       		.byte	0x91
 55532 7e17 987F     		.sleb128 -104
 55533 7e19 9F       		.byte	0x9f
 55534 7e1a 00000000 		.quad	.LVL668
 55534      00000000 
 55535 7e22 00000000 		.quad	.LVL670
 55535      00000000 
 55536 7e2a 0400     		.value	0x4
 55537 7e2c 91       		.byte	0x91
 55538 7e2d E87E     		.sleb128 -152
 55539 7e2f 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1349


 55540 7e30 00000000 		.quad	.LVL677
 55540      00000000 
 55541 7e38 00000000 		.quad	.LVL678
 55541      00000000 
 55542 7e40 0400     		.value	0x4
 55543 7e42 91       		.byte	0x91
 55544 7e43 E87E     		.sleb128 -152
 55545 7e45 9F       		.byte	0x9f
 55546 7e46 00000000 		.quad	0
 55546      00000000 
 55547 7e4e 00000000 		.quad	0
 55547      00000000 
 55548              	.LLST499:
 55549 7e56 00000000 		.quad	.LVL457
 55549      00000000 
 55550 7e5e 00000000 		.quad	.LVL459-1
 55550      00000000 
 55551 7e66 0C00     		.value	0xc
 55552 7e68 91       		.byte	0x91
 55553 7e69 F87E     		.sleb128 -136
 55554 7e6b 06       		.byte	0x6
 55555 7e6c 91       		.byte	0x91
 55556 7e6d E87E     		.sleb128 -152
 55557 7e6f 06       		.byte	0x6
 55558 7e70 1C       		.byte	0x1c
 55559 7e71 38       		.byte	0x38
 55560 7e72 1B       		.byte	0x1b
 55561 7e73 9F       		.byte	0x9f
 55562 7e74 00000000 		.quad	.LVL553
 55562      00000000 
 55563 7e7c 00000000 		.quad	.LVL556-1
 55563      00000000 
 55564 7e84 0C00     		.value	0xc
 55565 7e86 91       		.byte	0x91
 55566 7e87 A87F     		.sleb128 -88
 55567 7e89 06       		.byte	0x6
 55568 7e8a 91       		.byte	0x91
 55569 7e8b 987F     		.sleb128 -104
 55570 7e8d 06       		.byte	0x6
 55571 7e8e 1C       		.byte	0x1c
 55572 7e8f 38       		.byte	0x38
 55573 7e90 1B       		.byte	0x1b
 55574 7e91 9F       		.byte	0x9f
 55575 7e92 00000000 		.quad	0
 55575      00000000 
 55576 7e9a 00000000 		.quad	0
 55576      00000000 
 55577              	.LLST500:
 55578 7ea2 00000000 		.quad	.LVL457
 55578      00000000 
 55579 7eaa 00000000 		.quad	.LVL459-1
 55579      00000000 
 55580 7eb2 0100     		.value	0x1
 55581 7eb4 55       		.byte	0x55
 55582 7eb5 00000000 		.quad	0
 55582      00000000 
 55583 7ebd 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1350


 55583      00000000 
 55584              	.LLST501:
 55585 7ec5 00000000 		.quad	.LVL458
 55585      00000000 
 55586 7ecd 00000000 		.quad	.LVL459-1
 55586      00000000 
 55587 7ed5 0C00     		.value	0xc
 55588 7ed7 91       		.byte	0x91
 55589 7ed8 F87E     		.sleb128 -136
 55590 7eda 06       		.byte	0x6
 55591 7edb 91       		.byte	0x91
 55592 7edc E87E     		.sleb128 -152
 55593 7ede 06       		.byte	0x6
 55594 7edf 1C       		.byte	0x1c
 55595 7ee0 38       		.byte	0x38
 55596 7ee1 1B       		.byte	0x1b
 55597 7ee2 9F       		.byte	0x9f
 55598 7ee3 00000000 		.quad	0
 55598      00000000 
 55599 7eeb 00000000 		.quad	0
 55599      00000000 
 55600              	.LLST502:
 55601 7ef3 00000000 		.quad	.LVL458
 55601      00000000 
 55602 7efb 00000000 		.quad	.LVL459-1
 55602      00000000 
 55603 7f03 0100     		.value	0x1
 55604 7f05 55       		.byte	0x55
 55605 7f06 00000000 		.quad	0
 55605      00000000 
 55606 7f0e 00000000 		.quad	0
 55606      00000000 
 55607              	.LLST505:
 55608 7f16 00000000 		.quad	.LVL460
 55608      00000000 
 55609 7f1e 00000000 		.quad	.LVL578
 55609      00000000 
 55610 7f26 0A00     		.value	0xa
 55611 7f28 03       		.byte	0x3
 55612 7f29 00000000 		.quad	.LC26
 55612      00000000 
 55613 7f31 9F       		.byte	0x9f
 55614 7f32 00000000 		.quad	.LVL582
 55614      00000000 
 55615 7f3a 00000000 		.quad	.LVL603
 55615      00000000 
 55616 7f42 0A00     		.value	0xa
 55617 7f44 03       		.byte	0x3
 55618 7f45 00000000 		.quad	.LC26
 55618      00000000 
 55619 7f4d 9F       		.byte	0x9f
 55620 7f4e 00000000 		.quad	.LVL623
 55620      00000000 
 55621 7f56 00000000 		.quad	.LVL626
 55621      00000000 
 55622 7f5e 0A00     		.value	0xa
 55623 7f60 03       		.byte	0x3
GAS LISTING /tmp/ccJUMvuF.s 			page 1351


 55624 7f61 00000000 		.quad	.LC26
 55624      00000000 
 55625 7f69 9F       		.byte	0x9f
 55626 7f6a 00000000 		.quad	.LVL633
 55626      00000000 
 55627 7f72 00000000 		.quad	.LVL646
 55627      00000000 
 55628 7f7a 0A00     		.value	0xa
 55629 7f7c 03       		.byte	0x3
 55630 7f7d 00000000 		.quad	.LC26
 55630      00000000 
 55631 7f85 9F       		.byte	0x9f
 55632 7f86 00000000 		.quad	.LVL650
 55632      00000000 
 55633 7f8e 00000000 		.quad	.LVL657
 55633      00000000 
 55634 7f96 0A00     		.value	0xa
 55635 7f98 03       		.byte	0x3
 55636 7f99 00000000 		.quad	.LC26
 55636      00000000 
 55637 7fa1 9F       		.byte	0x9f
 55638 7fa2 00000000 		.quad	.LVL658
 55638      00000000 
 55639 7faa 00000000 		.quad	.LVL661
 55639      00000000 
 55640 7fb2 0A00     		.value	0xa
 55641 7fb4 03       		.byte	0x3
 55642 7fb5 00000000 		.quad	.LC26
 55642      00000000 
 55643 7fbd 9F       		.byte	0x9f
 55644 7fbe 00000000 		.quad	.LVL667
 55644      00000000 
 55645 7fc6 00000000 		.quad	.LVL670
 55645      00000000 
 55646 7fce 0A00     		.value	0xa
 55647 7fd0 03       		.byte	0x3
 55648 7fd1 00000000 		.quad	.LC26
 55648      00000000 
 55649 7fd9 9F       		.byte	0x9f
 55650 7fda 00000000 		.quad	.LVL677
 55650      00000000 
 55651 7fe2 00000000 		.quad	.LVL678
 55651      00000000 
 55652 7fea 0A00     		.value	0xa
 55653 7fec 03       		.byte	0x3
 55654 7fed 00000000 		.quad	.LC26
 55654      00000000 
 55655 7ff5 9F       		.byte	0x9f
 55656 7ff6 00000000 		.quad	0
 55656      00000000 
 55657 7ffe 00000000 		.quad	0
 55657      00000000 
 55658              	.LLST506:
 55659 8006 00000000 		.quad	.LVL461
 55659      00000000 
 55660 800e 00000000 		.quad	.LVL578
 55660      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1352


 55661 8016 0200     		.value	0x2
 55662 8018 3A       		.byte	0x3a
 55663 8019 9F       		.byte	0x9f
 55664 801a 00000000 		.quad	.LVL582
 55664      00000000 
 55665 8022 00000000 		.quad	.LVL603
 55665      00000000 
 55666 802a 0200     		.value	0x2
 55667 802c 3A       		.byte	0x3a
 55668 802d 9F       		.byte	0x9f
 55669 802e 00000000 		.quad	.LVL623
 55669      00000000 
 55670 8036 00000000 		.quad	.LVL626
 55670      00000000 
 55671 803e 0200     		.value	0x2
 55672 8040 3A       		.byte	0x3a
 55673 8041 9F       		.byte	0x9f
 55674 8042 00000000 		.quad	.LVL633
 55674      00000000 
 55675 804a 00000000 		.quad	.LVL646
 55675      00000000 
 55676 8052 0200     		.value	0x2
 55677 8054 3A       		.byte	0x3a
 55678 8055 9F       		.byte	0x9f
 55679 8056 00000000 		.quad	.LVL650
 55679      00000000 
 55680 805e 00000000 		.quad	.LVL657
 55680      00000000 
 55681 8066 0200     		.value	0x2
 55682 8068 3A       		.byte	0x3a
 55683 8069 9F       		.byte	0x9f
 55684 806a 00000000 		.quad	.LVL658
 55684      00000000 
 55685 8072 00000000 		.quad	.LVL661
 55685      00000000 
 55686 807a 0200     		.value	0x2
 55687 807c 3A       		.byte	0x3a
 55688 807d 9F       		.byte	0x9f
 55689 807e 00000000 		.quad	.LVL667
 55689      00000000 
 55690 8086 00000000 		.quad	.LVL670
 55690      00000000 
 55691 808e 0200     		.value	0x2
 55692 8090 3A       		.byte	0x3a
 55693 8091 9F       		.byte	0x9f
 55694 8092 00000000 		.quad	.LVL677
 55694      00000000 
 55695 809a 00000000 		.quad	.LVL678
 55695      00000000 
 55696 80a2 0200     		.value	0x2
 55697 80a4 3A       		.byte	0x3a
 55698 80a5 9F       		.byte	0x9f
 55699 80a6 00000000 		.quad	0
 55699      00000000 
 55700 80ae 00000000 		.quad	0
 55700      00000000 
 55701              	.LLST507:
GAS LISTING /tmp/ccJUMvuF.s 			page 1353


 55702 80b6 00000000 		.quad	.LVL462
 55702      00000000 
 55703 80be 00000000 		.quad	.LVL468
 55703      00000000 
 55704 80c6 0100     		.value	0x1
 55705 80c8 5C       		.byte	0x5c
 55706 80c9 00000000 		.quad	.LVL623
 55706      00000000 
 55707 80d1 00000000 		.quad	.LVL626
 55707      00000000 
 55708 80d9 0100     		.value	0x1
 55709 80db 5C       		.byte	0x5c
 55710 80dc 00000000 		.quad	.LVL677
 55710      00000000 
 55711 80e4 00000000 		.quad	.LVL678
 55711      00000000 
 55712 80ec 0100     		.value	0x1
 55713 80ee 5C       		.byte	0x5c
 55714 80ef 00000000 		.quad	0
 55714      00000000 
 55715 80f7 00000000 		.quad	0
 55715      00000000 
 55716              	.LLST508:
 55717 80ff 00000000 		.quad	.LVL463
 55717      00000000 
 55718 8107 00000000 		.quad	.LVL578
 55718      00000000 
 55719 810f 0200     		.value	0x2
 55720 8111 3A       		.byte	0x3a
 55721 8112 9F       		.byte	0x9f
 55722 8113 00000000 		.quad	.LVL582
 55722      00000000 
 55723 811b 00000000 		.quad	.LVL603
 55723      00000000 
 55724 8123 0200     		.value	0x2
 55725 8125 3A       		.byte	0x3a
 55726 8126 9F       		.byte	0x9f
 55727 8127 00000000 		.quad	.LVL623
 55727      00000000 
 55728 812f 00000000 		.quad	.LVL626
 55728      00000000 
 55729 8137 0200     		.value	0x2
 55730 8139 3A       		.byte	0x3a
 55731 813a 9F       		.byte	0x9f
 55732 813b 00000000 		.quad	.LVL633
 55732      00000000 
 55733 8143 00000000 		.quad	.LVL646
 55733      00000000 
 55734 814b 0200     		.value	0x2
 55735 814d 3A       		.byte	0x3a
 55736 814e 9F       		.byte	0x9f
 55737 814f 00000000 		.quad	.LVL650
 55737      00000000 
 55738 8157 00000000 		.quad	.LVL657
 55738      00000000 
 55739 815f 0200     		.value	0x2
 55740 8161 3A       		.byte	0x3a
GAS LISTING /tmp/ccJUMvuF.s 			page 1354


 55741 8162 9F       		.byte	0x9f
 55742 8163 00000000 		.quad	.LVL658
 55742      00000000 
 55743 816b 00000000 		.quad	.LVL661
 55743      00000000 
 55744 8173 0200     		.value	0x2
 55745 8175 3A       		.byte	0x3a
 55746 8176 9F       		.byte	0x9f
 55747 8177 00000000 		.quad	.LVL667
 55747      00000000 
 55748 817f 00000000 		.quad	.LVL670
 55748      00000000 
 55749 8187 0200     		.value	0x2
 55750 8189 3A       		.byte	0x3a
 55751 818a 9F       		.byte	0x9f
 55752 818b 00000000 		.quad	0
 55752      00000000 
 55753 8193 00000000 		.quad	0
 55753      00000000 
 55754              	.LLST509:
 55755 819b 00000000 		.quad	.LVL463
 55755      00000000 
 55756 81a3 00000000 		.quad	.LVL468
 55756      00000000 
 55757 81ab 0100     		.value	0x1
 55758 81ad 5C       		.byte	0x5c
 55759 81ae 00000000 		.quad	.LVL623
 55759      00000000 
 55760 81b6 00000000 		.quad	.LVL626
 55760      00000000 
 55761 81be 0100     		.value	0x1
 55762 81c0 5C       		.byte	0x5c
 55763 81c1 00000000 		.quad	0
 55763      00000000 
 55764 81c9 00000000 		.quad	0
 55764      00000000 
 55765              	.LLST510:
 55766 81d1 00000000 		.quad	.LVL623
 55766      00000000 
 55767 81d9 00000000 		.quad	.LVL626
 55767      00000000 
 55768 81e1 0200     		.value	0x2
 55769 81e3 3A       		.byte	0x3a
 55770 81e4 9F       		.byte	0x9f
 55771 81e5 00000000 		.quad	0
 55771      00000000 
 55772 81ed 00000000 		.quad	0
 55772      00000000 
 55773              	.LLST511:
 55774 81f5 00000000 		.quad	.LVL623
 55774      00000000 
 55775 81fd 00000000 		.quad	.LVL626
 55775      00000000 
 55776 8205 0100     		.value	0x1
 55777 8207 5C       		.byte	0x5c
 55778 8208 00000000 		.quad	0
 55778      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1355


 55779 8210 00000000 		.quad	0
 55779      00000000 
 55780              	.LLST512:
 55781 8218 00000000 		.quad	.LVL465
 55781      00000000 
 55782 8220 00000000 		.quad	.LVL466-1
 55782      00000000 
 55783 8228 0100     		.value	0x1
 55784 822a 50       		.byte	0x50
 55785 822b 00000000 		.quad	0
 55785      00000000 
 55786 8233 00000000 		.quad	0
 55786      00000000 
 55787              	.LLST513:
 55788 823b 00000000 		.quad	.LVL466
 55788      00000000 
 55789 8243 00000000 		.quad	.LVL578
 55789      00000000 
 55790 824b 0A00     		.value	0xa
 55791 824d 03       		.byte	0x3
 55792 824e 00000000 		.quad	.LC22
 55792      00000000 
 55793 8256 9F       		.byte	0x9f
 55794 8257 00000000 		.quad	.LVL582
 55794      00000000 
 55795 825f 00000000 		.quad	.LVL603
 55795      00000000 
 55796 8267 0A00     		.value	0xa
 55797 8269 03       		.byte	0x3
 55798 826a 00000000 		.quad	.LC22
 55798      00000000 
 55799 8272 9F       		.byte	0x9f
 55800 8273 00000000 		.quad	.LVL633
 55800      00000000 
 55801 827b 00000000 		.quad	.LVL646
 55801      00000000 
 55802 8283 0A00     		.value	0xa
 55803 8285 03       		.byte	0x3
 55804 8286 00000000 		.quad	.LC22
 55804      00000000 
 55805 828e 9F       		.byte	0x9f
 55806 828f 00000000 		.quad	.LVL650
 55806      00000000 
 55807 8297 00000000 		.quad	.LVL657
 55807      00000000 
 55808 829f 0A00     		.value	0xa
 55809 82a1 03       		.byte	0x3
 55810 82a2 00000000 		.quad	.LC22
 55810      00000000 
 55811 82aa 9F       		.byte	0x9f
 55812 82ab 00000000 		.quad	.LVL658
 55812      00000000 
 55813 82b3 00000000 		.quad	.LVL661
 55813      00000000 
 55814 82bb 0A00     		.value	0xa
 55815 82bd 03       		.byte	0x3
 55816 82be 00000000 		.quad	.LC22
GAS LISTING /tmp/ccJUMvuF.s 			page 1356


 55816      00000000 
 55817 82c6 9F       		.byte	0x9f
 55818 82c7 00000000 		.quad	.LVL667
 55818      00000000 
 55819 82cf 00000000 		.quad	.LVL670
 55819      00000000 
 55820 82d7 0A00     		.value	0xa
 55821 82d9 03       		.byte	0x3
 55822 82da 00000000 		.quad	.LC22
 55822      00000000 
 55823 82e2 9F       		.byte	0x9f
 55824 82e3 00000000 		.quad	0
 55824      00000000 
 55825 82eb 00000000 		.quad	0
 55825      00000000 
 55826              	.LLST514:
 55827 82f3 00000000 		.quad	.LVL467
 55827      00000000 
 55828 82fb 00000000 		.quad	.LVL565
 55828      00000000 
 55829 8303 0300     		.value	0x3
 55830 8305 91       		.byte	0x91
 55831 8306 F87D     		.sleb128 -264
 55832 8308 00000000 		.quad	.LVL574
 55832      00000000 
 55833 8310 00000000 		.quad	.LVL578
 55833      00000000 
 55834 8318 0300     		.value	0x3
 55835 831a 91       		.byte	0x91
 55836 831b F87D     		.sleb128 -264
 55837 831d 00000000 		.quad	.LVL582
 55837      00000000 
 55838 8325 00000000 		.quad	.LVL603
 55838      00000000 
 55839 832d 0300     		.value	0x3
 55840 832f 91       		.byte	0x91
 55841 8330 F87D     		.sleb128 -264
 55842 8332 00000000 		.quad	.LVL633
 55842      00000000 
 55843 833a 00000000 		.quad	.LVL646
 55843      00000000 
 55844 8342 0300     		.value	0x3
 55845 8344 91       		.byte	0x91
 55846 8345 F87D     		.sleb128 -264
 55847 8347 00000000 		.quad	.LVL650
 55847      00000000 
 55848 834f 00000000 		.quad	.LVL657
 55848      00000000 
 55849 8357 0300     		.value	0x3
 55850 8359 91       		.byte	0x91
 55851 835a F87D     		.sleb128 -264
 55852 835c 00000000 		.quad	.LVL658
 55852      00000000 
 55853 8364 00000000 		.quad	.LVL661
 55853      00000000 
 55854 836c 0300     		.value	0x3
 55855 836e 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1357


 55856 836f F87D     		.sleb128 -264
 55857 8371 00000000 		.quad	.LVL667
 55857      00000000 
 55858 8379 00000000 		.quad	.LVL670
 55858      00000000 
 55859 8381 0300     		.value	0x3
 55860 8383 91       		.byte	0x91
 55861 8384 F87D     		.sleb128 -264
 55862 8386 00000000 		.quad	0
 55862      00000000 
 55863 838e 00000000 		.quad	0
 55863      00000000 
 55864              	.LLST515:
 55865 8396 00000000 		.quad	.LVL469
 55865      00000000 
 55866 839e 00000000 		.quad	.LVL578
 55866      00000000 
 55867 83a6 0A00     		.value	0xa
 55868 83a8 03       		.byte	0x3
 55869 83a9 00000000 		.quad	.LC27
 55869      00000000 
 55870 83b1 9F       		.byte	0x9f
 55871 83b2 00000000 		.quad	.LVL582
 55871      00000000 
 55872 83ba 00000000 		.quad	.LVL603
 55872      00000000 
 55873 83c2 0A00     		.value	0xa
 55874 83c4 03       		.byte	0x3
 55875 83c5 00000000 		.quad	.LC27
 55875      00000000 
 55876 83cd 9F       		.byte	0x9f
 55877 83ce 00000000 		.quad	.LVL633
 55877      00000000 
 55878 83d6 00000000 		.quad	.LVL646
 55878      00000000 
 55879 83de 0A00     		.value	0xa
 55880 83e0 03       		.byte	0x3
 55881 83e1 00000000 		.quad	.LC27
 55881      00000000 
 55882 83e9 9F       		.byte	0x9f
 55883 83ea 00000000 		.quad	.LVL650
 55883      00000000 
 55884 83f2 00000000 		.quad	.LVL657
 55884      00000000 
 55885 83fa 0A00     		.value	0xa
 55886 83fc 03       		.byte	0x3
 55887 83fd 00000000 		.quad	.LC27
 55887      00000000 
 55888 8405 9F       		.byte	0x9f
 55889 8406 00000000 		.quad	.LVL658
 55889      00000000 
 55890 840e 00000000 		.quad	.LVL661
 55890      00000000 
 55891 8416 0A00     		.value	0xa
 55892 8418 03       		.byte	0x3
 55893 8419 00000000 		.quad	.LC27
 55893      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1358


 55894 8421 9F       		.byte	0x9f
 55895 8422 00000000 		.quad	.LVL667
 55895      00000000 
 55896 842a 00000000 		.quad	.LVL670
 55896      00000000 
 55897 8432 0A00     		.value	0xa
 55898 8434 03       		.byte	0x3
 55899 8435 00000000 		.quad	.LC27
 55899      00000000 
 55900 843d 9F       		.byte	0x9f
 55901 843e 00000000 		.quad	0
 55901      00000000 
 55902 8446 00000000 		.quad	0
 55902      00000000 
 55903              	.LLST516:
 55904 844e 00000000 		.quad	.LVL469
 55904      00000000 
 55905 8456 00000000 		.quad	.LVL470-1
 55905      00000000 
 55906 845e 0100     		.value	0x1
 55907 8460 50       		.byte	0x50
 55908 8461 00000000 		.quad	0
 55908      00000000 
 55909 8469 00000000 		.quad	0
 55909      00000000 
 55910              	.LLST517:
 55911 8471 00000000 		.quad	.LVL470
 55911      00000000 
 55912 8479 00000000 		.quad	.LVL578
 55912      00000000 
 55913 8481 0A00     		.value	0xa
 55914 8483 03       		.byte	0x3
 55915 8484 00000000 		.quad	.LC24
 55915      00000000 
 55916 848c 9F       		.byte	0x9f
 55917 848d 00000000 		.quad	.LVL582
 55917      00000000 
 55918 8495 00000000 		.quad	.LVL603
 55918      00000000 
 55919 849d 0A00     		.value	0xa
 55920 849f 03       		.byte	0x3
 55921 84a0 00000000 		.quad	.LC24
 55921      00000000 
 55922 84a8 9F       		.byte	0x9f
 55923 84a9 00000000 		.quad	.LVL633
 55923      00000000 
 55924 84b1 00000000 		.quad	.LVL646
 55924      00000000 
 55925 84b9 0A00     		.value	0xa
 55926 84bb 03       		.byte	0x3
 55927 84bc 00000000 		.quad	.LC24
 55927      00000000 
 55928 84c4 9F       		.byte	0x9f
 55929 84c5 00000000 		.quad	.LVL650
 55929      00000000 
 55930 84cd 00000000 		.quad	.LVL657
 55930      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1359


 55931 84d5 0A00     		.value	0xa
 55932 84d7 03       		.byte	0x3
 55933 84d8 00000000 		.quad	.LC24
 55933      00000000 
 55934 84e0 9F       		.byte	0x9f
 55935 84e1 00000000 		.quad	.LVL658
 55935      00000000 
 55936 84e9 00000000 		.quad	.LVL661
 55936      00000000 
 55937 84f1 0A00     		.value	0xa
 55938 84f3 03       		.byte	0x3
 55939 84f4 00000000 		.quad	.LC24
 55939      00000000 
 55940 84fc 9F       		.byte	0x9f
 55941 84fd 00000000 		.quad	.LVL667
 55941      00000000 
 55942 8505 00000000 		.quad	.LVL670
 55942      00000000 
 55943 850d 0A00     		.value	0xa
 55944 850f 03       		.byte	0x3
 55945 8510 00000000 		.quad	.LC24
 55945      00000000 
 55946 8518 9F       		.byte	0x9f
 55947 8519 00000000 		.quad	0
 55947      00000000 
 55948 8521 00000000 		.quad	0
 55948      00000000 
 55949              	.LLST518:
 55950 8529 00000000 		.quad	.LVL471
 55950      00000000 
 55951 8531 00000000 		.quad	.LVL565
 55951      00000000 
 55952 8539 0300     		.value	0x3
 55953 853b 91       		.byte	0x91
 55954 853c F87D     		.sleb128 -264
 55955 853e 00000000 		.quad	.LVL574
 55955      00000000 
 55956 8546 00000000 		.quad	.LVL578
 55956      00000000 
 55957 854e 0300     		.value	0x3
 55958 8550 91       		.byte	0x91
 55959 8551 F87D     		.sleb128 -264
 55960 8553 00000000 		.quad	.LVL582
 55960      00000000 
 55961 855b 00000000 		.quad	.LVL603
 55961      00000000 
 55962 8563 0300     		.value	0x3
 55963 8565 91       		.byte	0x91
 55964 8566 F87D     		.sleb128 -264
 55965 8568 00000000 		.quad	.LVL633
 55965      00000000 
 55966 8570 00000000 		.quad	.LVL646
 55966      00000000 
 55967 8578 0300     		.value	0x3
 55968 857a 91       		.byte	0x91
 55969 857b F87D     		.sleb128 -264
 55970 857d 00000000 		.quad	.LVL650
GAS LISTING /tmp/ccJUMvuF.s 			page 1360


 55970      00000000 
 55971 8585 00000000 		.quad	.LVL657
 55971      00000000 
 55972 858d 0300     		.value	0x3
 55973 858f 91       		.byte	0x91
 55974 8590 F87D     		.sleb128 -264
 55975 8592 00000000 		.quad	.LVL658
 55975      00000000 
 55976 859a 00000000 		.quad	.LVL661
 55976      00000000 
 55977 85a2 0300     		.value	0x3
 55978 85a4 91       		.byte	0x91
 55979 85a5 F87D     		.sleb128 -264
 55980 85a7 00000000 		.quad	.LVL667
 55980      00000000 
 55981 85af 00000000 		.quad	.LVL670
 55981      00000000 
 55982 85b7 0300     		.value	0x3
 55983 85b9 91       		.byte	0x91
 55984 85ba F87D     		.sleb128 -264
 55985 85bc 00000000 		.quad	0
 55985      00000000 
 55986 85c4 00000000 		.quad	0
 55986      00000000 
 55987              	.LLST519:
 55988 85cc 00000000 		.quad	.LVL473
 55988      00000000 
 55989 85d4 00000000 		.quad	.LVL578
 55989      00000000 
 55990 85dc 0A00     		.value	0xa
 55991 85de 03       		.byte	0x3
 55992 85df 00000000 		.quad	.LC28
 55992      00000000 
 55993 85e7 9F       		.byte	0x9f
 55994 85e8 00000000 		.quad	.LVL582
 55994      00000000 
 55995 85f0 00000000 		.quad	.LVL603
 55995      00000000 
 55996 85f8 0A00     		.value	0xa
 55997 85fa 03       		.byte	0x3
 55998 85fb 00000000 		.quad	.LC28
 55998      00000000 
 55999 8603 9F       		.byte	0x9f
 56000 8604 00000000 		.quad	.LVL633
 56000      00000000 
 56001 860c 00000000 		.quad	.LVL646
 56001      00000000 
 56002 8614 0A00     		.value	0xa
 56003 8616 03       		.byte	0x3
 56004 8617 00000000 		.quad	.LC28
 56004      00000000 
 56005 861f 9F       		.byte	0x9f
 56006 8620 00000000 		.quad	.LVL650
 56006      00000000 
 56007 8628 00000000 		.quad	.LVL657
 56007      00000000 
 56008 8630 0A00     		.value	0xa
GAS LISTING /tmp/ccJUMvuF.s 			page 1361


 56009 8632 03       		.byte	0x3
 56010 8633 00000000 		.quad	.LC28
 56010      00000000 
 56011 863b 9F       		.byte	0x9f
 56012 863c 00000000 		.quad	.LVL658
 56012      00000000 
 56013 8644 00000000 		.quad	.LVL661
 56013      00000000 
 56014 864c 0A00     		.value	0xa
 56015 864e 03       		.byte	0x3
 56016 864f 00000000 		.quad	.LC28
 56016      00000000 
 56017 8657 9F       		.byte	0x9f
 56018 8658 00000000 		.quad	.LVL667
 56018      00000000 
 56019 8660 00000000 		.quad	.LVL670
 56019      00000000 
 56020 8668 0A00     		.value	0xa
 56021 866a 03       		.byte	0x3
 56022 866b 00000000 		.quad	.LC28
 56022      00000000 
 56023 8673 9F       		.byte	0x9f
 56024 8674 00000000 		.quad	0
 56024      00000000 
 56025 867c 00000000 		.quad	0
 56025      00000000 
 56026              	.LLST520:
 56027 8684 00000000 		.quad	.LVL473
 56027      00000000 
 56028 868c 00000000 		.quad	.LVL474-1
 56028      00000000 
 56029 8694 0100     		.value	0x1
 56030 8696 50       		.byte	0x50
 56031 8697 00000000 		.quad	.LVL474-1
 56031      00000000 
 56032 869f 00000000 		.quad	.LVL486
 56032      00000000 
 56033 86a7 0100     		.value	0x1
 56034 86a9 5C       		.byte	0x5c
 56035 86aa 00000000 		.quad	0
 56035      00000000 
 56036 86b2 00000000 		.quad	0
 56036      00000000 
 56037              	.LLST521:
 56038 86ba 00000000 		.quad	.LVL474
 56038      00000000 
 56039 86c2 00000000 		.quad	.LVL486
 56039      00000000 
 56040 86ca 0100     		.value	0x1
 56041 86cc 5C       		.byte	0x5c
 56042 86cd 00000000 		.quad	0
 56042      00000000 
 56043 86d5 00000000 		.quad	0
 56043      00000000 
 56044              	.LLST522:
 56045 86dd 00000000 		.quad	.LVL475
 56045      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1362


 56046 86e5 00000000 		.quad	.LVL578
 56046      00000000 
 56047 86ed 0200     		.value	0x2
 56048 86ef 35       		.byte	0x35
 56049 86f0 9F       		.byte	0x9f
 56050 86f1 00000000 		.quad	.LVL582
 56050      00000000 
 56051 86f9 00000000 		.quad	.LVL603
 56051      00000000 
 56052 8701 0200     		.value	0x2
 56053 8703 35       		.byte	0x35
 56054 8704 9F       		.byte	0x9f
 56055 8705 00000000 		.quad	.LVL633
 56055      00000000 
 56056 870d 00000000 		.quad	.LVL646
 56056      00000000 
 56057 8715 0200     		.value	0x2
 56058 8717 35       		.byte	0x35
 56059 8718 9F       		.byte	0x9f
 56060 8719 00000000 		.quad	.LVL650
 56060      00000000 
 56061 8721 00000000 		.quad	.LVL657
 56061      00000000 
 56062 8729 0200     		.value	0x2
 56063 872b 35       		.byte	0x35
 56064 872c 9F       		.byte	0x9f
 56065 872d 00000000 		.quad	.LVL658
 56065      00000000 
 56066 8735 00000000 		.quad	.LVL661
 56066      00000000 
 56067 873d 0200     		.value	0x2
 56068 873f 35       		.byte	0x35
 56069 8740 9F       		.byte	0x9f
 56070 8741 00000000 		.quad	.LVL667
 56070      00000000 
 56071 8749 00000000 		.quad	.LVL670
 56071      00000000 
 56072 8751 0200     		.value	0x2
 56073 8753 35       		.byte	0x35
 56074 8754 9F       		.byte	0x9f
 56075 8755 00000000 		.quad	0
 56075      00000000 
 56076 875d 00000000 		.quad	0
 56076      00000000 
 56077              	.LLST523:
 56078 8765 00000000 		.quad	.LVL475
 56078      00000000 
 56079 876d 00000000 		.quad	.LVL578
 56079      00000000 
 56080 8775 0400     		.value	0x4
 56081 8777 91       		.byte	0x91
 56082 8778 907F     		.sleb128 -112
 56083 877a 9F       		.byte	0x9f
 56084 877b 00000000 		.quad	.LVL582
 56084      00000000 
 56085 8783 00000000 		.quad	.LVL603
 56085      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1363


 56086 878b 0400     		.value	0x4
 56087 878d 91       		.byte	0x91
 56088 878e 907F     		.sleb128 -112
 56089 8790 9F       		.byte	0x9f
 56090 8791 00000000 		.quad	.LVL633
 56090      00000000 
 56091 8799 00000000 		.quad	.LVL646
 56091      00000000 
 56092 87a1 0400     		.value	0x4
 56093 87a3 91       		.byte	0x91
 56094 87a4 907F     		.sleb128 -112
 56095 87a6 9F       		.byte	0x9f
 56096 87a7 00000000 		.quad	.LVL650
 56096      00000000 
 56097 87af 00000000 		.quad	.LVL657
 56097      00000000 
 56098 87b7 0400     		.value	0x4
 56099 87b9 91       		.byte	0x91
 56100 87ba 907F     		.sleb128 -112
 56101 87bc 9F       		.byte	0x9f
 56102 87bd 00000000 		.quad	.LVL658
 56102      00000000 
 56103 87c5 00000000 		.quad	.LVL661
 56103      00000000 
 56104 87cd 0400     		.value	0x4
 56105 87cf 91       		.byte	0x91
 56106 87d0 907F     		.sleb128 -112
 56107 87d2 9F       		.byte	0x9f
 56108 87d3 00000000 		.quad	.LVL667
 56108      00000000 
 56109 87db 00000000 		.quad	.LVL669
 56109      00000000 
 56110 87e3 0400     		.value	0x4
 56111 87e5 91       		.byte	0x91
 56112 87e6 907F     		.sleb128 -112
 56113 87e8 9F       		.byte	0x9f
 56114 87e9 00000000 		.quad	.LVL669
 56114      00000000 
 56115 87f1 00000000 		.quad	.LVL670-1
 56115      00000000 
 56116 87f9 0100     		.value	0x1
 56117 87fb 55       		.byte	0x55
 56118 87fc 00000000 		.quad	.LVL670-1
 56118      00000000 
 56119 8804 00000000 		.quad	.LVL670
 56119      00000000 
 56120 880c 0400     		.value	0x4
 56121 880e 91       		.byte	0x91
 56122 880f 907F     		.sleb128 -112
 56123 8811 9F       		.byte	0x9f
 56124 8812 00000000 		.quad	0
 56124      00000000 
 56125 881a 00000000 		.quad	0
 56125      00000000 
 56126              	.LLST525:
 56127 8822 00000000 		.quad	.LVL477
 56127      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1364


 56128 882a 00000000 		.quad	.LVL578
 56128      00000000 
 56129 8832 0200     		.value	0x2
 56130 8834 35       		.byte	0x35
 56131 8835 9F       		.byte	0x9f
 56132 8836 00000000 		.quad	.LVL582
 56132      00000000 
 56133 883e 00000000 		.quad	.LVL603
 56133      00000000 
 56134 8846 0200     		.value	0x2
 56135 8848 35       		.byte	0x35
 56136 8849 9F       		.byte	0x9f
 56137 884a 00000000 		.quad	.LVL633
 56137      00000000 
 56138 8852 00000000 		.quad	.LVL646
 56138      00000000 
 56139 885a 0200     		.value	0x2
 56140 885c 35       		.byte	0x35
 56141 885d 9F       		.byte	0x9f
 56142 885e 00000000 		.quad	.LVL650
 56142      00000000 
 56143 8866 00000000 		.quad	.LVL657
 56143      00000000 
 56144 886e 0200     		.value	0x2
 56145 8870 35       		.byte	0x35
 56146 8871 9F       		.byte	0x9f
 56147 8872 00000000 		.quad	.LVL658
 56147      00000000 
 56148 887a 00000000 		.quad	.LVL661
 56148      00000000 
 56149 8882 0200     		.value	0x2
 56150 8884 35       		.byte	0x35
 56151 8885 9F       		.byte	0x9f
 56152 8886 00000000 		.quad	.LVL667
 56152      00000000 
 56153 888e 00000000 		.quad	.LVL670
 56153      00000000 
 56154 8896 0200     		.value	0x2
 56155 8898 35       		.byte	0x35
 56156 8899 9F       		.byte	0x9f
 56157 889a 00000000 		.quad	0
 56157      00000000 
 56158 88a2 00000000 		.quad	0
 56158      00000000 
 56159              	.LLST526:
 56160 88aa 00000000 		.quad	.LVL477
 56160      00000000 
 56161 88b2 00000000 		.quad	.LVL578
 56161      00000000 
 56162 88ba 0400     		.value	0x4
 56163 88bc 91       		.byte	0x91
 56164 88bd 987F     		.sleb128 -104
 56165 88bf 9F       		.byte	0x9f
 56166 88c0 00000000 		.quad	.LVL582
 56166      00000000 
 56167 88c8 00000000 		.quad	.LVL603
 56167      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1365


 56168 88d0 0400     		.value	0x4
 56169 88d2 91       		.byte	0x91
 56170 88d3 987F     		.sleb128 -104
 56171 88d5 9F       		.byte	0x9f
 56172 88d6 00000000 		.quad	.LVL633
 56172      00000000 
 56173 88de 00000000 		.quad	.LVL646
 56173      00000000 
 56174 88e6 0400     		.value	0x4
 56175 88e8 91       		.byte	0x91
 56176 88e9 987F     		.sleb128 -104
 56177 88eb 9F       		.byte	0x9f
 56178 88ec 00000000 		.quad	.LVL650
 56178      00000000 
 56179 88f4 00000000 		.quad	.LVL657
 56179      00000000 
 56180 88fc 0400     		.value	0x4
 56181 88fe 91       		.byte	0x91
 56182 88ff 987F     		.sleb128 -104
 56183 8901 9F       		.byte	0x9f
 56184 8902 00000000 		.quad	.LVL658
 56184      00000000 
 56185 890a 00000000 		.quad	.LVL661
 56185      00000000 
 56186 8912 0400     		.value	0x4
 56187 8914 91       		.byte	0x91
 56188 8915 987F     		.sleb128 -104
 56189 8917 9F       		.byte	0x9f
 56190 8918 00000000 		.quad	.LVL667
 56190      00000000 
 56191 8920 00000000 		.quad	.LVL670
 56191      00000000 
 56192 8928 0400     		.value	0x4
 56193 892a 91       		.byte	0x91
 56194 892b 987F     		.sleb128 -104
 56195 892d 9F       		.byte	0x9f
 56196 892e 00000000 		.quad	0
 56196      00000000 
 56197 8936 00000000 		.quad	0
 56197      00000000 
 56198              	.LLST530:
 56199 893e 00000000 		.quad	.LVL478
 56199      00000000 
 56200 8946 00000000 		.quad	.LVL578
 56200      00000000 
 56201 894e 0200     		.value	0x2
 56202 8950 35       		.byte	0x35
 56203 8951 9F       		.byte	0x9f
 56204 8952 00000000 		.quad	.LVL582
 56204      00000000 
 56205 895a 00000000 		.quad	.LVL603
 56205      00000000 
 56206 8962 0200     		.value	0x2
 56207 8964 35       		.byte	0x35
 56208 8965 9F       		.byte	0x9f
 56209 8966 00000000 		.quad	.LVL633
 56209      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1366


 56210 896e 00000000 		.quad	.LVL646
 56210      00000000 
 56211 8976 0200     		.value	0x2
 56212 8978 35       		.byte	0x35
 56213 8979 9F       		.byte	0x9f
 56214 897a 00000000 		.quad	.LVL650
 56214      00000000 
 56215 8982 00000000 		.quad	.LVL657
 56215      00000000 
 56216 898a 0200     		.value	0x2
 56217 898c 35       		.byte	0x35
 56218 898d 9F       		.byte	0x9f
 56219 898e 00000000 		.quad	.LVL658
 56219      00000000 
 56220 8996 00000000 		.quad	.LVL661
 56220      00000000 
 56221 899e 0200     		.value	0x2
 56222 89a0 35       		.byte	0x35
 56223 89a1 9F       		.byte	0x9f
 56224 89a2 00000000 		.quad	.LVL667
 56224      00000000 
 56225 89aa 00000000 		.quad	.LVL670
 56225      00000000 
 56226 89b2 0200     		.value	0x2
 56227 89b4 35       		.byte	0x35
 56228 89b5 9F       		.byte	0x9f
 56229 89b6 00000000 		.quad	0
 56229      00000000 
 56230 89be 00000000 		.quad	0
 56230      00000000 
 56231              	.LLST531:
 56232 89c6 00000000 		.quad	.LVL478
 56232      00000000 
 56233 89ce 00000000 		.quad	.LVL578
 56233      00000000 
 56234 89d6 0400     		.value	0x4
 56235 89d8 91       		.byte	0x91
 56236 89d9 987F     		.sleb128 -104
 56237 89db 9F       		.byte	0x9f
 56238 89dc 00000000 		.quad	.LVL582
 56238      00000000 
 56239 89e4 00000000 		.quad	.LVL603
 56239      00000000 
 56240 89ec 0400     		.value	0x4
 56241 89ee 91       		.byte	0x91
 56242 89ef 987F     		.sleb128 -104
 56243 89f1 9F       		.byte	0x9f
 56244 89f2 00000000 		.quad	.LVL633
 56244      00000000 
 56245 89fa 00000000 		.quad	.LVL646
 56245      00000000 
 56246 8a02 0400     		.value	0x4
 56247 8a04 91       		.byte	0x91
 56248 8a05 987F     		.sleb128 -104
 56249 8a07 9F       		.byte	0x9f
 56250 8a08 00000000 		.quad	.LVL650
 56250      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1367


 56251 8a10 00000000 		.quad	.LVL657
 56251      00000000 
 56252 8a18 0400     		.value	0x4
 56253 8a1a 91       		.byte	0x91
 56254 8a1b 987F     		.sleb128 -104
 56255 8a1d 9F       		.byte	0x9f
 56256 8a1e 00000000 		.quad	.LVL658
 56256      00000000 
 56257 8a26 00000000 		.quad	.LVL661
 56257      00000000 
 56258 8a2e 0400     		.value	0x4
 56259 8a30 91       		.byte	0x91
 56260 8a31 987F     		.sleb128 -104
 56261 8a33 9F       		.byte	0x9f
 56262 8a34 00000000 		.quad	.LVL667
 56262      00000000 
 56263 8a3c 00000000 		.quad	.LVL670
 56263      00000000 
 56264 8a44 0400     		.value	0x4
 56265 8a46 91       		.byte	0x91
 56266 8a47 987F     		.sleb128 -104
 56267 8a49 9F       		.byte	0x9f
 56268 8a4a 00000000 		.quad	0
 56268      00000000 
 56269 8a52 00000000 		.quad	0
 56269      00000000 
 56270              	.LLST534:
 56271 8a5a 00000000 		.quad	.LVL478
 56271      00000000 
 56272 8a62 00000000 		.quad	.LVL578
 56272      00000000 
 56273 8a6a 0200     		.value	0x2
 56274 8a6c 30       		.byte	0x30
 56275 8a6d 9F       		.byte	0x9f
 56276 8a6e 00000000 		.quad	.LVL582
 56276      00000000 
 56277 8a76 00000000 		.quad	.LVL603
 56277      00000000 
 56278 8a7e 0200     		.value	0x2
 56279 8a80 30       		.byte	0x30
 56280 8a81 9F       		.byte	0x9f
 56281 8a82 00000000 		.quad	.LVL633
 56281      00000000 
 56282 8a8a 00000000 		.quad	.LVL646
 56282      00000000 
 56283 8a92 0200     		.value	0x2
 56284 8a94 30       		.byte	0x30
 56285 8a95 9F       		.byte	0x9f
 56286 8a96 00000000 		.quad	.LVL650
 56286      00000000 
 56287 8a9e 00000000 		.quad	.LVL657
 56287      00000000 
 56288 8aa6 0200     		.value	0x2
 56289 8aa8 30       		.byte	0x30
 56290 8aa9 9F       		.byte	0x9f
 56291 8aaa 00000000 		.quad	.LVL658
 56291      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1368


 56292 8ab2 00000000 		.quad	.LVL661
 56292      00000000 
 56293 8aba 0200     		.value	0x2
 56294 8abc 30       		.byte	0x30
 56295 8abd 9F       		.byte	0x9f
 56296 8abe 00000000 		.quad	.LVL667
 56296      00000000 
 56297 8ac6 00000000 		.quad	.LVL670
 56297      00000000 
 56298 8ace 0200     		.value	0x2
 56299 8ad0 30       		.byte	0x30
 56300 8ad1 9F       		.byte	0x9f
 56301 8ad2 00000000 		.quad	0
 56301      00000000 
 56302 8ada 00000000 		.quad	0
 56302      00000000 
 56303              	.LLST538:
 56304 8ae2 00000000 		.quad	.LVL480
 56304      00000000 
 56305 8aea 00000000 		.quad	.LVL578
 56305      00000000 
 56306 8af2 0200     		.value	0x2
 56307 8af4 35       		.byte	0x35
 56308 8af5 9F       		.byte	0x9f
 56309 8af6 00000000 		.quad	.LVL582
 56309      00000000 
 56310 8afe 00000000 		.quad	.LVL603
 56310      00000000 
 56311 8b06 0200     		.value	0x2
 56312 8b08 35       		.byte	0x35
 56313 8b09 9F       		.byte	0x9f
 56314 8b0a 00000000 		.quad	.LVL633
 56314      00000000 
 56315 8b12 00000000 		.quad	.LVL646
 56315      00000000 
 56316 8b1a 0200     		.value	0x2
 56317 8b1c 35       		.byte	0x35
 56318 8b1d 9F       		.byte	0x9f
 56319 8b1e 00000000 		.quad	.LVL650
 56319      00000000 
 56320 8b26 00000000 		.quad	.LVL657
 56320      00000000 
 56321 8b2e 0200     		.value	0x2
 56322 8b30 35       		.byte	0x35
 56323 8b31 9F       		.byte	0x9f
 56324 8b32 00000000 		.quad	.LVL658
 56324      00000000 
 56325 8b3a 00000000 		.quad	.LVL661
 56325      00000000 
 56326 8b42 0200     		.value	0x2
 56327 8b44 35       		.byte	0x35
 56328 8b45 9F       		.byte	0x9f
 56329 8b46 00000000 		.quad	.LVL667
 56329      00000000 
 56330 8b4e 00000000 		.quad	.LVL670
 56330      00000000 
 56331 8b56 0200     		.value	0x2
GAS LISTING /tmp/ccJUMvuF.s 			page 1369


 56332 8b58 35       		.byte	0x35
 56333 8b59 9F       		.byte	0x9f
 56334 8b5a 00000000 		.quad	0
 56334      00000000 
 56335 8b62 00000000 		.quad	0
 56335      00000000 
 56336              	.LLST539:
 56337 8b6a 00000000 		.quad	.LVL480
 56337      00000000 
 56338 8b72 00000000 		.quad	.LVL578
 56338      00000000 
 56339 8b7a 0400     		.value	0x4
 56340 8b7c 91       		.byte	0x91
 56341 8b7d 987F     		.sleb128 -104
 56342 8b7f 9F       		.byte	0x9f
 56343 8b80 00000000 		.quad	.LVL582
 56343      00000000 
 56344 8b88 00000000 		.quad	.LVL603
 56344      00000000 
 56345 8b90 0400     		.value	0x4
 56346 8b92 91       		.byte	0x91
 56347 8b93 987F     		.sleb128 -104
 56348 8b95 9F       		.byte	0x9f
 56349 8b96 00000000 		.quad	.LVL633
 56349      00000000 
 56350 8b9e 00000000 		.quad	.LVL646
 56350      00000000 
 56351 8ba6 0400     		.value	0x4
 56352 8ba8 91       		.byte	0x91
 56353 8ba9 987F     		.sleb128 -104
 56354 8bab 9F       		.byte	0x9f
 56355 8bac 00000000 		.quad	.LVL650
 56355      00000000 
 56356 8bb4 00000000 		.quad	.LVL657
 56356      00000000 
 56357 8bbc 0400     		.value	0x4
 56358 8bbe 91       		.byte	0x91
 56359 8bbf 987F     		.sleb128 -104
 56360 8bc1 9F       		.byte	0x9f
 56361 8bc2 00000000 		.quad	.LVL658
 56361      00000000 
 56362 8bca 00000000 		.quad	.LVL661
 56362      00000000 
 56363 8bd2 0400     		.value	0x4
 56364 8bd4 91       		.byte	0x91
 56365 8bd5 987F     		.sleb128 -104
 56366 8bd7 9F       		.byte	0x9f
 56367 8bd8 00000000 		.quad	.LVL667
 56367      00000000 
 56368 8be0 00000000 		.quad	.LVL670
 56368      00000000 
 56369 8be8 0400     		.value	0x4
 56370 8bea 91       		.byte	0x91
 56371 8beb 987F     		.sleb128 -104
 56372 8bed 9F       		.byte	0x9f
 56373 8bee 00000000 		.quad	0
 56373      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1370


 56374 8bf6 00000000 		.quad	0
 56374      00000000 
 56375              	.LLST541:
 56376 8bfe 00000000 		.quad	.LVL480
 56376      00000000 
 56377 8c06 00000000 		.quad	.LVL486
 56377      00000000 
 56378 8c0e 0100     		.value	0x1
 56379 8c10 50       		.byte	0x50
 56380 8c11 00000000 		.quad	0
 56380      00000000 
 56381 8c19 00000000 		.quad	0
 56381      00000000 
 56382              	.LLST542:
 56383 8c21 00000000 		.quad	.LVL480
 56383      00000000 
 56384 8c29 00000000 		.quad	.LVL481
 56384      00000000 
 56385 8c31 0100     		.value	0x1
 56386 8c33 50       		.byte	0x50
 56387 8c34 00000000 		.quad	.LVL481
 56387      00000000 
 56388 8c3c 00000000 		.quad	.LVL482
 56388      00000000 
 56389 8c44 0300     		.value	0x3
 56390 8c46 70       		.byte	0x70
 56391 8c47 08       		.sleb128 8
 56392 8c48 9F       		.byte	0x9f
 56393 8c49 00000000 		.quad	.LVL482
 56393      00000000 
 56394 8c51 00000000 		.quad	.LVL483
 56394      00000000 
 56395 8c59 0300     		.value	0x3
 56396 8c5b 70       		.byte	0x70
 56397 8c5c 10       		.sleb128 16
 56398 8c5d 9F       		.byte	0x9f
 56399 8c5e 00000000 		.quad	.LVL483
 56399      00000000 
 56400 8c66 00000000 		.quad	.LVL484
 56400      00000000 
 56401 8c6e 0300     		.value	0x3
 56402 8c70 70       		.byte	0x70
 56403 8c71 18       		.sleb128 24
 56404 8c72 9F       		.byte	0x9f
 56405 8c73 00000000 		.quad	.LVL484
 56405      00000000 
 56406 8c7b 00000000 		.quad	.LVL486
 56406      00000000 
 56407 8c83 0300     		.value	0x3
 56408 8c85 70       		.byte	0x70
 56409 8c86 28       		.sleb128 40
 56410 8c87 9F       		.byte	0x9f
 56411 8c88 00000000 		.quad	0
 56411      00000000 
 56412 8c90 00000000 		.quad	0
 56412      00000000 
 56413              	.LLST543:
GAS LISTING /tmp/ccJUMvuF.s 			page 1371


 56414 8c98 00000000 		.quad	.LVL480
 56414      00000000 
 56415 8ca0 00000000 		.quad	.LVL481
 56415      00000000 
 56416 8ca8 0200     		.value	0x2
 56417 8caa 35       		.byte	0x35
 56418 8cab 9F       		.byte	0x9f
 56419 8cac 00000000 		.quad	.LVL481
 56419      00000000 
 56420 8cb4 00000000 		.quad	.LVL482
 56420      00000000 
 56421 8cbc 0200     		.value	0x2
 56422 8cbe 34       		.byte	0x34
 56423 8cbf 9F       		.byte	0x9f
 56424 8cc0 00000000 		.quad	.LVL482
 56424      00000000 
 56425 8cc8 00000000 		.quad	.LVL483
 56425      00000000 
 56426 8cd0 0200     		.value	0x2
 56427 8cd2 33       		.byte	0x33
 56428 8cd3 9F       		.byte	0x9f
 56429 8cd4 00000000 		.quad	.LVL483
 56429      00000000 
 56430 8cdc 00000000 		.quad	.LVL484
 56430      00000000 
 56431 8ce4 0200     		.value	0x2
 56432 8ce6 32       		.byte	0x32
 56433 8ce7 9F       		.byte	0x9f
 56434 8ce8 00000000 		.quad	.LVL484
 56434      00000000 
 56435 8cf0 00000000 		.quad	.LVL578
 56435      00000000 
 56436 8cf8 0200     		.value	0x2
 56437 8cfa 30       		.byte	0x30
 56438 8cfb 9F       		.byte	0x9f
 56439 8cfc 00000000 		.quad	.LVL582
 56439      00000000 
 56440 8d04 00000000 		.quad	.LVL603
 56440      00000000 
 56441 8d0c 0200     		.value	0x2
 56442 8d0e 30       		.byte	0x30
 56443 8d0f 9F       		.byte	0x9f
 56444 8d10 00000000 		.quad	.LVL633
 56444      00000000 
 56445 8d18 00000000 		.quad	.LVL646
 56445      00000000 
 56446 8d20 0200     		.value	0x2
 56447 8d22 30       		.byte	0x30
 56448 8d23 9F       		.byte	0x9f
 56449 8d24 00000000 		.quad	.LVL650
 56449      00000000 
 56450 8d2c 00000000 		.quad	.LVL657
 56450      00000000 
 56451 8d34 0200     		.value	0x2
 56452 8d36 30       		.byte	0x30
 56453 8d37 9F       		.byte	0x9f
 56454 8d38 00000000 		.quad	.LVL658
GAS LISTING /tmp/ccJUMvuF.s 			page 1372


 56454      00000000 
 56455 8d40 00000000 		.quad	.LVL661
 56455      00000000 
 56456 8d48 0200     		.value	0x2
 56457 8d4a 30       		.byte	0x30
 56458 8d4b 9F       		.byte	0x9f
 56459 8d4c 00000000 		.quad	.LVL667
 56459      00000000 
 56460 8d54 00000000 		.quad	.LVL670
 56460      00000000 
 56461 8d5c 0200     		.value	0x2
 56462 8d5e 30       		.byte	0x30
 56463 8d5f 9F       		.byte	0x9f
 56464 8d60 00000000 		.quad	0
 56464      00000000 
 56465 8d68 00000000 		.quad	0
 56465      00000000 
 56466              	.LLST544:
 56467 8d70 00000000 		.quad	.LVL487
 56467      00000000 
 56468 8d78 00000000 		.quad	.LVL578
 56468      00000000 
 56469 8d80 0400     		.value	0x4
 56470 8d82 91       		.byte	0x91
 56471 8d83 907F     		.sleb128 -112
 56472 8d85 9F       		.byte	0x9f
 56473 8d86 00000000 		.quad	.LVL582
 56473      00000000 
 56474 8d8e 00000000 		.quad	.LVL603
 56474      00000000 
 56475 8d96 0400     		.value	0x4
 56476 8d98 91       		.byte	0x91
 56477 8d99 907F     		.sleb128 -112
 56478 8d9b 9F       		.byte	0x9f
 56479 8d9c 00000000 		.quad	.LVL633
 56479      00000000 
 56480 8da4 00000000 		.quad	.LVL646
 56480      00000000 
 56481 8dac 0400     		.value	0x4
 56482 8dae 91       		.byte	0x91
 56483 8daf 907F     		.sleb128 -112
 56484 8db1 9F       		.byte	0x9f
 56485 8db2 00000000 		.quad	.LVL650
 56485      00000000 
 56486 8dba 00000000 		.quad	.LVL657
 56486      00000000 
 56487 8dc2 0400     		.value	0x4
 56488 8dc4 91       		.byte	0x91
 56489 8dc5 907F     		.sleb128 -112
 56490 8dc7 9F       		.byte	0x9f
 56491 8dc8 00000000 		.quad	.LVL658
 56491      00000000 
 56492 8dd0 00000000 		.quad	.LVL661
 56492      00000000 
 56493 8dd8 0400     		.value	0x4
 56494 8dda 91       		.byte	0x91
 56495 8ddb 907F     		.sleb128 -112
GAS LISTING /tmp/ccJUMvuF.s 			page 1373


 56496 8ddd 9F       		.byte	0x9f
 56497 8dde 00000000 		.quad	.LVL667
 56497      00000000 
 56498 8de6 00000000 		.quad	.LVL668
 56498      00000000 
 56499 8dee 0400     		.value	0x4
 56500 8df0 91       		.byte	0x91
 56501 8df1 907F     		.sleb128 -112
 56502 8df3 9F       		.byte	0x9f
 56503 8df4 00000000 		.quad	0
 56503      00000000 
 56504 8dfc 00000000 		.quad	0
 56504      00000000 
 56505              	.LLST545:
 56506 8e04 00000000 		.quad	.LVL487
 56506      00000000 
 56507 8e0c 00000000 		.quad	.LVL578
 56507      00000000 
 56508 8e14 0200     		.value	0x2
 56509 8e16 30       		.byte	0x30
 56510 8e17 9F       		.byte	0x9f
 56511 8e18 00000000 		.quad	.LVL582
 56511      00000000 
 56512 8e20 00000000 		.quad	.LVL603
 56512      00000000 
 56513 8e28 0200     		.value	0x2
 56514 8e2a 30       		.byte	0x30
 56515 8e2b 9F       		.byte	0x9f
 56516 8e2c 00000000 		.quad	.LVL633
 56516      00000000 
 56517 8e34 00000000 		.quad	.LVL646
 56517      00000000 
 56518 8e3c 0200     		.value	0x2
 56519 8e3e 30       		.byte	0x30
 56520 8e3f 9F       		.byte	0x9f
 56521 8e40 00000000 		.quad	.LVL650
 56521      00000000 
 56522 8e48 00000000 		.quad	.LVL657
 56522      00000000 
 56523 8e50 0200     		.value	0x2
 56524 8e52 30       		.byte	0x30
 56525 8e53 9F       		.byte	0x9f
 56526 8e54 00000000 		.quad	.LVL658
 56526      00000000 
 56527 8e5c 00000000 		.quad	.LVL661
 56527      00000000 
 56528 8e64 0200     		.value	0x2
 56529 8e66 30       		.byte	0x30
 56530 8e67 9F       		.byte	0x9f
 56531 8e68 00000000 		.quad	.LVL667
 56531      00000000 
 56532 8e70 00000000 		.quad	.LVL668
 56532      00000000 
 56533 8e78 0200     		.value	0x2
 56534 8e7a 30       		.byte	0x30
 56535 8e7b 9F       		.byte	0x9f
 56536 8e7c 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1374


 56536      00000000 
 56537 8e84 00000000 		.quad	0
 56537      00000000 
 56538              	.LLST546:
 56539 8e8c 00000000 		.quad	.LVL487
 56539      00000000 
 56540 8e94 00000000 		.quad	.LVL578
 56540      00000000 
 56541 8e9c 0400     		.value	0x4
 56542 8e9e 91       		.byte	0x91
 56543 8e9f B07F     		.sleb128 -80
 56544 8ea1 9F       		.byte	0x9f
 56545 8ea2 00000000 		.quad	.LVL582
 56545      00000000 
 56546 8eaa 00000000 		.quad	.LVL603
 56546      00000000 
 56547 8eb2 0400     		.value	0x4
 56548 8eb4 91       		.byte	0x91
 56549 8eb5 B07F     		.sleb128 -80
 56550 8eb7 9F       		.byte	0x9f
 56551 8eb8 00000000 		.quad	.LVL633
 56551      00000000 
 56552 8ec0 00000000 		.quad	.LVL646
 56552      00000000 
 56553 8ec8 0400     		.value	0x4
 56554 8eca 91       		.byte	0x91
 56555 8ecb B07F     		.sleb128 -80
 56556 8ecd 9F       		.byte	0x9f
 56557 8ece 00000000 		.quad	.LVL650
 56557      00000000 
 56558 8ed6 00000000 		.quad	.LVL657
 56558      00000000 
 56559 8ede 0400     		.value	0x4
 56560 8ee0 91       		.byte	0x91
 56561 8ee1 B07F     		.sleb128 -80
 56562 8ee3 9F       		.byte	0x9f
 56563 8ee4 00000000 		.quad	.LVL658
 56563      00000000 
 56564 8eec 00000000 		.quad	.LVL661
 56564      00000000 
 56565 8ef4 0400     		.value	0x4
 56566 8ef6 91       		.byte	0x91
 56567 8ef7 B07F     		.sleb128 -80
 56568 8ef9 9F       		.byte	0x9f
 56569 8efa 00000000 		.quad	.LVL667
 56569      00000000 
 56570 8f02 00000000 		.quad	.LVL668
 56570      00000000 
 56571 8f0a 0400     		.value	0x4
 56572 8f0c 91       		.byte	0x91
 56573 8f0d B07F     		.sleb128 -80
 56574 8f0f 9F       		.byte	0x9f
 56575 8f10 00000000 		.quad	0
 56575      00000000 
 56576 8f18 00000000 		.quad	0
 56576      00000000 
 56577              	.LLST547:
GAS LISTING /tmp/ccJUMvuF.s 			page 1375


 56578 8f20 00000000 		.quad	.LVL491
 56578      00000000 
 56579 8f28 00000000 		.quad	.LVL578
 56579      00000000 
 56580 8f30 0400     		.value	0x4
 56581 8f32 91       		.byte	0x91
 56582 8f33 907F     		.sleb128 -112
 56583 8f35 9F       		.byte	0x9f
 56584 8f36 00000000 		.quad	.LVL582
 56584      00000000 
 56585 8f3e 00000000 		.quad	.LVL603
 56585      00000000 
 56586 8f46 0400     		.value	0x4
 56587 8f48 91       		.byte	0x91
 56588 8f49 907F     		.sleb128 -112
 56589 8f4b 9F       		.byte	0x9f
 56590 8f4c 00000000 		.quad	.LVL633
 56590      00000000 
 56591 8f54 00000000 		.quad	.LVL646
 56591      00000000 
 56592 8f5c 0400     		.value	0x4
 56593 8f5e 91       		.byte	0x91
 56594 8f5f 907F     		.sleb128 -112
 56595 8f61 9F       		.byte	0x9f
 56596 8f62 00000000 		.quad	.LVL650
 56596      00000000 
 56597 8f6a 00000000 		.quad	.LVL652
 56597      00000000 
 56598 8f72 0400     		.value	0x4
 56599 8f74 91       		.byte	0x91
 56600 8f75 907F     		.sleb128 -112
 56601 8f77 9F       		.byte	0x9f
 56602 8f78 00000000 		.quad	.LVL653
 56602      00000000 
 56603 8f80 00000000 		.quad	.LVL657
 56603      00000000 
 56604 8f88 0400     		.value	0x4
 56605 8f8a 91       		.byte	0x91
 56606 8f8b 907F     		.sleb128 -112
 56607 8f8d 9F       		.byte	0x9f
 56608 8f8e 00000000 		.quad	.LVL658
 56608      00000000 
 56609 8f96 00000000 		.quad	.LVL661
 56609      00000000 
 56610 8f9e 0400     		.value	0x4
 56611 8fa0 91       		.byte	0x91
 56612 8fa1 907F     		.sleb128 -112
 56613 8fa3 9F       		.byte	0x9f
 56614 8fa4 00000000 		.quad	.LVL667
 56614      00000000 
 56615 8fac 00000000 		.quad	.LVL668
 56615      00000000 
 56616 8fb4 0400     		.value	0x4
 56617 8fb6 91       		.byte	0x91
 56618 8fb7 907F     		.sleb128 -112
 56619 8fb9 9F       		.byte	0x9f
 56620 8fba 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1376


 56620      00000000 
 56621 8fc2 00000000 		.quad	0
 56621      00000000 
 56622              	.LLST548:
 56623 8fca 00000000 		.quad	.LVL501
 56623      00000000 
 56624 8fd2 00000000 		.quad	.LVL502-1
 56624      00000000 
 56625 8fda 0100     		.value	0x1
 56626 8fdc 61       		.byte	0x61
 56627 8fdd 00000000 		.quad	.LVL502-1
 56627      00000000 
 56628 8fe5 00000000 		.quad	.LVL578
 56628      00000000 
 56629 8fed 0300     		.value	0x3
 56630 8fef 91       		.byte	0x91
 56631 8ff0 807E     		.sleb128 -256
 56632 8ff2 00000000 		.quad	.LVL582
 56632      00000000 
 56633 8ffa 00000000 		.quad	.LVL603
 56633      00000000 
 56634 9002 0300     		.value	0x3
 56635 9004 91       		.byte	0x91
 56636 9005 807E     		.sleb128 -256
 56637 9007 00000000 		.quad	.LVL633
 56637      00000000 
 56638 900f 00000000 		.quad	.LVL646
 56638      00000000 
 56639 9017 0300     		.value	0x3
 56640 9019 91       		.byte	0x91
 56641 901a 807E     		.sleb128 -256
 56642 901c 00000000 		.quad	.LVL650
 56642      00000000 
 56643 9024 00000000 		.quad	.LVL652
 56643      00000000 
 56644 902c 0300     		.value	0x3
 56645 902e 91       		.byte	0x91
 56646 902f 807E     		.sleb128 -256
 56647 9031 00000000 		.quad	.LVL656
 56647      00000000 
 56648 9039 00000000 		.quad	.LVL657
 56648      00000000 
 56649 9041 0100     		.value	0x1
 56650 9043 68       		.byte	0x68
 56651 9044 00000000 		.quad	.LVL658
 56651      00000000 
 56652 904c 00000000 		.quad	.LVL661
 56652      00000000 
 56653 9054 0300     		.value	0x3
 56654 9056 91       		.byte	0x91
 56655 9057 807E     		.sleb128 -256
 56656 9059 00000000 		.quad	.LVL667
 56656      00000000 
 56657 9061 00000000 		.quad	.LVL668
 56657      00000000 
 56658 9069 0300     		.value	0x3
 56659 906b 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1377


 56660 906c 807E     		.sleb128 -256
 56661 906e 00000000 		.quad	0
 56661      00000000 
 56662 9076 00000000 		.quad	0
 56662      00000000 
 56663              	.LLST549:
 56664 907e 00000000 		.quad	.LVL527
 56664      00000000 
 56665 9086 00000000 		.quad	.LVL529
 56665      00000000 
 56666 908e 0300     		.value	0x3
 56667 9090 91       		.byte	0x91
 56668 9091 887E     		.sleb128 -248
 56669 9093 00000000 		.quad	0
 56669      00000000 
 56670 909b 00000000 		.quad	0
 56670      00000000 
 56671              	.LLST550:
 56672 90a3 00000000 		.quad	.LVL491
 56672      00000000 
 56673 90ab 00000000 		.quad	.LVL493
 56673      00000000 
 56674 90b3 0A00     		.value	0xa
 56675 90b5 9E       		.byte	0x9e
 56676 90b6 08       		.uleb128 0x8
 56677 90b7 00000000 		.long	0
 56678 90bb 00000000 		.long	0
 56679 90bf 00000000 		.quad	.LVL493
 56679      00000000 
 56680 90c7 00000000 		.quad	.LVL497
 56680      00000000 
 56681 90cf 0100     		.value	0x1
 56682 90d1 61       		.byte	0x61
 56683 90d2 00000000 		.quad	.LVL653
 56683      00000000 
 56684 90da 00000000 		.quad	.LVL657
 56684      00000000 
 56685 90e2 0A00     		.value	0xa
 56686 90e4 9E       		.byte	0x9e
 56687 90e5 08       		.uleb128 0x8
 56688 90e6 00000000 		.long	0
 56689 90ea 00000000 		.long	0
 56690 90ee 00000000 		.quad	0
 56690      00000000 
 56691 90f6 00000000 		.quad	0
 56691      00000000 
 56692              	.LLST551:
 56693 90fe 00000000 		.quad	.LVL491
 56693      00000000 
 56694 9106 00000000 		.quad	.LVL493
 56694      00000000 
 56695 910e 0300     		.value	0x3
 56696 9110 54       		.byte	0x54
 56697 9111 93       		.byte	0x93
 56698 9112 08       		.uleb128 0x8
 56699 9113 00000000 		.quad	.LVL493
 56699      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1378


 56700 911b 00000000 		.quad	.LVL494
 56700      00000000 
 56701 9123 0300     		.value	0x3
 56702 9125 50       		.byte	0x50
 56703 9126 93       		.byte	0x93
 56704 9127 08       		.uleb128 0x8
 56705 9128 00000000 		.quad	.LVL494
 56705      00000000 
 56706 9130 00000000 		.quad	.LVL495
 56706      00000000 
 56707 9138 0500     		.value	0x5
 56708 913a 70       		.byte	0x70
 56709 913b 08       		.sleb128 8
 56710 913c 9F       		.byte	0x9f
 56711 913d 93       		.byte	0x93
 56712 913e 08       		.uleb128 0x8
 56713 913f 00000000 		.quad	.LVL495
 56713      00000000 
 56714 9147 00000000 		.quad	.LVL498
 56714      00000000 
 56715 914f 0300     		.value	0x3
 56716 9151 50       		.byte	0x50
 56717 9152 93       		.byte	0x93
 56718 9153 08       		.uleb128 0x8
 56719 9154 00000000 		.quad	.LVL653
 56719      00000000 
 56720 915c 00000000 		.quad	.LVL655
 56720      00000000 
 56721 9164 0300     		.value	0x3
 56722 9166 54       		.byte	0x54
 56723 9167 93       		.byte	0x93
 56724 9168 08       		.uleb128 0x8
 56725 9169 00000000 		.quad	.LVL655
 56725      00000000 
 56726 9171 00000000 		.quad	.LVL657
 56726      00000000 
 56727 9179 0300     		.value	0x3
 56728 917b 52       		.byte	0x52
 56729 917c 93       		.byte	0x93
 56730 917d 08       		.uleb128 0x8
 56731 917e 00000000 		.quad	0
 56731      00000000 
 56732 9186 00000000 		.quad	0
 56732      00000000 
 56733              	.LLST552:
 56734 918e 00000000 		.quad	.LVL501
 56734      00000000 
 56735 9196 00000000 		.quad	.LVL502-1
 56735      00000000 
 56736 919e 0300     		.value	0x3
 56737 91a0 54       		.byte	0x54
 56738 91a1 93       		.byte	0x93
 56739 91a2 08       		.uleb128 0x8
 56740 91a3 00000000 		.quad	.LVL502-1
 56740      00000000 
 56741 91ab 00000000 		.quad	.LVL504
 56741      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1379


 56742 91b3 0300     		.value	0x3
 56743 91b5 5C       		.byte	0x5c
 56744 91b6 93       		.byte	0x93
 56745 91b7 08       		.uleb128 0x8
 56746 91b8 00000000 		.quad	.LVL504
 56746      00000000 
 56747 91c0 00000000 		.quad	.LVL526
 56747      00000000 
 56748 91c8 0500     		.value	0x5
 56749 91ca 91       		.byte	0x91
 56750 91cb A87E     		.sleb128 -216
 56751 91cd 93       		.byte	0x93
 56752 91ce 08       		.uleb128 0x8
 56753 91cf 00000000 		.quad	.LVL574
 56753      00000000 
 56754 91d7 00000000 		.quad	.LVL578
 56754      00000000 
 56755 91df 0500     		.value	0x5
 56756 91e1 91       		.byte	0x91
 56757 91e2 A87E     		.sleb128 -216
 56758 91e4 93       		.byte	0x93
 56759 91e5 08       		.uleb128 0x8
 56760 91e6 00000000 		.quad	.LVL585
 56760      00000000 
 56761 91ee 00000000 		.quad	.LVL587
 56761      00000000 
 56762 91f6 0300     		.value	0x3
 56763 91f8 5C       		.byte	0x5c
 56764 91f9 93       		.byte	0x93
 56765 91fa 08       		.uleb128 0x8
 56766 91fb 00000000 		.quad	.LVL587
 56766      00000000 
 56767 9203 00000000 		.quad	.LVL598
 56767      00000000 
 56768 920b 0300     		.value	0x3
 56769 920d 53       		.byte	0x53
 56770 920e 93       		.byte	0x93
 56771 920f 08       		.uleb128 0x8
 56772 9210 00000000 		.quad	.LVL599
 56772      00000000 
 56773 9218 00000000 		.quad	.LVL603
 56773      00000000 
 56774 9220 0300     		.value	0x3
 56775 9222 53       		.byte	0x53
 56776 9223 93       		.byte	0x93
 56777 9224 08       		.uleb128 0x8
 56778 9225 00000000 		.quad	.LVL633
 56778      00000000 
 56779 922d 00000000 		.quad	.LVL637
 56779      00000000 
 56780 9235 0500     		.value	0x5
 56781 9237 91       		.byte	0x91
 56782 9238 A87E     		.sleb128 -216
 56783 923a 93       		.byte	0x93
 56784 923b 08       		.uleb128 0x8
 56785 923c 00000000 		.quad	.LVL644
 56785      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1380


 56786 9244 00000000 		.quad	.LVL646
 56786      00000000 
 56787 924c 0500     		.value	0x5
 56788 924e 91       		.byte	0x91
 56789 924f A87E     		.sleb128 -216
 56790 9251 93       		.byte	0x93
 56791 9252 08       		.uleb128 0x8
 56792 9253 00000000 		.quad	.LVL650
 56792      00000000 
 56793 925b 00000000 		.quad	.LVL652
 56793      00000000 
 56794 9263 0300     		.value	0x3
 56795 9265 53       		.byte	0x53
 56796 9266 93       		.byte	0x93
 56797 9267 08       		.uleb128 0x8
 56798 9268 00000000 		.quad	.LVL656
 56798      00000000 
 56799 9270 00000000 		.quad	.LVL657
 56799      00000000 
 56800 9278 0300     		.value	0x3
 56801 927a 52       		.byte	0x52
 56802 927b 93       		.byte	0x93
 56803 927c 08       		.uleb128 0x8
 56804 927d 00000000 		.quad	0
 56804      00000000 
 56805 9285 00000000 		.quad	0
 56805      00000000 
 56806              	.LLST553:
 56807 928d 00000000 		.quad	.LVL501
 56807      00000000 
 56808 9295 00000000 		.quad	.LVL502-1
 56808      00000000 
 56809 929d 0300     		.value	0x3
 56810 929f 59       		.byte	0x59
 56811 92a0 93       		.byte	0x93
 56812 92a1 08       		.uleb128 0x8
 56813 92a2 00000000 		.quad	.LVL502-1
 56813      00000000 
 56814 92aa 00000000 		.quad	.LVL504
 56814      00000000 
 56815 92b2 0500     		.value	0x5
 56816 92b4 91       		.byte	0x91
 56817 92b5 887E     		.sleb128 -248
 56818 92b7 93       		.byte	0x93
 56819 92b8 08       		.uleb128 0x8
 56820 92b9 00000000 		.quad	.LVL585
 56820      00000000 
 56821 92c1 00000000 		.quad	.LVL587
 56821      00000000 
 56822 92c9 0500     		.value	0x5
 56823 92cb 91       		.byte	0x91
 56824 92cc 887E     		.sleb128 -248
 56825 92ce 93       		.byte	0x93
 56826 92cf 08       		.uleb128 0x8
 56827 92d0 00000000 		.quad	.LVL656
 56827      00000000 
 56828 92d8 00000000 		.quad	.LVL657
GAS LISTING /tmp/ccJUMvuF.s 			page 1381


 56828      00000000 
 56829 92e0 0300     		.value	0x3
 56830 92e2 52       		.byte	0x52
 56831 92e3 93       		.byte	0x93
 56832 92e4 08       		.uleb128 0x8
 56833 92e5 00000000 		.quad	0
 56833      00000000 
 56834 92ed 00000000 		.quad	0
 56834      00000000 
 56835              	.LLST556:
 56836 92f5 00000000 		.quad	.LVL502
 56836      00000000 
 56837 92fd 00000000 		.quad	.LVL504
 56837      00000000 
 56838 9305 0500     		.value	0x5
 56839 9307 91       		.byte	0x91
 56840 9308 887E     		.sleb128 -248
 56841 930a 93       		.byte	0x93
 56842 930b 08       		.uleb128 0x8
 56843 930c 00000000 		.quad	.LVL585
 56843      00000000 
 56844 9314 00000000 		.quad	.LVL587
 56844      00000000 
 56845 931c 0500     		.value	0x5
 56846 931e 91       		.byte	0x91
 56847 931f 887E     		.sleb128 -248
 56848 9321 93       		.byte	0x93
 56849 9322 08       		.uleb128 0x8
 56850 9323 00000000 		.quad	0
 56850      00000000 
 56851 932b 00000000 		.quad	0
 56851      00000000 
 56852              	.LLST557:
 56853 9333 00000000 		.quad	.LVL503
 56853      00000000 
 56854 933b 00000000 		.quad	.LVL504
 56854      00000000 
 56855 9343 0A00     		.value	0xa
 56856 9345 91       		.byte	0x91
 56857 9346 887E     		.sleb128 -248
 56858 9348 06       		.byte	0x6
 56859 9349 23       		.byte	0x23
 56860 934a 8001     		.uleb128 0x80
 56861 934c 9F       		.byte	0x9f
 56862 934d 93       		.byte	0x93
 56863 934e 08       		.uleb128 0x8
 56864 934f 00000000 		.quad	0
 56864      00000000 
 56865 9357 00000000 		.quad	0
 56865      00000000 
 56866              	.LLST558:
 56867 935f 00000000 		.quad	.LVL503
 56867      00000000 
 56868 9367 00000000 		.quad	.LVL504
 56868      00000000 
 56869 936f 0500     		.value	0x5
 56870 9371 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1382


 56871 9372 887E     		.sleb128 -248
 56872 9374 93       		.byte	0x93
 56873 9375 08       		.uleb128 0x8
 56874 9376 00000000 		.quad	0
 56874      00000000 
 56875 937e 00000000 		.quad	0
 56875      00000000 
 56876              	.LLST559:
 56877 9386 00000000 		.quad	.LVL503
 56877      00000000 
 56878 938e 00000000 		.quad	.LVL504
 56878      00000000 
 56879 9396 0900     		.value	0x9
 56880 9398 91       		.byte	0x91
 56881 9399 887E     		.sleb128 -248
 56882 939b 06       		.byte	0x6
 56883 939c 23       		.byte	0x23
 56884 939d 08       		.uleb128 0x8
 56885 939e 9F       		.byte	0x9f
 56886 939f 93       		.byte	0x93
 56887 93a0 08       		.uleb128 0x8
 56888 93a1 00000000 		.quad	.LVL504
 56888      00000000 
 56889 93a9 00000000 		.quad	.LVL513
 56889      00000000 
 56890 93b1 0300     		.value	0x3
 56891 93b3 53       		.byte	0x53
 56892 93b4 93       		.byte	0x93
 56893 93b5 08       		.uleb128 0x8
 56894 93b6 00000000 		.quad	.LVL513
 56894      00000000 
 56895 93be 00000000 		.quad	.LVL514
 56895      00000000 
 56896 93c6 0500     		.value	0x5
 56897 93c8 73       		.byte	0x73
 56898 93c9 08       		.sleb128 8
 56899 93ca 9F       		.byte	0x9f
 56900 93cb 93       		.byte	0x93
 56901 93cc 08       		.uleb128 0x8
 56902 93cd 00000000 		.quad	.LVL514
 56902      00000000 
 56903 93d5 00000000 		.quad	.LVL515
 56903      00000000 
 56904 93dd 0300     		.value	0x3
 56905 93df 53       		.byte	0x53
 56906 93e0 93       		.byte	0x93
 56907 93e1 08       		.uleb128 0x8
 56908 93e2 00000000 		.quad	.LVL515
 56908      00000000 
 56909 93ea 00000000 		.quad	.LVL526
 56909      00000000 
 56910 93f2 0300     		.value	0x3
 56911 93f4 58       		.byte	0x58
 56912 93f5 93       		.byte	0x93
 56913 93f6 08       		.uleb128 0x8
 56914 93f7 00000000 		.quad	.LVL574
 56914      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1383


 56915 93ff 00000000 		.quad	.LVL578
 56915      00000000 
 56916 9407 0300     		.value	0x3
 56917 9409 53       		.byte	0x53
 56918 940a 93       		.byte	0x93
 56919 940b 08       		.uleb128 0x8
 56920 940c 00000000 		.quad	.LVL633
 56920      00000000 
 56921 9414 00000000 		.quad	.LVL637
 56921      00000000 
 56922 941c 0300     		.value	0x3
 56923 941e 58       		.byte	0x58
 56924 941f 93       		.byte	0x93
 56925 9420 08       		.uleb128 0x8
 56926 9421 00000000 		.quad	.LVL644
 56926      00000000 
 56927 9429 00000000 		.quad	.LVL646
 56927      00000000 
 56928 9431 0300     		.value	0x3
 56929 9433 53       		.byte	0x53
 56930 9434 93       		.byte	0x93
 56931 9435 08       		.uleb128 0x8
 56932 9436 00000000 		.quad	0
 56932      00000000 
 56933 943e 00000000 		.quad	0
 56933      00000000 
 56934              	.LLST560:
 56935 9446 00000000 		.quad	.LVL503
 56935      00000000 
 56936 944e 00000000 		.quad	.LVL526
 56936      00000000 
 56937 9456 0200     		.value	0x2
 56938 9458 31       		.byte	0x31
 56939 9459 9F       		.byte	0x9f
 56940 945a 00000000 		.quad	.LVL574
 56940      00000000 
 56941 9462 00000000 		.quad	.LVL578
 56941      00000000 
 56942 946a 0200     		.value	0x2
 56943 946c 31       		.byte	0x31
 56944 946d 9F       		.byte	0x9f
 56945 946e 00000000 		.quad	.LVL633
 56945      00000000 
 56946 9476 00000000 		.quad	.LVL637
 56946      00000000 
 56947 947e 0200     		.value	0x2
 56948 9480 31       		.byte	0x31
 56949 9481 9F       		.byte	0x9f
 56950 9482 00000000 		.quad	.LVL644
 56950      00000000 
 56951 948a 00000000 		.quad	.LVL646
 56951      00000000 
 56952 9492 0200     		.value	0x2
 56953 9494 31       		.byte	0x31
 56954 9495 9F       		.byte	0x9f
 56955 9496 00000000 		.quad	0
 56955      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1384


 56956 949e 00000000 		.quad	0
 56956      00000000 
 56957              	.LLST561:
 56958 94a6 00000000 		.quad	.LVL503
 56958      00000000 
 56959 94ae 00000000 		.quad	.LVL526
 56959      00000000 
 56960 94b6 0600     		.value	0x6
 56961 94b8 F2       		.byte	0xf2
 56962 94b9 00000000 		.long	.Ldebug_info0+86933
 56963 94bd 00       		.sleb128 0
 56964 94be 00000000 		.quad	.LVL574
 56964      00000000 
 56965 94c6 00000000 		.quad	.LVL578
 56965      00000000 
 56966 94ce 0600     		.value	0x6
 56967 94d0 F2       		.byte	0xf2
 56968 94d1 00000000 		.long	.Ldebug_info0+86933
 56969 94d5 00       		.sleb128 0
 56970 94d6 00000000 		.quad	.LVL633
 56970      00000000 
 56971 94de 00000000 		.quad	.LVL637
 56971      00000000 
 56972 94e6 0600     		.value	0x6
 56973 94e8 F2       		.byte	0xf2
 56974 94e9 00000000 		.long	.Ldebug_info0+86933
 56975 94ed 00       		.sleb128 0
 56976 94ee 00000000 		.quad	.LVL644
 56976      00000000 
 56977 94f6 00000000 		.quad	.LVL646
 56977      00000000 
 56978 94fe 0600     		.value	0x6
 56979 9500 F2       		.byte	0xf2
 56980 9501 00000000 		.long	.Ldebug_info0+86933
 56981 9505 00       		.sleb128 0
 56982 9506 00000000 		.quad	0
 56982      00000000 
 56983 950e 00000000 		.quad	0
 56983      00000000 
 56984              	.LLST562:
 56985 9516 00000000 		.quad	.LVL504
 56985      00000000 
 56986 951e 00000000 		.quad	.LVL526
 56986      00000000 
 56987 9526 0600     		.value	0x6
 56988 9528 F2       		.byte	0xf2
 56989 9529 00000000 		.long	.Ldebug_info0+86917
 56990 952d 00       		.sleb128 0
 56991 952e 00000000 		.quad	.LVL574
 56991      00000000 
 56992 9536 00000000 		.quad	.LVL578
 56992      00000000 
 56993 953e 0600     		.value	0x6
 56994 9540 F2       		.byte	0xf2
 56995 9541 00000000 		.long	.Ldebug_info0+86917
 56996 9545 00       		.sleb128 0
 56997 9546 00000000 		.quad	.LVL633
GAS LISTING /tmp/ccJUMvuF.s 			page 1385


 56997      00000000 
 56998 954e 00000000 		.quad	.LVL637
 56998      00000000 
 56999 9556 0600     		.value	0x6
 57000 9558 F2       		.byte	0xf2
 57001 9559 00000000 		.long	.Ldebug_info0+86917
 57002 955d 00       		.sleb128 0
 57003 955e 00000000 		.quad	.LVL644
 57003      00000000 
 57004 9566 00000000 		.quad	.LVL646
 57004      00000000 
 57005 956e 0600     		.value	0x6
 57006 9570 F2       		.byte	0xf2
 57007 9571 00000000 		.long	.Ldebug_info0+86917
 57008 9575 00       		.sleb128 0
 57009 9576 00000000 		.quad	0
 57009      00000000 
 57010 957e 00000000 		.quad	0
 57010      00000000 
 57011              	.LLST563:
 57012 9586 00000000 		.quad	.LVL506
 57012      00000000 
 57013 958e 00000000 		.quad	.LVL508
 57013      00000000 
 57014 9596 0300     		.value	0x3
 57015 9598 53       		.byte	0x53
 57016 9599 93       		.byte	0x93
 57017 959a 08       		.uleb128 0x8
 57018 959b 00000000 		.quad	.LVL508
 57018      00000000 
 57019 95a3 00000000 		.quad	.LVL509
 57019      00000000 
 57020 95ab 0300     		.value	0x3
 57021 95ad 50       		.byte	0x50
 57022 95ae 93       		.byte	0x93
 57023 95af 08       		.uleb128 0x8
 57024 95b0 00000000 		.quad	.LVL509
 57024      00000000 
 57025 95b8 00000000 		.quad	.LVL510
 57025      00000000 
 57026 95c0 0500     		.value	0x5
 57027 95c2 70       		.byte	0x70
 57028 95c3 08       		.sleb128 8
 57029 95c4 9F       		.byte	0x9f
 57030 95c5 93       		.byte	0x93
 57031 95c6 08       		.uleb128 0x8
 57032 95c7 00000000 		.quad	.LVL510
 57032      00000000 
 57033 95cf 00000000 		.quad	.LVL512
 57033      00000000 
 57034 95d7 0300     		.value	0x3
 57035 95d9 50       		.byte	0x50
 57036 95da 93       		.byte	0x93
 57037 95db 08       		.uleb128 0x8
 57038 95dc 00000000 		.quad	.LVL644
 57038      00000000 
 57039 95e4 00000000 		.quad	.LVL646
GAS LISTING /tmp/ccJUMvuF.s 			page 1386


 57039      00000000 
 57040 95ec 0300     		.value	0x3
 57041 95ee 53       		.byte	0x53
 57042 95ef 93       		.byte	0x93
 57043 95f0 08       		.uleb128 0x8
 57044 95f1 00000000 		.quad	0
 57044      00000000 
 57045 95f9 00000000 		.quad	0
 57045      00000000 
 57046              	.LLST564:
 57047 9601 00000000 		.quad	.LVL506
 57047      00000000 
 57048 9609 00000000 		.quad	.LVL513
 57048      00000000 
 57049 9611 0100     		.value	0x1
 57050 9613 62       		.byte	0x62
 57051 9614 00000000 		.quad	.LVL644
 57051      00000000 
 57052 961c 00000000 		.quad	.LVL646
 57052      00000000 
 57053 9624 0100     		.value	0x1
 57054 9626 62       		.byte	0x62
 57055 9627 00000000 		.quad	0
 57055      00000000 
 57056 962f 00000000 		.quad	0
 57056      00000000 
 57057              	.LLST565:
 57058 9637 00000000 		.quad	.LVL507
 57058      00000000 
 57059 963f 00000000 		.quad	.LVL513
 57059      00000000 
 57060 9647 0600     		.value	0x6
 57061 9649 F2       		.byte	0xf2
 57062 964a 00000000 		.long	.Ldebug_info0+87102
 57063 964e 00       		.sleb128 0
 57064 964f 00000000 		.quad	.LVL644
 57064      00000000 
 57065 9657 00000000 		.quad	.LVL646
 57065      00000000 
 57066 965f 0600     		.value	0x6
 57067 9661 F2       		.byte	0xf2
 57068 9662 00000000 		.long	.Ldebug_info0+87102
 57069 9666 00       		.sleb128 0
 57070 9667 00000000 		.quad	0
 57070      00000000 
 57071 966f 00000000 		.quad	0
 57071      00000000 
 57072              	.LLST566:
 57073 9677 00000000 		.quad	.LVL508
 57073      00000000 
 57074 967f 00000000 		.quad	.LVL509
 57074      00000000 
 57075 9687 0600     		.value	0x6
 57076 9689 F2       		.byte	0xf2
 57077 968a 00000000 		.long	.Ldebug_info0+87112
 57078 968e 00       		.sleb128 0
 57079 968f 00000000 		.quad	.LVL510
GAS LISTING /tmp/ccJUMvuF.s 			page 1387


 57079      00000000 
 57080 9697 00000000 		.quad	.LVL512
 57080      00000000 
 57081 969f 0600     		.value	0x6
 57082 96a1 F2       		.byte	0xf2
 57083 96a2 00000000 		.long	.Ldebug_info0+87112
 57084 96a6 00       		.sleb128 0
 57085 96a7 00000000 		.quad	0
 57085      00000000 
 57086 96af 00000000 		.quad	0
 57086      00000000 
 57087              	.LLST567:
 57088 96b7 00000000 		.quad	.LVL574
 57088      00000000 
 57089 96bf 00000000 		.quad	.LVL576-1
 57089      00000000 
 57090 96c7 0100     		.value	0x1
 57091 96c9 62       		.byte	0x62
 57092 96ca 00000000 		.quad	.LVL576-1
 57092      00000000 
 57093 96d2 00000000 		.quad	.LVL577
 57093      00000000 
 57094 96da 0300     		.value	0x3
 57095 96dc 91       		.byte	0x91
 57096 96dd 887E     		.sleb128 -248
 57097 96df 00000000 		.quad	0
 57097      00000000 
 57098 96e7 00000000 		.quad	0
 57098      00000000 
 57099              	.LLST568:
 57100 96ef 00000000 		.quad	.LVL574
 57100      00000000 
 57101 96f7 00000000 		.quad	.LVL578
 57101      00000000 
 57102 96ff 0300     		.value	0x3
 57103 9701 73       		.byte	0x73
 57104 9702 08       		.sleb128 8
 57105 9703 9F       		.byte	0x9f
 57106 9704 00000000 		.quad	0
 57106      00000000 
 57107 970c 00000000 		.quad	0
 57107      00000000 
 57108              	.LLST569:
 57109 9714 00000000 		.quad	.LVL574
 57109      00000000 
 57110 971c 00000000 		.quad	.LVL578
 57110      00000000 
 57111 9724 0100     		.value	0x1
 57112 9726 53       		.byte	0x53
 57113 9727 00000000 		.quad	0
 57113      00000000 
 57114 972f 00000000 		.quad	0
 57114      00000000 
 57115              	.LLST570:
 57116 9737 00000000 		.quad	.LVL574
 57116      00000000 
 57117 973f 00000000 		.quad	.LVL578
GAS LISTING /tmp/ccJUMvuF.s 			page 1388


 57117      00000000 
 57118 9747 0200     		.value	0x2
 57119 9749 31       		.byte	0x31
 57120 974a 9F       		.byte	0x9f
 57121 974b 00000000 		.quad	0
 57121      00000000 
 57122 9753 00000000 		.quad	0
 57122      00000000 
 57123              	.LLST573:
 57124 975b 00000000 		.quad	.LVL575
 57124      00000000 
 57125 9763 00000000 		.quad	.LVL576-1
 57125      00000000 
 57126 976b 0500     		.value	0x5
 57127 976d 71       		.byte	0x71
 57128 976e 00       		.sleb128 0
 57129 976f 38       		.byte	0x38
 57130 9770 1B       		.byte	0x1b
 57131 9771 9F       		.byte	0x9f
 57132 9772 00000000 		.quad	.LVL576-1
 57132      00000000 
 57133 977a 00000000 		.quad	.LVL578
 57133      00000000 
 57134 9782 0800     		.value	0x8
 57135 9784 73       		.byte	0x73
 57136 9785 00       		.sleb128 0
 57137 9786 76       		.byte	0x76
 57138 9787 00       		.sleb128 0
 57139 9788 1C       		.byte	0x1c
 57140 9789 38       		.byte	0x38
 57141 978a 1B       		.byte	0x1b
 57142 978b 9F       		.byte	0x9f
 57143 978c 00000000 		.quad	0
 57143      00000000 
 57144 9794 00000000 		.quad	0
 57144      00000000 
 57145              	.LLST574:
 57146 979c 00000000 		.quad	.LVL516
 57146      00000000 
 57147 97a4 00000000 		.quad	.LVL519
 57147      00000000 
 57148 97ac 0300     		.value	0x3
 57149 97ae 5E       		.byte	0x5e
 57150 97af 93       		.byte	0x93
 57151 97b0 08       		.uleb128 0x8
 57152 97b1 00000000 		.quad	.LVL519
 57152      00000000 
 57153 97b9 00000000 		.quad	.LVL520
 57153      00000000 
 57154 97c1 0300     		.value	0x3
 57155 97c3 50       		.byte	0x50
 57156 97c4 93       		.byte	0x93
 57157 97c5 08       		.uleb128 0x8
 57158 97c6 00000000 		.quad	.LVL520
 57158      00000000 
 57159 97ce 00000000 		.quad	.LVL521
 57159      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1389


 57160 97d6 0500     		.value	0x5
 57161 97d8 70       		.byte	0x70
 57162 97d9 08       		.sleb128 8
 57163 97da 9F       		.byte	0x9f
 57164 97db 93       		.byte	0x93
 57165 97dc 08       		.uleb128 0x8
 57166 97dd 00000000 		.quad	.LVL521
 57166      00000000 
 57167 97e5 00000000 		.quad	.LVL526
 57167      00000000 
 57168 97ed 0300     		.value	0x3
 57169 97ef 50       		.byte	0x50
 57170 97f0 93       		.byte	0x93
 57171 97f1 08       		.uleb128 0x8
 57172 97f2 00000000 		.quad	.LVL633
 57172      00000000 
 57173 97fa 00000000 		.quad	.LVL635
 57173      00000000 
 57174 9802 0300     		.value	0x3
 57175 9804 5E       		.byte	0x5e
 57176 9805 93       		.byte	0x93
 57177 9806 08       		.uleb128 0x8
 57178 9807 00000000 		.quad	.LVL635
 57178      00000000 
 57179 980f 00000000 		.quad	.LVL637
 57179      00000000 
 57180 9817 0300     		.value	0x3
 57181 9819 50       		.byte	0x50
 57182 981a 93       		.byte	0x93
 57183 981b 08       		.uleb128 0x8
 57184 981c 00000000 		.quad	0
 57184      00000000 
 57185 9824 00000000 		.quad	0
 57185      00000000 
 57186              	.LLST575:
 57187 982c 00000000 		.quad	.LVL517
 57187      00000000 
 57188 9834 00000000 		.quad	.LVL526
 57188      00000000 
 57189 983c 0100     		.value	0x1
 57190 983e 62       		.byte	0x62
 57191 983f 00000000 		.quad	.LVL633
 57191      00000000 
 57192 9847 00000000 		.quad	.LVL637
 57192      00000000 
 57193 984f 0100     		.value	0x1
 57194 9851 62       		.byte	0x62
 57195 9852 00000000 		.quad	0
 57195      00000000 
 57196 985a 00000000 		.quad	0
 57196      00000000 
 57197              	.LLST576:
 57198 9862 00000000 		.quad	.LVL518
 57198      00000000 
 57199 986a 00000000 		.quad	.LVL526
 57199      00000000 
 57200 9872 0600     		.value	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1390


 57201 9874 F2       		.byte	0xf2
 57202 9875 00000000 		.long	.Ldebug_info0+87610
 57203 9879 00       		.sleb128 0
 57204 987a 00000000 		.quad	.LVL633
 57204      00000000 
 57205 9882 00000000 		.quad	.LVL637
 57205      00000000 
 57206 988a 0600     		.value	0x6
 57207 988c F2       		.byte	0xf2
 57208 988d 00000000 		.long	.Ldebug_info0+87610
 57209 9891 00       		.sleb128 0
 57210 9892 00000000 		.quad	0
 57210      00000000 
 57211 989a 00000000 		.quad	0
 57211      00000000 
 57212              	.LLST577:
 57213 98a2 00000000 		.quad	.LVL519
 57213      00000000 
 57214 98aa 00000000 		.quad	.LVL520
 57214      00000000 
 57215 98b2 0600     		.value	0x6
 57216 98b4 F2       		.byte	0xf2
 57217 98b5 00000000 		.long	.Ldebug_info0+87620
 57218 98b9 00       		.sleb128 0
 57219 98ba 00000000 		.quad	.LVL521
 57219      00000000 
 57220 98c2 00000000 		.quad	.LVL526
 57220      00000000 
 57221 98ca 0600     		.value	0x6
 57222 98cc F2       		.byte	0xf2
 57223 98cd 00000000 		.long	.Ldebug_info0+87620
 57224 98d1 00       		.sleb128 0
 57225 98d2 00000000 		.quad	0
 57225      00000000 
 57226 98da 00000000 		.quad	0
 57226      00000000 
 57227              	.LLST578:
 57228 98e2 00000000 		.quad	.LVL585
 57228      00000000 
 57229 98ea 00000000 		.quad	.LVL587
 57229      00000000 
 57230 98f2 0300     		.value	0x3
 57231 98f4 5C       		.byte	0x5c
 57232 98f5 93       		.byte	0x93
 57233 98f6 08       		.uleb128 0x8
 57234 98f7 00000000 		.quad	.LVL587
 57234      00000000 
 57235 98ff 00000000 		.quad	.LVL598
 57235      00000000 
 57236 9907 0300     		.value	0x3
 57237 9909 53       		.byte	0x53
 57238 990a 93       		.byte	0x93
 57239 990b 08       		.uleb128 0x8
 57240 990c 00000000 		.quad	.LVL599
 57240      00000000 
 57241 9914 00000000 		.quad	.LVL603
 57241      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1391


 57242 991c 0300     		.value	0x3
 57243 991e 53       		.byte	0x53
 57244 991f 93       		.byte	0x93
 57245 9920 08       		.uleb128 0x8
 57246 9921 00000000 		.quad	.LVL650
 57246      00000000 
 57247 9929 00000000 		.quad	.LVL652
 57247      00000000 
 57248 9931 0300     		.value	0x3
 57249 9933 53       		.byte	0x53
 57250 9934 93       		.byte	0x93
 57251 9935 08       		.uleb128 0x8
 57252 9936 00000000 		.quad	0
 57252      00000000 
 57253 993e 00000000 		.quad	0
 57253      00000000 
 57254              	.LLST579:
 57255 9946 00000000 		.quad	.LVL585
 57255      00000000 
 57256 994e 00000000 		.quad	.LVL587
 57256      00000000 
 57257 9956 0500     		.value	0x5
 57258 9958 91       		.byte	0x91
 57259 9959 887E     		.sleb128 -248
 57260 995b 93       		.byte	0x93
 57261 995c 08       		.uleb128 0x8
 57262 995d 00000000 		.quad	0
 57262      00000000 
 57263 9965 00000000 		.quad	0
 57263      00000000 
 57264              	.LLST580:
 57265 996d 00000000 		.quad	.LVL586
 57265      00000000 
 57266 9975 00000000 		.quad	.LVL587
 57266      00000000 
 57267 997d 0300     		.value	0x3
 57268 997f 5E       		.byte	0x5e
 57269 9980 93       		.byte	0x93
 57270 9981 08       		.uleb128 0x8
 57271 9982 00000000 		.quad	.LVL587
 57271      00000000 
 57272 998a 00000000 		.quad	.LVL596
 57272      00000000 
 57273 9992 0300     		.value	0x3
 57274 9994 5E       		.byte	0x5e
 57275 9995 93       		.byte	0x93
 57276 9996 08       		.uleb128 0x8
 57277 9997 00000000 		.quad	.LVL596
 57277      00000000 
 57278 999f 00000000 		.quad	.LVL597
 57278      00000000 
 57279 99a7 0500     		.value	0x5
 57280 99a9 7E       		.byte	0x7e
 57281 99aa 08       		.sleb128 8
 57282 99ab 9F       		.byte	0x9f
 57283 99ac 93       		.byte	0x93
 57284 99ad 08       		.uleb128 0x8
GAS LISTING /tmp/ccJUMvuF.s 			page 1392


 57285 99ae 00000000 		.quad	.LVL597
 57285      00000000 
 57286 99b6 00000000 		.quad	.LVL603
 57286      00000000 
 57287 99be 0300     		.value	0x3
 57288 99c0 5E       		.byte	0x5e
 57289 99c1 93       		.byte	0x93
 57290 99c2 08       		.uleb128 0x8
 57291 99c3 00000000 		.quad	.LVL650
 57291      00000000 
 57292 99cb 00000000 		.quad	.LVL652
 57292      00000000 
 57293 99d3 0300     		.value	0x3
 57294 99d5 5E       		.byte	0x5e
 57295 99d6 93       		.byte	0x93
 57296 99d7 08       		.uleb128 0x8
 57297 99d8 00000000 		.quad	0
 57297      00000000 
 57298 99e0 00000000 		.quad	0
 57298      00000000 
 57299              	.LLST581:
 57300 99e8 00000000 		.quad	.LVL585
 57300      00000000 
 57301 99f0 00000000 		.quad	.LVL603
 57301      00000000 
 57302 99f8 0200     		.value	0x2
 57303 99fa 31       		.byte	0x31
 57304 99fb 9F       		.byte	0x9f
 57305 99fc 00000000 		.quad	.LVL650
 57305      00000000 
 57306 9a04 00000000 		.quad	.LVL652
 57306      00000000 
 57307 9a0c 0200     		.value	0x2
 57308 9a0e 31       		.byte	0x31
 57309 9a0f 9F       		.byte	0x9f
 57310 9a10 00000000 		.quad	0
 57310      00000000 
 57311 9a18 00000000 		.quad	0
 57311      00000000 
 57312              	.LLST582:
 57313 9a20 00000000 		.quad	.LVL585
 57313      00000000 
 57314 9a28 00000000 		.quad	.LVL603
 57314      00000000 
 57315 9a30 0600     		.value	0x6
 57316 9a32 F2       		.byte	0xf2
 57317 9a33 00000000 		.long	.Ldebug_info0+87751
 57318 9a37 00       		.sleb128 0
 57319 9a38 00000000 		.quad	.LVL650
 57319      00000000 
 57320 9a40 00000000 		.quad	.LVL652
 57320      00000000 
 57321 9a48 0600     		.value	0x6
 57322 9a4a F2       		.byte	0xf2
 57323 9a4b 00000000 		.long	.Ldebug_info0+87751
 57324 9a4f 00       		.sleb128 0
 57325 9a50 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1393


 57325      00000000 
 57326 9a58 00000000 		.quad	0
 57326      00000000 
 57327              	.LLST583:
 57328 9a60 00000000 		.quad	.LVL587
 57328      00000000 
 57329 9a68 00000000 		.quad	.LVL603
 57329      00000000 
 57330 9a70 0600     		.value	0x6
 57331 9a72 F2       		.byte	0xf2
 57332 9a73 00000000 		.long	.Ldebug_info0+87735
 57333 9a77 00       		.sleb128 0
 57334 9a78 00000000 		.quad	.LVL650
 57334      00000000 
 57335 9a80 00000000 		.quad	.LVL652
 57335      00000000 
 57336 9a88 0600     		.value	0x6
 57337 9a8a F2       		.byte	0xf2
 57338 9a8b 00000000 		.long	.Ldebug_info0+87735
 57339 9a8f 00       		.sleb128 0
 57340 9a90 00000000 		.quad	0
 57340      00000000 
 57341 9a98 00000000 		.quad	0
 57341      00000000 
 57342              	.LLST584:
 57343 9aa0 00000000 		.quad	.LVL589
 57343      00000000 
 57344 9aa8 00000000 		.quad	.LVL591
 57344      00000000 
 57345 9ab0 0300     		.value	0x3
 57346 9ab2 5E       		.byte	0x5e
 57347 9ab3 93       		.byte	0x93
 57348 9ab4 08       		.uleb128 0x8
 57349 9ab5 00000000 		.quad	.LVL591
 57349      00000000 
 57350 9abd 00000000 		.quad	.LVL592
 57350      00000000 
 57351 9ac5 0300     		.value	0x3
 57352 9ac7 50       		.byte	0x50
 57353 9ac8 93       		.byte	0x93
 57354 9ac9 08       		.uleb128 0x8
 57355 9aca 00000000 		.quad	.LVL592
 57355      00000000 
 57356 9ad2 00000000 		.quad	.LVL593
 57356      00000000 
 57357 9ada 0500     		.value	0x5
 57358 9adc 70       		.byte	0x70
 57359 9add 08       		.sleb128 8
 57360 9ade 9F       		.byte	0x9f
 57361 9adf 93       		.byte	0x93
 57362 9ae0 08       		.uleb128 0x8
 57363 9ae1 00000000 		.quad	.LVL593
 57363      00000000 
 57364 9ae9 00000000 		.quad	.LVL595
 57364      00000000 
 57365 9af1 0300     		.value	0x3
 57366 9af3 50       		.byte	0x50
GAS LISTING /tmp/ccJUMvuF.s 			page 1394


 57367 9af4 93       		.byte	0x93
 57368 9af5 08       		.uleb128 0x8
 57369 9af6 00000000 		.quad	.LVL650
 57369      00000000 
 57370 9afe 00000000 		.quad	.LVL652
 57370      00000000 
 57371 9b06 0300     		.value	0x3
 57372 9b08 5E       		.byte	0x5e
 57373 9b09 93       		.byte	0x93
 57374 9b0a 08       		.uleb128 0x8
 57375 9b0b 00000000 		.quad	0
 57375      00000000 
 57376 9b13 00000000 		.quad	0
 57376      00000000 
 57377              	.LLST585:
 57378 9b1b 00000000 		.quad	.LVL589
 57378      00000000 
 57379 9b23 00000000 		.quad	.LVL596
 57379      00000000 
 57380 9b2b 0100     		.value	0x1
 57381 9b2d 62       		.byte	0x62
 57382 9b2e 00000000 		.quad	.LVL650
 57382      00000000 
 57383 9b36 00000000 		.quad	.LVL652
 57383      00000000 
 57384 9b3e 0100     		.value	0x1
 57385 9b40 62       		.byte	0x62
 57386 9b41 00000000 		.quad	0
 57386      00000000 
 57387 9b49 00000000 		.quad	0
 57387      00000000 
 57388              	.LLST586:
 57389 9b51 00000000 		.quad	.LVL590
 57389      00000000 
 57390 9b59 00000000 		.quad	.LVL596
 57390      00000000 
 57391 9b61 0600     		.value	0x6
 57392 9b63 F2       		.byte	0xf2
 57393 9b64 00000000 		.long	.Ldebug_info0+87920
 57394 9b68 00       		.sleb128 0
 57395 9b69 00000000 		.quad	.LVL650
 57395      00000000 
 57396 9b71 00000000 		.quad	.LVL652
 57396      00000000 
 57397 9b79 0600     		.value	0x6
 57398 9b7b F2       		.byte	0xf2
 57399 9b7c 00000000 		.long	.Ldebug_info0+87920
 57400 9b80 00       		.sleb128 0
 57401 9b81 00000000 		.quad	0
 57401      00000000 
 57402 9b89 00000000 		.quad	0
 57402      00000000 
 57403              	.LLST587:
 57404 9b91 00000000 		.quad	.LVL591
 57404      00000000 
 57405 9b99 00000000 		.quad	.LVL592
 57405      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1395


 57406 9ba1 0600     		.value	0x6
 57407 9ba3 F2       		.byte	0xf2
 57408 9ba4 00000000 		.long	.Ldebug_info0+87930
 57409 9ba8 00       		.sleb128 0
 57410 9ba9 00000000 		.quad	.LVL593
 57410      00000000 
 57411 9bb1 00000000 		.quad	.LVL595
 57411      00000000 
 57412 9bb9 0600     		.value	0x6
 57413 9bbb F2       		.byte	0xf2
 57414 9bbc 00000000 		.long	.Ldebug_info0+87930
 57415 9bc0 00       		.sleb128 0
 57416 9bc1 00000000 		.quad	0
 57416      00000000 
 57417 9bc9 00000000 		.quad	0
 57417      00000000 
 57418              	.LLST588:
 57419 9bd1 00000000 		.quad	.LVL599
 57419      00000000 
 57420 9bd9 00000000 		.quad	.LVL601-1
 57420      00000000 
 57421 9be1 0100     		.value	0x1
 57422 9be3 62       		.byte	0x62
 57423 9be4 00000000 		.quad	.LVL601-1
 57423      00000000 
 57424 9bec 00000000 		.quad	.LVL602
 57424      00000000 
 57425 9bf4 0300     		.value	0x3
 57426 9bf6 91       		.byte	0x91
 57427 9bf7 887E     		.sleb128 -248
 57428 9bf9 00000000 		.quad	0
 57428      00000000 
 57429 9c01 00000000 		.quad	0
 57429      00000000 
 57430              	.LLST589:
 57431 9c09 00000000 		.quad	.LVL599
 57431      00000000 
 57432 9c11 00000000 		.quad	.LVL603
 57432      00000000 
 57433 9c19 0300     		.value	0x3
 57434 9c1b 7E       		.byte	0x7e
 57435 9c1c 08       		.sleb128 8
 57436 9c1d 9F       		.byte	0x9f
 57437 9c1e 00000000 		.quad	0
 57437      00000000 
 57438 9c26 00000000 		.quad	0
 57438      00000000 
 57439              	.LLST590:
 57440 9c2e 00000000 		.quad	.LVL599
 57440      00000000 
 57441 9c36 00000000 		.quad	.LVL603
 57441      00000000 
 57442 9c3e 0100     		.value	0x1
 57443 9c40 5E       		.byte	0x5e
 57444 9c41 00000000 		.quad	0
 57444      00000000 
 57445 9c49 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1396


 57445      00000000 
 57446              	.LLST591:
 57447 9c51 00000000 		.quad	.LVL599
 57447      00000000 
 57448 9c59 00000000 		.quad	.LVL603
 57448      00000000 
 57449 9c61 0200     		.value	0x2
 57450 9c63 31       		.byte	0x31
 57451 9c64 9F       		.byte	0x9f
 57452 9c65 00000000 		.quad	0
 57452      00000000 
 57453 9c6d 00000000 		.quad	0
 57453      00000000 
 57454              	.LLST594:
 57455 9c75 00000000 		.quad	.LVL600
 57455      00000000 
 57456 9c7d 00000000 		.quad	.LVL601-1
 57456      00000000 
 57457 9c85 0500     		.value	0x5
 57458 9c87 71       		.byte	0x71
 57459 9c88 00       		.sleb128 0
 57460 9c89 38       		.byte	0x38
 57461 9c8a 1B       		.byte	0x1b
 57462 9c8b 9F       		.byte	0x9f
 57463 9c8c 00000000 		.quad	.LVL601-1
 57463      00000000 
 57464 9c94 00000000 		.quad	.LVL603
 57464      00000000 
 57465 9c9c 0800     		.value	0x8
 57466 9c9e 7E       		.byte	0x7e
 57467 9c9f 00       		.sleb128 0
 57468 9ca0 7C       		.byte	0x7c
 57469 9ca1 00       		.sleb128 0
 57470 9ca2 1C       		.byte	0x1c
 57471 9ca3 38       		.byte	0x38
 57472 9ca4 1B       		.byte	0x1b
 57473 9ca5 9F       		.byte	0x9f
 57474 9ca6 00000000 		.quad	0
 57474      00000000 
 57475 9cae 00000000 		.quad	0
 57475      00000000 
 57476              	.LLST595:
 57477 9cb6 00000000 		.quad	.LVL527
 57477      00000000 
 57478 9cbe 00000000 		.quad	.LVL574
 57478      00000000 
 57479 9cc6 0400     		.value	0x4
 57480 9cc8 91       		.byte	0x91
 57481 9cc9 987F     		.sleb128 -104
 57482 9ccb 9F       		.byte	0x9f
 57483 9ccc 00000000 		.quad	.LVL582
 57483      00000000 
 57484 9cd4 00000000 		.quad	.LVL585
 57484      00000000 
 57485 9cdc 0400     		.value	0x4
 57486 9cde 91       		.byte	0x91
 57487 9cdf 987F     		.sleb128 -104
GAS LISTING /tmp/ccJUMvuF.s 			page 1397


 57488 9ce1 9F       		.byte	0x9f
 57489 9ce2 00000000 		.quad	.LVL637
 57489      00000000 
 57490 9cea 00000000 		.quad	.LVL644
 57490      00000000 
 57491 9cf2 0400     		.value	0x4
 57492 9cf4 91       		.byte	0x91
 57493 9cf5 987F     		.sleb128 -104
 57494 9cf7 9F       		.byte	0x9f
 57495 9cf8 00000000 		.quad	.LVL658
 57495      00000000 
 57496 9d00 00000000 		.quad	.LVL661
 57496      00000000 
 57497 9d08 0400     		.value	0x4
 57498 9d0a 91       		.byte	0x91
 57499 9d0b 987F     		.sleb128 -104
 57500 9d0d 9F       		.byte	0x9f
 57501 9d0e 00000000 		.quad	.LVL667
 57501      00000000 
 57502 9d16 00000000 		.quad	.LVL668
 57502      00000000 
 57503 9d1e 0400     		.value	0x4
 57504 9d20 91       		.byte	0x91
 57505 9d21 987F     		.sleb128 -104
 57506 9d23 9F       		.byte	0x9f
 57507 9d24 00000000 		.quad	0
 57507      00000000 
 57508 9d2c 00000000 		.quad	0
 57508      00000000 
 57509              	.LLST597:
 57510 9d34 00000000 		.quad	.LVL527
 57510      00000000 
 57511 9d3c 00000000 		.quad	.LVL574
 57511      00000000 
 57512 9d44 0A00     		.value	0xa
 57513 9d46 03       		.byte	0x3
 57514 9d47 00000000 		.quad	.LC14
 57514      00000000 
 57515 9d4f 9F       		.byte	0x9f
 57516 9d50 00000000 		.quad	.LVL582
 57516      00000000 
 57517 9d58 00000000 		.quad	.LVL585
 57517      00000000 
 57518 9d60 0A00     		.value	0xa
 57519 9d62 03       		.byte	0x3
 57520 9d63 00000000 		.quad	.LC14
 57520      00000000 
 57521 9d6b 9F       		.byte	0x9f
 57522 9d6c 00000000 		.quad	.LVL637
 57522      00000000 
 57523 9d74 00000000 		.quad	.LVL644
 57523      00000000 
 57524 9d7c 0A00     		.value	0xa
 57525 9d7e 03       		.byte	0x3
 57526 9d7f 00000000 		.quad	.LC14
 57526      00000000 
 57527 9d87 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1398


 57528 9d88 00000000 		.quad	.LVL658
 57528      00000000 
 57529 9d90 00000000 		.quad	.LVL661
 57529      00000000 
 57530 9d98 0A00     		.value	0xa
 57531 9d9a 03       		.byte	0x3
 57532 9d9b 00000000 		.quad	.LC14
 57532      00000000 
 57533 9da3 9F       		.byte	0x9f
 57534 9da4 00000000 		.quad	.LVL667
 57534      00000000 
 57535 9dac 00000000 		.quad	.LVL668
 57535      00000000 
 57536 9db4 0A00     		.value	0xa
 57537 9db6 03       		.byte	0x3
 57538 9db7 00000000 		.quad	.LC14
 57538      00000000 
 57539 9dbf 9F       		.byte	0x9f
 57540 9dc0 00000000 		.quad	0
 57540      00000000 
 57541 9dc8 00000000 		.quad	0
 57541      00000000 
 57542              	.LLST598:
 57543 9dd0 00000000 		.quad	.LVL531
 57543      00000000 
 57544 9dd8 00000000 		.quad	.LVL535-1
 57544      00000000 
 57545 9de0 0100     		.value	0x1
 57546 9de2 51       		.byte	0x51
 57547 9de3 00000000 		.quad	0
 57547      00000000 
 57548 9deb 00000000 		.quad	0
 57548      00000000 
 57549              	.LLST599:
 57550 9df3 00000000 		.quad	.LVL531
 57550      00000000 
 57551 9dfb 00000000 		.quad	.LVL574
 57551      00000000 
 57552 9e03 0400     		.value	0x4
 57553 9e05 0A       		.byte	0xa
 57554 9e06 0401     		.value	0x104
 57555 9e08 9F       		.byte	0x9f
 57556 9e09 00000000 		.quad	.LVL582
 57556      00000000 
 57557 9e11 00000000 		.quad	.LVL585
 57557      00000000 
 57558 9e19 0400     		.value	0x4
 57559 9e1b 0A       		.byte	0xa
 57560 9e1c 0401     		.value	0x104
 57561 9e1e 9F       		.byte	0x9f
 57562 9e1f 00000000 		.quad	.LVL637
 57562      00000000 
 57563 9e27 00000000 		.quad	.LVL644
 57563      00000000 
 57564 9e2f 0400     		.value	0x4
 57565 9e31 0A       		.byte	0xa
 57566 9e32 0401     		.value	0x104
GAS LISTING /tmp/ccJUMvuF.s 			page 1399


 57567 9e34 9F       		.byte	0x9f
 57568 9e35 00000000 		.quad	.LVL658
 57568      00000000 
 57569 9e3d 00000000 		.quad	.LVL661
 57569      00000000 
 57570 9e45 0400     		.value	0x4
 57571 9e47 0A       		.byte	0xa
 57572 9e48 0401     		.value	0x104
 57573 9e4a 9F       		.byte	0x9f
 57574 9e4b 00000000 		.quad	.LVL667
 57574      00000000 
 57575 9e53 00000000 		.quad	.LVL668
 57575      00000000 
 57576 9e5b 0400     		.value	0x4
 57577 9e5d 0A       		.byte	0xa
 57578 9e5e 0401     		.value	0x104
 57579 9e60 9F       		.byte	0x9f
 57580 9e61 00000000 		.quad	0
 57580      00000000 
 57581 9e69 00000000 		.quad	0
 57581      00000000 
 57582              	.LLST600:
 57583 9e71 00000000 		.quad	.LVL531
 57583      00000000 
 57584 9e79 00000000 		.quad	.LVL574
 57584      00000000 
 57585 9e81 0200     		.value	0x2
 57586 9e83 34       		.byte	0x34
 57587 9e84 9F       		.byte	0x9f
 57588 9e85 00000000 		.quad	.LVL582
 57588      00000000 
 57589 9e8d 00000000 		.quad	.LVL585
 57589      00000000 
 57590 9e95 0200     		.value	0x2
 57591 9e97 34       		.byte	0x34
 57592 9e98 9F       		.byte	0x9f
 57593 9e99 00000000 		.quad	.LVL637
 57593      00000000 
 57594 9ea1 00000000 		.quad	.LVL644
 57594      00000000 
 57595 9ea9 0200     		.value	0x2
 57596 9eab 34       		.byte	0x34
 57597 9eac 9F       		.byte	0x9f
 57598 9ead 00000000 		.quad	.LVL658
 57598      00000000 
 57599 9eb5 00000000 		.quad	.LVL661
 57599      00000000 
 57600 9ebd 0200     		.value	0x2
 57601 9ebf 34       		.byte	0x34
 57602 9ec0 9F       		.byte	0x9f
 57603 9ec1 00000000 		.quad	.LVL667
 57603      00000000 
 57604 9ec9 00000000 		.quad	.LVL668
 57604      00000000 
 57605 9ed1 0200     		.value	0x2
 57606 9ed3 34       		.byte	0x34
 57607 9ed4 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1400


 57608 9ed5 00000000 		.quad	0
 57608      00000000 
 57609 9edd 00000000 		.quad	0
 57609      00000000 
 57610              	.LLST602:
 57611 9ee5 00000000 		.quad	.LVL531
 57611      00000000 
 57612 9eed 00000000 		.quad	.LVL534
 57612      00000000 
 57613 9ef5 0200     		.value	0x2
 57614 9ef7 71       		.byte	0x71
 57615 9ef8 18       		.sleb128 24
 57616 9ef9 00000000 		.quad	0
 57616      00000000 
 57617 9f01 00000000 		.quad	0
 57617      00000000 
 57618              	.LLST603:
 57619 9f09 00000000 		.quad	.LVL531
 57619      00000000 
 57620 9f11 00000000 		.quad	.LVL574
 57620      00000000 
 57621 9f19 0400     		.value	0x4
 57622 9f1b 0B       		.byte	0xb
 57623 9f1c FBFE     		.value	0xfefb
 57624 9f1e 9F       		.byte	0x9f
 57625 9f1f 00000000 		.quad	.LVL582
 57625      00000000 
 57626 9f27 00000000 		.quad	.LVL585
 57626      00000000 
 57627 9f2f 0400     		.value	0x4
 57628 9f31 0B       		.byte	0xb
 57629 9f32 FBFE     		.value	0xfefb
 57630 9f34 9F       		.byte	0x9f
 57631 9f35 00000000 		.quad	.LVL637
 57631      00000000 
 57632 9f3d 00000000 		.quad	.LVL644
 57632      00000000 
 57633 9f45 0400     		.value	0x4
 57634 9f47 0B       		.byte	0xb
 57635 9f48 FBFE     		.value	0xfefb
 57636 9f4a 9F       		.byte	0x9f
 57637 9f4b 00000000 		.quad	.LVL658
 57637      00000000 
 57638 9f53 00000000 		.quad	.LVL661
 57638      00000000 
 57639 9f5b 0400     		.value	0x4
 57640 9f5d 0B       		.byte	0xb
 57641 9f5e FBFE     		.value	0xfefb
 57642 9f60 9F       		.byte	0x9f
 57643 9f61 00000000 		.quad	.LVL667
 57643      00000000 
 57644 9f69 00000000 		.quad	.LVL668
 57644      00000000 
 57645 9f71 0400     		.value	0x4
 57646 9f73 0B       		.byte	0xb
 57647 9f74 FBFE     		.value	0xfefb
 57648 9f76 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1401


 57649 9f77 00000000 		.quad	0
 57649      00000000 
 57650 9f7f 00000000 		.quad	0
 57650      00000000 
 57651              	.LLST604:
 57652 9f87 00000000 		.quad	.LVL531
 57652      00000000 
 57653 9f8f 00000000 		.quad	.LVL535-1
 57653      00000000 
 57654 9f97 0300     		.value	0x3
 57655 9f99 71       		.byte	0x71
 57656 9f9a 18       		.sleb128 24
 57657 9f9b 9F       		.byte	0x9f
 57658 9f9c 00000000 		.quad	0
 57658      00000000 
 57659 9fa4 00000000 		.quad	0
 57659      00000000 
 57660              	.LLST610:
 57661 9fac 00000000 		.quad	.LVL531
 57661      00000000 
 57662 9fb4 00000000 		.quad	.LVL532
 57662      00000000 
 57663 9fbc 0900     		.value	0x9
 57664 9fbe 71       		.byte	0x71
 57665 9fbf 18       		.sleb128 24
 57666 9fc0 94       		.byte	0x94
 57667 9fc1 04       		.byte	0x4
 57668 9fc2 0B       		.byte	0xb
 57669 9fc3 FBFE     		.value	0xfefb
 57670 9fc5 1A       		.byte	0x1a
 57671 9fc6 9F       		.byte	0x9f
 57672 9fc7 00000000 		.quad	.LVL532
 57672      00000000 
 57673 9fcf 00000000 		.quad	.LVL533
 57673      00000000 
 57674 9fd7 0100     		.value	0x1
 57675 9fd9 50       		.byte	0x50
 57676 9fda 00000000 		.quad	.LVL533
 57676      00000000 
 57677 9fe2 00000000 		.quad	.LVL534
 57677      00000000 
 57678 9fea 0900     		.value	0x9
 57679 9fec 71       		.byte	0x71
 57680 9fed 18       		.sleb128 24
 57681 9fee 94       		.byte	0x94
 57682 9fef 04       		.byte	0x4
 57683 9ff0 0B       		.byte	0xb
 57684 9ff1 FBFE     		.value	0xfefb
 57685 9ff3 1A       		.byte	0x1a
 57686 9ff4 9F       		.byte	0x9f
 57687 9ff5 00000000 		.quad	0
 57687      00000000 
 57688 9ffd 00000000 		.quad	0
 57688      00000000 
 57689              	.LLST611:
 57690 a005 00000000 		.quad	.LVL534
 57690      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1402


 57691 a00d 00000000 		.quad	.LVL535-1
 57691      00000000 
 57692 a015 0100     		.value	0x1
 57693 a017 61       		.byte	0x61
 57694 a018 00000000 		.quad	.LVL535-1
 57694      00000000 
 57695 a020 00000000 		.quad	.LVL538
 57695      00000000 
 57696 a028 1300     		.value	0x13
 57697 a02a 91       		.byte	0x91
 57698 a02b 887E     		.sleb128 -248
 57699 a02d F6       		.byte	0xf6
 57700 a02e 08       		.byte	0x8
 57701 a02f 29       		.uleb128 0x29
 57702 a030 F4       		.byte	0xf4
 57703 a031 29       		.uleb128 0x29
 57704 a032 08       		.byte	0x8
 57705 a033 00000000 		.long	0
 57706 a037 00408F40 		.long	0x408f4000
 57707 a03b 1E       		.byte	0x1e
 57708 a03c 9F       		.byte	0x9f
 57709 a03d 00000000 		.quad	.LVL538
 57709      00000000 
 57710 a045 00000000 		.quad	.LVL539
 57710      00000000 
 57711 a04d 0B00     		.value	0xb
 57712 a04f F5       		.byte	0xf5
 57713 a050 11       		.uleb128 0x11
 57714 a051 29       		.uleb128 0x29
 57715 a052 91       		.byte	0x91
 57716 a053 887E     		.sleb128 -248
 57717 a055 F6       		.byte	0xf6
 57718 a056 08       		.byte	0x8
 57719 a057 29       		.uleb128 0x29
 57720 a058 1E       		.byte	0x1e
 57721 a059 9F       		.byte	0x9f
 57722 a05a 00000000 		.quad	.LVL539
 57722      00000000 
 57723 a062 00000000 		.quad	.LVL574
 57723      00000000 
 57724 a06a 1300     		.value	0x13
 57725 a06c 91       		.byte	0x91
 57726 a06d 887E     		.sleb128 -248
 57727 a06f F6       		.byte	0xf6
 57728 a070 08       		.byte	0x8
 57729 a071 29       		.uleb128 0x29
 57730 a072 F4       		.byte	0xf4
 57731 a073 29       		.uleb128 0x29
 57732 a074 08       		.byte	0x8
 57733 a075 00000000 		.long	0
 57734 a079 00408F40 		.long	0x408f4000
 57735 a07d 1E       		.byte	0x1e
 57736 a07e 9F       		.byte	0x9f
 57737 a07f 00000000 		.quad	.LVL582
 57737      00000000 
 57738 a087 00000000 		.quad	.LVL585
 57738      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1403


 57739 a08f 1300     		.value	0x13
 57740 a091 91       		.byte	0x91
 57741 a092 887E     		.sleb128 -248
 57742 a094 F6       		.byte	0xf6
 57743 a095 08       		.byte	0x8
 57744 a096 29       		.uleb128 0x29
 57745 a097 F4       		.byte	0xf4
 57746 a098 29       		.uleb128 0x29
 57747 a099 08       		.byte	0x8
 57748 a09a 00000000 		.long	0
 57749 a09e 00408F40 		.long	0x408f4000
 57750 a0a2 1E       		.byte	0x1e
 57751 a0a3 9F       		.byte	0x9f
 57752 a0a4 00000000 		.quad	.LVL637
 57752      00000000 
 57753 a0ac 00000000 		.quad	.LVL644
 57753      00000000 
 57754 a0b4 1300     		.value	0x13
 57755 a0b6 91       		.byte	0x91
 57756 a0b7 887E     		.sleb128 -248
 57757 a0b9 F6       		.byte	0xf6
 57758 a0ba 08       		.byte	0x8
 57759 a0bb 29       		.uleb128 0x29
 57760 a0bc F4       		.byte	0xf4
 57761 a0bd 29       		.uleb128 0x29
 57762 a0be 08       		.byte	0x8
 57763 a0bf 00000000 		.long	0
 57764 a0c3 00408F40 		.long	0x408f4000
 57765 a0c7 1E       		.byte	0x1e
 57766 a0c8 9F       		.byte	0x9f
 57767 a0c9 00000000 		.quad	.LVL658
 57767      00000000 
 57768 a0d1 00000000 		.quad	.LVL661
 57768      00000000 
 57769 a0d9 1300     		.value	0x13
 57770 a0db 91       		.byte	0x91
 57771 a0dc 887E     		.sleb128 -248
 57772 a0de F6       		.byte	0xf6
 57773 a0df 08       		.byte	0x8
 57774 a0e0 29       		.uleb128 0x29
 57775 a0e1 F4       		.byte	0xf4
 57776 a0e2 29       		.uleb128 0x29
 57777 a0e3 08       		.byte	0x8
 57778 a0e4 00000000 		.long	0
 57779 a0e8 00408F40 		.long	0x408f4000
 57780 a0ec 1E       		.byte	0x1e
 57781 a0ed 9F       		.byte	0x9f
 57782 a0ee 00000000 		.quad	.LVL667
 57782      00000000 
 57783 a0f6 00000000 		.quad	.LVL668
 57783      00000000 
 57784 a0fe 1300     		.value	0x13
 57785 a100 91       		.byte	0x91
 57786 a101 887E     		.sleb128 -248
 57787 a103 F6       		.byte	0xf6
 57788 a104 08       		.byte	0x8
 57789 a105 29       		.uleb128 0x29
GAS LISTING /tmp/ccJUMvuF.s 			page 1404


 57790 a106 F4       		.byte	0xf4
 57791 a107 29       		.uleb128 0x29
 57792 a108 08       		.byte	0x8
 57793 a109 00000000 		.long	0
 57794 a10d 00408F40 		.long	0x408f4000
 57795 a111 1E       		.byte	0x1e
 57796 a112 9F       		.byte	0x9f
 57797 a113 00000000 		.quad	0
 57797      00000000 
 57798 a11b 00000000 		.quad	0
 57798      00000000 
 57799              	.LLST612:
 57800 a123 00000000 		.quad	.LVL536
 57800      00000000 
 57801 a12b 00000000 		.quad	.LVL574
 57801      00000000 
 57802 a133 0A00     		.value	0xa
 57803 a135 03       		.byte	0x3
 57804 a136 00000000 		.quad	.LC15
 57804      00000000 
 57805 a13e 9F       		.byte	0x9f
 57806 a13f 00000000 		.quad	.LVL582
 57806      00000000 
 57807 a147 00000000 		.quad	.LVL585
 57807      00000000 
 57808 a14f 0A00     		.value	0xa
 57809 a151 03       		.byte	0x3
 57810 a152 00000000 		.quad	.LC15
 57810      00000000 
 57811 a15a 9F       		.byte	0x9f
 57812 a15b 00000000 		.quad	.LVL637
 57812      00000000 
 57813 a163 00000000 		.quad	.LVL644
 57813      00000000 
 57814 a16b 0A00     		.value	0xa
 57815 a16d 03       		.byte	0x3
 57816 a16e 00000000 		.quad	.LC15
 57816      00000000 
 57817 a176 9F       		.byte	0x9f
 57818 a177 00000000 		.quad	.LVL658
 57818      00000000 
 57819 a17f 00000000 		.quad	.LVL661
 57819      00000000 
 57820 a187 0A00     		.value	0xa
 57821 a189 03       		.byte	0x3
 57822 a18a 00000000 		.quad	.LC15
 57822      00000000 
 57823 a192 9F       		.byte	0x9f
 57824 a193 00000000 		.quad	.LVL667
 57824      00000000 
 57825 a19b 00000000 		.quad	.LVL668
 57825      00000000 
 57826 a1a3 0A00     		.value	0xa
 57827 a1a5 03       		.byte	0x3
 57828 a1a6 00000000 		.quad	.LC15
 57828      00000000 
 57829 a1ae 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1405


 57830 a1af 00000000 		.quad	0
 57830      00000000 
 57831 a1b7 00000000 		.quad	0
 57831      00000000 
 57832              	.LLST613:
 57833 a1bf 00000000 		.quad	.LVL536
 57833      00000000 
 57834 a1c7 00000000 		.quad	.LVL537-1
 57834      00000000 
 57835 a1cf 0100     		.value	0x1
 57836 a1d1 50       		.byte	0x50
 57837 a1d2 00000000 		.quad	.LVL537-1
 57837      00000000 
 57838 a1da 00000000 		.quad	.LVL541
 57838      00000000 
 57839 a1e2 0100     		.value	0x1
 57840 a1e4 5C       		.byte	0x5c
 57841 a1e5 00000000 		.quad	0
 57841      00000000 
 57842 a1ed 00000000 		.quad	0
 57842      00000000 
 57843              	.LLST614:
 57844 a1f5 00000000 		.quad	.LVL537
 57844      00000000 
 57845 a1fd 00000000 		.quad	.LVL539
 57845      00000000 
 57846 a205 1300     		.value	0x13
 57847 a207 91       		.byte	0x91
 57848 a208 807E     		.sleb128 -256
 57849 a20a F6       		.byte	0xf6
 57850 a20b 08       		.byte	0x8
 57851 a20c 29       		.uleb128 0x29
 57852 a20d F4       		.byte	0xf4
 57853 a20e 29       		.uleb128 0x29
 57854 a20f 08       		.byte	0x8
 57855 a210 00000000 		.long	0
 57856 a214 00408F40 		.long	0x408f4000
 57857 a218 1E       		.byte	0x1e
 57858 a219 9F       		.byte	0x9f
 57859 a21a 00000000 		.quad	.LVL539
 57859      00000000 
 57860 a222 00000000 		.quad	.LVL540-1
 57860      00000000 
 57861 a22a 0100     		.value	0x1
 57862 a22c 61       		.byte	0x61
 57863 a22d 00000000 		.quad	.LVL540-1
 57863      00000000 
 57864 a235 00000000 		.quad	.LVL574
 57864      00000000 
 57865 a23d 1300     		.value	0x13
 57866 a23f 91       		.byte	0x91
 57867 a240 807E     		.sleb128 -256
 57868 a242 F6       		.byte	0xf6
 57869 a243 08       		.byte	0x8
 57870 a244 29       		.uleb128 0x29
 57871 a245 F4       		.byte	0xf4
 57872 a246 29       		.uleb128 0x29
GAS LISTING /tmp/ccJUMvuF.s 			page 1406


 57873 a247 08       		.byte	0x8
 57874 a248 00000000 		.long	0
 57875 a24c 00408F40 		.long	0x408f4000
 57876 a250 1E       		.byte	0x1e
 57877 a251 9F       		.byte	0x9f
 57878 a252 00000000 		.quad	.LVL582
 57878      00000000 
 57879 a25a 00000000 		.quad	.LVL585
 57879      00000000 
 57880 a262 1300     		.value	0x13
 57881 a264 91       		.byte	0x91
 57882 a265 807E     		.sleb128 -256
 57883 a267 F6       		.byte	0xf6
 57884 a268 08       		.byte	0x8
 57885 a269 29       		.uleb128 0x29
 57886 a26a F4       		.byte	0xf4
 57887 a26b 29       		.uleb128 0x29
 57888 a26c 08       		.byte	0x8
 57889 a26d 00000000 		.long	0
 57890 a271 00408F40 		.long	0x408f4000
 57891 a275 1E       		.byte	0x1e
 57892 a276 9F       		.byte	0x9f
 57893 a277 00000000 		.quad	.LVL637
 57893      00000000 
 57894 a27f 00000000 		.quad	.LVL644
 57894      00000000 
 57895 a287 1300     		.value	0x13
 57896 a289 91       		.byte	0x91
 57897 a28a 807E     		.sleb128 -256
 57898 a28c F6       		.byte	0xf6
 57899 a28d 08       		.byte	0x8
 57900 a28e 29       		.uleb128 0x29
 57901 a28f F4       		.byte	0xf4
 57902 a290 29       		.uleb128 0x29
 57903 a291 08       		.byte	0x8
 57904 a292 00000000 		.long	0
 57905 a296 00408F40 		.long	0x408f4000
 57906 a29a 1E       		.byte	0x1e
 57907 a29b 9F       		.byte	0x9f
 57908 a29c 00000000 		.quad	.LVL658
 57908      00000000 
 57909 a2a4 00000000 		.quad	.LVL661
 57909      00000000 
 57910 a2ac 1300     		.value	0x13
 57911 a2ae 91       		.byte	0x91
 57912 a2af 807E     		.sleb128 -256
 57913 a2b1 F6       		.byte	0xf6
 57914 a2b2 08       		.byte	0x8
 57915 a2b3 29       		.uleb128 0x29
 57916 a2b4 F4       		.byte	0xf4
 57917 a2b5 29       		.uleb128 0x29
 57918 a2b6 08       		.byte	0x8
 57919 a2b7 00000000 		.long	0
 57920 a2bb 00408F40 		.long	0x408f4000
 57921 a2bf 1E       		.byte	0x1e
 57922 a2c0 9F       		.byte	0x9f
 57923 a2c1 00000000 		.quad	.LVL667
GAS LISTING /tmp/ccJUMvuF.s 			page 1407


 57923      00000000 
 57924 a2c9 00000000 		.quad	.LVL668
 57924      00000000 
 57925 a2d1 1300     		.value	0x13
 57926 a2d3 91       		.byte	0x91
 57927 a2d4 807E     		.sleb128 -256
 57928 a2d6 F6       		.byte	0xf6
 57929 a2d7 08       		.byte	0x8
 57930 a2d8 29       		.uleb128 0x29
 57931 a2d9 F4       		.byte	0xf4
 57932 a2da 29       		.uleb128 0x29
 57933 a2db 08       		.byte	0x8
 57934 a2dc 00000000 		.long	0
 57935 a2e0 00408F40 		.long	0x408f4000
 57936 a2e4 1E       		.byte	0x1e
 57937 a2e5 9F       		.byte	0x9f
 57938 a2e6 00000000 		.quad	0
 57938      00000000 
 57939 a2ee 00000000 		.quad	0
 57939      00000000 
 57940              	.LLST615:
 57941 a2f6 00000000 		.quad	.LVL541
 57941      00000000 
 57942 a2fe 00000000 		.quad	.LVL574
 57942      00000000 
 57943 a306 0A00     		.value	0xa
 57944 a308 03       		.byte	0x3
 57945 a309 00000000 		.quad	.LC16
 57945      00000000 
 57946 a311 9F       		.byte	0x9f
 57947 a312 00000000 		.quad	.LVL582
 57947      00000000 
 57948 a31a 00000000 		.quad	.LVL585
 57948      00000000 
 57949 a322 0A00     		.value	0xa
 57950 a324 03       		.byte	0x3
 57951 a325 00000000 		.quad	.LC16
 57951      00000000 
 57952 a32d 9F       		.byte	0x9f
 57953 a32e 00000000 		.quad	.LVL637
 57953      00000000 
 57954 a336 00000000 		.quad	.LVL644
 57954      00000000 
 57955 a33e 0A00     		.value	0xa
 57956 a340 03       		.byte	0x3
 57957 a341 00000000 		.quad	.LC16
 57957      00000000 
 57958 a349 9F       		.byte	0x9f
 57959 a34a 00000000 		.quad	.LVL658
 57959      00000000 
 57960 a352 00000000 		.quad	.LVL661
 57960      00000000 
 57961 a35a 0A00     		.value	0xa
 57962 a35c 03       		.byte	0x3
 57963 a35d 00000000 		.quad	.LC16
 57963      00000000 
 57964 a365 9F       		.byte	0x9f
GAS LISTING /tmp/ccJUMvuF.s 			page 1408


 57965 a366 00000000 		.quad	.LVL667
 57965      00000000 
 57966 a36e 00000000 		.quad	.LVL668
 57966      00000000 
 57967 a376 0A00     		.value	0xa
 57968 a378 03       		.byte	0x3
 57969 a379 00000000 		.quad	.LC16
 57969      00000000 
 57970 a381 9F       		.byte	0x9f
 57971 a382 00000000 		.quad	0
 57971      00000000 
 57972 a38a 00000000 		.quad	0
 57972      00000000 
 57973              	.LLST616:
 57974 a392 00000000 		.quad	.LVL541
 57974      00000000 
 57975 a39a 00000000 		.quad	.LVL542-1
 57975      00000000 
 57976 a3a2 0100     		.value	0x1
 57977 a3a4 50       		.byte	0x50
 57978 a3a5 00000000 		.quad	.LVL542-1
 57978      00000000 
 57979 a3ad 00000000 		.quad	.LVL550
 57979      00000000 
 57980 a3b5 0100     		.value	0x1
 57981 a3b7 5C       		.byte	0x5c
 57982 a3b8 00000000 		.quad	.LVL582
 57982      00000000 
 57983 a3c0 00000000 		.quad	.LVL585
 57983      00000000 
 57984 a3c8 0100     		.value	0x1
 57985 a3ca 5C       		.byte	0x5c
 57986 a3cb 00000000 		.quad	0
 57986      00000000 
 57987 a3d3 00000000 		.quad	0
 57987      00000000 
 57988              	.LLST617:
 57989 a3db 00000000 		.quad	.LVL542
 57989      00000000 
 57990 a3e3 00000000 		.quad	.LVL550
 57990      00000000 
 57991 a3eb 0100     		.value	0x1
 57992 a3ed 5C       		.byte	0x5c
 57993 a3ee 00000000 		.quad	.LVL582
 57993      00000000 
 57994 a3f6 00000000 		.quad	.LVL585
 57994      00000000 
 57995 a3fe 0100     		.value	0x1
 57996 a400 5C       		.byte	0x5c
 57997 a401 00000000 		.quad	0
 57997      00000000 
 57998 a409 00000000 		.quad	0
 57998      00000000 
 57999              	.LLST618:
 58000 a411 00000000 		.quad	.LVL542
 58000      00000000 
 58001 a419 00000000 		.quad	.LVL574
GAS LISTING /tmp/ccJUMvuF.s 			page 1409


 58001      00000000 
 58002 a421 0200     		.value	0x2
 58003 a423 3A       		.byte	0x3a
 58004 a424 9F       		.byte	0x9f
 58005 a425 00000000 		.quad	.LVL582
 58005      00000000 
 58006 a42d 00000000 		.quad	.LVL585
 58006      00000000 
 58007 a435 0200     		.value	0x2
 58008 a437 3A       		.byte	0x3a
 58009 a438 9F       		.byte	0x9f
 58010 a439 00000000 		.quad	.LVL637
 58010      00000000 
 58011 a441 00000000 		.quad	.LVL644
 58011      00000000 
 58012 a449 0200     		.value	0x2
 58013 a44b 3A       		.byte	0x3a
 58014 a44c 9F       		.byte	0x9f
 58015 a44d 00000000 		.quad	.LVL658
 58015      00000000 
 58016 a455 00000000 		.quad	.LVL661
 58016      00000000 
 58017 a45d 0200     		.value	0x2
 58018 a45f 3A       		.byte	0x3a
 58019 a460 9F       		.byte	0x9f
 58020 a461 00000000 		.quad	.LVL667
 58020      00000000 
 58021 a469 00000000 		.quad	.LVL668
 58021      00000000 
 58022 a471 0200     		.value	0x2
 58023 a473 3A       		.byte	0x3a
 58024 a474 9F       		.byte	0x9f
 58025 a475 00000000 		.quad	0
 58025      00000000 
 58026 a47d 00000000 		.quad	0
 58026      00000000 
 58027              	.LLST619:
 58028 a485 00000000 		.quad	.LVL542
 58028      00000000 
 58029 a48d 00000000 		.quad	.LVL545
 58029      00000000 
 58030 a495 0A00     		.value	0xa
 58031 a497 7C       		.byte	0x7c
 58032 a498 00       		.sleb128 0
 58033 a499 7C       		.byte	0x7c
 58034 a49a 00       		.sleb128 0
 58035 a49b 06       		.byte	0x6
 58036 a49c 48       		.byte	0x48
 58037 a49d 1C       		.byte	0x1c
 58038 a49e 06       		.byte	0x6
 58039 a49f 22       		.byte	0x22
 58040 a4a0 9F       		.byte	0x9f
 58041 a4a1 00000000 		.quad	.LVL582
 58041      00000000 
 58042 a4a9 00000000 		.quad	.LVL583-1
 58042      00000000 
 58043 a4b1 0600     		.value	0x6
GAS LISTING /tmp/ccJUMvuF.s 			page 1410


 58044 a4b3 7C       		.byte	0x7c
 58045 a4b4 00       		.sleb128 0
 58046 a4b5 70       		.byte	0x70
 58047 a4b6 00       		.sleb128 0
 58048 a4b7 22       		.byte	0x22
 58049 a4b8 9F       		.byte	0x9f
 58050 a4b9 00000000 		.quad	0
 58050      00000000 
 58051 a4c1 00000000 		.quad	0
 58051      00000000 
 58052              	.LLST620:
 58053 a4c9 00000000 		.quad	.LVL543
 58053      00000000 
 58054 a4d1 00000000 		.quad	.LVL573
 58054      00000000 
 58055 a4d9 0100     		.value	0x1
 58056 a4db 5E       		.byte	0x5e
 58057 a4dc 00000000 		.quad	.LVL582
 58057      00000000 
 58058 a4e4 00000000 		.quad	.LVL585
 58058      00000000 
 58059 a4ec 0100     		.value	0x1
 58060 a4ee 5E       		.byte	0x5e
 58061 a4ef 00000000 		.quad	.LVL637
 58061      00000000 
 58062 a4f7 00000000 		.quad	.LVL644
 58062      00000000 
 58063 a4ff 0100     		.value	0x1
 58064 a501 5E       		.byte	0x5e
 58065 a502 00000000 		.quad	.LVL658
 58065      00000000 
 58066 a50a 00000000 		.quad	.LVL661
 58066      00000000 
 58067 a512 0100     		.value	0x1
 58068 a514 5E       		.byte	0x5e
 58069 a515 00000000 		.quad	.LVL667
 58069      00000000 
 58070 a51d 00000000 		.quad	.LVL668
 58070      00000000 
 58071 a525 0100     		.value	0x1
 58072 a527 5E       		.byte	0x5e
 58073 a528 00000000 		.quad	0
 58073      00000000 
 58074 a530 00000000 		.quad	0
 58074      00000000 
 58075              	.LLST621:
 58076 a538 00000000 		.quad	.LVL544
 58076      00000000 
 58077 a540 00000000 		.quad	.LVL574
 58077      00000000 
 58078 a548 0200     		.value	0x2
 58079 a54a 3A       		.byte	0x3a
 58080 a54b 9F       		.byte	0x9f
 58081 a54c 00000000 		.quad	.LVL582
 58081      00000000 
 58082 a554 00000000 		.quad	.LVL585
 58082      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1411


 58083 a55c 0200     		.value	0x2
 58084 a55e 3A       		.byte	0x3a
 58085 a55f 9F       		.byte	0x9f
 58086 a560 00000000 		.quad	.LVL637
 58086      00000000 
 58087 a568 00000000 		.quad	.LVL644
 58087      00000000 
 58088 a570 0200     		.value	0x2
 58089 a572 3A       		.byte	0x3a
 58090 a573 9F       		.byte	0x9f
 58091 a574 00000000 		.quad	.LVL658
 58091      00000000 
 58092 a57c 00000000 		.quad	.LVL661
 58092      00000000 
 58093 a584 0200     		.value	0x2
 58094 a586 3A       		.byte	0x3a
 58095 a587 9F       		.byte	0x9f
 58096 a588 00000000 		.quad	.LVL667
 58096      00000000 
 58097 a590 00000000 		.quad	.LVL668
 58097      00000000 
 58098 a598 0200     		.value	0x2
 58099 a59a 3A       		.byte	0x3a
 58100 a59b 9F       		.byte	0x9f
 58101 a59c 00000000 		.quad	0
 58101      00000000 
 58102 a5a4 00000000 		.quad	0
 58102      00000000 
 58103              	.LLST622:
 58104 a5ac 00000000 		.quad	.LVL544
 58104      00000000 
 58105 a5b4 00000000 		.quad	.LVL573
 58105      00000000 
 58106 a5bc 0100     		.value	0x1
 58107 a5be 5E       		.byte	0x5e
 58108 a5bf 00000000 		.quad	.LVL582
 58108      00000000 
 58109 a5c7 00000000 		.quad	.LVL585
 58109      00000000 
 58110 a5cf 0100     		.value	0x1
 58111 a5d1 5E       		.byte	0x5e
 58112 a5d2 00000000 		.quad	.LVL637
 58112      00000000 
 58113 a5da 00000000 		.quad	.LVL644
 58113      00000000 
 58114 a5e2 0100     		.value	0x1
 58115 a5e4 5E       		.byte	0x5e
 58116 a5e5 00000000 		.quad	.LVL658
 58116      00000000 
 58117 a5ed 00000000 		.quad	.LVL661
 58117      00000000 
 58118 a5f5 0100     		.value	0x1
 58119 a5f7 5E       		.byte	0x5e
 58120 a5f8 00000000 		.quad	.LVL667
 58120      00000000 
 58121 a600 00000000 		.quad	.LVL668
 58121      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1412


 58122 a608 0100     		.value	0x1
 58123 a60a 5E       		.byte	0x5e
 58124 a60b 00000000 		.quad	0
 58124      00000000 
 58125 a613 00000000 		.quad	0
 58125      00000000 
 58126              	.LLST623:
 58127 a61b 00000000 		.quad	.LVL582
 58127      00000000 
 58128 a623 00000000 		.quad	.LVL585
 58128      00000000 
 58129 a62b 0200     		.value	0x2
 58130 a62d 3A       		.byte	0x3a
 58131 a62e 9F       		.byte	0x9f
 58132 a62f 00000000 		.quad	0
 58132      00000000 
 58133 a637 00000000 		.quad	0
 58133      00000000 
 58134              	.LLST624:
 58135 a63f 00000000 		.quad	.LVL582
 58135      00000000 
 58136 a647 00000000 		.quad	.LVL585
 58136      00000000 
 58137 a64f 0100     		.value	0x1
 58138 a651 5E       		.byte	0x5e
 58139 a652 00000000 		.quad	0
 58139      00000000 
 58140 a65a 00000000 		.quad	0
 58140      00000000 
 58141              	.LLST625:
 58142 a662 00000000 		.quad	.LVL546
 58142      00000000 
 58143 a66a 00000000 		.quad	.LVL547-1
 58143      00000000 
 58144 a672 0100     		.value	0x1
 58145 a674 50       		.byte	0x50
 58146 a675 00000000 		.quad	0
 58146      00000000 
 58147 a67d 00000000 		.quad	0
 58147      00000000 
 58148              	.LLST626:
 58149 a685 00000000 		.quad	.LVL547
 58149      00000000 
 58150 a68d 00000000 		.quad	.LVL574
 58150      00000000 
 58151 a695 0A00     		.value	0xa
 58152 a697 03       		.byte	0x3
 58153 a698 00000000 		.quad	.LC17
 58153      00000000 
 58154 a6a0 9F       		.byte	0x9f
 58155 a6a1 00000000 		.quad	.LVL637
 58155      00000000 
 58156 a6a9 00000000 		.quad	.LVL644
 58156      00000000 
 58157 a6b1 0A00     		.value	0xa
 58158 a6b3 03       		.byte	0x3
 58159 a6b4 00000000 		.quad	.LC17
GAS LISTING /tmp/ccJUMvuF.s 			page 1413


 58159      00000000 
 58160 a6bc 9F       		.byte	0x9f
 58161 a6bd 00000000 		.quad	.LVL658
 58161      00000000 
 58162 a6c5 00000000 		.quad	.LVL661
 58162      00000000 
 58163 a6cd 0A00     		.value	0xa
 58164 a6cf 03       		.byte	0x3
 58165 a6d0 00000000 		.quad	.LC17
 58165      00000000 
 58166 a6d8 9F       		.byte	0x9f
 58167 a6d9 00000000 		.quad	.LVL667
 58167      00000000 
 58168 a6e1 00000000 		.quad	.LVL668
 58168      00000000 
 58169 a6e9 0A00     		.value	0xa
 58170 a6eb 03       		.byte	0x3
 58171 a6ec 00000000 		.quad	.LC17
 58171      00000000 
 58172 a6f4 9F       		.byte	0x9f
 58173 a6f5 00000000 		.quad	0
 58173      00000000 
 58174 a6fd 00000000 		.quad	0
 58174      00000000 
 58175              	.LLST627:
 58176 a705 00000000 		.quad	.LVL548
 58176      00000000 
 58177 a70d 00000000 		.quad	.LVL574
 58177      00000000 
 58178 a715 0300     		.value	0x3
 58179 a717 91       		.byte	0x91
 58180 a718 887E     		.sleb128 -248
 58181 a71a 00000000 		.quad	.LVL637
 58181      00000000 
 58182 a722 00000000 		.quad	.LVL644
 58182      00000000 
 58183 a72a 0300     		.value	0x3
 58184 a72c 91       		.byte	0x91
 58185 a72d 887E     		.sleb128 -248
 58186 a72f 00000000 		.quad	.LVL658
 58186      00000000 
 58187 a737 00000000 		.quad	.LVL661
 58187      00000000 
 58188 a73f 0300     		.value	0x3
 58189 a741 91       		.byte	0x91
 58190 a742 887E     		.sleb128 -248
 58191 a744 00000000 		.quad	.LVL667
 58191      00000000 
 58192 a74c 00000000 		.quad	.LVL668
 58192      00000000 
 58193 a754 0300     		.value	0x3
 58194 a756 91       		.byte	0x91
 58195 a757 887E     		.sleb128 -248
 58196 a759 00000000 		.quad	0
 58196      00000000 
 58197 a761 00000000 		.quad	0
 58197      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1414


 58198              	.LLST628:
 58199 a769 00000000 		.quad	.LVL550
 58199      00000000 
 58200 a771 00000000 		.quad	.LVL574
 58200      00000000 
 58201 a779 0A00     		.value	0xa
 58202 a77b 03       		.byte	0x3
 58203 a77c 00000000 		.quad	.LC18
 58203      00000000 
 58204 a784 9F       		.byte	0x9f
 58205 a785 00000000 		.quad	.LVL637
 58205      00000000 
 58206 a78d 00000000 		.quad	.LVL644
 58206      00000000 
 58207 a795 0A00     		.value	0xa
 58208 a797 03       		.byte	0x3
 58209 a798 00000000 		.quad	.LC18
 58209      00000000 
 58210 a7a0 9F       		.byte	0x9f
 58211 a7a1 00000000 		.quad	.LVL658
 58211      00000000 
 58212 a7a9 00000000 		.quad	.LVL661
 58212      00000000 
 58213 a7b1 0A00     		.value	0xa
 58214 a7b3 03       		.byte	0x3
 58215 a7b4 00000000 		.quad	.LC18
 58215      00000000 
 58216 a7bc 9F       		.byte	0x9f
 58217 a7bd 00000000 		.quad	.LVL667
 58217      00000000 
 58218 a7c5 00000000 		.quad	.LVL668
 58218      00000000 
 58219 a7cd 0A00     		.value	0xa
 58220 a7cf 03       		.byte	0x3
 58221 a7d0 00000000 		.quad	.LC18
 58221      00000000 
 58222 a7d8 9F       		.byte	0x9f
 58223 a7d9 00000000 		.quad	0
 58223      00000000 
 58224 a7e1 00000000 		.quad	0
 58224      00000000 
 58225              	.LLST629:
 58226 a7e9 00000000 		.quad	.LVL550
 58226      00000000 
 58227 a7f1 00000000 		.quad	.LVL551-1
 58227      00000000 
 58228 a7f9 0100     		.value	0x1
 58229 a7fb 50       		.byte	0x50
 58230 a7fc 00000000 		.quad	.LVL551-1
 58230      00000000 
 58231 a804 00000000 		.quad	.LVL558
 58231      00000000 
 58232 a80c 0100     		.value	0x1
 58233 a80e 5C       		.byte	0x5c
 58234 a80f 00000000 		.quad	.LVL637
 58234      00000000 
 58235 a817 00000000 		.quad	.LVL639
GAS LISTING /tmp/ccJUMvuF.s 			page 1415


 58235      00000000 
 58236 a81f 0100     		.value	0x1
 58237 a821 5C       		.byte	0x5c
 58238 a822 00000000 		.quad	0
 58238      00000000 
 58239 a82a 00000000 		.quad	0
 58239      00000000 
 58240              	.LLST630:
 58241 a832 00000000 		.quad	.LVL551
 58241      00000000 
 58242 a83a 00000000 		.quad	.LVL574
 58242      00000000 
 58243 a842 0300     		.value	0x3
 58244 a844 91       		.byte	0x91
 58245 a845 807E     		.sleb128 -256
 58246 a847 00000000 		.quad	.LVL637
 58246      00000000 
 58247 a84f 00000000 		.quad	.LVL644
 58247      00000000 
 58248 a857 0300     		.value	0x3
 58249 a859 91       		.byte	0x91
 58250 a85a 807E     		.sleb128 -256
 58251 a85c 00000000 		.quad	.LVL658
 58251      00000000 
 58252 a864 00000000 		.quad	.LVL661
 58252      00000000 
 58253 a86c 0300     		.value	0x3
 58254 a86e 91       		.byte	0x91
 58255 a86f 807E     		.sleb128 -256
 58256 a871 00000000 		.quad	.LVL667
 58256      00000000 
 58257 a879 00000000 		.quad	.LVL668
 58257      00000000 
 58258 a881 0300     		.value	0x3
 58259 a883 91       		.byte	0x91
 58260 a884 807E     		.sleb128 -256
 58261 a886 00000000 		.quad	0
 58261      00000000 
 58262 a88e 00000000 		.quad	0
 58262      00000000 
 58263              	.LLST631:
 58264 a896 00000000 		.quad	.LVL552
 58264      00000000 
 58265 a89e 00000000 		.quad	.LVL574
 58265      00000000 
 58266 a8a6 0A00     		.value	0xa
 58267 a8a8 03       		.byte	0x3
 58268 a8a9 00000000 		.quad	.LC19
 58268      00000000 
 58269 a8b1 9F       		.byte	0x9f
 58270 a8b2 00000000 		.quad	.LVL637
 58270      00000000 
 58271 a8ba 00000000 		.quad	.LVL644
 58271      00000000 
 58272 a8c2 0A00     		.value	0xa
 58273 a8c4 03       		.byte	0x3
 58274 a8c5 00000000 		.quad	.LC19
GAS LISTING /tmp/ccJUMvuF.s 			page 1416


 58274      00000000 
 58275 a8cd 9F       		.byte	0x9f
 58276 a8ce 00000000 		.quad	.LVL658
 58276      00000000 
 58277 a8d6 00000000 		.quad	.LVL661
 58277      00000000 
 58278 a8de 0A00     		.value	0xa
 58279 a8e0 03       		.byte	0x3
 58280 a8e1 00000000 		.quad	.LC19
 58280      00000000 
 58281 a8e9 9F       		.byte	0x9f
 58282 a8ea 00000000 		.quad	.LVL667
 58282      00000000 
 58283 a8f2 00000000 		.quad	.LVL668
 58283      00000000 
 58284 a8fa 0A00     		.value	0xa
 58285 a8fc 03       		.byte	0x3
 58286 a8fd 00000000 		.quad	.LC19
 58286      00000000 
 58287 a905 9F       		.byte	0x9f
 58288 a906 00000000 		.quad	0
 58288      00000000 
 58289 a90e 00000000 		.quad	0
 58289      00000000 
 58290              	.LLST632:
 58291 a916 00000000 		.quad	.LVL552
 58291      00000000 
 58292 a91e 00000000 		.quad	.LVL553-1
 58292      00000000 
 58293 a926 0100     		.value	0x1
 58294 a928 50       		.byte	0x50
 58295 a929 00000000 		.quad	0
 58295      00000000 
 58296 a931 00000000 		.quad	0
 58296      00000000 
 58297              	.LLST633:
 58298 a939 00000000 		.quad	.LVL553
 58298      00000000 
 58299 a941 00000000 		.quad	.LVL574
 58299      00000000 
 58300 a949 0400     		.value	0x4
 58301 a94b 91       		.byte	0x91
 58302 a94c 987F     		.sleb128 -104
 58303 a94e 9F       		.byte	0x9f
 58304 a94f 00000000 		.quad	.LVL637
 58304      00000000 
 58305 a957 00000000 		.quad	.LVL644
 58305      00000000 
 58306 a95f 0400     		.value	0x4
 58307 a961 91       		.byte	0x91
 58308 a962 987F     		.sleb128 -104
 58309 a964 9F       		.byte	0x9f
 58310 a965 00000000 		.quad	.LVL658
 58310      00000000 
 58311 a96d 00000000 		.quad	.LVL661
 58311      00000000 
 58312 a975 0400     		.value	0x4
GAS LISTING /tmp/ccJUMvuF.s 			page 1417


 58313 a977 91       		.byte	0x91
 58314 a978 987F     		.sleb128 -104
 58315 a97a 9F       		.byte	0x9f
 58316 a97b 00000000 		.quad	.LVL667
 58316      00000000 
 58317 a983 00000000 		.quad	.LVL668
 58317      00000000 
 58318 a98b 0400     		.value	0x4
 58319 a98d 91       		.byte	0x91
 58320 a98e 987F     		.sleb128 -104
 58321 a990 9F       		.byte	0x9f
 58322 a991 00000000 		.quad	0
 58322      00000000 
 58323 a999 00000000 		.quad	0
 58323      00000000 
 58324              	.LLST635:
 58325 a9a1 00000000 		.quad	.LVL554
 58325      00000000 
 58326 a9a9 00000000 		.quad	.LVL556-1
 58326      00000000 
 58327 a9b1 0C00     		.value	0xc
 58328 a9b3 91       		.byte	0x91
 58329 a9b4 A87F     		.sleb128 -88
 58330 a9b6 06       		.byte	0x6
 58331 a9b7 91       		.byte	0x91
 58332 a9b8 987F     		.sleb128 -104
 58333 a9ba 06       		.byte	0x6
 58334 a9bb 1C       		.byte	0x1c
 58335 a9bc 38       		.byte	0x38
 58336 a9bd 1B       		.byte	0x1b
 58337 a9be 9F       		.byte	0x9f
 58338 a9bf 00000000 		.quad	0
 58338      00000000 
 58339 a9c7 00000000 		.quad	0
 58339      00000000 
 58340              	.LLST636:
 58341 a9cf 00000000 		.quad	.LVL554
 58341      00000000 
 58342 a9d7 00000000 		.quad	.LVL556-1
 58342      00000000 
 58343 a9df 0100     		.value	0x1
 58344 a9e1 55       		.byte	0x55
 58345 a9e2 00000000 		.quad	0
 58345      00000000 
 58346 a9ea 00000000 		.quad	0
 58346      00000000 
 58347              	.LLST637:
 58348 a9f2 00000000 		.quad	.LVL555
 58348      00000000 
 58349 a9fa 00000000 		.quad	.LVL556-1
 58349      00000000 
 58350 aa02 0C00     		.value	0xc
 58351 aa04 91       		.byte	0x91
 58352 aa05 A87F     		.sleb128 -88
 58353 aa07 06       		.byte	0x6
 58354 aa08 91       		.byte	0x91
 58355 aa09 987F     		.sleb128 -104
GAS LISTING /tmp/ccJUMvuF.s 			page 1418


 58356 aa0b 06       		.byte	0x6
 58357 aa0c 1C       		.byte	0x1c
 58358 aa0d 38       		.byte	0x38
 58359 aa0e 1B       		.byte	0x1b
 58360 aa0f 9F       		.byte	0x9f
 58361 aa10 00000000 		.quad	0
 58361      00000000 
 58362 aa18 00000000 		.quad	0
 58362      00000000 
 58363              	.LLST638:
 58364 aa20 00000000 		.quad	.LVL555
 58364      00000000 
 58365 aa28 00000000 		.quad	.LVL556-1
 58365      00000000 
 58366 aa30 0100     		.value	0x1
 58367 aa32 55       		.byte	0x55
 58368 aa33 00000000 		.quad	0
 58368      00000000 
 58369 aa3b 00000000 		.quad	0
 58369      00000000 
 58370              	.LLST641:
 58371 aa43 00000000 		.quad	.LVL486
 58371      00000000 
 58372 aa4b 00000000 		.quad	.LVL578
 58372      00000000 
 58373 aa53 0400     		.value	0x4
 58374 aa55 91       		.byte	0x91
 58375 aa56 907F     		.sleb128 -112
 58376 aa58 9F       		.byte	0x9f
 58377 aa59 00000000 		.quad	.LVL582
 58377      00000000 
 58378 aa61 00000000 		.quad	.LVL603
 58378      00000000 
 58379 aa69 0400     		.value	0x4
 58380 aa6b 91       		.byte	0x91
 58381 aa6c 907F     		.sleb128 -112
 58382 aa6e 9F       		.byte	0x9f
 58383 aa6f 00000000 		.quad	.LVL633
 58383      00000000 
 58384 aa77 00000000 		.quad	.LVL646
 58384      00000000 
 58385 aa7f 0400     		.value	0x4
 58386 aa81 91       		.byte	0x91
 58387 aa82 907F     		.sleb128 -112
 58388 aa84 9F       		.byte	0x9f
 58389 aa85 00000000 		.quad	.LVL650
 58389      00000000 
 58390 aa8d 00000000 		.quad	.LVL657
 58390      00000000 
 58391 aa95 0400     		.value	0x4
 58392 aa97 91       		.byte	0x91
 58393 aa98 907F     		.sleb128 -112
 58394 aa9a 9F       		.byte	0x9f
 58395 aa9b 00000000 		.quad	.LVL658
 58395      00000000 
 58396 aaa3 00000000 		.quad	.LVL661
 58396      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1419


 58397 aaab 0400     		.value	0x4
 58398 aaad 91       		.byte	0x91
 58399 aaae 907F     		.sleb128 -112
 58400 aab0 9F       		.byte	0x9f
 58401 aab1 00000000 		.quad	.LVL667
 58401      00000000 
 58402 aab9 00000000 		.quad	.LVL669
 58402      00000000 
 58403 aac1 0400     		.value	0x4
 58404 aac3 91       		.byte	0x91
 58405 aac4 907F     		.sleb128 -112
 58406 aac6 9F       		.byte	0x9f
 58407 aac7 00000000 		.quad	.LVL669
 58407      00000000 
 58408 aacf 00000000 		.quad	.LVL670-1
 58408      00000000 
 58409 aad7 0100     		.value	0x1
 58410 aad9 55       		.byte	0x55
 58411 aada 00000000 		.quad	.LVL670-1
 58411      00000000 
 58412 aae2 00000000 		.quad	.LVL670
 58412      00000000 
 58413 aaea 0400     		.value	0x4
 58414 aaec 91       		.byte	0x91
 58415 aaed 907F     		.sleb128 -112
 58416 aaef 9F       		.byte	0x9f
 58417 aaf0 00000000 		.quad	0
 58417      00000000 
 58418 aaf8 00000000 		.quad	0
 58418      00000000 
 58419              	.LLST642:
 58420 ab00 00000000 		.quad	.LVL486
 58420      00000000 
 58421 ab08 00000000 		.quad	.LVL578
 58421      00000000 
 58422 ab10 0400     		.value	0x4
 58423 ab12 91       		.byte	0x91
 58424 ab13 B07F     		.sleb128 -80
 58425 ab15 9F       		.byte	0x9f
 58426 ab16 00000000 		.quad	.LVL582
 58426      00000000 
 58427 ab1e 00000000 		.quad	.LVL603
 58427      00000000 
 58428 ab26 0400     		.value	0x4
 58429 ab28 91       		.byte	0x91
 58430 ab29 B07F     		.sleb128 -80
 58431 ab2b 9F       		.byte	0x9f
 58432 ab2c 00000000 		.quad	.LVL633
 58432      00000000 
 58433 ab34 00000000 		.quad	.LVL646
 58433      00000000 
 58434 ab3c 0400     		.value	0x4
 58435 ab3e 91       		.byte	0x91
 58436 ab3f B07F     		.sleb128 -80
 58437 ab41 9F       		.byte	0x9f
 58438 ab42 00000000 		.quad	.LVL650
 58438      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1420


 58439 ab4a 00000000 		.quad	.LVL657
 58439      00000000 
 58440 ab52 0400     		.value	0x4
 58441 ab54 91       		.byte	0x91
 58442 ab55 B07F     		.sleb128 -80
 58443 ab57 9F       		.byte	0x9f
 58444 ab58 00000000 		.quad	.LVL658
 58444      00000000 
 58445 ab60 00000000 		.quad	.LVL661
 58445      00000000 
 58446 ab68 0400     		.value	0x4
 58447 ab6a 91       		.byte	0x91
 58448 ab6b B07F     		.sleb128 -80
 58449 ab6d 9F       		.byte	0x9f
 58450 ab6e 00000000 		.quad	.LVL667
 58450      00000000 
 58451 ab76 00000000 		.quad	.LVL670
 58451      00000000 
 58452 ab7e 0400     		.value	0x4
 58453 ab80 91       		.byte	0x91
 58454 ab81 B07F     		.sleb128 -80
 58455 ab83 9F       		.byte	0x9f
 58456 ab84 00000000 		.quad	0
 58456      00000000 
 58457 ab8c 00000000 		.quad	0
 58457      00000000 
 58458              	.LLST643:
 58459 ab94 00000000 		.quad	.LVL558
 58459      00000000 
 58460 ab9c 00000000 		.quad	.LVL574
 58460      00000000 
 58461 aba4 0600     		.value	0x6
 58462 aba6 F2       		.byte	0xf2
 58463 aba7 00000000 		.long	.Ldebug_info0+78817
 58464 abab 00       		.sleb128 0
 58465 abac 00000000 		.quad	0
 58465      00000000 
 58466 abb4 00000000 		.quad	0
 58466      00000000 
 58467              	.LLST645:
 58468 abbc 00000000 		.quad	.LVL558
 58468      00000000 
 58469 abc4 00000000 		.quad	.LVL572
 58469      00000000 
 58470 abcc 0100     		.value	0x1
 58471 abce 5D       		.byte	0x5d
 58472 abcf 00000000 		.quad	0
 58472      00000000 
 58473 abd7 00000000 		.quad	0
 58473      00000000 
 58474              	.LLST648:
 58475 abdf 00000000 		.quad	.LVL559
 58475      00000000 
 58476 abe7 00000000 		.quad	.LVL574
 58476      00000000 
 58477 abef 0400     		.value	0x4
 58478 abf1 91       		.byte	0x91
GAS LISTING /tmp/ccJUMvuF.s 			page 1421


 58479 abf2 C07E     		.sleb128 -192
 58480 abf4 9F       		.byte	0x9f
 58481 abf5 00000000 		.quad	0
 58481      00000000 
 58482 abfd 00000000 		.quad	0
 58482      00000000 
 58483              	.LLST650:
 58484 ac05 00000000 		.quad	.LVL560
 58484      00000000 
 58485 ac0d 00000000 		.quad	.LVL562-1
 58485      00000000 
 58486 ac15 0C00     		.value	0xc
 58487 ac17 91       		.byte	0x91
 58488 ac18 D07E     		.sleb128 -176
 58489 ac1a 06       		.byte	0x6
 58490 ac1b 91       		.byte	0x91
 58491 ac1c C07E     		.sleb128 -192
 58492 ac1e 06       		.byte	0x6
 58493 ac1f 1C       		.byte	0x1c
 58494 ac20 34       		.byte	0x34
 58495 ac21 1B       		.byte	0x1b
 58496 ac22 9F       		.byte	0x9f
 58497 ac23 00000000 		.quad	0
 58497      00000000 
 58498 ac2b 00000000 		.quad	0
 58498      00000000 
 58499              	.LLST651:
 58500 ac33 00000000 		.quad	.LVL560
 58500      00000000 
 58501 ac3b 00000000 		.quad	.LVL562-1
 58501      00000000 
 58502 ac43 0300     		.value	0x3
 58503 ac45 91       		.byte	0x91
 58504 ac46 C07E     		.sleb128 -192
 58505 ac48 00000000 		.quad	0
 58505      00000000 
 58506 ac50 00000000 		.quad	0
 58506      00000000 
 58507              	.LLST652:
 58508 ac58 00000000 		.quad	.LVL561
 58508      00000000 
 58509 ac60 00000000 		.quad	.LVL562-1
 58509      00000000 
 58510 ac68 0C00     		.value	0xc
 58511 ac6a 91       		.byte	0x91
 58512 ac6b D07E     		.sleb128 -176
 58513 ac6d 06       		.byte	0x6
 58514 ac6e 91       		.byte	0x91
 58515 ac6f C07E     		.sleb128 -192
 58516 ac71 06       		.byte	0x6
 58517 ac72 1C       		.byte	0x1c
 58518 ac73 34       		.byte	0x34
 58519 ac74 1B       		.byte	0x1b
 58520 ac75 9F       		.byte	0x9f
 58521 ac76 00000000 		.quad	0
 58521      00000000 
 58522 ac7e 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1422


 58522      00000000 
 58523              	.LLST653:
 58524 ac86 00000000 		.quad	.LVL561
 58524      00000000 
 58525 ac8e 00000000 		.quad	.LVL562-1
 58525      00000000 
 58526 ac96 0300     		.value	0x3
 58527 ac98 91       		.byte	0x91
 58528 ac99 C07E     		.sleb128 -192
 58529 ac9b 00000000 		.quad	0
 58529      00000000 
 58530 aca3 00000000 		.quad	0
 58530      00000000 
 58531              	.LLST656:
 58532 acab 00000000 		.quad	.LVL562
 58532      00000000 
 58533 acb3 00000000 		.quad	.LVL574
 58533      00000000 
 58534 acbb 0600     		.value	0x6
 58535 acbd F2       		.byte	0xf2
 58536 acbe 00000000 		.long	.Ldebug_info0+78786
 58537 acc2 00       		.sleb128 0
 58538 acc3 00000000 		.quad	0
 58538      00000000 
 58539 accb 00000000 		.quad	0
 58539      00000000 
 58540              	.LLST657:
 58541 acd3 00000000 		.quad	.LVL563
 58541      00000000 
 58542 acdb 00000000 		.quad	.LVL564
 58542      00000000 
 58543 ace3 0100     		.value	0x1
 58544 ace5 53       		.byte	0x53
 58545 ace6 00000000 		.quad	0
 58545      00000000 
 58546 acee 00000000 		.quad	0
 58546      00000000 
 58547              	.LLST658:
 58548 acf6 00000000 		.quad	.LVL637
 58548      00000000 
 58549 acfe 00000000 		.quad	.LVL644
 58549      00000000 
 58550 ad06 0A00     		.value	0xa
 58551 ad08 03       		.byte	0x3
 58552 ad09 00000000 		.quad	.LC26
 58552      00000000 
 58553 ad11 9F       		.byte	0x9f
 58554 ad12 00000000 		.quad	.LVL658
 58554      00000000 
 58555 ad1a 00000000 		.quad	.LVL661
 58555      00000000 
 58556 ad22 0A00     		.value	0xa
 58557 ad24 03       		.byte	0x3
 58558 ad25 00000000 		.quad	.LC26
 58558      00000000 
 58559 ad2d 9F       		.byte	0x9f
 58560 ad2e 00000000 		.quad	.LVL667
GAS LISTING /tmp/ccJUMvuF.s 			page 1423


 58560      00000000 
 58561 ad36 00000000 		.quad	.LVL668
 58561      00000000 
 58562 ad3e 0A00     		.value	0xa
 58563 ad40 03       		.byte	0x3
 58564 ad41 00000000 		.quad	.LC26
 58564      00000000 
 58565 ad49 9F       		.byte	0x9f
 58566 ad4a 00000000 		.quad	0
 58566      00000000 
 58567 ad52 00000000 		.quad	0
 58567      00000000 
 58568              	.LLST659:
 58569 ad5a 00000000 		.quad	.LVL638
 58569      00000000 
 58570 ad62 00000000 		.quad	.LVL644
 58570      00000000 
 58571 ad6a 0200     		.value	0x2
 58572 ad6c 3A       		.byte	0x3a
 58573 ad6d 9F       		.byte	0x9f
 58574 ad6e 00000000 		.quad	.LVL658
 58574      00000000 
 58575 ad76 00000000 		.quad	.LVL661
 58575      00000000 
 58576 ad7e 0200     		.value	0x2
 58577 ad80 3A       		.byte	0x3a
 58578 ad81 9F       		.byte	0x9f
 58579 ad82 00000000 		.quad	.LVL667
 58579      00000000 
 58580 ad8a 00000000 		.quad	.LVL668
 58580      00000000 
 58581 ad92 0200     		.value	0x2
 58582 ad94 3A       		.byte	0x3a
 58583 ad95 9F       		.byte	0x9f
 58584 ad96 00000000 		.quad	0
 58584      00000000 
 58585 ad9e 00000000 		.quad	0
 58585      00000000 
 58586              	.LLST660:
 58587 ada6 00000000 		.quad	.LVL639
 58587      00000000 
 58588 adae 00000000 		.quad	.LVL644
 58588      00000000 
 58589 adb6 0100     		.value	0x1
 58590 adb8 5C       		.byte	0x5c
 58591 adb9 00000000 		.quad	.LVL658
 58591      00000000 
 58592 adc1 00000000 		.quad	.LVL661
 58592      00000000 
 58593 adc9 0100     		.value	0x1
 58594 adcb 5C       		.byte	0x5c
 58595 adcc 00000000 		.quad	.LVL667
 58595      00000000 
 58596 add4 00000000 		.quad	.LVL668
 58596      00000000 
 58597 addc 0100     		.value	0x1
 58598 adde 5C       		.byte	0x5c
GAS LISTING /tmp/ccJUMvuF.s 			page 1424


 58599 addf 00000000 		.quad	0
 58599      00000000 
 58600 ade7 00000000 		.quad	0
 58600      00000000 
 58601              	.LLST661:
 58602 adef 00000000 		.quad	.LVL640
 58602      00000000 
 58603 adf7 00000000 		.quad	.LVL644
 58603      00000000 
 58604 adff 0200     		.value	0x2
 58605 ae01 3A       		.byte	0x3a
 58606 ae02 9F       		.byte	0x9f
 58607 ae03 00000000 		.quad	.LVL658
 58607      00000000 
 58608 ae0b 00000000 		.quad	.LVL661
 58608      00000000 
 58609 ae13 0200     		.value	0x2
 58610 ae15 3A       		.byte	0x3a
 58611 ae16 9F       		.byte	0x9f
 58612 ae17 00000000 		.quad	0
 58612      00000000 
 58613 ae1f 00000000 		.quad	0
 58613      00000000 
 58614              	.LLST662:
 58615 ae27 00000000 		.quad	.LVL640
 58615      00000000 
 58616 ae2f 00000000 		.quad	.LVL644
 58616      00000000 
 58617 ae37 0100     		.value	0x1
 58618 ae39 5C       		.byte	0x5c
 58619 ae3a 00000000 		.quad	.LVL658
 58619      00000000 
 58620 ae42 00000000 		.quad	.LVL661
 58620      00000000 
 58621 ae4a 0100     		.value	0x1
 58622 ae4c 5C       		.byte	0x5c
 58623 ae4d 00000000 		.quad	0
 58623      00000000 
 58624 ae55 00000000 		.quad	0
 58624      00000000 
 58625              	.LLST663:
 58626 ae5d 00000000 		.quad	.LVL658
 58626      00000000 
 58627 ae65 00000000 		.quad	.LVL661
 58627      00000000 
 58628 ae6d 0200     		.value	0x2
 58629 ae6f 3A       		.byte	0x3a
 58630 ae70 9F       		.byte	0x9f
 58631 ae71 00000000 		.quad	0
 58631      00000000 
 58632 ae79 00000000 		.quad	0
 58632      00000000 
 58633              	.LLST664:
 58634 ae81 00000000 		.quad	.LVL658
 58634      00000000 
 58635 ae89 00000000 		.quad	.LVL661
 58635      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1425


 58636 ae91 0100     		.value	0x1
 58637 ae93 5C       		.byte	0x5c
 58638 ae94 00000000 		.quad	0
 58638      00000000 
 58639 ae9c 00000000 		.quad	0
 58639      00000000 
 58640              	.LLST665:
 58641 aea4 00000000 		.quad	.LVL642
 58641      00000000 
 58642 aeac 00000000 		.quad	.LVL643-1
 58642      00000000 
 58643 aeb4 0100     		.value	0x1
 58644 aeb6 50       		.byte	0x50
 58645 aeb7 00000000 		.quad	0
 58645      00000000 
 58646 aebf 00000000 		.quad	0
 58646      00000000 
 58647              	.LLST666:
 58648 aec7 00000000 		.quad	.LVL670
 58648      00000000 
 58649 aecf 00000000 		.quad	.LVL671
 58649      00000000 
 58650 aed7 0600     		.value	0x6
 58651 aed9 F2       		.byte	0xf2
 58652 aeda 00000000 		.long	.Ldebug_info0+78817
 58653 aede 00       		.sleb128 0
 58654 aedf 00000000 		.quad	0
 58654      00000000 
 58655 aee7 00000000 		.quad	0
 58655      00000000 
 58656              	.LLST668:
 58657 aeef 00000000 		.quad	.LVL670
 58657      00000000 
 58658 aef7 00000000 		.quad	.LVL671
 58658      00000000 
 58659 aeff 0100     		.value	0x1
 58660 af01 5D       		.byte	0x5d
 58661 af02 00000000 		.quad	0
 58661      00000000 
 58662 af0a 00000000 		.quad	0
 58662      00000000 
 58663              	.LLST671:
 58664 af12 00000000 		.quad	.LVL671
 58664      00000000 
 58665 af1a 00000000 		.quad	.LVL674
 58665      00000000 
 58666 af22 0400     		.value	0x4
 58667 af24 91       		.byte	0x91
 58668 af25 C07E     		.sleb128 -192
 58669 af27 9F       		.byte	0x9f
 58670 af28 00000000 		.quad	0
 58670      00000000 
 58671 af30 00000000 		.quad	0
 58671      00000000 
 58672              	.LLST673:
 58673 af38 00000000 		.quad	.LVL672
 58673      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1426


 58674 af40 00000000 		.quad	.LVL674-1
 58674      00000000 
 58675 af48 0C00     		.value	0xc
 58676 af4a 91       		.byte	0x91
 58677 af4b D07E     		.sleb128 -176
 58678 af4d 06       		.byte	0x6
 58679 af4e 91       		.byte	0x91
 58680 af4f C07E     		.sleb128 -192
 58681 af51 06       		.byte	0x6
 58682 af52 1C       		.byte	0x1c
 58683 af53 34       		.byte	0x34
 58684 af54 1B       		.byte	0x1b
 58685 af55 9F       		.byte	0x9f
 58686 af56 00000000 		.quad	0
 58686      00000000 
 58687 af5e 00000000 		.quad	0
 58687      00000000 
 58688              	.LLST674:
 58689 af66 00000000 		.quad	.LVL672
 58689      00000000 
 58690 af6e 00000000 		.quad	.LVL674-1
 58690      00000000 
 58691 af76 0300     		.value	0x3
 58692 af78 91       		.byte	0x91
 58693 af79 C07E     		.sleb128 -192
 58694 af7b 00000000 		.quad	0
 58694      00000000 
 58695 af83 00000000 		.quad	0
 58695      00000000 
 58696              	.LLST675:
 58697 af8b 00000000 		.quad	.LVL673
 58697      00000000 
 58698 af93 00000000 		.quad	.LVL674-1
 58698      00000000 
 58699 af9b 0C00     		.value	0xc
 58700 af9d 91       		.byte	0x91
 58701 af9e D07E     		.sleb128 -176
 58702 afa0 06       		.byte	0x6
 58703 afa1 91       		.byte	0x91
 58704 afa2 C07E     		.sleb128 -192
 58705 afa4 06       		.byte	0x6
 58706 afa5 1C       		.byte	0x1c
 58707 afa6 34       		.byte	0x34
 58708 afa7 1B       		.byte	0x1b
 58709 afa8 9F       		.byte	0x9f
 58710 afa9 00000000 		.quad	0
 58710      00000000 
 58711 afb1 00000000 		.quad	0
 58711      00000000 
 58712              	.LLST676:
 58713 afb9 00000000 		.quad	.LVL673
 58713      00000000 
 58714 afc1 00000000 		.quad	.LVL674-1
 58714      00000000 
 58715 afc9 0300     		.value	0x3
 58716 afcb 91       		.byte	0x91
 58717 afcc C07E     		.sleb128 -192
GAS LISTING /tmp/ccJUMvuF.s 			page 1427


 58718 afce 00000000 		.quad	0
 58718      00000000 
 58719 afd6 00000000 		.quad	0
 58719      00000000 
 58720              	.LLST679:
 58721 afde 00000000 		.quad	.LVL674
 58721      00000000 
 58722 afe6 00000000 		.quad	.LVL677
 58722      00000000 
 58723 afee 0600     		.value	0x6
 58724 aff0 F2       		.byte	0xf2
 58725 aff1 00000000 		.long	.Ldebug_info0+78786
 58726 aff5 00       		.sleb128 0
 58727 aff6 00000000 		.quad	0
 58727      00000000 
 58728 affe 00000000 		.quad	0
 58728      00000000 
 58729              	.LLST680:
 58730 b006 00000000 		.quad	.LVL675
 58730      00000000 
 58731 b00e 00000000 		.quad	.LVL676
 58731      00000000 
 58732 b016 0100     		.value	0x1
 58733 b018 53       		.byte	0x53
 58734 b019 00000000 		.quad	0
 58734      00000000 
 58735 b021 00000000 		.quad	0
 58735      00000000 
 58736              	.LLST681:
 58737 b029 00000000 		.quad	.LVL568
 58737      00000000 
 58738 b031 00000000 		.quad	.LVL569-1
 58738      00000000 
 58739 b039 0100     		.value	0x1
 58740 b03b 50       		.byte	0x50
 58741 b03c 00000000 		.quad	0
 58741      00000000 
 58742 b044 00000000 		.quad	0
 58742      00000000 
 58743              	.LLST682:
 58744 b04c 00000000 		.quad	.LVL569
 58744      00000000 
 58745 b054 00000000 		.quad	.LVL574
 58745      00000000 
 58746 b05c 0600     		.value	0x6
 58747 b05e F2       		.byte	0xf2
 58748 b05f 00000000 		.long	.Ldebug_info0+78585
 58749 b063 00       		.sleb128 0
 58750 b064 00000000 		.quad	0
 58750      00000000 
 58751 b06c 00000000 		.quad	0
 58751      00000000 
 58752              	.LLST683:
 58753 b074 00000000 		.quad	.LVL570
 58753      00000000 
 58754 b07c 00000000 		.quad	.LVL571
 58754      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1428


 58755 b084 0100     		.value	0x1
 58756 b086 56       		.byte	0x56
 58757 b087 00000000 		.quad	0
 58757      00000000 
 58758 b08f 00000000 		.quad	0
 58758      00000000 
 58759              	.LLST684:
 58760 b097 00000000 		.quad	.LVL664
 58760      00000000 
 58761 b09f 00000000 		.quad	.LVL667
 58761      00000000 
 58762 b0a7 0600     		.value	0x6
 58763 b0a9 F2       		.byte	0xf2
 58764 b0aa 00000000 		.long	.Ldebug_info0+78585
 58765 b0ae 00       		.sleb128 0
 58766 b0af 00000000 		.quad	0
 58766      00000000 
 58767 b0b7 00000000 		.quad	0
 58767      00000000 
 58768              	.LLST685:
 58769 b0bf 00000000 		.quad	.LVL665
 58769      00000000 
 58770 b0c7 00000000 		.quad	.LVL666
 58770      00000000 
 58771 b0cf 0100     		.value	0x1
 58772 b0d1 56       		.byte	0x56
 58773 b0d2 00000000 		.quad	0
 58773      00000000 
 58774 b0da 00000000 		.quad	0
 58774      00000000 
 58775              		.section	.debug_aranges,"",@progbits
 58776 0000 9C000000 		.long	0x9c
 58777 0004 0200     		.value	0x2
 58778 0006 00000000 		.long	.Ldebug_info0
 58779 000a 08       		.byte	0x8
 58780 000b 00       		.byte	0
 58781 000c 0000     		.value	0
 58782 000e 0000     		.value	0
 58783 0010 00000000 		.quad	.Ltext0
 58783      00000000 
 58784 0018 9F050000 		.quad	.Letext0-.Ltext0
 58784      00000000 
 58785 0020 00000000 		.quad	.LFB1390
 58785      00000000 
 58786 0028 03000000 		.quad	.LFE1390-.LFB1390
 58786      00000000 
 58787 0030 00000000 		.quad	.LFB6598
 58787      00000000 
 58788 0038 4D010000 		.quad	.LFE6598-.LFB6598
 58788      00000000 
 58789 0040 00000000 		.quad	.LFB6565
 58789      00000000 
 58790 0048 31040000 		.quad	.LFE6565-.LFB6565
 58790      00000000 
 58791 0050 00000000 		.quad	.LFB6612
 58791      00000000 
 58792 0058 08010000 		.quad	.LFE6612-.LFB6612
GAS LISTING /tmp/ccJUMvuF.s 			page 1429


 58792      00000000 
 58793 0060 00000000 		.quad	.LFB6046
 58793      00000000 
 58794 0068 40040000 		.quad	.LFE6046-.LFB6046
 58794      00000000 
 58795 0070 00000000 		.quad	.LFB6051
 58795      00000000 
 58796 0078 8C0E0000 		.quad	.LFE6051-.LFB6051
 58796      00000000 
 58797 0080 00000000 		.quad	.LFB6649
 58797      00000000 
 58798 0088 2E000000 		.quad	.LFE6649-.LFB6649
 58798      00000000 
 58799 0090 00000000 		.quad	0
 58799      00000000 
 58800 0098 00000000 		.quad	0
 58800      00000000 
 58801              		.section	.debug_ranges,"",@progbits
 58802              	.Ldebug_ranges0:
 58803 0000 00000000 		.quad	.LBB3496
 58803      00000000 
 58804 0008 00000000 		.quad	.LBE3496
 58804      00000000 
 58805 0010 00000000 		.quad	.LBB3503
 58805      00000000 
 58806 0018 00000000 		.quad	.LBE3503
 58806      00000000 
 58807 0020 00000000 		.quad	0
 58807      00000000 
 58808 0028 00000000 		.quad	0
 58808      00000000 
 58809 0030 00000000 		.quad	.LBB3504
 58809      00000000 
 58810 0038 00000000 		.quad	.LBE3504
 58810      00000000 
 58811 0040 00000000 		.quad	.LBB3659
 58811      00000000 
 58812 0048 00000000 		.quad	.LBE3659
 58812      00000000 
 58813 0050 00000000 		.quad	.LBB3660
 58813      00000000 
 58814 0058 00000000 		.quad	.LBE3660
 58814      00000000 
 58815 0060 00000000 		.quad	0
 58815      00000000 
 58816 0068 00000000 		.quad	0
 58816      00000000 
 58817 0070 00000000 		.quad	.LBB3509
 58817      00000000 
 58818 0078 00000000 		.quad	.LBE3509
 58818      00000000 
 58819 0080 00000000 		.quad	.LBB3656
 58819      00000000 
 58820 0088 00000000 		.quad	.LBE3656
 58820      00000000 
 58821 0090 00000000 		.quad	0
 58821      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1430


 58822 0098 00000000 		.quad	0
 58822      00000000 
 58823 00a0 00000000 		.quad	.LBB3510
 58823      00000000 
 58824 00a8 00000000 		.quad	.LBE3510
 58824      00000000 
 58825 00b0 00000000 		.quad	.LBB3655
 58825      00000000 
 58826 00b8 00000000 		.quad	.LBE3655
 58826      00000000 
 58827 00c0 00000000 		.quad	0
 58827      00000000 
 58828 00c8 00000000 		.quad	0
 58828      00000000 
 58829 00d0 00000000 		.quad	.LBB3513
 58829      00000000 
 58830 00d8 00000000 		.quad	.LBE3513
 58830      00000000 
 58831 00e0 00000000 		.quad	.LBB3651
 58831      00000000 
 58832 00e8 00000000 		.quad	.LBE3651
 58832      00000000 
 58833 00f0 00000000 		.quad	0
 58833      00000000 
 58834 00f8 00000000 		.quad	0
 58834      00000000 
 58835 0100 00000000 		.quad	.LBB3515
 58835      00000000 
 58836 0108 00000000 		.quad	.LBE3515
 58836      00000000 
 58837 0110 00000000 		.quad	.LBB3650
 58837      00000000 
 58838 0118 00000000 		.quad	.LBE3650
 58838      00000000 
 58839 0120 00000000 		.quad	0
 58839      00000000 
 58840 0128 00000000 		.quad	0
 58840      00000000 
 58841 0130 00000000 		.quad	.LBB3516
 58841      00000000 
 58842 0138 00000000 		.quad	.LBE3516
 58842      00000000 
 58843 0140 00000000 		.quad	.LBB3648
 58843      00000000 
 58844 0148 00000000 		.quad	.LBE3648
 58844      00000000 
 58845 0150 00000000 		.quad	.LBB3649
 58845      00000000 
 58846 0158 00000000 		.quad	.LBE3649
 58846      00000000 
 58847 0160 00000000 		.quad	0
 58847      00000000 
 58848 0168 00000000 		.quad	0
 58848      00000000 
 58849 0170 00000000 		.quad	.LBB3517
 58849      00000000 
 58850 0178 00000000 		.quad	.LBE3517
GAS LISTING /tmp/ccJUMvuF.s 			page 1431


 58850      00000000 
 58851 0180 00000000 		.quad	.LBB3646
 58851      00000000 
 58852 0188 00000000 		.quad	.LBE3646
 58852      00000000 
 58853 0190 00000000 		.quad	.LBB3647
 58853      00000000 
 58854 0198 00000000 		.quad	.LBE3647
 58854      00000000 
 58855 01a0 00000000 		.quad	0
 58855      00000000 
 58856 01a8 00000000 		.quad	0
 58856      00000000 
 58857 01b0 00000000 		.quad	.LBB3520
 58857      00000000 
 58858 01b8 00000000 		.quad	.LBE3520
 58858      00000000 
 58859 01c0 00000000 		.quad	.LBB3639
 58859      00000000 
 58860 01c8 00000000 		.quad	.LBE3639
 58860      00000000 
 58861 01d0 00000000 		.quad	.LBB3641
 58861      00000000 
 58862 01d8 00000000 		.quad	.LBE3641
 58862      00000000 
 58863 01e0 00000000 		.quad	0
 58863      00000000 
 58864 01e8 00000000 		.quad	0
 58864      00000000 
 58865 01f0 00000000 		.quad	.LBB3521
 58865      00000000 
 58866 01f8 00000000 		.quad	.LBE3521
 58866      00000000 
 58867 0200 00000000 		.quad	.LBB3636
 58867      00000000 
 58868 0208 00000000 		.quad	.LBE3636
 58868      00000000 
 58869 0210 00000000 		.quad	.LBB3637
 58869      00000000 
 58870 0218 00000000 		.quad	.LBE3637
 58870      00000000 
 58871 0220 00000000 		.quad	.LBB3638
 58871      00000000 
 58872 0228 00000000 		.quad	.LBE3638
 58872      00000000 
 58873 0230 00000000 		.quad	0
 58873      00000000 
 58874 0238 00000000 		.quad	0
 58874      00000000 
 58875 0240 00000000 		.quad	.LBB3522
 58875      00000000 
 58876 0248 00000000 		.quad	.LBE3522
 58876      00000000 
 58877 0250 00000000 		.quad	.LBB3633
 58877      00000000 
 58878 0258 00000000 		.quad	.LBE3633
 58878      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1432


 58879 0260 00000000 		.quad	.LBB3634
 58879      00000000 
 58880 0268 00000000 		.quad	.LBE3634
 58880      00000000 
 58881 0270 00000000 		.quad	.LBB3635
 58881      00000000 
 58882 0278 00000000 		.quad	.LBE3635
 58882      00000000 
 58883 0280 00000000 		.quad	0
 58883      00000000 
 58884 0288 00000000 		.quad	0
 58884      00000000 
 58885 0290 00000000 		.quad	.LBB3525
 58885      00000000 
 58886 0298 00000000 		.quad	.LBE3525
 58886      00000000 
 58887 02a0 00000000 		.quad	.LBB3623
 58887      00000000 
 58888 02a8 00000000 		.quad	.LBE3623
 58888      00000000 
 58889 02b0 00000000 		.quad	.LBB3626
 58889      00000000 
 58890 02b8 00000000 		.quad	.LBE3626
 58890      00000000 
 58891 02c0 00000000 		.quad	0
 58891      00000000 
 58892 02c8 00000000 		.quad	0
 58892      00000000 
 58893 02d0 00000000 		.quad	.LBB3526
 58893      00000000 
 58894 02d8 00000000 		.quad	.LBE3526
 58894      00000000 
 58895 02e0 00000000 		.quad	.LBB3620
 58895      00000000 
 58896 02e8 00000000 		.quad	.LBE3620
 58896      00000000 
 58897 02f0 00000000 		.quad	.LBB3621
 58897      00000000 
 58898 02f8 00000000 		.quad	.LBE3621
 58898      00000000 
 58899 0300 00000000 		.quad	.LBB3622
 58899      00000000 
 58900 0308 00000000 		.quad	.LBE3622
 58900      00000000 
 58901 0310 00000000 		.quad	0
 58901      00000000 
 58902 0318 00000000 		.quad	0
 58902      00000000 
 58903 0320 00000000 		.quad	.LBB3527
 58903      00000000 
 58904 0328 00000000 		.quad	.LBE3527
 58904      00000000 
 58905 0330 00000000 		.quad	.LBB3617
 58905      00000000 
 58906 0338 00000000 		.quad	.LBE3617
 58906      00000000 
 58907 0340 00000000 		.quad	.LBB3618
GAS LISTING /tmp/ccJUMvuF.s 			page 1433


 58907      00000000 
 58908 0348 00000000 		.quad	.LBE3618
 58908      00000000 
 58909 0350 00000000 		.quad	.LBB3619
 58909      00000000 
 58910 0358 00000000 		.quad	.LBE3619
 58910      00000000 
 58911 0360 00000000 		.quad	0
 58911      00000000 
 58912 0368 00000000 		.quad	0
 58912      00000000 
 58913 0370 00000000 		.quad	.LBB3530
 58913      00000000 
 58914 0378 00000000 		.quad	.LBE3530
 58914      00000000 
 58915 0380 00000000 		.quad	.LBB3607
 58915      00000000 
 58916 0388 00000000 		.quad	.LBE3607
 58916      00000000 
 58917 0390 00000000 		.quad	.LBB3610
 58917      00000000 
 58918 0398 00000000 		.quad	.LBE3610
 58918      00000000 
 58919 03a0 00000000 		.quad	0
 58919      00000000 
 58920 03a8 00000000 		.quad	0
 58920      00000000 
 58921 03b0 00000000 		.quad	.LBB3531
 58921      00000000 
 58922 03b8 00000000 		.quad	.LBE3531
 58922      00000000 
 58923 03c0 00000000 		.quad	.LBB3604
 58923      00000000 
 58924 03c8 00000000 		.quad	.LBE3604
 58924      00000000 
 58925 03d0 00000000 		.quad	.LBB3605
 58925      00000000 
 58926 03d8 00000000 		.quad	.LBE3605
 58926      00000000 
 58927 03e0 00000000 		.quad	.LBB3606
 58927      00000000 
 58928 03e8 00000000 		.quad	.LBE3606
 58928      00000000 
 58929 03f0 00000000 		.quad	0
 58929      00000000 
 58930 03f8 00000000 		.quad	0
 58930      00000000 
 58931 0400 00000000 		.quad	.LBB3532
 58931      00000000 
 58932 0408 00000000 		.quad	.LBE3532
 58932      00000000 
 58933 0410 00000000 		.quad	.LBB3601
 58933      00000000 
 58934 0418 00000000 		.quad	.LBE3601
 58934      00000000 
 58935 0420 00000000 		.quad	.LBB3602
 58935      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1434


 58936 0428 00000000 		.quad	.LBE3602
 58936      00000000 
 58937 0430 00000000 		.quad	.LBB3603
 58937      00000000 
 58938 0438 00000000 		.quad	.LBE3603
 58938      00000000 
 58939 0440 00000000 		.quad	0
 58939      00000000 
 58940 0448 00000000 		.quad	0
 58940      00000000 
 58941 0450 00000000 		.quad	.LBB3535
 58941      00000000 
 58942 0458 00000000 		.quad	.LBE3535
 58942      00000000 
 58943 0460 00000000 		.quad	.LBB3591
 58943      00000000 
 58944 0468 00000000 		.quad	.LBE3591
 58944      00000000 
 58945 0470 00000000 		.quad	.LBB3594
 58945      00000000 
 58946 0478 00000000 		.quad	.LBE3594
 58946      00000000 
 58947 0480 00000000 		.quad	0
 58947      00000000 
 58948 0488 00000000 		.quad	0
 58948      00000000 
 58949 0490 00000000 		.quad	.LBB3536
 58949      00000000 
 58950 0498 00000000 		.quad	.LBE3536
 58950      00000000 
 58951 04a0 00000000 		.quad	.LBB3588
 58951      00000000 
 58952 04a8 00000000 		.quad	.LBE3588
 58952      00000000 
 58953 04b0 00000000 		.quad	.LBB3589
 58953      00000000 
 58954 04b8 00000000 		.quad	.LBE3589
 58954      00000000 
 58955 04c0 00000000 		.quad	.LBB3590
 58955      00000000 
 58956 04c8 00000000 		.quad	.LBE3590
 58956      00000000 
 58957 04d0 00000000 		.quad	0
 58957      00000000 
 58958 04d8 00000000 		.quad	0
 58958      00000000 
 58959 04e0 00000000 		.quad	.LBB3537
 58959      00000000 
 58960 04e8 00000000 		.quad	.LBE3537
 58960      00000000 
 58961 04f0 00000000 		.quad	.LBB3585
 58961      00000000 
 58962 04f8 00000000 		.quad	.LBE3585
 58962      00000000 
 58963 0500 00000000 		.quad	.LBB3586
 58963      00000000 
 58964 0508 00000000 		.quad	.LBE3586
GAS LISTING /tmp/ccJUMvuF.s 			page 1435


 58964      00000000 
 58965 0510 00000000 		.quad	.LBB3587
 58965      00000000 
 58966 0518 00000000 		.quad	.LBE3587
 58966      00000000 
 58967 0520 00000000 		.quad	0
 58967      00000000 
 58968 0528 00000000 		.quad	0
 58968      00000000 
 58969 0530 00000000 		.quad	.LBB3540
 58969      00000000 
 58970 0538 00000000 		.quad	.LBE3540
 58970      00000000 
 58971 0540 00000000 		.quad	.LBB3578
 58971      00000000 
 58972 0548 00000000 		.quad	.LBE3578
 58972      00000000 
 58973 0550 00000000 		.quad	0
 58973      00000000 
 58974 0558 00000000 		.quad	0
 58974      00000000 
 58975 0560 00000000 		.quad	.LBB3541
 58975      00000000 
 58976 0568 00000000 		.quad	.LBE3541
 58976      00000000 
 58977 0570 00000000 		.quad	.LBB3573
 58977      00000000 
 58978 0578 00000000 		.quad	.LBE3573
 58978      00000000 
 58979 0580 00000000 		.quad	.LBB3574
 58979      00000000 
 58980 0588 00000000 		.quad	.LBE3574
 58980      00000000 
 58981 0590 00000000 		.quad	0
 58981      00000000 
 58982 0598 00000000 		.quad	0
 58982      00000000 
 58983 05a0 00000000 		.quad	.LBB3542
 58983      00000000 
 58984 05a8 00000000 		.quad	.LBE3542
 58984      00000000 
 58985 05b0 00000000 		.quad	.LBB3571
 58985      00000000 
 58986 05b8 00000000 		.quad	.LBE3571
 58986      00000000 
 58987 05c0 00000000 		.quad	.LBB3572
 58987      00000000 
 58988 05c8 00000000 		.quad	.LBE3572
 58988      00000000 
 58989 05d0 00000000 		.quad	0
 58989      00000000 
 58990 05d8 00000000 		.quad	0
 58990      00000000 
 58991 05e0 00000000 		.quad	.LBB3545
 58991      00000000 
 58992 05e8 00000000 		.quad	.LBE3545
 58992      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1436


 58993 05f0 00000000 		.quad	.LBB3566
 58993      00000000 
 58994 05f8 00000000 		.quad	.LBE3566
 58994      00000000 
 58995 0600 00000000 		.quad	0
 58995      00000000 
 58996 0608 00000000 		.quad	0
 58996      00000000 
 58997 0610 00000000 		.quad	.LBB3546
 58997      00000000 
 58998 0618 00000000 		.quad	.LBE3546
 58998      00000000 
 58999 0620 00000000 		.quad	.LBB3562
 58999      00000000 
 59000 0628 00000000 		.quad	.LBE3562
 59000      00000000 
 59001 0630 00000000 		.quad	.LBB3563
 59001      00000000 
 59002 0638 00000000 		.quad	.LBE3563
 59002      00000000 
 59003 0640 00000000 		.quad	0
 59003      00000000 
 59004 0648 00000000 		.quad	0
 59004      00000000 
 59005 0650 00000000 		.quad	.LBB3547
 59005      00000000 
 59006 0658 00000000 		.quad	.LBE3547
 59006      00000000 
 59007 0660 00000000 		.quad	.LBB3560
 59007      00000000 
 59008 0668 00000000 		.quad	.LBE3560
 59008      00000000 
 59009 0670 00000000 		.quad	.LBB3561
 59009      00000000 
 59010 0678 00000000 		.quad	.LBE3561
 59010      00000000 
 59011 0680 00000000 		.quad	0
 59011      00000000 
 59012 0688 00000000 		.quad	0
 59012      00000000 
 59013 0690 00000000 		.quad	.LBB3550
 59013      00000000 
 59014 0698 00000000 		.quad	.LBE3550
 59014      00000000 
 59015 06a0 00000000 		.quad	.LBB3551
 59015      00000000 
 59016 06a8 00000000 		.quad	.LBE3551
 59016      00000000 
 59017 06b0 00000000 		.quad	0
 59017      00000000 
 59018 06b8 00000000 		.quad	0
 59018      00000000 
 59019 06c0 00000000 		.quad	.LBB3564
 59019      00000000 
 59020 06c8 00000000 		.quad	.LBE3564
 59020      00000000 
 59021 06d0 00000000 		.quad	.LBB3565
GAS LISTING /tmp/ccJUMvuF.s 			page 1437


 59021      00000000 
 59022 06d8 00000000 		.quad	.LBE3565
 59022      00000000 
 59023 06e0 00000000 		.quad	0
 59023      00000000 
 59024 06e8 00000000 		.quad	0
 59024      00000000 
 59025 06f0 00000000 		.quad	.LBB3575
 59025      00000000 
 59026 06f8 00000000 		.quad	.LBE3575
 59026      00000000 
 59027 0700 00000000 		.quad	.LBB3576
 59027      00000000 
 59028 0708 00000000 		.quad	.LBE3576
 59028      00000000 
 59029 0710 00000000 		.quad	.LBB3577
 59029      00000000 
 59030 0718 00000000 		.quad	.LBE3577
 59030      00000000 
 59031 0720 00000000 		.quad	0
 59031      00000000 
 59032 0728 00000000 		.quad	0
 59032      00000000 
 59033 0730 00000000 		.quad	.LBB3592
 59033      00000000 
 59034 0738 00000000 		.quad	.LBE3592
 59034      00000000 
 59035 0740 00000000 		.quad	.LBB3593
 59035      00000000 
 59036 0748 00000000 		.quad	.LBE3593
 59036      00000000 
 59037 0750 00000000 		.quad	0
 59037      00000000 
 59038 0758 00000000 		.quad	0
 59038      00000000 
 59039 0760 00000000 		.quad	.LBB3608
 59039      00000000 
 59040 0768 00000000 		.quad	.LBE3608
 59040      00000000 
 59041 0770 00000000 		.quad	.LBB3609
 59041      00000000 
 59042 0778 00000000 		.quad	.LBE3609
 59042      00000000 
 59043 0780 00000000 		.quad	0
 59043      00000000 
 59044 0788 00000000 		.quad	0
 59044      00000000 
 59045 0790 00000000 		.quad	.LBB3624
 59045      00000000 
 59046 0798 00000000 		.quad	.LBE3624
 59046      00000000 
 59047 07a0 00000000 		.quad	.LBB3625
 59047      00000000 
 59048 07a8 00000000 		.quad	.LBE3625
 59048      00000000 
 59049 07b0 00000000 		.quad	0
 59049      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1438


 59050 07b8 00000000 		.quad	0
 59050      00000000 
 59051 07c0 00000000 		.quad	.LBB3661
 59051      00000000 
 59052 07c8 00000000 		.quad	.LBE3661
 59052      00000000 
 59053 07d0 00000000 		.quad	.LBB3888
 59053      00000000 
 59054 07d8 00000000 		.quad	.LBE3888
 59054      00000000 
 59055 07e0 00000000 		.quad	0
 59055      00000000 
 59056 07e8 00000000 		.quad	0
 59056      00000000 
 59057 07f0 00000000 		.quad	.LBB3662
 59057      00000000 
 59058 07f8 00000000 		.quad	.LBE3662
 59058      00000000 
 59059 0800 00000000 		.quad	.LBB3686
 59059      00000000 
 59060 0808 00000000 		.quad	.LBE3686
 59060      00000000 
 59061 0810 00000000 		.quad	.LBB3687
 59061      00000000 
 59062 0818 00000000 		.quad	.LBE3687
 59062      00000000 
 59063 0820 00000000 		.quad	0
 59063      00000000 
 59064 0828 00000000 		.quad	0
 59064      00000000 
 59065 0830 00000000 		.quad	.LBB3663
 59065      00000000 
 59066 0838 00000000 		.quad	.LBE3663
 59066      00000000 
 59067 0840 00000000 		.quad	.LBB3682
 59067      00000000 
 59068 0848 00000000 		.quad	.LBE3682
 59068      00000000 
 59069 0850 00000000 		.quad	.LBB3683
 59069      00000000 
 59070 0858 00000000 		.quad	.LBE3683
 59070      00000000 
 59071 0860 00000000 		.quad	0
 59071      00000000 
 59072 0868 00000000 		.quad	0
 59072      00000000 
 59073 0870 00000000 		.quad	.LBB3666
 59073      00000000 
 59074 0878 00000000 		.quad	.LBE3666
 59074      00000000 
 59075 0880 00000000 		.quad	.LBB3680
 59075      00000000 
 59076 0888 00000000 		.quad	.LBE3680
 59076      00000000 
 59077 0890 00000000 		.quad	.LBB3681
 59077      00000000 
 59078 0898 00000000 		.quad	.LBE3681
GAS LISTING /tmp/ccJUMvuF.s 			page 1439


 59078      00000000 
 59079 08a0 00000000 		.quad	0
 59079      00000000 
 59080 08a8 00000000 		.quad	0
 59080      00000000 
 59081 08b0 00000000 		.quad	.LBB3668
 59081      00000000 
 59082 08b8 00000000 		.quad	.LBE3668
 59082      00000000 
 59083 08c0 00000000 		.quad	.LBB3677
 59083      00000000 
 59084 08c8 00000000 		.quad	.LBE3677
 59084      00000000 
 59085 08d0 00000000 		.quad	0
 59085      00000000 
 59086 08d8 00000000 		.quad	0
 59086      00000000 
 59087 08e0 00000000 		.quad	.LBB3690
 59087      00000000 
 59088 08e8 00000000 		.quad	.LBE3690
 59088      00000000 
 59089 08f0 00000000 		.quad	.LBB3850
 59089      00000000 
 59090 08f8 00000000 		.quad	.LBE3850
 59090      00000000 
 59091 0900 00000000 		.quad	0
 59091      00000000 
 59092 0908 00000000 		.quad	0
 59092      00000000 
 59093 0910 00000000 		.quad	.LBB3696
 59093      00000000 
 59094 0918 00000000 		.quad	.LBE3696
 59094      00000000 
 59095 0920 00000000 		.quad	.LBB3709
 59095      00000000 
 59096 0928 00000000 		.quad	.LBE3709
 59096      00000000 
 59097 0930 00000000 		.quad	0
 59097      00000000 
 59098 0938 00000000 		.quad	0
 59098      00000000 
 59099 0940 00000000 		.quad	.LBB3700
 59099      00000000 
 59100 0948 00000000 		.quad	.LBE3700
 59100      00000000 
 59101 0950 00000000 		.quad	.LBB3707
 59101      00000000 
 59102 0958 00000000 		.quad	.LBE3707
 59102      00000000 
 59103 0960 00000000 		.quad	0
 59103      00000000 
 59104 0968 00000000 		.quad	0
 59104      00000000 
 59105 0970 00000000 		.quad	.LBB3716
 59105      00000000 
 59106 0978 00000000 		.quad	.LBE3716
 59106      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1440


 59107 0980 00000000 		.quad	.LBB3738
 59107      00000000 
 59108 0988 00000000 		.quad	.LBE3738
 59108      00000000 
 59109 0990 00000000 		.quad	0
 59109      00000000 
 59110 0998 00000000 		.quad	0
 59110      00000000 
 59111 09a0 00000000 		.quad	.LBB3721
 59111      00000000 
 59112 09a8 00000000 		.quad	.LBE3721
 59112      00000000 
 59113 09b0 00000000 		.quad	.LBB3739
 59113      00000000 
 59114 09b8 00000000 		.quad	.LBE3739
 59114      00000000 
 59115 09c0 00000000 		.quad	0
 59115      00000000 
 59116 09c8 00000000 		.quad	0
 59116      00000000 
 59117 09d0 00000000 		.quad	.LBB3723
 59117      00000000 
 59118 09d8 00000000 		.quad	.LBE3723
 59118      00000000 
 59119 09e0 00000000 		.quad	.LBB3732
 59119      00000000 
 59120 09e8 00000000 		.quad	.LBE3732
 59120      00000000 
 59121 09f0 00000000 		.quad	.LBB3733
 59121      00000000 
 59122 09f8 00000000 		.quad	.LBE3733
 59122      00000000 
 59123 0a00 00000000 		.quad	.LBB3734
 59123      00000000 
 59124 0a08 00000000 		.quad	.LBE3734
 59124      00000000 
 59125 0a10 00000000 		.quad	0
 59125      00000000 
 59126 0a18 00000000 		.quad	0
 59126      00000000 
 59127 0a20 00000000 		.quad	.LBB3742
 59127      00000000 
 59128 0a28 00000000 		.quad	.LBE3742
 59128      00000000 
 59129 0a30 00000000 		.quad	.LBB3748
 59129      00000000 
 59130 0a38 00000000 		.quad	.LBE3748
 59130      00000000 
 59131 0a40 00000000 		.quad	0
 59131      00000000 
 59132 0a48 00000000 		.quad	0
 59132      00000000 
 59133 0a50 00000000 		.quad	.LBB3745
 59133      00000000 
 59134 0a58 00000000 		.quad	.LBE3745
 59134      00000000 
 59135 0a60 00000000 		.quad	.LBB3749
GAS LISTING /tmp/ccJUMvuF.s 			page 1441


 59135      00000000 
 59136 0a68 00000000 		.quad	.LBE3749
 59136      00000000 
 59137 0a70 00000000 		.quad	0
 59137      00000000 
 59138 0a78 00000000 		.quad	0
 59138      00000000 
 59139 0a80 00000000 		.quad	.LBB3753
 59139      00000000 
 59140 0a88 00000000 		.quad	.LBE3753
 59140      00000000 
 59141 0a90 00000000 		.quad	.LBB3849
 59141      00000000 
 59142 0a98 00000000 		.quad	.LBE3849
 59142      00000000 
 59143 0aa0 00000000 		.quad	.LBB3886
 59143      00000000 
 59144 0aa8 00000000 		.quad	.LBE3886
 59144      00000000 
 59145 0ab0 00000000 		.quad	0
 59145      00000000 
 59146 0ab8 00000000 		.quad	0
 59146      00000000 
 59147 0ac0 00000000 		.quad	.LBB3754
 59147      00000000 
 59148 0ac8 00000000 		.quad	.LBE3754
 59148      00000000 
 59149 0ad0 00000000 		.quad	.LBB3786
 59149      00000000 
 59150 0ad8 00000000 		.quad	.LBE3786
 59150      00000000 
 59151 0ae0 00000000 		.quad	0
 59151      00000000 
 59152 0ae8 00000000 		.quad	0
 59152      00000000 
 59153 0af0 00000000 		.quad	.LBB3757
 59153      00000000 
 59154 0af8 00000000 		.quad	.LBE3757
 59154      00000000 
 59155 0b00 00000000 		.quad	.LBB3785
 59155      00000000 
 59156 0b08 00000000 		.quad	.LBE3785
 59156      00000000 
 59157 0b10 00000000 		.quad	.LBB3787
 59157      00000000 
 59158 0b18 00000000 		.quad	.LBE3787
 59158      00000000 
 59159 0b20 00000000 		.quad	0
 59159      00000000 
 59160 0b28 00000000 		.quad	0
 59160      00000000 
 59161 0b30 00000000 		.quad	.LBB3761
 59161      00000000 
 59162 0b38 00000000 		.quad	.LBE3761
 59162      00000000 
 59163 0b40 00000000 		.quad	.LBB3771
 59163      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1442


 59164 0b48 00000000 		.quad	.LBE3771
 59164      00000000 
 59165 0b50 00000000 		.quad	.LBB3772
 59165      00000000 
 59166 0b58 00000000 		.quad	.LBE3772
 59166      00000000 
 59167 0b60 00000000 		.quad	0
 59167      00000000 
 59168 0b68 00000000 		.quad	0
 59168      00000000 
 59169 0b70 00000000 		.quad	.LBB3790
 59169      00000000 
 59170 0b78 00000000 		.quad	.LBE3790
 59170      00000000 
 59171 0b80 00000000 		.quad	.LBB3799
 59171      00000000 
 59172 0b88 00000000 		.quad	.LBE3799
 59172      00000000 
 59173 0b90 00000000 		.quad	0
 59173      00000000 
 59174 0b98 00000000 		.quad	0
 59174      00000000 
 59175 0ba0 00000000 		.quad	.LBB3793
 59175      00000000 
 59176 0ba8 00000000 		.quad	.LBE3793
 59176      00000000 
 59177 0bb0 00000000 		.quad	.LBB3796
 59177      00000000 
 59178 0bb8 00000000 		.quad	.LBE3796
 59178      00000000 
 59179 0bc0 00000000 		.quad	0
 59179      00000000 
 59180 0bc8 00000000 		.quad	0
 59180      00000000 
 59181 0bd0 00000000 		.quad	.LBB3800
 59181      00000000 
 59182 0bd8 00000000 		.quad	.LBE3800
 59182      00000000 
 59183 0be0 00000000 		.quad	.LBB3845
 59183      00000000 
 59184 0be8 00000000 		.quad	.LBE3845
 59184      00000000 
 59185 0bf0 00000000 		.quad	.LBB3846
 59185      00000000 
 59186 0bf8 00000000 		.quad	.LBE3846
 59186      00000000 
 59187 0c00 00000000 		.quad	0
 59187      00000000 
 59188 0c08 00000000 		.quad	0
 59188      00000000 
 59189 0c10 00000000 		.quad	.LBB3802
 59189      00000000 
 59190 0c18 00000000 		.quad	.LBE3802
 59190      00000000 
 59191 0c20 00000000 		.quad	.LBB3805
 59191      00000000 
 59192 0c28 00000000 		.quad	.LBE3805
GAS LISTING /tmp/ccJUMvuF.s 			page 1443


 59192      00000000 
 59193 0c30 00000000 		.quad	0
 59193      00000000 
 59194 0c38 00000000 		.quad	0
 59194      00000000 
 59195 0c40 00000000 		.quad	.LBB3806
 59195      00000000 
 59196 0c48 00000000 		.quad	.LBE3806
 59196      00000000 
 59197 0c50 00000000 		.quad	.LBB3810
 59197      00000000 
 59198 0c58 00000000 		.quad	.LBE3810
 59198      00000000 
 59199 0c60 00000000 		.quad	.LBB3814
 59199      00000000 
 59200 0c68 00000000 		.quad	.LBE3814
 59200      00000000 
 59201 0c70 00000000 		.quad	0
 59201      00000000 
 59202 0c78 00000000 		.quad	0
 59202      00000000 
 59203 0c80 00000000 		.quad	.LBB3811
 59203      00000000 
 59204 0c88 00000000 		.quad	.LBE3811
 59204      00000000 
 59205 0c90 00000000 		.quad	.LBB3815
 59205      00000000 
 59206 0c98 00000000 		.quad	.LBE3815
 59206      00000000 
 59207 0ca0 00000000 		.quad	0
 59207      00000000 
 59208 0ca8 00000000 		.quad	0
 59208      00000000 
 59209 0cb0 00000000 		.quad	.LBB3816
 59209      00000000 
 59210 0cb8 00000000 		.quad	.LBE3816
 59210      00000000 
 59211 0cc0 00000000 		.quad	.LBB3841
 59211      00000000 
 59212 0cc8 00000000 		.quad	.LBE3841
 59212      00000000 
 59213 0cd0 00000000 		.quad	.LBB3842
 59213      00000000 
 59214 0cd8 00000000 		.quad	.LBE3842
 59214      00000000 
 59215 0ce0 00000000 		.quad	0
 59215      00000000 
 59216 0ce8 00000000 		.quad	0
 59216      00000000 
 59217 0cf0 00000000 		.quad	.LBB3819
 59217      00000000 
 59218 0cf8 00000000 		.quad	.LBE3819
 59218      00000000 
 59219 0d00 00000000 		.quad	.LBB3835
 59219      00000000 
 59220 0d08 00000000 		.quad	.LBE3835
 59220      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1444


 59221 0d10 00000000 		.quad	.LBB3836
 59221      00000000 
 59222 0d18 00000000 		.quad	.LBE3836
 59222      00000000 
 59223 0d20 00000000 		.quad	0
 59223      00000000 
 59224 0d28 00000000 		.quad	0
 59224      00000000 
 59225 0d30 00000000 		.quad	.LBB3821
 59225      00000000 
 59226 0d38 00000000 		.quad	.LBE3821
 59226      00000000 
 59227 0d40 00000000 		.quad	.LBB3830
 59227      00000000 
 59228 0d48 00000000 		.quad	.LBE3830
 59228      00000000 
 59229 0d50 00000000 		.quad	0
 59229      00000000 
 59230 0d58 00000000 		.quad	0
 59230      00000000 
 59231 0d60 00000000 		.quad	.LBB3824
 59231      00000000 
 59232 0d68 00000000 		.quad	.LBE3824
 59232      00000000 
 59233 0d70 00000000 		.quad	.LBB3829
 59233      00000000 
 59234 0d78 00000000 		.quad	.LBE3829
 59234      00000000 
 59235 0d80 00000000 		.quad	0
 59235      00000000 
 59236 0d88 00000000 		.quad	0
 59236      00000000 
 59237 0d90 00000000 		.quad	.LBB3861
 59237      00000000 
 59238 0d98 00000000 		.quad	.LBE3861
 59238      00000000 
 59239 0da0 00000000 		.quad	.LBB3887
 59239      00000000 
 59240 0da8 00000000 		.quad	.LBE3887
 59240      00000000 
 59241 0db0 00000000 		.quad	0
 59241      00000000 
 59242 0db8 00000000 		.quad	0
 59242      00000000 
 59243 0dc0 00000000 		.quad	.LBB3867
 59243      00000000 
 59244 0dc8 00000000 		.quad	.LBE3867
 59244      00000000 
 59245 0dd0 00000000 		.quad	.LBB3884
 59245      00000000 
 59246 0dd8 00000000 		.quad	.LBE3884
 59246      00000000 
 59247 0de0 00000000 		.quad	0
 59247      00000000 
 59248 0de8 00000000 		.quad	0
 59248      00000000 
 59249 0df0 00000000 		.quad	.LBB3869
GAS LISTING /tmp/ccJUMvuF.s 			page 1445


 59249      00000000 
 59250 0df8 00000000 		.quad	.LBE3869
 59250      00000000 
 59251 0e00 00000000 		.quad	.LBB3882
 59251      00000000 
 59252 0e08 00000000 		.quad	.LBE3882
 59252      00000000 
 59253 0e10 00000000 		.quad	0
 59253      00000000 
 59254 0e18 00000000 		.quad	0
 59254      00000000 
 59255 0e20 00000000 		.quad	.LBB3871
 59255      00000000 
 59256 0e28 00000000 		.quad	.LBE3871
 59256      00000000 
 59257 0e30 00000000 		.quad	.LBB3879
 59257      00000000 
 59258 0e38 00000000 		.quad	.LBE3879
 59258      00000000 
 59259 0e40 00000000 		.quad	.LBB3880
 59259      00000000 
 59260 0e48 00000000 		.quad	.LBE3880
 59260      00000000 
 59261 0e50 00000000 		.quad	0
 59261      00000000 
 59262 0e58 00000000 		.quad	0
 59262      00000000 
 59263 0e60 00000000 		.quad	.LBB3892
 59263      00000000 
 59264 0e68 00000000 		.quad	.LBE3892
 59264      00000000 
 59265 0e70 00000000 		.quad	.LBB3897
 59265      00000000 
 59266 0e78 00000000 		.quad	.LBE3897
 59266      00000000 
 59267 0e80 00000000 		.quad	0
 59267      00000000 
 59268 0e88 00000000 		.quad	0
 59268      00000000 
 59269 0e90 00000000 		.quad	.LBB3900
 59269      00000000 
 59270 0e98 00000000 		.quad	.LBE3900
 59270      00000000 
 59271 0ea0 00000000 		.quad	.LBB3905
 59271      00000000 
 59272 0ea8 00000000 		.quad	.LBE3905
 59272      00000000 
 59273 0eb0 00000000 		.quad	0
 59273      00000000 
 59274 0eb8 00000000 		.quad	0
 59274      00000000 
 59275 0ec0 00000000 		.quad	.LBB3909
 59275      00000000 
 59276 0ec8 00000000 		.quad	.LBE3909
 59276      00000000 
 59277 0ed0 00000000 		.quad	.LBB3913
 59277      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1446


 59278 0ed8 00000000 		.quad	.LBE3913
 59278      00000000 
 59279 0ee0 00000000 		.quad	.LBB4001
 59279      00000000 
 59280 0ee8 00000000 		.quad	.LBE4001
 59280      00000000 
 59281 0ef0 00000000 		.quad	0
 59281      00000000 
 59282 0ef8 00000000 		.quad	0
 59282      00000000 
 59283 0f00 00000000 		.quad	.LBB3914
 59283      00000000 
 59284 0f08 00000000 		.quad	.LBE3914
 59284      00000000 
 59285 0f10 00000000 		.quad	.LBB4002
 59285      00000000 
 59286 0f18 00000000 		.quad	.LBE4002
 59286      00000000 
 59287 0f20 00000000 		.quad	0
 59287      00000000 
 59288 0f28 00000000 		.quad	0
 59288      00000000 
 59289 0f30 00000000 		.quad	.LBB3915
 59289      00000000 
 59290 0f38 00000000 		.quad	.LBE3915
 59290      00000000 
 59291 0f40 00000000 		.quad	.LBB3975
 59291      00000000 
 59292 0f48 00000000 		.quad	.LBE3975
 59292      00000000 
 59293 0f50 00000000 		.quad	.LBB3976
 59293      00000000 
 59294 0f58 00000000 		.quad	.LBE3976
 59294      00000000 
 59295 0f60 00000000 		.quad	.LBB3977
 59295      00000000 
 59296 0f68 00000000 		.quad	.LBE3977
 59296      00000000 
 59297 0f70 00000000 		.quad	0
 59297      00000000 
 59298 0f78 00000000 		.quad	0
 59298      00000000 
 59299 0f80 00000000 		.quad	.LBB3917
 59299      00000000 
 59300 0f88 00000000 		.quad	.LBE3917
 59300      00000000 
 59301 0f90 00000000 		.quad	.LBB3940
 59301      00000000 
 59302 0f98 00000000 		.quad	.LBE3940
 59302      00000000 
 59303 0fa0 00000000 		.quad	0
 59303      00000000 
 59304 0fa8 00000000 		.quad	0
 59304      00000000 
 59305 0fb0 00000000 		.quad	.LBB3920
 59305      00000000 
 59306 0fb8 00000000 		.quad	.LBE3920
GAS LISTING /tmp/ccJUMvuF.s 			page 1447


 59306      00000000 
 59307 0fc0 00000000 		.quad	.LBB3941
 59307      00000000 
 59308 0fc8 00000000 		.quad	.LBE3941
 59308      00000000 
 59309 0fd0 00000000 		.quad	.LBB3944
 59309      00000000 
 59310 0fd8 00000000 		.quad	.LBE3944
 59310      00000000 
 59311 0fe0 00000000 		.quad	.LBB3971
 59311      00000000 
 59312 0fe8 00000000 		.quad	.LBE3971
 59312      00000000 
 59313 0ff0 00000000 		.quad	0
 59313      00000000 
 59314 0ff8 00000000 		.quad	0
 59314      00000000 
 59315 1000 00000000 		.quad	.LBB3922
 59315      00000000 
 59316 1008 00000000 		.quad	.LBE3922
 59316      00000000 
 59317 1010 00000000 		.quad	.LBB3927
 59317      00000000 
 59318 1018 00000000 		.quad	.LBE3927
 59318      00000000 
 59319 1020 00000000 		.quad	0
 59319      00000000 
 59320 1028 00000000 		.quad	0
 59320      00000000 
 59321 1030 00000000 		.quad	.LBB3945
 59321      00000000 
 59322 1038 00000000 		.quad	.LBE3945
 59322      00000000 
 59323 1040 00000000 		.quad	.LBB3970
 59323      00000000 
 59324 1048 00000000 		.quad	.LBE3970
 59324      00000000 
 59325 1050 00000000 		.quad	0
 59325      00000000 
 59326 1058 00000000 		.quad	0
 59326      00000000 
 59327 1060 00000000 		.quad	.LBB3951
 59327      00000000 
 59328 1068 00000000 		.quad	.LBE3951
 59328      00000000 
 59329 1070 00000000 		.quad	.LBB3967
 59329      00000000 
 59330 1078 00000000 		.quad	.LBE3967
 59330      00000000 
 59331 1080 00000000 		.quad	.LBB3968
 59331      00000000 
 59332 1088 00000000 		.quad	.LBE3968
 59332      00000000 
 59333 1090 00000000 		.quad	0
 59333      00000000 
 59334 1098 00000000 		.quad	0
 59334      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1448


 59335 10a0 00000000 		.quad	.LBB3959
 59335      00000000 
 59336 10a8 00000000 		.quad	.LBE3959
 59336      00000000 
 59337 10b0 00000000 		.quad	.LBB3966
 59337      00000000 
 59338 10b8 00000000 		.quad	.LBE3966
 59338      00000000 
 59339 10c0 00000000 		.quad	0
 59339      00000000 
 59340 10c8 00000000 		.quad	0
 59340      00000000 
 59341 10d0 00000000 		.quad	.LBB3982
 59341      00000000 
 59342 10d8 00000000 		.quad	.LBE3982
 59342      00000000 
 59343 10e0 00000000 		.quad	.LBB3985
 59343      00000000 
 59344 10e8 00000000 		.quad	.LBE3985
 59344      00000000 
 59345 10f0 00000000 		.quad	0
 59345      00000000 
 59346 10f8 00000000 		.quad	0
 59346      00000000 
 59347 1100 00000000 		.quad	.LBB3993
 59347      00000000 
 59348 1108 00000000 		.quad	.LBE3993
 59348      00000000 
 59349 1110 00000000 		.quad	.LBB3998
 59349      00000000 
 59350 1118 00000000 		.quad	.LBE3998
 59350      00000000 
 59351 1120 00000000 		.quad	.LBB3999
 59351      00000000 
 59352 1128 00000000 		.quad	.LBE3999
 59352      00000000 
 59353 1130 00000000 		.quad	.LBB4000
 59353      00000000 
 59354 1138 00000000 		.quad	.LBE4000
 59354      00000000 
 59355 1140 00000000 		.quad	0
 59355      00000000 
 59356 1148 00000000 		.quad	0
 59356      00000000 
 59357 1150 00000000 		.quad	.LBB4005
 59357      00000000 
 59358 1158 00000000 		.quad	.LBE4005
 59358      00000000 
 59359 1160 00000000 		.quad	.LBB4210
 59359      00000000 
 59360 1168 00000000 		.quad	.LBE4210
 59360      00000000 
 59361 1170 00000000 		.quad	.LBB4211
 59361      00000000 
 59362 1178 00000000 		.quad	.LBE4211
 59362      00000000 
 59363 1180 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1449


 59363      00000000 
 59364 1188 00000000 		.quad	0
 59364      00000000 
 59365 1190 00000000 		.quad	.LBB4016
 59365      00000000 
 59366 1198 00000000 		.quad	.LBE4016
 59366      00000000 
 59367 11a0 00000000 		.quad	.LBB4109
 59367      00000000 
 59368 11a8 00000000 		.quad	.LBE4109
 59368      00000000 
 59369 11b0 00000000 		.quad	.LBB4193
 59369      00000000 
 59370 11b8 00000000 		.quad	.LBE4193
 59370      00000000 
 59371 11c0 00000000 		.quad	.LBB4195
 59371      00000000 
 59372 11c8 00000000 		.quad	.LBE4195
 59372      00000000 
 59373 11d0 00000000 		.quad	0
 59373      00000000 
 59374 11d8 00000000 		.quad	0
 59374      00000000 
 59375 11e0 00000000 		.quad	.LBB4019
 59375      00000000 
 59376 11e8 00000000 		.quad	.LBE4019
 59376      00000000 
 59377 11f0 00000000 		.quad	.LBB4022
 59377      00000000 
 59378 11f8 00000000 		.quad	.LBE4022
 59378      00000000 
 59379 1200 00000000 		.quad	0
 59379      00000000 
 59380 1208 00000000 		.quad	0
 59380      00000000 
 59381 1210 00000000 		.quad	.LBB4023
 59381      00000000 
 59382 1218 00000000 		.quad	.LBE4023
 59382      00000000 
 59383 1220 00000000 		.quad	.LBB4101
 59383      00000000 
 59384 1228 00000000 		.quad	.LBE4101
 59384      00000000 
 59385 1230 00000000 		.quad	.LBB4102
 59385      00000000 
 59386 1238 00000000 		.quad	.LBE4102
 59386      00000000 
 59387 1240 00000000 		.quad	0
 59387      00000000 
 59388 1248 00000000 		.quad	0
 59388      00000000 
 59389 1250 00000000 		.quad	.LBB4025
 59389      00000000 
 59390 1258 00000000 		.quad	.LBE4025
 59390      00000000 
 59391 1260 00000000 		.quad	.LBB4095
 59391      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1450


 59392 1268 00000000 		.quad	.LBE4095
 59392      00000000 
 59393 1270 00000000 		.quad	.LBB4098
 59393      00000000 
 59394 1278 00000000 		.quad	.LBE4098
 59394      00000000 
 59395 1280 00000000 		.quad	0
 59395      00000000 
 59396 1288 00000000 		.quad	0
 59396      00000000 
 59397 1290 00000000 		.quad	.LBB4032
 59397      00000000 
 59398 1298 00000000 		.quad	.LBE4032
 59398      00000000 
 59399 12a0 00000000 		.quad	.LBB4048
 59399      00000000 
 59400 12a8 00000000 		.quad	.LBE4048
 59400      00000000 
 59401 12b0 00000000 		.quad	0
 59401      00000000 
 59402 12b8 00000000 		.quad	0
 59402      00000000 
 59403 12c0 00000000 		.quad	.LBB4034
 59403      00000000 
 59404 12c8 00000000 		.quad	.LBE4034
 59404      00000000 
 59405 12d0 00000000 		.quad	.LBB4039
 59405      00000000 
 59406 12d8 00000000 		.quad	.LBE4039
 59406      00000000 
 59407 12e0 00000000 		.quad	0
 59407      00000000 
 59408 12e8 00000000 		.quad	0
 59408      00000000 
 59409 12f0 00000000 		.quad	.LBB4053
 59409      00000000 
 59410 12f8 00000000 		.quad	.LBE4053
 59410      00000000 
 59411 1300 00000000 		.quad	.LBB4096
 59411      00000000 
 59412 1308 00000000 		.quad	.LBE4096
 59412      00000000 
 59413 1310 00000000 		.quad	0
 59413      00000000 
 59414 1318 00000000 		.quad	0
 59414      00000000 
 59415 1320 00000000 		.quad	.LBB4055
 59415      00000000 
 59416 1328 00000000 		.quad	.LBE4055
 59416      00000000 
 59417 1330 00000000 		.quad	.LBB4065
 59417      00000000 
 59418 1338 00000000 		.quad	.LBE4065
 59418      00000000 
 59419 1340 00000000 		.quad	.LBB4066
 59419      00000000 
 59420 1348 00000000 		.quad	.LBE4066
GAS LISTING /tmp/ccJUMvuF.s 			page 1451


 59420      00000000 
 59421 1350 00000000 		.quad	0
 59421      00000000 
 59422 1358 00000000 		.quad	0
 59422      00000000 
 59423 1360 00000000 		.quad	.LBB4057
 59423      00000000 
 59424 1368 00000000 		.quad	.LBE4057
 59424      00000000 
 59425 1370 00000000 		.quad	.LBB4062
 59425      00000000 
 59426 1378 00000000 		.quad	.LBE4062
 59426      00000000 
 59427 1380 00000000 		.quad	0
 59427      00000000 
 59428 1388 00000000 		.quad	0
 59428      00000000 
 59429 1390 00000000 		.quad	.LBB4068
 59429      00000000 
 59430 1398 00000000 		.quad	.LBE4068
 59430      00000000 
 59431 13a0 00000000 		.quad	.LBB4097
 59431      00000000 
 59432 13a8 00000000 		.quad	.LBE4097
 59432      00000000 
 59433 13b0 00000000 		.quad	0
 59433      00000000 
 59434 13b8 00000000 		.quad	0
 59434      00000000 
 59435 13c0 00000000 		.quad	.LBB4075
 59435      00000000 
 59436 13c8 00000000 		.quad	.LBE4075
 59436      00000000 
 59437 13d0 00000000 		.quad	.LBB4091
 59437      00000000 
 59438 13d8 00000000 		.quad	.LBE4091
 59438      00000000 
 59439 13e0 00000000 		.quad	0
 59439      00000000 
 59440 13e8 00000000 		.quad	0
 59440      00000000 
 59441 13f0 00000000 		.quad	.LBB4077
 59441      00000000 
 59442 13f8 00000000 		.quad	.LBE4077
 59442      00000000 
 59443 1400 00000000 		.quad	.LBB4082
 59443      00000000 
 59444 1408 00000000 		.quad	.LBE4082
 59444      00000000 
 59445 1410 00000000 		.quad	0
 59445      00000000 
 59446 1418 00000000 		.quad	0
 59446      00000000 
 59447 1420 00000000 		.quad	.LBB4110
 59447      00000000 
 59448 1428 00000000 		.quad	.LBE4110
 59448      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1452


 59449 1430 00000000 		.quad	.LBB4115
 59449      00000000 
 59450 1438 00000000 		.quad	.LBE4115
 59450      00000000 
 59451 1440 00000000 		.quad	.LBB4116
 59451      00000000 
 59452 1448 00000000 		.quad	.LBE4116
 59452      00000000 
 59453 1450 00000000 		.quad	.LBB4117
 59453      00000000 
 59454 1458 00000000 		.quad	.LBE4117
 59454      00000000 
 59455 1460 00000000 		.quad	0
 59455      00000000 
 59456 1468 00000000 		.quad	0
 59456      00000000 
 59457 1470 00000000 		.quad	.LBB4118
 59457      00000000 
 59458 1478 00000000 		.quad	.LBE4118
 59458      00000000 
 59459 1480 00000000 		.quad	.LBB4136
 59459      00000000 
 59460 1488 00000000 		.quad	.LBE4136
 59460      00000000 
 59461 1490 00000000 		.quad	.LBB4137
 59461      00000000 
 59462 1498 00000000 		.quad	.LBE4137
 59462      00000000 
 59463 14a0 00000000 		.quad	0
 59463      00000000 
 59464 14a8 00000000 		.quad	0
 59464      00000000 
 59465 14b0 00000000 		.quad	.LBB4132
 59465      00000000 
 59466 14b8 00000000 		.quad	.LBE4132
 59466      00000000 
 59467 14c0 00000000 		.quad	.LBB4138
 59467      00000000 
 59468 14c8 00000000 		.quad	.LBE4138
 59468      00000000 
 59469 14d0 00000000 		.quad	.LBB4142
 59469      00000000 
 59470 14d8 00000000 		.quad	.LBE4142
 59470      00000000 
 59471 14e0 00000000 		.quad	0
 59471      00000000 
 59472 14e8 00000000 		.quad	0
 59472      00000000 
 59473 14f0 00000000 		.quad	.LBB4139
 59473      00000000 
 59474 14f8 00000000 		.quad	.LBE4139
 59474      00000000 
 59475 1500 00000000 		.quad	.LBB4143
 59475      00000000 
 59476 1508 00000000 		.quad	.LBE4143
 59476      00000000 
 59477 1510 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1453


 59477      00000000 
 59478 1518 00000000 		.quad	0
 59478      00000000 
 59479 1520 00000000 		.quad	.LBB4144
 59479      00000000 
 59480 1528 00000000 		.quad	.LBE4144
 59480      00000000 
 59481 1530 00000000 		.quad	.LBB4148
 59481      00000000 
 59482 1538 00000000 		.quad	.LBE4148
 59482      00000000 
 59483 1540 00000000 		.quad	.LBB4152
 59483      00000000 
 59484 1548 00000000 		.quad	.LBE4152
 59484      00000000 
 59485 1550 00000000 		.quad	0
 59485      00000000 
 59486 1558 00000000 		.quad	0
 59486      00000000 
 59487 1560 00000000 		.quad	.LBB4149
 59487      00000000 
 59488 1568 00000000 		.quad	.LBE4149
 59488      00000000 
 59489 1570 00000000 		.quad	.LBB4153
 59489      00000000 
 59490 1578 00000000 		.quad	.LBE4153
 59490      00000000 
 59491 1580 00000000 		.quad	0
 59491      00000000 
 59492 1588 00000000 		.quad	0
 59492      00000000 
 59493 1590 00000000 		.quad	.LBB4154
 59493      00000000 
 59494 1598 00000000 		.quad	.LBE4154
 59494      00000000 
 59495 15a0 00000000 		.quad	.LBB4194
 59495      00000000 
 59496 15a8 00000000 		.quad	.LBE4194
 59496      00000000 
 59497 15b0 00000000 		.quad	.LBB4196
 59497      00000000 
 59498 15b8 00000000 		.quad	.LBE4196
 59498      00000000 
 59499 15c0 00000000 		.quad	0
 59499      00000000 
 59500 15c8 00000000 		.quad	0
 59500      00000000 
 59501 15d0 00000000 		.quad	.LBB4157
 59501      00000000 
 59502 15d8 00000000 		.quad	.LBE4157
 59502      00000000 
 59503 15e0 00000000 		.quad	.LBB4173
 59503      00000000 
 59504 15e8 00000000 		.quad	.LBE4173
 59504      00000000 
 59505 15f0 00000000 		.quad	.LBB4174
 59505      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1454


 59506 15f8 00000000 		.quad	.LBE4174
 59506      00000000 
 59507 1600 00000000 		.quad	0
 59507      00000000 
 59508 1608 00000000 		.quad	0
 59508      00000000 
 59509 1610 00000000 		.quad	.LBB4159
 59509      00000000 
 59510 1618 00000000 		.quad	.LBE4159
 59510      00000000 
 59511 1620 00000000 		.quad	.LBB4168
 59511      00000000 
 59512 1628 00000000 		.quad	.LBE4168
 59512      00000000 
 59513 1630 00000000 		.quad	0
 59513      00000000 
 59514 1638 00000000 		.quad	0
 59514      00000000 
 59515 1640 00000000 		.quad	.LBB4162
 59515      00000000 
 59516 1648 00000000 		.quad	.LBE4162
 59516      00000000 
 59517 1650 00000000 		.quad	.LBB4167
 59517      00000000 
 59518 1658 00000000 		.quad	.LBE4167
 59518      00000000 
 59519 1660 00000000 		.quad	0
 59519      00000000 
 59520 1668 00000000 		.quad	0
 59520      00000000 
 59521 1670 00000000 		.quad	.LBB4181
 59521      00000000 
 59522 1678 00000000 		.quad	.LBE4181
 59522      00000000 
 59523 1680 00000000 		.quad	.LBB4187
 59523      00000000 
 59524 1688 00000000 		.quad	.LBE4187
 59524      00000000 
 59525 1690 00000000 		.quad	0
 59525      00000000 
 59526 1698 00000000 		.quad	0
 59526      00000000 
 59527 16a0 00000000 		.quad	.LBB4184
 59527      00000000 
 59528 16a8 00000000 		.quad	.LBE4184
 59528      00000000 
 59529 16b0 00000000 		.quad	.LBB4188
 59529      00000000 
 59530 16b8 00000000 		.quad	.LBE4188
 59530      00000000 
 59531 16c0 00000000 		.quad	0
 59531      00000000 
 59532 16c8 00000000 		.quad	0
 59532      00000000 
 59533 16d0 00000000 		.quad	.LBB4197
 59533      00000000 
 59534 16d8 00000000 		.quad	.LBE4197
GAS LISTING /tmp/ccJUMvuF.s 			page 1455


 59534      00000000 
 59535 16e0 00000000 		.quad	.LBB4209
 59535      00000000 
 59536 16e8 00000000 		.quad	.LBE4209
 59536      00000000 
 59537 16f0 00000000 		.quad	0
 59537      00000000 
 59538 16f8 00000000 		.quad	0
 59538      00000000 
 59539 1700 00000000 		.quad	.LBB4200
 59539      00000000 
 59540 1708 00000000 		.quad	.LBE4200
 59540      00000000 
 59541 1710 00000000 		.quad	.LBB4206
 59541      00000000 
 59542 1718 00000000 		.quad	.LBE4206
 59542      00000000 
 59543 1720 00000000 		.quad	0
 59543      00000000 
 59544 1728 00000000 		.quad	0
 59544      00000000 
 59545 1730 00000000 		.quad	.LBB4212
 59545      00000000 
 59546 1738 00000000 		.quad	.LBE4212
 59546      00000000 
 59547 1740 00000000 		.quad	.LBB4988
 59547      00000000 
 59548 1748 00000000 		.quad	.LBE4988
 59548      00000000 
 59549 1750 00000000 		.quad	.LBB4989
 59549      00000000 
 59550 1758 00000000 		.quad	.LBE4989
 59550      00000000 
 59551 1760 00000000 		.quad	0
 59551      00000000 
 59552 1768 00000000 		.quad	0
 59552      00000000 
 59553 1770 00000000 		.quad	.LBB4213
 59553      00000000 
 59554 1778 00000000 		.quad	.LBE4213
 59554      00000000 
 59555 1780 00000000 		.quad	.LBB4216
 59555      00000000 
 59556 1788 00000000 		.quad	.LBE4216
 59556      00000000 
 59557 1790 00000000 		.quad	0
 59557      00000000 
 59558 1798 00000000 		.quad	0
 59558      00000000 
 59559 17a0 00000000 		.quad	.LBB4219
 59559      00000000 
 59560 17a8 00000000 		.quad	.LBE4219
 59560      00000000 
 59561 17b0 00000000 		.quad	.LBB4982
 59561      00000000 
 59562 17b8 00000000 		.quad	.LBE4982
 59562      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1456


 59563 17c0 00000000 		.quad	.LBB4987
 59563      00000000 
 59564 17c8 00000000 		.quad	.LBE4987
 59564      00000000 
 59565 17d0 00000000 		.quad	0
 59565      00000000 
 59566 17d8 00000000 		.quad	0
 59566      00000000 
 59567 17e0 00000000 		.quad	.LBB4220
 59567      00000000 
 59568 17e8 00000000 		.quad	.LBE4220
 59568      00000000 
 59569 17f0 00000000 		.quad	.LBB4972
 59569      00000000 
 59570 17f8 00000000 		.quad	.LBE4972
 59570      00000000 
 59571 1800 00000000 		.quad	.LBB4973
 59571      00000000 
 59572 1808 00000000 		.quad	.LBE4973
 59572      00000000 
 59573 1810 00000000 		.quad	0
 59573      00000000 
 59574 1818 00000000 		.quad	0
 59574      00000000 
 59575 1820 00000000 		.quad	.LBB4223
 59575      00000000 
 59576 1828 00000000 		.quad	.LBE4223
 59576      00000000 
 59577 1830 00000000 		.quad	.LBB4255
 59577      00000000 
 59578 1838 00000000 		.quad	.LBE4255
 59578      00000000 
 59579 1840 00000000 		.quad	0
 59579      00000000 
 59580 1848 00000000 		.quad	0
 59580      00000000 
 59581 1850 00000000 		.quad	.LBB4236
 59581      00000000 
 59582 1858 00000000 		.quad	.LBE4236
 59582      00000000 
 59583 1860 00000000 		.quad	.LBB4256
 59583      00000000 
 59584 1868 00000000 		.quad	.LBE4256
 59584      00000000 
 59585 1870 00000000 		.quad	0
 59585      00000000 
 59586 1878 00000000 		.quad	0
 59586      00000000 
 59587 1880 00000000 		.quad	.LBB4265
 59587      00000000 
 59588 1888 00000000 		.quad	.LBE4265
 59588      00000000 
 59589 1890 00000000 		.quad	.LBB4271
 59589      00000000 
 59590 1898 00000000 		.quad	.LBE4271
 59590      00000000 
 59591 18a0 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1457


 59591      00000000 
 59592 18a8 00000000 		.quad	0
 59592      00000000 
 59593 18b0 00000000 		.quad	.LBB4268
 59593      00000000 
 59594 18b8 00000000 		.quad	.LBE4268
 59594      00000000 
 59595 18c0 00000000 		.quad	.LBB4272
 59595      00000000 
 59596 18c8 00000000 		.quad	.LBE4272
 59596      00000000 
 59597 18d0 00000000 		.quad	0
 59597      00000000 
 59598 18d8 00000000 		.quad	0
 59598      00000000 
 59599 18e0 00000000 		.quad	.LBB4276
 59599      00000000 
 59600 18e8 00000000 		.quad	.LBE4276
 59600      00000000 
 59601 18f0 00000000 		.quad	.LBB4910
 59601      00000000 
 59602 18f8 00000000 		.quad	.LBE4910
 59602      00000000 
 59603 1900 00000000 		.quad	.LBB4912
 59603      00000000 
 59604 1908 00000000 		.quad	.LBE4912
 59604      00000000 
 59605 1910 00000000 		.quad	.LBB4914
 59605      00000000 
 59606 1918 00000000 		.quad	.LBE4914
 59606      00000000 
 59607 1920 00000000 		.quad	.LBB4944
 59607      00000000 
 59608 1928 00000000 		.quad	.LBE4944
 59608      00000000 
 59609 1930 00000000 		.quad	.LBB4947
 59609      00000000 
 59610 1938 00000000 		.quad	.LBE4947
 59610      00000000 
 59611 1940 00000000 		.quad	.LBB4971
 59611      00000000 
 59612 1948 00000000 		.quad	.LBE4971
 59612      00000000 
 59613 1950 00000000 		.quad	0
 59613      00000000 
 59614 1958 00000000 		.quad	0
 59614      00000000 
 59615 1960 00000000 		.quad	.LBB4279
 59615      00000000 
 59616 1968 00000000 		.quad	.LBE4279
 59616      00000000 
 59617 1970 00000000 		.quad	.LBB4323
 59617      00000000 
 59618 1978 00000000 		.quad	.LBE4323
 59618      00000000 
 59619 1980 00000000 		.quad	0
 59619      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1458


 59620 1988 00000000 		.quad	0
 59620      00000000 
 59621 1990 00000000 		.quad	.LBB4280
 59621      00000000 
 59622 1998 00000000 		.quad	.LBE4280
 59622      00000000 
 59623 19a0 00000000 		.quad	.LBB4299
 59623      00000000 
 59624 19a8 00000000 		.quad	.LBE4299
 59624      00000000 
 59625 19b0 00000000 		.quad	.LBB4321
 59625      00000000 
 59626 19b8 00000000 		.quad	.LBE4321
 59626      00000000 
 59627 19c0 00000000 		.quad	0
 59627      00000000 
 59628 19c8 00000000 		.quad	0
 59628      00000000 
 59629 19d0 00000000 		.quad	.LBB4281
 59629      00000000 
 59630 19d8 00000000 		.quad	.LBE4281
 59630      00000000 
 59631 19e0 00000000 		.quad	.LBB4297
 59631      00000000 
 59632 19e8 00000000 		.quad	.LBE4297
 59632      00000000 
 59633 19f0 00000000 		.quad	.LBB4298
 59633      00000000 
 59634 19f8 00000000 		.quad	.LBE4298
 59634      00000000 
 59635 1a00 00000000 		.quad	0
 59635      00000000 
 59636 1a08 00000000 		.quad	0
 59636      00000000 
 59637 1a10 00000000 		.quad	.LBB4283
 59637      00000000 
 59638 1a18 00000000 		.quad	.LBE4283
 59638      00000000 
 59639 1a20 00000000 		.quad	.LBB4292
 59639      00000000 
 59640 1a28 00000000 		.quad	.LBE4292
 59640      00000000 
 59641 1a30 00000000 		.quad	0
 59641      00000000 
 59642 1a38 00000000 		.quad	0
 59642      00000000 
 59643 1a40 00000000 		.quad	.LBB4300
 59643      00000000 
 59644 1a48 00000000 		.quad	.LBE4300
 59644      00000000 
 59645 1a50 00000000 		.quad	.LBB4322
 59645      00000000 
 59646 1a58 00000000 		.quad	.LBE4322
 59646      00000000 
 59647 1a60 00000000 		.quad	0
 59647      00000000 
 59648 1a68 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1459


 59648      00000000 
 59649 1a70 00000000 		.quad	.LBB4302
 59649      00000000 
 59650 1a78 00000000 		.quad	.LBE4302
 59650      00000000 
 59651 1a80 00000000 		.quad	.LBB4319
 59651      00000000 
 59652 1a88 00000000 		.quad	.LBE4319
 59652      00000000 
 59653 1a90 00000000 		.quad	0
 59653      00000000 
 59654 1a98 00000000 		.quad	0
 59654      00000000 
 59655 1aa0 00000000 		.quad	.LBB4324
 59655      00000000 
 59656 1aa8 00000000 		.quad	.LBE4324
 59656      00000000 
 59657 1ab0 00000000 		.quad	.LBB4329
 59657      00000000 
 59658 1ab8 00000000 		.quad	.LBE4329
 59658      00000000 
 59659 1ac0 00000000 		.quad	0
 59659      00000000 
 59660 1ac8 00000000 		.quad	0
 59660      00000000 
 59661 1ad0 00000000 		.quad	.LBB4330
 59661      00000000 
 59662 1ad8 00000000 		.quad	.LBE4330
 59662      00000000 
 59663 1ae0 00000000 		.quad	.LBB4550
 59663      00000000 
 59664 1ae8 00000000 		.quad	.LBE4550
 59664      00000000 
 59665 1af0 00000000 		.quad	.LBB4551
 59665      00000000 
 59666 1af8 00000000 		.quad	.LBE4551
 59666      00000000 
 59667 1b00 00000000 		.quad	.LBB4552
 59667      00000000 
 59668 1b08 00000000 		.quad	.LBE4552
 59668      00000000 
 59669 1b10 00000000 		.quad	.LBB4553
 59669      00000000 
 59670 1b18 00000000 		.quad	.LBE4553
 59670      00000000 
 59671 1b20 00000000 		.quad	.LBB4554
 59671      00000000 
 59672 1b28 00000000 		.quad	.LBE4554
 59672      00000000 
 59673 1b30 00000000 		.quad	.LBB4555
 59673      00000000 
 59674 1b38 00000000 		.quad	.LBE4555
 59674      00000000 
 59675 1b40 00000000 		.quad	0
 59675      00000000 
 59676 1b48 00000000 		.quad	0
 59676      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1460


 59677 1b50 00000000 		.quad	.LBB4332
 59677      00000000 
 59678 1b58 00000000 		.quad	.LBE4332
 59678      00000000 
 59679 1b60 00000000 		.quad	.LBB4538
 59679      00000000 
 59680 1b68 00000000 		.quad	.LBE4538
 59680      00000000 
 59681 1b70 00000000 		.quad	.LBB4539
 59681      00000000 
 59682 1b78 00000000 		.quad	.LBE4539
 59682      00000000 
 59683 1b80 00000000 		.quad	.LBB4540
 59683      00000000 
 59684 1b88 00000000 		.quad	.LBE4540
 59684      00000000 
 59685 1b90 00000000 		.quad	.LBB4541
 59685      00000000 
 59686 1b98 00000000 		.quad	.LBE4541
 59686      00000000 
 59687 1ba0 00000000 		.quad	.LBB4542
 59687      00000000 
 59688 1ba8 00000000 		.quad	.LBE4542
 59688      00000000 
 59689 1bb0 00000000 		.quad	.LBB4543
 59689      00000000 
 59690 1bb8 00000000 		.quad	.LBE4543
 59690      00000000 
 59691 1bc0 00000000 		.quad	0
 59691      00000000 
 59692 1bc8 00000000 		.quad	0
 59692      00000000 
 59693 1bd0 00000000 		.quad	.LBB4335
 59693      00000000 
 59694 1bd8 00000000 		.quad	.LBE4335
 59694      00000000 
 59695 1be0 00000000 		.quad	.LBB4438
 59695      00000000 
 59696 1be8 00000000 		.quad	.LBE4438
 59696      00000000 
 59697 1bf0 00000000 		.quad	.LBB4524
 59697      00000000 
 59698 1bf8 00000000 		.quad	.LBE4524
 59698      00000000 
 59699 1c00 00000000 		.quad	.LBB4525
 59699      00000000 
 59700 1c08 00000000 		.quad	.LBE4525
 59700      00000000 
 59701 1c10 00000000 		.quad	.LBB4527
 59701      00000000 
 59702 1c18 00000000 		.quad	.LBE4527
 59702      00000000 
 59703 1c20 00000000 		.quad	.LBB4528
 59703      00000000 
 59704 1c28 00000000 		.quad	.LBE4528
 59704      00000000 
 59705 1c30 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1461


 59705      00000000 
 59706 1c38 00000000 		.quad	0
 59706      00000000 
 59707 1c40 00000000 		.quad	.LBB4338
 59707      00000000 
 59708 1c48 00000000 		.quad	.LBE4338
 59708      00000000 
 59709 1c50 00000000 		.quad	.LBB4342
 59709      00000000 
 59710 1c58 00000000 		.quad	.LBE4342
 59710      00000000 
 59711 1c60 00000000 		.quad	.LBB4343
 59711      00000000 
 59712 1c68 00000000 		.quad	.LBE4343
 59712      00000000 
 59713 1c70 00000000 		.quad	0
 59713      00000000 
 59714 1c78 00000000 		.quad	0
 59714      00000000 
 59715 1c80 00000000 		.quad	.LBB4344
 59715      00000000 
 59716 1c88 00000000 		.quad	.LBE4344
 59716      00000000 
 59717 1c90 00000000 		.quad	.LBB4424
 59717      00000000 
 59718 1c98 00000000 		.quad	.LBE4424
 59718      00000000 
 59719 1ca0 00000000 		.quad	.LBB4425
 59719      00000000 
 59720 1ca8 00000000 		.quad	.LBE4425
 59720      00000000 
 59721 1cb0 00000000 		.quad	.LBB4426
 59721      00000000 
 59722 1cb8 00000000 		.quad	.LBE4426
 59722      00000000 
 59723 1cc0 00000000 		.quad	.LBB4427
 59723      00000000 
 59724 1cc8 00000000 		.quad	.LBE4427
 59724      00000000 
 59725 1cd0 00000000 		.quad	0
 59725      00000000 
 59726 1cd8 00000000 		.quad	0
 59726      00000000 
 59727 1ce0 00000000 		.quad	.LBB4346
 59727      00000000 
 59728 1ce8 00000000 		.quad	.LBE4346
 59728      00000000 
 59729 1cf0 00000000 		.quad	.LBB4389
 59729      00000000 
 59730 1cf8 00000000 		.quad	.LBE4389
 59730      00000000 
 59731 1d00 00000000 		.quad	.LBB4419
 59731      00000000 
 59732 1d08 00000000 		.quad	.LBE4419
 59732      00000000 
 59733 1d10 00000000 		.quad	0
 59733      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1462


 59734 1d18 00000000 		.quad	0
 59734      00000000 
 59735 1d20 00000000 		.quad	.LBB4353
 59735      00000000 
 59736 1d28 00000000 		.quad	.LBE4353
 59736      00000000 
 59737 1d30 00000000 		.quad	.LBB4369
 59737      00000000 
 59738 1d38 00000000 		.quad	.LBE4369
 59738      00000000 
 59739 1d40 00000000 		.quad	0
 59739      00000000 
 59740 1d48 00000000 		.quad	0
 59740      00000000 
 59741 1d50 00000000 		.quad	.LBB4355
 59741      00000000 
 59742 1d58 00000000 		.quad	.LBE4355
 59742      00000000 
 59743 1d60 00000000 		.quad	.LBB4360
 59743      00000000 
 59744 1d68 00000000 		.quad	.LBE4360
 59744      00000000 
 59745 1d70 00000000 		.quad	0
 59745      00000000 
 59746 1d78 00000000 		.quad	0
 59746      00000000 
 59747 1d80 00000000 		.quad	.LBB4374
 59747      00000000 
 59748 1d88 00000000 		.quad	.LBE4374
 59748      00000000 
 59749 1d90 00000000 		.quad	.LBB4417
 59749      00000000 
 59750 1d98 00000000 		.quad	.LBE4417
 59750      00000000 
 59751 1da0 00000000 		.quad	0
 59751      00000000 
 59752 1da8 00000000 		.quad	0
 59752      00000000 
 59753 1db0 00000000 		.quad	.LBB4376
 59753      00000000 
 59754 1db8 00000000 		.quad	.LBE4376
 59754      00000000 
 59755 1dc0 00000000 		.quad	.LBB4386
 59755      00000000 
 59756 1dc8 00000000 		.quad	.LBE4386
 59756      00000000 
 59757 1dd0 00000000 		.quad	.LBB4387
 59757      00000000 
 59758 1dd8 00000000 		.quad	.LBE4387
 59758      00000000 
 59759 1de0 00000000 		.quad	0
 59759      00000000 
 59760 1de8 00000000 		.quad	0
 59760      00000000 
 59761 1df0 00000000 		.quad	.LBB4378
 59761      00000000 
 59762 1df8 00000000 		.quad	.LBE4378
GAS LISTING /tmp/ccJUMvuF.s 			page 1463


 59762      00000000 
 59763 1e00 00000000 		.quad	.LBB4383
 59763      00000000 
 59764 1e08 00000000 		.quad	.LBE4383
 59764      00000000 
 59765 1e10 00000000 		.quad	0
 59765      00000000 
 59766 1e18 00000000 		.quad	0
 59766      00000000 
 59767 1e20 00000000 		.quad	.LBB4390
 59767      00000000 
 59768 1e28 00000000 		.quad	.LBE4390
 59768      00000000 
 59769 1e30 00000000 		.quad	.LBB4418
 59769      00000000 
 59770 1e38 00000000 		.quad	.LBE4418
 59770      00000000 
 59771 1e40 00000000 		.quad	0
 59771      00000000 
 59772 1e48 00000000 		.quad	0
 59772      00000000 
 59773 1e50 00000000 		.quad	.LBB4397
 59773      00000000 
 59774 1e58 00000000 		.quad	.LBE4397
 59774      00000000 
 59775 1e60 00000000 		.quad	.LBB4413
 59775      00000000 
 59776 1e68 00000000 		.quad	.LBE4413
 59776      00000000 
 59777 1e70 00000000 		.quad	0
 59777      00000000 
 59778 1e78 00000000 		.quad	0
 59778      00000000 
 59779 1e80 00000000 		.quad	.LBB4399
 59779      00000000 
 59780 1e88 00000000 		.quad	.LBE4399
 59780      00000000 
 59781 1e90 00000000 		.quad	.LBB4404
 59781      00000000 
 59782 1e98 00000000 		.quad	.LBE4404
 59782      00000000 
 59783 1ea0 00000000 		.quad	0
 59783      00000000 
 59784 1ea8 00000000 		.quad	0
 59784      00000000 
 59785 1eb0 00000000 		.quad	.LBB4439
 59785      00000000 
 59786 1eb8 00000000 		.quad	.LBE4439
 59786      00000000 
 59787 1ec0 00000000 		.quad	.LBB4446
 59787      00000000 
 59788 1ec8 00000000 		.quad	.LBE4446
 59788      00000000 
 59789 1ed0 00000000 		.quad	0
 59789      00000000 
 59790 1ed8 00000000 		.quad	0
 59790      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1464


 59791 1ee0 00000000 		.quad	.LBB4442
 59791      00000000 
 59792 1ee8 00000000 		.quad	.LBE4442
 59792      00000000 
 59793 1ef0 00000000 		.quad	.LBB4447
 59793      00000000 
 59794 1ef8 00000000 		.quad	.LBE4447
 59794      00000000 
 59795 1f00 00000000 		.quad	.LBB4448
 59795      00000000 
 59796 1f08 00000000 		.quad	.LBE4448
 59796      00000000 
 59797 1f10 00000000 		.quad	0
 59797      00000000 
 59798 1f18 00000000 		.quad	0
 59798      00000000 
 59799 1f20 00000000 		.quad	.LBB4449
 59799      00000000 
 59800 1f28 00000000 		.quad	.LBE4449
 59800      00000000 
 59801 1f30 00000000 		.quad	.LBB4467
 59801      00000000 
 59802 1f38 00000000 		.quad	.LBE4467
 59802      00000000 
 59803 1f40 00000000 		.quad	.LBB4468
 59803      00000000 
 59804 1f48 00000000 		.quad	.LBE4468
 59804      00000000 
 59805 1f50 00000000 		.quad	0
 59805      00000000 
 59806 1f58 00000000 		.quad	0
 59806      00000000 
 59807 1f60 00000000 		.quad	.LBB4463
 59807      00000000 
 59808 1f68 00000000 		.quad	.LBE4463
 59808      00000000 
 59809 1f70 00000000 		.quad	.LBB4469
 59809      00000000 
 59810 1f78 00000000 		.quad	.LBE4469
 59810      00000000 
 59811 1f80 00000000 		.quad	.LBB4473
 59811      00000000 
 59812 1f88 00000000 		.quad	.LBE4473
 59812      00000000 
 59813 1f90 00000000 		.quad	0
 59813      00000000 
 59814 1f98 00000000 		.quad	0
 59814      00000000 
 59815 1fa0 00000000 		.quad	.LBB4470
 59815      00000000 
 59816 1fa8 00000000 		.quad	.LBE4470
 59816      00000000 
 59817 1fb0 00000000 		.quad	.LBB4474
 59817      00000000 
 59818 1fb8 00000000 		.quad	.LBE4474
 59818      00000000 
 59819 1fc0 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1465


 59819      00000000 
 59820 1fc8 00000000 		.quad	0
 59820      00000000 
 59821 1fd0 00000000 		.quad	.LBB4475
 59821      00000000 
 59822 1fd8 00000000 		.quad	.LBE4475
 59822      00000000 
 59823 1fe0 00000000 		.quad	.LBB4479
 59823      00000000 
 59824 1fe8 00000000 		.quad	.LBE4479
 59824      00000000 
 59825 1ff0 00000000 		.quad	.LBB4483
 59825      00000000 
 59826 1ff8 00000000 		.quad	.LBE4483
 59826      00000000 
 59827 2000 00000000 		.quad	0
 59827      00000000 
 59828 2008 00000000 		.quad	0
 59828      00000000 
 59829 2010 00000000 		.quad	.LBB4480
 59829      00000000 
 59830 2018 00000000 		.quad	.LBE4480
 59830      00000000 
 59831 2020 00000000 		.quad	.LBB4484
 59831      00000000 
 59832 2028 00000000 		.quad	.LBE4484
 59832      00000000 
 59833 2030 00000000 		.quad	0
 59833      00000000 
 59834 2038 00000000 		.quad	0
 59834      00000000 
 59835 2040 00000000 		.quad	.LBB4485
 59835      00000000 
 59836 2048 00000000 		.quad	.LBE4485
 59836      00000000 
 59837 2050 00000000 		.quad	.LBB4526
 59837      00000000 
 59838 2058 00000000 		.quad	.LBE4526
 59838      00000000 
 59839 2060 00000000 		.quad	.LBB4529
 59839      00000000 
 59840 2068 00000000 		.quad	.LBE4529
 59840      00000000 
 59841 2070 00000000 		.quad	0
 59841      00000000 
 59842 2078 00000000 		.quad	0
 59842      00000000 
 59843 2080 00000000 		.quad	.LBB4488
 59843      00000000 
 59844 2088 00000000 		.quad	.LBE4488
 59844      00000000 
 59845 2090 00000000 		.quad	.LBB4504
 59845      00000000 
 59846 2098 00000000 		.quad	.LBE4504
 59846      00000000 
 59847 20a0 00000000 		.quad	.LBB4505
 59847      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1466


 59848 20a8 00000000 		.quad	.LBE4505
 59848      00000000 
 59849 20b0 00000000 		.quad	0
 59849      00000000 
 59850 20b8 00000000 		.quad	0
 59850      00000000 
 59851 20c0 00000000 		.quad	.LBB4490
 59851      00000000 
 59852 20c8 00000000 		.quad	.LBE4490
 59852      00000000 
 59853 20d0 00000000 		.quad	.LBB4499
 59853      00000000 
 59854 20d8 00000000 		.quad	.LBE4499
 59854      00000000 
 59855 20e0 00000000 		.quad	0
 59855      00000000 
 59856 20e8 00000000 		.quad	0
 59856      00000000 
 59857 20f0 00000000 		.quad	.LBB4493
 59857      00000000 
 59858 20f8 00000000 		.quad	.LBE4493
 59858      00000000 
 59859 2100 00000000 		.quad	.LBB4498
 59859      00000000 
 59860 2108 00000000 		.quad	.LBE4498
 59860      00000000 
 59861 2110 00000000 		.quad	0
 59861      00000000 
 59862 2118 00000000 		.quad	0
 59862      00000000 
 59863 2120 00000000 		.quad	.LBB4512
 59863      00000000 
 59864 2128 00000000 		.quad	.LBE4512
 59864      00000000 
 59865 2130 00000000 		.quad	.LBB4518
 59865      00000000 
 59866 2138 00000000 		.quad	.LBE4518
 59866      00000000 
 59867 2140 00000000 		.quad	0
 59867      00000000 
 59868 2148 00000000 		.quad	0
 59868      00000000 
 59869 2150 00000000 		.quad	.LBB4515
 59869      00000000 
 59870 2158 00000000 		.quad	.LBE4515
 59870      00000000 
 59871 2160 00000000 		.quad	.LBB4519
 59871      00000000 
 59872 2168 00000000 		.quad	.LBE4519
 59872      00000000 
 59873 2170 00000000 		.quad	0
 59873      00000000 
 59874 2178 00000000 		.quad	0
 59874      00000000 
 59875 2180 00000000 		.quad	.LBB4556
 59875      00000000 
 59876 2188 00000000 		.quad	.LBE4556
GAS LISTING /tmp/ccJUMvuF.s 			page 1467


 59876      00000000 
 59877 2190 00000000 		.quad	.LBB4560
 59877      00000000 
 59878 2198 00000000 		.quad	.LBE4560
 59878      00000000 
 59879 21a0 00000000 		.quad	.LBB4561
 59879      00000000 
 59880 21a8 00000000 		.quad	.LBE4561
 59880      00000000 
 59881 21b0 00000000 		.quad	0
 59881      00000000 
 59882 21b8 00000000 		.quad	0
 59882      00000000 
 59883 21c0 00000000 		.quad	.LBB4562
 59883      00000000 
 59884 21c8 00000000 		.quad	.LBE4562
 59884      00000000 
 59885 21d0 00000000 		.quad	.LBB4913
 59885      00000000 
 59886 21d8 00000000 		.quad	.LBE4913
 59886      00000000 
 59887 21e0 00000000 		.quad	.LBB4970
 59887      00000000 
 59888 21e8 00000000 		.quad	.LBE4970
 59888      00000000 
 59889 21f0 00000000 		.quad	0
 59889      00000000 
 59890 21f8 00000000 		.quad	0
 59890      00000000 
 59891 2200 00000000 		.quad	.LBB4565
 59891      00000000 
 59892 2208 00000000 		.quad	.LBE4565
 59892      00000000 
 59893 2210 00000000 		.quad	.LBB4581
 59893      00000000 
 59894 2218 00000000 		.quad	.LBE4581
 59894      00000000 
 59895 2220 00000000 		.quad	.LBB4582
 59895      00000000 
 59896 2228 00000000 		.quad	.LBE4582
 59896      00000000 
 59897 2230 00000000 		.quad	0
 59897      00000000 
 59898 2238 00000000 		.quad	0
 59898      00000000 
 59899 2240 00000000 		.quad	.LBB4567
 59899      00000000 
 59900 2248 00000000 		.quad	.LBE4567
 59900      00000000 
 59901 2250 00000000 		.quad	.LBB4576
 59901      00000000 
 59902 2258 00000000 		.quad	.LBE4576
 59902      00000000 
 59903 2260 00000000 		.quad	0
 59903      00000000 
 59904 2268 00000000 		.quad	0
 59904      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1468


 59905 2270 00000000 		.quad	.LBB4570
 59905      00000000 
 59906 2278 00000000 		.quad	.LBE4570
 59906      00000000 
 59907 2280 00000000 		.quad	.LBB4575
 59907      00000000 
 59908 2288 00000000 		.quad	.LBE4575
 59908      00000000 
 59909 2290 00000000 		.quad	0
 59909      00000000 
 59910 2298 00000000 		.quad	0
 59910      00000000 
 59911 22a0 00000000 		.quad	.LBB4595
 59911      00000000 
 59912 22a8 00000000 		.quad	.LBE4595
 59912      00000000 
 59913 22b0 00000000 		.quad	.LBB4601
 59913      00000000 
 59914 22b8 00000000 		.quad	.LBE4601
 59914      00000000 
 59915 22c0 00000000 		.quad	0
 59915      00000000 
 59916 22c8 00000000 		.quad	0
 59916      00000000 
 59917 22d0 00000000 		.quad	.LBB4598
 59917      00000000 
 59918 22d8 00000000 		.quad	.LBE4598
 59918      00000000 
 59919 22e0 00000000 		.quad	.LBB4602
 59919      00000000 
 59920 22e8 00000000 		.quad	.LBE4602
 59920      00000000 
 59921 22f0 00000000 		.quad	0
 59921      00000000 
 59922 22f8 00000000 		.quad	0
 59922      00000000 
 59923 2300 00000000 		.quad	.LBB4606
 59923      00000000 
 59924 2308 00000000 		.quad	.LBE4606
 59924      00000000 
 59925 2310 00000000 		.quad	.LBB4909
 59925      00000000 
 59926 2318 00000000 		.quad	.LBE4909
 59926      00000000 
 59927 2320 00000000 		.quad	.LBB4911
 59927      00000000 
 59928 2328 00000000 		.quad	.LBE4911
 59928      00000000 
 59929 2330 00000000 		.quad	.LBB4915
 59929      00000000 
 59930 2338 00000000 		.quad	.LBE4915
 59930      00000000 
 59931 2340 00000000 		.quad	.LBB4943
 59931      00000000 
 59932 2348 00000000 		.quad	.LBE4943
 59932      00000000 
 59933 2350 00000000 		.quad	.LBB4945
GAS LISTING /tmp/ccJUMvuF.s 			page 1469


 59933      00000000 
 59934 2358 00000000 		.quad	.LBE4945
 59934      00000000 
 59935 2360 00000000 		.quad	.LBB4949
 59935      00000000 
 59936 2368 00000000 		.quad	.LBE4949
 59936      00000000 
 59937 2370 00000000 		.quad	0
 59937      00000000 
 59938 2378 00000000 		.quad	0
 59938      00000000 
 59939 2380 00000000 		.quad	.LBB4609
 59939      00000000 
 59940 2388 00000000 		.quad	.LBE4609
 59940      00000000 
 59941 2390 00000000 		.quad	.LBB4653
 59941      00000000 
 59942 2398 00000000 		.quad	.LBE4653
 59942      00000000 
 59943 23a0 00000000 		.quad	0
 59943      00000000 
 59944 23a8 00000000 		.quad	0
 59944      00000000 
 59945 23b0 00000000 		.quad	.LBB4610
 59945      00000000 
 59946 23b8 00000000 		.quad	.LBE4610
 59946      00000000 
 59947 23c0 00000000 		.quad	.LBB4629
 59947      00000000 
 59948 23c8 00000000 		.quad	.LBE4629
 59948      00000000 
 59949 23d0 00000000 		.quad	.LBB4651
 59949      00000000 
 59950 23d8 00000000 		.quad	.LBE4651
 59950      00000000 
 59951 23e0 00000000 		.quad	0
 59951      00000000 
 59952 23e8 00000000 		.quad	0
 59952      00000000 
 59953 23f0 00000000 		.quad	.LBB4611
 59953      00000000 
 59954 23f8 00000000 		.quad	.LBE4611
 59954      00000000 
 59955 2400 00000000 		.quad	.LBB4627
 59955      00000000 
 59956 2408 00000000 		.quad	.LBE4627
 59956      00000000 
 59957 2410 00000000 		.quad	.LBB4628
 59957      00000000 
 59958 2418 00000000 		.quad	.LBE4628
 59958      00000000 
 59959 2420 00000000 		.quad	0
 59959      00000000 
 59960 2428 00000000 		.quad	0
 59960      00000000 
 59961 2430 00000000 		.quad	.LBB4613
 59961      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1470


 59962 2438 00000000 		.quad	.LBE4613
 59962      00000000 
 59963 2440 00000000 		.quad	.LBB4622
 59963      00000000 
 59964 2448 00000000 		.quad	.LBE4622
 59964      00000000 
 59965 2450 00000000 		.quad	0
 59965      00000000 
 59966 2458 00000000 		.quad	0
 59966      00000000 
 59967 2460 00000000 		.quad	.LBB4630
 59967      00000000 
 59968 2468 00000000 		.quad	.LBE4630
 59968      00000000 
 59969 2470 00000000 		.quad	.LBB4652
 59969      00000000 
 59970 2478 00000000 		.quad	.LBE4652
 59970      00000000 
 59971 2480 00000000 		.quad	0
 59971      00000000 
 59972 2488 00000000 		.quad	0
 59972      00000000 
 59973 2490 00000000 		.quad	.LBB4632
 59973      00000000 
 59974 2498 00000000 		.quad	.LBE4632
 59974      00000000 
 59975 24a0 00000000 		.quad	.LBB4649
 59975      00000000 
 59976 24a8 00000000 		.quad	.LBE4649
 59976      00000000 
 59977 24b0 00000000 		.quad	0
 59977      00000000 
 59978 24b8 00000000 		.quad	0
 59978      00000000 
 59979 24c0 00000000 		.quad	.LBB4654
 59979      00000000 
 59980 24c8 00000000 		.quad	.LBE4654
 59980      00000000 
 59981 24d0 00000000 		.quad	.LBB4659
 59981      00000000 
 59982 24d8 00000000 		.quad	.LBE4659
 59982      00000000 
 59983 24e0 00000000 		.quad	0
 59983      00000000 
 59984 24e8 00000000 		.quad	0
 59984      00000000 
 59985 24f0 00000000 		.quad	.LBB4660
 59985      00000000 
 59986 24f8 00000000 		.quad	.LBE4660
 59986      00000000 
 59987 2500 00000000 		.quad	.LBB4880
 59987      00000000 
 59988 2508 00000000 		.quad	.LBE4880
 59988      00000000 
 59989 2510 00000000 		.quad	.LBB4881
 59989      00000000 
 59990 2518 00000000 		.quad	.LBE4881
GAS LISTING /tmp/ccJUMvuF.s 			page 1471


 59990      00000000 
 59991 2520 00000000 		.quad	.LBB4882
 59991      00000000 
 59992 2528 00000000 		.quad	.LBE4882
 59992      00000000 
 59993 2530 00000000 		.quad	.LBB4883
 59993      00000000 
 59994 2538 00000000 		.quad	.LBE4883
 59994      00000000 
 59995 2540 00000000 		.quad	.LBB4884
 59995      00000000 
 59996 2548 00000000 		.quad	.LBE4884
 59996      00000000 
 59997 2550 00000000 		.quad	.LBB4888
 59997      00000000 
 59998 2558 00000000 		.quad	.LBE4888
 59998      00000000 
 59999 2560 00000000 		.quad	0
 59999      00000000 
 60000 2568 00000000 		.quad	0
 60000      00000000 
 60001 2570 00000000 		.quad	.LBB4662
 60001      00000000 
 60002 2578 00000000 		.quad	.LBE4662
 60002      00000000 
 60003 2580 00000000 		.quad	.LBB4868
 60003      00000000 
 60004 2588 00000000 		.quad	.LBE4868
 60004      00000000 
 60005 2590 00000000 		.quad	.LBB4869
 60005      00000000 
 60006 2598 00000000 		.quad	.LBE4869
 60006      00000000 
 60007 25a0 00000000 		.quad	.LBB4870
 60007      00000000 
 60008 25a8 00000000 		.quad	.LBE4870
 60008      00000000 
 60009 25b0 00000000 		.quad	.LBB4871
 60009      00000000 
 60010 25b8 00000000 		.quad	.LBE4871
 60010      00000000 
 60011 25c0 00000000 		.quad	.LBB4872
 60011      00000000 
 60012 25c8 00000000 		.quad	.LBE4872
 60012      00000000 
 60013 25d0 00000000 		.quad	.LBB4873
 60013      00000000 
 60014 25d8 00000000 		.quad	.LBE4873
 60014      00000000 
 60015 25e0 00000000 		.quad	0
 60015      00000000 
 60016 25e8 00000000 		.quad	0
 60016      00000000 
 60017 25f0 00000000 		.quad	.LBB4663
 60017      00000000 
 60018 25f8 00000000 		.quad	.LBE4663
 60018      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1472


 60019 2600 00000000 		.quad	.LBB4859
 60019      00000000 
 60020 2608 00000000 		.quad	.LBE4859
 60020      00000000 
 60021 2610 00000000 		.quad	0
 60021      00000000 
 60022 2618 00000000 		.quad	0
 60022      00000000 
 60023 2620 00000000 		.quad	.LBB4666
 60023      00000000 
 60024 2628 00000000 		.quad	.LBE4666
 60024      00000000 
 60025 2630 00000000 		.quad	.LBB4773
 60025      00000000 
 60026 2638 00000000 		.quad	.LBE4773
 60026      00000000 
 60027 2640 00000000 		.quad	.LBB4853
 60027      00000000 
 60028 2648 00000000 		.quad	.LBE4853
 60028      00000000 
 60029 2650 00000000 		.quad	.LBB4855
 60029      00000000 
 60030 2658 00000000 		.quad	.LBE4855
 60030      00000000 
 60031 2660 00000000 		.quad	.LBB4856
 60031      00000000 
 60032 2668 00000000 		.quad	.LBE4856
 60032      00000000 
 60033 2670 00000000 		.quad	.LBB4857
 60033      00000000 
 60034 2678 00000000 		.quad	.LBE4857
 60034      00000000 
 60035 2680 00000000 		.quad	.LBB4858
 60035      00000000 
 60036 2688 00000000 		.quad	.LBE4858
 60036      00000000 
 60037 2690 00000000 		.quad	0
 60037      00000000 
 60038 2698 00000000 		.quad	0
 60038      00000000 
 60039 26a0 00000000 		.quad	.LBB4669
 60039      00000000 
 60040 26a8 00000000 		.quad	.LBE4669
 60040      00000000 
 60041 26b0 00000000 		.quad	.LBB4673
 60041      00000000 
 60042 26b8 00000000 		.quad	.LBE4673
 60042      00000000 
 60043 26c0 00000000 		.quad	.LBB4674
 60043      00000000 
 60044 26c8 00000000 		.quad	.LBE4674
 60044      00000000 
 60045 26d0 00000000 		.quad	0
 60045      00000000 
 60046 26d8 00000000 		.quad	0
 60046      00000000 
 60047 26e0 00000000 		.quad	.LBB4675
GAS LISTING /tmp/ccJUMvuF.s 			page 1473


 60047      00000000 
 60048 26e8 00000000 		.quad	.LBE4675
 60048      00000000 
 60049 26f0 00000000 		.quad	.LBB4756
 60049      00000000 
 60050 26f8 00000000 		.quad	.LBE4756
 60050      00000000 
 60051 2700 00000000 		.quad	.LBB4757
 60051      00000000 
 60052 2708 00000000 		.quad	.LBE4757
 60052      00000000 
 60053 2710 00000000 		.quad	.LBB4758
 60053      00000000 
 60054 2718 00000000 		.quad	.LBE4758
 60054      00000000 
 60055 2720 00000000 		.quad	.LBB4759
 60055      00000000 
 60056 2728 00000000 		.quad	.LBE4759
 60056      00000000 
 60057 2730 00000000 		.quad	.LBB4760
 60057      00000000 
 60058 2738 00000000 		.quad	.LBE4760
 60058      00000000 
 60059 2740 00000000 		.quad	0
 60059      00000000 
 60060 2748 00000000 		.quad	0
 60060      00000000 
 60061 2750 00000000 		.quad	.LBB4677
 60061      00000000 
 60062 2758 00000000 		.quad	.LBE4677
 60062      00000000 
 60063 2760 00000000 		.quad	.LBB4720
 60063      00000000 
 60064 2768 00000000 		.quad	.LBE4720
 60064      00000000 
 60065 2770 00000000 		.quad	.LBB4749
 60065      00000000 
 60066 2778 00000000 		.quad	.LBE4749
 60066      00000000 
 60067 2780 00000000 		.quad	0
 60067      00000000 
 60068 2788 00000000 		.quad	0
 60068      00000000 
 60069 2790 00000000 		.quad	.LBB4684
 60069      00000000 
 60070 2798 00000000 		.quad	.LBE4684
 60070      00000000 
 60071 27a0 00000000 		.quad	.LBB4700
 60071      00000000 
 60072 27a8 00000000 		.quad	.LBE4700
 60072      00000000 
 60073 27b0 00000000 		.quad	0
 60073      00000000 
 60074 27b8 00000000 		.quad	0
 60074      00000000 
 60075 27c0 00000000 		.quad	.LBB4686
 60075      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1474


 60076 27c8 00000000 		.quad	.LBE4686
 60076      00000000 
 60077 27d0 00000000 		.quad	.LBB4691
 60077      00000000 
 60078 27d8 00000000 		.quad	.LBE4691
 60078      00000000 
 60079 27e0 00000000 		.quad	0
 60079      00000000 
 60080 27e8 00000000 		.quad	0
 60080      00000000 
 60081 27f0 00000000 		.quad	.LBB4705
 60081      00000000 
 60082 27f8 00000000 		.quad	.LBE4705
 60082      00000000 
 60083 2800 00000000 		.quad	.LBB4748
 60083      00000000 
 60084 2808 00000000 		.quad	.LBE4748
 60084      00000000 
 60085 2810 00000000 		.quad	0
 60085      00000000 
 60086 2818 00000000 		.quad	0
 60086      00000000 
 60087 2820 00000000 		.quad	.LBB4707
 60087      00000000 
 60088 2828 00000000 		.quad	.LBE4707
 60088      00000000 
 60089 2830 00000000 		.quad	.LBB4717
 60089      00000000 
 60090 2838 00000000 		.quad	.LBE4717
 60090      00000000 
 60091 2840 00000000 		.quad	.LBB4718
 60091      00000000 
 60092 2848 00000000 		.quad	.LBE4718
 60092      00000000 
 60093 2850 00000000 		.quad	0
 60093      00000000 
 60094 2858 00000000 		.quad	0
 60094      00000000 
 60095 2860 00000000 		.quad	.LBB4709
 60095      00000000 
 60096 2868 00000000 		.quad	.LBE4709
 60096      00000000 
 60097 2870 00000000 		.quad	.LBB4714
 60097      00000000 
 60098 2878 00000000 		.quad	.LBE4714
 60098      00000000 
 60099 2880 00000000 		.quad	0
 60099      00000000 
 60100 2888 00000000 		.quad	0
 60100      00000000 
 60101 2890 00000000 		.quad	.LBB4721
 60101      00000000 
 60102 2898 00000000 		.quad	.LBE4721
 60102      00000000 
 60103 28a0 00000000 		.quad	.LBB4750
 60103      00000000 
 60104 28a8 00000000 		.quad	.LBE4750
GAS LISTING /tmp/ccJUMvuF.s 			page 1475


 60104      00000000 
 60105 28b0 00000000 		.quad	0
 60105      00000000 
 60106 28b8 00000000 		.quad	0
 60106      00000000 
 60107 28c0 00000000 		.quad	.LBB4728
 60107      00000000 
 60108 28c8 00000000 		.quad	.LBE4728
 60108      00000000 
 60109 28d0 00000000 		.quad	.LBB4744
 60109      00000000 
 60110 28d8 00000000 		.quad	.LBE4744
 60110      00000000 
 60111 28e0 00000000 		.quad	0
 60111      00000000 
 60112 28e8 00000000 		.quad	0
 60112      00000000 
 60113 28f0 00000000 		.quad	.LBB4730
 60113      00000000 
 60114 28f8 00000000 		.quad	.LBE4730
 60114      00000000 
 60115 2900 00000000 		.quad	.LBB4735
 60115      00000000 
 60116 2908 00000000 		.quad	.LBE4735
 60116      00000000 
 60117 2910 00000000 		.quad	0
 60117      00000000 
 60118 2918 00000000 		.quad	0
 60118      00000000 
 60119 2920 00000000 		.quad	.LBB4774
 60119      00000000 
 60120 2928 00000000 		.quad	.LBE4774
 60120      00000000 
 60121 2930 00000000 		.quad	.LBB4781
 60121      00000000 
 60122 2938 00000000 		.quad	.LBE4781
 60122      00000000 
 60123 2940 00000000 		.quad	0
 60123      00000000 
 60124 2948 00000000 		.quad	0
 60124      00000000 
 60125 2950 00000000 		.quad	.LBB4777
 60125      00000000 
 60126 2958 00000000 		.quad	.LBE4777
 60126      00000000 
 60127 2960 00000000 		.quad	.LBB4782
 60127      00000000 
 60128 2968 00000000 		.quad	.LBE4782
 60128      00000000 
 60129 2970 00000000 		.quad	.LBB4783
 60129      00000000 
 60130 2978 00000000 		.quad	.LBE4783
 60130      00000000 
 60131 2980 00000000 		.quad	0
 60131      00000000 
 60132 2988 00000000 		.quad	0
 60132      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1476


 60133 2990 00000000 		.quad	.LBB4784
 60133      00000000 
 60134 2998 00000000 		.quad	.LBE4784
 60134      00000000 
 60135 29a0 00000000 		.quad	.LBB4802
 60135      00000000 
 60136 29a8 00000000 		.quad	.LBE4802
 60136      00000000 
 60137 29b0 00000000 		.quad	.LBB4803
 60137      00000000 
 60138 29b8 00000000 		.quad	.LBE4803
 60138      00000000 
 60139 29c0 00000000 		.quad	0
 60139      00000000 
 60140 29c8 00000000 		.quad	0
 60140      00000000 
 60141 29d0 00000000 		.quad	.LBB4798
 60141      00000000 
 60142 29d8 00000000 		.quad	.LBE4798
 60142      00000000 
 60143 29e0 00000000 		.quad	.LBB4804
 60143      00000000 
 60144 29e8 00000000 		.quad	.LBE4804
 60144      00000000 
 60145 29f0 00000000 		.quad	.LBB4808
 60145      00000000 
 60146 29f8 00000000 		.quad	.LBE4808
 60146      00000000 
 60147 2a00 00000000 		.quad	0
 60147      00000000 
 60148 2a08 00000000 		.quad	0
 60148      00000000 
 60149 2a10 00000000 		.quad	.LBB4805
 60149      00000000 
 60150 2a18 00000000 		.quad	.LBE4805
 60150      00000000 
 60151 2a20 00000000 		.quad	.LBB4809
 60151      00000000 
 60152 2a28 00000000 		.quad	.LBE4809
 60152      00000000 
 60153 2a30 00000000 		.quad	0
 60153      00000000 
 60154 2a38 00000000 		.quad	0
 60154      00000000 
 60155 2a40 00000000 		.quad	.LBB4810
 60155      00000000 
 60156 2a48 00000000 		.quad	.LBE4810
 60156      00000000 
 60157 2a50 00000000 		.quad	.LBB4814
 60157      00000000 
 60158 2a58 00000000 		.quad	.LBE4814
 60158      00000000 
 60159 2a60 00000000 		.quad	.LBB4818
 60159      00000000 
 60160 2a68 00000000 		.quad	.LBE4818
 60160      00000000 
 60161 2a70 00000000 		.quad	0
GAS LISTING /tmp/ccJUMvuF.s 			page 1477


 60161      00000000 
 60162 2a78 00000000 		.quad	0
 60162      00000000 
 60163 2a80 00000000 		.quad	.LBB4815
 60163      00000000 
 60164 2a88 00000000 		.quad	.LBE4815
 60164      00000000 
 60165 2a90 00000000 		.quad	.LBB4819
 60165      00000000 
 60166 2a98 00000000 		.quad	.LBE4819
 60166      00000000 
 60167 2aa0 00000000 		.quad	0
 60167      00000000 
 60168 2aa8 00000000 		.quad	0
 60168      00000000 
 60169 2ab0 00000000 		.quad	.LBB4820
 60169      00000000 
 60170 2ab8 00000000 		.quad	.LBE4820
 60170      00000000 
 60171 2ac0 00000000 		.quad	.LBB4854
 60171      00000000 
 60172 2ac8 00000000 		.quad	.LBE4854
 60172      00000000 
 60173 2ad0 00000000 		.quad	0
 60173      00000000 
 60174 2ad8 00000000 		.quad	0
 60174      00000000 
 60175 2ae0 00000000 		.quad	.LBB4823
 60175      00000000 
 60176 2ae8 00000000 		.quad	.LBE4823
 60176      00000000 
 60177 2af0 00000000 		.quad	.LBB4836
 60177      00000000 
 60178 2af8 00000000 		.quad	.LBE4836
 60178      00000000 
 60179 2b00 00000000 		.quad	0
 60179      00000000 
 60180 2b08 00000000 		.quad	0
 60180      00000000 
 60181 2b10 00000000 		.quad	.LBB4827
 60181      00000000 
 60182 2b18 00000000 		.quad	.LBE4827
 60182      00000000 
 60183 2b20 00000000 		.quad	.LBB4832
 60183      00000000 
 60184 2b28 00000000 		.quad	.LBE4832
 60184      00000000 
 60185 2b30 00000000 		.quad	0
 60185      00000000 
 60186 2b38 00000000 		.quad	0
 60186      00000000 
 60187 2b40 00000000 		.quad	.LBB4841
 60187      00000000 
 60188 2b48 00000000 		.quad	.LBE4841
 60188      00000000 
 60189 2b50 00000000 		.quad	.LBB4847
 60189      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1478


 60190 2b58 00000000 		.quad	.LBE4847
 60190      00000000 
 60191 2b60 00000000 		.quad	0
 60191      00000000 
 60192 2b68 00000000 		.quad	0
 60192      00000000 
 60193 2b70 00000000 		.quad	.LBB4844
 60193      00000000 
 60194 2b78 00000000 		.quad	.LBE4844
 60194      00000000 
 60195 2b80 00000000 		.quad	.LBB4848
 60195      00000000 
 60196 2b88 00000000 		.quad	.LBE4848
 60196      00000000 
 60197 2b90 00000000 		.quad	0
 60197      00000000 
 60198 2b98 00000000 		.quad	0
 60198      00000000 
 60199 2ba0 00000000 		.quad	.LBB4918
 60199      00000000 
 60200 2ba8 00000000 		.quad	.LBE4918
 60200      00000000 
 60201 2bb0 00000000 		.quad	.LBB4946
 60201      00000000 
 60202 2bb8 00000000 		.quad	.LBE4946
 60202      00000000 
 60203 2bc0 00000000 		.quad	.LBB4948
 60203      00000000 
 60204 2bc8 00000000 		.quad	.LBE4948
 60204      00000000 
 60205 2bd0 00000000 		.quad	0
 60205      00000000 
 60206 2bd8 00000000 		.quad	0
 60206      00000000 
 60207 2be0 00000000 		.quad	.LBB4921
 60207      00000000 
 60208 2be8 00000000 		.quad	.LBE4921
 60208      00000000 
 60209 2bf0 00000000 		.quad	.LBB4937
 60209      00000000 
 60210 2bf8 00000000 		.quad	.LBE4937
 60210      00000000 
 60211 2c00 00000000 		.quad	.LBB4938
 60211      00000000 
 60212 2c08 00000000 		.quad	.LBE4938
 60212      00000000 
 60213 2c10 00000000 		.quad	0
 60213      00000000 
 60214 2c18 00000000 		.quad	0
 60214      00000000 
 60215 2c20 00000000 		.quad	.LBB4923
 60215      00000000 
 60216 2c28 00000000 		.quad	.LBE4923
 60216      00000000 
 60217 2c30 00000000 		.quad	.LBB4932
 60217      00000000 
 60218 2c38 00000000 		.quad	.LBE4932
GAS LISTING /tmp/ccJUMvuF.s 			page 1479


 60218      00000000 
 60219 2c40 00000000 		.quad	0
 60219      00000000 
 60220 2c48 00000000 		.quad	0
 60220      00000000 
 60221 2c50 00000000 		.quad	.LBB4926
 60221      00000000 
 60222 2c58 00000000 		.quad	.LBE4926
 60222      00000000 
 60223 2c60 00000000 		.quad	.LBB4931
 60223      00000000 
 60224 2c68 00000000 		.quad	.LBE4931
 60224      00000000 
 60225 2c70 00000000 		.quad	0
 60225      00000000 
 60226 2c78 00000000 		.quad	0
 60226      00000000 
 60227 2c80 00000000 		.quad	.LBB4990
 60227      00000000 
 60228 2c88 00000000 		.quad	.LBE4990
 60228      00000000 
 60229 2c90 00000000 		.quad	.LBB4994
 60229      00000000 
 60230 2c98 00000000 		.quad	.LBE4994
 60230      00000000 
 60231 2ca0 00000000 		.quad	.LBB4995
 60231      00000000 
 60232 2ca8 00000000 		.quad	.LBE4995
 60232      00000000 
 60233 2cb0 00000000 		.quad	0
 60233      00000000 
 60234 2cb8 00000000 		.quad	0
 60234      00000000 
 60235 2cc0 00000000 		.quad	.Ltext0
 60235      00000000 
 60236 2cc8 00000000 		.quad	.Letext0
 60236      00000000 
 60237 2cd0 00000000 		.quad	.LFB1390
 60237      00000000 
 60238 2cd8 00000000 		.quad	.LFE1390
 60238      00000000 
 60239 2ce0 00000000 		.quad	.LFB6598
 60239      00000000 
 60240 2ce8 00000000 		.quad	.LFE6598
 60240      00000000 
 60241 2cf0 00000000 		.quad	.LFB6565
 60241      00000000 
 60242 2cf8 00000000 		.quad	.LFE6565
 60242      00000000 
 60243 2d00 00000000 		.quad	.LFB6612
 60243      00000000 
 60244 2d08 00000000 		.quad	.LFE6612
 60244      00000000 
 60245 2d10 00000000 		.quad	.LFB6046
 60245      00000000 
 60246 2d18 00000000 		.quad	.LFE6046
 60246      00000000 
GAS LISTING /tmp/ccJUMvuF.s 			page 1480


 60247 2d20 00000000 		.quad	.LFB6051
 60247      00000000 
 60248 2d28 00000000 		.quad	.LFE6051
 60248      00000000 
 60249 2d30 00000000 		.quad	.LFB6649
 60249      00000000 
 60250 2d38 00000000 		.quad	.LFE6649
 60250      00000000 
 60251 2d40 00000000 		.quad	0
 60251      00000000 
 60252 2d48 00000000 		.quad	0
 60252      00000000 
 60253              		.section	.debug_line,"",@progbits
 60254              	.Ldebug_line0:
 60255 0000 45130000 		.section	.debug_str,"MS",@progbits,1
 60255      0200D905 
 60255      00000101 
 60255      FB0E0D00 
 60255      01010101 
 60256              	.LASF1083:
 60257 0000 6F706572 		.string	"operator~"
 60257      61746F72 
 60257      7E00
 60258              	.LASF507:
 60259 000a 5F5F6D61 		.string	"__match_cv_qualifiers<long int, long unsigned int, false, false>"
 60259      7463685F 
 60259      63765F71 
 60259      75616C69 
 60259      66696572 
 60260              	.LASF430:
 60261 004b 5F4D6F64 		.string	"_Mod<long unsigned int, 4294967296ul, 1ul, 0ul, true, true>"
 60261      3C6C6F6E 
 60261      6720756E 
 60261      7369676E 
 60261      65642069 
 60262              	.LASF1545:
 60263 0087 706F7369 		.string	"positive_sign"
 60263      74697665 
 60263      5F736967 
 60263      6E00
 60264              	.LASF1066:
 60265 0095 5F5A4E53 		.string	"_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEELb1EE7_S_baseES6_"
 60265      7431305F 
 60265      49746572 
 60265      5F626173 
 60265      65494E39 
 60266              	.LASF1585:
 60267 00ed 6D627374 		.string	"mbstowcs"
 60267      6F776373 
 60267      00
 60268              	.LASF1704:
 60269 00f6 5F5F6C65 		.string	"__len"
 60269      6E00
 60270              	.LASF135:
 60271 00fc 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcPKcS1_"
 60271      7331335F 
 60271      535F636F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1481


 60271      70795F63 
 60271      68617273 
 60272              	.LASF325:
 60273 011a 5F5A4E4B 		.string	"_ZNKSt17integral_constantIiLi0EEcviEv"
 60273      53743137 
 60273      696E7465 
 60273      6772616C 
 60273      5F636F6E 
 60274              	.LASF1663:
 60275 0140 5F5F6D65 		.string	"__mem"
 60275      6D00
 60276              	.LASF680:
 60277 0146 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSEOS1_"
 60277      74367665 
 60277      63746F72 
 60277      496A5361 
 60277      496A4545 
 60278              	.LASF815:
 60279 0162 5F547570 		.string	"_Tuple_impl<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul
 60279      6C655F69 
 60279      6D706C3C 
 60279      30756C2C 
 60279      20737464 
 60280              	.LASF1692:
 60281 021c 5F5F7572 		.string	"__urng"
 60281      6E6700
 60282              	.LASF502:
 60283 0223 5F507472 		.string	"_Ptr"
 60283      00
 60284              	.LASF554:
 60285 0228 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE12_Vector_impl12_M_swap_dataERS2_"
 60285      7431325F 
 60285      56656374 
 60285      6F725F62 
 60285      61736549 
 60286              	.LASF999:
 60287 0265 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE14_M_range_checkEm"
 60287      53743676 
 60287      6563746F 
 60287      72496853 
 60287      61496845 
 60288              	.LASF1328:
 60289 028d 5F5F616C 		.string	"__alloc_traits<std::allocator<unsigned int> >"
 60289      6C6F635F 
 60289      74726169 
 60289      74733C73 
 60289      74643A3A 
 60290              	.LASF1414:
 60291 02bb 5F5F7061 		.string	"__pad2"
 60291      643200
 60292              	.LASF1415:
 60293 02c2 5F5F7061 		.string	"__pad3"
 60293      643300
 60294              	.LASF1416:
 60295 02c9 5F5F7061 		.string	"__pad4"
 60295      643400
 60296              	.LASF958:
GAS LISTING /tmp/ccJUMvuF.s 			page 1482


 60297 02d0 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8allocateERS0_mPKv"
 60297      74313661 
 60297      6C6C6F63 
 60297      61746F72 
 60297      5F747261 
 60298              	.LASF1593:
 60299 0301 73747274 		.string	"strtoul"
 60299      6F756C00 
 60300              	.LASF618:
 60301 0309 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5eraseEN9__gnu_cxx17__normal_iteratorIPKdS1_EES6_"
 60301      74367665 
 60301      63746F72 
 60301      49645361 
 60301      49644545 
 60302              	.LASF82:
 60303 034f 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_leakedEv"
 60303      5373345F 
 60303      52657031 
 60303      325F4D5F 
 60303      69735F6C 
 60304              	.LASF204:
 60305 036b 5F5A4E53 		.string	"_ZNSs6appendERKSsmm"
 60305      73366170 
 60305      70656E64 
 60305      45524B53 
 60305      736D6D00 
 60306              	.LASF1187:
 60307 037f 6C6F6E67 		.string	"long unsigned int"
 60307      20756E73 
 60307      69676E65 
 60307      6420696E 
 60307      7400
 60308              	.LASF657:
 60309 0391 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE22_S_void_pointer_helperEz"
 60309      74313661 
 60309      6C6C6F63 
 60309      61746F72 
 60309      5F747261 
 60310              	.LASF429:
 60311 03ca 5F5F6465 		.string	"__detail"
 60311      7461696C 
 60311      00
 60312              	.LASF919:
 60313 03d3 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEEaSEOS3_"
 60313      7431315F 
 60313      5475706C 
 60313      655F696D 
 60313      706C494C 
 60314              	.LASF446:
 60315 0413 786F725F 		.string	"xor_mask"
 60315      6D61736B 
 60315      00
 60316              	.LASF188:
 60317 041c 5F5A4E53 		.string	"_ZNSsixEm"
 60317      73697845 
 60317      6D00
 60318              	.LASF790:
GAS LISTING /tmp/ccJUMvuF.s 			page 1483


 60319 0426 5F4D6179 		.string	"_Maybe_get_result_type<true, std::uniform_int_distribution<int> >"
 60319      62655F67 
 60319      65745F72 
 60319      6573756C 
 60319      745F7479 
 60320              	.LASF989:
 60321 0468 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4sizeEv"
 60321      53743676 
 60321      6563746F 
 60321      72496853 
 60321      61496845 
 60322              	.LASF1714:
 60323 0485 706F696E 		.string	"points"
 60323      747300
 60324              	.LASF1732:
 60325 048c 5F5F7565 		.string	"__uerngrange"
 60325      726E6772 
 60325      616E6765 
 60325      00
 60326              	.LASF310:
 60327 0499 696E6974 		.string	"initializer_list"
 60327      69616C69 
 60327      7A65725F 
 60327      6C697374 
 60327      00
 60328              	.LASF577:
 60329 04aa 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6assignESt16initializer_listIdE"
 60329      74367665 
 60329      63746F72 
 60329      49645361 
 60329      49644545 
 60330              	.LASF1777:
 60331 04de 5F5F6275 		.string	"__builtin_memmove"
 60331      696C7469 
 60331      6E5F6D65 
 60331      6D6D6F76 
 60331      6500
 60332              	.LASF1204:
 60333 04f0 5F56616C 		.string	"_Value"
 60333      756500
 60334              	.LASF274:
 60335 04f7 5F5A4E4B 		.string	"_ZNKSs13find_first_ofERKSsm"
 60335      53733133 
 60335      66696E64 
 60335      5F666972 
 60335      73745F6F 
 60336              	.LASF176:
 60337 0513 73687269 		.string	"shrink_to_fit"
 60337      6E6B5F74 
 60337      6F5F6669 
 60337      7400
 60338              	.LASF311:
 60339 0521 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
 60339      53743136 
 60339      696E6974 
 60339      69616C69 
 60339      7A65725F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1484


 60340              	.LASF1103:
 60341 0544 666C7573 		.string	"flush<char, std::char_traits<char> >"
 60341      683C6368 
 60341      61722C20 
 60341      7374643A 
 60341      3A636861 
 60342              	.LASF1032:
 60343 0569 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, 
 60343      7273655F 
 60343      69746572 
 60343      61746F72 
 60343      3C5F5F67 
 60344              	.LASF991:
 60345 05e6 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6resizeEm"
 60345      74367665 
 60345      63746F72 
 60345      49685361 
 60345      49684545 
 60346              	.LASF27:
 60347 0604 6E6F7468 		.string	"nothrow_t"
 60347      726F775F 
 60347      7400
 60348              	.LASF444:
 60349 060e 6D61736B 		.string	"mask_bits"
 60349      5F626974 
 60349      7300
 60350              	.LASF854:
 60351 0618 72656C65 		.string	"release"
 60351      61736500 
 60352              	.LASF626:
 60353 0620 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_fill_assignEmRKd"
 60353      74367665 
 60353      63746F72 
 60353      49645361 
 60353      49644545 
 60354              	.LASF180:
 60355 064a 72657365 		.string	"reserve"
 60355      72766500 
 60356              	.LASF914:
 60357 0652 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_headERS3_"
 60357      7431315F 
 60357      5475706C 
 60357      655F696D 
 60357      706C494C 
 60358              	.LASF656:
 60359 0698 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE23_S_const_pointer_helperEz"
 60359      74313661 
 60359      6C6C6F63 
 60359      61746F72 
 60359      5F747261 
 60360              	.LASF125:
 60361 06d2 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 60361      74313163 
 60361      6861725F 
 60361      74726169 
 60361      74734963 
 60362              	.LASF786:
GAS LISTING /tmp/ccJUMvuF.s 			page 1485


 60363 06f4 5F526573 		.string	"_Result"
 60363      756C7400 
 60364              	.LASF1785:
 60365 06fc 68656174 		.string	"heatmap_stamp_gen"
 60365      6D61705F 
 60365      7374616D 
 60365      705F6765 
 60365      6E00
 60366              	.LASF1297:
 60367 070e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv"
 60367      395F5F67 
 60367      6E755F63 
 60367      78783137 
 60367      5F5F6E6F 
 60368              	.LASF324:
 60369 0749 6F706572 		.string	"operator std::integral_constant<int, 0>::value_type"
 60369      61746F72 
 60369      20737464 
 60369      3A3A696E 
 60369      74656772 
 60370              	.LASF1026:
 60371 077d 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh"
 60371      74367665 
 60371      63746F72 
 60371      49685361 
 60371      49684545 
 60372              	.LASF1741:
 60373 07a6 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineImLm32ELm624ELm397ELm31EL
 60373      74323475 
 60373      6E69666F 
 60373      726D5F69 
 60373      6E745F64 
 60374              	.LASF528:
 60375 086d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE25_S_difference_type_helperEz"
 60375      74313661 
 60375      6C6C6F63 
 60375      61746F72 
 60375      5F747261 
 60376              	.LASF904:
 60377 08a9 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEcvbEv"
 60377      53743130 
 60377      756E6971 
 60377      75655F70 
 60377      74724939 
 60378              	.LASF915:
 60379 08e4 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_headERKS3_"
 60379      7431315F 
 60379      5475706C 
 60379      655F696D 
 60379      706C494C 
 60380              	.LASF1303:
 60381 092b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEixEl"
 60381      395F5F67 
 60381      6E755F63 
 60381      78783137 
 60381      5F5F6E6F 
 60382              	.LASF597:
GAS LISTING /tmp/ccJUMvuF.s 			page 1486


 60383 0966 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE7reserveEm"
 60383      74367665 
 60383      63746F72 
 60383      49645361 
 60383      49644545 
 60384              	.LASF164:
 60385 0985 63726265 		.string	"crbegin"
 60385      67696E00 
 60386              	.LASF952:
 60387 098d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE25_S_difference_type_helperEz"
 60387      74313661 
 60387      6C6C6F63 
 60387      61746F72 
 60387      5F747261 
 60388              	.LASF384:
 60389 09c9 75707065 		.string	"uppercase"
 60389      72636173 
 60389      6500
 60390              	.LASF1779:
 60391 09d3 6D656D73 		.string	"memset"
 60391      657400
 60392              	.LASF1531:
 60393 09da 75696E74 		.string	"uintptr_t"
 60393      7074725F 
 60393      7400
 60394              	.LASF1229:
 60395 09e4 5F5F6E6F 		.string	"__normal_iterator"
 60395      726D616C 
 60395      5F697465 
 60395      7261746F 
 60395      7200
 60396              	.LASF224:
 60397 09f6 5F5A4E53 		.string	"_ZNSs6insertEmPKc"
 60397      7336696E 
 60397      73657274 
 60397      456D504B 
 60397      6300
 60398              	.LASF186:
 60399 0a08 6F706572 		.string	"operator[]"
 60399      61746F72 
 60399      5B5D00
 60400              	.LASF258:
 60401 0a13 635F7374 		.string	"c_str"
 60401      7200
 60402              	.LASF1537:
 60403 0a19 64656369 		.string	"decimal_point"
 60403      6D616C5F 
 60403      706F696E 
 60403      7400
 60404              	.LASF1376:
 60405 0a27 5F5F6578 		.string	"__exchange_and_add"
 60405      6368616E 
 60405      67655F61 
 60405      6E645F61 
 60405      646400
 60406              	.LASF1368:
 60407 0a3a 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_always_equalEv"
GAS LISTING /tmp/ccJUMvuF.s 			page 1487


 60407      5F5F676E 
 60407      755F6378 
 60407      7831345F 
 60407      5F616C6C 
 60408              	.LASF692:
 60409 0a72 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE6cbeginEv"
 60409      53743676 
 60409      6563746F 
 60409      72496A53 
 60409      61496A45 
 60410              	.LASF249:
 60411 0a91 5F5A4E53 		.string	"_ZNSs14_M_replace_auxEmmmc"
 60411      7331345F 
 60411      4D5F7265 
 60411      706C6163 
 60411      655F6175 
 60412              	.LASF161:
 60413 0aac 5F5A4E4B 		.string	"_ZNKSs6cbeginEv"
 60413      53733663 
 60413      62656769 
 60413      6E457600 
 60414              	.LASF288:
 60415 0abc 66696E64 		.string	"find_last_not_of"
 60415      5F6C6173 
 60415      745F6E6F 
 60415      745F6F66 
 60415      00
 60416              	.LASF1719:
 60417 0acd 5F5F6D69 		.string	"__mid"
 60417      6400
 60418              	.LASF693:
 60419 0ad3 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4cendEv"
 60419      53743676 
 60419      6563746F 
 60419      72496A53 
 60419      61496A45 
 60420              	.LASF575:
 60421 0af0 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSESt16initializer_listIdE"
 60421      74367665 
 60421      63746F72 
 60421      49645361 
 60421      49644545 
 60422              	.LASF1222:
 60423 0b1f 5F5F6D69 		.string	"__min"
 60423      6E00
 60424              	.LASF1679:
 60425 0b25 5F5F6669 		.string	"__first"
 60425      72737400 
 60426              	.LASF924:
 60427 0b2d 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9heatmap_tLb0EE7_M_headERKS2_"
 60427      7431305F 
 60427      48656164 
 60427      5F626173 
 60427      65494C6D 
 60428              	.LASF695:
 60429 0b62 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5crendEv"
 60429      53743676 
GAS LISTING /tmp/ccJUMvuF.s 			page 1488


 60429      6563746F 
 60429      72496A53 
 60429      61496A45 
 60430              	.LASF803:
 60431 0b80 5F496478 		.string	"_Idx"
 60431      00
 60432              	.LASF143:
 60433 0b85 7E626173 		.string	"~basic_string"
 60433      69635F73 
 60433      7472696E 
 60433      6700
 60434              	.LASF885:
 60435 0b93 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_swapERS4_"
 60435      7431315F 
 60435      5475706C 
 60435      655F696D 
 60435      706C494C 
 60436              	.LASF783:
 60437 0be4 5F42696E 		.string	"_Bind"
 60437      6400
 60438              	.LASF141:
 60439 0bea 5F5A4E53 		.string	"_ZNSs12_M_leak_hardEv"
 60439      7331325F 
 60439      4D5F6C65 
 60439      616B5F68 
 60439      61726445 
 60440              	.LASF336:
 60441 0c00 5F535F73 		.string	"_S_showpoint"
 60441      686F7770 
 60441      6F696E74 
 60441      00
 60442              	.LASF342:
 60443 0c0d 5F535F62 		.string	"_S_basefield"
 60443      61736566 
 60443      69656C64 
 60443      00
 60444              	.LASF1635:
 60445 0c1a 746D7066 		.string	"tmpfile"
 60445      696C6500 
 60446              	.LASF347:
 60447 0c22 5F535F61 		.string	"_S_app"
 60447      707000
 60448              	.LASF578:
 60449 0c29 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5beginEv"
 60449      74367665 
 60449      63746F72 
 60449      49645361 
 60449      49644545 
 60450              	.LASF616:
 60451 0c46 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EEmRS4_"
 60451      74367665 
 60451      63746F72 
 60451      49645361 
 60451      49644545 
 60452              	.LASF1135:
 60453 0c8f 5F5F6D69 		.string	"__miter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 60453      7465725F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1489


 60453      62617365 
 60453      3C5F5F67 
 60453      6E755F63 
 60454              	.LASF905:
 60455 0cda 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE7releaseEv"
 60455      74313075 
 60455      6E697175 
 60455      655F7074 
 60455      72493968 
 60456              	.LASF1294:
 60457 0d19 5F535F6E 		.string	"_S_nothrow_swap"
 60457      6F746872 
 60457      6F775F73 
 60457      77617000 
 60458              	.LASF1072:
 60459 0d29 5F5F636F 		.string	"__copy_move_b<double>"
 60459      70795F6D 
 60459      6F76655F 
 60459      623C646F 
 60459      75626C65 
 60460              	.LASF1536:
 60461 0d3f 6C636F6E 		.string	"lconv"
 60461      7600
 60462              	.LASF1802:
 60463 0d45 6D656D6D 		.string	"memmove"
 60463      6F766500 
 60464              	.LASF1539:
 60465 0d4d 67726F75 		.string	"grouping"
 60465      70696E67 
 60465      00
 60466              	.LASF1034:
 60467 0d56 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE4sizeEv"
 60467      53743136 
 60467      696E6974 
 60467      69616C69 
 60467      7A65725F 
 60468              	.LASF1076:
 60469 0d79 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 60469      53743962 
 60469      61736963 
 60469      5F696F73 
 60469      49635374 
 60470              	.LASF1100:
 60471 0da9 6765743C 		.string	"get<1ul, heatmap_t*, std::default_delete<heatmap_t> >"
 60471      31756C2C 
 60471      20686561 
 60471      746D6170 
 60471      5F742A2C 
 60472              	.LASF538:
 60473 0ddf 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8allocateERS0_m"
 60473      74313661 
 60473      6C6C6F63 
 60473      61746F72 
 60473      5F747261 
 60474              	.LASF987:
 60475 0e0d 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE7crbeginEv"
 60475      53743676 
GAS LISTING /tmp/ccJUMvuF.s 			page 1490


 60475      6563746F 
 60475      72496853 
 60475      61496845 
 60476              	.LASF495:
 60477 0e2d 5F5F7074 		.string	"__ptrtr_not_void<double, double>"
 60477      7274725F 
 60477      6E6F745F 
 60477      766F6964 
 60477      3C646F75 
 60478              	.LASF147:
 60479 0e4e 5F5A4E53 		.string	"_ZNSsaSEOSs"
 60479      73615345 
 60479      4F537300 
 60480              	.LASF674:
 60481 0e5a 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIjSaIjEE13get_allocatorEv"
 60481      53743132 
 60481      5F566563 
 60481      746F725F 
 60481      62617365 
 60482              	.LASF153:
 60483 0e88 5F5A4E4B 		.string	"_ZNKSs3endEv"
 60483      53733365 
 60483      6E644576 
 60483      00
 60484              	.LASF134:
 60485 0e95 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcS_S_"
 60485      7331335F 
 60485      535F636F 
 60485      70795F63 
 60485      68617273 
 60486              	.LASF712:
 60487 0eb1 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4backEv"
 60487      53743676 
 60487      6563746F 
 60487      72496A53 
 60487      61496A45 
 60488              	.LASF813:
 60489 0ece 5F486561 		.string	"_Head"
 60489      6400
 60490              	.LASF94:
 60491 0ed4 5F5A4E53 		.string	"_ZNSs4_Rep7_M_grabERKSaIcES2_"
 60491      73345F52 
 60491      6570375F 
 60491      4D5F6772 
 60491      61624552 
 60492              	.LASF359:
 60493 0ef2 5F535F69 		.string	"_S_ios_iostate_end"
 60493      6F735F69 
 60493      6F737461 
 60493      74655F65 
 60493      6E6400
 60494              	.LASF1308:
 60495 0f05 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv"
 60495      395F5F67 
 60495      6E755F63 
 60495      78783137 
 60495      5F5F6E6F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1491


 60496              	.LASF265:
 60497 0f43 5F5A4E4B 		.string	"_ZNKSs4findERKSsm"
 60497      53733466 
 60497      696E6445 
 60497      524B5373 
 60497      6D00
 60498              	.LASF1411:
 60499 0f55 5F6C6F63 		.string	"_lock"
 60499      6B00
 60500              	.LASF309:
 60501 0f5b 5F4D5F6C 		.string	"_M_len"
 60501      656E00
 60502              	.LASF1039:
 60503 0f62 5F435641 		.string	"_CVArg"
 60503      726700
 60504              	.LASF735:
 60505 0f69 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPjS1_EES5_"
 60505      74367665 
 60505      63746F72 
 60505      496A5361 
 60505      496A4545 
 60506              	.LASF1371:
 60507 0fb1 5F5F6E6F 		.string	"__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char
 60507      726D616C 
 60507      5F697465 
 60507      7261746F 
 60507      723C756E 
 60508              	.LASF954:
 60509 1010 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE48_S_propagate_on_container_copy_assignment_helperEz"
 60509      74313661 
 60509      6C6C6F63 
 60509      61746F72 
 60509      5F747261 
 60510              	.LASF508:
 60511 1063 5F517561 		.string	"_Qualified"
 60511      6C696669 
 60511      656400
 60512              	.LASF1673:
 60513 106e 5F5F6131 		.string	"__a1"
 60513      00
 60514              	.LASF1674:
 60515 1073 5F5F6132 		.string	"__a2"
 60515      00
 60516              	.LASF1183:
 60517 1078 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 60517      74726561 
 60517      6D5F696E 
 60517      73657274 
 60517      3C636861 
 60518              	.LASF1520:
 60519 10a8 75696E74 		.string	"uint_least32_t"
 60519      5F6C6561 
 60519      73743332 
 60519      5F7400
 60520              	.LASF301:
 60521 10b7 5F436861 		.string	"_CharT"
 60521      725400
GAS LISTING /tmp/ccJUMvuF.s 			page 1492


 60522              	.LASF1050:
 60523 10be 5F5F6164 		.string	"__add_ref<std::default_delete<heatmap_stamp_t> >"
 60523      645F7265 
 60523      663C7374 
 60523      643A3A64 
 60523      65666175 
 60524              	.LASF951:
 60525 10ef 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE28_S_const_void_pointer_helperEz"
 60525      74313661 
 60525      6C6C6F63 
 60525      61746F72 
 60525      5F747261 
 60526              	.LASF1471:
 60527 112e 746D5F6D 		.string	"tm_mday"
 60527      64617900 
 60528              	.LASF1241:
 60529 1136 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplEl"
 60529      395F5F67 
 60529      6E755F63 
 60529      78783137 
 60529      5F5F6E6F 
 60530              	.LASF14:
 60531 1162 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 60531      53743135 
 60531      5F5F6578 
 60531      63657074 
 60531      696F6E5F 
 60532              	.LASF1106:
 60533 1192 5F446573 		.string	"_Destroy<unsigned int*, unsigned int>"
 60533      74726F79 
 60533      3C756E73 
 60533      69676E65 
 60533      6420696E 
 60534              	.LASF1627:
 60535 11b8 67657463 		.string	"getchar"
 60535      68617200 
 60536              	.LASF701:
 60537 11c0 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE8capacityEv"
 60537      53743676 
 60537      6563746F 
 60537      72496A53 
 60537      61496A45 
 60538              	.LASF549:
 60539 11e1 5F566563 		.string	"_Vector_impl"
 60539      746F725F 
 60539      696D706C 
 60539      00
 60540              	.LASF1512:
 60541 11ee 75696E74 		.string	"uint32_t"
 60541      33325F74 
 60541      00
 60542              	.LASF58:
 60543 11f7 72656665 		.string	"reference"
 60543      72656E63 
 60543      6500
 60544              	.LASF751:
 60545 1201 64656661 		.string	"default_delete<heatmap_stamp_t>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1493


 60545      756C745F 
 60545      64656C65 
 60545      74653C68 
 60545      6561746D 
 60546              	.LASF479:
 60547 1221 5F4D5F69 		.string	"_M_init"
 60547      6E697400 
 60548              	.LASF838:
 60549 1229 5F5F7475 		.string	"__tuple_type"
 60549      706C655F 
 60549      74797065 
 60549      00
 60550              	.LASF677:
 60551 1236 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE17_M_create_storageEm"
 60551      7431325F 
 60551      56656374 
 60551      6F725F62 
 60551      61736549 
 60552              	.LASF40:
 60553 1267 6D6F7665 		.string	"move"
 60553      00
 60554              	.LASF1623:
 60555 126c 66736565 		.string	"fseek"
 60555      6B00
 60556              	.LASF963:
 60557 1272 5F566563 		.string	"_Vector_base<unsigned char, std::allocator<unsigned char> >"
 60557      746F725F 
 60557      62617365 
 60557      3C756E73 
 60557      69676E65 
 60558              	.LASF1478:
 60559 12ae 746D5F7A 		.string	"tm_zone"
 60559      6F6E6500 
 60560              	.LASF767:
 60561 12b6 6F706572 		.string	"operator()<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 60561      61746F72 
 60561      28293C73 
 60561      74643A3A 
 60561      6D657273 
 60562              	.LASF1735:
 60563 136a 5F5F6261 		.string	"__base"
 60563      736500
 60564              	.LASF1021:
 60565 1371 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_fill_assignEmRKh"
 60565      74367665 
 60565      63746F72 
 60565      49685361 
 60565      49684545 
 60566              	.LASF883:
 60567 139b 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSERKS4_"
 60567      7431315F 
 60567      5475706C 
 60567      655F696D 
 60567      706C494C 
 60568              	.LASF346:
 60569 13e7 5F496F73 		.string	"_Ios_Openmode"
 60569      5F4F7065 
GAS LISTING /tmp/ccJUMvuF.s 			page 1494


 60569      6E6D6F64 
 60569      6500
 60570              	.LASF1249:
 60571 13f5 5F5F6E6F 		.string	"__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::alloc
 60571      726D616C 
 60571      5F697465 
 60571      7261746F 
 60571      723C6368 
 60572              	.LASF1005:
 60573 145d 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4backEv"
 60573      53743676 
 60573      6563746F 
 60573      72496853 
 60573      61496845 
 60574              	.LASF348:
 60575 147a 5F535F61 		.string	"_S_ate"
 60575      746500
 60576              	.LASF159:
 60577 1481 5F5A4E4B 		.string	"_ZNKSs4rendEv"
 60577      53733472 
 60577      656E6445 
 60577      7600
 60578              	.LASF1280:
 60579 148f 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE17_S_select_on_copyERKS1_"
 60579      5F5F676E 
 60579      755F6378 
 60579      7831345F 
 60579      5F616C6C 
 60580              	.LASF908:
 60581 14cd 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSERKS3_"
 60581      74313075 
 60581      6E697175 
 60581      655F7074 
 60581      72493968 
 60582              	.LASF379:
 60583 150a 73686F77 		.string	"showbase"
 60583      62617365 
 60583      00
 60584              	.LASF796:
 60585 1513 5F576561 		.string	"_Weak_result_type<std::uniform_int_distribution<int> >"
 60585      6B5F7265 
 60585      73756C74 
 60585      5F747970 
 60585      653C7374 
 60586              	.LASF74:
 60587 154a 5F4D5F63 		.string	"_M_capacity"
 60587      61706163 
 60587      69747900 
 60588              	.LASF793:
 60589 1556 5F46756E 		.string	"_Functor"
 60589      63746F72 
 60589      00
 60590              	.LASF68:
 60591 155f 69746572 		.string	"iterator"
 60591      61746F72 
 60591      00
 60592              	.LASF343:
GAS LISTING /tmp/ccJUMvuF.s 			page 1495


 60593 1568 5F535F66 		.string	"_S_floatfield"
 60593      6C6F6174 
 60593      6669656C 
 60593      6400
 60594              	.LASF990:
 60595 1576 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE8max_sizeEv"
 60595      53743676 
 60595      6563746F 
 60595      72496853 
 60595      61496845 
 60596              	.LASF1387:
 60597 1597 6C6F6E67 		.string	"long double"
 60597      20646F75 
 60597      626C6500 
 60598              	.LASF433:
 60599 15a3 5F5F6269 		.string	"__big_enough"
 60599      675F656E 
 60599      6F756768 
 60599      00
 60600              	.LASF787:
 60601 15b0 6F706572 		.string	"operator()<, int>"
 60601      61746F72 
 60601      28293C2C 
 60601      20696E74 
 60601      3E00
 60602              	.LASF645:
 60603 15c2 696E6974 		.string	"initializer_list<double>"
 60603      69616C69 
 60603      7A65725F 
 60603      6C697374 
 60603      3C646F75 
 60604              	.LASF217:
 60605 15db 5F5A4E53 		.string	"_ZNSs6assignESt16initializer_listIcE"
 60605      73366173 
 60605      7369676E 
 60605      45537431 
 60605      36696E69 
 60606              	.LASF1073:
 60607 1600 65786365 		.string	"exception"
 60607      7074696F 
 60607      6E00
 60608              	.LASF341:
 60609 160a 5F535F61 		.string	"_S_adjustfield"
 60609      646A7573 
 60609      74666965 
 60609      6C6400
 60610              	.LASF1504:
 60611 1619 77637374 		.string	"wcstoll"
 60611      6F6C6C00 
 60612              	.LASF1209:
 60613 1621 5F5F7468 		.string	"__throw_bad_cast"
 60613      726F775F 
 60613      6261645F 
 60613      63617374 
 60613      00
 60614              	.LASF1261:
 60615 1632 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv"
GAS LISTING /tmp/ccJUMvuF.s 			page 1496


 60615      395F5F67 
 60615      6E755F63 
 60615      78783137 
 60615      5F5F6E6F 
 60616              	.LASF1162:
 60617 1662 5F5F736F 		.string	"__sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops::_It
 60617      72743C5F 
 60617      5F676E75 
 60617      5F637878 
 60617      3A3A5F5F 
 60618              	.LASF923:
 60619 16c9 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9heatmap_tLb0EE7_M_headERS2_"
 60619      7431305F 
 60619      48656164 
 60619      5F626173 
 60619      65494C6D 
 60620              	.LASF1791:
 60621 16fd 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 60621      74313163 
 60621      6861725F 
 60621      74726169 
 60621      74734963 
 60622              	.LASF988:
 60623 1719 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5crendEv"
 60623      53743676 
 60623      6563746F 
 60623      72496853 
 60623      61496845 
 60624              	.LASF375:
 60625 1737 696E7465 		.string	"internal"
 60625      726E616C 
 60625      00
 60626              	.LASF138:
 60627 1740 5F4D5F6D 		.string	"_M_mutate"
 60627      75746174 
 60627      6500
 60628              	.LASF403:
 60629 174a 5F5A4E53 		.string	"_ZNSolsEPFRSt8ios_baseS0_E"
 60629      6F6C7345 
 60629      50465253 
 60629      7438696F 
 60629      735F6261 
 60630              	.LASF1436:
 60631 1765 66676574 		.string	"fgetwc"
 60631      776300
 60632              	.LASF1644:
 60633 176c 666C6F61 		.string	"float_t"
 60633      745F7400 
 60634              	.LASF1006:
 60635 1774 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4dataEv"
 60635      74367665 
 60635      63746F72 
 60635      49685361 
 60635      49684545 
 60636              	.LASF1437:
 60637 1790 66676574 		.string	"fgetws"
 60637      777300
GAS LISTING /tmp/ccJUMvuF.s 			page 1497


 60638              	.LASF1518:
 60639 1797 75696E74 		.string	"uint_least8_t"
 60639      5F6C6561 
 60639      7374385F 
 60639      7400
 60640              	.LASF455:
 60641 17a5 64656661 		.string	"default_seed"
 60641      756C745F 
 60641      73656564 
 60641      00
 60642              	.LASF211:
 60643 17b2 5F5A4E53 		.string	"_ZNSs6assignERKSs"
 60643      73366173 
 60643      7369676E 
 60643      45524B53 
 60643      7300
 60644              	.LASF1096:
 60645 17c4 666F7277 		.string	"forward<std::uniform_int_distribution<>&>"
 60645      6172643C 
 60645      7374643A 
 60645      3A756E69 
 60645      666F726D 
 60646              	.LASF580:
 60647 17ee 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE3endEv"
 60647      74367665 
 60647      63746F72 
 60647      49645361 
 60647      49644545 
 60648              	.LASF462:
 60649 1809 64697363 		.string	"discard"
 60649      61726400 
 60650              	.LASF928:
 60651 1811 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_headERKS4_"
 60651      7431315F 
 60651      5475706C 
 60651      655F696D 
 60651      706C494C 
 60652              	.LASF290:
 60653 185c 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcmm"
 60653      53733136 
 60653      66696E64 
 60653      5F6C6173 
 60653      745F6E6F 
 60654              	.LASF487:
 60655 187b 5F4D5F67 		.string	"_M_getval_pretr1"
 60655      65747661 
 60655      6C5F7072 
 60655      65747231 
 60655      00
 60656              	.LASF1089:
 60657 188c 5F546169 		.string	"_Tail"
 60657      6C00
 60658              	.LASF861:
 60659 1892 5F486561 		.string	"_Head_base<1ul, std::default_delete<heatmap_stamp_t>, true>"
 60659      645F6261 
 60659      73653C31 
 60659      756C2C20 
GAS LISTING /tmp/ccJUMvuF.s 			page 1498


 60659      7374643A 
 60660              	.LASF1790:
 60661 18ce 5F5F6465 		.string	"__debug"
 60661      62756700 
 60662              	.LASF1206:
 60663 18d6 6F706572 		.string	"operator()<double, __gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 60663      61746F72 
 60663      28293C64 
 60663      6F75626C 
 60663      652C205F 
 60664              	.LASF1648:
 60665 1927 52657065 		.string	"RepeatTimer"
 60665      61745469 
 60665      6D657200 
 60666              	.LASF520:
 60667 1933 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE17_S_pointer_helperEz"
 60667      74313661 
 60667      6C6C6F63 
 60667      61746F72 
 60667      5F747261 
 60668              	.LASF59:
 60669 1967 636F6E73 		.string	"const_reference"
 60669      745F7265 
 60669      66657265 
 60669      6E636500 
 60670              	.LASF780:
 60671 1977 5F42696E 		.string	"_Bind<std::uniform_int_distribution<int>(std::mersenne_twister_engine<long unsigned int, 
 60671      643C7374 
 60671      643A3A75 
 60671      6E69666F 
 60671      726D5F69 
 60672              	.LASF664:
 60673 1a49 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8allocateERS0_m"
 60673      74313661 
 60673      6C6C6F63 
 60673      61746F72 
 60673      5F747261 
 60674              	.LASF1087:
 60675 1a77 666F7277 		.string	"forward<heatmap_stamp_t*&>"
 60675      6172643C 
 60675      68656174 
 60675      6D61705F 
 60675      7374616D 
 60676              	.LASF1078:
 60677 1a92 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 60677      74396261 
 60677      7369635F 
 60677      696F7349 
 60677      63537431 
 60678              	.LASF441:
 60679 1ad1 776F7264 		.string	"word_size"
 60679      5F73697A 
 60679      6500
 60680              	.LASF1773:
 60681 1adb 5F5A6E77 		.string	"_Znwm"
 60681      6D00
 60682              	.LASF1126:
GAS LISTING /tmp/ccJUMvuF.s 			page 1499


 60683 1ae1 5F5F6E69 		.string	"__niter_base<double*>"
 60683      7465725F 
 60683      62617365 
 60683      3C646F75 
 60683      626C652A 
 60684              	.LASF339:
 60685 1af7 5F535F75 		.string	"_S_unitbuf"
 60685      6E697462 
 60685      756600
 60686              	.LASF190:
 60687 1b02 5F5A4E53 		.string	"_ZNSs2atEm"
 60687      73326174 
 60687      456D00
 60688              	.LASF1149:
 60689 1b0d 5F5F6E69 		.string	"__niter_base<unsigned char*>"
 60689      7465725F 
 60689      62617365 
 60689      3C756E73 
 60689      69676E65 
 60690              	.LASF980:
 60691 1b2a 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE3endEv"
 60691      53743676 
 60691      6563746F 
 60691      72496853 
 60691      61496845 
 60692              	.LASF1568:
 60693 1b46 35646976 		.string	"5div_t"
 60693      5F7400
 60694              	.LASF1186:
 60695 1b4d 626F6F6C 		.string	"bool"
 60695      00
 60696              	.LASF725:
 60697 1b52 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5clearEv"
 60697      74367665 
 60697      63746F72 
 60697      496A5361 
 60697      496A4545 
 60698              	.LASF337:
 60699 1b6f 5F535F73 		.string	"_S_showpos"
 60699      686F7770 
 60699      6F7300
 60700              	.LASF1048:
 60701 1b7a 5F5F6164 		.string	"__add_c_ref<heatmap_t*>"
 60701      645F635F 
 60701      7265663C 
 60701      68656174 
 60701      6D61705F 
 60702              	.LASF157:
 60703 1b92 72656E64 		.string	"rend"
 60703      00
 60704              	.LASF564:
 60705 1b97 5F4D5F61 		.string	"_M_allocate"
 60705      6C6C6F63 
 60705      61746500 
 60706              	.LASF718:
 60707 1ba3 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EERS4_"
 60707      74367665 
GAS LISTING /tmp/ccJUMvuF.s 			page 1500


 60707      63746F72 
 60707      496A5361 
 60707      496A4545 
 60708              	.LASF1174:
 60709 1beb 616C6C6F 		.string	"allocator_arg"
 60709      6361746F 
 60709      725F6172 
 60709      6700
 60710              	.LASF372:
 60711 1bf9 666D7466 		.string	"fmtflags"
 60711      6C616773 
 60711      00
 60712              	.LASF824:
 60713 1c02 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 60713      7431315F 
 60713      5475706C 
 60713      655F696D 
 60713      706C494C 
 60714              	.LASF185:
 60715 1cb2 5F5A4E4B 		.string	"_ZNKSs5emptyEv"
 60715      53733565 
 60715      6D707479 
 60715      457600
 60716              	.LASF606:
 60717 1cc1 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4backEv"
 60717      74367665 
 60717      63746F72 
 60717      49645361 
 60717      49644545 
 60718              	.LASF168:
 60719 1cdd 73697A65 		.string	"size"
 60719      00
 60720              	.LASF227:
 60721 1ce2 65726173 		.string	"erase"
 60721      6500
 60722              	.LASF397:
 60723 1ce8 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 60723      635F6F73 
 60723      74726561 
 60723      6D3C6368 
 60723      61722C20 
 60724              	.LASF1782:
 60725 1d15 68656174 		.string	"heatmap_free"
 60725      6D61705F 
 60725      66726565 
 60725      00
 60726              	.LASF743:
 60727 1d22 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE3endEv"
 60727      53743136 
 60727      696E6974 
 60727      69616C69 
 60727      7A65725F 
 60728              	.LASF1047:
 60729 1d44 72656D6F 		.string	"remove_reference<heatmap_t*&>"
 60729      76655F72 
 60729      65666572 
 60729      656E6365 
GAS LISTING /tmp/ccJUMvuF.s 			page 1501


 60729      3C686561 
 60730              	.LASF511:
 60731 1d62 5F497345 		.string	"_IsEnum"
 60731      6E756D00 
 60732              	.LASF551:
 60733 1d6a 5F4D5F66 		.string	"_M_finish"
 60733      696E6973 
 60733      6800
 60734              	.LASF801:
 60735 1d74 5F4D5F73 		.string	"_M_swap"
 60735      77617000 
 60736              	.LASF229:
 60737 1d7c 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE"
 60737      73356572 
 60737      61736545 
 60737      4E395F5F 
 60737      676E755F 
 60738              	.LASF1759:
 60739 1dae 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE"
 60739      5F5F676E 
 60739      755F6378 
 60739      7832345F 
 60739      5F6E756D 
 60740              	.LASF366:
 60741 1de0 5F535F73 		.string	"_S_synced_with_stdio"
 60741      796E6365 
 60741      645F7769 
 60741      74685F73 
 60741      7464696F 
 60742              	.LASF529:
 60743 1df5 5F535F73 		.string	"_S_size_type_helper"
 60743      697A655F 
 60743      74797065 
 60743      5F68656C 
 60743      70657200 
 60744              	.LASF136:
 60745 1e09 5F535F63 		.string	"_S_compare"
 60745      6F6D7061 
 60745      726500
 60746              	.LASF1588:
 60747 1e14 71756963 		.string	"quick_exit"
 60747      6B5F6578 
 60747      697400
 60748              	.LASF488:
 60749 1e1f 5F5A4E53 		.string	"_ZNSt13random_device16_M_getval_pretr1Ev"
 60749      74313372 
 60749      616E646F 
 60749      6D5F6465 
 60749      76696365 
 60750              	.LASF1469:
 60751 1e48 746D5F6D 		.string	"tm_min"
 60751      696E00
 60752              	.LASF253:
 60753 1e4f 5F5A4E53 		.string	"_ZNSs18_S_construct_aux_2EmcRKSaIcE"
 60753      7331385F 
 60753      535F636F 
 60753      6E737472 
GAS LISTING /tmp/ccJUMvuF.s 			page 1502


 60753      7563745F 
 60754              	.LASF671:
 60755 1e73 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE12_Vector_impl12_M_swap_dataERS2_"
 60755      7431325F 
 60755      56656374 
 60755      6F725F62 
 60755      61736549 
 60756              	.LASF1541:
 60757 1eb0 63757272 		.string	"currency_symbol"
 60757      656E6379 
 60757      5F73796D 
 60757      626F6C00 
 60758              	.LASF271:
 60759 1ec0 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcm"
 60759      53733572 
 60759      66696E64 
 60759      45504B63 
 60759      6D00
 60760              	.LASF1441:
 60761 1ed2 66776964 		.string	"fwide"
 60761      6500
 60762              	.LASF1578:
 60763 1ed8 61746F66 		.string	"atof"
 60763      00
 60764              	.LASF1579:
 60765 1edd 61746F69 		.string	"atoi"
 60765      00
 60766              	.LASF1580:
 60767 1ee2 61746F6C 		.string	"atol"
 60767      00
 60768              	.LASF681:
 60769 1ee7 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSESt16initializer_listIjE"
 60769      74367665 
 60769      63746F72 
 60769      496A5361 
 60769      496A4545 
 60770              	.LASF1251:
 60771 1f16 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv"
 60771      395F5F67 
 60771      6E755F63 
 60771      78783137 
 60771      5F5F6E6F 
 60772              	.LASF282:
 60773 1f43 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEcm"
 60773      53733132 
 60773      66696E64 
 60773      5F6C6173 
 60773      745F6F66 
 60774              	.LASF795:
 60775 1f5b 5F576561 		.string	"_Weak_result_type_impl"
 60775      6B5F7265 
 60775      73756C74 
 60775      5F747970 
 60775      655F696D 
 60776              	.LASF1065:
 60777 1f72 5F497465 		.string	"_Iter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<doubl
 60777      725F6261 
GAS LISTING /tmp/ccJUMvuF.s 			page 1503


 60777      73653C5F 
 60777      5F676E75 
 60777      5F637878 
 60778              	.LASF1451:
 60779 1fd9 70757477 		.string	"putwchar"
 60779      63686172 
 60779      00
 60780              	.LASF1419:
 60781 1fe2 5F756E75 		.string	"_unused2"
 60781      73656432 
 60781      00
 60782              	.LASF1685:
 60783 1feb 5F5F6974 		.string	"__it"
 60783      00
 60784              	.LASF181:
 60785 1ff0 5F5A4E53 		.string	"_ZNSs7reserveEm"
 60785      73377265 
 60785      73657276 
 60785      65456D00 
 60786              	.LASF319:
 60787 2000 7E5F416C 		.string	"~_Alloc_hider"
 60787      6C6F635F 
 60787      68696465 
 60787      7200
 60788              	.LASF518:
 60789 200e 5F5F7369 		.string	"__size_type"
 60789      7A655F74 
 60789      79706500 
 60790              	.LASF226:
 60791 201a 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc"
 60791      7336696E 
 60791      73657274 
 60791      454E395F 
 60791      5F676E75 
 60792              	.LASF53:
 60793 204e 73697A65 		.string	"size_t"
 60793      5F7400
 60794              	.LASF683:
 60795 2055 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6assignESt16initializer_listIjE"
 60795      74367665 
 60795      63746F72 
 60795      496A5361 
 60795      496A4545 
 60796              	.LASF496:
 60797 2089 5F5F7479 		.string	"__type"
 60797      706500
 60798              	.LASF834:
 60799 2090 5F55456C 		.string	"_UElements"
 60799      656D656E 
 60799      747300
 60800              	.LASF331:
 60801 209b 5F535F6C 		.string	"_S_left"
 60801      65667400 
 60802              	.LASF425:
 60803 20a3 5F5F756E 		.string	"__uninit_default_n<double*, long unsigned int>"
 60803      696E6974 
 60803      5F646566 
GAS LISTING /tmp/ccJUMvuF.s 			page 1504


 60803      61756C74 
 60803      5F6E3C64 
 60804              	.LASF406:
 60805 20d2 5F56616C 		.string	"_ValueT"
 60805      75655400 
 60806              	.LASF853:
 60807 20da 6F706572 		.string	"operator bool"
 60807      61746F72 
 60807      20626F6F 
 60807      6C00
 60808              	.LASF715:
 60809 20e8 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE9push_backERKj"
 60809      74367665 
 60809      63746F72 
 60809      496A5361 
 60809      496A4545 
 60810              	.LASF1322:
 60811 210b 6E65775F 		.string	"new_allocator<unsigned int>"
 60811      616C6C6F 
 60811      6361746F 
 60811      723C756E 
 60811      7369676E 
 60812              	.LASF1003:
 60813 2127 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5frontEv"
 60813      53743676 
 60813      6563746F 
 60813      72496853 
 60813      61496845 
 60814              	.LASF273:
 60815 2145 66696E64 		.string	"find_first_of"
 60815      5F666972 
 60815      73745F6F 
 60815      6600
 60816              	.LASF560:
 60817 2153 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv"
 60817      53743132 
 60817      5F566563 
 60817      746F725F 
 60817      62617365 
 60818              	.LASF746:
 60819 2187 5F535F74 		.string	"_S_threshold"
 60819      68726573 
 60819      686F6C64 
 60819      00
 60820              	.LASF484:
 60821 2194 5F5A4E53 		.string	"_ZNSt13random_device7_M_finiEv"
 60821      74313372 
 60821      616E646F 
 60821      6D5F6465 
 60821      76696365 
 60822              	.LASF18:
 60823 21b3 6E756C6C 		.string	"nullptr_t"
 60823      7074725F 
 60823      7400
 60824              	.LASF231:
 60825 21bd 706F705F 		.string	"pop_back"
 60825      6261636B 
GAS LISTING /tmp/ccJUMvuF.s 			page 1505


 60825      00
 60826              	.LASF962:
 60827 21c6 5F5F616C 		.string	"__alloctr_rebind<std::allocator<unsigned char>, unsigned char, true>"
 60827      6C6F6374 
 60827      725F7265 
 60827      62696E64 
 60827      3C737464 
 60828              	.LASF761:
 60829 220b 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE1bEv"
 60829      53743234 
 60829      756E6966 
 60829      6F726D5F 
 60829      696E745F 
 60830              	.LASF1108:
 60831 2233 5F446573 		.string	"_Destroy<double*, double>"
 60831      74726F79 
 60831      3C646F75 
 60831      626C652A 
 60831      2C20646F 
 60832              	.LASF1453:
 60833 224d 73777363 		.string	"swscanf"
 60833      616E6600 
 60834              	.LASF1708:
 60835 2255 5F5F696E 		.string	"__init"
 60835      697400
 60836              	.LASF160:
 60837 225c 63626567 		.string	"cbegin"
 60837      696E00
 60838              	.LASF1300:
 60839 2263 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEi"
 60839      5F5F676E 
 60839      755F6378 
 60839      7831375F 
 60839      5F6E6F72 
 60840              	.LASF871:
 60841 229d 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEEaSEOS3_"
 60841      7431315F 
 60841      5475706C 
 60841      655F696D 
 60841      706C494C 
 60842              	.LASF948:
 60843 22e4 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE17_S_pointer_helperEz"
 60843      74313661 
 60843      6C6C6F63 
 60843      61746F72 
 60843      5F747261 
 60844              	.LASF1299:
 60845 2318 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv"
 60845      5F5F676E 
 60845      755F6378 
 60845      7831375F 
 60845      5F6E6F72 
 60846              	.LASF158:
 60847 2352 5F5A4E53 		.string	"_ZNSs4rendEv"
 60847      73347265 
 60847      6E644576 
 60847      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1506


 60848              	.LASF689:
 60849 235f 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE6rbeginEv"
 60849      53743676 
 60849      6563746F 
 60849      72496A53 
 60849      61496A45 
 60850              	.LASF927:
 60851 237e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_headERS4_"
 60851      7431315F 
 60851      5475706C 
 60851      655F696D 
 60851      706C494C 
 60852              	.LASF1661:
 60853 23c8 74686973 		.string	"this"
 60853      00
 60854              	.LASF412:
 60855 23cd 5F5A4E53 		.string	"_ZNSo3putEc"
 60855      6F337075 
 60855      74456300 
 60856              	.LASF1177:
 60857 23d9 6E6F7468 		.string	"nothrow"
 60857      726F7700 
 60858              	.LASF156:
 60859 23e1 5F5A4E4B 		.string	"_ZNKSs6rbeginEv"
 60859      53733672 
 60859      62656769 
 60859      6E457600 
 60860              	.LASF1343:
 60861 23f1 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmmEi"
 60861      5F5F676E 
 60861      755F6378 
 60861      7831375F 
 60861      5F6E6F72 
 60862              	.LASF1659:
 60863 242b 6E636F6C 		.string	"ncolors"
 60863      6F727300 
 60864              	.LASF1670:
 60865 2433 5F5F6F6C 		.string	"__old"
 60865      6400
 60866              	.LASF1342:
 60867 2439 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmmEv"
 60867      5F5F676E 
 60867      755F6378 
 60867      7831375F 
 60867      5F6E6F72 
 60868              	.LASF494:
 60869 2473 5F547031 		.string	"_Tp1"
 60869      00
 60870              	.LASF1737:
 60871 2478 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 60871      53743135 
 60871      5F5F6578 
 60871      63657074 
 60871      696F6E5F 
 60872              	.LASF155:
 60873 24a4 5F5A4E53 		.string	"_ZNSs6rbeginEv"
 60873      73367262 
GAS LISTING /tmp/ccJUMvuF.s 			page 1507


 60873      6567696E 
 60873      457600
 60874              	.LASF734:
 60875 24b3 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPjS1_EE"
 60875      74367665 
 60875      63746F72 
 60875      496A5361 
 60875      496A4545 
 60876              	.LASF975:
 60877 24f8 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6assignEmRKh"
 60877      74367665 
 60877      63746F72 
 60877      49685361 
 60877      49684545 
 60878              	.LASF955:
 60879 2519 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE48_S_propagate_on_container_move_assignment_helperEz"
 60879      74313661 
 60879      6C6C6F63 
 60879      61746F72 
 60879      5F747261 
 60880              	.LASF1161:
 60881 256c 5F5F6C67 		.string	"__lg"
 60881      00
 60882              	.LASF1022:
 60883 2571 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEmRKh"
 60883      74367665 
 60883      63746F72 
 60883      49685361 
 60883      49684545 
 60884              	.LASF1637:
 60885 25c1 756E6765 		.string	"ungetc"
 60885      746300
 60886              	.LASF21:
 60887 25c8 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEcvbEv"
 60887      53743137 
 60887      696E7465 
 60887      6772616C 
 60887      5F636F6E 
 60888              	.LASF1088:
 60889 25ee 5F5F6765 		.string	"__get_helper<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 60889      745F6865 
 60889      6C706572 
 60889      3C30756C 
 60889      2C206865 
 60890              	.LASF475:
 60891 2639 656E7472 		.string	"entropy"
 60891      6F707900 
 60892              	.LASF1662:
 60893 2641 5F5F6774 		.string	"__gthread_active_p"
 60893      68726561 
 60893      645F6163 
 60893      74697665 
 60893      5F7000
 60894              	.LASF1393:
 60895 2654 5F494F5F 		.string	"_IO_read_end"
 60895      72656164 
 60895      5F656E64 
GAS LISTING /tmp/ccJUMvuF.s 			page 1508


 60895      00
 60896              	.LASF572:
 60897 2661 7E766563 		.string	"~vector"
 60897      746F7200 
 60898              	.LASF773:
 60899 2669 5F5F646F 		.string	"__do_wrap"
 60899      5F777261 
 60899      7000
 60900              	.LASF601:
 60901 2673 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE14_M_range_checkEm"
 60901      53743676 
 60901      6563746F 
 60901      72496453 
 60901      61496445 
 60902              	.LASF892:
 60903 269b 636F6E64 		.string	"conditional<false, std::default_delete<heatmap_stamp_t>, const std::default_delete<heatma
 60903      6974696F 
 60903      6E616C3C 
 60903      66616C73 
 60903      652C2073 
 60904              	.LASF393:
 60905 2701 62696E61 		.string	"binary"
 60905      727900
 60906              	.LASF869:
 60907 2708 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_tailERKS3_"
 60907      7431315F 
 60907      5475706C 
 60907      655F696D 
 60907      706C494C 
 60908              	.LASF55:
 60909 2756 74727565 		.string	"true_type"
 60909      5F747970 
 60909      6500
 60910              	.LASF862:
 60911 2760 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI15heatmap_stamp_tELb1EE7_M_headERS3_"
 60911      7431305F 
 60911      48656164 
 60911      5F626173 
 60911      65494C6D 
 60912              	.LASF1018:
 60913 27ae 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5clearEv"
 60913      74367665 
 60913      63746F72 
 60913      49685361 
 60913      49684545 
 60914              	.LASF1454:
 60915 27cb 756E6765 		.string	"ungetwc"
 60915      74776300 
 60916              	.LASF1559:
 60917 27d3 696E745F 		.string	"int_p_sign_posn"
 60917      705F7369 
 60917      676E5F70 
 60917      6F736E00 
 60918              	.LASF1569:
 60919 27e3 71756F74 		.string	"quot"
 60919      00
 60920              	.LASF1429:
GAS LISTING /tmp/ccJUMvuF.s 			page 1509


 60921 27e8 5F5F7763 		.string	"__wchb"
 60921      686200
 60922              	.LASF1049:
 60923 27ef 5F5F6164 		.string	"__add_ref<heatmap_t*>"
 60923      645F7265 
 60923      663C6865 
 60923      61746D61 
 60923      705F742A 
 60924              	.LASF43:
 60925 2805 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 60925      74313163 
 60925      6861725F 
 60925      74726169 
 60925      74734963 
 60926              	.LASF552:
 60927 2827 5F4D5F65 		.string	"_M_end_of_storage"
 60927      6E645F6F 
 60927      665F7374 
 60927      6F726167 
 60927      6500
 60928              	.LASF1799:
 60929 2839 5F5F7374 		.string	"__static_initialization_and_destruction_0"
 60929      61746963 
 60929      5F696E69 
 60929      7469616C 
 60929      697A6174 
 60930              	.LASF281:
 60931 2863 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcm"
 60931      53733132 
 60931      66696E64 
 60931      5F6C6173 
 60931      745F6F66 
 60932              	.LASF112:
 60933 287d 5F4D5F69 		.string	"_M_iend"
 60933      656E6400 
 60934              	.LASF1472:
 60935 2885 746D5F6D 		.string	"tm_mon"
 60935      6F6E00
 60936              	.LASF1595:
 60937 288c 77637374 		.string	"wcstombs"
 60937      6F6D6273 
 60937      00
 60938              	.LASF1641:
 60939 2895 746F7763 		.string	"towctrans"
 60939      7472616E 
 60939      7300
 60940              	.LASF535:
 60941 289f 5F535F70 		.string	"_S_propagate_on_container_swap_helper"
 60941      726F7061 
 60941      67617465 
 60941      5F6F6E5F 
 60941      636F6E74 
 60942              	.LASF1652:
 60943 28c5 7E526570 		.string	"~RepeatTimer"
 60943      65617454 
 60943      696D6572 
 60943      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1510


 60944              	.LASF655:
 60945 28d2 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE17_S_pointer_helperEz"
 60945      74313661 
 60945      6C6C6F63 
 60945      61746F72 
 60945      5F747261 
 60946              	.LASF1127:
 60947 2906 66696C6C 		.string	"fill_n<double*, long unsigned int, double>"
 60947      5F6E3C64 
 60947      6F75626C 
 60947      652A2C20 
 60947      6C6F6E67 
 60948              	.LASF169:
 60949 2931 5F5A4E4B 		.string	"_ZNKSs4sizeEv"
 60949      53733473 
 60949      697A6545 
 60949      7600
 60950              	.LASF1408:
 60951 293f 5F637572 		.string	"_cur_column"
 60951      5F636F6C 
 60951      756D6E00 
 60952              	.LASF533:
 60953 294b 5F535F70 		.string	"_S_propagate_on_container_move_assignment_helper"
 60953      726F7061 
 60953      67617465 
 60953      5F6F6E5F 
 60953      636F6E74 
 60954              	.LASF362:
 60955 297c 5F535F63 		.string	"_S_cur"
 60955      757200
 60956              	.LASF203:
 60957 2983 5F5A4E53 		.string	"_ZNSs6appendERKSs"
 60957      73366170 
 60957      70656E64 
 60957      45524B53 
 60957      7300
 60958              	.LASF266:
 60959 2995 5F5A4E4B 		.string	"_ZNKSs4findEPKcm"
 60959      53733466 
 60959      696E6445 
 60959      504B636D 
 60959      00
 60960              	.LASF1678:
 60961 29a6 5F5F6F73 		.string	"__os"
 60961      00
 60962              	.LASF802:
 60963 29ab 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EIEE7_M_swapERS0_"
 60963      7431315F 
 60963      5475706C 
 60963      655F696D 
 60963      706C494C 
 60964              	.LASF459:
 60965 29d3 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 60965      7432336D 
 60965      65727365 
 60965      6E6E655F 
 60965      74776973 
GAS LISTING /tmp/ccJUMvuF.s 			page 1511


 60966              	.LASF886:
 60967 2a66 5F547570 		.string	"_Tuple_impl<heatmap_stamp_t*&, std::default_delete<heatmap_stamp_t>, void>"
 60967      6C655F69 
 60967      6D706C3C 
 60967      68656174 
 60967      6D61705F 
 60968              	.LASF318:
 60969 2ab1 5F4D5F61 		.string	"_M_a"
 60969      00
 60970              	.LASF754:
 60971 2ab6 5F4D5F62 		.string	"_M_b"
 60971      00
 60972              	.LASF781:
 60973 2abb 5F4D5F66 		.string	"_M_f"
 60973      00
 60974              	.LASF522:
 60975 2ac0 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE23_S_const_pointer_helperEz"
 60975      74313661 
 60975      6C6C6F63 
 60975      61746F72 
 60975      5F747261 
 60976              	.LASF308:
 60977 2afa 5F4D5F61 		.string	"_M_array"
 60977      72726179 
 60977      00
 60978              	.LASF65:
 60979 2b03 5F4D5F70 		.string	"_M_p"
 60979      00
 60980              	.LASF839:
 60981 2b08 5F4D5F74 		.string	"_M_t"
 60981      00
 60982              	.LASF456:
 60983 2b0d 5F4D5F78 		.string	"_M_x"
 60983      00
 60984              	.LASF356:
 60985 2b12 5F535F62 		.string	"_S_badbit"
 60985      61646269 
 60985      7400
 60986              	.LASF1197:
 60987 2b1c 5F5F6F70 		.string	"__ops"
 60987      7300
 60988              	.LASF669:
 60989 2b22 5F5F616C 		.string	"__alloctr_rebind<std::allocator<unsigned int>, unsigned int, true>"
 60989      6C6F6374 
 60989      725F7265 
 60989      62696E64 
 60989      3C737464 
 60990              	.LASF1527:
 60991 2b65 75696E74 		.string	"uint_fast16_t"
 60991      5F666173 
 60991      7431365F 
 60991      7400
 60992              	.LASF410:
 60993 2b73 5F5A4E53 		.string	"_ZNSo9_M_insertIdEERSoT_"
 60993      6F395F4D 
 60993      5F696E73 
 60993      65727449 
GAS LISTING /tmp/ccJUMvuF.s 			page 1512


 60993      64454552 
 60994              	.LASF1771:
 60995 2b8c 6F6D705F 		.string	"omp_get_wtime"
 60995      6765745F 
 60995      7774696D 
 60995      6500
 60996              	.LASF1558:
 60997 2b9a 696E745F 		.string	"int_n_sep_by_space"
 60997      6E5F7365 
 60997      705F6279 
 60997      5F737061 
 60997      636500
 60998              	.LASF799:
 60999 2bad 5F547570 		.string	"_Tuple_impl<1ul>"
 60999      6C655F69 
 60999      6D706C3C 
 60999      31756C3E 
 60999      00
 61000              	.LASF979:
 61001 2bbe 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE3endEv"
 61001      74367665 
 61001      63746F72 
 61001      49685361 
 61001      49684545 
 61002              	.LASF545:
 61003 2bd9 72656269 		.string	"rebind_alloc"
 61003      6E645F61 
 61003      6C6C6F63 
 61003      00
 61004              	.LASF1592:
 61005 2be6 73747274 		.string	"strtol"
 61005      6F6C00
 61006              	.LASF1470:
 61007 2bed 746D5F68 		.string	"tm_hour"
 61007      6F757200 
 61008              	.LASF470:
 61009 2bf5 5F4D5F66 		.string	"_M_file"
 61009      696C6500 
 61010              	.LASF75:
 61011 2bfd 5F4D5F72 		.string	"_M_refcount"
 61011      6566636F 
 61011      756E7400 
 61012              	.LASF920:
 61013 2c09 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_swapERS3_"
 61013      7431315F 
 61013      5475706C 
 61013      655F696D 
 61013      706C494C 
 61014              	.LASF1767:
 61015 2c4f 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE"
 61015      5F5F676E 
 61015      755F6378 
 61015      7832345F 
 61015      5F6E756D 
 61016              	.LASF1269:
 61017 2c81 5F5F6E75 		.string	"__numeric_traits_integer<char>"
 61017      6D657269 
GAS LISTING /tmp/ccJUMvuF.s 			page 1513


 61017      635F7472 
 61017      61697473 
 61017      5F696E74 
 61018              	.LASF41:
 61019 2ca0 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 61019      74313163 
 61019      6861725F 
 61019      74726169 
 61019      74734963 
 61020              	.LASF1040:
 61021 2cc2 5F547570 		.string	"_Tuple"
 61021      6C6500
 61022              	.LASF913:
 61023 2cc9 5F547570 		.string	"_Tuple_impl<1ul, std::default_delete<heatmap_t> >"
 61023      6C655F69 
 61023      6D706C3C 
 61023      31756C2C 
 61023      20737464 
 61024              	.LASF116:
 61025 2cfb 5F4D5F63 		.string	"_M_check"
 61025      6865636B 
 61025      00
 61026              	.LASF1533:
 61027 2d04 75696E74 		.string	"uintmax_t"
 61027      6D61785F 
 61027      7400
 61028              	.LASF411:
 61029 2d0e 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 61029      53743136 
 61029      696E6974 
 61029      69616C69 
 61029      7A65725F 
 61030              	.LASF1409:
 61031 2d30 5F767461 		.string	"_vtable_offset"
 61031      626C655F 
 61031      6F666673 
 61031      657400
 61032              	.LASF788:
 61033 2d3f 5F417267 		.string	"_Args"
 61033      7300
 61034              	.LASF1215:
 61035 2d45 61646472 		.string	"address"
 61035      65737300 
 61036              	.LASF607:
 61037 2d4d 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4backEv"
 61037      53743676 
 61037      6563746F 
 61037      72496453 
 61037      61496445 
 61038              	.LASF1651:
 61039 2d6a 5F5A4E4B 		.string	"_ZNK11RepeatTimercvbEv"
 61039      31315265 
 61039      70656174 
 61039      54696D65 
 61039      72637662 
 61040              	.LASF748:
 61041 2d81 64656661 		.string	"default_delete<heatmap_t>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1514


 61041      756C745F 
 61041      64656C65 
 61041      74653C68 
 61041      6561746D 
 61042              	.LASF1052:
 61043 2d9b 5F5F6164 		.string	"__add_ref<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 25674
 61043      645F7265 
 61043      663C7374 
 61043      643A3A6D 
 61043      65727365 
 61044              	.LASF973:
 61045 2e4e 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSEOS1_"
 61045      74367665 
 61045      63746F72 
 61045      49685361 
 61045      49684545 
 61046              	.LASF1163:
 61047 2e6a 61636375 		.string	"accumulate<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, double>"
 61047      6D756C61 
 61047      74653C5F 
 61047      5F676E75 
 61047      5F637878 
 61048              	.LASF589:
 61049 2eba 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5crendEv"
 61049      53743676 
 61049      6563746F 
 61049      72496453 
 61049      61496445 
 61050              	.LASF1699:
 61051 2ed8 5F5F686F 		.string	"__holeIndex"
 61051      6C65496E 
 61051      64657800 
 61052              	.LASF809:
 61053 2ee4 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm1
 61053      7431305F 
 61053      48656164 
 61053      5F626173 
 61053      65494C6D 
 61054              	.LASF789:
 61055 2f95 5F536967 		.string	"_Signature"
 61055      6E617475 
 61055      726500
 61056              	.LASF1731:
 61057 2fa0 5F5F7061 		.string	"__past"
 61057      737400
 61058              	.LASF830:
 61059 2fa7 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 61059      74357475 
 61059      706C6549 
 61059      49537432 
 61059      336D6572 
 61060              	.LASF717:
 61061 3047 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE8pop_backEv"
 61061      74367665 
 61061      63746F72 
 61061      496A5361 
 61061      496A4545 
GAS LISTING /tmp/ccJUMvuF.s 			page 1515


 61062              	.LASF700:
 61063 3067 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE13shrink_to_fitEv"
 61063      74367665 
 61063      63746F72 
 61063      496A5361 
 61063      496A4545 
 61064              	.LASF1355:
 61065 308d 5F5F6465 		.string	"__default_lock_policy"
 61065      6661756C 
 61065      745F6C6F 
 61065      636B5F70 
 61065      6F6C6963 
 61066              	.LASF483:
 61067 30a3 5F4D5F66 		.string	"_M_fini"
 61067      696E6900 
 61068              	.LASF1380:
 61069 30ab 6F706572 		.string	"operator!=<double*, double const*, std::vector<double> >"
 61069      61746F72 
 61069      213D3C64 
 61069      6F75626C 
 61069      652A2C20 
 61070              	.LASF1682:
 61071 30e4 5F5F7364 		.string	"__sd"
 61071      00
 61072              	.LASF690:
 61073 30e9 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4rendEv"
 61073      74367665 
 61073      63746F72 
 61073      496A5361 
 61073      496A4545 
 61074              	.LASF1221:
 61075 3105 5F5F6E75 		.string	"__numeric_traits_integer<int>"
 61075      6D657269 
 61075      635F7472 
 61075      61697473 
 61075      5F696E74 
 61076              	.LASF668:
 61077 3123 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE37select_on_container_copy_constructionERKS0_"
 61077      74313661 
 61077      6C6C6F63 
 61077      61746F72 
 61077      5F747261 
 61078              	.LASF244:
 61079 316f 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_"
 61079      73377265 
 61079      706C6163 
 61079      65454E39 
 61079      5F5F676E 
 61080              	.LASF81:
 61081 31ac 5F4D5F69 		.string	"_M_is_leaked"
 61081      735F6C65 
 61081      616B6564 
 61081      00
 61082              	.LASF1586:
 61083 31b9 6D62746F 		.string	"mbtowc"
 61083      776300
 61084              	.LASF550:
GAS LISTING /tmp/ccJUMvuF.s 			page 1516


 61085 31c0 5F4D5F73 		.string	"_M_start"
 61085      74617274 
 61085      00
 61086              	.LASF1583:
 61087 31c9 6C646976 		.string	"ldiv"
 61087      00
 61088              	.LASF1159:
 61089 31ce 5F5F7061 		.string	"__partial_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__
 61089      72746961 
 61089      6C5F736F 
 61089      72743C5F 
 61089      5F676E75 
 61090              	.LASF1104:
 61091 323d 5F5F6765 		.string	"__get_helper<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31u
 61091      745F6865 
 61091      6C706572 
 61091      3C30756C 
 61091      2C207374 
 61092              	.LASF363:
 61093 32f8 5F535F65 		.string	"_S_end"
 61093      6E6400
 61094              	.LASF810:
 61095 32ff 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm1
 61095      7431305F 
 61095      48656164 
 61095      5F626173 
 61095      65494C6D 
 61096              	.LASF19:
 61097 33b1 76616C75 		.string	"value_type"
 61097      655F7479 
 61097      706500
 61098              	.LASF1475:
 61099 33bc 746D5F79 		.string	"tm_yday"
 61099      64617900 
 61100              	.LASF1271:
 61101 33c4 5F5F6E75 		.string	"__numeric_traits_integer<long int>"
 61101      6D657269 
 61101      635F7472 
 61101      61697473 
 61101      5F696E74 
 61102              	.LASF388:
 61103 33e7 62616462 		.string	"badbit"
 61103      697400
 61104              	.LASF624:
 61105 33ee 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE21_M_default_initializeEm"
 61105      74367665 
 61105      63746F72 
 61105      49645361 
 61105      49644545 
 61106              	.LASF377:
 61107 341c 72696768 		.string	"right"
 61107      7400
 61108              	.LASF1158:
 61109 3422 5F5F736F 		.string	"__sort_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops
 61109      72745F68 
 61109      6561703C 
 61109      5F5F676E 
GAS LISTING /tmp/ccJUMvuF.s 			page 1517


 61109      755F6378 
 61110              	.LASF1620:
 61111 348e 666F7065 		.string	"fopen"
 61111      6E00
 61112              	.LASF1345:
 61113 3494 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEpLEl"
 61113      5F5F676E 
 61113      755F6378 
 61113      7831375F 
 61113      5F6E6F72 
 61114              	.LASF5:
 61115 34ce 5F4D5F72 		.string	"_M_release"
 61115      656C6561 
 61115      736500
 61116              	.LASF1509:
 61117 34d9 696E7436 		.string	"int64_t"
 61117      345F7400 
 61118              	.LASF320:
 61119 34e1 7475706C 		.string	"tuple<>"
 61119      653C3E00 
 61120              	.LASF114:
 61121 34e9 5F4D5F6C 		.string	"_M_leak"
 61121      65616B00 
 61122              	.LASF986:
 61123 34f1 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4cendEv"
 61123      53743676 
 61123      6563746F 
 61123      72496853 
 61123      61496845 
 61124              	.LASF1464:
 61125 350e 77637363 		.string	"wcscoll"
 61125      6F6C6C00 
 61126              	.LASF1349:
 61127 3516 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEE4baseEv"
 61127      395F5F67 
 61127      6E755F63 
 61127      78783137 
 61127      5F5F6E6F 
 61128              	.LASF1077:
 61129 3554 73657473 		.string	"setstate"
 61129      74617465 
 61129      00
 61130              	.LASF526:
 61131 355d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE28_S_const_void_pointer_helperEz"
 61131      74313661 
 61131      6C6C6F63 
 61131      61746F72 
 61131      5F747261 
 61132              	.LASF878:
 61133 359c 5F547570 		.string	"_Tuple_impl<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 61133      6C655F69 
 61133      6D706C3C 
 61133      30756C2C 
 61133      20686561 
 61134              	.LASF436:
 61135 35e6 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm624ELm1ELm0ELb1ELb1EE6__calcEm"
 61135      74385F5F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1518


 61135      64657461 
 61135      696C345F 
 61135      4D6F6449 
 61136              	.LASF1402:
 61137 361c 5F494F5F 		.string	"_IO_save_end"
 61137      73617665 
 61137      5F656E64 
 61137      00
 61138              	.LASF705:
 61139 3629 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEEixEm"
 61139      53743676 
 61139      6563746F 
 61139      72496A53 
 61139      61496A45 
 61140              	.LASF1667:
 61141 3643 5F5F6F75 		.string	"__out"
 61141      7400
 61142              	.LASF1358:
 61143 3649 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE7addressERKh"
 61143      395F5F67 
 61143      6E755F63 
 61143      78783133 
 61143      6E65775F 
 61144              	.LASF236:
 61145 3676 5F5A4E53 		.string	"_ZNSs7replaceEmmPKcm"
 61145      73377265 
 61145      706C6163 
 61145      65456D6D 
 61145      504B636D 
 61146              	.LASF1030:
 61147 368b 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 61147      74367665 
 61147      63746F72 
 61147      49685361 
 61147      49684545 
 61148              	.LASF1020:
 61149 36d1 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE21_M_default_initializeEm"
 61149      74367665 
 61149      63746F72 
 61149      49685361 
 61149      49684545 
 61150              	.LASF256:
 61151 36ff 5F5A4E4B 		.string	"_ZNKSs4copyEPcmm"
 61151      53733463 
 61151      6F707945 
 61151      50636D6D 
 61151      00
 61152              	.LASF727:
 61153 3710 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE21_M_default_initializeEm"
 61153      74367665 
 61153      63746F72 
 61153      496A5361 
 61153      496A4545 
 61154              	.LASF950:
 61155 373e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE22_S_void_pointer_helperEz"
 61155      74313661 
 61155      6C6C6F63 
GAS LISTING /tmp/ccJUMvuF.s 			page 1519


 61155      61746F72 
 61155      5F747261 
 61156              	.LASF1739:
 61157 3777 5F5F696F 		.string	"__ioinit"
 61157      696E6974 
 61157      00
 61158              	.LASF1726:
 61159 3780 5F5F7572 		.string	"__urngrange"
 61159      6E677261 
 61159      6E676500 
 61160              	.LASF305:
 61161 378c 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::c
 61161      7273655F 
 61161      69746572 
 61161      61746F72 
 61161      3C5F5F67 
 61162              	.LASF1391:
 61163 3812 5F666C61 		.string	"_flags"
 61163      677300
 61164              	.LASF1123:
 61165 3819 5F5F6669 		.string	"__fill_n_a<unsigned int*, long unsigned int, unsigned int>"
 61165      6C6C5F6E 
 61165      5F613C75 
 61165      6E736967 
 61165      6E656420 
 61166              	.LASF1548:
 61167 3854 66726163 		.string	"frac_digits"
 61167      5F646967 
 61167      69747300 
 61168              	.LASF1484:
 61169 3860 77637373 		.string	"wcsspn"
 61169      706E00
 61170              	.LASF467:
 61171 3867 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 61171      7432336D 
 61171      65727365 
 61171      6E6E655F 
 61171      74776973 
 61172              	.LASF1112:
 61173 3902 5F5F756E 		.string	"__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __
 61173      67756172 
 61173      6465645F 
 61173      6C696E65 
 61173      61725F69 
 61174              	.LASF644:
 61175 397b 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator
 61175      7273655F 
 61175      69746572 
 61175      61746F72 
 61175      3C5F5F67 
 61176              	.LASF929:
 61177 39e3 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_tailERS4_"
 61177      7431315F 
 61177      5475706C 
 61177      655F696D 
 61177      706C494C 
 61178              	.LASF0:
GAS LISTING /tmp/ccJUMvuF.s 			page 1520


 61179 3a2d 646F7562 		.string	"double"
 61179      6C6500
 61180              	.LASF503:
 61181 3a34 5F5F6376 		.string	"__cv_selector<long unsigned int, false, false>"
 61181      5F73656C 
 61181      6563746F 
 61181      723C6C6F 
 61181      6E672075 
 61182              	.LASF842:
 61183 3a63 7E756E69 		.string	"~unique_ptr"
 61183      7175655F 
 61183      70747200 
 61184              	.LASF563:
 61185 3a6f 7E5F5665 		.string	"~_Vector_base"
 61185      63746F72 
 61185      5F626173 
 61185      6500
 61186              	.LASF1643:
 61187 3a7d 77637479 		.string	"wctype"
 61187      706500
 61188              	.LASF1689:
 61189 3a84 5F5F6E69 		.string	"__niter"
 61189      74657200 
 61190              	.LASF466:
 61191 3a8c 5F4D5F67 		.string	"_M_gen_rand"
 61191      656E5F72 
 61191      616E6400 
 61192              	.LASF936:
 61193 3a98 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEEaSERKS4_"
 61193      74357475 
 61193      706C6549 
 61193      49503968 
 61193      6561746D 
 61194              	.LASF392:
 61195 3ad2 6F70656E 		.string	"openmode"
 61195      6D6F6465 
 61195      00
 61196              	.LASF1401:
 61197 3adb 5F494F5F 		.string	"_IO_backup_base"
 61197      6261636B 
 61197      75705F62 
 61197      61736500 
 61198              	.LASF900:
 61199 3aeb 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE3getEv"
 61199      53743130 
 61199      756E6971 
 61199      75655F70 
 61199      74724939 
 61200              	.LASF850:
 61201 3b27 6765745F 		.string	"get_deleter"
 61201      64656C65 
 61201      74657200 
 61202              	.LASF1577:
 61203 3b33 61745F71 		.string	"at_quick_exit"
 61203      7569636B 
 61203      5F657869 
 61203      7400
GAS LISTING /tmp/ccJUMvuF.s 			page 1521


 61204              	.LASF698:
 61205 3b41 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6resizeEm"
 61205      74367665 
 61205      63746F72 
 61205      496A5361 
 61205      496A4545 
 61206              	.LASF1433:
 61207 3b5f 5F5F6D62 		.string	"__mbstate_t"
 61207      73746174 
 61207      655F7400 
 61208              	.LASF517:
 61209 3b6b 636F6E73 		.string	"const_void_pointer"
 61209      745F766F 
 61209      69645F70 
 61209      6F696E74 
 61209      657200
 61210              	.LASF605:
 61211 3b7e 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5frontEv"
 61211      53743676 
 61211      6563746F 
 61211      72496453 
 61211      61496445 
 61212              	.LASF1567:
 61213 3b9c 31315F5F 		.string	"11__mbstate_t"
 61213      6D627374 
 61213      6174655F 
 61213      7400
 61214              	.LASF243:
 61215 3baa 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_"
 61215      73377265 
 61215      706C6163 
 61215      65454E39 
 61215      5F5F676E 
 61216              	.LASF685:
 61217 3be7 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5beginEv"
 61217      53743676 
 61217      6563746F 
 61217      72496A53 
 61217      61496A45 
 61218              	.LASF753:
 61219 3c05 756E6966 		.string	"uniform_int_distribution<int>"
 61219      6F726D5F 
 61219      696E745F 
 61219      64697374 
 61219      72696275 
 61220              	.LASF1172:
 61221 3c23 5F5A5374 		.string	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_It
 61221      31335F5F 
 61221      61646A75 
 61221      73745F68 
 61221      65617049 
 61222              	.LASF30:
 61223 3c9a 63686172 		.string	"char_type"
 61223      5F747970 
 61223      6500
 61224              	.LASF1017:
 61225 3ca4 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4swapERS1_"
GAS LISTING /tmp/ccJUMvuF.s 			page 1522


 61225      74367665 
 61225      63746F72 
 61225      49685361 
 61225      49684545 
 61226              	.LASF62:
 61227 3cc3 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 61227      635F7374 
 61227      72696E67 
 61227      3C636861 
 61227      722C2073 
 61228              	.LASF1680:
 61229 3d05 5F5F6C61 		.string	"__last"
 61229      737400
 61230              	.LASF435:
 61231 3d0c 5F4D6F64 		.string	"_Mod<long unsigned int, 624ul, 1ul, 0ul, true, true>"
 61231      3C6C6F6E 
 61231      6720756E 
 61231      7369676E 
 61231      65642069 
 61232              	.LASF286:
 61233 3d41 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcm"
 61233      53733137 
 61233      66696E64 
 61233      5F666972 
 61233      73745F6E 
 61234              	.LASF1114:
 61235 3d60 5F436F6D 		.string	"_Compare"
 61235      70617265 
 61235      00
 61236              	.LASF87:
 61237 3d69 5F4D5F73 		.string	"_M_set_sharable"
 61237      65745F73 
 61237      68617261 
 61237      626C6500 
 61238              	.LASF1628:
 61239 3d79 67657473 		.string	"gets"
 61239      00
 61240              	.LASF416:
 61241 3d7e 7461626C 		.string	"table_size"
 61241      655F7369 
 61241      7A6500
 61242              	.LASF1062:
 61243 3d89 5F5F7375 		.string	"__success_type<long unsigned int>"
 61243      63636573 
 61243      735F7479 
 61243      70653C6C 
 61243      6F6E6720 
 61244              	.LASF1712:
 61245 3dab 6E706F69 		.string	"npoints"
 61245      6E747300 
 61246              	.LASF835:
 61247 3db3 72656D6F 		.string	"remove_reference<std::default_delete<heatmap_stamp_t> >"
 61247      76655F72 
 61247      65666572 
 61247      656E6365 
 61247      3C737464 
 61248              	.LASF1245:
GAS LISTING /tmp/ccJUMvuF.s 			page 1523


 61249 3deb 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl"
 61249      395F5F67 
 61249      6E755F63 
 61249      78783137 
 61249      5F5F6E6F 
 61250              	.LASF373:
 61251 3e17 626F6F6C 		.string	"boolalpha"
 61251      616C7068 
 61251      6100
 61252              	.LASF1176:
 61253 3e21 6F737472 		.string	"ostream"
 61253      65616D00 
 61254              	.LASF1780:
 61255 3e29 68656174 		.string	"heatmap_render_to"
 61255      6D61705F 
 61255      72656E64 
 61255      65725F74 
 61255      6F00
 61256              	.LASF1046:
 61257 3e3b 5F5F6164 		.string	"__add_ref<heatmap_stamp_t*>"
 61257      645F7265 
 61257      663C6865 
 61257      61746D61 
 61257      705F7374 
 61258              	.LASF888:
 61259 3e57 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSERKS4_"
 61259      74357475 
 61259      706C6549 
 61259      49503135 
 61259      68656174 
 61260              	.LASF782:
 61261 3e98 5F4D5F62 		.string	"_M_bound_args"
 61261      6F756E64 
 61261      5F617267 
 61261      7300
 61262              	.LASF650:
 61263 3ea6 72656269 		.string	"rebind<unsigned int>"
 61263      6E643C75 
 61263      6E736967 
 61263      6E656420 
 61263      696E743E 
 61264              	.LASF1748:
 61265 3ebb 73746469 		.string	"stdin"
 61265      6E00
 61266              	.LASF770:
 61267 3ec1 69746572 		.string	"iterator_traits<unsigned int*>"
 61267      61746F72 
 61267      5F747261 
 61267      6974733C 
 61267      756E7369 
 61268              	.LASF501:
 61269 3ee0 72656269 		.string	"rebind"
 61269      6E6400
 61270              	.LASF1268:
 61271 3ee7 5F5F6E75 		.string	"__numeric_traits_integer<long unsigned int>"
 61271      6D657269 
 61271      635F7472 
GAS LISTING /tmp/ccJUMvuF.s 			page 1524


 61271      61697473 
 61271      5F696E74 
 61272              	.LASF1234:
 61273 3f13 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi"
 61273      5F5F676E 
 61273      755F6378 
 61273      7831375F 
 61273      5F6E6F72 
 61274              	.LASF1166:
 61275 3f3e 5F524149 		.string	"_RAIter"
 61275      74657200 
 61276              	.LASF424:
 61277 3f46 5F5F756E 		.string	"__uninitialized_default_n_1<true>"
 61277      696E6974 
 61277      69616C69 
 61277      7A65645F 
 61277      64656661 
 61278              	.LASF142:
 61279 3f68 62617369 		.string	"basic_string"
 61279      635F7374 
 61279      72696E67 
 61279      00
 61280              	.LASF1099:
 61281 3f75 5F5F6765 		.string	"__get_helper<1ul, std::default_delete<heatmap_t> >"
 61281      745F6865 
 61281      6C706572 
 61281      3C31756C 
 61281      2C207374 
 61282              	.LASF1122:
 61283 3fa8 5F5F756E 		.string	"__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_
 61283      67756172 
 61283      6465645F 
 61283      70617274 
 61283      6974696F 
 61284              	.LASF634:
 61285 401e 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc"
 61285      53743676 
 61285      6563746F 
 61285      72496453 
 61285      61496445 
 61286              	.LASF209:
 61287 4047 70757368 		.string	"push_back"
 61287      5F626163 
 61287      6B00
 61288              	.LASF1263:
 61289 4051 5F5F6D61 		.string	"__max_digits10"
 61289      785F6469 
 61289      67697473 
 61289      313000
 61290              	.LASF686:
 61291 4060 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE3endEv"
 61291      74367665 
 61291      63746F72 
 61291      496A5361 
 61291      496A4545 
 61292              	.LASF907:
 61293 407b 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE4swapERS3_"
GAS LISTING /tmp/ccJUMvuF.s 			page 1525


 61293      74313075 
 61293      6E697175 
 61293      655F7074 
 61293      72493968 
 61294              	.LASF480:
 61295 40ba 5F5A4E53 		.string	"_ZNSt13random_device7_M_initERKSs"
 61295      74313372 
 61295      616E646F 
 61295      6D5F6465 
 61295      76696365 
 61296              	.LASF1501:
 61297 40dc 77637373 		.string	"wcsstr"
 61297      747200
 61298              	.LASF756:
 61299 40e3 5F4D5F70 		.string	"_M_param"
 61299      6172616D 
 61299      00
 61300              	.LASF1285:
 61301 40ec 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE27_S_propagate_on_copy_assignEv"
 61301      5F5F676E 
 61301      755F6378 
 61301      7831345F 
 61301      5F616C6C 
 61302              	.LASF571:
 61303 4130 76656374 		.string	"vector"
 61303      6F7200
 61304              	.LASF1200:
 61305 4137 5F497465 		.string	"_Iterator1"
 61305      7261746F 
 61305      723100
 61306              	.LASF1201:
 61307 4142 5F497465 		.string	"_Iterator2"
 61307      7261746F 
 61307      723200
 61308              	.LASF1330:
 61309 414d 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE10_S_on_swapERS1_S3_"
 61309      5F5F676E 
 61309      755F6378 
 61309      7831345F 
 61309      5F616C6C 
 61310              	.LASF1572:
 61311 4186 6C646976 		.string	"ldiv_t"
 61311      5F7400
 61312              	.LASF1434:
 61313 418d 6D627374 		.string	"mbstate_t"
 61313      6174655F 
 61313      7400
 61314              	.LASF322:
 61315 4197 5F537761 		.string	"_Swallow_assign"
 61315      6C6C6F77 
 61315      5F617373 
 61315      69676E00 
 61316              	.LASF1400:
 61317 41a7 5F494F5F 		.string	"_IO_save_base"
 61317      73617665 
 61317      5F626173 
 61317      6500
GAS LISTING /tmp/ccJUMvuF.s 			page 1526


 61318              	.LASF440:
 61319 41b5 6E706F73 		.string	"npos"
 61319      00
 61320              	.LASF385:
 61321 41ba 61646A75 		.string	"adjustfield"
 61321      73746669 
 61321      656C6400 
 61322              	.LASF1753:
 61323 41c6 4E504F49 		.string	"NPOINTS"
 61323      4E545300 
 61324              	.LASF620:
 61325 41ce 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5clearEv"
 61325      74367665 
 61325      63746F72 
 61325      49645361 
 61325      49644545 
 61326              	.LASF1382:
 61327 41eb 5F497465 		.string	"_IteratorR"
 61327      7261746F 
 61327      725200
 61328              	.LASF732:
 61329 41f6 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE12_M_check_lenEmPKc"
 61329      53743676 
 61329      6563746F 
 61329      72496A53 
 61329      61496A45 
 61330              	.LASF1250:
 61331 421f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv"
 61331      395F5F67 
 61331      6E755F63 
 61331      78783137 
 61331      5F5F6E6F 
 61332              	.LASF44:
 61333 424c 61737369 		.string	"assign"
 61333      676E00
 61334              	.LASF1346:
 61335 4253 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEplEl"
 61335      395F5F67 
 61335      6E755F63 
 61335      78783137 
 61335      5F5F6E6F 
 61336              	.LASF1671:
 61337 428e 5F5F7066 		.string	"__pf"
 61337      00
 61338              	.LASF1024:
 61339 4293 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE16_M_shrink_to_fitEv"
 61339      74367665 
 61339      63746F72 
 61339      49685361 
 61339      49684545 
 61340              	.LASF642:
 61341 42bc 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 61341      74367665 
 61341      63746F72 
 61341      49645361 
 61341      49644545 
 61342              	.LASF431:
GAS LISTING /tmp/ccJUMvuF.s 			page 1527


 61343 4302 5F5F6361 		.string	"__calc"
 61343      6C6300
 61344              	.LASF636:
 61345 4309 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd"
 61345      74367665 
 61345      63746F72 
 61345      49645361 
 61345      49644545 
 61346              	.LASF37:
 61347 4332 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 61347      74313163 
 61347      6861725F 
 61347      74726169 
 61347      74734963 
 61348              	.LASF328:
 61349 4353 5F535F66 		.string	"_S_fixed"
 61349      69786564 
 61349      00
 61350              	.LASF396:
 61351 435c 696F735F 		.string	"ios_base"
 61351      62617365 
 61351      00
 61352              	.LASF1256:
 61353 4365 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixEl"
 61353      395F5F67 
 61353      6E755F63 
 61353      78783137 
 61353      5F5F6E6F 
 61354              	.LASF208:
 61355 4392 5F5A4E53 		.string	"_ZNSs6appendESt16initializer_listIcE"
 61355      73366170 
 61355      70656E64 
 61355      45537431 
 61355      36696E69 
 61356              	.LASF1543:
 61357 43b7 6D6F6E5F 		.string	"mon_thousands_sep"
 61357      74686F75 
 61357      73616E64 
 61357      735F7365 
 61357      7000
 61358              	.LASF113:
 61359 43c9 5F5A4E4B 		.string	"_ZNKSs7_M_iendEv"
 61359      5373375F 
 61359      4D5F6965 
 61359      6E644576 
 61359      00
 61360              	.LASF1397:
 61361 43da 5F494F5F 		.string	"_IO_write_end"
 61361      77726974 
 61361      655F656E 
 61361      6400
 61362              	.LASF1270:
 61363 43e8 5F5F6E75 		.string	"__numeric_traits_integer<short int>"
 61363      6D657269 
 61363      635F7472 
 61363      61697473 
 61363      5F696E74 
GAS LISTING /tmp/ccJUMvuF.s 			page 1528


 61364              	.LASF77:
 61365 440c 5F535F6D 		.string	"_S_max_size"
 61365      61785F73 
 61365      697A6500 
 61366              	.LASF739:
 61367 4418 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, st
 61367      7273655F 
 61367      69746572 
 61367      61746F72 
 61367      3C5F5F67 
 61368              	.LASF391:
 61369 4492 676F6F64 		.string	"goodbit"
 61369      62697400 
 61370              	.LASF559:
 61371 449a 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv"
 61371      7431325F 
 61371      56656374 
 61371      6F725F62 
 61371      61736549 
 61372              	.LASF498:
 61373 44cd 64696666 		.string	"difference_type"
 61373      6572656E 
 61373      63655F74 
 61373      79706500 
 61374              	.LASF374:
 61375 44dd 66697865 		.string	"fixed"
 61375      6400
 61376              	.LASF1085:
 61377 44e3 6F706572 		.string	"operator|="
 61377      61746F72 
 61377      7C3D00
 61378              	.LASF73:
 61379 44ee 5F4D5F6C 		.string	"_M_length"
 61379      656E6774 
 61379      6800
 61380              	.LASF585:
 61381 44f8 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4rendEv"
 61381      53743676 
 61381      6563746F 
 61381      72496453 
 61381      61496445 
 61382              	.LASF1318:
 61383 4515 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEplEl"
 61383      395F5F67 
 61383      6E755F63 
 61383      78783137 
 61383      5F5F6E6F 
 61384              	.LASF1461:
 61385 4551 77637274 		.string	"wcrtomb"
 61385      6F6D6200 
 61386              	.LASF251:
 61387 4559 5F5A4E53 		.string	"_ZNSs15_M_replace_safeEmmPKcm"
 61387      7331355F 
 61387      4D5F7265 
 61387      706C6163 
 61387      655F7361 
 61388              	.LASF295:
GAS LISTING /tmp/ccJUMvuF.s 			page 1529


 61389 4577 5F5A4E4B 		.string	"_ZNKSs7compareERKSs"
 61389      53733763 
 61389      6F6D7061 
 61389      72654552 
 61389      4B537300 
 61390              	.LASF46:
 61391 458b 746F5F63 		.string	"to_char_type"
 61391      6861725F 
 61391      74797065 
 61391      00
 61392              	.LASF666:
 61393 4598 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm"
 61393      74313661 
 61393      6C6C6F63 
 61393      61746F72 
 61393      5F747261 
 61394              	.LASF814:
 61395 45cb 5F497345 		.string	"_IsEmptyNotFinal"
 61395      6D707479 
 61395      4E6F7446 
 61395      696E616C 
 61395      00
 61396              	.LASF1125:
 61397 45dc 666F7277 		.string	"forward_as_tuple<>"
 61397      6172645F 
 61397      61735F74 
 61397      75706C65 
 61397      3C3E00
 61398              	.LASF1398:
 61399 45ef 5F494F5F 		.string	"_IO_buf_base"
 61399      6275665F 
 61399      62617365 
 61399      00
 61400              	.LASF1147:
 61401 45fc 5F5F6669 		.string	"__fill_a<unsigned char>"
 61401      6C6C5F61 
 61401      3C756E73 
 61401      69676E65 
 61401      64206368 
 61402              	.LASF926:
 61403 4614 5F547570 		.string	"_Tuple_impl<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 61403      6C655F69 
 61403      6D706C3C 
 61403      30756C2C 
 61403      20686561 
 61404              	.LASF80:
 61405 4652 5F535F65 		.string	"_S_empty_rep"
 61405      6D707479 
 61405      5F726570 
 61405      00
 61406              	.LASF806:
 61407 465f 5F4D5F68 		.string	"_M_head_impl"
 61407      6561645F 
 61407      696D706C 
 61407      00
 61408              	.LASF1412:
 61409 466c 5F6F6666 		.string	"_offset"
GAS LISTING /tmp/ccJUMvuF.s 			page 1530


 61409      73657400 
 61410              	.LASF1624:
 61411 4674 66736574 		.string	"fsetpos"
 61411      706F7300 
 61412              	.LASF1262:
 61413 467c 5F5F6E75 		.string	"__numeric_traits_floating<float>"
 61413      6D657269 
 61413      635F7472 
 61413      61697473 
 61413      5F666C6F 
 61414              	.LASF857:
 61415 469d 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE4swapERS3_"
 61415      74313075 
 61415      6E697175 
 61415      655F7074 
 61415      72493135 
 61416              	.LASF981:
 61417 46e3 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6rbeginEv"
 61417      74367665 
 61417      63746F72 
 61417      49685361 
 61417      49684545 
 61418              	.LASF917:
 61419 4701 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_tailERKS3_"
 61419      7431315F 
 61419      5475706C 
 61419      655F696D 
 61419      706C494C 
 61420              	.LASF1153:
 61421 4748 5F5F7075 		.string	"__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, double
 61421      73685F68 
 61421      6561703C 
 61421      5F5F676E 
 61421      755F6378 
 61422              	.LASF1070:
 61423 47c5 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_"
 61423      7431305F 
 61423      49746572 
 61423      5F626173 
 61423      65495068 
 61424              	.LASF421:
 61425 47eb 5F466F72 		.string	"_ForwardIterator"
 61425      77617264 
 61425      49746572 
 61425      61746F72 
 61425      00
 61426              	.LASF1479:
 61427 47fc 7763736C 		.string	"wcslen"
 61427      656E00
 61428              	.LASF1621:
 61429 4803 66726561 		.string	"fread"
 61429      6400
 61430              	.LASF1746:
 61431 4809 6D617073 		.string	"mapsize"
 61431      697A6500 
 61432              	.LASF1184:
 61433 4811 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
GAS LISTING /tmp/ccJUMvuF.s 			page 1531


 61433      31365F5F 
 61433      6F737472 
 61433      65616D5F 
 61433      696E7365 
 61434              	.LASF67:
 61435 485f 616C6C6F 		.string	"allocator_type"
 61435      6361746F 
 61435      725F7479 
 61435      706500
 61436              	.LASF1622:
 61437 486e 6672656F 		.string	"freopen"
 61437      70656E00 
 61438              	.LASF1736:
 61439 4876 67696D6D 		.string	"gimme_time"
 61439      655F7469 
 61439      6D6500
 61440              	.LASF12:
 61441 4881 5F4D5F67 		.string	"_M_get"
 61441      657400
 61442              	.LASF1513:
 61443 4888 75696E74 		.string	"uint64_t"
 61443      36345F74 
 61443      00
 61444              	.LASF1374:
 61445 4891 5F5F656E 		.string	"__enable_if<true, unsigned int*>"
 61445      61626C65 
 61445      5F69663C 
 61445      74727565 
 61445      2C20756E 
 61446              	.LASF97:
 61447 48b2 5F4D5F64 		.string	"_M_dispose"
 61447      6973706F 
 61447      736500
 61448              	.LASF263:
 61449 48bd 5F5A4E4B 		.string	"_ZNKSs13get_allocatorEv"
 61449      53733133 
 61449      6765745F 
 61449      616C6C6F 
 61449      6361746F 
 61450              	.LASF544:
 61451 48d5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_"
 61451      74313661 
 61451      6C6C6F63 
 61451      61746F72 
 61451      5F747261 
 61452              	.LASF152:
 61453 4921 5F5A4E53 		.string	"_ZNSs3endEv"
 61453      7333656E 
 61453      64457600 
 61454              	.LASF933:
 61455 492d 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_swapERS4_"
 61455      7431315F 
 61455      5475706C 
 61455      655F696D 
 61455      706C494C 
 61456              	.LASF1571:
 61457 4977 366C6469 		.string	"6ldiv_t"
GAS LISTING /tmp/ccJUMvuF.s 			page 1532


 61457      765F7400 
 61458              	.LASF595:
 61459 497f 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE8capacityEv"
 61459      53743676 
 61459      6563746F 
 61459      72496453 
 61459      61496445 
 61460              	.LASF486:
 61461 49a0 5F5A4E53 		.string	"_ZNSt13random_device9_M_getvalEv"
 61461      74313372 
 61461      616E646F 
 61461      6D5F6465 
 61461      76696365 
 61462              	.LASF1164:
 61463 49c1 5F496E70 		.string	"_InputIterator"
 61463      75744974 
 61463      65726174 
 61463      6F7200
 61464              	.LASF148:
 61465 49d0 5F5A4E53 		.string	"_ZNSsaSESt16initializer_listIcE"
 61465      73615345 
 61465      53743136 
 61465      696E6974 
 61465      69616C69 
 61466              	.LASF402:
 61467 49f0 5F5A4E53 		.string	"_ZNSolsEm"
 61467      6F6C7345 
 61467      6D00
 61468              	.LASF953:
 61469 49fa 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE19_S_size_type_helperEz"
 61469      74313661 
 61469      6C6C6F63 
 61469      61746F72 
 61469      5F747261 
 61470              	.LASF1497:
 61471 4a30 77736361 		.string	"wscanf"
 61471      6E6600
 61472              	.LASF178:
 61473 4a37 63617061 		.string	"capacity"
 61473      63697479 
 61473      00
 61474              	.LASF1768:
 61475 4a40 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__minE"
 61475      5F5F676E 
 61475      755F6378 
 61475      7832345F 
 61475      5F6E756D 
 61476              	.LASF874:
 61477 4a72 5F486561 		.string	"_Head_base<0ul, heatmap_stamp_t*, false>"
 61477      645F6261 
 61477      73653C30 
 61477      756C2C20 
 61477      68656174 
 61478              	.LASF1366:
 61479 4a9b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE27_S_propagate_on_move_assignEv"
 61479      5F5F676E 
 61479      755F6378 
GAS LISTING /tmp/ccJUMvuF.s 			page 1533


 61479      7831345F 
 61479      5F616C6C 
 61480              	.LASF586:
 61481 4adf 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE6cbeginEv"
 61481      53743676 
 61481      6563746F 
 61481      72496453 
 61481      61496445 
 61482              	.LASF1044:
 61483 4afe 72656D6F 		.string	"remove_reference<heatmap_stamp_t*&>"
 61483      76655F72 
 61483      65666572 
 61483      656E6365 
 61483      3C686561 
 61484              	.LASF269:
 61485 4b22 5F5A4E4B 		.string	"_ZNKSs5rfindERKSsm"
 61485      53733572 
 61485      66696E64 
 61485      45524B53 
 61485      736D00
 61486              	.LASF932:
 61487 4b35 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEEaSEOS4_"
 61487      7431315F 
 61487      5475706C 
 61487      655F696D 
 61487      706C494C 
 61488              	.LASF1180:
 61489 4b79 5F5A5374 		.string	"_ZSt4cout"
 61489      34636F75 
 61489      7400
 61490              	.LASF1459:
 61491 4b83 76777072 		.string	"vwprintf"
 61491      696E7466 
 61491      00
 61492              	.LASF997:
 61493 4b8c 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEixEm"
 61493      74367665 
 61493      63746F72 
 61493      49685361 
 61493      49684545 
 61494              	.LASF740:
 61495 4ba5 696E6974 		.string	"initializer_list<unsigned int>"
 61495      69616C69 
 61495      7A65725F 
 61495      6C697374 
 61495      3C756E73 
 61496              	.LASF1170:
 61497 4bc4 5F5F696E 		.string	"__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::
 61497      73657274 
 61497      696F6E5F 
 61497      736F7274 
 61497      3C5F5F67 
 61498              	.LASF1060:
 61499 4c35 5F5A4E53 		.string	"_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEELb0EE7_S_baseES6_"
 61499      7431305F 
 61499      49746572 
 61499      5F626173 
GAS LISTING /tmp/ccJUMvuF.s 			page 1534


 61499      65494E39 
 61500              	.LASF653:
 61501 4c8d 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPjE10pointer_toERj"
 61501      74313470 
 61501      6F696E74 
 61501      65725F74 
 61501      72616974 
 61502              	.LASF1772:
 61503 4cb6 6F706572 		.string	"operator new"
 61503      61746F72 
 61503      206E6577 
 61503      00
 61504              	.LASF110:
 61505 4cc3 5F4D5F69 		.string	"_M_ibegin"
 61505      62656769 
 61505      6E00
 61506              	.LASF716:
 61507 4ccd 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE9push_backEOj"
 61507      74367665 
 61507      63746F72 
 61507      496A5361 
 61507      496A4545 
 61508              	.LASF1607:
 61509 4cef 5F494F5F 		.string	"_IO_marker"
 61509      6D61726B 
 61509      657200
 61510              	.LASF89:
 61511 4cfa 5F4D5F73 		.string	"_M_set_length_and_sharable"
 61511      65745F6C 
 61511      656E6774 
 61511      685F616E 
 61511      645F7368 
 61512              	.LASF1061:
 61513 4d15 5F486173 		.string	"_HasBase"
 61513      42617365 
 61513      00
 61514              	.LASF868:
 61515 4d1e 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_tailERS3_"
 61515      7431315F 
 61515      5475706C 
 61515      655F696D 
 61515      706C494C 
 61516              	.LASF167:
 61517 4d6b 5F5A4E4B 		.string	"_ZNKSs5crendEv"
 61517      53733563 
 61517      72656E64 
 61517      457600
 61518              	.LASF162:
 61519 4d7a 63656E64 		.string	"cend"
 61519      00
 61520              	.LASF558:
 61521 4d7f 5F4D5F67 		.string	"_M_get_Tp_allocator"
 61521      65745F54 
 61521      705F616C 
 61521      6C6F6361 
 61521      746F7200 
 61522              	.LASF1056:
GAS LISTING /tmp/ccJUMvuF.s 			page 1535


 61523 4d93 69746572 		.string	"iterator_traits<char const*>"
 61523      61746F72 
 61523      5F747261 
 61523      6974733C 
 61523      63686172 
 61524              	.LASF515:
 61525 4db0 5F5F706F 		.string	"__pointer"
 61525      696E7465 
 61525      7200
 61526              	.LASF918:
 61527 4dba 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEEaSERKS3_"
 61527      7431315F 
 61527      5475706C 
 61527      655F696D 
 61527      706C494C 
 61528              	.LASF627:
 61529 4dfb 5F4D5F66 		.string	"_M_fill_insert"
 61529      696C6C5F 
 61529      696E7365 
 61529      727400
 61530              	.LASF553:
 61531 4e0a 5F4D5F73 		.string	"_M_swap_data"
 61531      7761705F 
 61531      64617461 
 61531      00
 61532              	.LASF394:
 61533 4e17 7472756E 		.string	"trunc"
 61533      6300
 61534              	.LASF352:
 61535 4e1d 5F535F74 		.string	"_S_trunc"
 61535      72756E63 
 61535      00
 61536              	.LASF70:
 61537 4e26 636F6E73 		.string	"const_reverse_iterator"
 61537      745F7265 
 61537      76657273 
 61537      655F6974 
 61537      65726174 
 61538              	.LASF1660:
 61539 4e3d 68656174 		.string	"heatmap_colorscheme_t"
 61539      6D61705F 
 61539      636F6C6F 
 61539      72736368 
 61539      656D655F 
 61540              	.LASF889:
 61541 4e53 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSEOS4_"
 61541      74357475 
 61541      706C6549 
 61541      49503135 
 61541      68656174 
 61542              	.LASF1587:
 61543 4e93 71736F72 		.string	"qsort"
 61543      7400
 61544              	.LASF1313:
 61545 4e99 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEi"
 61545      5F5F676E 
 61545      755F6378 
GAS LISTING /tmp/ccJUMvuF.s 			page 1536


 61545      7831375F 
 61545      5F6E6F72 
 61546              	.LASF1795:
 61547 4ed4 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE10param_type1bEv"
 61547      53743234 
 61547      756E6966 
 61547      6F726D5F 
 61547      696E745F 
 61548              	.LASF1025:
 61549 4f08 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE12_M_check_lenEmPKc"
 61549      53743676 
 61549      6563746F 
 61549      72496853 
 61549      61496845 
 61550              	.LASF1769:
 61551 4f31 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__maxE"
 61551      5F5F676E 
 61551      755F6378 
 61551      7832345F 
 61551      5F6E756D 
 61552              	.LASF1312:
 61553 4f63 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEppEv"
 61553      5F5F676E 
 61553      755F6378 
 61553      7831375F 
 61553      5F6E6F72 
 61554              	.LASF255:
 61555 4f9e 5F5A4E53 		.string	"_ZNSs12_S_constructEmcRKSaIcE"
 61555      7331325F 
 61555      535F636F 
 61555      6E737472 
 61555      75637445 
 61556              	.LASF23:
 61557 4fbc 696E7465 		.string	"integral_constant<bool, true>"
 61557      6772616C 
 61557      5F636F6E 
 61557      7374616E 
 61557      743C626F 
 61558              	.LASF1302:
 61559 4fda 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmmEi"
 61559      5F5F676E 
 61559      755F6378 
 61559      7831375F 
 61559      5F6E6F72 
 61560              	.LASF1079:
 61561 5014 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc"
 61561      53743962 
 61561      61736963 
 61561      5F696F73 
 61561      49635374 
 61562              	.LASF108:
 61563 5042 5F4D5F72 		.string	"_M_rep"
 61563      657000
 61564              	.LASF763:
 61565 5049 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE5paramEv"
 61565      53743234 
 61565      756E6966 
GAS LISTING /tmp/ccJUMvuF.s 			page 1537


 61565      6F726D5F 
 61565      696E745F 
 61566              	.LASF737:
 61567 5075 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 61567      74367665 
 61567      63746F72 
 61567      496A5361 
 61567      496A4545 
 61568              	.LASF755:
 61569 50bb 70617261 		.string	"param_type"
 61569      6D5F7479 
 61569      706500
 61570              	.LASF1706:
 61571 50c6 5F5F6465 		.string	"__depth_limit"
 61571      7074685F 
 61571      6C696D69 
 61571      7400
 61572              	.LASF808:
 61573 50d4 5F4D5F68 		.string	"_M_head"
 61573      65616400 
 61574              	.LASF537:
 61575 50dc 616C6C6F 		.string	"allocate"
 61575      63617465 
 61575      00
 61576              	.LASF593:
 61577 50e5 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6resizeEmRKd"
 61577      74367665 
 61577      63746F72 
 61577      49645361 
 61577      49644545 
 61578              	.LASF1723:
 61579 5106 5F5F7563 		.string	"__uctype"
 61579      74797065 
 61579      00
 61580              	.LASF778:
 61581 510f 5F536F63 		.string	"_SocketLike"
 61581      6B65744C 
 61581      696B6500 
 61582              	.LASF1462:
 61583 511b 77637363 		.string	"wcscat"
 61583      617400
 61584              	.LASF1798:
 61585 5122 5F494F5F 		.string	"_IO_lock_t"
 61585      6C6F636B 
 61585      5F7400
 61586              	.LASF476:
 61587 512d 5F5A4E4B 		.string	"_ZNKSt13random_device7entropyEv"
 61587      53743133 
 61587      72616E64 
 61587      6F6D5F64 
 61587      65766963 
 61588              	.LASF465:
 61589 514d 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 61589      7432336D 
 61589      65727365 
 61589      6E6E655F 
 61589      74776973 
GAS LISTING /tmp/ccJUMvuF.s 			page 1538


 61590              	.LASF540:
 61591 51dd 6465616C 		.string	"deallocate"
 61591      6C6F6361 
 61591      746500
 61592              	.LASF119:
 61593 51e8 5F5A4E4B 		.string	"_ZNKSs15_M_check_lengthEmmPKc"
 61593      53733135 
 61593      5F4D5F63 
 61593      6865636B 
 61593      5F6C656E 
 61594              	.LASF1392:
 61595 5206 5F494F5F 		.string	"_IO_read_ptr"
 61595      72656164 
 61595      5F707472 
 61595      00
 61596              	.LASF426:
 61597 5213 5F53697A 		.string	"_Size"
 61597      6500
 61598              	.LASF775:
 61599 5219 5F5A4E53 		.string	"_ZNSt26_Maybe_wrap_member_pointerISt24uniform_int_distributionIiEE9__do_wrapEOS1_"
 61599      7432365F 
 61599      4D617962 
 61599      655F7772 
 61599      61705F6D 
 61600              	.LASF235:
 61601 526b 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSsmm"
 61601      73377265 
 61601      706C6163 
 61601      65456D6D 
 61601      524B5373 
 61602              	.LASF893:
 61603 5282 5F5F6164 		.string	"__add_lvalue_reference_helper<heatmap_stamp_t, true>"
 61603      645F6C76 
 61603      616C7565 
 61603      5F726566 
 61603      6572656E 
 61604              	.LASF1384:
 61605 52b7 6F706572 		.string	"operator-<double*, std::vector<double> >"
 61605      61746F72 
 61605      2D3C646F 
 61605      75626C65 
 61605      2A2C2073 
 61606              	.LASF1406:
 61607 52e0 5F666C61 		.string	"_flags2"
 61607      67733200 
 61608              	.LASF124:
 61609 52e8 5F4D5F63 		.string	"_M_copy"
 61609      6F707900 
 61610              	.LASF797:
 61611 52f0 5F576561 		.string	"_Weak_result_type"
 61611      6B5F7265 
 61611      73756C74 
 61611      5F747970 
 61611      6500
 61612              	.LASF1632:
 61613 5302 72657769 		.string	"rewind"
 61613      6E6400
GAS LISTING /tmp/ccJUMvuF.s 			page 1539


 61614              	.LASF860:
 61615 5309 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm2EIEE7_M_swapERS0_"
 61615      7431315F 
 61615      5475706C 
 61615      655F696D 
 61615      706C494C 
 61616              	.LASF1421:
 61617 5331 73697A65 		.string	"sizetype"
 61617      74797065 
 61617      00
 61618              	.LASF1210:
 61619 533a 5F5F6974 		.string	"__iter_less_iter"
 61619      65725F6C 
 61619      6573735F 
 61619      69746572 
 61619      00
 61620              	.LASF216:
 61621 534b 5F5A4E53 		.string	"_ZNSs6assignEmc"
 61621      73366173 
 61621      7369676E 
 61621      456D6300 
 61622              	.LASF629:
 61623 535b 5F4D5F64 		.string	"_M_default_append"
 61623      65666175 
 61623      6C745F61 
 61623      7070656E 
 61623      6400
 61624              	.LASF1781:
 61625 536d 68656174 		.string	"heatmap_render_saturated_to"
 61625      6D61705F 
 61625      72656E64 
 61625      65725F73 
 61625      61747572 
 61626              	.LASF1551:
 61627 5389 6E5F6373 		.string	"n_cs_precedes"
 61627      5F707265 
 61627      63656465 
 61627      7300
 61628              	.LASF252:
 61629 5397 5F535F63 		.string	"_S_construct_aux_2"
 61629      6F6E7374 
 61629      72756374 
 61629      5F617578 
 61629      5F3200
 61630              	.LASF1315:
 61631 53aa 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEi"
 61631      5F5F676E 
 61631      755F6378 
 61631      7831375F 
 61631      5F6E6F72 
 61632              	.LASF16:
 61633 53e5 5F5F6378 		.string	"__cxa_exception_type"
 61633      615F6578 
 61633      63657074 
 61633      696F6E5F 
 61633      74797065 
 61634              	.LASF615:
GAS LISTING /tmp/ccJUMvuF.s 			page 1540


 61635 53fa 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EESt16initializer_listId
 61635      74367665 
 61635      63746F72 
 61635      49645361 
 61635      49644545 
 61636              	.LASF63:
 61637 5455 5F416C6C 		.string	"_Alloc_hider"
 61637      6F635F68 
 61637      69646572 
 61637      00
 61638              	.LASF1335:
 61639 5462 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_nothrow_moveEv"
 61639      5F5F676E 
 61639      755F6378 
 61639      7831345F 
 61639      5F616C6C 
 61640              	.LASF1181:
 61641 549a 63657272 		.string	"cerr"
 61641      00
 61642              	.LASF1396:
 61643 549f 5F494F5F 		.string	"_IO_write_ptr"
 61643      77726974 
 61643      655F7074 
 61643      7200
 61644              	.LASF880:
 61645 54ad 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_headERKS4_"
 61645      7431315F 
 61645      5475706C 
 61645      655F696D 
 61645      706C494C 
 61646              	.LASF9:
 61647 54ff 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 61647      7431355F 
 61647      5F657863 
 61647      65707469 
 61647      6F6E5F70 
 61648              	.LASF1031:
 61649 552d 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned 
 61649      7273655F 
 61649      69746572 
 61649      61746F72 
 61649      3C5F5F67 
 61650              	.LASF523:
 61651 55b0 5F535F76 		.string	"_S_void_pointer_helper"
 61651      6F69645F 
 61651      706F696E 
 61651      7465725F 
 61651      68656C70 
 61652              	.LASF1033:
 61653 55c7 696E6974 		.string	"initializer_list<unsigned char>"
 61653      69616C69 
 61653      7A65725F 
 61653      6C697374 
 61653      3C756E73 
 61654              	.LASF766:
 61655 55e7 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE3maxEv"
 61655      53743234 
GAS LISTING /tmp/ccJUMvuF.s 			page 1541


 61655      756E6966 
 61655      6F726D5F 
 61655      696E745F 
 61656              	.LASF984:
 61657 5611 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4rendEv"
 61657      53743676 
 61657      6563746F 
 61657      72496853 
 61657      61496845 
 61658              	.LASF344:
 61659 562e 5F535F69 		.string	"_S_ios_fmtflags_end"
 61659      6F735F66 
 61659      6D74666C 
 61659      6167735F 
 61659      656E6400 
 61660              	.LASF389:
 61661 5642 656F6662 		.string	"eofbit"
 61661      697400
 61662              	.LASF378:
 61663 5649 73636965 		.string	"scientific"
 61663      6E746966 
 61663      696300
 61664              	.LASF940:
 61665 5654 636F6E64 		.string	"conditional<false, std::default_delete<heatmap_t>, const std::default_delete<heatmap_t>&>
 61665      6974696F 
 61665      6E616C3C 
 61665      66616C73 
 61665      652C2073 
 61666              	.LASF856:
 61667 56ae 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE5resetEPS0_"
 61667      74313075 
 61667      6E697175 
 61667      655F7074 
 61667      72493135 
 61668              	.LASF556:
 61669 56f5 5F54705F 		.string	"_Tp_alloc_type"
 61669      616C6C6F 
 61669      635F7479 
 61669      706500
 61670              	.LASF95:
 61671 5704 5F535F63 		.string	"_S_create"
 61671      72656174 
 61671      6500
 61672              	.LASF925:
 61673 570e 5F486561 		.string	"_Head_base<heatmap_t*&, void>"
 61673      645F6261 
 61673      73653C68 
 61673      6561746D 
 61673      61705F74 
 61674              	.LASF654:
 61675 572c 616C6C6F 		.string	"allocator_traits<std::allocator<unsigned int> >"
 61675      6361746F 
 61675      725F7472 
 61675      61697473 
 61675      3C737464 
 61676              	.LASF1468:
 61677 575c 746D5F73 		.string	"tm_sec"
GAS LISTING /tmp/ccJUMvuF.s 			page 1542


 61677      656300
 61678              	.LASF527:
 61679 5763 5F535F64 		.string	"_S_difference_type_helper"
 61679      69666665 
 61679      72656E63 
 61679      655F7479 
 61679      70655F68 
 61680              	.LASF771:
 61681 577d 72656D6F 		.string	"remove_reference<std::uniform_int_distribution<int>&>"
 61681      76655F72 
 61681      65666572 
 61681      656E6365 
 61681      3C737464 
 61682              	.LASF1372:
 61683 57b3 5F5F6E6F 		.string	"__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigne
 61683      726D616C 
 61683      5F697465 
 61683      7261746F 
 61683      723C756E 
 61684              	.LASF931:
 61685 5818 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEEaSERKS4_"
 61685      7431315F 
 61685      5475706C 
 61685      655F696D 
 61685      706C494C 
 61686              	.LASF380:
 61687 585d 73686F77 		.string	"showpoint"
 61687      706F696E 
 61687      7400
 61688              	.LASF1218:
 61689 5867 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv"
 61689      5F5F676E 
 61689      755F6378 
 61689      7831336E 
 61689      65775F61 
 61690              	.LASF1422:
 61691 5895 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 61691      64656620 
 61691      5F5F7661 
 61691      5F6C6973 
 61691      745F7461 
 61692              	.LASF1386:
 61693 58b9 6F706572 		.string	"operator==<double*, std::vector<double> >"
 61693      61746F72 
 61693      3D3D3C64 
 61693      6F75626C 
 61693      652A2C20 
 61694              	.LASF934:
 61695 58e3 5F547570 		.string	"_Tuple_impl<heatmap_t*&, std::default_delete<heatmap_t>, void>"
 61695      6C655F69 
 61695      6D706C3C 
 61695      68656174 
 61695      6D61705F 
 61696              	.LASF1296:
 61697 5922 5F5F6E6F 		.string	"__normal_iterator<double*, std::vector<double, std::allocator<double> > >"
 61697      726D616C 
 61697      5F697465 
GAS LISTING /tmp/ccJUMvuF.s 			page 1543


 61697      7261746F 
 61697      723C646F 
 61698              	.LASF708:
 61699 596c 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE2atEm"
 61699      53743676 
 61699      6563746F 
 61699      72496A53 
 61699      61496A45 
 61700              	.LASF1653:
 61701 5987 39686561 		.string	"9heatmap_t"
 61701      746D6170 
 61701      5F7400
 61702              	.LASF826:
 61703 5992 5F555461 		.string	"_UTail"
 61703      696C00
 61704              	.LASF630:
 61705 5999 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE17_M_default_appendEm"
 61705      74367665 
 61705      63746F72 
 61705      49645361 
 61705      49644545 
 61706              	.LASF193:
 61707 59c3 5F5A4E4B 		.string	"_ZNKSs5frontEv"
 61707      53733566 
 61707      726F6E74 
 61707      457600
 61708              	.LASF974:
 61709 59d2 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSESt16initializer_listIhE"
 61709      74367665 
 61709      63746F72 
 61709      49685361 
 61709      49684545 
 61710              	.LASF1093:
 61711 5a01 6765743C 		.string	"get<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 61711      30756C2C 
 61711      20686561 
 61711      746D6170 
 61711      5F742A2C 
 61712              	.LASF1120:
 61713 5a37 5F466F72 		.string	"_ForwardIterator1"
 61713      77617264 
 61713      49746572 
 61713      61746F72 
 61713      3100
 61714              	.LASF1121:
 61715 5a49 5F466F72 		.string	"_ForwardIterator2"
 61715      77617264 
 61715      49746572 
 61715      61746F72 
 61715      3200
 61716              	.LASF172:
 61717 5a5b 5F5A4E4B 		.string	"_ZNKSs8max_sizeEv"
 61717      5373386D 
 61717      61785F73 
 61717      697A6545 
 61717      7600
 61718              	.LASF228:
GAS LISTING /tmp/ccJUMvuF.s 			page 1544


 61719 5a6d 5F5A4E53 		.string	"_ZNSs5eraseEmm"
 61719      73356572 
 61719      61736545 
 61719      6D6D00
 61720              	.LASF536:
 61721 5a7c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE37_S_propagate_on_container_swap_helperEz"
 61721      74313661 
 61721      6C6C6F63 
 61721      61746F72 
 61721      5F747261 
 61722              	.LASF873:
 61723 5ac4 5F547570 		.string	"_Tuple_impl<std::default_delete<heatmap_stamp_t>, void>"
 61723      6C655F69 
 61723      6D706C3C 
 61723      7374643A 
 61723      3A646566 
 61724              	.LASF733:
 61725 5afc 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE15_M_erase_at_endEPj"
 61725      74367665 
 61725      63746F72 
 61725      496A5361 
 61725      496A4545 
 61726              	.LASF364:
 61727 5b25 5F535F69 		.string	"_S_ios_seekdir_end"
 61727      6F735F73 
 61727      65656B64 
 61727      69725F65 
 61727      6E6400
 61728              	.LASF785:
 61729 5b38 5F5F6361 		.string	"__call<int, 0ul>"
 61729      6C6C3C69 
 61729      6E742C20 
 61729      30756C3E 
 61729      00
 61730              	.LASF313:
 61731 5b49 73747269 		.string	"string"
 61731      6E6700
 61732              	.LASF714:
 61733 5b50 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4dataEv"
 61733      53743676 
 61733      6563746F 
 61733      72496A53 
 61733      61496A45 
 61734              	.LASF961:
 61735 5b6d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_"
 61735      74313661 
 61735      6C6C6F63 
 61735      61746F72 
 61735      5F747261 
 61736              	.LASF1762:
 61737 5bb9 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E"
 61737      5F5F676E 
 61737      755F6378 
 61737      7832355F 
 61737      5F6E756D 
 61738              	.LASF163:
 61739 5bf8 5F5A4E4B 		.string	"_ZNKSs4cendEv"
GAS LISTING /tmp/ccJUMvuF.s 			page 1545


 61739      53733463 
 61739      656E6445 
 61739      7600
 61740              	.LASF1498:
 61741 5c06 77637363 		.string	"wcschr"
 61741      687200
 61742              	.LASF1214:
 61743 5c0d 7E6E6577 		.string	"~new_allocator"
 61743      5F616C6C 
 61743      6F636174 
 61743      6F7200
 61744              	.LASF1530:
 61745 5c1c 696E7470 		.string	"intptr_t"
 61745      74725F74 
 61745      00
 61746              	.LASF1797:
 61747 5c25 6465636C 		.string	"decltype(nullptr)"
 61747      74797065 
 61747      286E756C 
 61747      6C707472 
 61747      2900
 61748              	.LASF899:
 61749 5c37 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEptEv"
 61749      53743130 
 61749      756E6971 
 61749      75655F70 
 61749      74724939 
 61750              	.LASF590:
 61751 5c71 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4sizeEv"
 61751      53743676 
 61751      6563746F 
 61751      72496453 
 61751      61496445 
 61752              	.LASF1521:
 61753 5c8e 75696E74 		.string	"uint_least64_t"
 61753      5F6C6561 
 61753      73743634 
 61753      5F7400
 61754              	.LASF804:
 61755 5c9d 5F456C65 		.string	"_Elements"
 61755      6D656E74 
 61755      7300
 61756              	.LASF1552:
 61757 5ca7 6E5F7365 		.string	"n_sep_by_space"
 61757      705F6279 
 61757      5F737061 
 61757      636500
 61758              	.LASF360:
 61759 5cb6 5F496F73 		.string	"_Ios_Seekdir"
 61759      5F536565 
 61759      6B646972 
 61759      00
 61760              	.LASF312:
 61761 5cc3 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 61761      53743136 
 61761      696E6974 
 61761      69616C69 
GAS LISTING /tmp/ccJUMvuF.s 			page 1546


 61761      7A65725F 
 61762              	.LASF837:
 61763 5ce7 5F506F69 		.string	"_Pointer"
 61763      6E746572 
 61763      00
 61764              	.LASF675:
 61765 5cf0 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm"
 61765      7431325F 
 61765      56656374 
 61765      6F725F62 
 61765      61736549 
 61766              	.LASF1207:
 61767 5d1b 5F5F6974 		.string	"__iter_comp_val"
 61767      65725F63 
 61767      6F6D705F 
 61767      76616C00 
 61768              	.LASF1792:
 61769 5d2b 5F5A4E53 		.string	"_ZNSs12_S_empty_repEv"
 61769      7331325F 
 61769      535F656D 
 61769      7074795F 
 61769      72657045 
 61770              	.LASF1538:
 61771 5d41 74686F75 		.string	"thousands_sep"
 61771      73616E64 
 61771      735F7365 
 61771      7000
 61772              	.LASF1357:
 61773 5d4f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE7addressERh"
 61773      395F5F67 
 61773      6E755F63 
 61773      78783133 
 61773      6E65775F 
 61774              	.LASF1365:
 61775 5d7b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE27_S_propagate_on_copy_assignEv"
 61775      5F5F676E 
 61775      755F6378 
 61775      7831345F 
 61775      5F616C6C 
 61776              	.LASF1336:
 61777 5dbf 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_nothrow_swapEv"
 61777      5F5F676E 
 61777      755F6378 
 61777      7831345F 
 61777      5F616C6C 
 61778              	.LASF833:
 61779 5df7 7475706C 		.string	"tuple<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 61779      653C7374 
 61779      643A3A6D 
 61779      65727365 
 61779      6E6E655F 
 61780              	.LASF189:
 61781 5eac 5F5A4E4B 		.string	"_ZNKSs2atEm"
 61781      53733261 
 61781      74456D00 
 61782              	.LASF1389:
 61783 5eb8 46494C45 		.string	"FILE"
GAS LISTING /tmp/ccJUMvuF.s 			page 1547


 61783      00
 61784              	.LASF1156:
 61785 5ebd 5F5F706F 		.string	"__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops:
 61785      705F6865 
 61785      61703C5F 
 61785      5F676E75 
 61785      5F637878 
 61786              	.LASF254:
 61787 5f28 5F535F63 		.string	"_S_construct"
 61787      6F6E7374 
 61787      72756374 
 61787      00
 61788              	.LASF1450:
 61789 5f35 70757477 		.string	"putwc"
 61789      6300
 61790              	.LASF206:
 61791 5f3b 5F5A4E53 		.string	"_ZNSs6appendEPKc"
 61791      73366170 
 61791      70656E64 
 61791      45504B63 
 61791      00
 61792              	.LASF1212:
 61793 5f4c 636F6E73 		.string	"const_pointer"
 61793      745F706F 
 61793      696E7465 
 61793      7200
 61794              	.LASF1037:
 61795 5f5a 5F4D753C 		.string	"_Mu<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615u
 61795      7374643A 
 61795      3A6D6572 
 61795      73656E6E 
 61795      655F7477 
 61796              	.LASF1686:
 61797 6014 5F5F636F 		.string	"__comp"
 61797      6D7000
 61798              	.LASF1332:
 61799 601b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE27_S_propagate_on_move_assignEv"
 61799      5F5F676E 
 61799      755F6378 
 61799      7831345F 
 61799      5F616C6C 
 61800              	.LASF192:
 61801 605f 5F5A4E53 		.string	"_ZNSs5frontEv"
 61801      73356672 
 61801      6F6E7445 
 61801      7600
 61802              	.LASF611:
 61803 606d 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE9push_backEOd"
 61803      74367665 
 61803      63746F72 
 61803      49645361 
 61803      49644545 
 61804              	.LASF800:
 61805 608f 5F547570 		.string	"_Tuple_impl"
 61805      6C655F69 
 61805      6D706C00 
 61806              	.LASF338:
GAS LISTING /tmp/ccJUMvuF.s 			page 1548


 61807 609b 5F535F73 		.string	"_S_skipws"
 61807      6B697077 
 61807      7300
 61808              	.LASF941:
 61809 60a5 5F5F6164 		.string	"__add_lvalue_reference_helper<heatmap_t, true>"
 61809      645F6C76 
 61809      616C7565 
 61809      5F726566 
 61809      6572656E 
 61810              	.LASF1304:
 61811 60d4 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEpLEl"
 61811      5F5F676E 
 61811      755F6378 
 61811      7831375F 
 61811      5F6E6F72 
 61812              	.LASF964:
 61813 610e 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE12_Vector_impl12_M_swap_dataERS2_"
 61813      7431325F 
 61813      56656374 
 61813      6F725F62 
 61813      61736549 
 61814              	.LASF245:
 61815 614b 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_"
 61815      73377265 
 61815      706C6163 
 61815      65454E39 
 61815      5F5F676E 
 61816              	.LASF646:
 61817 6188 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE4sizeEv"
 61817      53743136 
 61817      696E6974 
 61817      69616C69 
 61817      7A65725F 
 61818              	.LASF474:
 61819 61ab 5F5A4E53 		.string	"_ZNSt13random_device3maxEv"
 61819      74313372 
 61819      616E646F 
 61819      6D5F6465 
 61819      76696365 
 61820              	.LASF1137:
 61821 61c6 6D6F7665 		.string	"move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__n
 61821      5F626163 
 61821      6B776172 
 61821      643C5F5F 
 61821      676E755F 
 61822              	.LASF742:
 61823 624f 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE5beginEv"
 61823      53743136 
 61823      696E6974 
 61823      69616C69 
 61823      7A65725F 
 61824              	.LASF706:
 61825 6273 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE14_M_range_checkEm"
 61825      53743676 
 61825      6563746F 
 61825      72496A53 
 61825      61496A45 
GAS LISTING /tmp/ccJUMvuF.s 			page 1549


 61826              	.LASF978:
 61827 629b 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5beginEv"
 61827      53743676 
 61827      6563746F 
 61827      72496853 
 61827      61496845 
 61828              	.LASF4:
 61829 62b9 5F4D5F61 		.string	"_M_addref"
 61829      64647265 
 61829      6600
 61830              	.LASF579:
 61831 62c3 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5beginEv"
 61831      53743676 
 61831      6563746F 
 61831      72496453 
 61831      61496445 
 61832              	.LASF1347:
 61833 62e1 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmIEl"
 61833      5F5F676E 
 61833      755F6378 
 61833      7831375F 
 61833      5F6E6F72 
 61834              	.LASF275:
 61835 631b 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcmm"
 61835      53733133 
 61835      66696E64 
 61835      5F666972 
 61835      73745F6F 
 61836              	.LASF1385:
 61837 6337 6F706572 		.string	"operator!=<unsigned int*, std::vector<unsigned int> >"
 61837      61746F72 
 61837      213D3C75 
 61837      6E736967 
 61837      6E656420 
 61838              	.LASF703:
 61839 636d 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE7reserveEm"
 61839      74367665 
 61839      63746F72 
 61839      496A5361 
 61839      496A4545 
 61840              	.LASF1758:
 61841 638c 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE"
 61841      5F5F676E 
 61841      755F6378 
 61841      7832345F 
 61841      5F6E756D 
 61842              	.LASF1360:
 61843 63be 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm"
 61843      5F5F676E 
 61843      755F6378 
 61843      7831336E 
 61843      65775F61 
 61844              	.LASF277:
 61845 63ee 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEcm"
 61845      53733133 
 61845      66696E64 
 61845      5F666972 
GAS LISTING /tmp/ccJUMvuF.s 			page 1550


 61845      73745F6F 
 61846              	.LASF1142:
 61847 6407 5F5F756E 		.string	"__uninitialized_default_n_a<unsigned int*, long unsigned int, unsigned int>"
 61847      696E6974 
 61847      69616C69 
 61847      7A65645F 
 61847      64656661 
 61848              	.LASF1672:
 61849 6453 5F5F6865 		.string	"__head"
 61849      616400
 61850              	.LASF1514:
 61851 645a 696E745F 		.string	"int_least8_t"
 61851      6C656173 
 61851      74385F74 
 61851      00
 61852              	.LASF530:
 61853 6467 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE19_S_size_type_helperEz"
 61853      74313661 
 61853      6C6C6F63 
 61853      61746F72 
 61853      5F747261 
 61854              	.LASF844:
 61855 649d 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSEDn"
 61855      74313075 
 61855      6E697175 
 61855      655F7074 
 61855      72493135 
 61856              	.LASF602:
 61857 64de 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE2atEm"
 61857      74367665 
 61857      63746F72 
 61857      49645361 
 61857      49644545 
 61858              	.LASF1591:
 61859 64f8 73747274 		.string	"strtod"
 61859      6F6400
 61860              	.LASF1601:
 61861 64ff 73747274 		.string	"strtof"
 61861      6F6600
 61862              	.LASF371:
 61863 6506 5F5A4E53 		.string	"_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_"
 61863      7438696F 
 61863      735F6261 
 61863      73653473 
 61863      65746645 
 61864              	.LASF36:
 61865 652f 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 61865      74313163 
 61865      6861725F 
 61865      74726169 
 61865      74734963 
 61866              	.LASF1171:
 61867 6555 5F5F6164 		.string	"__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, doub
 61867      6A757374 
 61867      5F686561 
 61867      703C5F5F 
 61867      676E755F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1551


 61868              	.LASF1703:
 61869 65d5 5F446973 		.string	"_DistanceType"
 61869      74616E63 
 61869      65547970 
 61869      6500
 61870              	.LASF1253:
 61871 65e3 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi"
 61871      5F5F676E 
 61871      755F6378 
 61871      7831375F 
 61871      5F6E6F72 
 61872              	.LASF26:
 61873 660f 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEcvbEv"
 61873      53743137 
 61873      696E7465 
 61873      6772616C 
 61873      5F636F6E 
 61874              	.LASF1528:
 61875 6635 75696E74 		.string	"uint_fast32_t"
 61875      5F666173 
 61875      7433325F 
 61875      7400
 61876              	.LASF1252:
 61877 6643 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv"
 61877      5F5F676E 
 61877      755F6378 
 61877      7831375F 
 61877      5F6E6F72 
 61878              	.LASF2:
 61879 666f 5F5F6578 		.string	"__exception_ptr"
 61879      63657074 
 61879      696F6E5F 
 61879      70747200 
 61880              	.LASF1490:
 61881 667f 77637378 		.string	"wcsxfrm"
 61881      66726D00 
 61882              	.LASF104:
 61883 6687 5F4D5F64 		.string	"_M_data"
 61883      61746100 
 61884              	.LASF1092:
 61885 668f 5F5F6765 		.string	"__get_helper<0ul, heatmap_t*, std::default_delete<heatmap_t> >"
 61885      745F6865 
 61885      6C706572 
 61885      3C30756C 
 61885      2C206865 
 61886              	.LASF207:
 61887 66ce 5F5A4E53 		.string	"_ZNSs6appendEmc"
 61887      73366170 
 61887      70656E64 
 61887      456D6300 
 61888              	.LASF805:
 61889 66de 5F486561 		.string	"_Head_base<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul,
 61889      645F6261 
 61889      73653C30 
 61889      756C2C20 
 61889      7374643A 
 61890              	.LASF1356:
GAS LISTING /tmp/ccJUMvuF.s 			page 1552


 61891 679d 6E65775F 		.string	"new_allocator<unsigned char>"
 61891      616C6C6F 
 61891      6361746F 
 61891      723C756E 
 61891      7369676E 
 61892              	.LASF1399:
 61893 67ba 5F494F5F 		.string	"_IO_buf_end"
 61893      6275665F 
 61893      656E6400 
 61894              	.LASF354:
 61895 67c6 5F496F73 		.string	"_Ios_Iostate"
 61895      5F496F73 
 61895      74617465 
 61895      00
 61896              	.LASF1189:
 61897 67d3 73686F72 		.string	"short unsigned int"
 61897      7420756E 
 61897      7369676E 
 61897      65642069 
 61897      6E7400
 61898              	.LASF930:
 61899 67e6 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9heatmap_tSt14default_deleteIS0_EEE7_M_tailERKS4_"
 61899      7431315F 
 61899      5475706C 
 61899      655F696D 
 61899      706C494C 
 61900              	.LASF199:
 61901 6831 5F5A4E53 		.string	"_ZNSspLEPKc"
 61901      73704C45 
 61901      504B6300 
 61902              	.LASF1554:
 61903 683d 6E5F7369 		.string	"n_sign_posn"
 61903      676E5F70 
 61903      6F736E00 
 61904              	.LASF1503:
 61905 6849 77637374 		.string	"wcstold"
 61905      6F6C6400 
 61906              	.LASF1515:
 61907 6851 696E745F 		.string	"int_least16_t"
 61907      6C656173 
 61907      7431365F 
 61907      7400
 61908              	.LASF1561:
 61909 685f 7365746C 		.string	"setlocale"
 61909      6F63616C 
 61909      6500
 61910              	.LASF1071:
 61911 6869 5F5F636F 		.string	"__copy_move_backward<true, true, std::random_access_iterator_tag>"
 61911      70795F6D 
 61911      6F76655F 
 61911      6261636B 
 61911      77617264 
 61912              	.LASF1115:
 61913 68ab 5F5F756E 		.string	"__unguarded_insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, _
 61913      67756172 
 61913      6465645F 
 61913      696E7365 
GAS LISTING /tmp/ccJUMvuF.s 			page 1553


 61913      7274696F 
 61914              	.LASF287:
 61915 6926 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEcm"
 61915      53733137 
 61915      66696E64 
 61915      5F666972 
 61915      73745F6E 
 61916              	.LASF651:
 61917 6943 5F5F7074 		.string	"__ptrtr_not_void<unsigned int, unsigned int>"
 61917      7274725F 
 61917      6E6F745F 
 61917      766F6964 
 61917      3C756E73 
 61918              	.LASF1613:
 61919 6970 66636C6F 		.string	"fclose"
 61919      736500
 61920              	.LASF1329:
 61921 6977 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE17_S_select_on_copyERKS1_"
 61921      5F5F676E 
 61921      755F6378 
 61921      7831345F 
 61921      5F616C6C 
 61922              	.LASF598:
 61923 69b5 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEixEm"
 61923      74367665 
 61923      63746F72 
 61923      49645361 
 61923      49644545 
 61924              	.LASF468:
 61925 69ce 5F55496E 		.string	"_UIntType"
 61925      74547970 
 61925      6500
 61926              	.LASF583:
 61927 69d8 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE6rbeginEv"
 61927      53743676 
 61927      6563746F 
 61927      72496453 
 61927      61496445 
 61928              	.LASF1483:
 61929 69f7 77637372 		.string	"wcsrtombs"
 61929      746F6D62 
 61929      7300
 61930              	.LASF848:
 61931 6a01 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEptEv"
 61931      53743130 
 61931      756E6971 
 61931      75655F70 
 61931      74724931 
 61932              	.LASF1597:
 61933 6a42 6C6C6469 		.string	"lldiv"
 61933      7600
 61934              	.LASF3:
 61935 6a48 65786365 		.string	"exception_ptr"
 61935      7074696F 
 61935      6E5F7074 
 61935      7200
 61936              	.LASF1603:
GAS LISTING /tmp/ccJUMvuF.s 			page 1554


 61937 6a56 395F475F 		.string	"9_G_fpos_t"
 61937      66706F73 
 61937      5F7400
 61938              	.LASF469:
 61939 6a61 72616E64 		.string	"random_device"
 61939      6F6D5F64 
 61939      65766963 
 61939      6500
 61940              	.LASF382:
 61941 6a6f 736B6970 		.string	"skipws"
 61941      777300
 61942              	.LASF454:
 61943 6a76 696E6974 		.string	"initialization_multiplier"
 61943      69616C69 
 61943      7A617469 
 61943      6F6E5F6D 
 61943      756C7469 
 61944              	.LASF267:
 61945 6a90 5F5A4E4B 		.string	"_ZNKSs4findEcm"
 61945      53733466 
 61945      696E6445 
 61945      636D00
 61946              	.LASF1466:
 61947 6a9f 77637363 		.string	"wcscspn"
 61947      73706E00 
 61948              	.LASF588:
 61949 6aa7 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE7crbeginEv"
 61949      53743676 
 61949      6563746F 
 61949      72496453 
 61949      61496445 
 61950              	.LASF383:
 61951 6ac7 756E6974 		.string	"unitbuf"
 61951      62756600 
 61952              	.LASF1394:
 61953 6acf 5F494F5F 		.string	"_IO_read_base"
 61953      72656164 
 61953      5F626173 
 61953      6500
 61954              	.LASF1131:
 61955 6add 5F5F636F 		.string	"__copy_move_backward_a<true, double*, double*>"
 61955      70795F6D 
 61955      6F76655F 
 61955      6261636B 
 61955      77617264 
 61956              	.LASF461:
 61957 6b0c 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 61957      7432336D 
 61957      65727365 
 61957      6E6E655F 
 61957      74776973 
 61958              	.LASF381:
 61959 6b9e 73686F77 		.string	"showpos"
 61959      706F7300 
 61960              	.LASF567:
 61961 6ba6 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm"
 61961      7431325F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1555


 61961      56656374 
 61961      6F725F62 
 61961      61736549 
 61962              	.LASF832:
 61963 6bd5 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 61963      74357475 
 61963      706C6549 
 61963      49537432 
 61963      336D6572 
 61964              	.LASF1324:
 61965 6c77 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE7addressERKj"
 61965      395F5F67 
 61965      6E755F63 
 61965      78783133 
 61965      6E65775F 
 61966              	.LASF471:
 61967 6ca4 5F4D5F6D 		.string	"_M_mt"
 61967      7400
 61968              	.LASF1351:
 61969 6caa 5F4C6F63 		.string	"_Lock_policy"
 61969      6B5F706F 
 61969      6C696379 
 61969      00
 61970              	.LASF613:
 61971 6cb7 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EERS4_"
 61971      74367665 
 61971      63746F72 
 61971      49645361 
 61971      49644545 
 61972              	.LASF220:
 61973 6cff 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE"
 61973      7336696E 
 61973      73657274 
 61973      454E395F 
 61973      5F676E75 
 61974              	.LASF1757:
 61975 6d49 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb1EE5valueE"
 61975      74313769 
 61975      6E746567 
 61975      72616C5F 
 61975      636F6E73 
 61976              	.LASF747:
 61977 6d70 69746572 		.string	"iterator_traits<double const*>"
 61977      61746F72 
 61977      5F747261 
 61977      6974733C 
 61977      646F7562 
 61978              	.LASF1443:
 61979 6d8f 66777363 		.string	"fwscanf"
 61979      616E6600 
 61980              	.LASF1141:
 61981 6d97 5F5F756E 		.string	"__uninitialized_default_n<unsigned int*, long unsigned int>"
 61981      696E6974 
 61981      69616C69 
 61981      7A65645F 
 61981      64656661 
 61982              	.LASF1428:
GAS LISTING /tmp/ccJUMvuF.s 			page 1556


 61983 6dd3 5F5F7763 		.string	"__wch"
 61983      6800
 61984              	.LASF1111:
 61985 6dd9 6D6F7665 		.string	"move<double&>"
 61985      3C646F75 
 61985      626C6526 
 61985      3E00
 61986              	.LASF968:
 61987 6de7 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm"
 61987      7431325F 
 61987      56656374 
 61987      6F725F62 
 61987      61736549 
 61988              	.LASF633:
 61989 6e12 5F4D5F63 		.string	"_M_check_len"
 61989      6865636B 
 61989      5F6C656E 
 61989      00
 61990              	.LASF1246:
 61991 6e1f 62617365 		.string	"base"
 61991      00
 61992              	.LASF831:
 61993 6e24 5F5A4E53 		.string	"_ZNSt5tupleIISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm42949
 61993      74357475 
 61993      706C6549 
 61993      49537432 
 61993      336D6572 
 61994              	.LASF215:
 61995 6ec3 5F5A4E53 		.string	"_ZNSs6assignEPKc"
 61995      73366173 
 61995      7369676E 
 61995      45504B63 
 61995      00
 61996              	.LASF1373:
 61997 6ed4 5F5F656E 		.string	"__enable_if<true, double*>"
 61997      61626C65 
 61997      5F69663C 
 61997      74727565 
 61997      2C20646F 
 61998              	.LASF1333:
 61999 6eef 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE20_S_propagate_on_swapEv"
 61999      5F5F676E 
 61999      755F6378 
 61999      7831345F 
 61999      5F616C6C 
 62000              	.LASF233:
 62001 6f2c 7265706C 		.string	"replace"
 62001      61636500 
 62002              	.LASF1553:
 62003 6f34 705F7369 		.string	"p_sign_posn"
 62003      676E5F70 
 62003      6F736E00 
 62004              	.LASF938:
 62005 6f40 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEE4swapERS4_"
 62005      74357475 
 62005      706C6549 
 62005      49503968 
GAS LISTING /tmp/ccJUMvuF.s 			page 1557


 62005      6561746D 
 62006              	.LASF264:
 62007 6f7c 5F5A4E4B 		.string	"_ZNKSs4findEPKcmm"
 62007      53733466 
 62007      696E6445 
 62007      504B636D 
 62007      6D00
 62008              	.LASF195:
 62009 6f8e 5F5A4E53 		.string	"_ZNSs4backEv"
 62009      73346261 
 62009      636B4576 
 62009      00
 62010              	.LASF1420:
 62011 6f9b 5F5F4649 		.string	"__FILE"
 62011      4C4500
 62012              	.LASF34:
 62013 6fa2 636F6D70 		.string	"compare"
 62013      61726500 
 62014              	.LASF648:
 62015 6faa 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE3endEv"
 62015      53743136 
 62015      696E6974 
 62015      69616C69 
 62015      7A65725F 
 62016              	.LASF612:
 62017 6fcc 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8pop_backEv"
 62017      74367665 
 62017      63746F72 
 62017      49645361 
 62017      49644545 
 62018              	.LASF881:
 62019 6fec 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_tailERS4_"
 62019      7431315F 
 62019      5475706C 
 62019      655F696D 
 62019      706C494C 
 62020              	.LASF1465:
 62021 703d 77637363 		.string	"wcscpy"
 62021      707900
 62022              	.LASF1431:
 62023 7044 5F5F7661 		.string	"__value"
 62023      6C756500 
 62024              	.LASF1143:
 62025 704c 62696E64 		.string	"bind<std::uniform_int_distribution<>&, std::mersenne_twister_engine<long unsigned int, 32
 62025      3C737464 
 62025      3A3A756E 
 62025      69666F72 
 62025      6D5F696E 
 62026              	.LASF720:
 62027 711c 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EESt16initializer_listIj
 62027      74367665 
 62027      63746F72 
 62027      496A5361 
 62027      496A4545 
 62028              	.LASF1796:
 62029 7177 5F5A5374 		.string	"_ZSt16__throw_bad_castv"
 62029      31365F5F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1558


 62029      7468726F 
 62029      775F6261 
 62029      645F6361 
 62030              	.LASF1609:
 62031 718f 5F736275 		.string	"_sbuf"
 62031      6600
 62032              	.LASF569:
 62033 7195 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm"
 62033      7431325F 
 62033      56656374 
 62033      6F725F62 
 62033      61736549 
 62034              	.LASF1233:
 62035 71c6 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv"
 62035      5F5F676E 
 62035      755F6378 
 62035      7831375F 
 62035      5F6E6F72 
 62036              	.LASF64:
 62037 71f1 5F4D5F65 		.string	"_M_exception_object"
 62037      78636570 
 62037      74696F6E 
 62037      5F6F626A 
 62037      65637400 
 62038              	.LASF971:
 62039 7205 76656374 		.string	"vector<unsigned char, std::allocator<unsigned char> >"
 62039      6F723C75 
 62039      6E736967 
 62039      6E656420 
 62039      63686172 
 62040              	.LASF1491:
 62041 723b 7763746F 		.string	"wctob"
 62041      6200
 62042              	.LASF358:
 62043 7241 5F535F66 		.string	"_S_failbit"
 62043      61696C62 
 62043      697400
 62044              	.LASF1124:
 62045 724c 6765743C 		.string	"get<0ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748
 62045      30756C2C 
 62045      20737464 
 62045      3A3A6D65 
 62045      7273656E 
 62046              	.LASF994:
 62047 72fe 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE8capacityEv"
 62047      53743676 
 62047      6563746F 
 62047      72496853 
 62047      61496845 
 62048              	.LASF562:
 62049 731f 5F566563 		.string	"_Vector_base"
 62049      746F725F 
 62049      62617365 
 62049      00
 62050              	.LASF1775:
 62051 732c 5F5A646C 		.string	"_ZdlPv"
 62051      507600
GAS LISTING /tmp/ccJUMvuF.s 			page 1559


 62052              	.LASF608:
 62053 7333 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4dataEv"
 62053      74367665 
 62053      63746F72 
 62053      49645361 
 62053      49644545 
 62054              	.LASF1776:
 62055 734f 5F5F6275 		.string	"__builtin_unwind_resume"
 62055      696C7469 
 62055      6E5F756E 
 62055      77696E64 
 62055      5F726573 
 62056              	.LASF387:
 62057 7367 666C6F61 		.string	"floatfield"
 62057      74666965 
 62057      6C6400
 62058              	.LASF1055:
 62059 7372 72656D6F 		.string	"remove_reference<double&>"
 62059      76655F72 
 62059      65666572 
 62059      656E6365 
 62059      3C646F75 
 62060              	.LASF1348:
 62061 738c 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEmiEl"
 62061      395F5F67 
 62061      6E755F63 
 62061      78783137 
 62061      5F5F6E6F 
 62062              	.LASF427:
 62063 73c7 5F5F756E 		.string	"__uninit_default_n<unsigned int*, long unsigned int>"
 62063      696E6974 
 62063      5F646566 
 62063      61756C74 
 62063      5F6E3C75 
 62064              	.LASF1:
 62065 73fc 666C6F61 		.string	"float"
 62065      7400
 62066              	.LASF1337:
 62067 7402 5F5F6E6F 		.string	"__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> >
 62067      726D616C 
 62067      5F697465 
 62067      7261746F 
 62067      723C756E 
 62068              	.LASF1430:
 62069 745e 5F5F636F 		.string	"__count"
 62069      756E7400 
 62070              	.LASF1188:
 62071 7466 756E7369 		.string	"unsigned char"
 62071      676E6564 
 62071      20636861 
 62071      7200
 62072              	.LASF855:
 62073 7474 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE7releaseEv"
 62073      74313075 
 62073      6E697175 
 62073      655F7074 
 62073      72493135 
GAS LISTING /tmp/ccJUMvuF.s 			page 1560


 62074              	.LASF779:
 62075 74ba 5F46756E 		.string	"_Func"
 62075      6300
 62076              	.LASF1629:
 62077 74c0 70657272 		.string	"perror"
 62077      6F7200
 62078              	.LASF1139:
 62079 74c7 5F5F6E69 		.string	"__niter_base<unsigned int*>"
 62079      7465725F 
 62079      62617365 
 62079      3C756E73 
 62079      69676E65 
 62080              	.LASF512:
 62081 74e3 6D616B65 		.string	"make_unsigned<long int>"
 62081      5F756E73 
 62081      69676E65 
 62081      643C6C6F 
 62081      6E672069 
 62082              	.LASF1086:
 62083 74fb 666F7277 		.string	"forward<std::default_delete<heatmap_stamp_t> >"
 62083      6172643C 
 62083      7374643A 
 62083      3A646566 
 62083      61756C74 
 62084              	.LASF1499:
 62085 752a 77637370 		.string	"wcspbrk"
 62085      62726B00 
 62086              	.LASF219:
 62087 7532 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEmc"
 62087      7336696E 
 62087      73657274 
 62087      454E395F 
 62087      5F676E75 
 62088              	.LASF240:
 62089 7567 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcm"
 62089      73377265 
 62089      706C6163 
 62089      65454E39 
 62089      5F5F676E 
 62090              	.LASF784:
 62091 75a2 5F42696E 		.string	"_Bind<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 62091      643C7374 
 62091      643A3A6D 
 62091      65727365 
 62091      6E6E655F 
 62092              	.LASF1695:
 62093 7651 5F5F6173 		.string	"__assignable"
 62093      7369676E 
 62093      61626C65 
 62093      00
 62094              	.LASF730:
 62095 765e 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE17_M_default_appendEm"
 62095      74367665 
 62095      63746F72 
 62095      496A5361 
 62095      496A4545 
 62096              	.LASF1646:
GAS LISTING /tmp/ccJUMvuF.s 			page 1561


 62097 7688 54696D65 		.string	"Timer"
 62097      7200
 62098              	.LASF1320:
 62099 768e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmiEl"
 62099      395F5F67 
 62099      6E755F63 
 62099      78783137 
 62099      5F5F6E6F 
 62100              	.LASF1763:
 62101 76ca 5F5A4E53 		.string	"_ZNSt17integral_constantIiLi0EE5valueE"
 62101      74313769 
 62101      6E746567 
 62101      72616C5F 
 62101      636F6E73 
 62102              	.LASF1556:
 62103 76f1 696E745F 		.string	"int_p_sep_by_space"
 62103      705F7365 
 62103      705F6279 
 62103      5F737061 
 62103      636500
 62104              	.LASF1766:
 62105 7704 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE"
 62105      5F5F676E 
 62105      755F6378 
 62105      7832345F 
 62105      5F6E756D 
 62106              	.LASF304:
 62107 7736 74797065 		.string	"type_info"
 62107      5F696E66 
 62107      6F00
 62108              	.LASF1626:
 62109 7740 67657463 		.string	"getc"
 62109      00
 62110              	.LASF858:
 62111 7745 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSERKS3_"
 62111      74313075 
 62111      6E697175 
 62111      655F7074 
 62111      72493135 
 62112              	.LASF1610:
 62113 7789 5F706F73 		.string	"_pos"
 62113      00
 62114              	.LASF463:
 62115 778e 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 62115      7432336D 
 62115      65727365 
 62115      6E6E655F 
 62115      74776973 
 62116              	.LASF1614:
 62117 7824 66656F66 		.string	"feof"
 62117      00
 62118              	.LASF1631:
 62119 7829 72656E61 		.string	"rename"
 62119      6D6500
 62120              	.LASF361:
 62121 7830 5F535F62 		.string	"_S_beg"
 62121      656700
GAS LISTING /tmp/ccJUMvuF.s 			page 1562


 62122              	.LASF1540:
 62123 7837 696E745F 		.string	"int_curr_symbol"
 62123      63757272 
 62123      5F73796D 
 62123      626F6C00 
 62124              	.LASF1448:
 62125 7847 6D627369 		.string	"mbsinit"
 62125      6E697400 
 62126              	.LASF1169:
 62127 784f 5F5F6D6F 		.string	"__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu
 62127      76655F6D 
 62127      65646961 
 62127      6E5F746F 
 62127      5F666972 
 62128              	.LASF457:
 62129 78c6 6D657273 		.string	"mersenne_twister_engine"
 62129      656E6E65 
 62129      5F747769 
 62129      73746572 
 62129      5F656E67 
 62130              	.LASF1452:
 62131 78de 73777072 		.string	"swprintf"
 62131      696E7466 
 62131      00
 62132              	.LASF1787:
 62133 78e7 474E5520 		.string	"GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g -O3 -std=c++11 -fopenmp -fPIC"
 62133      432B2B20 
 62133      342E392E 
 62133      32202D6D 
 62133      74756E65 
 62134              	.LASF966:
 62135 7933 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv"
 62135      53743132 
 62135      5F566563 
 62135      746F725F 
 62135      62617365 
 62136              	.LASF679:
 62137 7967 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEaSERKS1_"
 62137      74367665 
 62137      63746F72 
 62137      496A5361 
 62137      496A4545 
 62138              	.LASF1642:
 62139 7984 77637472 		.string	"wctrans"
 62139      616E7300 
 62140              	.LASF759:
 62141 798c 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiE5resetEv"
 62141      74323475 
 62141      6E69666F 
 62141      726D5F69 
 62141      6E745F64 
 62142              	.LASF78:
 62143 79b7 5F535F74 		.string	"_S_terminal"
 62143      65726D69 
 62143      6E616C00 
 62144              	.LASF404:
 62145 79c3 5F4D5F69 		.string	"_M_insert<long unsigned int>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1563


 62145      6E736572 
 62145      743C6C6F 
 62145      6E672075 
 62145      6E736967 
 62146              	.LASF1747:
 62147 79e0 696D6762 		.string	"imgbuf"
 62147      756600
 62148              	.LASF276:
 62149 79e7 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcm"
 62149      53733133 
 62149      66696E64 
 62149      5F666972 
 62149      73745F6F 
 62150              	.LASF1495:
 62151 7a02 776D656D 		.string	"wmemset"
 62151      73657400 
 62152              	.LASF1467:
 62153 7a0a 77637366 		.string	"wcsftime"
 62153      74696D65 
 62153      00
 62154              	.LASF509:
 62155 7a13 5F5F6D61 		.string	"__make_unsigned_selector<long int, true, false>"
 62155      6B655F75 
 62155      6E736967 
 62155      6E65645F 
 62155      73656C65 
 62156              	.LASF1550:
 62157 7a43 705F7365 		.string	"p_sep_by_space"
 62157      705F6279 
 62157      5F737061 
 62157      636500
 62158              	.LASF284:
 62159 7a52 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofERKSsm"
 62159      53733137 
 62159      66696E64 
 62159      5F666972 
 62159      73745F6E 
 62160              	.LASF1665:
 62161 7a72 5F5F6774 		.string	"__gthread_active_ptr"
 62161      68726561 
 62161      645F6163 
 62161      74697665 
 62161      5F707472 
 62162              	.LASF386:
 62163 7a87 62617365 		.string	"basefield"
 62163      6669656C 
 62163      6400
 62164              	.LASF69:
 62165 7a91 636F6E73 		.string	"const_iterator"
 62165      745F6974 
 62165      65726174 
 62165      6F7200
 62166              	.LASF1219:
 62167 7aa0 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm"
 62167      5F5F676E 
 62167      755F6378 
 62167      7831336E 
GAS LISTING /tmp/ccJUMvuF.s 			page 1564


 62167      65775F61 
 62168              	.LASF101:
 62169 7ad0 5F4D5F72 		.string	"_M_refcopy"
 62169      6566636F 
 62169      707900
 62170              	.LASF1146:
 62171 7adb 5F47656E 		.string	"_Generator"
 62171      65726174 
 62171      6F7200
 62172              	.LASF1173:
 62173 7ae6 70696563 		.string	"piecewise_construct"
 62173      65776973 
 62173      655F636F 
 62173      6E737472 
 62173      75637400 
 62174              	.LASF279:
 62175 7afa 5F5A4E4B 		.string	"_ZNKSs12find_last_ofERKSsm"
 62175      53733132 
 62175      66696E64 
 62175      5F6C6173 
 62175      745F6F66 
 62176              	.LASF88:
 62177 7b15 5F5A4E53 		.string	"_ZNSs4_Rep15_M_set_sharableEv"
 62177      73345F52 
 62177      65703135 
 62177      5F4D5F73 
 62177      65745F73 
 62178              	.LASF1696:
 62179 7b33 5F5F7369 		.string	"__simple"
 62179      6D706C65 
 62179      00
 62180              	.LASF610:
 62181 7b3c 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE9push_backERKd"
 62181      74367665 
 62181      63746F72 
 62181      49645361 
 62181      49644545 
 62182              	.LASF1612:
 62183 7b5f 636C6561 		.string	"clearerr"
 62183      72657272 
 62183      00
 62184              	.LASF1489:
 62185 7b68 77637374 		.string	"wcstoul"
 62185      6F756C00 
 62186              	.LASF623:
 62187 7b70 5F4D5F64 		.string	"_M_default_initialize"
 62187      65666175 
 62187      6C745F69 
 62187      6E697469 
 62187      616C697A 
 62188              	.LASF1094:
 62189 7b86 6765743C 		.string	"get<0ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 62189      30756C2C 
 62189      20686561 
 62189      746D6170 
 62189      5F737461 
 62190              	.LASF1418:
GAS LISTING /tmp/ccJUMvuF.s 			page 1565


 62191 7bc8 5F6D6F64 		.string	"_mode"
 62191      6500
 62192              	.LASF758:
 62193 7bce 72657365 		.string	"reset"
 62193      7400
 62194              	.LASF149:
 62195 7bd4 62656769 		.string	"begin"
 62195      6E00
 62196              	.LASF1292:
 62197 7bda 5F535F6E 		.string	"_S_nothrow_move"
 62197      6F746872 
 62197      6F775F6D 
 62197      6F766500 
 62198              	.LASF659:
 62199 7bea 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE25_S_difference_type_helperEz"
 62199      74313661 
 62199      6C6C6F63 
 62199      61746F72 
 62199      5F747261 
 62200              	.LASF513:
 62201 7c26 74797065 		.string	"type"
 62201      00
 62202              	.LASF1463:
 62203 7c2b 77637363 		.string	"wcscmp"
 62203      6D7000
 62204              	.LASF1458:
 62205 7c32 76737773 		.string	"vswscanf"
 62205      63616E66 
 62205      00
 62206              	.LASF1564:
 62207 7c3b 5F5F6F66 		.string	"__off_t"
 62207      665F7400 
 62208              	.LASF122:
 62209 7c43 5F4D5F64 		.string	"_M_disjunct"
 62209      69736A75 
 62209      6E637400 
 62210              	.LASF294:
 62211 7c4f 5F5A4E4B 		.string	"_ZNKSs6substrEmm"
 62211      53733673 
 62211      75627374 
 62211      72456D6D 
 62211      00
 62212              	.LASF769:
 62213 7c60 5F496E74 		.string	"_IntType"
 62213      54797065 
 62213      00
 62214              	.LASF1474:
 62215 7c69 746D5F77 		.string	"tm_wday"
 62215      64617900 
 62216              	.LASF1444:
 62217 7c71 67657477 		.string	"getwc"
 62217      6300
 62218              	.LASF1654:
 62219 7c77 68656174 		.string	"heatmap_t"
 62219      6D61705F 
 62219      7400
 62220              	.LASF1630:
GAS LISTING /tmp/ccJUMvuF.s 			page 1566


 62221 7c81 72656D6F 		.string	"remove"
 62221      766500
 62222              	.LASF198:
 62223 7c88 5F5A4E53 		.string	"_ZNSspLERKSs"
 62223      73704C45 
 62223      524B5373 
 62223      00
 62224              	.LASF652:
 62225 7c95 706F696E 		.string	"pointer_traits<unsigned int*>"
 62225      7465725F 
 62225      74726169 
 62225      74733C75 
 62225      6E736967 
 62226              	.LASF202:
 62227 7cb3 61707065 		.string	"append"
 62227      6E6400
 62228              	.LASF1691:
 62229 7cba 5F5F6172 		.string	"__arg"
 62229      6700
 62230              	.LASF145:
 62231 7cc0 5F5A4E53 		.string	"_ZNSsaSEPKc"
 62231      73615345 
 62231      504B6300 
 62232              	.LASF711:
 62233 7ccc 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4backEv"
 62233      74367665 
 62233      63746F72 
 62233      496A5361 
 62233      496A4545 
 62234              	.LASF349:
 62235 7ce8 5F535F62 		.string	"_S_bin"
 62235      696E00
 62236              	.LASF1733:
 62237 7cef 646F6E65 		.string	"done"
 62237      00
 62238              	.LASF1192:
 62239 7cf4 7369676E 		.string	"signed char"
 62239      65642063 
 62239      68617200 
 62240              	.LASF368:
 62241 7d00 7E496E69 		.string	"~Init"
 62241      7400
 62242              	.LASF641:
 62243 7d06 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 62243      74367665 
 62243      63746F72 
 62243      49645361 
 62243      49644545 
 62244              	.LASF943:
 62245 7d4c 72656269 		.string	"rebind<unsigned char>"
 62245      6E643C75 
 62245      6E736967 
 62245      6E656420 
 62245      63686172 
 62246              	.LASF234:
 62247 7d62 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSs"
 62247      73377265 
GAS LISTING /tmp/ccJUMvuF.s 			page 1567


 62247      706C6163 
 62247      65456D6D 
 62247      524B5373 
 62248              	.LASF248:
 62249 7d77 5F4D5F72 		.string	"_M_replace_aux"
 62249      65706C61 
 62249      63655F61 
 62249      757800
 62250              	.LASF1457:
 62251 7d86 76737770 		.string	"vswprintf"
 62251      72696E74 
 62251      6600
 62252              	.LASF1272:
 62253 7d90 6E65775F 		.string	"new_allocator<double>"
 62253      616C6C6F 
 62253      6361746F 
 62253      723C646F 
 62253      75626C65 
 62254              	.LASF970:
 62255 7da6 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm"
 62255      7431325F 
 62255      56656374 
 62255      6F725F62 
 62255      61736549 
 62256              	.LASF1110:
 62257 7dd7 5F446573 		.string	"_Destroy<unsigned char*, unsigned char>"
 62257      74726F79 
 62257      3C756E73 
 62257      69676E65 
 62257      64206368 
 62258              	.LASF1014:
 62259 7dff 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EEmRS4_"
 62259      74367665 
 62259      63746F72 
 62259      49685361 
 62259      49684545 
 62260              	.LASF592:
 62261 7e48 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6resizeEm"
 62261      74367665 
 62261      63746F72 
 62261      49645361 
 62261      49644545 
 62262              	.LASF884:
 62263 7e66 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEEaSEOS4_"
 62263      7431315F 
 62263      5475706C 
 62263      655F696D 
 62263      706C494C 
 62264              	.LASF367:
 62265 7eb1 496E6974 		.string	"Init"
 62265      00
 62266              	.LASF437:
 62267 7eb6 5F5F6D6F 		.string	"__mod<long unsigned int, 4294967296ul, 1ul, 0ul>"
 62267      643C6C6F 
 62267      6E672075 
 62267      6E736967 
 62267      6E656420 
GAS LISTING /tmp/ccJUMvuF.s 			page 1568


 62268              	.LASF182:
 62269 7ee7 636C6561 		.string	"clear"
 62269      7200
 62270              	.LASF1314:
 62271 7eed 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmmEv"
 62271      5F5F676E 
 62271      755F6378 
 62271      7831375F 
 62271      5F6E6F72 
 62272              	.LASF300:
 62273 7f28 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKcm"
 62273      53733763 
 62273      6F6D7061 
 62273      7265456D 
 62273      6D504B63 
 62274              	.LASF259:
 62275 7f3e 5F5A4E4B 		.string	"_ZNKSs5c_strEv"
 62275      53733563 
 62275      5F737472 
 62275      457600
 62276              	.LASF614:
 62277 7f4d 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6insertEN9__gnu_cxx17__normal_iteratorIPKdS1_EEOd"
 62277      74367665 
 62277      63746F72 
 62277      49645361 
 62277      49644545 
 62278              	.LASF1279:
 62279 7f93 5F535F73 		.string	"_S_select_on_copy"
 62279      656C6563 
 62279      745F6F6E 
 62279      5F636F70 
 62279      7900
 62280              	.LASF1082:
 62281 7fa5 6F706572 		.string	"operator<< <std::char_traits<char> >"
 62281      61746F72 
 62281      3C3C203C 
 62281      7374643A 
 62281      3A636861 
 62282              	.LASF1560:
 62283 7fca 696E745F 		.string	"int_n_sign_posn"
 62283      6E5F7369 
 62283      676E5F70 
 62283      6F736E00 
 62284              	.LASF688:
 62285 7fda 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6rbeginEv"
 62285      74367665 
 62285      63746F72 
 62285      496A5361 
 62285      496A4545 
 62286              	.LASF1697:
 62287 7ff8 5F5F746F 		.string	"__token"
 62287      6B656E00 
 62288              	.LASF721:
 62289 8000 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EEmRS4_"
 62289      74367665 
 62289      63746F72 
 62289      496A5361 
GAS LISTING /tmp/ccJUMvuF.s 			page 1569


 62289      496A4545 
 62290              	.LASF1424:
 62291 8049 66705F6F 		.string	"fp_offset"
 62291      66667365 
 62291      7400
 62292              	.LASF670:
 62293 8053 5F566563 		.string	"_Vector_base<unsigned int, std::allocator<unsigned int> >"
 62293      746F725F 
 62293      62617365 
 62293      3C756E73 
 62293      69676E65 
 62294              	.LASF632:
 62295 808d 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE16_M_shrink_to_fitEv"
 62295      74367665 
 62295      63746F72 
 62295      49645361 
 62295      49644545 
 62296              	.LASF898:
 62297 80b6 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEdeEv"
 62297      53743130 
 62297      756E6971 
 62297      75655F70 
 62297      74724939 
 62298              	.LASF24:
 62299 80f0 76616C75 		.string	"value"
 62299      6500
 62300              	.LASF1145:
 62301 80f6 5F464974 		.string	"_FIter"
 62301      657200
 62302              	.LASF1608:
 62303 80fd 5F6E6578 		.string	"_next"
 62303      7400
 62304              	.LASF72:
 62305 8103 5F526570 		.string	"_Rep_base"
 62305      5F626173 
 62305      6500
 62306              	.LASF1647:
 62307 810d 7E54696D 		.string	"~Timer"
 62307      657200
 62308              	.LASF1265:
 62309 8114 5F5F6D61 		.string	"__max_exponent10"
 62309      785F6578 
 62309      706F6E65 
 62309      6E743130 
 62309      00
 62310              	.LASF1598:
 62311 8125 61746F6C 		.string	"atoll"
 62311      6C00
 62312              	.LASF791:
 62313 812b 5F4D6179 		.string	"_Maybe_get_result_type"
 62313      62655F67 
 62313      65745F72 
 62313      6573756C 
 62313      745F7479 
 62314              	.LASF1743:
 62315 8142 5F5A4E31 		.string	"_ZN11RepeatTimerD2Ev"
 62315      31526570 
GAS LISTING /tmp/ccJUMvuF.s 			page 1570


 62315      65617454 
 62315      696D6572 
 62315      44324576 
 62316              	.LASF151:
 62317 8157 5F5A4E4B 		.string	"_ZNKSs5beginEv"
 62317      53733562 
 62317      6567696E 
 62317      457600
 62318              	.LASF52:
 62319 8166 6E6F745F 		.string	"not_eof"
 62319      656F6600 
 62320              	.LASF1618:
 62321 816e 66676574 		.string	"fgetpos"
 62321      706F7300 
 62322              	.LASF969:
 62323 8176 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm"
 62323      7431325F 
 62323      56656374 
 62323      6F725F62 
 62323      61736549 
 62324              	.LASF1729:
 62325 81a5 5F5F7565 		.string	"__uerange"
 62325      72616E67 
 62325      6500
 62326              	.LASF897:
 62327 81af 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSEDn"
 62327      74313075 
 62327      6E697175 
 62327      655F7074 
 62327      72493968 
 62328              	.LASF719:
 62329 81e9 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6insertEN9__gnu_cxx17__normal_iteratorIPKjS1_EEOj"
 62329      74367665 
 62329      63746F72 
 62329      496A5361 
 62329      496A4545 
 62330              	.LASF1750:
 62331 822f 68656174 		.string	"heatmap_cs_default"
 62331      6D61705F 
 62331      63735F64 
 62331      65666175 
 62331      6C7400
 62332              	.LASF335:
 62333 8242 5F535F73 		.string	"_S_showbase"
 62333      686F7762 
 62333      61736500 
 62334              	.LASF232:
 62335 824e 5F5A4E53 		.string	"_ZNSs8pop_backEv"
 62335      7338706F 
 62335      705F6261 
 62335      636B4576 
 62335      00
 62336              	.LASF340:
 62337 825f 5F535F75 		.string	"_S_uppercase"
 62337      70706572 
 62337      63617365 
 62337      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1571


 62338              	.LASF222:
 62339 826c 5F5A4E53 		.string	"_ZNSs6insertEmRKSsmm"
 62339      7336696E 
 62339      73657274 
 62339      456D524B 
 62339      53736D6D 
 62340              	.LASF1481:
 62341 8281 7763736E 		.string	"wcsncmp"
 62341      636D7000 
 62342              	.LASF1224:
 62343 8289 5F5F6973 		.string	"__is_signed"
 62343      5F736967 
 62343      6E656400 
 62344              	.LASF314:
 62345 8295 616C6C6F 		.string	"allocator_arg_t"
 62345      6361746F 
 62345      725F6172 
 62345      675F7400 
 62346              	.LASF492:
 62347 82a5 72656269 		.string	"rebind<double>"
 62347      6E643C64 
 62347      6F75626C 
 62347      653E00
 62348              	.LASF1617:
 62349 82b4 66676574 		.string	"fgetc"
 62349      6300
 62350              	.LASF99:
 62351 82ba 5F4D5F64 		.string	"_M_destroy"
 62351      65737472 
 62351      6F7900
 62352              	.LASF117:
 62353 82c5 5F5A4E4B 		.string	"_ZNKSs8_M_checkEmPKc"
 62353      5373385F 
 62353      4D5F6368 
 62353      65636B45 
 62353      6D504B63 
 62354              	.LASF1532:
 62355 82da 696E746D 		.string	"intmax_t"
 62355      61785F74 
 62355      00
 62356              	.LASF1619:
 62357 82e3 66676574 		.string	"fgets"
 62357      7300
 62358              	.LASF1028:
 62359 82e9 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_"
 62359      74367665 
 62359      63746F72 
 62359      49685361 
 62359      49684545 
 62360              	.LASF1638:
 62361 8331 77637479 		.string	"wctype_t"
 62361      70655F74 
 62361      00
 62362              	.LASF1350:
 62363 833a 5F5F6E6F 		.string	"__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned 
 62363      726D616C 
 62363      5F697465 
GAS LISTING /tmp/ccJUMvuF.s 			page 1572


 62363      7261746F 
 62363      723C756E 
 62364              	.LASF15:
 62365 839c 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 62365      7431355F 
 62365      5F657863 
 62365      65707469 
 62365      6F6E5F70 
 62366              	.LASF1095:
 62367 83cc 666F7277 		.string	"forward<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483
 62367      6172643C 
 62367      7374643A 
 62367      3A6D6572 
 62367      73656E6E 
 62368              	.LASF1694:
 62369 847d 5F5F6172 		.string	"__args"
 62369      677300
 62370              	.LASF1109:
 62371 8484 5F446573 		.string	"_Destroy<unsigned char*>"
 62371      74726F79 
 62371      3C756E73 
 62371      69676E65 
 62371      64206368 
 62372              	.LASF1764:
 62373 849d 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE"
 62373      5F5F676E 
 62373      755F6378 
 62373      7832345F 
 62373      5F6E756D 
 62374              	.LASF330:
 62375 84d2 5F535F69 		.string	"_S_internal"
 62375      6E746572 
 62375      6E616C00 
 62376              	.LASF1075:
 62377 84de 72647374 		.string	"rdstate"
 62377      61746500 
 62378              	.LASF1227:
 62379 84e6 5F5F6E6F 		.string	"__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<c
 62379      726D616C 
 62379      5F697465 
 62379      7261746F 
 62379      723C6368 
 62380              	.LASF1036:
 62381 8548 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE3endEv"
 62381      53743136 
 62381      696E6974 
 62381      69616C69 
 62381      7A65725F 
 62382              	.LASF1710:
 62383 856a 636F756E 		.string	"count"
 62383      7400
 62384              	.LASF557:
 62385 8570 5F4D5F69 		.string	"_M_impl"
 62385      6D706C00 
 62386              	.LASF321:
 62387 8578 5F5A4E53 		.string	"_ZNSt5tupleIIEE4swapERS0_"
 62387      74357475 
GAS LISTING /tmp/ccJUMvuF.s 			page 1573


 62387      706C6549 
 62387      49454534 
 62387      73776170 
 62388              	.LASF293:
 62389 8592 73756273 		.string	"substr"
 62389      747200
 62390              	.LASF1728:
 62391 8599 5F5F7265 		.string	"__ret"
 62391      7400
 62392              	.LASF201:
 62393 859f 5F5A4E53 		.string	"_ZNSspLESt16initializer_listIcE"
 62393      73704C45 
 62393      53743136 
 62393      696E6974 
 62393      69616C69 
 62394              	.LASF581:
 62395 85bf 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE3endEv"
 62395      53743676 
 62395      6563746F 
 62395      72496453 
 62395      61496445 
 62396              	.LASF1546:
 62397 85db 6E656761 		.string	"negative_sign"
 62397      74697665 
 62397      5F736967 
 62397      6E00
 62398              	.LASF1756:
 62399 85e9 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb0EE5valueE"
 62399      74313769 
 62399      6E746567 
 62399      72616C5F 
 62399      636F6E73 
 62400              	.LASF150:
 62401 8610 5F5A4E53 		.string	"_ZNSs5beginEv"
 62401      73356265 
 62401      67696E45 
 62401      7600
 62402              	.LASF173:
 62403 861e 72657369 		.string	"resize"
 62403      7A6500
 62404              	.LASF1407:
 62405 8625 5F6F6C64 		.string	"_old_offset"
 62405      5F6F6666 
 62405      73657400 
 62406              	.LASF1582:
 62407 8631 67657465 		.string	"getenv"
 62407      6E7600
 62408              	.LASF891:
 62409 8638 7475706C 		.string	"tuple<heatmap_stamp_t*&, std::default_delete<heatmap_stamp_t>, void>"
 62409      653C6865 
 62409      61746D61 
 62409      705F7374 
 62409      616D705F 
 62410              	.LASF1449:
 62411 867d 6D627372 		.string	"mbsrtowcs"
 62411      746F7763 
 62411      7300
GAS LISTING /tmp/ccJUMvuF.s 			page 1574


 62412              	.LASF13:
 62413 8687 73776170 		.string	"swap"
 62413      00
 62414              	.LASF1160:
 62415 868c 5F5F696E 		.string	"__introsort_loop<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, long int, _
 62415      74726F73 
 62415      6F72745F 
 62415      6C6F6F70 
 62415      3C5F5F67 
 62416              	.LASF130:
 62417 8707 5F5A4E53 		.string	"_ZNSs9_M_assignEPcmc"
 62417      73395F4D 
 62417      5F617373 
 62417      69676E45 
 62417      50636D63 
 62418              	.LASF1606:
 62419 871c 5F475F66 		.string	"_G_fpos_t"
 62419      706F735F 
 62419      7400
 62420              	.LASF576:
 62421 8726 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6assignEmRKd"
 62421      74367665 
 62421      63746F72 
 62421      49645361 
 62421      49644545 
 62422              	.LASF1482:
 62423 8747 7763736E 		.string	"wcsncpy"
 62423      63707900 
 62424              	.LASF91:
 62425 874f 5F4D5F72 		.string	"_M_refdata"
 62425      65666461 
 62425      746100
 62426              	.LASF565:
 62427 875a 5F5A4E53 		.string	"_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm"
 62427      7431325F 
 62427      56656374 
 62427      6F725F62 
 62427      61736549 
 62428              	.LASF1783:
 62429 8785 68656174 		.string	"heatmap_new"
 62429      6D61705F 
 62429      6E657700 
 62430              	.LASF1084:
 62431 8791 6F706572 		.string	"operator&="
 62431      61746F72 
 62431      263D00
 62432              	.LASF365:
 62433 879c 5F535F72 		.string	"_S_refcount"
 62433      6566636F 
 62433      756E7400 
 62434              	.LASF1605:
 62435 87a8 5F5F7374 		.string	"__state"
 62435      61746500 
 62436              	.LASF1007:
 62437 87b0 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4dataEv"
 62437      53743676 
 62437      6563746F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1575


 62437      72496853 
 62437      61496845 
 62438              	.LASF574:
 62439 87cd 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSEOS1_"
 62439      74367665 
 62439      63746F72 
 62439      49645361 
 62439      49644545 
 62440              	.LASF33:
 62441 87e9 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 62441      74313163 
 62441      6861725F 
 62441      74726169 
 62441      74734963 
 62442              	.LASF127:
 62443 8809 5F4D5F6D 		.string	"_M_move"
 62443      6F766500 
 62444              	.LASF28:
 62445 8811 70696563 		.string	"piecewise_construct_t"
 62445      65776973 
 62445      655F636F 
 62445      6E737472 
 62445      7563745F 
 62446              	.LASF1388:
 62447 8827 5F5F676E 		.string	"__gnu_debug"
 62447      755F6465 
 62447      62756700 
 62448              	.LASF327:
 62449 8833 5F535F64 		.string	"_S_dec"
 62449      656300
 62450              	.LASF1278:
 62451 883a 5F5F616C 		.string	"__alloc_traits<std::allocator<double> >"
 62451      6C6F635F 
 62451      74726169 
 62451      74733C73 
 62451      74643A3A 
 62452              	.LASF315:
 62453 8862 5F5F7573 		.string	"__uses_alloc_base"
 62453      65735F61 
 62453      6C6C6F63 
 62453      5F626173 
 62453      6500
 62454              	.LASF760:
 62455 8874 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE1aEv"
 62455      53743234 
 62455      756E6966 
 62455      6F726D5F 
 62455      696E745F 
 62456              	.LASF1367:
 62457 889c 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE20_S_propagate_on_swapEv"
 62457      5F5F676E 
 62457      755F6378 
 62457      7831345F 
 62457      5F616C6C 
 62458              	.LASF1057:
 62459 88d9 5F497465 		.string	"_Iter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<doubl
 62459      725F6261 
GAS LISTING /tmp/ccJUMvuF.s 			page 1576


 62459      73653C5F 
 62459      5F676E75 
 62459      5F637878 
 62460              	.LASF1152:
 62461 8941 5F5F756E 		.string	"__uninitialized_default_n_a<unsigned char*, long unsigned int, unsigned char>"
 62461      696E6974 
 62461      69616C69 
 62461      7A65645F 
 62461      64656661 
 62462              	.LASF129:
 62463 898f 5F4D5F61 		.string	"_M_assign"
 62463      73736967 
 62463      6E00
 62464              	.LASF1705:
 62465 8999 5F5F6D69 		.string	"__middle"
 62465      64646C65 
 62465      00
 62466              	.LASF66:
 62467 89a2 5F4D5F64 		.string	"_M_dataplus"
 62467      61746170 
 62467      6C757300 
 62468              	.LASF728:
 62469 89ae 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_fill_assignEmRKj"
 62469      74367665 
 62469      63746F72 
 62469      496A5361 
 62469      496A4545 
 62470              	.LASF1534:
 62471 89d8 63686172 		.string	"char16_t"
 62471      31365F74 
 62471      00
 62472              	.LASF306:
 62473 89e1 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_tr
 62473      7273655F 
 62473      69746572 
 62473      61746F72 
 62473      3C5F5F67 
 62474              	.LASF851:
 62475 8a61 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE11get_deleterEv"
 62475      74313075 
 62475      6E697175 
 62475      655F7074 
 62475      72493135 
 62476              	.LASF744:
 62477 8aac 69746572 		.string	"iterator_traits<double*>"
 62477      61746F72 
 62477      5F747261 
 62477      6974733C 
 62477      646F7562 
 62478              	.LASF464:
 62479 8ac5 6F706572 		.string	"operator()"
 62479      61746F72 
 62479      282900
 62480              	.LASF194:
 62481 8ad0 6261636B 		.string	"back"
 62481      00
 62482              	.LASF1375:
GAS LISTING /tmp/ccJUMvuF.s 			page 1577


 62483 8ad5 5F5F656E 		.string	"__enable_if<true, unsigned char*>"
 62483      61626C65 
 62483      5F69663C 
 62483      74727565 
 62483      2C20756E 
 62484              	.LASF1784:
 62485 8af7 68656174 		.string	"heatmap_stamp_free"
 62485      6D61705F 
 62485      7374616D 
 62485      705F6672 
 62485      656500
 62486              	.LASF1185:
 62487 8b0a 73747265 		.string	"streamsize"
 62487      616D7369 
 62487      7A6500
 62488              	.LASF196:
 62489 8b15 5F5A4E4B 		.string	"_ZNKSs4backEv"
 62489      53733462 
 62489      61636B45 
 62489      7600
 62490              	.LASF1293:
 62491 8b23 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_nothrow_moveEv"
 62491      5F5F676E 
 62491      755F6378 
 62491      7831345F 
 62491      5F616C6C 
 62492              	.LASF676:
 62493 8b5b 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm"
 62493      7431325F 
 62493      56656374 
 62493      6F725F62 
 62493      61736549 
 62494              	.LASF1668:
 62495 8b8a 5F5F666D 		.string	"__fmtfl"
 62495      74666C00 
 62496              	.LASF1238:
 62497 8b92 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixEl"
 62497      395F5F67 
 62497      6E755F63 
 62497      78783137 
 62497      5F5F6E6F 
 62498              	.LASF225:
 62499 8bbe 5F5A4E53 		.string	"_ZNSs6insertEmmc"
 62499      7336696E 
 62499      73657274 
 62499      456D6D63 
 62499      00
 62500              	.LASF1001:
 62501 8bcf 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE2atEm"
 62501      53743676 
 62501      6563746F 
 62501      72496853 
 62501      61496845 
 62502              	.LASF1064:
 62503 8bea 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_"
 62503      7431305F 
 62503      49746572 
GAS LISTING /tmp/ccJUMvuF.s 			page 1578


 62503      5F626173 
 62503      65495064 
 62504              	.LASF1789:
 62505 8c10 2F686F6D 		.string	"/home/hshu1/15618/project/15618fp/heatmap"
 62505      652F6873 
 62505      6875312F 
 62505      31353631 
 62505      382F7072 
 62506              	.LASF1774:
 62507 8c3a 6F706572 		.string	"operator delete"
 62507      61746F72 
 62507      2064656C 
 62507      65746500 
 62508              	.LASF1576:
 62509 8c4a 61746578 		.string	"atexit"
 62509      697400
 62510              	.LASF1317:
 62511 8c51 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEpLEl"
 62511      5F5F676E 
 62511      755F6378 
 62511      7831375F 
 62511      5F6E6F72 
 62512              	.LASF491:
 62513 8c8c 706F696E 		.string	"pointer"
 62513      74657200 
 62514              	.LASF587:
 62515 8c94 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4cendEv"
 62515      53743676 
 62515      6563746F 
 62515      72496453 
 62515      61496445 
 62516              	.LASF818:
 62517 8cb1 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 62517      7431315F 
 62517      5475706C 
 62517      655F696D 
 62517      706C494C 
 62518              	.LASF1334:
 62519 8d62 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE15_S_always_equalEv"
 62519      5F5F676E 
 62519      755F6378 
 62519      7831345F 
 62519      5F616C6C 
 62520              	.LASF1306:
 62521 8d9a 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmIEl"
 62521      5F5F676E 
 62521      755F6378 
 62521      7831375F 
 62521      5F6E6F72 
 62522              	.LASF1379:
 62523 8dd4 6F706572 		.string	"operator!=<double*, std::vector<double> >"
 62523      61746F72 
 62523      213D3C64 
 62523      6F75626C 
 62523      652A2C20 
 62524              	.LASF922:
 62525 8dfe 5F486561 		.string	"_Head_base<0ul, heatmap_t*, false>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1579


 62525      645F6261 
 62525      73653C30 
 62525      756C2C20 
 62525      68656174 
 62526              	.LASF56:
 62527 8e21 616C6C6F 		.string	"allocator<char>"
 62527      6361746F 
 62527      723C6368 
 62527      61723E00 
 62528              	.LASF1676:
 62529 8e31 5F5F6C68 		.string	"__lhs"
 62529      7300
 62530              	.LASF916:
 62531 8e37 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI9heatmap_tEEE7_M_tailERS3_"
 62531      7431315F 
 62531      5475706C 
 62531      655F696D 
 62531      706C494C 
 62532              	.LASF1305:
 62533 8e7d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl"
 62533      395F5F67 
 62533      6E755F63 
 62533      78783137 
 62533      5F5F6E6F 
 62534              	.LASF1132:
 62535 8eb8 5F49734D 		.string	"_IsMove"
 62535      6F766500 
 62536              	.LASF1742:
 62537 8ec0 5F5F7365 		.string	"__secondChild"
 62537      636F6E64 
 62537      4368696C 
 62537      6400
 62538              	.LASF531:
 62539 8ece 5F535F70 		.string	"_S_propagate_on_container_copy_assignment_helper"
 62539      726F7061 
 62539      67617465 
 62539      5F6F6E5F 
 62539      636F6E74 
 62540              	.LASF90:
 62541 8eff 5F5A4E53 		.string	"_ZNSs4_Rep26_M_set_length_and_sharableEm"
 62541      73345F52 
 62541      65703236 
 62541      5F4D5F73 
 62541      65745F6C 
 62542              	.LASF1700:
 62543 8f28 5F5F746F 		.string	"__topIndex"
 62543      70496E64 
 62543      657800
 62544              	.LASF996:
 62545 8f33 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE7reserveEm"
 62545      74367665 
 62545      63746F72 
 62545      49685361 
 62545      49684545 
 62546              	.LASF1383:
 62547 8f52 6F706572 		.string	"operator< <double*, std::vector<double> >"
 62547      61746F72 
GAS LISTING /tmp/ccJUMvuF.s 			page 1580


 62547      3C203C64 
 62547      6F75626C 
 62547      652A2C20 
 62548              	.LASF481:
 62549 8f7c 5F4D5F69 		.string	"_M_init_pretr1"
 62549      6E69745F 
 62549      70726574 
 62549      723100
 62550              	.LASF628:
 62551 8f8b 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd"
 62551      74367665 
 62551      63746F72 
 62551      49645361 
 62551      49644545 
 62552              	.LASF61:
 62553 8fdb 7E616C6C 		.string	"~allocator"
 62553      6F636174 
 62553      6F7200
 62554              	.LASF1027:
 62555 8fe6 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EE"
 62555      74367665 
 62555      63746F72 
 62555      49685361 
 62555      49684545 
 62556              	.LASF1231:
 62557 902b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv"
 62557      395F5F67 
 62557      6E755F63 
 62557      78783137 
 62557      5F5F6E6F 
 62558              	.LASF1232:
 62559 9057 6F706572 		.string	"operator++"
 62559      61746F72 
 62559      2B2B00
 62560              	.LASF566:
 62561 9062 5F4D5F64 		.string	"_M_deallocate"
 62561      65616C6C 
 62561      6F636174 
 62561      6500
 62562              	.LASF637:
 62563 9070 5F4D5F65 		.string	"_M_erase"
 62563      72617365 
 62563      00
 62564              	.LASF247:
 62565 9079 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE"
 62565      73377265 
 62565      706C6163 
 62565      65454E39 
 62565      5F5F676E 
 62566              	.LASF413:
 62567 90c7 63747970 		.string	"ctype<char>"
 62567      653C6368 
 62567      61723E00 
 62568              	.LASF1709:
 62569 90d3 5F5F7074 		.string	"__ptr"
 62569      7200
 62570              	.LASF197:
GAS LISTING /tmp/ccJUMvuF.s 			page 1581


 62571 90d9 6F706572 		.string	"operator+="
 62571      61746F72 
 62571      2B3D00
 62572              	.LASF972:
 62573 90e4 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSERKS1_"
 62573      74367665 
 62573      63746F72 
 62573      49685361 
 62573      49684545 
 62574              	.LASF960:
 62575 9101 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8max_sizeERKS0_"
 62575      74313661 
 62575      6C6C6F63 
 62575      61746F72 
 62575      5F747261 
 62576              	.LASF1255:
 62577 912f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi"
 62577      5F5F676E 
 62577      755F6378 
 62577      7831375F 
 62577      5F6E6F72 
 62578              	.LASF1438:
 62579 915b 77636861 		.string	"wchar_t"
 62579      725F7400 
 62580              	.LASF1010:
 62581 9163 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8pop_backEv"
 62581      74367665 
 62581      63746F72 
 62581      49685361 
 62581      49684545 
 62582              	.LASF1254:
 62583 9183 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv"
 62583      5F5F676E 
 62583      755F6378 
 62583      7831375F 
 62583      5F6E6F72 
 62584              	.LASF1770:
 62585 91af 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 62585      7432336D 
 62585      65727365 
 62585      6E6E655F 
 62585      74776973 
 62586              	.LASF303:
 62587 9248 5F416C6C 		.string	"_Alloc"
 62587      6F6300
 62588              	.LASF1290:
 62589 924f 5F535F61 		.string	"_S_always_equal"
 62589      6C776179 
 62589      735F6571 
 62589      75616C00 
 62590              	.LASF1456:
 62591 925f 76667773 		.string	"vfwscanf"
 62591      63616E66 
 62591      00
 62592              	.LASF901:
 62593 9268 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE11get_deleterEv"
 62593      74313075 
GAS LISTING /tmp/ccJUMvuF.s 			page 1582


 62593      6E697175 
 62593      655F7074 
 62593      72493968 
 62594              	.LASF1327:
 62595 92ac 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE8max_sizeEv"
 62595      395F5F67 
 62595      6E755F63 
 62595      78783133 
 62595      6E65775F 
 62596              	.LASF1666:
 62597 92d8 5F5F7265 		.string	"__result"
 62597      73756C74 
 62597      00
 62598              	.LASF539:
 62599 92e1 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8allocateERS0_mPKv"
 62599      74313661 
 62599      6C6C6F63 
 62599      61746F72 
 62599      5F747261 
 62600              	.LASF1267:
 62601 9312 5F5F6E75 		.string	"__numeric_traits_floating<long double>"
 62601      6D657269 
 62601      635F7472 
 62601      61697473 
 62601      5F666C6F 
 62602              	.LASF1505:
 62603 9339 77637374 		.string	"wcstoull"
 62603      6F756C6C 
 62603      00
 62604              	.LASF1655:
 62605 9342 31356865 		.string	"15heatmap_stamp_t"
 62605      61746D61 
 62605      705F7374 
 62605      616D705F 
 62605      7400
 62606              	.LASF1476:
 62607 9354 746D5F69 		.string	"tm_isdst"
 62607      73647374 
 62607      00
 62608              	.LASF102:
 62609 935d 5F4D5F63 		.string	"_M_clone"
 62609      6C6F6E65 
 62609      00
 62610              	.LASF1549:
 62611 9366 705F6373 		.string	"p_cs_precedes"
 62611      5F707265 
 62611      63656465 
 62611      7300
 62612              	.LASF1801:
 62613 9374 5F556E77 		.string	"_Unwind_Resume"
 62613      696E645F 
 62613      52657375 
 62613      6D6500
 62614              	.LASF765:
 62615 9383 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE3minEv"
 62615      53743234 
 62615      756E6966 
GAS LISTING /tmp/ccJUMvuF.s 			page 1583


 62615      6F726D5F 
 62615      696E745F 
 62616              	.LASF548:
 62617 93ad 5F566563 		.string	"_Vector_base<double, std::allocator<double> >"
 62617      746F725F 
 62617      62617365 
 62617      3C646F75 
 62617      626C652C 
 62618              	.LASF1693:
 62619 93db 5F496E64 		.string	"_Indexes"
 62619      65786573 
 62619      00
 62620              	.LASF1235:
 62621 93e4 6F706572 		.string	"operator--"
 62621      61746F72 
 62621      2D2D00
 62622              	.LASF1165:
 62623 93ef 736F7274 		.string	"sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 62623      3C5F5F67 
 62623      6E755F63 
 62623      78783A3A 
 62623      5F5F6E6F 
 62624              	.LASF1090:
 62625 9432 666F7277 		.string	"forward<std::default_delete<heatmap_t> >"
 62625      6172643C 
 62625      7374643A 
 62625      3A646566 
 62625      61756C74 
 62626              	.LASF1295:
 62627 945b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_nothrow_swapEv"
 62627      5F5F676E 
 62627      755F6378 
 62627      7831345F 
 62627      5F616C6C 
 62628              	.LASF1754:
 62629 9493 5354414D 		.string	"STAMP"
 62629      5000
 62630              	.LASF731:
 62631 9499 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE16_M_shrink_to_fitEv"
 62631      74367665 
 62631      63746F72 
 62631      496A5361 
 62631      496A4545 
 62632              	.LASF967:
 62633 94c2 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIhSaIhEE13get_allocatorEv"
 62633      53743132 
 62633      5F566563 
 62633      746F725F 
 62633      62617365 
 62634              	.LASF1242:
 62635 94f0 6F706572 		.string	"operator-="
 62635      61746F72 
 62635      2D3D00
 62636              	.LASF847:
 62637 94fb 6F706572 		.string	"operator->"
 62637      61746F72 
 62637      2D3E00
GAS LISTING /tmp/ccJUMvuF.s 			page 1584


 62638              	.LASF661:
 62639 9506 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE48_S_propagate_on_container_copy_assignment_helperEz"
 62639      74313661 
 62639      6C6C6F63 
 62639      61746F72 
 62639      5F747261 
 62640              	.LASF103:
 62641 9559 5F5A4E53 		.string	"_ZNSs4_Rep8_M_cloneERKSaIcEm"
 62641      73345F52 
 62641      6570385F 
 62641      4D5F636C 
 62641      6F6E6545 
 62642              	.LASF965:
 62643 9576 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv"
 62643      7431325F 
 62643      56656374 
 62643      6F725F62 
 62643      61736549 
 62644              	.LASF1523:
 62645 95a9 696E745F 		.string	"int_fast16_t"
 62645      66617374 
 62645      31365F74 
 62645      00
 62646              	.LASF490:
 62647 95b6 616C6C6F 		.string	"allocator<double>"
 62647      6361746F 
 62647      723C646F 
 62647      75626C65 
 62647      3E00
 62648              	.LASF292:
 62649 95c8 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEcm"
 62649      53733136 
 62649      66696E64 
 62649      5F6C6173 
 62649      745F6E6F 
 62650              	.LASF1485:
 62651 95e4 77637374 		.string	"wcstod"
 62651      6F6400
 62652              	.LASF298:
 62653 95eb 5F5A4E4B 		.string	"_ZNKSs7compareEPKc"
 62653      53733763 
 62653      6F6D7061 
 62653      72654550 
 62653      4B6300
 62654              	.LASF1130:
 62655 95fe 5F5F6E69 		.string	"__niter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >"
 62655      7465725F 
 62655      62617365 
 62655      3C5F5F67 
 62655      6E755F63 
 62656              	.LASF1707:
 62657 9649 5F5F6375 		.string	"__cut"
 62657      7400
 62658              	.LASF1487:
 62659 964f 77637374 		.string	"wcstok"
 62659      6F6B00
 62660              	.LASF1745:
GAS LISTING /tmp/ccJUMvuF.s 			page 1585


 62661 9656 7374616D 		.string	"stamp"
 62661      7000
 62662              	.LASF1193:
 62663 965c 73686F72 		.string	"short int"
 62663      7420696E 
 62663      7400
 62664              	.LASF643:
 62665 9666 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::all
 62665      7273655F 
 62665      69746572 
 62665      61746F72 
 62665      3C5F5F67 
 62666              	.LASF1217:
 62667 96d4 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc"
 62667      395F5F67 
 62667      6E755F63 
 62667      78783133 
 62667      6E65775F 
 62668              	.LASF876:
 62669 9701 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP15heatmap_stamp_tLb0EE7_M_headERKS2_"
 62669      7431305F 
 62669      48656164 
 62669      5F626173 
 62669      65494C6D 
 62670              	.LASF949:
 62671 973d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE23_S_const_pointer_helperEz"
 62671      74313661 
 62671      6C6C6F63 
 62671      61746F72 
 62671      5F747261 
 62672              	.LASF619:
 62673 9777 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4swapERS1_"
 62673      74367665 
 62673      63746F72 
 62673      49645361 
 62673      49644545 
 62674              	.LASF92:
 62675 9796 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refdataEv"
 62675      73345F52 
 62675      65703130 
 62675      5F4D5F72 
 62675      65666461 
 62676              	.LASF111:
 62677 97af 5F5A4E4B 		.string	"_ZNKSs9_M_ibeginEv"
 62677      5373395F 
 62677      4D5F6962 
 62677      6567696E 
 62677      457600
 62678              	.LASF405:
 62679 97c2 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 62679      6F395F4D 
 62679      5F696E73 
 62679      65727449 
 62679      6D454552 
 62680              	.LASF1105:
 62681 97db 5F446573 		.string	"_Destroy<unsigned int*>"
 62681      74726F79 
GAS LISTING /tmp/ccJUMvuF.s 			page 1586


 62681      3C756E73 
 62681      69676E65 
 62681      6420696E 
 62682              	.LASF1068:
 62683 97f3 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPjLb0EE7_S_baseES0_"
 62683      7431305F 
 62683      49746572 
 62683      5F626173 
 62683      6549506A 
 62684              	.LASF1590:
 62685 9819 7372616E 		.string	"srand"
 62685      6400
 62686              	.LASF85:
 62687 981f 5F4D5F73 		.string	"_M_set_leaked"
 62687      65745F6C 
 62687      65616B65 
 62687      6400
 62688              	.LASF417:
 62689 982d 5F4D5F77 		.string	"_M_widen_init"
 62689      6964656E 
 62689      5F696E69 
 62689      7400
 62690              	.LASF1740:
 62691 983b 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE8do_widenEc"
 62691      53743563 
 62691      74797065 
 62691      49634538 
 62691      646F5F77 
 62692              	.LASF514:
 62693 9856 616C6C6F 		.string	"allocator_traits<std::allocator<double> >"
 62693      6361746F 
 62693      725F7472 
 62693      61697473 
 62693      3C737464 
 62694              	.LASF1179:
 62695 9880 5F5A5374 		.string	"_ZSt7nothrow"
 62695      376E6F74 
 62695      68726F77 
 62695      00
 62696              	.LASF1761:
 62697 988d 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E"
 62697      5F5F676E 
 62697      755F6378 
 62697      7832355F 
 62697      5F6E756D 
 62698              	.LASF816:
 62699 98cc 5F496E68 		.string	"_Inherited"
 62699      65726974 
 62699      656400
 62700              	.LASF1562:
 62701 98d7 6C6F6361 		.string	"localeconv"
 62701      6C65636F 
 62701      6E7600
 62702              	.LASF573:
 62703 98e2 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEEaSERKS1_"
 62703      74367665 
 62703      63746F72 
GAS LISTING /tmp/ccJUMvuF.s 			page 1587


 62703      49645361 
 62703      49644545 
 62704              	.LASF1339:
 62705 98ff 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEptEv"
 62705      395F5F67 
 62705      6E755F63 
 62705      78783137 
 62705      5F5F6E6F 
 62706              	.LASF100:
 62707 993a 5F5A4E53 		.string	"_ZNSs4_Rep10_M_destroyERKSaIcE"
 62707      73345F52 
 62707      65703130 
 62707      5F4D5F64 
 62707      65737472 
 62708              	.LASF1403:
 62709 9959 5F6D6172 		.string	"_markers"
 62709      6B657273 
 62709      00
 62710              	.LASF241:
 62711 9962 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc"
 62711      73377265 
 62711      706C6163 
 62711      65454E39 
 62711      5F5F676E 
 62712              	.LASF603:
 62713 999c 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE2atEm"
 62713      53743676 
 62713      6563746F 
 62713      72496453 
 62713      61496445 
 62714              	.LASF1405:
 62715 99b7 5F66696C 		.string	"_fileno"
 62715      656E6F00 
 62716              	.LASF841:
 62717 99bf 756E6971 		.string	"unique_ptr"
 62717      75655F70 
 62717      747200
 62718              	.LASF20:
 62719 99ca 6F706572 		.string	"operator std::integral_constant<bool, false>::value_type"
 62719      61746F72 
 62719      20737464 
 62719      3A3A696E 
 62719      74656772 
 62720              	.LASF1323:
 62721 9a03 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIjE7addressERj"
 62721      395F5F67 
 62721      6E755F63 
 62721      78783133 
 62721      6E65775F 
 62722              	.LASF1237:
 62723 9a2f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi"
 62723      5F5F676E 
 62723      755F6378 
 62723      7831375F 
 62723      5F6E6F72 
 62724              	.LASF1718:
 62725 9a5a 5F5F7072 		.string	"__priority"
GAS LISTING /tmp/ccJUMvuF.s 			page 1588


 62725      696F7269 
 62725      747900
 62726              	.LASF170:
 62727 9a65 5F5A4E4B 		.string	"_ZNKSs6lengthEv"
 62727      5373366C 
 62727      656E6774 
 62727      68457600 
 62728              	.LASF1722:
 62729 9a75 5F5F7061 		.string	"__param"
 62729      72616D00 
 62730              	.LASF663:
 62731 9a7d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE37_S_propagate_on_container_swap_helperEz"
 62731      74313661 
 62731      6C6C6F63 
 62731      61746F72 
 62731      5F747261 
 62732              	.LASF1749:
 62733 9ac5 7374646F 		.string	"stdout"
 62733      757400
 62734              	.LASF895:
 62735 9acc 756E6971 		.string	"unique_ptr<heatmap_t, std::default_delete<heatmap_t> >"
 62735      75655F70 
 62735      74723C68 
 62735      6561746D 
 62735      61705F74 
 62736              	.LASF1236:
 62737 9b03 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv"
 62737      5F5F676E 
 62737      755F6378 
 62737      7831375F 
 62737      5F6E6F72 
 62738              	.LASF777:
 62739 9b2e 5F42696E 		.string	"_Bind_helper<false, std::uniform_int_distribution<int>&, std::mersenne_twister_engine<lon
 62739      645F6865 
 62739      6C706572 
 62739      3C66616C 
 62739      73652C20 
 62740              	.LASF1765:
 62741 9c10 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE"
 62741      5F5F676E 
 62741      755F6378 
 62741      7832345F 
 62741      5F6E756D 
 62742              	.LASF1307:
 62743 9c42 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl"
 62743      395F5F67 
 62743      6E755F63 
 62743      78783137 
 62743      5F5F6E6F 
 62744              	.LASF1352:
 62745 9c7d 5F535F73 		.string	"_S_single"
 62745      696E676C 
 62745      6500
 62746              	.LASF1557:
 62747 9c87 696E745F 		.string	"int_n_cs_precedes"
 62747      6E5F6373 
 62747      5F707265 
GAS LISTING /tmp/ccJUMvuF.s 			page 1589


 62747      63656465 
 62747      7300
 62748              	.LASF1311:
 62749 9c99 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEptEv"
 62749      395F5F67 
 62749      6E755F63 
 62749      78783137 
 62749      5F5F6E6F 
 62750              	.LASF665:
 62751 9cd5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8allocateERS0_mPKv"
 62751      74313661 
 62751      6C6C6F63 
 62751      61746F72 
 62751      5F747261 
 62752              	.LASF1220:
 62753 9d06 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv"
 62753      395F5F67 
 62753      6E755F63 
 62753      78783133 
 62753      6E65775F 
 62754              	.LASF1113:
 62755 9d32 5F52616E 		.string	"_RandomAccessIterator"
 62755      646F6D41 
 62755      63636573 
 62755      73497465 
 62755      7261746F 
 62756              	.LASF1316:
 62757 9d48 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEixEl"
 62757      395F5F67 
 62757      6E755F63 
 62757      78783137 
 62757      5F5F6E6F 
 62758              	.LASF38:
 62759 9d84 66696E64 		.string	"find"
 62759      00
 62760              	.LASF230:
 62761 9d89 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_"
 62761      73356572 
 62761      61736545 
 62761      4E395F5F 
 62761      676E755F 
 62762              	.LASF1480:
 62763 9dbe 7763736E 		.string	"wcsncat"
 62763      63617400 
 62764              	.LASF434:
 62765 9dc6 5F5F7363 		.string	"__schrage_ok"
 62765      68726167 
 62765      655F6F6B 
 62765      00
 62766              	.LASF297:
 62767 9dd3 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSsmm"
 62767      53733763 
 62767      6F6D7061 
 62767      7265456D 
 62767      6D524B53 
 62768              	.LASF1529:
 62769 9deb 75696E74 		.string	"uint_fast64_t"
GAS LISTING /tmp/ccJUMvuF.s 			page 1590


 62769      5F666173 
 62769      7436345F 
 62769      7400
 62770              	.LASF1516:
 62771 9df9 696E745F 		.string	"int_least32_t"
 62771      6C656173 
 62771      7433325F 
 62771      7400
 62772              	.LASF1717:
 62773 9e07 5F5F696E 		.string	"__initialize_p"
 62773      69746961 
 62773      6C697A65 
 62773      5F7000
 62774              	.LASF647:
 62775 9e16 5F5A4E4B 		.string	"_ZNKSt16initializer_listIdE5beginEv"
 62775      53743136 
 62775      696E6974 
 62775      69616C69 
 62775      7A65725F 
 62776              	.LASF473:
 62777 9e3a 5F5A4E53 		.string	"_ZNSt13random_device3minEv"
 62777      74313372 
 62777      616E646F 
 62777      6D5F6465 
 62777      76696365 
 62778              	.LASF1301:
 62779 9e55 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmmEv"
 62779      5F5F676E 
 62779      755F6378 
 62779      7831375F 
 62779      5F6E6F72 
 62780              	.LASF521:
 62781 9e8f 5F535F63 		.string	"_S_const_pointer_helper"
 62781      6F6E7374 
 62781      5F706F69 
 62781      6E746572 
 62781      5F68656C 
 62782              	.LASF123:
 62783 9ea7 5F5A4E4B 		.string	"_ZNKSs11_M_disjunctEPKc"
 62783      53733131 
 62783      5F4D5F64 
 62783      69736A75 
 62783      6E637445 
 62784              	.LASF278:
 62785 9ebf 66696E64 		.string	"find_last_of"
 62785      5F6C6173 
 62785      745F6F66 
 62785      00
 62786              	.LASF673:
 62787 9ecc 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv"
 62787      53743132 
 62787      5F566563 
 62787      746F725F 
 62787      62617365 
 62788              	.LASF1649:
 62789 9f00 6E657874 		.string	"next"
 62789      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1591


 62790              	.LASF1276:
 62791 9f05 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm"
 62791      5F5F676E 
 62791      755F6378 
 62791      7831336E 
 62791      65775F61 
 62792              	.LASF524:
 62793 9f35 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE22_S_void_pointer_helperEz"
 62793      74313661 
 62793      6C6C6F63 
 62793      61746F72 
 62793      5F747261 
 62794              	.LASF1563:
 62795 9f6e 5F5F696E 		.string	"__int32_t"
 62795      7433325F 
 62795      7400
 62796              	.LASF1494:
 62797 9f78 776D656D 		.string	"wmemmove"
 62797      6D6F7665 
 62797      00
 62798              	.LASF323:
 62799 9f81 696E7465 		.string	"integral_constant<int, 0>"
 62799      6772616C 
 62799      5F636F6E 
 62799      7374616E 
 62799      743C696E 
 62800              	.LASF699:
 62801 9f9b 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6resizeEmRKj"
 62801      74367665 
 62801      63746F72 
 62801      496A5361 
 62801      496A4545 
 62802              	.LASF749:
 62803 9fbc 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 62803      74313163 
 62803      6861725F 
 62803      74726169 
 62803      74734963 
 62804              	.LASF1493:
 62805 9fdf 776D656D 		.string	"wmemcpy"
 62805      63707900 
 62806              	.LASF83:
 62807 9fe7 5F4D5F69 		.string	"_M_is_shared"
 62807      735F7368 
 62807      61726564 
 62807      00
 62808              	.LASF1196:
 62809 9ff4 5F5F676E 		.string	"__gnu_cxx"
 62809      755F6378 
 62809      7800
 62810              	.LASF1574:
 62811 9ffe 6C6C6469 		.string	"lldiv_t"
 62811      765F7400 
 62812              	.LASF1281:
 62813 a006 5F535F6F 		.string	"_S_on_swap"
 62813      6E5F7377 
 62813      617000
GAS LISTING /tmp/ccJUMvuF.s 			page 1592


 62814              	.LASF709:
 62815 a011 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5frontEv"
 62815      74367665 
 62815      63746F72 
 62815      496A5361 
 62815      496A4545 
 62816              	.LASF1257:
 62817 a02e 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLEl"
 62817      5F5F676E 
 62817      755F6378 
 62817      7831375F 
 62817      5F6E6F72 
 62818              	.LASF625:
 62819 a05a 5F4D5F66 		.string	"_M_fill_assign"
 62819      696C6C5F 
 62819      61737369 
 62819      676E00
 62820              	.LASF1675:
 62821 a069 5F5F696E 		.string	"__in_chrg"
 62821      5F636872 
 62821      6700
 62822              	.LASF1148:
 62823 a073 5F5F6669 		.string	"__fill_n_a<long unsigned int, unsigned char>"
 62823      6C6C5F6E 
 62823      5F613C6C 
 62823      6F6E6720 
 62823      756E7369 
 62824              	.LASF768:
 62825 a0a0 5F556E69 		.string	"_UniformRandomNumberGenerator"
 62825      666F726D 
 62825      52616E64 
 62825      6F6D4E75 
 62825      6D626572 
 62826              	.LASF510:
 62827 a0be 5F497349 		.string	"_IsInt"
 62827      6E7400
 62828              	.LASF906:
 62829 a0c5 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE5resetEPS0_"
 62829      74313075 
 62829      6E697175 
 62829      655F7074 
 62829      72493968 
 62830              	.LASF422:
 62831 a105 5F5F6465 		.string	"__destroy<double*>"
 62831      7374726F 
 62831      793C646F 
 62831      75626C65 
 62831      2A3E00
 62832              	.LASF1730:
 62833 a118 5F5F7363 		.string	"__scaling"
 62833      616C696E 
 62833      6700
 62834              	.LASF1698:
 62835 a122 5F5F6765 		.string	"__gen"
 62835      6E00
 62836              	.LASF691:
 62837 a128 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4rendEv"
GAS LISTING /tmp/ccJUMvuF.s 			page 1593


 62837      53743676 
 62837      6563746F 
 62837      72496A53 
 62837      61496A45 
 62838              	.LASF921:
 62839 a145 5F547570 		.string	"_Tuple_impl<std::default_delete<heatmap_t>, void>"
 62839      6C655F69 
 62839      6D706C3C 
 62839      7374643A 
 62839      3A646566 
 62840              	.LASF1175:
 62841 a177 69676E6F 		.string	"ignore"
 62841      726500
 62842              	.LASF1395:
 62843 a17e 5F494F5F 		.string	"_IO_write_base"
 62843      77726974 
 62843      655F6261 
 62843      736500
 62844              	.LASF357:
 62845 a18d 5F535F65 		.string	"_S_eofbit"
 62845      6F666269 
 62845      7400
 62846              	.LASF39:
 62847 a197 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 62847      74313163 
 62847      6861725F 
 62847      74726169 
 62847      74734963 
 62848              	.LASF846:
 62849 a1bb 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEdeEv"
 62849      53743130 
 62849      756E6971 
 62849      75655F70 
 62849      74724931 
 62850              	.LASF882:
 62851 a1fc 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_tailERKS4_"
 62851      7431315F 
 62851      5475706C 
 62851      655F696D 
 62851      706C494C 
 62852              	.LASF1725:
 62853 a24e 5F5F7572 		.string	"__urngmax"
 62853      6E676D61 
 62853      7800
 62854              	.LASF1287:
 62855 a258 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE27_S_propagate_on_move_assignEv"
 62855      5F5F676E 
 62855      755F6378 
 62855      7831345F 
 62855      5F616C6C 
 62856              	.LASF22:
 62857 a29c 696E7465 		.string	"integral_constant<bool, false>"
 62857      6772616C 
 62857      5F636F6E 
 62857      7374616E 
 62857      743C626F 
 62858              	.LASF460:
GAS LISTING /tmp/ccJUMvuF.s 			page 1594


 62859 a2bb 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 62859      7432336D 
 62859      65727365 
 62859      6E6E655F 
 62859      74776973 
 62860              	.LASF1042:
 62861 a34d 5F497342 		.string	"_IsBindExp"
 62861      696E6445 
 62861      787000
 62862              	.LASF822:
 62863 a358 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 62863      7431315F 
 62863      5475706C 
 62863      655F696D 
 62863      706C494C 
 62864              	.LASF50:
 62865 a403 65715F69 		.string	"eq_int_type"
 62865      6E745F74 
 62865      79706500 
 62866              	.LASF1038:
 62867 a40f 6F706572 		.string	"operator()<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 62867      61746F72 
 62867      28293C73 
 62867      74643A3A 
 62867      6D657273 
 62868              	.LASF639:
 62869 a4d2 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPdS1_EES5_"
 62869      74367665 
 62869      63746F72 
 62869      49645361 
 62869      49644545 
 62870              	.LASF1216:
 62871 a51a 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERc"
 62871      395F5F67 
 62871      6E755F63 
 62871      78783133 
 62871      6E65775F 
 62872              	.LASF1507:
 62873 a546 696E7431 		.string	"int16_t"
 62873      365F7400 
 62874              	.LASF1604:
 62875 a54e 5F5F706F 		.string	"__pos"
 62875      7300
 62876              	.LASF400:
 62877 a554 5F5F6F73 		.string	"__ostream_type"
 62877      74726561 
 62877      6D5F7479 
 62877      706500
 62878              	.LASF516:
 62879 a563 5F5F636F 		.string	"__const_void_pointer"
 62879      6E73745F 
 62879      766F6964 
 62879      5F706F69 
 62879      6E746572 
 62880              	.LASF395:
 62881 a578 7365656B 		.string	"seekdir"
 62881      64697200 
GAS LISTING /tmp/ccJUMvuF.s 			page 1595


 62882              	.LASF764:
 62883 a580 5F5A4E53 		.string	"_ZNSt24uniform_int_distributionIiE5paramERKNS0_10param_typeE"
 62883      74323475 
 62883      6E69666F 
 62883      726D5F69 
 62883      6E745F64 
 62884              	.LASF1354:
 62885 a5bd 5F535F61 		.string	"_S_atomic"
 62885      746F6D69 
 62885      6300
 62886              	.LASF401:
 62887 a5c7 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 62887      6F6C7345 
 62887      50465253 
 62887      6F535F45 
 62887      00
 62888              	.LASF1004:
 62889 a5d8 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4backEv"
 62889      74367665 
 62889      63746F72 
 62889      49685361 
 62889      49684545 
 62890              	.LASF1107:
 62891 a5f4 5F446573 		.string	"_Destroy<double*>"
 62891      74726F79 
 62891      3C646F75 
 62891      626C652A 
 62891      3E00
 62892              	.LASF710:
 62893 a606 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5frontEv"
 62893      53743676 
 62893      6563746F 
 62893      72496A53 
 62893      61496A45 
 62894              	.LASF1690:
 62895 a624 5F5F7069 		.string	"__pivot"
 62895      766F7400 
 62896              	.LASF120:
 62897 a62c 5F4D5F6C 		.string	"_M_limit"
 62897      696D6974 
 62897      00
 62898              	.LASF210:
 62899 a635 5F5A4E53 		.string	"_ZNSs9push_backEc"
 62899      73397075 
 62899      73685F62 
 62899      61636B45 
 62899      6300
 62900              	.LASF866:
 62901 a647 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_headERS3_"
 62901      7431315F 
 62901      5475706C 
 62901      655F696D 
 62901      706C494C 
 62902              	.LASF350:
 62903 a694 5F535F69 		.string	"_S_in"
 62903      6E00
 62904              	.LASF1321:
GAS LISTING /tmp/ccJUMvuF.s 			page 1596


 62905 a69a 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv"
 62905      395F5F67 
 62905      6E755F63 
 62905      78783137 
 62905      5F5F6E6F 
 62906              	.LASF829:
 62907 a6d9 7475706C 		.string	"tuple"
 62907      6500
 62908              	.LASF270:
 62909 a6df 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcmm"
 62909      53733572 
 62909      66696E64 
 62909      45504B63 
 62909      6D6D00
 62910              	.LASF776:
 62911 a6f2 72656D6F 		.string	"remove_reference<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul
 62911      76655F72 
 62911      65666572 
 62911      656E6365 
 62911      3C737464 
 62912              	.LASF1760:
 62913 a7ac 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E"
 62913      5F5F676E 
 62913      755F6378 
 62913      7832355F 
 62913      5F6E756D 
 62914              	.LASF376:
 62915 a7eb 6C656674 		.string	"left"
 62915      00
 62916              	.LASF1721:
 62917 a7f0 5F5F6C6F 		.string	"__lower_mask"
 62917      7765725F 
 62917      6D61736B 
 62917      00
 62918              	.LASF1633:
 62919 a7fd 73657462 		.string	"setbuf"
 62919      756600
 62920              	.LASF1525:
 62921 a804 696E745F 		.string	"int_fast64_t"
 62921      66617374 
 62921      36345F74 
 62921      00
 62922              	.LASF1681:
 62923 a811 5F5F7265 		.string	"__res"
 62923      7300
 62924              	.LASF1596:
 62925 a817 7763746F 		.string	"wctomb"
 62925      6D6200
 62926              	.LASF942:
 62927 a81e 616C6C6F 		.string	"allocator<unsigned char>"
 62927      6361746F 
 62927      723C756E 
 62927      7369676E 
 62927      65642063 
 62928              	.LASF1446:
 62929 a837 6D62726C 		.string	"mbrlen"
 62929      656E00
GAS LISTING /tmp/ccJUMvuF.s 			page 1597


 62930              	.LASF1258:
 62931 a83e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplEl"
 62931      395F5F67 
 62931      6E755F63 
 62931      78783137 
 62931      5F5F6E6F 
 62932              	.LASF187:
 62933 a86b 5F5A4E4B 		.string	"_ZNKSsixEm"
 62933      53736978 
 62933      456D00
 62934              	.LASF937:
 62935 a876 5F5A4E53 		.string	"_ZNSt5tupleIIP9heatmap_tSt14default_deleteIS0_EEEaSEOS4_"
 62935      74357475 
 62935      706C6549 
 62935      49503968 
 62935      6561746D 
 62936              	.LASF662:
 62937 a8af 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE48_S_propagate_on_container_move_assignment_helperEz"
 62937      74313661 
 62937      6C6C6F63 
 62937      61746F72 
 62937      5F747261 
 62938              	.LASF1284:
 62939 a902 5F5A4E53 		.string	"_ZNSs4_Rep12_S_empty_repEv"
 62939      73345F52 
 62939      65703132 
 62939      5F535F65 
 62939      6D707479 
 62940              	.LASF439:
 62941 a91d 6D657273 		.string	"mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 
 62941      656E6E65 
 62941      5F747769 
 62941      73746572 
 62941      5F656E67 
 62942              	.LASF640:
 62943 a9bf 5F4D5F6D 		.string	"_M_move_assign"
 62943      6F76655F 
 62943      61737369 
 62943      676E00
 62944              	.LASF504:
 62945 a9ce 5F556E71 		.string	"_Unqualified"
 62945      75616C69 
 62945      66696564 
 62945      00
 62946              	.LASF1239:
 62947 a9db 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLEl"
 62947      5F5F676E 
 62947      755F6378 
 62947      7831375F 
 62947      5F6E6F72 
 62948              	.LASF877:
 62949 aa06 5F486561 		.string	"_Head_base<heatmap_stamp_t*&, void>"
 62949      645F6261 
 62949      73653C68 
 62949      6561746D 
 62949      61705F73 
 62950              	.LASF353:
GAS LISTING /tmp/ccJUMvuF.s 			page 1598


 62951 aa2a 5F535F69 		.string	"_S_ios_openmode_end"
 62951      6F735F6F 
 62951      70656E6D 
 62951      6F64655F 
 62951      656E6400 
 62952              	.LASF1616:
 62953 aa3e 66666C75 		.string	"fflush"
 62953      736800
 62954              	.LASF568:
 62955 aa45 5F4D5F63 		.string	"_M_create_storage"
 62955      72656174 
 62955      655F7374 
 62955      6F726167 
 62955      6500
 62956              	.LASF442:
 62957 aa57 73746174 		.string	"state_size"
 62957      655F7369 
 62957      7A6500
 62958              	.LASF84:
 62959 aa62 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_sharedEv"
 62959      5373345F 
 62959      52657031 
 62959      325F4D5F 
 62959      69735F73 
 62960              	.LASF500:
 62961 aa7e 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPdE10pointer_toERd"
 62961      74313470 
 62961      6F696E74 
 62961      65725F74 
 62961      72616974 
 62962              	.LASF957:
 62963 aaa7 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8allocateERS0_m"
 62963      74313661 
 62963      6C6C6F63 
 62963      61746F72 
 62963      5F747261 
 62964              	.LASF697:
 62965 aad5 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE8max_sizeEv"
 62965      53743676 
 62965      6563746F 
 62965      72496A53 
 62965      61496A45 
 62966              	.LASF821:
 62967 aaf6 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 62967      7431315F 
 62967      5475706C 
 62967      655F696D 
 62967      706C494C 
 62968              	.LASF31:
 62969 aba7 696E745F 		.string	"int_type"
 62969      74797065 
 62969      00
 62970              	.LASF458:
 62971 abb0 73656564 		.string	"seed"
 62971      00
 62972              	.LASF1225:
 62973 abb5 5F5F6469 		.string	"__digits"
GAS LISTING /tmp/ccJUMvuF.s 			page 1599


 62973      67697473 
 62973      00
 62974              	.LASF221:
 62975 abbe 5F5A4E53 		.string	"_ZNSs6insertEmRKSs"
 62975      7336696E 
 62975      73657274 
 62975      456D524B 
 62975      537300
 62976              	.LASF93:
 62977 abd1 5F4D5F67 		.string	"_M_grab"
 62977      72616200 
 62978              	.LASF10:
 62979 abd9 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 62979      7431355F 
 62979      5F657863 
 62979      65707469 
 62979      6F6E5F70 
 62980              	.LASF184:
 62981 ac06 656D7074 		.string	"empty"
 62981      7900
 62982              	.LASF98:
 62983 ac0c 5F5A4E53 		.string	"_ZNSs4_Rep10_M_disposeERKSaIcE"
 62983      73345F52 
 62983      65703130 
 62983      5F4D5F64 
 62983      6973706F 
 62984              	.LASF707:
 62985 ac2b 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE2atEm"
 62985      74367665 
 62985      63746F72 
 62985      496A5361 
 62985      496A4545 
 62986              	.LASF1102:
 62987 ac45 5F466163 		.string	"_Facet"
 62987      657400
 62988              	.LASF1658:
 62989 ac4c 636F6C6F 		.string	"colors"
 62989      727300
 62990              	.LASF351:
 62991 ac53 5F535F6F 		.string	"_S_out"
 62991      757400
 62992              	.LASF1248:
 62993 ac5a 5F436F6E 		.string	"_Container"
 62993      7461696E 
 62993      657200
 62994              	.LASF1309:
 62995 ac65 5F5F6E6F 		.string	"__normal_iterator<double const*, std::vector<double, std::allocator<double> > >"
 62995      726D616C 
 62995      5F697465 
 62995      7261746F 
 62995      723C646F 
 62996              	.LASF1544:
 62997 acb5 6D6F6E5F 		.string	"mon_grouping"
 62997      67726F75 
 62997      70696E67 
 62997      00
 62998              	.LASF1727:
GAS LISTING /tmp/ccJUMvuF.s 			page 1600


 62999 acc2 5F5F7572 		.string	"__urange"
 62999      616E6765 
 62999      00
 63000              	.LASF1116:
 63001 accb 5F5F6669 		.string	"__fill_n_a<double*, long unsigned int, double>"
 63001      6C6C5F6E 
 63001      5F613C64 
 63001      6F75626C 
 63001      652A2C20 
 63002              	.LASF976:
 63003 acfa 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6assignESt16initializer_listIhE"
 63003      74367665 
 63003      63746F72 
 63003      49685361 
 63003      49684545 
 63004              	.LASF1002:
 63005 ad2e 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5frontEv"
 63005      74367665 
 63005      63746F72 
 63005      49685361 
 63005      49684545 
 63006              	.LASF762:
 63007 ad4b 70617261 		.string	"param"
 63007      6D00
 63008              	.LASF1502:
 63009 ad51 776D656D 		.string	"wmemchr"
 63009      63687200 
 63010              	.LASF1041:
 63011 ad59 5F417267 		.string	"_Arg"
 63011      00
 63012              	.LASF109:
 63013 ad5e 5F5A4E4B 		.string	"_ZNKSs6_M_repEv"
 63013      5373365F 
 63013      4D5F7265 
 63013      70457600 
 63014              	.LASF1584:
 63015 ad6e 6D626C65 		.string	"mblen"
 63015      6E00
 63016              	.LASF825:
 63017 ad74 5F547570 		.string	"_Tuple_impl<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256
 63017      6C655F69 
 63017      6D706C3C 
 63017      7374643A 
 63017      3A6D6572 
 63018              	.LASF1378:
 63019 ae2f 5F5F6578 		.string	"__exchange_and_add_dispatch"
 63019      6368616E 
 63019      67655F61 
 63019      6E645F61 
 63019      64645F64 
 63020              	.LASF1800:
 63021 ae4b 5F474C4F 		.string	"_GLOBAL__sub_I_rendering.cpp"
 63021      42414C5F 
 63021      5F737562 
 63021      5F495F72 
 63021      656E6465 
 63022              	.LASF1473:
GAS LISTING /tmp/ccJUMvuF.s 			page 1601


 63023 ae68 746D5F79 		.string	"tm_year"
 63023      65617200 
 63024              	.LASF1677:
 63025 ae70 5F5F7268 		.string	"__rhs"
 63025      7300
 63026              	.LASF1573:
 63027 ae76 376C6C64 		.string	"7lldiv_t"
 63027      69765F74 
 63027      00
 63028              	.LASF1045:
 63029 ae7f 5F5F6164 		.string	"__add_c_ref<heatmap_stamp_t*>"
 63029      645F635F 
 63029      7265663C 
 63029      68656174 
 63029      6D61705F 
 63030              	.LASF299:
 63031 ae9d 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKc"
 63031      53733763 
 63031      6F6D7061 
 63031      7265456D 
 63031      6D504B63 
 63032              	.LASF865:
 63033 aeb2 5F547570 		.string	"_Tuple_impl<1ul, std::default_delete<heatmap_stamp_t> >"
 63033      6C655F69 
 63033      6D706C3C 
 63033      31756C2C 
 63033      20737464 
 63034              	.LASF1273:
 63035 aeea 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE7addressERd"
 63035      395F5F67 
 63035      6E755F63 
 63035      78783133 
 63035      6E65775F 
 63036              	.LASF165:
 63037 af16 5F5A4E4B 		.string	"_ZNKSs7crbeginEv"
 63037      53733763 
 63037      72626567 
 63037      696E4576 
 63037      00
 63038              	.LASF48:
 63039 af27 746F5F69 		.string	"to_int_type"
 63039      6E745F74 
 63039      79706500 
 63040              	.LASF1198:
 63041 af33 5F497465 		.string	"_Iter_less_iter"
 63041      725F6C65 
 63041      73735F69 
 63041      74657200 
 63042              	.LASF398:
 63043 af43 6F706572 		.string	"operator<<"
 63043      61746F72 
 63043      3C3C00
 63044              	.LASF660:
 63045 af4e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE19_S_size_type_helperEz"
 63045      74313661 
 63045      6C6C6F63 
 63045      61746F72 
GAS LISTING /tmp/ccJUMvuF.s 			page 1602


 63045      5F747261 
 63046              	.LASF1410:
 63047 af84 5F73686F 		.string	"_shortbuf"
 63047      72746275 
 63047      6600
 63048              	.LASF1716:
 63049 af8e 64697374 		.string	"dist"
 63049      00
 63050              	.LASF823:
 63051 af93 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 63051      7431315F 
 63051      5475706C 
 63051      655F696D 
 63051      706C494C 
 63052              	.LASF541:
 63053 b03d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm"
 63053      74313661 
 63053      6C6C6F63 
 63053      61746F72 
 63053      5F747261 
 63054              	.LASF1247:
 63055 b070 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv"
 63055      395F5F67 
 63055      6E755F63 
 63055      78783137 
 63055      5F5F6E6F 
 63056              	.LASF139:
 63057 b09f 5F5A4E53 		.string	"_ZNSs9_M_mutateEmmm"
 63057      73395F4D 
 63057      5F6D7574 
 63057      61746545 
 63057      6D6D6D00 
 63058              	.LASF1013:
 63059 b0b3 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EESt16initializer_listIh
 63059      74367665 
 63059      63746F72 
 63059      49685361 
 63059      49684545 
 63060              	.LASF369:
 63061 b10e 696F7374 		.string	"iostate"
 63061      61746500 
 63062              	.LASF106:
 63063 b116 5F5A4E4B 		.string	"_ZNKSs7_M_dataEv"
 63063      5373375F 
 63063      4D5F6461 
 63063      74614576 
 63063      00
 63064              	.LASF1702:
 63065 b127 5F56616C 		.string	"_ValueType"
 63065      75655479 
 63065      706500
 63066              	.LASF903:
 63067 b132 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEcvbEv"
 63067      53743130 
 63067      756E6971 
 63067      75655F70 
 63067      74724931 
GAS LISTING /tmp/ccJUMvuF.s 			page 1603


 63068              	.LASF1600:
 63069 b174 73747274 		.string	"strtoull"
 63069      6F756C6C 
 63069      00
 63070              	.LASF302:
 63071 b17d 5F547261 		.string	"_Traits"
 63071      69747300 
 63072              	.LASF1565:
 63073 b185 5F5F6F66 		.string	"__off64_t"
 63073      6636345F 
 63073      7400
 63074              	.LASF704:
 63075 b18f 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEEixEm"
 63075      74367665 
 63075      63746F72 
 63075      496A5361 
 63075      496A4545 
 63076              	.LASF546:
 63077 b1a8 66616C73 		.string	"false_type"
 63077      655F7479 
 63077      706500
 63078              	.LASF1486:
 63079 b1b3 77637374 		.string	"wcstof"
 63079      6F6600
 63080              	.LASF223:
 63081 b1ba 5F5A4E53 		.string	"_ZNSs6insertEmPKcm"
 63081      7336696E 
 63081      73657274 
 63081      456D504B 
 63081      636D00
 63082              	.LASF1488:
 63083 b1cd 77637374 		.string	"wcstol"
 63083      6F6C00
 63084              	.LASF1369:
 63085 b1d4 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_nothrow_moveEv"
 63085      5F5F676E 
 63085      755F6378 
 63085      7831345F 
 63085      5F616C6C 
 63086              	.LASF1724:
 63087 b20c 5F5F7572 		.string	"__urngmin"
 63087      6E676D69 
 63087      6E00
 63088              	.LASF635:
 63089 b216 5F4D5F65 		.string	"_M_erase_at_end"
 63089      72617365 
 63089      5F61745F 
 63089      656E6400 
 63090              	.LASF794:
 63091 b226 5F576561 		.string	"_Weak_result_type_impl<std::uniform_int_distribution<int> >"
 63091      6B5F7265 
 63091      73756C74 
 63091      5F747970 
 63091      655F696D 
 63092              	.LASF131:
 63093 b262 5F535F63 		.string	"_S_copy_chars"
 63093      6F70795F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1604


 63093      63686172 
 63093      7300
 63094              	.LASF1364:
 63095 b270 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE10_S_on_swapERS1_S3_"
 63095      5F5F676E 
 63095      755F6378 
 63095      7831345F 
 63095      5F616C6C 
 63096              	.LASF649:
 63097 b2a9 616C6C6F 		.string	"allocator<unsigned int>"
 63097      6361746F 
 63097      723C756E 
 63097      7369676E 
 63097      65642069 
 63098              	.LASF998:
 63099 b2c1 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEEixEm"
 63099      53743676 
 63099      6563746F 
 63099      72496853 
 63099      61496845 
 63100              	.LASF7:
 63101 b2db 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 63101      7431355F 
 63101      5F657863 
 63101      65707469 
 63101      6F6E5F70 
 63102              	.LASF1128:
 63103 b30f 5F5F756E 		.string	"__uninitialized_default_n<double*, long unsigned int>"
 63103      696E6974 
 63103      69616C69 
 63103      7A65645F 
 63103      64656661 
 63104              	.LASF214:
 63105 b345 5F5A4E53 		.string	"_ZNSs6assignEPKcm"
 63105      73366173 
 63105      7369676E 
 63105      45504B63 
 63105      6D00
 63106              	.LASF1788:
 63107 b357 62656E63 		.string	"benchs/rendering.cpp"
 63107      68732F72 
 63107      656E6465 
 63107      72696E67 
 63107      2E637070 
 63108              	.LASF477:
 63109 b36c 5F5A4E53 		.string	"_ZNSt13random_deviceclEv"
 63109      74313372 
 63109      616E646F 
 63109      6D5F6465 
 63109      76696365 
 63110              	.LASF105:
 63111 b385 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refcopyEv"
 63111      73345F52 
 63111      65703130 
 63111      5F4D5F72 
 63111      6566636F 
 63112              	.LASF237:
GAS LISTING /tmp/ccJUMvuF.s 			page 1605


 63113 b39e 5F5A4E53 		.string	"_ZNSs7replaceEmmPKc"
 63113      73377265 
 63113      706C6163 
 63113      65456D6D 
 63113      504B6300 
 63114              	.LASF409:
 63115 b3b2 5F4D5F69 		.string	"_M_insert<double>"
 63115      6E736572 
 63115      743C646F 
 63115      75626C65 
 63115      3E00
 63116              	.LASF1510:
 63117 b3c4 75696E74 		.string	"uint8_t"
 63117      385F7400 
 63118              	.LASF329:
 63119 b3cc 5F535F68 		.string	"_S_hex"
 63119      657800
 63120              	.LASF947:
 63121 b3d3 616C6C6F 		.string	"allocator_traits<std::allocator<unsigned char> >"
 63121      6361746F 
 63121      725F7472 
 63121      61697473 
 63121      3C737464 
 63122              	.LASF959:
 63123 b404 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm"
 63123      74313661 
 63123      6C6C6F63 
 63123      61746F72 
 63123      5F747261 
 63124              	.LASF1326:
 63125 b437 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm"
 63125      5F5F676E 
 63125      755F6378 
 63125      7831336E 
 63125      65775F61 
 63126              	.LASF722:
 63127 b467 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5eraseEN9__gnu_cxx17__normal_iteratorIPKjS1_EE"
 63127      74367665 
 63127      63746F72 
 63127      496A5361 
 63127      496A4545 
 63128              	.LASF179:
 63129 b4aa 5F5A4E4B 		.string	"_ZNKSs8capacityEv"
 63129      53733863 
 63129      61706163 
 63129      69747945 
 63129      7600
 63130              	.LASF772:
 63131 b4bc 5F4D6179 		.string	"_Maybe_wrap_member_pointer<std::uniform_int_distribution<int> >"
 63131      62655F77 
 63131      7261705F 
 63131      6D656D62 
 63131      65725F70 
 63132              	.LASF1794:
 63133 b4fc 5F5A4E4B 		.string	"_ZNKSt24uniform_int_distributionIiE10param_type1aEv"
 63133      53743234 
 63133      756E6966 
GAS LISTING /tmp/ccJUMvuF.s 			page 1606


 63133      6F726D5F 
 63133      696E745F 
 63134              	.LASF246:
 63135 b530 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_"
 63135      73377265 
 63135      706C6163 
 63135      65454E39 
 63135      5F5F676E 
 63136              	.LASF584:
 63137 b576 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE4rendEv"
 63137      74367665 
 63137      63746F72 
 63137      49645361 
 63137      49644545 
 63138              	.LASF1144:
 63139 b592 67656E65 		.ascii	"generate<__gnu_cxx::__normal_iterator<u"
 63139      72617465 
 63139      3C5F5F67 
 63139      6E755F63 
 63139      78783A3A 
 63140 b5b9 6E736967 		.string	"nsigned int*, std::vector<unsigned int> >, std::_Bind<std::uniform_int_distribution<>(std
 63140      6E656420 
 63140      696E742A 
 63140      2C207374 
 63140      643A3A76 
 63141              	.LASF993:
 63142 b6ba 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE13shrink_to_fitEv"
 63142      74367665 
 63142      63746F72 
 63142      49685361 
 63142      49684545 
 63143              	.LASF1435:
 63144 b6e0 62746F77 		.string	"btowc"
 63144      6300
 63145              	.LASF985:
 63146 b6e6 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE6cbeginEv"
 63146      53743676 
 63146      6563746F 
 63146      72496853 
 63146      61496845 
 63147              	.LASF1381:
 63148 b705 5F497465 		.string	"_IteratorL"
 63148      7261746F 
 63148      724C00
 63149              	.LASF1282:
 63150 b710 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE10_S_on_swapERS1_S3_"
 63150      5F5F676E 
 63150      755F6378 
 63150      7831345F 
 63150      5F616C6C 
 63151              	.LASF332:
 63152 b749 5F535F6F 		.string	"_S_oct"
 63152      637400
 63153              	.LASF1353:
 63154 b750 5F535F6D 		.string	"_S_mutex"
 63154      75746578 
 63154      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1607


 63155              	.LASF1101:
 63156 b759 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 63156      65636B5F 
 63156      66616365 
 63156      743C7374 
 63156      643A3A63 
 63157              	.LASF1091:
 63158 b77a 666F7277 		.string	"forward<heatmap_t*&>"
 63158      6172643C 
 63158      68656174 
 63158      6D61705F 
 63158      742A263E 
 63159              	.LASF239:
 63160 b78f 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs"
 63160      73377265 
 63160      706C6163 
 63160      65454E39 
 63160      5F5F676E 
 63161              	.LASF894:
 63162 b7ca 72656D6F 		.string	"remove_reference<std::default_delete<heatmap_t> >"
 63162      76655F72 
 63162      65666572 
 63162      656E6365 
 63162      3C737464 
 63163              	.LASF86:
 63164 b7fc 5F5A4E53 		.string	"_ZNSs4_Rep13_M_set_leakedEv"
 63164      73345F52 
 63164      65703133 
 63164      5F4D5F73 
 63164      65745F6C 
 63165              	.LASF326:
 63166 b818 5F535F62 		.string	"_S_boolalpha"
 63166      6F6F6C61 
 63166      6C706861 
 63166      00
 63167              	.LASF543:
 63168 b825 73656C65 		.string	"select_on_container_copy_construction"
 63168      63745F6F 
 63168      6E5F636F 
 63168      6E746169 
 63168      6E65725F 
 63169              	.LASF242:
 63170 b84b 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_mc"
 63170      73377265 
 63170      706C6163 
 63170      65454E39 
 63170      5F5F676E 
 63171              	.LASF570:
 63172 b884 76656374 		.string	"vector<double, std::allocator<double> >"
 63172      6F723C64 
 63172      6F75626C 
 63172      652C2073 
 63172      74643A3A 
 63173              	.LASF1715:
 63174 b8ac 70726E67 		.string	"prng"
 63174      00
 63175              	.LASF6:
GAS LISTING /tmp/ccJUMvuF.s 			page 1608


 63176 b8b1 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 63176      7431355F 
 63176      5F657863 
 63176      65707469 
 63176      6F6E5F70 
 63177              	.LASF1492:
 63178 b8e3 776D656D 		.string	"wmemcmp"
 63178      636D7000 
 63179              	.LASF1283:
 63180 b8eb 5F535F70 		.string	"_S_propagate_on_copy_assign"
 63180      726F7061 
 63180      67617465 
 63180      5F6F6E5F 
 63180      636F7079 
 63181              	.LASF811:
 63182 b907 5F486561 		.string	"_Head_base<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 63182      645F6261 
 63182      73653C73 
 63182      74643A3A 
 63182      6D657273 
 63183              	.LASF171:
 63184 b9c1 6D61785F 		.string	"max_size"
 63184      73697A65 
 63184      00
 63185              	.LASF399:
 63186 b9ca 5F5A4E53 		.string	"_ZNSolsEd"
 63186      6F6C7345 
 63186      6400
 63187              	.LASF29:
 63188 b9d4 63686172 		.string	"char_traits<char>"
 63188      5F747261 
 63188      6974733C 
 63188      63686172 
 63188      3E00
 63189              	.LASF600:
 63190 b9e6 5F4D5F72 		.string	"_M_range_check"
 63190      616E6765 
 63190      5F636865 
 63190      636B00
 63191              	.LASF723:
 63192 b9f5 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5eraseEN9__gnu_cxx17__normal_iteratorIPKjS1_EES6_"
 63192      74367665 
 63192      63746F72 
 63192      496A5361 
 63192      496A4545 
 63193              	.LASF1752:
 63194 ba3b 4D415053 		.string	"MAPSIZE_MAX"
 63194      495A455F 
 63194      4D415800 
 63195              	.LASF946:
 63196 ba47 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPhE10pointer_toERh"
 63196      74313470 
 63196      6F696E74 
 63196      65725F74 
 63196      72616974 
 63197              	.LASF867:
 63198 ba70 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_headERKS3_"
GAS LISTING /tmp/ccJUMvuF.s 			page 1609


 63198      7431315F 
 63198      5475706C 
 63198      655F696D 
 63198      706C494C 
 63199              	.LASF1168:
 63200 babe 5F5F756E 		.string	"__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, 
 63200      67756172 
 63200      6465645F 
 63200      70617274 
 63200      6974696F 
 63201              	.LASF1720:
 63202 bb3a 5F5F7570 		.string	"__upper_mask"
 63202      7065725F 
 63202      6D61736B 
 63202      00
 63203              	.LASF1319:
 63204 bb47 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEmIEl"
 63204      5F5F676E 
 63204      755F6378 
 63204      7831375F 
 63204      5F6E6F72 
 63205              	.LASF423:
 63206 bb82 5F5F6465 		.string	"__destroy<unsigned char*>"
 63206      7374726F 
 63206      793C756E 
 63206      7369676E 
 63206      65642063 
 63207              	.LASF1154:
 63208 bb9c 5F446973 		.string	"_Distance"
 63208      74616E63 
 63208      6500
 63209              	.LASF118:
 63210 bba6 5F4D5F63 		.string	"_M_check_length"
 63210      6865636B 
 63210      5F6C656E 
 63210      67746800 
 63211              	.LASF702:
 63212 bbb6 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE5emptyEv"
 63212      53743676 
 63212      6563746F 
 63212      72496A53 
 63212      61496A45 
 63213              	.LASF317:
 63214 bbd4 5F416E79 		.string	"_Anything"
 63214      7468696E 
 63214      6700
 63215              	.LASF696:
 63216 bbde 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE4sizeEv"
 63216      53743676 
 63216      6563746F 
 63216      72496A53 
 63216      61496A45 
 63217              	.LASF126:
 63218 bbfb 5F5A4E53 		.string	"_ZNSs7_M_copyEPcPKcm"
 63218      73375F4D 
 63218      5F636F70 
 63218      79455063 
GAS LISTING /tmp/ccJUMvuF.s 			page 1610


 63218      504B636D 
 63219              	.LASF493:
 63220 bc10 6F746865 		.string	"other"
 63220      7200
 63221              	.LASF1650:
 63222 bc16 5F5A4E31 		.string	"_ZN11RepeatTimer4nextEv"
 63222      31526570 
 63222      65617454 
 63222      696D6572 
 63222      346E6578 
 63223              	.LASF183:
 63224 bc2e 5F5A4E53 		.string	"_ZNSs5clearEv"
 63224      7335636C 
 63224      65617245 
 63224      7600
 63225              	.LASF1194:
 63226 bc3c 6C6F6E67 		.string	"long int"
 63226      20696E74 
 63226      00
 63227              	.LASF132:
 63228 bc45 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_"
 63228      7331335F 
 63228      535F636F 
 63228      70795F63 
 63228      68617273 
 63229              	.LASF213:
 63230 bc85 5F5A4E53 		.string	"_ZNSs6assignERKSsmm"
 63230      73366173 
 63230      7369676E 
 63230      45524B53 
 63230      736D6D00 
 63231              	.LASF1370:
 63232 bc99 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_nothrow_swapEv"
 63232      5F5F676E 
 63232      755F6378 
 63232      7831345F 
 63232      5F616C6C 
 63233              	.LASF1277:
 63234 bcd1 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv"
 63234      395F5F67 
 63234      6E755F63 
 63234      78783133 
 63234      6E65775F 
 63235              	.LASF1511:
 63236 bcfd 75696E74 		.string	"uint16_t"
 63236      31365F74 
 63236      00
 63237              	.LASF807:
 63238 bd06 5F486561 		.string	"_Head_base"
 63238      645F6261 
 63238      736500
 63239              	.LASF1213:
 63240 bd11 6E65775F 		.string	"new_allocator"
 63240      616C6C6F 
 63240      6361746F 
 63240      7200
 63241              	.LASF1361:
GAS LISTING /tmp/ccJUMvuF.s 			page 1611


 63242 bd1f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv"
 63242      395F5F67 
 63242      6E755F63 
 63242      78783133 
 63242      6E65775F 
 63243              	.LASF1182:
 63244 bd4b 5F5A5374 		.string	"_ZSt4cerr"
 63244      34636572 
 63244      7200
 63245              	.LASF1338:
 63246 bd55 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEdeEv"
 63246      395F5F67 
 63246      6E755F63 
 63246      78783137 
 63246      5F5F6E6F 
 63247              	.LASF1067:
 63248 bd90 5F497465 		.string	"_Iter_base<unsigned int*, false>"
 63248      725F6261 
 63248      73653C75 
 63248      6E736967 
 63248      6E656420 
 63249              	.LASF1636:
 63250 bdb1 746D706E 		.string	"tmpnam"
 63250      616D00
 63251              	.LASF154:
 63252 bdb8 72626567 		.string	"rbegin"
 63252      696E00
 63253              	.LASF1191:
 63254 bdbf 6C6F6E67 		.string	"long long unsigned int"
 63254      206C6F6E 
 63254      6720756E 
 63254      7369676E 
 63254      65642069 
 63255              	.LASF1286:
 63256 bdd6 5F535F70 		.string	"_S_propagate_on_move_assign"
 63256      726F7061 
 63256      67617465 
 63256      5F6F6E5F 
 63256      6D6F7665 
 63257              	.LASF1230:
 63258 bdf2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv"
 63258      395F5F67 
 63258      6E755F63 
 63258      78783137 
 63258      5F5F6E6F 
 63259              	.LASF390:
 63260 be1e 6661696C 		.string	"failbit"
 63260      62697400 
 63261              	.LASF1344:
 63262 be26 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEixEl"
 63262      395F5F67 
 63262      6E755F63 
 63262      78783137 
 63262      5F5F6E6F 
 63263              	.LASF268:
 63264 be61 7266696E 		.string	"rfind"
 63264      6400
GAS LISTING /tmp/ccJUMvuF.s 			page 1612


 63265              	.LASF238:
 63266 be67 5F5A4E53 		.string	"_ZNSs7replaceEmmmc"
 63266      73377265 
 63266      706C6163 
 63266      65456D6D 
 63266      6D6300
 63267              	.LASF561:
 63268 be7a 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIdSaIdEE13get_allocatorEv"
 63268      53743132 
 63268      5F566563 
 63268      746F725F 
 63268      62617365 
 63269              	.LASF555:
 63270 bea8 7E5F5665 		.string	"~_Vector_impl"
 63270      63746F72 
 63270      5F696D70 
 63270      6C00
 63271              	.LASF291:
 63272 beb6 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcm"
 63272      53733136 
 63272      66696E64 
 63272      5F6C6173 
 63272      745F6E6F 
 63273              	.LASF42:
 63274 bed4 636F7079 		.string	"copy"
 63274      00
 63275              	.LASF1778:
 63276 bed9 68656174 		.string	"heatmap_add_point_with_stamp"
 63276      6D61705F 
 63276      6164645F 
 63276      706F696E 
 63276      745F7769 
 63277              	.LASF177:
 63278 bef6 5F5A4E53 		.string	"_ZNSs13shrink_to_fitEv"
 63278      73313373 
 63278      6872696E 
 63278      6B5F746F 
 63278      5F666974 
 63279              	.LASF1594:
 63280 bf0d 73797374 		.string	"system"
 63280      656D00
 63281              	.LASF738:
 63282 bf14 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned i
 63282      7273655F 
 63282      69746572 
 63282      61746F72 
 63282      3C5F5F67 
 63283              	.LASF1310:
 63284 bf94 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEdeEv"
 63284      395F5F67 
 63284      6E755F63 
 63284      78783137 
 63284      5F5F6E6F 
 63285              	.LASF121:
 63286 bfd0 5F5A4E4B 		.string	"_ZNKSs8_M_limitEmm"
 63286      5373385F 
 63286      4D5F6C69 
GAS LISTING /tmp/ccJUMvuF.s 			page 1613


 63286      6D697445 
 63286      6D6D00
 63287              	.LASF582:
 63288 bfe3 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE6rbeginEv"
 63288      74367665 
 63288      63746F72 
 63288      49645361 
 63288      49644545 
 63289              	.LASF912:
 63290 c001 5F486561 		.string	"_Head_base<std::default_delete<heatmap_t>, void>"
 63290      645F6261 
 63290      73653C73 
 63290      74643A3A 
 63290      64656661 
 63291              	.LASF45:
 63292 c032 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 63292      74313163 
 63292      6861725F 
 63292      74726169 
 63292      74734963 
 63293              	.LASF1081:
 63294 c054 6F706572 		.string	"operator&"
 63294      61746F72 
 63294      2600
 63295              	.LASF845:
 63296 c05e 6F706572 		.string	"operator*"
 63296      61746F72 
 63296      2A00
 63297              	.LASF1240:
 63298 c068 6F706572 		.string	"operator+"
 63298      61746F72 
 63298      2B00
 63299              	.LASF687:
 63300 c072 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE3endEv"
 63300      53743676 
 63300      6563746F 
 63300      72496A53 
 63300      61496A45 
 63301              	.LASF1244:
 63302 c08e 6F706572 		.string	"operator-"
 63302      61746F72 
 63302      2D00
 63303              	.LASF128:
 63304 c098 5F5A4E53 		.string	"_ZNSs7_M_moveEPcPKcm"
 63304      73375F4D 
 63304      5F6D6F76 
 63304      65455063 
 63304      504B636D 
 63305              	.LASF506:
 63306 c0ad 5F497356 		.string	"_IsVol"
 63306      6F6C00
 63307              	.LASF678:
 63308 c0b4 76656374 		.string	"vector<unsigned int, std::allocator<unsigned int> >"
 63308      6F723C75 
 63308      6E736967 
 63308      6E656420 
 63308      696E742C 
GAS LISTING /tmp/ccJUMvuF.s 			page 1614


 63309              	.LASF1570:
 63310 c0e8 6469765F 		.string	"div_t"
 63310      7400
 63311              	.LASF1274:
 63312 c0ee 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIdE7addressERKd"
 63312      395F5F67 
 63312      6E755F63 
 63312      78783133 
 63312      6E65775F 
 63313              	.LASF140:
 63314 c11b 5F4D5F6C 		.string	"_M_leak_hard"
 63314      65616B5F 
 63314      68617264 
 63314      00
 63315              	.LASF638:
 63316 c128 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPdS1_EE"
 63316      74367665 
 63316      63746F72 
 63316      49645361 
 63316      49644545 
 63317              	.LASF8:
 63318 c16d 6F706572 		.string	"operator="
 63318      61746F72 
 63318      3D00
 63319              	.LASF1134:
 63320 c177 5F424932 		.string	"_BI2"
 63320      00
 63321              	.LASF485:
 63322 c17c 5F4D5F67 		.string	"_M_getval"
 63322      65747661 
 63322      6C00
 63323              	.LASF1140:
 63324 c186 66696C6C 		.string	"fill_n<unsigned int*, long unsigned int, unsigned int>"
 63324      5F6E3C75 
 63324      6E736967 
 63324      6E656420 
 63324      696E742A 
 63325              	.LASF1625:
 63326 c1bd 6674656C 		.string	"ftell"
 63326      6C00
 63327              	.LASF333:
 63328 c1c3 5F535F72 		.string	"_S_right"
 63328      69676874 
 63328      00
 63329              	.LASF25:
 63330 c1cc 6F706572 		.string	"operator std::integral_constant<bool, true>::value_type"
 63330      61746F72 
 63330      20737464 
 63330      3A3A696E 
 63330      74656772 
 63331              	.LASF1535:
 63332 c204 63686172 		.string	"char32_t"
 63332      33325F74 
 63332      00
 63333              	.LASF1589:
 63334 c20d 72616E64 		.string	"rand"
 63334      00
GAS LISTING /tmp/ccJUMvuF.s 			page 1615


 63335              	.LASF1035:
 63336 c212 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE5beginEv"
 63336      53743136 
 63336      696E6974 
 63336      69616C69 
 63336      7A65725F 
 63337              	.LASF819:
 63338 c236 5F4D5F74 		.string	"_M_tail"
 63338      61696C00 
 63339              	.LASF107:
 63340 c23e 5F5A4E53 		.string	"_ZNSs7_M_dataEPc"
 63340      73375F4D 
 63340      5F646174 
 63340      61455063 
 63340      00
 63341              	.LASF519:
 63342 c24f 5F535F70 		.string	"_S_pointer_helper"
 63342      6F696E74 
 63342      65725F68 
 63342      656C7065 
 63342      7200
 63343              	.LASF1656:
 63344 c261 68656174 		.string	"heatmap_stamp_t"
 63344      6D61705F 
 63344      7374616D 
 63344      705F7400 
 63345              	.LASF694:
 63346 c271 5F5A4E4B 		.string	"_ZNKSt6vectorIjSaIjEE7crbeginEv"
 63346      53743676 
 63346      6563746F 
 63346      72496A53 
 63346      61496A45 
 63347              	.LASF1289:
 63348 c291 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE20_S_propagate_on_swapEv"
 63348      5F5F676E 
 63348      755F6378 
 63348      7831345F 
 63348      5F616C6C 
 63349              	.LASF478:
 63350 c2ce 5F5A4E53 		.string	"_ZNSt13random_deviceaSERKS_"
 63350      74313372 
 63350      616E646F 
 63350      6D5F6465 
 63350      76696365 
 63351              	.LASF289:
 63352 c2ea 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofERKSsm"
 63352      53733136 
 63352      66696E64 
 63352      5F6C6173 
 63352      745F6E6F 
 63353              	.LASF1015:
 63354 c309 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPKhS1_EE"
 63354      74367665 
 63354      63746F72 
 63354      49685361 
 63354      49684545 
 63355              	.LASF1080:
GAS LISTING /tmp/ccJUMvuF.s 			page 1616


 63356 c34c 6F706572 		.string	"operator|"
 63356      61746F72 
 63356      7C00
 63357              	.LASF497:
 63358 c356 706F696E 		.string	"pointer_traits<double*>"
 63358      7465725F 
 63358      74726169 
 63358      74733C64 
 63358      6F75626C 
 63359              	.LASF296:
 63360 c36e 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSs"
 63360      53733763 
 63360      6F6D7061 
 63360      7265456D 
 63360      6D524B53 
 63361              	.LASF257:
 63362 c384 5F5A4E53 		.string	"_ZNSs4swapERSs"
 63362      73347377 
 63362      61704552 
 63362      537300
 63363              	.LASF750:
 63364 c393 5F5A4E53 		.string	"_ZNSt14default_deleteI9heatmap_tEclEPS0_"
 63364      74313464 
 63364      65666175 
 63364      6C745F64 
 63364      656C6574 
 63365              	.LASF408:
 63366 c3bc 5F5A4E53 		.string	"_ZNSo5flushEv"
 63366      6F35666C 
 63366      75736845 
 63366      7600
 63367              	.LASF1211:
 63368 c3ca 6E65775F 		.string	"new_allocator<char>"
 63368      616C6C6F 
 63368      6361746F 
 63368      723C6368 
 63368      61723E00 
 63369              	.LASF1291:
 63370 c3de 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIdEE15_S_always_equalEv"
 63370      5F5F676E 
 63370      755F6378 
 63370      7831345F 
 63370      5F616C6C 
 63371              	.LASF1202:
 63372 c416 5F497465 		.string	"_Iter_less_val"
 63372      725F6C65 
 63372      73735F76 
 63372      616C00
 63373              	.LASF175:
 63374 c425 5F5A4E53 		.string	"_ZNSs6resizeEm"
 63374      73367265 
 63374      73697A65 
 63374      456D00
 63375              	.LASF672:
 63376 c434 5F5A4E53 		.string	"_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv"
 63376      7431325F 
 63376      56656374 
GAS LISTING /tmp/ccJUMvuF.s 			page 1617


 63376      6F725F62 
 63376      61736549 
 63377              	.LASF57:
 63378 c467 73697A65 		.string	"size_type"
 63378      5F747970 
 63378      6500
 63379              	.LASF836:
 63380 c471 756E6971 		.string	"unique_ptr<heatmap_stamp_t, std::default_delete<heatmap_stamp_t> >"
 63380      75655F70 
 63380      74723C68 
 63380      6561746D 
 63380      61705F73 
 63381              	.LASF1205:
 63382 c4b4 5F56616C 		.string	"_Val_less_iter"
 63382      5F6C6573 
 63382      735F6974 
 63382      657200
 63383              	.LASF1043:
 63384 c4c3 5F497350 		.string	"_IsPlaceholder"
 63384      6C616365 
 63384      686F6C64 
 63384      657200
 63385              	.LASF896:
 63386 c4d2 5F5A4E53 		.string	"_ZNSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EEaSEOS3_"
 63386      74313075 
 63386      6E697175 
 63386      655F7074 
 63386      72493968 
 63387              	.LASF863:
 63388 c50e 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI15heatmap_stamp_tELb1EE7_M_headERKS3_"
 63388      7431305F 
 63388      48656164 
 63388      5F626173 
 63388      65494C6D 
 63389              	.LASF741:
 63390 c55d 5F5A4E4B 		.string	"_ZNKSt16initializer_listIjE4sizeEv"
 63390      53743136 
 63390      696E6974 
 63390      69616C69 
 63390      7A65725F 
 63391              	.LASF1059:
 63392 c580 5F535F62 		.string	"_S_base"
 63392      61736500 
 63393              	.LASF1298:
 63394 c588 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEptEv"
 63394      395F5F67 
 63394      6E755F63 
 63394      78783137 
 63394      5F5F6E6F 
 63395              	.LASF820:
 63396 c5c3 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 63396      7431315F 
 63396      5475706C 
 63396      655F696D 
 63396      706C494C 
 63397              	.LASF420:
 63398 c673 5F5F6465 		.string	"__destroy<unsigned int*>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1618


 63398      7374726F 
 63398      793C756E 
 63398      7369676E 
 63398      65642069 
 63399              	.LASF1266:
 63400 c68c 5F5F6E75 		.string	"__numeric_traits_floating<double>"
 63400      6D657269 
 63400      635F7472 
 63400      61697473 
 63400      5F666C6F 
 63401              	.LASF622:
 63402 c6ae 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE18_M_fill_initializeEmRKd"
 63402      74367665 
 63402      63746F72 
 63402      49645361 
 63402      49644545 
 63403              	.LASF1129:
 63404 c6dc 5F5F756E 		.string	"__uninitialized_default_n_a<double*, long unsigned int, double>"
 63404      696E6974 
 63404      69616C69 
 63404      7A65645F 
 63404      64656661 
 63405              	.LASF1669:
 63406 c71c 5F5F6D61 		.string	"__mask"
 63406      736B00
 63407              	.LASF879:
 63408 c723 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP15heatmap_stamp_tSt14default_deleteIS0_EEE7_M_headERS4_"
 63408      7431315F 
 63408      5475706C 
 63408      655F696D 
 63408      706C494C 
 63409              	.LASF1195:
 63410 c774 6C6F6E67 		.string	"long long int"
 63410      206C6F6E 
 63410      6720696E 
 63410      7400
 63411              	.LASF96:
 63412 c782 5F5A4E53 		.string	"_ZNSs4_Rep9_S_createEmmRKSaIcE"
 63412      73345F52 
 63412      6570395F 
 63412      535F6372 
 63412      65617465 
 63413              	.LASF432:
 63414 c7a1 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm4294967296ELm1ELm0ELb1ELb1EE6__calcEm"
 63414      74385F5F 
 63414      64657461 
 63414      696C345F 
 63414      4D6F6449 
 63415              	.LASF1362:
 63416 c7de 5F5F616C 		.string	"__alloc_traits<std::allocator<unsigned char> >"
 63416      6C6F635F 
 63416      74726169 
 63416      74733C73 
 63416      74643A3A 
 63417              	.LASF1069:
 63418 c80d 5F497465 		.string	"_Iter_base<unsigned char*, false>"
 63418      725F6261 
GAS LISTING /tmp/ccJUMvuF.s 			page 1619


 63418      73653C75 
 63418      6E736967 
 63418      6E656420 
 63419              	.LASF1751:
 63420 c82f 4D415053 		.string	"MAPSIZE_MIN"
 63420      495A455F 
 63420      4D494E00 
 63421              	.LASF849:
 63422 c83b 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE3getEv"
 63422      53743130 
 63422      756E6971 
 63422      75655F70 
 63422      74724931 
 63423              	.LASF205:
 63424 c87e 5F5A4E53 		.string	"_ZNSs6appendEPKcm"
 63424      73366170 
 63424      70656E64 
 63424      45504B63 
 63424      6D00
 63425              	.LASF1432:
 63426 c890 63686172 		.string	"char"
 63426      00
 63427              	.LASF1178:
 63428 c895 636F7574 		.string	"cout"
 63428      00
 63429              	.LASF1226:
 63430 c89a 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 63430      5F5F676E 
 63430      755F6378 
 63430      78336469 
 63430      76457878 
 63431              	.LASF995:
 63432 c8af 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5emptyEv"
 63432      53743676 
 63432      6563746F 
 63432      72496853 
 63432      61496845 
 63433              	.LASF870:
 63434 c8cd 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEEaSERKS3_"
 63434      7431315F 
 63434      5475706C 
 63434      655F696D 
 63434      706C494C 
 63435              	.LASF1019:
 63436 c915 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE18_M_fill_initializeEmRKh"
 63436      74367665 
 63436      63746F72 
 63436      49685361 
 63436      49684545 
 63437              	.LASF1016:
 63438 c943 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPKhS1_EES6_"
 63438      74367665 
 63438      63746F72 
 63438      49685361 
 63438      49684545 
 63439              	.LASF370:
 63440 c989 73657466 		.string	"setf"
GAS LISTING /tmp/ccJUMvuF.s 			page 1620


 63440      00
 63441              	.LASF604:
 63442 c98e 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5frontEv"
 63442      74367665 
 63442      63746F72 
 63442      49645361 
 63442      49644545 
 63443              	.LASF450:
 63444 c9ab 74656D70 		.string	"tempering_b"
 63444      6572696E 
 63444      675F6200 
 63445              	.LASF452:
 63446 c9b7 74656D70 		.string	"tempering_c"
 63446      6572696E 
 63446      675F6300 
 63447              	.LASF448:
 63448 c9c3 74656D70 		.string	"tempering_d"
 63448      6572696E 
 63448      675F6400 
 63449              	.LASF453:
 63450 c9cf 74656D70 		.string	"tempering_l"
 63450      6572696E 
 63450      675F6C00 
 63451              	.LASF684:
 63452 c9db 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE5beginEv"
 63452      74367665 
 63452      63746F72 
 63452      496A5361 
 63452      496A4545 
 63453              	.LASF449:
 63454 c9f8 74656D70 		.string	"tempering_s"
 63454      6572696E 
 63454      675F7300 
 63455              	.LASF451:
 63456 ca04 74656D70 		.string	"tempering_t"
 63456      6572696E 
 63456      675F7400 
 63457              	.LASF447:
 63458 ca10 74656D70 		.string	"tempering_u"
 63458      6572696E 
 63458      675F7500 
 63459              	.LASF1640:
 63460 ca1c 69737763 		.string	"iswctype"
 63460      74797065 
 63460      00
 63461              	.LASF726:
 63462 ca25 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE18_M_fill_initializeEmRKj"
 63462      74367665 
 63462      63746F72 
 63462      496A5361 
 63462      496A4545 
 63463              	.LASF60:
 63464 ca53 616C6C6F 		.string	"allocator"
 63464      6361746F 
 63464      7200
 63465              	.LASF445:
 63466 ca5d 72657375 		.string	"result_type"
GAS LISTING /tmp/ccJUMvuF.s 			page 1621


 63466      6C745F74 
 63466      79706500 
 63467              	.LASF1012:
 63468 ca69 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EEOh"
 63468      74367665 
 63468      63746F72 
 63468      49685361 
 63468      49684545 
 63469              	.LASF1755:
 63470 caaf 5F5F6473 		.string	"__dso_handle"
 63470      6F5F6861 
 63470      6E646C65 
 63470      00
 63471              	.LASF1477:
 63472 cabc 746D5F67 		.string	"tm_gmtoff"
 63472      6D746F66 
 63472      6600
 63473              	.LASF812:
 63474 cac6 5F554865 		.string	"_UHead"
 63474      616400
 63475              	.LASF1566:
 63476 cacd 5F41746F 		.string	"_Atomic_word"
 63476      6D69635F 
 63476      776F7264 
 63476      00
 63477              	.LASF532:
 63478 cada 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE48_S_propagate_on_container_copy_assignment_helperEz"
 63478      74313661 
 63478      6C6C6F63 
 63478      61746F72 
 63478      5F747261 
 63479              	.LASF1711:
 63480 cb2d 67656E70 		.string	"genpoints"
 63480      6F696E74 
 63480      7300
 63481              	.LASF1460:
 63482 cb37 76777363 		.string	"vwscanf"
 63482      616E6600 
 63483              	.LASF1275:
 63484 cb3f 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv"
 63484      5F5F676E 
 63484      755F6378 
 63484      7831336E 
 63484      65775F61 
 63485              	.LASF843:
 63486 cb6d 5F5A4E53 		.string	"_ZNSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EEaSEOS3_"
 63486      74313075 
 63486      6E697175 
 63486      655F7074 
 63486      72493135 
 63487              	.LASF115:
 63488 cbb0 5F5A4E53 		.string	"_ZNSs7_M_leakEv"
 63488      73375F4D 
 63488      5F6C6561 
 63488      6B457600 
 63489              	.LASF51:
 63490 cbc0 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
GAS LISTING /tmp/ccJUMvuF.s 			page 1622


 63490      74313163 
 63490      6861725F 
 63490      74726169 
 63490      74734963 
 63491              	.LASF47:
 63492 cbea 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 63492      74313163 
 63492      6861725F 
 63492      74726169 
 63492      74734963 
 63493              	.LASF262:
 63494 cc12 6765745F 		.string	"get_allocator"
 63494      616C6C6F 
 63494      6361746F 
 63494      7200
 63495              	.LASF1117:
 63496 cc20 5F4F7574 		.string	"_OutputIterator"
 63496      70757449 
 63496      74657261 
 63496      746F7200 
 63497              	.LASF599:
 63498 cc30 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEEixEm"
 63498      53743676 
 63498      6563746F 
 63498      72496453 
 63498      61496445 
 63499              	.LASF909:
 63500 cc4a 5F486561 		.string	"_Head_base<1ul, std::default_delete<heatmap_t>, true>"
 63500      645F6261 
 63500      73653C31 
 63500      756C2C20 
 63500      7374643A 
 63501              	.LASF1524:
 63502 cc80 696E745F 		.string	"int_fast32_t"
 63502      66617374 
 63502      33325F74 
 63502      00
 63503              	.LASF1058:
 63504 cc8d 69746572 		.string	"iterator_type"
 63504      61746F72 
 63504      5F747970 
 63504      6500
 63505              	.LASF1157:
 63506 cc9b 5F5F6865 		.string	"__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__o
 63506      61705F73 
 63506      656C6563 
 63506      743C5F5F 
 63506      676E755F 
 63507              	.LASF736:
 63508 cd09 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 63508      74367665 
 63508      63746F72 
 63508      496A5361 
 63508      496A4545 
 63509              	.LASF438:
 63510 cd4f 5F5F6D6F 		.string	"__mod<long unsigned int, 624ul, 1ul, 0ul>"
 63510      643C6C6F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1623


 63510      6E672075 
 63510      6E736967 
 63510      6E656420 
 63511              	.LASF174:
 63512 cd79 5F5A4E53 		.string	"_ZNSs6resizeEmc"
 63512      73367265 
 63512      73697A65 
 63512      456D6300 
 63513              	.LASF713:
 63514 cd89 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4dataEv"
 63514      74367665 
 63514      63746F72 
 63514      496A5361 
 63514      496A4545 
 63515              	.LASF1688:
 63516 cda5 5F5F746D 		.string	"__tmp"
 63516      7000
 63517              	.LASF1664:
 63518 cdab 5F5F7661 		.string	"__val"
 63518      6C00
 63519              	.LASF1519:
 63520 cdb1 75696E74 		.string	"uint_least16_t"
 63520      5F6C6561 
 63520      73743136 
 63520      5F7400
 63521              	.LASF1259:
 63522 cdc0 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIEl"
 63522      5F5F676E 
 63522      755F6378 
 63522      7831375F 
 63522      5F6E6F72 
 63523              	.LASF752:
 63524 cdec 5F5A4E53 		.string	"_ZNSt14default_deleteI15heatmap_stamp_tEclEPS0_"
 63524      74313464 
 63524      65666175 
 63524      6C745F64 
 63524      656C6574 
 63525              	.LASF191:
 63526 ce1c 66726F6E 		.string	"front"
 63526      7400
 63527              	.LASF1359:
 63528 ce22 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv"
 63528      5F5F676E 
 63528      755F6378 
 63528      7831336E 
 63528      65775F61 
 63529              	.LASF875:
 63530 ce50 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP15heatmap_stamp_tLb0EE7_M_headERS2_"
 63530      7431305F 
 63530      48656164 
 63530      5F626173 
 63530      65494C6D 
 63531              	.LASF272:
 63532 ce8b 5F5A4E4B 		.string	"_ZNKSs5rfindEcm"
 63532      53733572 
 63532      66696E64 
 63532      45636D00 
GAS LISTING /tmp/ccJUMvuF.s 			page 1624


 63533              	.LASF218:
 63534 ce9b 696E7365 		.string	"insert"
 63534      727400
 63535              	.LASF872:
 63536 cea2 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EISt14default_deleteI15heatmap_stamp_tEEE7_M_swapERS3_"
 63536      7431315F 
 63536      5475706C 
 63536      655F696D 
 63536      706C494C 
 63537              	.LASF1151:
 63538 ceef 5F5F756E 		.string	"__uninitialized_default_n<unsigned char*, long unsigned int>"
 63538      696E6974 
 63538      69616C69 
 63538      7A65645F 
 63538      64656661 
 63539              	.LASF827:
 63540 cf2c 5F426F75 		.string	"_BoundArgs"
 63540      6E644172 
 63540      677300
 63541              	.LASF859:
 63542 cf37 5F547570 		.string	"_Tuple_impl<2ul>"
 63542      6C655F69 
 63542      6D706C3C 
 63542      32756C3E 
 63542      00
 63543              	.LASF1136:
 63544 cf48 5F5F636F 		.string	"__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<double*, std::vector<double> >
 63544      70795F6D 
 63544      6F76655F 
 63544      6261636B 
 63544      77617264 
 63545              	.LASF852:
 63546 cfe1 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI15heatmap_stamp_tSt14default_deleteIS0_EE11get_deleterEv"
 63546      53743130 
 63546      756E6971 
 63546      75655F70 
 63546      74724931 
 63547              	.LASF260:
 63548 d02d 64617461 		.string	"data"
 63548      00
 63549              	.LASF1150:
 63550 d032 66696C6C 		.string	"fill_n<unsigned char*, long unsigned int, unsigned char>"
 63550      5F6E3C75 
 63550      6E736967 
 63550      6E656420 
 63550      63686172 
 63551              	.LASF17:
 63552 d06b 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 63552      53743135 
 63552      5F5F6578 
 63552      63657074 
 63552      696F6E5F 
 63553              	.LASF1325:
 63554 d0aa 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIjE8allocateEmPKv"
 63554      5F5F676E 
 63554      755F6378 
 63554      7831336E 
GAS LISTING /tmp/ccJUMvuF.s 			page 1625


 63554      65775F61 
 63555              	.LASF798:
 63556 d0d8 5F496E64 		.string	"_Index_tuple<0ul>"
 63556      65785F74 
 63556      75706C65 
 63556      3C30756C 
 63556      3E00
 63557              	.LASF1447:
 63558 d0ea 6D627274 		.string	"mbrtowc"
 63558      6F776300 
 63559              	.LASF283:
 63560 d0f2 66696E64 		.string	"find_first_not_of"
 63560      5F666972 
 63560      73745F6E 
 63560      6F745F6F 
 63560      6600
 63561              	.LASF1734:
 63562 d104 5F4E756D 		.string	"_Num"
 63562      00
 63563              	.LASF840:
 63564 d109 64656C65 		.string	"deleter_type"
 63564      7465725F 
 63564      74797065 
 63564      00
 63565              	.LASF525:
 63566 d116 5F535F63 		.string	"_S_const_void_pointer_helper"
 63566      6F6E7374 
 63566      5F766F69 
 63566      645F706F 
 63566      696E7465 
 63567              	.LASF1542:
 63568 d133 6D6F6E5F 		.string	"mon_decimal_point"
 63568      64656369 
 63568      6D616C5F 
 63568      706F696E 
 63568      7400
 63569              	.LASF133:
 63570 d145 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_"
 63570      7331335F 
 63570      535F636F 
 63570      70795F63 
 63570      68617273 
 63571              	.LASF418:
 63572 d186 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE13_M_widen_initEv"
 63572      53743563 
 63572      74797065 
 63572      49634531 
 63572      335F4D5F 
 63573              	.LASF1208:
 63574 d1a7 5F5F7661 		.string	"__val_comp_iter"
 63574      6C5F636F 
 63574      6D705F69 
 63574      74657200 
 63575              	.LASF817:
 63576 d1b7 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 63576      7431315F 
 63576      5475706C 
GAS LISTING /tmp/ccJUMvuF.s 			page 1626


 63576      655F696D 
 63576      706C494C 
 63577              	.LASF32:
 63578 d267 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 63578      74313163 
 63578      6861725F 
 63578      74726169 
 63578      74734963 
 63579              	.LASF992:
 63580 d287 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6resizeEmRKh"
 63580      74367665 
 63580      63746F72 
 63580      49685361 
 63580      49684545 
 63581              	.LASF1404:
 63582 d2a8 5F636861 		.string	"_chain"
 63582      696E00
 63583              	.LASF982:
 63584 d2af 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE6rbeginEv"
 63584      53743676 
 63584      6563746F 
 63584      72496853 
 63584      61496845 
 63585              	.LASF621:
 63586 d2ce 5F4D5F66 		.string	"_M_fill_initialize"
 63586      696C6C5F 
 63586      696E6974 
 63586      69616C69 
 63586      7A6500
 63587              	.LASF1575:
 63588 d2e1 5F5F636F 		.string	"__compar_fn_t"
 63588      6D706172 
 63588      5F666E5F 
 63588      7400
 63589              	.LASF591:
 63590 d2ef 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE8max_sizeEv"
 63590      53743676 
 63590      6563746F 
 63590      72496453 
 63590      61496445 
 63591              	.LASF1199:
 63592 d310 6F706572 		.string	"operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__norm
 63592      61746F72 
 63592      28293C5F 
 63592      5F676E75 
 63592      5F637878 
 63593              	.LASF956:
 63594 d396 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE37_S_propagate_on_container_swap_helperEz"
 63594      74313661 
 63594      6C6C6F63 
 63594      61746F72 
 63594      5F747261 
 63595              	.LASF1138:
 63596 d3de 5F5F6669 		.string	"__final_insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu
 63596      6E616C5F 
 63596      696E7365 
 63596      7274696F 
GAS LISTING /tmp/ccJUMvuF.s 			page 1627


 63596      6E5F736F 
 63597              	.LASF407:
 63598 d455 666C7573 		.string	"flush"
 63598      6800
 63599              	.LASF1611:
 63600 d45b 66706F73 		.string	"fpos_t"
 63600      5F7400
 63601              	.LASF1526:
 63602 d462 75696E74 		.string	"uint_fast8_t"
 63602      5F666173 
 63602      74385F74 
 63602      00
 63603              	.LASF1228:
 63604 d46f 5F4D5F63 		.string	"_M_current"
 63604      75727265 
 63604      6E7400
 63605              	.LASF774:
 63606 d47a 5F5A4E53 		.string	"_ZNSt26_Maybe_wrap_member_pointerISt24uniform_int_distributionIiEE9__do_wrapERKS1_"
 63606      7432365F 
 63606      4D617962 
 63606      655F7772 
 63606      61705F6D 
 63607              	.LASF285:
 63608 d4cd 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcmm"
 63608      53733137 
 63608      66696E64 
 63608      5F666972 
 63608      73745F6E 
 63609              	.LASF1155:
 63610 d4ed 5F5F6D61 		.string	"__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__ops
 63610      6B655F68 
 63610      6561703C 
 63610      5F5F676E 
 63610      755F6378 
 63611              	.LASF499:
 63612 d559 706F696E 		.string	"pointer_to"
 63612      7465725F 
 63612      746F00
 63613              	.LASF890:
 63614 d564 5F5A4E53 		.string	"_ZNSt5tupleIIP15heatmap_stamp_tSt14default_deleteIS0_EEE4swapERS4_"
 63614      74357475 
 63614      706C6549 
 63614      49503135 
 63614      68656174 
 63615              	.LASF200:
 63616 d5a7 5F5A4E53 		.string	"_ZNSspLEc"
 63616      73704C45 
 63616      6300
 63617              	.LASF1097:
 63618 d5b1 5F5F6765 		.string	"__get_helper<1ul, std::default_delete<heatmap_stamp_t> >"
 63618      745F6865 
 63618      6C706572 
 63618      3C31756C 
 63618      2C207374 
 63619              	.LASF1683:
 63620 d5ea 5F5F6974 		.string	"__it1"
 63620      3100
GAS LISTING /tmp/ccJUMvuF.s 			page 1628


 63621              	.LASF1684:
 63622 d5f0 5F5F6974 		.string	"__it2"
 63622      3200
 63623              	.LASF729:
 63624 d5f6 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj"
 63624      74367665 
 63624      63746F72 
 63624      496A5361 
 63624      496A4545 
 63625              	.LASF1713:
 63626 d646 6D617876 		.string	"maxval"
 63626      616C00
 63627              	.LASF1425:
 63628 d64d 6F766572 		.string	"overflow_arg_area"
 63628      666C6F77 
 63628      5F617267 
 63628      5F617265 
 63628      6100
 63629              	.LASF1426:
 63630 d65f 7265675F 		.string	"reg_save_area"
 63630      73617665 
 63630      5F617265 
 63630      6100
 63631              	.LASF280:
 63632 d66d 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcmm"
 63632      53733132 
 63632      66696E64 
 63632      5F6C6173 
 63632      745F6F66 
 63633              	.LASF261:
 63634 d688 5F5A4E4B 		.string	"_ZNKSs4dataEv"
 63634      53733464 
 63634      61746145 
 63634      7600
 63635              	.LASF1011:
 63636 d696 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EERS4_"
 63636      74367665 
 63636      63746F72 
 63636      49685361 
 63636      49684545 
 63637              	.LASF250:
 63638 d6de 5F4D5F72 		.string	"_M_replace_safe"
 63638      65706C61 
 63638      63655F73 
 63638      61666500 
 63639              	.LASF1793:
 63640 d6ee 646F5F77 		.string	"do_widen"
 63640      6964656E 
 63640      00
 63641              	.LASF1054:
 63642 d6f7 5F5F6974 		.string	"__iterator_traits<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocato
 63642      65726174 
 63642      6F725F74 
 63642      72616974 
 63642      733C5F5F 
 63643              	.LASF945:
 63644 d765 706F696E 		.string	"pointer_traits<unsigned char*>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1629


 63644      7465725F 
 63644      74726169 
 63644      74733C75 
 63644      6E736967 
 63645              	.LASF1602:
 63646 d784 73747274 		.string	"strtold"
 63646      6F6C6400 
 63647              	.LASF1687:
 63648 d78c 5F5F6E65 		.string	"__next"
 63648      787400
 63649              	.LASF1119:
 63650 d793 69746572 		.string	"iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, __gnu_cxx::__norma
 63650      5F737761 
 63650      703C5F5F 
 63650      676E755F 
 63650      6378783A 
 63651              	.LASF1599:
 63652 d818 73747274 		.string	"strtoll"
 63652      6F6C6C00 
 63653              	.LASF977:
 63654 d820 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5beginEv"
 63654      74367665 
 63654      63746F72 
 63654      49685361 
 63654      49684545 
 63655              	.LASF542:
 63656 d83d 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_"
 63656      74313661 
 63656      6C6C6F63 
 63656      61746F72 
 63656      5F747261 
 63657              	.LASF1701:
 63658 d86b 5F5F7061 		.string	"__parent"
 63658      72656E74 
 63658      00
 63659              	.LASF1008:
 63660 d874 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE9push_backERKh"
 63660      74367665 
 63660      63746F72 
 63660      49685361 
 63660      49684545 
 63661              	.LASF1442:
 63662 d897 66777072 		.string	"fwprintf"
 63662      696E7466 
 63662      00
 63663              	.LASF682:
 63664 d8a0 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE6assignEmRKj"
 63664      74367665 
 63664      63746F72 
 63664      496A5361 
 63664      496A4545 
 63665              	.LASF355:
 63666 d8c1 5F535F67 		.string	"_S_goodbit"
 63666      6F6F6462 
 63666      697400
 63667              	.LASF1744:
 63668 d8cc 6D61696E 		.string	"main"
GAS LISTING /tmp/ccJUMvuF.s 			page 1630


 63668      00
 63669              	.LASF443:
 63670 d8d1 73686966 		.string	"shift_size"
 63670      745F7369 
 63670      7A6500
 63671              	.LASF11:
 63672 d8dc 7E657863 		.string	"~exception_ptr"
 63672      65707469 
 63672      6F6E5F70 
 63672      747200
 63673              	.LASF1029:
 63674 d8eb 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 63674      74367665 
 63674      63746F72 
 63674      49685361 
 63674      49684545 
 63675              	.LASF939:
 63676 d931 7475706C 		.string	"tuple<heatmap_t*&, std::default_delete<heatmap_t>, void>"
 63676      653C6865 
 63676      61746D61 
 63676      705F742A 
 63676      262C2073 
 63677              	.LASF472:
 63678 d96a 7E72616E 		.string	"~random_device"
 63678      646F6D5F 
 63678      64657669 
 63678      636500
 63679              	.LASF1517:
 63680 d979 696E745F 		.string	"int_least64_t"
 63680      6C656173 
 63680      7436345F 
 63680      7400
 63681              	.LASF1547:
 63682 d987 696E745F 		.string	"int_frac_digits"
 63682      66726163 
 63682      5F646967 
 63682      69747300 
 63683              	.LASF1009:
 63684 d997 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE9push_backEOh"
 63684      74367665 
 63684      63746F72 
 63684      49685361 
 63684      49684545 
 63685              	.LASF1167:
 63686 d9b9 656E646C 		.string	"endl<char, std::char_traits<char> >"
 63686      3C636861 
 63686      722C2073 
 63686      74643A3A 
 63686      63686172 
 63687              	.LASF935:
 63688 d9dd 7475706C 		.string	"tuple<heatmap_t*, std::default_delete<heatmap_t> >"
 63688      653C6865 
 63688      61746D61 
 63688      705F742A 
 63688      2C207374 
 63689              	.LASF1260:
 63690 da10 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl"
GAS LISTING /tmp/ccJUMvuF.s 			page 1631


 63690      395F5F67 
 63690      6E755F63 
 63690      78783137 
 63690      5F5F6E6F 
 63691              	.LASF414:
 63692 da3d 77696465 		.string	"widen"
 63692      6E00
 63693              	.LASF724:
 63694 da43 5F5A4E53 		.string	"_ZNSt6vectorIjSaIjEE4swapERS1_"
 63694      74367665 
 63694      63746F72 
 63694      496A5361 
 63694      496A4545 
 63695              	.LASF307:
 63696 da62 696E6974 		.string	"initializer_list<char>"
 63696      69616C69 
 63696      7A65725F 
 63696      6C697374 
 63696      3C636861 
 63697              	.LASF1051:
 63698 da79 5F5F6164 		.string	"__add_ref<std::default_delete<heatmap_t> >"
 63698      645F7265 
 63698      663C7374 
 63698      643A3A64 
 63698      65666175 
 63699              	.LASF1634:
 63700 daa4 73657476 		.string	"setvbuf"
 63700      62756600 
 63701              	.LASF1363:
 63702 daac 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE17_S_select_on_copyERKS1_"
 63702      5F5F676E 
 63702      755F6378 
 63702      7831345F 
 63702      5F616C6C 
 63703              	.LASF1413:
 63704 daea 5F5F7061 		.string	"__pad1"
 63704      643100
 63705              	.LASF345:
 63706 daf1 5F496F73 		.string	"_Ios_Fmtflags"
 63706      5F466D74 
 63706      666C6167 
 63706      7300
 63707              	.LASF1243:
 63708 daff 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIEl"
 63708      5F5F676E 
 63708      755F6378 
 63708      7831375F 
 63708      5F6E6F72 
 63709              	.LASF1098:
 63710 db2a 6765743C 		.string	"get<1ul, heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 63710      31756C2C 
 63710      20686561 
 63710      746D6170 
 63710      5F737461 
 63711              	.LASF415:
 63712 db6c 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 63712      53743563 
GAS LISTING /tmp/ccJUMvuF.s 			page 1632


 63712      74797065 
 63712      49634535 
 63712      77696465 
 63713              	.LASF1417:
 63714 db84 5F5F7061 		.string	"__pad5"
 63714      643500
 63715              	.LASF902:
 63716 db8b 5F5A4E4B 		.string	"_ZNKSt10unique_ptrI9heatmap_tSt14default_deleteIS0_EE11get_deleterEv"
 63716      53743130 
 63716      756E6971 
 63716      75655F70 
 63716      74724939 
 63717              	.LASF828:
 63718 dbd0 7475706C 		.string	"tuple<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748361
 63718      653C7374 
 63718      643A3A6D 
 63718      65727365 
 63718      6E6E655F 
 63719              	.LASF1288:
 63720 dc7f 5F535F70 		.string	"_S_propagate_on_swap"
 63720      726F7061 
 63720      67617465 
 63720      5F6F6E5F 
 63720      73776170 
 63721              	.LASF1555:
 63722 dc94 696E745F 		.string	"int_p_cs_precedes"
 63722      705F6373 
 63722      5F707265 
 63722      63656465 
 63722      7300
 63723              	.LASF79:
 63724 dca6 5F535F65 		.string	"_S_empty_rep_storage"
 63724      6D707479 
 63724      5F726570 
 63724      5F73746F 
 63724      72616765 
 63725              	.LASF505:
 63726 dcbb 5F497343 		.string	"_IsConst"
 63726      6F6E7374 
 63726      00
 63727              	.LASF1496:
 63728 dcc4 77707269 		.string	"wprintf"
 63728      6E746600 
 63729              	.LASF1390:
 63730 dccc 5F494F5F 		.string	"_IO_FILE"
 63730      46494C45 
 63730      00
 63731              	.LASF1341:
 63732 dcd5 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEppEi"
 63732      5F5F676E 
 63732      755F6378 
 63732      7831375F 
 63732      5F6E6F72 
 63733              	.LASF1340:
 63734 dd0f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEppEv"
 63734      5F5F676E 
 63734      755F6378 
GAS LISTING /tmp/ccJUMvuF.s 			page 1633


 63734      7831375F 
 63734      5F6E6F72 
 63735              	.LASF1657:
 63736 dd49 32316865 		.string	"21heatmap_colorscheme_t"
 63736      61746D61 
 63736      705F636F 
 63736      6C6F7273 
 63736      6368656D 
 63737              	.LASF54:
 63738 dd61 70747264 		.string	"ptrdiff_t"
 63738      6966665F 
 63738      7400
 63739              	.LASF1264:
 63740 dd6b 5F5F6469 		.string	"__digits10"
 63740      67697473 
 63740      313000
 63741              	.LASF745:
 63742 dd76 5F497465 		.string	"_Iterator"
 63742      7261746F 
 63742      7200
 63743              	.LASF1445:
 63744 dd80 67657477 		.string	"getwchar"
 63744      63686172 
 63744      00
 63745              	.LASF910:
 63746 dd89 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9heatmap_tELb1EE7_M_headERS3_"
 63746      7431305F 
 63746      48656164 
 63746      5F626173 
 63746      65494C6D 
 63747              	.LASF1423:
 63748 ddd0 67705F6F 		.string	"gp_offset"
 63748      66667365 
 63748      7400
 63749              	.LASF428:
 63750 ddda 5F5F756E 		.string	"__uninit_default_n<unsigned char*, long unsigned int>"
 63750      696E6974 
 63750      5F646566 
 63750      61756C74 
 63750      5F6E3C75 
 63751              	.LASF166:
 63752 de10 6372656E 		.string	"crend"
 63752      6400
 63753              	.LASF1023:
 63754 de16 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE17_M_default_appendEm"
 63754      74367665 
 63754      63746F72 
 63754      49685361 
 63754      49684545 
 63755              	.LASF1377:
 63756 de40 5F5F6578 		.string	"__exchange_and_add_single"
 63756      6368616E 
 63756      67655F61 
 63756      6E645F61 
 63756      64645F73 
 63757              	.LASF1118:
 63758 de5a 73776170 		.string	"swap<double>"
GAS LISTING /tmp/ccJUMvuF.s 			page 1634


 63758      3C646F75 
 63758      626C653E 
 63758      00
 63759              	.LASF316:
 63760 de67 5F5F7573 		.string	"__uses_alloc0"
 63760      65735F61 
 63760      6C6C6F63 
 63760      3000
 63761              	.LASF944:
 63762 de75 5F5F7074 		.string	"__ptrtr_not_void<unsigned char, unsigned char>"
 63762      7274725F 
 63762      6E6F745F 
 63762      766F6964 
 63762      3C756E73 
 63763              	.LASF617:
 63764 dea4 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE5eraseEN9__gnu_cxx17__normal_iteratorIPKdS1_EE"
 63764      74367665 
 63764      63746F72 
 63764      49645361 
 63764      49644545 
 63765              	.LASF1615:
 63766 dee7 66657272 		.string	"ferror"
 63766      6F7200
 63767              	.LASF631:
 63768 deee 5F4D5F73 		.string	"_M_shrink_to_fit"
 63768      6872696E 
 63768      6B5F746F 
 63768      5F666974 
 63768      00
 63769              	.LASF49:
 63770 deff 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 63770      74313163 
 63770      6861725F 
 63770      74726169 
 63770      74734963 
 63771              	.LASF1223:
 63772 df26 5F5F6D61 		.string	"__max"
 63772      7800
 63773              	.LASF1133:
 63774 df2c 5F424931 		.string	"_BI1"
 63774      00
 63775              	.LASF489:
 63776 df31 6D743139 		.string	"mt19937"
 63776      39333700 
 63777              	.LASF1455:
 63778 df39 76667770 		.string	"vfwprintf"
 63778      72696E74 
 63778      6600
 63779              	.LASF1331:
 63780 df43 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIjEE27_S_propagate_on_copy_assignEv"
 63780      5F5F676E 
 63780      755F6378 
 63780      7831345F 
 63780      5F616C6C 
 63781              	.LASF334:
 63782 df87 5F535F73 		.string	"_S_scientific"
 63782      6369656E 
GAS LISTING /tmp/ccJUMvuF.s 			page 1635


 63782      74696669 
 63782      6300
 63783              	.LASF1063:
 63784 df95 5F497465 		.string	"_Iter_base<double*, false>"
 63784      725F6261 
 63784      73653C64 
 63784      6F75626C 
 63784      652A2C20 
 63785              	.LASF1508:
 63786 dfb0 696E7433 		.string	"int32_t"
 63786      325F7400 
 63787              	.LASF792:
 63788 dfb8 5F486173 		.string	"_Has_result_type"
 63788      5F726573 
 63788      756C745F 
 63788      74797065 
 63788      00
 63789              	.LASF1074:
 63790 dfc9 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 63790      635F696F 
 63790      733C6368 
 63790      61722C20 
 63790      7374643A 
 63791              	.LASF137:
 63792 dff2 5F5A4E53 		.string	"_ZNSs10_S_compareEmm"
 63792      7331305F 
 63792      535F636F 
 63792      6D706172 
 63792      65456D6D 
 63793              	.LASF35:
 63794 e007 6C656E67 		.string	"length"
 63794      746800
 63795              	.LASF1522:
 63796 e00e 696E745F 		.string	"int_fast8_t"
 63796      66617374 
 63796      385F7400 
 63797              	.LASF1645:
 63798 e01a 646F7562 		.string	"double_t"
 63798      6C655F74 
 63798      00
 63799              	.LASF1500:
 63800 e023 77637372 		.string	"wcsrchr"
 63800      63687200 
 63801              	.LASF1439:
 63802 e02b 66707574 		.string	"fputwc"
 63802      776300
 63803              	.LASF76:
 63804 e032 5F526570 		.string	"_Rep"
 63804      00
 63805              	.LASF1506:
 63806 e037 696E7438 		.string	"int8_t"
 63806      5F7400
 63807              	.LASF1440:
 63808 e03e 66707574 		.string	"fputws"
 63808      777300
 63809              	.LASF1786:
 63810 e045 5F5F6378 		.string	"__cxa_atexit"
GAS LISTING /tmp/ccJUMvuF.s 			page 1636


 63810      615F6174 
 63810      65786974 
 63810      00
 63811              	.LASF534:
 63812 e052 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIdEE48_S_propagate_on_container_move_assignment_helperEz"
 63812      74313661 
 63812      6C6C6F63 
 63812      61746F72 
 63812      5F747261 
 63813              	.LASF1053:
 63814 e0a5 69746572 		.string	"iterator_traits<char*>"
 63814      61746F72 
 63814      5F747261 
 63814      6974733C 
 63814      63686172 
 63815              	.LASF864:
 63816 e0bc 5F486561 		.string	"_Head_base<std::default_delete<heatmap_stamp_t>, void>"
 63816      645F6261 
 63816      73653C73 
 63816      74643A3A 
 63816      64656661 
 63817              	.LASF146:
 63818 e0f3 5F5A4E53 		.string	"_ZNSsaSEc"
 63818      73615345 
 63818      6300
 63819              	.LASF757:
 63820 e0fd 756E6966 		.string	"uniform_int_distribution"
 63820      6F726D5F 
 63820      696E745F 
 63820      64697374 
 63820      72696275 
 63821              	.LASF887:
 63822 e116 7475706C 		.string	"tuple<heatmap_stamp_t*, std::default_delete<heatmap_stamp_t> >"
 63822      653C6865 
 63822      61746D61 
 63822      705F7374 
 63822      616D705F 
 63823              	.LASF1000:
 63824 e155 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE2atEm"
 63824      74367665 
 63824      63746F72 
 63824      49685361 
 63824      49684545 
 63825              	.LASF547:
 63826 e16f 5F5F616C 		.string	"__alloctr_rebind<std::allocator<double>, double, true>"
 63826      6C6F6374 
 63826      725F7265 
 63826      62696E64 
 63826      3C737464 
 63827              	.LASF594:
 63828 e1a6 5F5A4E53 		.string	"_ZNSt6vectorIdSaIdEE13shrink_to_fitEv"
 63828      74367665 
 63828      63746F72 
 63828      49645361 
 63828      49644545 
 63829              	.LASF658:
 63830 e1cc 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE28_S_const_void_pointer_helperEz"
GAS LISTING /tmp/ccJUMvuF.s 			page 1637


 63830      74313661 
 63830      6C6C6F63 
 63830      61746F72 
 63830      5F747261 
 63831              	.LASF1427:
 63832 e20b 77696E74 		.string	"wint_t"
 63832      5F7400
 63833              	.LASF1639:
 63834 e212 77637472 		.string	"wctrans_t"
 63834      616E735F 
 63834      7400
 63835              	.LASF667:
 63836 e21c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_"
 63836      74313661 
 63836      6C6C6F63 
 63836      61746F72 
 63836      5F747261 
 63837              	.LASF609:
 63838 e24a 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE4dataEv"
 63838      53743676 
 63838      6563746F 
 63838      72496453 
 63838      61496445 
 63839              	.LASF1203:
 63840 e267 6F706572 		.string	"operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double> >, double>"
 63840      61746F72 
 63840      28293C5F 
 63840      5F676E75 
 63840      5F637878 
 63841              	.LASF983:
 63842 e2b7 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4rendEv"
 63842      74367665 
 63842      63746F72 
 63842      49685361 
 63842      49684545 
 63843              	.LASF212:
 63844 e2d3 5F5A4E53 		.string	"_ZNSs6assignEOSs"
 63844      73366173 
 63844      7369676E 
 63844      454F5373 
 63844      00
 63845              	.LASF911:
 63846 e2e4 5F5A4E53 		.string	"_ZNSt10_Head_baseILm1ESt14default_deleteI9heatmap_tELb1EE7_M_headERKS3_"
 63846      7431305F 
 63846      48656164 
 63846      5F626173 
 63846      65494C6D 
 63847              	.LASF1190:
 63848 e32c 756E7369 		.string	"unsigned int"
 63848      676E6564 
 63848      20696E74 
 63848      00
 63849              	.LASF71:
 63850 e339 72657665 		.string	"reverse_iterator"
 63850      7273655F 
 63850      69746572 
 63850      61746F72 
GAS LISTING /tmp/ccJUMvuF.s 			page 1638


 63850      00
 63851              	.LASF596:
 63852 e34a 5F5A4E4B 		.string	"_ZNKSt6vectorIdSaIdEE5emptyEv"
 63852      53743676 
 63852      6563746F 
 63852      72496453 
 63852      61496445 
 63853              	.LASF419:
 63854 e368 5F446573 		.string	"_Destroy_aux<true>"
 63854      74726F79 
 63854      5F617578 
 63854      3C747275 
 63854      653E00
 63855              	.LASF1581:
 63856 e37b 62736561 		.string	"bsearch"
 63856      72636800 
 63857              	.LASF482:
 63858 e383 5F5A4E53 		.string	"_ZNSt13random_device14_M_init_pretr1ERKSs"
 63858      74313372 
 63858      616E646F 
 63858      6D5F6465 
 63858      76696365 
 63859              	.LASF144:
 63860 e3ad 5F5A4E53 		.string	"_ZNSsaSERKSs"
 63860      73615345 
 63860      524B5373 
 63860      00
 63861              	.LASF1738:
 63862 e3ba 5F5A3130 		.string	"_Z10gimme_timev"
 63862      67696D6D 
 63862      655F7469 
 63862      6D657600 
 63863              		.hidden	DW.ref.__gxx_personality_v0
 63864              		.weak	DW.ref.__gxx_personality_v0
 63865              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 63866              		.align 8
 63867              		.type	DW.ref.__gxx_personality_v0, @object
 63868              		.size	DW.ref.__gxx_personality_v0, 8
 63869              	DW.ref.__gxx_personality_v0:
 63870 0000 00000000 		.quad	__gxx_personality_v0
 63870      00000000 
 63871              		.hidden	__dso_handle
 63872              		.ident	"GCC: (GNU) 4.9.2"
 63873              		.section	.note.GNU-stack,"",@progbits
